{
    "id": "SOLR-4653",
    "title": "Solr configuration should log inaccessible/ non-existent relative paths <lib dir=\"...\">",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Currently the dir path is resolved relative to core's instanceDir but if you don't know it nothing happens (no warning, no nothing). This is very frustrating.",
    "attachments": {
        "SOLR-4653.patch": "https://issues.apache.org/jira/secure/attachment/12576585/SOLR-4653.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Dawid Weiss",
            "id": "comment-13617203",
            "date": "2013-03-29T09:51:36+0000",
            "content": "Correcting to just logging non-existing relative paths. Absolute paths work, my bad. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13617242",
            "date": "2013-03-29T10:55:06+0000",
            "content": "+1 to doing something other than silently not working. \n\nexception seems ideal to me, but logging would at least be something. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13617253",
            "date": "2013-03-29T11:21:01+0000",
            "content": "What! And take the sensitive, appropriate-for-your-aged-grandmother notes out of solrconfig.xml? To whit:\n\n <!-- If a 'dir' option (with or without a regex) is used and nothing\n       is found that matches, it will be ignored\n    -->\n  <lib dir=\"/total/crap/dir/ignored\" /> \n\n<G>....\n\nWhich is more than a little inconsistent with what follows:\n\n\n  <!-- an exact 'path' can be used instead of a 'dir' to specify a \n       specific jar file.  This will cause a serious error to be logged \n       if it can't be loaded.\n    -->\n  <!--\n     <lib path=\"../a-jar-that-does-not-exist.jar\" /> \n  -->\n\nWhy should failing to find a specific jar log a serious error but a directory be ignored?\n\nSeriously, let's complain if the dir isn't found, at least log a warning if not an error/exception. Fail early, fail often. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13617256",
            "date": "2013-03-29T11:28:42+0000",
            "content": "+1, fail early and often  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13617275",
            "date": "2013-03-29T11:59:08+0000",
            "content": "+1 to logging.\n\nIIRC, it's not a hard fail so that lazy handlers like solr-cell can be supported, but you can still copy \"example\" to somewhere else and still have all the core stuff work.\n\nIMO, the larger issue is that we should come up with a better plugin mechanism and not have the stock server referencing outside jars.  Or if we have to, do it relative to some kind of $SOLR_INSTALL_DIR or something... "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13617278",
            "date": "2013-03-29T12:04:15+0000",
            "content": "I am leaning towards throwing an exception too. A warning should be emitted if the lib doesn't collect any jars (because that's odd too) but if it points at void it looks like an error and in most cases (experienced on my own) what follows is a class-not-found exception because something is referenced that should be loaded and wasn't.\n\nI agree with Yonik though that it'd be nice to be able to reference based from solr's install dir. But then this may be problematic  if people deploy the war in other containers (I know, I know, it's a boo-hoo, but many people do it anyway). "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13618973",
            "date": "2013-04-01T17:54:30+0000",
            "content": "\nThe original intent was:\n\n\n\tIf users want solr to be very strict and fail loudly if your any of your plugin jars can't be found, then you should know what plugin jars you car about and use an explicit \"path\" option for each of them.\n\tfor the purposes of the example configs, we wanted something less strict so that (combined with the lazy load option on plugins) the example configs could refer to contrib jars and the bulk of the example configs would still work even if you didn't build any of those contribs, or moved/copied the example configs \u2013 if you do either of those things, and then try to use any of those lazy loaded plugins, the lazy loading feature will give you a loud error.\n\n\n\nAt this point, i don't have any strong opinions about changing any of this behavior to be a hard failure if the \"dir\" doesn't exist, or if the regex doesn't match anything \u2013 the way the current build system works \"ant example\" already builds all of the contribs anyway regardless of wether you care about them, so the key concern is really just what would happen when people move/copy the example configs.\n\nI suspect that if we change this to cause a hard failure the number of users who might be confused/anoyed about why they are getting those errors when they move/copy the example configs (and need to remove those <lib/> directives) will probably be roughly the same as the number of users who (with the existing configs) are confused by the lazy loading errors they get trying to use DIH, or solr-cell, or /browse after they move/copy the configs today and have to go update where the <lib/> directives point at. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13619009",
            "date": "2013-04-01T18:24:48+0000",
            "content": "for the purposes of the example configs, we wanted something less strict so that (combined with the lazy load option on plugins) the example configs could refer to contrib jars [...]\n\nRight.  This is really more a change in behavior than a bug fix, and it seems like we should be comprehensive and also deal with the reasons why it was added in the first place (i.e. we need to figure out what to do with the lazy loaded plugins like solr-cell).  Docs like the README under example, and http://wiki.apache.org/solr/ExtractingRequestHandler would also need to change.\n\nChanging to a hard fail has back compat issues too.  We have often recommended copying the \"example\" directory as a starting point, and most of those will be pointing to directores that don't exist.\n\nOn balance it feels like not failing hard (i.e. keeping the current behavior, but adding logging) is the best middle ground right now.  If one does get a class-not-found exception, we'll have the better logging to help track it down. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13619777",
            "date": "2013-04-02T13:08:16+0000",
            "content": "Thanks for clarification, Hoss. What you say makes sense but the common practice seems to be that:\n\n\tpeople modify the example's configuration files and overwrite them just because all the paths are relative from those directories and pointing at contribs,\n\twhen you want to create an isolate configuration and pass it to somebody to, say, run with -Dsolr.solr.home it's hard because you need to know absolute installation paths or make the user install that configuration in an exact folder under solr's unpacked structure. If they change anything \u2013 boom, things don't work and nobody knows what's going on.\n\n\n\nI think the middle ground here is to at least log a warning when a fileset is empty (and provide the basedir against which it was resolved). This looks suspicious and provides enough information to recover from the problem. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13619874",
            "date": "2013-04-02T14:48:01+0000",
            "content": "This is my take at this having considered a few other alternatives. It logs this at startup currently:\n\n\nCan't find (or read) directory to add to classloader: /total/crap/dir/ignored (resolved as: C:\\Work\\lucene-solr-svn\\trunk\\solr\\example\\solr\\collection1\\total\\crap\\dir\\ignored).\n\n\n\nAnd indeed the example config contains:\n\n\n  <!-- If a 'dir' option (with or without a regex) is used and nothing\n       is found that matches, it will be ignored\n    -->\n  <lib dir=\"/total/crap/dir/ignored\" /> \n\n\n\nPerhaps the comment should be changed/ made more polite too. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13619876",
            "date": "2013-04-02T14:48:56+0000",
            "content": "If no objections I'll commit this in a few hours. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13619898",
            "date": "2013-04-02T14:59:05+0000",
            "content": "Just one additional idea: There are comments about the regex in the current code and complexity for users. How about using ANT-style filesets for specifying the lib dirs? We dont need ANT for that, just plexus-utils-1.1.jar from Maven, which contains DirectoryScanner that is able to parse things like **/*.jar. I use that in the fobidden APIs CLI and Mojo classes: https://code.google.com/p/forbidden-apis/source/browse/trunk/src/main/java/de/thetaphi/forbiddenapis/CliMain.java#257\n\nOtherwise +1 to commit! "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13619933",
            "date": "2013-04-02T15:42:11+0000",
            "content": "+1 to making the message more polite. The rest of the patch too! "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13620093",
            "date": "2013-04-02T18:12:34+0000",
            "content": "I saw the comment about glob patterns, Uwe. I just won't have the time to do it thoroughly (with proper testing etc.) so I'd rather file another issue for it. If somebody can get there sooner, fine. If not, I'll fix it in my spare cycles at some point. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13620415",
            "date": "2013-04-02T23:47:52+0000",
            "content": "Dawid Weiss logging proposal is ok.\n\nHowever, a better way would be to fail hard (can be made back-compat by checking luceneMatchVersion and log only for <4.3). In that case how we include contrib libs should change somehow. Perhaps something like this:\n\n<lib>${solr.contrib.root}/extraction/lib</lib>\n\n\n\nIf user supplies -Dsolr.contrib.root=/path/to/contrib then stuff will work. If nothing is passed by opts we could default to something that would work for the shipped example config.\n\nAlso see my proposal in SOLR-4495. For most of my multi-core deploys I don't bother adding lib entries to all cores, but use a single sharedLib=${solr.solr.home}/lib in solr.xml. Allowing multiple sharedLib dirs in solr.xml would allow for more flexible config. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13620671",
            "date": "2013-04-03T06:38:27+0000",
            "content": "This (the variable substitution) should also work as far as I'm concerned because variables are substituted globally in all text nodes. That's my understanding of the code, didn't check on a live instance. So if you passed ${solr.contrib.root} and it doesn't point anywhere you'd get a warning in the logs.\n\nSince some folks expressed their concern about failing hard (and it was actually documented that it won't fail hard) I think it makes sense to preserve this behavior, at least in the same Solr line (4.x). Perhaps another issue changing this behavior should be filed for 5.x. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653925",
            "date": "2013-05-10T10:33:26+0000",
            "content": "Closed after release. "
        }
    ]
}