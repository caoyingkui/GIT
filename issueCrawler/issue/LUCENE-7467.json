{
    "id": "LUCENE-7467",
    "title": "Caused by: java.lang.IllegalArgumentException: position increments (and gaps) must be >= 0 (got 65248) for field 'tf_attachments_field_library_attachments'",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "5.1",
        "components": [
            "core/codecs",
            "core/other",
            "core/store",
            "modules/analysis"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "I was try to indexing the large file like PDF,PPT,PPTX and XLXS,XLX,\nactual token count are 65248 but this error is coming from the DefaultIndexingChain class while executing the public void invert(IndexableField field, boolean first) throws IOException, AbortingException in side this method we are checking the one condition like if (invertState.position < invertState.lastPosition) here invertState.position value become negative, when it increases int.MAX_VALUE,\n\n\norg.apache.solr.common.SolrException: Exception writing document id dc65t0-marketing_site-141457 to the index; possible analysis error.\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:167)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:69)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:955)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1110)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:706)\n\tat org.apache.solr.update.processor.LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:104)\n\tat org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:250)\n\tat org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:177)\n\tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:98)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2068)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:669)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:462)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:210)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:179)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\n\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:528)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1099)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1520)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1476)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalArgumentException: position increments (and gaps) must be >= 0 (got 65248) for field 'tf_attachments_field_library_attachments'\n\tat org.apache.lucene.index.DefaultIndexingChain$PerField.invert(DefaultIndexingChain.java:631)\n\tat org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:344)\n\tat org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:300)\n\tat org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:234)\n\tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:450)\n\tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1475)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:239)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:163)\n\t... 33 more",
    "attachments": {
        "AutoPhrasingTokenFilterFactory.java": "https://issues.apache.org/jira/secure/attachment/12831115/AutoPhrasingTokenFilterFactory.java",
        "AutoPhrasingTokenFilter.java": "https://issues.apache.org/jira/secure/attachment/12831116/AutoPhrasingTokenFilter.java"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15533133",
            "author": "Michael McCandless",
            "date": "2016-09-29T15:47:33+0000",
            "content": "Hmm, just how large are your documents?\n\nWhat analyzer are you using?\n\nDo you have a very high position gap?\n\nIn normal usage it should be hard to overflow 2.1B positions. "
        },
        {
            "id": "comment-15533451",
            "author": "Michael McCandless",
            "date": "2016-09-29T17:39:09+0000",
            "content": "I'll fix the exception message ... it's ridiculous now since it claims 65248 is < 0. "
        },
        {
            "id": "comment-15536039",
            "author": "adeppa",
            "date": "2016-09-30T13:42:03+0000",
            "content": "Thanks for the reply ,\nI am using the currently AutoPhrasingTokenFilter from third party i.e lucidworks  ,\nfor the more details contains below link \nhttp://lucidworks.com/blog/2014/07/12/solution-for-multi-term-synonyms-in-lucenesolr-using-the-auto-phrasing-tokenfilter/\nsource code \nhttps://github.com/LucidWorks/auto-phrase-tokenfilter\nplease can you help me respective change for this  "
        },
        {
            "id": "comment-15544881",
            "author": "ASF subversion and git services",
            "date": "2016-10-04T09:27:34+0000",
            "content": "Commit 01ecc06915887d7700e9eae8746bf04eda975abc in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=01ecc06 ]\n\nLUCENE-7467: improve exception message when token position overflows int "
        },
        {
            "id": "comment-15544886",
            "author": "ASF subversion and git services",
            "date": "2016-10-04T09:28:49+0000",
            "content": "Commit 6f6f73e0c77f7229c0f4fff7d9e6c07165361651 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6f6f73e ]\n\nLUCENE-7467: improve exception message when token position overflows int "
        },
        {
            "id": "comment-15544950",
            "author": "Michael McCandless",
            "date": "2016-10-04T09:59:19+0000",
            "content": "Hi adeppa, I'm not sure what AutoPhrasingTokenFilter does; maybe you should open an issue with lucidworks?  Are you sure the too-big position is caused by that token filter?  Can you reproduce the issue with a small example? "
        },
        {
            "id": "comment-15544972",
            "author": "adeppa",
            "date": "2016-10-04T10:10:21+0000",
            "content": "Michael McCandless Hi Thanks for the help form your end , small data no problem, if file size is more than 5 MB then only a problem is occurring, currently in progress of token code modification ,once finish i will update ticket with details ,please validate and let me know if you have chance  "
        },
        {
            "id": "comment-15967058",
            "author": "Trejkaz",
            "date": "2017-04-13T03:25:29+0000",
            "content": "Saw the same thing on Lucene 5.5.2.\n\n\nDefaultIndexingChain$PerField.invert: IllegalArgumentException: position increments (and gaps) must be >= 0 (got 536870912) for field 'content'\n\n\n\nI guess what makes this confusing is that the value it's complaining about is >= 0, but the error message makes it sound like it isn't. "
        },
        {
            "id": "comment-15967382",
            "author": "Michael McCandless",
            "date": "2017-04-13T10:33:49+0000",
            "content": "I guess what makes this confusing is that the value it's complaining about is >= 0, but the error message makes it sound like it isn't.\n\nWe fixed the exception message to not be ridiculous like that , at some point in the 6.x series ... "
        }
    ]
}