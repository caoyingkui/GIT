{
    "id": "SOLR-6507",
    "title": "various bugs using localparams with stats.field",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "StatsComponent has two different code paths for dealing with param parsing depending on wether it's a single node request of a distributed request, which results in two very differnet looking bugs (but in my opinion have the same root cause: bogus local param parsing):\n\n\n\tthe documented local params for stats.field don't work on distributed stats requests at all\n\tper field \"calcdistinct\" doesn't work if localparms are used on single node request",
    "attachments": {
        "SOLR-6507.patch": "https://issues.apache.org/jira/secure/attachment/12668201/SOLR-6507.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-14130897",
            "date": "2014-09-12T00:06:25+0000",
            "content": "\nThe attached patch has some quick and dirty tests demonstraitng these problems as well as my porposed fix.  \n\nRather then slap a bandaid on this i did a pretty serious overhaul of the way the code in StatsComponent is laid out.  This not only fixes the bug by consolidating the param parsing logic into a single place, it helps ensure param descrepencies like won't pop up as we add features (by consolidating the param parsing logic into a single place), and it moves the direction i want to move for features like SOLR-6354 & SOLR-6351.\n\n\n\tStatsInfo is now used for both for both distributed & local requests\n\t\n\t\tstill one instance per request\n\t\n\t\n\tSimpleFacets has been renamed/refactored into \"StatsField\"\n\t\n\t\tnow only models a single \"stats.field\" param (no more \"iterating\" local state variables)\n\t\tAPI is now a lot more locked down and easier to understand (in my opinion)\n\t\tcode that dealt with multiple \"stats.field\" params bubbled up to either StatsInfo or the process() method of StatsComponent\n\t\n\t\n\n\n\n\n\nThere's still plenty of nocommits \u2013 mostly dealing with javadocs and more robust tests, but i think this is a good start in the right direction.\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14134324",
            "date": "2014-09-15T18:58:09+0000",
            "content": "Not as many remaining test & code changes as i anticipated \u2013 My recollection of how per-field overrides worked in facets when the \"key\" local param is used was totally wrong ... which simplified the logic & test permutations needed.\n\nUpdated pach for trunk with javadocs.  Hoping to commit & backport later today (or early tomorow) \u2013 the backport changes should be fairly straight forward since this change didn't require any modifications to the DovValuesStast class (nor should any changes be required to UnInvertedField on 4x)\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14134474",
            "date": "2014-09-15T21:00:34+0000",
            "content": "Commit 1625163 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1625163 ]\n\nSOLR-6507: Fixed several bugs involving stats.field used with local params "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14134567",
            "date": "2014-09-15T22:04:02+0000",
            "content": "Commit 1625172 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1625172 ]\n\nSOLR-6507: Fixed several bugs involving stats.field used with local params (merge r1625163) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14134594",
            "date": "2014-09-15T22:22:28+0000",
            "content": "committed to trunk & backported to 4.x\n\ngiven the amount of code churn involved here, i'm not really comfortable backporting to branch_4_10 ... not until this code gets smoked out a bit more (we'll see what happens with the timing of a 4.10.1 release - but for now i'm erring on the side of caution) "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332955",
            "date": "2015-02-23T05:02:48+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}