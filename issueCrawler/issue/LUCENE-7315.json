{
    "id": "LUCENE-7315",
    "title": "Flexible \"standard\" query parser parses on whitespace",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [
            "modules/queryparser"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "Copied from LUCENE-2605:\n\nThe queryparser parses input on whitespace, and sends each whitespace separated term to its own independent token stream.\nThis breaks the following at query-time, because they can't see across whitespace boundaries:\n\nn-gram analysis\nshingles\nsynonyms (especially multi-word for whitespace-separated languages)\nlanguages where a 'word' can contain whitespace (e.g. vietnamese)\n\nIts also rather unexpected, as users think their charfilters/tokenizers/tokenfilters will do the same thing at index and querytime, but in many cases they can't. Instead, preferably the queryparser would parse around only real 'operators'.",
    "attachments": {
        "LUCENE-7315.patch": "https://issues.apache.org/jira/secure/attachment/12819153/LUCENE-7315.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15325147",
            "author": "Michael McCandless",
            "date": "2016-06-10T19:38:30+0000",
            "content": "How does this issue differ from LUCENE-2605? "
        },
        {
            "id": "comment-15325150",
            "author": "Michael McCandless",
            "date": "2016-06-10T19:39:53+0000",
            "content": "OK I see: this issue is about making the same fixes in LUCENE-2605, which was for the classic query parser, to the flexible query parser. "
        },
        {
            "id": "comment-15325156",
            "author": "Steve Rowe",
            "date": "2016-06-10T19:42:10+0000",
            "content": "Yes. "
        },
        {
            "id": "comment-15386216",
            "author": "Steve Rowe",
            "date": "2016-07-20T17:05:41+0000",
            "content": "WIP patch against master, generated files not included (ant javacc-flexible in lucene/queryparser/ will generate them), still has nocommits and failing tests.\n\nIn addition to enabling not splitting on whitespace prior to text analysis, the patch includes the following changes:\n\n\n\tChanged TermQueryNode's positionIncrement name to position, since that's what it really holds.\n\tSynonymQueryNode/Builder now produces a SynonymQuery instead of a boolean query.\n\tRefactored AnalyzerQueryNodeProcessor.postProcessNode() into shorter methods and made it simpler and easier to follow.\n\tMoved split-on-whitespace tests to the shared QueryParserTestBase.\n\n\n\nSome challenges remain:\n\n\n\tUnlike the classic QP, the flexible standard QP appears to remove a top-level MUST boolean query, e.g. +(word) -> word.  Some of the split-on-whitespace shared tests will need to be specialized for each parser.\n\tThere's no simple way to collapse the children of the boolean query produced for text containing whitespace when not splitting on whitespace into their ancestor boolean query (if there is one), so some of the shared split-on-whitespace tests are failing.\n\t\n\t\tThe patch includes a FlattenQueryNodeProcessor meant to address this issue, but it's not working and I haven't figured out why yet.\n\t\n\t\n\tRecent master-only changes will likely make the branch_6x backport non-trivial, e.g LUCENE-7347.\n\n "
        }
    ]
}