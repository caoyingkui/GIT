{
    "id": "SOLR-11956",
    "title": "Collapsing on undefined field returns 500",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.6"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "When collapsing is specified on the undefined field then, the response returned has status 500 instead of 400. \n\nThis is because of wrapping of SolrException to RuntimeException\nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java#L377\n\nThen in request handler base, all RuntimeException are converted to SolrException with status 500",
    "attachments": {
        "SOLR-11956.patch": "https://issues.apache.org/jira/secure/attachment/12909616/SOLR-11956.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-02-07T14:44:22+0000",
            "content": "In the patch, If Exception is SolrException then dont wrap in RuntimeException.\n\n\n      try {\n\n        SolrIndexSearcher searcher = (SolrIndexSearcher)indexSearcher;\n        CollectorFactory collectorFactory = new CollectorFactory();\n        //Deal with boosted docs.\n        //We have to deal with it here rather then the constructor because\n        //because the QueryElevationComponent runs after the Queries are constructed.\n\n        IntIntHashMap boostDocsMap = null;\n        Map context = null;\n        SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n        if(info != null) {\n          context = info.getReq().getContext();\n        }\n\n        if(this.boosted == null && context != null) {\n          this.boosted = (Map<BytesRef, Integer>)context.get(QueryElevationComponent.BOOSTED_PRIORITY);\n        }\n\n        boostDocsMap = getBoostDocs(searcher, this.boosted, context);\n        return collectorFactory.getCollector(this.collapseField,\n                                             this.groupHeadSelector,\n                                             this.sortSpec,\n                                             this.nullPolicy,\n                                             this.hint,\n                                             this.needsScores,\n                                             this.size,\n                                             boostDocsMap,\n                                             searcher);\n\n      } catch (SolrException e) {\n        throw e;\n      } catch (Exception e) {\n        // catch all individual exceptions, Generic Exception handling is bad\n        throw new RuntimeException(e);\n      }\n    }\n\n\nThis block could throw IOException(No other Checked Exception). So, instead of wrapping all Exception in RuntimeException, IOException could be wrapping in RuntimeException. ",
            "author": "Munendra S N",
            "id": "comment-16355538"
        },
        {
            "date": "2018-02-12T16:23:31+0000",
            "content": "SOLR-11956.patch \nUpdated patch handles only Checked exception. Also, Throwing SolrException instead of IOException where it suits better. ",
            "author": "Munendra S N",
            "id": "comment-16360994"
        },
        {
            "date": "2018-03-24T11:02:29+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 17s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 14s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 14s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 14s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 14s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 14s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  50m 30s \n  core in the patch failed.  \n\n\n  \n   \n  55m 23s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.TriggerIntegrationTest \n\n\n\u00a0\n solr.cloud.autoscaling.ComputePlanActionTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11956 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12910321/SOLR-11956.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / ea50409 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_144 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/16/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/16/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/16/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16412524"
        },
        {
            "date": "2018-06-01T14:01:59+0000",
            "content": "As with collapsing, expand component also returns 500 when it shouldn't (instead it should return 400).  ",
            "author": "Munendra S N",
            "id": "comment-16498030"
        },
        {
            "date": "2018-06-02T15:17:00+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m 20s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m 17s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  75m 42s \n  core in the patch failed.  \n\n\n  \n   \n  84m 28s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.sim.TestTriggerIntegration \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11956 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12910321/SOLR-11956.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 3dc4fa1 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/111/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/111/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/111/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16499101"
        },
        {
            "date": "2018-09-28T15:06:32+0000",
            "content": "This issue has been fixed as part of SOLR-6280 ",
            "author": "Munendra S N",
            "id": "comment-16631980"
        },
        {
            "date": "2018-09-28T15:09:03+0000",
            "content": "David Smiley Can we close this one? ",
            "author": "Erick Erickson",
            "id": "comment-16631983"
        }
    ]
}