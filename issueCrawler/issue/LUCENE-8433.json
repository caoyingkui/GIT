{
    "id": "LUCENE-8433",
    "title": "Add FutureArrays.equals(Object[] a, int aToIndex, Object[] b, int bFromIndex, int bToIndex)",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Won't Fix",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Trivial",
        "type": "Improvement"
    },
    "description": "Noticed code like the following in TopFieldCollector:\n\n    if (fields1.length > fields2.length) {\n      return false;\n    }\n    return Arrays.asList(fields1).equals(Arrays.asList(fields2).subList(0, fields1.length));\n\n\nThis can be simplified and made more efficient by using Arrays.equals(Object[] a, int aToIndex, Object[] b, int bFromIndex, int bToIndex) , which is only present in Java 9+. (Though it is not taking advantage of any intrinsics like the primitive arrays do, since it uses object equality rather than reference equality).  This can be added as part of FutureArrays.java - this would serve to simplify code.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16565699",
            "author": "Adrien Grand",
            "content": "Maintaining this fork array has some cost, yet this particular call site is not performance sensitive nor would FutureArrays be safer (that I know of) or much easier to read, so I'm not convinced we should do it. ",
            "date": "2018-08-01T17:43:39+0000"
        },
        {
            "id": "comment-16584841",
            "author": "Michael Braun",
            "content": "Agreed with Adrien Grand, no need to do this.  ",
            "date": "2018-08-18T16:51:26+0000"
        }
    ]
}