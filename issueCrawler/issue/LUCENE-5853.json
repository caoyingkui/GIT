{
    "id": "LUCENE-5853",
    "title": "RamUsageEstimator has too general exception handlers",
    "details": {
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix",
        "components": [
            "core/other"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": []
    },
    "description": "core util RamUsageEstimator has several handlers in which \"Exception\" was caught and ignored. Such a general handler not only includes reflection-related exceptions such as ClassNotFoundException, NoSuchFieldException and NoSuchMethodException (which are OK to be ignored) but also harmful exceptions (that should at least be logged), such as NullPointerException, UnsupportedOperationException, SecurityException, etc.",
    "attachments": {
        "LUCENE-5853.patch": "https://issues.apache.org/jira/secure/attachment/12658292/LUCENE-5853.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14077111",
            "author": "Henrique Carvalho Silva",
            "content": "Suggested patch. ",
            "date": "2014-07-28T23:17:04+0000"
        },
        {
            "id": "comment-14077489",
            "author": "Uwe Schindler",
            "content": "This is by design. We don't want RAMUsageEstimator to throw any Exceptions. It should just fall back to default behaviour on any error caused by reflection. ",
            "date": "2014-07-29T07:50:18+0000"
        },
        {
            "id": "comment-14077490",
            "author": "Uwe Schindler",
            "content": "In addition, Lucene never logs anything, so using InfoStream from RAMUsageEstimator is not wanted. InfoStream is only used inside IndexWriter. ",
            "date": "2014-07-29T07:52:30+0000"
        }
    ]
}