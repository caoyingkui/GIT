{
    "id": "LUCENE-3967",
    "title": "nuke AtomicReader.termDocsEnum(termState) and termPositionsEnum(termState)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "These are simply sugar methods anyway, and so expert that I don't think we need sugar here at all.\nIf someone wants to get DocsEnum via a saved TermState they can just use TermsEnum!\n\nBut having these public in AtomicReader i think is pretty confusing and overwhelming.\n\nIn fact, nothing in Lucene even uses these methods, except a sole assert statement in PhraseQuery, \nwhich I think can be written more clearly anyway:\n\n\n         // PhraseQuery on a field that did not index\n         // positions.\n         if (postingsEnum == null) {\n-          assert reader.termDocsEnum(liveDocs, t.field(), t.bytes(), state, false) != null: \"termstate found but no term exists in reader\";\n+          assert te.seekExact(t.bytes(), false) : \"termstate found but no term exists in reader\";",
    "attachments": {
        "LUCENE-3967.patch": "https://issues.apache.org/jira/secure/attachment/12521888/LUCENE-3967.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-08T16:35:36+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13249570"
        },
        {
            "date": "2012-04-08T17:17:40+0000",
            "content": "die, die, die! ",
            "author": "Uwe Schindler",
            "id": "comment-13249580"
        }
    ]
}