{
    "id": "SOLR-8921",
    "title": "Potential NPE in pivot facet",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.4.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "For some queries distributed over multiple collections, I've hit a NPE when SolrIndexSearcher tries to fetch results from cache. Basically, query generated to compute pivot on document sub set is null, causing the NPE on lookup.\n\n2016-03-28 11:34:58.361 ERROR (qtp268141378-751) [c:otif_fr s:shard1 r:core_node1 x:otif_fr_shard1_replica1] o.a.s.h.RequestHandlerBase java.lang.NullPointerException\n\tat java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)\n\tat org.apache.solr.util.ConcurrentLFUCache.get(ConcurrentLFUCache.java:92)\n\tat org.apache.solr.search.LFUCache.get(LFUCache.java:153)\n\tat org.apache.solr.search.SolrIndexSearcher.getPositiveDocSet(SolrIndexSearcher.java:940)\n\tat org.apache.solr.search.SolrIndexSearcher.numDocs(SolrIndexSearcher.java:2098)\n\tat org.apache.solr.handler.component.PivotFacetProcessor.getSubsetSize(PivotFacetProcessor.java:356)\n\tat org.apache.solr.handler.component.PivotFacetProcessor.processSingle(PivotFacetProcessor.java:219)\n\tat org.apache.solr.handler.component.PivotFacetProcessor.process(PivotFacetProcessor.java:167)\n\tat org.apache.solr.handler.component.FacetComponent.process(FacetComponent.java:263)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:273)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:156)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2073)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:658)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:457)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:223)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:181)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:499)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\n\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n\tat java.lang.Thread.run(Thread.java:745)",
    "attachments": {
        "SOLR-8921.patch": "https://issues.apache.org/jira/secure/attachment/12796134/SOLR-8921.patch",
        "SOLR-8921_tag_7.5.0.patch": "https://issues.apache.org/jira/secure/attachment/12943473/SOLR-8921_tag_7.5.0.patch",
        "SOLR-8921_unit-tests_tag_7.5.0.patch": "https://issues.apache.org/jira/secure/attachment/12944793/SOLR-8921_unit-tests_tag_7.5.0.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-30T18:47:32+0000",
            "author": "Steve Molloy",
            "content": "Simplistic patch handling null queries without trying to guess why they're null. Seems to work but there might be better solutions. ",
            "id": "comment-15218574"
        },
        {
            "date": "2017-07-14T22:37:09+0000",
            "author": "Isabelle Giguere",
            "content": "A null query could be created by passing an empty string as the 3rd argument of org.apache.solr.schema.FieldType.getFieldQuery(QParser parser, SchemaField field, String externalVal)\nAs in \norg.apache.solr.handler.component.PivotFacetProcessor#getSubset(DocSet, SchemaField, String) \nand \norg.apache.solr.handler.component.PivotFacetProcessor.getSubsetSize(DocSet, SchemaField, String) \n\nEx:\n    final SolrIndexSearcher searcher = req.getSearcher();\n    final SchemaField sfield = searcher.getSchema().getField(\"place_t\");\n    final Query query = sfield.getType().getFieldQuery(null, sfield, \"\");\n    assertNull(\"Query should be null\", query);\n\nI have not been able to devise a unit test that would produce an empty string at this location.  And since Steve forgot to include his query parameters, it could be a very long haul trying to guess, with the number of available parameters for facet pivots.\n\nI'm applying the \"fix\" as-is. ",
            "id": "comment-16088224"
        },
        {
            "date": "2017-07-14T22:38:34+0000",
            "author": "Isabelle Giguere",
            "content": "Identical patch based on Solr 6.6.0.  No change in code, the old patch could still be used.  I which I could have added a unit test... see previous comment. ",
            "id": "comment-16088226"
        },
        {
            "date": "2018-10-11T15:57:28+0000",
            "author": "Isabelle Giguere",
            "content": "Solr 7.5.0 :\nReproduced with a query on a text field, with an alias, even if each collections in the alias respond without error individually\n'fileName' : text field, split on '.', single valued\n'author' : text field, full analysis, multivalued \n'fileType' : text field, lower cased only, single valued\n\n\tcollection=de_alias&facet.field=author&facet.pivot=fileName = NPE\n\tcollection=lang_de&facet.field=author&facet.pivot=fileName = response OK\n\tcollection=emptyText&facet.field=author&facet.pivot=fileName = response OK\n\tcollection=de_alias&facet.field=author&facet.pivot=fileType = response OK\n\n\n\nI'll try to find time to devise a unit test to illustrate.\n\nAlternatively to this patch on PivotFacetProcessor, org.apache.solr.search.SolrIndexSearcher.getPositiveDocSet(Query q) could return DocSet.EMPTY if input Query is null, but that would have repercussions everywhere. ",
            "id": "comment-16646667"
        },
        {
            "date": "2018-10-11T15:57:48+0000",
            "author": "Isabelle Giguere",
            "content": "SOLR-8921_tag_7.5.0.patch : same patch as before, on PivotFacetProcessor.  Based on revision 61870, tag 7.5.0, latest release. ",
            "id": "comment-16646668"
        },
        {
            "date": "2018-10-19T19:46:51+0000",
            "author": "Isabelle Giguere",
            "content": "I'm attaching unit tests, with 2 collections, and a few fields in the schema.\nBut, this issue has nothing do do with the number of collections, and not much to do with the field types.\nAn NPE can happen if the string that is used as facet pivot value is a stopword, or an empty string.\n\nPivotFacetProcessor.getDocSet(DocSet base, SchemaField field, String pivotValue)\n\n// if pivotValue = \"a\", or if pivotValue = \"in\" (stopword)\nft.getFieldQuery(null, field, pivotValue)\n  -> returns null\n searcher.getDocSet(query, base);\n  -> throws NPE\n\n// if pivotValue = \"\"  (empty str)\n ft.getFieldQuery(null, field, pivotValue)\n  -> returned query= name:\n searcher.getDocSet(query, base);\n  -> returns DocSet size -1\n  -> NPE could be thrown from PivotFacetProcessor.getSubsetSize(DocSet base, SchemaField field, String pivotValue) (? - to validate)\n\n*******************\nMaybe it is more likely to happen on multiple collections if the collections are meant for different languages, and a non-stopword in one language is a stopword in another language ?\n\n ",
            "id": "comment-16657331"
        }
    ]
}