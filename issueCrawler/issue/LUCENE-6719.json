{
    "id": "LUCENE-6719",
    "title": "NumericUtils.getMinLong and NumericUtils.getMaxLong have undefined behavior when no docs have value - throw NPE",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Tracked down a possible cause of SOLR-7866 to situations where a (numeric) field doesn't have any values in an index and you try to get the min/max.\n\njavadocs for NumericUtils.getMinLong and NumericUtils.getMaxLong don't actually say what that method will do in this case, throw NPE when it happens",
    "attachments": {
        "LUCENE-6719.patch": "https://issues.apache.org/jira/secure/attachment/12748725/LUCENE-6719.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14654242",
            "author": "Hoss Man",
            "date": "2015-08-04T19:46:17+0000",
            "content": "patch with test demonstrating problem "
        },
        {
            "id": "comment-14654411",
            "author": "Hoss Man",
            "date": "2015-08-04T21:47:58+0000",
            "content": "updated patch with:\n\n\n\tstrawman solution:\n\t\n\t\tdocument that the existing methods throw NPE\n\t\tdeprecate the existing methods\n\t\tnew methods that return Integer and Long and are documented to return null when appropriate\n\t\n\t\n\tmuch better tests - both of the old methods and the new methods\n\n "
        },
        {
            "id": "comment-14654543",
            "author": "Michael McCandless",
            "date": "2015-08-04T23:48:05+0000",
            "content": "Thanks for tracking this down Hoss Man.\n\nInstead of adding new methods can you just fix the current ones?  I think it's weird to have getMinLong and getMinimumLong, and I think it's OK to upgrade from int to Integer return value. "
        },
        {
            "id": "comment-14654570",
            "author": "Hoss Man",
            "date": "2015-08-05T00:16:37+0000",
            "content": "I think it's OK to upgrade from int to Integer return value.\n\nHmmm ... depends on your definition of \"OK\" ... changing the return type definitely breaks backcompat on the method sig.\n\n\nhossman@tray:~/tmp$ cat Foo.java \npublic class Foo {\n    public static int foo() { return 42; }\n    // public static Integer foo() { return 42; }\n}\nhossman@tray:~/tmp$ cat Bar.java \npublic class Bar {\n    public static void main(String[] args) {\n        int i = Foo.foo();\n        System.out.println(i);\n    }\n}\nhossman@tray:~/tmp$ javac Foo.java \nhossman@tray:~/tmp$ javac Bar.java \nhossman@tray:~/tmp$ java Bar \n42\nhossman@tray:~/tmp$ echo \"edit Foo\"\nedit Foo\nhossman@tray:~/tmp$ cat Foo.java \npublic class Foo {\n    // public static int foo() { return 42; }\n    public static Integer foo() { return 42; }\n}\nhossman@tray:~/tmp$ javac Foo.java \nhossman@tray:~/tmp$ java Bar \nException in thread \"main\" java.lang.NoSuchMethodError: Foo.foo()I\n\tat Bar.main(Bar.java:3)\n\n "
        },
        {
            "id": "comment-14654914",
            "author": "Adrien Grand",
            "date": "2015-08-05T06:54:59+0000",
            "content": "I don't think we ever tried to keep binary compability except for bugfix releases, so I don't see it as an issue: users upgrading to 5.3 will just have to recompile their application. Moreover NumericUtils is documented as an internal class so we are free to break compatibility. "
        },
        {
            "id": "comment-14659123",
            "author": "Timothy Potter",
            "date": "2015-08-05T22:50:39+0000",
            "content": "Hossman is OOO ... so I'm taking this up as I'd like to get SOLR-7866 into 5.3. "
        },
        {
            "id": "comment-14659127",
            "author": "Michael McCandless",
            "date": "2015-08-05T22:53:18+0000",
            "content": "+1, thanks Timothy Potter "
        },
        {
            "id": "comment-14659271",
            "author": "Timothy Potter",
            "date": "2015-08-06T00:44:24+0000",
            "content": "Here's the updated patch with the lucene/CHANGES.txt entry ... I'm ready to commit this. "
        },
        {
            "id": "comment-14659273",
            "author": "ASF subversion and git services",
            "date": "2015-08-06T00:46:15+0000",
            "content": "Commit 1694384 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1694384 ]\n\nLUCENE-6719: Fix NumericUtils getMin/Max methods to return null if there are no terms for the specified field "
        },
        {
            "id": "comment-14659285",
            "author": "ASF subversion and git services",
            "date": "2015-08-06T01:00:30+0000",
            "content": "Commit 1694386 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1694386 ]\n\nLUCENE-6719: Fix NumericUtils getMin/Max methods to return null if there are no terms for the specified field "
        },
        {
            "id": "comment-14659288",
            "author": "ASF subversion and git services",
            "date": "2015-08-06T01:03:10+0000",
            "content": "Commit 1694387 from Timothy Potter in branch 'dev/branches/lucene_solr_5_3'\n[ https://svn.apache.org/r1694387 ]\n\nLUCENE-6719: Fix NumericUtils getMin/Max methods to return null if there are no terms for the specified field "
        },
        {
            "id": "comment-14713272",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:06:16+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}