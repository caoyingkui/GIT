{
    "id": "LUCENE-3589",
    "title": "BytesRef copy short missed the length setting",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/other"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "when storing a short type integer to BytesRef, BytesRef missed the length setting. then it will cause the storage size is ZERO if no continuous options on this BytesRef",
    "attachments": {
        "BytesRef_bug_lucene3589.patch": "https://issues.apache.org/jira/secure/attachment/12504994/BytesRef_bug_lucene3589.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-11-24T13:22:52+0000",
            "content": "Peter: thank you very much for opening this issue.\n\nYour patch is correct - however I noticed this method is totally dead code in lucene.\nIts not used by any code or tests.\n\nI'm going to remove any dead code in BytesRef... this class is spiraling out of control. ",
            "author": "Robert Muir",
            "id": "comment-13156694"
        },
        {
            "date": "2011-11-24T13:26:34+0000",
            "content": "I think I'm using it in that fst suggester patch, actually... Not that it cannot be hand-coded if necessary. ",
            "author": "Dawid Weiss",
            "id": "comment-13156695"
        },
        {
            "date": "2011-11-24T13:43:57+0000",
            "content": "in fact, i use BytesRef.copy(short) in my code to store an id something like this, and since in lucene 4.0 return BytesRef when get binary value  of a field. i think this piece of code can be kept. ",
            "author": "peter chang",
            "id": "comment-13156708"
        },
        {
            "date": "2011-11-24T13:55:58+0000",
            "content": "We really cannot just let BytesRef pile up into some mega API.\nWhen we add things to the public API, we have to eventually support this stuff in future releases.\n\nIf we are hell-bent to keep the api, we must fix the bogosities about it, otherwise its unmaintainable, and should be removed:\n\n\tthe fact it is copy(short) is wrong, if i delete the copy(short) and copy(int) methods everything compiles as normal, leading me to believe they are unused. this is because anything using thse gets promoted to copy(long). So the methods must be renamed to copyShort, copyInt, etc to prevent these types of mistakes.\n\twhy do we reset the offset to 0?\n\n\n\nIn general i'm just wondering why this is needed in bytesref itself... do people know about ByteArrayDataInput and ByteArrayDataOutput?\n\nSeparately, I'm still going to remove all unused bytesref methods at the current moment... i'll leave this one be though. ",
            "author": "Robert Muir",
            "id": "comment-13156715"
        },
        {
            "date": "2011-11-24T14:02:21+0000",
            "content": "I agree with you in that to know what these methods actually do one has to look into the source code \u2013 this is what I actually did. And I agree this isn't good from the API perspective. \n\nAs for ByteArrayDataInput/Output \u2013 these are fine, we all know they're; I used BytesRef#copy(short) to avoid creating an extra object.  ",
            "author": "Dawid Weiss",
            "id": "comment-13156717"
        },
        {
            "date": "2011-11-24T14:05:00+0000",
            "content": "\nAs for ByteArrayDataInput/Output \u2013 these are fine, we all know they're; I used BytesRef#copy(short) to avoid creating an extra object. \n\nIf you are worried about the object overhead of ByteArrayDataInput/Output in some loop or something, just reuse the same one with reset().... ",
            "author": "Robert Muir",
            "id": "comment-13156718"
        },
        {
            "date": "2011-11-24T14:09:19+0000",
            "content": "I'd probably just push the two bytes myself to the byte array, to be honest  ",
            "author": "Dawid Weiss",
            "id": "comment-13156719"
        },
        {
            "date": "2011-11-24T14:11:58+0000",
            "content": "Thanks Peter: I committed your fix ",
            "author": "Robert Muir",
            "id": "comment-13156720"
        }
    ]
}