{
    "id": "SOLR-8147",
    "title": "FieldFacetAccumulator constructor throws too many exceptions",
    "details": {
        "components": [
            "SearchComponents - other"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "5.0,                                            6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Trivial"
    },
    "description": "The constructor and static create method in FieldFacetAccumulator don't need to throw IOException, just SolrException.",
    "attachments": {
        "SOLR-8147.patch": "https://issues.apache.org/jira/secure/attachment/12765736/SOLR-8147.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-09T04:43:56+0000",
            "author": "Scott Stults",
            "content": "Patch removes IOException and just leaves SolrException for the constructor and create method. ",
            "id": "comment-14949887"
        },
        {
            "date": "2015-10-23T21:21:44+0000",
            "author": "Christine Poerschke",
            "content": "Interesting find. Looking at class usage, currently FacetingAccumulator contains/constructs FieldFacetAccumulator and both classes' constructors are throws IOException - so not sure re: changing only the latter over to throws SolrException then since SolrException is not an IOException (i think).\n\nConsidering the overall class usage and calling chains, might the hasDocValues() check be relocated to somewhere higher up? From a cursory look AnalyticsContentHandler.endElement and AnalyticsRequestFactory.(parse|makeFieldFacet|setFieldFacetParam) construct FieldFacetRequest objects and perhaps the hasDocValues check could happen there i.e. catch the invalid input/bad request when considering request parameters and then within the lower level accumulator object the hasDocValues check goes away and no SolrException need be thrown by the FieldFacetAccumulator. ",
            "id": "comment-14971869"
        },
        {
            "date": "2015-10-24T20:59:13+0000",
            "author": "Scott Stults",
            "content": "You're right: SolrException isn't an IOException, and the latter is probably more appropriate given the class hierarchy. \n\nAs far as moving the hasDocValues() check though, I'm conflicted. On the one hand it would be better to catch the problem as early as possible. On the other, locating the check closer to where it's needed reduces code complexity. Which do you think is more valuable in this case? ",
            "id": "comment-14972855"
        },
        {
            "date": "2015-10-27T16:01:42+0000",
            "author": "Houston Putman",
            "content": "I agree that the hasDocValues() check should be moved to AnalyticsRequestFactory.(makeFieldFacet|setFieldFacetParam). It shouldn't add any complexity since those methods are where the SchemaField references, which FieldFacetAccumulator uses, originate. Other error checking could be done in a similar manner. For example result() calls in query and range facets could be validated after AnalyticsRequestFactory.parse() is finished, this would greatly reduce the complexity in the (BasicAccumulator|FacetingAccumulator).getResult()  and FacetingAccumulator.getQueryResult() methods. There are probably others, but that's the first that popped into my head. ",
            "id": "comment-14976614"
        },
        {
            "date": "2015-10-27T17:03:14+0000",
            "author": "Christine Poerschke",
            "content": "Okay, so if we're looking at moving not only hasDocValues() but also other error checking in a similar manner out of the accumulator class(es) - how about we keep this JIRA ticket at its original scope i.e. reducing the number of exceptions FieldFacetAccumulator throws (perhaps leaving the IOException and removing the SolrException as per our comments above) and for the check moving efforts we'd create a separate JIRA ticket. How does that sound? ",
            "id": "comment-14976732"
        },
        {
            "date": "2015-11-04T17:18:29+0000",
            "author": "Christine Poerschke",
            "content": "Happy to take this JIRA and apply/commit patch.\n\nScott Stults - let me know if you'd like to go with the original patch or if you'd prefer to attach a revised patch and go with IOException instead of SolrException instead based on our comments above. Thank you. ",
            "id": "comment-14989953"
        },
        {
            "date": "2015-11-04T19:11:39+0000",
            "author": "Scott Stults",
            "content": "This patch is like the last one except it's using IOException rather than SolrException. And yeah, let's keep this Jira short and sweet and open a separate one for moving the checks.  ",
            "id": "comment-14990203"
        },
        {
            "date": "2015-11-05T12:13:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1712751 from Christine Poerschke in branch 'dev/trunk'\n[ https://svn.apache.org/r1712751 ]\n\nSOLR-8147: contrib/analytics FieldFacetAccumulator now throws IOException instead of SolrException ",
            "id": "comment-14991593"
        },
        {
            "date": "2015-11-05T14:26:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1712783 from Christine Poerschke in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1712783 ]\n\nSOLR-8147: contrib/analytics FieldFacetAccumulator now throws IOException instead of SolrException (merge in revision 1712751 from trunk) ",
            "id": "comment-14991720"
        },
        {
            "date": "2015-11-05T15:11:53+0000",
            "author": "Christine Poerschke",
            "content": "SOLR-8242 'contrib/analytics: relocate hasDocValues() check out of FieldFacetAccumulator' created for moving the checks. ",
            "id": "comment-14991780"
        },
        {
            "date": "2015-11-05T15:14:22+0000",
            "author": "Christine Poerschke",
            "content": "Change committed to trunk and branch_5x (for 5.4). Thanks Scott! ",
            "id": "comment-14991786"
        }
    ]
}