{
    "id": "SOLR-12314",
    "title": "ConcurrentUpdateSolrClient doesn't respect the timeout's defined in the solr.xml file",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In ConcurrentUpdateSolrClient we create an HttpPost Request which allows you to set a request config. If the request config is not provided httpclient will use the default request config.\u00a0\n\n\u00a0\n\norg.apache.http.client.config.RequestConfig.Builder requestConfigBuilder = HttpClientUtil.createDefaultRequestConfigBuilder();\nif (soTimeout != null) {\n  requestConfigBuilder.setSocketTimeout(soTimeout);\n}\nif (connectionTimeout != null) {\n  requestConfigBuilder.setConnectTimeout(connectionTimeout);\n}\n\nmethod.setConfig(requestConfigBuilder.build());\n\nWhile creating the httpclient object we ensure that the default request is set with the properties we care about.\u00a0 This happens in HttpClientUtils#setupBuilder\n\nRequestConfig requestConfig = requestConfigBuilder.build();\n\nHttpClientBuilder retBuilder = builder.setDefaultRequestConfig(requestConfig);\n\nSo there is no need to set a per request config\u00a0\n\n\u00a0\n\nHere is\u00a0where the httpclient picks the request config is provided on the request itself : https://github.com/apache/httpcomponents-client/blob/4.5.3/httpclient/src/main/java/org/apache/http/impl/client/InternalHttpClient.java#L168\n\n\u00a0\n\nAnd if it's not provided it uses the default here :\u00a0https://github.com/apache/httpcomponents-client/blob/4.5.3/httpclient/src/main/java/org/apache/http/impl/client/InternalHttpClient.java#L148",
    "attachments": {
        "SOLR-12314.patch": "https://issues.apache.org/jira/secure/attachment/12922124/SOLR-12314.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-05T01:52:48+0000",
            "content": "Quick patch. I'll run some tests now.\u00a0\n\nThe other usages of HttpClientUtil.createDefaultRequestConfigBuilder() looked okay to me. ",
            "author": "Varun Thacker",
            "id": "comment-16464561"
        },
        {
            "date": "2018-05-05T02:29:44+0000",
            "content": "We can't just remove it though. The CUSC timeout setters still need to work until they are removed.\n\nThey also need to work if set one or both of them - if neither are set, we can just skip the request config object, if both are set, we use it, and if one is set we have to get the right default for the other to set on the request config.\n\nI think this also breaks the time outs coming from the builder if set that way.\n\nIf you set timeouts on the client itself, they should work - it should only come from elsewhere or a passed in HttpClient object if they are not explicitly set on the client itself. ",
            "author": "Mark Miller",
            "id": "comment-16464573"
        },
        {
            "date": "2018-05-05T03:01:58+0000",
            "content": "Yeah as soon as you mentioned this on SOLR-11881 I knew this patch wasn't the right approach\nCool - the tricky part is, if only one of the properties of the two is overridden on the client itself on the fly, we still want to pick up the default for the other one. ",
            "author": "Varun Thacker",
            "id": "comment-16464583"
        },
        {
            "date": "2018-05-07T17:17:37+0000",
            "content": "CUSC is a SolrJ public API so as Mark pointed out we can simply omit the socket timeout's and connection timeout's that the user is specifying in the constructor.\n\nIn this approach when\u00a0StreamingSolrClients creates a CUSC object to send data , we basically read the socket timeout's and connection timeout's from the UpdateShardHandler / UpdateShardHandlerConfig and set it explicitly. If the user has specifying none/only one of them then default values will be used for the timeout's that weren't specified.\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16466208"
        },
        {
            "date": "2018-05-09T22:59:42+0000",
            "content": "Updated patch with a test case.\u00a0\n\nMark Miller\u00a0\u00a0What do you think of this approach? ",
            "author": "Varun Thacker",
            "id": "comment-16469645"
        },
        {
            "date": "2018-05-10T00:01:55+0000",
            "content": "Did you attach latest patch? ",
            "author": "Mark Miller",
            "id": "comment-16469715"
        },
        {
            "date": "2018-05-10T00:02:54+0000",
            "content": "I thought I had.. My bad.. It's uploaded now ",
            "author": "Varun Thacker",
            "id": "comment-16469720"
        },
        {
            "date": "2018-05-10T01:51:05+0000",
            "content": "Cool, yeah that looks good to me. ",
            "author": "Mark Miller",
            "id": "comment-16469807"
        },
        {
            "date": "2018-05-28T18:34:41+0000",
            "content": "Commit 071df6e114c3af51de5545c9363189c8692311c1 in lucene-solr's branch refs/heads/master from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=071df6e ]\n\nSOLR-12314: Use http timeout's defined in solr.xml for creating ConcurrentUpdateSolrClient during indexing requests between leader and replica ",
            "author": "ASF subversion and git services",
            "id": "comment-16492878"
        },
        {
            "date": "2018-05-28T18:36:53+0000",
            "content": "Commit caebf73758250191fa3895b52ebe1f14375892d0 in lucene-solr's branch refs/heads/branch_7x from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=caebf73 ]\n\nSOLR-12314: Use http timeout's defined in solr.xml for creating ConcurrentUpdateSolrClient during indexing requests between leader and replica\n\n(cherry picked from commit 071df6e) ",
            "author": "ASF subversion and git services",
            "id": "comment-16492879"
        },
        {
            "date": "2018-05-28T18:37:25+0000",
            "content": "Thanks Mark ! ",
            "author": "Varun Thacker",
            "id": "comment-16492880"
        }
    ]
}