{
    "id": "SOLR-6154",
    "title": "SolrCloud: facet range option f.<field>.facet.mincount=1 omits buckets on response",
    "details": {
        "affect_versions": "4.5.1,                                            4.8.1",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Attached\n\n\tPDF with instructions on how to replicate.\n\tdata.xml to replicate index\n\n\n\nThe f.<field>.facet.mincount option on a distributed search gives inconsistent list of buckets on a range facet.\n\nExperiencing that some buckets are ignored when using the option \"f.<field>.facet.mincount=1\".\n\nThe Solr logs do not indicate any error or warning during execution.\nThe debug=true option and increasing the log levels to the FacetComponent do not provide any hints to the behaviour.\n\nReplicated the issue on both Solr 4.5.1 & 4.8.1.\n\nExample, \n\nRemoving the f.<field>.facet.mincount=1 option gives the expected list of buckets for the 6 documents matched.\n\n        <lst name=\"facet_ranges\">\n         <lst name=\"price\">\n           <lst name=\"counts\">\n             <int name=\"0.0\">0</int>\n             <int name=\"50.0\">1</int>\n             <int name=\"100.0\">0</int>\n             <int name=\"150.0\">3</int>\n             <int name=\"200.0\">0</int>\n             <int name=\"250.0\">1</int>\n             <int name=\"300.0\">0</int>\n             <int name=\"350.0\">0</int>\n             <int name=\"400.0\">0</int>\n             <int name=\"450.0\">0</int>\n             <int name=\"500.0\">0</int>\n             <int name=\"550.0\">0</int>\n             <int name=\"600.0\">0</int>\n             <int name=\"650.0\">0</int>\n             <int name=\"700.0\">0</int>\n             <int name=\"750.0\">1</int>\n             <int name=\"800.0\">0</int>\n             <int name=\"850.0\">0</int>\n             <int name=\"900.0\">0</int>\n             <int name=\"950.0\">0</int>\n           </lst>\n           <float name=\"gap\">50.0</float>\n           <float name=\"start\">0.0</float>\n           <float name=\"end\">1000.0</float>\n           <int name=\"before\">0</int>\n           <int name=\"after\">0</int>\n           <int name=\"between\">2</int>\n         </lst>\n       </lst>\n\nUsing the f.<field>.facet.mincount=1 option removes the 0 count buckets but will also omit bucket <int name=\"250.0\">\n\n       <lst name=\"facet_ranges\">\n          <lst name=\"price\">\n            <lst name=\"counts\">\n                <int name=\"50.0\">1</int>\n                <int name=\"150.0\">3</int>\n                <int name=\"750.0\">1</int>\n             </lst>\n             <float name=\"gap\">50.0</float>\n             <float name=\"start\">0.0</float>\n             <float name=\"end\">1000.0</float>\n             <int name=\"before\">0</int>\n             <int name=\"after\">0</int>\n             <int name=\"between\">4</int>\n          </lst>\n        </lst>\n\nResubmitting the query renders a different bucket list \n(May need to resubmit a couple times)\n\n       <lst name=\"facet_ranges\">\n          <lst name=\"price\">\n            <lst name=\"counts\">\n                <int name=\"150.0\">3</int>\n                <int name=\"250.0\">1</int>\n             </lst>\n             <float name=\"gap\">50.0</float>\n             <float name=\"start\">0.0</float>\n             <float name=\"end\">1000.0</float>\n             <int name=\"before\">0</int>\n             <int name=\"after\">0</int>\n             <int name=\"between\">2</int>\n          </lst>\n        </lst>",
    "attachments": {
        "HowToReplicate.pdf": "https://issues.apache.org/jira/secure/attachment/12649412/HowToReplicate.pdf",
        "data.xml": "https://issues.apache.org/jira/secure/attachment/12649413/data.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jos\u00e9 Joaqu\u00edn",
            "id": "comment-14048872",
            "date": "2014-07-01T13:29:28+0000",
            "content": "I'm also experiencing the same effect on Solr 4.7.1. In my case, it comes up when including two collections in the faceting-by-range query.\n\nWhen f.<field>.facet.mincount= 0, all the buckets are correctly returned.\nOtherwise only the entries from one of the collections are being returned. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14124643",
            "date": "2014-09-06T20:38:39+0000",
            "content": "Right, I've tracked this down to how lists are reconciled from the shard requests.\n\nRonald:\nThat was a great writeup, I just regret it took so long to make use of it!\n\nThis will probably be fixed as part of SOLR-6187 "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14124644",
            "date": "2014-09-06T20:39:38+0000",
            "content": "At least I'm fixing it at the same time. "
        },
        {
            "author": "Ronald Matamoros",
            "id": "comment-14125347",
            "date": "2014-09-08T09:29:29+0000",
            "content": "Thanks Eric, I am sorry that I have not being able to contribute further on the ticket. Let me know if you want me to test anything on my side. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14125765",
            "date": "2014-09-08T17:10:44+0000",
            "content": "Erick, sorry for the late reply.\n\n I haven't looked in depth at your patch for this issue or SOLR-6187, but in response to your question on the mailing list...\n\nThe problem here is that it assumes that the first list in has all the counts that ever will be reported from any shard.\n\nYou are almost certainly correct, it's very probably that the logic for distributed range faceting isn't taking into account the possibility of mincount suppressing buckets from one or more shards.\n\nthe general strategy for dealing with this in field faceting & pivot faceting (which i suspect is what you already doing in your patch) is to have the coordinator node modify the mincount params when it sends the shard requests to force mincount=0, to ensure it gets a response for every bucket from every shard, then filter the response based on the (original) combined mincount.\n\n\"not recommended idea\"\nI say \"modify\" because one of the strategies taken with field/pivot faceting when using \"facet.sort=index\" is this...\n\n\n// we're sorting by index order.\n// if minCount==0, we should always be able to get accurate results w/o\n// over-requesting or refining\n// if minCount==1, we should be able to get accurate results w/o\n// over-requesting, but we'll need to refine\n// if minCount==n (>1), we can set the initialMincount to\n// minCount/nShards, rounded up.\n// ...\n\n\n\nthere is no sorting or \"top-n\" aspect to facet.range, so the idea of \"over-requesting\" doesn't apply \u2013 but the minCount/nShards idea still applies.  if the user requests a minCount of \"10\" and there are 3 shards, then you could set f.foo.facet.mincount=4 for the shard requests \u2013 because unless at lest one shard responds back with a count higher then \"4\", you'll never be able to satisfy the original mincount=10 ... HOWEVER: using this strategy requires \"refinement\" requests, which we currently avoid in range faceting.\n\n\ni would not advise going with the refinement approach described above (hence the panel box labeling it not-recommended) because i think the single pass approach of range faceting right now is probably better for most common cases \u2013 we just need to force mincount=0 on hte shard requests \u2013 but i wanted to post it for completeness in case i'm missing something and you think it's a really good idea "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14125802",
            "date": "2014-09-08T17:42:39+0000",
            "content": "Whew! I just committed this patch and.... it forces mincount to 0 for  the shard requests, which is in-line with your comments I..... "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14125804",
            "date": "2014-09-08T17:43:42+0000",
            "content": "Fixed with the checkin for SOLR-6187\n\nThanks again Ronald for a great problem writeup and reproducible test case! "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332802",
            "date": "2015-02-23T05:01:59+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}