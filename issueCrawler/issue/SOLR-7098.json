{
    "id": "SOLR-7098",
    "title": "Solr Join: Return Parent and Child Documents",
    "details": {
        "components": [
            "search"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Won't Fix",
        "priority": "Minor"
    },
    "description": "Solr JoinQParserPlugin returns only right side(parent) documents, it would be great if we can return all documents.\n\nUser case:\nIf JoinQParserPlugin can return all (parent and child) documents, client can  group parent and child docs together with same group.field - (optionally) then use group.main=true to navigate them.\n\nThe implementation in single mode:\n(as solr join doesn't support distributed search)\n\nreq parameter: \n{!join from=man_id to=id includeParent=true}\n\nAdd includeParent into org.apache.solr.search.JoinQuery\nUpdate JoinQuery's hashCode and equals to include includeParent.\n\nIn org.apache.solr.search.JoinQuery.JoinQueryWeight.getDocSet()\nDocSet fromSet = fromSearcher.getDocSet(q);\n\nif (includeParent) {\n\trstDocset = rstDocset.union(fromSet);\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-15T14:02:10+0000",
            "author": "Mikhail Khludnev",
            "content": "this not need to be done on parser level, you can add child side query as a should clause to join side returning parents.  ie instead of\n\nq={!join from=man_id to=id}foo:bar \n\n\nyou can \n\nq=foo:bar {!join from=man_id to=id}foo:bar \n\n\nYou might also be interested in [subquery] transformer \n ",
            "id": "comment-15331793"
        }
    ]
}