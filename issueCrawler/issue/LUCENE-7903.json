{
    "id": "LUCENE-7903",
    "title": "Highlighting boolean queries shouldn't always highlight some clauses",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [
            "modules/highlighter"
        ],
        "fix_versions": []
    },
    "description": "I am having difficulties with getting correct \"highlighting\" section from Solr.\n\nMy query returns correct results, only highlighting does not work as I would expected.\n\nMy query:\n\nhttp://solrServer/solr/solrCore/select?q=(((field1:((word1)AND(word2)))%20OR%20(field2:((word1)AND(word2)))%20OR%20(field3:((word1)AND(word2)))%20OR%20(field4:((word1)AND(word2)))))&fq=field5:(xxxx)&hl=true&hl.q=field1:(word1)&hl.fl=field1,field2,field3,field4\n\nIf I run this query the highlighting section is correct - there is no document with phrase \"word1\" - therefore field1 is not listed in the highlighting element - correct.\n\nIf I update my query to:\n\nhttp://solrServer/solr/solrCore/select?q=(((field1:((word1)AND(word2)))%20OR%20(field2:((word1)AND(word2)))%20OR%20(field3:((word1)AND(word2)))%20OR%20(field4:((word1)AND(word2)))))&fq=field5:(xxxx)&hl=true&hl.q=field1:(word1 OR word2)&hl.fl=field1,field2,field3,field4\n\nthen I am not getting expected results, word2 has been found in field1 but word1 is missing, but Solr returned field1 in highlighting element with highlighted \"word2\" only.\n\nI have explicitly added an extra query using hl.q and I have used AND operator (word1 AND word2), why Solr returns field1 in case when only word2 has been found?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16082343",
            "date": "2017-07-11T15:04:15+0000",
            "content": "I've retitled this issue and moved it to Lucene.  It's debatable if this is a bug vs improvement but I classified as minor well.  This is a long-standing known issue that affects the original Highlighter as well as the UnifiedHighlighter.  It probably affects the FVH too but I'm not sure.  I think there may be a previous issue on this matter but I'm having difficulty finding it so maybe not.\n\nThis is a hard problem that requires re-engineering a large and complicated part of the UnifiedHighlighter (PhraseHelper) \u2013 and one already on my mind but I have no time for right now.  For inspiration, we can look at the highlighter in Luwak which decomposes the query tree into separate SpanScorers.  It doesn't suffer from this problem and from some related problems to the current approach that are already filed in other issues. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-16597040",
            "date": "2018-08-30T04:03:33+0000",
            "content": "This is fixed by LUCENE-8286 for the UnifiedHighlighter\u00a0using the\u00a0new Lucene MatchesIterator API. \u00a0\n\nThere's no Solr parameter toggle\u00a0for this yet; feel free to post an issue & patch if you have the time. \u00a0It should be pretty easy. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-16597041",
            "date": "2018-08-30T04:07:13+0000",
            "content": "Note this is tested in TestUnifiedHighlighter.testNestedBooleanQueryAccuracy ",
            "author": "David Smiley"
        }
    ]
}