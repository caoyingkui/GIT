{
    "id": "SOLR-9956",
    "title": "Solr java.lang.ArrayIndexOutOfBoundsException when indexed large amount of documents",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.2.1,                                            6.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Critical"
    },
    "description": "I'm using solr 6.3.0. I indexed a big amount of docuements into one solr collection with one shard, it's 60G in the disk, which has around 2506889 documents. \n\nI frequently get the ArrayIndexOutOfBoundsException when I send a simple stats request, for example:\n\nhttp://localhost:8983/solr/staging-update/select?start=0&rows=0&version=2.2&q=*:*&stats=true&timeAllowed=60000&wt=json&stats.field=asp_community_facet&stats.field=asp_group_facet\n\nThe solr log capture following exception as well as in the response like below:\n\n{\n\n    \"responseHeader\": {\n        \"zkConnected\": true,\n        \"status\": 500,\n        \"QTime\": 11,\n        \"params\": {\n            \"q\": \"*:*\",\n            \"stats\": \"true\",\n            \"start\": \"0\",\n            \"timeAllowed\": \"60000\",\n            \"rows\": \"0\",\n            \"version\": \"2.2\",\n            \"wt\": \"json\",\n            \"stats.field\": [\n                \"asp_community_facet\",\n                \"asp_group_facet\"\n            ]\n        }\n    },\n    \"response\": {\n        \"numFound\": 2506211,\n        \"start\": 0,\n        \"docs\": [ ]\n    },\n    \"error\": {\n        \"msg\": \"28\",\n        \"trace\": \"java.lang.ArrayIndexOutOfBoundsException: 28\\n\\tat org.apache.solr.request.DocValuesStats.accumMulti(DocValuesStats.java:213)\\n\\tat org.apache.solr.request.DocValuesStats.getCounts(DocValuesStats.java:135)\\n\\tat org.apache.solr.handler.component.StatsField.computeLocalStatsValues(StatsField.java:424)\\n\\tat org.apache.solr.handler.component.StatsComponent.process(StatsComponent.java:58)\\n\\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:295)\\n\\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:153)\\n\\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2213)\\n\\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:654)\\n\\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:460)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:303)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:254)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\\n\\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1160)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1092)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\\n\\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:518)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:308)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)\\n\\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\\n\\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\\n\\tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\\n\\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:246)\\n\\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:156)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\",\n        \"code\": 500\n    }\n\n}\n\n\n\nI tried to remove some documents by reduce the document amount to 2334089, then the query get correct response, like below:\n\n{\n\n    \"responseHeader\": {\n        \"zkConnected\": true,\n        \"status\": 0,\n        \"QTime\": 154,\n        \"params\": {\n            \"q\": \"*:*\",\n            \"stats\": \"true\",\n            \"start\": \"0\",\n            \"timeAllowed\": \"60000\",\n            \"rows\": \"0\",\n            \"version\": \"2.2\",\n            \"wt\": \"json\",\n            \"stats.field\": [\n                \"asp_community_facet\",\n                \"asp_group_facet\"\n            ]\n        }\n    },\n    \"response\": {\n        \"numFound\": 2334089,\n        \"start\": 0,\n        \"docs\": [ ]\n    },\n    \"stats\": {\n        \"stats_fields\": {\n            \"asp_community_facet\": {\n                \"min\": \"American Film\",\n                \"max\": \"World Music\",\n                \"count\": 1954337,\n                \"missing\": 407503\n            },\n            \"asp_group_facet\": {\n                \"min\": \"All Disciplines\",\n                \"max\": \"Social Sciences\",\n                \"count\": 2407087,\n                \"missing\": 354869\n            }\n        }\n    }\n}\n\n\n\nMy solr memory setting in /etc/default/solr.in.sh is like below:\n\nSOLR_JAVA_MEM=\"-Xms30G -Xmx60G\"\n\n\n\nSo, I thought it's probably not a memory issue. By the way, I have a solr 5.3 server with the same amount of documents (2506889) in a one shard core which does not have this exception.\n\nJiaJun",
    "attachments": {
        "solr.log": "https://issues.apache.org/jira/secure/attachment/12851991/solr.log"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-11T14:09:50+0000",
            "author": "Erick Erickson",
            "content": "What is the stack trace from the Solr server when this happens? Without that it's hard to even guess where to start looking. ",
            "id": "comment-15818433"
        },
        {
            "date": "2017-01-19T04:48:02+0000",
            "author": "Zhu JiaJun",
            "content": "Hi Erick,\n\nThanks for response. I created a java heap dump of the server after the exception throw. It's a bit big. I uploaded it to my baidu cloud. You can download it by clicking below link:\n\nhttps://drive.google.com/file/d/0Bx-GgfxzFCjteGVwN2sxTVd1bFU/view?usp=sharing\n\nJiaJun ",
            "id": "comment-15829315"
        },
        {
            "date": "2017-02-09T03:53:24+0000",
            "author": "Zhu JiaJun",
            "content": "Hi Erick,\n\nI uploaded the dump to google drive that might be helpful for you to download: https://drive.google.com/file/d/0Bx-GgfxzFCjteGVwN2sxTVd1bFU/view?usp=sharing\n\nJiaJun ",
            "id": "comment-15858956"
        },
        {
            "date": "2017-02-09T06:48:41+0000",
            "author": "Mike Drob",
            "content": "Erick - the stack trace is included in the initial bug report. Looks like the culprit is something in DocValuesStats, but that code hasn't changed for years.\n\n\njava.lang.ArrayIndexOutOfBoundsException: 28\n\tat org.apache.solr.request.DocValuesStats.accumMulti(DocValuesStats.java:213)\n\tat org.apache.solr.request.DocValuesStats.getCounts(DocValuesStats.java:135)\n\tat org.apache.solr.handler.component.StatsField.computeLocalStatsValues(StatsField.java:424)\n\tat org.apache.solr.handler.component.StatsComponent.process(StatsComponent.java:58)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:295)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:153)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2213)\n\n\n\nTrue, there might be more in the solr logs, but this is definitely enough to start with. (I, unfortunately, have no idea what's going on in this code) ",
            "id": "comment-15859124"
        },
        {
            "date": "2017-02-10T05:16:25+0000",
            "author": "Zhu JiaJun",
            "content": "Solr Log at TRACE level ",
            "id": "comment-15860729"
        },
        {
            "date": "2017-02-10T06:06:56+0000",
            "author": "Zhu JiaJun",
            "content": "Thanks Mike. The output of the solr log is same as the message from the response results. \n\nMike, Erick, I find a few more information that might be helpful for you to identify the cause and also I attached the \"TRACE\" level solr log in this ticket:\n\n1. The exception always happens after the second try. When I request the query first time, it will output the results successfully with no exception. Then when I resend the query second time, the exception happens. The exception will still ocur if I tried third time or add \"cache=false\" in the parameters.\n\n2. From the attached solr log line 11343 to 11528, you will see I sent the request first time and the output is success. From line 11529 to 11832, you can see I sent the request second time and the output include exception messages.\n\nMany thanks.\n\nJiaJun ",
            "id": "comment-15860792"
        }
    ]
}