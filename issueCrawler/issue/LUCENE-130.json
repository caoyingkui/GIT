{
    "id": "LUCENE-130",
    "title": "org.apache.lucene.search.Query.toString(String field) ignores it's only parameter",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.0.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The JavaDoc says:\n\"Prints a query to a string, with field as the default field for terms. \n\nThe representation used is one that is readable by QueryParser (although, if \nthe query was created by the parser, the printed representation may not be \nexactly what was parsed). \"\n\nBut as Far as I can tell it doesn't matter what you pass it. It returns the \nsame thing if you had called toString()",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--BugTest.java": "https://issues.apache.org/jira/secure/attachment/12312248/ASF.LICENSE.NOT.GRANTED--BugTest.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2003-09-02T21:21:18+0000",
            "content": "Please provide some examples of what you are describing, so I can understand the\nproblem that you are trying to describe.  Runnable code samples in a form of a\n(j)unit test would be even better. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321350"
        },
        {
            "date": "2004-03-04T22:02:30+0000",
            "content": "Created an attachment (id=10659)\nCode that shows slightly confusing behavior ",
            "author": "Daniel Naber",
            "id": "comment-12321351"
        },
        {
            "date": "2004-03-04T22:04:33+0000",
            "content": "Not sure what exactly the original reporter was referring to, but the attached code \ncould indeed by confusing: even though the default field is empty, toString(\"xx\") doesn't \nadd the \"xx\" as a field, because the empty string is considered okay just like any other \nfield name. \n ",
            "author": "Daniel Naber",
            "id": "comment-12321352"
        },
        {
            "date": "2006-04-10T20:27:09+0000",
            "content": "toString(field) works very well, if you understand what it does. Perhaps the javadoc isn't explicit enough on what it does and need to be improved.\n\nTo the original poster (from two years ago...), here a short explanation. toString() is meant to be somewhat like a reverse of QueryParser. When you build a QueryParser, you give it a \"default field\" and a string query. Whenever the QueryParser sees a term with no field on it (say, the word \"dog\") it uses the default field as the field; If the default field name given to QueryParser is \"content\", a query of \"dog\" is equivalent to searching for \"content:dog\".  Now, if you run toString() on that generated query the string you'll get is \"content:dog\". This is ugly, because it adds a \"content:\" (the default field name you gave QueryParser) to every term in your query. In order to remove this default field name, toString() needs to know what it is, so you pass it as a parameter. So toString(\"content\") remove that field name, and leaves only \"dog\".\n\nNow, down to business: the Javadoc currently says about toString(field):\n\n   \"Prints a query to a string, with 'field' as the default field for terms.\"\n\nI would have changed this to\n\n   \"Prints a query to a string, with 'field' assumed to be the default field and ommitted.\"\n\n(or something like that). ",
            "author": "Nadav Har'El",
            "id": "comment-12373847"
        },
        {
            "date": "2006-04-10T22:40:37+0000",
            "content": "You're right, I have just committed the improved javadoc. ",
            "author": "Daniel Naber",
            "id": "comment-12373864"
        },
        {
            "date": "2006-04-11T16:14:44+0000",
            "content": "Daniel, sorry for the mess, but I actually misspelled the word \"omitted\" in that sentence. Should have just one \"m\"... ",
            "author": "Nadav Har'El",
            "id": "comment-12373980"
        },
        {
            "date": "2006-04-11T17:41:48+0000",
            "content": "I fixed that, thanks. ",
            "author": "Daniel Naber",
            "id": "comment-12373990"
        }
    ]
}