{
    "id": "LUCENE-3111",
    "title": "TestFSTs.testRandomWords failure",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Was running some while(1) tests on the docvalues branch (r1103705) and the following test failed:\n\n\n    [junit] Testsuite: org.apache.lucene.util.automaton.fst.TestFSTs\n    [junit] Testcase: testRandomWords(org.apache.lucene.util.automaton.fst.TestFSTs):\tFAILED\n    [junit] expected:<771> but was:<TwoLongs:771,771>\n    [junit] junit.framework.AssertionFailedError: expected:<771> but was:<TwoLongs:771,771>\n    [junit] \tat org.apache.lucene.util.automaton.fst.TestFSTs$FSTTester.verifyUnPruned(TestFSTs.java:540)\n    [junit] \tat org.apache.lucene.util.automaton.fst.TestFSTs$FSTTester.doTest(TestFSTs.java:496)\n    [junit] \tat org.apache.lucene.util.automaton.fst.TestFSTs$FSTTester.doTest(TestFSTs.java:359)\n    [junit] \tat org.apache.lucene.util.automaton.fst.TestFSTs.doTest(TestFSTs.java:319)\n    [junit] \tat org.apache.lucene.util.automaton.fst.TestFSTs.testRandomWords(TestFSTs.java:940)\n    [junit] \tat org.apache.lucene.util.automaton.fst.TestFSTs.testRandomWords(TestFSTs.java:915)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1282)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1211)\n    [junit] \n    [junit] \n    [junit] Tests run: 7, Failures: 1, Errors: 0, Time elapsed: 7.628 sec\n    [junit] \n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: Ignoring nightly-only test method 'testBigSet'\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestFSTs -Dtestmethod=testRandomWords -Dtests.seed=-269475578956012681:0\n    [junit] NOTE: test params are: codec=PreFlex, locale=ar, timezone=America/Blanc-Sablon\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TestToken, TestCodecs, TestIndexReaderReopen, TestIndexWriterMerging, TestNoDeletionPolicy, TestParallelReaderEmptyIndex, TestParallelTermEnum, TestPerSegmentDeletes, TestSegmentReader, TestSegmentTermDocs, TestStressAdvance, TestTermVectorsReader, TestSurrogates, TestMultiFieldQueryParser, TestAutomatonQuery, TestBooleanScorer, TestFuzzyQuery, TestMultiTermConstantScore, TestNumericRangeQuery64, TestPositiveScoresOnlyCollector, TestPrefixFilter, TestQueryTermVector, TestScorerPerf, TestSloppyPhraseQuery, TestSpansAdvanced, TestWindowsMMap, TestRamUsageEstimator, TestSmallFloat, TestUnicodeUtil, TestFSTs]\n    [junit] NOTE: Linux 2.6.37-gentoo amd64/Sun Microsystems Inc. 1.6.0_25 (64-bit)/cpus=8,threads=1,free=137329960,total=208207872\n    [junit] ------------- ---------------- ---------------\n    [junit] TEST org.apache.lucene.util.automaton.fst.TestFSTs FAILED\n\n\n\nI am not able to reproduce",
    "attachments": {
        "LUCENE-3111.patch": "https://issues.apache.org/jira/secure/attachment/12479488/LUCENE-3111.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-05-17T16:38:42+0000",
            "content": "I'm also not able to reproduce... ",
            "author": "Michael McCandless",
            "id": "comment-13034868"
        },
        {
            "date": "2011-05-17T16:50:31+0000",
            "content": "This sounds like a bug in either the test or test-infra.\n\nI'm not able to reproduce but if I run this test with -Dtests.iter=100, i'm able to produce a similar failure (again not reproducible).\n\nSo first I'd like to see if we can find the \"reproducibility bug\". This is the most important to me  ",
            "author": "Robert Muir",
            "id": "comment-13034876"
        },
        {
            "date": "2011-05-17T16:54:33+0000",
            "content": "ok, the problem is the test overrides setup() but doesnt call super.setup(), and it does the same with tearDown()\n\nCurrently the way LuceneTestCase checks this is very \"crude\", in other words if you make this mistake with one, or the other, but not both, it will catch it!\n\nThe only workaround i know of to find test bugs like this is to install findbugs. it has a specific check for this exact test bug! we could run it on all of our tests. ",
            "author": "Robert Muir",
            "id": "comment-13034880"
        },
        {
            "date": "2011-05-17T17:14:06+0000",
            "content": "Doh!\n\n+1 for findbugs. ",
            "author": "Michael McCandless",
            "id": "comment-13034895"
        },
        {
            "date": "2011-05-17T17:18:54+0000",
            "content": "OK this reproduces the bug, once you add the missing calls to super.setUp/tearDown:\n\n\nant test -Dtestcase=TestFSTs -Dtestmethod=testRandomWords -Dtests.seed=6166279653770643480:6589011488658196383\n\n ",
            "author": "Michael McCandless",
            "id": "comment-13034899"
        },
        {
            "date": "2011-05-17T17:22:12+0000",
            "content": "I have an idea how i think i can make LuceneTestCase fail if a test does this... i'll see if i can improve the setup/tearDown checking this way so we don't have this issue again. ",
            "author": "Robert Muir",
            "id": "comment-13034900"
        },
        {
            "date": "2011-05-17T18:33:22+0000",
            "content": "See revision 1104452, 5 tests had this problem... I think LuceneTestCase can catch it always now. ",
            "author": "Robert Muir",
            "id": "comment-13034949"
        },
        {
            "date": "2011-05-17T18:35:46+0000",
            "content": "OK I found this \u2013 if you try to add the same output, twice, for the empty string, then the builder fails to realize this is a TwoInts and makes a single int output!\n\nThank you random testing \n\nI'll commit shortly... ",
            "author": "Michael McCandless",
            "id": "comment-13034950"
        },
        {
            "date": "2011-05-23T19:36:44+0000",
            "content": "@rmuir: Why was this committed to the 3_X branch, and not only to the trunk, as r 1104527?\n\nAlso, sorry for my ignorance, but why is it needed? Isn't there an 'inheritance/abstract/template method pattern' way to achive the same?  \nAll I know is that it now breaks my Solr tests[1].\n\n[1] https://issues.apache.org/jira/browse/SOLR-2537?focusedCommentId=13038085&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13038085\nSteps to reproduce:\n\nsvn co -r 1126620 http://svn.apache.org/repos/asf/lucene/dev/branches/branch_3x/\ncd branch_3x; ant get-maven-poms; mvn -N -Pbootstrap install; mvn -DskipTests install\nwget http://dp4j.sf.net/debug/embeddedServerTest.zip\nunzip embeddedServerTest.zip\ncd embeddedServerTest; mvn test\n\n ",
            "author": "Gabriele Kahlout",
            "id": "comment-13038160"
        },
        {
            "date": "2011-05-23T20:12:42+0000",
            "content": "\n@rmuir: Why was this committed to the 3_X branch, and not only to the trunk, as r 1104527?\n\nIn general, when it comes to improving tests I try to backport all improvements.\n\n\nAlso, sorry for my ignorance, but why is it needed?\n\nIts a bug to override setup()/teardown() and not call super.setup()/super.tearDown(). You can detect this bug with findbugs, but its far better for the tests to just check this.\n\nOtherwise, the test-framework (LuceneTestCase) won't work correctly, such as in this case where you don't have a reproducible random seed.\n\nI'm sorry if it breaks your tests, you just need to make sure your setup() calls super.setup() and your tearDown() calls super.tearDown() ",
            "author": "Robert Muir",
            "id": "comment-13038183"
        },
        {
            "date": "2011-05-23T21:29:25+0000",
            "content": "you just need to make sure your setup() calls super.setup() and your tearDown() calls super.tearDown()\nUnknown macro: {quoute} \nBut I am! Follows the code in the zipped project. Also, if I don't override those methods I shouldn't get this problem, but I do.\n\npublic class SolrConfigTest extends AbstractSolrTestCase {\n\n    @Override\n    public String getSolrHome() {\n        final String SOLR_HOME = System.getenv(\"SOLR_HOME\");\n        if (SOLR_HOME == null) \n{\n            throw new RuntimeException(\"Set $SOLR_HOME env var to execute.\");\n        }\n        return new File(SOLR_HOME).getAbsolutePath();\n    }\n\n    public String getSchemaFile() \n{\n        return getSolrHome() + \"/conf/schema.xml\";\n    }\n\n    public String getSolrConfigFile() \n{\n        return getSolrHome() + \"/conf/solrconfig.xml\";\n    }\n    private SolrServer server;\n\n    @Before\n    @Override\n    public void setUp() throws Exception \n{\n        super.setUp();\n        new EmbeddedSolrServer(h.getCoreContainer(), h.getCore().getName());\n    }\n\n    @Test\n    public void test() \n{\n        //just a dummy to have setUp() called\n    }\n}\n ",
            "author": "Gabriele Kahlout",
            "id": "comment-13038243"
        },
        {
            "date": "2011-05-23T22:08:12+0000",
            "content": "\nyou just need to make sure your setup() calls super.setup() and your tearDown() calls super.tearDown()\n\nBut I am! Follows the code in the zipped project. Also, if I don't override those methods I shouldn't get this problem, but I do.\n\nI can reproduce - Gabriele's test class's setUp() method calls super.setUp(), but when I run the test the error message about needing to call super.setUp() is emitted, and the test fails.  I don't know how to diagnose this problem, though. ",
            "author": "Steve Rowe",
            "id": "comment-13038269"
        },
        {
            "date": "2011-06-09T13:13:14+0000",
            "content": "\nI can reproduce - Gabriele's test class's setUp() method calls super.setUp(), but when I run the test the error message about needing to call super.setUp() is emitted, and the test fails. I don't know how to diagnose this problem, though.\n\nYou must use junit 4.7 (not 4.8).\nIn junit 4.8 TestWatchMan.starting() is fired before the @Befores, but not in 4.7 (This behavior annoyed me in 4.7 by the way).\n\nI definitely don't mind opening a new issue to switch to 4.8 as a minimum requirement. ",
            "author": "Robert Muir",
            "id": "comment-13046522"
        }
    ]
}