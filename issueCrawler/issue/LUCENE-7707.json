{
    "id": "LUCENE-7707",
    "title": "Only assign ScoreDoc#shardIndex if it was already assigned to non default (-1) value",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "6.5",
            "7.0"
        ]
    },
    "description": "When you use TopDocs.merge today it always overrides the ScoreDoc#shardIndex value. The assumption that is made here is that all shard results are merges at once which is not necessarily the case. If for instance incremental merge phases are applied the shard index doesn't correspond to the index in the outer TopDocs array. To make this a backwards compatible but yet non-controversial change we could change the internals of TopDocs#merge to only assign this value unless it's not been assigned before to a non-default (-1) value to allow multiple or sparse top docs merging.",
    "attachments": {
        "LUCENE-7707.patch": "https://issues.apache.org/jira/secure/attachment/12854224/LUCENE-7707.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15880585",
            "date": "2017-02-23T14:53:18+0000",
            "content": "here is a patch ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15880690",
            "date": "2017-02-23T15:55:35+0000",
            "content": "here is another iteration that makes sorting stable and shares some code for tiebreaking between sorting and merge by score code ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15880708",
            "date": "2017-02-23T16:06:12+0000",
            "content": "+1, this will make the merge more flexible.\nIf we really want to be sure that it does not break the BWC maybe it can be an option of the merge function ? A simple boolean overrideShardIndex with a default value of false ? ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15880767",
            "date": "2017-02-23T16:22:02+0000",
            "content": "I personally think making this solely dependent on a boolean would be best IMO. It would be an additional overload of the methods that explicitly turns on that shardIndex is set on the ScoreDoc and we don't need to do as much conditionals in the tie-breaking. I personally would like that but Michael McCandless had some issues with this? ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15880838",
            "date": "2017-02-23T16:56:35+0000",
            "content": "+1 to the patch.\n\nI personally would like that but Michael McCandless had some issues with this?\n\nYeah, I'd prefer not to add a boolean argument: that's allowing a temporary back compat issue to have a permanent impact on our APIs.  Our APIs should be designed for future usage.  Plus I think it's very unlikely someone today is pre-setting the shardIndex (off of it's default -1 value) and then relying on TopDocs.merge to overwrite it.  I think the patch is sufficient back compat behavior w/o a compromised API change. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15880854",
            "date": "2017-02-23T17:12:30+0000",
            "content": "I don't like the fact that if you mix top docs that have the shard index set and other instances that have it undefined, then we could end up assigning a shard id that is already in use. Is there a way we can avoid that? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15880859",
            "date": "2017-02-23T17:14:13+0000",
            "content": "Plus I think it's very unlikely someone today is pre-setting the shardIndex (off of it's default -1 value) and then relying on TopDocs.merge\n\nGood point. +1 to the patch too, there's nothing to break here  ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15880862",
            "date": "2017-02-23T17:14:56+0000",
            "content": "Maybe we could require that either all incoming shardIndex are undefined, or all are set, but you are not allowed to mix? ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15881076",
            "date": "2017-02-23T19:27:31+0000",
            "content": "Maybe we could require that either all incoming shardIndex are undefined, or all are set, but you are not allowed to mix?\n\nI think this is what we should ultimately do. I don't see a different way than peaking at the at the TopDocs so see if it's preset and then executed based on that. I can certainly add assertions... ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15881114",
            "date": "2017-02-23T19:49:55+0000",
            "content": "here is a new patch adding more safety to it and making the decision up-front if we assign shardIndex or not ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15881131",
            "date": "2017-02-23T20:02:12+0000",
            "content": "s/where/were ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15881132",
            "date": "2017-02-23T20:03:21+0000",
            "content": "+1, looks awesome!\n\nMaybe update the javadocs to explain that we will either fill in the shardIndex or will not but never both. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15881175",
            "date": "2017-02-23T20:20:56+0000",
            "content": "updated javadocs ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15881181",
            "date": "2017-02-23T20:23:08+0000",
            "content": "+1, thanks Simon Willnauer. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15881206",
            "date": "2017-02-23T20:29:56+0000",
            "content": "fix typo s/loosing/losing ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15882136",
            "date": "2017-02-24T07:32:21+0000",
            "content": "Adrien Grand are your concerns addressed with the latest patch? ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15882185",
            "date": "2017-02-24T08:08:15+0000",
            "content": "Yes, thanks for adding this validation. +1 to the patch ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15882434",
            "date": "2017-02-24T10:44:33+0000",
            "content": "Commit 5eeb8136f34fc7b3e2157982e5fa42da7f115d76 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5eeb813 ]\n\nLUCENE-7707: Use predefined shard index when mergeing top docs if present.\n\nThis allows to use TopDoc#merge to merge shard responses incrementally\ninstead of once all shard responses are present. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15882440",
            "date": "2017-02-24T10:49:16+0000",
            "content": "Commit 7f904a2bccad38929ced27b5ccd81fbc6df5d8ff in lucene-solr's branch refs/heads/branch_6x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7f904a2 ]\n\nLUCENE-7707: Use predefined shard index when mergeing top docs if present.\n\nThis allows to use TopDoc#merge to merge shard responses incrementally\ninstead of once all shard responses are present. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15882443",
            "date": "2017-02-24T10:50:02+0000",
            "content": "thanks everybody! it's good to be back here  ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-15882531",
            "date": "2017-02-24T12:00:10+0000",
            "content": "Alas, I think we do need to add an explicit boolean to the public API ... this test failure repros for me:\n\n\n [junit4] Suite: org.apache.lucene.search.TestShardSearching\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestShardSearching -Dtests.method=testSimple -Dtests.seed=2D10A476239970A9 -Dtests.slow=true -Dtests.locale=en-NZ -Dtests.timezone=Navajo -Dtests.asserts=true -Dtests.file.encoding=UTF8\n   [junit4] FAILURE 0.64s J2 | TestShardSearching.testSimple <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([2D10A476239970A9:15A38088046AA478]:0)\n   [junit4]    > \tat org.apache.lucene.search.TopDocs.tieBreakLessThan(TopDocs.java:104)\n   [junit4]    > \tat org.apache.lucene.search.TopDocs$MergeSortQueue.lessThan(TopDocs.java:196)\n   [junit4]    > \tat org.apache.lucene.search.TopDocs$MergeSortQueue.lessThan(TopDocs.java:138)\n   [junit4]    > \tat org.apache.lucene.util.PriorityQueue.upHeap(PriorityQueue.java:263)\n   [junit4]    > \tat org.apache.lucene.util.PriorityQueue.add(PriorityQueue.java:140)\n   [junit4]    > \tat org.apache.lucene.search.TopDocs.mergeAux(TopDocs.java:283)\n   [junit4]    > \tat org.apache.lucene.search.TopDocs.merge(TopDocs.java:248)\n   [junit4]    > \tat org.apache.lucene.search.TopDocs.merge(TopDocs.java:232)\n   [junit4]    > \tat org.apache.lucene.search.ShardSearchingTestBase$NodeState$ShardIndexSearcher.search(ShardSearchingTestBase.java:440)\n   [junit4]    > \tat org.apache.lucene.search.TestShardSearching.assertSame(TestShardSearching.java:313)\n   [junit4]    > \tat org.apache.lucene.search.TestShardSearching.testSimple(TestShardSearching.java:236)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n\n\nIt happens because IndexSearcher will sometimes (when using an executor) set the shardIndex of the TopDocs it returns to the caller, but it should not (so that the caller can then later do their own merging).  Likewise, grouping, drill sideways ...\n\nI'll work on a patch to make it explicit... ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15882772",
            "date": "2017-02-24T14:21:19+0000",
            "content": "OK, here's a patch to make the boolean setShardIndex explicit; I just feed that down to mergeAux and replace the auto-detect logic it previously had.\n\nThere is no back-compat break: I default the original APIs to passing setShardIndex=true.  I think it's ready. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15882798",
            "date": "2017-02-24T14:39:34+0000",
            "content": "Let's make sure that the shard index is not -1 if setShardIndex is false? Otherwise + 1. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15883425",
            "date": "2017-02-24T20:01:46+0000",
            "content": "Thanks Adrien Grand; I added checking for that abuse, and the original test case for this... ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15883599",
            "date": "2017-02-24T22:00:56+0000",
            "content": "Commit d00c5cae2b80941bbe71c091d42659e0c504b5ec in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d00c5ca ]\n\nLUCENE-7707: add explicit boolean to TopDocs.merge to govern whether incoming or implicit shard index should be used ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15883605",
            "date": "2017-02-24T22:05:03+0000",
            "content": "Commit 2e56c0e50564c8feeeb2831dd36cff1e9b23a00f in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2e56c0e ]\n\nLUCENE-7707: add explicit boolean to TopDocs.merge to govern whether incoming or implicit shard index should be used ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15883608",
            "date": "2017-02-24T22:06:41+0000",
            "content": "OK I committed that last patch. ",
            "author": "Michael McCandless"
        }
    ]
}