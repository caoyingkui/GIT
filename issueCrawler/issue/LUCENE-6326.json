{
    "id": "LUCENE-6326",
    "title": "MultiCollector does not handle CollectionTerminatedException correctly",
    "details": {
        "resolution": "Duplicate",
        "affect_versions": "5.0",
        "components": [
            "core/search"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "The javadoc of the collect-method of LeafCollector states:\nNote: The collection of the current segment can be terminated by throwing a CollectionTerminatedException.\nHowever, the Multicollector does not catch this exception, so if one of the wrapped collectors terminates the current segment, it is terminated for every collector.\nThe same is true for the getLeafCollector-method (even though this is not documented in the JavaDoc).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14343327",
            "author": "Adrien Grand",
            "date": "2015-03-02T16:19:51+0000",
            "content": "+1 to make MultiCollector catch this exception. I think this is more intuitive as it would make the sub collectors collected as if they was no other collector. "
        },
        {
            "id": "comment-14733387",
            "author": "Adrien Grand",
            "date": "2015-09-07T08:27:35+0000",
            "content": "Thanks Christoph , I had forgotten about this issue. "
        }
    ]
}