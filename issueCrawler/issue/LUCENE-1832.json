{
    "id": "LUCENE-1832",
    "title": "minor/nitpick TermInfoReader bug ?",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Some code flagged by a bytecode static analyzer - I guess a nitpick, but we should just drop the null check in the if? If its null it will fall to the below code and then throw a NullPointer exception anyway. Keeping the nullpointer check implies we expect its possible - but then we don't handle it correctly.\n\n\n  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getThreadResources().termEnum;\n    if (enumerator != null && enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + totalIndexInterval))\n      return scanEnum(enumerator, position);      // can avoid seek\n\n    seekEnum(enumerator, position/totalIndexInterval); // must seek\n    return scanEnum(enumerator, position);\n  }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-08-21T16:13:58+0000",
            "content": "enumerator can never be null there. I'll commit the simple fix. ",
            "author": "Michael Busch",
            "id": "comment-12746049"
        },
        {
            "date": "2009-08-21T16:48:22+0000",
            "content": "Committed revision 806637. ",
            "author": "Michael Busch",
            "id": "comment-12746077"
        }
    ]
}