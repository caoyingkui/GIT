{
    "id": "SOLR-1794",
    "title": "Dataimport of CLOB fields fails when getCharacterStream() is defined in a superclass",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When running Solr on WebLogic application server 10.3.2, the dataimport for CLOB fields are failing. Line 109 in FieldReaderDataSource.java illustrates the problem:\n\nMethod m = clob.getClass().getDeclaredMethod(\"getCharacterStream\");\n\nSince getDeclaredMethod instead of getMethod is used, the getCharacterStream() method will not be found if it is defined in a superclass of clob. This is exactly what\nhappens in e.g. WebLogic 10.3.2, since the object returned is a dynamically created wrapper class called Clob_oracle_sql_CLOB. This class does not define\ngetCharacterStream(), but it inherits from another class that does. This problem will also occur in other places where getDeclaredMethod used in conjunction with the CLOB\nor BLOB datatypes.\n\nStacktrace:\n\norg.apache.solr.handler.dataimport.DataImportHandlerException: Unable to get reader from clob Processing Document # 1\n        at org.apache.solr.handler.dataimport.DataImportHandlerException.wrapAndThrow(DataImportHandlerException.java:72)\n        at org.apache.solr.handler.dataimport.FieldReaderDataSource.readCharStream(FieldReaderDataSource.java:118)\n        at org.apache.solr.handler.dataimport.ClobTransformer.readFromClob(ClobTransformer.java:69)\n        at org.apache.solr.handler.dataimport.ClobTransformer.transformRow(ClobTransformer.java:61)\n        at org.apache.solr.handler.dataimport.EntityProcessorWrapper.applyTransformer(EntityProcessorWrapper.java:195)\n        at org.apache.solr.handler.dataimport.EntityProcessorWrapper.nextRow(EntityProcessorWrapper.java:241)\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:357)\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:383)\n        at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:242)\n        at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:180)\n        at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:331)\n        at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:389)\n        at org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:370)\nCaused by: java.lang.NoSuchMethodException: weblogic.jdbc.wrapper.Clob_oracle_sql_CLOB.getCharacterStream()\n        at java.lang.Class.getDeclaredMethod(Class.java:1937)\n        at org.apache.solr.handler.dataimport.FieldReaderDataSource.readCharStream(FieldReaderDataSource.java:109)\n        ... 11 more",
    "attachments": {
        "SOLR-1794.patch": "https://issues.apache.org/jira/secure/attachment/12457516/SOLR-1794.patch",
        "ASF.LICENSE.NOT.GRANTED--FieldReaderDataSource.java": "https://issues.apache.org/jira/secure/attachment/12441816/ASF.LICENSE.NOT.GRANTED--FieldReaderDataSource.java"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Stein K\u00e5re Skytteren",
            "id": "comment-12857267",
            "date": "2010-04-15T10:47:45+0000",
            "content": "A fixed version of  org.apache.solr.handler.dataimport.FieldReaderDataSource \nChange line 89 and 110 to use getMethod instead of getDeclaredMethod.\n\nThis works for us on Weblogic 10.3.2.\n\nSince I cannot commit to the repository I hope that someone will update the file so we may upgrade without deploying our own version of this class. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12922402",
            "date": "2010-10-19T01:38:59+0000",
            "content": "I don't understand why reflection is being used here at all.\n\ngetCharacterStream and getBinaryStream are both defined as public methods in the java.sql.Clob/Blob interfaces since java 1.4, so all the reflection and comments like:\n\n\n//Most of the JDBC drivers have getBinaryStream defined as public\n\n\n\nmake no sense to me... of course its public, it must be !\n\nall tests patch with the reflection removed. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12922532",
            "date": "2010-10-19T12:10:17+0000",
            "content": "The method is defined as public in the JDBC API since at least Java 1.4, so why use reflection at all? I would simply remove the reflection as Robert did and resolve that issue. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12922536",
            "date": "2010-10-19T12:34:06+0000",
            "content": "Thanks for the review Uwe.\n\nI will commit the bugfix shortly unless there are objections. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12922583",
            "date": "2010-10-19T15:05:26+0000",
            "content": "Committed revision 1024256, 1024258 (3x).\n\nThanks Gunnar! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013091",
            "date": "2011-03-30T15:45:31+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}