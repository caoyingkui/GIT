{
    "id": "SOLR-1669",
    "title": "Make XMLWriter write out xml that references the SOLR response XSD/DTD",
    "details": {
        "affect_versions": "1.2,                                            1.3,                                            1.4",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "Response Writers"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "As described in SOLR-17, this is patch #2 of 3. It will make a simple modification to XMLWriter which makes the output response XML reference the SOLR XSD file. This way, clients can validate against it.",
    "attachments": {
        "SOLR-1669.Mattmann.121709.patch.txt": "https://issues.apache.org/jira/secure/attachment/12428404/SOLR-1669.Mattmann.121709.patch.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Chris A. Mattmann",
            "id": "comment-12792353",
            "date": "2009-12-18T05:54:57+0000",
            "content": "\n\tpatch to implement referencing of XSD by XMLWriter\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12792392",
            "date": "2009-12-18T08:49:51+0000",
            "content": "clients can still validate it if they have the XSD. What good is the noSchema thing? "
        },
        {
            "author": "Chris A. Mattmann",
            "id": "comment-12792536",
            "date": "2009-12-18T17:22:39+0000",
            "content": "Clients can validate locally if they separately download the XSD but then there is no mechanism to inject it into the response XML as a reference, which is required for runtime validation. But if the XML response references the XSD, and the client is set to validate (a user's choice), there is no need to (separately) download the XSD locally to do runtime validation. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12792801",
            "date": "2009-12-19T06:57:39+0000",
            "content": "do you mean to say that the schema location provided by the xml is a real url? it is just a unique string . it could be just about anything else. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12792869",
            "date": "2009-12-19T17:31:04+0000",
            "content": "The default should be to not include a schema. "
        },
        {
            "author": "Chris A. Mattmann",
            "id": "comment-12792873",
            "date": "2009-12-19T17:41:17+0000",
            "content": "\ndo you mean to say that the schema location provided by the xml is a real url? it is just a unique string . it could be just about anything else.\n\nYes, I mean it's a real URL. Once the patch from SOLR-17 is applied, it will become a real URL (and as part of SOLR-17 there needs to be a new site build/push out).\n\n\nThe default should be to not include a schema. \n\nWhy? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12793238",
            "date": "2009-12-21T15:51:06+0000",
            "content": "\nThe default should be to not include a schema. \n\nWhy?\n\nBack compat.\n\nXML Parsers can be configured to do validation if/when a schema/dtd is declared.  Clients unknowningly using a parser configured that way could (and most likely would) perceive a big slow down in their apps if we started including the schema declaration and that triggered expensive validation when they didn't want it.\n\nthere are also people using the XML response format for incredibly small responses (thing an autosuggest component) where a schema delcaration would double the size of hte response. "
        },
        {
            "author": "Chris A. Mattmann",
            "id": "comment-12793241",
            "date": "2009-12-21T16:01:59+0000",
            "content": "\nBack compat.\n\nXML Parsers can be configured to do validation if/when a schema/dtd is declared. Clients unknowningly using a parser configured that way could (and most likely would) perceive a big slow down in their apps if we started including the schema declaration and that triggered expensive validation when they didn't want it.\n\nthere are also people using the XML response format for incredibly small responses (thing an autosuggest component) where a schema delcaration would double the size of hte response\n\nOkey dokey \u2013 no schema by default then! \n\nI'll try and prepare an update to this issue and to SOLR-17 and throw up the patches today. Thanks for the feedback! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12793242",
            "date": "2009-12-21T16:03:11+0000",
            "content": "\nYes, I mean it's a real URL. Once the patch from SOLR-17 is applied, it will become a real URL\n\n1. that doesn't sound right ... i thought Schema declaration URIs were like Namespace URIs \u2013 they were just a unique name, that the XML parser would then be configured with a mapping to a local file (or remote URL) for the parser to use? ... it's suppose to be a real URL?!?!?!\n\n2. If schema URIs really are URLs then we should absolutely NOT reference anything in *.apache.org for the schema URL ... we (and our users) don't want/need every solr client on the planet hitting the apache webservers for this kind of validation.  it would make a lot  more sense to include the XSD in the war and keep it all on the same host "
        },
        {
            "author": "Chris A. Mattmann",
            "id": "comment-12793246",
            "date": "2009-12-21T16:20:49+0000",
            "content": "Hey Hoss:\n\n\n1. that doesn't sound right ... i thought Schema declaration URIs were like Namespace URIs - they were just a unique name, that the XML parser would then be configured with a mapping to a local file (or remote URL) for the parser to use? ... it's suppose to be a real URL?!?!?!\n\nSchema declaration URIs are like namespace URIs, however, you can provide a schemaLocation that is a referenced URL, then the XML parser can decide (as one of its strategies) to pull it down. I found this on the XML Schema standards site at the W3C:\n\nhttp://www.w3.org/TR/xmlschema-1/#schema-loc\n\nHere's the relevant part pasted in:\n\n\nSchema Representation Constraint: Schema Document Location Strategy\nGiven a namespace name (or none) and (optionally) a URI reference from xsi:schemaLocation or xsi:noNamespaceSchemaLocation, schema-aware processors may implement any combination of the following strategies, in any order:\n1 Do nothing, for instance because a schema containing components for the given namespace name is already known to be available, or because it is known in advance that no efforts to locate schema documents will be successful (for example in embedded systems);\n2 Based on the location URI, identify an existing schema document, either as a resource which is an XML document or a <schema> element information item, in some local schema repository;\n3 Based on the namespace name, identify an existing schema document, either as a resource which is an XML document or a <schema> element information item, in some local schema repository;\n4 Attempt to resolve the location URI, to locate a resource on the web which is or contains or references a <schema> element;\n5 Attempt to resolve the namespace name to locate such a resource.\nWhenever possible configuration and/or invocation options for selecting and/or ordering the implemented strategies should be provided. \n\n\n\nHowever, reading this standards doc though suggests something that we can do to alleviate this. We can provide the XSD in the SOLR war file and then reference it locally as you suggest (by setting xsi:schemaLocation to it).\n\n\n2. If schema URIs really are URLs then we should absolutely NOT reference anything in *.apache.org for the schema URL ... we (and our users) don't want/need every solr client on the planet hitting the apache webservers for this kind of validation. it would make a lot more sense to include the XSD in the war and keep it all on the same host\n\nGood point. I'll address as part of 1. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872559",
            "date": "2010-05-27T22:07:48+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043622",
            "date": "2011-06-03T16:46:09+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106323",
            "date": "2011-09-16T14:50:35+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234667",
            "date": "2012-03-21T18:08:48+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717215",
            "date": "2013-07-23T18:47:30+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971243",
            "date": "2014-04-16T12:57:33+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}