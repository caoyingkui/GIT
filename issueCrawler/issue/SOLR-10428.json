{
    "id": "SOLR-10428",
    "title": "CloudSolrClient: Qerying multiple collection aliases leads to SolrException: Collection not found",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.2"
        ],
        "affect_versions": "6.4,                                            6.4.1,                                            6.4.2,                                            6.5,                                            7.0",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "We have multiple collections and an alias is created for each of them. e.g.:\nalias-a -> collection-a, alias-b -> collection-b\n\nWe search in multiple collections by passing the aliases of the collections in the collections parameter.\n\n\nsolrClient.query(\"alias-a,alias-b\", params, SolrRequest.METHOD.POST)\n\n\nThe client can't find the collection and throws an Exception. Relevant parts of the stacktrace using v6.5.0:\n\norg.apache.solr.common.SolrException: Collection not found: collection-a\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.getCollectionNames(CloudSolrClient.java:1394)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:1087)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:1057)\n\tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:160)\n\tat org.apache.solr.client.solrj.SolrClient.query(SolrClient.java:974)\n\n\nEverything works fine with a single alias.\nI think this issue was introduced with SOLR-9784. Please see my comment below.\n\norg.apache.solr.client.solrj.impl.CloudSolrClient\nSet<String> getCollectionNames(String collection) {\n    List<String> rawCollectionsList = StrUtils.splitSmart(collection, \",\", true);\n    Set<String> collectionNames = new HashSet<>();\n    for (String collectionName : rawCollectionsList) {\n      if (stateProvider.getState(collectionName) == null) {\n        // I assume that collectionName should be passed to getAlias here\n        String alias = stateProvider.getAlias(collection);\n        if (alias != null) {\n          List<String> aliasList = StrUtils.splitSmart(alias, \",\", true);\n          collectionNames.addAll(aliasList);\n          continue;\n        }\n\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Collection not found: \" + collectionName);\n        }\n\n      collectionNames.add(collectionName);\n    }\n    return collectionNames;\n  }\n\n\n\nThe suggested change is similar to the previous revision: https://github.com/apache/lucene-solr/commit/5650939a8d41b7bad584947a2c9dcedf3774b8de#diff-c8d54eacd46180b332c86c7ae448abaeL1301",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-21T17:00:41+0000",
            "content": "The javadoc for the query method you are talking about doesn't say \"collections\".  It says \"collection\".\n\nhttp://lucene.apache.org/solr/6_5_1/solr-solrj/org/apache/solr/client/solrj/SolrClient.html#query-java.lang.String-org.apache.solr.common.params.SolrParams-org.apache.solr.client.solrj.SolrRequest.METHOD-\n\nI've never heard any mention of being able to use a comma-separated list of collections in that parameter, but the presence of that getCollectionNames method suggests that my knowledge may have some holes.  If the intent really is to allow a list of collections, perhaps the javadoc on SolrClient needs a little work.  I suspect that the multiple collections capability only applies to CloudSolrClient, which might mean that javadoc needs to be added to that class instead of changing what SolrClient's javadoc says.\n\nOne thing that would likely work right now is to create an alias on the server side that queries multiple collections in the cloud, and then only include that one alias in your query call.\n\nI think I do see a bug in getCollectionNames.  In the master branch (as of right now), line 1409 says this:\n\n\n        String alias = stateProvider.getAlias(collection);\n\n\n\nI believe that \"collection\" should be changed to \"collectionName\" in that line, and that this completely explains the behavior you're seeing. This code was added by the commit that you've referenced. ",
            "author": "Shawn Heisey",
            "id": "comment-16018882"
        },
        {
            "date": "2018-05-28T07:00:04+0000",
            "content": "Sorry for the late reply. The only mention I could find about providing multiple collections in the parameter is from\u00a0https://wiki.apache.org/solr/SolrCloud#Distributed_Requests\nQuery all shards of multiple compatible collections, explicitly specified:\n\nhttp://localhost:8983/solr/collection1/select?collection=collection1_NY,collection1_NJ,collection1_CT\nI also think that \"collection\" should be changed to \"collectionName\". ",
            "author": "Philip Pock",
            "id": "comment-16492337"
        },
        {
            "date": "2018-05-28T19:08:59+0000",
            "content": "The collection parameter that is mentioned on the wiki page you linked is a URL parameter.  To use that kind of syntax with SolrJ, you would use this code:\n\n\nparams.set(\"collection\",\"alias-a,alias-b\");\nsolrClient.query(params, SolrRequest.METHOD.POST)\n\n\n\nThe way your code supplies the collection parameter works differently.  I think that SolrJ puts the provided collection into the URL path \u2013 if you use XXXX, SolrJ sends to http://host:port/solr/XXXX as the base URL.  I have not verified 100% that this is the case, but I think that is how it works. ",
            "author": "Shawn Heisey",
            "id": "comment-16492891"
        },
        {
            "date": "2018-06-13T14:31:24+0000",
            "content": "I improved this sort of stuff significantly in SOLR-11444.  \"collection\" can indeed be a list and potentially include aliases.  Even /solr/colA,colB/select?... works (as of SOLR-11444).  This isn't documented sufficiently, unfortunately. The SolrJ API could be improved here; should be a new issue.  Since it's so rare to specify more than one collection/alias, it just says \"collection\".  It's kinda a trick that it can be a list.\n\nPhilip Pock can you please try a more recent Solr version, 7.2.0 or beyond, and see if the problem persists? ",
            "author": "David Smiley",
            "id": "comment-16511215"
        },
        {
            "date": "2018-06-15T05:54:02+0000",
            "content": "Works as expected with version 7.2.0 and 7.3.1 ",
            "author": "Philip Pock",
            "id": "comment-16513381"
        }
    ]
}