{
    "id": "SOLR-3674",
    "title": "PathHierarchyTokenizerFactory needs better docs, tests, and example config",
    "details": {
        "affect_versions": "3.1,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "As noted by Alok Bhandari on the solr-user mailing list, the example configuration of PathHierarchyTokenizerFactory (in both the example schema.xml and in the factory javadocs) is not very useful to most people because it uses the tokenizer both at index and at query time.\n\nSo a query like q=text_path_field:\"/aaa/bbb/ccc\" will not only match \"/aaa/bbb/ccc\" and \"/aaa/bbb/ccc/ddd\" but also \"/aaa/\" and \"/aaa/xxxx\" which is not likely what people expect.",
    "attachments": {
        "SOLR-3674.patch": "https://issues.apache.org/jira/secure/attachment/12538228/SOLR-3674.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13421953",
            "date": "2012-07-25T02:35:35+0000",
            "content": "Fix is to use a \"query\" analyzer that uses KeywordTokenizerFactory, or use the \"{!term}\" QParser\n\nI'll add some tests demonstrating usecase and update javadocs and example. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13425017",
            "date": "2012-07-30T17:13:55+0000",
            "content": "Committed revision 1367178. - trunk\nCommitted revision 1367180. - 4x "
        },
        {
            "author": "Mandar",
            "id": "comment-13437951",
            "date": "2012-08-20T15:45:21+0000",
            "content": "I am trying to use HierarchicalFaceting\ndescribed at \nhttp://wiki.apache.org/solr/HierarchicalFaceting\nDocumentation doesn't clearly explain how we get the levels indexed i.e. using PathHierarchyTokenizerFactory\n0/electronics\n1/electronics/tv\n2/electronics/tv/lcd\n0/digital\n1/digital/tv\n2/digital/tv/lcd\nIf we use facet.field = category and facet.prefix = /electronics/tv, it would work, but I am strugling to find the level 0 i.e. the Main categories "
        }
    ]
}