{
    "id": "SOLR-477",
    "title": "AnalysisRequestHandler",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Being able to programmatically access tokenization information can be quite useful not only in Solr, but in other NLP applications where token vectors are necessary.\n\nThe patch to follow creates an AnalysisRequestHandler which processes a document through the analysis process and returns a response filled with tokens, their offsets, position inc., type and value.\n\nPatch also adds some character array processing to Xml and adds Token handling to XMLWriter.\n\nI only implemented Xml output, as I don't know JSON or the other types.  If someone else is so motivated, they can add those.",
    "attachments": {
        "SOLR-477.patch": "https://issues.apache.org/jira/secure/attachment/12375304/SOLR-477.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12567949",
            "date": "2008-02-12T04:27:33+0000",
            "content": "I've been meaning to create a handler like this...\nI'm not sure that Token should be directly added to XMLWriter and friends though... seems more flexible for the handler to handle the transformation from token(s) to more primitive types.  Or did you actually add a <token> tag to the xml? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12567951",
            "date": "2008-02-12T04:28:25+0000",
            "content": "First draft at a simple patch to add an AnalysisRequestHandler to Solr.  \n\nAdds in an example set of docs under examples/exampleAnalysis along with a quick and dirty post.sh script to run the analysis.\n\nAdds support into XmlWriter and TextResponseWriter, although TextResponseWriter currently does nothing when encountering a Token.\n\nUnit tests show sample of how to invoke, but in a nutshell it works more or less like the <add> functionality.  Each field in a <doc> is tokenized according to the analysis semantics for that field.  Payloads are currently ignored.  I suppose we could UUEncode the byte array or something, but, since Solr doesn't currently support payloads, not much point in outputting them just yet. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12567954",
            "date": "2008-02-12T04:47:29+0000",
            "content": "i'm with yonik - let's stick with primitive types in the response.  I'd like to avoid ever having to break the ResponseWriter contract unless absolutely neccessary.\n\nGrant quick question because i can't tell by skimming the patch: is there any information currently returned by analysis.jsp that isn't returned by this handler?  if not, we should consider adding it so that that JSP can go the way of hte DODO like the other JSPs are.\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12567955",
            "date": "2008-02-12T04:50:41+0000",
            "content": "\n> I've been meaning to create a handler like this...\n> I'm not sure that Token should be directly added to XMLWriter and friends though... seems more flexible for the handler to handle the transformation from token(s) to more primitive types.  Or did you actually add a <token> tag to the xml?\n> \n\nI've been using something similar \u2013 but it is implemented as a SearchComponent \u2013 it adds another bit to the response like highlighting does. \n\nIf possible, i think we should avoid custom XMLWriter implementations... the NamedList suff is a bit akward, but having stuff work in JSON/ruby/etc is a big deal "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12567956",
            "date": "2008-02-12T04:57:21+0000",
            "content": "OK, I will update tomorrow w/ primitives instead of the token tag.  I admit I don't fully understand the interplay between the other writers (JSON, etc.) so help would be appreciated there.\n\nAs for a SearchComponent piece, I'd like to hear more.  Does the SearchComponent  piece handle ContentStreams?  That is, could I just send my <add>...</add> to it and it would spit out the tokens?  On the query side of things, I think it would be useful to see how the query is analyzed, so that makes sense in a SearchComponent.  Perhaps we can find common code?\n\n\nGrant quick question because i can't tell by skimming the patch: is there any information currently returned by analysis.jsp that isn't returned by this handler? if not, we should consider adding it so that that JSP can go the way of hte DODO like the other JSPs are.\n\nIt only outputs the final token result, so you wouldn't be able to do the intermediate code output.  Also, I think the JSP does some fancy sorting for positions, etc.  I leave that up to the application.  But, yes, I did have a look at it and originally started using some of the code, then went away from it once I realized I didn't care whether it was a regular Analyzer or a TokenChain. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12567960",
            "date": "2008-02-12T05:20:12+0000",
            "content": "\nI admit I don't fully understand the interplay between the other writers (JSON, etc.) so help would be appreciated there.\n\nessentially the types supported by TextResponseWriter are automatically supported by the standard writers.  Check line 109 writeVal() in: http://svn.apache.org/repos/asf/lucene/solr/trunk/src/java/org/apache/solr/request/TextResponseWriter.java\n\n\n\nAs for a SearchComponent piece, I'd like to hear more.  Does the SearchComponent  piece handle ContentStreams?  That is, could I just send my <add>...</add> to it and it would spit out the tokens?  On the query side of things, I think it would be useful to see how the query is analyzed, so that makes sense in a SearchComponent.  Perhaps we can find common code?\n\nNo ContentStreams in the version I'm working with.  I am analyzing stored fields so the client can link directly to a valid 'filter'.  To see it in action, check:\nhttp://www.digitalcommonwealth.org/browse/archive:C%2FWMARS+Digital+Treasures+Respository/\n\nNote how the subject line gets split into linkable tokens.  Check that stored content \"Mass.\" actually links to \"/subject:Massachusetts/\"\n\nI've also found this really useful for debugging what tokens exist for given fields \u2013 of course it only works for stored fields.\n\nAfter you finish the handler version, I'll see what can be shared. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12568113",
            "date": "2008-02-12T13:39:33+0000",
            "content": "OK, here's an update with just primitive use, for better or worse.  It adds quite a bit of verbosity to a result, but such is life.   "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12568116",
            "date": "2008-02-12T13:47:11+0000",
            "content": "Interface is the most important part... can someone cut'n'paste what the input + output looks like for casual reviewers? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12568120",
            "date": "2008-02-12T13:58:54+0000",
            "content": "http://wiki.apache.org/solr/AnalysisRequestHandler "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12570562",
            "date": "2008-02-20T04:07:10+0000",
            "content": "Committed revision 629342. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-16672225",
            "date": "2018-11-01T21:17:40+0000",
            "content": "Resolved long time ago, but was not \"closed\". "
        }
    ]
}