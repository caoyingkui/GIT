{
    "id": "LUCENE-259",
    "title": "HTML Parser doesn't decode character references in attributes",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/examples"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.4",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "The HTML Parser includes the values of certain attributes in the summary, the\nmetaTags and the output stream.  Character references in the attribute values\nare not decoded.  Specifically:\n\n1. The value of the alt= attribute of an <img ...> tag is included in the\nsummary and the output stream.  This value is case-significant, and may include\ncharacter references.  The character references are not decoded.\n\n2. The value of the content= attribute of a <meta ...> tag is included in the\nmetaTags if the tag also has a name= or http-equiv= attribute.  This value is\ncase-significant, and may include character references.  The character\nreferences are not decoded, and the value is downcased (since the fix to bug\n#27423).\n\nI've patched our version of the parser to decode the character references, by\nadding a decodeAll method to Entities to parse a String for character references\nand return a String where the references have been replaced by the corresponding\ncharacters (or the original String, if no change is needed).  This method is\ncalled to decode alt= attributes and content= attributes.  I've removed the\n.toLowerCase() on the content= value.  I'm not really happy with this fix, as it\nseems to me to be wrong to parse a value which was previously parsed as a single\ntoken; there ought to be a way to get it right the first time.\n\nI've left the name= and http-equiv= values alone.  It's not entirely clear (to\nme) whether character references are allowed, and it would be perverse to use\nthem here.  I also appreciate the convenience of having a single combined\nnamespace, with downcased names, even though this is technically wrong.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2004-08-14T02:05:16+0000",
            "content": "\n\n\n\t\n\t\n\t\t\n\t\t\n\t\t\tThis bug has been marked as a duplicate of 30617 ***\n\t\t\n\t\t\n\t\n\t\n\n ",
            "author": "Daniel Naber",
            "id": "comment-12321815"
        },
        {
            "date": "2004-08-16T17:11:50+0000",
            "content": "This was no duplicate.  ",
            "author": "Daniel Naber",
            "id": "comment-12321816"
        },
        {
            "date": "2004-09-07T04:48:14+0000",
            "content": "Dave, there's no patch, or am I missing something (againg)? Or didn't you  \nattach your patch because you think your solution isn't clean enough? To me it  \nsounds okay.   ",
            "author": "Daniel Naber",
            "id": "comment-12321817"
        },
        {
            "date": "2004-09-07T16:15:27+0000",
            "content": "I didn't attach my patch because although it fixes the problem for us it's a\nkludge (IMO).  The text inside an attribute value is being parsed twice: the\ngrammar definition treats it as a simple string, and my patch then parses that\nstring to resolve the character references in <img alt=\"...\"> and <meta\ncontent=\"...\">; other attribute values are left alone.  I suspect that character\nreferences should be resolved in other attribute values such as <meta\nname=\"...\"> even though it should never be necessary to use a character\nreference here.  The HTML definition isn't entirely clear - perhaps the SGML\nstandard is clearer.\n\nSince the HTML parser is an example, it shouldn't include kludges like this\n(again, IMO).  The grammar describing an attribute value ought to be correct. \nSince I needed a quick fix, the kludge is sufficient for me.  No-one else has\ncomplained (yet) so I don't see any need to rush a poor solution into the\nreleased product. ",
            "author": "Dave Sparks",
            "id": "comment-12321818"
        },
        {
            "date": "2006-06-16T04:38:21+0000",
            "content": "Decrease priority because this affects the demo only. ",
            "author": "Daniel Naber",
            "id": "comment-12416412"
        },
        {
            "date": "2011-01-27T10:18:07+0000",
            "content": "Very long inactivity and the HtmlParser in demo has many problems in general \u2013 I don't think we intend to have a fully working HtmlParser in our code, it was intended for demo purposes only. ",
            "author": "Shai Erera",
            "id": "comment-12987477"
        }
    ]
}