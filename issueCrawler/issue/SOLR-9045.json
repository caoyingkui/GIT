{
    "id": "SOLR-9045",
    "title": "make RecoveryStrategy settings configurable",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "objectives:\n\n\tto allow users to change RecoveryStrategy settings such as maxRetries and startingRecoveryDelay\n\tto support configuration of a custom recovery strategy e.g. SOLR-9044\n\n\n\npatch summary:\n\n\tsupport for optional <recoveryStrategy> solrconfig.xml element added (if element is present then its class attribute is optional)\n\tRecoveryStrategy settings now have getters/setters\n\tRecoveryStrategy.Builder added (and RecoveryStrategy constructor made non-public in favour of RecoveryStrategy.Builder.create)\n\tprotected RecoveryStrategy.getReplicateLeaderUrl method factored out (ConfigureRecoveryStrategyTest$CustomRecoveryStrategyBuilder test illustrates how SOLR-9044 might override the method)\n\tConfigureRecoveryStrategyTest.java using solrconfig-configurerecoverystrategy.xml or solrconfig-customrecoverystrategy.xml\n\n\n\nillustrative solrconfig.xml snippets:\n\n\tchange a RecoveryStrategy setting\n\n  <recoveryStrategy>\n    <int name=\"maxRetries\">250</int>\n  </recoveryStrategy>\n\n\n\tconfigure a custom class\n\n  <recoveryStrategy class=\"org.apache.solr.core.ConfigureRecoveryStrategyTest$CustomRecoveryStrategyBuilder\">\n    <str name=\"alternativeBaseUrlProp\">recovery_base_url</str>\n  </recoveryStrategy>",
    "attachments": {
        "SOLR-9045.patch": "https://issues.apache.org/jira/secure/attachment/12857707/SOLR-9045.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-04-27T17:13:40+0000",
            "author": "Christine Poerschke",
            "content": "jira/solr-9045 working branch created. Comments and input on the idea itself and/or code reviews and/or collaboration, questions, etc. welcome as usual. Thank you. ",
            "id": "comment-15260508"
        },
        {
            "date": "2016-04-28T14:22:19+0000",
            "author": "Mark Miller",
            "content": "a custom recovery strategy\n\nConfiguration makes sense to me, but I don't think we should ever officially support a custom user impl. Even unofficially, it seems dangerous to even let users think they can customize this. We could perhaps do something like UpdateHandler, where you can do it, but you're crazy to do it unless you check your impl every release and only have minor changes to behavior (and even then it's crazy). ",
            "id": "comment-15262216"
        },
        {
            "date": "2016-04-28T14:26:44+0000",
            "author": "David Smiley",
            "content": "It'd be nice if this could be more clear as to what a \"RecoveryStrategy\" even is; maybe a longer name to clarify what it is that is being recovered?  I don't know what it is. ",
            "id": "comment-15262225"
        },
        {
            "date": "2016-04-29T13:10:31+0000",
            "author": "Christine Poerschke",
            "content": "\nConfiguration makes sense to me, but I don't think we should ever officially support a custom user impl. ...\n\nOkay, that rules out a RecoveryStrategyFactory then, configuration of settings can be done without a factory.\n\nIt'd be nice if this could be more clear as to what a \"RecoveryStrategy\" even is; ...\n\nI agree that the name(s) of any new configuration element(s) need not necessarily match the underlying class names. \n\nRecoveryStrategy currently has three settings which taken literally could translate into configuration something like this:\n\n<recoveryStrategy> <!-- class=\"solr.RecoveryStrategy\" attribute conspicuous by its absence -->\n  <int name=\"waitForUpdatesWithStaleStatePause\">7000</int>\n  <int name=\"maxRetries\">500</int>\n  <int name=\"startingRecoveryDelay\">5000</int>\n</recoveryStrategy>\n\n\n\nHow are the settings used?\n\n\twaitForUpdatesWithStaleStatePause's code mentions SOLR-7141 for discussion around current value.\n\tstartingRecoveryDelay is used to wait for an (exponential) interval between retries.\n\tmaxRetries determines how soon \"Recovery failed - I give up.\" happens.\n\n\n\n... We could perhaps do something like UpdateHandler, where you can do it, but you're crazy to do it unless you check your impl every release and only have minor changes to behavior (and even then it's crazy).\n\nI agree that configuring something other than the defaults is probably a bit of a niche use case. Replication via an alternative network interface (SOLR-9044) e.g. to separate out replication versus regular live within-cloud traffic would perhaps also be relatively niche (though technically only a minor change to behaviour) and opt-in to that could be via an additional configuration rather than a class derived from the existing RecoveryStrategy class.\n\nSo, it seems there's three alternatives.\n\n\tsolrconfig.xml element called <recoveryStrategy> similar to the <updateHandler> element and as illustrated above\n\tsolrconfig.xml element(s) called something else (similar to the <updateHandler> element?)\n\ttwo additional system properties \"solr.cloud.max-retries\" and \"solr.cloud.starting-recovery-delay\" (\"solr.cloud.wait-for-updates-with-stale-state-pause\" already exists)\n\n\n\nWhat do you think? ",
            "id": "comment-15264027"
        },
        {
            "date": "2016-05-01T21:29:38+0000",
            "author": "Mark Miller",
            "content": "I think doing it like UpdateHandler is probably fine, but that we should be explicit in comments / doc that custom impls are not really supported between versions in terms of API or behavior back compat. ",
            "id": "comment-15265952"
        },
        {
            "date": "2016-05-01T21:30:48+0000",
            "author": "Mark Miller",
            "content": "The name is really another issue. The history of the current name is that it was the first thing I thought of when prototyping. At the time, I probably imagined some other strategies. I no longer do. A rename should probably be done first if we are going to do it. ",
            "id": "comment-15265954"
        },
        {
            "date": "2016-05-04T17:12:23+0000",
            "author": "Christine Poerschke",
            "content": "\n... we should be explicit in comments / doc that custom impls are not really supported between versions ...\n\n... A rename should probably be done first if we are going to do it.\n\nI agree that any rename should be done first and that comments/docs should be very clear re: custom implementations being custom and there being no guarantees w.r.t. backwards compatibility or lack thereof.\n\nHow about renaming RecoveryStrategy to RecoveryImplementation (or something like it)? To indicate in name as well as comments/docs that the class is implementation and thus no assumptions should be made w.r.t. changes between versions. ",
            "id": "comment-15271011"
        },
        {
            "date": "2016-05-04T20:19:20+0000",
            "author": "David Smiley",
            "content": "How about renaming RecoveryStrategy to RecoveryImplementation (or something like it)\n\nMight it have what is being recovered?  Or say something like SolrCloudRecoveryImpl to at least give a sense of scope that it has to do with SolrCloud stuff?  Just a thought.  But then it's in the \"cloud\" package so perhaps nevermind.  My very first reaction was wondering if it was some sort of connection recovery thing. ",
            "id": "comment-15271368"
        },
        {
            "date": "2016-05-05T21:41:50+0000",
            "author": "Mark Miller",
            "content": "How about renaming RecoveryStrategy to RecoveryImplementation (or something like it)?\n\nTrying to think of what this actually is, and currently I'm around DataRecoveryRunner or something. ",
            "id": "comment-15273145"
        },
        {
            "date": "2016-05-05T21:46:45+0000",
            "author": "Mark Miller",
            "content": "Could be DataSynchronizationRunner or something too, but given it's the prime driver of the recovery status, I kind of like recovery in the name. Of course, tlog replay should probably be under recovery too, and that is very distinct from this class, so perhaps it's better it doesn't try and synergize with the recovery key word, as it really just may be a piece of the recovery puzzle longer term. ",
            "id": "comment-15273158"
        },
        {
            "date": "2016-05-09T13:25:29+0000",
            "author": "Mark Miller",
            "content": "What is the motivation for making this stuff configurable by the way? I really think we should make this mostly just work well in all situations rather than expose internal config that may change or should not really be necessary to tweak. ",
            "id": "comment-15276353"
        },
        {
            "date": "2016-05-09T14:10:51+0000",
            "author": "Christine Poerschke",
            "content": "Essentially SOLR-9044 is the motivation i.e. to support (somehow) configuration to use an alternative network interface (and the motivation for that being to separate copy-all-data recovery replication traffic from regular live within-cloud traffic).\n\nI would imagine SOLR-9044 would be done by optionally augmenting the cluster state with extra urls. The RecoveryStrategy configuration option would then be to opt-in to the use of the extra urls (i.e. the mere presence of the extra urls would not change RecoveryStrategy behaviour and if the recovery strategy opted-in to use the special urls then the absence of such urls should generate errors or warnings). ",
            "id": "comment-15276401"
        },
        {
            "date": "2016-05-19T09:41:52+0000",
            "author": "Christine Poerschke",
            "content": "jira/solr-9045 working branch updated.\n\nUpdated as yet without renaming of RecoveryStrategy but if renamed happened the rename would happen first.\n\nAs far as making it really clear in the comments and docs that custom implementations are not really supported between versions, that is also yet to be done, I'm not quite sure where best to add it (assuming the optional <recoveryStrategy> solrconfig.xml element would not be added to the example configs).\n\nWhat do you think? ",
            "id": "comment-15290806"
        },
        {
            "date": "2017-02-28T17:33:51+0000",
            "author": "Christine Poerschke",
            "content": "Working branch revived and 'custom implementations not officially supported' style comments added; the motivation here remains unchanged i.e. to support customisation/configuration of alternative network interfaces so that copy-all-data replication traffic can be separated from regular live within-cloud traffic.\n\nhttps://github.com/apache/lucene-solr/compare/jira/solr-9045 is the updated working branch, additional comments, reviews, etc. welcome as usual. Hoping to commit the changes sometime next week.\n\n(Have refrained from renaming RecoveryStrategy to something else since it wasn't obvious what the new name should be.) ",
            "id": "comment-15888516"
        },
        {
            "date": "2017-03-13T15:44:20+0000",
            "author": "Christine Poerschke",
            "content": "Merged latest master into working branch, attaching patch based on that i.e. diff(master, working-branch). ",
            "id": "comment-15907697"
        },
        {
            "date": "2017-03-13T18:48:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c8bad8c10ac52d89318932636b1e1401c314b5e4 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c8bad8c ]\n\nSOLR-9045: Make RecoveryStrategy settings configurable. ",
            "id": "comment-15922711"
        },
        {
            "date": "2017-03-13T18:50:24+0000",
            "author": "Christine Poerschke",
            "content": "Above commit is for master branch, intending to backport (tomorrow) to branch_6x for the upcoming 6.5 release. ",
            "id": "comment-15922720"
        },
        {
            "date": "2017-03-14T11:19:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a7e9dbc565b15b1516a923eeef9517e2343f89c0 in lucene-solr's branch refs/heads/branch_6x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a7e9dbc ]\n\nSOLR-9045: Make RecoveryStrategy settings configurable. ",
            "id": "comment-15924005"
        },
        {
            "date": "2017-03-14T13:10:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5aafea84948e9838dd2cd333c3e873bea176c9e8 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5aafea8 ]\n\nSOLR-9045: exclude static methods from ConfigureRecoveryStrategyTest.testAlmostAllMethodsAreFinal ",
            "id": "comment-15924140"
        },
        {
            "date": "2017-03-14T13:11:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 92bf7fcf459dd2c2408501f854c7c88c33b6894e in lucene-solr's branch refs/heads/branch_6x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=92bf7fc ]\n\nSOLR-9045: exclude static methods from ConfigureRecoveryStrategyTest.testAlmostAllMethodsAreFinal ",
            "id": "comment-15924141"
        },
        {
            "date": "2017-03-22T22:44:14+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I'm a bit too late to this discussion (being released right now as part of 6.5), but as part of the work in SOLR-10233, I was planning to make RecoveryStrategy an interface, with the current implementation being the default, but also add a new ReplicateOnlyRecoveryStrategy that skips peer sync, and jumps directly to replication particularly for \"Passive Replicas\" (or whatever name they end up having). Just FYI, feel free to comment in SOLR-10233 ",
            "id": "comment-15937304"
        }
    ]
}