{
    "id": "LUCENE-7439",
    "title": "Should FuzzyQuery match short terms too?",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Today, if you ask FuzzyQuery to match abcd with edit distance 2, it will fail to match the term ab even though it's 2 edits away.\n\nIts javadocs explain this:\n\n\n * <p>NOTE: terms of length 1 or 2 will sometimes not match because of how the scaled\n * distance between two terms is computed.  For a term to match, the edit distance between\n * the terms must be less than the minimum length term (either the input term, or\n * the candidate term).  For example, FuzzyQuery on term \"abcd\" with maxEdits=2 will\n * not match an indexed term \"ab\", and FuzzyQuery on term \"a\" with maxEdits=2 will not\n * match an indexed term \"abc\".\n\n\n\nOn the one hand, I can see that this behavior is sort of justified in that 50% of the characters are different and so this is a very \"weak\" match, but on the other hand, it's quite unexpected since edit distance is such an exact measure so the terms should have matched.\n\nIt seems like the behavior is caused by internal implementation details about how the relative (floating point) score is computed.  I think we should fix it, so that edit distance 2 does in fact match all terms with edit distance <= 2.",
    "attachments": {
        "LUCENE-7439.patch": "https://issues.apache.org/jira/secure/attachment/12827885/LUCENE-7439.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15473960",
            "author": "Tim Allison",
            "date": "2016-09-08T14:08:19+0000",
            "content": "Added link to LUCENE-5206.  +1 on fixing this.  Thank you! "
        },
        {
            "id": "comment-15479513",
            "author": "Michael McCandless",
            "date": "2016-09-10T09:38:14+0000",
            "content": "I was struggling to understand the control flow in\nFuzzyQuery/FuzzyTermsEnum, MultiTermQuery, TopTermsRewrite, etc., so\nas a first step here I cleaned up deprecated code and tried to\nsimplify FuzzyTermsEnum somewhat.\n\nThe attached patch is just this cleanup; it doesn't change the\nbehavior on short terms.\n\nAll tests pass and I confirmed performance (on Wikipedia) is\nunchanged.  I plan to first commit this cleanup (master only, removing\ndeprecations), and then separately tackle the short terms. "
        },
        {
            "id": "comment-15479884",
            "author": "Michael McCandless",
            "date": "2016-09-10T14:21:25+0000",
            "content": "Another iteration, just adding a randomized test, which seems to be passing. "
        },
        {
            "id": "comment-15485333",
            "author": "ASF subversion and git services",
            "date": "2016-09-12T21:23:49+0000",
            "content": "Commit faf3bc3134c6e5ba3e2caa15762524872e083152 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=faf3bc3 ]\n\nLUCENE-7439: clean up FuzzyQuery/FuzzyTermsEnum sources "
        },
        {
            "id": "comment-15486719",
            "author": "ASF subversion and git services",
            "date": "2016-09-13T09:04:30+0000",
            "content": "Commit 4db3e7b8a7ca818002af9041bf10660c25905915 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4db3e7b ]\n\nLUCENE-7439: improve test case "
        },
        {
            "id": "comment-15486759",
            "author": "ASF subversion and git services",
            "date": "2016-09-13T09:22:28+0000",
            "content": "Commit ba085d4c8487d43089295c7b145c77eba19497b4 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ba085d4 ]\n\nLUCENE-7439: back port test case to 6.x "
        },
        {
            "id": "comment-15486856",
            "author": "Michael McCandless",
            "date": "2016-09-13T10:15:25+0000",
            "content": "Here's a patch fixing FuzzyQuery to also accept small terms.\n\nWith the simplified FuzzyTermsEnum it was quite simple to fix it (remove the while loop), and to fix the test case to verify any term within the specified edit distance does match.\n\nThe one wrinkle is that such matches get a boost of 0.0, because the formula we use to compute the boost for a matched term (1.0 - editDistance / minTermLength) can be <= 0.  I think this is fair: such matches are poor quality compared to longer term matches. "
        },
        {
            "id": "comment-15494201",
            "author": "ASF subversion and git services",
            "date": "2016-09-15T18:44:43+0000",
            "content": "Commit c7fb49d7b50d171c6d787253b9ab575218fef7fe in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c7fb49d ]\n\nLUCENE-7439: FuzzyQuery now matches all terms within the specified edit distance, even if they are short "
        },
        {
            "id": "comment-15494332",
            "author": "ASF subversion and git services",
            "date": "2016-09-15T19:45:56+0000",
            "content": "Commit 471f90cf825ee3106fef1fa4c1094d0ca461e7fb in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=471f90c ]\n\nLUCENE-7439: FuzzyQuery now matches all terms within the specified edit distance, even if they are short "
        },
        {
            "id": "comment-15494335",
            "author": "ASF subversion and git services",
            "date": "2016-09-15T19:47:17+0000",
            "content": "Commit c79d44f82814d6d798450a422f73f42891cb1ef5 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c79d44f ]\n\nLUCENE-7439: move CHANGES entry "
        },
        {
            "id": "comment-15650209",
            "author": "Shalin Shekhar Mangar",
            "date": "2016-11-09T08:37:06+0000",
            "content": "Closing after 6.3.0 release. "
        },
        {
            "id": "comment-16148358",
            "author": "Tim Allison",
            "date": "2017-08-31T02:28:25+0000",
            "content": "Talk about slow on the uptake (no pun intended)... faf3bc3 removed SlowFuzzyQuery, and I realize it has been deprecated for a long, long time.  Is there any way to increase the maxEdits/MAXIMUM_SUPPORTED_DISTANCE to > 2? "
        }
    ]
}