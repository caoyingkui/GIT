{
    "id": "LUCENE-7283",
    "title": "Move SlowCompositeReaderWrapper and uninverting package to solr sources",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Spinoff from LUCENE-6766, where we fixed index-time sorting to have first class support in Lucene's ore, and no longer use SlowCompositeReaderWrapper.\n\nThis is a dangerous, long living class, that tries to pretend a set of N segments is actually just a single segment.  It's a leaky abstraction, has poor performance, and puts undue pressure on the APIs of new Lucene features to try to keep up this illusion.\n\nWith LUCENE-6766, finally all usage of this class (except for UninvertedReader tests, which should maybe also move out?) has been removed from Lucene, so I think we should move it to Solr.  This may also lead to a solution for LUCENE-7086 since e.g. the class could tap into solr's schema to \"know\" how to handle points fields properly.",
    "attachments": {
        "LUCENE-7283.patch": "https://issues.apache.org/jira/secure/attachment/12805430/LUCENE-7283.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15282723",
            "author": "David Smiley",
            "date": "2016-05-13T14:17:01+0000",
            "content": "Maybe it's worth asking on java-user@lucene.apache.org to get a sense from the community what they think?  I have no idea if it's used or not outside of Solr.  It's already outside core, which is good. "
        },
        {
            "id": "comment-15283551",
            "author": "Adrien Grand",
            "date": "2016-05-14T13:15:53+0000",
            "content": "I think it is fine to remove it from Lucene even if it is used in the wild. After all, our goal is that users stop using this class. If someone really needs the functionality, they can still fork the code?  "
        },
        {
            "id": "comment-15283554",
            "author": "David Smiley",
            "date": "2016-05-14T13:18:45+0000",
            "content": "Sure, +1. It's a simple class any way.  "
        },
        {
            "id": "comment-15294896",
            "author": "Michael McCandless",
            "date": "2016-05-21T10:29:57+0000",
            "content": "Here's a rote patch, moving SlowCompositeReaderWrapper and also the uninverted package from org.apache.lucene... to org.apache.solr.... "
        },
        {
            "id": "comment-15295419",
            "author": "Ishan Chattopadhyaya",
            "date": "2016-05-22T06:06:59+0000",
            "content": "+1, thanks Mike. "
        },
        {
            "id": "comment-15300020",
            "author": "ASF subversion and git services",
            "date": "2016-05-25T13:21:13+0000",
            "content": "Commit baa5344e688faf1f45845d52ec236e165b519bda in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=baa5344 ]\n\nLUCENE-7283: move SlowCompositeReaderWrapper and uninverting to solr "
        },
        {
            "id": "comment-15300097",
            "author": "David Smiley",
            "date": "2016-05-25T14:08:48+0000",
            "content": "Will this be master only or also 6x?  I'm not sure what the Lucene user community might think about both UninvertingReader and SlowCompositeReaderWrapper capability disappearing on them in 6.1.  Granted most consumers of Lucene are through ES or Solr but it would be a shame not to consider direct Lucene users.  Neither of these classes are marked experimental.\n\np.s. please update the description to include UninvertingReader (which is much larger in scope than just SCW and unrelated to SCW) "
        },
        {
            "id": "comment-15300144",
            "author": "ASF subversion and git services",
            "date": "2016-05-25T14:33:50+0000",
            "content": "Commit 50572bf0b3ebcd4cfba03c1da3459da90106db68 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=50572bf ]\n\nLUCENE-7283: deprecate SlowCompositeReaderWrapper and uninverting package "
        },
        {
            "id": "comment-15300149",
            "author": "Michael McCandless",
            "date": "2016-05-25T14:35:19+0000",
            "content": "Will this be master only or also 6x?\n\nI just deprecated for 6.1.\n\nGranted most consumers of Lucene are through ES or Solr but it would be a shame not to consider direct Lucene users.\n\nI try hard to remember the Lucene direct users too!\n\np.s. please update the description to include UninvertingReader (which is much larger in scope than just SCW and unrelated to SCW)\n\nOK will do. "
        },
        {
            "id": "comment-15304307",
            "author": "ASF subversion and git services",
            "date": "2016-05-27T16:42:22+0000",
            "content": "Commit 5525f429288cf8480ae7b6dc1438918e809a242c in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5525f42 ]\n\nSOLR-9160: Sync 6x and 7.0 move of UninvertingReader, SlowCompositeReaderWrapper for Solr (LUCENE-7283) "
        },
        {
            "id": "comment-15558249",
            "author": "Yonik Seeley",
            "date": "2016-10-08T16:24:16+0000",
            "content": "p.s. please update the description to include UninvertingReader (which is much larger in scope than just SCW and unrelated to SCW)\n\nIndeed, the original JIRA description of \"Move SlowCompositeReaderWrapper to solr sources\" doesn't begin to describe the impact this issue will have on normal Lucene users in 7.0.  I imagine they will be quite surprised to see everything about the FieldCache removed and left with no ability to Sort on an indexed-only field.\n\nIt really seems like there should be a lot more consensus around removing functionality on this scale. "
        },
        {
            "id": "comment-15558552",
            "author": "Michael McCandless",
            "date": "2016-10-08T19:12:27+0000",
            "content": "I imagine they will be quite surprised to see everything about the FieldCache removed and left with no ability to Sort on an indexed-only field.\n\nI doubt that.\n\nIn ancient Lucene versions, sorting was not a \"first class citizen\" and hacks like field cache were necessary.\n\nBut then, long ago, we added doc values, and we've been saying for years now that if you want to sort by X you need to index X as doc values.  This change (in 7.0 only, just deprecated in 6.x) should come as a surprise to nobody.\n\nDoc values are far more efficient than the the legacy field cache: no up front penalty the first time you sort on the field, no massive heap usage, no heavy full GC cost. Instead the OS manages the hot pages and swaps as necessary, thanks to efficient doc values codec formats.\n\nAnd such theoretical users have plenty of options: they can use Solr, or only use UninvertingReader or SlowCompositeReaderWrapper out of Solr's sources, or fork them for their own purposes, or reindex with the much-more-efficient doc values.\n\nSuch horribly inefficient legacy code really does not belong in Lucene (or Solr!). "
        },
        {
            "id": "comment-15558656",
            "author": "Yonik Seeley",
            "date": "2016-10-08T20:25:37+0000",
            "content": "In ancient Lucene versions, sorting was not a \"first class citizen\" and hacks like field cache were necessary.\n\nYes, a hack that has been with us for more than 12 years already (FieldCache came about in 2004).\n\nBest practice is one thing (Solr uses docvalues by default), but removing the option is different.\n\nAfter a quick google, it doesn't appear like you're removing this ability from elasticsearch (fielddata is the ES equivalent of the Lucene FieldCache):\nhttps://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-fielddata.html\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/fielddata.html\n "
        },
        {
            "id": "comment-15559753",
            "author": "Adrien Grand",
            "date": "2016-10-09T10:26:01+0000",
            "content": "On the other hand, doc values have been there for 4 years now. Like Solr, Elasticsearch has some history with FieldCache which makes the removal take time. But it is on the way out: the upcoming release based on Lucene 6 will only allow it on text fields, and as an opt-in (disabled by default) and all other fields (numerics, keywords, etc.) will enforce usage of doc values for sorting or faceting. And I truly hope that we can entirely get rid of it when we upgrade to Lucene 7. Now that we have had doc values for 4 years, I think it's really time to get rid of FieldCache. Apps that truly need it for a bit longer for backward compatibility guarantees can still fork the code like Mike suggested. "
        },
        {
            "id": "comment-15560036",
            "author": "Yonik Seeley",
            "date": "2016-10-09T14:04:12+0000",
            "content": "I think it's really time to get rid of FieldCache\n\nI may have missed it, but I didn't see any mailing list discussion (or any other discussion) around this.\nThe main takeaway here is a reminder that consensus around bigger decisions needs to be done in the open. "
        }
    ]
}