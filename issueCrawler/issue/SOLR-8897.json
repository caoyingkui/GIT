{
    "id": "SOLR-8897",
    "title": "SSL-related passwords in solr.in.sh are in plain text",
    "details": {
        "components": [
            "scripts and tools",
            "security"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Duplicate",
        "priority": "Major"
    },
    "description": "As per the steps mentioned at following URL, one needs to store the plain text password for the keystore to configure SSL for Solr, which is not a good idea from security perspective.\nURL: https://cwiki.apache.org/confluence/display/solr/Enabling+SSL#EnablingSSL-SetcommonSSLrelatedsystemproperties (https://cwiki.apache.org/confluence/display/solr/Enabling+SSL#EnablingSSL-SetcommonSSLrelatedsystemproperties)\nIs there any way so that the encrypted password can be stored (instead of plain password) in solr.in.cmd/solr.in.sh to configure SSL?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-14T12:20:09+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "For the problem of revealing passwords in solr.in.sh, would it help to point to an external file for retrieving the SSL passwords? e.g. SOLR_SSL_CONFIGFILE=/var/secret/ssl-passwords.txt?\n\nI'm not sure if we can avoid passing the passwords to Jetty using sysprops. However, we can avoid passwords being exposed in the Admin UI \"Args\" section by showing ***** instead of password? Probably need to be done on REST API level? ",
            "id": "comment-15575180"
        },
        {
            "date": "2016-11-07T14:10:25+0000",
            "author": "Marcel Berteler",
            "content": "A slightly better way than using clear txt is using the obfuscated (OBF) version of the password which can be generated using the password utility that comes with Jetty.\n\nhttp://wiki.eclipse.org/Jetty/Howto/Secure_Passwords\n ",
            "id": "comment-15644273"
        },
        {
            "date": "2017-02-22T09:53:47+0000",
            "author": "Marcel Berteler",
            "content": "OK, so I just discovered the hard way that using obfuscated passwords is only working partially. SOLR 6.4.1 in cloud mode starts, the Admin UI is usable, but some of the collection API's don't and will report a \"Keystore was tampered with, or password was incorrect\" error. ",
            "id": "comment-15877881"
        },
        {
            "date": "2017-07-14T12:03:36+0000",
            "author": "Marcel Berteler",
            "content": "Issue still persistent in version 6.6.0.\n\nWhen using obfuscated passwords, starting SOLR in stand alone mode results in errors, although it does seem to start and has the correct certificate when browsing the Admin UI.\n\nINFO\u00a0 - 2017-07-14 13:50:30.105; org.apache.http.impl.client.DefaultRequestDirector; Retrying connect to \n{s}->https://localhost:443\n\nINFO\u00a0 - 2017-07-14 13:50:30.108; org.apache.http.impl.client.DefaultRequestDirector; I/O exception (java.net.SocketException) caught when connecting to {s}\n->https://localhost:443: java.security.NoSuchAlgorithmException: Error constructing implementation (algorithm: Default, provider:\u00a0SunJSSE, class: sun.security.ssl.SSLContextImpl$DefaultSSLContext) ",
            "id": "comment-16087226"
        },
        {
            "date": "2017-07-14T12:17:33+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Closing as duplicate of SOLR-10307\nThat functionality is currently not released. Expected in 7.0.0 (and perhaps in 6.7 if that version is ever released) ",
            "id": "comment-16087244"
        },
        {
            "date": "2018-06-26T14:52:46+0000",
            "author": "Ian",
            "content": "Thanks Marcel Berteler\u00a0for pointing out that the Jetty password utility doesn't work with the collection API.\nThat was one of the suggestions I was looking into\u00a0from this thread from 2016\nhttp://lucene.472066.n3.nabble.com/Prevent-the-SSL-Keystore-and-Truststore-password-from-showing-up-in-the-Solr-Admin-and-Linux-process-td4257422.html\n\nJan H\u00f8ydahl Is there an open ticket about not showing the password in the Solr Portal UI as you suggest?\nAlso this solution from SOLR-10307 which has marked this issue as a duplicate, resolves the issue by using environment variables.\nI don't think this is much of an improvement, see https://diogomonica.com/2017/03/27/why-you-shouldnt-use-env-variables-for-secret-data/\n(There is another solution referenced of using Hadoop, but that doesn't apply to me)\n\nFor reference I'm using Solr 6.6 on Windows.\n\nThis is my first time posting here, so not sure on the protocols.\nCan this ticket be re-raised/split?\nTo solve storing the password securely at\u00a0rest (If that the Jetty password Utility or other mechanism, my main language is not Java, what's best practice?)\nNot exposed in the UI.\nNot expose the password to other processes, likely to be caught in memory/crash dumps.\nUpdate the documentation to show how can configure Solr HTTPS password certificates securely, (Even 7.2 still shows setting the password in plain text in solr.in.cmd - https://lucene.apache.org/solr/guide/7_2/enabling-ssl.html)\n\nThanks in advance, let me know how I can help. ",
            "id": "comment-16523832"
        }
    ]
}