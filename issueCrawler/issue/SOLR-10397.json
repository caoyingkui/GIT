{
    "id": "SOLR-10397",
    "title": "Port 'autoAddReplicas' feature to the autoscaling framework and make it work with non-shared filesystems",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.1",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Currently 'autoAddReplicas=true' can be specified in the Collection Create API to automatically add replicas when a replica becomes unavailable. I propose to move this feature to the autoscaling cluster policy rules design.\n\nThis will include the following:\n\n\tTrigger support for \u2018nodeLost\u2019 event type\n\tModification of existing implementation of \u2018autoAddReplicas\u2019 to automatically create the appropriate \u2018nodeLost\u2019 trigger.\n\tAny such auto-created trigger must be marked internally such that setting \u2018autoAddReplicas=false\u2019 via the Modify Collection API should delete or disable corresponding trigger.\n\tSupport for non-HDFS filesystems while retaining the optimization afforded by HDFS i.e. the replaced replica can point to the existing data dir of the old replica.\n\tDeprecate/remove the feature of enabling/disabling \u2018autoAddReplicas\u2019 across the entire cluster using cluster properties in favor of using the suspend-trigger/resume-trigger APIs.\n\n\n\nThis will retain backward compatibility for the most part and keep a common use-case easy to enable as well as make it available to more people (i.e. people who don't use HDFS).",
    "attachments": {
        "SOLR-10397_remove_nocommit.patch": "https://issues.apache.org/jira/secure/attachment/12887802/SOLR-10397_remove_nocommit.patch",
        "SOLR-10397.2.patch": "https://issues.apache.org/jira/secure/attachment/12877282/SOLR-10397.2.patch",
        "SOLR-10397.1.patch": "https://issues.apache.org/jira/secure/attachment/12874827/SOLR-10397.1.patch",
        "SOLR-10397.patch": "https://issues.apache.org/jira/secure/attachment/12872199/SOLR-10397.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-31T15:24:12+0000",
            "content": "Sounds good to me. ",
            "author": "Mark Miller",
            "id": "comment-15951121"
        },
        {
            "date": "2017-04-18T03:46:34+0000",
            "content": "This issue depends on SOLR-10396  ",
            "author": "Cao Manh Dat",
            "id": "comment-15972082"
        },
        {
            "date": "2017-06-09T04:21:35+0000",
            "content": "Initial patch for this ticket. Only AutoAddReplicasPlanAction is a stub right now, waiting for SOLR-10496 ",
            "author": "Cao Manh Dat",
            "id": "comment-16043907"
        },
        {
            "date": "2017-06-28T08:29:19+0000",
            "content": "Implementation of AutoAddReplicasPlanAction, waiting for SOLR-10965 to remove the old implementation of autoAddReplicas. ",
            "author": "Cao Manh Dat",
            "id": "comment-16066134"
        },
        {
            "date": "2017-06-28T08:38:42+0000",
            "content": "Committed to feature/autoscaling branch (https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=5232e36ce5503b79d635e01db810909ed4d3e40d) ",
            "author": "Cao Manh Dat",
            "id": "comment-16066146"
        },
        {
            "date": "2017-06-29T16:04:51+0000",
            "content": "Thanks Dat. I looked at the autoscaling branch and reviewed the test mostly. A few comments:\n\n\tThe code which creates the set of coreNodeNames on the lost node isn't correct because multiple cores can have the same coreNodeName if they belong to different collections. Moreover, there is no guarantee that the node we shut down actually had replicas from multiple collections. So we need a better logic to assert that no replica belonging to a collection that has autoAddReplicas=false is moved on nodeLost event.\n\tWhy remove the implicitly created trigger in AutoAddReplicasPlanActionTest.testSimple? I presume it is because you want to explicitly create the AutoAddReplicasPlanAction which is fine but in that case, a proper end-to-end integration test is also necessary.\n\n\n\nI'd appreciate if Noble Paul can review the changes to Policy and relevant test coverage. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16068534"
        },
        {
            "date": "2017-06-30T02:52:41+0000",
            "content": "Shalin Shekhar Mangar \n1. Yeah, that's a good notice, I will fix that soon.\n2. We can not do the integration test if we do not have ExecutePlanAction, and AutoAddReplicasPlanActionTest.testSimple is a test for AutoAddReplicasPlanAction only so I removed created trigger to ensure that in the future we do not have to touch that test. ",
            "author": "Cao Manh Dat",
            "id": "comment-16069392"
        },
        {
            "date": "2017-06-30T05:08:23+0000",
            "content": "changes to Policy LGTM. Please a dd a relevant testcase to TestPolicy . Integration tests are hard to debug  ",
            "author": "Noble Paul",
            "id": "comment-16069485"
        },
        {
            "date": "2017-07-03T08:07:38+0000",
            "content": "Thanks Noble Paul, I added the test. ",
            "author": "Cao Manh Dat",
            "id": "comment-16072095"
        },
        {
            "date": "2017-07-12T12:04:56+0000",
            "content": "Linking SOLR-11045 as blocker ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16083878"
        },
        {
            "date": "2017-07-12T12:08:53+0000",
            "content": "We also need to throw exception if cluster properties API is used to enable/disable autoAddReplicas. The response message should indicate that the user must use the suspend-trigger/resume-trigger API for the same. Alternately, we can deprecate it but make it work by automatically suspending the .autoAddReplicas trigger.\n\nSee https://lucene.apache.org/solr/guide/6_6/running-solr-on-hdfs.html#RunningSolronHDFS-TemporarilydisableautoAddReplicasfortheentirecluster ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16083881"
        },
        {
            "date": "2017-07-12T12:18:54+0000",
            "content": "Linking SOLR-11011 as blocker. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16083891"
        },
        {
            "date": "2017-07-14T11:28:54+0000",
            "content": "A patch on removing OverseerAutoReplicaFailoverThread, there are couple of limitations here\n\n\tOverseerFailover is not guaranteed ( we should tackle this problem in another issue )\n\tAutoAddReplicas is triggered by NodeLost event, so when we switch autoAddReplicas from off to on nothing happen. I think this is ok. (Mark Miller do you think this will be ok?)\n\n\n\nShalin Shekhar Mangar should we commit this patch? ",
            "author": "Cao Manh Dat",
            "id": "comment-16087201"
        },
        {
            "date": "2017-07-17T07:06:24+0000",
            "content": "Thanks Dat.\n\nOverseerFailover is not guaranteed ( we should tackle this problem in another issue )\n\nI've opened SOLR-11085 for improving resiliency of actions against overseer failures.\n\nAutoAddReplicas is triggered by NodeLost event, so when we switch autoAddReplicas from off to on nothing happen. I think this is ok.\n\nI'm inclined to remove the quirk in how autoAddReplicas used to work and I don't think we need to support it. Please ensure that both the deprecation of the cluster property and the change in this behavior is documented in CHANGES.txt under the upgrade notes section.\n\nA few things I noticed in the patch:\n\n\tTypo in AutoAddReplicasIntergrationTest (intergration instead of integration)\n\tsame as above in HdfsAutoAddReplicasIntergrationTest\n\tThere is a large block of code commented out in SharedFSAutoReplicaFailoverTest. Please remove it if it is no longer needed.\n\tThe TestPolicy.testMoveReplicasInMultipleCollections does not seem like a very useful test. All it is testing is that some operation is returned. It should be testing that only the hinted collections' replicas are moved and that no operation is returned if there are no replicas belonging to the collection on the node that went down\n\tminor nit \u2013 autoAddReplicas != null && autoAddReplicas.equals(\"false\") can be simplified to !Boolean.parseBoolean(autoAddReplicas)\n\ttypo in comment \"Waitting\" in waitForState calls in AutoAddReplicasIntergrationTest.testSimple\n\tThe return value for waitForAllActiveAndLiveReplicas in the tests should be asserted to be true otherwise even after timeout the test silently proceeds to succeed.\n\tI am seeing some thread leak failures in HdfsAutoAddReplicasIntergrationTest:\n\nNOTE: reproduce with: ant test  -Dtestcase=HdfsAutoAddReplicasIntergrationTest -Dtests.seed=EF1C283E3B67B9EE -Dtests.locale=mk-MK -Dtests.timezone=Etc/GMT-2 -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\nTest ignored.\n\ncom.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:\n   1) Thread[id=685, name=ForkJoinPool.commonPool-worker-0, state=TIMED_WAITING, group=TGRP-HdfsAutoAddReplicasIntergrationTest]\n        at sun.misc.Unsafe.park(Native Method)\n        at java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1824)\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1693)\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\n   2) Thread[id=686, name=ForkJoinPool.commonPool-worker-7, state=WAITING, group=TGRP-HdfsAutoAddReplicasIntergrationTest]\n        at sun.misc.Unsafe.park(Native Method)\n        at java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1824)\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1693)\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\n   3) Thread[id=687, name=ForkJoinPool.commonPool-worker-1, state=WAITING, group=TGRP-HdfsAutoAddReplicasIntergrationTest]\n        at sun.misc.Unsafe.park(Native Method)\n        at java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1824)\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1693)\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\n\n\tat __randomizedtesting.SeedInfo.seed([EF1C283E3B67B9EE]:0)\n\n\n\n ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16089405"
        },
        {
            "date": "2017-07-18T07:52:29+0000",
            "content": "Thanks Shalin Shekhar Mangar, here are an updated patch based on your hints.  ",
            "author": "Cao Manh Dat",
            "id": "comment-16091245"
        },
        {
            "date": "2017-07-27T12:00:48+0000",
            "content": "Updated patch for this ticket, SharedFSAutoReplicaFailoverTest passed ( we skipped Overseer failover test, we can fix this problem in another issue ).  ",
            "author": "Cao Manh Dat",
            "id": "comment-16103106"
        },
        {
            "date": "2017-07-28T14:45:43+0000",
            "content": "Committed to feature/autoscaling branch. I think we can open another issue for other problems. ",
            "author": "Cao Manh Dat",
            "id": "comment-16105054"
        },
        {
            "date": "2017-09-19T01:34:33+0000",
            "content": "This patch removes the nocommit in Overseer. It moves the creation of .auto_add_replicas trigger to the OverseerTriggerThread where the trigger is directly added to the znode without going through the autoscaling handler API. This is ready. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16170979"
        },
        {
            "date": "2017-09-19T01:59:03+0000",
            "content": "+1 looks great. ",
            "author": "Cao Manh Dat",
            "id": "comment-16170992"
        },
        {
            "date": "2017-10-17T11:03:35+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16207335"
        },
        {
            "date": "2017-10-31T08:06:46+0000",
            "content": "Commit ce61a59ecda9740ec0bc21af07ba02e45d413cad in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ce61a59 ]\n\nSOLR-10397: Fix test failures ",
            "author": "ASF subversion and git services",
            "id": "comment-16226430"
        },
        {
            "date": "2017-10-31T08:08:04+0000",
            "content": "Commit 0f9012009b36c1339e63d1b8e104b920d178be13 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0f90120 ]\n\nSOLR-10397: Remove unused imports ",
            "author": "ASF subversion and git services",
            "id": "comment-16226432"
        },
        {
            "date": "2017-10-31T08:08:46+0000",
            "content": "Commit ec3e65e3f5803b5005c45cc9d1c03de3b97382e5 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ec3e65e ]\n\nSOLR-10397: Fix test failures ",
            "author": "ASF subversion and git services",
            "id": "comment-16226433"
        },
        {
            "date": "2017-10-31T08:08:49+0000",
            "content": "Commit 11bb7b75fb32781b34ed94bd420ecfd3e6adf8e5 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=11bb7b7 ]\n\nSOLR-10397: Remove unused imports ",
            "author": "ASF subversion and git services",
            "id": "comment-16226434"
        }
    ]
}