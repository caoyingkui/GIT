{
    "id": "LUCENE-280",
    "title": "Waiting for Vector in org.apache.lucene.index.FieldInfos.fieldInfo",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.2",
        "resolution": "Duplicate",
        "status": "Closed"
    },
    "description": "Running lucene-1.2.jar for product searching on WebLogic 8.1, Solaris 8, 4 CPU \nclustered config.  While under index searching load across the CPUs, the app \nserver Execute Queue piled up after not releasing threads.  After completing a \nthread dump, the common factor between them was the threads were in a wait \nstate while watiting for a Vector in \norg.apache.lucene.index.FieldInfos.fieldInfo.  To solve, we cycled the web \ncontainer on the app server, which released the threads.\n\nHere is the output of the CPU usage on the OS (Solaris 8):\n\n   PID USERNAME  SIZE   RSS STATE  PRI NICE      TIME  CPU PROCESS/LWPID\n  5089 weblogic 1769M 1544M run     22    0   0:06.25 6.0% java/15\n  5089 weblogic 1769M 1544M run     21    0   0:04.38 6.0% java/12\n  5089 weblogic 1769M 1544M run     20    0   0:05.16 6.0% java/14\n  5089 weblogic 1769M 1544M run     22    0   0:07.44 5.9% java/18\n  5089 weblogic 1769M 1544M run     21    0   0:14.29 5.8% java/23\n  5089 weblogic 1769M 1544M run     21    0   0:17.46 5.7% java/24\n  5089 weblogic 1769M 1544M run     20    0   0:13.07 5.7% java/22\n  5089 weblogic 1769M 1544M run     22    0   0:07.23 5.6% java/17\n  5089 weblogic 1769M 1544M run     21    0   0:27.52 5.5% java/25\n  5089 weblogic 1769M 1544M run     21    0   0:06.05 5.5% java/20\n  5089 weblogic 1769M 1544M run     22    0   0:07.00 5.5% java/16\n  5089 weblogic 1769M 1544M run     21    0   0:15.11 5.4% java/21\n  5089 weblogic 1769M 1544M run     22    0   0:04.40 5.4% java/13\n  5089 weblogic 1769M 1544M cpu1    22    0   0:06.29 5.4% java/19\n  5089 weblogic 1769M 1544M sleep   58    0   0:00.36 0.7% java/38\nTotal: 1 processes, 51 lwps, load averages: 8.56, 8.96, 7.89\n\nHere is the output of the app server thread dump:\n\n\"ExecuteThread: '6' for queue: 'weblogic.kernel.Default'\" daemon prio=5 \ntid=0x8b5c68 nid=0x11 waiting for monitor entry [8de7f000..8de819bc]\n        at java.util.Vector.elementAt(Vector.java:426)\n\n\twaiting to lock <9de7ef28> (a java.util.Vector)\n        at org.apache.lucene.index.FieldInfos.fieldInfo(Unknown Source)\n        at org.apache.lucene.index.FieldInfos.fieldName(Unknown Source)\n        at org.apache.lucene.index.SegmentTermEnum.readTerm(Unknown Source)\n        at org.apache.lucene.index.SegmentTermEnum.next(Unknown Source)\n        at \ncom.comergent.reference.appservices.productService.search.query.SearchPriceFilte\nr.bits(SearchPriceFilter.java:96)\n        at com.comergent.api.appservices.search.query.CmgtFilter.bits\n(CmgtFilter.java:98)\n        at org.apache.lucene.search.IndexSearcher.search(Unknown Source)\n        at org.apache.lucene.search.Hits.getMoreDocs(Unknown Source)\n        at org.apache.lucene.search.Hits.hitDoc(Unknown Source)\n        at org.apache.lucene.search.Hits.doc(Unknown Source)\n        at \ncom.comergent.reference.appservices.productService.controller.SearchResultBuilde\nr.getProdScoresAndTrim(SearchResultBuilder.java:274)\n        at \ncom.comergent.reference.appservices.productService.controller.ProductListBuilder\n.process(ProductListBuilder.java:71)\n        at \ncom.comergent.reference.appservices.productService.controller.CatalogSearchResul\ntController.processResult(CatalogSearchResultController.java:211)\n        at \ncom.comergent.reference.appservices.productService.controller.CatalogSearchResul\ntController.execute(CatalogSearchResultController.java:153)\n        at com.comergent.dcm.core.DispatchServlet.executeController\n(DispatchServlet.java:725)\n        at com.comergent.dcm.core.DispatchServlet.doExecute\n(DispatchServlet.java:688)\n        at com.comergent.dcm.core.DispatchServlet.execute\n(DispatchServlet.java:576)\n        at com.comergent.dcm.core.ComergentResponse.localRedirect\n(ComergentResponse.java:92)\n        at com.comergent.dcm.core.ComergentResponse.localRedirect\n(ComergentResponse.java:73)\n        at \ncom.comergent.reference.apps.catalog.controller.CatalogAdvancedSearchController.\nexecute(CatalogAdvancedSearchController.java:125)\n        at com.comergent.dcm.core.DispatchServlet.executeController\n(DispatchServlet.java:725)\n        at com.comergent.dcm.core.DispatchServlet.doExecute\n(DispatchServlet.java:688)\n        at com.comergent.dcm.core.DispatchServlet.execute\n(DispatchServlet.java:576)\n        at com.comergent.dcm.core.ComergentResponse.localRedirect\n(ComergentResponse.java:118)\n        at \ncom.comergent.dcm.authentication.LoginController.executePostLoginMessageType\n(LoginController.java:171)\n        at com.comergent.dcm.authentication.LoginController.execute\n(LoginController.java:86)\n        at com.comergent.dcm.core.DispatchServlet.executeController\n(DispatchServlet.java:725)\n        at com.comergent.dcm.core.DispatchServlet.doExecute\n(DispatchServlet.java:688)\n        at com.comergent.dcm.core.DispatchServlet.execute\n(DispatchServlet.java:576)\n        at com.comergent.dcm.core.ComergentResponse.localRedirect\n(ComergentResponse.java:118)\n        at \ncom.comergent.dcm.authentication.LoadLoginController.loginInWindowRedirect\n(LoadLoginController.java:52)\n        at com.comergent.dcm.authentication.LoadLoginController.execute\n(LoadLoginController.java:30)\n        at com.comergent.dcm.core.DispatchServlet.executeController\n(DispatchServlet.java:725)\n        at com.comergent.dcm.core.DispatchServlet.doExecute\n(DispatchServlet.java:688)\n        at com.comergent.dcm.core.DispatchServlet.execute\n(DispatchServlet.java:576)\n        at com.comergent.dcm.core.ComergentResponse.forwardLocally\n(ComergentResponse.java:142)\n        at com.comergent.dcm.core.DispatchServlet.execute\n(DispatchServlet.java:591)\n        at com.comergent.dcm.core.DispatchServlet.dispatch\n(DispatchServlet.java:206)\n        at com.comergent.dcm.core.DispatchServlet.doPost\n(DispatchServlet.java:119)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:760)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run\n(ServletStubImpl.java:1053)\n        at weblogic.servlet.internal.ServletStubImpl.invokeServlet\n(ServletStubImpl.java:387)\n        at weblogic.servlet.internal.ServletStubImpl.invokeServlet\n(ServletStubImpl.java:305)\n        at \nweblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run\n(WebAppServletContext.java:6310)\n        at weblogic.security.acl.internal.AuthenticatedSubject.doAs\n(AuthenticatedSubject.java:317)\n        at weblogic.security.service.SecurityManager.runAs\n(SecurityManager.java:118)\n        at weblogic.servlet.internal.WebAppServletContext.invokeServlet\n(WebAppServletContext.java:3622)\n        at weblogic.servlet.internal.ServletRequestImpl.execute\n(ServletRequestImpl.java:2569)\n        at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:197)\n        at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:170)\n\n\n\n\n\nAlso, found this posting on the internet:\nhttp://java2.5341.com/msg/72356.html\n\nAre synchronized objects necessary in FieldInfos\n2004-07-08       - By Aviran\n\n Back\nHi all, \nFirst let me explain what I found out. I 'm running Lucene on a 4 CPU server. \nWhile doing some stress tests I 've noticed that searching threads are \nblocked on the method: public FieldInfo fieldInfo(int fieldNumber) \nThis causes for a significant cpu idle time. I noticed that the class \norg.apache.lucene.index.FieldInfos uses private class members Vector \nbyNumber and Hashtable byName, both of which are synchronized objects. By \nchanging the Vector byNumber to ArrayList byNumber I was able to get 110% \nimprovement in performance (number of searches per second). \n\nMy question is: do the fields byNumber and byName have to be synchronized \nand what can happen if I 'll change them to be ArrayList and HashMap which \nare not synchronized ?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2004-09-23T02:29:43+0000",
            "content": "This change (to HashMap and ArrayList) has already been commited to CVS a few \nweeks ago. \n\n\n\t\n\t\n\t\t\n\t\t\n\t\t\tThis bug has been marked as a duplicate of 30058 ***\n\t\t\n\t\t\n\t\n\t\n\n ",
            "author": "Daniel Naber",
            "id": "comment-12321919"
        }
    ]
}