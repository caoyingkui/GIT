{
    "id": "SOLR-7642",
    "title": "Should launching Solr in cloud mode using a ZooKeeper chroot create the chroot znode if it doesn't exist?",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "If you launch Solr for the first time in cloud mode using a ZooKeeper connection string that includes a chroot leads to the following initialization error:\n\n\nERROR - 2015-06-05 17:15:50.410; [   ] org.apache.solr.common.SolrException; null:org.apache.solr.common.cloud.ZooKeeperException: A chroot was specified in ZkHost but the znode doesn't exist. localhost:2181/lan\n        at org.apache.solr.core.ZkContainer.initZooKeeper(ZkContainer.java:113)\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:339)\n        at org.apache.solr.servlet.SolrDispatchFilter.createCoreContainer(SolrDispatchFilter.java:140)\n        at org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:110)\n        at org.eclipse.jetty.servlet.FilterHolder.initialize(FilterHolder.java:138)\n        at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:852)\n        at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:298)\n        at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1349)\n        at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)\n        at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:741)\n        at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:505)\n\n\n\nThe work-around for this is to use the scripts/cloud-scripts/zkcli.sh script to create the chroot znode (bootstrap action does this).\n\nI'm wondering if we shouldn't just create the znode if it doesn't exist? Or is that some violation of using a chroot?",
    "attachments": {
        "SOLR-7642_tag_7.5.0.patch": "https://issues.apache.org/jira/secure/attachment/12943468/SOLR-7642_tag_7.5.0.patch",
        "SOLR-7642_tag_7.5.0_proposition.patch": "https://issues.apache.org/jira/secure/attachment/12945036/SOLR-7642_tag_7.5.0_proposition.patch",
        "SOLR-7642.patch": "https://issues.apache.org/jira/secure/attachment/12773563/SOLR-7642.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-06-05T17:37:54+0000",
            "author": "Timothy Potter",
            "content": "This only affects 5.x and beyond since the 4.x line bootstrapped the collection1 automatically.\n\nAlternatively, if we don't want to support this, we should document the reason in the ref guide. ",
            "id": "comment-14574897"
        },
        {
            "date": "2015-06-05T17:54:38+0000",
            "author": "Shawn Heisey",
            "content": "I think that if a chroot has been requested but it doesn't exist, it should be created.  We do the same thing if there's no cloud info in zookeeper at all, don't we? ",
            "id": "comment-14574916"
        },
        {
            "date": "2015-06-05T17:55:50+0000",
            "author": "Shawn Heisey",
            "content": "If for some reason the create doesn't succeed, that's probably grounds for a hard/fast failure that keeps Solr from starting. ",
            "id": "comment-14574922"
        },
        {
            "date": "2015-06-06T16:34:12+0000",
            "author": "Mark Miller",
            "content": "I think we have discussed this before. Perhaps with an issue by Tom\u00e1s Fern\u00e1ndez L\u00f6bbe if I remember right. I think we ended up only doing it when bootstrapping or something.\n\nWhat I don't like about it is that things like typos in connection strings just create new zk nodes and start a fresh zk state tree. Kind of seems like if you want to create a node to be a chroot you should explicitly create it. If you are using a chroot you probably have other processes using ZK and it's probably best if you manage the root nodes of that directly rather than automagically. ",
            "id": "comment-14575810"
        },
        {
            "date": "2015-06-06T18:19:24+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Yes, this was discussed in SOLR-4028 and the decision there was to only create the chroot when bootstrap_conf was used, don't know how the correct way should be now that we have the script. \n\nI think this would give us something easier to start at the cost of increasing the possibility of a development/production headache (e.g. due to a typo, or you are hitting the wrong ZooKeeper ensemble, etc). On the other hand, it would be nice to not need to use the zkCli.sh or equivalent to create the chroot ",
            "id": "comment-14575861"
        },
        {
            "date": "2015-06-07T14:59:19+0000",
            "author": "Shawn Heisey",
            "content": "My recommendation to people in places like IRC has been to always use a chroot and never use the bootstrap options.  That is incompatible with what you mentioned about SOLR-4028.\n\nIf a user attempts to start Solr using a zookeeper chroot that doesn't exist, I think that one of two things should happen:\n\n\n\tAutomatically create that chroot and proceed with startup.\n\t\n\t\tMultiple simultaneous startups may run into a situation where two (or more) instances detect the missing chroot, one of them creates it, and then another tries to create it and finds it's already there.  That should be handled with no complaint louder than a WARN in the log.\n\t\n\t\n\tSpit out a meaningful error message and fail to start.\n\t\n\t\tThe error should be both on stderr and in the logfile.\n\t\n\t\n\n\n\nI think my advice about always using a chroot and never using bootstrap options is good advice, and should be in the documentation.\n\nIf Solr doesn't create the chroot automatically, I'm OK with that decision, as long as the docs clearly explain how to create one.  The error message on startup should explain the problem and reference the documentation or maybe link to a moinmoin wiki page. ",
            "id": "comment-14576278"
        },
        {
            "date": "2015-06-08T15:47:56+0000",
            "author": "Timothy Potter",
            "content": "\nKind of seems like if you want to create a node to be a chroot you should explicitly create it. If you are using a chroot you probably have other processes using ZK and it's probably best if you manage the root nodes of that directly rather than automagically.\n\n+1 to this approach ... I'll make some improvements in the ref guide about this and will close this ticket once the ref guide changes are in.\n\nThe error in the Solr log actually seems pretty clear to me ... \n\n\nERROR - 2015-06-05 17:15:50.410; [   ] org.apache.solr.common.SolrException; null:org.apache.solr.common.cloud.ZooKeeperException: A chroot was specified in ZkHost but the znode doesn't exist. localhost:2181/lan\n\n ",
            "id": "comment-14577379"
        },
        {
            "date": "2015-08-07T08:06:04+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "What I don't like about it is that things like typos in connection strings just create new zk nodes and start a fresh zk state tree\n\nSo how about we auto-create the chroot only if it == /solr. That will probably be the case for 90%, and there should be no reason to believe the chroot was chosen on accident. Then we could recommend always using a chroot of /solr, and document that for advanced cases, e.g. reusing the same ZK ensemble for multiple Solr clusters, you need to create other chroots manually... ",
            "id": "comment-14661473"
        },
        {
            "date": "2015-11-20T18:57:34+0000",
            "author": "Steve Molloy",
            "content": "Here's a patch that creates the znode only if you add the createZkRoot system property. This way users can decide which behaviour they want. ",
            "id": "comment-15018526"
        },
        {
            "date": "2017-07-14T18:57:35+0000",
            "author": "Isabelle Giguere",
            "content": "Steve Molloy 's patch, updated to Solr 6.6.0 ",
            "id": "comment-16087800"
        },
        {
            "date": "2018-10-11T15:40:55+0000",
            "author": "Isabelle Giguere",
            "content": "SOLR-7642_tag_7.5.0.patch : Same patch, on revision 61870, tag 7.5.0, latest release ",
            "id": "comment-16646641"
        },
        {
            "date": "2018-10-11T17:13:02+0000",
            "author": "Shawn Heisey",
            "content": "Catching up on email and saw issue updates for this.\n\nSo how about we auto-create the chroot only if it == /solr.\n\nI really like this idea.  A chroot of /solr is very unlikely to be a typo, and probably will be what a sizable majority of users will want.  So if that exact text is the chroot and it doesn't exist, we go ahead and create it.  We can discuss whether to make it case-insensitive, so /Solr or /SOLR is also auto-created.  If any other string (like /solr7 or /solrdev) gets used, we can require manual creation, and have a meaningful error in the log.  Timothy Potter already indicated that the existing error is not ambiguous, but we can probably improve it by telling the user they will have to manually create the chroot. ",
            "id": "comment-16646777"
        },
        {
            "date": "2018-10-19T21:20:19+0000",
            "author": "Isabelle Giguere",
            "content": "My 2 cents is that creating the chroot only if it is /solr doesn't solve the original issue.  To impose /solr is not equivalent to allowing the creation of the chroot.  It's just less messy than having everything at the root '/'.\n\nHow about a specific property in solr.in.sh / solr.in.cmd ?  Instead of including the chroot in ZK_HOST, it could bet set separately, so it would have to be a conscious decision.\n\nAnd about typos... \nUsing zkCLI, the user creates the chroot (possibly making a typo in command line) then, has to write the same (typo) chroot in ZK_HOST in solr.in.sh to avoid 2 ZK paths created.\nI would rather just use zkCLI to clean-up what was added by mistake, than to have to systematically use it once to create the chroot, then repeat the same chroot in solr.in.sh\n\nI think if the chroot is specified only once, that's less likely to create confusion.\n ",
            "id": "comment-16657458"
        },
        {
            "date": "2018-10-19T21:32:00+0000",
            "author": "Shawn Heisey",
            "content": "Instead of including the chroot in ZK_HOST, it could bet set separately, so it would have to be a conscious decision.\n\nThe format of ZK_HOST is dictated by the ZooKeeper project.  We did not come up with that format.  We simply pass the string into the ZK code.  It is not ours to modify. ",
            "id": "comment-16657467"
        },
        {
            "date": "2018-10-20T14:19:42+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "We could think the other way around. Just let Solr auto create any chroot specified in ZK_HOST, but add an optional system property that users can set in production to restrict to a certain chroot, e.g. -Dsolr.zkChroot=/solr2.\u00a0It would allow a very smooth dev/test experience, we could start recommending users to always use a chroot, and we can provide users with added peace of mind in production if they want to safeguard against human\u00a0errors by adding an extra line to solr.in.sh. ",
            "id": "comment-16657874"
        },
        {
            "date": "2018-10-20T17:57:04+0000",
            "author": "Shawn Heisey",
            "content": "Jan H\u00f8ydahl, that seems like a good compromise.\n\nIn truth I would prefer to always create the chroot without restriction, so SolrCloud is easier to use.\n\nMy agreement with the notion of only auto-creating \"/solr\" was just to address fears about the creation of surplus and/or incorrect znodes.\n\nSometimes we know enough about a situation that we can easily dismiss fears and objections to our plan ... hopefully with a rational reason.  Creation of extra znodes for incorrect chroots could certainly happen in the wild, and I can't say with 100 percent certainty that it would never cause anybody any actual problems.  For that reason, I don't think we can ignore it.\n\nIf I'm honest, I think the system property to restrict the chroot name is a placebo.  But sometimes users need the assurance that a placebo provides, so I support the idea.  I wouldn't expect much implementation difficulty. ",
            "id": "comment-16657934"
        },
        {
            "date": "2018-10-22T15:08:37+0000",
            "author": "Isabelle Giguere",
            "content": "Attached proposition (not tested  ), blending both Steve Molloy and Jan H\u00f8ydahl 's ideas.\n\nIt might be overkill ... what does anyone think ?\nFirst, creating the chroot must be allowed (if createZkRoot=true), then, the ZK root must match the authorized root (set by solr.zkChroot).\nThe name 'createZkRoot' could be changed to solr.createZkRoot, for uniformity. ",
            "id": "comment-16659065"
        }
    ]
}