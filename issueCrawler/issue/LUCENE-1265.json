{
    "id": "LUCENE-1265",
    "title": "Identify bottleneck associated with not pooling searchers",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Duplicate",
        "status": "Resolved"
    },
    "description": "There have been multiple reports suggesting synchronization problems due to great search performace boost while pooling searchers under heavy load.\n\nI think this should be confirmed. Then identified and fixed,  alternatively add such a pool to the code base. \n\nhttp://www.nabble.com/Multiple-searchers-%28Was%3A-CachingWrapperFilter%3A-why-cache-per-IndexReader-%29-td14916124.html#a14997611\nhttp://www.nabble.com/Solid-State-Drives-vs.-RAMDirectory-td16025864.html\n\nhttp://wiki.apache.org/lucene-java/ImproveSearchingSpeed\nUse one instance of  IndexSearcher.\nShare a single  IndexSearcher across queries and across threads in your application.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2008-04-17T16:11:33+0000",
            "content": "I'll be looking in to this any year now. ",
            "author": "Karl Wettin",
            "id": "comment-12590082"
        },
        {
            "date": "2008-04-17T16:30:37+0000",
            "content": "I think IndexInput is the right place to fix it (assuming the sync bottleneck is during seek+read). ",
            "author": "Yonik Seeley",
            "id": "comment-12590089"
        },
        {
            "date": "2008-04-19T00:05:39+0000",
            "content": "Otis says:\n\nNot sure if this email got answered.  That's most likely due to the synchronized isDeleted call:\n./org/apache/lucene/index/SegmentReader.java:  public synchronized boolean isDeleted(int n) { ",
            "author": "Karl Wettin",
            "id": "comment-12590650"
        },
        {
            "date": "2008-11-16T23:38:00+0000",
            "content": "Its looks like both this and LUCENE-1309 have been solved, no? Readonly IndexReaders and NIOFSDirectory seem to have cleared the bottleneck. (I think there is a third issue that is basically this out there somewhere too) ",
            "author": "Mark Miller",
            "id": "comment-12648048"
        },
        {
            "date": "2008-11-17T10:29:08+0000",
            "content": "Dup of LUCENE-1329 (readOnly IndexReader) and LUCENE-753 (NIOFSDirectory), at least on non-Windows platforms.\n\nBased on this user report it seems like sharing an IndexReader across multiple threads in fact gives better performance than thread-private IndexReader instances:\n\nhttp://www.nabble.com/IndexSearcher-and-multi-threaded-performance-td20449375.html ",
            "author": "Michael McCandless",
            "id": "comment-12648124"
        }
    ]
}