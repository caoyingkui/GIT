{
    "id": "SOLR-7125",
    "title": "Allow clients to upload/download configs via CloudSolrClient",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.1"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Adding new configs to ZK is still something of a pain point.  We should add some helper methods to CloudSolrClient that make this easier.",
    "attachments": {
        "SOLR-7125.patch": "https://issues.apache.org/jira/secure/attachment/12699529/SOLR-7125.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-02-18T20:16:57+0000",
            "author": "Alan Woodward",
            "content": "Patch.  I've refactored the ZkController.upload/download methods into a new ZkConfigManager object, which is exposed on ZkStateReader.  I also took the opportunity to update them to use NIO2.  There are a few more cleanups in ZkController that could be done here, but I'd like to keep that for a follow-up issue. ",
            "id": "comment-14326491"
        },
        {
            "date": "2015-02-18T20:17:54+0000",
            "author": "Shawn Heisey",
            "content": "I like it.  +1.  Config deleting should be there too, as I just described in SOLR-7124. ",
            "id": "comment-14326492"
        },
        {
            "date": "2015-02-18T20:36:21+0000",
            "author": "Shawn Heisey",
            "content": "If the back-end code in the config manager is not yet ready, adding it to SolrJ could be done later. ",
            "id": "comment-14326513"
        },
        {
            "date": "2015-02-18T20:45:58+0000",
            "author": "Mark Miller",
            "content": "We have to consider security here just like the other pass config over http right?\n\nCan a user send in an XSLT file to try and escalate from Solr client access to full machine access? ",
            "id": "comment-14326530"
        },
        {
            "date": "2015-02-18T20:54:20+0000",
            "author": "Alan Woodward",
            "content": "Deleting I think can wait for a bit, as it's more complicated (you'd probably have to involve the Overseer to ensure that you're not creating a collection with that config at the same time).\n\nThis is only on CloudSolrClient, not over HTTP.  If a black hat has access to your zookeeper there's not a lot we can do to help you  ",
            "id": "comment-14326543"
        },
        {
            "date": "2015-02-18T20:59:49+0000",
            "author": "Hoss Man",
            "content": "Alan: i don't know all the details, but SOLR-6915 is pretty much on point here in terms of letting solr read/write what it needs to in ZK, while some subset of users can modify configs, while other clients/users may only have read access to ZK.\n\njust because someone can create CloudSolrClient instance and get the list of active nodes from ZK doesn't mean they can/should be allowed full write access to ZK.\n\n\n\nEDIT: to clarify my point: i'm not saying we shouldn't support this in CloudSolrClient, i'm saying if we support it, we need to keep the security conious use case in mind and ensure we have a good story/docs for folks who care about things like SOLR-6915 ... maybe it \"just works\" because the ZK credentials used when constructing the CloudSolrClient instance are prevented from writing to those config nodes in these secure cases, and they returne a good error message ... but we should think about that and test it. ",
            "id": "comment-14326552"
        },
        {
            "date": "2015-02-18T21:00:13+0000",
            "author": "Mark Miller",
            "content": "This is only on CloudSolrClient, not over HTTP.\n\nBut CloudSolrClient does go over http doesnt it?\n\nIf a black hat has access to your zookeeper there's not a lot we can do to help you \n\nWe have security controls for zookeeper now - you can have a CloudSolrClient, you can have limited Zk perms for a Solr space (read only even for CloudSolrClient). That's all fine. We can't allow a guy in that situation to be able to root the Solr instance machine from another machine. That is a large security hole. ",
            "id": "comment-14326553"
        },
        {
            "date": "2015-02-18T21:02:44+0000",
            "author": "Mark Miller",
            "content": "I'm not saying this is an impossible feature by the way. But the security issue has to be very well considered, documented, prevented, tackled etc, etc.\n\nWe keep spawning issues to upload config, but until someone tackles the root security problem, none of them can go anywhere  ",
            "id": "comment-14326558"
        },
        {
            "date": "2015-02-18T21:08:38+0000",
            "author": "Alan Woodward",
            "content": "But CloudSolrClient does go over http doesnt it?\n\nFor normal requests, yes, but it also has a ZkStateReader, which is what this code uses.  I'll add a test for ZkCredentials, etc. ",
            "id": "comment-14326562"
        },
        {
            "date": "2015-02-18T21:09:43+0000",
            "author": "Alan Woodward",
            "content": "And if ZkCredentials doesn't work in this case, then it's an existing security hole, which needs fixing, as anybody can create a CloudSolrClient and pull it's SolrZkClient/ZkStateReader... ",
            "id": "comment-14326565"
        },
        {
            "date": "2015-02-18T21:18:28+0000",
            "author": "Mark Miller",
            "content": "then it's an existing security hole, which needs fixing, as anybody can create a CloudSolrClient and pull it's SolrZkClient/ZkStateReader.\n\nYeah, it's a tricky situation. Part of why securing ZK is so important I suppose - we should add a bit about that to the ref guide.\n\nMy worry is the bank that does secure ZK though, not the one that doesn't. If you have it so that out of the box CloudSolrServer can upload config that can end up as executable code, that is a dangerous situation.\n\nI suppose this issue highlights something we have to consider rather than exposes it. ",
            "id": "comment-14326568"
        },
        {
            "date": "2015-02-19T01:31:24+0000",
            "author": "Mark Miller",
            "content": "So I've thought on this a bit. I guess this is best addressed by some work in the ref guide on zk security - we recommend that if you are securing zk for reasonable shared access that you need to lock down config and can't use features such as this without an exploit risk.\n\nIn the longer term, I wonder if we can just stop allowing xslt execution...or at least by default like we do binary uploads.\n ",
            "id": "comment-14326863"
        },
        {
            "date": "2015-02-19T09:44:26+0000",
            "author": "Alan Woodward",
            "content": "Patch with added security test.  Turns out that SolrZkClient does indeed handle the security aspects here, although it's a bit of a pain setting it up properly.\n\nThe new test creates a ZK that has three levels of access: writeable, readable, and no creds.  It then tests that if you create your config node with the writeable access that a client with read-only access can't upload new configs, and that a client with no auth whatsoever can't even list configs. ",
            "id": "comment-14327170"
        },
        {
            "date": "2015-02-19T14:01:48+0000",
            "author": "Mark Miller",
            "content": "Great to have a new test!\n\nI'm sure it will work - my main concern is the team securing things for shared use. Say they have employees with different levels of access, they turn on ZK security, they see they can upload config with CloudSolrServer or whatever and so they allow the config node to be written to, what's the harm, the client can only edit and upload config, and now they have opened up a remote exploit hole. Unfortunately, until we close that hole, I think the best we can do is doc the problem a lot in the ref guide. ",
            "id": "comment-14327438"
        },
        {
            "date": "2015-02-19T15:47:17+0000",
            "author": "Alan Woodward",
            "content": "Should I commit then, or do we need to think more about the docs first?  I don't think this is exposing anything that wasn't already exposed... ",
            "id": "comment-14327648"
        },
        {
            "date": "2015-02-19T15:56:17+0000",
            "author": "Mark Miller",
            "content": "Yeah, if it's ready, it's fine to commit. I'll work on the docs. ",
            "id": "comment-14327663"
        },
        {
            "date": "2015-02-19T15:57:34+0000",
            "author": "Mark Miller",
            "content": "We might want to mention in the javadoc around those methods that allowing upload of config to zk is a possible exploit hole - it's just a nice place to possibly flag this for users - in that case it might be nice to link to the doc. ",
            "id": "comment-14327665"
        },
        {
            "date": "2015-02-19T16:01:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1660919 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1660919 ]\n\nSOLR-7125: Allow upload and download of configs via CloudSolrClient ",
            "id": "comment-14327670"
        },
        {
            "date": "2015-02-19T16:19:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1660922 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1660922 ]\n\nSOLR-7125: Allow upload and download of configs via CloudSolrClient ",
            "id": "comment-14327687"
        },
        {
            "date": "2015-02-19T16:23:09+0000",
            "author": "Alan Woodward",
            "content": "Thanks Mark, I've added a note to the Javadoc as well. ",
            "id": "comment-14327690"
        },
        {
            "date": "2015-02-19T16:24:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1660925 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1660925 ]\n\nSOLR-7125: Add note to javadocs ",
            "id": "comment-14327694"
        },
        {
            "date": "2015-02-19T16:27:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1660926 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1660926 ]\n\nSOLR-7125: Add note to javadocs ",
            "id": "comment-14327695"
        },
        {
            "date": "2015-02-19T18:31:12+0000",
            "author": "Shawn Heisey",
            "content": "I was trying to think of a way other than ZK security to have a default config that would disable this functionality, but I don't think there's any way to do it that would still allow zkcli to work.\n\nIf we don't already have a full section in the ref guide about security, perhaps we need one. ",
            "id": "comment-14327916"
        },
        {
            "date": "2015-02-19T19:31:12+0000",
            "author": "Mark Miller",
            "content": "I was trying to think of a way other than ZK security to have a default config that would disable this functionality, but I don't think there's any way to do it that would still allow zkcli to work.\n\nI think you have two options for real security at this point:\n\n\n\tLock down access to ZK service, people that have access to ZK may be able to exploit Solr. Standard situation.\n\tAllow various clients to access ZK service and use ZK auth controls, most can't update ZK config, only those that can (if any) may be able to exploit Solr.\n\n\n\nIf we don't already have a full section in the ref guide about security, perhaps we need one.\n\nI think we do need one - we have crept further and further into it, and now we are pretty deep. ",
            "id": "comment-14327991"
        },
        {
            "date": "2015-02-22T18:25:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1661506 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1661506 ]\n\nSOLR-7125: Don't upload dotfiles ",
            "id": "comment-14332280"
        },
        {
            "date": "2015-02-22T18:27:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1661507 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1661507 ]\n\nSOLR-7125: Don't upload dotfiles ",
            "id": "comment-14332283"
        },
        {
            "date": "2015-03-09T15:04:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1665254 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1665254 ]\n\nSOLR-7125: Call process() before trying to upload/download configs ",
            "id": "comment-14353078"
        },
        {
            "date": "2015-03-09T15:07:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1665255 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1665255 ]\n\nSOLR-7125: Call process() before trying to upload/download configs ",
            "id": "comment-14353081"
        },
        {
            "date": "2015-03-09T16:13:54+0000",
            "author": "Noble Paul",
            "content": "does this allow upload of config also ? ",
            "id": "comment-14353155"
        },
        {
            "date": "2015-03-09T16:18:44+0000",
            "author": "Alan Woodward",
            "content": "This lets you add a config (schema and solrconfig, etc) from your filesystem to ZK via a CloudSolrClient. ",
            "id": "comment-14353160"
        },
        {
            "date": "2015-04-15T00:30:39+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495334"
        }
    ]
}