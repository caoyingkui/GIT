{
    "id": "SOLR-5480",
    "title": "Make MoreLikeThisHandler distributable",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The MoreLikeThis component, when used in the standard search handler supports distributed searches. But the MoreLikeThisHandler itself doesn't, which prevents from say, passing in text to perform the query. I'll start looking into adapting the SearchHandler logic to the MoreLikeThisHandler. If anyone has some work done already and want to share, or want to contribute, any help will be welcomed.",
    "attachments": {
        "SOLR-5480.patch": "https://issues.apache.org/jira/secure/attachment/12615513/SOLR-5480.patch",
        "MoreLikeThisHandlerTestST.txt": "https://issues.apache.org/jira/secure/attachment/12667210/MoreLikeThisHandlerTestST.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Steve Molloy",
            "id": "comment-13831030",
            "date": "2013-11-24T19:52:00+0000",
            "content": "First patch based on 4.6 branch covering similarity based on text passed in only, need to add support for similarity based on first document matching query. Probably needs some tweaks as well. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13832988",
            "date": "2013-11-26T20:14:19+0000",
            "content": "Updated patch with support for similarity by query. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13834853",
            "date": "2013-11-28T14:04:27+0000",
            "content": "Hi Steve - do you have a patch for trunk? Some things changed, IndexReader no longer returns Document but StoredDocument, which cannot be passed to IndexSchema.getUniqueKeyField(), that still needs Document. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13834933",
            "date": "2013-11-28T15:45:50+0000",
            "content": "Not yet, will try to find some time to see how it can be adjusted for trunk. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13844393",
            "date": "2013-12-10T16:26:07+0000",
            "content": "New patch including support for mlt.fq. Still off of 4.6 tag, need to find time to adjust to trunk. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13845506",
            "date": "2013-12-11T16:17:08+0000",
            "content": "More bug fixing, still against 4.6 tag, still need time to try to adjust to trunk. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13865598",
            "date": "2014-01-08T16:32:08+0000",
            "content": "(Hopefully) last 4.6 patch version, includes more bug fixing, normalization of output, etc. \n\nWorking on migrating to trunk now. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13865835",
            "date": "2014-01-08T20:15:02+0000",
            "content": "Attempt at a patch for trunk (rev 1556570). Got it to compile but not currently setup to test with trunk. "
        },
        {
            "author": "Greg Harris",
            "id": "comment-13932402",
            "date": "2014-03-12T21:21:36+0000",
            "content": "I tried to use this patch with mlt.fq. Essentially I'm having trouble with using an integer as the parameter, String seems to work. It's parsing junk as the value of the filter query as an int. I don't know exactly what needs to be fixed, but it has to do with using the toString() method on the TermQuery object as part of the fq. \n\nBasically at line 584 in SingleMoreLikeThisComponent:\nString[] mltFilters = new String[rb._mltFilters.size()];\n      for (int i = 0; i < mltFilters.length; i++) \n{\n        mltFilters[i] = rb._mltFilters.get(i).toString();\n      }\n\nthe toString() eventually calls TermQuery.toString(String field). Since this is a bytesRef it seems that TermQuery.text() called in the toString() doesn't return what should be an int value and instead returns junk. Then the filter fails.  "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-14008901",
            "date": "2014-05-26T14:55:18+0000",
            "content": "Hi Steve, i took your 4.6 patch and applied it to 4.8, i did have to fix some issues that were committed when some deep paging fix was commit. Anyway, the component seems to work but it takes a very long time, over 8 seconds on a powerful cluster. I tracked it down to the shard queries having a rows=20 parameter so i get mlt.count for 20 results per shard, can you confirm? "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14009030",
            "date": "2014-05-26T18:58:21+0000",
            "content": "It's probably overquerying leftover from testing, sorry about that. I need to move our code base to 4.8 soon and will need to adapt the patch accordingly. (If you can share you tweaks, it would be much appreciated). I'll look at this perf hit and share whatever I find. "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-14040921",
            "date": "2014-06-23T16:24:26+0000",
            "content": "Updated patch sources to latest trunk. There are two approaches to get distributed MLT:\n1. Added mlt qparser, works in single and cloud mode. Added support for numeric id. \nResult of mlt written as query result - not in MoreLikeThis. Added tests to call in single and cloud modes.\n\n2. SingleMLT component, mlt per shards distribution, added org.apache.solr.handler.DistributedMoreLikeThisHandlerTest "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14052636",
            "date": "2014-07-04T19:46:43+0000",
            "content": "Adapted patch for 4.9. Also ensured all relevant unit tests are passing, added support for non-string ids and proper result sorting. For queries, first match will always be chosen according to score, not specified sort order which is used for final result sorting. "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14062358",
            "date": "2014-07-15T17:22:51+0000",
            "content": "Vitaliy Zhovtyuk This is very different from what this JIRA talks about and not in line with the existing patches/intent.\nI have created a new JIRA (SOLR-6248)  that is fit for this approach. It should be able to (functionally) solve the issue that this JIRA talks about. "
        },
        {
            "author": "Claude",
            "id": "comment-14123210",
            "date": "2014-09-05T17:35:27+0000",
            "content": "Steve Molloy,\n\nWe applied your SOLR-5480 patch (https://issues.apache.org/jira/secure/attachment/12622022/SOLR-5480.patch) in March while we were in the process of moving to a distributed architecture.  We've revisited those changes and are having trouble getting some unit tests to run.      Specifically, We are getting errors in the MoreLikeThisHandlerTest.  We've played around with several changes in the test.  One of the things we noticed was  a difference in which interesting terms are used, and the formatting of the response.  \n\nIt looks like the MoreLikeThisHandler was filling interestingTerms using fillInterestingTermsFromMLTQuery which applies a boost formula to the terms.\n\nWhereas the SingleMoreLikeThisComponent uses the retrieveTerms of the MoreLikeThis class (several paths including : SingleMoreLikeThisComponent.processTermDetails > MoreLikeThis.getTermDetails>retrieveTerms).\n\nI'm wondering if you have been able to successfully run the MoreLikeThisHandlerTest with the latest patch?  If so, did you make any modifications to it?\n\nThanks very much for any help you can give.\n\nBest,\n\nClaude "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14125645",
            "date": "2014-09-08T14:58:51+0000",
            "content": "Patch adapted for 4.10, unit tests pass. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14125647",
            "date": "2014-09-08T15:02:19+0000",
            "content": "Claude I just attached a version of the patch adapted for 4.10 release. Tests are passing in my environment (Ubuntu 14.04, Oracle JDK 1.7.0_67), I will perform some more integrationt tests in our setup and will let you know if I see any issue. What were the failures you were seeing? Do you have logs/stack traces? "
        },
        {
            "author": "Claude",
            "id": "comment-14125916",
            "date": "2014-09-08T18:53:32+0000",
            "content": "Stack trace from running MoreLikeThisHandlerTest on OSX using 1.7.0_67 Java. "
        },
        {
            "author": "Claude",
            "id": "comment-14125919",
            "date": "2014-09-08T18:55:18+0000",
            "content": "Steve Molloy,\n\nI've run on OSX and ubuntu 14.04 with the same JDK you are using and get a stack trace which I've attached. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14125933",
            "date": "2014-09-08T19:07:08+0000",
            "content": "Claude Something is wrong with this stack trace. You actually have compilation errors pointing to MLT handler not implementing an abstract method of RequestHandlerBase which is implemented in SearchHandler which MLT handler extends after applying the patch.\nCaused by: java.lang.Error: Unresolved compilation problems: \n  The type MoreLikeThisHandler must implement the inherited abstract method RequestHandlerBase.handleRequestBody(SolrQueryRequest, SolrQueryResponse)\n\nAfter applying the latest patch, is you MoreLikeThisHandler declaration like:\npublic class MoreLikeThisHandler extends SearchHandler \n\nI also see you are in eclipse (from the paths), are you running the tests from command line or within eclipse? (trying to see where things may differ) "
        },
        {
            "author": "Claude",
            "id": "comment-14126039",
            "date": "2014-09-08T20:29:27+0000",
            "content": "Steve Molloy,\n\nThanks.  I see that the patch wasn't (and isn't) applying cleanly. I checked out a branch off of the 4.10 release.  I'm trying to figure out why.  Any thoughts?  "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14126057",
            "date": "2014-09-08T20:36:10+0000",
            "content": "I often run into this with patches taken from Jira... The slightest change before creating the patch seem to have a significant impact on whether or not the patch can apply cleanly. I usually have to resort to applying whatever matches while excluding any conflicts which I then apply manually. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14176070",
            "date": "2014-10-18T18:04:59+0000",
            "content": "Patch adapted to trunk with distributed test, refocussed on MLT in distributed mode and away from MLT query parser which has a ticket of its own. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14176082",
            "date": "2014-10-18T19:02:28+0000",
            "content": "Fix code for a failing unit test. "
        }
    ]
}