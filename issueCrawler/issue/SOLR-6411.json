{
    "id": "SOLR-6411",
    "title": "The leader replacement process should no longer be so strict that only a previously active replica can become leader.",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "",
    "attachments": {
        "SOLR-6411.patch": "https://issues.apache.org/jira/secure/attachment/12663884/SOLR-6411.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-14107610",
            "date": "2014-08-22T22:24:45+0000",
            "content": "Rare hiccups that occur around the same time for all replicas can leave a shard in a state where no thinks they can become the leader and the only safe recovery is to restart the whole shard.\n\nWe should be able to do better than this - we should be able to simulate something similar to restarting the shard as long as all replicas look like they are up and will participate in the leader election. For instance, if it looks to a candidate that all replicas for a shard are down but on live nodes, it could try and become leader even though it currently would think it cannot and if it's peer sync can talk to all the replicas, we should allow it to become the leader even though it wasn't previously active. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14108161",
            "date": "2014-08-23T21:41:48+0000",
            "content": "In fact, now that you can request to be notified if you don't get a certain replication for a request, we can probably just drop the over protection we have and let anyone attempt to be a leader. "
        }
    ]
}