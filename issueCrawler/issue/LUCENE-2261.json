{
    "id": "LUCENE-2261",
    "title": "configurable MultiTermQuery TopTermsScoringBooleanRewrite pq size",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "MultiTermQuery has a TopTermsScoringBooleanRewrite, that uses a priority queue to expand the query to the top-N terms.\n\ncurrently N is hardcoded at BooleanQuery.getMaxClauseCount(), but it would be nice to be able to set this for top-N MultiTermQueries: e.g. expand a fuzzy query to at most only the 50 closest terms.\n\nat a glance it seems one way would be to expose TopTermsScoringBooleanRewrite (it is private right now) and add a ctor to it, so a MultiTermQuery can instantiate one with its own limit.",
    "attachments": {
        "LUCENE-2261.patch": "https://issues.apache.org/jira/secure/attachment/12435594/LUCENE-2261.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-02-11T17:53:24+0000",
            "content": "attached is a patch. i changed FuzzyQueries pq test to use this so it does not have to do the try-finally thing/BooleanQuery.maxClauseCount ",
            "author": "Robert Muir",
            "id": "comment-12832602"
        },
        {
            "date": "2010-02-11T18:10:38+0000",
            "content": "Patch looks good, some things because of serializable:\n\n\tThe readResove method must go to the singleton constant, which should also throw UOE when modified\n\teuquals / hashcode is neaded for the rewritemode, else FuzzyQuery & Co would no longer compare\n\n\n\nIt could be solved by doing like for AutoRewrite and its unmodifiable constant. I know: Queries are a pain because of Serializable.\n\n+1 on adding a param to FuzzyQuery ctor ",
            "author": "Uwe Schindler",
            "id": "comment-12832607"
        },
        {
            "date": "2010-02-11T18:12:34+0000",
            "content": "the previous patch was wrong for readResolve, here is a fix. ",
            "author": "Robert Muir",
            "id": "comment-12832609"
        },
        {
            "date": "2010-02-11T19:34:24+0000",
            "content": "here is a patch with uwe's suggestions. now that fuzzyquery supports the param via ctor, the singleton TopTerms is no longer used so i removed it. ",
            "author": "Robert Muir",
            "id": "comment-12832656"
        },
        {
            "date": "2010-02-11T19:39:05+0000",
            "content": "sorry, i created a javadoc warning, (TOP_TERMS singleton was referenced in the top of mtq javadocs). here is the fix ",
            "author": "Robert Muir",
            "id": "comment-12832658"
        },
        {
            "date": "2010-02-11T20:55:24+0000",
            "content": "Looks good when gaining a first insight. I have not tried the patch, will do soon. ",
            "author": "Uwe Schindler",
            "id": "comment-12832683"
        },
        {
            "date": "2010-02-12T18:39:19+0000",
            "content": "Looks good when gaining a first insight. I have not tried the patch, will do soon.\n\nUwe lemme know if everything is ok, once multitermquery policeman is happy I will look at proceeding to commit  ",
            "author": "Robert Muir",
            "id": "comment-12833110"
        },
        {
            "date": "2010-02-12T21:44:09+0000",
            "content": "Hi Robert, patch looks good, all tests pass, nothing to complain from the MTQ police \n\nThere is only one thing unrelated to that issue: It makes no sense to declare IllegalArgExceptions as they are unchecked. I would remove them, else the compiler does. ",
            "author": "Uwe Schindler",
            "id": "comment-12833181"
        },
        {
            "date": "2010-02-13T17:19:13+0000",
            "content": "There is only one thing unrelated to that issue: It makes no sense to declare IllegalArgExceptions as they are unchecked. I would remove them, else the compiler does.\n\nAgreed, here is a patch with this cleanup, and also removes an unused import from MTQ ",
            "author": "Robert Muir",
            "id": "comment-12833413"
        },
        {
            "date": "2010-02-13T17:20:16+0000",
            "content": "will commit this in a day or two if no one objects. ",
            "author": "Robert Muir",
            "id": "comment-12833415"
        },
        {
            "date": "2010-02-21T07:28:17+0000",
            "content": "Committed revision 912311. ",
            "author": "Robert Muir",
            "id": "comment-12836336"
        }
    ]
}