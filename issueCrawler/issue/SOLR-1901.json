{
    "id": "SOLR-1901",
    "title": "bug using distributed search, highlighting and q.alt",
    "details": {
        "affect_versions": "1.5",
        "status": "Closed",
        "fix_versions": [
            "3.1"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I have noticed when using q.alt even if hl=true highlights are not returned.\nWhen using distributed search, q.alt and hl, HighlightComponent.java\nfinishStage expects the highlighting NamedList of each shard (if hl=true)\nbut it will never be returned. It will end up with a NullPointerExcepion.\nI have temporally solved it checking that highlight NamedList is always\nreturned for each shard. If it's not the case, highlights are not added to\nthe response:\n\n  @Override\n  public void finishStage(ResponseBuilder rb) {\n    boolean hasHighlighting = true ;\n    if (rb.doHighlights && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n\n      Map.Entry<String, Object>[] arr = new\nNamedList.NamedListEntry[rb.resultIds.size()];\n\n      // TODO: make a generic routine to do automatic merging of id keyed\ndata\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_HIGHLIGHTS) == 0)\ncontinue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList hl =\n(NamedList)srsp.getSolrResponse().getResponse().get(\"highlighting\");\n          if(hl != null) {\n            for (int i=0; i<hl.size(); i++) \n{\n             String id = hl.getName(i);\n             ShardDoc sdoc = rb.resultIds.get(id);\n             int idx = sdoc.positionInResponse;\n             arr[idx] = new NamedList.NamedListEntry(id,\nhl.getVal(i));\n            }\n          } else \n{\n            hasHighlighting = false;\n          }\n        }\n      }\n\n      // remove nulls in case not all docs were able to be retrieved\n      if(hasHighlighting) \n{\n        rb.rsp.add(\"highlighting\", removeNulls(new SimpleOrderedMap(arr)));\n      }\n    }\n  }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12872520",
            "date": "2010-05-27T22:07:04+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12922811",
            "date": "2010-10-20T01:17:40+0000",
            "content": "Marc, I recently committed SOLR-2148. I'm not sure it fixes your problem, but can you try the latest 3x or trunk to see if it solves your problem? "
        },
        {
            "author": "Marc Sturlese",
            "id": "comment-12922881",
            "date": "2010-10-20T07:51:32+0000",
            "content": "Thanks Koji, this properly fix my problem. I'm going to close this issue "
        },
        {
            "author": "Dylan Etkin",
            "id": "comment-13042341",
            "date": "2011-06-01T18:22:34+0000",
            "content": "I am using solr 3.1.0 and the linked issue SOLR-2121 still exists.\n\nI can confirm that applying the patch from the linked issue causes the NPE to go away.\n\nPerhaps this issue is fixed but the linked issue is not really a duplicate. "
        }
    ]
}