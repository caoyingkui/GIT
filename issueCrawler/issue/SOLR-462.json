{
    "id": "SOLR-462",
    "title": "Performance related enhancements to Solrj",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "clients - java"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Changes to CommonsHttpSolrServer.java to add soTimeout (read timeout), connection pool timeout, directive to not follow HTTP redirects, configurable retries on NoHttpResponseException, compression, and not creating a new HttpClient on each request.",
    "attachments": {
        "solrj-SOLR-462.patch": "https://issues.apache.org/jira/secure/attachment/12373565/solrj-SOLR-462.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Sean Timm",
            "id": "comment-12560560",
            "date": "2008-01-18T21:45:05+0000",
            "content": "patch applies to client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer.java "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12560583",
            "date": "2008-01-18T22:51:07+0000",
            "content": "Wow! this is great.  I committed this with a few style changes and changed the HttpClient creation to something overrideable.  \n\nAny reason _allowCompression should be false by default?  Perhaps we should change it to true?\n\nThanks Sean! "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12561035",
            "date": "2008-01-21T15:25:55+0000",
            "content": "There are two reasons I chose to not have compression enabled by default: (1) it seems like most Solr deployments use Tomcat or Jetty stand-alone--to get compression, you need to either use a servlet filter to do the compression or put the servlet container behind Apache or another web server enabled to provide the compression, and (2) if both the Solr servers and the Solrj clients are on the same local network, with a 100 Mbps or even gigabit connection, is the CPU overhead of compression going to buy you enough on the IO side?  Now if you have Solr in one data center and your Solrj in a different data center, compression is likely a benefit.  The option is nice and it is a quick thing to try to see if it helps in your particular circumstance. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12561067",
            "date": "2008-01-21T17:05:53+0000",
            "content": "I totally agree with why you would not want to use compression for the most normal use case \u2013 connecting within a LAN or localhost.  But If I understand correctly.  From the client side the only difference is that the client says \"hey, I can use compressed data if you give it to me\" \u2013 The server decides if compression is ok or not.  In any normal case (using solr.war without editing web.xml and not going through a caching proxy) the results are not compressed even if the client says it is ok with compressed results.\n\na trivial point, and I'm happy to go with whatever you think is best....\n\n "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12561189",
            "date": "2008-01-22T01:17:45+0000",
            "content": "It's not a big deal to me either way.  It just seems that if you can save the bytes, you might as well.  In our case for one of our sites, we get ~25MM queries per day.  We don't use compression.  Sending the request header would result in an extra 725 MB of data (29 bytes * 25MM) over the course of a day (which would be ignored).  Compared to the GBs of actual data, it's not much, but a penny saved is a penny earned.  "
        }
    ]
}