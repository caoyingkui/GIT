{
    "id": "LUCENE-7651",
    "title": "Javadocs build fails with Java 8 update 121",
    "details": {
        "labels": "",
        "priority": "Critical",
        "resolution": "Fixed",
        "affect_versions": "6.4",
        "status": "Closed",
        "type": "Bug",
        "components": [
            "general/javadocs"
        ],
        "fix_versions": [
            "6.4.1",
            "6.5",
            "7.0"
        ]
    },
    "description": "Oracle released the recent Java 8 security update (u121). The Jenkins builds fail with the following error while building the Javadocs:\n\n\n  [javadoc] Constructing Javadoc information...\n  [javadoc] javadoc: error - Argument for -bottom contains JavaScript.\n  [javadoc] Use --allow-script-in-comments to allow use of JavaScript.\n  [javadoc] 1 error\n\n\n\nThis is caused by the Javascript added to pretty-print code examples. We load this in the page footer \"<bottom>\" parameter.\n\nSurely, it will be posisble to simply add the mentioned argument, but this will break builds with earlier Java 8 versions.\n\nThis is nowhere documented, I haven't seen any documentation about this flag nowhere, so I assume this is a bug in Java. They can't change or add command line parameters in minor updates of Java 8. I will ask on the OpenJDK mailing lists if this is a bug (maybe accidentally backported from Java 9).",
    "attachments": {
        "LUCENE-7651.patch": "https://issues.apache.org/jira/secure/attachment/12848765/LUCENE-7651.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15833398",
            "date": "2017-01-22T09:15:21+0000",
            "content": "I set to \"critical\", because this also breaks our latest release 6.4, which can't be build from source with Java 8 update 121. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833399",
            "date": "2017-01-22T09:16:18+0000",
            "content": "I will try to figure out if moving the Javascript to a separate file helps here. In HTML 5 inline Javascript in HTML files is a no-go. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833412",
            "date": "2017-01-22T09:30:27+0000",
            "content": "I checked it out, it disallows any <script>, also externally linked ones in the -bottom parameter of Javadocs. This is amajor pain. As adding this special allow-javascript parameter is brekaing builds with older versions and its hard to detect the exact build version in Ant, we have 2 options:\n\n\n\tRemove prettify.js\n\tInject the prettify code somehow else into the docs (e.g. by copying all script files together and append them to the javadoc-generated JS file after javadoc succeeds).\n\n ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833417",
            "date": "2017-01-22T09:35:45+0000",
            "content": "This implements first option:\n\n\n lucene/common-build.xml | 14 --------------\n 1 file changed, 14 deletions(-)\n\ndiff --git a/lucene/common-build.xml b/lucene/common-build.xml\nindex 48cf457..61948bb 100644\n--- a/lucene/common-build.xml\n+++ b/lucene/common-build.xml\n@@ -2107,20 +2107,6 @@ ${ant.project.name}.test.dependencies=${test.classpath.list}\n         <link offline=\"true\" href=\"${javadoc.link}\" packagelistLoc=\"${javadoc.packagelist.dir}/java8\"/>\n         <bottom><![CDATA[\n           <i>Copyright &copy; ${year} Apache Software Foundation.  All Rights Reserved.</i>\n-          <script src='{@docRoot}/prettify.js' type='text/javascript'></script>\n-          <script type='text/javascript'>\n-            (function(){\n-              var oldonload = window.onload;\n-              if (typeof oldonload != 'function') {\n-                window.onload = prettyPrint;\n-              } else {\n-                window.onload = function() {\n-                  oldonload();\n-                  prettyPrint();\n-                }\n-              }\n-            })();\n-          </script>\n         ]]></bottom>\n         \n         <sources />\n\n\n\nI checked our sources. We allready append the CSS of prettify to Javadocs's main CSS files. As Java 8 contains also a Javadocs-generated scripts.js file, we could do the same here. I am working on that... ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833424",
            "date": "2017-01-22T09:46:43+0000",
            "content": "This would be my proposal. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833428",
            "date": "2017-01-22T09:50:05+0000",
            "content": "Sorry last patch had a missing pair of brackets. This fixes it any also works locally. Stupid Javascript! KRRRR! ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833439",
            "date": "2017-01-22T10:12:48+0000",
            "content": "Attached is a patch that also updates Prettify to latest version. The used one produced Javascript errors in Chrome, so I updated. I also removed the useless additional language plugin files. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833444",
            "date": "2017-01-22T10:38:08+0000",
            "content": "Final updates, I think this is committable.\n\nAny suggestions? ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833459",
            "date": "2017-01-22T11:16:55+0000",
            "content": "Add correct license header to CSS file. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833480",
            "date": "2017-01-22T12:13:19+0000",
            "content": "I just checked. The \"hack\" also works with IBM J9, so I see no problem doing this. I was afraid that maybe IBM does not have script.js in the Javadoc output.\n\nNevertheless, this is not risky like the previous hack. If the Javadocs generator no longer produces script.js or stylesheet.css the Code Prettify would just no longer work, but not break Javadocs or build. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833484",
            "date": "2017-01-22T12:18:06+0000",
            "content": "I sent the following message to OpenJDK: http://mail.openjdk.java.net/pipermail/javadoc-dev/2017-January/000281.html ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833617",
            "date": "2017-01-22T17:29:23+0000",
            "content": "Commit ee5a36011220bd2a7a8e45de27d5321cc7610bff in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ee5a360 ]\n\nLUCENE-7651: Fix Javadocs build for Java 8u121 by injecting \"Google Code Prettify\" without adding Javascript to Javadocs's -bottom parameter. Also update Prettify to latest version to fix Google Chrome issue. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15833619",
            "date": "2017-01-22T17:30:28+0000",
            "content": "Commit b808ee6099d03d1fdbccd5a17720069d74d0b8a4 in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b808ee6 ]\n\nLUCENE-7651: Fix Javadocs build for Java 8u121 by injecting \"Google Code Prettify\" without adding Javascript to Javadocs's -bottom parameter. Also update Prettify to latest version to fix Google Chrome issue. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15833620",
            "date": "2017-01-22T17:31:55+0000",
            "content": "I committed this to master and branch_6x. I will now disable all 6.4 branch builds. If we will have a further bugfix release on this branch, we should backport this. Please reopen in that case. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15833621",
            "date": "2017-01-22T17:32:40+0000",
            "content": "Fixed for now, please reopen for every bugfix release on any branch that was not yet updated to use this. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15835600",
            "date": "2017-01-24T03:33:12+0000",
            "content": "Commit ee5a36011220bd2a7a8e45de27d5321cc7610bff in lucene-solr's branch refs/heads/apiv2 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ee5a360 ]\n\nLUCENE-7651: Fix Javadocs build for Java 8u121 by injecting \"Google Code Prettify\" without adding Javascript to Javadocs's -bottom parameter. Also update Prettify to latest version to fix Google Chrome issue. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15837757",
            "date": "2017-01-25T13:46:42+0000",
            "content": "Commit 680153de29c5b01d4a8afad88d4a7b84ab01e145 in lucene-solr's branch refs/heads/branch_6_4 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=680153d ]\n\nLUCENE-7651: Fix Javadocs build for Java 8u121 by injecting \"Google Code Prettify\" without adding Javascript to Javadocs's -bottom parameter. Also update Prettify to latest version to fix Google Chrome issue.\n\n\n\tConflicts:\n\tlucene/CHANGES.txt\n\n ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15848332",
            "date": "2017-02-01T12:46:29+0000",
            "content": "BTW, the release notes of Java 8u121 was updated to mention this change: http://www.oracle.com/technetwork/java/javase/8u121-relnotes-3315208.html\nIt still breaks our previous releases, but we can tell people that its caused by Oracle, not us. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15854184",
            "date": "2017-02-06T15:10:41+0000",
            "content": "Commit d3a2ed8487f3934d53f864b092f91966814d4cf7 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d3a2ed8 ]\n\nLUCENE-7651: Move under the 6.4.1 section. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15854186",
            "date": "2017-02-06T15:10:44+0000",
            "content": "Commit 9dcfcb6e6fcbab36d50c4baca697c1104c2a72ff in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9dcfcb6 ]\n\nLUCENE-7651: Move under the 6.4.1 section. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15855605",
            "date": "2017-02-07T09:07:43+0000",
            "content": "Commit cffa82062c5be766db6bc87bc232a39a413600ec in lucene-solr's branch refs/heads/branch_5_5 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cffa820 ]\n\nLUCENE-7651: Fix Javadocs build for Java 8u121 by injecting \"Google Code Prettify\" without adding Javascript to Javadocs's -bottom parameter. Also update Prettify to latest version to fix Google Chrome issue.\n\n\n\tConflicts:\n\tlucene/CHANGES.txt\n\n ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15855724",
            "date": "2017-02-07T10:43:33+0000",
            "content": "I backported this change to Lucene 5.5.4, because otherwise we cannot run the build with Java 8 anymore. The problem is the following: Java 7's Javadocs do not add a \"script.js\" file to the Javadocs output, so this fix injects the javadocs, but because a \"script.js\" is nowhere referenced in the HTML files, prettyprint is not loaded.\n\nWe have the following possibilities:\n\n\trevert this backport commit, but it prevents smoketester from suceeding (as it checks also Java 8). It also makes it impossible to build the 5.5.4 release with Java 8\n\tadd more hacks to inject a script tag into the head element, but that's really complicated as you have to do it in every HTML file!\n\tignore the fact that Javadocs do not code-prettyprint correctly anymore in Java 7. The Javadocs are fine, just the code exaples are no longer syntax highlighted.\n\n\n\nI'd go for the third item. Any comments? If we go this route, I will add a comment to the Changelog that prettyprinting Javadocs is no longer working, if docs are build with Java 7. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15855751",
            "date": "2017-02-07T10:55:38+0000",
            "content": "We don't have access to recent paid only Java 7 JDKs, but as the Javadocs fix was declared a security issue, I assume that it is also applied to Java 7, so without this fix Java 7 paid updates will fail the build, too. ",
            "author": "Uwe Schindler"
        }
    ]
}