{
    "id": "LUCENE-6245",
    "title": "ConstantScoreQuery etc have crazy toString()'s",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "For backwards compatibility reasons, LUCENE-1518 gave Filter a default \"crap\" toString(String) impl of getClass().getSimpleName(). I don't think we should do this. It causes problems e.g. when filters are wrapped in ConstantScoreQuery or other places, because toString(String) does the wrong thing.\n\n\nFilter f = new MultiTermQueryWrapperFilter<WildcardQuery>(new WildcardQuery(new Term(\"foo\", \"b*ar\")));\n    \nSystem.out.println(f.toString()); // foo:b*ar\nSystem.out.println(f.toString(\"foo\")); // MultiTermQueryWrapperFilter\n\n\n\nInstead i think that impl should be removed (leaving it abstract), and Query.toString() should be final for a hard break:\n\n  /** Prints a query to a string, with <code>field</code> assumed to be the \n   * default field and omitted.\n   */\n  public abstract String toString(String field);\n\n  /** Prints a query to a string. */\n  @Override\n  public ****final**** String toString() {\n    return toString(\"\");\n  }\n\n\n\nhaving buggy toString's is worse than requiring a change in custom filters. It impacts all users rather than just expert ones. Also by doing this, all the current toString bugs in the codebase show up as compile errors.",
    "attachments": {
        "LUCENE-6245.patch": "https://issues.apache.org/jira/secure/attachment/12698938/LUCENE-6245.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14321492",
            "author": "Adrien Grand",
            "date": "2015-02-14T15:11:35+0000",
            "content": "OK I see the issue. I wanted to keep Filter as backward-compatible as possible but I had not anticipated the bad effects on toString(). Your proposal sounds good to me, I'll work on a fix unless you already started. "
        },
        {
            "id": "comment-14321494",
            "author": "Robert Muir",
            "date": "2015-02-14T15:15:51+0000",
            "content": "I didn't start on anything yet... I didn't know what other options we had. \n\nIts very surprising to me that Query.toString(String) is abstract but Query.toString() is not final, to me that is the root problem and fixing that means introducing a break. Anything else I think will be clumsy? "
        },
        {
            "id": "comment-14321533",
            "author": "Adrien Grand",
            "date": "2015-02-14T15:38:09+0000",
            "content": "Right, I thought I could do it without introducing breaks but as you notice it does not work.\n\nThen maybe we should only target the merge of queries and filters for 6.0. I could back out LUCENE-1518 from 5.x. There is so much left to do that I don't think we would be ready anytime soon anyway, and maybe this merge of queries and filters could be a good reason to release 6.0 once we are done? "
        },
        {
            "id": "comment-14321536",
            "author": "Robert Muir",
            "date": "2015-02-14T15:44:04+0000",
            "content": "I think we should first fix the issue for trunk, and then think about the impact.\n\nMy issue here is that breaking toString() functionality silently will affect many many users. I am not worried about making a clean compile-time break that only impacts custom queries/filters code. It only impacts advanced users and does so without confusing them. "
        },
        {
            "id": "comment-14321550",
            "author": "Robert Muir",
            "date": "2015-02-14T16:12:43+0000",
            "content": "Besides wanting to see the change come to fruition before 6.0, I also think it would be great to deprecate Filter, and not just rip it out. This would be a much easier transition for users I think.\n\nWe can rip it out in trunk of course. "
        },
        {
            "id": "comment-14321745",
            "author": "Ryan Ernst",
            "date": "2015-02-14T23:06:37+0000",
            "content": "Here is a patch which does as proposed.  I also think this is a good solution for 5.x.  Forcing users with custom filters to make a decision when compiling is better than hidden odd/changing behavior for most users. "
        },
        {
            "id": "comment-14322050",
            "author": "Adrien Grand",
            "date": "2015-02-15T16:26:53+0000",
            "content": "+1 to the patch "
        },
        {
            "id": "comment-14322151",
            "author": "ASF subversion and git services",
            "date": "2015-02-15T19:10:02+0000",
            "content": "Commit 1659982 from Ryan Ernst in branch 'dev/trunk'\n[ https://svn.apache.org/r1659982 ]\n\nLUCENE-6245: Force Filter subclasses to implement toString API from Query "
        },
        {
            "id": "comment-14322392",
            "author": "ASF subversion and git services",
            "date": "2015-02-16T05:09:03+0000",
            "content": "Commit 1660028 from Ryan Ernst in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1660028 ]\n\nLUCENE-6245: Force Filter subclasses to implement toString API from Query (merged 1659982) "
        },
        {
            "id": "comment-14495408",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:31:00+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}