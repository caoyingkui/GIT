{
    "id": "LUCENE-162",
    "title": "BooleanQuery.rewrite doen't",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "(lucene 1.3-rc2)\n\nBooleanQuery.rewrite contains an optimization for single terms that seems to be\nmissing a call to query.rewrite. The problem manifested for me when I had a\nsingle BooleanClause that contained a PrefixQuery. The fix seems to be a single\nline:\n\nP:\\vipscan\\src\\org\\apache\\lucene\\search>diff BooleanQuery.java D:\\java\\lucene-1.\n3-rc2\\src\\java\\org\\apache\\lucene\\search\\BooleanQuery.java\n228c228\n<         Query query = c.query.rewrite(reader);\n\u2014\n>         Query query = c.query;\n\n\nHere's the JUnit test case that probably should pass:\n\npackage org.apache.lucene.search;\n\nimport junit.framework.TestCase;\nimport junit.framework.Test;\nimport junit.framework.TestSuite;\nimport junit.textui.TestRunner;\nimport org.apache.lucene.store.RAMDirectory;\nimport org.apache.lucene.index.IndexWriter;\nimport org.apache.lucene.index.Term;\nimport org.apache.lucene.index.IndexReader;\nimport org.apache.lucene.analysis.WhitespaceAnalyzer;\nimport org.apache.lucene.document.Document;\nimport org.apache.lucene.document.Field;\nimport org.apache.lucene.search.PrefixQuery;\nimport org.apache.lucene.search.Query;\nimport org.apache.lucene.search.BooleanQuery;\n\nimport java.io.IOException;\n\n/**\n\n\t@author schnee\n\t@version $Id: BooleanPrefixQueryTest.java,v 1.1 2003/11/13 17:01:08 schnee Exp $\n **/\n\n\n\npublic class BooleanPrefixQueryTest extends TestCase\n{\n    public static final String cvsrevision = \"$Revision: 1.1 $\";\n\n\n    public static void main(String[] args)\n    {\n        TestRunner.run(suite());\n    }\n\n    public static Test suite()\n    {\n        return new TestSuite(BooleanPrefixQueryTest.class);\n    }\n\n    public BooleanPrefixQueryTest(String name)\n    {\n        super(name);\n    }\n\n    public void testMethod()\n    {\n        RAMDirectory directory = new RAMDirectory();\n\n        String[] categories = new String[]\n{\"food\",\n                                           \"foodanddrink\",\n                                           \"foodanddrinkandgoodtimes\",\n                                           \"food and drink\"}\n;\n\n        Query rw1 = null;\n        Query rw2 = null;\n        try\n        {\n            IndexWriter writer = new IndexWriter(directory, new\nWhitespaceAnalyzer(), true);\n            for (int i = 0; i < categories.length; i++)\n            {\n                Document doc = new Document();\n                doc.add(Field.Keyword(\"category\", categories[i]));\n                writer.addDocument(doc);\n            }\n            writer.close();\n\n            IndexReader reader = IndexReader.open(directory);\n            PrefixQuery query = new PrefixQuery(new Term(\"category\", \"foo\"));\n\n            rw1 = query.rewrite(reader);\n\n            BooleanQuery bq = new BooleanQuery();\nadd(query, true, false);\n\n            rw2 = bq.rewrite(reader);\n        }\n        catch (IOException e)\n        {\n            fail(e.getMessage());\n        }\n\n        BooleanQuery bq1 = null;\n        if (rw1 instanceof BooleanQuery)\n        {\n            bq1 = (BooleanQuery) rw1;\n        }\n\n        BooleanQuery bq2 = null;\n        if (rw2 instanceof BooleanQuery)\n        {\n            bq2 = (BooleanQuery) rw2;\n        }\n        else\n        {\n            fail(\"Rewrite\");\n        }\n\n        assertEquals(\"Number of Clauses Mismatch\", bq1.getClauses().length,\nbq2.getClauses().length);\n    }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2003-11-25T08:42:45+0000",
            "content": "I fixed this using the included patch. ",
            "author": "cutting@apache.org",
            "id": "comment-12321449"
        }
    ]
}