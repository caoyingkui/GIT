{
    "id": "SOLR-3001",
    "title": "Documents droping when using DistributedUpdateProcessor",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I have a problem with distributed indexing in solrcloud branch. I've setup a cluster with three Solr servers. I'm using DistributedUpdateProcessor to do the distributed indexing. What I've noticed is when indexing with StreamingUpdateSolrServer or CommonsHttpSolrServer and having a queue or a list which have more than one document the documents seems to be dropped. I did some tests which tried to index 450k documents. If I was sending the documents one by one, the indexing was properly executed and the three Solr instances was holding 450k documents (when summed up). However if when I tried to add documents in batches (for example with StreamingUpdateSolrServer and a queue of 1000) the shard I was sending the documents to had a minimum number of documents (about 100) while the other shards had about 150k documents. \n\nEach Solr was started with a single core and in Zookeeper mode. An example solr.xml file:\n\n \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<solr persistent=\"true\">\n <cores defaultCoreName=\"collection1\" adminPath=\"/admin/cores\" zkClientTimeout=\"10000\" hostPort=\"8983\" hostContext=\"solr\">\n  <core shard=\"shard1\" instanceDir=\".\" name=\"collection1\" />\n </cores>\n</solr>\n\n \n\nThe solrconfig.xml file on each of the shard consisted of the following entries:\n\n \n<requestHandler name=\"/update\" class=\"solr.XmlUpdateRequestHandler\">\n <lst name=\"defaults\">\n  <str name=\"update.chain\">distrib</str>\n </lst>\n</requestHandler>\n\n \n\n\n \n<updateRequestProcessorChain name=\"distrib\">\n <processor class=\"org.apache.solr.update.processor.DistributedUpdateProcessorFactory\" />\n <processor class=\"solr.LogUpdateProcessorFactory\" />\n <processor class=\"solr.RunUpdateProcessorFactory\"/>\n</updateRequestProcessorChain>\n\n \n\nI found a solution, but I don't know if it is a proper one. I've modified the code that is responsible for handling the replicas in:\nprivate List<String> setupRequest(int hash) of DistributedUpdateProcessorFactory\n\nI've added the following code:\n\n \nif (urls == null) {\n urls = new ArrayList<String>(1);\n urls.add(leaderUrl);  \n} else {\n if (!urls.contains(leaderUrl)) {\n  urls.add(leaderUrl);  \n }\n}\n\n \n\nafter:\n\n \nurls = getReplicaUrls(req, collection, shardId, nodeName);\n\n \n\nIf this is the proper approach I'll be glad to provide a patch with the modification. \n\n\u2013\nRegards\nRafa\u0142 Ku\u0107\nSematext :: http://sematext.com/ :: Solr - Lucene - Nutch\nLucene ecosystem search :: http://search-lucene.com/",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13178823",
            "date": "2012-01-03T17:07:54+0000",
            "content": "I fixed a bug around this a week or two ago (adding more than one doc per request) - I'll check around this again, but best may be to just try with an updated version. "
        },
        {
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13178827",
            "date": "2012-01-03T17:12:41+0000",
            "content": "Thanks for the information Mark. It may be the case, as I'm using solrcloud which is about 2 - 3 weeks old. I'll verify that as soon as I can.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13178840",
            "date": "2012-01-03T17:28:13+0000",
            "content": "Also, it's worth noting that it's been a bit since you have needed to define your own update chain - the distrib update processor is now part of the default chain - so of course you can define a custom chain - but no need to. "
        },
        {
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13179400",
            "date": "2012-01-04T10:29:59+0000",
            "content": "Mark, I've tried the newest solrcloud branch and I'm affraid the problem still exists. What I did to test is indexing 425543 using StreamingUpdateSolrServer (10000 queue size, 3 threads). Those documents were sent to the shard1. After indexation ended, the following number of documents were at all three shards:\n\nshard1: 5 documents\nshard2: 142424 documents\nshard3: 141275 documents\n\nand the query like: q=:&distrib=true returns 283704 documents total. So Solr dropped about 141839 which should probably be in the first shard, the one I'm sending the documents to. \n\nIf I send the documents on by one with the use of CommonsHttpSolrServer the numbers are as follows:\nshard1: 141725 documents\nshard2: 142474 documents\nshard3: 141344 documents\n\nI'm using the Solr version: solr-spec-version 4.0.0.2012.01.04.10.42.06 (from Solr admin). I did the test with update.chain set and without it. Both times the same behavior. \n\nBtw. The fact is the indexing is much, much faster right now using distributed indexing as the shards are getting document in batches.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13180120",
            "date": "2012-01-05T02:07:46+0000",
            "content": "Thanks for the verification Rafal - I'll dig into this tomorrow. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13180209",
            "date": "2012-01-05T06:03:45+0000",
            "content": "I've committed a fix to the solrcloud branch. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13180213",
            "date": "2012-01-05T06:11:31+0000",
            "content": "Btw. The fact is the indexing is much, much faster right now using distributed indexing as the shards are getting document in batches.\n\nYou mean faster after you updated to the latest rev? There was no buffering originally, so even if you where streaming it would use httpcommons server and send docs around one by one. Late last week I added the buffering though. Right now it buffers 10 docs per target shard, but I was thinking about whether or not we should make that configurable and/or raise it. "
        },
        {
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13180487",
            "date": "2012-01-05T16:02:29+0000",
            "content": "Thanks Mark it works flawlessly right now. \n\nAnd about updated - yes I was comparing the two version, one without buffering and the newest one. The newest version of solrcloud is much faster when indexing documents to shards. If you ask me, I would like to be able to setup the size of the buffer  "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13180886",
            "date": "2012-01-05T22:14:23+0000",
            "content": "+1 for controlling this.\n\nIs this issue resolved now? "
        },
        {
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13181198",
            "date": "2012-01-06T08:36:14+0000",
            "content": "Yes Otis, closing. "
        },
        {
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13181199",
            "date": "2012-01-06T08:36:40+0000",
            "content": "Fixed.  "
        }
    ]
}