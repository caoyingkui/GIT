{
    "id": "LUCENE-5598",
    "title": "About Scoring",
    "details": {
        "type": "Wish",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem",
        "components": [
            "core/query/scoring"
        ],
        "affect_versions": "4.7",
        "status": "Closed",
        "fix_versions": [
            "4.7"
        ]
    },
    "description": "I had been generating long type's indexing data using LongField(Field name is 'boost' and value is atomicLong.) for using CustomScoreQuery.\n And then, I'm applied following code.\n\n//code start ========================================\n FunctionQuery fquery = new FunctionQuery(new LongFieldSource(\"boost\"));\n CustomScoreQuery customQuery = new ScoreQuery(query, fquery);\n //code end =========================================\n\nIf indexed data count is 100, I expect 100, 99, 98, ... 91.\n But, the result was not matched with my expectation if the number of the indexed data gets increased. (For instance 999999985, 999999986, 999999987, 999999988, ... 999999994 when one billion index count )\n\nI thought that was caused by scoring alogorithm returning float value. (Floating point limit.)\n That is correct?\n How can I get the result i expect?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13966601",
            "author": "Erick Erickson",
            "content": "Please raise usage questions on the user's list rather than raising a JIRA. The JIRA is for know bugs/code changes and this is neither.\n\nSee: https://lucene.apache.org/solr/discussion.html\n\nBest,\nErick ",
            "date": "2014-04-11T14:54:31+0000"
        }
    ]
}