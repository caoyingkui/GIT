{
    "id": "LUCENE-2147",
    "title": "Improve Spatial Utility like classes",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/spatial"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "3.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "DistanceUnits can be improved by giving functionality to the enum, such as being able to convert between different units, and adding tests.\n\n\n\n\n\tGeoHashUtils can be improved through some code tidying, documentation, and tests.\n\n\n\n\n\tSpatialConstants allows us to move all constants, such as the radii and circumferences of Earth, to a single consistent location that we can then use throughout the contrib.  This also allows us to improve the transparency of calculations done in the contrib, as users of the contrib can easily see the values being used.  Currently this issues does not migrate classes to use these constants, that will happen in issues related to the appropriate classes.",
    "attachments": {
        "LUCENE-2147.patch": "https://issues.apache.org/jira/secure/attachment/12427715/LUCENE-2147.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-12-11T12:15:16+0000",
            "content": "Added patch that implementations described behavior. ",
            "author": "Chris Male",
            "id": "comment-12789268"
        },
        {
            "date": "2009-12-11T12:16:22+0000",
            "content": "Ideally DistanceUnits would be renamed to DistanceUnit and moved to the new util package, and GeoHashUtils would be moved to the util package as well. ",
            "author": "Chris Male",
            "id": "comment-12789270"
        },
        {
            "date": "2009-12-11T13:51:47+0000",
            "content": "Chris, good stuff so far.\nI have added a couple of final keywords and prevent some autoboxing in GeoHashUtils as the char / int values should be mainly cached anyway. this prevents a couple of object creations.\nI also added a testcase which relates to the weird precision issues in LUCENE-1815 that seem to be gone now - good stuff! -> btw I like that we have only one decode method instead of the precision one.\n\nAt the current state I found that the SpatialConstants should be part of DistanceUnits provided as getters. This might change in the future if there are more constants but for now I would rather put them into the enum as this enforces consistency for distance units.\n\nthoughts? ",
            "author": "Simon Willnauer",
            "id": "comment-12789313"
        },
        {
            "date": "2009-12-11T13:57:12+0000",
            "content": "Hi,\n\nYeah you are right about DistanceUnits using the SpatialConstants.  I would like to leave SpatialConstants in as it gives us a single place to manage these values, particularly if the values are dependent on eachother (for example the circumference should really depend on the radius).  However adding to DistanceUnits getEarthRadius() and getEarthCircumference() would make alot of sense in the current environment.  These could then simply pull their values from the SpatialConstants.\n\nI am fine with removing SpatialConstants if you feel this is overkill. ",
            "author": "Chris Male",
            "id": "comment-12789316"
        },
        {
            "date": "2009-12-18T11:04:32+0000",
            "content": "\n\tFixed bug in the patch which assigned earthCircumference to earthRadius in the DistanceUnits constructor.\n\tAdded javadoc to DistanceUnits constructor for new parameters\n\tTidied some of the other javadoc\n\n ",
            "author": "Chris Male",
            "id": "comment-12792433"
        },
        {
            "date": "2009-12-19T12:18:28+0000",
            "content": "chris this looks good I feel that we are pretty close to commit this. I will wait another 2 days, review again and announce the commit. ",
            "author": "Simon Willnauer",
            "id": "comment-12792836"
        },
        {
            "date": "2009-12-21T10:14:03+0000",
            "content": "Improved javadoc on DistanceUnits.convert so its a little clearer. ",
            "author": "Chris Male",
            "id": "comment-12793144"
        },
        {
            "date": "2009-12-28T17:56:51+0000",
            "content": "Chris, this seems to be ready to be committed soon. I removed the \"flux\" warnings in the class JavaDocs, converted the tests to junit 4 and added a CHANGES.TXT notice to make it ready to be committed. ",
            "author": "Simon Willnauer",
            "id": "comment-12794840"
        },
        {
            "date": "2009-12-30T10:32:05+0000",
            "content": "Since this is the first issue which comes near to be committed some questions arise from my side if we should mark the new API as experimental like the function API in o.a.l.s.function. I think it would make sense to keep a warning that contrib/spatial might slightly change in the future.\nOn the other hand we should try to put more confidence into contrib/spatial for more user acceptance. I currently work for customers that moved away from spatial due to its early stage and \"flux\" warnings which is quite understandable though. I would like to hear other opinions regarding this topic - especially opinions of more experienced committers would be appreciated. ",
            "author": "Simon Willnauer",
            "id": "comment-12795277"
        },
        {
            "date": "2010-01-02T12:40:35+0000",
            "content": "I'd say that we remove the flux warnings, but instead put a note in the top level that since this is a contrib module, it will not adhere to Lucene core's strict back compat. policy. ",
            "author": "Grant Ingersoll",
            "id": "comment-12795858"
        },
        {
            "date": "2010-01-02T18:39:04+0000",
            "content": "\nI'd say that we remove the flux warnings, but instead put a note in the top level that since this is a contrib module, it will not adhere to Lucene core's strict back compat. policy. \nthat sounds good, I will put it into a package.html doc and will also add a readme to the project itself.\n\nI think this issue is good to go. I will commit this is a few days if nobody objects.\n ",
            "author": "Simon Willnauer",
            "id": "comment-12795892"
        },
        {
            "date": "2010-01-02T18:46:59+0000",
            "content": "Okay, I will remove them from the other patches as well and update them over the next few days. ",
            "author": "Chris Male",
            "id": "comment-12795895"
        },
        {
            "date": "2010-01-05T22:05:11+0000",
            "content": "Committed in revision 896240\n\nThanks Chris ",
            "author": "Simon Willnauer",
            "id": "comment-12796867"
        }
    ]
}