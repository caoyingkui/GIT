{
    "id": "SOLR-9852",
    "title": "Solr JDBC doesn't implement columns' metadata",
    "details": {
        "components": [
            "Parallel SQL"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "This is the error I get (from Squirrel SQL) while trying to get the objects -meaning both tables and columns metadata\n\n2016-12-12 13:47:48,241 [Thread-2] ERROR net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo  - Error occurred creating data types collection\njava.lang.UnsupportedOperationException\n\tat org.apache.solr.client.solrj.io.sql.DatabaseMetaDataImpl.getTypeInfo(DatabaseMetaDataImpl.java:773)\n\tat net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData.getDataTypesSimpleNames(SQLDatabaseMetaData.java:1978)\n\tat net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo.loadDataTypes(SchemaInfo.java:900)\n\tat net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo.privateLoadAll(SchemaInfo.java:315)\n\tat net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo.reloadAll(SchemaInfo.java:208)\n\tat net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo.reloadAll(SchemaInfo.java:198)\n\tat net.sourceforge.squirrel_sql.client.session.mainpanel.objecttree.ObjectTree$3.run(ObjectTree.java:315)\n\tat net.sourceforge.squirrel_sql.fw.util.TaskExecuter.run(TaskExecuter.java:82)\n\tat java.lang.Thread.run(Thread.java:745)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-12T19:28:12+0000",
            "author": "Erick Erickson",
            "content": "Please raise issues on the user's list first to see if it's a usage issue or an actual bug/improvement. In this particular case it's not clear whether \n1> it's a Solr issue at all or a Squirrel SQL issue.\n2> if it's a Solr issue, whether it's intended to be supported or not.\n\nOnce it does become clear (and lots more eyes see these on the user's list) we can add more details to the JIRA. ",
            "id": "comment-15742889"
        },
        {
            "date": "2016-12-12T19:30:59+0000",
            "author": "Kevin Risden",
            "content": "A lot of the JDBC metadata isn't populated. Feel free to submit a patch that implements this functionality. ",
            "id": "comment-15742904"
        },
        {
            "date": "2016-12-12T19:36:33+0000",
            "author": "Uwe Schindler",
            "content": "I think the main issue is the exception thrown. According to SQL and JDBC standards, UOE is just wrong. It must be an SQLException with correct SQLState code. ",
            "id": "comment-15742917"
        },
        {
            "date": "2016-12-13T07:20:00+0000",
            "author": "Rani Y.",
            "content": "I am quite sure this is something which should be implemented by JDBC.\nUnless you assume that the users of the JDBC know all the columns of a given collection/table, there should be an implementation to getting the columns data and types.\nIf I understand correctly is was implemented just not in the write places, because after a query returns, there is an ability to see the columns types.\nReceiving the meta-data of all objects is the \"entry level\" for JDBC implementations.\nThough, it does seem quite weird, that also the Spark's JDBC implementors are having similar problems. ",
            "id": "comment-15744424"
        },
        {
            "date": "2016-12-13T07:21:12+0000",
            "author": "Rani Y.",
            "content": ".. And I am not sure I know currently how to fix this, I have to look deeper into the code to do this.\nI just tried to use this and faced some awkward situation ",
            "id": "comment-15744426"
        },
        {
            "date": "2018-03-26T11:10:47+0000",
            "author": "Saumitra Srivastav",
            "content": "Whats the latest update on this? We are trying to use Solr as a datasource for Tableau through a jdbc-obdc bridge and its not able to fetch column metadata. If no one is working on this, I would like to try creating\u00a0a patch for this. Looks like getColumns\u00a0in\u00a0https://github.com/apache/lucene-solr/blob/releases/lucene-solr/7.2.1/solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DatabaseMetaDataImpl.java#L739\u00a0needs to be implemented.\u00a0I am familiar with Solr, but not so much with jdbc. Can any solr dev provide a high level overview of what needs to be done here to help me get started. ",
            "id": "comment-16413688"
        },
        {
            "date": "2018-03-27T00:43:04+0000",
            "author": "Kevin Risden",
            "content": "Saumitra Srivastav - As far as I know no one is working on this currently. When I first worked on the SQL integration with Solr, I was able to get a JDBC-ODBC bridge to work.\u00a0\n\n\u00a0\n\nYou would need to figure out what the stack trace is and find the exact method that needs to be implemented. There are a LOT of different places where metadata can be pulled from. Once you have the exact stack trace, then you can work on implementing the proper return metadata. ",
            "id": "comment-16414827"
        },
        {
            "date": "2018-03-27T06:19:14+0000",
            "author": "Rani Y.",
            "content": "It shouldn't be too hard to do it.\n\nWhen implementing JDBC, one of the classes which should be implemeneted in the ResultSet, in this class there is a MetaData class, which contains all the relevant data.\n\nIt is quite well documented,\u00a0 how the data should be reflected through this meta-data. If you want to be even more standard, then you can implement answer to some \"virtual\" tables which are system type tables only containing metadata about others.\n\nTo me, its quite awkward that this was not implemented, as it prevents usage by any tool which is not hardcoding the schema data. ",
            "id": "comment-16415080"
        },
        {
            "date": "2018-03-27T07:44:09+0000",
            "author": "Saumitra Srivastav",
            "content": "Kevin Risden Which bridge were you able to get working? I am hitting issues with Easysoft's bridge (https://www.easysoft.com/products/data_access/jdbc_odbc_bridge/index.html).\u00a0 ",
            "id": "comment-16415161"
        },
        {
            "date": "2018-04-03T02:43:47+0000",
            "author": "Kevin Risden",
            "content": "The ODBC bridge I got working is detailed here: https://github.com/risdenk/solrj-jdbc-testing/tree/master/odbc\n\n\u00a0\n\nSlide 20 of https://www.slideshare.net/lucidworks/solr-jdbc-presented-by-kevin-risden-avalon-consulting\u00a0has some detail. The recording is here:\u00a0https://www.youtube.com/watch?v=XpWomATSKzM ",
            "id": "comment-16423399"
        }
    ]
}