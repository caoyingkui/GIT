{
    "id": "SOLR-4891",
    "title": "JsonLoader should preserve field value types from the JSON content stream",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.4"
        ],
        "components": [
            "update"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "JSON content streams carry some basic type information for their field values, as parsed by Noggit: LONG, NUMBER, BIGNUMBER, and BOOLEAN.  JsonLoader should set field value object types in the SolrInputDocument according to the content stream's data types. \n\nCurrently JsonLoader converts all non-String-typed field values to String-s.\n\nThere is a comment in JsonLoader.parseSingleFieldValue(), where the convert-everything-to-string logic happens, that says \"for legacy reasons, single values s are expected to be strings\", but other content streams' type information is not flattened like this, e.g. JavabinLoader.",
    "attachments": {
        "SOLR-4891-BigInteger-bugfix.patch": "https://issues.apache.org/jira/secure/attachment/12586334/SOLR-4891-BigInteger-bugfix.patch",
        "SOLR-4891.patch": "https://issues.apache.org/jira/secure/attachment/12585873/SOLR-4891.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Steve Rowe",
            "id": "comment-13673212",
            "date": "2013-06-03T15:39:24+0000",
            "content": "Simple patch preserving JSON types in SolrInputDocument, with some tests. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13674609",
            "date": "2013-06-04T17:51:36+0000",
            "content": "If there are no objections I'll commit this later today. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13675493",
            "date": "2013-06-05T00:59:23+0000",
            "content": "Committed:\n\n\n\ttrunk: r1489676\n\tbranch_4x: r1489677\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13676011",
            "date": "2013-06-05T15:14:56+0000",
            "content": "At Hoss's suggestion on #solr IRC last night, I tested whether JsonLoader behavior has changed around BigInteger and BigDecimal values as a result of the changes committed under this issue.\n\nI'm reopening to address an issue with adding JSON BIGNUMBER-s (returned by the Noggit parser when a number won't fit in either a long or a double) to trie integer or long fields: a NumberFormatException is no longer triggered, and the values are silently corrupted.\n\nBefore committing the patch on this issue, BigInteger-typed values were not created for BIGNUMBER-s in SolrInputDocument; instead, they (along with every other JSON value) were converted to String-s, and then adding such a value to an integer or long field would cause a NumberFormatException to be thrown from Integer.parseInt() or Long.parseLong().  This was proper and good.\n\nBut now, BigInteger-typed values are converted (in TrieField.createField() to int/long using BigInteger's intValue() and longValue() methods, which return only the low-order 32 and 64 bits, respectively.  These values are always corrupted: the truncated high-order bits are guaranteed to be non-zero, since BigInteger typing only happens when values won't fit into 64 bits.\n\nReverting back to String-typed BIGNUMBER values fixes the problem.\n\nBy contrast, BigDecimal's doubleValue() and floatValue() methods truncate the low-order bits, resulting in loss of precision rather than corruption.  This is the same behavior used by Double.parseDouble() and Float.parseFloat().  Reverting back to String-typing for decimal BIGNUMBER-s in addition to integral BIGNUMBER-s won't be a problem.\n\nPatch forthcoming. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13676021",
            "date": "2013-06-05T15:25:13+0000",
            "content": "patch - committing shortly "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13676029",
            "date": "2013-06-05T15:30:00+0000",
            "content": "Committed:\n\n\n\ttrunk: r1489914\n\tbranch_4x: r1489915\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13716804",
            "date": "2013-07-23T18:38:38+0000",
            "content": "Bulk close resolved 4.4 issues "
        }
    ]
}