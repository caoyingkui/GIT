{
    "id": "LUCENE-6409",
    "title": "LongBitSet.ensureCapacity overflows on numBits > Integer.MaxValue",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/other"
        ],
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "LongBitSet.ensureCapacity calculates the number of longs required to store the number of bits correctly and allocates a long[] accordingly, but then shifts the array length (which is an int!) left by 6 bits.  The int should be cast to long before performing the shift.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14485294",
            "author": "ASF GitHub Bot",
            "date": "2015-04-08T14:24:00+0000",
            "content": "GitHub user LucVL opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/140\n\n    LUCENE-6409 BitSetFixes\n\n    The pull request actually contains a few separate commits:\n\n\tDemonstrates the bug in a simple test case and adds a patch.\n\tCorrects ensureCapacity\n\tOptimized bits2words for both FixedBitSet and LongBitSet\n\n\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/LucVL/lucene-solr lucene-6409-BitSetFixes\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/140.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #140\n\n\ncommit 44adaaa577839225f60a355fc3538631e0b9e965\nAuthor: Luc Vanlerberghe <luc.vanlerberghe@bvdinfo.com>\nDate:   2014-12-12T15:48:23Z\n\n    Demonstrate bug in LongBitSet.ensureCapacity\n\ncommit bb4257da61d45ab559ff8e3b23d9aa1d3981d366\nAuthor: Luc Vanlerberghe <luc.vanlerberghe@bvdinfo.com>\nDate:   2014-12-12T15:53:54Z\n\n    LongBitSet.ensureCapacity: Cast to long before shifting left!\n\ncommit a70e1d4b1b654e2e3655c289485af28ecdc9cd92\nAuthor: Luc Vanlerberghe <luc.vanlerberghe@bvdinfo.com>\nDate:   2014-12-12T16:17:09Z\n\n    Avoid an \"if\" in bits2words and corrected some comments\n\ncommit fd1cce82acd74a12aa4b022582985dfb8c8e4193\nAuthor: Luc Vanlerberghe <luc.vanlerberghe@bvdinfo.com>\nDate:   2015-04-08T13:48:51Z\n\n    Fixed grammar\n\ncommit 849dbf7a983040b50b32bd798ad191f8dd39bffb\nAuthor: Luc Vanlerberghe <luc.vanlerberghe@bvdinfo.com>\nDate:   2015-04-08T13:49:45Z\n\n    Merge branch 'trunk' into BitSetFixes\n\n "
        },
        {
            "id": "comment-14485313",
            "author": "Adrien Grand",
            "date": "2015-04-08T14:41:37+0000",
            "content": "Thanks for the fixes! I'm wondering that this new approach might cause bugs if you create bit sets of length 0. Can you add tests for this case too? "
        },
        {
            "id": "comment-14485316",
            "author": "Luc Vanlerberghe",
            "date": "2015-04-08T14:42:44+0000",
            "content": "While looking over the code, I have some more remarks on Fixed-/LongBitSet that should be investigated:\n\n\tHarmonize the use of numWords vs. bits.length vs. numBits\n\t\n\t\tE.g.: cardinality scans up to bits.length, while \"or\" asserts on index<numWords\n\t\n\t\n\tPerformance: If a BitSet is allocated with n bits, ensureCapacity with the same number n shouldn't grow the BitSet\n\t\n\t\tEither both the constructor and ensureCapacity should allocate a larger array than really needed or neither. ensureCapacity contains:\n\n    if (numBits < bits.length()) {\n      return bits;\n    } else {\n      int numWords = bits2words(numBits);\n      long[] arr = bits.getBits();\n      if (numWords >= arr.length) {\n        arr = ArrayUtil.grow(arr, numWords + 1);\n      }\n      return new FixedBitSet(arr, arr.length << 6);\n    }\n\n\nThe first \"if\" will fail and the second \"if\" will succeed, causing arr to be grown to at least 1 more...\n\t\n\t\n\n "
        },
        {
            "id": "comment-14489470",
            "author": "Luc Vanlerberghe",
            "date": "2015-04-10T11:47:00+0000",
            "content": "I added testBits2Words on TestLongBitSet with various values, concentrating on boundary cases\n\nI found some more issues that may cause spurious side effects.\nWhile trying to correct them, it turns out that the tests do 'illegal' things (like setting bits outside the [0, numBits[ range by manipulating the backing array directly)\nThis should cause things like cardinality() to fail (because it doesn't use a mask for the last long, probably for performance), but apparently that's never tested.\n\nI propose that creating a new Long-/FixedBitSet based on an existing backing array should assert (in debug mode) that all the 'ghost' bits with index >= numBits should be clear.\n\nPerhaps I should create a new issue for this to allow the ensureCapacity bug to be closed first. "
        },
        {
            "id": "comment-14489722",
            "author": "Adrien Grand",
            "date": "2015-04-10T14:49:03+0000",
            "content": "I propose that creating a new Long-/FixedBitSet based on an existing backing array should assert (in debug mode) that all the 'ghost' bits with index >= numBits should be clear.\n\n+1\n\nPerhaps I should create a new issue for this to allow the ensureCapacity bug to be closed first.\n\nIt works for me! If you think you are done with this fix, I'll give it a deeper look and merge it. "
        },
        {
            "id": "comment-14491999",
            "author": "ASF subversion and git services",
            "date": "2015-04-13T07:14:01+0000",
            "content": "Commit 1673123 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1673123 ]\n\nLUCENE-6409: Fixed integer overflow in LongBitSet.ensureCapacity. "
        },
        {
            "id": "comment-14492001",
            "author": "ASF subversion and git services",
            "date": "2015-04-13T07:16:27+0000",
            "content": "Commit 1673124 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673124 ]\n\nLUCENE-6409: Fixed integer overflow in LongBitSet.ensureCapacity. "
        },
        {
            "id": "comment-14492003",
            "author": "Adrien Grand",
            "date": "2015-04-13T07:19:54+0000",
            "content": "Thanks Luc, I committed your changes. Let's have another JIRA issue to ensure that bits beyond numBits remain clear as you suggested? "
        },
        {
            "id": "comment-14493845",
            "author": "ASF GitHub Bot",
            "date": "2015-04-14T09:37:53+0000",
            "content": "Github user LucVL closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/140 "
        },
        {
            "id": "comment-14493846",
            "author": "ASF GitHub Bot",
            "date": "2015-04-14T09:37:54+0000",
            "content": "Github user LucVL commented on the pull request:\n\n    https://github.com/apache/lucene-solr/pull/140#issuecomment-92720200\n\n    Committed by Adrien Grand yesterday.\n    Thanks Adrian! "
        },
        {
            "id": "comment-14496227",
            "author": "Luc Vanlerberghe",
            "date": "2015-04-15T14:19:02+0000",
            "content": "I created a separate JIRA issue for the 'ghost bits' issue\n\nLUCENE-6427 "
        },
        {
            "id": "comment-14505098",
            "author": "ASF subversion and git services",
            "date": "2015-04-21T15:17:33+0000",
            "content": "Commit 1675134 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1675134 ]\n\nLUCENE-6409: Mark TestLongBitSet.testHugeCapacity as @Nightly. "
        },
        {
            "id": "comment-14505099",
            "author": "ASF subversion and git services",
            "date": "2015-04-21T15:18:07+0000",
            "content": "Commit 1675135 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1675135 ]\n\nLUCENE-6409: Mark TestLongBitSet.testHugeCapacity as @Nightly. "
        },
        {
            "id": "comment-14586956",
            "author": "Anshum Gupta",
            "date": "2015-06-15T21:45:06+0000",
            "content": "Bulk close for 5.2.0. "
        }
    ]
}