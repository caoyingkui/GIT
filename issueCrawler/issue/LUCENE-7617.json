{
    "id": "LUCENE-7617",
    "title": "Improve GroupingSearch API and extensibility",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "6.4"
        ]
    },
    "description": "While looking at how to make grouping work with the new XValuesSource API in core, I thought I'd try and clean up GroupingSearch a bit.  We have three different ways of grouping at the moment: by doc block, using a single-pass collector; by field; and by ValueSource.  The latter two both use essentially the same two-pass mechanism, with different Collector implementations.\n\nI can see a number of possible improvements here:\n\n\tabstract the two-pass collector creation into a factory API, which should allow us to add the XValuesSource implementations as well\n\tclean up the generics on the two-pass collectors - maybe look into removing them entirely?  I'm not sure they add anything really, and we don't have them on the equivalent plan search APIs\n\tthink about moving the document block method into the join module instead, alongside all the other block-indexing code\n\trename the various Collector base classes so that they don't have 'Abstract' in them anymore",
    "attachments": {
        "LUCENE-7617.patch": "https://issues.apache.org/jira/secure/attachment/12845371/LUCENE-7617.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15794849",
            "date": "2017-01-03T11:36:00+0000",
            "content": "Here's a patch for the first point above, creating a new Grouper class that you can pass to GroupingSearch.  Needs javadocs, but all tests pass. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15800777",
            "date": "2017-01-05T08:44:43+0000",
            "content": "+1 to this change. This should make using these collectors easier.\n\nThere are a couple of places where I saw if statements without curly brackets. Maybe add these curly brackets. I find it easier to read.\n\nclean up the generics on the two-pass collectors - maybe look into removing them entirely?\n\nAs far as I can see the bases classes use these generics, so that subclasses don't have to do manual casts. Which parts you like to cleanup?\n\nthink about moving the document block method into the join module instead, alongside all the other block-indexing code\n\nI would prefer if the `BlockGroupingCollector` stayed in the grouping module. The block indexing is a feature provided by core and the way I see it modules can have features that use that. Also the the join and grouping modules provide each a different functionality. Although from a higher level the functionality is a bit overlapping, in a sense that some use cases could be implemented with both the join or the grouping module.\n\nrename the various Collector base classes so that they don't have 'Abstract' in them anymore\n\nagreed, a lot 'Abstract' in the names  ",
            "author": "Martijn van Groningen"
        },
        {
            "id": "comment-15804745",
            "date": "2017-01-06T15:13:02+0000",
            "content": "Thanks for the review Martijn!  Here's an updated patch:\n\n\tno more 'Abstract' in abstract class names\n\tgenerics are changed so that instead of Class<ComplicatedInnerClassName<T>>, we just use Class<T>.  Also, type parameters are all set to T rather than GROUP_VALUE_TYPE.  You can shrink your windows when looking at grouping code now \n\tBlock grouping is left where it is\n\tAdded javadocs, and extra {} around if statements.\n\n\n\nGiven that everything here is marked as experimental, I think we're OK to just backwards-break?  Most people will be using GroupingSearch, I think, which stays the same. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15805662",
            "date": "2017-01-06T20:31:12+0000",
            "content": "+1 Thanks for cleaning this up!\n\nI found a few places still using GROUP_VALUE_TYPE, in SecondPassGroupingCollector.SearchGroupDocs, GroupDocs, TopGroups, AllGroupHeadsCollector.GroupHead and Grouping.Command (in Solr).\n\nGiven that everything here is marked as experimental, I think we're OK to just backwards-break?\n\nYes, that is OK. \n ",
            "author": "Martijn van Groningen"
        },
        {
            "id": "comment-15807222",
            "date": "2017-01-07T10:05:54+0000",
            "content": "Final patch.  I ended up removing the no-op group head collectors, as Solr was relying on the AllGroupHeadCollector returning a FixedBitSet - this should probably be just a Bits instance instead, but that can be dealt with in a later issue.  Will commit later on today. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15807390",
            "date": "2017-01-07T12:08:23+0000",
            "content": "The ASF bot didn't pick up the commits, for some reason:\n\nbranch_6x: d4d3ede51cc114ad98fb05e19fd6c6e15e724f34\nmaster: da30f21f5d2c90a4e3d4fae87a297adfd4bbb3cb\n\nThanks for the reviews Martijn! ",
            "author": "Alan Woodward"
        }
    ]
}