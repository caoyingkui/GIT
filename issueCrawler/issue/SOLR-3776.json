{
    "id": "SOLR-3776",
    "title": "Parse NamedList for JaspellLookup factory, so fuzzy and edit distance can be enabled",
    "details": {
        "affect_versions": "4.0-BETA",
        "status": "Closed",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Curretly JaspellLookup in Lucene already supports enabling fuzzy matches in its ternary tree, but the factory in Solr ignores the NamedList completely and just uses \"new JaspellLookup()\". This should be extended, so fuzzy suggestions would be possible (if dictionary is not too big). This is better than no alternative until a FST-based fuzzy work -> Mike, hey!",
    "attachments": {
        "SOLR-3776.patch": "https://issues.apache.org/jira/secure/attachment/12543266/SOLR-3776.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13445902",
            "date": "2012-08-31T13:04:04+0000",
            "content": "Simple patch. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13445906",
            "date": "2012-08-31T13:06:27+0000",
            "content": "Javadocs fix. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13447189",
            "date": "2012-09-03T10:09:32+0000",
            "content": "I did some testing on the weekend and found out that Jaspell's fuzzy algorithm is not really useful for suggester, because it can do only prefix matching or a fuzzy match, but not combined. This means, if you enter a prefix term, the jaspell suggest algorithm only returns results in the ternary search tree that are exactly the distance away from the entered text.  It would be better to match the \"prefix\" in a fuzzy way, but the current approach does not do this and I see no solution how to do this.\n\nFrom my code analysis, the remaining code to do prefix matching is identical to TSTLookup, so I wonder why we have both at all? Let's remove the Jaspell one completely, its just the same concept with more ugly code than the straight-forward TSTLookup!\n\nI will close this issue as \"won't fix\". "
        }
    ]
}