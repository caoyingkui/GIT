{
    "id": "SOLR-11880",
    "title": "Avoid creating new exceptions for every request made to MDCAwareThreadPoolExecutor by distributed search and update operations",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "MDCAwareThreadPoolExecutor has this line in it's{execute method\n\n\u00a0\n\nfinal Exception submitterStackTrace = new Exception(\"Submitter stack trace\");\n\n\nThis means that every call via the a thread pool will create this exception, and only when it sees an error will it be used.",
    "attachments": {
        "SOLR-11880.patch": "https://issues.apache.org/jira/secure/attachment/12924528/SOLR-11880.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-22T17:40:45+0000",
            "content": "If we remove\u00a0that exception then we're running blind. There would be no way to get the stack trace of the submitter when an actual exception happens inside the\u00a0executor thread. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16334607"
        },
        {
            "date": "2018-01-23T05:27:26+0000",
            "content": "We should create a custom Exception which doesn't fillInStackTrace() in constructor. we can do the fillInStackTrace lazily ",
            "author": "Noble Paul",
            "id": "comment-16335396"
        },
        {
            "date": "2018-01-23T07:57:06+0000",
            "content": "I don't think that is possible.\u00a0If we want the caller's stack trace then we either call fillInStackTrace at the point of the call or we use a cached copy from the right place. If this is indeed a bottleneck (and I am not sure that it is) then we can either eliminate the submitter stack trace with a flag or do something ugly/clever like having the caller of execute method pass down a\u00a0static exception object ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16335473"
        },
        {
            "date": "2018-01-31T14:28:33+0000",
            "content": "Noble Paul - I suspect the commits so far here were actually meant for SOLR-11067? ",
            "author": "Cassandra Targett",
            "id": "comment-16346905"
        },
        {
            "date": "2018-01-31T20:18:17+0000",
            "content": "Cassandra Targett right. this is what happens when you work on multiple tickets at the same time  ",
            "author": "Noble Paul",
            "id": "comment-16347545"
        },
        {
            "date": "2018-05-22T11:44:11+0000",
            "content": "Taking another look at this one. The distributed update and search requests are the most frequent users of this executor. Tracing each, I see that the Runnable added by HttpShardHandler.submit, SolrCmdDistributor.submit and StreamingSolrClients.ErrorReportingConcurrentUpdateSolrClient never throw any exceptions but they are tracked and logged as part of the shard response or similar classes. Therefore there is no point in creating an Exception object for these two usages. So, this patches adds another constructor for MDCAwareThreadPoolExecutor which disables the submitter stack trace for search and update use-cases. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16483820"
        },
        {
            "date": "2018-05-22T13:56:51+0000",
            "content": "Commit 5a47ed4209620f6ea80af00774f270a02604c966 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5a47ed4 ]\n\nSOLR-11880: Avoid creating new exceptions for every request made to MDCAwareThreadPoolExecutor by distributed search and update operations ",
            "author": "ASF subversion and git services",
            "id": "comment-16483985"
        },
        {
            "date": "2018-05-22T13:57:55+0000",
            "content": "Commit c4a41c4c6a368f4461f6d31cfa6647348a3f7666 in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c4a41c4 ]\n\nSOLR-11880: Avoid creating new exceptions for every request made to MDCAwareThreadPoolExecutor by distributed search and update operations\n\n(cherry picked from commit 5a47ed4) ",
            "author": "ASF subversion and git services",
            "id": "comment-16483989"
        }
    ]
}