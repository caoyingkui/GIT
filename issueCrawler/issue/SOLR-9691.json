{
    "id": "SOLR-9691",
    "title": "Streaming expressions need to be able to use a metric computed by the facet stream as a field in other streams.",
    "details": {
        "components": [
            "Parallel SQL"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.2.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Using 6.2.1, I want to use a facet stream to do an intermediate count and then sum up the counts in a rollup stream, i.e. something like:\n\n\nrollup(\n  sort(\n    hashJoin(\n      search(products,\n                  q=\"*:*\",\n                  fl=\"product_id,model_num\",\n                  sort=\"product_id asc\",\n                  qt=\"/export\",\n                  partitionKeys=\"product_id\"),\n      hashed=facet(transactions, q=\"*:*\", buckets=\"product_id\", bucketSizeLimit=1000000, bucketSorts=\"product_id asc\", count(*)),\n      on=\"product_id\"\n    ), \n    by=\"model_num asc\"\n  ), \n  over=\"model_num\",\n  sum(count(*))\n)\n\n\n\nBasically, I want to get a count of each product_id from the transactions collection (# of transactions per product) and then join that with the products table to generate a projection containing:\n\n\n{\n  \"result-set\": {\n    \"docs\": [\n      {\n        \"product_id\": \"1234\",\n        \"count(*)\": 4,\n        \"model_num\": \"X\"\n      },\n      {\n        \"product_id\": \"5678\",\n        \"count(*)\": 5,\n        \"model_num\": \"Y\"\n      },\n      ...\n    ]\n  }\n}\n\n\n\nThis works, but the outer rollup doesn't recognize the count as a field. I get this error:\n\n\n{\n  \"result-set\": {\n    \"docs\": [\n      {\n        \"EXCEPTION\": \"Invalid expression sum(count(*)) - expected sum(columnName)\",\n        \"EOF\": true\n      }\n    ]\n  }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-25T14:34:07+0000",
            "author": "Dennis Gove",
            "content": "I suspect it's seeing count(*) and considering it an expression representing CountMetric. Try quoting the field name to get around this\n\nsum(\"count(*)\")\n\n ",
            "id": "comment-15605474"
        },
        {
            "date": "2016-10-25T15:36:26+0000",
            "author": "Timothy Potter",
            "content": "NPE results:\n\n\n2016-10-25 15:35:14.737 ERROR (qtp1348949648-22) [c:transactions s:shard2 r:core_node2 x:transactions_shard2_replica1] o.a.s.c.s.i.s.ExceptionStream java.lang.NullPointerException\n\tat org.apache.solr.client.solrj.io.stream.metrics.SumMetric.update(SumMetric.java:69)\n\tat org.apache.solr.client.solrj.io.stream.RollupStream.read(RollupStream.java:254)\n\tat org.apache.solr.client.solrj.io.stream.ExceptionStream.read(ExceptionStream.java:68)\n\tat org.apache.solr.handler.StreamHandler$TimerStream.read(StreamHandler.java:449)\n\tat org.apache.solr.response.TextResponseWriter.writeTupleStream(TextResponseWriter.java:308)\n\tat org.apache.solr.response.TextResponseWriter.writeVal(TextResponseWriter.java:168)\n\tat org.apache.solr.response.JSONWriter.writeNamedListAsMapWithDups(JSONResponseWriter.java:178)\n\tat org.apache.solr.response.JSONWriter.writeNamedList(JSONResponseWriter.java:294)\n\tat org.apache.solr.response.JSONWriter.writeResponse(JSONResponseWriter.java:90)\n\tat org.apache.solr.response.JSONResponseWriter.write(JSONResponseWriter.java:55)\n\tat org.apache.solr.response.QueryResponseWriterUtil.writeQueryResponse(QueryResponseWriterUtil.java:65)\n\tat org.apache.solr.servlet.HttpSolrCall.writeResponse(HttpSolrCall.java:726)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:468)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:257)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:208)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)\n\n ",
            "id": "comment-15605628"
        },
        {
            "date": "2016-10-25T15:42:25+0000",
            "author": "Dennis Gove",
            "content": "Seems to throw on https://github.com/apache/lucene-solr/blob/master/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/metrics/SumMetric.java#L69\n\nIs it at all possible for the value count(*) to be null? I have to suspect that the extracted columnName within SumMetric isn't the expected \"count(*)\" but is something else. ",
            "id": "comment-15605650"
        },
        {
            "date": "2016-10-25T16:11:53+0000",
            "author": "Joel Bernstein",
            "content": "Once the metric is computed it should be able to be used like any other field, it's just a string key pointing to a numeric.\n\nCan you inspect the Tuples in the SumMetric.update() function? ",
            "id": "comment-15605723"
        },
        {
            "date": "2016-10-25T17:07:45+0000",
            "author": "Timothy Potter",
            "content": "yes, the Tuple has count as a key in the map ... \n\nupdate: columnName=\"count(*)\", tuple: org.apache.solr.client.solrj.io.Tuple@4f5219db, {product_id=1234, count(*)=4, model_num=X}\n\n\n\nso adding the double quotes around the count arg passed to sum() doesn't work because the double-quotes\n\nsounds more like this is a bug vs. an improvement ... ",
            "id": "comment-15605874"
        },
        {
            "date": "2016-10-25T18:24:10+0000",
            "author": "Joel Bernstein",
            "content": "\nAs a work around you should be able to use the select() function to change the name of the count field. ",
            "id": "comment-15606062"
        },
        {
            "date": "2016-10-25T18:25:17+0000",
            "author": "Joel Bernstein",
            "content": "Just wrap the facet expression in a select function. ",
            "id": "comment-15606069"
        },
        {
            "date": "2016-10-25T19:04:12+0000",
            "author": "Timothy Potter",
            "content": "oh snap! that worked beautifully ~ thanks guys! should we keep this open as I still think it should just work with sum(count) without having to use select but maybe it's sufficient to just doc this? ",
            "id": "comment-15606175"
        },
        {
            "date": "2016-10-25T19:35:44+0000",
            "author": "Joel Bernstein",
            "content": "Yes let's keep this open.\n\nI believe the root cause of the bug is that the SumMetric is parsing the count as a CountMetric, rather then treating it as a string. I think the solution is to make the double quotes work in this scenario. ",
            "id": "comment-15606254"
        },
        {
            "date": "2016-10-25T21:34:03+0000",
            "author": "Joel Bernstein",
            "content": "By the way you can avoid the sort function if you sort the search by the model_num. The hashJoin doesn't require a sort and should maintain the sort of the left side of the join. ",
            "id": "comment-15606547"
        },
        {
            "date": "2016-10-25T22:47:01+0000",
            "author": "Timothy Potter",
            "content": "bonus play! thanks Joel, that works great ",
            "id": "comment-15606705"
        }
    ]
}