{
    "id": "SOLR-10362",
    "title": "\"Memory Pool not found\" error when reporting JVM metrics",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "metrics"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "6.5,                                            7.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "These test failures are likely caused by a JVM bug. We should catch and work around it to be able report other existing metrics:\n\nhttps://jenkins.thetaphi.de/job/Lucene-Solr-6.x-Linux/3138/testReport/junit/org.apache.solr.handler.admin/MetricsHandlerTest/testCompact/\n\njava.lang.InternalError: Memory Pool not found\n\tat __randomizedtesting.SeedInfo.seed([8F4813A324434093:A1485FF45CBE4A6C]:0)\n\tat sun.management.MemoryPoolImpl.getUsage0(Native Method)\n\tat sun.management.MemoryPoolImpl.getUsage(MemoryPoolImpl.java:96)\n\tat com.codahale.metrics.jvm.MemoryUsageGaugeSet$18.getValue(MemoryUsageGaugeSet.java:177)\n\tat com.codahale.metrics.jvm.MemoryUsageGaugeSet$18.getValue(MemoryUsageGaugeSet.java:174)\n\tat org.apache.solr.util.stats.MetricUtils.convertGauge(MetricUtils.java:215)\n\tat org.apache.solr.util.stats.MetricUtils.lambda$toMaps$4(MetricUtils.java:142)\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n\tat java.util.TreeMap$KeySpliterator.forEachRemaining(TreeMap.java:2746)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\n\tat org.apache.solr.util.stats.MetricUtils.toMaps(MetricUtils.java:135)\n\tat org.apache.solr.util.stats.MetricUtils.toNamedList(MetricUtils.java:117)\n\tat org.apache.solr.handler.admin.MetricsHandler.handleRequestBody(MetricsHandler.java:85)\n\tat org.apache.solr.handler.admin.MetricsHandlerTest.testCompact(MetricsHandlerTest.java:160)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\n\n\nSee here for a possible explanation (thanks Hoss!): https://bugs.openjdk.java.net/browse/JDK-8025089",
    "attachments": {
        "SOLR-10362.patch": "https://issues.apache.org/jira/secure/attachment/12860665/SOLR-10362.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-27T14:03:22+0000",
            "content": "This happens when accessing a gauge implementation that is provided by metrics (MemoryUsageGaugeSet), so we can catch this only in MetricUtils.convertGauge - it would be better to catch this earlier but that would mean reimplementing the gauge set. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15943315"
        },
        {
            "date": "2017-03-27T14:24:11+0000",
            "content": "Tentative workaround that catches the error and logs it. Uwe Schindler, this may be worth mentioning to the Oracle guys since it happened in a JDK9 run. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15943349"
        },
        {
            "date": "2017-03-27T20:19:20+0000",
            "content": "Commit cb20eae1789442286f680f8dcfaf914394aed7a3 in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cb20eae ]\n\nSOLR-10362: \"Memory Pool not found\" error when reporting JVM metrics. ",
            "author": "ASF subversion and git services",
            "id": "comment-15943975"
        },
        {
            "date": "2017-03-27T20:58:36+0000",
            "content": "Commit d010a9da75cdec1f7e4fd8a906e7ff2114aea33d in lucene-solr's branch refs/heads/branch_6x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d010a9d ]\n\nSOLR-10362: \"Memory Pool not found\" error when reporting JVM metrics. ",
            "author": "ASF subversion and git services",
            "id": "comment-15944037"
        },
        {
            "date": "2017-03-27T21:17:48+0000",
            "content": "This happens when accessing a gauge implementation that is provided by metrics (MemoryUsageGaugeSet), so we can catch this only in MetricUtils.convertGauge - it would be better to catch this earlier but that would mean reimplementing the gauge set.\n\nInternalError is a really broad scope of error to ignore/log just because we assume it must be this specific situation ... can we at least improve the catch block to check the name/class of the Gauge to confirm it is in fact part of the MemoryUsageGaugeSet \u2013 and if not re-throw as is ?\n\nor at the very least: check that the InternalError mentions \"Memory Pool\" ??? ",
            "author": "Hoss Man",
            "id": "comment-15944059"
        },
        {
            "date": "2017-03-29T13:26:23+0000",
            "content": "Commit 7c2e908fc2ad4089d1c36b820131641e6b696de7 in lucene-solr's branch refs/heads/branch_6x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7c2e908 ]\n\nSOLR-10362 Be more specific when catching this exception. ",
            "author": "ASF subversion and git services",
            "id": "comment-15947115"
        },
        {
            "date": "2017-03-29T13:26:42+0000",
            "content": "Commit 30f7914c3b8ed990fcc0812f10de21722e96469f in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=30f7914 ]\n\nSOLR-10362 Be more specific when catching this exception. ",
            "author": "ASF subversion and git services",
            "id": "comment-15947117"
        }
    ]
}