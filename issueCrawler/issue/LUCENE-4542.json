{
    "id": "LUCENE-4542",
    "title": "Make RECURSION_CAP in HunspellStemmer configurable",
    "details": {
        "components": [
            "modules/analysis"
        ],
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "affect_versions": "4.0",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Currently there is \nprivate static final int RECURSION_CAP = 2;\nin the code of the class HunspellStemmer. It makes using hunspell with several dictionaries almost unusable, due to bad performance (f.ex. it costs 36ms to stem long sentence in latvian for recursion_cap=2 and 5 ms for recursion_cap=1). It would be nice to be able to tune this number as needed.\nAFAIK this number (2) was chosen arbitrary.\n\n(it's a first issue in my life, so please forgive me any mistakes done).",
    "attachments": {
        "LUCENE-4542-with-solr.patch": "https://issues.apache.org/jira/secure/attachment/12552464/LUCENE-4542-with-solr.patch",
        "Lucene-4542-javadoc.patch": "https://issues.apache.org/jira/secure/attachment/12552642/Lucene-4542-javadoc.patch",
        "LUCENE-4542.patch": "https://issues.apache.org/jira/secure/attachment/12552461/LUCENE-4542.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-11-06T21:30:53+0000",
            "content": "+1 I absolutely agree we need to make this change.  There is another issue (I can't remember what just yet and I'm using a bad connection) where the recursion cap was causing analysis loops.  \n\nDo you want to create a patch? We need to maintain backwards compatibility so the default experience should be using RECURSION_CAP as it is today.  However users should be able to pass in a value as well (that includes the HunspellStemFilterFactory). ",
            "author": "Chris Male",
            "id": "comment-13491845"
        },
        {
            "date": "2012-11-07T12:56:58+0000",
            "content": "I'd prefer not to create a patch myself, I don't feel so comfortable with lucene code.  ",
            "author": "Piotr",
            "id": "comment-13492307"
        },
        {
            "date": "2012-11-07T13:22:48+0000",
            "content": "As Piotr doesn't want to provide the patch, I'll do it for him  Simple patch adding a new constructor that allows to pass additional parameter - the recursion cap. The old constructor is there and the default value for recursion cap is 2.  ",
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13492328"
        },
        {
            "date": "2012-11-07T13:34:01+0000",
            "content": "Chris I've attached a second patch which includes changes to Solr HunspellFilter and its factory. Please review it and say if you want any changes to be made to it. I'll be glad to do it. ",
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13492338"
        },
        {
            "date": "2012-11-08T01:50:03+0000",
            "content": "Rafa\u0142,\n\nThanks for creating the patches, they are looking great.  Couple of very small improvements:\n\n\n\tCan we mark recursionCap as final?\n\tCan we improve the javadoc for the recursionCap parameter so it's clear what purpose it serves?\n\tMaybe also drop in a comment at the field about how the recursion cap of 2 is the default value based on documentation about Hunspell (as opposed to something we arbitrarily chose).\n\n ",
            "author": "Chris Male",
            "id": "comment-13492892"
        },
        {
            "date": "2012-11-08T10:16:38+0000",
            "content": "Attached the patch with improved javadocs and recursionCap marked as final in the HunspellStemmer. ",
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13493086"
        },
        {
            "date": "2012-11-29T23:32:38+0000",
            "content": "Chris anything else should be done here in your opinion or is it ready to be committed ? ",
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13506938"
        },
        {
            "date": "2012-11-30T00:14:43+0000",
            "content": "It looks great, thanks! I'll take care of it soon. ",
            "author": "Chris Male",
            "id": "comment-13506971"
        },
        {
            "date": "2013-07-16T07:30:43+0000",
            "content": "+1 on having this merged into Lucene ",
            "author": "Lukas Vlcek",
            "id": "comment-13709573"
        },
        {
            "date": "2013-07-16T07:36:31+0000",
            "content": "+1 from me also. Chris Male do we need updates on the patches or they are OK? ",
            "author": "Rafa\u0142 Ku\u0107",
            "id": "comment-13709575"
        },
        {
            "date": "2013-07-16T07:49:15+0000",
            "content": "I think it would be nice to have this merged so we can try and fix https://issues.apache.org/jira/browse/LUCENE-4311 as well (this ticket seems to be related). ",
            "author": "Lukas Vlcek",
            "id": "comment-13709581"
        },
        {
            "date": "2013-07-18T17:02:39+0000",
            "content": "Commit 1504529 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1504529 ]\n\nLUCENE-4542: Make HunspellStemFilter's maximum recursion level configurable. ",
            "author": "ASF subversion and git services",
            "id": "comment-13712496"
        },
        {
            "date": "2013-07-18T17:10:00+0000",
            "content": "Commit 1504531 from Adrien Grand in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1504531 ]\n\nLUCENE-4542: Make HunspellStemFilter's maximum recursion level configurable. ",
            "author": "ASF subversion and git services",
            "id": "comment-13712503"
        },
        {
            "date": "2013-07-18T17:10:02+0000",
            "content": "Committed, thanks! ",
            "author": "Adrien Grand",
            "id": "comment-13712504"
        },
        {
            "date": "2013-07-18T17:33:32+0000",
            "content": "Reopening to backport to 4.4, based on conversation with Adrien on #lucene-dev IRC. ",
            "author": "Steve Rowe",
            "id": "comment-13712537"
        },
        {
            "date": "2013-07-18T17:38:01+0000",
            "content": "Commit 1504561 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1504561 ]\n\nLUCENE-4542: move CHANGES.txt entry to the 4.4 section ",
            "author": "ASF subversion and git services",
            "id": "comment-13712539"
        },
        {
            "date": "2013-07-18T17:39:03+0000",
            "content": "Commit 1504563 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1504563 ]\n\nLUCENE-4542: move CHANGES.txt entry to the 4.4 section (merged trunk r1504561) ",
            "author": "ASF subversion and git services",
            "id": "comment-13712541"
        },
        {
            "date": "2013-07-18T17:58:51+0000",
            "content": "Commit 1504571 from Steve Rowe in branch 'dev/branches/lucene_solr_4_4'\n[ https://svn.apache.org/r1504571 ]\n\nLUCENE-4542: Make HunspellStemFilter's maximum recursion level configurable & move CHANGES.txt entry to the 4.4 section (merged trunk r1504529 & r1504561) ",
            "author": "ASF subversion and git services",
            "id": "comment-13712568"
        },
        {
            "date": "2013-07-23T18:44:32+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13716979"
        },
        {
            "date": "2013-08-06T09:30:38+0000",
            "content": "I believe this should be closed and set fix-version to 4.4 again? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13730565"
        },
        {
            "date": "2013-08-06T09:36:49+0000",
            "content": "Closing for 4.4. Please reopen if this is wrong, but the code and changes entry were committed for 4.4 so everything should be fine. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13730571"
        },
        {
            "date": "2013-09-18T11:40:26+0000",
            "content": "Can someone please explain the purpose of recursionCap? So far I understand that it makes it possible to adjust a so-called recursion depth, but I'm not sure I understand what it really does. I had some problems with odd suggestions for the Norwegian language, but changing the recursionCap to 0 did not help. ",
            "author": "Erlend Gar\u00e5sen",
            "id": "comment-13770680"
        },
        {
            "date": "2013-09-18T12:29:15+0000",
            "content": "IIRC the hunspell stemmer works basically the following way:\n\n1. Assuming input token is not a root form of the word it scans affix rules (.aff file) and try to identify possible rules that could have been used to produce the input token.\n2. Apply each found rule to the input token to get one or more output tokens. The output tokens can be considered candidates for the word in root form.\n3. If any of the candidates is found in the dictionary (.dic file) and application of particular rule is allowed (see the regexp pattern in .aff file) then bingo! If not goto #1 until RECURSION_CAP level is reached.\n\nThis way you can have `nongoodnesses` stemmed to `good` (providing RECURSION_CAP=2). Depending on the dictionary and affix rules you may need one pass to get from `nongoodnesses` to `goodnesses` and then two other passes to get from `goodnesses` to `goodness` and then from `goodness` to `good`. (Probably not the best example)\n\nHowever, this is all very depending on particular dictionary and affix rules.\n\nFor example I realized that czech (ispell) or slovak (hunspell) dictionaries are constructed in a different way (though still a way that feels natural to the language itself) and only a single pass works best for them (although single pass does not allow for handling both prefix AND suffix at the same time).\n\nIn my opinion there is a lot that could be improved in the hunspell token filter, but it is more linguistic matter then algorithmic. ",
            "author": "Lukas Vlcek",
            "id": "comment-13770721"
        },
        {
            "date": "2013-09-21T23:08:16+0000",
            "content": "The recursion cap shouldn't actually exist, it isn't found in the formal description of the Hunspell algorithm.  Instead theoretically the dictionaries themselves should ensure that correct suggestions are generated.  However while testing our implementation we discovered that a number of dictionaries get into infinite loops of suffix removals and additions, consequently we added the cap to prevent this.\n\nI think it would be risky to tamper heavily with the algorithm as it is, since any improvements will help some dictionaries while degrading others.  Instead the purpose of Hunspell is to decouple the stemming algorithm for the languages themselves, so the focus should by and large be on improving the dictionaries. ",
            "author": "Chris Male",
            "id": "comment-13773922"
        }
    ]
}