{
    "id": "LUCENE-8489",
    "title": "Provide List type constructors for BaseCompositeReader based Readers",
    "details": {
        "components": [
            "core/index"
        ],
        "status": "Open",
        "resolution": "Unresolved",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Improvement"
    },
    "description": "Currently, Reader based on BaseCompositeReader(MultiReader, ParallelCompositeReader, DirectoryReader) does not support List type constructor.\n\nIn fact, this does not make a big difference in performance, but users will think positively if the API supports more variants.\n\nI will add the following to support this.\n\n1) MultiReader\n\npublic MultiReader(List<IndexReader> subReaders) throws IOException {\n  this(subReaders, true);\n}\n\npublic MultiReader(List<IndexReader> subReaders, boolean closeSubReaders) throws IOException {\n  this(subReaders.toArray(new IndexReader[0]), closeSubReaders);\n}\n\n\n2) ParallelCompositeReader\n\npublic ParallelCompositeReader(List<CompositeReader> readers) throws IOException {\n  this(true, readers);\n}\n\npublic ParallelCompositeReader(boolean closeSubReaders, List<CompositeReader> readers) throws IOException {\n  this(closeSubReaders, readers, readers);\n}\n\npublic ParallelCompositeReader(boolean closeSubReaders, List<CompositeReader> readers, List<CompositeReader> storedFieldReaders) throws IOException {\n  this(closeSubReaders, readers.toArray(new CompositeReader[0]), storedFieldReaders.toArray(new CompositeReader[0]));\n}\n\n\n3) DirectoryReader\n\nprotected DirectoryReader(Directory directory, List<LeafReader> segmentReaders) throws IOException {\n  super(segmentReaders);\n  this.directory = directory;\n}\n\n\n4) BaseCompositeReader\n\n@SuppressWarnings(\"unchecked\")\nprotected BaseCompositeReader(List<R> subReaders) throws IOException {\n  this(subReaders.toArray((R[]) new IndexReader[subReaders.size()]));\n}\n\n\n5) Test\n I wrote a test case in \"TestParallelCompositeReader\".\n\nIf you have any questions or requests, please left any comments",
    "attachments": {
        "LUCENE-8489.patch": "https://issues.apache.org/jira/secure/attachment/12938995/LUCENE-8489.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16608564",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 21s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 17s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 17s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 17s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 17s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 17s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  11m 30s \n  core in the patch passed.  \n\n\n  \n   \n  13m 47s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8489 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12938995/LUCENE-8489.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / f406ff9 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/91/testReport/ \n\n\n modules \n C: lucene/core U: lucene/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/91/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-09-09T20:34:59+0000"
        },
        {
            "id": "comment-16608565",
            "author": "Adrien Grand",
            "content": "but users will think positively if the API supports more variants.\n\nI don't agree with this statement. Supporting both lists and arrays increases the surface area of the API, which makes it harder to grasp, and also introduces questions like \"which one should I use\". We should only support either lists or arrays. ",
            "date": "2018-09-09T20:36:44+0000"
        },
        {
            "id": "comment-16609118",
            "author": "David Smiley",
            "content": "Lets not double-up our constructors over this trivial matter. \u00a0If you'd rather switch\u00a0to a List then perhaps we can do that for 8.0. \u00a0Namgyu, was this an actual pain-point for you in your Lucene usage? \u00a0Most users don't touch this low-level stuff. ",
            "date": "2018-09-10T12:38:13+0000"
        },
        {
            "id": "comment-16609435",
            "author": "Namgyu Kim",
            "content": "Hi, Adrien Grand and David Smiley.\n\nThank you for your reply.\n\n\u00a0\n\nDear Adrien Grand :\n\nI thought it was okay to give the user more choices. \nHowever, if this makes it rather confusing or difficult to control, maintaining the status looks better. \n\n\u00a0\n\nDear David Smiley :\n\nI don't care, but I thought it would be convenient if there were various APIs from the user's point of view.\nIn fact, JAVA's \"list-to-array\" and \"array-to-list\" are not so difficult.\nAs Adrien said, this operation can cause some confusion in the API.\nIf most users do not use low-level features, I think maintaining the status is better.  ",
            "date": "2018-09-10T16:00:22+0000"
        }
    ]
}