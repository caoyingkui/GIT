{
    "id": "SOLR-12938",
    "title": "ClusterStatus should not spew an exception trace if it gets an alias name",
    "details": {
        "type": "Bug",
        "status": "Resolved",
        "labels": "",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "components": [
            "SolrCloud"
        ],
        "priority": "Blocker",
        "resolution": "Fixed",
        "affect_versions": "7.5"
    },
    "description": "This has been a lingering irritant in debugging tests for time routed aliases, previously mentioned in SOLR-11949 and can be seen frequently in logs attached to SOLR-12928. Basically what happens is for one reason or another cluster status is called on an alias rather than a collection and this is treated identically to a collection name that doesn't exist.\u00a0\n\nThis also\u00a0has lead this bit of lovely exception message parsing in HttpClusteStateProvider.java\n\n      } catch (SolrServerException | RemoteSolrException | IOException e) {\n        if (e.getMessage().contains(collection + \" not found\")) {\n          // Cluster state for the given collection was not found.\n          // Lets fetch/update our aliases:\n          getAliases(true);\n          return null;\n        }\n        log.warn(\"Attempt to fetch cluster state from \" +\n            Utils.getBaseUrlForNodeName(nodeName, urlScheme) + \" failed.\", e);\n      }\n\n\n\nCluster status is already handled in the case of no collection name provided by returning status on all collections. It would make more sense if this command returned status on the component collections for the alias. \n\nIf that turns out to be difficult or cause too many problems this should at least be downgraded to a non-stack trace warning message since this situation does not represent a failure of the system. The error/stack should of course be retained if neither a collection nor an alias exist.",
    "attachments": {
        "SOLR-12938.patch": "https://issues.apache.org/jira/secure/attachment/12946314/SOLR-12938.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16669485",
            "content": "Attaching patch that does the following:\n\na) If its an alias, grab full cluster status and filter out any collections not in the alias, then continue as if it were full cluster status (i.e. null was passed for collection)\n\nb) If the value passed for collection is neither a collection nor an alias, still throw the prior exception\n\nc) Fix several spots in HttpClusterStateProvider that threw null pointer exceptions or had similar problems after the change due to an implicit assumption that there MUST be a collection available if CLUSTERSTATUS didn't throw.\n\nd) Introduce a local exception meant only to be thrown between the private fetchClusterState methods and it's callers in the same class. This avoids the parsing of the exception message. The intent is the exception never escape from HttpClusterStateProvider, so it's a checked exception to make sure folks remember to catch it.\n\n\u00a0\n\nThis introduces a small but I'm hoping tolerable backwards incompatibility for any code that relied on CLUSTERSTATUS to throw an exception for non-collection and non-null input\n\nAndrzej Bialecki , Ishan Chattopadhyaya I see your names on much of HttpClusterStateProvider so I would\u00a0appreciate\u00a0your review.\n\n\u00a0 ",
            "author": "Gus Heck",
            "date": "2018-10-31T01:23:26+0000"
        },
        {
            "id": "comment-16672070",
            "content": "Definitely an irritant that I'm looking forward to being remedied.  Thanks for filing this Gus. ",
            "author": "David Smiley",
            "date": "2018-11-01T19:30:47+0000"
        },
        {
            "id": "comment-16672437",
            "content": "Updated patch, with\u00a0ref guide update & CHANGES.txt. If there's no\u00a0concerns raised\u00a0I'll commit it to 7x and master this weekend. ",
            "author": "Gus Heck",
            "date": "2018-11-02T01:07:40+0000"
        },
        {
            "id": "comment-16672760",
            "content": "+1, looks good. ",
            "author": "Andrzej Bialecki",
            "date": "2018-11-02T08:32:33+0000"
        },
        {
            "id": "comment-16674440",
            "content": "Commit 45b772f4a995c618b48ff05c6129c5683df92f88 in lucene-solr's branch refs/heads/master from Gus Heck\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=45b772f ]\n\nSOLR-12938 - Cluster status now returns results for aliases instead of\nthrowing an exception ",
            "author": "ASF subversion and git services",
            "date": "2018-11-04T17:02:50+0000"
        },
        {
            "id": "comment-16674458",
            "content": "Commit 5ad78734384104d7e26d51917d04936b849a692d in lucene-solr's branch refs/heads/branch_7x from Gus Heck\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5ad7873 ]\n\nSOLR-12938 - Cluster status now returns results for aliases instead of\nthrowing an exception ",
            "author": "ASF subversion and git services",
            "date": "2018-11-04T17:51:57+0000"
        },
        {
            "id": "comment-16674460",
            "content": "Committed with the addition that I resolved my todo in the test and verified the results comming back in addition to the fact it didn't throw an exception. ",
            "author": "Gus Heck",
            "date": "2018-11-04T17:54:00+0000"
        },
        {
            "id": "comment-16674463",
            "content": "Is this really what we should do here? I'm a bit out of context, so maybe this is in fact the right thing, however, all other collection operations do not (and should not IMO) operate on aliases, why would the CLUSTERSTATUS be different? ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "date": "2018-11-04T18:05:47+0000"
        },
        {
            "id": "comment-16674556",
            "content": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe The original impetus for this was the spurious exception messages that are a result of resolving aliases (this appears to have been introduced by the change to CloudSolrClient#resolveAliases (#getCollectionNames at that time) as part of https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5650939\n\nThat change came about as the result of a long discussion of concurrency/leader up/down problems see SOLR-9784 and SOLR-9512\n\nBecause the heuristic used for detecting aliases was a\u00a0CLUSTERSTATUS call that failed (causing a stack trace), there are 2 ways to fix this:\n\n\tChange the hueristic - one could request a full clusters status rather than status on just the collection and check more directly for the presence of the collection in the keyset of the map of collections and then in the key set of the map of aliases. This seems like it could be quite heavy on large clusters, which I'm guessing is why it wasn't done this way (Noble Paul can probably tell us if I guessed correctly there). I haven't thought of another method that doesn't involve much more significant enhancements to CLUSTERSTATUS (such as maybe a \"shallow\" option) and more work/complexity\n\tDon't throw an exception when asked about an alias - However if we aren't going to throw an exception and return an error, we need something sensible to return. The simplest and most logical answer to that was to return the details for the collections in the alias. This struck me as simpler and providing additional potentially useful functionality. This seems like it may become particularly useful with TimeRoutedAliases that are very likely to be treated like a single collection as much as possible. There is a tiny bit of possible wierdness I just thought of but haven't tested where we probably still return the list of all aliases, not just the alias asked about in the aliases section. If that's the case I may amend this to cull the unrelated info out of the response.\n\n\n\nAs for Collection\u00a0operations not working with Aliases, conceptually\u00a0*CLUSTER*STATUS is not really collection\u00a0operation\u00a0to my mind anyway, it's a cluster level operation that can return info about the\u00a0cluster or subsections of it that happens to hang out in the collections API since there's no Cluster API (v1). ",
            "author": "Gus Heck",
            "date": "2018-11-04T23:35:13+0000"
        },
        {
            "id": "comment-16674970",
            "content": "Commit 45b772f4a995c618b48ff05c6129c5683df92f88 in lucene-solr's branch refs/heads/jira/http2 from Gus Heck\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=45b772f ]\n\nSOLR-12938 - Cluster status now returns results for aliases instead of\nthrowing an exception ",
            "author": "ASF subversion and git services",
            "date": "2018-11-05T11:01:41+0000"
        },
        {
            "id": "comment-16677061",
            "content": "Gus: digging into recent jenkins failures of CloudSolrClientTest shows that this change seems to have caused a lot of reproduible failures.\n\n\nant test -Dtestcase=CloudSolrClientTest -Dtests.seed=949992ED4AFA660A -Dtests.multiplier=3 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=kl -Dtests.timezone=Europe/Oslo -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1 -Dtests.method=testCollectionDoesntExist\n\n\n\n...fails reliably on HEAD of branch_7x (7d6d77d06753bd131aeb37531b70c59193917683) and against the cmmit from this issue (5ad78734384104d7e26d51917d04936b849a692d) but does not fail against the previous commit on branch_7x ",
            "author": "Hoss Man",
            "date": "2018-11-06T17:35:28+0000"
        },
        {
            "id": "comment-16677072",
            "content": "FWIW: searching jenkins emails for \"FAILED:  org.apache.solr.client.solrj.impl.CloudSolrClientTest.testCollectionDoesntExist\" matches 26 messages \u2013 25 of them in the past 2 days (the lone holdout being over a year old) ... hence i started git bisecting with 7d6d77d06753bd131aeb37531b70c59193917683 and identified 5ad78734384104d7e26d51917d04936b849a692d as the root cause.\n ",
            "author": "Hoss Man",
            "date": "2018-11-06T17:45:42+0000"
        },
        {
            "id": "comment-16677101",
            "content": "setting as blocker to ensure that we either roll back and get to the bottom of test failures before releasing in 7.6 ",
            "author": "Hoss Man",
            "date": "2018-11-06T18:07:48+0000"
        },
        {
            "id": "comment-16677194",
            "content": "Take heart Gus; I broke half the tests on my first commit \n\nHoss, can you please share the git bissect command line you ran to find the problem? \u00a0I'd like to save this so I can use it\u00a0to aid in my own test investigations. ",
            "author": "David Smiley",
            "date": "2018-11-06T19:14:46+0000"
        },
        {
            "id": "comment-16677202",
            "content": "eek. I'll look into it tonight. ",
            "author": "Gus Heck",
            "date": "2018-11-06T19:20:29+0000"
        },
        {
            "id": "comment-16677210",
            "content": "Hoss, can you please share the git bissect command line you ran to find the problem? I'd like to save this so I can use it to aid in my own test investigations.\nIn general...\n\ngit bisect start KNOWN_GOOD KNOWN_BAD\ngit bisect run bash -c 'ant clean && cd PARENT_DIR_OF_TEST && REPRODUCE_LINE'\n\n\ntoday specifically...\n\ngit bisect start 7d6d77d06753bd131aeb37531b70c59193917683 be8f611db1cbaf51622d8af5cd6efced4e338968\ngit bisect run bash -e 'ant clean && cd solr/solrj/ && ant test -Dtestcase=CloudSolrClientTest -Dtests.seed=949992ED4AFA660A -Dtests.multiplier=3 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=kl -Dtests.timezone=Europe/Oslo -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1 -Dtests.method=testCollectionDoesntExist'\n\n ",
            "author": "Hoss Man",
            "date": "2018-11-06T19:28:22+0000"
        },
        {
            "id": "comment-16677372",
            "content": "Ah this test seems to pass\u00a05 out of 15 tries\u00a0for me... unlucky me.\u00a0 I think I'm going to use this as an excuse to get\u00a0better with beasting... ",
            "author": "Gus Heck",
            "date": "2018-11-06T22:36:48+0000"
        },
        {
            "id": "comment-16677663",
            "content": "This is fixed on my machine, the individual test class successfully beasted 50 rounds\u00a0using 5 vms at a time\u00a0with Mark Miller's beasting gist\n\n(but not applying his hardening PR) and I got zero failures. Without the fix I get frequent failures under the same conditions.\n\nHowever, I'm seeing some failures (10-20% of beast rounds) in a wide variety of methods in\u00a0that test class if I crank up the number of vm's such that all my cores are in use, so I think this test class (CloudSolrClientTest) is generally flakey under heavy load.\u00a0 The number of 404 error messages with text/html unexpected almost tripples from 60ish to 160ish if I run with 25 vms instead of 5.\n\nI'm running the full test suites now and will again in the morning and will likely commit the fix tomorrow assuming all goes well. ",
            "author": "Gus Heck",
            "date": "2018-11-07T04:39:48+0000"
        },
        {
            "id": "comment-16678919",
            "content": "Commit 3dc79917148e8753d4f5544b5604708143f92499 in lucene-solr's branch refs/heads/branch_7x from Gus Heck\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3dc7991 ]\n\nSOLR-12938 - fix test case for handling of bogus collection names\nthat was failing when HttpClusterStateProvider is used instead of\nZkClusterStateProvider ",
            "author": "ASF subversion and git services",
            "date": "2018-11-07T23:01:28+0000"
        },
        {
            "id": "comment-16679136",
            "content": "Commit 53482e510c773fabd80fc0a5a0efa1f137f89def in lucene-solr's branch refs/heads/master from Gus Heck\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=53482e5 ]\n\nSOLR-12938 - fix test case for handling of bogus collection names\nthat was failing when HttpClusterStateProvider is used instead of\nZkClusterStateProvider ",
            "author": "ASF subversion and git services",
            "date": "2018-11-08T01:06:09+0000"
        }
    ]
}