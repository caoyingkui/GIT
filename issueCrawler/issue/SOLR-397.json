{
    "id": "SOLR-397",
    "title": "options for dealing with range endpoints in date facets",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Date faceting should support configuration for controlling how edge boundaries are dealt with.",
    "attachments": {
        "SOLR-397.patch": "https://issues.apache.org/jira/secure/attachment/12443150/SOLR-397.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12834590",
            "date": "2010-02-17T01:28:07+0000",
            "content": "(initial issue description moved to comment)\n\nas discussed in email...\nhttp://www.nabble.com/Re%3A-Date-facetting-and-ranges-overlapping-p12928374.html\n\n: I'm now using date facetting to browse events. It works really fine\n: and is really useful. The only problem so far is that if I have an\n: event which is exactly on the boundary of two ranges, it is referenced\n: 2 times.\n\nyeah, this is one of the big caveats with date faceting right now ... i\nstruggled with this a bit when designing it, and ultimately decided to\npunt on the issue.  the biggest hangup was that even if hte facet counting\ncode was smart about making sure the ranges don't overlap, the range query\nsyntax in the QueryParser doesn't support ranges that exclude one input\n(so there wouldn't be a lot you can do with the ranges once you know the\ncounts in them)\n\none idea i had in SOLR-258 was that we could add an \"interval\" option that\nwould define how much to add to the \"end\" or one range to get the \"start\"\nof another range (think of the current implementation having interval\nhardcoded to \"0\") which would solve the problem and work with range\nqueries that were inclusive of both endpoints, but would require people to\nuse \"-1MILLI\" a lot.\n\na better option (assuming a query parser change) would be a new option\nthta says wether each computed range should be enclusive of the low poin,t\nthe high point, both end points, neither end points, or be \"smart\" (where\nsmart is the same as \"low\" except for the last range where the it includes\nboth)\n\n(I think there's already a lucene issue to add the query parser support, i\njust haven't had time to look at it)\n\nThe simple workarround: if you know all of your data is indexed with\nperfect 0.000second precision, then put \"-1MILLI\" at the end of your start\nand end date faceting params. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12834597",
            "date": "2010-02-17T01:38:52+0000",
            "content": "Additional idea that i like much better then the \"interval\" idea i had a while back, transcribed from email so it's not lost to the ages...\n\nI think the semantics that might make the most sense is to add a \nmultivalued \"facet.date.include\" param that supports the following \noptions:  all, lower, upper, edge, outer\n\n\t\"all\" is shorthand for lower,upper,edge,outer and is the default (for back compat)\n\tif \"lower\" is specified, then all ranges include their lower bound\n\tif \"upper\" is specified, then all ranges include their upper bound\n\tif \"edge\" is specified, then the first and last ranges include their edge bounds (ie: lower for the first one, upper for the last one) even if the corrisponding \"upper\"/\"lower\" option is not specified.\n\tthe \"between\" count is inclusive of each of the start and end bounds iff the first and last range are inclusive of them\n\tthe \"before\" and \"after\" ranges are inclusive of their respective bounds if:\n\t\n\t\t\"outer\" is specified ... OR ...\n\t\tthe first and last ranges don't already include them\n\t\n\t\n\n\n\n\nso assuming you started with something like (specific dates and durrations shortend for readability)...\n\nfacet.date.start=1 & facet.date.end=3 & facet.date.gap=+1 & facet.date.other=all\n\n...your ranges would be...\n\n[1 TO 2], [2 TO 3] and [* TO 1], [1 TO 3], [3 TO *]\n\n\nThe following params would change the ranges in the following ways...\n\n\nw/ facet.date.include=lower ...\n  [1 TO 2}, [2 TO 3} and [* TO 1}, [1 TO 3}, [3 TO *]\n\nw/facet.date.include=upper ...\n  {1 TO 2], {2 TO 3] and [* TO 1], {1 TO 3], {3 TO *]\n\nw/ facet.date.include=lower&facet.date.include=edge ...\n  [1 TO 2}, [2 TO 3] and [* TO 1}, [1 TO 3], {3 TO *]\n\nw/ facet.date.include=upper&facet.date.include=edge ...\n  [1 TO 2], {2 TO 3] and [* TO 1}, [1 TO 3], {3 TO *]\n\nw/ facet.date.include=upper&facet.date.include=outer ...\n  {1 TO 2], {2 TO 3] and [* TO 1], {1 TO 3], [3 TO *]\n\n...etc.\n\n\n\ninitial proposal: http://old.nabble.com/RE%3A-Date-Facet-duplicate-counts-p27331578.html "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12862037",
            "date": "2010-04-29T00:56:26+0000",
            "content": "Spurred on by recent email threads about this, i sat down and got the previously mentioned design working (with tests!)\n\nthis patch implements the \"facet.date.include\" param mentioned about with the specified semantics.  the only change is that i discovered facet.date.other=before and facet.date.other=after don't currently included the start/end (respectively) range boundaries ... so i made the default for facet.date.include be [lower,upper,edge] for back compatibility.\n\nI think this approach makes more sense then the proposal in SOLR-1402 because these semantics make it easy to always get a series of ranges (including the before/after ranges) that are \"adjacent\" w/o overlapping (using either [lower], [lower,edge], [upper], or [upper,edge]) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12862942",
            "date": "2010-05-01T00:25:38+0000",
            "content": "updated patch to reflect some changes yonik committed to the test\n\ni plan to commit soon .. my only hesitation is the name of the options, but those cna be changed easily. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12863446",
            "date": "2010-05-03T18:22:50+0000",
            "content": "Committed revision 940556. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872825",
            "date": "2010-05-28T03:31:15+0000",
            "content": "\nCorrecting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12893805",
            "date": "2010-07-29T20:21:23+0000",
            "content": "reopening to track backport to 3x "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12893856",
            "date": "2010-07-29T23:16:29+0000",
            "content": "Committed revision 980604. - merged to 3x branch "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013061",
            "date": "2011-03-30T15:45:26+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}