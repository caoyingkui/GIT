{
    "id": "LUCENE-4890",
    "title": "QueryTreeBuilder.getBuilder() only finds interfaces on the most derived class",
    "details": {
        "components": [
            "core/queryparser"
        ],
        "fix_versions": [
            "3.6.3",
            "4.4",
            "6.0"
        ],
        "affect_versions": "2.9,                                            2.9.1,                                            2.9.2,                                            2.9.3,                                            2.9.4,                                            3.0,                                            3.0.1,                                            3.0.2,                                            (9)3.0.3,                                            3.1,                                            3.2,                                            3.3,                                            3.4,                                            3.5,                                            3.6,                                            3.6.1,                                            3.6.2",
        "priority": "Minor",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "QueryBuilder implementations registered with QueryTreeBuilder.setBuilder() are not recognized by QueryTreeBuilder.getBuilder() if they are registered for an interface implemented by a superclass. Registering them for a concrete query node class or an interface implemented by the most-derived class do work.\n\nexample.java\n/* Our custom query builder */\nclass CustomQueryTreeBuilder extends QueryTreeBuilder {\n  public CustomQueryTreeBuilder() {\n    /* Turn field:\"value\" into an application-specific object */\n    setBuilder(FieldQueryNode.class, new QueryBuilder() {\n      @Override\n      public Object build(QueryNode queryNode) {\n        FieldQueryNode node = (FieldQueryNode) queryNode;\n        return new ApplicationSpecificClass(node.getFieldAsString());\n      }\n    });\n    /* Ignore all other query node types */\n    setBuilder(QueryNode.class, new  QueryBuilder() {\n      @Override\n      public Object build(QueryNode queryNode) {\n        return null;\n      }\n    });\n  }\n}\n\n/* Assume this is in the main program: */\nStandardQueryParser queryParser = new StandardQueryParser();\nqueryParser.setQueryBuilder(new CustomQueryTreeBuilder());\n\n/* The following line will throw an exception because it can't find a builder for BooleanQueryNode.class */\nObject queryObject = queryParser.parse(\"field:\\\"value\\\" field2:\\\"value2\\\"\", \"field\");",
    "attachments": {
        "LUCENE-4890_2013_05_25.patch": "https://issues.apache.org/jira/secure/attachment/12584817/LUCENE-4890_2013_05_25.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-03-27T16:38:19+0000",
            "content": "Improved example formatting. ",
            "author": "Philip Searle",
            "id": "comment-13615469"
        },
        {
            "date": "2013-03-27T16:42:32+0000",
            "content": "The issue appears to be due to the code that walks the query node's class hierarchy incorrectly getting the list of implemented interfaces from the most-derived class, instead of the class currently being processed.\n\nIt can be fixed by changing the following line in QueryTreeBuilder.java from:\nClass<?>[] classes = node.getClass().getInterfaces();\nto:\nClass<?>[] classes = clazz.getInterfaces(); ",
            "author": "Philip Searle",
            "id": "comment-13615472"
        },
        {
            "date": "2013-05-25T04:24:12+0000",
            "content": "Thanks Philip!\n\nYour logic sounds right! I created a test case and it ran just like you said.\n\nHere is the fix. I plan to commit in the next couple of days. ",
            "author": "Adriano Crestani",
            "id": "comment-13666961"
        },
        {
            "date": "2013-07-23T18:36:59+0000",
            "content": "Bulk close resolved 4.4 issues ",
            "author": "Steve Rowe",
            "id": "comment-13716712"
        },
        {
            "date": "2014-03-20T19:16:32+0000",
            "content": "Commit 1579717 from Michael McCandless in branch 'dev/branches/lucene_solr_3_6'\n[ https://svn.apache.org/r1579717 ]\n\nLUCENE-4890: get this test passing again ",
            "author": "ASF subversion and git services",
            "id": "comment-13942162"
        }
    ]
}