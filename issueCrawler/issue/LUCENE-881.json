{
    "id": "LUCENE-881",
    "title": "QueryParser escaping/parsin issue with strings starting/ending with ||",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "core/queryparser"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.1,                                            2.2",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "There is a problem with query parser when search string starts/ends with ||.  When string contains || in the middle like 'something || something' everything runs without a problem.\n\nPart of code: \n  searchText = QueryParser.escape(searchText);\n  QueryParser parser = null;\n  parser = new QueryParser(fieldName, new CustomAnalyser());\n  parser.parse(searchText);\n\nCustomAnalyser class extends Analyser. Here is the only redefined method: \n\n    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) \n{\n      return new PorterStemFilter( (new StopAnalyzer()).tokenStream(fieldName, reader));\n    }\n\nI have tested this on Lucene 2.1 and latest source I have checked-out from SVN (Revision 538867) and in both cases parsing exception was thrown.\n\nPart of Stack Trace (Lucene - SVN checkout - Revision 538867):\nCannot parse 'someting ||': Encountered \"<EOF>\" at line 1, column 11.\nWas expecting one of:\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    \"(\" ...\n    \"*\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    \"[\" ...\n    \"{\" ...\n    <NUMBER> ...\n\n org.apache.lucene.queryParser.ParseException: Cannot parse 'someting ||': Encountered \"<EOF>\" at line 1, column 11.\nWas expecting one of:\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    \"(\" ...\n    \"*\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    \"[\" ...\n    \"{\" ...\n    <NUMBER> ...\n\n        at org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:150)\n\n\nPart of Stack Trace (Lucene 2.1):\nCannot parse 'something ||': Encountered \"<EOF>\" at line 1, column 12.\nWas expecting one of:\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    \"(\" ...\n    \"*\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    \"[\" ...\n    \"{\" ...\n    <NUMBER> ...\n\n org.apache.lucene.queryParser.ParseException: Cannot parse 'something ||': Encountered \"<EOF>\" at line 1, column 12.\nWas expecting one of:\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    \"(\" ...\n    \"*\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    \"[\" ...\n    \"{\" ...\n    <NUMBER> ...\n\n        at org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:149)",
    "attachments": {
        "lucene-881.patch": "https://issues.apache.org/jira/secure/attachment/12357650/lucene-881.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-05-17T16:29:57+0000",
            "content": "The problem here is that QueryParser.escape() does not escape | and &. This should be easy to fix, I'll submit a patch soon. ",
            "author": "Michael Busch",
            "id": "comment-12496610"
        },
        {
            "date": "2007-05-17T16:43:22+0000",
            "content": "Sorry, I don't quite understand the problem.  Could someone provide an actual query string that should work but doesn't?  \"||\" is reserved since it means OR, AFAIK. ",
            "author": "Yonik Seeley",
            "id": "comment-12496618"
        },
        {
            "date": "2007-05-17T17:18:04+0000",
            "content": "You are right Yonik, || is reserved.\n\nThe QueryParser itself works correctly:\n\n\"|| test ||\" yields a ParseException, which is correct because in this case || means OR\n\"|| test ||\" yields \"|| test ||\", this is correct, too, because the two | are escaped\n\n\nThe problem here is the escape() method:\n\n  /**\n\n\tReturns a String where those characters that QueryParser\n\texpects to be escaped are escaped by a preceding <code>\\</code>.\n   */\n  public static String escape(String s);\n\n\n\nIt escapes chars like +, -, ! and so on. Example:\n\nescape(\"++ test ++\") yields \"++ test ++\"\n\nbut\n\nescape(\"|| test ||\") yields \"|| test ||\".\n\nI believe to be consistent escape() should escape the two chars | and & as well, no? ",
            "author": "Michael Busch",
            "id": "comment-12496634"
        },
        {
            "date": "2007-05-17T18:10:16+0000",
            "content": "> escape() should escape the two chars | and & as well, no?\n\nAgree. ",
            "author": "Yonik Seeley",
            "id": "comment-12496655"
        },
        {
            "date": "2007-05-18T17:34:46+0000",
            "content": "Patch with additional unit tests.\n\nAll tests pass. ",
            "author": "Michael Busch",
            "id": "comment-12496972"
        },
        {
            "date": "2007-05-23T04:55:46+0000",
            "content": "I just committed this patch. Thank you for finding this bug, Slobodan! ",
            "author": "Michael Busch",
            "id": "comment-12498094"
        }
    ]
}