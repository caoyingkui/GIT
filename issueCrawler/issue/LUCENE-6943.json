{
    "id": "LUCENE-6943",
    "title": "Jvm Crashes occassionaly with Lucene 4.6.1",
    "details": {
        "resolution": "Duplicate",
        "affect_versions": "4.6.1",
        "components": [
            "core/query/scoring"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "#\n\n\tA fatal error has been detected by the Java Runtime Environment:\n#\n\tSIGSEGV (0xb) at pc=0x00007f5625212cd7, pid=9889, tid=139920130201344\n#\n\tJRE version: Java(TM) SE Runtime Environment (7.0_60-b19) (build 1.7.0_60-b19)\n\tJava VM: Java HotSpot(TM) 64-Bit Server VM (24.60-b09 mixed mode linux-amd64 )\n\tProblematic frame:\n\tJ 11490 C2 org.apache.lucene.store.ByteBufferIndexInput.readByte()B (126 bytes) @ 0x00007f5625212cd7 [0x00007f5625212c80+0x57]\n#\n\tFailed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n#\n\tIf you would like to submit a bug report, please visit:\n\thttp://bugreport.sun.com/bugreport/crash.jsp\n#\n\n\n\n\nRegister to memory mapping:\n\nRAX=0x00007f55de053510 is an oop\n{instance class} \n\n\tklass: \n{other class}\nRBX=0x00007f549dffc028 is an oop\norg.apache.lucene.codecs.lucene41.Lucene41PostingsReader \n\tklass: 'org/apache/lucene/codecs/lucene41/Lucene41PostingsReader'\nRCX=0x0000000000000004 is an unknown value\nRDX=0x0000000000000080 is an unknown value\nRSP=0x00007f41b1a7f640 is pointing into the stack for thread: 0x00007f48f81a4000\nRBP=0x00007f4b1bff3630 is an oop\njava.nio.DirectByteBufferR \n\tklass: 'java/nio/DirectByteBufferR'\nRSI=0x00007f4b1bff35a8 is an oop\norg.apache.lucene.store.MMapDirectory$MMapIndexInput \n\tklass: 'org/apache/lucene/store/MMapDirectory$MMapIndexInput'\nRDI=0x00000000237c532a is an unknown value\nR8 =0x00000000237c4da3 is an unknown value\nR9 =0x00007f4b1bff35a8 is an oop\norg.apache.lucene.store.MMapDirectory$MMapIndexInput \n\tklass: 'org/apache/lucene/store/MMapDirectory$MMapIndexInput'\nR10=0x00007f3a8f98a000 is an unknown value\nR11=0x00000000237c4da3 is an unknown value\nR12=0x00007f41b1a81f30 is pointing into the stack for thread: 0x00007f48f81a4000\nR13=0x0000000000000093 is an unknown value\nR14=0x000000000000431f is an unknown value\nR15=0x00007f48f81a4000 is a thread\n\n\n\n\nStack: [0x00007f41b1985000,0x00007f41b1a86000],  sp=0x00007f41b1a7f640,  free space=1001k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nJ 11490 C2 org.apache.lucene.store.ByteBufferIndexInput.readByte()B (126 bytes) @ 0x00007f5625212cd7 [0x00007f5625212c80+0x57]\nJ 4940 C2 org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum.nextPosition()I (118 bytes) @ 0x00007f5624515cb4 [0x00007f5624515980+0x334]\nJ 10578 C2 org.apache.lucene.search.ExactPhraseScorer.phraseFreq()I (624 bytes) @ 0x00007f56256de588 [0x00007f56256de4e0+0xa8]\nJ 10629 C2 org.apache.lucene.search.ExactPhraseScorer.advance(I)I (152 bytes) @ 0x00007f5625729d84 [0x00007f5625729ba0+0x1e4]\nJ 10433 C2 org.apache.lucene.search.MinShouldMatchSumScorer.advance(I)I (113 bytes) @ 0x00007f5625653c34 [0x00007f5625653ae0+0x154]\nJ 5630 C2 org.apache.lucene.search.BooleanScorer2.advance(I)I (14 bytes) @ 0x00007f5624642a10 [0x00007f5624642820+0x1f0]\nJ 5826 C2 org.apache.lucene.search.DisjunctionScorer.advance(I)I (87 bytes) @ 0x00007f56246f140c [0x00007f56246f13c0+0x4c]\nJ 8801 C2 org.apache.lucene.search.join.FkToChildBlockJoinQuery$FkToChildBlockJoinScorer.advance(I)I (284 bytes) @ 0x00007f56251274c0 [0x00007f5625127440+0x80]\nJ 5630 C2 org.apache.lucene.search.BooleanScorer2.advance(I)I (14 bytes) @ 0x00007f56246429fc [0x00007f5624642820+0x1dc]\nJ 4797 C2 org.apache.lucene.search.FilteredQuery$LeapFrogScorer.score(Lorg/apache/lucene/search/Collector;)V (91 bytes) @ 0x00007f56244e9ccc [0x00007f56244e9c40+0x8c]\nJ 4613 C2 org.apache.lucene.search.IndexSearcher.search(Ljava/util/List;Lorg/apache/lucene/search/Weight;Lorg/apache/lucene/search/Collector;)V (93 bytes) @ 0x00007f562446cbec [0x00007f562446ca80+0x16c]\nJ 6159 C2 org.apache.solr.search.SolrIndexSearcher.getDocListNC(Lorg/apache/solr/search/SolrIndexSearcher$QueryResult;Lorg/apache/solr/search/SolrIndexSearcher$QueryCommand;)V (708 bytes) @ 0x00007f562486cc30 [0x00007f562486c9a0+0x290]\nJ 11811 C2 org.apache.solr.search.SolrIndexSearcher.getDocListC(Lorg/apache/solr/search/SolrIndexSearcher$QueryResult;Lorg/apache/solr/search/SolrIndexSearcher$QueryCommand;)V (696 bytes) @ 0x00007f5625c957c0 [0x00007f5625c955c0+0x200]\nJ 9702 C2 org.apache.solr.search.SolrIndexSearcher.search(Lorg/apache/solr/search/SolrIndexSearcher$QueryResult;Lorg/apache/solr/search/SolrIndexSearcher$QueryCommand;)Lorg/apache/solr/search/SolrIndexSearcher$QueryResult; (8 bytes) @ 0x00007f5625461404 [0x00007f56254613e0+0x24]\nj  org.apache.solr.handler.component.QueryComponent.process(Lorg/apache/solr/handler/component/ResponseBuilder;)V+1537",
    "attachments": {
        "hs_err_pid9254.log": "https://issues.apache.org/jira/secure/attachment/12779429/hs_err_pid9254.log",
        "hs_err_pid9889.log": "https://issues.apache.org/jira/secure/attachment/12778837/hs_err_pid9889.log"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15066514",
            "author": "amit bhengra",
            "date": "2015-12-21T14:52:49+0000",
            "content": "will be providing core dump file in some time as I am unable to reproduce the crash "
        },
        {
            "id": "comment-15066589",
            "author": "Michael McCandless",
            "date": "2015-12-21T15:43:50+0000",
            "content": "Is it possible you are closing readers while searches are still running against them?  If you switch to NIOFSDirectory instead of {{MMapDirectory} do the crashes still happen? "
        },
        {
            "id": "comment-15066610",
            "author": "amit bhengra",
            "date": "2015-12-21T15:56:07+0000",
            "content": "Haven't tried that, will try that and post here. "
        },
        {
            "id": "comment-15067705",
            "author": "amit bhengra",
            "date": "2015-12-22T07:47:02+0000",
            "content": "Hey Michael, We are using Solr+lucene for our search, can there be an issue with Solr in this case? "
        },
        {
            "id": "comment-15067860",
            "author": "Michael McCandless",
            "date": "2015-12-22T09:40:41+0000",
            "content": "> can there be an issue with Solr in this case?\n\nHmm maybe it's possible there were Solr bugs in 4.6.1 around closing searchers that are still in use by active searches (4.6.1 is quite old by now) ... did switching to NIOFSDirectory avoid the crash? "
        },
        {
            "id": "comment-15067892",
            "author": "amit bhengra",
            "date": "2015-12-22T10:08:05+0000",
            "content": "Have run with NIOFSDirectory haven't seen the issue so far, but have to wait more as in one instance it took around 7 days for this issue to surface and  in another it was within hours. "
        },
        {
            "id": "comment-15069636",
            "author": "amit bhengra",
            "date": "2015-12-23T13:51:24+0000",
            "content": "Hi Michael,\n\nWe tried with NIOFSDirectory, we didn't get any jvm crash yet but we see there are heap issues now, this is probably due to file buffers being stored in heap now from my understanding and it is not getting completely collected during GC, any particular GC setting/solr cache setting you would suggest to resolve this ? "
        },
        {
            "id": "comment-15070909",
            "author": "amit bhengra",
            "date": "2015-12-24T11:29:56+0000",
            "content": "Hi Michael,\n\nThe box with NIOFS has crashed today, I am attaching the error log. "
        },
        {
            "id": "comment-15070932",
            "author": "Uwe Schindler",
            "date": "2015-12-24T11:51:13+0000",
            "content": "Hi,\naccording to the crash log, you are using MMapDirectory! This stack trace cannot come from NIOFSDirectory.\n\nIn any case, this error can only happen, if something else closes IndexReader while searches are running. As you are using Solr in an embedded way, t looks like you may shutdown Solr Cores / close SolrIndexSearcher / ... in parallel threads. We can also give no real support, as you are using Solr inside some Clojure scripts, which is not an officially supported config. It could be that this setup corrupts your JVM.\n\nI'd also strongly suggest to update to latest Java 7u80 (or later if you have payed Oracle support) or better upgrade to Java 8u66. "
        },
        {
            "id": "comment-15070934",
            "author": "Uwe Schindler",
            "date": "2015-12-24T11:55:04+0000",
            "content": "Hi,\nif this only affects one of your boxes, it may also be a hardware problem! "
        },
        {
            "id": "comment-15070951",
            "author": "amit bhengra",
            "date": "2015-12-24T12:23:29+0000",
            "content": "Hi Uwe,\n\nYes Uwe we were earlier using MMapDirectory but we switched to NIOFS if you check the latest log file here : https://issues.apache.org/jira/secure/attachment/12779429/hs_err_pid9254.log\n\nAlso we will checkout the options mentioned by you. "
        },
        {
            "id": "comment-15070953",
            "author": "amit bhengra",
            "date": "2015-12-24T12:32:31+0000",
            "content": "And yes we have checked with hardware issues also, there was no problem and this has occurred in 3 boxes now. "
        },
        {
            "id": "comment-15070955",
            "author": "Michael McCandless",
            "date": "2015-12-24T12:38:53+0000",
            "content": "we were earlier using MMapDirectory but we switched to NIOFS if you check the latest log file here : https://issues.apache.org/jira/secure/attachment/12779429/hs_err_pid9254.log\n\nThat error log shows that you are still using MMapDirectory because ByteBufferIndexInput (where the crash happens) is only used by MMapDirectory.\n\nPlease triple-check your configuration and try again to switch to NIOFSDirectory... "
        },
        {
            "id": "comment-15070960",
            "author": "Uwe Schindler",
            "date": "2015-12-24T12:44:31+0000",
            "content": "we were earlier using MMapDirectory but we switched to NIOFS if you check the latest log file here: https://issues.apache.org/jira/secure/attachment/12779429/hs_err_pid9254.log\n\nSorry, this is definitely using MMapDirectory, because this one uses ByteBufferIndexInput as implementation class!\n\n\nStack: [0x00007fc83191e000,0x00007fc831a1f000],  sp=0x00007fc831a195c0,  free space=1005k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nJ 1583 C2 org.apache.lucene.store.ByteBufferIndexInput.readByte()B (126 bytes) @ 0x00007fe487f50c0c [0x00007fe487f50bc0+0x4c]\n\n\n\nPlease check your solrconfig.xml!\n\nIn addition: MMapDirectory tries its best to prevent SIGSEGV by early throwing AlreadyClosedException. Can you check the log files if you see any occurence of stuff like AlreadyClosedException or other IOExceptions? If you see those, the SIGSEGV was prevented by the tracking code, but under high load with high concurrency this cannot be safely tracked, as we would otherwise significantly slowdown searches. So it may throw AlreadyClosed/IOExceptions or crash. But both tell you that there is a programming error (because something closes IndexReaders while searches are running).\n\nSwitching to NIOFSDirectory would just prevent hard crushes by slowing down searches, but the error in your / Solr's code is still there. So please look for IO/AlreadyClosed exceptions in the logs (with MMap or NIO doesnt matter). "
        },
        {
            "id": "comment-15070991",
            "author": "amit bhengra",
            "date": "2015-12-24T13:16:55+0000",
            "content": "Sure Uwe and Michael, we will double check this and revert. "
        },
        {
            "id": "comment-16256160",
            "author": "Chris A. Mattmann",
            "date": "2017-11-16T23:35:50+0000",
            "content": "We are seeing something that looks like this bug in Apache OODT: https://github.com/apache/oodt/blob/1.2.1/core/pom.xml#L290 and while testing Apache DRAT on our drat-vm Ubuntu box. We are using Lucene core 6.1.0. Have others seen this in 6.1.0? "
        },
        {
            "id": "comment-16259353",
            "author": "Adrien Grand",
            "date": "2017-11-20T15:20:23+0000",
            "content": "This typically happens if you keep using a Directory after it has been closed. That said, crashes are never good, even in case of misuse, so we improved things in 6.2 so that you get an exception rather than a JVM crash if you misuse a MmapDirectory, see LUCENE-7409. "
        }
    ]
}