{
    "id": "SOLR-11438",
    "title": "Solr should return rf when min_rf is specified for deletes as well as adds",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "6.6.1,                                            7.0,                                            master (8.0)",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When we add documents and specify min_rf we get back an rf parameter in the response which is the number of replicas that successfully received the add. \n\nHowever, for delete-by-id or delete-by-query we do not return this data. Is there any harm in it?\n\nAssigning to myself to track, anyone else who wants it feel free.",
    "attachments": {
        "SOLR-11438.patch": "https://issues.apache.org/jira/secure/attachment/12890418/SOLR-11438.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-04T19:21:39+0000",
            "content": "A bare sketch of a patch, just enough to show that it's possible get \"rf\" back from deletes. I just mechanically passed replicationTracker to cmdDistrib.distribDelete (sometimes) without really understanding what I was doing and there are zero tests....\n\nI did note that the processAdd returned rf of 3 when there were 4 replicas, so my bit of refactoring may have messed up processAdd. Like I said, this was only to see what the level of effort required would be. \n\nI didn't even run the test suite on this patch BTW. ",
            "author": "Erick Erickson",
            "id": "comment-16191871"
        },
        {
            "date": "2017-10-05T00:02:50+0000",
            "content": "Hmm, I just found this by accident:\n\nThis code in DistributedUpdateProcessor.processAdd:\n{{        if (minRf > 1) \n{\n          String myShardId = forwardToLeader ? null : cloudDesc.getShardId();\n          replicationTracker = new RequestReplicationTracker(myShardId, minRf);\n        }\n                \n}}\n\nthrows an NPE if you specify min_rf in stand alone mode. Specifying min_rf doesn't make any sense in stand-alone mode but we can be more graceful about it. This is even without the hack I attached. There are no safeguards around dereferencing cloudDesc I think (haven't pursued it much) ",
            "author": "Erick Erickson",
            "id": "comment-16192230"
        },
        {
            "date": "2017-10-30T16:48:29+0000",
            "content": "Current patch, I think it's ready.\n\nI reworked a couple of things. It seems easier if I split out the replication trackers into a \"rollup\" and \"leader\" trackers, these are different roles.\n\nAdditionally, rather than accumulate errors and count them, just using a simple counter in the LeaderReplicationTracker does the trick.\n\nAdding in the delete-by-id was a pain. Not all requests are forwarded to all replicas.\n\nI successfully beasted this test prior to modifications 1,000 times, so I'm pretty sure removing the BadApple annotation is OK.\n\nI intend to beast this test another 1,000 times on my Mac Pro and a server. If all that goes well I'll commit later today.\n\nprecommit and tests pass. ",
            "author": "Erick Erickson",
            "id": "comment-16225291"
        },
        {
            "date": "2017-10-31T23:27:20+0000",
            "content": "Final patch with CHANGES.txt.\n\nNOTE: the tests are @BadApple'd. 3,000 runs later on two different machines and the condition I'm testing is fine, but we get periodic failures to create collections and the like. See: SOLR-6944 ",
            "author": "Erick Erickson",
            "id": "comment-16227782"
        },
        {
            "date": "2017-10-31T23:40:23+0000",
            "content": "Commit 148d81c1e9578221e61cbc2acbf2a7a2082d9fc0 in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=148d81c ]\n\nSOLR-11438: Solr should return rf when min_rf is specified for deletes as well as adds ",
            "author": "ASF subversion and git services",
            "id": "comment-16227788"
        },
        {
            "date": "2017-10-31T23:49:17+0000",
            "content": "Commit 6a2be9163bef25fb0c504c4f2aad2e60df4c5abe in lucene-solr's branch refs/heads/branch_7x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6a2be91 ]\n\nSOLR-11438: Solr should return rf when min_rf is specified for deletes as well as adds\n\n(cherry picked from commit 148d81c) ",
            "author": "ASF subversion and git services",
            "id": "comment-16227792"
        }
    ]
}