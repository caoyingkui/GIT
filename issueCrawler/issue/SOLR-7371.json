{
    "id": "SOLR-7371",
    "title": "Make DocSet Accountable",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Make DocSet implement Accountable so that we can correctly estimate memory usage.",
    "attachments": {
        "SOLR-7371.patch": "https://issues.apache.org/jira/secure/attachment/12724215/SOLR-7371.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-09T13:41:21+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "\n\tDocSet implements Accountable\n\tCorresponding changes in all sub-classes viz. BitDocSet, DocSlice, HashDocSet and SortedIntDocSet\n\n\n\nAre we worried about back-compat here? This is definitely expert level API but I can see some custom search components using it. Maybe I should make DocSetBase implement Accountable instead? ",
            "id": "comment-14487353"
        },
        {
            "date": "2015-04-09T13:49:06+0000",
            "author": "Yonik Seeley",
            "content": "I think it's fine if DocSet implements Accountable - I doubt anyone has their own DocSet implementations. ",
            "id": "comment-14487367"
        },
        {
            "date": "2015-04-09T15:07:05+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Okay, thanks Yonik. I'll commit this shortly. ",
            "id": "comment-14487479"
        },
        {
            "date": "2015-04-09T15:10:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672391 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1672391 ]\n\nSOLR-7371: Make DocSet implement Accountable to estimate memory usage ",
            "id": "comment-14487486"
        },
        {
            "date": "2015-04-09T15:14:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672392 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1672392 ]\n\nSOLR-7371: Make DocSet implement Accountable to estimate memory usage ",
            "id": "comment-14487498"
        },
        {
            "date": "2015-04-09T15:34:24+0000",
            "author": "Mark Miller",
            "content": "I'm seeing NPE's in  lots of the tests after this change. ",
            "id": "comment-14487533"
        },
        {
            "date": "2015-04-09T15:45:24+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Shit. I'll fix. ",
            "id": "comment-14487548"
        },
        {
            "date": "2015-04-09T15:49:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672402 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1672402 ]\n\nSOLR-7371: Fix NPE when scores are null ",
            "id": "comment-14487553"
        },
        {
            "date": "2015-04-09T15:49:34+0000",
            "author": "Yonik Seeley",
            "content": "I can fix if Shalin isn't around.\nI also want to change up some things... I don't think we should pre-calculate the ram size (thus increasing the size  of smaller DocSet objects.  I also think we shouldn't bother with the slower alignment checks.  It doesn't pay to worry about alignment (0 to 7 bytes off?) when we're dealing with bitsets of size maxDoc.  It's completely in the noise and will be much smaller than stuff we totally ignore like cache keys and the datastructures in the HashMap (for example) itself. ",
            "id": "comment-14487554"
        },
        {
            "date": "2015-04-09T15:49:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672403 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1672403 ]\n\nSOLR-7371: Fix NPE when scores are null ",
            "id": "comment-14487556"
        },
        {
            "date": "2015-04-09T15:57:18+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I fixed the NPE. Sorry for the noise guys.\n\nI don't think we should pre-calculate the ram size (thus increasing the size  of smaller DocSet objects\n\nThese are immutable objects, right? The ram usage will be checked on each 'put' of a cache (see SOLR-7372) so I think it makes sense to just pre-calculate? In fact, I am surprised that FixedBitSet doesn't pre-calculate the ram usage. ",
            "id": "comment-14487562"
        },
        {
            "date": "2015-04-09T16:06:56+0000",
            "author": "Yonik Seeley",
            "content": "Proposed patch. ",
            "id": "comment-14487582"
        },
        {
            "date": "2015-04-09T16:11:20+0000",
            "author": "Yonik Seeley",
            "content": "We create a lot of these objects that do not go into any cache... probably more that don't than do.\nAnd if we keep things really fast (and avoid slow modulo arithmetic), we should be fine?  For example the original code (memSize) did a single cycle operation... it would not have been faster to cache. ",
            "id": "comment-14487590"
        },
        {
            "date": "2015-04-09T16:26:23+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Okay, that makes sense.\n\nYour patch has the following in BitDocSet, is this a copy/paste mistake?\n\n-  private static final long BASE_RAM_BYTES_USED = RamUsageEstimator.shallowSizeOfInstance(BitDocSet.class);\n+  private static final long BASE_RAM_BYTES_USED = RamUsageEstimator.shallowSizeOfInstance(SortedIntDocSet.class) + RamUsageEstimator.NUM_BYTES_ARRAY_HEADER;\n\n ",
            "id": "comment-14487609"
        },
        {
            "date": "2015-04-09T16:52:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672421 from Yonik Seeley in branch 'dev/trunk'\n[ https://svn.apache.org/r1672421 ]\n\nSOLR-7371: don't cache size for now and tolerate small alignment errors ",
            "id": "comment-14487653"
        },
        {
            "date": "2015-04-09T17:15:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672424 from Yonik Seeley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1672424 ]\n\nSOLR-7371: don't cache size for now and tolerate small alignment errors ",
            "id": "comment-14487684"
        },
        {
            "date": "2015-04-09T17:15:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672425 from Yonik Seeley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1672425 ]\n\nSOLR-7371: don't cache size for now and tolerate small alignment errors ",
            "id": "comment-14487685"
        },
        {
            "date": "2015-04-09T17:27:42+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thank you for fixing the base calculations, Yonik.\n\nOne question for my own understanding \u2013 the shallowSizeOfInstance method will add an object reference size for any array instance but then we add an array header size which includes an object reference size too. So we are adding an extra object reference size, right? Though that's a small over-calculation compared to the size of objects we will be measuring so it's not a big deal. ",
            "id": "comment-14487703"
        },
        {
            "date": "2015-04-09T17:48:43+0000",
            "author": "Yonik Seeley",
            "content": "then we add an array header size which includes an object reference size too.\n\nI don't think it does?\n\n      NUM_BYTES_ARRAY_HEADER = (int) alignObjectSize(NUM_BYTES_OBJECT_HEADER + NUM_BYTES_INT);\n\n\nSo the array header is just a specialized object header since an array also contains a length. ",
            "id": "comment-14487747"
        },
        {
            "date": "2015-04-09T18:17:17+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Sorry, you're right. I got confused between the NUM_BYTES_OBJECT_HEADER and NUM_BYTES_OBJECT_REF. ",
            "id": "comment-14487836"
        },
        {
            "date": "2015-09-18T12:14:44+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This was released in 5.2 ",
            "id": "comment-14847335"
        }
    ]
}