{
    "id": "SOLR-1961",
    "title": "Use Lucene's Field Cache To Retrieve Stored Fields From Memory",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "This allows the user to configure which fields should be field cached in the schema.xml file by adding the following attribute:\nfieldCached=\"true\"\n\nEnabling this on a field greatly decreases the time needed to retrieve stored fields. This works on fields containing Bytes, Strings, Integers, Longs, and Floats. Enabling field cache is applicable in many scenarios. For instance, if you have a bunch of text that is indexed and not stored and you only need to retrieve a string or number associated with a document. Its applicable in any case where there are many indexed fields and not too many stored fields being retrieved. The memory consumption is not very high compared to the performance gains field cache brings.\n\nMemory consumption is governed by: Number of fields cached * Number of documents *  8 bytes per reference +\n\tSUM(Number of unique values of the field  * average length of term)  * 2 (chars use 2 bytes) * String overhead (40 bytes)",
    "attachments": {
        "field_cache.patch": "https://issues.apache.org/jira/secure/attachment/12448897/field_cache.patch",
        "patch.txt": "https://issues.apache.org/jira/secure/attachment/12447404/patch.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Stephen Bochinski",
            "id": "comment-12880004",
            "date": "2010-06-17T23:37:52+0000",
            "content": "code changes. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12882909",
            "date": "2010-06-27T03:12:49+0000",
            "content": "This looks useful.  The 2 new classes should have the standard ASL stuff at the very top.  I also spotted a couple of TODOs from/for somebody named Stuart?\n\nOh, and do you happen to have any unit tests for this? "
        },
        {
            "author": "Stephen Bochinski",
            "id": "comment-12883286",
            "date": "2010-06-28T20:52:21+0000",
            "content": "Forgot to remove those TODO's. I'll remove them when I update the patch as well as adding the ASL stuff. \n\nI don't have any unit tests written so far. I will write some and include them in the updated patch. "
        },
        {
            "author": "Stephen Bochinski",
            "id": "comment-12886017",
            "date": "2010-07-07T18:14:55+0000",
            "content": "I've added the ASL headers. I added a unit test as well. I also removed the TODO's floating around in the code. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12886265",
            "date": "2010-07-08T07:17:53+0000",
            "content": "Can you remove the useless Exception catch blocks printing ex.printStackTrace() and bubble them up? Also simply printing stack traces to anywhere (stdout) is the wong thing to do. If you catch the Exceptions, pass them to log.error, so the logging framework logs them correct. "
        },
        {
            "author": "Stephen Bochinski",
            "id": "comment-12886567",
            "date": "2010-07-09T00:24:11+0000",
            "content": "I removed the cases where printing was being done to stdout. I also bubbled up the IOExceptions to a consolidated section. Added a little to the test case as well to test more realistic versions of fields with Strings in them. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16019001",
            "date": "2017-05-21T22:16:02+0000",
            "content": "Closing ancient issue as won't fix, as we now have DocValues that are much preferred! "
        }
    ]
}