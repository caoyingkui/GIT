{
    "id": "LUCENE-1109",
    "title": "Clean up old JIRA issues in component \"Search\"",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "core/search"
        ],
        "type": "Task",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "None",
        "resolution": "Later",
        "status": "Closed"
    },
    "description": "A list of all JIRA issues in component \"Search\" that haven't been updated in 2007:\n\n\n\tLUCENE-737  \t Provision of encryption/decryption services API to support Field.Store.Encrypted\n\tLUCENE-711 \tBooleanWeight should size the weights Vector correctly\n\tLUCENE-691 \tBob Carpenter's FuzzyTermEnum refactoring\n\tLUCENE-671 \tHashtable based Document\n\tLUCENE-668 \tIncremental Search\n\tLUCENE-663 \tNew feature rich higlighter for Lucene.\n\tLUCENE-655 \tfield queries does not work as expected\n\tLUCENE-640 \t[PATCH] Performance improvement for doNext() of ConjunctionScorer\n\tLUCENE-628 \tIntermittent FileNotFoundException for .fnm when using rsync\n\tLUCENE-582 \tDon't throw TooManyClauses exception\n\tLUCENE-548 \tSort bug using ParallelMultiSearcher\n\tLUCENE-538 \tUsing WildcardQuery with MultiSearcher, and Boolean MUST_NOT clause\n\tLUCENE-533 \tSpanQuery scoring: SpanWeight lacks a recursive traversal of the query tree\n\tLUCENE-524 \tCurrent implementation of fuzzy and wildcard queries inappropriately implemented as Boolean query rewrites\n\tLUCENE-522 \tSpanFuzzyQuery\n\tLUCENE-517 \tnorm compression breaks ranking for small fields\n\tLUCENE-507 \tCLONE -[PATCH] remove unused variables\n\tLUCENE-504 \tFuzzyQuery produces a \"java.lang.NegativeArraySizeException\" in PriorityQueue.initialize if I use Integer.MAX_VALUE as BooleanQuery.MaxClauseCount\n\tLUCENE-502 \tTermScorer caches values unnecessarily\n\tLUCENE-495 \tSuggested Patches to MultiPhraseQuery and QueryTermExtractor (for use with HighLighter)\n\tLUCENE-476 \tBooleanQuery add public method that returns number of clauses this query\n\tLUCENE-466 \tNeed QueryParser support for BooleanQuery.minNrShouldMatch\n\tLUCENE-459 \tWarnings needed for sorting on non existant or non indexed fields\n\tLUCENE-445 \tContrib.: Thread-safe DelayCloseIndexSearcher.\n\tLUCENE-434 \tLucene database bindings\n\tLUCENE-427 \tPrefixQuery.extractTerms() missing\n\tLUCENE-423 \tthread pool implementation of parallel queries\n\tLUCENE-421 \tNumeric range searching with large value sets\n\tLUCENE-420 \t[PATCH] Contribution: Did you mean...\n\tLUCENE-411 \t[PATCH] BitSetQuery, FastPrefixQuery, FastWildcardQuery and FastQueryParser\n\tLUCENE-406 \tsort missing string fields last\n\tLUCENE-379 \tContribution: Efficient Sorting of DateField/DateTools Encoded Timestamp Long Values\n\tLUCENE-329 \tFuzzy query scoring issues\n\tLUCENE-320 \t[PATCH] Increases visibility of methods/classes from protected/package level to public\n\tLUCENE-314 \t[PATCH] Filter for one/ multiple refinements search: filter the search with anterior hits\n\tLUCENE-308 \tadd \"isClosed()\" method to IndexSearcher\n\tLUCENE-271 \tQuery.toString() and Query.toString(String field) not escaping special characters\n\tLUCENE-124 \tFuzzy Searches do not get a boost of 0.2 as stated in \"Query Syntax\" doc\n\tLUCENE-42 \t[PATCH] Phonetic Search capability\n\tLUCENE-38 \tRangeQuery without lower term and inclusive=false skips blank fields",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2008-05-24T22:38:39+0000",
            "content": "Reopen these issues or open new issues in then 2.4 release process. ",
            "author": "Michael Busch",
            "id": "comment-12599634"
        }
    ]
}