{
    "id": "SOLR-10314",
    "title": "Spellcheck with SnowballPorterFilterFactory and Synonyms doesn't work well",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Information Provided",
        "status": "Resolved"
    },
    "description": "As noted in SOLR-10252, the default spellcheck configuration in the data_driven_schema_configs (and basic_configs) uses the _text_ field as the default field for spellcheck. This field is text_general field type.\n\nIf I use this default configuration for spellcheck, but modify the text_general field to use the SnowballPorterFilterFactory (with language=German in this case), and have synonyms in my analysis chain, queries to the /spell request handler will fail when there are 2 or more terms which are both preceded with a + operator. \n\nNote that the default spellcheck configuration also enables spellcheck.collate - if I disable that, I do not get any error. I also do not get an error if I use only 1 term, even if it is spelled \"correctly\". If at least one of the terms is spelled incorrectly, that also does not give an error.\n\nSo, in summary, there's a pretty specific list of variables at work here:\n\n\n\t/spell request handler\n\t2 or more terms, both spelled correctly (or, both terms exist in the index)\n\tall terms required with +\n\tsynonyms (there is a big list in this case, which I cannot share...see SOLR-10252 for an example of the parsed query to see how big the list can get)\n\tSnowballPorterFilter\n\tspellcheck.collate=true\n\n\n\nThe error returned is: \n\norg.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://localhost:7574/solr/spelltest3_shard1_replica2: String index out of range: -1\n\n\n\nI made several experiments and found that if synonyms are removed from the field type (and thus the query analysis chain), the query is successful with collations enabled. So it's not SnowballPorterFilter by itself, but with + and synonyms and collation.\n\nThe field type definition is:\n\n\n  <fieldType name=\"text_general\" class=\"solr.TextField\" positionIncrementGap=\"100\" multiValued=\"true\">\n    <analyzer type=\"index\">\n      <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n      <filter class=\"solr.StopFilterFactory\" words=\"stopwords.txt\" ignoreCase=\"true\"/>\n      <filter class=\"solr.SnowballPorterFilterFactory\" language=\"German\"/>\n      <filter class=\"solr.LowerCaseFilterFactory\"/>\n    </analyzer>\n    <analyzer type=\"query\">\n      <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n      <filter class=\"solr.StopFilterFactory\" words=\"stopwords.txt\" ignoreCase=\"true\"/>\n      <filter class=\"solr.SynonymFilterFactory\" expand=\"true\" ignoreCase=\"true\" synonyms=\"synonyms.txt\"/>\n      <filter class=\"solr.LowerCaseFilterFactory\"/>\n      <filter class=\"solr.SnowballPorterFilterFactory\" language=\"German\"/>\n    </analyzer>\n  </fieldType>\n\n\n\nThis problem was found with 5.5.2, but I verified it still exists in 6.4 and 6.5.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-07T15:40:50+0000",
            "content": "SpellingQueryConverter does not generally work with stemmed fields.  This is pluggable and users can write they own class if they need custom behavior.  They also can use \"spellcheck.q\" with the raw keywords they wish to have checked and bypass the Query Converter entirely.  Users complain about getting esoteric error messages from this class periodically and it probably should give a more thoughtful log message in these cases.  It would be nice if we could re-think how spell checking works and possibly dispense with the need for a QueryConverter, but personally I have yet to think of a good solution so far. ",
            "author": "James Dyer",
            "id": "comment-15960976"
        },
        {
            "date": "2017-07-25T18:28:07+0000",
            "content": "I'm going to close this issue as it seems there isn't a ton that can be done about it - it's expected behavior for the most part, and the solution would be much larger than this narrow use case. ",
            "author": "Cassandra Targett",
            "id": "comment-16100518"
        }
    ]
}