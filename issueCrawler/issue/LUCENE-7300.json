{
    "id": "LUCENE-7300",
    "title": "Add directory wrapper that optionally uses hardlinks in copyFrom",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "6.1",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Today we always do byte-by-byte copy in Directory#copyFrom. While this is reliable and should be the default, certain situations can be improved by using hardlinks if possible to get constant time copy on OS / FS that support such an operation. Something like this could reside in misc if it's contained enough since it requires LinkPermissions to be set and needs to detect if both directories are subclasses of FSDirectory etc.",
    "attachments": {
        "LUCENE-7300.patch": "https://issues.apache.org/jira/secure/attachment/12806099/LUCENE-7300.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15299732",
            "author": "Simon Willnauer",
            "date": "2016-05-25T09:24:00+0000",
            "content": "here is a patch that adds such a directory with a test "
        },
        {
            "id": "comment-15299737",
            "author": "Dawid Weiss",
            "date": "2016-05-25T09:26:56+0000",
            "content": "This works as long as files are immutable (a hardlink to the same file would still reflect changes to that file after it's created, whereas a copy is, well, a copy), perhaps it's worth clarifying somehow (in the docs)? "
        },
        {
            "id": "comment-15299741",
            "author": "Dawid Weiss",
            "date": "2016-05-25T09:30:04+0000",
            "content": "\n+      assertEquals(\"hey man, nice shot!\", indexInput.readString());\n\n\n\nhttps://www.youtube.com/watch?v=GEMVGHoenXM\n "
        },
        {
            "id": "comment-15299746",
            "author": "Simon Willnauer",
            "date": "2016-05-25T09:34:31+0000",
            "content": "https://www.youtube.com/watch?v=I3yvFmi_q1M  "
        },
        {
            "id": "comment-15299762",
            "author": "Simon Willnauer",
            "date": "2016-05-25T09:47:55+0000",
            "content": "I added some lines to the javadocs Dawid Weiss "
        },
        {
            "id": "comment-15299767",
            "author": "Dawid Weiss",
            "date": "2016-05-25T09:53:35+0000",
            "content": "Looks (and sounds) great to me. "
        },
        {
            "id": "comment-15300189",
            "author": "Robert Muir",
            "date": "2016-05-25T15:09:05+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15301761",
            "author": "ASF subversion and git services",
            "date": "2016-05-26T08:42:04+0000",
            "content": "Commit 268da5be45e5eed570575eea6a9e85a4cdb658e7 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=268da5b ]\n\nLUCENE-7300: Add HardLinkCopyDirectoryWrapper to speed up file copying if hardlinks are applicable "
        },
        {
            "id": "comment-15301762",
            "author": "ASF subversion and git services",
            "date": "2016-05-26T08:43:45+0000",
            "content": "Commit a6839beb87a73bff6139df44a7b9168a498dd426 in lucene-solr's branch refs/heads/branch_6x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a6839be ]\n\nLUCENE-7300: Add HardLinkCopyDirectoryWrapper to speed up file copying if hardlinks are applicable "
        },
        {
            "id": "comment-15306474",
            "author": "Uwe Schindler",
            "date": "2016-05-30T10:11:16+0000",
            "content": "I have seen the following test failure:\n\nBuild: http://jenkins.thetaphi.de/job/Lucene-Solr-6.x-Linux/775/\nJava: 64bit/jdk-9-ea+120 -XX:+UseCompressedOops -XX:+UseSerialGC\n\n1 tests failed.\nFAILED:  org.apache.lucene.store.TestHardLinkCopyDirectoryWrapper.testCopyHardLinks\n\n\nError Message:\n/home/jenkins/workspace/Lucene-Solr-6.x-Linux/lucene/build/misc/test/J2/temp/lucene.store.TestHardLinkCopyDirectoryWrapper_97CB7FCC9FBCBDC6-001/tempDir-001/test -> /home/jenkins/workspace/Lucene-Solr-6.x-Linux/lucene/build/misc/test/J2/temp/lucene.store.TestHardLinkCopyDirectoryWrapper_97CB7FCC9FBCBDC6-001/tempDir-001/dir_1/foo.bar\n\nStack Trace:\njava.nio.file.NoSuchFileException: /home/jenkins/workspace/Lucene-Solr-6.x-Linux/lucene/build/misc/test/J2/temp/lucene.store.TestHardLinkCopyDirectoryWrapper_97CB7FCC9FBCBDC6-001/tempDir-001/test -> /home/jenkins/workspace/Lucene-Solr-6.x-Linux/lucene/build/misc/test/J2/temp/lucene.store.TestHardLinkCopyDirectoryWrapper_97CB7FCC9FBCBDC6-001/tempDir-001/dir_1/foo.bar\n\tat __randomizedtesting.SeedInfo.seed([97CB7FCC9FBCBDC6:769E35B963DCF416]:0)\n\tat sun.nio.fs.UnixException.translateToIOException(java.base@9-ea/UnixException.java:92)\n\tat sun.nio.fs.UnixException.rethrowAsIOException(java.base@9-ea/UnixException.java:111)\n\tat sun.nio.fs.UnixFileSystemProvider.createLink(java.base@9-ea/UnixFileSystemProvider.java:477)\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createLink(FilterFileSystemProvider.java:233)\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createLink(FilterFileSystemProvider.java:233)\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createLink(FilterFileSystemProvider.java:233)\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createLink(FilterFileSystemProvider.java:233)\n\tat org.apache.lucene.mockfile.FilterFileSystemProvider.createLink(FilterFileSystemProvider.java:233)\n\tat java.nio.file.Files.createLink(java.base@9-ea/Files.java:1089)\n\tat org.apache.lucene.store.TestHardLinkCopyDirectoryWrapper.testCopyHardLinks(TestHardLinkCopyDirectoryWrapper.java:55)\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@9-ea/Native Method)\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@9-ea/NativeMethodAccessorImpl.java:62)\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@9-ea/DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(java.base@9-ea/Method.java:531)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat java.lang.Thread.run(java.base@9-ea/Thread.java:843)\n\n "
        },
        {
            "id": "comment-15306499",
            "author": "Michael McCandless",
            "date": "2016-05-30T10:32:12+0000",
            "content": "It reproduces:\n\n{noformat\nant test  -Dtestcase=TestHardLinkCopyDirectoryWrapper -Dtests.method=testCopyHardLinks -Dtests.seed=91C212F610DC4EB5 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/x1/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=it-CH -Dtests.timezone=Canada/Newfoundland -Dtests.asserts=true -Dtests.file.encoding=UTF-8 -Dtests.verbose=true\n{noformat} "
        },
        {
            "id": "comment-15306501",
            "author": "Michael McCandless",
            "date": "2016-05-30T10:34:10+0000",
            "content": "OK I see the problem ... looks like a test bug: with this seed, newFSDirectory returned an NRTCachingDirectory but the test assumes when it creates the output foo.bar that it'll write through to the file system ... I'll fix by adding a sync call to force it. "
        },
        {
            "id": "comment-15306502",
            "author": "ASF subversion and git services",
            "date": "2016-05-30T10:37:28+0000",
            "content": "Commit 979af27209a10b41857cbf6c7439472c3eca5983 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=979af27 ]\n\nLUCENE-7300: fix test bug to ensure the newly created file is in fact written through to the underlying filesystem even if NRTCachingDirectory is used "
        },
        {
            "id": "comment-15306504",
            "author": "ASF subversion and git services",
            "date": "2016-05-30T10:38:21+0000",
            "content": "Commit 032247ff6e4d576f179a3db2050af6bedf9c716c in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=032247f ]\n\nLUCENE-7300: fix test bug to ensure the newly created file is in fact written through to the underlying filesystem even if NRTCachingDirectory is used "
        }
    ]
}