{
    "id": "LUCENE-5383",
    "title": "fix changes2html to link pull requests",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "If someone submits a pull request, i think we should put it in changes.txt in some way similar to the jira issues:\n\ne.g. for a JIRA issue we do:\n\n* LUCENE-XXXX: Add FooBar.  (Joe Contributor via John Committer)\n\n\n\nchanges2html recognizes and expands these to jira issue links.\n\nso I think we should be able to do something like:\n\n* pull request #xxx: Add FooBar. (Joe Contributor via John Committer)\n\n\n\nand have it link to the request, too.",
    "attachments": {
        "LUCENE-5383.patch": "https://issues.apache.org/jira/secure/attachment/12621492/LUCENE-5383.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13862346",
            "author": "Uwe Schindler",
            "content": "I don't trust GITHUB and the persistence of links to their system. So we have to make sure the links to non-apache resources from our changes.txt are persistent! ",
            "date": "2014-01-04T16:46:14+0000"
        },
        {
            "id": "comment-13862352",
            "author": "Hoss Man",
            "content": "\"pull request\" is vague - github is the flavor of the year, but that doesn't mean it will be obvious what system \"pull request #xxx\" refers to a year from now.  I would suggest a convention of \"github pull req #xxx\" may help clarify longer term.\n\nI don't trust GITHUB and the persistence of links to their system.\n\n+1\n\nSo we have to make sure the links to non-apache resources from our changes.txt are persistent!\n\n-0\n\nWe've never, to my knowledge, had a hard and fast rule that every entry in CHANGES.txt needed to have an issue# (Jira now, bugzilla once upon a time) associated with it - but we've built up our tools such that if they have an issue number we link to it if we can.  \n\nI don't see how referring to github pull requests (or github issue# if people start filing those, or CVE numbers, or hyperlinking raw URLs people type in) is really any different.  \n\nIf we start getting more patches from github pull requests, and more people start committing those patches directly w/o opening jira issues, then having some ref id in CHANGES.txt to refer to those contributions is better then nothing.   And if we can also make a best effort to link those ref ids to more context on a third party system, we should attempt to do so \u2013 even if we can't guarantee those links are persistent.\n\nAs long as the build doesn't fail if the third party server is down when we're trying to generate the changes.html, I don't see a problem with it.  (it's no different then the way we generate javadocs that link to Oracle \u2013 we don't trust that Oracle's servers will be up when we generate the links, but we do assume the links won't change, and if they do - oh well.) ",
            "date": "2014-01-04T17:18:17+0000"
        },
        {
            "id": "comment-13862361",
            "author": "Robert Muir",
            "content": "\nI would suggest a convention of \"github pull req #xxx\" may help clarify longer term.\n\nI don't think we should make this complicated without good reason. We should use consistent naming in CHANGES.txt and in commit messages like we do today, and it should also be recognized by github so the contributor knows we actually committed the thing.\n ",
            "date": "2014-01-04T17:27:08+0000"
        },
        {
            "id": "comment-13862363",
            "author": "Hoss Man",
            "content": "it should also be recognized by github so the contributor knows we actually committed the thing.\n\nisn't that more a question of the commit message then what appears in CHANGES.txt?\n\nI believe all github cares about (for updating the pull request metdata on their end) is the commit message \u2013 so as long as that says \"pull request #xxx\" they'll do there thing \u2013 we should put whatever we think is best in CHANGES.txt to help us understand the providence of the code.  I think adding the word \"github\" somewhere near \"#xxx\" would be helpful for us to keep things straight in the long term,\n ",
            "date": "2014-01-04T17:32:09+0000"
        },
        {
            "id": "comment-13862364",
            "author": "Robert Muir",
            "content": "Don't clip my sentence in half, read the whole thing. thanks! ",
            "date": "2014-01-04T17:34:42+0000"
        },
        {
            "id": "comment-13862375",
            "author": "Hoss Man",
            "content": "I read the whole sentence, but i only felt the need to response to part of it.\n\nIf it's important to you that i repsond to the whole thing...\n\nWe should use consistent naming in CHANGES.txt and in commit messages like we do today, and it should also be recognized by github so the contributor knows we actually committed the thing.\n\ncommit messages and CHANGES entries today are frequently the same but not always (examples: most people don't include the contributors names in the commit msg, but we do in CHANGES, if i'm merging to another branch i always include the source rev in the commit message but obviously never in CHANGES, sometimes people commit things for multiple issues at once, and use a isngle commit message refering to all of the affected issue#s, but split them out and provide more detail in CHANGES, etc...)\n\nIt's been convention because it worked well, but it's never been a rule and it's never been enforced.\n\nwe're now having a conversation about how we want to change our conventions and general practices to better integrate with github \u2013 and that's fine and i'm all in favor of it, but since by definition this a conversation about changing conventions I don't see why we it's a bad idea to consider tweaking one convention (keeping commit messages close to CHANGES entries) slightly in order to have better records as we amend another convetion (refering to github pull requests in commit msgs and/or CHANGES)\n\nIf all github cares about is seeing \"pull request #xxx\" in the commit message, then what's wrong with using \"pull request #xxx\" in the commit msg \u2013 but in CHANGES.txt (where we are trying to keep a long term human permanent record of where stuff comes from and why) also mention, in some way, in some part of the CHANGES entry that the patch was contributed via github? (so X years from now when we are getting contributions via MercurialHub and BitBucket mirrors we'll know what the fuck we were talking about back in 2014)\n\n\n\nOr let's put it another way and consider the more general problem...\n\nImagine a situation where we have a Jira issue tracking a bug, where people have heavily discussed the bug and explained it's symptoms and what's bad about it, and how it affects things, and you can work around it in some situations but not in others. (ie: stuff people might care about when reading CHANGES.txt to know if it's something that may affect them and their upgrade testing) and then someone comes along and contributes a fix, but instead of attaching it to the jira, they submit it as a pull request.\n\nhow should that be tracked in CHANGES.txt?\n\nI would suggest that something like this may be a good convention moving forward...\n\ncomit msg\nLUCENE-XYZ: Fixed a bug in the HuperDuperMergeDestroyer that would cause merges to not be destroyed if it was a tuesday and you live in Angola (github pull request #ABC)\n\n\nCHANGES.txt\n* LUCENE-XYZ: Fixed a bug in the HuperDuperMergeDestroyer that would cause\n  merges to not be destroyed if it was a tuesday and you live in Angola\n  (Sally Contributor via Jim Commiter - github pull request #ABC)\n\n\n\nWith all of the changes2html hyperlinking you might expect.  \n\nIf there is no Jira, leave that part out (just like we do today).  If there is no Contributor, leavethat part out (just like we do today).  If there is no github pull request, leave that part out (just like we do today)\n\nThoughts? ",
            "date": "2014-01-04T18:04:06+0000"
        },
        {
            "id": "comment-13862403",
            "author": "Robert Muir",
            "content": "Don't overengineer it: your overengineered scheme would not work anyway, with both bitbucket and github seeing the word \"pull request\" in the change anyway (both number them) and tripping each other up and linking unrelated issues to other things.\n\nInstead keep it simple and we will have consistency, committers will understand the system and use it. ",
            "date": "2014-01-04T20:14:13+0000"
        },
        {
            "id": "comment-13862417",
            "author": "Steve Rowe",
            "content": "\nI would suggest a convention of \"github pull req #xxx\" may help clarify longer term.\n\nI don't think we should make this complicated without good reason. We should use consistent naming in CHANGES.txt and in commit messages like we do today, and it should also be recognized by github so the contributor knows we actually committed the thing.\n\nAdding the word \"github\" is complicated?  Um, I don't think so.  \n\nHowever, since \"pull request\" is AFAICT synonymous in the current context with \"github pull request\", and this is likely IMHO to be the case for years, we should not require committers to include \"github\" in CHANGES.txt entries to get pull request references linked to github pull requests.\n\nDoes Github describe their commit message pull request reference syntax anywhere?  I did lots of searching and couldn't find it (I only found stuff about how to refer to/close issues from commit messages).  Apparently case-insensitive \"pull request # <num>\" is one form, but maybe the '#' isn't required, maybe PR would work instead of \"pull request\", etc. ",
            "date": "2014-01-04T20:59:54+0000"
        },
        {
            "id": "comment-13862460",
            "author": "Hoss Man",
            "content": "Don't overengineer it: your overengineered scheme would not work anyway, with both bitbucket and github seeing the word \"pull request\" in the change anyway (both number them) and tripping each other up and linking unrelated issues to other things.\n\nplaying nice with github/whatever should be a secondary concern compared to keeping good records of the providence of contributions.  (and as mentioned: should only be a factor in the commit msg, we could differentiate in the CHANGES entry however we want)\n\nBut whatever \u2013 i don't really care that much about whether changes2html should expect/require \"github pull request #xxx\" vs just \"pull request #xxx\" when hyperlinking \u2013 if people think \"pull request #xxx\" is good enough so be it.\n\nHowever: i still think the conventions you are advocating of putting the pull req number in the front of the CHANGES entry (as if it were a Jira#) and always making the CHANGES entry exactly like the commit message (\"pull request #xxx\" at the front of both) doesn't really make much sense for 2 reasons...\n\n1) as demonstrated by the example i mentioned above where we might have both a Jira# and a pull req#\n\n2) Situations where a single logical feature/bug-fix consists of mutiple commits which might come from multiple pull requests  (independent of whether we have a jira tracking that feature/bug-fix).  we typically only give logical changes a single entry in CHANGES and list the multiple contributors who participated in the multiple patches/commits.  It would seem to make a lot more sense to put the pull request info next to the name of the person who submitted it, or at the end.\n\nAs a Concrete example, consider something like LUCENE-5273.  It has a single entry in CHANGES.txt, but there were 3 separate commits, containing contributions from 3 distinct people who found bugs & help improve performance before it was released.... \n\n\n\thttps://svn.apache.org/viewvc?view=revision&revision=r1531354\n\thttps://svn.apache.org/viewvc?view=revision&revision=r1531711\n\thttps://svn.apache.org/viewvc?view=revision&revision=r1531750\n\n\n\nIf one or more of those contributions had come in as pull requests, how would you suggest we track them in CHANGES.txt?\n\nI agree that listing the specific pull request # in the individual commit messages to help integrate with github makes perfect sense, but I don't see how trying to keep the CHANGES.txt entry identical to the commit message would even be possible in a multi-commit situation \u2013 and putting \"pull request #xxx\" (for each pull request) at the front of CHANGES.txt would make it really weird to read.  It seems like it would make a lot more sense to batch them up in a single short statement \u2013 preferably at the end of the entry along with the existing info of who made the contributions...\n\ncommit message: pull request #123 - Add a HupperDuperMergeDestroyer\n+ * New HupperDuperMergeDestroyer class for destroying merges\n+   (Sally Contributor via Suzy Committer - pull req #123)\n\n\n\ncommit message: pull request #456 - Perf improvements for  HupperDuperMergeDestroyer\n  * New HupperDuperMergeDestroyer class for destroying merges\n-   (Sally Contributor via Suzy Committer - pull req #123)\n+   (Sally Contributor, Joe Contrib via Suzy Committer - pull req #123, #456)\n\n\n\ncommit message: pull request #789 - Generalize  HupperDuperMergeDestroyer into HupperDuperMergeRecycler\n- * New HupperDuperMergeDestroyer class for destroying merges\n-   (Sally Contributor, Joe Contrib via Suzy Committer - pull req #123, #456)\n+ * New HupperDuperMergeRecycler class for destroying or re-using merges\n+   (Sally Contributor, Joe Contrib, Amy Contrbutor via Suzy Committer - pull req #123, #456, #789)\n\n\n\nI think that in the long term, something like that will make a lot more sense then trying to put \"pull request #xxx\" at the front of the entry for every pull request that might related to that feature/fix \u2013 but whatever.  \n\nif you still think this is over complicated and you're adamant about doing it your way, then do it your way.  we can always change the convention, update old entries, and revise changes2html later if it becomes problematic as i expect it will. ",
            "date": "2014-01-05T01:21:43+0000"
        },
        {
            "id": "comment-13862461",
            "author": "Steve Rowe",
            "content": "patch to autolinkify text of the form \"[ github | gh ] pull request [ # ] \\d+\" to the corresponding github pull request ",
            "date": "2014-01-05T01:24:17+0000"
        },
        {
            "id": "comment-13863091",
            "author": "Robert Muir",
            "content": "I'm not adamant about any particular way, i just want it to be relatively consistent and simple. \n\nUnfortunately, it looks like the commit messages in practice need to be different from the CHANGES entry anyway to close the request  ",
            "date": "2014-01-06T16:41:53+0000"
        },
        {
            "id": "comment-13863127",
            "author": "Robert Muir",
            "content": "+1 for this patch: I tested it with trunk today (we have 2 CHANGES entries, though they are formatted differently and we should fix that to be consistent: but the patch worked with both). ",
            "date": "2014-01-06T17:22:20+0000"
        },
        {
            "id": "comment-13863133",
            "author": "ASF subversion and git services",
            "content": "Commit 1555927 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1555927 ]\n\nSOLR-2794: make formatting consistent (see hoss note in LUCENE-5383) ",
            "date": "2014-01-06T17:28:23+0000"
        },
        {
            "id": "comment-13863138",
            "author": "ASF subversion and git services",
            "content": "Commit 1555928 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1555928 ]\n\nSOLR-2794: make formatting consistent (see hoss note in LUCENE-5383) ",
            "date": "2014-01-06T17:29:41+0000"
        },
        {
            "id": "comment-13863183",
            "author": "Stefan Matheis (steffkes)",
            "content": "I'm a bit late to the party .. just to mention it: github accepts GH-xxx as well as #xxx (see http://stackoverflow.com/a/6742691) - perhaps that's a bit \"easier\" since we are used to SOLR-xxx and LUCENE-xxx and for others (whoever) the notation might be a bit more obvious? ",
            "date": "2014-01-06T18:12:28+0000"
        },
        {
            "id": "comment-13863266",
            "author": "Steve Rowe",
            "content": "github accepts GH-xxx as well as #xxx (see http://stackoverflow.com/a/6742691) \n\n+1, though the Github blog linked to from that SO post - https://github.com/blog/411-github-issue-tracker - only talks about the issue tracker, not pull requests.  This fuzziness (allowing pull requests to work the same as issues) seems intentional, AFAICT, so it's likely that \"closes GH-12\" will close pull request #12.\n\nI'll modify the patch to recognize GH-xxx too. ",
            "date": "2014-01-06T19:13:18+0000"
        },
        {
            "id": "comment-13863317",
            "author": "Steve Rowe",
            "content": "patch adding \"gh-XXX\" as a recognized pull request reference.\n\nCommitting shortly. ",
            "date": "2014-01-06T19:42:01+0000"
        },
        {
            "id": "comment-13863323",
            "author": "Steve Rowe",
            "content": "Same patch, this time without the random CHANGES.txt test strings  ",
            "date": "2014-01-06T19:44:17+0000"
        },
        {
            "id": "comment-13863329",
            "author": "ASF subversion and git services",
            "content": "Commit 1555998 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1555998 ]\n\nLUCENE-5383: fix changes2html to link pull requests ",
            "date": "2014-01-06T19:52:33+0000"
        },
        {
            "id": "comment-13863345",
            "author": "ASF subversion and git services",
            "content": "Commit 1556009 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1556009 ]\n\nLUCENE-5383: fix changes2html to link pull requests (merged trunk r1555998) ",
            "date": "2014-01-06T20:07:16+0000"
        },
        {
            "id": "comment-13863348",
            "author": "Steve Rowe",
            "content": "Committed to trunk and branch_4x. ",
            "date": "2014-01-06T20:10:06+0000"
        }
    ]
}