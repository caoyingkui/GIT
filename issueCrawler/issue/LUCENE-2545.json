{
    "id": "LUCENE-2545",
    "title": "improve uses of StringHelper.intern in Field,AbstractField, NumericField etc.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/other"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "3.0.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "There are many times for certain field types that intern is still called when it is not needed. We can improve this with pretty simple open up of the constructors etc.",
    "attachments": {
        "LUCENE-2545.patch": "https://issues.apache.org/jira/secure/attachment/12449781/LUCENE-2545.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-07-18T05:23:16+0000",
            "content": "added more constructors, so any existing use will still intern the string name.\nupdated FieldsReader to bypass interning for binary and lazy fields. ",
            "author": "Woody Anderson",
            "id": "comment-12889563"
        },
        {
            "date": "2010-07-18T05:26:12+0000",
            "content": "some related tickets for intern issues. ",
            "author": "Woody Anderson",
            "id": "comment-12889566"
        },
        {
            "date": "2010-07-18T08:01:03+0000",
            "content": "For trunk the usage of intern() may be removed completely from Lucene, as fields are now decoupled from terms (its a separate thing in index).\n\nSome pachanges in the patch may help for 3.x branch (not 3.0!), but we should not expose APIs to the outside that accept a \"intern\" boolean parameter (e.g. Field, AbstractField, NumericField). ",
            "author": "Uwe Schindler",
            "id": "comment-12889586"
        },
        {
            "date": "2010-07-18T18:42:53+0000",
            "content": "What is the working definition of \"outside\"?\npublic methods?\nif those internName constructors are protected is that ok?\n\nI dont' know enough about the 4.0 branch yet to comment about how this relates or doesn't, but for the 3.x branch, when making a lot of fields, and i know they have to be intern'd anyway, i can and do have strings that are already intern'd. I basically would have to do this anyway, but given that i can, i intern them with StringHelper and avoid the extra intern in xxxField. I would like for this to be possible, even if i am using \"expert\" annotated constructors etc.\n\nI prefer not to write all my code in the lucene.document package in order to use pkg protection, but I'm sure i can write some helper methods for myself and call from my other code. Would you be more open to having this kind of exposure limited to package scope? ",
            "author": "Woody Anderson",
            "id": "comment-12889651"
        },
        {
            "date": "2013-07-23T18:44:30+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13716970"
        },
        {
            "date": "2014-04-16T12:54:42+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970849"
        }
    ]
}