{
    "id": "LUCENE-6938",
    "title": "Convert build to work with Git rather than SVN.",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Task"
    },
    "description": "We assume an SVN checkout in parts of our build and will need to move to assuming a Git checkout.\n\nPatches against https://github.com/dweiss/lucene-solr-svn2git from LUCENE-6933.",
    "attachments": {
        "LUCENE-6938-1.patch": "https://issues.apache.org/jira/secure/attachment/12784010/LUCENE-6938-1.patch",
        "LUCENE-6938.patch": "https://issues.apache.org/jira/secure/attachment/12779996/LUCENE-6938.patch",
        "LUCENE-6938-wc-checker.patch": "https://issues.apache.org/jira/secure/attachment/12784072/LUCENE-6938-wc-checker.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15075046",
            "author": "Uwe Schindler",
            "date": "2015-12-30T14:04:38+0000",
            "content": "Hi,\nthe current build relies on SVN at 3 places:\n\n\t\"ant check-svn-working-copy\" as part of \"ant validate\" and \"ant precommit\". This is not critical and can be fixed later. The task gets a no-op if executed from non-svn, so we can fix later, no need to hurry. I will take care of that and prepare patch to use \"jgit\"  for similar checks (https://www.eclipse.org/jgit/). I'll open separate issue if needed.\n\tCurrently we call \"svnversion\" and place output inside all JAR files. I would like to remove this completely. We can of course add the commit hash, but somehow this makes no sense, as the commit hashes cannot be sorted and don't have a \"version like\" character. So +1 to remove \"svnversion\" calls during JAR building and just place version number in JAR files, but no revision/hash.\n\tThe source tar gz/zip files use svn export. We have to fix this, otherwise we cannot release and test.\n\n\n\nJenkins builds need to be updated, but thats easy. Policeman is already prepared to do git checkouts (using jgit, see above). "
        },
        {
            "id": "comment-15075052",
            "author": "Mark Miller",
            "date": "2015-12-30T14:12:45+0000",
            "content": "Thanks Uwe!\n\nThis is not critical and can be fixed later.\n\n+1.\n\nI'll open separate issue if needed.\n\nYeah, let's see how long this takes vs a jgit version. If we just finish this issue real quick, we might as well spin it off into it's own issue.\n\nbut somehow this makes no sense, as the commit hashes cannot be sorted and don't have a \"version like\" character\n\nBut it does tell you how to get to the code that created that JAR still, right?\n\nThe source tar gz/zip files use svn export. We have to fix this, otherwise we cannot release and test.\n\nYeah, this seems like the key issue to address "
        },
        {
            "id": "comment-15075090",
            "author": "Mark Miller",
            "date": "2015-12-30T15:11:40+0000",
            "content": "Here is a patch with some early exploration. I have an alternate for the svn export I think, and have done some initial renaming, cleaning up. "
        },
        {
            "id": "comment-15075110",
            "author": "Uwe Schindler",
            "date": "2015-12-30T15:30:01+0000",
            "content": "Looks good for now. As I see, you removed the svnversion from JAR files - like suggested. We can investigate further, if we really need the git commit hash in every JAR file. to me this was always a large slowdown on windows where creating a new process costs much time. "
        },
        {
            "id": "comment-15075210",
            "author": "Mark Miller",
            "date": "2015-12-30T17:10:42+0000",
            "content": "That export runs so much faster than svn export.\n\nOverall, precommit dropped from like over 7 minutes to 4 and a half for me. Unless it's the SVN stuff, but that seemed to be relatively quick based on the output. It will be quick with jgit regardless I'm sure. "
        },
        {
            "id": "comment-15075239",
            "author": "Mark Miller",
            "date": "2015-12-30T17:33:10+0000",
            "content": "over 7 minutes\n\nI guess that was a bit of a long run. I've since seen it take 5 and a half minutes, while git has been pretty consistent at 4 and a half minutes. Probably is just the difference in export speed. "
        },
        {
            "id": "comment-15075241",
            "author": "Upayavira",
            "date": "2015-12-30T17:35:31+0000",
            "content": "Presumably the reason for building the tarball from an export is to avoid including uncommitted changes. Could we achieve the same end by just confirming that the git checkout is clean and not proceeding if there are any changes? Like so:\n\n\nif [ -z \"$(git status --porcelain)\" ]; then \n  # Working directory clean\nelse \n  # Uncommitted changes\nfi\n\n\n\n(courtesy of http://unix.stackexchange.com/questions/155046/determine-if-git-working-directory-is-clean-from-a-script) "
        },
        {
            "id": "comment-15075248",
            "author": "Mark Miller",
            "date": "2015-12-30T17:42:55+0000",
            "content": "Presumably the reason for building the tarball from an export is to avoid including uncommitted changes\n\nI'm not sure - we have checks for that done in another way in another place. I think it was also to avoid things like the .svn folders and what not. i.e. what an svn export is for.\n\nAnyway, given this operation is so fast with the git method, I like keeping the old macro and behavior initially. Seems simpler and safer to mimic old behavior while we make the migration and update the release doc, etc. "
        },
        {
            "id": "comment-15075249",
            "author": "Steve Rowe",
            "date": "2015-12-30T17:44:52+0000",
            "content": "\nPresumably the reason for building the tarball from an export is to avoid including uncommitted changes\nI'm not sure - we have checks for that done in another way in another place. I think it was also to avoid things like the .svn folders and what not.\n\nAlso it's to avoid including locally-built ignored things in tarballs.  This will remain an issue with git, I think. "
        },
        {
            "id": "comment-15075293",
            "author": "Steve Rowe",
            "date": "2015-12-30T18:36:37+0000",
            "content": "FWIW, building the source release from svn export was put in place as a result of problems building the 3.1 release (previously there were fragile inclusion/exclusions rules, the rough equivalent of which are preserved as lucene.local.src.package.patterns for the package-local-src-tgz target).  See http://markmail.org/message/nfon2anpgzdja2st and LUCENE-2973. "
        },
        {
            "id": "comment-15075366",
            "author": "Uwe Schindler",
            "date": "2015-12-30T20:03:32+0000",
            "content": "Exactly. We don't want to have anything ignored or other leftovers in it. Basically we want to tar what \"ant clean clean-jars\" leaves back (or should). Or better: the state of a fresh checkout without any additional files (not even ignroed ones) and no special files like .svn or .git.\n\nThe reason why git is faster than svn on exporting: it does the whole export stuff from your local GIT database wthout networks. Because you have the whole repository local already. "
        },
        {
            "id": "comment-15075879",
            "author": "Dawid Weiss",
            "date": "2015-12-31T10:15:15+0000",
            "content": "Hi. Catching up with what's been said, here's my opinion.\n\n1) I didn't go into the specific of what the scripts were doing to get a \"pristine\" copy of a built, but with git you can do git-archive to get a tarball without any intermediate filesystem index. This has advantages for Windows (permissions are stored properly) and for speed (much faster on slower filesystems). Perhaps the scripts could be improved and do a two-phase check: git stat to verify the current checkout isn't dirty (locally ignored files remain ignored) and then create a tarball, from which all the tests, etc. would be executed in any follow-up steps.\n\nhttps://git-scm.com/docs/git-archive\n\n2) I strongly opt for keeping the commit's md5 inside build artefacts. This has helped me enormously in the past a few times. These hashes are not linear, correct, but they are even better at locating a particular commit the build was executed against, be it a branch or whatever. We personally use two git markers \u2013 the commit hash and a more human-friendly last-tag + dirty flag. We call jgit from ant, but here's the beanshell script that collects the required properties:\n\n      import org.eclipse.jgit.api.*;\n      import org.eclipse.jgit.lib.*;\n      import org.eclipse.jgit.storage.file.*;\n\n      Repository repository = new FileRepositoryBuilder()\n        .findGitDir(project.getBaseDir())\n        .build();\n\n      Git git = new Git(repository);\n      String revLine =\n          git.log().setMaxCount(1).call().iterator().next().name() +\n          (git.status().call().isClean() ? \"\" : \"-dirty\");\n\n      project.setNewProperty(\"product.gitrev\", revLine);\n\n\n\n\n "
        },
        {
            "id": "comment-15075937",
            "author": "Mark Miller",
            "date": "2015-12-31T13:25:55+0000",
            "content": "you can do git-archive to get a tarball without any intermediate filesystem index.\n\nYeah, that is the first thing I found when looking for a git export. I tried to keep things as similar to they were as possible though - and I'd also like to keep as much logic (like the compressing) out of exec and in ant as possible.\n\nI strongly opt for keeping the commit's md5 inside build artefacts.\n\nI have no problem with including the hash myself. "
        },
        {
            "id": "comment-15075945",
            "author": "Mark Miller",
            "date": "2015-12-31T13:41:54+0000",
            "content": "We can investigate further, if we really need the git commit hash in every JAR file. to me this was always a large slowdown on windows where creating a new process costs much time.\n\nWow  I bet there is a good chance this is much faster with Git. Otherwise, there must be some way to just get the checkout sha once and use it for every jar? "
        },
        {
            "id": "comment-15076029",
            "author": "Uwe Schindler",
            "date": "2015-12-31T15:42:48+0000",
            "content": "Wow  I bet there is a good chance this is much faster with Git. Otherwise, there must be some way to just get the checkout sha once and use it for every jar?\n\nYes that would work. I was about to do that on svn already. The trick is to just populate the property once and pass it down to sub-builds (using the patternset of properties to pass down). We then just need a task that populates the property if it doest not yet exists (unless=\"property\")\n\nI think we should just replace the old SVN revision in JAR files by the sha1. It should be easy to get it with a single \"git\" command (no idea how: I am still not firm in using Git's CLI; I always use TortoiseGit, because the command line of Git is the most confusing an user-unfriendly thing I have ever seen).\n\nFYI: I would not call \"jgit\" to populate the property at the moment - if we cache the result its fine - because this will cause permgen errors in Java 7 (the well-known Ant Classloader bug). Otherwise I would have implemented the same for SVN already  (I have a patch here for SVN similar to Dawid's code, but this breaks the whole build after a complete build with many JAR files). "
        },
        {
            "id": "comment-15076696",
            "author": "Paul Elschot",
            "date": "2016-01-02T22:31:05+0000",
            "content": "there must be some way to just get the checkout sha once\n\nThis will work on the current branch:\n\n\ngit log --format=\"%H\" -n 1\n\n\nBut also this, for example for the trunk branch:\n\n\ncat .git/refs/heads/trunk\n\n\nThis is why branching in git it so cheap, a branch is no more than a file with a sha1.\n\nthe command line of Git is the most confusing an user-unfriendly thing\n\nIndeed, and this makes the learning curve steeper than it would need to be. "
        },
        {
            "id": "comment-15076730",
            "author": "Dennis Gove",
            "date": "2016-01-03T00:34:25+0000",
            "content": "You can get the current sha1 with the command\n\n\n$> git rev-parse HEAD\n\n\nAnd you can replace HEAD with the name of a branch/tag to get the sha1 of that. See \n$> git help rev-parse \nfor all the options "
        },
        {
            "id": "comment-15082984",
            "author": "Dawid Weiss",
            "date": "2016-01-05T12:35:47+0000",
            "content": "Can we specify the commands (build/ precommit checks) that need to \"work\" with a git clone so that we can orderly go through them and know where we are with the migration process? It'd be good to have it done and then vote/ move on with the development to git. My candidates would be:\n\n\n\tant clean test\n\tant jar\n\tant validate precommit\n\n\n\nThen there are follow-ups:\n\n\n\tMaven POMs (scm defs)\n\tREADME and other help files referring to SVN\n\tvarious python scripts under dev-tools/scripts invoke SVN\n\tJenkins CI job definitions, etc.\n\n "
        },
        {
            "id": "comment-15084077",
            "author": "Mark Miller",
            "date": "2016-01-05T23:40:23+0000",
            "content": "We don't need to vote yet - that only happens when consensus fails or someone wants to force something. We can warn the dev list again to make sure everyone is caught up, but no need to force a vote unless someone comes out against. There is a very visible discussion and a few JIRA issues that have been in progress for a long time now. Once we are ready to go, we can sum things up in a new dev thread.\n\nI think in terms of what needs to be covered here, Uwe has detailed it pretty well. We want all the targets to work really - or to understand why any target does not work. We can wait for Uwe to create a new git validator though - all targets still work without that. 'svn' does not really have a very deep imprint in our build targets.\n\nI think the main thing left to do in this issue is put the git hash in efficiently.\n\nSome other things people are concerned about can get further JIRA issues, but I imagine a lot of that (such as python scripts) can be updated as used / needed by those that use them. "
        },
        {
            "id": "comment-15085403",
            "author": "Dawid Weiss",
            "date": "2016-01-06T10:53:35+0000",
            "content": "> I think the main thing left to do in this issue is put the git hash in efficiently.\n\nI think this is an improvement, not a requirement? Don't we call SVN multiple times already? Other than that I agree with you \u2013 get the baseline targets working, clean up everything that doesn't work after the transition. "
        },
        {
            "id": "comment-15089331",
            "author": "Mark Miller",
            "date": "2016-01-08T15:24:50+0000",
            "content": "I think this is an improvement, not a requirement? \n\nI think because we had this feature with svn and there is no consensus about dropping it and it affects releases, we want it before the move. I'm sure it will be simple to add. "
        },
        {
            "id": "comment-15090259",
            "author": "Mark Miller",
            "date": "2016-01-09T00:21:51+0000",
            "content": "there must be some way to just get the checkout sha once\n\nThe key word is once. Yes, of course we can get the sha the same way as we can get an svn version  Uwe's concern is how many times we execute a program to do it. Our ant scripts init 8 billion times per target.\n\nI'll look into trying to exec a minimal number of times. "
        },
        {
            "id": "comment-15090296",
            "author": "Mark Miller",
            "date": "2016-01-09T01:05:22+0000",
            "content": "Doesn't look easy to share any state between multiple inits.\n\nI don't even know if doing it at the top level appears any better than per jar. It's still a ton of calls per run.\n\nWe can simply allow it to be disabled via build.properties if it's an issue for some Windows devs. "
        },
        {
            "id": "comment-15090325",
            "author": "Mark Miller",
            "date": "2016-01-09T01:39:32+0000",
            "content": "I think this is an improvement, not a requirement?\n\nI think I slightly misunderstood this the first time. You meant making it more efficient for windows was not a requirement?\n\nIn that case I agree, though I figured if it was easy, we should just do it. It does not look so easy though. So I suggest a switch to turn it off in build.properties. But right, I don't think it's a requirement that we make it more efficient, just that we keep an id in the jars. "
        },
        {
            "id": "comment-15090495",
            "author": "Dawid Weiss",
            "date": "2016-01-09T08:11:57+0000",
            "content": "I think I slightly misunderstood this the first time. You meant making it more efficient for windows was not a requirement?\n\nYes, exactly. I work on Windows so it also affects me, but I don't think it's critical.\n\nIt does not look so easy though\n\nI think it's doable, but far from convenient. It's a similar situation as to what happens with \"checking whether any tests executed\" \u2013 you want a property or a marked passed down to sub-builds... it's a pain to maintain. Perhaps we should look at the core of the problem and somehow fix it in Ant itself... "
        },
        {
            "id": "comment-15090571",
            "author": "Upayavira",
            "date": "2016-01-09T11:41:45+0000",
            "content": "How about the main build gets the git hash and writes it to a temporary property file. All other build phases can then just read that file and we are done. Am I missing something? "
        },
        {
            "id": "comment-15090608",
            "author": "Uwe Schindler",
            "date": "2016-01-09T13:09:11+0000",
            "content": "How about the main build gets the git hash and writes it to a temporary property file. All other build phases can then just read that file and we are done. Am I missing something?\n\nThats not good, because on git update it would not update that file unless you do ant clean. The solution proposed before is easy, I will implement it later, no worries. We have the infrastructure:\n\n\ta task will be added to common-build.xml that gets git hash and saves it in property. This task has unless=\"property\"\n\tproperty is added to the patternset of properties to pass down the sub-modules\n\tall submodules JAR tasks call the task as dependency. But if the upper builds has already defined the property it is a no-op\n\n\n\nNo worries, I will take care! For now just use the approach we had with Subversion. "
        },
        {
            "id": "comment-15090610",
            "author": "Uwe Schindler",
            "date": "2016-01-09T13:12:35+0000",
            "content": "I will open serparate issue once we moved to Git and fix that, together with the check-svn-working-copy-task!\n\nSo lets do the move now! "
        },
        {
            "id": "comment-15090783",
            "author": "Mark Miller",
            "date": "2016-01-09T21:09:09+0000",
            "content": "Okay, here is what I think is the minimum patch that replicates what we had. Let's do that for this issue and open new issues for any improvements. That way we won't hold up the conversion at all and we can try and keep some momentum. "
        },
        {
            "id": "comment-15090792",
            "author": "Mark Miller",
            "date": "2016-01-09T21:43:04+0000",
            "content": "https://github.com/markrmiller/lucene-solr-svn2git/commit/c587241d35f3dc641a2de26eff3ba2dc2f6eca59 "
        },
        {
            "id": "comment-15113466",
            "author": "Dawid Weiss",
            "date": "2016-01-23T02:06:46+0000",
            "content": "Mark, I applied your patch to master (temporary migrated repo at git@github.com:dweiss/lucene-solr-svn2git.git). ant precommit worked for me without any problems. I could not apply it cleanly to branch_5x though \u2013 I didn't look closely, just proceeded with the import, I'm sure we can figure it out later. "
        },
        {
            "id": "comment-15113696",
            "author": "Uwe Schindler",
            "date": "2016-01-23T11:13:01+0000",
            "content": "In trunk, the smoke tester on Jenkins did not pass: https://builds.apache.org/job/Lucene-Solr-SmokeRelease-trunk/395/console\n\nTo me it looks like some magic we do with the src-export folder did not fully work, so missing some files:\n\npackage-tgz-src:\n    [mkdir] Created dir: /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/build/src-export/docs/changes\n      [get] Getting: https://issues.apache.org/jira/rest/api/2/project/LUCENE\n      [get] To: /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/build/src-export/docs/changes/jiraVersionList.json\n     [exec] Failed to open /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/build/src-export/CHANGES.txt\n     [exec] Use of uninitialized value $first_relid_regex in substitution (s///) at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 223.\n     [exec] Use of uninitialized value $second_relid_regex in substitution (s///) at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 225.\n     [exec] Use of uninitialized value $first_relid_regex in concatenation (.) or string at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 226.\n     [exec] Use of uninitialized value $second_relid_regex in concatenation (.) or string at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 226.\n     [exec] Use of uninitialized value $title in concatenation (.) or string at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 231.\n     [exec] Use of uninitialized value $first_relid in concatenation (.) or string at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 231.\n     [exec] Use of uninitialized value $second_relid in concatenation (.) or string at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 231.\n     [exec] Use of uninitialized value $first_relid in concatenation (.) or string at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 231.\n     [exec] Use of uninitialized value $second_relid in concatenation (.) or string at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 231.\n     [exec] Use of uninitialized value $title in concatenation (.) or string at /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/site/changes/changes2html.pl line 231.\n   [delete] Deleting: /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/build/src-export/docs/changes/jiraVersionList.json\n     [copy] Copying 3 files to /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/build/src-export/docs/changes\n      [tar] Building tar: /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/dist/lucene-6.0.0-src.tgz\n     [echo] Building checksums for '/x1/jenkins/jenkins-slave/workspace/Lucene-Solr-SmokeRelease-trunk/lucene/dist/lucene-6.0.0-src.tgz'\n\n\n\nNot sure what is broken there. "
        },
        {
            "id": "comment-15113713",
            "author": "Uwe Schindler",
            "date": "2016-01-23T12:23:07+0000",
            "content": "Here is the patch to fix the Lucene src.tgz. The reason was simple.\n\nsrc.export.dir contains now root folder, but previously it was only the lucene/ subfolder. The logic in the macro and git's behaviour did not reflect this. Te quick workaround is to define additional property for Lucene's build.xml and append this while tarring and running scripts. "
        },
        {
            "id": "comment-15113714",
            "author": "Uwe Schindler",
            "date": "2016-01-23T12:30:40+0000",
            "content": "Updated patch also disabling svnkit stuff in root.\n\nWill commit in a moment to make smoker work "
        },
        {
            "id": "comment-15113718",
            "author": "Uwe Schindler",
            "date": "2016-01-23T12:46:02+0000",
            "content": "Final version, previous one was not as effective as current one. "
        },
        {
            "id": "comment-15113724",
            "author": "Uwe Schindler",
            "date": "2016-01-23T12:51:08+0000",
            "content": "I committed everything. Dawid Weiss, can you merge my recent commit to 5.x, too?\n\nThe Jenkins Jobs for 5.x are not yet enabled, I am waiting for backport. "
        },
        {
            "id": "comment-15113728",
            "author": "Uwe Schindler",
            "date": "2016-01-23T12:52:11+0000",
            "content": "It looks like JIRA does not yet reports GIT commits, we should fix that. "
        },
        {
            "id": "comment-15113753",
            "author": "Uwe Schindler",
            "date": "2016-01-23T14:00:46+0000",
            "content": "I cherry-picked the 3 commit (Mark/Dawids and 2 of mine). Worked like a charm with the GUI of Tortoise. The conflicts Dawid found was just java8 vs. java7 strings.\n\nI'll now reenable 5.x builds on jenkins "
        },
        {
            "id": "comment-15114024",
            "author": "Uwe Schindler",
            "date": "2016-01-23T23:23:58+0000",
            "content": "As we currently have no auto-comments from the Git Bot:\n\n\tI improved the Git hash behaviour for non-Git checkouts or if Git executable is missing (like SVN did before)\n\tSteve Rowe added Git to the Maven build\n\n "
        },
        {
            "id": "comment-15114157",
            "author": "Mark Miller",
            "date": "2016-01-24T03:29:48+0000",
            "content": "Thanks for taking this up Uwe! I'm away for the weekend.  "
        },
        {
            "id": "comment-15114545",
            "author": "Uwe Schindler",
            "date": "2016-01-24T21:26:51+0000",
            "content": "Hi,\nhere is the former \"ant check-svn-working-copy\" now ritten for git. Its running almost the same checks:\n\n\tIt reports unversioned or missing files and fails build\n\tIf it runs as Jenkins (or for checking regeneration of sources), it also fails build on changes in working copy\n\tif it is not a working copy, it prints a warning and proceeds\n\n\n\nAs GIT has no file properties, we don't do property checks like EOL-style or MIME-type.\n\nThe usage is same, it runs by ant validate/precommit. The target name changes a bit, I removed the \"svn\".\n\nI will commit this a bit later. I do some tests with different (non-)working copies. "
        },
        {
            "id": "comment-15114548",
            "author": "Uwe Schindler",
            "date": "2016-01-24T21:29:42+0000",
            "content": "Small update. "
        },
        {
            "id": "comment-15114553",
            "author": "Uwe Schindler",
            "date": "2016-01-24T21:45:50+0000",
            "content": "Thanks Mark & Dawid! I close this issue, build seems to be fully converted to GIT. "
        },
        {
            "id": "comment-15118029",
            "author": "ASF subversion and git services",
            "date": "2016-01-26T21:07:13+0000",
            "content": "Commit 424a647af4d093915108221bcd4390989303b426 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=424a647 ]\n\nLUCENE-6995, LUCENE-6938: Add branch change trigger to common-build.xml to keep sane build on GIT branch change "
        },
        {
            "id": "comment-15118035",
            "author": "ASF subversion and git services",
            "date": "2016-01-26T21:10:25+0000",
            "content": "Commit 0ef36fcdd107084a2ac3156943f01eb5f7dd9c74 in lucene-solr's branch refs/heads/branch_5x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0ef36fc ]\n\nLUCENE-6995, LUCENE-6938: Add branch change trigger to common-build.xml to keep sane build on GIT branch change "
        },
        {
            "id": "comment-15137950",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T23:07:45+0000",
            "content": "Commit 7f9506ca82032804f2354fef71201366fcbf9932 in lucene-solr's branch refs/heads/branch_5_4 from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7f9506c ]\n\nLUCENE-6938: Convert build to work with Git rather than SVN. (Mark Miller\nvia Dawid Weiss). "
        },
        {
            "id": "comment-15137951",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T23:07:47+0000",
            "content": "Commit f4b228b34174e87b1ed43e330b500d8b795604ca in lucene-solr's branch refs/heads/branch_5_4 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f4b228b ]\n\nLUCENE-6938: Fix Lucene's src.tgz file; remove svnkit stuff "
        },
        {
            "id": "comment-15137952",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T23:07:48+0000",
            "content": "Commit 83112977e8fa66615d23e57697b2743052c71098 in lucene-solr's branch refs/heads/branch_5_4 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8311297 ]\n\nLUCENE-6938: fix typo, sorry "
        },
        {
            "id": "comment-15137953",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T23:07:49+0000",
            "content": "Commit 016b26675efbd25b9907115b400bacb55b840af3 in lucene-solr's branch refs/heads/branch_5_4 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=016b266 ]\n\nLUCENE-6938: Maven build: Switch SCM descriptors from svn to git; buildnumber-maven-plugin's buildNumberPropertyName property (used in Maven-built artifact manifests) renamed from svn.revision to checkoutid; removed Subversion-specific stuff from README.maven "
        },
        {
            "id": "comment-15137954",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T23:07:50+0000",
            "content": "Commit d4a8bbbf2b1effc2f166530fcd4720127eafc9a9 in lucene-solr's branch refs/heads/branch_5_4 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d4a8bbb ]\n\nLUCENE-6938: Improve output of Git Hash if no GIT available or no GIT checkout (this restores previous behaviour) "
        },
        {
            "id": "comment-15137955",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T23:07:51+0000",
            "content": "Commit 0d53dce184674dfc8c23879c0e0648b0bd6ae1b8 in lucene-solr's branch refs/heads/branch_5_4 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0d53dce ]\n\nLUCENE-6938: Add WC checks back, now based on JGit "
        },
        {
            "id": "comment-15137957",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T23:07:54+0000",
            "content": "Commit b0e769c3ec598dd7398cc8df123bc4c41069e2c3 in lucene-solr's branch refs/heads/branch_5_4 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b0e769c ]\n\nLUCENE-6995, LUCENE-6938: Add branch change trigger to common-build.xml to keep sane build on GIT branch change "
        },
        {
            "id": "comment-15141886",
            "author": "ASF subversion and git services",
            "date": "2016-02-10T22:54:25+0000",
            "content": "Commit 7a329d4e299f364a716ca7e3d786684f280d0100 in lucene-solr's branch refs/heads/branch_5_5 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7a329d4 ]\n\nLUCENE-6938: switch from svn to git "
        },
        {
            "id": "comment-15141887",
            "author": "ASF subversion and git services",
            "date": "2016-02-10T22:55:26+0000",
            "content": "Commit 8b71a1baf5b9c6d16d24134cebeaf7f22333580d in lucene-solr's branch refs/heads/branch_5x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8b71a1b ]\n\nLUCENE-6938: switch from svn to git "
        },
        {
            "id": "comment-15141889",
            "author": "ASF subversion and git services",
            "date": "2016-02-10T22:55:49+0000",
            "content": "Commit 70e61fd9e04ba0312b9c1d3f6d6e8313ab0dce75 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=70e61fd ]\n\nLUCENE-6938: switch from svn to git "
        },
        {
            "id": "comment-15142451",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T09:18:30+0000",
            "content": "Commit 2514521b5506760f81a4c23b0685769e4eefea88 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2514521 ]\n\nLUCENE-6938: addVersion can no longer do a --reord-only merge with git "
        },
        {
            "id": "comment-15142832",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T14:52:39+0000",
            "content": "Commit 329167872371d19f37f9f48f1822014dc87a7eb6 in lucene-solr's branch refs/heads/branch_5_5 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3291678 ]\n\nLUCENE-6938: switch from svn to git "
        },
        {
            "id": "comment-15142833",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T14:53:02+0000",
            "content": "Commit 144ab5b107aeb7cf79d7e5fd97b8ff5d2ba2ba2f in lucene-solr's branch refs/heads/branch_5x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=144ab5b ]\n\nLUCENE-6938: switch from svn to git "
        },
        {
            "id": "comment-15142836",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T14:55:05+0000",
            "content": "Commit f8be973b9473a250ba50746a0b548f6521f012ed in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f8be973 ]\n\nLUCENE-6938: switch from svn to git "
        },
        {
            "id": "comment-15142867",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T15:22:01+0000",
            "content": "Commit e3a06f0334034c1280f416b4afd6a6249cda395e in lucene-solr's branch refs/heads/branch_5_5 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e3a06f0 ]\n\nLUCENE-6938: fix buggy detection of dirty git checkout "
        },
        {
            "id": "comment-15142868",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T15:22:03+0000",
            "content": "Commit 9a4ff707ed8d4aafa20dd3cc9c0fd4c7378046f2 in lucene-solr's branch refs/heads/branch_5_5 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9a4ff70 ]\n\nLUCENE-6938: add TODO that we should also detect unpushed commits "
        },
        {
            "id": "comment-15142869",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T15:22:54+0000",
            "content": "Commit 3989732f70df3981ad0533929f64af3a8d30b92d in lucene-solr's branch refs/heads/branch_5x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3989732 ]\n\nLUCENE-6938: fix buggy detection of dirty git checkout "
        },
        {
            "id": "comment-15142870",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T15:22:55+0000",
            "content": "Commit 9fe6a8f20a8e6ff1fded6379a096db2e390c9675 in lucene-solr's branch refs/heads/branch_5x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9fe6a8f ]\n\nLUCENE-6938: add TODO that we should also detect unpushed commits "
        },
        {
            "id": "comment-15142871",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T15:23:17+0000",
            "content": "Commit de9d4ac3b7370df8e3fd5418b7811ecb44c62998 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=de9d4ac ]\n\nLUCENE-6938: fix buggy detection of dirty git checkout "
        },
        {
            "id": "comment-15142872",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T15:23:18+0000",
            "content": "Commit 7509b9c9691514c3f6c231a35f29e340b3484fc1 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7509b9c ]\n\nLUCENE-6938: add TODO that we should also detect unpushed commits "
        },
        {
            "id": "comment-15142902",
            "author": "David Smiley",
            "date": "2016-02-11T15:39:47+0000",
            "content": "+1 to that!  It can be frustrating to forget to push and find other people expectantly not seeing what you said you did. "
        },
        {
            "id": "comment-15143430",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T20:19:45+0000",
            "content": "Commit 0cd6d229b3c7d73e7d83eb687c2862fa8eeeb703 in lucene-solr's branch refs/heads/branch_5_5 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0cd6d22 ]\n\nLUCENE-6938: fix some places in smoke tester to accept git commit hash instead of svn revison "
        },
        {
            "id": "comment-15143432",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T20:20:18+0000",
            "content": "Commit 383c3ca976a3f216afbfdfbff02619a21dbd2d9c in lucene-solr's branch refs/heads/branch_5x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=383c3ca ]\n\nLUCENE-6938: fix some places in smoke tester to accept git commit hash instead of svn revison "
        },
        {
            "id": "comment-15143435",
            "author": "ASF subversion and git services",
            "date": "2016-02-11T20:21:34+0000",
            "content": "Commit 4d094975d96455fae1877b0a7ee2dafef83a5828 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4d09497 ]\n\nLUCENE-6938: fix some places in smoke tester to accept git commit hash instead of svn revison\n\nConflicts:\n\tdev-tools/scripts/smokeTestRelease.py "
        },
        {
            "id": "comment-15145358",
            "author": "ASF subversion and git services",
            "date": "2016-02-12T21:39:43+0000",
            "content": "Commit f6a1bbf8bec8b83ce68b697b9905048b44ef80f6 in lucene-solr's branch refs/heads/branch_5_5 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f6a1bbf ]\n\nLUCENE-7204, LUCENE-6938: fix smoke tester to pull pom.xml.template files from the Solr source distribution instead of from svn "
        },
        {
            "id": "comment-15146792",
            "author": "ASF subversion and git services",
            "date": "2016-02-14T23:51:29+0000",
            "content": "Commit 0bc239b16a1f411ab9c3426dbf8190019356edc0 in lucene-solr's branch refs/heads/branch_5x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0bc239b ]\n\nLUCENE-7204, LUCENE-6938: fix smoke tester to pull pom.xml.template files from the Solr source distribution instead of from svn "
        },
        {
            "id": "comment-15146803",
            "author": "ASF subversion and git services",
            "date": "2016-02-15T00:30:38+0000",
            "content": "Commit ef965661abf108f10b3da78aaec27576a7ef00c7 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ef96566 ]\n\nLUCENE-7024, LUCENE-6938: fix smoke tester to pull pom.xml.template files from the Solr source distribution instead of from svn\n(cherry-picked branch_5_5 commit f6a1bbf) "
        },
        {
            "id": "comment-15217796",
            "author": "ASF subversion and git services",
            "date": "2016-03-30T10:54:37+0000",
            "content": "Commit 7105d451777c2c30e7f2b48260265b352fbb3472 in lucene-solr's branch refs/heads/branch_5_5 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7105d45 ]\n\nLUCENE-6938: addVersion can no longer do a --reord-only merge with git\n(cherry picked from commit 2514521) "
        },
        {
            "id": "comment-15218339",
            "author": "Shawn Heisey",
            "date": "2016-03-30T17:11:53+0000",
            "content": "Thanks, Michael McCandless.  That last commit made the script run with a \"5.5.1\" argument.\n\nOne problem, though: It added the new LUCENE_5_5_1 version as already deprecated, which caused ant test -Dtestcase=TestVersion to fail.  Removing the deprecation allowed the test to pass. "
        },
        {
            "id": "comment-15218422",
            "author": "Hoss Man",
            "date": "2016-03-30T17:42:45+0000",
            "content": "that sounds correct ... on the 5.5 branch LUCENE_5_5_1 should not be deprecated ... but on all subsequent branches (6x, 6_1, master) it should be. "
        },
        {
            "id": "comment-15218913",
            "author": "Jan H\u00f8ydahl",
            "date": "2016-03-30T21:40:00+0000",
            "content": "It was I who cherry-picked Mike's fix to the 5_5 branch, but the git mail bot logs author, not committer \nI also saw the same regarding deprecation. Had to remove the deprecations manually, then tests pass. Should the script have a switch for skipping deprecation?\nA bit unclear to me after reading RM docs: Should bugfix version bump be performed by RM after releasing previous minor release, or by the be done by the RM for the bugfix release just prior to release? "
        },
        {
            "id": "comment-15218995",
            "author": "Shawn Heisey",
            "date": "2016-03-30T22:37:38+0000",
            "content": "Apologies for the incorrect credit.\n\nI've never done it, but ReleaseTodo seems to indicate that running addVersion is done as one of the early steps in the process.\n\nFor major and minor releases, I think this makes sense, because you'll be making a new branch early in the process.  At that point the parent branch should get a version bump, and the subsequent release work will be done in the new branch, presumably with the correct version number already present.\n\nFor bugfix releases, I think it makes more sense to run addVersion just after tagging the release \u2013 one of the last steps.  That would have prevented the problem I ran into.  I ran \"ant package\" on branch_5_5 some time after 5.5.0 was fully released, but I got 5.5.0-SNAPSHOT filenames instead of 5.5.1-SNAPSHOT.\n\nRegarding the brand-new bug-fix Version entry being deprecated:  This makes no sense to me, especially since it causes an immediate test failure in the test that the addVersion script runs after making changes.  I can see with \"git diff\" that the script did correctly add deprecation annotations to LUCENE_5_5_0.\n\nIf the addVersion script were being used to add 5.5.1 to one of the 6x branches or the master branch, then it WOULD make sense for the new entry to be deprecated.  Perhaps I was not using the script correctly for my use case, or the script needs some detection code or the option you mentioned to skip deprecation. "
        },
        {
            "id": "comment-15219107",
            "author": "Ryan Ernst",
            "date": "2016-03-31T00:17:34+0000",
            "content": "It looks like the branch detection logic isn't working given our current naming conventions we have in git now. This is the current logic, which worked in svn:\n\n\n  if branchName == b'master':\n    return 'master'\n  if branchName.startswith(b'branch_'):\n    return 'stable'\n  if branchName.startswith(b'lucene_solr_'):\n    return 'release'\n\n\n\nBut we now name our release branches like branch_5_5 instead of lucene_solr_5_5. So in this case, the script thought it was a stable branch, and thus the version was added as deprecated. "
        },
        {
            "id": "comment-15219813",
            "author": "Jan H\u00f8ydahl",
            "date": "2016-03-31T12:34:02+0000",
            "content": "Opened LUCENE-7155 for this, keeping this JIRA as resolved. "
        },
        {
            "id": "comment-15236978",
            "author": "ASF subversion and git services",
            "date": "2016-04-12T10:45:26+0000",
            "content": "Commit c19b1b90c9812c48712fbaf1b55af49169993766 in lucene-solr's branch refs/heads/branch_5x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c19b1b9 ]\n\nLUCENE-6938: addVersion can no longer do a --reord-only merge with git\n(cherry picked from commit 2514521) "
        }
    ]
}