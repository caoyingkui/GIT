{
    "id": "SOLR-12366",
    "title": "Avoid SlowAtomicReader.getLiveDocs -- it's slow",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "SlowAtomicReader is of course slow, and it's getLiveDocs (based on MultiBits) is slow as it uses a binary search for each lookup. \u00a0There are various places in Solr that use SolrIndexSearcher.getSlowAtomicReader and then get the liveDocs. \u00a0Most of these places ought to work with SolrIndexSearcher's getLiveDocs method.",
    "attachments": {
        "SOLR-12366.patch": "https://issues.apache.org/jira/secure/attachment/12923782/SOLR-12366.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-16T21:52:26+0000",
            "content": "\n\tadds new SolrIndexSearcher.getLiveDocsBits() method that works like LeafReader.getLiveDocs does. \u00a0I don't actually like the name of this method; IMO it ought to be simply getLiveDocs but that conflicts with an existing one that I think ought to be named something like getLiveDocSet. \u00a0Since these are internal methods I think just rename it but I'm okay\u00a0with renaming in master.\n\taffects SimpleFacets.getFacetTermEnumCounts (classic faceting),\u00a0FacetFieldProcessorByEnumTermsStream (JSON facets), UnInvertedField, GraphTermsQParser, JoinQParser,\u00a0SolrIndexSearcher.getFirstMatch\n\tIn GraphTermsQParser I further noticed the non-SolrIndexSearcher fallback logic was broken as it didn't check for a null liveDocs. \u00a0Will we ever even get to this code? \u00a0Any way, I decided to replace these many lines with something simpler.\n\n\n\nIMO some callers of SolrIndexSearcher.getSlowAtomicReader\u00a0should change to use MultiFields to avoid the temptation to have a LeafReader that has many slow methods. \u00a0I made this change in SimpleFacets.getFacetTermEnumCounts. \u00a0This could be a follow-up issue.\n\nIMO SolrIndexSearcher.getFirstMatch should be removed in lieu of lookupId so there's less code to maintain. \u00a0Admittedly the latter is more verbose but we could add a utility method for callers who don't care about the segment ordinal and only want the global ID.\n\nYonik Seeley could you please review? \u00a0This touches stuff you have been involved with.\n\n\u00a0 ",
            "author": "David Smiley",
            "id": "comment-16478170"
        },
        {
            "date": "2018-05-17T08:11:13+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n -1 \n  test4tests  \n   0m  1s \n  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   4m 47s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   4m  1s \n  the patch passed  \n\n\n +1 \n  javac  \n   4m  1s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   4m  1s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   4m  1s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   4m  1s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 115m 56s \n  core in the patch failed.  \n\n\n  \n   \n 131m 15s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\u00a0\n solr.cloud.LeaderElectionContextKeyTest \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestLargeCluster \n\n\n\u00a0\n solr.cloud.autoscaling.SearchRateTriggerTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12366 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12923789/SOLR-12366.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 0c36289 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/95/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/95/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/95/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16478710"
        },
        {
            "date": "2018-05-18T02:41:06+0000",
            "content": "When I tested locally, I got no reproducing test failures. ",
            "author": "David Smiley",
            "id": "comment-16480048"
        },
        {
            "date": "2018-05-22T05:19:17+0000",
            "content": "Updated the patch:\n\n\treplaced the implementation of SolrIndexSearcher.getFirstMatch to be in terms of lookupId \u2013 less to maintain and one fewer reference to the SlowCompositeReader (field \"filterReader\").  Slightly faster probably.\n\tsimplified getLiveDocsBits further\n\trenamed getLiveDocs to getLiveDocSet (thus changed a bunch of other files) but kept the original and marked deprecated, to be removed in 8.0\n\n ",
            "author": "David Smiley",
            "id": "comment-16483501"
        },
        {
            "date": "2018-05-23T02:58:34+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m 22s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m 14s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m 14s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 14s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m 14s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m 14s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 163m 20s \n  core in the patch failed.  \n\n\n  \n   \n 171m 27s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.sim.TestGenericDistributedQueue \n\n\n\u00a0\n solr.security.BasicAuthIntegrationTest \n\n\n\u00a0\n solr.cloud.autoscaling.ScheduledMaintenanceTriggerTest \n\n\n\u00a0\n solr.cloud.api.collections.TestCollectionsAPIViaSolrCloudCluster \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestLargeCluster \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12366 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12924480/SOLR-12366.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / af59c46 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/101/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/101/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/101/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16486633"
        },
        {
            "date": "2018-05-31T14:55:27+0000",
            "content": "Commit 1e63b32731bedf108aaeeb5d0a04d671f5663102 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1e63b32 ]\n\n\n\tSOLR-12366: A slow \"live docs\" implementation was being used instead of a bitset.\n  Affects classic faceting enum method, JSON Facets enum method, UnInvertedField faceting, GraphTermsQParser, JoinQParser.\n  Renamed SolrIndexSearcher.getLiveDocs to getLiveDocSet.\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16496663"
        },
        {
            "date": "2018-05-31T14:59:34+0000",
            "content": "Commit ce8735556d994f365e9c95c61243c352a7d50e99 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ce87355 ]\n\n\n\tSOLR-12366: A slow \"live docs\" implementation was being used instead of a bitset.\n  Affects classic faceting enum method, JSON Facets enum method, UnInvertedField faceting, GraphTermsQParser, JoinQParser.\n  Renamed SolrIndexSearcher.getLiveDocs to getLiveDocSet.\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16496671"
        },
        {
            "date": "2018-05-31T15:03:33+0000",
            "content": "Commit d65f40f3852be74bf0fc5c17d8252c669ea325d8 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d65f40f ]\n\n\n\tSOLR-12366: A slow \"live docs\" implementation was being used instead of a bitset.\n  Affects classic faceting enum method, JSON Facets enum method, UnInvertedField faceting, GraphTermsQParser, JoinQParser.\n  Renamed SolrIndexSearcher.getLiveDocs to getLiveDocSet.\n\n\n\n(cherry picked from commit 1e63b32) ",
            "author": "ASF subversion and git services",
            "id": "comment-16496675"
        },
        {
            "date": "2018-06-02T19:09:15+0000",
            "content": "Nice catch, this stuff has been broken forever!\n Looking back, I think not enough was exposed to be able to work per-segment, so Lucene's MultiReader.isDeleted(int doc) did a binary search each time. Once we gained the ability to operate per-segment, some code wasn't converted.\nIMO some callers of SolrIndexSearcher.getSlowAtomicReader should change to use MultiFields to avoid the temptation to have a LeafReader that has many slow methods.\nMultiFields has slow methods as well, and if you look at the histories, many places used MultiFields.getDeletedDocs even before (and were replaced with the equivalent?)\n For example, commit 6ffc159b40 changed getFirstMatch to use MultiFields.getDeletedDocs (which may not have been a bug since it probably was equivalent at the time?)\n\nAnyway, I think perhaps we should throw an exception for any place in SlowCompositeReaderWrapper that exposes code that does a binary search. We don't need a full Reader implementation here I think.\n\nA variable name change for \"SolrIndexSearcher.leafReader\" would really be welcome too... it's a bad name.\u00a0 We've been bit by the naming before as well:\u00a0SOLR-9592 ",
            "author": "Yonik Seeley",
            "id": "comment-16499147"
        },
        {
            "date": "2018-06-02T19:23:10+0000",
            "content": "Nice catch, this stuff has been broken forever!\nThanks; and a lot of credit goes to Jeff Miller for the profiling that revealed the slow-down.\nMultiFields has slow methods as well\nSure. I meant it's more explicit as to what you actually need \u2013 do you need an entire LeafReader or just a MultiTerms perhaps or Multi-something else. \u00a0Plus, SlowAtomicReader was kicked out of Lucene so if there's an easy alternative that solves the task at hand, as was the case in some cases in this patch, then lets just use that.\nA variable name change for \"SolrIndexSearcher.leafReader\"\n+1 yeah, like slowLeafReader ",
            "author": "David Smiley",
            "id": "comment-16499152"
        }
    ]
}