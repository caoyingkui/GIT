{
    "id": "LUCENE-5808",
    "title": "clean up postingsreader",
    "details": {
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "The current postingsreader is ~ 1500 lines of code (mostly duplicated) calling something like 4,000 lines of generated decompression code.\n\nThis is really heavyweight and complicated, and bloats the lucene jar. It would be nice to simplify it so we can eventually remove the baggage.",
    "attachments": {
        "LUCENE-5808.patch": "https://issues.apache.org/jira/secure/attachment/12654770/LUCENE-5808.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14056015",
            "author": "Robert Muir",
            "content": "I tried working on this, but stopped halfway. I just cannot deal with the noise and slowness of luceneutil \n\nIf we can fix our benchmark, I'll be happy to revisit it. I think some of the ideas are useful. ",
            "date": "2014-07-09T08:59:44+0000"
        },
        {
            "id": "comment-14056846",
            "author": "Michael McCandless",
            "content": "I really like these simplifications.\n\nI ran perf test vs trunk:\n\n\nReport after iter 19:\n                    Task    QPS base      StdDev    QPS comp      StdDev                Pct diff\n              OrHighHigh        9.74     (13.5%)        8.28     (18.8%)  -15.0% ( -41% -   20%)\n            OrNotHighLow       23.71     (13.3%)       21.22     (16.1%)  -10.5% ( -35% -   21%)\n               OrHighMed       31.79      (7.6%)       28.73     (14.9%)   -9.6% ( -29% -   13%)\n           OrHighNotHigh       13.18     (12.8%)       12.16     (14.1%)   -7.7% ( -30% -   21%)\n                HighTerm       67.90     (14.5%)       62.68     (19.0%)   -7.7% ( -35% -   30%)\n            OrHighNotLow       29.26     (14.3%)       27.10     (14.2%)   -7.4% ( -31% -   24%)\n            OrNotHighMed       22.57     (15.0%)       20.93     (15.5%)   -7.3% ( -32% -   27%)\n                 Prefix3       86.86     (10.2%)       81.99     (14.8%)   -5.6% ( -27% -   21%)\n           OrNotHighHigh       10.41     (13.2%)        9.87     (14.7%)   -5.2% ( -29% -   26%)\n                  Fuzzy1       55.92     (10.0%)       53.24     (13.4%)   -4.8% ( -25% -   20%)\n        HighSloppyPhrase        3.42     (14.6%)        3.26     (17.5%)   -4.6% ( -31% -   32%)\n            HighSpanNear        9.37     (15.8%)        9.09     (19.9%)   -3.0% ( -33% -   38%)\n              HighPhrase        4.33     (10.8%)        4.20     (16.8%)   -2.9% ( -27% -   27%)\n               OrHighLow       21.82     (15.5%)       21.38     (13.9%)   -2.1% ( -27% -   32%)\n              AndHighMed       34.04      (4.8%)       33.56     (11.8%)   -1.4% ( -17% -   15%)\n            OrHighNotMed       33.92     (19.4%)       33.57     (13.1%)   -1.0% ( -28% -   38%)\n                 LowTerm      318.33     (15.4%)      318.45     (12.9%)    0.0% ( -24% -   33%)\n                 Respell       45.80     (11.8%)       45.85     (14.5%)    0.1% ( -23% -   29%)\n             AndHighHigh       28.10      (6.3%)       28.19     (11.3%)    0.3% ( -16% -   19%)\n                  Fuzzy2       41.95     (10.1%)       42.40     (16.0%)    1.1% ( -22% -   30%)\n                Wildcard       18.84     (11.5%)       19.13     (12.2%)    1.5% ( -19% -   28%)\n                  IntNRQ        3.17     (14.0%)        3.22     (17.2%)    1.5% ( -26% -   38%)\n               LowPhrase       12.83     (10.3%)       13.08     (16.3%)    2.0% ( -22% -   31%)\n                 MedTerm       98.48     (18.2%)      100.63     (16.9%)    2.2% ( -27% -   45%)\n               MedPhrase      197.18     (13.3%)      201.95     (12.6%)    2.4% ( -20% -   32%)\n         MedSloppyPhrase        3.32     (16.1%)        3.50     (14.2%)    5.4% ( -21% -   42%)\n              AndHighLow      352.18     (12.9%)      375.73     (14.4%)    6.7% ( -18% -   39%)\n         LowSloppyPhrase       42.72     (12.0%)       46.52     (21.5%)    8.9% ( -22% -   48%)\n             LowSpanNear       10.23     (15.7%)       11.24     (18.9%)    9.9% ( -21% -   52%)\n             MedSpanNear       31.53     (14.1%)       35.40     (20.7%)   12.3% ( -19% -   54%)\n\n\n\nSeems like OR queries lost a bit ... ",
            "date": "2014-07-09T22:18:29+0000"
        },
        {
            "id": "comment-14057408",
            "author": "Robert Muir",
            "content": "Thanks Mike: very possible! At first during refactoring, I was careful and ran this thing every time i made a change to prevent stuff like this. But this is so time-consuming and slow, also I had the problem that OR* is highly variable. E.g. I'd run the benchmark a second time and it would show huge gains... ",
            "date": "2014-07-10T12:10:26+0000"
        }
    ]
}