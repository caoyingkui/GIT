{
    "id": "LUCENE-7643",
    "title": "Move IndexOrDocValuesQuery to queries (or core?)",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Task",
        "components": [],
        "fix_versions": [
            "6.5",
            "7.0"
        ]
    },
    "description": "I was just doing some benchmarking to check that IndexOrDocValues actually makes things faster when it is supposed to:\n\n\n                    TaskQPS baseline      StdDev   QPS patch      StdDev                Pct diff\n                 Range25       30.27      (0.6%)       29.22      (4.7%)   -3.5% (  -8% -    1%)\n                 Range10       66.74      (0.9%)       64.52      (4.2%)   -3.3% (  -8% -    1%)\n                  Term35       18.59      (1.6%)       18.16      (1.9%)   -2.3% (  -5% -    1%)\n                  Term02      274.98      (1.1%)      269.47      (1.9%)   -2.0% (  -4% -    1%)\n        AndTerm35Range10       26.82      (2.5%)       26.50      (2.8%)   -1.2% (  -6% -    4%)\n        AndTerm02Range25       56.27      (1.3%)       99.04      (7.9%)   76.0% (  65% -   86%)\n\n\n\nIn the above results, the number after the query type indicates the percentage of docs in the index that it matches. With the baseline, range queries are simple point range queries, while the patch is an IndexOrDocValuesQuery that wraps both a point range query and a doc values query that matches the same documents. As expected, AndTerm35Range10 performs the same in both cases since the range is supposed to lead the iteration, so the IndexOrDocValuesQuery is rewritten to the wrapped point range query. However with AndTerm02Range25 the range cost is higher than the term cost so the range is only used for verifying matches and the IndexOrDocValuesQuery rewrites to the wrapped doc values query, yielding a speedup since we do not have to evaluate the range against the whole index.\n\nI think the -2/-3% difference we are seeing for everything else than AndTerm02Range25 is noisy since term queries execute exactly the same way in both cases, yet they have this slight slowdown too.\n\nI would like to make it easier to use by moving IndexOrDocValuesQuery and DocValuesRangeQuery to a different module than sandbox, and giving the doc values range query an API that is closer to point ranges by making the bounds required (null disallowed) and removing the includeLower and includeUpper parameters. I wanted to move to queries initially but maybe core is better, that way we could link from the point API to IndexOrDocValuesQuery as a way to make queries on fields that have both points and doc values more efficient.",
    "attachments": {
        "LUCENE-7643.patch": "https://issues.apache.org/jira/secure/attachment/12848502/LUCENE-7643.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15828393",
            "date": "2017-01-18T16:55:55+0000",
            "content": "+1 to promote these queries to core. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15828441",
            "date": "2017-01-18T17:39:21+0000",
            "content": "+1 ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15831489",
            "date": "2017-01-20T09:56:12+0000",
            "content": "Here is a patch. Doc values queries are exposed as factory methods on the *DocValuesField classes, like for points. I also added specialization for the single-value case by unwrapping the singleton whenever possible and improved documentation of IndexOrDocValuesQuery with a usage example. I think it is ready? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15831584",
            "date": "2017-01-20T11:37:44+0000",
            "content": "+1 ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15831675",
            "date": "2017-01-20T12:44:24+0000",
            "content": "Commit 71ca2a84bad2495eff3b0b15dc445f3f013ea4af in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71ca2a8 ]\n\nLUCENE-7643: Move IndexOrDocValuesQuery to core. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15831709",
            "date": "2017-01-20T13:01:28+0000",
            "content": "Commit f57e0177ffd3f367de81bdf7f2ad67ad0f94264a in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f57e017 ]\n\nLUCENE-7643: Fix leftover. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15831710",
            "date": "2017-01-20T13:01:45+0000",
            "content": "Nice; I also like the addition of the query methods to the field type.  Does DocValuesRangeQuery need to be public now?\n\nWhat's up with this change in PointRangeQuery?\n\npublic Scorer get(boolean randomAccess) throws IOException {\n-              if (values.getDocCount() == reader.maxDoc()\n+              if (false && values.getDocCount() == reader.maxDoc()\n                   && values.getDocCount() == values.size()\n\n ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15831722",
            "date": "2017-01-20T13:09:31+0000",
            "content": "This change in PointRangeQuery was unintended, I just removed it.\n\nDoes DocValuesRangeQuery need to be public now?\n\nNot sure what you mean since this class has been removed. Its new counterparts are indeed package-private but I don't think they need to be public, do they? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15831766",
            "date": "2017-01-20T13:46:15+0000",
            "content": "Commit 20b7dfae42810ea4c345355735d732bdbb191150 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=20b7dfa ]\n\nLUCENE-7643: Move IndexOrDocValuesQuery to core. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15831882",
            "date": "2017-01-20T15:02:47+0000",
            "content": "Its new counterparts are indeed package-private\n\nOh right; that's all I meant.\n\nThanks Adrien. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15832212",
            "date": "2017-01-20T18:28:24+0000",
            "content": "Something about this change appears to have introduced an NPE risk that one of Solr's randomized tests caught (see SOLR-10013 for full details)...\n\n\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Exception during query\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([690818771545E96F:51983624D9EDF0F4]:0)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:821)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:788)\n   [junit4]    > \tat org.apache.solr.schema.DocValuesTest.testFloatAndDoubleRangeQueryRandom(DocValuesTest.java:618)\n...\n   [junit4]    > Caused by: java.lang.NullPointerException\n   [junit4]    > \tat org.apache.lucene.document.SortedNumericDocValuesRangeQuery$1$1.matches(SortedNumericDocValuesRangeQuery.java:114)\n   [junit4]    > \tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:253)\n   [junit4]    > \tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:197)\n   [junit4]    > \tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39)\n   [junit4]    > \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:669)\n...\n\n ",
            "author": "Hoss Man"
        },
        {
            "id": "comment-15832236",
            "date": "2017-01-20T18:43:46+0000",
            "content": "Woops sorry for that. I will not be able to look into it before Monday so feel free to either revert the change or mute the test until then and I will have a look. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15832268",
            "date": "2017-01-20T19:08:53+0000",
            "content": "Adrien Grand: pretty sure the problem is somewhere in this optimization you introduced...\n\n...I also added specialization for the single-value case by unwrapping the singleton whenever possible...\n\nIf i force singleton to always be null (in SortedNumericDocValuesRangeQuery) the seed passes.\n\nI'm thinking rather then reverting your entire commit (on trunk and 6x) I'll just commit a small chnge to remove this optinization (from both SortedNumericDocValuesRangeQuery and SortedSetDocValuesRangeQuery) ... that way we can at least let jenkins keep hammering on the rest of your changes.  and you can decide later if the optimization can be fixed.\n\nI'm currently running all tests with that change .. once that's done i'll verify that the non-randomized lucene tstt steve just added to SOLR-10013 also pases with the optimization disabled, and commit.\n\nif anyone would prefer i roll back completley, please spak up. ",
            "author": "Hoss Man"
        },
        {
            "id": "comment-15832350",
            "date": "2017-01-20T20:20:19+0000",
            "content": "spun off the optimization into LUCENE-7649 ",
            "author": "Hoss Man"
        },
        {
            "id": "comment-15832365",
            "date": "2017-01-20T20:36:41+0000",
            "content": "Commit c9262602f06d3fdaa2ec8809a6948aaed72bc0b1 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c926260 ]\n\nSOLR-10013: Fix DV range query bug introduced by LUCENE-7643 by disabling and optimization (LUCENE-7649 to track re-enabling or removing completely)\n\nConflicts:\n\tlucene/core/src/java/org/apache/lucene/document/SortedNumericDocValuesRangeQuery.java\n\tlucene/core/src/java/org/apache/lucene/document/SortedSetDocValuesRangeQuery.java ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15832368",
            "date": "2017-01-20T20:36:45+0000",
            "content": "Commit b0db06bad568b7eedf528379a2fe5ac935992d56 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b0db06b ]\n\nSOLR-10013: Fix DV range query bug introduced by LUCENE-7643 by disabling and optimization (LUCENE-7649 to track re-enabling or removing completely) ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15834138",
            "date": "2017-01-23T09:39:23+0000",
            "content": "Commit a5b5df419c7f5bc1a94bc2fa0c1b8ba87b8159f8 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a5b5df4 ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15834140",
            "date": "2017-01-23T09:39:25+0000",
            "content": "Commit 6693c261e5782bc49dea92002745a91215c4166e in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6693c26 ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15835589",
            "date": "2017-01-24T03:32:59+0000",
            "content": "Commit 71ca2a84bad2495eff3b0b15dc445f3f013ea4af in lucene-solr's branch refs/heads/apiv2 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71ca2a8 ]\n\nLUCENE-7643: Move IndexOrDocValuesQuery to core. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15835590",
            "date": "2017-01-24T03:33:00+0000",
            "content": "Commit f57e0177ffd3f367de81bdf7f2ad67ad0f94264a in lucene-solr's branch refs/heads/apiv2 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f57e017 ]\n\nLUCENE-7643: Fix leftover. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15835593",
            "date": "2017-01-24T03:33:04+0000",
            "content": "Commit b0db06bad568b7eedf528379a2fe5ac935992d56 in lucene-solr's branch refs/heads/apiv2 from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b0db06b ]\n\nSOLR-10013: Fix DV range query bug introduced by LUCENE-7643 by disabling and optimization (LUCENE-7649 to track re-enabling or removing completely) ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15835871",
            "date": "2017-01-24T08:58:12+0000",
            "content": "Commit 6693c261e5782bc49dea92002745a91215c4166e in lucene-solr's branch refs/heads/apiv2 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6693c26 ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15860920",
            "date": "2017-02-10T08:33:56+0000",
            "content": "Commit a36ebaa90c95d8be6411464c237593a1ff825af0 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a36ebaa ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization for sorted dv too. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15860922",
            "date": "2017-02-10T08:34:27+0000",
            "content": "Commit 0215c65ac56a1faef100caf3eafb6fd85eaa337d in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0215c65 ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization for sorted dv too. ",
            "author": "ASF subversion and git services"
        }
    ]
}