{
    "id": "LUCENE-2491",
    "title": "Extend Codec with a SegmentInfos writer / reader",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I'm trying to implement a Codec that works with append-only filesystems (HDFS). It's almost done, except for the SegmentInfos.write(dir), which uses ChecksumIndexOutput, which in turn uses IndexOutput.seek() - and seek is not supported on append-only output. I propose to extend the Codec interface to encapsulate also the details of SegmentInfos writing / reading. Patch to follow after some feedback",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2010-06-07T10:59:46+0000",
            "content": "This sounds great!\n\nI've wanted to let Codecs store stuff into each SegmentInfo (eg the hasProx boolean really ought not be a core thing but a Codec-private flag instead).  Maybe this is a way to do that...\n\nThe only odd thing is... Codec is per-segment now.  Every segment is free to have a different Codec (even within a single session of IW).  So having Codec write the segments file doesn't really \"fit\"; I guess CodecProvider could do so?\n\nMultiple segments files can exist in the index at a time; the requirement would then be that the current CodecProvider must always be able to read all segments files written by past CodecProviders.\n\nWe could alternatively make it an option for IW to use a normal IndexOutput when writing segments files (skipping the checksum).\n\nOnce you remove this from HDFS, how will you ensure the written segments file is consistent?  Or is this (a possibly partially written segments file due to eg OS crash or power loss, on \"ordinary\" filesystems) never an issue with HDFS? ",
            "author": "Michael McCandless",
            "id": "comment-12876200"
        },
        {
            "date": "2010-06-07T11:20:23+0000",
            "content": "Or we can force the same Codec for the whole index. Which really makes sense. ",
            "author": "Earwin Burrfoot",
            "id": "comment-12876203"
        },
        {
            "date": "2010-09-20T10:27:10+0000",
            "content": "This was committed as a part of LUCENE-2373. ",
            "author": "Andrzej Bialecki",
            "id": "comment-12912430"
        }
    ]
}