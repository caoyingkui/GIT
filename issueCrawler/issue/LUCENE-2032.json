{
    "id": "LUCENE-2032",
    "title": "Spatial Filters not Serializable",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.0"
        ],
        "affect_versions": "2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I am using Lucene in a distributed setup. \n\nThe Filters in the spatial project aren't Serializable even though it inherits it from Filter. Filter is a Serializable class. \n\nDistanceFilter contains the non-Serializable class WeakHashMap.\nCartesianShapeFilter contains the non-Serializable class java.util.logging.Logger",
    "attachments": {
        "LUCENE-2032.patch": "https://issues.apache.org/jira/secure/attachment/12424094/LUCENE-2032.patch",
        "LUCENE-2032.txt": "https://issues.apache.org/jira/secure/attachment/12424135/LUCENE-2032.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-11-04T23:38:41+0000",
            "content": "Hi Joey, do you have a patch by any chance?\n\ni think you will have to write a readObject() to fix this. ",
            "author": "Robert Muir",
            "id": "comment-12773704"
        },
        {
            "date": "2009-11-05T03:36:05+0000",
            "content": "This patch fixes it in trunk. ",
            "author": "Uwe Schindler",
            "id": "comment-12773762"
        },
        {
            "date": "2009-11-05T03:44:15+0000",
            "content": "Committed revision: 832987 ",
            "author": "Uwe Schindler",
            "id": "comment-12773763"
        },
        {
            "date": "2009-11-05T13:27:21+0000",
            "content": "CartesianShapeFilter also uses the non-Serializable class Shape\n\nI think all that is needed is to add Serializable to Shape\n\nThe following code can be used to verify any other embedded classes not serialized:\n\nTest.java\nprivate static boolean isSerializable(Serializable o) throws IOException{\n\t\ttry{\n\t\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();\n\t\t\tObjectOutputStream oos = new ObjectOutputStream(bos);\n\t\t\toos.writeObject(o);\n\t\t\treturn true;\n\t\t}catch(NotSerializableException e){\n\t\t\te.printStackTrace();\n\t\t\treturn false;\n\t\t}\n\t}\n\n  ",
            "author": "Joey Surls",
            "id": "comment-12773925"
        },
        {
            "date": "2009-11-05T17:19:35+0000",
            "content": "I made Shape serializable and cleaned up the code in CartensianShapeFilter slightly. The patch removes the logging code too as we do not have logging code elsewhere. I'm not keen to write a readObject method just for the sake of creating the logging object as it is not serializable. \nThe patch contains a testcase for serializable too.\n ",
            "author": "Simon Willnauer",
            "id": "comment-12773982"
        },
        {
            "date": "2009-11-05T17:23:39+0000",
            "content": "The trick is to make the logging object \"static final\", because it is not needed per instance. See my patch from yesterday. ",
            "author": "Uwe Schindler",
            "id": "comment-12773984"
        },
        {
            "date": "2009-11-05T17:41:34+0000",
            "content": "The trick is to make the logging object \"static final\", because it is not needed per instance. See my patch from yesterday. \n\nI actually remove that on purpose. There is no other logging code outside of spatial and I guess consistency should go first in that case. Especially for logging it would make sense to have it static and final even if it is not serialized.  ",
            "author": "Simon Willnauer",
            "id": "comment-12773995"
        },
        {
            "date": "2009-11-05T18:11:19+0000",
            "content": "I removed the last logging reference from CartesianPolyFilterBuilder... ",
            "author": "Simon Willnauer",
            "id": "comment-12774015"
        },
        {
            "date": "2009-11-05T18:50:12+0000",
            "content": "commited in revision 833122 ",
            "author": "Simon Willnauer",
            "id": "comment-12774028"
        }
    ]
}