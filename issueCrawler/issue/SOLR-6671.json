{
    "id": "SOLR-6671",
    "title": "Introduce a solr.data.home as root dir for all data",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "4.10.1",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Many users prefer to deploy code, config and data on separate disk locations, so the default of placing the indexes under ${solr.solr.home}/${solr.core.name}/data is not always wanted.\n\nIn a multi-core/collection system, there is not much help in the solr.data.dir option, as it would set the dataDir to the same folder for all collections. One workaround, if you don't want to hardcode paths in your solrconfig.xml, is to specify the dataDir property in each solr.properties file.\n\nA more elegant solution would be to introduce a new Java-option solr.data.home which would be to data the same as solr.solr.home is for config. If set, all collections would default their dataDir as ${solr.data.home)/${solr.core.name}/data",
    "attachments": {
        "SOLR-6671.patch": "https://issues.apache.org/jira/secure/attachment/12678158/SOLR-6671.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-10-29T23:31:54+0000",
            "author": "Hoss Man",
            "content": "isn't this already trivial for users to do by sepecifying <dataDir>${solr.data.root}/${solr.core.name}/data</dataDir> in their solrconfig.xml file(s) ? ",
            "id": "comment-14189285"
        },
        {
            "date": "2014-10-29T23:45:04+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Not sure how to wire it in so it will also work as today if the new option is not specified.\n\nWhat we have now in solrconfig.xml is;\n\n<dataDir>${solr.data.dir:}</dataDir>\n\nOne way is to add a new property in solr.xml:\n\n<dataRootDir>${solr.data.root:}</dataRootDir>\n\nThen modify the logic in SolrCore and other places resolving default data dir, if empty to consider solr.data.root as well. ",
            "id": "comment-14189306"
        },
        {
            "date": "2014-10-29T23:48:25+0000",
            "author": "Mark Miller",
            "content": "This is similar to the solr.hdfs.home that the HdfsDirectoryFactory exposes to root SolrCloud instance dirs in one location. Def makes sense to have the same option for local filesystem given that you really don't want to manage data directories manually when using SolrCloud if you can help it. That was also a driving reason behind solr.hdfs.home. ",
            "id": "comment-14189315"
        },
        {
            "date": "2014-10-30T00:24:36+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Hoss, yes you can compose your own variables everywhere in general, but this issue proposes to ship Solr with such convenience out of the box. Then also we could add an -r <dir> option to bin/solr for specifying where data should live. Thus people having tons of collections already will be able to upgrade to Solr5 and start using the option without further editing of XML's. ",
            "id": "comment-14189375"
        },
        {
            "date": "2014-10-30T00:53:31+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Mark Miller, if using solr.hdfs.home, should not also data from e.g. BlendedInfixSuggester be co-located there? But BlendedInfixLookupFactory currently hardcodes FSDirectory. Should probably create another JIRA for that and possibly other hardcodings. ",
            "id": "comment-14189405"
        },
        {
            "date": "2014-10-30T04:42:19+0000",
            "author": "Shawn Heisey",
            "content": "I achieve separation between the instanceDir and dataDir with the following settings in solr.xml.  I'm using the old format.  These are not on separate filesystems, but they could be.  This method allows everything to have relative paths, so the entire structure can be relocated without a lot of config changes.\n\n\n    <core name=\"s0live\" instanceDir=\"cores/s0_1/\" loadOnStartup=\"true\" dataDir=\"../../data/s0_1\" transient=\"false\"/>\n\n\n\n+1 for Jan's idea.  It would allow a cleaner config that doesn't need \"../..\" on the dataDir. ",
            "id": "comment-14189639"
        },
        {
            "date": "2014-10-30T09:03:45+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Hmm, perhaps better to do this as part of DirectoryFactory#getDataHome and add a setting inside <directoryFactory> tag in solrconfig (data.home is a naming more in line with existing stuff):\n\n<str name=\"solr.data.home\">${solr.data.home:}</str>\n\n\n\nThis way, each directory impl can have a say in what a data root means. ",
            "id": "comment-14189823"
        },
        {
            "date": "2014-10-30T10:16:49+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Attaching first rough patch to show my thinking. No unit tests and not even manually tested to work. Just want feedback if this is the right direction ",
            "id": "comment-14189903"
        },
        {
            "date": "2014-10-30T14:46:32+0000",
            "author": "Mark Miller",
            "content": "It would allow a cleaner config that doesn't need \"../..\" on the dataDir.\n\nIt also means you don't have to mess with the data dir property on every SolrCore you create (try doing that with the collections api). Instead you just set one property and forget about it and do everything normal from then on. ",
            "id": "comment-14190158"
        },
        {
            "date": "2015-02-12T14:30:51+0000",
            "author": "Alan Woodward",
            "content": "I think this can be achieved now using a combination of configsets (or SolrCloud) and setting coreRootDirectory in solr.xml? ",
            "id": "comment-14318270"
        },
        {
            "date": "2015-02-12T19:47:41+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "But that would change the directory Solr looks for the core config as well, if you're using a plain old cores layout.\n\nMy patch is aiming for the possibility to simply add -Dsolr.data.dir=/mnt/bigdisk when starting Solr (eventually bin/solr option) to indicate that all data should live at that location, regardless of where coreRoot or SOLR_HOME is, and regardless of using config sets, cloud or not. I'll whip up a better patch soon. ",
            "id": "comment-14318863"
        },
        {
            "date": "2016-03-04T21:43:22+0000",
            "author": "Shawn Heisey",
            "content": "I really like this idea.  It probably wouldn't work well for me without some tweaking, but for a typical Solr user, it could be a lifesaver.\n\nI use core.properties files like the following, so the instanceDir and dataDir names do not include the \"live\" and \"build\" parts of the core names, which get swapped when I do a full rebuild:\n\n\n#Written by CorePropertiesLocator\n#Mon Feb 01 23:57:50 UTC 2016\nname=s0live\nloadonStartup=false\ndataDir=../../data/s0_1\ntransient=false\n\n\n\n\n#Written by CorePropertiesLocator\n#Mon Feb 01 23:57:50 UTC 2016\nname=s0build\nloadonStartup=false\ndataDir=../../data/s0_0\ntransient=false\n\n\n\nWhat determines the name of the dataDir?  Is it the core name, or is the last path component of the instanceDir?  If it's the core name, that won't work for me \u2013 I would need it to be the last path component on instanceDir.\n\nIf the feature were set up so that I could have a core.properties file like this that would do the right thing, it would be really nice:\n\n\nname=s0live\ndataDir=s0_1\n\n ",
            "id": "comment-15180592"
        },
        {
            "date": "2016-03-04T21:58:56+0000",
            "author": "Shawn Heisey",
            "content": "Didn't mean to change the issue assignment.  Must have been an errant click. ",
            "id": "comment-15180618"
        },
        {
            "date": "2016-03-04T22:36:51+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Patch which applies to master. Using Path instead of File and some other changes. Still no tests, but you can test it like this\n\n\nbin/solr start -a \"-Dsolr.data.home=/tmp/mydata\"\nbin/solr create -c foo\nls -l server/solr/foo     # You only find conf and core.properties\nls -l /tmp/mydata/foo     # You only find data\n\n ",
            "id": "comment-15180667"
        },
        {
            "date": "2016-03-04T23:05:49+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "What determines the name of the dataDir? Is it the core name, or is the last path component of the instanceDir?\nHere's the code:\n\ndataDir = Paths.get(cd.getCoreContainer().getSolrHome()).resolve(dataHomePath).resolve(cd.getName() + File.separator + cd.getDataDir()).toAbsolutePath().toString();\n\n\nSo you will typically see /path/to/solr.data.dir/collname_shard1_replica1/data/, but in your example, it would probably be /path/to/solr.data.dir/s0live/s0_1/. I had to include core name as one level so we don't end up with all \"data\" folders in the same root dir. Guess I see a bug right there - we need to support absolute path dataDir which would override the solr.data.home. ",
            "id": "comment-15180716"
        },
        {
            "date": "2016-03-04T23:27:14+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New patch that supports absolute dataDir ",
            "id": "comment-15180743"
        },
        {
            "date": "2016-03-06T23:03:22+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New patch\n\n\tTest of the getDataHome() method\n\tUses last path element of instanceDir instead of coreName.\n\n\n\nI'm not 100% sure of the last change, using last path element of instanceDir instead of core name. These will be equal if instanceDir is not overridden, but if changed, the burden will be on the user to choose instanceDir with non-overlapping last path components. ",
            "id": "comment-15182386"
        },
        {
            "date": "2016-03-07T10:22:05+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New patch\n\n\tExplicit test for verifying last path component of instanceDir is used\n\n\n\nShawn Heisey thinking a bit more I agree it makes sense to use last component of instanceDir as the folder name inside solr.data.home. Then the directory structure is exactly the same below $SOLR_HOME/ and $SOLR_DATA_HOME/. So a core rename will not cause Solr to look for the index in another location, and a core swap will load the index from the other instanceDir, even if name is same after swap.\n\nIn SolrCloud rename and swap are not supported, so I assume that in most cases instanceDir==core_name so it will be compatible.\n\nAppreciate another pair of eyes, and tips for how to add more tests. \n\nQuestions:\n\n\tI am tempted to remove the support for setting solr.data.home as a property to the <directoryFactory> element in solrconfig.xml. It is of limited use to set such a root folder for each and every core, especially when you already can set <dataDir> on a per core level. Any objections?\n\tI chose to put the variable Path dataHomePath in DirectoryFactory.java where it is used in getDataHome(). But I initialize the variable in CachingDirectoryFactory#init since I view this class as the parent class of all file-system-based factories. The only exception I know is HdfsDirectoryFactory which also subclasses CachingDirectoryFactory, but it overrides both init and getDataHome. Comments?\n\tAnyone aware of code that calculates/assumes dataDir of a core without calling DirectoryFactory#getDataHome? We could detect such though adding solr.data.home to random test params but no need if we don't fear it to be a problem?\n\n\n\nThis patch will also obviously trigger many changes in documentation which currently assumes dataDir always being relative to solr.solr.home or set per core by <dataDir>. Appreciate help in updating the patch with such documentation changes  ",
            "id": "comment-15182846"
        },
        {
            "date": "2017-02-17T11:53:37+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I see many customer examples where there is a wish for separating data home from config home, so I'd like to push this forward again.\n\nThe default for SOLR_DATA_HOME could still be same as SOLR_HOME, but in the linux installer script, we could default to using /var/solr/data for data and /var/solr/home for home, so solr.in.sh would typically look like:\n\nSOLR_PID_DIR=\"/var/solr\"\nSOLR_HOME=\"/var/solr/home\"\nSOLR_DATA_HOME=\"/var/solr/data\"\nLOG4J_PROPS=\"/var/solr/log4j.properties\"\nSOLR_LOGS_DIR=\"/var/solr/logs\"\nSOLR_PORT=\"8983\"\n\n\n\nand produce this tree:\n\n\n/var/solr\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bar\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 data\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 index\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 tlog\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 foo\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 data\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 index\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 tlog\n\u251c\u2500\u2500 home\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bar\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 conf\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 managed-schema\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 solrconfig.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 core.properties\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 foo\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 conf\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 managed-schema\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 solrconfig.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 core.properties\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 solr.xml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 zoo.cfg\n\u251c\u2500\u2500 log4j.properties\n\u2514\u2500\u2500 logs\n    \u2514\u2500\u2500 solr.log.1\n\n\n\nBenefit is that it is super easy move data to a new partition/disk with a single mv command. We just now have a customer who upgrade from 4.x to 6.x using Linux installer, but still want to run non-cloud. They need to separate data from config, i.e. they are not happy to have configs in /var/solr/data together with data, it makes upgrading only the config harder. Today they solve it by hardcoding <dir> in every single solrconfig.xml. In the new install I have used symlinks for each conf folder instead, so they can have a partition where they replace the home/<core>/conf folders from SCM without disturbing data.\n\nThis would also help solve SOLR-10095. ",
            "id": "comment-15871741"
        },
        {
            "date": "2017-05-29T12:30:05+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New patch\n\n\tPatch applies on current master\n\tAdded var SOLR_DATA_HOME to solr.in.xx and convert to solr.data.home in bin/solr(.cmd) - this is not tested\n\tAsciidoc documentation\n\n\n\nRemains:\n\n\tAdd support in install_solr-service.sh\n\n ",
            "id": "comment-16028287"
        },
        {
            "date": "2017-06-15T23:43:22+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New patch, the previous did not include all bin/solr changes.\nNot tackling install_solr_service.sh in this issue. UPDATE: See SOLR-10906\nApplies to current master ",
            "id": "comment-16051207"
        },
        {
            "date": "2017-06-16T09:28:20+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Getting ready to commit this, hoping to target 7.0. Would really like to get a few more eyes on the solution.\nPS: It may be easier to review the patch on GitHub: https://github.com/apache/lucene-solr/compare/master...cominvent:solr6671?expand=1 ",
            "id": "comment-16051661"
        },
        {
            "date": "2017-06-16T15:43:56+0000",
            "author": "Mark Miller",
            "content": "I've only read through the changes, but looks okay to me. ",
            "id": "comment-16052053"
        },
        {
            "date": "2017-06-16T16:38:15+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Thanks Mark ",
            "id": "comment-16052109"
        },
        {
            "date": "2017-06-20T11:05:08+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Ok, I tested on windows, found a few bugs and fixed those. Verified setting both through -t and SOLR_DATA_HOME on both macOS and Windows10. Committing. ",
            "id": "comment-16055586"
        },
        {
            "date": "2017-06-20T11:21:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 39dfb7808ac11c369985549dff06441f0cf5b93c in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=39dfb78 ]\n\nSOLR-6671: Possible to set solr.data.home property as root dir for all data ",
            "id": "comment-16055604"
        },
        {
            "date": "2017-06-30T22:05:20+0000",
            "author": "Hoss Man",
            "content": "Jan: AFAICT DirectoryFactoryTest.testGetDataHome has failed on every windows policeman jenkins build since you added this test?\n\n\nFAILED:  org.apache.solr.core.DirectoryFactoryTest.testGetDataHome\n\nError Message:\nexpected:<[/tmp/inst1/]data> but was:<[C:\\tmp\\inst1\\]data>\n\nStack Trace:\norg.junit.ComparisonFailure: expected:<[/tmp/inst1/]data> but was:<[C:\\tmp\\inst1\\]data>\n        at __randomizedtesting.SeedInfo.seed([724D123FB68E10C5:EE2BCEE4EE061786]:0)\n        at org.junit.Assert.assertEquals(Assert.java:125)\n        at org.junit.Assert.assertEquals(Assert.java:147)\n        at org.apache.solr.core.DirectoryFactoryTest.testGetDataHome(DirectoryFactoryTest.java:58)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\n\n ",
            "id": "comment-16070782"
        },
        {
            "date": "2017-07-01T22:00:13+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Thanks Hoss. Looking. ",
            "id": "comment-16071420"
        },
        {
            "date": "2017-07-02T00:23:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8000b25cabef69bc31e64dee2c3ef619b77f84f7 in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8000b25 ]\n\nSOLR-6671: Fix tests on Windows ",
            "id": "comment-16071453"
        },
        {
            "date": "2017-07-02T09:44:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7b322bd67e5a3a9c7f9ecf165d89da60c3767fbd in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7b322bd ]\n\nSOLR-6671: Fix precommit and use the Lucene-Constant to detect Windows. Also allow other local drives! ",
            "id": "comment-16071574"
        },
        {
            "date": "2017-07-02T21:19:27+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Thanks Uwe, I committed the fix quickly without checking precommit.\nYour edits are fine, I was not aware of Constants.WINDOWS. I thought of making the assert more generic and move it to some test Util class, but this was the bare minimum of what was needed. Perhaps it would be more readable to have separate assertDataHome calls for Win and Linux:\n\nif (Constants.WINDOWS) {\n  assertDataHome(\"C:\\\\solrdata\\\\inst_dir\\\\data\", \"inst_dir\", rdf, cc);\n} else {\n  assertDataHome(\"/solrdata/inst_dir/data\", \"inst_dir\", rdf, cc);\n}\n\n ",
            "id": "comment-16071788"
        },
        {
            "date": "2017-07-02T22:10:20+0000",
            "author": "Uwe Schindler",
            "content": "Hi Jan,\n\nI think the fixes as committed are fine.\n\nIn addition I changed your regex to allow drive names other than \"C:\", because on Windows the drive is inherited. If you have your checkout on D: or X:, it would return another path, so the code above won't work!\n\nIMHO: The correct fix would be to just resolve the path name completely (get absolute name) and then compare the Path objects. String comparisons of folder names are always likely to break. With Path objects everything is right: slashes and drives are there. I did not fix that because I just wanted to correct it and not change semantics of your patch. I added the TODO, to think about how to do it better! ",
            "id": "comment-16071803"
        },
        {
            "date": "2017-07-02T22:14:13+0000",
            "author": "Uwe Schindler",
            "content": "I'd do it that way:\n\n\nprivate void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n  String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n  assertEquals(Paths.get(expected).toAbsolutePath(), Paths.get(dataHome).toAbsolutePath());\n}\n\n\n\nI just tested and passes also on windows! I can commit that if you like! ",
            "id": "comment-16071804"
        },
        {
            "date": "2017-07-03T06:09:07+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "+1 That is more generic yes ",
            "id": "comment-16071959"
        },
        {
            "date": "2017-07-03T06:16:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 20dcb56da85accabd8e32b41afaca71707797ade in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=20dcb56 ]\n\nSOLR-6671: More generic fix to assert Solr's dataHome ",
            "id": "comment-16071963"
        },
        {
            "date": "2017-07-07T13:09:32+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "The totalSpace and usableSpace reported by Metrics API are still based on coreRootDirectory (which is used as the instance dir for individual cores). So we should expose the data home's disk metrics as well. We can introduce new metrics such as dataHomeTotalSpace and dataHomeUsableSpace? Also, it'd be great if there was a method one could call to get the data home without needing a CoreDescriptor first. ",
            "id": "comment-16078046"
        },
        {
            "date": "2017-07-07T15:50:10+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Shalin, can u create a new jira for the metrics and one for getDataHome?  ",
            "id": "comment-16078280"
        },
        {
            "date": "2017-07-08T06:59:05+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I created SOLR-11036 and SOLR-11037 ",
            "id": "comment-16079002"
        },
        {
            "date": "2017-07-08T07:16:36+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Also see SOLR-11038 ",
            "id": "comment-16079014"
        },
        {
            "date": "2017-08-31T07:37:19+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I noticed that the CHANGES entry for this issue is located in the 6.5.0 section, while it should be in 7.0.0. I'll commit a fix to master, branch_7x and branch_7_0 (in case of re-spin), ok? ",
            "id": "comment-16148578"
        },
        {
            "date": "2017-08-31T07:53:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit aa7394d27fa575a31c0ddee82ce3bc0bb7205a98 in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=aa7394d ]\n\nSOLR-6671: Move changes entry to 7.0.0 ",
            "id": "comment-16148593"
        },
        {
            "date": "2017-08-31T07:54:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cc2114e77cb8da5143a6093c71c638fea0917842 in lucene-solr's branch refs/heads/branch_7x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cc2114e ]\n\nSOLR-6671: Move changes entry to 7.0.0\n\n(cherry picked from commit aa7394d) ",
            "id": "comment-16148596"
        },
        {
            "date": "2017-08-31T07:56:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b5b759ca9099ce6e0a7eb8502576bf3e35f77ab2 in lucene-solr's branch refs/heads/branch_7_0 from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b5b759c ]\n\nSOLR-6671: Move changes entry to 7.0.0\n\n(cherry picked from commit aa7394d) ",
            "id": "comment-16148599"
        }
    ]
}