{
    "id": "SOLR-4526",
    "title": "Admin UI depends on optional system info",
    "details": {
        "affect_versions": "4.1",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "A user on IRC was having trouble getting file descriptor counts and JVM memory usage in the admin UI, but it worked perfectly fine on another system.  The problem system uses OpenJDK, the other one uses the Apple JDK.  The user had tracked it down to an exception while trying to get open file descriptor info.\n\nLooking in the SystemInfoHandler.java file, I see a comment reference to com.sun.management.UnixOperatingSystemMXBean at the point where it is getting file descriptor info.  A little extra searching turned up ZOOKEEPER-1579 which refers to HBASE-6945, the same problem with OpenJDK.",
    "attachments": {
        "SOLR-4526.patch": "https://issues.apache.org/jira/secure/attachment/12572082/SOLR-4526.patch",
        "ubuntu-jetty6.png": "https://issues.apache.org/jira/secure/attachment/12571956/ubuntu-jetty6.png",
        "built-in-jetty8.png": "https://issues.apache.org/jira/secure/attachment/12571957/built-in-jetty8.png"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-13592519",
            "date": "2013-03-04T19:15:18+0000",
            "content": "If File descriptor info just isn't available in OpenJDK, then that is life.  The file descriptor problem seems to be causing another problem - the JVM memory info isn't showing up on the dashboard.  I haven't looked at the code yet, and I don't know javascript very well, but the user suspects that when the file descriptor info is not found, it causes the code that puts the JVM memory info together to be skipped. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13592553",
            "date": "2013-03-04T19:42:13+0000",
            "content": "I'm confused: SystemInfoHandler doesn't directly depend on UnixOperatingSystemMXBean, it uses reflection to ensure that it only calls methods on the OperatingSystemMXBean if they already exist \u2013 so even if it isn't a sun JVM, or isn't an UnixOperatingSystemMXBean instance, or is an older version of UnixOperatingSystemMXBean that doesn't have some of those methods, it still shouldn't be an error \u2013 at worst those properties just won't be included in the response.\n\nperhaps the problem is just that that admin UI Javascript assumes those properties will always be available? (but that wouldn't explain the comment about \"tracked it down to an exception while trying to get open file descriptor info\")\n\ncan anyone who can actually reproduce this problem please post the specifics of the exception they see, or the behavior they see in the admin ui (ie: screenshot) "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13592581",
            "date": "2013-03-04T20:09:55+0000",
            "content": "I think perhaps I was a little too aggressive in framing this issue.  I should have scaled it back a little bit to focus on the UI issue, not the java classes.  The title may need changing, and it may require filing another issue.  I see two problems.  With OpenJDK, the file descriptor info and the JVM memory info are not showing on the dashboard.  Side note: I don't have OpenJDK running anywhere and don't have unallocated hardware I can fiddle with right now.\n\nThe underlying issue is that the user says the file descriptor info is not found in /admin/system output running under OpenJDK, but it is there under Apple or Oracle JVMs.  If the info is available at all from OpenJDK, it may require a code change to get it.\n\nThe java issue is triggering a javascript issue.  An educated guess is that the code that populates the file descriptor bar is failing and causing the JVM memory bar calculation (JVM memory info is available in /admin/system) to be skipped entirely.  A simple fix for that issue would be to re-order the javascript code so that jvm memory is done before the file descriptor.  A better fix would be to make sure that a nonexistent piece of information doesn't cause problems.\n\nI'm very weak in both javascript and java reflection, or I would have already tried to come up with patches. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13592597",
            "date": "2013-03-04T20:22:10+0000",
            "content": "Additional note from the user on IRC: I adjusted the live server config to run the solr built-in jetty and now all the stats are showing up, even on openjdk, so the issue seems to be with older jetty versions. "
        },
        {
            "author": "Felix Buenemann",
            "id": "comment-13592616",
            "date": "2013-03-04T20:49:39+0000",
            "content": "The problem turned out to be jetty6 vs. jetty8 and not OpenJDK. The dev system was running Solr's built-in jetty, while the production system was running the jetty version that was shipping with Ubuntu 12.04 Server. I noticed this after building a VM to simulate the problem with the closed Oracle JDK7 and encountered the same behavior.\n\nI'm attaching two screenshots to show the problem. "
        },
        {
            "author": "Felix Buenemann",
            "id": "comment-13592629",
            "date": "2013-03-04T20:56:58+0000",
            "content": "Screenshots illustrating the problem. The JVM values are only empty because of an exception in index.js, which was looking for the missing keys 'maxFileDescriptorCount' and 'openFileDescriptorCount' in system_data['system']. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13592638",
            "date": "2013-03-04T21:06:27+0000",
            "content": "Felix: can you confirm no errors in the server logs, just javacsript was having problems from the null keys?\n\nasigning to steffkes in the hopes that he can take a look \u2013 but based on the screen shot i'm not really sure what if anything it could do better in a situation like this \u2013 if the values aren't available from the JVM, showing \"blank\" bar sharts seems as good an option as any ... i guess maybe labeling them with \"?\" could be a little better though. "
        },
        {
            "author": "Felix Buenemann",
            "id": "comment-13592648",
            "date": "2013-03-04T21:17:10+0000",
            "content": "Hoss: I'll try to get my VM back into the prober state and check it.\n\nRegarding what the JS could do better: It would be a good idea to check if the accessed array keys are undefined, to avoid an exception. This would make the JS code more verbose though.\nHad the code checked for undefined values, it would have shown the JVM usage just fine. "
        },
        {
            "author": "Felix Buenemann",
            "id": "comment-13592661",
            "date": "2013-03-04T21:36:23+0000",
            "content": "Hoss: Solr is not logging any errors. I've tried with logging for solr and children set to INFO. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13592685",
            "date": "2013-03-04T21:55:05+0000",
            "content": "The general problem here is the admin UI, as mentioned by Felix. The output of the MX data is very JVM-specific, so the UI should not rely on key/value pairs are always available. If you e.g. start Solr with IBM J9, the whole Andmin UI shows nothing at all for those statistics, same for JRockit. If you look into browser JS logs you see errors about missing keys.\n\nThe RequestHandler on the Solr side is fine and produces no log entries. Because of that you will see no errors in the log file, as the UI cannot log anything to the Solr log.\n\nThe reason why the Ubuntu-Jetty does not display those information might be because the Webapp context is restricted and does not provide the OS-MXBean. The Jetty included with Solr has no security settings at all and the webapp is running in the root context. "
        },
        {
            "author": "Felix Buenemann",
            "id": "comment-13593254",
            "date": "2013-03-05T09:25:18+0000",
            "content": "I could provide a patch against index.js to remove the hard dependencies, if there is consensus that this data should not be relied on. However it needs to be decided what to display in this case (eg. hide the bar, show \"Data not available\", ...). "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13593269",
            "date": "2013-03-05T09:51:26+0000",
            "content": "You cannot rely on this data because it is very JVM specific, so we have to handle it proper. As said before, IBJ J9 and Oracle JRockit fail to display anything in that area (because of the bugs in index.js). "
        },
        {
            "author": "Felix Buenemann",
            "id": "comment-13593338",
            "date": "2013-03-05T11:31:34+0000",
            "content": "The attached patch against trunk makes the dashboard js code less reliant on provided system and jvm data by checking for their existance. It also improves the matching of load average among operating systems (should now work with Linux, Mac OS X, *BSD, Irix, etc.)\n\nThe patch should also apply cleanly against 4.1.0 with minor offset. "
        },
        {
            "author": "Felix Buenemann",
            "id": "comment-13593339",
            "date": "2013-03-05T11:33:00+0000",
            "content": "Btw. if desired I can split out the changes to loadaverage matching into a different patch/ticket, but steffkes said on IRC it'd be ok to include. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13593343",
            "date": "2013-03-05T11:39:09+0000",
            "content": "The patch should also apply cleanly against 4.1.0 with minor offset.\n\nThat's not an issue, as we merge using SVN tools. Patches are only applied to trunk. "
        },
        {
            "author": "Felix Buenemann",
            "id": "comment-13593355",
            "date": "2013-03-05T12:04:53+0000",
            "content": "Updated the patch, because the previous version contained a copy'n'paste error, causing jvm memory info to always be hidden. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13593461",
            "date": "2013-03-05T15:12:14+0000",
            "content": "[trunk commit] Stefan Matheis\nhttp://svn.apache.org/viewvc?view=revision&revision=1452835\n\nSOLR-4526: Admin UI depends on optional system info "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13593491",
            "date": "2013-03-05T15:42:13+0000",
            "content": "[branch_4x commit] Stefan Matheis\nhttp://svn.apache.org/viewvc?view=revision&revision=1452838\n\nSOLR-4526: Admin UI depends on optional system info (merge r1452835) "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654292",
            "date": "2013-05-10T10:34:40+0000",
            "content": "Closed after release. "
        }
    ]
}