{
    "id": "LUCENE-146",
    "title": "[PATCH] \"segments\" timestamp patch",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This looks hacky to me, esp. without this behaviour being documented in the\nJavadocs, but we have no better solution now.\n\nA patch from \"Hani Suleiman\" <hani@formicary.net>\n\nNOTE: the attached patch is being uploaded from a Winblows machine, so it will\nhave Winblows EOL characters, which should be converter to UNIX ones, before\napplying and committing the patch. (dos2unix or perl -pi.bak -e 's/\\r\\n/\\n/g'\npatch-name-here)",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--Segments-timestamp.patch.txt": "https://issues.apache.org/jira/secure/attachment/12312263/ASF.LICENSE.NOT.GRANTED--Segments-timestamp.patch.txt",
        "ASF.LICENSE.NOT.GRANTED--timestamp.diff": "https://issues.apache.org/jira/secure/attachment/12312264/ASF.LICENSE.NOT.GRANTED--timestamp.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2003-10-12T21:29:46+0000",
            "content": "Created an attachment (id=8536)\nNOTE: convert line EOL chars before commit.  Add Javadocs! ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321403"
        },
        {
            "date": "2003-10-22T11:19:00+0000",
            "content": "Here's an improved patch for this problem. As discussed on the mailing list, it creates timestamp \nfiles of the format filename.<timestamp> where timestamp is System.currentTimeMillis().\n\nit handles low resolution system timers by using the same trick RAMDirectory does, checks for an \nexisting file with that timestamp, sleeps for one nanosecond, then tries again.\n\ntouchFile deletes all existing timestamps files and creates a new one. One issue I am unclear on is \nhow this would behave in a multithreaded call, and whether there are any issues with the deletes/\ncreate being non-atomic. Anyway, all the testcases pass. I'd appreciate review of this patch, and if \ngood enough, its inclusion in RC2! ",
            "author": "Hani Suleiman",
            "id": "comment-12321404"
        },
        {
            "date": "2003-10-22T23:37:53+0000",
            "content": "I don't see the new version of the patch here. ",
            "author": "cutting@apache.org",
            "id": "comment-12321405"
        },
        {
            "date": "2003-10-22T23:42:43+0000",
            "content": "Created an attachment (id=8668)\nTimestamp patch (resubmitted) ",
            "author": "Hani Suleiman",
            "id": "comment-12321406"
        },
        {
            "date": "2003-11-24T05:47:28+0000",
            "content": "This bug is now fixed - see bug 23534. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321407"
        }
    ]
}