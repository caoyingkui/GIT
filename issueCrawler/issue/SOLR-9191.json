{
    "id": "SOLR-9191",
    "title": "OverseerTaskQueue.peekTopN() fatally flawed",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5.2",
            "5.6",
            "6.0.2",
            "6.1",
            "6.2",
            "7.0"
        ],
        "affect_versions": "5.4,                                            5.4.1,                                            5.5,                                            5.5.1,                                            6.0,                                            6.0.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "We rewrote DistributedQueue in SOLR-6760, to optimize its obvious use case as a FIFO.  But in doing so, we broke the assumptions in OverseerTaskQueue.peekTopN()..\n\nOverseerTaskQueue.peekTopN() involves filtering out items you're already working on, it's trying to peek for new items in the queue beyond what you already know about.  But DistributedQueue (being designed as a FIFO) doesn't know about the filtering; as long as it has any items in-memory it just keeps returning those over and over without ever pulling new data from ZK.  This is true even if the watcher has fired and marked the state as dirty.  So OverseerTaskQueue gets into a state where it can never read new items in ZK because DQ keeps returning the same items that it has marked as in-progress.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-07T12:08:22+0000",
            "author": "Noble Paul",
            "content": "does ZK have any way to read items 'newer' than some id ? ",
            "id": "comment-15318363"
        },
        {
            "date": "2016-06-07T16:15:51+0000",
            "author": "Noble Paul",
            "content": "Is there a way we can avoid reading the \"already read\"  items from ZK? ",
            "id": "comment-15318782"
        },
        {
            "date": "2016-06-07T16:18:32+0000",
            "author": "Scott Blum",
            "content": "No, you can only 'getChildren' en masse ",
            "id": "comment-15318785"
        },
        {
            "date": "2016-06-07T21:02:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 34e30860488ebf08bdf0e3cb36fddcb67991b800 in lucene-solr's branch refs/heads/SOLR-9191 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=34e3086 ]\n\nSOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed ",
            "id": "comment-15319419"
        },
        {
            "date": "2016-06-07T21:03:43+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user dragonsinth opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/41\n\n    SOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed\n\n    @noblepaul \n    CC: @shalinmangar \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/apache/lucene-solr SOLR-9191\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/41.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #41\n\n\ncommit 34e30860488ebf08bdf0e3cb36fddcb67991b800\nAuthor: Scott Blum <dragonsinth@gmail.com>\nDate:   2016-06-07T05:52:16Z\n\n    SOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed\n\n ",
            "id": "comment-15319425"
        },
        {
            "date": "2016-06-07T21:05:00+0000",
            "author": "Scott Blum",
            "content": "Noble Paul some rework from the inital patch: Java 8isms for master, a little more refactoring to make it much more seamless. ",
            "id": "comment-15319429"
        },
        {
            "date": "2016-06-07T21:14:31+0000",
            "author": "Scott Blum",
            "content": "Mark Miller you might be interested in this one ",
            "id": "comment-15319445"
        },
        {
            "date": "2016-06-07T21:49:41+0000",
            "author": "Mark Miller",
            "content": "Can we expand a test to catch this more easily? ",
            "id": "comment-15319508"
        },
        {
            "date": "2016-06-07T22:03:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 23c0edb154630259209ecd7f54109cb4d28ca861 in lucene-solr's branch refs/heads/SOLR-9191 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=23c0edb ]\n\nSOLR-9191: monitor exception fix ",
            "id": "comment-15319546"
        },
        {
            "date": "2016-06-07T22:08:09+0000",
            "author": "Scott Blum",
            "content": "Good idea, will do.  Working on getting tests to pass globally atm. ",
            "id": "comment-15319554"
        },
        {
            "date": "2016-06-07T22:35:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 024a733b7f561cfbc1b3e557fd0ab9d69aa6a9c9 in lucene-solr's branch refs/heads/SOLR-9191 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=024a733 ]\n\nSOLR-9191: Add test for DistributedQueue.peekElements() ",
            "id": "comment-15319597"
        },
        {
            "date": "2016-06-07T23:45:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit caba9d528be7a221523909e25847e3d8476f6275 in lucene-solr's branch refs/heads/SOLR-9191 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=caba9d5 ]\n\nSOLR-9191: Fix for DeleteStatusTest; remove things from queue immediately on completion. ",
            "id": "comment-15319700"
        },
        {
            "date": "2016-06-07T23:45:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8465ed2119dd0634b2acf72f3dedca5914bac845 in lucene-solr's branch refs/heads/SOLR-9191 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8465ed2 ]\n\nSOLR-9191: Fix for DeleteStatusTest part 2; remove things from queue immediately on completion. ",
            "id": "comment-15319701"
        },
        {
            "date": "2016-06-07T23:51:52+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user dragonsinth commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/41#discussion_r66172805\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor.java \u2014\n    @@ -466,6 +466,8 @@ private void markTaskComplete(String id, String asyncId)\n               log.warn(\"Could not find and remove async call [\" + asyncId + \"] from the running map.\");\n             }\n           }\n    +\n    +      workQueue.remove(head);\n    \u2014 End diff \u2013\n\n    @markrmiller can you think of any reason not to do this?  I don't understand why currently getting things out of the queue takes an extra iteration.  I think my fix unmasked a latent problem exposed by DeleteStatusTest; to get that test to pass I have to eagerly remove completed items from the work queue, which seems correct to me.  Not sure why we'd want to wait for a loop-around to `cleanUpWorkQueue()`  ",
            "id": "comment-15319716"
        },
        {
            "date": "2016-06-07T23:52:28+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user dragonsinth commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/41#discussion_r66172870\n\n    \u2014 Diff: solr/core/src/test/org/apache/solr/cloud/DistributedQueueTest.java \u2014\n    @@ -137,6 +136,49 @@ public void testDistributedQueueBlocking() throws Exception \n{\n         assertNull(dq.poll());\n       }\n\n    +  @Test\n    +  public void testPeekElements() throws Exception {\n    +    String dqZNode = \"/distqueue/test\";\n    +    byte[] data = \"hello world\".getBytes(UTF8);\n    +\n    +    DistributedQueue dq = makeDistributedQueue(dqZNode);\n    +\n    +    // Populate with data.\n    +    dq.offer(data);\n    +    dq.offer(data);\n    +    dq.offer(data);\n    +\n    +    // Should be able to get 0, 1, 2, or 3 instantly\n    +    for (int i = 0; i <= 3; ++i) \n{\n    +      assertEquals(i, dq.peekElements(i, 0, child -> true).size());\n    +    }\n    +\n    +    // Asking for more should return only 3.\n    +    assertEquals(3, dq.peekElements(4, 0, child -> true).size());\n    +\n    +    // If we filter everything out, we should block for the full time.\n    +    long start = System.nanoTime();\n    +    assertEquals(0, dq.peekElements(4, 1000, child -> false).size());\n    +    assertTrue(System.nanoTime() - start >= TimeUnit.MILLISECONDS.toNanos(500));\n    +\n    +    // If someone adds a new matching element while we're waiting, we should return immediately.\n    +    executor.submit(() -> {\n    +      try \n{\n    +        Thread.sleep(500);\n    +        dq.offer(data);\n    +      }\n catch (Exception e) \n{\n    +        // ignore\n    +      }\n    +    });\n    +    start = System.nanoTime();\n    +    assertEquals(1, dq.peekElements(4, 2000, child -> \n{\n    +      // The 4th element in the queue will end with a \"3\".\n    +      return child.endsWith(\"3\");\n    +    }\n).size());\n    +    assertTrue(System.nanoTime() - start < TimeUnit.MILLISECONDS.toNanos(1000));\n    +    assertTrue(System.nanoTime() - start >= TimeUnit.MILLISECONDS.toNanos(250));\n    +  }\n    +\n    \u2014 End diff \u2013\n\n    @markrmiller the new test you suggested ",
            "id": "comment-15319717"
        },
        {
            "date": "2016-06-08T03:00:57+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user dragonsinth commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/41\n\n    This passes `ant test`. ",
            "id": "comment-15319896"
        },
        {
            "date": "2016-06-08T05:16:03+0000",
            "author": "Noble Paul",
            "content": "DistributedQueue.peekElements(int n, long waitMillis, Function<String, Boolean> acceptFilter)\n\ncan use a Predicate as third param ",
            "id": "comment-15320017"
        },
        {
            "date": "2016-06-08T05:23:55+0000",
            "author": "Scott Blum",
            "content": "Yeah, I was going to use Predicate, but wanted to be compatible with your patch for 8744.  If you're fine with Predicate, I'll use that. ",
            "id": "comment-15320027"
        },
        {
            "date": "2016-06-08T05:25:00+0000",
            "author": "Noble Paul",
            "content": "I'm changing it as well ",
            "id": "comment-15320029"
        },
        {
            "date": "2016-06-08T18:13:19+0000",
            "author": "Scott Blum",
            "content": "Cool.  Any other feedback beyond the Predicate change?  Shalin Shekhar Mangar or Mark Miller?  Otherwise going to commit to master today and start backporting.\n\nI want to backport this to any branches we might make a release on... 5.5.2, 5.6, 6.0.2, 6.1.1, 6.2 ",
            "id": "comment-15321114"
        },
        {
            "date": "2016-06-09T04:59:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ed2621de8402154440e3e1e1979eb620bd23b926 in lucene-solr's branch refs/heads/SOLR-9191 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ed2621d ]\n\nSOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed ",
            "id": "comment-15321888"
        },
        {
            "date": "2016-06-09T04:59:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ed2621de8402154440e3e1e1979eb620bd23b926 in lucene-solr's branch refs/heads/master from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ed2621d ]\n\nSOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed ",
            "id": "comment-15321889"
        },
        {
            "date": "2016-06-09T05:00:16+0000",
            "author": "Scott Blum",
            "content": "I went ahead and committed to master to unblock Noble Paul. ",
            "id": "comment-15321890"
        },
        {
            "date": "2016-06-09T05:00:45+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/41 ",
            "id": "comment-15321891"
        },
        {
            "date": "2016-06-09T05:08:59+0000",
            "author": "David Smiley",
            "content": "FYI the ASF git/jira commit bot sends updates to all JIRA issues referenced by commits occurring on this branch (e.g. SOLR-8859) even though it has nothing to do with this issue.  I got the ASF to add a filter for branches following the pattern (lucene|solr).* (case sensitive) as that was the most common branch naming pattern.  Please next time make a branch named like solr9199 and then this won't happen.  I could ask for case insensitive but I figured it would be nice to encourage more branch naming consistency. ",
            "id": "comment-15321898"
        },
        {
            "date": "2016-06-09T06:34:02+0000",
            "author": "Scott Blum",
            "content": "Oh, sorry!  I think it's because I force-pushed my branch after rebasing it. ",
            "id": "comment-15322010"
        },
        {
            "date": "2016-06-09T17:57:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7e86ba8c7327f99ca8708494b6d402af4cd0b4ec in lucene-solr's branch refs/heads/master from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7e86ba8 ]\n\nSOLR-9191: use a Predicate instead of a Function ",
            "id": "comment-15322987"
        },
        {
            "date": "2016-06-09T19:16:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cde57ab64a6f4082b2dfab515397a242600a1df7 in lucene-solr's branch refs/heads/branch_6x from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cde57ab ]\n\nSOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed ",
            "id": "comment-15323149"
        },
        {
            "date": "2016-06-09T19:57:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5955712ab1e3a37537929c3050b42aed243d3b4b in lucene-solr's branch refs/heads/branch_5x from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5955712 ]\n\nSOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed ",
            "id": "comment-15323211"
        },
        {
            "date": "2016-06-09T20:05:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9f5fae7ed82cd565d991ed92f9af4ca23eb7bac2 in lucene-solr's branch refs/heads/branch_5_5 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9f5fae7 ]\n\nSOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed ",
            "id": "comment-15323222"
        },
        {
            "date": "2016-06-09T20:13:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c6b04886244e90f4e0f83d1f3fa330e6ccf1a062 in lucene-solr's branch refs/heads/branch_6_0 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c6b0488 ]\n\nSOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed ",
            "id": "comment-15323244"
        },
        {
            "date": "2016-06-09T20:20:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 80d6d26cc7b5d6bf3eca434cded5179d717bb378 in lucene-solr's branch refs/heads/branch_6_1 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=80d6d26 ]\n\nSOLR-9191: OverseerTaskQueue.peekTopN() fatally flawed ",
            "id": "comment-15323263"
        },
        {
            "date": "2016-06-29T12:59:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7a8be182784bf26935435ac51839e70a1c045f1b in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7a8be18 ]\n\nPut back 6.2 bugfix released in 5.5.2: SOLR-9191 ",
            "id": "comment-15355191"
        },
        {
            "date": "2016-06-29T13:00:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 455e041c68106a9fc7d395a6a327aee6f221d1db in lucene-solr's branch refs/heads/branch_6x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=455e041 ]\n\nPut back 6.2 bugfixes released in 5.5.2: SOLR-9191 and SOLR-9234 ",
            "id": "comment-15355192"
        }
    ]
}