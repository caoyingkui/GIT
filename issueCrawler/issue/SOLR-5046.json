{
    "id": "SOLR-5046",
    "title": "IllegalArgumentException using distributed group.query when one shard does not match any docs",
    "details": {
        "affect_versions": "4.3",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Evgeny Salnikov noted this problem on the mailing list, although the initial report was somewhat convoluted by suspicious description of adding shards after the fact.\n\nSteps to reproduce using 4.3.1 example...\n\n\n\tstartup a 2 node SolrCloud cluster following the \"Example A\" description on the SolrCloud wiki...\n\t\n\t\tcp example example2\n\t\tcd example && java -Dbootstrap_confdir=./solr/collection1/conf -Dcollection.configName=myconf -DzkRun -DnumShards=2 -jar start.jar\n\t\tcd example2 && java -Djetty.port=7574 -DzkHost=localhost:9983 -jar start.jar\n\t\n\t\n\tindex exactly one doc (to ensure that subsequent distributed queries get results from only one node)\n\t\n\t\tjava -jar post.jar utf8-example.xml\n\t\n\t\n\texecute a request using group.query\n\t\n\t\thttp://localhost:7574/solr/select?q=*:*&group=true&group.query=cat:software\n\t\n\t\n\n\n\nstack trace...\n\n\n166500 [qtp2092063645-19] ERROR org.apache.solr.servlet.SolrDispatchFilter  \u2013 null:java.lang.IllegalArgumentException: shard 1 did not set sort field values (FieldDoc.fields is null); you must pass fillFields=true to IndexSearcher.search on each shard\n\tat org.apache.lucene.search.TopDocs$MergeSortQueue.<init>(TopDocs.java:143)\n\tat org.apache.lucene.search.TopDocs.merge(TopDocs.java:214)\n\tat org.apache.solr.search.grouping.distributed.responseprocessor.TopGroupsShardResponseProcessor.process(TopGroupsShardResponseProcessor.java:114)\n\tat org.apache.solr.handler.component.QueryComponent.handleGroupedResponses(QueryComponent.java:619)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:602)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:311)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1816)",
    "attachments": {
        "0001-Get-distributed-grouping-request-work-with-sort-with.patch": "https://issues.apache.org/jira/secure/attachment/12678219/0001-Get-distributed-grouping-request-work-with-sort-with.patch",
        "0002-Get-distributed-grouping-request-work-with-sort-with.patch": "https://issues.apache.org/jira/secure/attachment/12680162/0002-Get-distributed-grouping-request-work-with-sort-with.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13713111",
            "date": "2013-07-18T23:46:51+0000",
            "content": "Looks like there are other errors in this area... when trying to reproduce in unit tests, I got\n\n20948 T16 C0 oasc.SolrException.log ERROR java.lang.IllegalArgumentException: numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\n\t\tat org.apache.lucene.search.TopScoreDocCollector.create(TopScoreDocCollector.java:254)\n\t\tat org.apache.lucene.search.TopScoreDocCollector.create(TopScoreDocCollector.java:238)\n\t\tat org.apache.solr.search.Grouping$CommandQuery.newCollector(Grouping.java:853)\n\t\tat org.apache.solr.search.Grouping$CommandQuery.createFirstPassCollector(Grouping.java:845)\n\t\tat org.apache.solr.search.Grouping.execute(Grouping.java:316)\n\t\tat org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:408) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13713134",
            "date": "2013-07-18T23:55:38+0000",
            "content": "Actually, it doesn't look like group.query works at all to me... the most basic things I try fail.\n\nhttp://localhost:8983/solr/select?q=*:*&shards=localhost:8983/solr&group=true&group.query=*:*\n\n\n\n242473 [qtp462961596-15] ERROR org.apache.solr.core.SolrCore  \u2013 java.lang.IllegalArgumentException: shard 0 did not set sort field values (FieldDoc.fields is null); you must pass fillFields=true to IndexSearcher.search on each shard\n\tat org.apache.lucene.search.TopDocs$MergeSortQueue.<init>(TopDocs.java:143)\n\tat org.apache.lucene.search.TopDocs.merge(TopDocs.java:214)\n\tat org.apache.solr.search.grouping.distributed.responseprocessor.TopGroupsShardResponseProcessor.process(TopGroupsShardResponseProcessor.java:167)\n\tat org.apache.solr.handler.component.QueryComponent.handleGroupedResponses(QueryComponent.java:643)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:626)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:311)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1904)\n\n "
        },
        {
            "author": "Timo Hund",
            "id": "comment-14186607",
            "date": "2014-10-28T09:02:45+0000",
            "content": "Hey, any news on this issue?\n\nI am new in terms on development in apache solr and this issue is very important for one of our projects. Can i help out some how? Are there allready some testcases that might fail, so that i could dig into the issue and try to find a solution?\n "
        },
        {
            "author": "Timo Hund",
            "id": "comment-14189986",
            "date": "2014-10-30T12:16:17+0000",
            "content": "Hello together,\n\nyesterday i could do dome debugging and just want to share the outcome, ask some questions and hopefully get a step further.\nFor me it is not clear if this is a problem insight of lucene or solr\n\n\n(1)\n\nThe exceptions is thrown in org.apache.lucene.search.TopDocs on line 143 (branch_4x):\n\n           if (fd.fields == null) \n{\n              throw new IllegalArgumentException(\"shard \" + shardIDX + \" did not set sort field values (FieldDoc.fields is null); you must pass fillFields=true to IndexSearcher.search on each shard\");\n            }\n\tFrom reading the code in \"public static TopDocs merge(Sort sort, int start, int size, TopDocs[] shardHits)\u201c there are two options:\n\t\ta) sort is null => in this case the ScoreMergeSortQueue is used\n\t\tb) sort is defined => the mergedSortQueue will be used (Even when sort.fields has no Sorting fields).\n\n\tBy default we use Sort.RELEVANCE\n\n\tWhat i don\u2019t understand here is, why not just pass \u201enull\u201c to merge by score? Or is there a difference between Score and Relevance?\n\n\n\tWhen i change the merge method the following:\n\n\tif (sort == null) \n{\n      \t\tqueue = new ScoreMergeSortQueue(shardHits);\n    \t}\n else \n{\n      \t\tqueue = new MergeSortQueue(sort, shardHits);\n    \t}\n\n\tto \n\n    \tif (sort == null || sort.equals(Sort.RELEVANCE)) \n{\n             queue = new ScoreMergeSortQueue(shardHits);\n        }\n else \n{\n           queue = new MergeSortQueue(sort, shardHits);\n        }\n \u0003\n     \tthe case without any sorting works fine from the user level (but, there is one broken testcase in lucene)\n\n(2) \n\nBy reading the exception message \u201eyou must pass fillFields=true to\u201c i checked the code and found the following in\n       \u201eorg.apache.solr.search.grouping.distributed.shardresultserializer.TopGroupsResultTransformer\u201c:\n\n      In the \u201etransformToNative\u201c method \u201edocument.get(\"sortValues\u201c)\u201c is used to fill the sortValues for the document. \n      For some reason this seems to be empty. \n\n      From where do these sortValues come? And when could they be empty? And what should happen when they are empty?\n\n      This serializer (TopGroupsResultTransformer.transformToNative) is used in \u201eTopGroupsShardResponseProcessor.process\u201c. \n      Finally \u201e org.apache.lucene.search.TopDocs.merge\u201c is used to merge the topDocs\n\n      TopDocs mergedTopDocs = TopDocs.merge(sortWithinGroup, topN, topDocs.toArray(new TopDocs[topDocs.size()]));\n\n      As mentioned in \u201e1\u201c the default Sorting is sorting byScore but the topDocs seem to have no \u201esortFields\"\n\n      Is it an options to pass here \u201enull\u201c as sorting when we want to sort by relevance?\n\n\nConclusion:\n\nI think there could be two potential reasons:\nWe should use/change the lucene api for merging with no sorting / sorting by relevance?\nWe should find out why \u201esortFields\u201c is empty or if the is a call where search is used without \u201efillFields\u201c?\n\nAny ideas?\nIf i could help somewhere just ask and it would be nice to get some insights from somebody who is more inside the lucene and solr core.\n\nCheers\n\ntimo "
        },
        {
            "author": "Timo Hund",
            "id": "comment-14190292",
            "date": "2014-10-30T16:08:31+0000",
            "content": "The attached patch shows that grouping in distributed mode is working with \"sort\" and without sort (by score). \n\nIt think this could also be handled inside TopDocs.merge by checking if there is a sorting that \"needsScores\"\n\nAlso strange for me, it is not working for grouping.sort=...  It seems that the argument \"sort\" somewhere fills the lucene fields and \"group.sort\" not. "
        },
        {
            "author": "Timo Hund",
            "id": "comment-14202042",
            "date": "2014-11-07T13:46:50+0000",
            "content": "Added a second version of the patch, with tests for grouping by query, without any sorting and with group.sort. \n\nThe group.sort does not work for all cases, there is a uncommented failing testcase for this as well. \n\nIt would be nice when somebody could review this patch and we can get the grouping working in this case. "
        },
        {
            "author": "Carlos Maroto",
            "id": "comment-14391514",
            "date": "2015-04-01T21:35:57+0000",
            "content": "I ran into this issue today when we had \"&sort=score desc&group=true\" whether we tried using \"&group.field\" or \"&group.query\" (we had use cases for both.)  The error went away when we added a second sort criterion as in \"&sort=score desc,type asc\".  It seemed to be like it needed a tie breaker, at least for our data sample.  I hope it helps in isolating the issue. "
        }
    ]
}