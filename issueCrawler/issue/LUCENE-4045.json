{
    "id": "LUCENE-4045",
    "title": "Switch Maven test runner from maven-surefire-plugin to com.carrotsearch.randomizedtesting:junit4-maven-plugin",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/test"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "com.carrotsearch.randomizedtesting:junit4-maven-plugin can be used to run all Lucene/Solr tests under Maven, providing faster execution through load balancing, along with all the other goodies CS.RT brings.  (Not to mention it would make testing under Maven much more like testing under Ant.)\n\nFrom a post Dawid Weiss made on the maven-dev mailing list in January:\n\nhttp://labs.carrotsearch.com/randomizedtesting.html\n[...]\nLoad balancing is just part of what the project is about [...]\n\nMaven integration can be seen as an integration test (with scarce documentation yet) here:\nhttps://github.com/carrotsearch/randomizedtesting/blob/master/integration-maven/junit4-maven-plugin-tests/src/it/01-basic-test/pom.xml\n\nI've used it in another project, so a cleaner example of use from within a POM is here (you should disable surefire or your tests will run twice):\n\nhttps://github.com/carrotsearch/hppc/blob/master/hppc-core/pom.xml#L217\n\nAnd from a post Dawid made to the lucene-dev mailing list in April:\n\n\nI didn't mention it but there is actually an equivalent of <junit4> task as a maven plugin... it basically redirects to the ant-plugin but has a maven-like facade for passing the basic set of properties. I don't think it makes such a big difference for maven build - we can stick to surefire. Let me know if you'd like to try that other plugin though \u2013 an example of a maven pom using it is here:\n\nhttps://github.com/carrotsearch/randomizedtesting/blob/master/examples/maven/pom.xml\n\nThe CS.RT maven plugin requires Maven v3.0.2+; I asked Dawid whether Maven 2.2.1 could be supported, and in private emails to me, he replied:\n\nI looked at it but it seems I need to stick to Maven 3 \u2013 there are APIs for filtering artefacts that seem to be available in 3.x only (copied and pasted from surefire and maven core). If you want to dig the code is on github, I won't have the time to look into it in the near future (first short vacation, then a backlog of crap to deal with).\n\nI admit I don't have enough Maven powers to actually think of a way to use either surefire or another plugin (depending on a sysproperty or something). This could be a fallback for folks who really need maven 2.x.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-05-09T20:06:19+0000",
            "content": "\nMaven integration can be seen as an integration test (with scarce documentation yet) here: https://github.com/carrotsearch/randomizedtesting/blob/master/integration-maven/junit4-maven-plugin-tests/src/it/01-basic-test/pom.xml\n\nThis has been moved to https://github.com/carrotsearch/randomizedtesting/blob/master/junit4-maven-plugin-tests/src/it/01-basic-test/pom.xml ",
            "author": "Steve Rowe",
            "id": "comment-13271750"
        },
        {
            "date": "2012-05-10T08:06:53+0000",
            "content": "Wrt. maven3 vs. maven2 \u2013 feel free to dive into the plugin mojo code and see if you can make it work for both maven3 and 2. I admit I was stripping some code from maven source code to make it work \u2013 I'm sure it can be done better/ nicer but I don't have the necessary knowledge of maven APIs. ",
            "author": "Dawid Weiss",
            "id": "comment-13272171"
        },
        {
            "date": "2015-04-21T11:24:07+0000",
            "content": "In forbidden-apis I never saw a difference between Maven 2 and Maven 3 code. I generally compile against the plugin api of 2.0 and use the Java Annotation of Maven 3 (see forbiddenapis ivy.xml): https://github.com/policeman-tools/forbidden-apis/blob/bb281867639ea67c29acbc8a20b19945bb68f7f3/ivy.xml\n\nIn general I prefer Java 5 annotations, but thats unrelated to the version of the Plugin API. ",
            "author": "Uwe Schindler",
            "id": "comment-14504790"
        },
        {
            "date": "2015-04-21T11:26:44+0000",
            "content": "Ah you require Maven 3 functionality. No idea about that \n\nMaybe we should simply require Maven 3 for Lucene. It is now almost 3 years later and Maven 2 should be no longer in use  ",
            "author": "Uwe Schindler",
            "id": "comment-14504793"
        },
        {
            "date": "2015-04-21T11:28:21+0000",
            "content": "To update the \"ant run-maven-build\" just change <property name=\"maven-version\" value=\"2.2.1\"/> in the build.xml. ",
            "author": "Uwe Schindler",
            "id": "comment-14504796"
        }
    ]
}