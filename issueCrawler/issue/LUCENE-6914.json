{
    "id": "LUCENE-6914",
    "title": "DecimalDigitFilter skips characters in some cases (supplemental?)",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.4",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.5.4",
            "6.3",
            "7.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "Found this while writing up the solr ref guide for DecimalDigitFilter. \n\nWith input like \"\ud835\udfd9\ud835\udfe1\ud835\udfe0\ud835\udfdc\" (\"Double Struck\" 1984) the filter produces \"1\ud835\udfe18\ud835\udfdc\" (1, double struck 9, 8, double struck 4)  add some non-decimal characters in between the digits (ie: \"\ud835\udfd9x\ud835\udfe1x\ud835\udfe0x\ud835\udfdc\") and you get the expected output (\"1x9x8x4\").  This doesn't affect all decimal characters though, as evident by the existing test cases.\n\nPerhaps this is an off by one bug in the \"if the original was supplementary, shrink the string\" code path?",
    "attachments": {
        "LUCENE-6914.patch": "https://issues.apache.org/jira/secure/attachment/12774891/LUCENE-6914.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15032559",
            "author": "Hoss Man",
            "date": "2015-11-30T21:57:51+0000",
            "content": "failure produced by attached test patch...\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestDecimalDigitFilter -Dtests.method=testDoubleStruck -Dtests.seed=3126DECB8CE805E -Dtests.slow=true -Dtests.locale=ga -Dtests.timezone=Africa/Juba -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] FAILURE 0.03s | TestDecimalDigitFilter.testDoubleStruck <<<\n   [junit4]    > Throwable #1: org.junit.ComparisonFailure: term 0 expected:<1[984]> but was:<1[\ud835\udfe18\ud835\udfdc]>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([3126DECB8CE805E:92961DD9D4C68E38]:0)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:186)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:301)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:305)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:309)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.assertAnalyzesTo(BaseTokenStreamTestCase.java:359)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.assertAnalyzesTo(BaseTokenStreamTestCase.java:368)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkOneTerm(BaseTokenStreamTestCase.java:429)\n   [junit4]    > \tat org.apache.lucene.analysis.core.TestDecimalDigitFilter.testDoubleStruck(TestDecimalDigitFilter.java:74)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n "
        },
        {
            "id": "comment-15032625",
            "author": "Hoss Man",
            "date": "2015-11-30T22:37:52+0000",
            "content": "updated patch with beefed up randomized testing to reproduce the problem that way (either that or some other problem that looks similar to my naked eye)\n\nThen I took a shot in the dark at a fix to the call to StemmerUtil.delete and that seems to make the beast happy.\n\nSince i'm way out of my depth here i don't intend on commiting w/o explicit feedback from someone who understands this code.  (i'm mainly worried i may have introduced some other equally bad bug w/o realizing it).\n\nAnybody who understands this and thinks my patch looks good is welcome to run with it for 5.4, no need to wait for me. "
        },
        {
            "id": "comment-15032825",
            "author": "Hoss Man",
            "date": "2015-12-01T00:55:44+0000",
            "content": "the redundancy in the two randomized tests (and wasteful int[] I introduced) was bugging me, so I refactored some logic into determininghte set of all decimal digits for reuse in both tests. "
        },
        {
            "id": "comment-15035905",
            "author": "Robert Muir",
            "date": "2015-12-02T14:56:06+0000",
            "content": "looks buggy indeed. Can we also add a simple test (\ud835\udfd9x\ud835\udfe1x\ud835\udfe0x\ud835\udfdc -> 1x9x8x4) ? "
        },
        {
            "id": "comment-15035911",
            "author": "Robert Muir",
            "date": "2015-12-02T14:57:49+0000",
            "content": "or maybe the doubleStruck test is good enough? i guess the only oddity is, it actually has whitespace in between the characters, but at a glance its hard to tell its not e.g. full-width digits. Maybe we should just replace the spaces with x's. "
        },
        {
            "id": "comment-15036156",
            "author": "Hoss Man",
            "date": "2015-12-02T17:13:11+0000",
            "content": "i wrote it thinking it would be helpful to first demonstrate what worked (x, or space, or some non candidate char in between digits as a \"gap\"), but then when you replace those \"gaps\" when empty space strings it breaks.  now that we know the problem and can trivially reproduce with randomized tests, i'm not sure it's really relevant \u2013 but you could always just clone those asserts and do a bunch of different varieties for the \"gap\" (single space, x, some wide supplemental character that isn't a digit, etc...) "
        },
        {
            "id": "comment-15356618",
            "author": "Adrien Grand",
            "date": "2016-06-30T06:42:51+0000",
            "content": "+1 to the patch "
        },
        {
            "id": "comment-15386052",
            "author": "Adrien Grand",
            "date": "2016-07-20T15:42:03+0000",
            "content": "now that we know the problem and can trivially reproduce with randomized tests, i'm not sure it's really relevant\n\nI find explicit tests helpful because they are easier to dig into if they fail, so obvious problems can be more easily identified/fixed.\n\nI think we should commit this patch, this filter is used in several of our language analyzers so this bug might be hitting quite a lot of users? "
        },
        {
            "id": "comment-15575706",
            "author": "Adrien Grand",
            "date": "2016-10-14T15:55:41+0000",
            "content": "Hoss Man Let's commit this patch? "
        },
        {
            "id": "comment-15583280",
            "author": "Hoss Man",
            "date": "2016-10-17T20:02:16+0000",
            "content": "go for it Adrien Grand ... like i said before...\n\nSince i'm way out of my depth here i don't intend on commiting ... Anybody who understands this and thinks my patch looks good is welcome to run with it ... no need to wait for me. "
        },
        {
            "id": "comment-15584914",
            "author": "ASF subversion and git services",
            "date": "2016-10-18T08:55:15+0000",
            "content": "Commit 6df4b4d7284e649bc92fc49cb92e0b2efd0fdc2c in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6df4b4d ]\n\nLUCENE-6914: Fix issue ID in the change log. "
        },
        {
            "id": "comment-15584915",
            "author": "ASF subversion and git services",
            "date": "2016-10-18T08:55:17+0000",
            "content": "Commit 4498cc727f5a2f2db5ea8683b36a821b9b529ebb in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4498cc7 ]\n\nLUCENE-6914: Fix issue ID in the change log. "
        },
        {
            "id": "comment-15584917",
            "author": "Adrien Grand",
            "date": "2016-10-18T08:55:40+0000",
            "content": "Thanks Hoss Man. "
        },
        {
            "id": "comment-15650276",
            "author": "Shalin Shekhar Mangar",
            "date": "2016-11-09T08:38:19+0000",
            "content": "Closing after 6.3.0 release. "
        },
        {
            "id": "comment-15857796",
            "author": "Adrien Grand",
            "date": "2017-02-08T10:25:52+0000",
            "content": "Reopen for backport to 5.5.4. "
        },
        {
            "id": "comment-15857800",
            "author": "ASF subversion and git services",
            "date": "2017-02-08T10:26:26+0000",
            "content": "Commit 4355335153bacdcf3d81052e07164f2158d5e587 in lucene-solr's branch refs/heads/branch_5_5 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4355335 ]\n\nLUCENE-6914: Fix ID in the change log. "
        }
    ]
}