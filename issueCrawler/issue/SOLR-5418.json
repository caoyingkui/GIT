{
    "id": "SOLR-5418",
    "title": "Background merge after field removed from solr.xml causes error",
    "details": {
        "affect_versions": "4.5",
        "status": "Resolved",
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Problem from the user's list, cut/pasted below. Robert Muir hacked out a quick patch he pasted on the dev list, I'll append it shortly.\n\nI am working at implementing solr to work as the search backend for our web\nsystem.  So far things have been going well, but today I made some schema\nchanges and now things have broken.\n\nI updated the schema.xml file and reloaded the core (via the admin\ninterface).  No errors were reported in the logs.\n\nI then pushed 100 records to be indexed.  A call to Commit afterwards\nseemed fine, however my next call for Optimize caused the following errors:\n\njava.io.IOException: background merge hit exception:\n_2n(4.4):C4263/154 _30(4.4):C134 _32(4.4):C10 _31(4.4):C10 into _37\n[maxNumSegments=1]\n\nnull:java.io.IOException: background merge hit exception:\n_2n(4.4):C4263/154 _30(4.4):C134 _32(4.4):C10 _31(4.4):C10 into _37\n[maxNumSegments=1]\n\n\nUnfortunately, googling for background merge hit exception came up\nwith 2 thing: a corrupt index or not enough free space.  The host\nmachine that's hosting solr has 227 out of 229GB free (according to df\n-h), so that's not it.\n\n\nI then ran CheckIndex on the index, and got the following results:\nhttp://apaste.info/gmGU\n\n\nAs someone who is new to solr and lucene, as far as I can tell this\nmeans my index is fine. So I am coming up at a loss. I'm somewhat sure\nthat I could probably delete my data directory and rebuild it but I am\nmore interested in finding out why is it having issues, what is the\nbest way to fix it, and what is the best way to prevent it from\nhappening when this goes into production.\n\n\nDoes anyone have any advice that may help?\n\nI helped Matthew find the logs and he posted this stack trace:\n\n1691103929 [http-bio-8080-exec-3] INFO  org.apache.solr.update.UpdateHandler  \u00e2 start commit\n{,optimize=true,openSearcher=true,waitSearcher=true,expungeDeletes=false,softCommit=false,prepareCommit=false}\n1691104153 [http-bio-8080-exec-3] INFO  org.apache.solr.update.processor.LogUpdateProcessor  \u00e2 [dbqItems] webapp=/solr path=/update params=\n{optimize=true&_=1382999386564&wt=json&waitFlush=true}\n {} 0 224\n1691104154 [http-bio-8080-exec-3] ERROR org.apache.solr.core.SolrCore  \u00e2 java.io.IOException: background merge hit exception: _2n(4.4):C4263/154 _30(4.4):C134 _32(4.4):C10 _31(4.4):C10 into _39 [maxNumSegments=1]\n        at org.apache.lucene.index.IndexWriter.forceMerge(IndexWriter.java:1714)\n        at org.apache.lucene.index.IndexWriter.forceMerge(IndexWriter.java:1650)\n        at org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.java:530)\n        at org.apache.solr.update.processor.RunUpdateProcessor.processCommit(RunUpdateProcessorFactory.java:95)\n        at org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(UpdateRequestProcessor.java:64)\n        at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalCommit(DistributedUpdateProcessor.java:1240)\n        at org.apache.solr.update.processor.DistributedUpdateProcessor.processCommit(DistributedUpdateProcessor.java:1219)\n        at org.apache.solr.update.processor.LogUpdateProcessor.processCommit(LogUpdateProcessorFactory.java:157)\n        at org.apache.solr.handler.RequestHandlerUtils.handleCommit(RequestHandlerUtils.java:69)\n        at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:68)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1904)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:659)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:362)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:158)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1146)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:679)\nCaused by: java.lang.IllegalArgumentException: no such field what\n        at org.apache.solr.core.SchemaCodecFactory$1.getPostingsFormatForField(SchemaCodecFactory.java:59)\n        at org.apache.lucene.codecs.lucene42.Lucene42Codec$1.getPostingsFormatForField(Lucene42Codec.java:59)\n        at org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsWriter.addField(PerFieldPostingsFormat.java:102)\n        at org.apache.lucene.codecs.FieldsConsumer.merge(FieldsConsumer.java:71)\n        at org.apache.lucene.index.SegmentMerger.mergeTerms(SegmentMerger.java:365)\n        at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:98)\n        at org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:3772)\n        at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3376)\n        at org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:405)\n        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:482)",
    "attachments": {
        "SOLR-5418.patch": "https://issues.apache.org/jira/secure/attachment/12611760/SOLR-5418.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13811976",
            "date": "2013-11-02T13:20:00+0000",
            "content": "Patch constructed from cut-n-paste of Robert's quick code change on the dev list.\n\nWarning, it's cut/paste, not generated from svn so be warned.... "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13812088",
            "date": "2013-11-02T17:58:56+0000",
            "content": "Here is the patch from my svn checkout.\n\nI sent it to the list really quick just to get an opinion on it. I don't remember why the current checks were added. I guess I can see a line of reasoning that its good for the user to know they are dragging unused shit around in their index.\n\nAnd I can agree with that, but I don't think its the job of the codec to fail a background merge to communicate such a thing to the user.\n\nSuch a warning/failure could be implemented in other ways, for example a warmer in the example for \"firstSearcher\" event that looks at fieldinfos and warns or fails \"YOU ARE DRAGGING AROUND BOGUS STUFF IN YOUR INDEX\" if it finds things that don't match to the schema or something like that: and it would be easy for users to enable/disable. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13812094",
            "date": "2013-11-02T18:07:18+0000",
            "content": "Thanks Robert! Mostly I was making sure I didn't lose anything....\n\n\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13813020",
            "date": "2013-11-04T17:12:15+0000",
            "content": "Well, this is annoying. I can generate this failure easily enough with running stock Solr (trunk or 4x), but I can't seem to get a test case to fail inside or outside of IntelliJ. \n\nI've tracked creating two separate segments (forced disk index). They are being merged into one. But in the test case, it's not getting to the code that Robert changed. I've verified that I am successfully changing the schema (tried to index a second doc with the removed field and it fails in the IDE).\n\nSo I can easily enough reproduce the problem, but I'm having difficulty making a test case. I want a verified failure before I apply the patch...\n\nI'm in the midst of seeing if our test suite ever hits the code in question (Siigggh. Back to debugging by println).\n\nAny pointers gratefully received.\n\nErick "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13813045",
            "date": "2013-11-04T17:45:04+0000",
            "content": "Apparently, NONE of our test code hits the code in question. I notice that this is a 4.6 codec, am I missing something obvious here? Well of course I am. I just wish I knew what it was. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13813404",
            "date": "2013-11-04T23:18:18+0000",
            "content": "Patch back with a test. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13813405",
            "date": "2013-11-04T23:20:26+0000",
            "content": "Put entry in CHANGES.txt "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13813407",
            "date": "2013-11-04T23:21:45+0000",
            "content": "Commit 1538802 from Erick Erickson in branch 'dev/trunk'\n[ https://svn.apache.org/r1538802 ]\n\nFix for SOLR-5418, merge after altering schema produces error "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13813517",
            "date": "2013-11-05T01:23:22+0000",
            "content": "Commit 1538848 from Erick Erickson in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1538848 ]\n\nFix for SOLR-5418, merge after altering schema produces error "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13813546",
            "date": "2013-11-05T01:54:22+0000",
            "content": "Thanks Matthew and Robert! "
        }
    ]
}