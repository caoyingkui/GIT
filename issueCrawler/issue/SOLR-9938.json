{
    "id": "SOLR-9938",
    "title": "Improve the performance of CloudSolrStream",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Now that we have started to improve the efficiency of Streaming, I think it makes sense to work on CloudSolrStream, which is used as a bulk stream source.\n\nThe first thing to tackle is how the merge sort of the SolrStreams from each shard is done.\n\nCurrently the sorting is done by a TreeSet, which is not the most efficient approach. For one thing each put and poll on the TreeSet creates a new map Entry. When streaming millions of documents this adds up. Also the TreeSet is backed by a TreeMap that maintains a fully ordered set of tuples. We just need to know the highest Tuple on each read().\n\nI think we can increase throughput significantly by using a custom priority queue for sorting rather then the TreeSet.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}