{
    "id": "SOLR-2328",
    "title": "HTMLStripCharFilter Leaves Broken HTML Tags",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Some kinds of 'bad' HTML are missed by HTMLStripCharFilter.   For example, the following invalid HTML:\n     <a href=\\\"http://www.twitter.com/ceonyc\\\"@ceonyc</a>\n\nIs filtered to:\n     <a href=\"http://www.twitter.com/ceonyc\"@ceonyc\n\nI understand the challenge here, without the end > it's tough to know what to do.  It turns out that real-world web pages are full of this kind of garbage HTML, and browsers (impressively!) seem to handle this quite gracefully.   \n\nPlus, users in my app can search for 'href' and find lots of matches (that don't appear to contain 'href') as a result.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Robert Muir",
            "id": "comment-13043745",
            "date": "2011-06-03T16:46:51+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106419",
            "date": "2011-09-16T14:50:59+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13237058",
            "date": "2012-03-23T20:31:36+0000",
            "content": "Bulk changing fixVersion 3.6 to 4.0 for any open issues that are unassigned and have not been updated since March 19.\n\nEmail spam suppressed for this bulk edit; search for hoss20120323nofix36 to identify all issues edited "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412152",
            "date": "2012-07-11T22:26:11+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429822",
            "date": "2012-08-07T03:43:20+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13451047",
            "date": "2012-09-07T22:08:35+0000",
            "content": "removing fixVersion=4.0 because there is no patch, no assignee, and no evidence that anyone is currently working on this issue. (this can certainly be revisited if volunteers step forward) "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16067361",
            "date": "2017-06-28T22:24:20+0000",
            "content": "Closing ancient issue as \"cannot reproduce\".\nIf anyone can illustrate that this is a real problem with real HTML content out there, then please re-open this issue and include steps to reproduce and suggestions for how to fix. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-16067483",
            "date": "2017-06-29T00:03:10+0000",
            "content": "Reopening to change the resolution.\n\nI added this test to HTMLStripCharFilterTest and it succeeded, so this bug  is absolutely reproducible:\n\nedit: changed to remove the reserved tag handling:\n\n\n  public void testSOLR2328() throws Exception {\n    String test = \"<a href=\\\"http://www.twitter.com/ceonyc\\\"@ceonyc</a>\";\n    String gold =  \"<a href=\\\"http://www.twitter.com/ceonyc\\\"@ceonyc\";\n    assertHTMLStripsTo(test, gold, Collections.emptySet());\n    String test2 = \"<a href=\\\\\\\"http://www.twitter.com/ceonyc\\\\\\\"@ceonyc</a>\";\n    String gold2 =  \"<a href=\\\"http://www.twitter.com/ceonyc\\\"@ceonyc\";\n    assertHTMLStripsTo(test, gold, Collections.emptySet());\n  }\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16067503",
            "date": "2017-06-29T00:23:09+0000",
            "content": "The resolution choice was not to mean that the given example is actually handled by Solr, but rather to question whether the filter should be modified to handle all kinds of invalid HTML. There are a million ways people can mis-type HTML markup and I think it would be wrong to try to guess - it would probably introduce other bugs.\n\nSo my reason to close this was more to question whether this exact example is such a common one that causes so much pain in real search indexes that it warrants a special fix.\n\nMy take is that HTMLStripCF should strip real HTML, and if anyone wants a more fuzzy filter, then the right cure is to create a new one, e.g. HTMLStripLenientCharFilter using https://jsoup.org/ or similar existing stuff. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-16067532",
            "date": "2017-06-29T00:56:50+0000",
            "content": "The resolution choice was not to mean that the given example is actually handled by Solr, but rather to question whether the filter should be modified to handle all kinds of invalid HTML. There are a million ways people can mis-type HTML markup and I think it would be wrong to try to guess - it would probably introduce other bugs.\n\n+1\n\nSo my reason to close this was more to question whether this exact example is such a common one that causes so much pain in real search indexes that it warrants a special fix.\n\nI think it's reasonable to resolve it; I just think \"Can't Reproduce\" is the wrong resolution.  I've taken the liberty of resolving as \"Won't Fix\".  Please re-open and re-resolve if this seems inappropriate.\n\nMy take is that HTMLStripCF should strip real HTML, and if anyone wants a more fuzzy filter, then the right cure is to create a new one, e.g. HTMLStripLenientCharFilter using https://jsoup.org/ or similar existing stuff.\n\nI don't know if lenient is the correct term here.  I saved <html><body><a href=\"http://www.twitter.com/ceonyc\"@ceonyc</a></body></html> as an HTML file and Safari, Chrome and Firefox all showed nothing at all.  Is it better or more lenient to exclude the possibility of tokenizing @ceonyc?  I don't know.  It can be difficult to know where the trash ends and the treasure begins. "
        }
    ]
}