{
    "id": "LUCENE-2122",
    "title": "Use JUnit4 capabilites for more thorough Locale testing for classes deriving from LocalizedTestCase",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/build"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "3.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Use the @Parameterized capabilities of Junit4 to allow more extensive testing of Locales.",
    "attachments": {
        "LUCENE-2122-r2.patch": "https://issues.apache.org/jira/secure/attachment/12427119/LUCENE-2122-r2.patch",
        "LUCENE-2122-r3.patch": "https://issues.apache.org/jira/secure/attachment/12427261/LUCENE-2122-r3.patch",
        "LUCENE-2122-r4.patch": "https://issues.apache.org/jira/secure/attachment/12427555/LUCENE-2122-r4.patch",
        "LUCENE-2122.patch": "https://issues.apache.org/jira/secure/attachment/12427112/LUCENE-2122.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-12-06T22:19:48+0000",
            "content": "All tests pass. This modifies all test classes (core and contrib) that derive from LocalizedTestCase. LocalizedTestCase now tests all test methods in all derived classes against all available Locales.\n\nIf we want some of the tests to NOT run against all locales, we'd need to refactor them into their own test class.... ",
            "author": "Erick Erickson",
            "id": "comment-12786723"
        },
        {
            "date": "2009-12-07T00:59:11+0000",
            "content": "Hi Erick, I am a little nervous about the change to LocalizedTestCase.tearDown() here.\n\nI think we must restore the users default Locale, since its a JRE-system wide global thing and we are changing it on the fly here.\n\nthis was stashed away here before:\n\n /**\n   * Before changing the default Locale, save the default Locale here so that it\n   * can be restored.\n   */\n  private final Locale defaultLocale = Locale.getDefault();\n\n\n\nand restored in tearDown()... otherwise strange things could happen, such as your IDE could go bonkers after running the tests! (but maybe I am missing something) ",
            "author": "Robert Muir",
            "id": "comment-12786749"
        },
        {
            "date": "2009-12-07T01:47:29+0000",
            "content": "Restoring original default Locale after test class has been run.\n\nThanks Robert! ",
            "author": "Erick Erickson",
            "id": "comment-12786752"
        },
        {
            "date": "2009-12-07T02:01:30+0000",
            "content": "Erick do you think LocalizedTestCase should be abstract? ",
            "author": "Robert Muir",
            "id": "comment-12786757"
        },
        {
            "date": "2009-12-08T00:49:15+0000",
            "content": "Made LocalizedTestCase abstract... ",
            "author": "Erick Erickson",
            "id": "comment-12787223"
        },
        {
            "date": "2009-12-09T14:12:04+0000",
            "content": "Hi Erick, in the Date tools test I think you can delete the public static Collection<Locale[]> data(), I think you might have accidentally included it? ",
            "author": "Robert Muir",
            "id": "comment-12788100"
        },
        {
            "date": "2009-12-10T02:26:49+0000",
            "content": "OK, I plead advanced senility or some other excuse for the last patch.\n\nRobert:\nThanks so much for looking this over, I have no clue what I was thinking with the TestDateTools. Or the other classes that derive from LocalizedTestCase.\n\nThe @Parameterized and @RunWith only needed to be in LocalizedTestCase and all the inheriting classes just rely on the base class to collect the different locales.\n\nAnyway, this one should be much better....\n\nErick ",
            "author": "Erick Erickson",
            "id": "comment-12788452"
        },
        {
            "date": "2009-12-10T02:43:39+0000",
            "content": "thanks Erick, i will play around with the patch some, generally just double-check the locale stuff is doing what we want, looks like it will.\n\ni havent tested yet, but looking at the code i have a few questions (i can try to add these to the patch just curious what you think):\n1. if a test fails under some locale, say th_TH, will junit 4 attempt to print this parameter out in some way so I know that it failed? If not do you know of a hack?\n2. i am thinking about reordering the locale array so that it tests the default one first. if you are trying to do some test-driven dev it might be strange if the test fails under a different locale first. I think this one is obvious, I will play with it to see how it behaves now. ",
            "author": "Robert Muir",
            "id": "comment-12788455"
        },
        {
            "date": "2009-12-10T20:09:51+0000",
            "content": "Hi Erick, I played with this patch some and (not intentionally trying) I would get random test failures for TestQueryParser under eclipse... its not really something I am able to repeat though.\n\nmaybe some race condition (I do not know how eclipse executes parameterized tests).... ? \n\nif it is a problem with my IDE that is one thing, just makes me a little nervous right now. trying to think what could cause this.... ",
            "author": "Robert Muir",
            "id": "comment-12788884"
        },
        {
            "date": "2009-12-12T13:46:30+0000",
            "content": "Hi Erick, I spent some time with this patch today and here is what happened:\n\n1. i tried to simplify localizedtestcase, so that it works just like the old one, with the exception of using junit4 parameterized facility.\n2. i wrote some bad tests and ensured things worked well such as error messages, default locale being run first, etc etc.\n3. i had everything good to go when i got random failures again, this time from 'ant clean test' about 3 times (pass,fail,pass)\n(sorry i should have done something to capture each test log but i did not)\n\nbecause the only real change here is use of the parameterized facility (the logic is the same), it makes me think that we should stick with .runBare() for the time being, because there is something strange going on here and I'm not even trying to break it.\n\nattached is the modified version of your patch. ",
            "author": "Robert Muir",
            "id": "comment-12789739"
        },
        {
            "date": "2009-12-12T13:54:21+0000",
            "content": "i am unassigning in case someone else can figure this one out, at my wits end here \nperhaps its just something wierd about my environment or something ",
            "author": "Robert Muir",
            "id": "comment-12789742"
        },
        {
            "date": "2009-12-13T02:13:26+0000",
            "content": "btw, I left 'ant clean test' running in a loop and just checked it with this patch, no problems.\nso perhaps its my own incompetence. Erick can you take a look? Do you see some obvious problem? ",
            "author": "Robert Muir",
            "id": "comment-12789837"
        },
        {
            "date": "2009-12-24T18:13:49+0000",
            "content": "Robert:\n\nWhere are we on this? Last I knew your test problems had disappeared, but memory can be tricky.... ",
            "author": "Erick Erickson",
            "id": "comment-12794471"
        },
        {
            "date": "2009-12-26T16:11:08+0000",
            "content": "Erick the test problems havent gone away (see latest hudson  failure), but as you can see they appear to be unrelated to your patch, but existing problems.\n\nI am glad Uwe and Hudson are now seeing the failures I saw, but unfortunately I am unable to reproduce this problem. I think it is very wierd that it only recently has started happening and the Junit 4 jar file is looking very  suspicious to me \n\nThe next step is to force another test failure (with existing trunk code), except with an additional assertion in TestQueryParser.getParser(), that asserts that the created queryparser has the same Locale as LocalizedTestcase.locale\n\nIf this assertion is not triggered, and a failure happens anyway, then there is no problem with LocalizedTestCase and we should commit your patch. This would mean the problem is instead some problem in the query parser, its tests, date calculations, jvm handling of thai dates, something else, but not the locale-switching.\n\nif the assertion is triggered, then we need to figure how why before changing the locale-swapping mechanism.\n\nI ran this test 2500 times last night but i couldnt make it fail. i have a very small portable right now and I will need to wait till the new year to really look at this more... ",
            "author": "Robert Muir",
            "id": "comment-12794629"
        },
        {
            "date": "2009-12-26T17:05:58+0000",
            "content": "Some additional infos about the Hudson failure:\nIn the past Hudson used an internal junit.jar to do the testing, which was in version 4 (the exact version can only be found out by one with hudson access, Mike?). So Hudson was always using Junit4 for testing even in Lucene 2.9. After the clover updates, we removed this JUnit lib path from the ANT command line and therefore also hudson uses 4.7 as shipped with the svn checkout.\n\nIf it is really a JUnit problem, it seems to only occur with version 4.7. But I am not sure, I still stink it may be a thread starvation problem (slow test) or some local time problem that occurred two nights ago. ",
            "author": "Uwe Schindler",
            "id": "comment-12794635"
        },
        {
            "date": "2009-12-26T18:06:25+0000",
            "content": "I would be curious to know the previous version of the junit jar file that Hudson was using, if anyone can figure this out. \n\nI do not want to quickly blame junit or jvm, etc, but its very suspicious that this only recently started happening, and only sporadically for thai locale with the query parser.\n\nthis will be a tricky one to figure out for sure. ",
            "author": "Robert Muir",
            "id": "comment-12794639"
        },
        {
            "date": "2013-07-23T18:44:44+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717046"
        },
        {
            "date": "2014-04-16T12:54:25+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970749"
        }
    ]
}