{
    "id": "LUCENE-4529",
    "title": "TestStressIndexing2 failure",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "4.0,                                            4.1,                                            6.0",
        "priority": "Blocker",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Bad news: flonking just failed with\n\n\nBuild: builds.flonkings.com/job/Lucene-trunk-Linux-Java6-64-test-only/11913/\n\n1 tests failed.\nREGRESSION:  org.apache.lucene.index.TestStressIndexing2.testMultiConfig\n\nError Message:\nr1 is not empty but r2 is\n\nStack Trace:\njava.lang.AssertionError: r1 is not empty but r2 is\n        at __randomizedtesting.SeedInfo.seed([1A76D53A93A4ACAE:D7E4A3E23EF2B3E0]:0)\n        at org.junit.Assert.fail(Assert.java:93)\n        at org.apache.lucene.index.TestStressIndexing2.verifyEquals(TestStressIndexing2.java:341)\n        at org.apache.lucene.index.TestStressIndexing2.verifyEquals(TestStressIndexing2.java:278)\n        at org.apache.lucene.index.TestStressIndexing2.testMultiConfig(TestStressIndexing2.java:127)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:79)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:737)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:773)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:787)\n        at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n        at org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:51)\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n        at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n        at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:782)\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:442)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:746)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:648)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:682)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:693)\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n        at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n        at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n        at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\n        at java.lang.Thread.run(Thread.java:662)\n\n\n\n\nBuild Log:\n[...truncated 212 lines...]\n[junit4:junit4] Suite: org.apache.lucene.index.TestStressIndexing2\n[junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestStressIndexing2 -Dtests.method=testMultiConfig -Dtests.seed=1A76D53A93A4ACAE -Dtests.slow=true -Dtests.locale=ja_JP -Dtests.timezone=SystemV/PST8 -Dtests.file.encoding=US-ASCII\n[junit4:junit4] FAILURE 1.08s J5 | TestStressIndexing2.testMultiConfig <<<\n[junit4:junit4]    > Throwable #1: java.lang.AssertionError: r1 is not empty but r2 is\n[junit4:junit4]    >    at __randomizedtesting.SeedInfo.seed([1A76D53A93A4ACAE:D7E4A3E23EF2B3E0]:0)\n[junit4:junit4]    >    at org.junit.Assert.fail(Assert.java:93)\n[junit4:junit4]    >    at org.apache.lucene.index.TestStressIndexing2.verifyEquals(TestStressIndexing2.java:341)\n[junit4:junit4]    >    at org.apache.lucene.index.TestStressIndexing2.verifyEquals(TestStressIndexing2.java:278)\n[junit4:junit4]    >    at org.apache.lucene.index.TestStressIndexing2.testMultiConfig(TestStressIndexing2.java:127)\n[junit4:junit4]    >    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n[junit4:junit4]    >    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n[junit4:junit4]    >    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n[junit4:junit4]    >    at java.lang.reflect.Method.invoke(Method.java:597)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:79)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:737)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:773)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:787)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:51)\n[junit4:junit4]    >    at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:782)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:442)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:746)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:648)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:682)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:693)\n[junit4:junit4]    >    at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n[junit4:junit4]    >    at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    >    at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\n[junit4:junit4]    >    at java.lang.Thread.run(Thread.java:662)\n[junit4:junit4]   2> NOTE: test params are: codec=Lucene41: {f57=Lucene41(blocksize=128), f8=PostingsFormat(name=MockRandom), f10=PostingsFormat(name=NestedPulsing), f23=PostingsFormat(name=Memory doPackFST= true), f22=PostingsFormat(name=MockRandom), f77=PostingsFormat(name=MockRandom), f25=PostingsFormat(name=NestedPulsing), f87=PostingsFormat(name=NestedPulsing), f62=PostingsFormat(name=MockRandom), f89=PostingsFormat(name=Memory doPackFST= true), f63=PostingsFormat(name=Memory doPackFST= true), f82=Lucene41(blocksize=128), f19=PostingsFormat(name=MockRandom), f65=PostingsFormat(name=NestedPulsing), f56=PostingsFormat(name=Memory doPackFST= true), f85=PostingsFormat(name=Memory doPackFST= true), f54=PostingsFormat(name=NestedPulsing), f17=Lucene41(blocksize=128), f81=PostingsFormat(name=Memory doPackFST= true), id=PostingsFormat(name=Memory doPackFST= true), f80=PostingsFormat(name=MockRandom), f91=PostingsFormat(name=MockRandom), f95=PostingsFormat(name=MockRandom), f5=PostingsFormat(name=Memory doPackFST= true)}, sim=RandomSimilarityProvider(queryNorm=true,coord=crazy): {f57=DFR I(n)B2, f8=DFR G2, f10=DFR I(F)B2, f23=DFR I(n)L2, f22=DFR I(ne)L2, f77=IB SPL-L1, f25=IB LL-L2, f87=DFR I(F)Z(0.3), f62=IB SPL-DZ(0.3), f63=DFR G1, f89=DFR G1, f82=DFR I(n)1, f19=DFR I(n)LZ(0.3), f56=DFR GBZ(0.3), f17=DFR I(n)2, f54=DFR I(F)B1, f80=DFR I(F)L1, f91=DFR I(n)3(800.0), f95=DFR I(n)3(800.0), f5=DFR I(n)B1}, locale=ja_JP, timezone=SystemV/PST8\n[junit4:junit4]   2> NOTE: Linux 3.2.0-26-generic amd64/Sun Microsystems Inc. 1.6.0_33 (64-bit)/cpus=8,threads=1,free=226266176,total=247922688\n[junit4:junit4]   2> NOTE: All tests run in this JVM: [TestSubScorerFreqs, TestTermScorer, TestLucene40PostingsFormat, TestWindowsMMap, TestVersionComparator, TestCompoundFile, TestPayloads, TestTermsEnum2, TestPagedBytes, TestStressIndexing2]\n[junit4:junit4] Completed on J5 in 2.81s, 3 tests, 1 failure <<< FAILURES!\n\n\n\nGood news: the seed reproduces for me 3 out 4 runs \n\n\nant test-core  -Dtestcase=TestStressIndexing2 -Dtests.method=testMultiConfig -Dtests.seed=1A76D53A93A4ACAE -Dtests.slow=true -Dtests.locale=ja_JP -Dtests.timezone=SystemV/PST8 -Dtests.file.encoding=US-ASCII",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-11-02T22:22:25+0000",
            "content": "I locally reverted my commit from LUCENE-4515 and it doesn't fail. I will digg :/ ",
            "author": "Simon Willnauer",
            "id": "comment-13489796"
        },
        {
            "date": "2012-11-02T23:20:27+0000",
            "content": "I really can reproduce this almost every time. Yet, with the patch below it passes. But I really don't know why yet - need some sleep...\n\n\nIndex: core/src/java/org/apache/lucene/index/TermsHash.java\n===================================================================\n--- core/src/java/org/apache/lucene/index/TermsHash.java\t(revision 1405133)\n+++ core/src/java/org/apache/lucene/index/TermsHash.java\t(working copy)\n@@ -90,7 +90,7 @@\n   // Clear all state\n   void reset() {\n     // we don't reuse so we drop everything and don't fill with 0\n-    intPool.reset(false, false);\n+    intPool.reset(false, !primary); // reuse first buffer if we are not the primary? WHY?\n     bytePool.reset(false, false);\n   }\n \n\n ",
            "author": "Simon Willnauer",
            "id": "comment-13489831"
        },
        {
            "date": "2012-11-03T07:25:55+0000",
            "content": "FYI I reverted this change until we figured out what is going on and why. in rev 1405300 (trunk) and 1405301 (branch_4x) ",
            "author": "Simon Willnauer",
            "id": "comment-13489960"
        },
        {
            "date": "2012-11-03T16:10:06+0000",
            "content": "OK this is really, really strange ... but it turns out this is a test bug (test was ignoring deleted docs when checking if the first index is \"empty\"); here's this fix:\n\nIndex: src/test/org/apache/lucene/index/TestStressIndexing2.java\n===================================================================\n--- src/test/org/apache/lucene/index/TestStressIndexing2.java\t(revision 1405317)\n+++ src/test/org/apache/lucene/index/TestStressIndexing2.java\t(working copy)\n@@ -334,9 +334,10 @@\n     if (fields == null) {\n       // make sure r1 is in fact empty (eg has only all\n       // deleted docs):\n+      Bits liveDocs = MultiFields.getLiveDocs(r1);\n       DocsEnum docs = null;\n       while(termsEnum.next() != null) {\n-        docs = _TestUtil.docs(random(), termsEnum, null, docs, 0);\n+        docs = _TestUtil.docs(random(), termsEnum, liveDocs, docs, 0);\n         while(docs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n           fail(\"r1 is not empty but r2 is\");\n         }\n\n\n\nWith that patch everything passes again with false, false ... but then ... why would tweaking those boolean flags to reset cause this test bug to be tickled?  Still digging ... ",
            "author": "Michael McCandless",
            "id": "comment-13490047"
        },
        {
            "date": "2012-11-03T21:33:47+0000",
            "content": "\nOK I was able to repro this failure even with \"false, false\" removed\nto int/bytePool.reset:\n\n\nant test -Dtestcase=TestStressIndexing2 -Dtestmethod=testMultiConfig -Dtests.seed=FDD002B1EC45D646 -Dtests.iters=10\n\n\n\nSo I think this was just a seed shift (I suspect because we flush at\ndifferent times due to different RAM usage by keeping vs not keeping\nthe first buffer).\n\nI did notice a small related issue: we were not nulling out buffers[0]\nif reuseFirst was false.\n\nI'll commit the test fix and nulling the buffers... ",
            "author": "Michael McCandless",
            "id": "comment-13490107"
        },
        {
            "date": "2013-03-22T16:20:33+0000",
            "content": "[branch_4x commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1405434\n\nLUCENE-4529: don't need to null first buffer ... it's done by Arrays.fill above ",
            "author": "Commit Tag Bot",
            "id": "comment-13610601"
        },
        {
            "date": "2013-03-22T16:20:39+0000",
            "content": "[branch_4x commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1405426\n\nLUCENE-4529: fix test bug, null out the first buffer in Int/ByteBlockPool on reset ",
            "author": "Commit Tag Bot",
            "id": "comment-13610602"
        },
        {
            "date": "2013-03-22T16:20:46+0000",
            "content": "[branch_4x commit] Simon Willnauer\nhttp://svn.apache.org/viewvc?view=revision&revision=1405301\n\nLUCENE-4529: call default reset in TermsHash until we found the cause of the issue ",
            "author": "Commit Tag Bot",
            "id": "comment-13610604"
        }
    ]
}