{
    "id": "LUCENE-8171",
    "title": "Geo3dShapeWGS84ModelRectRelationTest test failure",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Test",
        "components": [],
        "fix_versions": [
            "6.7",
            "7.3",
            "master (8.0)"
        ]
    },
    "description": "It reproduces with ant test  -Dtestcase=Geo3dShapeWGS84ModelRectRelationTest -Dtests.method=testGeoPathRect -Dtests.seed=1257A8E5FDB03055 -Dtests.slow=true -Dtests.locale=sq -Dtests.timezone=America/Monterrey -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1:\n\n\n   [junit4] Suite: org.apache.lucene.spatial.spatial4j.Geo3dShapeWGS84ModelRectRelationTest\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=Geo3dShapeWGS84ModelRectRelationTest -Dtests.method=testGeoPathRect -Dtests.seed=1257A8E5FDB03055 -Dtests.slow=true -Dtests.locale=sq -Dtests.timezone=America/Monterrey -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   0.69s | Geo3dShapeWGS84ModelRectRelationTest.testGeoPathRect <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Couldn't come up with a plane through three points that included the fourth\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([1257A8E5FDB03055:5B0183E4DD0431E2]:0)\n   [junit4]    > \tat org.apache.lucene.spatial3d.geom.GeoStandardPath$SegmentEndpoint.<init>(GeoStandardPath.java:603)\n   [junit4]    > \tat org.apache.lucene.spatial3d.geom.GeoStandardPath.done(GeoStandardPath.java:186)\n   [junit4]    > \tat org.apache.lucene.spatial3d.geom.GeoStandardPath.<init>(GeoStandardPath.java:68)\n   [junit4]    > \tat org.apache.lucene.spatial3d.geom.GeoPathFactory.makeGeoPath(GeoPathFactory.java:39)\n   [junit4]    > \tat org.apache.lucene.spatial.spatial4j.Geo3dShapeFactory$Geo3dLineStringBuilder.build(Geo3dShapeFactory.java:285)\n   [junit4]    > \tat org.apache.lucene.spatial.spatial4j.ShapeRectRelationTestCase$4.generateRandomShape(ShapeRectRelationTestCase.java:179)\n   [junit4]    > \tat org.locationtech.spatial4j.shape.RectIntersectionTestHelper.testRelateWithRectangle(RectIntersectionTestHelper.java:98)\n   [junit4]    > \tat org.apache.lucene.spatial.spatial4j.ShapeRectRelationTestCase.testGeoPathRect(ShapeRectRelationTestCase.java:199)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]   2> NOTE: test params are: codec=Lucene70, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@3595d2c2), locale=sq, timezone=America/Monterrey\n   [junit4]   2> NOTE: Linux 4.4.0-104-generic amd64/Oracle Corporation 9.0.1 (64-bit)/cpus=12,threads=1,free=134432384,total=260046848\n   [junit4]   2> NOTE: All tests run in this JVM: [Geo3dShapeWGS84ModelRectRelationTest]\n   [junit4] Completed [1/1 (1!)] in 0.86s, 1 test, 1 error <<< FAILURES!",
    "attachments": {
        "LUCENE-8171.patch": "https://issues.apache.org/jira/secure/attachment/12910361/LUCENE-8171.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16362019",
            "date": "2018-02-13T09:12:03+0000",
            "content": "I have a quick look at the issue and it seems the problem comes from the way planes from three points are constructed. Attached is a random test with an extreme case, two points very close together and one far way, it fails to construct the plane. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16362155",
            "date": "2018-02-13T11:15:40+0000",
            "content": "I won't have a chance, once again, to look at this until the weekend. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16362325",
            "date": "2018-02-13T13:35:55+0000",
            "content": "The code in question does call the improved two-vector cross-product Vector constructor, but it makes no attempt to optimize the numerically best choice of vectors (there are in fact two choices for how those are chosen):\n\n\n  /** Construct a sided plane from three points.\n   */\n  public static SidedPlane constructNormalizedThreePointSidedPlane(final Vector insidePoint,\n    final Vector point1, final Vector point2, final Vector point3) {\n    try {\n      final Vector planeNormal = new Vector(\n        new Vector(point1.x - point2.x, point1.y - point2.y, point1.z - point2.z),\n        new Vector(point2.x - point3.x, point2.y - point3.y, point2.z - point3.z));\n      return new SidedPlane(insidePoint, planeNormal, -planeNormal.dotProduct(point2));\n    } catch (IllegalArgumentException e) {\n      return null;\n    }\n  }\n\n\n\nThe obvious improvement is to try the other one if the first try doesn't work. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16362380",
            "date": "2018-02-13T14:17:00+0000",
            "content": "The naive fix did not work on the original failure, nor on the supplied test case. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16362427",
            "date": "2018-02-13T14:47:47+0000",
            "content": "It turns out that the failure is occurring because the magnitude is less than the minimum distance:\n\n\n    // Compute the naive perpendicular\n    final double thisX = AY * BZ - AZ * BY;\n    final double thisY = AZ * BX - AX * BZ;\n    final double thisZ = AX * BY - AY * BX;\n    \n    final double magnitude = magnitude(thisX, thisY, thisZ);\n    if (magnitude < MINIMUM_RESOLUTION) {\n      // This gets thrown\n      throw new IllegalArgumentException(\"Degenerate/parallel vector constructed\");\n    }\n\n\n\nWe could try to disable this check, I suppose, in hopes that the downstream code would still work unless it really just can't converge.  But it worries me that the points being constructed show up as parallel/degenerate. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16362433",
            "date": "2018-02-13T14:53:31+0000",
            "content": "Commit 4f351fd21bdbec2bf6a27bb6014bb1d8e511ee92 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4f351fd ]\n\nLUCENE-8171: Refactor vector constructor to support later changes, and add an ignored test for a precision issue. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16362435",
            "date": "2018-02-13T14:54:15+0000",
            "content": "Commit ee968109f3d487ef44923cdc5dc05f7d397ff67d in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ee96810 ]\n\nLUCENE-8171: Refactor vector constructor to support later changes, and add an ignored test for a precision issue. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16362437",
            "date": "2018-02-13T14:54:52+0000",
            "content": "Commit 2cdb57b7dc008fa7d18b1658722138436f047dbb in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2cdb57b ]\n\nLUCENE-8171: Refactor vector constructor to support later changes, and add an ignored test for a precision issue. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16362466",
            "date": "2018-02-13T15:13:40+0000",
            "content": "I committed a minor refactoring \u2013 it doesn't change the broken behavior, which I will look further at only when I can get some time. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16362491",
            "date": "2018-02-13T15:31:23+0000",
            "content": "Commit dd08400a3db1c4119a704610ccc4db0d055d8d7f in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dd08400 ]\n\nLUCENE-8171: Check only for exactly zero magnitude vector, and otherwise let the iterative code try to converge. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16362494",
            "date": "2018-02-13T15:32:08+0000",
            "content": "Commit 9d222fc7c7e33f8deb192227d703f00edd8e38ce in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9d222fc ]\n\nLUCENE-8171: Check only for exactly zero magnitude vector, and otherwise let the iterative code try to converge. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16362496",
            "date": "2018-02-13T15:32:31+0000",
            "content": "Commit 2de7a05f34e8e7a5a8a345c0d68e24be179f7f2c in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2de7a05 ]\n\nLUCENE-8171: Check only for exactly zero magnitude vector, and otherwise let the iterative code try to converge. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16362738",
            "date": "2018-02-13T17:55:36+0000",
            "content": "Commit 6b6927ea6fc6fa4c338716d7dd5a12f5799e7db2 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6b6927e ]\n\nLUCENE-8171: Remove unused import. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16362769",
            "date": "2018-02-13T18:13:07+0000",
            "content": "Commit 6c54f9f752bf4f01443e59a9f919d30268c7bd2c in lucene-solr's branch refs/heads/branch_7x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6c54f9f ]\n\nLUCENE-8171: Remove unused import. ",
            "author": "ASF subversion and git services"
        }
    ]
}