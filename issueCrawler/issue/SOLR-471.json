{
    "id": "SOLR-471",
    "title": "Distributed Solr Client",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "clients - java"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Inspired by memcached java clients.\nThe ability to update/search/delete among many solr instances\nClient parametters:\n\n\tList of solr servers\n\tNumber of replicas\n\n\n\nClient functions:\n\n\tUpdate: using consistent hashing to determine what documents are going to be stored in what server. Get the list of servers (equal to number of replicas) and issue parallel UPDATE\n\tSearch: parallel search all servers, aggregate distinct results\n\tDelete: parallel delete in all servers",
    "attachments": {
        "distributedclient.patch": "https://issues.apache.org/jira/secure/attachment/12374837/distributedclient.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Nguyen Kien Trung",
            "id": "comment-12565999",
            "date": "2008-02-06T03:20:51+0000",
            "content": "\n\tChanged method toString() and override hashCode(), equals() in SolrDocument model. These modifications are to filter unique SolrDocument objects in a set\n\tCreated test cases to setup multiple SolrHttpServers and perform update/delete/query operations\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12566144",
            "date": "2008-02-06T14:56:35+0000",
            "content": "Hi Trung, have you had a look at SOLR-303 ?\nIt implements distributed search in Solr itself... I think that may have a couple of advantages:\n\n\tif it's in Solr, any type of client can use it\n\tpossible (but not easy) for custom components to be distributed\n\taccess to schema for proper sorting\n\teasier multi-tier distributed search\n\n\n\nI've been thinking about the indexing side recently too.  Longer term we need something very robust (fault tolerant on the indexing side, ability to resize the server pool, ability to self-synchronize among shards, etc,).  In the short term I was thinking of something that simply fanned out requests to a list of servers based on a simple hash (no need for consistent hash in this simple scheme).  I originally thought about having this simple fan-out indexer reside outside solr, but it occured to me that if we wanted to support all of Solr's input types (multi-doc XML, CSV, etc) that it should probably happen inside solr after the doc had been parsed. "
        },
        {
            "author": "Nguyen Kien Trung",
            "id": "comment-12566666",
            "date": "2008-02-07T16:22:15+0000",
            "content": "Thanks Yonik. Actually I did have a glance at SOLR-303\nAs I'm doing a Java project which requires interaction with multiple customized-solr instances and it happened to me that the requirement was not meet with the solution which SOLR-303 offers, so I made the workaround with the thought that the patch may be helpful to those who are having same situation like me. \n\nI'm quite new to solr but very excited with the promising features that solr is going to achieve "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13581725",
            "date": "2013-02-19T23:02:56+0000",
            "content": "Closing old issue, please re-open if necessary. No longer needed since SolrCloud implements this. "
        }
    ]
}