{
    "id": "SOLR-12970",
    "title": "Inconsistency between VariableResolver returning \"\" and FieldStreamDataSource testing for null",
    "details": {
        "type": "Bug",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "priority": "Minor",
        "resolution": "Unresolved",
        "affect_versions": "7.5"
    },
    "description": "If one mistype dataField, we should get an error \"No field available for name : \"\n\nInstead you get a mystic\u00a0\u00a0\"unsupported type : class java.lang.String\"\n\n\u00a0\n\nin FieldStreamDataSource.java\nhttps://github.com/apache/lucene-solr/blob/master/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java\n\nl. 63, if (o == null) {\n the code is testing if the freshly returned o is null\n\n\nBut in VariableResolver.java \n(https://github.com/apache/lucene-solr/blob/master/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver.java)\npublic Object resolve(String name) {\nl 118 : return r == null ? \"\" : r;\n\nIf field cannot be resolved, resolve() returns \"\" instead of null. But getData() is expecting null if unresolved and throw a more explanary error l. 64 throw new DataImportHandlerException(SEVERE, \"No field available for name : \" + dataField);",
    "attachments": {},
    "issue_links": {},
    "comments": []
}