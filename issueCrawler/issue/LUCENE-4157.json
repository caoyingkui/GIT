{
    "id": "LUCENE-4157",
    "title": "Improve Spatial Testing",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "modules/spatial"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Looking back at the tests for the Lucene Spatial Module, they seem half-baked.  (At least Spatial4j is well tested).  I've started working on some improvements:\n\n\tSome tests are in an abstract base class which have a subclass that provides a SpatialContext. The idea was that the same tests could test other contexts (such as geo vs not or different distance calculators (haversine vs vincenty) but this can be done using RandomizedTesting's nifty parameterized test feature, once there is a need to do this.\n\tPort the complex geohash recursive prefix tree test that was developed on the Solr side to the Lucene side where it belongs.\n\n\n\nAnd some things are not tested or aren't well tested:\n\n\tDistance order as the query score\n\tIndexing shapes other than points (i.e. shapes with area / regions)",
    "attachments": {
        "LUCENE-4157_Improve_TermQueryPrefixTreeStrategy_and_move_makeQuery_impl_to_SpatialStrategy.patch": "https://issues.apache.org/jira/secure/attachment/12533782/LUCENE-4157_Improve_TermQueryPrefixTreeStrategy_and_move_makeQuery_impl_to_SpatialStrategy.patch",
        "LUCENE-4157_Improve_Lucene_Spatial_testing_p1.patch": "https://issues.apache.org/jira/secure/attachment/12532652/LUCENE-4157_Improve_Lucene_Spatial_testing_p1.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-06-20T05:56:31+0000",
            "content": "Attached is a patch doing the 1st two bullets.  I'll commit this soonish and get to the others at some point when I have more time. ",
            "author": "David Smiley",
            "id": "comment-13397280"
        },
        {
            "date": "2012-06-26T15:41:52+0000",
            "content": "I think we should bump this to critical and really reconsider some this spatial code.  While doing some work with it, I noticed that what testing there is primarily focused on using RecursivePrefixTreeStrategy with geohashes.  I swapped in QuadPrefixTree and both tests in TestRecursivePrefixTreeStrategy failed.  Worse yet when I used QuadPrefixTree with MAX_LEVELS_POSSIBLE, I get an error.  So I don't think we can release QuadPrefixTree at this stage.\n\nThe code inside TestTermQueryPrefixGridStrategy seems to be some experimental code I wrote over 12 months ago and doesn't actually test anything.  Porting it over to using the same stuff as TestRecursivePrefixTreeStrategy shows that the Strategy does seem to work but again, using QuadPrefixTree causes failures and errors.  \n\nI'm also worried that really the only testing is using cities-IsWithin-BBox.txt which contains only 3 queries.  There doesn't seem to be any automated testing of other operations or shapes at this stage.\n\nI wonder whether we should scale back what code is released in 4.0, focusing on what we have good quality testing for and maybe put the remaining code into sandbox or just hold it back in trunk till we have testing that shows it works. ",
            "author": "Chris Male",
            "id": "comment-13401461"
        },
        {
            "date": "2012-06-27T05:26:09+0000",
            "content": "RE QuadPrefixTree, I'll see if I can reproduce your test errors.  I'm not surprised if the QuadPrefixTree.MAX_LEVELS_POSSIBLE is perhaps too big (notice the comment at it's declaration \"not really sure how big this should be\".  Assuming the default 12 levels pass, I think we can find a safer max number to use for the time being that is less than 50, and maybe one day when we have time we can confidently determine exactly what it can support.  I venture to guess it might be similar to the mantissa of a double which is 53, but perhaps not or maybe it's half that or something.  FYI about 26 is needed for ~1meter accuracy.  If a non-geo scenario is needed, then who knows what your requirements might be.\n\nRE Testing of TermQueryPrefixGridStrategy, I agree that its tests are too minimal, in Lucene spatial. FWIW, I'm about to update a patch to SOLR-3304 that tests a variety of strategies against the same test code (based on test code from Solr 3 spatial filter tests).  TermQueryPrefixGridStrategy passes fine.\n\nI definitely welcome any input on making the tests better overall.  It's a bit of a challenge because there are a variety of strategies, and some like TwoDoublesStrategy are known to not yet support certain geo cases like the poles (if I recall).  I'm not sure if the idea of a test file of query cases was your idea or Ryan's (e.g. cities-IsWithin-BBox), but instead or in addition, I like the idea of automatically generating random data and queries, and then double checking search results against a simple brute force algorithm.\n\nIf you don't feel any better about these two classes, then I like your suggestion of not releasing them in 4.0 and leave in trunk. ",
            "author": "David Smiley",
            "id": "comment-13401974"
        },
        {
            "date": "2012-06-27T08:50:13+0000",
            "content": "RE QuadPrefixTree, I'll see if I can reproduce your test errors. I'm not surprised if the QuadPrefixTree.MAX_LEVELS_POSSIBLE is perhaps too big (notice the comment at it's declaration \"not really sure how big this should be\". Assuming the default 12 levels pass, I think we can find a safer max number to use for the time being that is less than 50, and maybe one day when we have time we can confidently determine exactly what it can support. I venture to guess it might be similar to the mantissa of a double which is 53, but perhaps not or maybe it's half that or something. FYI about 26 is needed for ~1meter accuracy. If a non-geo scenario is needed, then who knows what your requirements might be.\n\nThanks for that explanation.  I tried with the default of 12 and the tests still failed but no error this time.  That could be just related to the fact quad trees are less precise than geohashes or maybe some problems with the tests.  I think we should just try to come up with some tests for the trees themselves to verify that they work as expected.  I see SpatialPrefixTreeTest does some testing of GeohashPrefixTree currently, but we should really spin that off into its own test class and take QuadTree separately.\n\nRE Testing of TermQueryPrefixGridStrategy, I agree that its tests are too minimal, in Lucene spatial. FWIW, I'm about to update a patch to SOLR-3304 that tests a variety of strategies against the same test code (based on test code from Solr 3 spatial filter tests). TermQueryPrefixGridStrategy passes fine.\n\nGood to know.  I have confidence in TermQueryPrefixGridStrategy since it is extremely simple but I think we need to come up with tests to ensure that any changes we make to the indexing process is compatible with the querying.\n\nI definitely welcome any input on making the tests better overall. It's a bit of a challenge because there are a variety of strategies, and some like TwoDoublesStrategy are known to not yet support certain geo cases like the poles (if I recall). I'm not sure if the idea of a test file of query cases was your idea or Ryan's (e.g. cities-IsWithin-BBox), but instead or in addition, I like the idea of automatically generating random data and queries, and then double checking search results against a simple brute force algorithm.\n\nI don't really like the test file idea at all.  Having them for benchmarking is good but we aren't at that stage yet.  Instead I think we should construct simple unit tests, indexing a few Shapes and querying for them.  We should do that for each Strategy, obviously only indexing Points for TwoDoublesStrategy.  Having random data and query generation can come later, once we have enough crafted tests to be sure that this works.\n\nWe should then randomize the use of QuadTree vs GeohashTree or actually repeat the tests for both.\n\nWe have a big question mark around testing with polygons.  My concern is that users will rightly start using JTS Geometrys and our Strategies will fail.  We really need to think about how to handle this.\n\nIf you don't feel any better about these two classes, then I like your suggestion of not releasing them in 4.0 and leave in trunk.\n\nQuadTree is my main concern since I don't know whether it is working correctly and is just less precise than geohashes or has a bug.  If we can't quickly come up with a couple of tests and fix any broken behavior then we should remove it from 4.0.  \n\nWe should also take this opportunity to remove any unused code / code that doesn't actually test anything.  For this I see TruncateFilter, the current TestTermQueryPrefixGridStrategy and TestSpatialPrefixField.\n\nI'll try to help out here especially with cleaning out the dead code, but any help with testing QuadTree would be great.\n\n ",
            "author": "Chris Male",
            "id": "comment-13402063"
        },
        {
            "date": "2012-06-28T06:24:17+0000",
            "content": "The attached patch improves TermQueryPrefixTreeStrategy:\n\n\tbased on TermsFilter instead of BooleanQuery\n\tscores of Query are now via ValueSource and thus sorting is what we want now\n\n\n\nThese changes made some tests pass.  Those tests will be another patch (maybe tomorrow).\n\nAdditionally:\n\n\trefactored the generic makeQuery() impl from RecursivePrefixTreeFilter to become the default impl in SpatialStrategy, used by both PrefixTree Strategies.\n\n\n\nI'm going to commit this in a minute. ",
            "author": "David Smiley",
            "id": "comment-13402886"
        },
        {
            "date": "2012-06-28T19:38:25+0000",
            "content": "I was posting patches for testing but then I realized that tests follow the C-T-R model so I'm not going to go through that unnecessary burden anymore.\nhttp://wiki.apache.org/solr/CommitPolicy#Adding_New_Unit_Tests_of_Existing_Functionality ",
            "author": "David Smiley",
            "id": "comment-13403412"
        },
        {
            "date": "2012-07-02T06:57:09+0000",
            "content": "I committed \"PortedSolr3Test\" which is mostly Solr 3's SpatialFilterTest + a quick sort test I think I found in Solr somewhere.  This a parameterized test of RecursivePrefixTreeStrategy & TermQueryPrefixTreeStrategy with Geohash & Quad grids.\n\nI deleted TestSpatialPrefixField which didn't test anything \u2013 it was someone's work in progress with no progress. ",
            "author": "David Smiley",
            "id": "comment-13404910"
        },
        {
            "date": "2012-07-03T03:24:21+0000",
            "content": "Committed documentation to the spatial.query.* package. ",
            "author": "David Smiley",
            "id": "comment-13405581"
        },
        {
            "date": "2012-07-11T23:03:43+0000",
            "content": "bulk cleanup of 4.0-ALPHA / 4.0 Jira versioning. all bulk edited issues have hoss20120711-bulk-40-change in a comment ",
            "author": "Hoss Man",
            "id": "comment-13412292"
        },
        {
            "date": "2012-08-07T03:41:31+0000",
            "content": "rmuir20120906-bulk-40-change ",
            "author": "Robert Muir",
            "id": "comment-13429716"
        },
        {
            "date": "2012-11-28T16:17:05+0000",
            "content": "Marking as fixed. The titles is a bit general and there has indeed been testing improvements that made it into 4.0.  If there's something in particular that needs testing than an issue should be created for it, and there are already such issues. ",
            "author": "David Smiley",
            "id": "comment-13505610"
        },
        {
            "date": "2013-05-10T10:33:32+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653956"
        }
    ]
}