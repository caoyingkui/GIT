{
    "id": "SOLR-12816",
    "title": "Don't allow RunUpdateProcessorFactory to be set before DistributedUpdateProcessorFactory",
    "details": {
        "type": "Improvement",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "Here's the problem that came up with a customer call today morning - \"My documents are not getting replicated to the replicas and the doc counts don't match up\"\n\nIt was a 3 node cluster. The collection was 1 shard X 3 replicas .\n\nThis is a scary situation to be in. We started down the patch of debugging replica types , auto-commits , checking if the version\u00a0 field and id fields were defined correctly etc.\n\n\u00a0\n\nThe problem was the user had defined a custom update processor chain and had RunUpdateProcessorFactory defined before DistributedUpdateProcessorFactory\n\n<updateRequestProcessorChain ...\n  ....\n  <processor class=\"solr.LogUpdateProcessorFactory\"/>\n  <processor class=\"solr.RunUpdateProcessorFactory\"/>\n  <processor class=\"solr.DistributedUpdateProcessorFactory\"/>\n</updateRequestProcessorChain>\n\n\u00a0\n\nWith this update chain, whichever node you index the document against will be the only one indexing the document. It will never forward to the other nodes. So you can\u00a0 index against a node hosting a replica and the leader will never get this document.\n\nIs there any use-case where having RunUpdateProcessor before DistributedUpdateProcessor is needed?\n\n\u00a0\n\nPerhaps we could borrow the idea from TRA or make these two update processors default and remove them from the default configs?\n\nWhen processing an update for a TRA, Solr initializes its UpdateRequestProcessor chain as usual, but when DistributedUpdateProcessor (DUP) initializes, it detects that the update targets a TRA and injects TimeRoutedUpdateProcessor (TRUP) in front of itself.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16632257",
            "content": "I think the issue was that some URPs can be injected between those two and have a choice to be handled centrally or per-node.\n\nAlso, I could have sworn, we are already injecting one of them if missing.\n\nBut maybe there is a use-case for default situation and then recognize an explicit one with the extra check.\n\nOf course, if new style processor attribute is used, they are already default. ",
            "author": "Alexandre Rafalovitch",
            "date": "2018-09-28T19:02:04+0000"
        },
        {
            "id": "comment-16633060",
            "content": "I think the issue was that some URPs can be injected between those two and have a choice to be handled centrally or per-node.\nInteresting . I hadn't thought of that. Are you aware of a use-case where we want to leverage that?\n\n\u00a0\nOf course, if new style processor attribute is used, they are already default.\nMaybe the default solrconfig shouldn't mention it then? ",
            "author": "Varun Thacker",
            "date": "2018-09-29T16:58:37+0000"
        },
        {
            "id": "comment-16633108",
            "content": "I tried to find the use-case, but the only ones I can seem to be relying on UpdateRequestProcessorFactory.RunAlways instead. So I probably mis-remembered.\n\nThe default solrconfig seesm to use a mix of new and old syntax, perhaps to support the schemaless mode enabling/disabling. ",
            "author": "Alexandre Rafalovitch",
            "date": "2018-09-29T20:01:28+0000"
        },
        {
            "id": "comment-16642597",
            "content": "I did find the passage in the documentation about URPs that may want to run after DistributedUpdateProcessor. Basically, if they need to operate on the full document even if only atomic update was sent, they need to be in the chain after the the DistributedUpdateProcessor (which reconstructs the document).\n\nI think this must be what I was trying to remember. ",
            "author": "Alexandre Rafalovitch",
            "date": "2018-10-08T23:29:56+0000"
        },
        {
            "id": "comment-16642763",
            "content": "See UpdateRequestProcessorChain line 155 (in init()) which detects that the chain doesn't have DURP and automatically adds it immediately before the Run URP.\n\nIt would be nice if perhaps the chain could be defined by phases in which you add URPs to an URP phase.  In this way, built-ins could be handled more cleanly without having to mess with the constructors of URPs like I did for TRAs which felt like a hack. ",
            "author": "David Smiley",
            "date": "2018-10-09T03:55:35+0000"
        }
    ]
}