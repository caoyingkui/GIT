{
    "id": "SOLR-10843",
    "title": "Enable docValues for boolean and disable for location field types",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "Schema and Analysis"
        ],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "6.6",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Doc values should be enabled for 'boolean'  types in the example schemas. (I don't see a reason to why not because it is enabled for all supported field types)\n\tDoc values should be disabled for 'location' field type since it is not supported\n\n\n\nFrom the sample schema: \n\n  <fieldType name=\"location\" class=\"solr.LatLonPointSpatialField\" docValues=\"true\"/>\n\n\n\nThe code returns error message when fields of these types are accessed through export handler\n\n\nCaused by: java.lang.RuntimeException: java.io.IOException: --> http://127.0.0.1:62525/solr/testIndexing-917a9d98-e4de-447f-a28a-219ed099b340_shard1_replica1/:Export fields must either be one of the following types: int,float,long,double,string,date,boolean\n    at com.lucidworks.spark.query.TupleStreamIterator.hasNext(TupleStreamIterator.java:51)\n    at scala.collection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42)\n    at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n    at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n    at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(Unknown Source)\n    at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n    at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:377)\n    at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:231)\n    at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:225)\n    at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)\n    at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)\n    at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)\n    at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)\n    at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)\n    at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)\n    at org.apache.spark.scheduler.Task.run(Task.scala:99)\n    at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:322)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.io.IOException: --> http://127.0.0.1:62525/solr/testIndexing-917a9d98-e4de-447f-a28a-219ed099b340_shard1_replica1/:Export fields must either be one of the following types: int,float,long,double,string,date,boolean\n    at org.apache.solr.client.solrj.io.stream.SolrStream.read(SolrStream.java:235)\n    at com.lucidworks.spark.query.TupleStreamIterator.fetchNextTuple(TupleStreamIterator.java:82)\n    at com.lucidworks.spark.query.TupleStreamIterator.hasNext(TupleStreamIterator.java:47)\n    ... 19 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-07T21:38:48+0000",
            "content": "pinging Erick Erickson and Joel Bernstein for visibility  ",
            "author": "kiran",
            "id": "comment-16041675"
        },
        {
            "date": "2017-06-11T21:35:24+0000",
            "content": "I think you mean enable docValues by default for boolean fields?\nI think that's addressed on another issue and I have a reason why not to: https://issues.apache.org/jira/browse/SOLR-10808?focusedCommentId=16041413&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16041413\n\nLatLonPointSpatialField (The newer class for the \"location\" field in more recent Solr versions) most definitely supports docValues.  It's how distance sorting/boosting works.  I'm not sure if stored=false works on it but docValues true (for using docValues for retrieval); maybe you'd like to tell us.  What apparently does not is streaming expressions on this field. ",
            "author": "David Smiley",
            "id": "comment-16046130"
        }
    ]
}