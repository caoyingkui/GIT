{
    "id": "LUCENE-1714",
    "title": "WriteLineDocTask incorrectly normalizes fields",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/benchmark"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "WriteLineDocTask normalizes the body, title and date fields by replacing any \"\\t\" with a space. However, if any one of them contains newlines, LineDocMaker will fail, since the first line read will include some of the text, however the second line, which it now expects to be a new document, will include other parts of the text.\n\nI don't know how we didn't hit it so far. Maybe the wikipedia text doesn't have such lines, however when I ran over the TREC collection I hit a lot of those.\n\nI will attach a patch shortly.",
    "attachments": {
        "LUCENE-1714.patch": "https://issues.apache.org/jira/secure/attachment/12411517/LUCENE-1714.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-06-23T10:09:12+0000",
            "content": "Patch includes:\n\n\tFix WriteLineDocTask to replace \"[\\t\\r\\n]+\" with a space for body, title and date.\n\tAdd test to WriteLineDocTaskTest\n\tCHANGES\n\n\n\nAll benchmark tests pass. ",
            "author": "Shai Erera",
            "id": "comment-12723023"
        },
        {
            "date": "2009-06-23T10:26:07+0000",
            "content": "Looks good!  Shai, can we pre-compile the regex up front (java.util.regex.Matcher) so we don't have to compile it three times on every written line? ",
            "author": "Michael McCandless",
            "id": "comment-12723030"
        },
        {
            "date": "2009-06-23T11:04:55+0000",
            "content": "\n\tUsing a Matcher as a static final member, pre-compiled.\n\tCompleted CHANGES\n\tAdded a note to WriteLineDocTask about this task not being thread-safe. It never was, since it writes to the output file in a non-synchronized way. Now with the addition of a static Matcher member, it's even less thread-safe.\n\n\n\nAll benchmark tests pass. ",
            "author": "Shai Erera",
            "id": "comment-12723041"
        },
        {
            "date": "2009-06-23T16:40:48+0000",
            "content": "Looks good; I'll commit shortly. ",
            "author": "Michael McCandless",
            "id": "comment-12723175"
        },
        {
            "date": "2009-06-23T16:46:33+0000",
            "content": "Thanks Shai! ",
            "author": "Michael McCandless",
            "id": "comment-12723178"
        }
    ]
}