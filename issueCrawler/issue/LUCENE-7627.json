{
    "id": "LUCENE-7627",
    "title": "Improve TermsEnum automaton filtering APIs",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "6.4"
        ]
    },
    "description": "To filter a TermsEnum by a CompiledAutomaton, we currently have a number of different possibilities:\n\n\tTerms.intersect(CompiledAutomaton, BytesRef) - efficient, but only works on NORMAL type automata\n\tCompiledAutomaton.getTerms(Terms) - efficient, works on all automaton types, but requires a Terms instead of a TermsEnum, so no use for eg SortedDocValues.termsEnum()\n\tAutomatonTermsEnum - takes a TermsEnum, so it's more general than the Terms methods above, but agian only works on NORMAL automata\n\n\n\nIt's easy to do the wrong thing here, and at the moment we only guard against incorrect usage via runtime checks (see eg LUCENE-7576, https://github.com/flaxsearch/marple/issues/24).  We should try and clean this up.",
    "attachments": {
        "LUCENE-7627.patch": "https://issues.apache.org/jira/secure/attachment/12846808/LUCENE-7627.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15818089",
            "date": "2017-01-11T11:44:31+0000",
            "content": "The immediate problem we faced in marple can be fixed by adding SortedDocValues#termsEnum(CompiledAutomaton) and SortedSetDocValues#termsEnum(CompiledAutomaton) methods, as in this patch.\n\nI think the next step could be to address the TODO in CompiledAutomaton#getTermsEnum(Terms), adding an optional startTerm parameter.  Then Terms.intersect() can delegate to that method instead of throwing exceptions.\n\nThat leaves AutomatonTermsEnum, which I think can be fixed by making the constructor private, and adding factory methods to do the right thing depending on the automaton type.  Plus some javadocs which point out that if you have a Terms, then calling intersect directly on the Terms instance is likely to be more efficient than calling iterator() and passing that to ATE. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15818100",
            "date": "2017-01-11T11:49:58+0000",
            "content": "I think the next step could be to address the TODO in CompiledAutomaton#getTermsEnum(Terms)\n\nAlthough this might be trickier than it looks, as the contract on Terms is that you get a TermsEnum which will only return terms > startTerm, but it's initially unpositioned - which makes handling Type.ALL complicated... ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15821686",
            "date": "2017-01-13T11:48:12+0000",
            "content": "Thanks Alan Woodward, I think the patch is good, except maybe we can name the new methods intersect so it's clearer that we are intersecting with the incoming automaton? ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15822765",
            "date": "2017-01-14T09:15:40+0000",
            "content": "OK, termsEnum(CompiledAutomaton) is now intersect(CA).  Running tests now, I'd like to get this in for 6.4 as it means we can use it in marple quickly.  The next steps we can do in a follow-up issue. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15822788",
            "date": "2017-01-14T10:52:20+0000",
            "content": "Commit c2c758bb71e621b1d8c5d8b228b8dfe4ec50acfe in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c2c758b ]\n\nLUCENE-7627: Add #intersect(CompiledAutomaton) to Sorted*DocValues ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15822789",
            "date": "2017-01-14T10:54:37+0000",
            "content": "Thanks for the review Mike! ",
            "author": "Alan Woodward"
        }
    ]
}