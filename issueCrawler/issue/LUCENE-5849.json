{
    "id": "LUCENE-5849",
    "title": "Scary \"read past EOF\" in RAMDir",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "Nightly build hit this: http://builds.flonkings.com/job/Lucene-trunk-Linux-Java7-64-test-only/91095\n\nAnd I'm able to repro at least once after beasting w/ the right JVM (1.7.0_55) and G1GC.",
    "attachments": {
        "TestBinaryDocIndex.java": "https://issues.apache.org/jira/secure/attachment/12658156/TestBinaryDocIndex.java"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14076043",
            "author": "Michael McCandless",
            "content": "\nJUnit version 4.10\n.Jul 28, 2014 9:31:47 PM com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\nWARNING: Uncaught exception in thread: Thread[Lucene Merge Thread #2,6,TGRP-TestBinaryDocValuesUpdates]\norg.apache.lucene.index.MergePolicy$MergeException: java.io.EOFException: read past EOF: RAMInputStream(name=RAMInputStream(name=_6.cfs) [slice=_6_Memory_0.mdvd])\n\tat __randomizedtesting.SeedInfo.seed([879E92147F435095]:0)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:545)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:518)\nCaused by: java.io.EOFException: read past EOF: RAMInputStream(name=RAMInputStream(name=_6.cfs) [slice=_6_Memory_0.mdvd])\n\tat org.apache.lucene.store.RAMInputStream.switchCurrentBuffer(RAMInputStream.java:98)\n\tat org.apache.lucene.store.RAMInputStream.readBytes(RAMInputStream.java:81)\n\tat org.apache.lucene.store.MockIndexInputWrapper.readBytes(MockIndexInputWrapper.java:128)\n\tat org.apache.lucene.store.BufferedChecksumIndexInput.readBytes(BufferedChecksumIndexInput.java:49)\n\tat org.apache.lucene.store.DataInput.readBytes(DataInput.java:82)\n\tat org.apache.lucene.store.DataInput.skipBytes(DataInput.java:266)\n\tat org.apache.lucene.store.ChecksumIndexInput.seek(ChecksumIndexInput.java:51)\n\tat org.apache.lucene.codecs.CodecUtil.checksumEntireFile(CodecUtil.java:267)\n\tat org.apache.lucene.codecs.memory.MemoryDocValuesProducer.checkIntegrity(MemoryDocValuesProducer.java:258)\n\tat org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsReader.checkIntegrity(PerFieldDocValuesFormat.java:329)\n\tat org.apache.lucene.index.SegmentReader.checkIntegrity(SegmentReader.java:644)\n\tat org.apache.lucene.index.SegmentMerger.<init>(SegmentMerger.java:60)\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:3978)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3589)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:405)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:482)\n\n ",
            "date": "2014-07-28T09:33:31+0000"
        },
        {
            "id": "comment-14076288",
            "author": "Littlestar",
            "content": "I meet the bug too when getting binaryDoc.\nI have patch LUCENE-5681, wong too...\n\njava.lang.RuntimeException: java.io.EOFException: read past EOF: RAMInputStream(name=RAMInputStream(name=_0_Lucene49_0.dvd) [slice=randomaccess])\n\tat org.apache.lucene.util.packed.DirectReader$DirectPackedReader1.get(DirectReader.java:78)\n\tat org.apache.lucene.codecs.lucene49.Lucene49DocValuesProducer$1.get(Lucene49DocValuesProducer.java:345)\n\tat org.apache.lucene.util.LongValues.get(LongValues.java:45) ",
            "date": "2014-07-28T15:11:53+0000"
        },
        {
            "id": "comment-14076308",
            "author": "Robert Muir",
            "content": "That is my concern: that its a corner case in LUCENE-5681... ",
            "date": "2014-07-28T15:34:03+0000"
        },
        {
            "id": "comment-14076343",
            "author": "Littlestar",
            "content": "I reproduced.\n\nwhen doc>maxDoc, it may throws this Exception. ",
            "date": "2014-07-28T16:16:02+0000"
        },
        {
            "id": "comment-14076381",
            "author": "Robert Muir",
            "content": "Thats expected. you passed an illegal document id. that isn't a bug. ",
            "date": "2014-07-28T16:52:54+0000"
        },
        {
            "id": "comment-14077695",
            "author": "ASF subversion and git services",
            "content": "Commit 1614339 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1614339 ]\n\nLUCENE-5849: try to stress slicing better in BaseDirectoryTestCase ",
            "date": "2014-07-29T13:18:01+0000"
        },
        {
            "id": "comment-14077699",
            "author": "ASF subversion and git services",
            "content": "Commit 1614340 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1614340 ]\n\nLUCENE-5849: try to stress slicing better in BaseDirectoryTestCase ",
            "date": "2014-07-29T13:21:41+0000"
        },
        {
            "id": "comment-14077704",
            "author": "Uwe Schindler",
            "content": "Thanks for the new test case. Littlestar's problem is just caused by better bounds checks in RAMDirectory (previously RAMDir was buggy and did not correctly detect EOF). If you access a document number out of bounds with docvalues, an EOF is expected.\n\nI am also afraid that this is a corner case of LUCENE-5681, but Robert's test should catch this  ",
            "date": "2014-07-29T13:36:23+0000"
        },
        {
            "id": "comment-14079873",
            "author": "Jack Krupansky",
            "content": "Any sense of whether this is JVM-dependent? Or whether it is an issue for the JVM itself? ",
            "date": "2014-07-30T20:07:54+0000"
        }
    ]
}