{
    "id": "SOLR-8648",
    "title": "Support selective clearing up of stored async collection API responses",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The only way to clear up stored collection API responses right now is by sending in '-1' as the request id in the REQUESTSTATUS call. It makes a lot of sense to support selective deletion of stored responses so the ids could be reused.",
    "attachments": {
        "SOLR-8648.patch": "https://issues.apache.org/jira/secure/attachment/12786515/SOLR-8648.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-05T17:50:07+0000",
            "author": "Anshum Gupta",
            "content": "Patch with test ",
            "id": "comment-15134564"
        },
        {
            "date": "2016-02-06T08:01:42+0000",
            "author": "Shai Erera",
            "content": "if(req.getParams().getBool(\"cleanup\")) {\n\n\n\tCan you add a space after the 'if'?\n\tSeparately, would be nice if DistributedMap#remove() would return a boolean/Object, you can avoid the .contains followed by .remove check (which also means two accesses to ZK).\n\n\n\n.setCleanup(true).process(cloudClient);\n\nIf you're already doing the builder style (which I like), mind as well write that as:\n\n\n  .setCleanup(true)\n  .process(cloudClient);\n\n\n\nSome general comments:\n\n\n\tCan you also add a test which attempts to delete a non-existing requestId, as well one which attempts to delete the same twice?\n\n\n\n\n\tHow would the REST call look like? /solr/admin/collections?action=REQUESTSTATUS&requestId=foo&cleanup=true? I thought that we want to add a DELETESTATUS specific action, in which case you won't need to add a cleanup parameter?\n\n\n\n\n\tWhat about &requestId=-1&cleanup=false? I mean, we obviously don't need to support all options, but was just wondering what would the code do? If we added a DELETESTATUS action, then we could deprecate requestId=-1 at all and remove in 6.0, in exchange for only the latter action. Also, V2-API would be able to handle that with a DELETE /solr/admin/... vs GET /solr/admin/....\n\n\n\nWhat do you think? ",
            "id": "comment-15135670"
        },
        {
            "date": "2016-02-08T19:22:42+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for the review Shai. Here's an updated patch  that addresses your feedback. I have added a new Collections Admin API (DELETESTATUS) that accepts 2 parameters:\n\n\trequestid (String)\n\tflush (Boolean)\n\n\n\nThis patch also has more tests including deleting the same response more than once and attempting to delete a non-existent response. ",
            "id": "comment-15137510"
        },
        {
            "date": "2016-02-08T20:23:04+0000",
            "author": "Shai Erera",
            "content": "Thanks Anshum Gupta, I've got few minor (style) comments:\n\nOverseerTaskProcessor\n\n\n\tif(asyncId != null): can you add a space after the 'if'?\n\tSomeplace else in the file: if(!runningMap.remove(asyncId)) - also missing space\n\n\n\nDistributedMap.remove()\n\n\n\tI believe the javadocs won't render well as the @return tag swallows newlines. You can either use an <ul> element, or document it in text instead of the tag.\n\n\n\nCollectionsHandler\n\n\n\tpublic static final String FLUSH = \"flush\"; is also defined in CollectionAdminParams. Can we have just one definition?\n\tI don't see a deprecation/removal of requestId == -1. Do you intend to do that separately?\n\tif (requestId != null && flush) \"Both requestid or flush\" should be \"Both requestid and flush\"\n\tif (req.getParams().getBool(FLUSH, false)) is redundant since you already set it to flush above\n\tzkController.getOverseerFailureMap().remove(requestId); that's a mistake? You already call remove inside the 'if'\n\n\n\nDeleteStatusTest\n\n\n\t// Try deleting the same response again s/response/requestid/ ?\n\n\n\nCoreAdminParams\n\n\n\tpublic static final String CLEANUP = \"cleanup\" I didn't get where it's used in this patch?\n\n ",
            "id": "comment-15137622"
        },
        {
            "date": "2016-02-08T20:47:43+0000",
            "author": "Anshum Gupta",
            "content": "Updated patch. Seems like my idea settings file is acting up. Hopefully the formatting is maintained this time around. ",
            "id": "comment-15137653"
        },
        {
            "date": "2016-02-08T20:52:50+0000",
            "author": "Anshum Gupta",
            "content": "the previous patch had some rebase issues, here's another clean one. ",
            "id": "comment-15137664"
        },
        {
            "date": "2016-02-08T20:55:41+0000",
            "author": "Shai Erera",
            "content": "Looks good Anshum Gupta! +1 ",
            "id": "comment-15137666"
        },
        {
            "date": "2016-02-08T20:57:07+0000",
            "author": "Anshum Gupta",
            "content": "Also, about the deprecation, I'll change the 5x commit to actually return a warning with the response body and also document it in the code. ",
            "id": "comment-15137672"
        },
        {
            "date": "2016-02-08T21:18:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 03d7f80b27031309f7156af3bafcb6ccea74f7c7 in lucene-solr's branch refs/heads/master from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=03d7f80 ]\n\nSOLR-8648: Support selective clearing up of stored async collection API responses via DELETESTATUS API ",
            "id": "comment-15137707"
        },
        {
            "date": "2016-02-08T22:51:52+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3892f7e7a3ef41ce335f5cbfedc62e74489b0dd4 in lucene-solr's branch refs/heads/branch_5x from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3892f7e ]\n\nSOLR-8648: Support selective clearing up of stored async collection API responses via DELETESTATUS API ",
            "id": "comment-15137922"
        },
        {
            "date": "2016-06-14T13:30:21+0000",
            "author": "Varun Thacker",
            "content": "Hi Anshum,\n\nIn 6.x + we no longer support this {[action=REQUESTSTATUS&requestid=-1}} right?\n\nI saw two references of that usage https://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-RequestStatus and https://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-AsynchronousCalls . We can safely remove that right?  ",
            "id": "comment-15329497"
        },
        {
            "date": "2016-06-14T20:20:12+0000",
            "author": "Anshum Gupta",
            "content": "Varun Thacker yes. I've removed this from both the places. ",
            "id": "comment-15330498"
        }
    ]
}