{
    "id": "SOLR-374",
    "title": "use IndexReader.reopen",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Take advantage of  IndexReader.reopen(): LUCENE-743",
    "attachments": {
        "SOLR-374.patch": "https://issues.apache.org/jira/secure/attachment/12388193/SOLR-374.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-12622399",
            "date": "2008-08-14T00:03:15+0000",
            "content": "I may be missing something but this one is pretty simple right?\n\nThe biggest issue I see is that some tests rely on getting a new Reader reference whether its needed or not (the index hasn't changed) after a commit. So while I'd like to just return the searcher when the Reader hasnt changed, those tests would have to be changed. As is, a small change should actually be cheaper than no change I think. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12622406",
            "date": "2008-08-14T00:55:31+0000",
            "content": "It would not have been easy in the past, but with all of the recent changes, it should be simple.\nThis patch has couple off issues though:\n\n\ta race condition: the reader could be closed between the time you get it and the time you try to call reopen().\n\tdescriptor leak: you pass closeReader=false, but no one else will close this reader.\n\tthe last reader to be opened is the one that should be re-opened, not necessarily the currently registered one\n\n\n\nSee the getNewestSearcher() method I recently added to fix both #1 and #3\nAlso, I think that any test that expects the reader to be different should be changed. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12622420",
            "date": "2008-08-14T02:13:22+0000",
            "content": "\n\ta race condition: the reader could be closed between the time you get it and the time you try to call reopen().\n\n\n\n    Ah, because of no incref...\n\n\n\tdescriptor leak: you pass closeReader=false, but no one else will close this reader.\n\n\n\n    Dumb mistake here - made a private method public just so I could pass true and then still passed false...\n\n   >>Also, I think that any test that expects the reader to be different should be changed.\n   Alright, easy enough, just two I think: elevation and function tests, using the reader as a key in a map or something.\n\n   If thats all for the reopen, I've got that looking good I think, just have to take care of the tests. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12622425",
            "date": "2008-08-14T02:39:48+0000",
            "content": "Hmmm...looks like I was wrong about those tests failing just because of the same Reader - looked that way, and the expected fix worked, but doing things correctly as directed by yonik, now all the tests pass no problem. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12622430",
            "date": "2008-08-14T03:30:59+0000",
            "content": "You've involved yourself in one of the more complicated methods in Solr \n\n\n\tLatest patch has a new race condition: _searcher.incref() may be called after a final _searcher.decref() closes the searcher/reader.\n\twe shouldn't need to check if _searcher==null or not... there may be searchers open that have not yet been registered.\n\tif the reader from the newest searcher is equal to it's reopen, you return the registered searcher (which may actually be different from the newest searcher)\n\treturning a RefCounted<SolrIndexSearcher> immediately can expose it before it was supposed to be used (before warming has completed, etc)\n\treturning a RefCounted<SolrIndexSearcher> is not always the right thing to do - it depends on the parameters to the function.\n\n\n\nThere are really two different optimizations here:\n1) call IndexReader.reopen() and share parts of the most recently opened IndexReader\n2) if the IndexReader didn't change, avoid going through warming, autowarming, etc and just reuse the same searcher\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12622648",
            "date": "2008-08-14T19:11:27+0000",
            "content": "\n\n\n\tLatest patch has a new race condition: _searcher.incref() may be called after a final _searcher.decref() closes the searcher/reader.\n     Right...since I shouldn't even be returning _searcher, that goes away I think\n\n\n\n\n\twe shouldn't need to check if _searcher==null or not... there may be searchers open that have not yet been registered.\n     Right....gone.\n\n\n\n\n\tif the reader from the newest searcher is equal to it's reopen, you return the registered searcher (which may actually be different from the newest searcher)\n     Right....gone.\n\n\n\n\n\treturning a RefCounted<SolrIndexSearcher> immediately can expose it before it was supposed to be used (before warming has completed, etc)\n     Right....gone.\n\n\n\n\n\treturning a RefCounted<SolrIndexSearcher> is not always the right thing to do - it depends on the parameters to the function.\n    Good point \n\n\n\nSo I guess the key on this patch (as you pointed out) is that it is two optimizations, and the not doing anything if the Reader hasn't changed optimization really makes things more difficult - dropping it for now, I think solves pretty much each of these issues.\n\nI was right about the Reader and the tests as well...things passed because they were still wrong - so I have adjusted the two tests to actually change the index instead of just commit.\n\n\nI think this does just the reopen correctly but I am still scanning and checking. I definitely missed were the first sync on the search lock was closing in the earlier patch...soo many braces.\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12622655",
            "date": "2008-08-14T19:31:28+0000",
            "content": "Looking pretty good now... but there is a reference leak.  decref() should always be called for any RefCounted instances (preferably in a finally block) "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12622684",
            "date": "2008-08-14T20:51:17+0000",
            "content": "Okay. Not sure how kosher taking ownership of the Reader form SolrIndexSearcher is, but it seems the thing to do then. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12622696",
            "date": "2008-08-14T21:01:40+0000",
            "content": "Hmmm...probably need a searcher lock  around taking reader ownership....\n\nor not...the incref will keep it from being closed. NM. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12622704",
            "date": "2008-08-14T21:17:42+0000",
            "content": "or not...the incref will keep it from being closed. NM.\nRight.  I think all you need to add is a decref() "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12622707",
            "date": "2008-08-14T21:19:21+0000",
            "content": "I've got the decref on the newestSearcher in a finally block there - miss it? or did I botch it? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12622717",
            "date": "2008-08-14T21:35:48+0000",
            "content": "I missed the last patch (I wish JIRA defaulted to \"All\").\n\nIt seems like that if reopen() returns us the same reader, we should just incRef it... (or is that in a slightly later version of Lucene?)\nTrying to steal the reader instead seems hard to get right (seems like another thread could try to open another searcher, but our searcher doesn't have it and neither does the old one, so your exception might be triggered.) "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12622724",
            "date": "2008-08-14T22:12:04+0000",
            "content": "Man...nothing is ever simple  A search lock around the ownership change would solve that right? The incref on the Reader is way cleaner though - from what I can tell solr Lucene is a bit too old though. Worth it to wait I think - much better than a sync. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12624396",
            "date": "2008-08-21T15:26:00+0000",
            "content": "I'm still firming up my knowledge of this class, but I think this is right. Just switched to the incref rather than Reader ownership change. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12631970",
            "date": "2008-09-17T21:51:41+0000",
            "content": "Committed.  Thanks Mark!\n\nThis did cause a test failure on windows, but it's the test that needs fixing: SOLR-775 "
        }
    ]
}