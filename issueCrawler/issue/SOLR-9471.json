{
    "id": "SOLR-9471",
    "title": "Another race condition in ClusterStatus.getClusterStatus",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.1",
        "status": "Resolved",
        "resolution": "Duplicate",
        "priority": "Minor"
    },
    "description": "Reading cluster state information using /collections?action=CLUSTERSTATUS can fail if there's a concurrent deletion of a collection with its configset.\n\nThe code in ClusterStatus.getClusterStatus\n\n\tgets collection names\n\tfor every collection reads its \"config name\" from Zk\n\n\n\nThe problem is that if there's a concurrent delete operation for a collection and its configset in between then ClusterState.getCollection can fail thus causing the whole operation to fail. It seems that it would be better to catch Zk's NoNodeException for this particular case and handle it somehow (can we ignore this collection right away or should we re-check?)\n\n\nError loading config name for collection test (500)  Trace: org.apache.solr.common.SolrException: Error loading config name for collection test\n\tat org.apache.solr.common.cloud.ZkStateReader.readConfigName(ZkStateReader.java:196)\n\tat org.apache.solr.handler.admin.ClusterStatus.getClusterStatus(ClusterStatus.java:141)\n\tat org.apache.solr.handler.admin.CollectionsHandler$CollectionOperation$21.call(CollectionsHandler.java:695)\n...\nCaused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /collections/test\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:111)\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n\tat org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1155)\n\tat org.apache.solr.common.cloud.SolrZkClient$7.execute(SolrZkClient.java:348)\n\tat org.apache.solr.common.cloud.SolrZkClient$7.execute(SolrZkClient.java:345)\n\tat org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:60)\n\tat org.apache.solr.common.cloud.SolrZkClient.getData(SolrZkClient.java:345)\n\tat org.apache.solr.common.cloud.ZkStateReader.readConfigName(ZkStateReader.java:178)\n\t... 32 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-10T20:06:30+0000",
            "author": "Varun Thacker",
            "content": "Hi Alexey Serba / Shalin Shekhar Mangar\u00a0\n\nCan we close out this as a duplicate of\u00a0SOLR-10720 ?\u00a0 ",
            "id": "comment-16539171"
        },
        {
            "date": "2018-07-11T06:26:19+0000",
            "author": "Alexey Serba",
            "content": "I think it now catches\u00a0NoNodeException\u00a0in reading config name from Zk, so\u00a0it looks like it is fixed in SOLR-10720 indeed. Closing as duplicate. ",
            "id": "comment-16539624"
        }
    ]
}