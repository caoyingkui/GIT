{
    "id": "SOLR-5920",
    "title": "Distributed sort on DateField, BoolField and BCD{Int,Long,Str}Field returns string cast exception",
    "details": {
        "affect_versions": "4.7",
        "status": "Closed",
        "fix_versions": [
            "4.7.1",
            "4.8",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "After upgrading to 4.7, sorting on a date field returns the folllow trace:\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<lst name=\"responseHeader\"><int name=\"status\">500</int><int name=\"QTime\">7</int></lst><lst name=\"error\"><str name=\"msg\">java.lang.String cannot be cast to org.apache.lucene.util.BytesRef</str><str name=\"trace\">java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.lucene.util.BytesRef\n\tat org.apache.lucene.search.FieldComparator$TermOrdValComparator.compareValues(FieldComparator.java:940)\n\tat org.apache.solr.handler.component.ShardFieldSortedHitQueue$2.compare(ShardDoc.java:245)\n\tat org.apache.solr.handler.component.ShardFieldSortedHitQueue$2.compare(ShardDoc.java:237)\n\tat org.apache.solr.handler.component.ShardFieldSortedHitQueue.lessThan(ShardDoc.java:162)\n\tat org.apache.solr.handler.component.ShardFieldSortedHitQueue.lessThan(ShardDoc.java:104)\n\tat org.apache.lucene.util.PriorityQueue.insertWithOverflow(PriorityQueue.java:159)\n\tat org.apache.solr.handler.component.QueryComponent.mergeIds(QueryComponent.java:909)\n\tat org.apache.solr.handler.component.QueryComponent.handleRegularResponses(QueryComponent.java:661)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:640)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:321)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1916)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:780)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:427)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:217)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:368)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:942)\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1004)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)\n\tat org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n\tat java.lang.Thread.run(Thread.java:662)\n</str><int name=\"code\">500</int></lst>\n</response>\n\nThe date field is specified as:\n\n<fieldType name=\"date\" class=\"solr.DateField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n\nAnd it's used as a dynamic field:\n\n<dynamicField name=\"date_*\" type=\"date\" indexed=\"true\" stored=\"true\" />\n\nNothing in this configuration has changed since 4.6.1.\n\nSorting on other values, like integers and text, works fine. Only date fields are a problem.",
    "attachments": {
        "SOLR-5920.patch": "https://issues.apache.org/jira/secure/attachment/12637521/SOLR-5920.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13949103",
            "date": "2014-03-27T09:53:12+0000",
            "content": "I can reproduce this. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13949243",
            "date": "2014-03-27T12:46:31+0000",
            "content": "This is related to SOLR-5354. The DateField does not have the marshalSortValue and unmarshalSortValue methods which is required for this to work. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13949410",
            "date": "2014-03-27T14:47:47+0000",
            "content": "Wow; I'm surprised there isn't a distributed test that tests this.  Definitely needs to be added. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13950208",
            "date": "2014-03-28T00:36:12+0000",
            "content": "Another report on the list of a similar error using \"inStock\" in the example configs+data (BoolField)...\n\nI have a search that sorts on a boolean field. This search is pulling the following error: \"java.lang.String cannot be cast to org.apache.lucene.util.BytesRef\".\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13951319",
            "date": "2014-03-28T20:19:08+0000",
            "content": "Patch, fixes up DateField, BoolField, and BCDIntField. All three FieldType-s have the problem Shalin mentioned: missing un/marshalSortValue() specializations for String sort values.\n\nDistribCursorPagingTest already randomly exercises distributed sorting, so I extended its schema (also used by the other *Cursor* tests) to include all sortable fields I could find, along with all possible variants of DocValues and sortMissingFirst and sortMissingLast.  I excluded multidemensional fields (spatial and poly fields), with one exception: CurrencyField - it enables sortability by converting amounts to the default currency.\n\nChris Hostetter (Unused), I'd appreciate a review (since the test changes are in your deep paging code). "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13951370",
            "date": "2014-03-28T20:53:33+0000",
            "content": "I'm running the *Cursor* tests with this patch on my laptop in 3 simultaneous bash loops (keeps the CPUs saturated most of the time), so far 38 successful iterations:\n\n\nfor a in {1..100} ; do echo $a ; ant -Dtests.class=\"*Cursor*\" test >~/temp/SOLR-5920/$a.log 2>&1 ; done \n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13951655",
            "date": "2014-03-29T00:58:40+0000",
            "content": "Patch, fixing up several issues found by Hoss (from #solr IRC):\n\n\n\tCursorMarkTest.buildRandomSortObjects() is now streamlined and easier to read.\n\tThe new icu_collation_* fields in schema-sorts.xml now actually use ICUCollationField (previously was mistakenly CollationField).  I also had to make changes to the Ant build to build lucene/analysis/icu/ and solr/contrib/analysis-extras/, and include their build output and the ICU4J jar in solr-core's test classpath.  IntelliJ config changes along the same lines are also included.\n\tIn schema-sorts.xml, the bcd_str_* (BCDStrField) fields are now copied from the int field rather from the long field (BCDStrField extends BCDIntField).\n\tAll UUID field values are now generated on the spot, rather than via the \"NEW\" delayed-instantiation method, to allow distributed UUID sort testing.\n\n\n\n\nI've also added a CHANGES.txt entry.  \n\nThis is ready to go.  I'm committing shortly, and will backport to branch_4x and the lucene_solr_4_7 branch, and then cut 4.7.1 RC2.\n\nThe patch also includes a fix to FloatField.getSortField() to allow CursorPagingTest.testRandomSortsOnLargeIndex() to succeed:\n\n\n@@ -70,7 +70,7 @@\n   @Override\n   public SortField getSortField(SchemaField field,boolean reverse) {\n     field.checkSortability();\n-    return new SortField(field.name,SortField.Type.FLOAT, reverse);\n+    return new SortField(field.name, PARSER, reverse);\n   }\n\n\n\n (PARSER is a FieldCache.FloatParser defined above in FloatField.)  Without the above change (which makes FloatField.getSortField() the same as the current DoubleField.getSortField()), I get the following exception from CursorPagingTest.testRandomSortsOnLargeIndex():\n\n\n22160 T11 C147 oasc.SolrCore.execute [collection1] webapp=null path=null params={q=*%3A*&fl=id&rows=50&sort=icu_collation_en_primary+desc%2C+id+desc&cursorMark=AoIAQQ%3D%3D} hits=187 status=0 QTime=1 \n22163 T11 C147 oasc.SolrException.log ERROR java.lang.NumberFormatException: Invalid shift value in prefixCoded bytes (is encoded value really an INT?)\n\t\tat org.apache.lucene.util.NumericUtils.getPrefixCodedIntShift(NumericUtils.java:210)\n\t\tat org.apache.lucene.util.NumericUtils$2.accept(NumericUtils.java:493)\n\t\tat org.apache.lucene.index.FilteredTermsEnum.next(FilteredTermsEnum.java:235)\n\t\tat org.apache.lucene.search.FieldCacheImpl$Uninvert.uninvert(FieldCacheImpl.java:305)\n\t\tat org.apache.lucene.search.FieldCacheImpl$FloatCache.createValue(FieldCacheImpl.java:659)\n\t\tat org.apache.lucene.search.FieldCacheImpl$Cache.get(FieldCacheImpl.java:209)\n\t\tat org.apache.lucene.search.FieldCacheImpl.getFloats(FieldCacheImpl.java:595)\n\t\tat org.apache.lucene.search.FieldCacheImpl$FloatCache.createValue(FieldCacheImpl.java:626)\n\t\tat org.apache.lucene.search.FieldCacheImpl$Cache.get(FieldCacheImpl.java:209)\n\t\tat org.apache.lucene.search.FieldCacheImpl.getFloats(FieldCacheImpl.java:595)\n\t\tat org.apache.lucene.search.FieldComparator$FloatComparator.setNextReader(FieldComparator.java:379)\n\t\tat org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector.setNextReader(TopFieldCollector.java:452)\n\t\tat org.apache.solr.search.SolrIndexSearcher.sortDocSet(SolrIndexSearcher.java:2034)\n\t\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1388)\n\t\tat org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:479)\n\t\tat org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:461)\n\t\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:221)\n\t\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\t\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1952)\n\t\tat org.apache.solr.util.TestHarness.query(TestHarness.java:295)\n\t\tat org.apache.solr.util.TestHarness.query(TestHarness.java:278)\n\t\tat org.apache.solr.SolrTestCaseJ4.assertJQ(SolrTestCaseJ4.java:819)\n\t\tat org.apache.solr.SolrTestCaseJ4.assertJQ(SolrTestCaseJ4.java:788)\n\t\tat org.apache.solr.CursorPagingTest.assertFullWalkNoDups(CursorPagingTest.java:685)\n\t\tat org.apache.solr.CursorPagingTest.testRandomSortsOnLargeIndex(CursorPagingTest.java:578)\n\t\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\t\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\t\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\t\tat java.lang.reflect.Method.invoke(Method.java:606)\n\t\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1617)\n\t\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:826)\n\t\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:862)\n\t\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:876)\n\t\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:53)\n\t\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n\t\tat org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:51)\n\t\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\t\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n\t\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n\t\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n\t\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\t\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\t\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:359)\n\t\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:783)\n\t\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:443)\n\t\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:835)\n\t\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:737)\n\t\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:771)\n\t\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:782)\n\t\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\t\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:53)\n\t\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\t\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n\t\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n\t\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n\t\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n\t\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\t\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)\n\t\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\t\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n\t\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n\t\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\t\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:359)\n\t\tat java.lang.Thread.run(Thread.java:724)\n\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951657",
            "date": "2014-03-29T01:01:06+0000",
            "content": "Commit 1582929 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1582929 ]\n\nSOLR-5920: Distributed sort on DateField, BoolField and BCD\n{Int,Long,Str}\nField returns string cast exception "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13951668",
            "date": "2014-03-29T01:13:31+0000",
            "content": "(PARSER is a FieldCache.FloatParser defined above in FloatField.)\n\nOn branch_4x, this thing isn't there.  Fortunately, the *Cursor* tests all succeed without that change. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951677",
            "date": "2014-03-29T01:22:38+0000",
            "content": "Commit 1582933 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1582933 ]\n\nSOLR-5920: Distributed sort on DateField, BoolField and BCD\n{Int,Long,Str}\nField returns string cast exception (merged trunk r1582929) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951684",
            "date": "2014-03-29T01:35:25+0000",
            "content": "Commit 1582934 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1582934 ]\n\nSOLR-5920: fix CursorMarkTest.getRandomCollation() to call termAtt.fillBytesRef() and ts.end() "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951686",
            "date": "2014-03-29T01:37:23+0000",
            "content": "Commit 1582935 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1582935 ]\n\nSOLR-5920: fix CursorMarkTest.getRandomCollation() to call termAtt.fillBytesRef() and ts.end() (merged trunk r1582934) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951688",
            "date": "2014-03-29T01:38:09+0000",
            "content": "Commit 1582936 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1582936 ]\n\nSOLR-5920: mergeprops (merged trunk r1582934) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951714",
            "date": "2014-03-29T02:39:15+0000",
            "content": "Commit 1582937 from Steve Rowe in branch 'dev/branches/lucene_solr_4_7'\n[ https://svn.apache.org/r1582937 ]\n\nSOLR-5920: Distributed sort on DateField, BoolField and BCD\n{Int,Long,Str}\nField returns string cast exception (merged branch_4x r1582933) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951752",
            "date": "2014-03-29T04:18:25+0000",
            "content": "Commit 1582951 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1582951 ]\n\nSOLR-5920: Fix forbidden-api-check failure "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951754",
            "date": "2014-03-29T04:18:56+0000",
            "content": "Commit 1582952 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1582952 ]\n\nSOLR-5920: Fix forbidden-api-check failure "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13951755",
            "date": "2014-03-29T04:19:39+0000",
            "content": "Commit 1582953 from shalin@apache.org in branch 'dev/branches/lucene_solr_4_7'\n[ https://svn.apache.org/r1582953 ]\n\nSOLR-5920: Fix forbidden-api-check failure "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13954276",
            "date": "2014-03-29T15:11:35+0000",
            "content": "Can this be marked fixed? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13954335",
            "date": "2014-03-29T16:58:46+0000",
            "content": "Can this be marked fixed?\n\nYes, I committed to trunk, branch_4x and lucene_solr_4_7. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13954727",
            "date": "2014-03-30T15:56:51+0000",
            "content": "Commit 1583159 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1583159 ]\n\nSOLR-5920: IntelliJ config: fix solr-core-tests dependency module name analysis-icu -> icu "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13954728",
            "date": "2014-03-30T15:58:47+0000",
            "content": "Commit 1583160 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1583160 ]\n\nSOLR-5920: IntelliJ config: fix solr-core-tests dependency module name analysis-icu -> icu (merged trunk r1583159) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13954729",
            "date": "2014-03-30T16:01:50+0000",
            "content": "Commit 1583161 from Steve Rowe in branch 'dev/branches/lucene_solr_4_7'\n[ https://svn.apache.org/r1583161 ]\n\nSOLR-5920: IntelliJ config: fix solr-core-tests dependency module name analysis-icu -> icu (merged trunk r1583159) "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13957727",
            "date": "2014-04-02T15:03:35+0000",
            "content": "Bulk close 4.7.1 issues "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13958534",
            "date": "2014-04-03T05:32:09+0000",
            "content": "Commit 1584260 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1584260 ]\n\nSOLR-5920: Maven config: restrict conversion of module names containing 'analysis-' to 'analyzers-' to those not preceded by 'solr-' "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13958537",
            "date": "2014-04-03T05:35:25+0000",
            "content": "Commit 1584261 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1584261 ]\n\nSOLR-5920: Maven config: restrict conversion of module names containing 'analysis-' to 'analyzers-' to those not preceded by 'solr-' (merged trunk r1584260) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13958538",
            "date": "2014-04-03T05:37:28+0000",
            "content": "Commit 1584262 from Steve Rowe in branch 'dev/branches/lucene_solr_4_7'\n[ https://svn.apache.org/r1584262 ]\n\nSOLR-5920: Maven config: restrict conversion of module names containing 'analysis-' to 'analyzers-' to those not preceded by 'solr-' (merged trunk r1584260) "
        },
        {
            "author": "Ramon Salla",
            "id": "comment-13995089",
            "date": "2014-05-12T13:46:18+0000",
            "content": "Hi, I have created the next Issue which could be related to this one when sorting on a date field and using new cursorMark pagination search.\n\nhttps://issues.apache.org/jira/browse/SOLR-6061 "
        }
    ]
}