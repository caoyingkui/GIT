{
    "id": "LUCENE-6587",
    "title": "Move explain() to Scorer",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "At the moment, the explanation API is on Weight, rather than on Scorer.  This has a number of disadvantages:\n\n\tIt means that Weights need to know about the scoring algorithms of their child scorers, which results in a leaky API (for example, the SloppyPhraseScorer has a package-private sloppyFreq() method which is only used by PhraseWeight.explain(), and SpanScorer has a similar public method that is again only called by explanation functions)\n\tIt leads to lots of duplicated code - more or less every Weight.explain() method creates a Scorer, advances to the appropriate doc, and checks for a match\n\tIt's very slow, because we create a new Scorer for every document\n\n\n\nI'd like to try moving explain() directly to Scorer.  We can keep the old slow IndexSearcher.explain() API, but in addition explanations could now be generated efficiently in a Collector.",
    "attachments": {
        "LUCENE-6587.patch": "https://issues.apache.org/jira/secure/attachment/12740621/LUCENE-6587.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14593286",
            "author": "Alan Woodward",
            "date": "2015-06-19T10:15:18+0000",
            "content": "Here's a patch.\n\nWeight.explain(LeafReaderContext, int) is final, pulling a Scorer, advancing to the relevant doc, and calling scorer.explain().  There's a new explainMiss(LRC, int) method which is called if the document doesn't match, with a default implementation.  BooleanWeight overrides this.\n\nThere's a nocommit around what to do with query rescorers.  I don't really want to make Weight.explain() overrideable, which is the easiest way to deal with them, but I'm not sure that there's any better way of doing it.\n\nAll lucene tests pass, will look at the Solr ones presently. "
        },
        {
            "id": "comment-14593366",
            "author": "Robert Muir",
            "date": "2015-06-19T12:05:10+0000",
            "content": "I am not sure it really helps duplicated code. Now instead of logic just in booleanweight, all N booleanscorers need special logic! And look at how complicated this can be for e.g. reqOptSumScorer.\n\nI also do not think this method needs to be sped up or optimized. its for debugging. I would prefer we keep Scorer on the simple side. "
        }
    ]
}