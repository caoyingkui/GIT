{
    "id": "LUCENE-1413",
    "title": "Creating PlainTextDictionary with UTF8 files",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/spellchecker"
        ],
        "type": "Improvement",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "2.3.2",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "Generate indexes from text files is good, but can't read utf8 files.\nIt can easily made by adding the following code to PlainTextDictionary.java:\n\npublic PlainTextDictionary(InputStream dictFile, String fileEncoding) throws UnsupportedEncodingException \n{\n    in = new BufferedReader(new InputStreamReader(dictFile, fileEncoding));\n }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-03-19T16:08:06+0000",
            "content": "I'm closing this, because PlainTextDictionary has also the following public constructor:\n\n  /**\n\n\tCreates a dictionary based on a reader.\n   */\n  public PlainTextDictionary(Reader reader) \n{\n    in = new BufferedReader(reader);\n  }\n\n\n\nSo you can just pass in the InputStreamReader(dictFile, fileEncoding) using this constructor. ",
            "author": "Michael Busch",
            "id": "comment-12683500"
        }
    ]
}