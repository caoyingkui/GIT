{
    "id": "LUCENE-7395",
    "title": "Query Norm and coordination factor not calculated when PerFieldSimilarityWrapper is used",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.3.1,                                            5.4.1",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.2"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "If any kind of similarity is defined and therefore the SchemaSimilarityFactory is defined as global similarity the queryNorm is always 1.0\n\nThe PerFieldSimilarityWrapper delegates some of the methods to the desired Similarity but misses to delegate public float queryNorm(float valueForNormalization)\nInstead the IndexReader calls this method on the base class Similarity.\n\nThe result is that all scores are much higher.\n\nI created a custom similarity which extends ClassicSimilarity.\nTo have the calculation fixed I did a local \"hotfix\"  which always uses the default similarity. Also wrong for some cases but fine in my scenario.\n\n  @Override\n  public float queryNorm(float valueForNormalization) \n{\n    return get(\"\").queryNorm(valueForNormalization); // use default similarity to calculate\n  }",
    "attachments": {
        "LUCENE-7395.patch": "https://issues.apache.org/jira/secure/attachment/12820115/LUCENE-7395.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15168758",
            "author": "Sascha Markus",
            "date": "2016-02-26T10:07:02+0000",
            "content": "Of couse the same applies to methods like public float coord(int overlap, int maxOverlap)  "
        },
        {
            "id": "comment-15391854",
            "author": "Uwe Schindler",
            "date": "2016-07-25T13:11:29+0000",
            "content": "This affects also Lucene, so I moved it. "
        },
        {
            "id": "comment-15392039",
            "author": "David Smiley",
            "date": "2016-07-25T14:50:57+0000",
            "content": "Is this a duplicate of SOLR-9315? "
        },
        {
            "id": "comment-15392178",
            "author": "Uwe Schindler",
            "date": "2016-07-25T16:08:11+0000",
            "content": "I think the Solr one is a duplicate of this one. The problem already exists in Lucene, because it returns a static constant of 1 for those methods.\n\nI have the feeling that PerFieldSimilarityWrapper should provide some \"fallback\" similraity (defaultSimilarity in Solr), too. Same as PerFieldAnalyzerWrapper. It is currently abstract and you have to implement the \"per field\" method. But for all those which do not use fields, it should also provide some abstract method to return a default for all methods in similarity that are not per-field. "
        },
        {
            "id": "comment-15392181",
            "author": "Uwe Schindler",
            "date": "2016-07-25T16:10:07+0000",
            "content": "My proposal is to add a second abstarct method like the protected get(): https://lucene.apache.org/core/6_1_0/core/org/apache/lucene/search/similarities/PerFieldSimilarityWrapper.html#get-java.lang.String-\n\nIn that case it could be named abstract Similarity default(). "
        },
        {
            "id": "comment-15392331",
            "author": "Adrien Grand",
            "date": "2016-07-25T17:24:46+0000",
            "content": "I agree the default impl of coord and queryNorm on PerFieldSimilarity is trappy in 6.x. +1 to adding an abstract method or a required constructor argument. "
        },
        {
            "id": "comment-15392536",
            "author": "Uwe Schindler",
            "date": "2016-07-25T19:22:40+0000",
            "content": "I think a required ctor param is also fine. The abstract method is not needed as it should always be a constant. Like the other methods, I will make the impls final. Thanks Adrien!\n\nAs this changes API we can do this in 6.2, not earlier. "
        },
        {
            "id": "comment-15393315",
            "author": "Uwe Schindler",
            "date": "2016-07-26T06:36:16+0000",
            "content": "Patch using a default similarity passed through ctor. This patch also fixes the Solr issue. "
        },
        {
            "id": "comment-15393472",
            "author": "Adrien Grand",
            "date": "2016-07-26T09:04:53+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15395203",
            "author": "ASF subversion and git services",
            "date": "2016-07-27T08:08:01+0000",
            "content": "Commit 22d24969f5b148a78684482592c63e6f976fae6c in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=22d2496 ]\n\nLUCENE-7395, SOLR-9315: Fix PerFieldSimilarityWrapper to also delegate query norm and coordination factor using a default similarity added as ctor param "
        },
        {
            "id": "comment-15439081",
            "author": "Michael McCandless",
            "date": "2016-08-26T14:01:17+0000",
            "content": "Bulk close resolved issues after 6.2.0 release. "
        }
    ]
}