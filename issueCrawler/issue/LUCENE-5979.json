{
    "id": "LUCENE-5979",
    "title": "Use the cost API instead of a heuristic on the first document in FilteredQuery to decide on whether to use random access",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0"
        ]
    },
    "description": "Now that some major filters such as TermsFilter and MultiTermQueryWrapperFilter return DocIdSets that have a better cost, we should switch to the cost API.",
    "attachments": {
        "LUCENE-5979.patch": "https://issues.apache.org/jira/secure/attachment/12672020/LUCENE-5979.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14153126",
            "author": "Adrien Grand",
            "content": "Here is a simple patch. I imagine the idea of firstFilterDoc < 100 was to use random-access when the filter matches more than 1% of documents, so I translated it to filterCost * 100 > maxDoc. ",
            "date": "2014-09-30T12:45:53+0000"
        },
        {
            "id": "comment-14153152",
            "author": "Robert Muir",
            "content": "I like the idea of using a better heuristic here, I guess my question is if interpreting the cost method as an absolute value (versus just using it as a relative one) is safe? ",
            "date": "2014-09-30T13:23:56+0000"
        },
        {
            "id": "comment-14154811",
            "author": "Adrien Grand",
            "content": "I don't think the documentation of the cost API prevents from interpreting the cost as an absolute value? Even if it is not something that we do today, I think all our current DocIdSetIterator (but FixedBitSet) return cost values that are ok to intepret as an absolute value? Even if this estimation is very vague it would be much better than what we have today to decide on the filter strategy to use. Moreover I think this could also prove valuable in CachingWrapperFilter to decide on the cacheable impl to use: some impls would likely better at high-cardinality and vice-versa? ",
            "date": "2014-10-01T13:54:18+0000"
        },
        {
            "id": "comment-14155071",
            "author": "Robert Muir",
            "content": "I don't think the documentation prevents it, its just this would be the first use of it. \n\nso I am +1, I just am worried about 'crappy' implementations though, like FixedBitSet. Must that one really implement DocIDSet? ",
            "date": "2014-10-01T16:32:46+0000"
        },
        {
            "id": "comment-14155089",
            "author": "Uwe Schindler",
            "content": "Thanks for removing the crappy extra leapfrog iterator that was just there to deliver the firstFilterDoc (because it was consumed before). I am unfortunately not completely familar with the absolute or non-absolute cost values to make a good guess if cost * 100 > maxDoc is fine... ",
            "date": "2014-10-01T16:46:22+0000"
        },
        {
            "id": "comment-14155111",
            "author": "Uwe Schindler",
            "content": "I just am worried about 'crappy' implementations though, like FixedBitSet. Must that one really implement DocIDSet?\n\nLUCENE-5441 was opened to solve this. I just did not finish it, but the patch should still work as base for extending. ",
            "date": "2014-10-01T17:01:36+0000"
        },
        {
            "id": "comment-14155466",
            "author": "Adrien Grand",
            "content": "I just am worried about 'crappy' implementations though, like FixedBitSet. Must that one really implement DocIDSet?\n\nLUCENE-5938 makes sure to not use FixedBitSet when the doc ids to store are sparse. I think the only last bad guys are ChainedFilter (which I proposed to remove) and BooleanFilter (that could be fixed). So I don't think this should be a blocker for this issue? ",
            "date": "2014-10-01T20:41:02+0000"
        },
        {
            "id": "comment-14155677",
            "author": "Robert Muir",
            "content": "ok. ",
            "date": "2014-10-01T22:32:22+0000"
        },
        {
            "id": "comment-14156301",
            "author": "Adrien Grand",
            "content": "If there are no concerns anymore, I will commit this patch soon. ",
            "date": "2014-10-02T10:25:25+0000"
        },
        {
            "id": "comment-14160128",
            "author": "ASF subversion and git services",
            "content": "Commit 1629598 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1629598 ]\n\nLUCENE-5979: Use the cost API to decide on whether to use random-access to intersect queries and filters. ",
            "date": "2014-10-06T09:20:01+0000"
        },
        {
            "id": "comment-14160130",
            "author": "ASF subversion and git services",
            "content": "Commit 1629599 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1629599 ]\n\nLUCENE-5979: Use the cost API to decide on whether to use random-access to intersect queries and filters. ",
            "date": "2014-10-06T09:22:47+0000"
        },
        {
            "id": "comment-14332991",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:02:59+0000"
        }
    ]
}