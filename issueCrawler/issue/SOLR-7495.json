{
    "id": "SOLR-7495",
    "title": "Unexpected docvalues type NUMERIC when grouping by a int facet",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.4"
        ],
        "affect_versions": "5.0,                                            5.1,                                            5.2,                                            5.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Hey All,\nAfter upgrading from solr 4.10 to 5.1 with solr could\nI'm getting a IllegalStateException when i try to facet a int field.\n\nIllegalStateException: unexpected docvalues type NUMERIC for field 'year' (expected=SORTED). Use UninvertingReader or index with docvalues.\n\n\n\nschema.xml\n\n<?xml version=\"1.0\" ?>\n<schema name=\"schema\" version=\"1.2\">\n    <fields>\n        <!-- solar cloud version field -->\n        <field name=\"_version_\" type=\"long\" indexed=\"true\" stored=\"true\"/>\n\n        <!-- Common fields -->\n        <field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\"  multiValued=\"false\" required=\"true\"/>\n        <field name=\"index_type\" type=\"string\" indexed=\"true\"  stored=\"true\"  multiValued=\"false\" required=\"true\"/>\n\n        <field name=\"year\" type=\"int\" indexed=\"true\" stored=\"true\"/>\n        <field name=\"model\" type=\"string\" indexed=\"true\" stored=\"true\"/>\n        <field name=\"year_make_model\" type=\"string\" indexed=\"true\" stored=\"true\"/>\n    </fields>\n\n    <!-- Field Types -->\n    <types>\n        <fieldType name=\"string\" class=\"solr.StrField\" sortMissingLast=\"true\" />\n        <fieldType name=\"boolean\" class=\"solr.BoolField\" sortMissingLast=\"true\"/>\n        <fieldType name=\"int\" class=\"solr.TrieIntField\" precisionStep=\"0\" positionIncrementGap=\"0\"/>\n        <fieldType name=\"float\" class=\"solr.TrieFloatField\" precisionStep=\"0\" positionIncrementGap=\"0\"/>\n        <fieldType name=\"long\" class=\"solr.TrieLongField\" precisionStep=\"0\" positionIncrementGap=\"0\"/>\n        <fieldType name=\"double\" class=\"solr.TrieDoubleField\" precisionStep=\"0\" positionIncrementGap=\"0\"/>\n        <fieldType name=\"date\" class=\"solr.TrieDateField\" precisionStep=\"0\" positionIncrementGap=\"0\"/>\n        <fieldType name=\"text_ngram\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n            <analyzer type=\"index\">\n                <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n                <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />\n                <filter class=\"solr.LowerCaseFilterFactory\"/>\n                <filter class=\"solr.EdgeNGramFilterFactory\" minGramSize=\"2\" maxGramSize=\"15\"/>\n            </analyzer>\n            <analyzer type=\"query\">\n                <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n                <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />\n                <filter class=\"solr.SynonymFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>\n                <filter class=\"solr.LowerCaseFilterFactory\"/>\n            </analyzer>\n        </fieldType>\n        <fieldType name=\"text_general\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n            <analyzer type=\"index\">\n                <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n                <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />\n                <filter class=\"solr.LowerCaseFilterFactory\"/>\n                <filter class=\"solr.EdgeNGramFilterFactory\" minGramSize=\"2\" maxGramSize=\"15\"/>\n            </analyzer>\n            <analyzer type=\"query\">\n                <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n                <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />\n                <filter class=\"solr.SynonymFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>\n                <filter class=\"solr.LowerCaseFilterFactory\"/>\n            </analyzer>\n        </fieldType>\n\n        <fieldType name=\"location_rpt\" class=\"solr.SpatialRecursivePrefixTreeFieldType\" geo=\"true\" distErrPct=\"0.025\" maxDistErr=\"0.000009\" units=\"degrees\" />\n    </types>\n\n    <uniqueKey>id</uniqueKey>\n\n    <defaultSearchField>name</defaultSearchField>\n\n    <solrQueryParser defaultOperator=\"OR\"/>\n</schema>\n\n\n\n\nquery :\n\n\nhttp://solr.dev:8983/solr/my_collection/select?wt=json&fl=id&fq=index_type:foobar&group=true&group.field=year_make_model&group.facet=true&facet=true&facet.field=year\n\n\n\n\n\nException :\n\n\null:org.apache.solr.common.SolrException: Exception during facet.field: year\n    at org.apache.solr.request.SimpleFacets$3.call(SimpleFacets.java:627)\n    at org.apache.solr.request.SimpleFacets$3.call(SimpleFacets.java:612)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at org.apache.solr.request.SimpleFacets$2.execute(SimpleFacets.java:566)\n    at org.apache.solr.request.SimpleFacets.getFacetFieldCounts(SimpleFacets.java:637)\n    at org.apache.solr.request.SimpleFacets.getFacetCounts(SimpleFacets.java:280)\n    at org.apache.solr.handler.component.FacetComponent.process(FacetComponent.java:106)\n    at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:222)\n    at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n    at org.apache.solr.core.SolrCore.execute(SolrCore.java:1984)\n    at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:829)\n    at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:446)\n    at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:220)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:368)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)\n    at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:953)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1014)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:861)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n    at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)\n    at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: unexpected docvalues type NUMERIC for field 'year' (expected=SORTED). Use UninvertingReader or index with docvalues.\n    at org.apache.lucene.index.DocValues.checkField(DocValues.java:208)\n    at org.apache.lucene.index.DocValues.getSorted(DocValues.java:264)\n    at org.apache.lucene.search.grouping.term.TermGroupFacetCollector$SV.doSetNextReader(TermGroupFacetCollector.java:135)\n    at org.apache.lucene.search.SimpleCollector.getLeafCollector(SimpleCollector.java:33)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:705)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:428)\n    at org.apache.solr.request.SimpleFacets.getGroupedCounts(SimpleFacets.java:532)\n    at org.apache.solr.request.SimpleFacets.getTermCounts(SimpleFacets.java:458)\n    at org.apache.solr.request.SimpleFacets.getTermCounts(SimpleFacets.java:381)\n    at org.apache.solr.request.SimpleFacets$3.call(SimpleFacets.java:621)\n    ... 37 more\n\norg.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://10.0.2.15:8983/solr/my_collection_shard2_replica1: Exception during facet.field: year\n    at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:556)\n    at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:233)\n    at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:225)\n    at org.apache.solr.client.solrj.SolrClient.request(SolrClient.java:1220)\n    at org.apache.solr.handler.component.HttpShardHandler$1.call(HttpShardHandler.java:221)\n    at org.apache.solr.handler.component.HttpShardHandler$1.call(HttpShardHandler.java:184)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)",
    "attachments": {
        "SOLR-7495.patch": "https://issues.apache.org/jira/secure/attachment/12752987/SOLR-7495.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-05-11T15:12:46+0000",
            "author": "Ovidiu Mihalcea",
            "content": "I'm having the same problem, Solr 5.1, without using SolrCloud.\nThe problem seemed to have been fixed if I made the field I was trying to facet on multivalued. But then the logs were all full of \"Error creating FieldCache for field: brand_id\"\nWe wanted to upgrade to Solr 5.1, but we cannot get past this bug. ",
            "id": "comment-14538019"
        },
        {
            "date": "2015-05-30T16:53:47+0000",
            "author": "Xu Zhang",
            "content": "Currently, I think Facet.field only works fine when the it is multi-valued or single-valued StrField when grouping. There isn't a GroupedFacetCollector that works on numerics.\n\nThe reason is in TermGroupFacetCollector class, we init facetFieldTermsIndex as SortedDocValues (if single-valued). In this case, if facet.field is numeric, it will throw this exception.  ",
            "id": "comment-14566096"
        },
        {
            "date": "2015-08-03T22:26:45+0000",
            "author": "Nick Coult",
            "content": "We are having the same problem in Solr 5.2. ",
            "id": "comment-14652674"
        },
        {
            "date": "2015-08-07T14:41:52+0000",
            "author": "Ovidiu Mihalcea",
            "content": "Any news when this would be solved? For now, Solr 5 seems much much more buggy then 4.x... ",
            "id": "comment-14661934"
        },
        {
            "date": "2015-08-07T14:55:49+0000",
            "author": "Fabio Batista da Silva",
            "content": "I ended working around this bug, i created a string field year_s only to be able to use it as group facet. ",
            "id": "comment-14661953"
        },
        {
            "date": "2015-08-28T12:36:32+0000",
            "author": "Varun Thacker",
            "content": "Test case which reproduces this problem.\n\nCurrently group.facet is broken on all numeric non multi-valued fields. ",
            "id": "comment-14718476"
        },
        {
            "date": "2015-09-09T08:42:06+0000",
            "author": "Vishnu Mishra",
            "content": "I also have the same problem in solr 5.3.  ",
            "id": "comment-14736462"
        },
        {
            "date": "2015-09-24T12:42:52+0000",
            "author": "Yonik Seeley",
            "content": "These bugs started with LUCENE-5666 ",
            "id": "comment-14906294"
        },
        {
            "date": "2015-09-28T08:05:51+0000",
            "author": "Oliver Schrenk",
            "content": "Is there another way of faceting numeric data now? ",
            "id": "comment-14910143"
        },
        {
            "date": "2015-09-29T17:10:38+0000",
            "author": "Sabino Gadaleta",
            "content": "We have the same problem and it is preventing us from upgrading solr. ",
            "id": "comment-14935458"
        },
        {
            "date": "2015-10-02T10:46:34+0000",
            "author": "Spyros Kapnissis",
            "content": "Same error with 5.3.1. Changing the grouping field to string type as mentioned above temporarily resolved the issue for me. ",
            "id": "comment-14941011"
        },
        {
            "date": "2015-11-03T17:20:26+0000",
            "author": "Anton Khoff",
            "content": "I confirm we have the same issue starting from 5.1 and it still exists in 5.3.1. Sounds like a major one to me, hope it can be fixed soon ",
            "id": "comment-14987661"
        },
        {
            "date": "2015-11-03T20:15:11+0000",
            "author": "Kevin Cunningham",
            "content": "Changing the type to multi int allowed us to temporarily work around the issue. ",
            "id": "comment-14988029"
        },
        {
            "date": "2015-12-04T20:08:56+0000",
            "author": "Peter Ciuffetti",
            "content": "The multi value work around is not available to me because I also need the fields affected by this bug to be sortable.  And the string work around would only give me sortable values if the int's were fixed width (some of my int fields are, some are not). ",
            "id": "comment-15042147"
        },
        {
            "date": "2015-12-04T20:54:49+0000",
            "author": "David Smiley",
            "content": "Ok; you could use two fields then, one for sorting purposes, one for grouping purposes.  This is a typical pattern \u2013 indexing a field different ways for different purposes. ",
            "id": "comment-15042220"
        },
        {
            "date": "2015-12-05T15:28:13+0000",
            "author": "Gus Heck",
            "content": "Peter Ciuffetti I recently contributed SOLR-8113 which was specifically motivated by the need to sort when fields were multivalued. (by creating a copy that was single valued containing the first value). ",
            "id": "comment-15043348"
        },
        {
            "date": "2015-12-18T10:19:39+0000",
            "author": "S\u00e9bastien Cail",
            "content": "Hi,\nI m having the same problem in SOLR 5.3.0 ",
            "id": "comment-15063790"
        },
        {
            "date": "2016-04-07T00:20:53+0000",
            "author": "Karthik Ramachandran",
            "content": "Having the same issue in 5.5, will this be fixed any time soon? ",
            "id": "comment-15229414"
        },
        {
            "date": "2016-04-07T04:30:42+0000",
            "author": "Shawn Heisey",
            "content": "A question for everyone having this problem ... is your numeric field defined with docValues=\"true\"?  Does your index contain multiple shards?  The error message in the original report shows that Fabio's index is sharded, and the schema shows that the field in question did not have docValues.\n\nI suspect that if you add docValues, which will require a reindex, that the problem might go away.  The problem also might only exist on a multi-shard (distributed) index.\n\nSee SOLR-8088.  The field I was trying to group on is a text field, not numeric, but docValues might also fix this problem.  Since this issue is about a numeric field, there's no need to worry about things like lowercasing.\n\nAdding docValues makes sorting, faceting, and grouping use less memory, and also usually makes them faster.  It also makes the index larger. ",
            "id": "comment-15229670"
        },
        {
            "date": "2016-04-07T14:53:54+0000",
            "author": "Matt Hilt",
            "content": "We had this problem using Solr 5.1 on an index that was not sharded. The fields in question did not have docValues set however. ",
            "id": "comment-15230355"
        },
        {
            "date": "2016-04-07T15:09:20+0000",
            "author": "Fabio Batista da Silva",
            "content": "IRC I tried docValues=\"true\" and got the same results ",
            "id": "comment-15230375"
        },
        {
            "date": "2016-04-07T16:34:45+0000",
            "author": "Shawn Heisey",
            "content": "Did you reindex? Just adding the parameter to the field definition is not enough. ",
            "id": "comment-15230515"
        },
        {
            "date": "2016-04-07T16:38:31+0000",
            "author": "Fabio Batista da Silva",
            "content": "I had fresh SOLR install ",
            "id": "comment-15230530"
        },
        {
            "date": "2016-04-12T01:22:27+0000",
            "author": "Matt Weber",
            "content": "group.facet also breaks range queries.  I'm finding v5 almost non-usable.\n\nI tried setting docValues to true on the fields (and re-indexing), but it hasn't worked differently.\n\nThe only workaround I found was using facet queries with multi-valued fields, but that doesn't help with everything.\n\nThe work around doesn't apply to range facets.\n\nFor example:\n\nThis works...\n\n&facet.range=rounded_price&f.rounded_price.facet.range.start=0&f.rounded_price.facet.range.end=100&f.rounded_price.facet.range.gap=10&facet=on\n\nBut simply adding \"group.facet\" fails...\n\n&facet.range=rounded_price&f.rounded_price.facet.range.start=0&f.rounded_price.facet.range.end=100&f.rounded_price.facet.range.gap=10&facet=on&group.facet=true&group.field=anyNumericField ",
            "id": "comment-15236395"
        },
        {
            "date": "2016-04-12T18:44:15+0000",
            "author": "Scott Stults",
            "content": "SimpleFacets uses the insanity collector wrapper to return null docValues on grouping fields that are single-valued numerics. It looks like this also needs to be done on the facet field as well (when grouping). The attached patch first checks to see if the grouping field collector needs to be wrapped (that's what we've been doing) and then a second wrapper is applied if the facet field needs to be wrapped as well. \n\nThe new patch includes the previously attached unit test (now working). ",
            "id": "comment-15237746"
        },
        {
            "date": "2016-05-09T23:01:25+0000",
            "author": "Nick Coult",
            "content": "Is this still a bug in Solr 6? ",
            "id": "comment-15277256"
        },
        {
            "date": "2016-07-07T19:21:22+0000",
            "author": "Anton Khoff",
            "content": "And what about 6.1? ",
            "id": "comment-15366626"
        },
        {
            "date": "2016-07-15T12:30:42+0000",
            "author": "Scott Stults",
            "content": "The patched test testSimpleGroupedFacet verifies that this is still an issue with 6.1. It fails with:\n\n\nCaused by: java.lang.IllegalStateException: unexpected docvalues type NUMERIC for field 'duration_i1' (expected=SORTED). Use UninvertingReader or index with docvalues.\n\nHowever, when SimpleFacets.java is also patched the test passes. So this appears to still be necessary in 6.1. ",
            "id": "comment-15379318"
        },
        {
            "date": "2016-07-20T00:14:23+0000",
            "author": "Nick Coult",
            "content": "Can you supply your patch for 6.1?\nThanks ",
            "id": "comment-15385097"
        },
        {
            "date": "2016-07-20T13:01:44+0000",
            "author": "Scott Stults",
            "content": "The patch uploaded in April works for me on the 6.1 branch. Is it not working for you? ",
            "id": "comment-15385813"
        },
        {
            "date": "2016-07-20T23:13:07+0000",
            "author": "Nick Coult",
            "content": "The patch did not cleanly apply but it does compile and run correctly, thanks! ",
            "id": "comment-15386783"
        },
        {
            "date": "2016-09-22T18:19:54+0000",
            "author": "Scott Stults",
            "content": "Robert Muir could you weigh in on the approach of the patch? I'd be happy to tweak it or take a completely different angle if that'll help close this issue. ",
            "id": "comment-15514067"
        },
        {
            "date": "2016-11-14T18:00:35+0000",
            "author": "Matt Hilt",
            "content": "I have been testing this patch out on Solr 6.x. It does correct the problem (at least on 6.0.1), but only when the field does NOT have docValues enabled. Is this expected? Can the existing patch be extended to support docValues too, or is that a completely separate implementation? ",
            "id": "comment-15664554"
        },
        {
            "date": "2017-01-05T01:41:03+0000",
            "author": "Dennis Gove",
            "content": "This patch applies cleanly to branch_6x.\n\nI did see the test fail before applying the change to SimpleFacets and then saw it pass after applying the change to SimpleFacets. Going to run through all the tests before committing this change. ",
            "id": "comment-15799964"
        },
        {
            "date": "2017-01-05T03:19:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6e10e36216db9861530b4407866e292a89927a9e in lucene-solr's branch refs/heads/branch_6x from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6e10e36 ]\n\nSOLR-7495: Support Facet.field on a non-DocValued, single-value, int field ",
            "id": "comment-15800146"
        },
        {
            "date": "2017-01-05T03:25:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f9e3554838f3a43742928d11a7dcd9a8409e0c97 in lucene-solr's branch refs/heads/master from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f9e3554 ]\n\nSOLR-7495: Support Facet.field on a non-DocValued, single-value, int field ",
            "id": "comment-15800158"
        },
        {
            "date": "2017-01-05T16:14:11+0000",
            "author": "Eugene Tskhovrebov",
            "content": "AFAIS you can wrap any field into InsanityWrapper. What is the idea behind such strict check?\nif (sf != null && !sf.hasDocValues() && !sf.multiValued() && sf.getType().getNumericType() != null) {\nWhat about other field types (e.g., Numeric DocValued or Dates)? ",
            "id": "comment-15801757"
        },
        {
            "date": "2017-01-09T21:21:35+0000",
            "author": "Scott Stults",
            "content": "Robert Muir added that line at the same time as the Insanity wrapper itself as part of LUCENE-5666, but I'll take a crack at an explanation. There's only a couple of cases outlined Insanity where we need to wrap the field, essentially returning null instead of the docValues. When the collector returns null the stored values of the field are used instead of docValues. Since stored values are slower than docValues we only want to wrap the particular field type that's problematic.  ",
            "id": "comment-15812880"
        },
        {
            "date": "2017-01-09T22:34:31+0000",
            "author": "David Smiley",
            "content": "FieldCache \"insanity\" is when the same field is uninverted into memory multiple ways for different types (i.e. as a number and also as a string).  The FieldCache is today also known as UninvertingReader.  Obviously something to be avoided and signified possible Solr usage error.  I recall it was easier to trigger this than nowadays. ",
            "id": "comment-15813055"
        }
    ]
}