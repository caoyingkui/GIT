{
    "id": "LUCENE-5405",
    "title": "Exception strategy for analysis improved",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "SOLR-5623 included some conversation about the dilemmas of exception management and reporting in the analysis chain. \n\nI've belatedly become educated about the infostream, and this situation is a job for it. The DocInverterPerField can note exceptions in the analysis chain, log out to the infostream, and then rethrow them as before. No wrapping, no muss, no fuss.\n\nThere are comments on this JIRA from a more complex prior idea that readers might want to ignore.",
    "attachments": {
        "LUCENE-5405-4.x.patch": "https://issues.apache.org/jira/secure/attachment/12626571/LUCENE-5405-4.x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13875707",
            "author": "Robert Muir",
            "content": "This is a lot of api overhead, a special method 'throwXYZException' and a special exception.\n\nI don't think its worth it myself. ",
            "date": "2014-01-18T17:41:43+0000"
        },
        {
            "id": "comment-13875709",
            "author": "Robert Muir",
            "content": "This also doesnt even solve your problem, where the exception came from within the analysis chain. \n\nAnalysis stuff (e.g. OffsetAttributeImpl) just has a stream of tokens. it doesnt now about nor even have the concept of fields, and is used in cases outside of that context too (e.g. autosuggest).\n\nI do not think it buys anything to try to add such stuff to the analysis chain, as thats completely unrelated to the issue. If there is going to be any context added to exceptions, it should be done by the consumer of such streams. ",
            "date": "2014-01-18T17:45:33+0000"
        },
        {
            "id": "comment-13875710",
            "author": "Benson Margulies",
            "content": "I've been frustrated for years by the coincidence that IOException lacks constructors for 'cause', and the Lucene API is full of 'throws IOException'. However, I only just now noticed that Java fixed this in 1.6.\n\nSo, a weaker form of this would be a subclass of IOException that can carry a field name, and a place for TokenStream to hide a field name. Then something like the Solr error handler could instanceof to see if there's a field name to be had.\n\nGiven the other API changes to token stream component construction for 5.0, one might argue that adding a ctor arg isn't so bad. ",
            "date": "2014-01-18T17:46:41+0000"
        },
        {
            "id": "comment-13875711",
            "author": "Benson Margulies",
            "content": "Hmm, well, backing up. In the other discussion, you and others seemed very unhappy with schemes of the form:\n\n    throw new SomeException(\"Some local explanation\", someExceptionObject);\n\nBased on your most recent remark, I don't see any other way to get around this; my idea about storing field names is stupid, since the chains are reusable. So, either this sort of wrapping is tolerable or not. If tolerable, I'll rewrite this JIRA, else I'll close it. ",
            "date": "2014-01-18T17:48:26+0000"
        },
        {
            "id": "comment-13875712",
            "author": "Robert Muir",
            "content": "I don't think we should change the design of the analysis stuff (adding field names to it, add new classes or new method signatures) to support the buggy case. \n\nTo me the question is if there should be some change to DocInverterPerField or not: and to me thats the only place where we might change anything, because indexwriter \"iterates\" field names for you and its true you dont have an easy way (to my knowledge) to figure out which one it was \"on\" when it hit an issue. \n\nOtherwise, consumers such as queryparsers etc can deal with this themselves, if they want to add try/catch, so be it. I am sure that stuff e.g. solr is already wrapping the exceptions there in useless SolrExceptions today. ",
            "date": "2014-01-18T17:55:49+0000"
        },
        {
            "id": "comment-13875713",
            "author": "Benson Margulies",
            "content": "Yes, we're now in the same place. Does a catch/throw in DocInverterPerField that does something like\n\n   throw new LuceneAnalysisException(\"Error analyzing text\", fieldName, originalException);\n\nmake life better? I think it makes life better, as I don't see much evil in exception wrapping like this. ",
            "date": "2014-01-18T17:59:09+0000"
        },
        {
            "id": "comment-13875715",
            "author": "Robert Muir",
            "content": "I dont like it being LuceneAnalysisException really: I don't see the need for a custom class.\n\nI think it would just be throw new IllegalArgumentException(\"exception from analysis chain for field '\" + field + \"':\", fieldName, originalException).\n\n\n I think it makes life better, as I don't see much evil in exception wrapping like this.\n\nThere is a lot of evil still, it changes the class type of the exception (by wrapping it), by nesting, it makes exceptions harder to digest for the client (lots of lucene users use the same Analyzer for every field, so the field is just not interesting).\n\nRemember this is all about the buggy analyzer case. Its not like we are supporting a real use case here.\n\nSo that's why i said, i'm not sure about this whole idea on SOLR-5623. I'm just not sure its the right tradeoffs.\n\nBesides, there are possibly even less invasive solutions. If we hit an exception from the analyzer, we could write that we hit an exception (not the exception text, just that we hit one) for field X to the infostream in the if (Unable to render embedded object: File (success) case. This means there is no catch block at all) not found. I would support such a change today. sure its not \"perfectly user friendly\" but it has absolutely no downsides at all, and only helps the user, and remember, this is all about the buggy analyzer case. We don't need to be user friendly for that, just safe. ",
            "date": "2014-01-18T18:31:48+0000"
        },
        {
            "id": "comment-13875724",
            "author": "Benson Margulies",
            "content": "https://github.com/apache/lucene-solr/pull/21 is a seemingly simple idea for how to code this.\n\nI'm off to write the test. In the mean time, I offer the PR just to show a concrete idea. ",
            "date": "2014-01-18T19:00:24+0000"
        },
        {
            "id": "comment-13875726",
            "author": "Benson Margulies",
            "content": "Test added. It passes. I'm sure I've missed something here. ",
            "date": "2014-01-18T19:30:55+0000"
        },
        {
            "id": "comment-13877789",
            "author": "Robert Muir",
            "content": "Benson: this patch looks great.\n\nI'll wait a bit for any feedback and test it out later today.  ",
            "date": "2014-01-21T19:53:23+0000"
        },
        {
            "id": "comment-13877841",
            "author": "Michael McCandless",
            "content": "+1 to include field name in the infoStream logging ... anything to help in debugging analysis problems. ",
            "date": "2014-01-21T20:51:36+0000"
        },
        {
            "id": "comment-13886067",
            "author": "Benson Margulies",
            "content": "Am I good to commit here? ",
            "date": "2014-01-30T00:21:58+0000"
        },
        {
            "id": "comment-13886073",
            "author": "Robert Muir",
            "content": "+1 ",
            "date": "2014-01-30T00:24:28+0000"
        },
        {
            "id": "comment-13886091",
            "author": "ASF subversion and git services",
            "content": "Commit 1562657 from Benson Margulies in branch 'dev/trunk'\n[ https://svn.apache.org/r1562657 ]\n\nLUCENE-5405: when there's an exception thrown by an analysis component, note the field name \non the info stream to aid in debugging. ",
            "date": "2014-01-30T00:43:53+0000"
        },
        {
            "id": "comment-13886096",
            "author": "Benson Margulies",
            "content": "Fixed in rev 1562657. ",
            "date": "2014-01-30T00:46:52+0000"
        },
        {
            "id": "comment-13886465",
            "author": "Michael McCandless",
            "content": "Shouldn't we port this to 4.x as well? ",
            "date": "2014-01-30T10:19:59+0000"
        },
        {
            "id": "comment-13888896",
            "author": "Michael McCandless",
            "content": "Benson Margulies are you planning to backport to 4.x?  I think we should? ",
            "date": "2014-02-02T11:07:11+0000"
        },
        {
            "id": "comment-13888958",
            "author": "Benson Margulies",
            "content": "I can backport, Michael McCandless. Is there any doc on how the project manages branches? If not, I can add some to the web site to help guide patch-offerers. ",
            "date": "2014-02-02T16:07:09+0000"
        },
        {
            "id": "comment-13888981",
            "author": "Michael McCandless",
            "content": "Thanks Benson.\n\nI don't know of a guide for this.  Typically I'll just do this:\n\n\n\tcd ../4x\n\tsvn merge -c NNNNNN ../trunk\n\t(resolve conflicts, pass tests)\n\tcommit\n\n\n\nYou may need to move the CHANGES entry down under 4.x (and, fixup trunk's CHANGES too, if it wasn't under 4.x to begin with). ",
            "date": "2014-02-02T17:30:30+0000"
        },
        {
            "id": "comment-13889050",
            "author": "ASF subversion and git services",
            "content": "Commit 1563711 from Benson Margulies in branch 'dev/trunk'\n[ https://svn.apache.org/r1563711 ]\n\nLUCENE-5405: check in the unit test, that escaped the first time.\n\ncloses #21. ",
            "date": "2014-02-02T20:47:48+0000"
        },
        {
            "id": "comment-13889051",
            "author": "Benson Margulies",
            "content": "Somehow the unit test escaped the prior commit. 1563711 fills it in. ",
            "date": "2014-02-02T20:48:13+0000"
        },
        {
            "id": "comment-13889089",
            "author": "Steve Rowe",
            "content": "Is there any doc on how the project manages branches? If not, I can add some to the web site to help guide patch-offerers.\n\nThere is this: http://wiki.apache.org/lucene-java/SvnMerge ",
            "date": "2014-02-02T22:30:57+0000"
        },
        {
            "id": "comment-13889095",
            "author": "Benson Margulies",
            "content": "Well, svn merge did something I can't make heads or tails of, so I'm going to merge by hand.   ",
            "date": "2014-02-02T22:45:21+0000"
        },
        {
            "id": "comment-13889098",
            "author": "ASF subversion and git services",
            "content": "Commit 1563741 from Benson Margulies in branch 'dev/trunk'\n[ https://svn.apache.org/r1563741 ]\n\nLUCENE-5405: this undoes 1563711, which was the result of a cascade of confusion. ",
            "date": "2014-02-02T22:50:06+0000"
        },
        {
            "id": "comment-13889100",
            "author": "Benson Margulies",
            "content": "Reviewable port. ",
            "date": "2014-02-02T23:04:03+0000"
        },
        {
            "id": "comment-13889101",
            "author": "Benson Margulies",
            "content": "Michael McCandless and Robert Muir: The code in the 4.x branch is more complex. I think I've managed to carry the strategy across, but I'd be grateful for some skeptical eyeballs before I commit the attach patch that does the backport. ",
            "date": "2014-02-02T23:05:10+0000"
        },
        {
            "id": "comment-13889401",
            "author": "Michael McCandless",
            "content": "Thanks Benson, I didn't realize this would get tricky!\n\nSince success2 seems to be equivalent to succeededInProcessingField, maybe just rename success2 instead of adding a new variable?\n\nAlso, could you move the infoStream output to the end of that finally clause (so we're sure to call stream.close())?  Paranoia ...\n\nOtherwise it looks great.  Thanks! ",
            "date": "2014-02-03T11:24:21+0000"
        },
        {
            "id": "comment-13889406",
            "author": "Benson Margulies",
            "content": "Will do. Thanks, this is exactly what sort of feedback I was looking for. ",
            "date": "2014-02-03T11:30:26+0000"
        },
        {
            "id": "comment-13889423",
            "author": "ASF subversion and git services",
            "content": "Commit 1563850 from Benson Margulies in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1563850 ]\n\nLUCENE-5405: backport to 4.x. ",
            "date": "2014-02-03T11:56:25+0000"
        },
        {
            "id": "comment-13889424",
            "author": "Benson Margulies",
            "content": "rev 1563850 provides the backport. ",
            "date": "2014-02-03T11:56:47+0000"
        },
        {
            "id": "comment-13889427",
            "author": "ASF subversion and git services",
            "content": "Commit 1563853 from Benson Margulies in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1563853 ]\n\nLUCENE-5405: CHANGES.txt ",
            "date": "2014-02-03T12:01:49+0000"
        },
        {
            "id": "comment-13889430",
            "author": "ASF subversion and git services",
            "content": "Commit 1563855 from Benson Margulies in branch 'dev/trunk'\n[ https://svn.apache.org/r1563855 ]\n\nLUCENE-5405: changes.txt; and fix a typo of Grant's for LUCENE-5406. ",
            "date": "2014-02-03T12:04:33+0000"
        },
        {
            "id": "comment-13889432",
            "author": "ASF subversion and git services",
            "content": "Commit 1563857 from Benson Margulies in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1563857 ]\n\nLUCENE-5405: some leftover merge info. ",
            "date": "2014-02-03T12:05:30+0000"
        },
        {
            "id": "comment-13889433",
            "author": "Benson Margulies",
            "content": "backported, CHANGES.txt filled in. 'this time for sure' ",
            "date": "2014-02-03T12:05:58+0000"
        },
        {
            "id": "comment-13889449",
            "author": "ASF subversion and git services",
            "content": "Commit 1563868 from Benson Margulies in branch 'dev/trunk'\n[ https://svn.apache.org/r1563868 ]\n\nLUCENE-5405, LUCENE-5406: move changes entries to 4.7. ",
            "date": "2014-02-03T13:01:58+0000"
        }
    ]
}