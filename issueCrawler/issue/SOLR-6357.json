{
    "id": "SOLR-6357",
    "title": "Using query time Join in deleteByQuery throws ClassCastException",
    "details": {
        "affect_versions": "4.9",
        "status": "Closed",
        "fix_versions": [
            "7.0"
        ],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Consider the following input document where we have:\n\n\t1 Samsung mobile phone and\n\t2 manufactures: Apple and Samsung.\n\n\n\n\n[\n   {\n      \"id\":\"galaxy note ii\",\n      \"cat\":\"product\",\n      \"manu_s\":\"samsung\"\n   },\n   {\n      \"id\":\"samsung\",\n      \"cat\":\"manufacturer\",\n      \"name\":\"Samsung Electronics\"\n   },\n   {\n      \"id\":\"apple\",\n      \"cat\":\"manufacturer\",\n      \"name\":\"Apple Inc\"\n   }\n]\n\n\n\nMy objective is to delete from the default index all manufacturers not having any product in the index.\n\nAfter indexing (  curl 'http://localhost:8983/solr/update?commit=true' -H \"Content-Type: text/json\" --data-binary @delete-by-join-query.json )\n\nI went to\n\nhttp://localhost:8983/solr/select?q=cat:manufacturer -{!join from=manu_s to=id}cat:product\n\n\n\nand I could see only Apple, the only manufacturer not having any product in the index.\n\nHowever, when I use that same query for deletion: \n\nhttp://localhost:8983/solr/update?commit=true&stream.body=<delete><query>cat:manufacturer -{!join from=manu_s to=id}cat:product</query></delete>\n\n\n\nI get\n\njava.lang.ClassCastException: org.apache.lucene.search.IndexSearcher cannot be cast to org.apache.solr.search.SolrIndexSearcher\n\tat org.apache.solr.search.JoinQuery.createWeight(JoinQParserPlugin.java:143)\n\tat org.apache.lucene.search.BooleanQuery$BooleanWeight.<init>(BooleanQuery.java:185)\n\tat org.apache.lucene.search.BooleanQuery.createWeight(BooleanQuery.java:526)\n\tat org.apache.lucene.search.BooleanQuery$BooleanWeight.<init>(BooleanQuery.java:185)\n\tat org.apache.lucene.search.BooleanQuery.createWeight(BooleanQuery.java:526)\n\tat org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:684)\n\tat org.apache.lucene.search.QueryWrapperFilter.getDocIdSet(QueryWrapperFilter.java:55)\n\tat org.apache.lucene.index.BufferedUpdatesStream.applyQueryDeletes(BufferedUpdatesStream.java:552)\n\tat org.apache.lucene.index.BufferedUpdatesStream.applyDeletesAndUpdates(BufferedUpdatesStream.java:287)\n\tat \n\n\n\nThis seems to be a bug.\n\nLooking at the source code, the exception is happening in \n\n @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new JoinQueryWeight((SolrIndexSearcher)searcher);\n  }",
    "attachments": {
        "SOLR-6357.patch": "https://issues.apache.org/jira/secure/attachment/12747820/SOLR-6357.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mikhail Khludnev",
            "id": "comment-14092504",
            "date": "2014-08-11T06:34:53+0000",
            "content": "I'm not sure but it might be challenging to use purely Solr query {!join ..} deep inside of Lucene core, where deleteQuery is handled. Try to use native Lucene query-time join SOLR-6234. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-14255528",
            "date": "2014-12-22T07:47:59+0000",
            "content": "SOLR-6234  is a solution  "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14644680",
            "date": "2015-07-28T17:19:01+0000",
            "content": "Adding a unit test that uses the score join solution to fix this issue. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14646479",
            "date": "2015-07-29T17:41:34+0000",
            "content": "Here's a patch with a simple unit test to verify that delete by query works using score join. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-14646643",
            "date": "2015-07-29T19:40:03+0000",
            "content": "+1 for commit.  "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14646652",
            "date": "2015-07-29T19:45:49+0000",
            "content": "Commit 1693338 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1693338 ]\n\nSOLR-6357: Allow delete documents by doing a score join query. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14646659",
            "date": "2015-07-29T19:53:30+0000",
            "content": "Commit 1693339 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1693339 ]\n\nSOLR-6357: Allow delete documents by doing a score join query. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14646660",
            "date": "2015-07-29T19:54:13+0000",
            "content": "Thanks Mikhail Khludnev! Nice work on the score join stuff. "
        },
        {
            "author": "Arcadius Ahouansou",
            "id": "comment-14647408",
            "date": "2015-07-30T09:46:45+0000",
            "content": "Thanks Timothy Potter for fixing this issue. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14713133",
            "date": "2015-08-26T13:05:51+0000",
            "content": "Bulk close for 5.3.0 release "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-16074496",
            "date": "2017-07-05T09:39:04+0000",
            "content": "broken by SOLR-10986, SOLR-9217  "
        },
        {
            "author": "Andrew Hankinson",
            "id": "comment-16263448",
            "date": "2017-11-22T22:16:05+0000",
            "content": "I'm still seeing a problem related to this in Solr 7.0.1 (OSX) and 7.1.0 (RHEL7).\n\nSample data:\n\ncollections_sm is a dynamic multivalued string field. All others are string fields.\n\n\n{\n\"id\":\"1234\",\n\"object_id\":\"1234\",\n\"type\":\"object\"\n\"collections_sm\":[\"printed books\"]\n}\n\n{\n\"id\":\"4567\",\n\"object_id\":\"1234\",\n\"type\":\"surface\"\n}\n\n{\n\"id\":\"7890\",\n\"object_id\":\"1234\",\n\"type\":\"image\"\n}\n\n\n\nQuery:\n\n\n<delete><query>{!join from=id to=object_id}collections_sm:('printed books')</query></delete>\n\n\n\nQuery log\n\n\n2017-11-22 22:00:20.802 INFO  (qtp466002798-19) [   x:mycore] o.a.s.u.p.LogUpdateProcessorFactory [mycore]  webapp=/solr path=/update params={commit=true}{deleteByQuery={!join from=id to=object_id}collections_sm:('printed books') (-1584805205294186496)} 0 5\n2017-11-22 22:00:20.802 ERROR (qtp466002798-19) [   x:mycore] o.a.s.h.RequestHandlerBase org.apache.lucene.store.AlreadyClosedException: this IndexWriter is closed\n\n\n\nCorrupted Index\n\nThis seems to put the index in a corrupt state \u2013 it will not accept any more write or modification operations to the core until the data directory is deleted. Any attempts to make changes to the core will result in an error:\n\n\n\nCaused by: java.lang.ClassCastException: org.apache.lucene.search.IndexSearcher cannot be cast to org.apache.solr.search.SolrIndexSearcher\n\tat org.apache.solr.search.JoinQuery.createWeight(JoinQParserPlugin.java:169)\n\tat org.apache.lucene.search.IndexSearcher.createWeight(IndexSearcher.java:734)\n\tat org.apache.lucene.search.BooleanWeight.<init>(BooleanWeight.java:54)\n\tat org.apache.lucene.search.BooleanQuery.createWeight(BooleanQuery.java:204)\n\tat org.apache.solr.update.DeleteByQueryWrapper.createWeight(DeleteByQueryWrapper.java:72)\n\tat org.apache.lucene.search.IndexSearcher.createWeight(IndexSearcher.java:734)\n\tat org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:724)\n\tat org.apache.lucene.index.FrozenBufferedUpdates.applyQueryDeletes(FrozenBufferedUpdates.java:687)\n\tat org.apache.lucene.index.FrozenBufferedUpdates.apply(FrozenBufferedUpdates.java:443)\n\tat org.apache.lucene.index.FrozenBufferedUpdates.apply(FrozenBufferedUpdates.java:324)\n\tat org.apache.lucene.index.DocumentsWriter$ResolveUpdatesEvent.process(DocumentsWriter.java:723)\n\tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:5057)\n\tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:5045)\n\tat org.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:466)\n\tat org.apache.lucene.index.StandardDirectoryReader.doOpenFromWriter(StandardDirectoryReader.java:293)\n\tat org.apache.lucene.index.StandardDirectoryReader.doOpenIfChanged(StandardDirectoryReader.java:278)\n\tat org.apache.lucene.index.DirectoryReader.openIfChanged(DirectoryReader.java:235)\n\tat org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1987)\n\tat org.apache.solr.update.UpdateLog.openRealtimeSearcher(UpdateLog.java:648)\n\tat org.apache.solr.update.UpdateLog.deleteByQuery(UpdateLog.java:629)\n\tat org.apache.solr.update.DirectUpdateHandler2.deleteByQuery(DirectUpdateHandler2.java:534)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processDelete(RunUpdateProcessorFactory.java:78)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:59)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalDelete(DistributedUpdateProcessor.java:996)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionDeleteByQuery(DistributedUpdateProcessor.java:1691)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doDeleteByQuery(DistributedUpdateProcessor.java:1595)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processDelete(DistributedUpdateProcessor.java:1404)\n\tat org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processDelete(LogUpdateProcessorFactory.java:124)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:59)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:59)\n\tat org.apache.solr.handler.loader.XMLLoader.processDelete(XMLLoader.java:366)\n\tat org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:292)\n\tat org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:188)\n\tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:97)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:68)\n\t... 33 more\n\n2017-11-22 22:00:20.803 ERROR (qtp466002798-19) [   x:mycore] o.a.s.s.HttpSolrCall null:org.apache.lucene.store.AlreadyClosedException: this IndexWriter is closed\n\tat org.apache.lucene.index.IndexWriter.ensureOpen(IndexWriter.java:896)\n\tat org.apache.lucene.index.IndexWriter.ensureOpen(IndexWriter.java:910)\n\tat org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:3377)\n\tat org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.java:679)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processCommit(RunUpdateProcessorFactory.java:93)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(UpdateRequestProcessor.java:68)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalCommit(DistributedUpdateProcessor.java:1950)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processCommit(DistributedUpdateProcessor.java:1926)\n\tat org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processCommit(LogUpdateProcessorFactory.java:160)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(UpdateRequestProcessor.java:68)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(UpdateRequestProcessor.java:68)\n\tat org.apache.solr.handler.RequestHandlerUtils.handleCommit(RequestHandlerUtils.java:69)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:72)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:177)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2484)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:720)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:526)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:382)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:326)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1751)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n\tat org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:534)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108)\n\tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.ClassCastException: org.apache.lucene.search.IndexSearcher cannot be cast to org.apache.solr.search.SolrIndexSearcher\n\tat org.apache.solr.search.JoinQuery.createWeight(JoinQParserPlugin.java:169)\n\tat org.apache.lucene.search.IndexSearcher.createWeight(IndexSearcher.java:734)\n\tat org.apache.lucene.search.BooleanWeight.<init>(BooleanWeight.java:54)\n\tat org.apache.lucene.search.BooleanQuery.createWeight(BooleanQuery.java:204)\n\tat org.apache.solr.update.DeleteByQueryWrapper.createWeight(DeleteByQueryWrapper.java:72)\n\tat org.apache.lucene.search.IndexSearcher.createWeight(IndexSearcher.java:734)\n\tat org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:724)\n\tat org.apache.lucene.index.FrozenBufferedUpdates.applyQueryDeletes(FrozenBufferedUpdates.java:687)\n\tat org.apache.lucene.index.FrozenBufferedUpdates.apply(FrozenBufferedUpdates.java:443)\n\tat org.apache.lucene.index.FrozenBufferedUpdates.apply(FrozenBufferedUpdates.java:324)\n\tat org.apache.lucene.index.DocumentsWriter$ResolveUpdatesEvent.process(DocumentsWriter.java:723)\n\tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:5057)\n\tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:5045)\n\tat org.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:466)\n\tat org.apache.lucene.index.StandardDirectoryReader.doOpenFromWriter(StandardDirectoryReader.java:293)\n\tat org.apache.lucene.index.StandardDirectoryReader.doOpenIfChanged(StandardDirectoryReader.java:278)\n\tat org.apache.lucene.index.DirectoryReader.openIfChanged(DirectoryReader.java:235)\n\tat org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1987)\n\tat org.apache.solr.update.UpdateLog.openRealtimeSearcher(UpdateLog.java:648)\n\tat org.apache.solr.update.UpdateLog.deleteByQuery(UpdateLog.java:629)\n\tat org.apache.solr.update.DirectUpdateHandler2.deleteByQuery(DirectUpdateHandler2.java:534)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processDelete(RunUpdateProcessorFactory.java:78)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:59)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalDelete(DistributedUpdateProcessor.java:996)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionDeleteByQuery(DistributedUpdateProcessor.java:1691)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doDeleteByQuery(DistributedUpdateProcessor.java:1595)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processDelete(DistributedUpdateProcessor.java:1404)\n\tat org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processDelete(LogUpdateProcessorFactory.java:124)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:59)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:59)\n\tat org.apache.solr.handler.loader.XMLLoader.processDelete(XMLLoader.java:366)\n\tat org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:292)\n\tat org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:188)\n\tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:97)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:68)\n\t... 33 more\n\n "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-16263774",
            "date": "2017-11-23T04:03:22+0000",
            "content": "Add score=none to the local params "
        },
        {
            "author": "Andrew Hankinson",
            "id": "comment-16263984",
            "date": "2017-11-23T08:39:45+0000",
            "content": "OK, thank you \u2013 I will try that. \n\nIt seems the issue with the locking IndexWriter might still be a problem, though? I wouldn't expect a query to irretrievably lock the index for modifications. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-16264038",
            "date": "2017-11-23T09:16:41+0000",
            "content": "Andrew Hankinson I wouldn't call it locking IW. It usually means something more severe. That ill deleteQuery hangs in IW and applied at least on commit or flush and perhaps more often. So, turning it off and on again should wipe the ill query away.  "
        },
        {
            "author": "Andrew Hankinson",
            "id": "comment-16264059",
            "date": "2017-11-23T09:38:40+0000",
            "content": "I certainly tried turning it off and on again, but it didn't seem to work on both systems that I tried. I would be interested to know if you (or anyone else) has a different experience. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-16264066",
            "date": "2017-11-23T09:44:30+0000",
            "content": "aghh.. could this DQ survive in transaction  log? "
        },
        {
            "author": "Andrew Hankinson",
            "id": "comment-16264072",
            "date": "2017-11-23T09:49:22+0000",
            "content": "Looking at it, I think it does. It looks like it crashes, then on restart replays the transaction log with the failed DQ, which then re-locks the index. I can't find the exact log message at the moment, though. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-16264084",
            "date": "2017-11-23T09:58:39+0000",
            "content": "so, you know what to nuke then. assuming tx-log "
        }
    ]
}