{
    "id": "SOLR-11515",
    "title": "bin/post uses \"-t\" to check for stdin, easily breaks when run from cron (which has no terminal)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "scripts and tools"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "one of our users (matt__) spent all day on freenode#solr trying to figure out why a simple script he had that called bin/post would work fine when he ran it, but didn't seem to do anything when run as a cronjob.\n\nAfter helping him setup better logging from cron, it ultimiately came down to the fact that a command like this (which was the very first thing in his script)...\n\n\nbin/post -c yyy -host xxx -d '<delete><query>zzz</query></delete>'\n\n\n\n...was failing with an error like this...\n\n\nUnrecognized argument: <delete><query>zzz</query></delete>\nIf this was intended to be a data file, it does not exist relative to /opt/blah/blah\n\n\n\nUltimately we determined that the problem was how bin/post tests for \"stdin\" \u2013 by checking to see if it's not being run in a terminal (with ' ! -t 0 ') \u2013 in which case it doesn't treat the argument after -d as data, and instead lets it fall through to the next iteration of the arg parsing loop (as either another switch, or a filename)\n\nthe problem here being that running (in a script) as a cronjob is another case where bin/post is \"not being run in a terminal\" so the -d parsing would up completely ignoring the <delete>... string, evne though there was nothing being redirected on stdin.\n\nthe workaround is to use echo to give bin/post some stdin, since it was going to expect it for any usage of -d...\n\necho '<delete><query>zzz</query></delete>' | bin/post -c yyy -host xxx -d",
    "attachments": {},
    "issue_links": {},
    "comments": []
}