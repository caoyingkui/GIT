{
    "id": "SOLR-12921",
    "title": "Separate Solr unit tests and integration tests.",
    "details": {
        "type": "Sub-task",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [
            "Tests"
        ],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "We basically just have \"tests\" now. We should have separate locations for unit and integration tests and new work should have a good reason to not include both.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16663972",
            "content": "There's all shades of gray inbetween a pure unit test and an integration test.  It's all relative.  Do you have some particular tests in mind that ought to be done differently? ",
            "author": "David Smiley",
            "date": "2018-10-25T16:29:17+0000"
        },
        {
            "id": "comment-16663990",
            "content": "WDYT about changing precommit to forbid new files (and maybe changes too) in the current test file tree? The idea here is that if we want new work to respect the reorganization, adding that precommit check would freeze the current mixup and we could move tests into the new structure over time rather than all at once.\n\nI have no idea how practical this is frankly, and it might mean some period of significant code duplication. If it can all be done in one big shot that'd be great. It's just that trying to do it all at once seems pretty hard.\n\nA finer-grained approach would be to forbid specific directories under the tree, e.g. \n...solr/core/src/test/org/apache/solr/analysis/ ",
            "author": "Erick Erickson",
            "date": "2018-10-25T16:44:26+0000"
        },
        {
            "id": "comment-16664290",
            "content": "There's all shades of gray i\n\nEverything has shades of gray, can't let that bog you down.\n\nA unit test is a test that tests a particular piece of code, is very fast, and often involves mocks.\n\nAn integration test spins up the whole system and tests something by running everything pretty much for real.\n\nUnit tests should be very easy to debug. Integration tests can be very difficult to debug.\n\nBoth are valuable, both should be added for new features.\n\nThe problem is that there is a mix of people not understanding that or being to lazy to care.\n\nWe need to introduce structure that teaches people how you write proper tests. ",
            "author": "Mark Miller",
            "date": "2018-10-25T21:09:34+0000"
        },
        {
            "id": "comment-16664294",
            "content": "WDYT about changing precommit \n\nI think to start we just want some separating.\n\nYou want to be able to glance at a commit and understand if its adding unit tests, integration tests, or both. There are shades of gray, but we all deal with that color constantly.\n\nI'd prefer we had it so separate that you did ant test or ant integration test, but that's no so important.\n\nI think it would be most useful and least intrusive to just separate them in the source tree initially. It would not have to be done all in one shot.\n\nOne simple idea would be that unit tests stay in the current package and integration tests go in currentpackage.integrationtest.\n\nI'm not sure what is best. I just know the current situation where everyone mostly just keeps adding huge integration tests means that when they sometimes fail, no one looks at it. We have a huge unit test deficit. This won't fix that, but it's part of a larger solution you can see taking shape in linked JIRAs. Much better out of the box Mocks will be another piece. ",
            "author": "Mark Miller",
            "date": "2018-10-25T21:13:52+0000"
        }
    ]
}