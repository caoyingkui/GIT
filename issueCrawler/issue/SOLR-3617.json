{
    "id": "SOLR-3617",
    "title": "Consider adding start scripts.",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I've always found that starting Solr with java -jar start.jar is a little odd if you are not a java guy, but I think there are bigger pros than looking less odd in shipping some start scripts.\n\nNot only do you get a cleaner start command:\nsh solr.sh or solr.bat or something\nBut you also can do a couple other little nice things:\n\n\tit becomes fairly obvious for a new casual user to see how to start the system without reading doc.\n\tyou can make the working dir the location of the script - this lets you call the start script from another dir and still have all the relative dir setup work.\n\thave an out of the box place to save startup params like -Xmx.\n\twe could have multiple start scripts - say solr-dev.sh that logged to the console and default to sys default for RAM - and also solr-prod which was fully configured for logging, pegged Xms and Xmx at some larger value (1GB?) etc.\n\n\n\nYou would still of course be able to make the java cmd directly - and that is probably what you would do when it's time to run as a service - but these could be good starter scripts to get people on the right track and improve the initial user experience.",
    "attachments": {
        "SOLR-3617.patch": "https://issues.apache.org/jira/secure/attachment/12654637/SOLR-3617.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13412723",
            "date": "2012-07-12T11:55:13+0000",
            "content": "Thoughts? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13412727",
            "date": "2012-07-12T12:12:12+0000",
            "content": "Somewhat related: it might be worth adding /etc/init.d-type start/stop/etc scripts, at least\none that works for Linux. I'm sure people have these already themselves or are writing their own. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13412728",
            "date": "2012-07-12T12:16:31+0000",
            "content": "As fan of Ubuntu, please also add a upstart config (/etc/init/solr.conf), thats much easier to write than stupid shell script with the well known start|stop|... switch  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13413712",
            "date": "2012-07-13T13:20:57+0000",
            "content": "So I guess some things to consider here...where do we put the scripts?\n\nIn example? In example bin?\n\nIf we just have one start.sh/start.bat scripts and one stop.sh/stop.bat script, just example seems good to me. But if we wanted to have start-dev and start-prod or something, perhaps bin is better due to the number?\n\nexample/start.sh is very clear to me - but I'd like to have one fully configured for logging and what not, and the other more dev friendly (log to console).\n\n(one thing I forgot to mention is that this allows us to have a nice preconfigured stop scripts as well. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13413713",
            "date": "2012-07-13T13:21:19+0000",
            "content": "As fan of Ubuntu, please also add a upstart config (/etc/init/solr.conf)\n\n+1 - I think we should ship with examples for this type of thing as well. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14055277",
            "date": "2014-07-08T18:40:11+0000",
            "content": "Here's a rough cut of a *nix start/stop script. I'm posting early to get some feedback before going too far down this path if it's not what we want.\n\nFirst, I think the start/stop script should go hand-in-hand / complement any work done on SOLR-3619 and SOLR-3259, which is why I chose to put the script in the $SOLR_TIP/bin vs. example/bin (where SOLR_TIP is the root directory where Solr is installed). One of the nice ideas in SOLR-3619 is to have a \"server\" directory for production environments and use the example dir only for running examples.\n\nYou can do: solr -help or solr <command> -help, such as solr start -help to see usage. \n\nHere's an overview of some of the features in this script, which I'll demonstrate by showing example usages:\n\nsolr  Prints usage and exits\n\nsolr -f  Starts the example server in the foreground; alternatively, we could support a -b option to background the server if we want foreground to be the default behavior.\n\nsolr -i  Looks for running Solr servers and prints information about any that are found. Right now, the script is doing a GET to the /admin/system/info handler, which is too verbose so we need a synopsis option (I'll open another ticket)\n\nsolr -p 8984  Starts Solr in the background bound to port 8984\n\nsolr -cloud or solr -c  Starts Solr in \"solrcloud\" mode in the background on port 8983; since a zkHost is not provided, this will also set the -DzkRun option to start the embedded ZooKeeper on port 9983. Or you could pass -z to set the zkHost param.\n\nsolr -e <example>, such as solr -e dih Starts the specified example server such as the DIH example server\n\nsolr -f -c -p 8985 -m 1g  Would start Solr in solrcloud mode in the foreground bound to port 8985 with max heap set to 1 gig (i.e.  -Xms1g -Xmx1g)\n\nI think you get the idea ... here's the full usage for the start command:\n\n\nUsage: solr start [-f] [-c] [-h hostname] [-p port] [-d directory] [-z zkHost] [-m memory] [-e example]\n\n  -f            Start Solr in foreground; default starts Solr in the background\n                  and sends stdout / stderr to solr-PORT-console.log\n\n  -c            Start Solr in SolrCloud mode; if -z not supplied, an embedded ZooKeeper\n                  instance is started; -cloud or --cloud are synonyms for -c\n\n  -h <host>     Specify the hostname for this Solr instance\n\n  -p <port>     Specify the port to start the Solr HTTP listener on; default is 8983\n\n  -d <dir>      Specify the Solr server directory; defaults to example\n\n  -z <zkHost>   ZooKeeper connection string; only used when running in SolrCloud mode using -c\n\n  -m <memory>   Sets the min (-Xms) and max (-Xmx) heap size for the JVM, such as: -m 4g\n                  results in: -Xms4g -Xmx4g; by default, this script sets the heap size to 512m\n\n  -e <example>  Name of the example to run; available examples:\n      cloud:         SolrCloud example\n      default:       Solr default example\n      dih:           Data Import Handler\n      schemaless:    Schema-less example\n      multicore:     Multicore\n\n\n\nThe stop behavior is pretty basic, but it does try to stop the Jetty server gracefully before issuing kill commands using the Jetty stop key / port.\n\nNotice that I'm not supporting a restart command yet but that's easy to add if we don't like the current behavior of stopping a running server first before starting, i.e. in the current impl, if you do: solr start && solr start (just for illustration purposes), the second start invocation will stop the server and then start it back up. Alternatively, we could easily have the script check if a server is already running and complain, thus forcing the user to stop first or issue a \"restart\".\n\nI've also included support for sourcing env variables from an include file named solr.in.sh (similar to how Cassandra's start script works). The idea here is that for production environments, users will likely want to keep common settings like Java memory options and zkHost in an include file and then only use command-line options to set machine specific values, such as the host (-h). The script searches common paths for the include file.\n\nI'm still sorting out how to support the multiple nodes for the SolrCloud example. Currently, the script will start both nodes and index the documents as shown in the ref guide, but there's more that could be done with this example. For now, to run the cloud example, do: \n\nsolr -e cloud\n\nwhich sets up the node1 and node2 directories, starts the servers on ports 8983 and 7574 respectively, and then indexes the docs in mem.xml and monitor2.xml\n\nThere are also some other goodies in here which may or may not cause some folks heartburn. For instance, I find it really helpful to enable the RMI options to allow you to attach a tool like VisualVM to the JVM hosting Solr. It's enabled by default here but can be disabled by setting ENABLE_REMOTE_JMX_OPTS=\"false\"\n\nAlso, I've built-in Shawn H's famous GC tuning options for Solr, which I've found to be good for many Solr workflows. In general, I think the start script should take as much of the thinking out of running Solr as possible, which includes baking in best practices.\n\nSo far I've only tested this on Mac and RedHat but should work on other flavors of Linux. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14055371",
            "date": "2014-07-08T19:35:44+0000",
            "content": "Created SOLR-6233 for adding a parameter to the system admin info handler to get an overview of a server. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14055380",
            "date": "2014-07-08T19:41:17+0000",
            "content": "+1, nice!\n\nJust read over your comments so far, but it all sounds great to me. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14058889",
            "date": "2014-07-11T15:19:28+0000",
            "content": "Also, I've built-in Shawn H's famous GC tuning options for Solr, which I've found to be good for many Solr workflows. In general, I think the start script should take as much of the thinking out of running Solr as possible, which includes baking in best practices.\n\n+1 for baking in the best practices.\n\nShould we have warnings for say - too less file handles, using a buggy java version etc? \n\nIn one of Marks earlier comments he had mentioned that we could have a start-dev and a start-prod. These warnings would make sense in the start-prod script. Not sure if it's a good idea to have them if we have only one start script. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14059346",
            "date": "2014-07-11T20:57:12+0000",
            "content": "Hi Varun,\n\nThanks for the feedback. Good idea about checking Java version but it's tough to know how many file handles is sufficient.\n\nAlso, I'm favoring one script to rule them all  Although I'm willing to be convinced of the start-dev / start-prod, I like bin/solr because it's simple and intuitive. In addition:\n\n1) One script to maintain / document; well two actually scripts (one for *nix and other for Windows)\n2) I'm turning off prod options when you enable an example using the -e flag\n3) There's going to be a lot of overlap in the logic between the two scripts anyway\n\nI'm cooking up the Windows version today and have some updates to the *nix one, the main one being a \"restart\" option as described above as I convinced myself while writing the initial comment above that restart is a more standard approach. Another patch coming soon ... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14059389",
            "date": "2014-07-11T21:29:23+0000",
            "content": "Yeah, a flag for a more friendly dev mode is just as good as another script. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14062610",
            "date": "2014-07-15T20:37:11+0000",
            "content": "Here's an updated patch with the following:\n\n1) bin/solr.cmd\n\nFor our Windows users  I did my best to emulate the behavior of the Linux script (bin/solr). The main difference between the Windows version and the Linux version is that I don't know how to implement the stop all in the .cmd version, so currently, the user needs to do: solr stop -p PORT. In the Linux, if you don't pass the port, it stops all running Solrs, which may be too heavy handed anyway so easiest might be to fix the Linux version to require the port too.\n\nIn general, I'm not a Windows user so there may be some things in this implementation that can be done cleaner / easier. Happy to have suggestions on how to improve it.\n\n2) Added a restart mode, which stops and starts the Solr server again. Thus, if you re-issue start when a server is running, it complains vs. stop / start as it did before. \n\nLastly, I'm still sorting out how to implement the cloud example. Specifically, I'm wondering if we should walk the user through using prompts and reading from stdin, that way it's a little more interactive, something like:\n\n$ cd solr-5.0.0/bin\n$ ./solr -e cloud\n\nWelcome to the SolrCloud example!\n\nPlease enter the number of local nodes you would like to run? [2] <-- default\n2\n\nOk, let's start up 2 Solr nodes for your example SolrCloud cluster.\n\nEnter the port for node1: [8983]\n8983\n\nEnter the port for node2: [7574]\n7574\n\nOops! It looks like there is already something running on port 7574, please choose another port: [7575]\n7575\n\nOk, starting node1 on port 8983 with embedded ZooKeeper listening on localhost:9983\n\nNow starting node2 on port 7575\n\nSuccess! Found 2 active nodes in your cluster.\n\nDo you want to create a new collection? Y/n\nY\n\nCollection name? [collection1]\ncollection1\n\nHow many shards? [2]\n2\n\nHow many replicas per shard? [1]\n1\n\nOk, collection1 created successfully, do you want to index some documents? Y/n\nY\n\nPath to file to index: [example/exampledocs/mem.xml]\n<path>\n\n...\n\n\nWe could also just support a -q flag to indicate \"quiet\" mode and just accept all defaults from the interactive session. And of course -V will activate a verbose mode that probably shows more of the commands being run during the interactive session.\n\n\n\n\n\n\n "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14062615",
            "date": "2014-07-15T20:41:41+0000",
            "content": "Previous patch was hosed ... here's a good one. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14078178",
            "date": "2014-07-29T19:04:49+0000",
            "content": "Updated patch with changes to complement the patch I'm posting for SOLR-3619. Specifically, there are two improvements to the bin/solr script in this patch:\n\n1) Interactive session with user to start the SolrCloud example. I think this approach is good for a couple of reasons: \n\n   a. no weird command-line settings like bootstrap_conf ...\n   b. interactive session uses the same commands that a user should use to deploy a configuration directory (zkcli) and create a collection; what's more is the script shows the commands it is running so the user gets an example of how to do this again.\n\nI'm thinking of adding a -q (quiet) flag to skip all the prompts and just accept defaults, but for now, here's what the interactive session looks like:\n\n\n[~/dev/lw/projects/solr_trunk_co/solr]$ bin/solr -e cloud\n\nWelcome to the SolrCloud example!\n\nThis interactive session will help you launch a SolrCloud cluster on your local workstation.\n\nTo begin, how many Solr nodes would you like to run in your local cluster? (1-4) [2] \nOk, let's start up 2 Solr nodes for your example SolrCloud cluster.\nPlease enter the port for node1 [8983] \n8983\nPlease enter the port for node2 [7574] \n7574\nCloning Solr server directory into /Users/thelabdude/dev/lw/projects/solr_trunk_co/solr/node1\nCloning Solr server directory into /Users/thelabdude/dev/lw/projects/solr_trunk_co/solr/node2\n\nStarting up SolrCloud node1 on port 8983 using command:\n\n\nsolr start -c -d /Users/thelabdude/dev/lw/projects/solr_trunk_co/solr/node1 -p 8983 \n\n\nWaiting to see Solr listening on port 8983 [/]  \nStarted Solr server on port 8983 (pid=55965). Happy searching!\n\n    \n\nStarting node2 on port 7574 using command:\n\n\nsolr start -c -d /Users/thelabdude/dev/lw/projects/solr_trunk_co/solr/node2 -p 7574 -z localhost:9983 \n\n\nWaiting to see Solr listening on port 7574 [/]  \nStarted Solr server on port 7574 (pid=56050). Happy searching!\n\n    \nNow let's create a new collection for indexing documents in your 2-node cluster.\n\nPlease provide a name for your new collection: [gettingstarted] \ngettingstarted\nHow many shards would you like to split gettingstarted into? [2] \n2\nHow many replicas per shard would you like to create? [2] \n2\nDeploying default Solr configuration files to embedded ZooKeeper using command:\n\n\n/Users/thelabdude/dev/lw/projects/solr_trunk_co/solr/server/scripts/cloud-scripts/zkcli.sh -zkhost localhost:9983 -cmd upconfig -confdir /Users/thelabdude/dev/lw/projects/solr_trunk_co/solr/example/example-schemaless/solr/collection1/conf -confname schemaless\n\nINFO  - 2014-07-29 12:56:28.201; org.apache.zookeeper.Environment; Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT\n_... Whole bunch more log messages here ..._\nINFO  - 2014-07-29 12:56:33.659; org.apache.zookeeper.ClientCnxn$EventThread; EventThread shut down\n\n\nCreating new collection gettingstarted with 2 shards and replication factor 2 using Collections API command:\n\nhttp://localhost:8983/solr/admin/collections?action=CREATE&name=gettingstarted&replicationFactor=2&numShards=2&collection.configName=schemaless&maxShardsPerNode=2&wt=json&indent=2\n\nFor more information about the Collections API, please see: https://cwiki.apache.org/confluence/display/solr/Collections+API\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":6045},\n  \"success\":{\n    \"\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":3735},\n      \"core\":\"gettingstarted_shard2_replica1\"},\n    \"\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":3850},\n      \"core\":\"gettingstarted_shard1_replica1\"},\n    \"\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":4091},\n      \"core\":\"gettingstarted_shard1_replica2\"},\n    \"\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":4093},\n      \"core\":\"gettingstarted_shard2_replica2\"}}}\n\n\nSolrCloud example running, please visit http://localhost:8983/solr \n\n\n\n2) Works with the server directory instead of example (based on work being done for SOLR-3619)\n "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14078298",
            "date": "2014-07-29T20:23:16+0000",
            "content": "I should have mentioned, the interactive session for launching the SolrCloud example has not been implemented for Windows yet (in bin/solr.cmd). I do intend to do that, but wanted to get some feedback on what is there now for *nix. Also, I still need to test the bin/solr script with Cygwin (as many may do that instead of using bin/solr.cmd) and test whether bin/solr.cmd supports launching Solr from a directory containing spaces. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14087870",
            "date": "2014-08-06T16:31:24+0000",
            "content": "Commit 1616271 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1616271 ]\n\nSOLR-3617: start/stop script with support for running examples "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14087911",
            "date": "2014-08-06T17:15:24+0000",
            "content": "I've committed this on trunk. Notable improvements from this last patch include:\n\n\n\tInteractive session to launch SolrCloud example for Windows\n\tbin/solr -i calls the SolrCLI class (SOLR-6233) to get basic information about a running server\n\tbin/solr healthcheck -collection foo runs some basic health checks against a collection (cloud mode only)\n\tSupport for legacy (branch_4x layout) and soon-to-be server layout (SOLR-3619)\n\tWindows script works when Solr is installed in a directory containing a space\n\tHardening of *nix and Windows scripts\n\n\n\nI'm hoping to back-port these to branch_4x soon so they can be included in the 4.10 release. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14103292",
            "date": "2014-08-20T02:54:54+0000",
            "content": "Here's an updated patch. Hoping to backport this to 4x (for inclusion in 4.10) unless anyone has any major concerns over the approach. This patch includes some minor bug fixes found by our QA team and some hardening of command-line parsing. Also improved the interactive SolrCloud example session to prompt the user for a configuration name, either default or schemaless. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14103294",
            "date": "2014-08-20T02:56:20+0000",
            "content": "Commit 1619025 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1619025 ]\n\nSOLR-3617: hardening command-line parsing and a few minor bug fixes found by QA testing. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14105489",
            "date": "2014-08-21T15:57:34+0000",
            "content": "Commit 1619461 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1619461 ]\n\nSOLR-3617: clean-up a few error messages and update changes to add to 4.10 release "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14105550",
            "date": "2014-08-21T16:34:46+0000",
            "content": "Commit 1619480 from Timothy Potter in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1619480 ]\n\nSOLR-3617: add bin/solr and bin/solr.cmd scripts for starting, stopping, and running examples. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14105654",
            "date": "2014-08-21T17:35:36+0000",
            "content": "Commit 1619490 from Timothy Potter in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1619490 ]\n\nSOLR-3617: backport bin/solr scripts into the 4.10 branch "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14105977",
            "date": "2014-08-21T21:17:40+0000",
            "content": "Commit 1619591 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1619591 ]\n\nSOLR-3617: minor issue if the user selects a port that is in use for the cloud example. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14105978",
            "date": "2014-08-21T21:18:29+0000",
            "content": "Commit 1619592 from Timothy Potter in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1619592 ]\n\nSOLR-3617: minor issue if the user selects a port that is in use for the cloud example. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14105979",
            "date": "2014-08-21T21:18:56+0000",
            "content": "Commit 1619594 from Timothy Potter in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1619594 ]\n\nSOLR-3617: minor issue if the user selects a port that is in use for the cloud example. "
        }
    ]
}