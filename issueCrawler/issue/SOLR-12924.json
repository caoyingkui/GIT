{
    "id": "SOLR-12924",
    "title": "Optimize JavabinCodec to use byte[] backed CharSequence instead of String",
    "details": {
        "type": "Improvement",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "javabin format uses UTF8 format for String serialization and java Strings are UTF16 and java String always days a buffer copy of those UTF16 input.\n\nSo, what I propose is \n\n\twe create a byte[] backed CharSequence implementation say Utf8CharSequence.\n\tOptionally, javabinCodec can should be able to return this Utf8CharSequence instead of all Strings\n\tIf a charAt() or toString() call is made to Utf8CharSequence it creates a String and cache it\n\tWhen this Utf8CharSequence needs to be serialized again in javabin format it should copy the underlying utf8 byte[]",
    "attachments": {},
    "issue_links": {},
    "comments": []
}