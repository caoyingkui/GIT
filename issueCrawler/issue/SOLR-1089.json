{
    "id": "SOLR-1089",
    "title": "do write to Solr in a separate thread",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "import can be made faster if the write is done in a different thread",
    "attachments": {
        "SOLR-1089.patch": "https://issues.apache.org/jira/secure/attachment/12403779/SOLR-1089.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12689812",
            "date": "2009-03-27T05:16:00+0000",
            "content": "untested patch "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12693520",
            "date": "2009-03-29T05:19:12+0000",
            "content": "The servlet spec used to ban creating background threads inside servlets. I can't find that in the 2.5 spec, but it is generally a bad idea.\n\nhttp://jcp.org/aboutJava/communityprocess/mrel/jsr154/index2.html\n\nThere is a problem with the servlet.destroy() method: it should pause until the index update finishes. Servlet sessions can be persisted and reloaded by the servlet container. This is supported so that, for example, for migrating sessions across web servers to allow a login session to continue across server crashes. There is also some listener interface for when the web app is undeployed.\n\nIt is ok to break this rule, but please make it optional and not the default behavior. It is a land mine: it will almost certainly cause some weird problem on some servlet engine.\n\nLance\n\nFrom the 2.5 servlet spec:\n\nSRV.2.3.4 End of Service\nThe servlet container is not required to keep a servlet loaded for any particular\nperiod of time. A servlet instance may be kept active in a servlet container for a\nperiod of milliseconds, for the lifetime of the servlet container (which could be a\nnumber of days, months, or years), or any amount of time in between.\nWhen the servlet container determines that a servlet should be removed from\nservice, it calls the destroy method of the Servlet interface to allow the servlet to\nrelease any resources it is using and save any persistent state. For example, the\ncontainer may do this when it wants to conserve memory resources, or when it is\nbeing shut down.\nBefore the servlet container calls the destroy method, it must allow any\nthreads that are currently running in the service method of the servlet to complete\nexecution, or exceed a server-defined time limit.\n\nOnce the destroy method is called on a servlet instance, the container may\nnot route other requests to that instance of the servlet. If the container needs to\nenable the servlet again, it must do so with a new instance of the servlet's class.\nAfter the destroy method completes, the servlet container must release the\nservlet instance so that it is eligible for garbage collection.\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12693523",
            "date": "2009-03-29T05:45:30+0000",
            "content": "DIH already does indexing in a separate thread. All the distributed searches are done in new threads. \n\nBTW Solr does not use Servlets. Solr uses a single Filter. So the Servlet lifecycle should not matter to us.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12695991",
            "date": "2009-04-06T06:32:43+0000",
            "content": "synced with trunk . use a SingleThreadExecutor instead of a thread "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12789253",
            "date": "2009-12-11T11:38:25+0000",
            "content": "Once SOLR-1352 is fixed , this may not be required anymore "
        }
    ]
}