{
    "id": "LUCENE-4256",
    "title": "Improve Analysis Factory configuration workflow",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/analysis"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "With the Factorys now available for more general use, I'd like to look at ways to improve the configuration workflow.  Currently it's a little disjoint and confusing, especially around using inform(ResourceLoader).\n\nWhat I think we should do is:\n\n\n\tRemove the need for ResourceLoaderAware and pass in the ResourceLoader in init, so it'd become init(Map<String, String> args, ResourceLoader loader)\n\tConsider moving away from the generic args Map and using setters.  This gives us better typing and could mitigate bugs due to using the wrong configure key.  However it does force the consumer to invoke each setter.\n\tIf we're going to stick with using the args Map, then move the Version parameter into init as well, rather than being a setter as I currently made it.",
    "attachments": {
        "LUCENE-4256-version.patch": "https://issues.apache.org/jira/secure/attachment/12538882/LUCENE-4256-version.patch",
        "LUCENE-4256_incomplete.patch": "https://issues.apache.org/jira/secure/attachment/12537955/LUCENE-4256_incomplete.patch",
        "LUCENE-4256-further.patch": "https://issues.apache.org/jira/secure/attachment/12537984/LUCENE-4256-further.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-26T03:00:54+0000",
            "content": "\nConsider moving away from the generic args Map and using setters. This gives us better typing and could mitigate bugs due to using the wrong configure key. However it does force the consumer to invoke each setter.\n\nI don't think we should do this: else there is no point to the factories. If you want strong typing, just create Tokenizers etc directly. ",
            "author": "Robert Muir",
            "id": "comment-13422859"
        },
        {
            "date": "2012-07-26T03:04:48+0000",
            "content": "\nso it'd become init(Map<String, String> args, \n\nI'm not sure I like that either, i would prefer ctor(args). This way its enforced by the java language \nitself that this was called, people can use final keyword, etc. ",
            "author": "Robert Muir",
            "id": "comment-13422861"
        },
        {
            "date": "2012-07-26T03:15:04+0000",
            "content": "I don't think we should do this: else there is no point to the factories. If you want strong typing, just create Tokenizers etc directly.\n\nThe Factories provide integrating with resources, construction of more complex types, configure once make many copies support.  I guess I was referring to being able to actually pass in primitive types like booleans instead of having to convert a String to a boolean inside the Factory.\n\n\nI'm not sure I like that either, i would prefer ctor(args). This way its enforced by the java language \nitself that this was called, people can use final keyword, etc.\n\nAgreed.  Using constructors definitely gives us better workflow control. ",
            "author": "Chris Male",
            "id": "comment-13422866"
        },
        {
            "date": "2012-07-26T03:19:11+0000",
            "content": "\nThe Factories provide integrating with resources, construction of more complex types, configure once make many copies support. I guess I was referring to being able to actually pass in primitive types like booleans instead of having to convert a String to a boolean inside the Factory.\n\nI think of it as just a way of taking String/String args mostly though.\nThe other stuff is actually already supported by Analyzer easily: its just \nthat you have to write code to make use of it since its strongly typed.\n\nI would like to keep it as Strings, I had an app that could use these\nfactories and it used .properties. Not every thing is XML. ",
            "author": "Robert Muir",
            "id": "comment-13422868"
        },
        {
            "date": "2012-07-26T03:33:30+0000",
            "content": "\nIf we're going to stick with using the args Map, then move the Version parameter into init as well, rather than being a setter as I currently made it.\n\nMaybe we could start with this? It should be a relatively rote change.\n\nThen, as a separate step we should change this to be a real ctor arg.\n\nI think this would simplify things and isnt controversial, small steps! ",
            "author": "Robert Muir",
            "id": "comment-13422871"
        },
        {
            "date": "2012-07-26T03:52:04+0000",
            "content": "\nI think of it as just a way of taking String/String args mostly though.\nThe other stuff is actually already supported by Analyzer easily: its just \nthat you have to write code to make use of it since its strongly typed.\n\nYeah good point.  I guess I was over thinking the purpose of the Factorys.\n\nMaybe we could start with this? It should be a relatively rote change.\n\nDo you think I should put the Version back as a String in the args map? or leave it typed. ",
            "author": "Chris Male",
            "id": "comment-13422876"
        },
        {
            "date": "2012-07-26T04:49:44+0000",
            "content": "Chris here's the start of a prototype.\n\nfor it to work we have to fix the ResourceLoader.newInstance to take params, and fix how solr passes the args (its after the fact now).\n\nAnd there are tons of tests to fix etc. I'm just sleepy and wanted to get it up here. ",
            "author": "Robert Muir",
            "id": "comment-13422893"
        },
        {
            "date": "2012-07-26T07:22:06+0000",
            "content": "Thanks Robert I'll take your prototype and roll with it. ",
            "author": "Chris Male",
            "id": "comment-13422941"
        },
        {
            "date": "2012-07-26T11:39:34+0000",
            "content": "I took Robert's patch and extended it further, fixing the tests and adding some preliminary support for adding params through ResourceLoader.newInstance.   ",
            "author": "Chris Male",
            "id": "comment-13423016"
        },
        {
            "date": "2012-07-26T13:37:59+0000",
            "content": "// TODO: can we just populate the map with ctors?\n\nOf course, by this the SPI loader will fail with ServiceConfigurationError asap when it finds a class that does not support the wanted CTOR! The map looks then like this: Map<String,Constructor<? extends S>.\n\nBut unfortunately there is another problem: It will then initialize all classes on startup, what it currently does not do, so unused classes are never initialized, saving heap&permgen. So its positive and negative... ",
            "author": "Uwe Schindler",
            "id": "comment-13423059"
        },
        {
            "date": "2012-07-26T13:38:40+0000",
            "content": "I am not 100% sure if it really initializes, so maybe we can populate the map... I have to find out. ",
            "author": "Uwe Schindler",
            "id": "comment-13423060"
        },
        {
            "date": "2012-08-02T09:19:01+0000",
            "content": "Going to do this in smaller steps so they are easier to review and be sure about.\n\nThis patch moves the Version back into the args Map.\n\nOnce this is committed I'll tackle the constructor stuff. ",
            "author": "Chris Male",
            "id": "comment-13427192"
        }
    ]
}