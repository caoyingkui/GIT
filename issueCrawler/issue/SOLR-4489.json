{
    "id": "SOLR-4489",
    "title": "StringIndexOutOfBoundsException in SpellCheckComponent",
    "details": {
        "affect_versions": "4.3.1,                                            4.4",
        "status": "Closed",
        "fix_versions": [
            "4.5"
        ],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "My SOLR request params are as shown below.\n\nspellcheck=true&enableElevation=true&facet=true&spellcheck.q=minecraft&spellcheck.extendedResults=true&spellcheck.maxCollations=10&spellcheck.collate=true&wt=javabin&defType=edismax&spellcheck.onlyMorePopular=true  etc.\n\nNote: this work fine many use cases, however it fails for some query terms.\n\n\nFeb 22, 2013 11:06:04 AM org.apache.solr.common.SolrException log\nSEVERE: null:java.lang.StringIndexOutOfBoundsException: String index out of range: -5\n\tat java.lang.AbstractStringBuilder.replace(AbstractStringBuilder.java:797)\n\tat java.lang.StringBuilder.replace(StringBuilder.java:271)\n\tat org.apache.solr.spelling.SpellCheckCollator.getCollation(SpellCheckCollator.java:190)\n\tat org.apache.solr.spelling.SpellCheckCollator.collate(SpellCheckCollator.java:75)\n\tat org.apache.solr.handler.component.SpellCheckComponent.addCollationsToResponse(SpellCheckComponent.java:203)\n\tat org.apache.solr.handler.component.SpellCheckComponent.process(SpellCheckComponent.java:180)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:206)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1699)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:455)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:276)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1337)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:484)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:233)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1065)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:413)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:999)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:351)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:454)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:890)\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:944)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:634)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)\n\tat org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)\n\tat java.lang.Thread.run(Thread.java:680)",
    "attachments": {
        "SOLR-4489.patch": "https://issues.apache.org/jira/secure/attachment/12593977/SOLR-4489.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "venkata marrapu",
            "id": "comment-13584957",
            "date": "2013-02-23T02:14:42+0000",
            "content": "Tested in Solr 4.1 release & noticed same issue.\nI am using DirectSolrSpellChecker. \n\nfrom my solrconfig.xml\n\n\n<searchComponent name=\"spellcheck\" class=\"solr.SpellCheckComponent\">\n\n    <str name=\"queryAnalyzerFieldType\">textSpell</str>\n       <lst name=\"spellchecker\">\n          <str name=\"name\">default</str>\n          <str name=\"field\">textSpell</str>\n          <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n          <str name=\"distanceMeasure\">internal</str>\n         <float name=\"accuracy\">0.5</float>\n         <int name=\"maxEdits\">2</int>\n         <int name=\"minPrefix\">1</int>\n         <int name=\"maxInspections\">5</int>\n         <int name=\"minQueryLength\">4</int>\n         <float name=\"maxQueryFrequency\">0.01</float>\n      </lst>\n\n      <lst name=\"spellchecker\">\n          <str name=\"name\">wordbreak</str>\n          <str name=\"classname\">solr.WordBreakSolrSpellChecker</str>\n          <str name=\"field\">textSpell</str>\n          <str name=\"combineWords\">true</str>\n          <str name=\"breakWords\">true</str>\n          <int name=\"maxChanges\">10</int>\n      </lst>\n   </searchComponent> "
        },
        {
            "author": "Artem Lukanin",
            "id": "comment-13604973",
            "date": "2013-03-18T10:04:59+0000",
            "content": "The same issue with wordbreak in Solr 4.1:\n\n\nparams={spellcheck=true&indent=true&q=calvin\\+harris\\+feat\\+ne\\+yo&spellcheck.q=calvin\\+harris\\+feat\\+ne\\+yo&wt=xml}\n\nSEVERE: null:java.lang.StringIndexOutOfBoundsException: String index out of range: 25\n\tat java.lang.AbstractStringBuilder.charAt(AbstractStringBuilder.java:174)\n\tat java.lang.StringBuilder.charAt(StringBuilder.java:55)\n\tat org.apache.solr.spelling.SpellCheckCollator.getCollation(SpellCheckCollator.java:164)\n\tat org.apache.solr.spelling.SpellCheckCollator.collate(SpellCheckCollator.java:75)\n\tat org.apache.solr.handler.component.SpellCheckComponent.addCollationsToResponse(SpellCheckComponent.java:203)\n\tat org.apache.solr.handler.component.SpellCheckComponent.process(SpellCheckComponent.java:180)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:208)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1816)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:448)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:269)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:662)\n\n\n\nIf I set\n\n\t<str name=\"combineWords\">false</str>\n\n\nthe exception disappears. "
        },
        {
            "author": "Artem Lukanin",
            "id": "comment-13604986",
            "date": "2013-03-18T10:21:16+0000",
            "content": "with combineWords=false I have another exception for the query \n\n\u0440\u0438\u043a\u0438\\-\u0442\u0438\u043a\u0438\\-\u0442\u0430\u0432\u0438\n\n:\n\n\norg.apache.solr.spelling.SpellCheckCollator collate\nWARNING: Exception trying to re-query to check if a spell check possibility would return any hits.\norg.apache.solr.common.SolrException: org.apache.solr.search.SyntaxError: Cannot parse '\u0440\u0438\u043a\u0438\\-\u0442\u0430\u043a\u0438\\(-\u0442 -\u0430 -\u0432\u0438)': Encountered \" \")\" \") \"\" at line 1, column 21.\nWas expecting one of:\n    <EOF> \n    <AND> ...\n    <OR> ...\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    <BAREOPER> ...\n    \"(\" ...\n    \"*\" ...\n    \"^\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <FUZZY_SLOP> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    <REGEXPTERM> ...\n    \"[\" ...\n    \"{\" ...\n    <LPARAMS> ...\n    <NUMBER> ...\n    \n\tat org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:147)\n\tat org.apache.solr.spelling.SpellCheckCollator.collate(SpellCheckCollator.java:111)\n\tat org.apache.solr.handler.component.SpellCheckComponent.addCollationsToResponse(SpellCheckComponent.java:203)\n\tat org.apache.solr.handler.component.SpellCheckComponent.process(SpellCheckComponent.java:180)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:208)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1816)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:448)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:269)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:662)\nCaused by: org.apache.solr.search.SyntaxError: Cannot parse '\u0440\u0438\u043a\u0438\\-\u0442\u0430\u043a\u0438\\(-\u0442 -\u0430 -\u0432\u0438)': Encountered \" \")\" \") \"\" at line 1, column 21.\nWas expecting one of:\n    <EOF> \n    <AND> ...\n    <OR> ...\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    <BAREOPER> ...\n    \"(\" ...\n    \"*\" ...\n    \"^\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <FUZZY_SLOP> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    <REGEXPTERM> ...\n    \"[\" ...\n    \"{\" ...\n    <LPARAMS> ...\n    <NUMBER> ...\n    \n\tat org.apache.solr.parser.SolrQueryParserBase.parse(SolrQueryParserBase.java:164)\n\tat org.apache.solr.search.LuceneQParser.parse(LuceneQParserPlugin.java:72)\n\tat org.apache.solr.search.QParser.getQuery(QParser.java:142)\n\tat org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:117)\n\t... 23 more\nCaused by: org.apache.solr.parser.ParseException: Encountered \" \")\" \") \"\" at line 1, column 21.\nWas expecting one of:\n    <EOF> \n    <AND> ...\n    <OR> ...\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    <BAREOPER> ...\n    \"(\" ...\n    \"*\" ...\n    \"^\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <FUZZY_SLOP> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    <REGEXPTERM> ...\n    \"[\" ...\n    \"{\" ...\n    <LPARAMS> ...\n    <NUMBER> ...\n    \n\tat org.apache.solr.parser.QueryParser.generateParseException(QueryParser.java:651)\n\tat org.apache.solr.parser.QueryParser.jj_consume_token(QueryParser.java:533)\n\tat org.apache.solr.parser.QueryParser.TopLevelQuery(QueryParser.java:98)\n\tat org.apache.solr.parser.SolrQueryParserBase.parse(SolrQueryParserBase.java:160)\n\t... 26 more\n\n\n\nSo, SpellCheckCollator generates a corrupted query for the original escaped query.\nI have\n\n<solrQueryParser defaultOperator=\"AND\"/>\n\n\nin the schema, as well. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13718563",
            "date": "2013-07-24T16:53:21+0000",
            "content": "Here is a failing unit test. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13718724",
            "date": "2013-07-24T19:12:35+0000",
            "content": "Here is a patch with a fix & test.  All tests pass.  I will commit this shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13719735",
            "date": "2013-07-25T16:04:04+0000",
            "content": "Commit 1507042 from James Dyer in branch 'dev/trunk'\n[ https://svn.apache.org/r1507042 ]\n\nSOLR-4489: fix StringIndexOutOfBoundsException in SpellCheckComponent "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13719741",
            "date": "2013-07-25T16:17:04+0000",
            "content": "Commit 1507049 from James Dyer in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1507049 ]\n\nSOLR-4489: fix StringIndexOutOfBoundsException in SpellCheckComponent "
        },
        {
            "author": "Adrien Grand",
            "id": "comment-13787028",
            "date": "2013-10-05T10:18:49+0000",
            "content": "4.5 release -> bulk close "
        }
    ]
}