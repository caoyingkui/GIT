{
    "id": "LUCENE-7775",
    "title": "Throwable not processed",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "6.6",
            "7.0"
        ]
    },
    "description": "Hi\n\nIn recent github morror (lucene-solr), I've found the following suspicious code by Findbugs. \n\nlucene/core/src/java/org/apache/lucene/index/BufferedUpdatesStream.java\n\n\n436   /** Close segment states previously opened with openSegmentStates. */\n437   private ApplyDeletesResult closeSegmentStates(IndexWriter.ReaderPool pool, SegmentState[] s    egStates, boolean success, long gen) throws IOException {\n438     int numReaders = segStates.length;\n439     Throwable firstExc = null;\n440     List<SegmentCommitInfo> allDeleted = null;\n441     long totDelCount = 0;\n442     for (int j=0;j<numReaders;j++) {\n443       SegmentState segState = segStates[j];\n444       if (success) {\n445         totDelCount += segState.rld.getPendingDeleteCount() - segState.startDelCount;\n446         segState.reader.getSegmentInfo().setBufferedDeletesGen(gen);\n447         int fullDelCount = segState.rld.info.getDelCount() + segState.rld.getPendingDeleteCou    nt();\n448         assert fullDelCount <= segState.rld.info.info.maxDoc();\n449         if (fullDelCount == segState.rld.info.info.maxDoc()) {\n450           if (allDeleted == null) {\n451             allDeleted = new ArrayList<>();\n452           }\n453           allDeleted.add(segState.reader.getSegmentInfo());\n454         }\n455       }\n456       try {\n457         segStates[j].finish(pool);\n458       } catch (Throwable th) {\n459         if (firstExc != null) {\n460           firstExc = th;\n461         }\n462       }\n463     }\n464 \n465     if (success) {\n466       // Does nothing if firstExc is null:\n467       IOUtils.reThrow(firstExc);\n468     }\n\n\n\nIn Line 459, firstExc seems always null. So, Line 460 never be reached. Would Line 459 be like this (firstExc is assigned only once when it is null)?:\n\n459         if (firstExc == null) {\n\n \n\nSimilar issue is in Line 88 \n of lucene/core/src/java/org/apache/lucene/index/SegmentDocValues.java as well.\n\n\n 80   synchronized void decRef(List<Long> dvProducersGens) throws IOException {\n 81     Throwable t = null;\n 82     for (Long gen : dvProducersGens) {\n 83       RefCount<DocValuesProducer> dvp = genDVProducers.get(gen);\n 84       assert dvp != null : \"gen=\" + gen;\n 85       try {\n 86         dvp.decRef();\n 87       } catch (Throwable th) {\n 88         if (t != null) {\n 89           t = th;\n 90         }\n 91       }\n 92     }\n 93     if (t != null) {\n 94       IOUtils.reThrow(t);\n 95     }\n 96   }\n\n\n\nThis might be just a trivial thing but I thought it is worth to report just in case. Thanks!",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15963627",
            "date": "2017-04-10T23:07:39+0000",
            "content": "Commit d9973a38db906a1bf2d8f2122163e3a4cef1c17c in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d9973a3 ]\n\nLUCENE-7775: fix exception handling to throw first exception hit ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15963628",
            "date": "2017-04-10T23:08:06+0000",
            "content": "Commit 765d031c86574878e35e4b13b93747255fbf8699 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=765d031 ]\n\nLUCENE-7775: fix exception handling to throw first exception hit ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15963629",
            "date": "2017-04-10T23:08:30+0000",
            "content": "Thanks JC; these are real bugs!  I pushed your suggested fixes. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15963630",
            "date": "2017-04-10T23:08:43+0000",
            "content": "Thanks JC; these are real bugs!  I'll push those fixes. ",
            "author": "Michael McCandless"
        }
    ]
}