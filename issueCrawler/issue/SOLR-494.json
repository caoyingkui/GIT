{
    "id": "SOLR-494",
    "title": "LukeRequestHandler/Ajax-based schema explorer",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This patch submits a schema browsing tool based on making Ajax calls to LukeRequestHandler.  It is in progress, but far enough along to generate discussion and see if people find it useful/perhaps incorporate some feedback.  It is similar to the XSLT-based schema browser in SOLR-75, in that it provides cross-referenced exploring of the major schema components (fields/field types/dynamic fields).  Since LukeRequestHandler provides more information, this version can provide more information than could the XSLT version, including statsitics and more information about dynamic fields.  Also, since it hits LukeRequestHandler, it probably also has much different performance that just transforming schema.xml.",
    "attachments": {
        "multicoreupdate.patch": "https://issues.apache.org/jira/secure/attachment/12378333/multicoreupdate.patch",
        "jsonschemabrowser.patch": "https://issues.apache.org/jira/secure/attachment/12376949/jsonschemabrowser.patch",
        "Field View.jpg": "https://issues.apache.org/jira/secure/attachment/12377089/Field%20View.jpg"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Greg Ludington",
            "id": "comment-12574325",
            "date": "2008-03-03T01:57:26+0000",
            "content": "This patch consists of 5 files:\n\n1) Changes to IndexSchema to expose more information for cross referencing \u2013 the source fields for a copyField, as well the prototypes for each DynamicField\n\n2) Changes to LukeRequestHandler to pass this additional information (copyField sources and destinations, as well as analyzer information, and dynamic field information.)\n\n3) Changes to solr-admin.css for the new page (adding new styles, not changing any existing ones)\n\n4) A javascript-heavy schema.jsp to retrieve this information and present it in a browsable form\n\n5) The inclusion of jquery as a foundation for the javascript in schema.jsp\n\nIt is the last two parts that could be a concern for committers.  jquery is dual-licensed under the GPL and under the MIT license, which I believe is ASF-compatible, but I have not checked the contribution checkbox until I know for sure.  Similarly, schema.jsp itself is heavily dependent on javascript that the project may or may not wish to maintain as versions change.\n\nThe page is also not set up to degrade gracefully.  Normally, I would consider that a large faux pas, but I am creating this as an internal aid, where graceful degradation will not be an issue, so I have not had the itch to redo this server-side.  It may be an issue in the larger context of being included in Solr, as, while it provides a few more ways to look at the schema than the XML/XSL LukeRequestHandler, it will not work across as many clients.  As a result, I did not include any direct link to it from any of the stock admin jsps, so you would have to hit\n\n(your path)/admin/schema.jsp\n\ndirectly in order to try it out.  I have tried it in several different browsers against my own small (single core) indexes, but I would be interested in feedback on how well it works for large indexes or indexes with large numbers of field definitions. "
        },
        {
            "author": "Greg Ludington",
            "id": "comment-12575028",
            "date": "2008-03-04T15:51:35+0000",
            "content": "Screen shot of the basic view of the \"text\" field from the example schema, as viewed  in Firefox 2.  Shows links to field type, the fields it is copied from, index/query analyzers, as well as the histogram and the top terms form. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12579428",
            "date": "2008-03-17T13:06:11+0000",
            "content": "committed!  Thanks Greg for this very slick addition to Solr's schema view! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12579524",
            "date": "2008-03-17T17:36:36+0000",
            "content": "this seems to have broken two SolrJ tests: SolrExampleEmbeddedTest and SolrExampleJettyTest which parse the output from the LukeRequestHandler.\n\nreopening issue until we figure out how to fix it.\n\nGreg: reading the diff, it's not clear to me what changed in the response format from LukeRequestHandler.  Can you elaborate on what changed and if it was intentional and what value it adds? "
        },
        {
            "author": "Greg Ludington",
            "id": "comment-12579614",
            "date": "2008-03-17T21:30:26+0000",
            "content": "The LukeRequestHandler output (and IndexSchema) was changed to provide\na bit more information to cross reference fields, field types, and\ndynamic fields.  These additions allow the user to browse through the\nrelationships between fields/types, hopefully to get a more complete\npicture of the schema.\n\n1) In the default no-argument LukeRequestHandler output, dynamic\nfields are outputted with a reference to the dynamicField used to\ngenerate them.  In the example schema.conf, the field\n\"incubationdate_dt\", would contain this extra child in the XML\nresponse:\n\n<str name=\"dynamicBase\">*_dt</str>\n\n2) In the show=schema view, dynamicField definitions are also\noutputted.  In the XML response, this would be:\n\n<lst name=\"random*\">\n  <str name=\"type\">random</str>\n  <str name=\"flags\">I-S----------</str>\n  <arr name=\"copyDests\"/>\n  <arr name=\"copySources\"/>\n</lst>\n\n3) In that schema view, fields reference the fields they are copied\nfrom, or copied to.  The text field in the example schema would look\nlike the following:\n\n<arr name=\"copySources\">\n  <str>\norg.apache.solr.schema.SchemaField:cat\n{type=text_ws,properties=indexed,tokenized,stored,omitNorms,termVectors,multiValued}\n  </str>\n...and so on for each field\n</arr>\n\n3) In the show=schema view, FieldTypes also output the dynamicFields\nthat use their definitions.  In the example schema, sdouble has no\nfields, and so does not show up.  After this patch, it shows up as\nfollows, because there is a dynamicField available of that type:\n\n<lst name=\"sdouble\">\n  <arr name=\"fields\">\n    <str>*_d</str>\n  </arr>\n  <bool name=\"tokenized\">false</bool>\n  <str name=\"className\">org.apache.solr.schema.SortableDoubleField</str>\n  <lst name=\"indexAnalyzer\">\n    <str name=\"className\">org.apache.solr.schema.FieldType$DefaultAnalyzer</str>\n  </lst>\n  <lst name=\"queryAnalyzer\">\n    <str name=\"className\">org.apache.solr.schema.FieldType$DefaultAnalyzer</str>\n  </lst>\n</lst>\n\n4) Again in the show=schema view, there is some addition information\nabout the analyzers.  Each Field is output with its\npositionIncrementGap, and each FieldType is output with its tokenizers\nand filters.  This FieldType snippet is long, but it appears the solrj\nissue is here:\n\n<lst name=\"indexAnalyzer\">\n    <str name=\"className\">org.apache.solr.analysis.TokenizerChain</str>\n    <lst name=\"tokenizer\">\n        <str name=\"className\">\norg.apache.solr.analysis.WhitespaceTokenizerFactory </str>\n        <lst name=\"args\"/>\n    </lst>\n    <arr name=\"filters\">\n        <lst>\n            <lst name=\"args\">\n                <str name=\"synonyms\">synonyms.txt</str>\n                <str name=\"expand\">false</str>\n                <str name=\"ignoreCase\">true</str>\n            </lst>\n            <str\nname=\"className\">org.apache.solr.analysis.SynonymFilterFactory</str>\n        </lst>\n        <lst>\n            <lst name=\"args\">\n                <str name=\"words\">stopwords.txt</str>\n                <str name=\"ignoreCase\">true</str>\n            </lst>\n            <str\nname=\"className\">org.apache.solr.analysis.StopFilterFactory</str>\n        </lst>\n        <lst>\n            <lst name=\"args\">\n                <str name=\"generateNumberParts\">0</str>\n                <str name=\"catenateWords\">1</str>\n                <str name=\"generateWordParts\">0</str>\n                <str name=\"catenateAll\">0</str>\n                <str name=\"catenateNumbers\">1</str>\n            </lst>\n            <str name=\"className\">\norg.apache.solr.analysis.WordDelimiterFilterFactory </str>\n        </lst>\n        <lst>\n            <lst name=\"args\"/>\n            <str\nname=\"className\">org.apache.solr.analysis.LowerCaseFilterFactory</str>\n        </lst>\n        <lst>\n            <lst name=\"args\">\n                <str name=\"protected\">protwords.txt</str>\n            </lst>\n            <str name=\"className\">\norg.apache.solr.analysis.EnglishPorterFilterFactory </str>\n        </lst>\n        <lst>\n            <lst name=\"args\"/>\n            <str name=\"className\">\norg.apache.solr.analysis.RemoveDuplicatesTokenFilterFactory\n            </str>\n        </lst>\n    </arr>\n</lst>\n\n\nI had not been looking at the solrj effects yet, but it the failure is\nin the way filters and analyzers are output in the show=schema view\n(or how they are parsed in solrj).  I will try and make some time to\nlook at this tonight, but I would be not able to look at other client\nimplementations. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12579675",
            "date": "2008-03-17T23:57:30+0000",
            "content": "Fixed issue that caused SolrJ tests to fail.  Sorry, my bad for not running \"ant test\" before committing! "
        },
        {
            "author": "Greg Ludington",
            "id": "comment-12580880",
            "date": "2008-03-20T18:18:41+0000",
            "content": "I finally had occasion to look at this in a multicore setting, and the extra core-identifying field caused the schema browser problems, and, more importantly, caused an Exception to be thrown in the LukeRequestHandler when trying to output schema information for that extra multicore field.  The upcoming patch adds the necessary check to LukeRequestHandler, and adjusts the javascript in schema.jsp "
        },
        {
            "author": "Greg Ludington",
            "id": "comment-12580881",
            "date": "2008-03-20T18:21:32+0000",
            "content": "In a multicore setting, these changes cause the LukeRequestHandler to throw an Exception on the core-identifying field because there was not a null check for sfield in the appropriate new line of LukeRequestHandler This patch adds this check, and also updates the javascript. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12580908",
            "date": "2008-03-20T19:55:58+0000",
            "content": "patch applied, thanks Greg! "
        }
    ]
}