{
    "id": "SOLR-6262",
    "title": "Make the \"name\" attribute optional for components in solrconfig.xml",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "It is not a good idea to let people decide the names of our standard components such as update, replication, /get etc. These names can be hard coded in the Java file itself. and let us remove the names from solrconfig.xml. \n\nHowever it should be possible to override the name by specifying the 'name' attribute",
    "attachments": {
        "SOLR-6262.patch": "https://issues.apache.org/jira/secure/attachment/12657106/SOLR-6262.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-14068434",
            "date": "2014-07-21T11:54:43+0000",
            "content": "+1 "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14068439",
            "date": "2014-07-21T12:04:22+0000",
            "content": "+1\n\nI'd argue the same for the primitive types (int/float/long/double/date/boolean/string) in our schema.xml but that can be another issue. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14070130",
            "date": "2014-07-22T11:03:28+0000",
            "content": "Changes w/o testcase\n\nWell known RequestHandlers and Query response writers are tagged with a name.\n\nWe will allow their names to be overridden by keeping a 'name' attribute in the tags. In the future we must disallow them to be named anything else.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14123775",
            "date": "2014-09-05T23:16:42+0000",
            "content": "SOLR-6365 can be used to make this work\n\nwe can implicitly define these components in our code and use paramSets to override the defaults "
        }
    ]
}