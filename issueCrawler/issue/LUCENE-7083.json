{
    "id": "LUCENE-7083",
    "title": "BKDReader exceptions at merge from innocuous? test",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "As part of LUCENE-7075, I tried to move join/ modules numeric join support away from deprecated encodings.\n\nBasically from what i see, its encoding Numeric/SortedNumeric in a byte[] as an impl detail, it might as well use the new 8-bit encoding rather than the 7-bit one.\n\nThere are certain bugs in what i did, but i don't like the exceptions I see:\n\n   [junit4] Suite: org.apache.lucene.search.join.TestJoinUtil\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestJoinUtil -Dtests.method=testRandomOrdinalsJoin -Dtests.seed=49BE0A860DCFFEDB -Dtests.slow=true -Dtests.locale=tr -Dtests.timezone=Asia/Urumqi -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   1.16s J1 | TestJoinUtil.testRandomOrdinalsJoin <<<\n   [junit4]    > Throwable #1: org.apache.lucene.store.AlreadyClosedException: refusing to delete any files: this IndexWriter hit an unrecoverable exception\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([49BE0A860DCFFEDB:F6630B1FDD33EBD7]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.ensureOpen(IndexFileDeleter.java:345)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deleteFiles(IndexFileDeleter.java:696)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.decRef(IndexFileDeleter.java:594)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.checkpoint(IndexFileDeleter.java:533)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.checkpoint(IndexWriter.java:2337)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.publishFlushedSegment(IndexWriter.java:2395)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue$FlushTicket.publishFlushedSegment(DocumentsWriterFlushQueue.java:198)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue$FlushTicket.finishFlush(DocumentsWriterFlushQueue.java:213)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket.publish(DocumentsWriterFlushQueue.java:249)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue.innerPurge(DocumentsWriterFlushQueue.java:116)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(DocumentsWriterFlushQueue.java:138)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriter.flushAllThreads(DocumentsWriter.java:624)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.java:2815)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:2989)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:2956)\n   [junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.commit(RandomIndexWriter.java:288)\n   [junit4]    > \tat org.apache.lucene.search.join.TestJoinUtil.createContext(TestJoinUtil.java:1121)\n   [junit4]    > \tat org.apache.lucene.search.join.TestJoinUtil.testRandomOrdinalsJoin(TestJoinUtil.java:403)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.lang.IllegalArgumentException: field=\"fromInteger\" is unrecognized\n   [junit4]    > \tat org.apache.lucene.codecs.lucene60.Lucene60PointsReader.getBKDReader(Lucene60PointsReader.java:120)\n   [junit4]    > \tat org.apache.lucene.codecs.lucene60.Lucene60PointsReader.getNumDimensions(Lucene60PointsReader.java:199)\n   [junit4]    > \tat org.apache.lucene.codecs.asserting.AssertingPointsFormat$AssertingPointsReader.intersect(AssertingPointsFormat.java:169)\n   [junit4]    > \tat org.apache.lucene.codecs.PointsWriter$1.intersect(PointsWriter.java:59)\n   [junit4]    > \tat org.apache.lucene.codecs.lucene60.Lucene60PointsWriter.writeField(Lucene60PointsWriter.java:93)\n   [junit4]    > \tat org.apache.lucene.codecs.PointsWriter.mergeOneField(PointsWriter.java:44)\n   [junit4]    > \tat org.apache.lucene.codecs.PointsWriter.merge(PointsWriter.java:143)\n   [junit4]    > \tat org.apache.lucene.codecs.lucene60.Lucene60PointsWriter.merge(Lucene60PointsWriter.java:121)\n   [junit4]    > \tat org.apache.lucene.codecs.asserting.AssertingPointsFormat$AssertingPointsWriter.merge(AssertingPointsFormat.java:262)\n   [junit4]    > \tat org.apache.lucene.index.SegmentMerger.mergePoints(SegmentMerger.java:168)\n   [junit4]    > \tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:117)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4099)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3679)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n\n\n\nWhat is happening here? Is the exception correct or are we missing a check?",
    "attachments": {
        "broken.patch.txt": "https://issues.apache.org/jira/secure/attachment/12792033/broken.patch.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15185231",
            "author": "Robert Muir",
            "date": "2016-03-08T16:57:12+0000",
            "content": "attached is my broken patch. if you apply it and run:\n\n   ant test -Dtests.slow=true\n\nfrom the join/ module you should see it. "
        },
        {
            "id": "comment-15185430",
            "author": "Michael McCandless",
            "date": "2016-03-08T18:26:56+0000",
            "content": "OK I found the cause here, and I have a small test that shows itl.\n\nThe bug is in the default merge logic in PointsWriter not properly detecting when a points field was never indexed on a given segment.  I'll push the test and fix shortly ... I'll also add a dedicated \"test sparse points fields\" test soon. "
        },
        {
            "id": "comment-15185432",
            "author": "ASF subversion and git services",
            "date": "2016-03-08T18:27:47+0000",
            "content": "Commit 2cac33a5ce7b64713eba6e22d5f7c9122ab8eafe in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2cac33a ]\n\nLUCENE-7083: default points merge logic should not ask a reader to merge points on a field that doesn't exist in that segment "
        },
        {
            "id": "comment-15185440",
            "author": "ASF subversion and git services",
            "date": "2016-03-08T18:30:23+0000",
            "content": "Commit 0ab23fd1f5e38cdd4fe742f70f66d97e666b9e80 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0ab23fd ]\n\nLUCENE-7083: default points merge logic should not ask a reader to merge points on a field that doesn't exist in that segment "
        },
        {
            "id": "comment-15185447",
            "author": "ASF subversion and git services",
            "date": "2016-03-08T18:32:50+0000",
            "content": "Commit 204f8e992d7ad754c2f28c6407fdad57623baf57 in lucene-solr's branch refs/heads/branch_6_0 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=204f8e9 ]\n\nLUCENE-7083: default points merge logic should not ask a reader to merge points on a field that doesn't exist in that segment "
        },
        {
            "id": "comment-15185593",
            "author": "Robert Muir",
            "date": "2016-03-08T19:33:23+0000",
            "content": "Thanks for digging Mike! "
        }
    ]
}