{
    "id": "SOLR-1653",
    "title": "add PatternReplaceCharFilter",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.5",
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Add a new CharFilter that uses a regular expression for the target of replace string in char stream.\n\nUsage:\nschema.xml\n<fieldType name=\"textCharNorm\" class=\"solr.TextField\" positionIncrementGap=\"100\" >\n  <analyzer>\n    <charFilter class=\"solr.PatternReplaceCharFilterFactory\"\n                groupedPattern=\"([nN][oO]\\.)\\s*(\\d+)\"\n                replaceGroups=\"1,2\" blockDelimiters=\":;\"/>\n    <charFilter class=\"solr.MappingCharFilterFactory\" mapping=\"mapping-ISOLatin1Accent.txt\"/>\n    <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n  </analyzer>\n</fieldType>",
    "attachments": {
        "SOLR-1653.patch": "https://issues.apache.org/jira/secure/attachment/12427859/SOLR-1653.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12789957",
            "date": "2009-12-13T23:04:00+0000",
            "content": "I'll commit in a few days. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12790026",
            "date": "2009-12-14T07:47:56+0000",
            "content": "Koji, even after reading through the test, I do not understand how to use it. Are the characters in curly braces, written down for non-groups only? What if I want to remove one particular group?\n\nIt is always good to write a use-case and an example in the issue description itself. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12790056",
            "date": "2009-12-14T09:23:40+0000",
            "content": "Ok. I'll show you same samples \n\n\n\n\nINPUT\ngroupedPattern\nreplaceGroups\nOUTPUT\ncomment\n\n\nsee-ing looking\n(\\w+)(ing)\n1\nsee-ing look\nremove \"ing\" from the end of word\n\n\nsee-ing looking\n(\\w+)ing\n1\nsee-ing look\nsame as above. 2nd parentheses can be omitted\n\n\nNo.1 NO. no.  543\n[nN][oO]\\.\\s*(\\d+)\n{#}\n,1\n#1\tNO.\t#543\nsample for literal. do not forget to set blockDelimiters other than period when you use period in groupedPattern\n\n\nabc=1234=5678\n(\\w+)=(\\d+)=(\\d+)\n3,\n{=},1,{=}\n,2\n5678=abc=1234\nchange the order of the groups\n\n\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12790067",
            "date": "2009-12-14T09:42:52+0000",
            "content": "I guess this can be achieved with the matcher#replaceAll() directly \n\ninput = see-ing looking\nregex = (\\w+)(ing)\nreplaceWith = $1\n\ninput = abc=1234=5678\nregex =(\\w+)=(\\d+)=(\\d+)\nreplaceWith=$3=$1=$2\n "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12790127",
            "date": "2009-12-14T12:53:54+0000",
            "content": "I guess this can be achieved with the matcher#replaceAll() directly \n\nYou're right if we don't correct offset of the output char stream. I need to process one match at a time. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12790129",
            "date": "2009-12-14T13:01:36+0000",
            "content": "I need to process one match at a time.\n\nI guess regex can process one match at a time. \n\nThe most important point is that , we don't need to educate the users on this new  syntax. (I am still not clear about the syntax) . No need to write any parsing code and maintain it  "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12790533",
            "date": "2009-12-15T02:53:13+0000",
            "content": "Excuse myself, because I tried to correct offset per group in a match when I started the first patch, I introduced my own syntax. But, yes, now I've implemented the offset correction per match, so I can use standard syntax. Here is the new patch.\n\nUsage:\nschema.xml\n<fieldType name=\"textCharNorm\" class=\"solr.TextField\" positionIncrementGap=\"100\" >\n  <analyzer>\n    <charFilter class=\"solr.PatternReplaceCharFilterFactory\"\n                pattern=\"([nN][oO]\\.)\\s*(\\d+)\"\n                replaceWith=\"$1$2\"/>\n    <charFilter class=\"solr.MappingCharFilterFactory\" mapping=\"mapping-ISOLatin1Accent.txt\"/>\n    <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n  </analyzer>\n</fieldType>\n\n\n\nIf there is no objections, I'll commit later today. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12790565",
            "date": "2009-12-15T05:23:29+0000",
            "content": "In Solr we refer to Regular Expression Strings as 'regex' . If you think 'pattern' is ok , go ahead. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12790572",
            "date": "2009-12-15T05:47:54+0000",
            "content": "I see that existing \"PatternReplaceFilter\" (not CharFilter) is using \"pattern\". But it uses \"replacement\", not \"replaceWith\". I think I use \"pattern\" and \"replacement\". "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12790577",
            "date": "2009-12-15T06:01:05+0000",
            "content": "If there is no objections, I'll commit later today.\n\n+1\n\nThanks Koji! "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12790751",
            "date": "2009-12-15T14:16:50+0000",
            "content": "Committed revision 890798. Thanks Shalin and Noble for taking time to review the patch. "
        },
        {
            "author": "Paul taylor",
            "id": "comment-12797601",
            "date": "2010-01-07T11:45:05+0000",
            "content": "Hi, Im using in non Solr in an analyser, and think there maybe a performance issue because you cannot pass a compiled Pattern. In the reusableTokenStream() method you cannot reset a charfilter like you can a tokenizer so it as to recompile the pattern everytime \n\ni.e. \n public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n        SavedStreams streams = (SavedStreams)getPreviousTokenStream();\n        if (streams == null) \n{\n            streams = new SavedStreams();\n            setPreviousTokenStream(streams);\n            streams.tokenStream = new StandardTokenizer(Version.LUCENE_CURRENT,new PatternReplaceCharFilter(\"(no\\\\.) ([0-9]+)\",\"$1$2,reader));\n            streams.filteredTokenStream = new StandardFilter(streams.filteredTokenStream);\n            streams.filteredTokenStream = new AccentFilter(streams.filteredTokenStream);\n            streams.filteredTokenStream = new LowercaseFilter(streams.filteredTokenStream);\n        }\n        else \n{\n            streams.tokenStream.reset(new PatternReplaceCharFilter(\"(no\\\\.) ([0-9]+)\",\"$1$2\",reader));\n        }\n        return streams.filteredTokenStream;\n    } "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12798271",
            "date": "2010-01-09T00:47:43+0000",
            "content": "Thanks, Paul! I've just committed revision 897357. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872776",
            "date": "2010-05-28T02:49:32+0000",
            "content": "\nCorrecting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013215",
            "date": "2011-03-30T15:45:53+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}