{
    "id": "SOLR-3706",
    "title": "Ship setup to log with log4j.",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Currently we default to java util logging and it's terrible in my opinion.\n\n*It's simple built in logger is a 2 line logger.\n*You have to jump through hoops to use your own custom formatter with jetty - either putting your class in the start.jar or other pain in the butt solutions.\n*It can't roll files by date out of the box.\n\nI'm sure there are more issues, but those are the ones annoying me now. We should switch to log4j - it's much nicer and it's easy to get a nice single line format and roll by date, etc.\n\nIf someone wants to use JUL they still can - but at least users could start with something decent.",
    "attachments": {
        "SOLR-3706-maven.patch": "https://issues.apache.org/jira/secure/attachment/12575718/SOLR-3706-maven.patch",
        "SOLR-3706-solr-log4j.patch": "https://issues.apache.org/jira/secure/attachment/12573843/SOLR-3706-solr-log4j.patch",
        "SOLR-3706.patch": "https://issues.apache.org/jira/secure/attachment/12574864/SOLR-3706.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13428370",
            "date": "2012-08-03T20:49:55+0000",
            "content": "I still think it would be better to not inlcude any slf4j binding in the war but place our chosen default in solr/example/lib, so people easily can swap things out without repacking solr.war. I don't have an explicit log preference, it should be up to the customer to choose at deploy time. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13428374",
            "date": "2012-08-03T20:55:31+0000",
            "content": "I don't really where the jars end up - I just want decent logging out of the box - that pretty much leaves you with log4j. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13594044",
            "date": "2013-03-05T22:45:29+0000",
            "content": "solr/example/lib\n\nHave you actually tried that? I was talking to someone the other day that said they had to package this in the war to get it to work - but I'm pretty sure I remember getting it to work by putting it int he jetty lib dir in the past. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13594087",
            "date": "2013-03-05T23:25:56+0000",
            "content": "I tried something like that a while back. I think you need to remove all slf4j jars from the war for it to work. When slf4j-api.jar is in the war you won't be able to load slf4j-log4j*.jar from external location. Also I believe various servlet container implementations may require you to put your logging classes in different places for it to work. For wrapping up /example/ I believe it will work put them all in /example/lib. Try it.\n\nI agree that log4j is a better out-of-the box experience with the Jetty we ship, and a decent config which rotates etc. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13594112",
            "date": "2013-03-05T23:51:55+0000",
            "content": "Great, that will probably save me some time working this out. I'll play around with this when I get home next week. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13594114",
            "date": "2013-03-05T23:53:01+0000",
            "content": "Also, if I remember right, the reason I put it in the jetty lib dir in the past and another advantage is that jetty will then use it as well - instead of it's weird mortbay whatever logging stuff. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13594333",
            "date": "2013-03-06T04:00:26+0000",
            "content": "I think you need to remove all slf4j jars from the war for it to work. When slf4j-api.jar is in the war you won't be able to load slf4j-log4j*.jar from external location. Also I believe various servlet container implementations may require you to put your logging classes in different places for it to work. For wrapping up /example/ I believe it will work put them all in /example/lib. Try it.\n\nThis is exactly right.  I created a patch that made a \"dist-excl-slf4j\" build target, and modified the dist-war-excl-slf4j target.  Hoss committed it for me in SOLR-3918, on the condition that I updated the wiki, which I did.  Now all slf4j jars are removed from the war.\n\nI use the jetty included with the example in production, and log4j finally worked when I put the slf4j and log4j jars in lib/ext. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13594390",
            "date": "2013-03-06T05:28:48+0000",
            "content": "here's the logging jars, in jetty's lib/ext:\n\n[root@bigindy5 ~]# ls -al /opt/solr4/lib/ext/\ntotal 548\ndrwxrwxr-x  2 ncindex ncindex   4096 Nov 30 10:59 .\ndrwxr-xr-x. 3 ncindex ncindex   4096 Feb  3 13:38 ..\n-rw-r--r--  1 ncindex ncindex  16457 Oct 20 13:41 jcl-over-slf4j-1.7.2.jar\n-rw-rw-r--  1 ncindex ncindex 489883 Oct 20 13:41 log4j-1.2.17.jar\n-rw-r--r--  1 ncindex ncindex  26083 Oct 20 13:41 slf4j-api-1.7.2.jar\n-rw-r--r--  1 ncindex ncindex   8819 Oct 20 13:41 slf4j-log4j12-1.7.2.jar\n\n\nand for comparison purposes, here's the lib in solr.solr.home:\n\n[root@bigindy5 ~]# ls /index/solr4/lib\nicu4j-49.1.jar\nlucene-analyzers-icu-4.2-SNAPSHOT.jar\nmysql-connector-java-5.1.22-bin.jar\nsolr-dataimporthandler-4.2-SNAPSHOT.jar\nsolr-dataimporthandler-extras-4.2-SNAPSHOT.jar\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13594911",
            "date": "2013-03-06T18:09:22+0000",
            "content": "Thanks for the details Shawn! "
        },
        {
            "author": "David Smiley",
            "id": "comment-13595393",
            "date": "2013-03-07T01:15:11+0000",
            "content": "I hear ya on JUL sucking.  My first involvement with the Solr community was on this very issue as I railed against it and pushed for SLF4J.  I'm glad me and those that pushed with me (Ryan, ...) won out.\n\nMark, have you tried Logback?  That's a good logging implementation; arguably a better one. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13595458",
            "date": "2013-03-07T02:31:27+0000",
            "content": "Mark, have you tried Logback?\n\nI have not, I'll take a look! "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13603216",
            "date": "2013-03-15T07:56:36+0000",
            "content": "This patch switches things to log4j\n\nI'm not wild about adding log4j to the .war, but that is the closest to what we currently do with JUL\n\nDocs and sample configs would need to be updated too...  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13603503",
            "date": "2013-03-15T16:48:29+0000",
            "content": "I'd prefer a solution closer to what we are discussing.\n\nThere are also other things to look at I think:\n\n*existing log ant targets - are they now broken?\n*existing pre logging setup in jetty.xml and stuff in the README\n*an example log4j conf file rather than the java util one\n*consider switching our tests to it so that devs actually deal with what users will see\n\nI think that Jan is on the right track for how we should tackle the switch. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13603512",
            "date": "2013-03-15T16:56:56+0000",
            "content": "Does that mean:\n\n\tno logging slf4j/log4j in .war  (like dist-war-excl-slf4j)\n\tput logging files slf4j+log4j in example/lib\n\n\n\nI'm a big +1 to that\n\nbut last we discussed inertia pointed towords keeping concrete logging dependencies in solr.war \n "
        },
        {
            "author": "Christian Moen",
            "id": "comment-13603516",
            "date": "2013-03-15T16:59:28+0000",
            "content": "\nMark, have you tried Logback? That's a good logging implementation; arguably a better one.\n\nDavid and Mark, I believe Log4J 2 addresses a lot of the weaknesses in Log4J 1.x also addressed by Logback.  However, Log4J 2 hasn't been released yet.\n\nTo me it sounds like a good idea to use Log4J 1.x now and move to Log4J 2 in the future. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13603517",
            "date": "2013-03-15T16:59:52+0000",
            "content": "but last we discussed inertia pointed towords keeping concrete logging dependencies in solr.war\n\nWhy? I don't see anyone arguing for that here.\n\nThere seems to be plenty of advantageous to getting it out of the webapp and plenty of downsides to having it in.\n\nWhere and what is someone else arguing? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13603532",
            "date": "2013-03-15T17:12:22+0000",
            "content": "> Where and what is someone else arguing?\n\nI am remembering discussion from a long time ago (year+) the last time I really paid attention to this discussion.  I can dig it up, but am much happier to drop it from the .war!\n\n\nI will switch things around to pull the logging jars out of the war and put them in the example lib folder\n\nAre there concrete patches on other issues that I ignored?  The key stuff in this one is for the admin UI managing log4j levels. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13603537",
            "date": "2013-03-15T17:16:09+0000",
            "content": "I can dig it up, but am much happier to drop it from the .war!\n\nGreat, this is my feeling - a lot has changed in a year - we have a new discussion here that seems to be making progress and has a lot of visibility. If someone wants to toss a monkey wrench in, the lane is wide open  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13603539",
            "date": "2013-03-15T17:16:57+0000",
            "content": "I will switch things around to pull the logging jars out of the war and put them in the example lib folder\n\nI'm happy to help out too - I've been meaning to get to this and just have not yet. Happy to let someone else do it, but if you need any help, I have a strong interest in making this work well. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13603623",
            "date": "2013-03-15T18:11:13+0000",
            "content": "Mark, can you take a look at this?\n\nremoves all logging from solr.war and tries to copy files to example/lib\n\nfor some reason the log4j dependency does not copy into the that folder "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13604916",
            "date": "2013-03-18T07:08:17+0000",
            "content": "Sorry Ryan - fell off my radar this weekend. I'll try and look at this sometime after I wake up today. "
        },
        {
            "author": "Satheesh Akkinepally",
            "id": "comment-13605104",
            "date": "2013-03-18T13:29:17+0000",
            "content": "We got logback working on our jetty/solr installation. logBack also provides configurable http access logs (log4j does not have this for jetty) out of the box and it works great with jetty and solr. But yes for this to work, we had to unwar the solr.war remove the native jdk logging jar and place the logBack implementation in the war. \nIt would be good if we dont have to unwar and war and can use the solr.war out of the box for any custom logging implementation that we want to use. Also, the web app class loader seems to ignore the log4j implementation found in the jetty lib if slf4j is available within the war.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13609287",
            "date": "2013-03-21T18:42:12+0000",
            "content": "I've got this mostly working, though there are still a few little chads to work out. One line logging...it's beautiful \n\nI'm going to say lets get log4j fully integrated and working well - I think most of us know it best and it's already setup to work with the admin UI.\n\nIf someone that knows logback can then use this as a starting base to switch to logback (should be much easier to build off this), that would be fine, else we can consider it later, or simply move to log4j2 later. Someone has said it offers the same benefits as logback. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13609294",
            "date": "2013-03-21T18:47:59+0000",
            "content": "One thing that we would lose in tests with the current approach is Yonik Seeley's SolrLogFormatter. We would probably want to re-implement it. I'd much prefer that to trying to straddle different logging impls for example and tests. I think devs should see the logging users will see. And did I mention the single line logging? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13609365",
            "date": "2013-03-21T19:41:11+0000",
            "content": "I'm going to say lets get log4j fully integrated and working well\n\n+1  log4j is common and the infrastructure changes we need to make that work are the same needed for logback or log4j2.  \n\nOnce we have things working, converting the SolrLogFormatter to Log4j would be great.\n\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13609369",
            "date": "2013-03-21T19:43:47+0000",
            "content": "This builds on Ryan's patch. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13609386",
            "date": "2013-03-21T20:00:37+0000",
            "content": "Mark \u2013 anything you want me to look at?\n\nWhat are the things that need done before we can commit?  (I think SolrLogFormatter should come as a follow on issue) "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13609398",
            "date": "2013-03-21T20:10:13+0000",
            "content": "Just some general sanity review would be good. I tried running tests in eclipse as well as making sure test fails with ant test still logged. Someone might have comments on the logging format, I got it from the wiki or something. I also tested run-example and it logs. I updated the README to mention you might want to turn off the console logging and that we use log4j by default.\n\nIf someone can review, I'll commit it. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13609437",
            "date": "2013-03-21T20:34:37+0000",
            "content": "Hmm..looks like ant test fails in the solrj module are not picking up the logging config file in core. For the moment I think I can just put it in the solrj test-files dir as well. It may be better longer term to get a test-file dir for the test-framework module and have one copy there if that is possible. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13609446",
            "date": "2013-03-21T20:42:00+0000",
            "content": "Do we want slf4j-api in the .war or nothing?   I think nothing is OK (as you have it)\n\nUnrelated... the .war includes restlet stuff?  When I poke around the code that is only used in tests.  Is the restlet infrastructure part of solr core now?\n\nI'm testing maven stuff and will let you know if that looks OK "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13609454",
            "date": "2013-03-21T20:49:40+0000",
            "content": "Do we want slf4j-api in the .war or nothing? I think nothing is OK (as you have it)\n\nI don't think so - if we do that, everyone has claimed you cannot easily change the logging impl without building a custom war.\n\nUnrelated... the .war includes restlet stuff? When I poke around the code that is only used in tests. Is the restlet infrastructure part of solr core now?\n\nYes, the schema read side rest api uses it - new in 4.2. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13609865",
            "date": "2013-03-22T03:39:11+0000",
            "content": "Do we want slf4j-api in the .war or nothing? I think nothing is OK (as you have it)\n\nI favor having none of the slf4j jars in the war.  If logging jars in lib/ext will be the new standard, it's better to have all the related jars there and none of them in the war. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13609914",
            "date": "2013-03-22T04:40:56+0000",
            "content": "As long it's also easy to handle an SLF4J-less war in Tomcat, then I think it's fine too.  Nonetheless this is going to be a new thing a deployer of Solr needs to check the box in their checklist.  It might be a good idea to have a very early classloader check in SolrDispatchFilter that checks if SLF4J is there and if not then gives you a very helpful message to remedy it \u2013 i.e. you need to place SLF4J jars in your app-server somewhere or re-pack the WAR with them. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13609919",
            "date": "2013-03-22T04:46:26+0000",
            "content": "It's a much better model really - it also lets jetty hook into the logging right away (or tomcat or whatever you container). Tons of upsides. Logging freedom. Finally. Yay.\n\nIt might be a good idea to have a very early classloader check in SolrDispatchFilter that checks if SLF4J is there and if not then gives you a very helpful message to remedy it \u2013 i.e. you need to place SLF4J jars in your app-server somewhere or re-pack the WAR with them.\n\nYou bring up a good point - we should look at that and see how friendly we can make it.\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13609931",
            "date": "2013-03-22T04:54:13+0000",
            "content": "My question was only about the slf4j-api.jar file not any of the implementation jars\n\nIf we don't include the -api.jar and there is no logging configured in the container it will crash with a ClassNotFound exception.  If we add the -api.jar file it will write a line to stdout and stderr that say \"no logging framework found\" and then hide all logging messages.  (this is the default slf4j behavior)\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13609938",
            "date": "2013-03-22T05:00:44+0000",
            "content": "My question was only about the slf4j-api.jar file not any of the implementation jars\n\nI believe others have reported you cannot mix and match this way. I think that makes sense given the different class loaders that would be involved and how jetty will use slf4j as well.\n\nIf we don't include the -api.jar and there is no logging configured in the container it will crash with a ClassNotFound exception. If we add the -api.jar file it will write a line to stdout and stderr that say \"no logging framework found\" and then hide all logging messages. (this is the default slf4j behavior)\n\nI think if we can do something more explicit, that would be very helpful, but I think we are working from the classnotfound base point, because I don't think we can mix. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13610224",
            "date": "2013-03-22T12:58:45+0000",
            "content": "You can't mix and match. So the CHANGES.txt should mention what do do for custom deploys. I guess also solr/SYSTEM_REQUIREMENTS.txt could be updated with a paragraph saying that the Solr WAR depends on SLF4j being installed. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13615385",
            "date": "2013-03-27T15:27:40+0000",
            "content": "We still need to update the maven dependencies.  This is my first attempt, but it still fails with:\n\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.0:compile (default-compile) on project solr-analysis-extras: Compilation failure: Compilation failure:\n[ERROR] /Users/ryan/workspace/apache/lucene_4x/solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField.java:[37,30] package org.apache.solr.common does not exist\n[ERROR] /Users/ryan/workspace/apache/lucene_4x/solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField.java:[38,44] package org.apache.solr.\n\n\n\nI won't be able to look at this for a while, so someone else can pick it up or I will try to tackle it later "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13615391",
            "date": "2013-03-27T15:32:20+0000",
            "content": "Someone will jump on it - I still follow \"the committer does not need deal with maven, maven dudes will deal with it\" that fell out of the big maven discussion Unfortunately, your one of those maven dudes, so you can't duck as nicely, but I'd bet Steve or someone will be willing to help us out. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13615392",
            "date": "2013-03-27T15:32:48+0000",
            "content": "That is, Steve Rowe "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13615405",
            "date": "2013-03-27T15:39:16+0000",
            "content": "That is, Steve Rowe\n\nCool, I got a \"you got mentioned in JIRA\" email, which prodded me to do more than TL;DR this issue's comments - I didn't know about this JIRA feature.\n\nWe still need to update the maven dependencies. This is my first attempt, but it still fails with: [...] I won't be able to look at this for a while, so someone else can pick it up or I will try to tackle it later\n\nI'll take a look today. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13615407",
            "date": "2013-03-27T15:40:47+0000",
            "content": "I still follow \"the committer does not need deal with maven, maven dudes will deal with it\"\n\nthat is totally fine.  It is easier to do in two passes anyway "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13615473",
            "date": "2013-03-27T16:43:27+0000",
            "content": "Whoops - I have to deal with some license issues. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13615572",
            "date": "2013-03-27T18:07:02+0000",
            "content": "Patch, minor mods from Ryan McKinley's patch (mostly adding org.slf4j:jul-to-slf4j as an optional dep in the solr parent POM).\n\nThe .war now has the same set of .jar files under WEB-INF/lib/ (after SOLR-4649 removes two test-only jars from the Ant-built .war) - I had to make the morfologik dependency optional in the solr-core POM in order to achieve this.\n\nAlso, compilation succeeds, and all Solr tests pass under the Maven build.\n\nRyan, could you try this patch and see if it fixes your compilation problem? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13615672",
            "date": "2013-03-27T19:54:32+0000",
            "content": "yup it worked.  thanks Steve Rowe "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13615693",
            "date": "2013-03-27T20:17:25+0000",
            "content": "yup it worked.\n\nThanks for testing, Ryan.\n\nCommitted to trunk and branch_4x. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13615876",
            "date": "2013-03-27T23:06:54+0000",
            "content": "Something is still broken as far as how log4j is being configured when tests are run...\n\n\nhossman@frisbee:~/lucene/dev/solr/solrj$ ant test -Dtestcase=SolrExampleXMLTest\n...\ncommon.test:\n[junit4:junit4] <JUnit4> says hi! Master seed: 7C26743BA1BE32C5\n[junit4:junit4] Executing 1 suite with 1 JVM.\n[junit4:junit4] \n[junit4:junit4] Started J0 PID(6428@frisbee).\n[junit4:junit4] Suite: org.apache.solr.client.solrj.SolrExampleXMLTest\n[junit4:junit4]   2> SLF4J: Class path contains multiple SLF4J bindings.\n[junit4:junit4]   2> SLF4J: Found binding in [jar:file:/home/hossman/lucene/dev/solr/solrj/lib/slf4j-log4j12-1.6.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]\n[junit4:junit4]   2> SLF4J: Found binding in [jar:file:/home/hossman/lucene/dev/solr/core/lib/slf4j-log4j12-1.6.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]\n[junit4:junit4]   2> SLF4J: Found binding in [jar:file:/home/hossman/lucene/dev/solr/example/lib/ext/slf4j-log4j12.jar!/org/slf4j/impl/StaticLoggerBinder.class]\n[junit4:junit4]   2> SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\n[junit4:junit4]   2> SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\n[junit4:junit4]   2> log4j:WARN No appenders could be found for logger (org.apache.solr.SolrJettyTestBase).\n[junit4:junit4]   2> log4j:WARN Please initialize the log4j system properly.\n[junit4:junit4]   2> log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\n\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13615925",
            "date": "2013-03-28T00:35:07+0000",
            "content": "A couple of notes after taking a look at things:\n\n1) Included in example/lib/ext is jul-to-slf4j.jar, but I don't have this jar in my custom log4j setup.  This might be because I do not use any features that depend directly on JUL.  Searching the entire checkout for java.util.logging, I can see some explicit imports, even outside the admin UI classes specifically made for it.  Below is a list of all the .java files in trunk that import JUL classes.  I suspect that the spatial and facet code should use slf4j instead.  The test code might have a legitimate reason to import JUL directly, and the log formatter for the admin UI might still have need for it.  Is there anything here that needs follow-up?\n\n\n./lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase.java\n./lucene/spatial/src/java/org/apache/lucene/spatial/util/ShapeFieldCacheProvider.java\n./lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsAccumulator.java\n./lucene/facet/src/java/org/apache/lucene/facet/sampling/RepeatableSampler.java\n./lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader.java\n./lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java\n./solr/core/src/test/org/apache/solr/handler/admin/LoggingHandlerTest.java\n./solr/core/src/java/org/apache/solr/SolrLogFormatter.java\n./solr/core/src/java/org/apache/solr/logging/jul/JulInfo.java\n./solr/core/src/java/org/apache/solr/logging/jul/RecordHandler.java\n./solr/core/src/java/org/apache/solr/logging/jul/JulWatcher.java\n./solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java\n\n\n\n2) The jars in lib/ext do not have version numbers in the filenames.  This doesn't affect operation at all, but it does mean that a casual observer will not know what version is being included, so it'll be harder to track down potential bugs in those libraries.  Even examining the filenames within the jars reveals no version information. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13615942",
            "date": "2013-03-28T00:52:14+0000",
            "content": "Something is still broken as far as how log4j is being configured when tests are run...\n\nPossibly related, but as of this change, i can't get \"ant test\" to pass for the solrj tests.\n\nUsing trunk, i can run the following...\n\n\nsvn update -r 1461586 && ant clean && cd solr/solrj/ && ant test -Dtests.dups=10\n\n\n\n...and everything runs great.  \n\nBut as soon as i try to use r1461587 (or later) at least one of the solrj tests using jetty will fail (even w/o trying to run duplicate tests) with a NoHttpResponseException...\n\n\nsvn update -r 1461587 && ant clean && cd solr/solrj/ && ant test\n\n...\n\n[junit4:junit4] HEARTBEAT J2 PID(18228@frisbee): 2013-03-27T17:40:10, stalled for  125s at: SolrExampleJettyTest.testUpdateMultiValuedField\n[junit4:junit4] HEARTBEAT J2 PID(18228@frisbee): 2013-03-27T17:41:10, stalled for  185s at: SolrExampleJettyTest.testUpdateMultiValuedField\n[junit4:junit4] Suite: org.apache.solr.client.solrj.embedded.SolrExampleJettyTest\n[junit4:junit4]   2> SLF4J: Class path contains multiple SLF4J bindings.\n[junit4:junit4]   2> SLF4J: Found binding in [jar:file:/home/hossman/lucene/dev/solr/solrj/lib/slf4j-log4j12-1.6.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]\n[junit4:junit4]   2> SLF4J: Found binding in [jar:file:/home/hossman/lucene/dev/solr/core/lib/slf4j-log4j12-1.6.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]\n[junit4:junit4]   2> SLF4J: Found binding in [jar:file:/home/hossman/lucene/dev/solr/example/lib/ext/slf4j-log4j12.jar!/org/slf4j/impl/StaticLoggerBinder.class]\n[junit4:junit4]   2> SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\n[junit4:junit4]   2> SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\n[junit4:junit4]   2> log4j:WARN No appenders could be found for logger (org.apache.solr.SolrJettyTestBase).\n[junit4:junit4]   2> log4j:WARN Please initialize the log4j system properly.\n[junit4:junit4]   2> log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\n[junit4:junit4]   2> Creating dataDir: /home/hossman/lucene/dev/solr/build/solr-solrj/test/J2/./solrtest-SolrExampleJettyTest-1364431081119\n[junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=SolrExampleJettyTest -Dtests.method=testUpdateMultiValuedField -Dtests.seed=D7EFA4209757AF4C -Dtests.slow=true -Dtests.locale=uk -Dtests.timezone=America/Argentina/Rio_Gallegos -Dtests.file.encoding=US-ASCII\n[junit4:junit4] ERROR    201s J2 | SolrExampleJettyTest.testUpdateMultiValuedField <<<\n[junit4:junit4]    > Throwable #1: org.apache.solr.client.solrj.SolrServerException: IOException occured when talking to server at: https://127.0.0.1:55761/solr\n[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([D7EFA4209757AF4C:C5EA294B445B7894]:0)\n[junit4:junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:416)\n[junit4:junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:181)\n[junit4:junit4]    > \tat org.apache.solr.client.solrj.request.AbstractUpdateRequest.process(AbstractUpdateRequest.java:117)\n[junit4:junit4]    > \tat org.apache.solr.client.solrj.SolrServer.commit(SolrServer.java:168)\n[junit4:junit4]    > \tat org.apache.solr.client.solrj.SolrExampleTests.testUpdateMultiValuedField(SolrExampleTests.java:1404)\n[junit4:junit4]    > \tat java.lang.Thread.run(Thread.java:722)\n[junit4:junit4]    > Caused by: org.apache.http.NoHttpResponseException: The target server failed to respond\n[junit4:junit4]    > \tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:95)\n[junit4:junit4]    > \tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:62)\n[junit4:junit4]    > \tat org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:254)\n[junit4:junit4]    > \tat org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:289)\n[junit4:junit4]    > \tat org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:252)\n[junit4:junit4]    > \tat org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:191)\n[junit4:junit4]    > \tat org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:300)\n[junit4:junit4]    > \tat org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:127)\n[junit4:junit4]    > \tat org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:717)\n[junit4:junit4]    > \tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:522)\n[junit4:junit4]    > \tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)\n[junit4:junit4]    > \tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:805)\n[junit4:junit4]    > \tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:784)\n[junit4:junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:353)\n[junit4:junit4]    > \t... 44 more\n[junit4:junit4]   2> NOTE: test params are: codec=Lucene42: {}, docValues:{}, sim=RandomSimilarityProvider(queryNorm=false,coord=crazy): {}, locale=uk, timezone=America/Argentina/Rio_Gallegos\n[junit4:junit4]   2> NOTE: Linux 3.2.0-40-generic amd64/Oracle Corporation 1.7.0_15 (64-bit)/cpus=4,threads=1,free=171547592,total=337838080\n[junit4:junit4]   2> NOTE: All tests run in this JVM: [SolrExampleJettyTest]\n[junit4:junit4] Completed on J2 in 213.23s, 27 tests, 1 error <<< FAILURES!\n[junit4:junit4] \n[junit4:junit4] Suite: org.apache.solr.client.solrj.request.TestCoreAdmin\n[junit4:junit4] Completed on J2 in 0.65s, 2 tests\n[junit4:junit4] \n[junit4:junit4] Suite: org.apache.solr.client.solrj.embedded.LargeVolumeBinaryJettyTest\n[junit4:junit4] Completed on J2 in 1.03s, 1 test\n[junit4:junit4] \n[junit4:junit4] Suite: org.apache.solr.common.util.TestNamedListCodec\n[junit4:junit4] Completed on J2 in 0.31s, 4 tests\n[junit4:junit4] \n[junit4:junit4] Suite: org.apache.solr.common.params.SolrParamTest\n[junit4:junit4] Completed on J2 in 0.02s, 1 test\n[junit4:junit4] \n[junit4:junit4] Suite: org.apache.solr.client.solrj.embedded.SolrExampleStreamingTest\n[junit4:junit4] Completed on J2 in 18.64s, 27 tests\n[junit4:junit4] \n[junit4:junit4] Suite: org.apache.solr.common.util.TestXMLEscaping\n[junit4:junit4] Completed on J2 in 0.07s, 7 tests\n[junit4:junit4] \n[junit4:junit4] Suite: org.apache.solr.client.solrj.response.FacetFieldTest\n[junit4:junit4] Completed on J2 in 0.01s, 1 test\n[junit4:junit4] \n[junit4:junit4] \n[junit4:junit4] Tests with failures:\n[junit4:junit4]   - org.apache.solr.client.solrj.embedded.SolrExampleJettyTest.testUpdateMultiValuedField\n[junit4:junit4] \n[junit4:junit4] \n[junit4:junit4] JVM J0:     1.01 ..    79.72 =    78.71s\n[junit4:junit4] JVM J1:     1.23 ..    79.74 =    78.52s\n[junit4:junit4] JVM J2:     1.02 ..   235.99 =   234.97s\n[junit4:junit4] Execution time total: 3 minutes 56 seconds\n[junit4:junit4] Tests summary: 45 suites, 266 tests, 1 error\n\n\n\n...the failures happen in different tests at different places, but all the ones i've seen have happened in the middle of tests \u2013 never the \"first\" attempt at talking to the solr server, suggesting that the server is in fact up, and responds to at least some of the add/delete/commit requests but then later it suddenly vanishes.  (I have no idea why this might be happening, or how it might related to the changes in r1461587 ... there is no hint as to why the server has suddenly vanished, because of the previously mentioned problem of log4j not finding config).\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13615996",
            "date": "2013-03-28T02:49:13+0000",
            "content": "Hmm...seeing this on trunk as well - though I ran ant test a bunch of times previously to test the logging output... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13615997",
            "date": "2013-03-28T02:51:09+0000",
            "content": "It's late and I'm going to bed. All I can say is that I heavily tested the logging output for ant test, so I have no clue what has changed at the moment. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616005",
            "date": "2013-03-28T03:05:27+0000",
            "content": "Between the one run i saw fail locally and your stuff above, it looks like just example based tests. And we have the jars both in the example and in solrj and in core (hence the warnings, though they never caused me any grief in my testing before). Not sure how to get around that (or if it is indeed the problem). "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616015",
            "date": "2013-03-28T03:43:29+0000",
            "content": "Odd - Ryans first patch was giving me issues without the jars in core - but perhaps I just hadn't refreshed ivy right or something. Removing from core. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616032",
            "date": "2013-03-28T04:03:30+0000",
            "content": "Okay, so I'll remove from core in the morning (must...sleep), but the problem appears to be having the jars in ivy in both the solrj and example modules. Need a creative way to get around it I guess... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616228",
            "date": "2013-03-28T13:12:52+0000",
            "content": "More data point - ant test seems to go fine on my mac and is hit or miss on my other linux box running jenkins. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616285",
            "date": "2013-03-28T14:26:10+0000",
            "content": "The jars in lib/ext do not have version numbers in the filenames.\n\nI'll address this. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616339",
            "date": "2013-03-28T15:18:00+0000",
            "content": "Okay, committed to 5x and 4x - things should be in better shape at this point. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616340",
            "date": "2013-03-28T15:19:57+0000",
            "content": "A couple test ant runs seemed at the old speed - last one was fairly slow though, looks like due to:\n\n[junit4:junit4] HEARTBEAT J2 PID(20759@totalmetal): 2013-03-28T11:09:27, stalled for 64.6s at: SolrExampleStreamingTest.testChineseDefaults\n[junit4:junit4] HEARTBEAT J2 PID(20759@totalmetal): 2013-03-28T11:10:27, stalled for  125s at: SolrExampleStreamingTest.testChineseDefaults\n[junit4:junit4] HEARTBEAT J2 PID(20759@totalmetal): 2013-03-28T11:11:27, stalled for  185s at: SolrExampleStreamingTest.testChineseDefaults\n[junit4:junit4] Suite: org.apache.solr.client.solrj.embedded.SolrExampleStreamingTest\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616367",
            "date": "2013-03-28T15:45:38+0000",
            "content": "Bah - and I just hit it again - guess I just had a couple lucky runs... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616378",
            "date": "2013-03-28T16:01:17+0000",
            "content": "Another interesting data point - just running test-solrj has never caused a problem for me. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616422",
            "date": "2013-03-28T17:00:34+0000",
            "content": "Hmm...things are at least...better...passing all but that one random time so far...weird... "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13616432",
            "date": "2013-03-28T17:15:12+0000",
            "content": "Mark Miller The two *-excl-slf4j build targets are now superfluous.  Because people may be relying on them in build automation, it is probably not a good idea to remove them from 4x, but doing so in trunk strikes me as a good idea.  I can open a new issue for that. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616434",
            "date": "2013-03-28T17:17:34+0000",
            "content": "Thanks Shawn. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13616492",
            "date": "2013-03-28T18:10:51+0000",
            "content": "Adding \n\n<pathelement path=\"${example}/resources\"/>\n\n to the test classpath in the solrj build file takes care of finding the log4j config file for the example tests - I don't know why they won't pick it up from solrj/src/test-files.\n\nHowever, I'm still seeing the intermittent glitch (same as above)... "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13643318",
            "date": "2013-04-26T22:27:01+0000",
            "content": "As covered in SOLR-4771 the behaviour of the solr.war when used w/o any slf4j jars configured in the servlet container was abysmal as a result of this change, so SOLR-4771 added an explicit check for this in SolrDispatchFilter that refers people to \"http://wiki.apache.org/solr/SolrLogging\" for more details.\n\nHowever: the SolrLogging has never been updated to cover the changes made by this issue, and really should be prior to 4.3 being official.\n\nI'm linking the two issues, and posting these specific comments in the hopes that people watching this issue who had a vested interest in this change and understand what exactly folks need to do to use the SLF4J-less solr.war in other servlet containers will step up and updated the documentation based on their expertise. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13643324",
            "date": "2013-04-26T22:30:31+0000",
            "content": "Linking to SOLR-4768 where a fix had to be made to the maven build to keep in in sync with these changes, and SOLR-4766 where the smokechecker was updated to catch problems like this in the future. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654336",
            "date": "2013-05-10T10:34:49+0000",
            "content": "Closed after release. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13685915",
            "date": "2013-06-17T20:08:02+0000",
            "content": "[trunk commit] markrmiller\nhttp://svn.apache.org/viewvc?view=revision&revision=1462145\n\nSOLR-3706: remove log dependencies from core, exclude example log jars from test classpath, add versions to example log jars "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13685916",
            "date": "2013-06-17T20:08:03+0000",
            "content": "[branch_4x commit] markrmiller\nhttp://svn.apache.org/viewvc?view=revision&revision=1462145\n\nSOLR-3706: remove log dependencies from core, exclude example log jars from test classpath, add versions to example log jars "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13686359",
            "date": "2013-06-18T03:58:41+0000",
            "content": "[trunk commit] markrmiller\nhttp://svn.apache.org/viewvc?view=revision&revision=1462145\n\nSOLR-3706: remove log dependencies from core, exclude example log jars from test classpath, add versions to example log jars "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13686360",
            "date": "2013-06-18T03:58:41+0000",
            "content": "[branch_4x commit] markrmiller\nhttp://svn.apache.org/viewvc?view=revision&revision=1462145\n\nSOLR-3706: remove log dependencies from core, exclude example log jars from test classpath, add versions to example log jars "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13686361",
            "date": "2013-06-18T03:59:14+0000",
            "content": "[trunk commit] markrmiller\nhttp://svn.apache.org/viewvc?view=revision&revision=1462145\n\nSOLR-3706: remove log dependencies from core, exclude example log jars from test classpath, add versions to example log jars "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13686362",
            "date": "2013-06-18T03:59:14+0000",
            "content": "[branch_4x commit] markrmiller\nhttp://svn.apache.org/viewvc?view=revision&revision=1462145\n\nSOLR-3706: remove log dependencies from core, exclude example log jars from test classpath, add versions to example log jars "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13686363",
            "date": "2013-06-18T04:01:10+0000",
            "content": "[trunk commit] markrmiller\nhttp://svn.apache.org/viewvc?view=revision&revision=1462145\n\nSOLR-3706: remove log dependencies from core, exclude example log jars from test classpath, add versions to example log jars "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13686364",
            "date": "2013-06-18T04:01:11+0000",
            "content": "[branch_4x commit] markrmiller\nhttp://svn.apache.org/viewvc?view=revision&revision=1462145\n\nSOLR-3706: remove log dependencies from core, exclude example log jars from test classpath, add versions to example log jars "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13764015",
            "date": "2013-09-11T05:48:16+0000",
            "content": "Commit 1521738 from Ryan McKinley in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1521738 ]\n\nSOLR-3706: avoid NPE "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13764022",
            "date": "2013-09-11T05:53:40+0000",
            "content": "Commit 1521739 from Ryan McKinley in branch 'dev/trunk'\n[ https://svn.apache.org/r1521739 ]\n\nSOLR-3706: avoid NPE  (merge from 4x) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13764030",
            "date": "2013-09-11T06:06:50+0000",
            "content": "Commit 1521741 from Ryan McKinley in branch 'dev/trunk'\n[ https://svn.apache.org/r1521741 ]\n\nSOLR-3706: getRenderedMessage() rather than + \"\" "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13764031",
            "date": "2013-09-11T06:08:28+0000",
            "content": "Commit 1521742 from Ryan McKinley in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1521742 ]\n\nSOLR-3706: getRenderedMessage() rather than + \"\"  (merge from trunk) "
        }
    ]
}