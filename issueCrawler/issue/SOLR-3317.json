{
    "id": "SOLR-3317",
    "title": "Admin UI: Improve request handler / qt in query form",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The query form in the admin UI could use an improvement regarding how the request handler is chosen; presently all there is is a text input for 'qt'. The first choice to make in the form above the query should really be the request handler since it actually handles the request before any other parameters do anything.  I think it'd be nice if it was filled with \"/select\" by default to make it very clear what's there, although I realize most of this query form seems to prefer blank values as defaults.  When the form creates the URL to submit to Solr for the search, it needs to do something different depending on wether this value starts with a '/'.  If it does, this goes where \"/select\" goes in the URL normally (i.e. it's the tail end of the path after the core).  If it doesn't then it goes into the 'qt' URL parameter.\n\nI did something similar to the old 3x UI in SOLR-3161 that got committed to 3.6.",
    "attachments": {
        "SOLR-3317.patch": "https://issues.apache.org/jira/secure/attachment/12522416/SOLR-3317.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "David Smiley",
            "id": "comment-13250747",
            "date": "2012-04-10T15:35:00+0000",
            "content": "Stefan; if you're too busy to do this then I will post a patch. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13252282",
            "date": "2012-04-12T08:25:28+0000",
            "content": "Sorry David i've overlooked this one .. if you can, go for it! ty "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13252428",
            "date": "2012-04-12T13:53:09+0000",
            "content": "Um sorry, i thought this ticket was about something else - patch attached, David would you give a try? "
        },
        {
            "author": "David Smiley",
            "id": "comment-13253124",
            "date": "2012-04-13T05:25:54+0000",
            "content": "Looks good.  I am supplying an updated patch with other changes/cleanup and some questions for you:\n\n\tSome <div class=\"fieldset\"> tags were not closed so I closed them.\n\tSome id=\"...\" attributes were not unique notably dismax & edismax since they share many parameters. So I added a differentiating prefix to keep them unique.\n\tI added title=\"...\" tags to some of the input elements to offer basic tooltip help.  I didn't do all of them \u2013 I'm getting tired \n\n\n\nQuestion:\n\n\tWhy surround the labels to these fields in anchor tags when the label tag alone will work; right?  Notice 'q' is done this way, unlike most fields.  And if the anchor tags serve a useful purpose, then what does rel=\"help\" add?\n\n "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13253197",
            "date": "2012-04-13T07:32:09+0000",
            "content": "Why surround the labels to these fields in anchor tags when the label tag alone will work; right? Notice 'q' is done this way, unlike most fields. And if the anchor tags serve a useful purpose, then what does rel=\"help\" add?\n\nThe initial Idea was to add a link for every option to the related wiki-page .. therefore i already added an <a> Tag around them, which does nothing until it is used .. the rel-attribut would just be helpful if we start using it, because you can add specific action to all Links which match a[rel=\"help\"] .. simple, but that's it ;> "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13258169",
            "date": "2012-04-20T12:02:48+0000",
            "content": "David, i guess we could commit the patch and afterwards check for additional changes? "
        },
        {
            "author": "David Smiley",
            "id": "comment-13258223",
            "date": "2012-04-20T13:17:53+0000",
            "content": "Yeah, sounds good.  If you feel so inclined you can add more tooltip help.\n\nThe presence of 'qt' on this page bothers me just a little.  The \"request handler\" will usually be specified as part of the URL, not a named qt parameter.  But the labels for each of these things is done by a url parameter, not a spelled out version of what goes in that box (unlike the old admin form).  So... not sure if anything could be done.  What do you think of labeling it \"Request-Handler (or qt)\"  ? "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13258257",
            "date": "2012-04-20T13:52:35+0000",
            "content": "The presence of 'qt' on this page bothers me just a little.\nYes, i realized this already ;> I don't mind if we change it!\n\nWhat about the following: In preparation of changing the Handler-Selection, we move the current qt-Field to the top, over the \"common\"-Section and we name it \"Request-Handler (qt)\". That the used parameter (if needed) is named qt does not even matter, but w/o the \"(qt)\" addition i can already hear some \"where is the qt-option questions\" *gg\n\nJFYI: For the upcoming selection, i'd like to use Chosen (which is already in place for the Schema-Browser and the Analysis) - useful especially for those who have defined more than a few Handlers in their Instance. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13258444",
            "date": "2012-04-20T18:20:58+0000",
            "content": "I'm glad to hear you agree, and further suggested moving this setting above the \"common\" section; I thought the same.  Lets do it!\n\nRE \"Chosen\" \u2013 that's a cool JS library I didn't know about; thanks for sharing.  But it strikes me as way overkill for a select list that isn't going to be that long, particularly once it's paired down to the search oriented ones.  An argument could be made for consistency in look and feel, however, if all select boxes in the UI are going in this direction, though. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13258865",
            "date": "2012-04-21T14:59:08+0000",
            "content": "There we go, updated Patch attached\n\nRegarding Chosen: Yes, it's mainly to be consistent over the complete UI. But i agree, the argument about multiple Handlers was a bit lame ;> "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13258866",
            "date": "2012-04-21T15:01:22+0000",
            "content": "Committed in r1328681.  "
        }
    ]
}