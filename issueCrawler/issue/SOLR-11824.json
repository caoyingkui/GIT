{
    "id": "SOLR-11824",
    "title": "distributed json.facet \"type:range\" can return buckets out of order when mincount>0",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Facet Module"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Discovered this while working on SOLR-3218, but it's a general problem with how the code is designed (and the existing code even has a TODO in FacetRangeMerger refering to the problem) ... this is essentially the same bug FacetComponent's facet.range had that was fixed in SOLR-6154: When he coordinator \"combines\" the response from each shard, the buckets can get out of order depending on which buckets were excluded by the first shard to respond.\n\nDepending on how many shards you have, it's fairly trivial to reproduce using bin/solr -e cloud and the exampledocs/*.xml files...\n\n\n$ curl http://localhost:8983/solr/techproducts/select -d 'q=*:*&rows=0&wt=xml&json.facet={\nfoo:{ type:range, field:price, start:0, end:2000, gap:100, other:all, mincount:1} }'\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n\n<lst name=\"responseHeader\">\n  <bool name=\"zkConnected\">true</bool>\n  <int name=\"status\">0</int>\n  <int name=\"QTime\">13</int>\n  <lst name=\"params\">\n    <str name=\"q\">*:*</str>\n    <str name=\"json.facet\">{\nfoo:{ type:range, field:price, start:0, end:2000, gap:100, other:all, mincount:1} }</str>\n    <str name=\"rows\">0</str>\n    <str name=\"wt\">xml</str>\n  </lst>\n</lst>\n<result name=\"response\" numFound=\"32\" start=\"0\" maxScore=\"1.0\">\n</result>\n<lst name=\"facets\">\n  <long name=\"count\">32</long>\n  <lst name=\"foo\">\n    <arr name=\"buckets\">\n      <lst>\n        <float name=\"val\">0.0</float>\n        <long name=\"count\">7</long>\n      </lst>\n      <lst>\n        <float name=\"val\">100.0</float>\n        <long name=\"count\">2</long>\n      </lst>\n      <lst>\n        <float name=\"val\">300.0</float>\n        <long name=\"count\">3</long>\n      </lst>\n      <lst>\n        <float name=\"val\">400.0</float>\n        <long name=\"count\">1</long>\n      </lst>\n      <lst>\n        <float name=\"val\">200.0</float>\n        <long name=\"count\">1</long>\n      </lst>\n      <lst>\n        <float name=\"val\">600.0</float>\n        <long name=\"count\">1</long>\n      </lst>\n    </arr>\n    <lst name=\"before\">\n      <long name=\"count\">0</long>\n    </lst>\n    <lst name=\"after\">\n      <long name=\"count\">1</long>\n    </lst>\n    <lst name=\"between\">\n      <long name=\"count\">15</long>\n    </lst>\n  </lst>\n</lst>\n</response>",
    "attachments": {
        "SOLR-11824.patch": "https://issues.apache.org/jira/secure/attachment/12904848/SOLR-11824.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-05T19:43:12+0000",
            "content": "\nHere's a patch with beefed up testing to trigger this, and the simplest possible fix I know of (borrowing from SOLR-6154): the shards should ignore the mincount and allways return every bucket.  This way, regardless of which shard replies first, we always know all of the potential buckets (in the correct order) and the other shard responses can be merged in trivially.\n\nThe other potential approach is to let the shards force a mincount=1 (like the existing broken code) and then re-sort the (out of order) buckets \u2013 either as they arrive or after all shards have reponded \u2013 but for things like CurrencyField SOLR-3218 that's non trivial because the \"val\" keys on the buckets aren't trivially sortable.  We'd have to complicate the FacetRangeMerger with knowledge of the FacetRange.Calc ... this seems much simpler.\n\n\u2014\n\nAny concerns? ",
            "author": "Hoss Man",
            "id": "comment-16313743"
        },
        {
            "date": "2018-01-06T22:52:14+0000",
            "content": "Commit db5d2d407fd35361b59f967c2b36ef49791e2b20 in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=db5d2d4 ]\n\nSOLR-11824: Fixed bucket ordering in distributed json.facet type:range when mincount>0\n\n(cherry picked from commit d598517b965be2762d63dacf523352e393988e36) ",
            "author": "ASF subversion and git services",
            "id": "comment-16314984"
        },
        {
            "date": "2018-01-06T22:52:16+0000",
            "content": "Commit d598517b965be2762d63dacf523352e393988e36 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d598517 ]\n\nSOLR-11824: Fixed bucket ordering in distributed json.facet type:range when mincount>0 ",
            "author": "ASF subversion and git services",
            "id": "comment-16314985"
        }
    ]
}