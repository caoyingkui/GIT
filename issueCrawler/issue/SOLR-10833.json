{
    "id": "SOLR-10833",
    "title": "Numeric FooPointField classes inconsistent with TrieFooFields on malformed input: throw NumberFormatException",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.7",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Trie based Numeic fields deal with bad input by wrapping NumberFormatExceptions in w/BAD_REQUEST SolrExceptions \u2013 PointFields are just allowing the NumberFormatExceptions to be thrown as is, which means they propagate up and are eventually treated as a SERVER_ERROR when responding to clients.\n\nThis is not only inconsistent from an end user perspective \u2013 but also breaks how these errors are handled in SolrCloud when the requests have been forwarded/proxied.\n\nWe should ensure that the FooPointField classes behave consistently with the TrieFooField classes on bad input (both when adding a document, or query creating a field query)",
    "attachments": {
        "SOLR-10833.patch": "https://issues.apache.org/jira/secure/attachment/12871728/SOLR-10833.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-07T00:27:03+0000",
            "content": "here's a trivial test patch demonstrating the problem when run as ant test -Dtestcase=BasicFunctionalityTest -Dsolr.tests.preferPointFields=true ",
            "author": "Hoss Man",
            "id": "comment-16039918"
        },
        {
            "date": "2017-06-07T00:27:26+0000",
            "content": "discovered while working on SOLR-10807 ",
            "author": "Hoss Man",
            "id": "comment-16039919"
        },
        {
            "date": "2017-06-07T01:50:40+0000",
            "content": "Quick and dirty patch attached. I didn't look at other places were similar issues can occur yet, just solves the specific case in the unit test for now. Note that the DV queries and range queries fail for both, point and trie. ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16039994"
        },
        {
            "date": "2017-06-08T01:48:07+0000",
            "content": "Here is another patch with some more tests and fixes. I added a bad request test for all the query parsers where I thought it would make sense and where points currently work. Prefix QP is one where Points will fail but Trie works. \nSimpleQP throws 5XX on bad requests for points.  ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16042062"
        },
        {
            "date": "2017-06-08T18:15:51+0000",
            "content": "Note that the DV queries and range queries fail for both, point and trie.\n\nHA! ... Sorry: i didn't even think to double check that, i just noted what was failing when i tried to swap Point fields on the SOLR-10807 branch and then beefed up the test to demonstrate.\n\nHere is another patch with some more tests and fixes.\n\nInstead of wrapping so much code in new try/catch/rethrow blocks, perhaps we should add some replacement/wrapper methods for the various java.lang.Foo.parseFoo(String) methods that take care of throwing the BAD_REQUEST, and refactor all the Trie fields to use those as well ?\n\nsomething like...\n\n\npublic interface DoubleValueFieldType extends NumericValueFieldType {\n  /** \n   * wraper for {@link Double.parseDouble} that throws a BAD_REQUEST error if the input is not valid \n   * @param field used in any exception, may be null\n   * @param val string to parse, NPE if null\n   */\n  public default double parseDouble(String field, String val) {\n    if (null == input) throw new NullPointerException(\"nocommit\");\n    try {\n      return Double.parseDouble(val);\n    } catch (NumberFormatException e) {\n      String msg = \"Invalid Number: \" + val + (null == field ? \"\" : \" for field \" + field);\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, msg);\n    }\n  }\n\n\n\nWDYT? ",
            "author": "Hoss Man",
            "id": "comment-16043175"
        },
        {
            "date": "2017-06-08T21:13:01+0000",
            "content": "Thanks for the review Hoss\nperhaps we should add some replacement/wrapper methods\nYes, that's good. I'll change that. One thing I want to be careful is not to throw SolrException(4XX) in all cases, since in some a SolrException(5XX) makes more sense (and for those, we may want to keep the NFE as it would today). I'll work on a patch. \n\nAny thoughts on tests I may be missing? ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16043448"
        },
        {
            "date": "2017-06-08T23:01:44+0000",
            "content": "One thing I want to be careful is not to throw SolrException(4XX) in all cases,...\n\nyeah ... maybe make the the new \"parse\" methods take in the ErrorCode to use if they trhow an exception?\n\nAny thoughts on tests I may be missing?\n\nnot that i can think of ... as i make progress on SOLR-10807 hopefully any other discrepancies will shake our on their own w/o needing to write a lot of new explicit tests. ",
            "author": "Hoss Man",
            "id": "comment-16043589"
        },
        {
            "date": "2017-06-09T18:05:35+0000",
            "content": "Here is a new patch.\nsomething like...\nI added those methods, but not to the interface as you suggested since they were required by NumericFieldType (superclass to both, points and trie fields). \nmaybe make the the new \"parse\" methods take in the ErrorCode to use if they trhow an exception?\nAll the cases where I change the parse method would actually be bad requests, so I ended up not adding this. Some I didn't change and are still using the un-wrapped parsing, like toNativeType(Object val), the implementation of that method tries to handle the NFE (equally for both Trie* and Point* fields) to some extent. For creating new fields, I decided to keep the current exception handling, done by DocumentBuilder.\nAdded some more tests, including QParsers where Points currently work. For some QParsers Points maybe should work (raw, simple...), but I think they deserve their own Jiras/discussion if they don't have one already. See\n\n      // Skipping: func, boost, raw, nested, frange, spatial*, join, surround, switch, parent, child, collapsing, \n      // complexphrase, rerank, export, mlt, hash, graph, graphTerms, igain, tlogit, sigificantTerms, payload*\n      // Maybe add: raw, join, parent, child, collapsing, graphTerms, igain, sigificantTerms, simple\n\n ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16044778"
        },
        {
            "date": "2017-06-13T16:07:06+0000",
            "content": "Here is a new patch.\n\n+1 ... my only nitpicks would be that maybe the if (val == null) logic could be refactored into a private static helper method?  ... allthough i guess in theory even the try/catch/rethrow could be refactored into private helper that used a closure? ... not sure how far down the rabbit hole of refactoring we can go before less duplication is more confusing.\n\n(just to be clear: totally happy with committing as is)\n\nFor some QParsers Points maybe should work (raw, simple...), but I think they deserve their own Jiras/discussion if they don't have one already.\n\nyeah, that seems out of scope from the focus here: making the behavior inside these FieldTypes classess/methods consistent on bad input ",
            "author": "Hoss Man",
            "id": "comment-16048068"
        },
        {
            "date": "2017-06-13T17:41:34+0000",
            "content": "NOTE for posterity:\n\nafter reviewing tomas's patch, i inadvertantly committed it to master in 6396cb759f8c799f381b0730636fa412761030ce as part of SOLR-10830 (and issue i don't plan on backporting)\n\nIn conversation with tomas on irc about whether or not to revert, he said not to worry about it and he'll take over and do a partial backport. ",
            "author": "Hoss Man",
            "id": "comment-16048158"
        },
        {
            "date": "2017-06-13T18:00:18+0000",
            "content": "Commit 061a768d873b9c7c75b635beee3effef6e66bb2f in lucene-solr's branch refs/heads/master from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=061a768 ]\n\nSOLR-10833: Updated CHANGES to include SOLR-10833 ",
            "author": "ASF subversion and git services",
            "id": "comment-16048180"
        },
        {
            "date": "2017-06-13T18:00:19+0000",
            "content": "Commit 061a768d873b9c7c75b635beee3effef6e66bb2f in lucene-solr's branch refs/heads/master from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=061a768 ]\n\nSOLR-10833: Updated CHANGES to include SOLR-10833 ",
            "author": "ASF subversion and git services",
            "id": "comment-16048181"
        },
        {
            "date": "2017-06-13T19:45:05+0000",
            "content": "Commit 5835dcb3476b7355130e2eea2c485898232c56d0 in lucene-solr's branch refs/heads/branch_6x from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5835dcb ]\n\nSOLR-10833: Better exception handling of queries in numeric fields\n\nCherry picked 6396cb759f8c799f381b0730636fa412761030ce from master and manually removed code related to SOLR-10830 ",
            "author": "ASF subversion and git services",
            "id": "comment-16048304"
        },
        {
            "date": "2017-06-13T19:45:07+0000",
            "content": "Commit 5e438bbe2783f8fc16da41d660fde7c7d65d7e3e in lucene-solr's branch refs/heads/branch_6x from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5e438bb ]\n\nSOLR-10833: Updated CHANGES to include SOLR-10833 ",
            "author": "ASF subversion and git services",
            "id": "comment-16048306"
        },
        {
            "date": "2017-06-13T19:45:08+0000",
            "content": "Commit 5e438bbe2783f8fc16da41d660fde7c7d65d7e3e in lucene-solr's branch refs/heads/branch_6x from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5e438bb ]\n\nSOLR-10833: Updated CHANGES to include SOLR-10833 ",
            "author": "ASF subversion and git services",
            "id": "comment-16048307"
        },
        {
            "date": "2017-06-14T02:02:41+0000",
            "content": "Commit 061a768d873b9c7c75b635beee3effef6e66bb2f in lucene-solr's branch refs/heads/jira/SOLR-10834 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=061a768 ]\n\nSOLR-10833: Updated CHANGES to include SOLR-10833 ",
            "author": "ASF subversion and git services",
            "id": "comment-16048595"
        },
        {
            "date": "2017-06-14T02:02:42+0000",
            "content": "Commit 061a768d873b9c7c75b635beee3effef6e66bb2f in lucene-solr's branch refs/heads/jira/SOLR-10834 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=061a768 ]\n\nSOLR-10833: Updated CHANGES to include SOLR-10833 ",
            "author": "ASF subversion and git services",
            "id": "comment-16048596"
        },
        {
            "date": "2017-06-15T02:01:02+0000",
            "content": "Resolving this issue now. It can be backported to branch_6_6 if we decide to release a 6.6.1 ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16049914"
        },
        {
            "date": "2017-07-20T18:06:48+0000",
            "content": "Bulk editing 27 jiras matching the following JQL query to include the \"numeric-tries-to-points label...\n\n\n(issue in linkedIssues(SOLR-10807) OR issue in linkedIssues(SOLR-8396) OR issue in linkedIssues(SOLR-9995)) AND project = SOLR AND status != CLOSED\n\n\n\nthese 27 jiras can be identified by searching for the comment string \"20170720hossbulkeditlabel\"\n\nemail notification is being suppressed. ",
            "author": "Hoss Man",
            "id": "comment-16095125"
        }
    ]
}