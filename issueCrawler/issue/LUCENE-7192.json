{
    "id": "LUCENE-7192",
    "title": "Geo3d polygon creation should not get upset about co-linear points",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "6.0",
        "components": [
            "modules/spatial3d"
        ],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "Currently, if you create a polygon with co-linear adjacent points, the polygon fails to create (you get IllegalArgumentException).  We should make this more robust.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15232048",
            "author": "Karl Wright",
            "date": "2016-04-08T11:31:51+0000",
            "content": "Here's an example of the kind of exception that gets thrown:\n\n\n   [junit4] Suite: org.apache.lucene.spatial3d.TestGeo3DPoint\n   [junit4] IGNOR/A 0.01s J0 | TestGeo3DPoint.testRandomBig\n   [junit4]    > Assumption #1: 'nightly' test group is disabled (@Nightly())\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestGeo3DPoint -Dtests.method=testRandomMedium -Dtests.seed=EECA345C8B103349 -Dtests.slow=true -Dtests.locale=ar-DZ -Dtests.timezone=America/Porto_Acre -Dtests.asserts=true -Dtests.file.encoding=Cp1252\n   [junit4] ERROR   2.49s J0 | TestGeo3DPoint.testRandomMedium <<<\n   [junit4]    > Throwable #1: java.lang.IllegalArgumentException: Cannot determine sidedness because check point is on plane.\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([EECA345C8B103349:531403F4CA75502F]:0)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.SidedPlane.<init>(SidedPlane.java:67)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory$EdgeBuffer.<init>(GeoPolygonFactory.java:949)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.buildPolygonShape(GeoPolygonFactory.java:337)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.buildPolygonShape(GeoPolygonFactory.java:477)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.buildPolygonShape(GeoPolygonFactory.java:451)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.makeGeoPolygon(GeoPolygonFactory.java:151)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.makeGeoPolygon(GeoPolygonFactory.java:119)\n   [junit4]    >        at org.apache.lucene.spatial3d.Geo3DPoint.fromPolygon(Geo3DPoint.java:208)\n   [junit4]    >        at org.apache.lucene.spatial3d.Geo3DPoint.newPolygonQuery(Geo3DPoint.java:142)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.random3DQuery(TestGeo3DPoint.java:530)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.verify(TestGeo3DPoint.java:736)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.doTestRandom(TestGeo3DPoint.java:517)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.testRandomMedium(TestGeo3DPoint.java:444)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene60): {id=FST50}, docValues:{id=DocValuesFormat(name=Lucene54)}, maxPointsInLeafNode=704, maxMBSortInHeap=6.742140110558433, sim=ClassicSimilarity, locale=ar-DZ, timezone=America/Porto_Acre\n   [junit4]   2> NOTE: Windows 7 6.1 amd64/Oracle Corporation 1.8.0_45 (64-bit)/cpus=4,threads=1,free=123382872,total=235405312\n   [junit4]   2> NOTE: All tests run in this JVM: [TestGeo3DPoint]\n\n "
        },
        {
            "id": "comment-15232066",
            "author": "Karl Wright",
            "date": "2016-04-08T11:52:09+0000",
            "content": "Here's another one.  This looks in fact like a bug:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestGeo3DPoint -Dtests.method=testRandomTiny -Dtests.seed=3CF56281893AB530 -Dtests.slow=true -Dtests.locale=hr-HR -Dtests.timezone=America/Boise -Dtests.asserts=true -Dtests.file.encoding=Cp1252\n   [junit4] ERROR   0.68s J0 | TestGeo3DPoint.testRandomTiny <<<\n   [junit4]    > Throwable #1: java.lang.IllegalArgumentException: Polygon needs at least three points.\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([3CF56281893AB530:75B2BCC7D71B8D9C]:0)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoConvexPolygon.done(GeoConvexPolygon.java:171)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoConvexPolygon.<init>(GeoConvexPolygon.java:110)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.findConvexPolygon(GeoPolygonFactory.java:771)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.buildPolygonShape(GeoPolygonFactory.java:356)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.buildPolygonShape(GeoPolygonFactory.java:477)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.makeGeoPolygon(GeoPolygonFactory.java:156)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.GeoPolygonFactory.makeGeoPolygon(GeoPolygonFactory.java:119)\n   [junit4]    >        at org.apache.lucene.spatial3d.Geo3DPoint.fromPolygon(Geo3DPoint.java:208)\n   [junit4]    >        at org.apache.lucene.spatial3d.Geo3DPoint.newPolygonQuery(Geo3DPoint.java:142)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.random3DQuery(TestGeo3DPoint.java:530)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.verify(TestGeo3DPoint.java:736)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.doTestRandom(TestGeo3DPoint.java:517)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.testRandomTiny(TestGeo3DPoint.java:440)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n   [junit4] IGNOR/A 0.01s J0 | TestGeo3DPoint.testRandomBig\n   [junit4]    > Assumption #1: 'nightly' test group is disabled (@Nightly())\n\n "
        },
        {
            "id": "comment-15232157",
            "author": "ASF subversion and git services",
            "date": "2016-04-08T13:18:23+0000",
            "content": "Commit 771680cfd0e474996db5de86a7a0808df84a1ebf in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=771680c ]\n\nLUCENE-7192: Permit adjacent points in a polygon to be coplanar. "
        },
        {
            "id": "comment-15232160",
            "author": "ASF subversion and git services",
            "date": "2016-04-08T13:20:17+0000",
            "content": "Commit 3304f524d70ea007c94f3d3413e248fc8790faa9 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3304f52 ]\n\nLUCENE-7192: Permit adjacent points in a polygon to be coplanar. "
        },
        {
            "id": "comment-15247651",
            "author": "ASF subversion and git services",
            "date": "2016-04-19T12:29:42+0000",
            "content": "Commit 75cdcbab1094ce25a9a340f84f2101c5718635c0 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=75cdcba ]\n\nLUCENE-7192: Revamp how coplanar points are detected and filtered, for OpenStreetMap compatibility. "
        },
        {
            "id": "comment-15247656",
            "author": "ASF subversion and git services",
            "date": "2016-04-19T12:33:00+0000",
            "content": "Commit 01a7ee4eebbc40aa53bd2c020bc6f6b1ceaf10e4 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=01a7ee4 ]\n\nLUCENE-7192: Revamp how coplanar points are detected and filtered, for OpenStreetMap compatibility. "
        },
        {
            "id": "comment-15247715",
            "author": "ASF subversion and git services",
            "date": "2016-04-19T13:09:58+0000",
            "content": "Commit 02f1dacc3d84a42f9359aedb0cc98ca4a6161d57 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=02f1dac ]\n\nLUCENE-7192: Catch the case where we have two points in the same poly that are not adjacent but identical. "
        },
        {
            "id": "comment-15247717",
            "author": "ASF subversion and git services",
            "date": "2016-04-19T13:10:58+0000",
            "content": "Commit e4012c6b32ef2ac7f612fe69cf955c4f210d0ef9 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e4012c6 ]\n\nLUCENE-7192: Catch the case where we have two points in the same poly that are not adjacent but identical. "
        }
    ]
}