{
    "id": "SOLR-1612",
    "title": "Use java.sql.Array to populate Multivalue field in DataImportHandler",
    "details": {
        "affect_versions": "1.4",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I am attaching a patch to the JdbcDataSource class which allows the it to populate a multiValued field from a query which returns a java.sql.Array type for a column value.\n\nIn order to make this work, you need to do the following:\n\n1.  In your schema.xml file, set the \"multiValued\" attribute to the value \"true\"\n\n         <field name=foo\" type=\"string\"  ... multiValued=\"true\" />\n\n2.  Have your sql query return a sql type of java.sql.Types.ARRAY.  How to do this is very database dependent, but in oracle, you first create a type:\n\n             create or replace type FOO_TYPE IS TABLE OF VARCHAR2(255);\n\n      and then when you select the values, you have to use MULTISET and cast to the created type (assuming here that FOO_PARENT_ID is the condition to\n      limit which foos belong to the current record):\n\n             CAST(MULTISET(SELECT FOO FROM FOOS WHERE FOO_PARENT=FOO_PARENT_ID) AS FOO_TYPE ) MY_FOOS\n\nThe main advantage this has is it can save you a ton of queries over the current method which will fire off an individual query for each document in order to retrieve the values for each multiValued field.  This method executes much faster, and saves alot of database resources.",
    "attachments": {
        "SOLR-1612.patch": "https://issues.apache.org/jira/secure/attachment/12426424/SOLR-1612.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12784203",
            "date": "2009-12-01T12:34:53+0000",
            "content": "isn't it simpler to write a Transformer to achieve this?  "
        },
        {
            "author": "Matt Inger",
            "id": "comment-12784970",
            "date": "2009-12-02T19:37:42+0000",
            "content": "Thanks for the suggestion, and I'm in the process of doing that, but I have noticed a few things wrong with the general custom transformer implementation:\n\n1.  If I package my custom transformer up in it's own jar file, it seems the ClassLoader is unable to find the Transformer class from dataimporter jar file, so I have\n     to add that to my example/example-DIH/lib directory as well in order to get it to find the Transformer class.\n\n2.  The implementation of the loading of the Transformer class has a bug in it in regards to how it deals with Simple transformers.  It seems if you extend the Transformer class, you still have to implement the simpler version of the transformRow method:\n\n\npublic Object transformRow(Map<String,Object>);\n\n\n\nThis slice of code, which is in EntityProcessorWrapper, around line 100, is the root of the problem.\n\n\n      try {\n        Class clazz = DocBuilder.loadClass(trans, context.getSolrCore());\n        if (clazz.newInstance() instanceof Transformer) {\n          transformers.add((Transformer) clazz.newInstance());\n        } else {\n          final Method meth = clazz.getMethod(TRANSFORM_ROW, Map.class);\n          if (meth == null) {\n            String msg = \"Transformer :\"\n                    + trans\n                    + \"does not implement Transformer interface or does not have a transformRow(Map m)method\";\n            log.error(msg);\n            throw new DataImportHandlerException(\n                    SEVERE, msg);\n          }\n          transformers.add(new ReflectionTransformer(meth, clazz, trans));\n        }\n\n\n\nIn particular, the class to \"clazz.getMethod\" DOES NOT return a null value if the method does not exist (at least in JDK 1.5).  It in fact, throws a NoSuchMethodException, which means that I have to have the simpler method no matter whether i'm using it or not.\n "
        },
        {
            "author": "Matt Inger",
            "id": "comment-12784998",
            "date": "2009-12-02T21:01:10+0000",
            "content": "Seems the second issues is caused by the class loading problem.  Since I have to include a second copy of the dataimporter jar file in order to resolve the ClassNotFoundException, it fails the \"instanceof\" condition since the base class of my transformer is not the same Transformer class that the EntityProcessorWrapper is aware of.  As a result, it falls through to else clause, and it ends up requiring the simple  version of the method. \n\nAs a future optimization, this is not the best way to check anyway, you're better off doing this, which is faster, and doesn't require an object to be constructed, to check to see if the class extends the Transformer class.  The way you currently have it implemented, it's needlessly constructing the object twice no matter which type of transformer is being used.\n\n\nif ( Transformer.class.isAssignableFrom(clazz) ) {\n\n}\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12785211",
            "date": "2009-12-03T07:38:00+0000",
            "content": "hi Matt, I have made those changes .committed r886690 "
        },
        {
            "author": "Matt Inger",
            "id": "comment-12785352",
            "date": "2009-12-03T15:16:39+0000",
            "content": "Any thoughts on how to handle the class loading issue though when constructing the transformer itself?  The way I'm getting around it right now is to run SOLR first, and then find the exploded webapp, and copy my jar into the WEB-INF/lib directory of the exploded webapp.   "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12785371",
            "date": "2009-12-03T15:58:11+0000",
            "content": "Users usually add their jars into solr.home/lib and it works . If it doesn't ,it should be a problem "
        },
        {
            "author": "Matt Inger",
            "id": "comment-12785389",
            "date": "2009-12-03T16:51:27+0000",
            "content": "I have placed my .jar file in apache-solr-1.4.0/example/lib and am experience the problem mentioned above.  I'm guessing that for some reason the classloader whcih loads the classes from the lib directory does not have the webapp's classloader configured as it's parent classloader.  As a result, when it looks for the superclass of the custom transformer, it can't find the Transformer abstract class. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12796128",
            "date": "2010-01-04T09:33:11+0000",
            "content": "is your issue resolved? Is it not possible to make it a Transformer? "
        },
        {
            "author": "Matt Inger",
            "id": "comment-12796211",
            "date": "2010-01-04T15:29:08+0000",
            "content": "Yes, and I have attached that transformer to SOLR-1675, and will link to this ticket.  Perhaps it's useful enough to include directly in the contrib code. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12796530",
            "date": "2010-01-05T05:27:08+0000",
            "content": "SOLR-1675 is a different issue. We can change the description of this issue and commit the transformer as a part of this "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872549",
            "date": "2010-05-27T22:07:38+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043791",
            "date": "2011-06-03T16:47:04+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106312",
            "date": "2011-09-16T14:50:30+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234638",
            "date": "2012-03-21T18:08:41+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717318",
            "date": "2013-07-23T18:47:51+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971178",
            "date": "2014-04-16T12:57:22+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}