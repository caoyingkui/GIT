{
    "id": "SOLR-6592",
    "title": "Re-try loop in the ZkController.waitForLeaderToSeeDownState method hangs unit test when leader is gone",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "HttpPartitionTest is failing due to a ThreadLeakError, which I believe is because the re-try loop in ZkController.waitForLeaderToSeeDownState is coded to take upwards of 12 minutes to fail (2 minutes socket timeout, 6 max retries). The code should be improved to stop trying if the leader is gone, which seems to be the case here (maybe). At the very least, need to figure out how to avoid this ThreadLeakError.\n\nBuild: http://jenkins.thetaphi.de/job/Lucene-Solr-5.x-Linux/11234/\nJava: 64bit/jdk1.8.0_40-ea-b04 -XX:+UseCompressedOops -XX:+UseG1GC\n\n2 tests failed.\nFAILED:  junit.framework.TestSuite.org.apache.solr.cloud.HttpPartitionTest\n\nError Message:\n1 thread leaked from SUITE scope at org.apache.solr.cloud.HttpPartitionTest:     1) Thread[id=8655, name=Thread-2764, state=RUNNABLE, group=TGRP-HttpPartitionTest]         at java.net.SocketInputStream.socketRead0(Native Method)         at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)         at java.net.SocketInputStream.read(SocketInputStream.java:170)         at java.net.SocketInputStream.read(SocketInputStream.java:141)         at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:160)         at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:84)         at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:273)         at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)         at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)         at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)         at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:283)         at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:251)         at org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:197)         at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)         at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)         at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:682)         at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)         at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)         at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)         at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:106)         at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)         at org.apache.solr.client.solrj.impl.HttpSolrServer.executeMethod(HttpSolrServer.java:466)         at org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:215)         at org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:211)         at org.apache.solr.cloud.ZkController.waitForLeaderToSeeDownState(ZkController.java:1623)         at org.apache.solr.cloud.ZkController.registerAllCoresAsDown(ZkController.java:422)         at org.apache.solr.cloud.ZkController.access$100(ZkController.java:93)         at org.apache.solr.cloud.ZkController$1.command(ZkController.java:261)         at org.apache.solr.common.cloud.ConnectionManager$1$1.run(ConnectionManager.java:166)\n\nStack Trace:\ncom.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE scope at org.apache.solr.cloud.HttpPartitionTest:\n   1) Thread[id=8655, name=Thread-2764, state=RUNNABLE, group=TGRP-HttpPartitionTest]\n        at java.net.SocketInputStream.socketRead0(Native Method)\n        at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\n        at java.net.SocketInputStream.read(SocketInputStream.java:170)\n        at java.net.SocketInputStream.read(SocketInputStream.java:141)\n        at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:160)\n        at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:84)\n        at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:273)\n        at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)\n        at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)\n        at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)\n        at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:283)\n        at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:251)\n        at org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:197)\n        at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)\n        at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)\n        at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:682)\n        at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)\n        at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)\n        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\n        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:106)\n        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)\n        at org.apache.solr.client.solrj.impl.HttpSolrServer.executeMethod(HttpSolrServer.java:466)\n        at org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:215)\n        at org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:211)\n        at org.apache.solr.cloud.ZkController.waitForLeaderToSeeDownState(ZkController.java:1623)\n        at org.apache.solr.cloud.ZkController.registerAllCoresAsDown(ZkController.java:422)\n        at org.apache.solr.cloud.ZkController.access$100(ZkController.java:93)\n        at org.apache.solr.cloud.ZkController$1.command(ZkController.java:261)\n        at org.apache.solr.common.cloud.ConnectionManager$1$1.run(ConnectionManager.java:166)\n        at __randomizedtesting.SeedInfo.seed([BE8A2D1EED13DDED]:0)\n\n\nFAILED:  junit.framework.TestSuite.org.apache.solr.cloud.HttpPartitionTest",
    "attachments": {
        "SOLR-6592.patch": "https://issues.apache.org/jira/secure/attachment/12673132/SOLR-6592.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-10-06T17:29:03+0000",
            "author": "Timothy Potter",
            "content": "Here's a patch that checks to see if the leader node is live after receiving an IO error and if the leader is not live, it throws an exception instead of re-trying another pass through the loop. This may be too aggressive but my thinking is there's no need to wait for the leader to see the down state if it's not live right?  ",
            "id": "comment-14160543"
        },
        {
            "date": "2014-10-06T17:34:52+0000",
            "author": "Mark Miller",
            "content": "It should be fine. At worst, the cluster state is a bit stale and it throws that exception when the node is live (in some crazy scenario), but even then the replica recovery will just attempt again. ",
            "id": "comment-14160553"
        },
        {
            "date": "2014-10-06T17:38:57+0000",
            "author": "Timothy Potter",
            "content": "Thanks Mark - hopefully this will resolve the weird failures of the HttpPartitionTest on Jenkins! ",
            "id": "comment-14160559"
        },
        {
            "date": "2014-10-06T17:50:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1629719 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1629719 ]\n\nSOLR-6592: Avoid waiting for the leader to see the down state if that leader is not live. ",
            "id": "comment-14160572"
        },
        {
            "date": "2014-10-13T15:48:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1631442 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1631442 ]\n\nSOLR-6592: Avoid waiting for the leader to see the down state if that leader is not live. ",
            "id": "comment-14169425"
        },
        {
            "date": "2014-10-13T16:38:50+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1631462 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1631462 ]\n\nSOLR-6592: add mention in solr/CHANGES.txt ",
            "id": "comment-14169498"
        },
        {
            "date": "2014-10-13T16:40:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1631464 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1631464 ]\n\nSOLR-6592: add mention in solr/CHANGES.txt ",
            "id": "comment-14169503"
        },
        {
            "date": "2014-10-13T16:44:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1631467 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1631467 ]\n\nSOLR-6592: add mention in solr/CHANGES.txt ",
            "id": "comment-14169515"
        },
        {
            "date": "2015-02-23T05:02:31+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332902"
        }
    ]
}