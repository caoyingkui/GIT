{
    "id": "LUCENE-3101",
    "title": "TestMinimize.testAgainstBrzozowski reproducible seed OOM",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "[junit] Testsuite: org.apache.lucene.util.automaton.TestMinimize\n    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 3.792 sec\n    [junit] \n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestMinimize -Dtestmethod=testAgainstBrzozowski -Dtests.seed=-7429820995201119781:1013305000165135537\n    [junit] NOTE: test params are: codec=PreFlex, locale=ru, timezone=America/Pangnirtung\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TestMinimize]\n    [junit] NOTE: Linux 2.6.37-gentoo amd64/Sun Microsystems Inc. 1.6.0_25 (64-bit)/cpus=8,threads=1,free=294745976,total=310378496\n    [junit] ------------- ---------------- ---------------\n    [junit] Testcase: testAgainstBrzozowski(org.apache.lucene.util.automaton.TestMinimize):     Caused an ERROR\n    [junit] Java heap space\n    [junit] java.lang.OutOfMemoryError: Java heap space\n    [junit]     at java.util.BitSet.initWords(BitSet.java:144)\n    [junit]     at java.util.BitSet.<init>(BitSet.java:139)\n    [junit]     at org.apache.lucene.util.automaton.MinimizationOperations.minimizeHopcroft(MinimizationOperations.java:85)\n    [junit]     at org.apache.lucene.util.automaton.MinimizationOperations.minimize(MinimizationOperations.java:52)\n    [junit]     at org.apache.lucene.util.automaton.RegExp.toAutomaton(RegExp.java:502)\n    [junit]     at org.apache.lucene.util.automaton.RegExp.toAutomatonAllowMutate(RegExp.java:478)\n    [junit]     at org.apache.lucene.util.automaton.RegExp.toAutomaton(RegExp.java:428)\n    [junit]     at org.apache.lucene.util.automaton.AutomatonTestUtil.randomAutomaton(AutomatonTestUtil.java:256)\n    [junit]     at org.apache.lucene.util.automaton.TestMinimize.testAgainstBrzozowski(TestMinimize.java:43)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1282)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1211)\n    [junit] \n    [junit] \n    [junit] Test org.apache.lucene.util.automaton.TestMinimize FAILED",
    "attachments": {
        "LUCENE-3101_test.patch": "https://issues.apache.org/jira/secure/attachment/12479304/LUCENE-3101_test.patch",
        "LUCENE-3101.patch": "https://issues.apache.org/jira/secure/attachment/12479315/LUCENE-3101.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-05-15T12:55:30+0000",
            "content": "Thanks! What to do? ",
            "author": "Uwe Schindler",
            "id": "comment-13033679"
        },
        {
            "date": "2011-05-15T12:58:19+0000",
            "content": "\n[14:08]\ts1monw: that automaton has 94201 states\n[14:08]\ts1monw: \n[14:08]\ts1monw: 450 MB long[]\n[14:08]\ts1monw: selckin: can you open an issue? ",
            "author": "Uwe Schindler",
            "id": "comment-13033680"
        },
        {
            "date": "2011-05-16T09:11:22+0000",
            "content": "an explicit test case ",
            "author": "Robert Muir",
            "id": "comment-13033928"
        },
        {
            "date": "2011-05-16T10:13:57+0000",
            "content": "the problem appears to be splitblock[] and partition[]. these are using n^2 space... \nthe rest of the datastructures seem ok (either just #states or sigma * #states)\n\nthese two were cut over from arraylist to bitset in revision 1026190, but it looks like they are \nsparse and we should use a better datastructure (just for these two, i think the other bitsets are all fine). ",
            "author": "Robert Muir",
            "id": "comment-13033950"
        },
        {
            "date": "2011-05-16T10:41:21+0000",
            "content": "I will look into reverting parts of the last commit on that issue - and move back to LinkedList<State>. The overhead should be small, I checked the cardinalities of those bit sets... LOW! And it only uses LinkedLists of pointers to state structures, in contrast to a naive LinkedList<Integer>. ",
            "author": "Uwe Schindler",
            "id": "comment-13033957"
        },
        {
            "date": "2011-05-16T11:36:43+0000",
            "content": "This patch reverts splitblock[], partition[] and reverse[][] to state before r1026190, the BitSets on top-level (not in inner loops are unchanged) ",
            "author": "Uwe Schindler",
            "id": "comment-13033976"
        },
        {
            "date": "2011-05-16T11:57:41+0000",
            "content": "After some perf analysis, it showed, that replacing the LinkedList in partition[] by HashSet makes it faster. Order is unimportant and the b1.remove()/b2.add() combi in inner loop no longer uses linear scan. ",
            "author": "Uwe Schindler",
            "id": "comment-13033982"
        },
        {
            "date": "2011-05-16T12:02:58+0000",
            "content": "Thanks for looking into this Uwe, looks like a good solution to me. ",
            "author": "Robert Muir",
            "id": "comment-13033984"
        },
        {
            "date": "2011-05-16T12:13:25+0000",
            "content": "Some more cleanup, I will commit this now.\n\nIf somebody else has a better idea how to optimize this on memory usage (maybe use Mike's SortedIntSet), go go go  ",
            "author": "Uwe Schindler",
            "id": "comment-13033988"
        },
        {
            "date": "2011-05-16T12:16:20+0000",
            "content": "Committed revision: 1103711\n\nThanks Robert for help with this horrible monster! ",
            "author": "Uwe Schindler",
            "id": "comment-13033989"
        },
        {
            "date": "2011-05-16T13:04:59+0000",
            "content": "Thanks for reporting this selckin, this is a great find, definitely amazed we randomly generated this one  ",
            "author": "Robert Muir",
            "id": "comment-13034004"
        },
        {
            "date": "2011-05-16T13:09:03+0000",
            "content": "There is a lot of power in randomness, huh?  I really like these randomized tests... this should be a built-in functionality in JUnit (call it 'repeatable randomness')... ",
            "author": "Dawid Weiss",
            "id": "comment-13034006"
        }
    ]
}