{
    "id": "SOLR-556",
    "title": "Highlighting of multi-valued fields returns snippets which span multiple different values",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "highlighter"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When highlighting multi-valued fields, the highlighter sometimes returns snippets which span multiple values, e.g. with values \"foo\" and \"bar\" and search term \"ba\" the highlighter will create the snippet \"foo<em>ba</em>r\". Furthermore it sometimes returns smaller snippets than it should, e.g. with value \"foobar\" and search term \"oo\" it will create the snippet \"<em>oo</em>\" regardless of hl.fragsize.\n\nI have been unable to determine the real cause for this, or indeed what actually goes on at all. To reproduce the problem, I've used the following steps:\n\n\tcreate an index with multi-valued fields, one document should have at least 3 values for these fields (in my case strings of length between 5 and 15 Japanese characters \u2013 as far as I can tell plain old ASCII should produce the same effect though)\n\tsearch for part of a value in such a field with highlighting enabled, the additional parameters I use are hl.fragsize=70, hl.requireFieldMatch=true, hl.mergeContiguous=true (changing the parameters does not seem to have any effect on the result though)\n\thighlighted snippets should show effects described above",
    "attachments": {
        "solr-highlight-multivalued-example.xml": "https://issues.apache.org/jira/secure/attachment/12382089/solr-highlight-multivalued-example.xml",
        "SOLR-556-highlight-multivalued.patch": "https://issues.apache.org/jira/secure/attachment/12383439/SOLR-556-highlight-multivalued.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Lars Kotthoff",
            "id": "comment-12593753",
            "date": "2008-05-02T09:45:36+0000",
            "content": "Patch against SVN HEAD to treat multi valued fields like single valued fields when highlighting by looping over the field values and accumulating the highlighted snippets.\n\nThis corrects the behaviour I've described and simplifies the code. The downside is that it may impose a performance penalty for large numbers of snippets. The code breaks out of the loop when enough snippets have been found without considering the other values of the fields, which means that the returned snippets may not be the best ones. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12595104",
            "date": "2008-05-08T01:14:32+0000",
            "content": "The previous patch caused ArrayIndexOutOfBoundsExceptions in some cases. This is corrected with this patch. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12596925",
            "date": "2008-05-14T20:20:33+0000",
            "content": "Lars - could you please try the patch in SOLR-553 and see if it fixes the problem you described here? "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12596999",
            "date": "2008-05-15T04:25:38+0000",
            "content": "I've applied SOLR-553 and confirmed that this problem is not fixed, regardless of the setting of usePhraseHighlighter. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12597010",
            "date": "2008-05-15T05:15:22+0000",
            "content": "Attaching test file with example document, relevant part of schema.xml and example query. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12597226",
            "date": "2008-05-15T18:50:43+0000",
            "content": "Thanks for the report, Lars.  I'll take a look at this shortly. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12598935",
            "date": "2008-05-22T07:41:21+0000",
            "content": "Attaching new patch which checks the fragments returned by Lucene properly. The getBestTextFragments method sometimes returns fragments which do not contain the search term at all (with a score of 0), which I wasn't aware of. The new patch checks whether the score of a fragment is > 0 before adding it to the list of fragments. It also removes the intermediate list of TextFragments and only accumulates a list of Strings, since this is the only information that's returned anyway.\n\nWith the new patch the unit tests (which I finally convinced to run at all in Eclipse) succeed. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12598944",
            "date": "2008-05-22T08:32:27+0000",
            "content": "Sorry for all the noise. Attaching yet another new version of the patch which makes sure that for multi-valued field the best fragments are returned, rather than the first fragments with score > 0 as before.\n\nAdded a unit test to verify this behaviour. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12602541",
            "date": "2008-06-05T05:04:39+0000",
            "content": "Ah, I see what the problem is:  Although it is impossible for tokens from different values to appear in the same fragment (due to the semantics of MultiValuedTokenFilter), the non-token text (typically, punctuation) from different values can bleed into the same fragment, since lucene's highlighter can only create a new fragment on token boundaries.\n\nUnfortunately SOLR-553 was committed a day after you submitted your patch, and rearranges the code slightly so that it no longer applies.  Could you sync the patch with trunk?  I think the basic approach is sound. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12602571",
            "date": "2008-06-05T07:43:44+0000",
            "content": "Attaching new patch which should apply cleanly to current HEAD. Also verified that it doesn't break anything fixed in SOLR-553 by running the unit test. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12603780",
            "date": "2008-06-10T06:09:48+0000",
            "content": "Thanks for the patch, Lars.  I think that the basic approach is sound, though I am a little nervous about the performance implications (especially in the case of phrase highlighting, where we spin up an entirely new spanhighlighter for each value in a multi-valued field).  I wonder if I am the only one who highlights large text fields composed of dozens of individual values?\n\n "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12603782",
            "date": "2008-06-10T06:20:49+0000",
            "content": "In the setup I've been testing it with (one large single-valued \"text\" field and several multi-valued fields) it didn't seem to have any serious performance implications \u2013 i.e. the randomness of my test queries was enough to mask any loss of performance \nThe length of the multi-valued fields is in the order of 10-20 characters on average though and there're not many multiple different values.\n\nI personally think that returning correct data is more important than performance in this case, but that may just be because my particular setup doesn't suffer any significant loss of performance. I didn't see any other way to correct the behaviour of the current trunk code, but if anybody else has a better idea how to do it, please let us know! "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12603785",
            "date": "2008-06-10T06:27:54+0000",
            "content": "Hey Lars,\n\nYeah, I'm talking about highlighting 15kB of text in 100-200 character chunks.  Maybe I can whip up a perf test for this soon.\n\nThe reason we probably see this issue differently is that the incorrect behaviour is quite minor for most users (perhaps a bit of punctuation leaking from value to value at most).  Once way to correct what you are seeing is to use a tokenizer that creates tokens out of the CJK characters, or things on boundaries.  In your case, inserting a fake token when encountering a right bracket [)] would fix the problem, I think.\n\nNevertheless, I think I will probably end up committing your patch after pondering it some more.\n "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12603787",
            "date": "2008-06-10T06:38:33+0000",
            "content": "Hi Mike,\n\nIn my opinion the most important reason for committing the patch is that the current implementation breaks the multi-valued field abstraction. There's no way to assert that tokenizers will always produce tokens suitable for the current implementation. It also makes for a very hard to find bug, because there're no error messages. I just found it by chance. And even if you notice that something is wrong, fixing it is non-trivial and requires quite some knowlegde how Solr does highlighting of multi-valued fields.\n\nSo the other option is to add a page to the wiki with a workaround like you've suggested, but I think that's rather going to scare people evaluating Solr for use with CJK text away  "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12611407",
            "date": "2008-07-07T23:53:36+0000",
            "content": "committed as part of SOLR-610.  thanks Lars! "
        }
    ]
}