{
    "id": "SOLR-11502",
    "title": "Query Elevate Component lazy evaluation of queries",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "query parsers",
            "SearchComponents - other"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "6.6.1,                                            7.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Whenever a new searcher is opened, all of the Query Elevate queries are run through the query parser and the results stored. So say you have 10,000 entries. The autowarming takes however long it takes to process 10,000 queries. It would help if there was an option to run the elevate query at query time instead of during autowarming.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-17T20:52:55+0000",
            "content": "Hmmm, what about another cache in solrconfig.xml? Seems like a fine thing for a cache as it could be limited by the number of entries. QEC was never envisioned as having 10,000 entries in the first place so how much memory used wasn't really part of the thinking at the time.\n\nAll the plumbing is in place, including a regeneration option to autowarm the N most recent QEC queries...... ",
            "author": "Erick Erickson",
            "id": "comment-16208315"
        }
    ]
}