{
    "id": "SOLR-11204",
    "title": "Expose a total size stat for the query result and filter cache",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "It will be useful to display the size of the filter cache and query result cache currently being used . We added support for this to the field cache in SOLR-9844",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-08-09T22:59:31+0000",
            "content": "Some observations:\n\n1. Should {[ConcurrentLRUCache#ramBytesUsed}} synchronize on the map variable like {[LRUCache#ramBytesUsed}} ?\n2. LRUCache  and ConcurrentLRUCache only tracks ramBytesUsed when maxRamMB is enabled. LRUCache exposes ( which document cache / query result cache uses by default ) but FastLRUCache doesn't ( which is used by filter cache by default )\n\n\n\tHow much of an overhead is calculating ramBytesUsed ? If it isn't then we can we do it even when {maxRamMB}} is not used? That way a user who specifies max entries can atleast see in the UI how much heap space are the caches occupying\n\n\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16120789"
        },
        {
            "date": "2017-08-10T02:10:20+0000",
            "content": "Should ConcurrentLRUCache#ramBytesUsed synchronize on the map variable like {[LRUCache#ramBytesUsed}} ?\n\nIt is not necessary. The ramBytes in ConcurrentLRUCache is an AtomicLong but the one in LRUCache is not.\n\nLRUCache and ConcurrentLRUCache only tracks ramBytesUsed when maxRamMB is enabled...\n\nThe algorithm used for eviction in ConcurrentLRUCache when maxRamMB is specified is more inefficient (always makes 3 passes vs usually just 1 pass) then when using sizes. This is also the cause of another way in which ConcurrentLRUCache is different from LRUCache i.e. LRUCache uses both maxRamMB and size for eviction but ConcurrentLRUCache uses only one of them at a time. Therefore there was no need to track ram usage if we weren't going to use them.\n\nThat being said, tracking ram bytes is not that expensive that we couldn't do it by default. But we still cannot support both maxRamMB and max size together. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16120945"
        }
    ]
}