{
    "id": "SOLR-12934",
    "title": "Make Update Request Processors CDCR aware (i.e. skip process if CDCR forwarded update)",
    "details": {
        "type": "Improvement",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [
            "CDCR",
            "UpdateRequestProcessors"
        ],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "While setting up CDCR in solrconfig.xml at target cluster, we need to make default update processor chain with CdcrUpdateProcessorFactory like:\n\n<updateRequestProcessorChain name=\"cdcr-processor-chain\">\n  <processor class=\"solr.CdcrUpdateProcessorFactory\"/>\n  <processor class=\"solr.RunUpdateProcessorFactory\"/>\n</updateRequestProcessorChain>\n\n\n\n<requestHandler name=\"/update\" class=\"solr.UpdateRequestHandler\">\n  <lst name=\"defaults\">\n    <str name=\"update.chain\">cdcr-processor-chain</str>\n  </lst>\n</requestHandler>\n\n\nThe motivation having a default update processor chain with no other but CdcrUpdateProcessorFactory is to NOT MODIFY already processed and transformed data at source. And it works perfectly.\n\nIn Bidirectional scenario, we need to set this default chain at both clusters, source & target. And while sending documents from application side; we need to EXPLICITLY SET update.chain with each batch at the primary/source cluster. This introduces an extra activity/effort at the application end.\n\nIt would be great if we can make Update Request Processors CDCR aware; i.e. skip and don't process the doc batches which are CDCR forwarded ones and treat the others as default.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16712248",
            "content": "While looking at the code; for each URP; the base methods processAdd,processDelete.... and rest are called, which triggers the next URP execution, at the end of each method implementation, like:\n\n    @Override\n    public void processAdd(AddUpdateCommand cmd) throws IOException {\n      final SolrInputDocument doc = cmd.getSolrInputDocument();\n      if (! doc.containsKey(fieldName)) {\n        doc.addField(fieldName, getDefaultValue());\n      }\n      super.processAdd(cmd);\n    }\n\n\nwhich means we have to accommodate the CDCR aware logic at each overridden method; it is cumbersome but works fine. Updated CdcrBidirectionalTest with clusters have their default / own URP chain, and it works.\nStill, need to update documentation, showcasing for custom URPs you need to implement the logic yourself; so half-baked solution.\n\n      if (cmd.getReq().getParams().get(CDCR_UPDATE) != null) {\n        super.processAdd(cmd);\n        return;\n      }\n\n ",
            "author": "Amrit Sarkar",
            "date": "2018-12-07T01:56:42+0000"
        }
    ]
}