{
    "id": "LUCENE-4685",
    "title": "IndexedField (is StringField) set to tokenized when getting the Document",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [],
        "affect_versions": "4.0",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "I have added a Document with StringField to the index. When I search for it, I retrieve the Document from the searcher and iterate the IndexedFields. The field I have added is reported to be a 'tokenized' field. \n\nThis should not be the case, as it is a StringField and these are not tokenized.\n\nIt is very unconvenient when updating a Document with an extra field. The original fields are all set to tokenized. \n\nI will add a TestCase that shows the unwanted behaviour",
    "attachments": {
        "TestLuceneTokenizedFieldDocument.java": "https://issues.apache.org/jira/secure/attachment/12564918/TestLuceneTokenizedFieldDocument.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-15T12:59:34+0000",
            "content": "DocumentStoredFieldVisitor shows no distinction between textFields / stringFields. Then visiting a 'stringValue' the resulting type is always set to:\n\n  final FieldType ft = new FieldType(TextField.TYPE_STORED);\n\nTextField.TYPE_STORES is tokenizes so this explains the behaviour. \n\n ",
            "author": "Rob Audenaerde",
            "id": "comment-13553769"
        },
        {
            "date": "2013-01-15T13:07:27+0000",
            "content": "It seems the tokenized vs. non tokenized is not stored in the Lucene40StoredFieldsWriter (and therefore cannot be used in the Lucene40StoredFieldReader). Maybe the bits can be used to determine just that? (it seems there is room left?) ",
            "author": "Rob Audenaerde",
            "id": "comment-13553773"
        },
        {
            "date": "2013-01-15T13:58:44+0000",
            "content": "Hi Rob\n\nIt seems the tokenized vs. non tokenized is not stored in the Lucene40StoredFieldsWriter\n\nRight, the StoredFieldsWriter only stores the type of the data (binary|String|int|long|float|double).\n\nMaybe the bits can be used to determine just that? (it seems there is room left?)\n\nWhile we could add a bit to store this information, I think that the best solution to your problem is to manage a schema on top of Lucene, similarly to Solr and ElasticSearch. Storing every information required to re-index the field would waste a lot of space (precisionStep for numeric types, analyzer for text fields, ...).\n\nI know the current behavior is a little confusing, but the future major release of Lucene (5.0, not scheduled yet) will use a different return type for IndexReader.document(int): StoredDocument (instead of Document) whose fields don't expose any indexing option. ",
            "author": "Adrien Grand",
            "id": "comment-13553822"
        }
    ]
}