{
    "id": "SOLR-9178",
    "title": "ExtractingRequestHandler doesn't strip HTML and adds metadata to content body",
    "details": {
        "components": [
            "update"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.0,                                            6.0.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Starting environment:\nsolr-6.0.1.tgz is downloaded and extracted. We are in the solr-6.0.1 directory.\nThe file, test.html, is downloaded from https://wiki.apache.org/solr/UsingMailingLists.\n\nAffected versions: 4.10.3 is the last working version. 4.10.4 has some HTML comments and Javascript breaking through. Versions >5.0 have full symptoms described.\n\nSteps to reproduce:\n1) bin/solr start\n2) bin/solr create -c mycore\n\n3) curl \"http://localhost:8983/solr/mycore/update/extract?literal.id=doc1&uprefix=attr_&fmap.content=attr_content&commit=true\" -F \"content/tutorial=@test.html\"\n\n4) curl http://localhost:8983/solr/mycore/select?q=information\n\nExpected result: HTML->Text version of document indexed in <response> content body.\n\nActual result: Full HTML, but with anglebrackets removed, being indexed along with other unwanted metadata in the content body including fragments of CSS and Javascript that were in the source document. \n\nHead of response body below...\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">0</int><lst name=\"params\"><str name=\"q\">information</str></lst></lst><result name=\"response\" numFound=\"1\" start=\"0\"><doc><str name=\"id\">doc1</str><arr name=\"attr_stream_size\"><str>20440</str></arr><arr name=\"attr_x_parsed_by\"><str>org.apache.tika.parser.DefaultParser</str><str>org.apache.tika.parser.html.HtmlParser</str></arr><arr name=\"attr_stream_content_type\"><str>text/html</str></arr><arr name=\"attr_stream_name\"><str>test.html</str></arr><arr name=\"attr_stream_source_info\"><str>content/tutorial</str></arr><arr name=\"attr_dc_title\"><str>UsingMailingLists - Solr Wiki</str></arr><arr name=\"attr_content_encoding\"><str>UTF-8</str></arr><arr name=\"attr_robots\"><str>index,nofollow</str></arr><arr name=\"attr_title\"><str>UsingMailingLists - Solr Wiki</str></arr><arr name=\"attr_content_type\"><str>text/html; charset=utf-8</str></arr><arr name=\"attr_content\"><str> \n\n stylesheet text/css utf-8 all /wiki/modernized/css/common.css   stylesheet text/css utf-8 screen /wiki/modernized/css/screen.css   stylesheet text/css utf-8 print /wiki/modernized/css/print.css   stylesheet text/css utf-8 projection /wiki/modernized/css/projection.css   alternate Solr Wiki: UsingMailingLists /solr/UsingMailingLists?diffs=1&show_att=1&action=rss_rc&unique=0&page=UsingMailingLists&ddiffs=1 application/rss+xml   Start /solr/FrontPage   Alternate Wiki Markup /solr/UsingMailingLists?action=raw   Alternate print Print View /solr/UsingMailingLists?action=print   Search /solr/FindPage   Index /solr/TitleIndex   Glossary /solr/WordIndex   Help /solr/HelpOnFormatting   stream_size 20440  \n X-Parsed-By org.apache.tika.parser.DefaultParser  \n X-Parsed-By org.apache.tika.parser.html.HtmlParser  \n stream_content_type text/html  \n stream_name test.html  \n stream_source_info content/tutorial  \n dc:title UsingMailingLists - Solr Wiki  \n Content-Encoding UTF-8  \n robots index,nofollow  \n Content-Type text/html; charset=utf-8  \n UsingMailingLists - Solr Wiki \n\n\n\n header \n\n application/x-www-form-urlencoded get searchform /solr/UsingMailingLists \n\n hidden action fullsearch  \n hidden context 180  \n searchinput Search: \n text searchinput value  20 searchFocus(this) searchBlur(this) searchChange(this) searchChange(this) Search  \n submit titlesearch titlesearch Titles Search Titles  \n submit fullsearch fullsearch Text Search Full Text  \n\n\n\n\n text/javascript \n<!--// Initialize search form\nvar f = document.getElementById('searchform');\nf.getElementsByTagName('label')[0].style.display = 'none';\nvar e = document.getElementById('searchinput');\nsearchChange(e);\nsearchBlur(e);\n//-->\n\n\n logo  rect /solr/FrontPage Solr Wiki",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-21T00:41:05+0000",
            "author": "Ole J\u00f8rgen Br\u00f8nner",
            "content": "I think this (unfortunately) is expected behavior. If you look closer, the actually html tags have been removed, but the attribute values have been retained. \n\nYou can get rid of the attribute values by adding captureAttr=true, but if you also want to capture some elements in separate fields (capture=p) you're out of luck (ie. you can't separate the captured attributes from the captured tag content)\n\nDisclaimer: I'm no solr expert, but have recently spent a decent amount of time trying to bend cell/tika to my liking (unsuccessfully)\n\nRelated issue: SOLR-7027 ",
            "id": "comment-15765691"
        },
        {
            "date": "2017-03-13T09:03:21+0000",
            "author": "Simon Blandford",
            "content": "Expected behaviour would be that Solr indexes the same as the output of \"java -jar tika-app.jar -t inputfile.html\", which is a plaintext rendition of the HTML content. There is no way that broken fragments of CSS, tags or Javascript would be useful as indexed \"content\". If it was expected behaviour then I would expect to see something in the changelogs after Solr version 4.10.3 (the last working version) explaining the change. ",
            "id": "comment-15907041"
        },
        {
            "date": "2017-03-13T14:17:08+0000",
            "author": "Alexandre Rafalovitch",
            "content": "SOLR-6856 may be the Solr-level change with the triggering event being the change in Tika's architecture.\n\nI wonder if the solution/workaround could involve ParseContext introduced in SOLR-8166.  ",
            "id": "comment-15907538"
        },
        {
            "date": "2017-03-13T14:47:48+0000",
            "author": "Tim Allison",
            "content": "From only a brief look at this and SOLR-7027, this probably needs to be fixed at the Solr level.  However, you could try manipulating the HtmlMapper, which is currently picked up by Tika's HtmlParser via the ParseContext.  Let me know if you want help. ",
            "id": "comment-15907591"
        },
        {
            "date": "2017-03-13T14:51:40+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Tim Allison I was having hard time finding a good reference to the ParseContext, especially as a file configuration. Is there a central reference of any guide that we could link from the Reference Guide to? ",
            "id": "comment-15907597"
        },
        {
            "date": "2017-03-13T15:57:28+0000",
            "author": "Tim Allison",
            "content": "Ha, y, that's because it is a catch-all.  There are a few cross-parser uses, but generally, various parsers use it differently.   I added a stub page to our wiki: https://wiki.apache.org/tika/TikaParseContext.  I'll try to update that over the coming week. ",
            "id": "comment-15907723"
        },
        {
            "date": "2017-03-28T17:55:16+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Tim Allison\nLooking at the Wiki link and the API, it seems that the only option for the ParserContext is to provide an alternative implementation class mapping to some pre-existing interface. There is no way to pass in values/settings as was suggested in TIKA-612?\n\nIn that case, perhaps it makes sense to restructure Wiki page to basically be the nested list of interfaces that can be overridden and options for such. Something like:\n\nGeneral usage: parseContext.set(MyInterface.class, new MyInterfaceImpl());\n\nOn the other hand, looking at Tika API (for 1.5), I am having troubles finding the valid values for the interface implementations. Is that something non-straightforward or is there just one default implementation in most cases? \n\nActually, the Wiki is missing the HtmlMapper which does have two implementations. And it does list ExecutorService, which I cannot find in Tika API. It is a bit confusing. \n\nP.s. This discussion probably does not belong in this JIRA. Is there a Tika-side JIRA at improving ParseContext information? ",
            "id": "comment-15945633"
        }
    ]
}