{
    "id": "LUCENE-4982",
    "title": "Make MockIndexOutputWrapper check disk full on copyBytes",
    "details": {
        "components": [
            "modules/test-framework"
        ],
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "While working on the consistency test for Replicator (LUCENE-4975), I noticed that I don't trip disk-full exceptions and tracked it down to MockIndexOutputWrapper.copyBytes not doing these checks like writeBytes. I'd like to add this check.",
    "attachments": {
        "LUCENE-4982.patch": "https://issues.apache.org/jira/secure/attachment/12581860/LUCENE-4982.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-05-06T08:56:41+0000",
            "content": "Patch adds a test to TestMockDirWrapper and factors out checkDiskFull method in MockIOWrapper. The signature is a bit ugly, but that's needed because checkDiskFull copies the remaining bytes, and writeBytes copies from an array while copyBytes from DataInput. I don't think it's the end of the world, but if anyone has an idea how to do it better...\n\nI ran core tests and they passed (actually only 3 tests under core set dir.maxSize). ",
            "author": "Shai Erera",
            "id": "comment-13649601"
        },
        {
            "date": "2013-05-06T11:12:09+0000",
            "content": "+1, good catch.\n\nWho tests the tester! ",
            "author": "Michael McCandless",
            "id": "comment-13649654"
        },
        {
            "date": "2013-05-06T12:45:00+0000",
            "content": "Its not clear to me if with the patch we will double-count against disk full if copyBytes calls writeBytes behind the scenes...\n\nMaybe we can make the test have a max size of 2 bytes and copyBytes twice to it just so this is obvious? ",
            "author": "Robert Muir",
            "id": "comment-13649702"
        },
        {
            "date": "2013-05-06T12:48:46+0000",
            "content": "I can modify the test sure. But the problem is that copyBytes doesn't call writeBytes, otherwise I would have tripped it. I.e., we call delegate.copyBytes, which internally may call its writeBytes, but not MockIO.writeBytes. ",
            "author": "Shai Erera",
            "id": "comment-13649711"
        },
        {
            "date": "2013-05-06T12:59:35+0000",
            "content": "I modified the test to set maxSize=2 and then write 2 bytes in two calls. The first should succeed, the second fail. However, even the first fails and now I don't know if it's a bug in the test or MockIO.checkDiskFull(). The latter (copy of the original code) does freeSpace <= len \u2013 is this ok? I mean, if I have room for 2 bytes and the caller asks to write 2 bytes, should we really fail on diskFull? ",
            "author": "Shai Erera",
            "id": "comment-13649719"
        },
        {
            "date": "2013-05-06T14:59:58+0000",
            "content": "I changed the check to freeSpace < len, but then the test failed to trip disk-full the second time, unless I call out.flush() in between. Debugging tells me that RAMOutputStream sets RAMFile.length only on flush(), therefore even if I attempt to write a 2K byte[] (with maxSize=2), the test doesn't fail.\n\nSeems like getRecomputedActualSizeInBytes is not very accurate. It only returns the size of the flushed files (even for FSDir). This may be ok, dunno. It just felt wrong for RAMDirectory, since there is no real buffering happening.\n\nAnyway, I guess we'll have to live with that. Disk-full is anyway a best effort, so in this test, I'll just call flush(). In real tests that want to trip disk-full, usually indexing happens and therefore files get flushed, and the size measure is closer. ",
            "author": "Shai Erera",
            "id": "comment-13649784"
        },
        {
            "date": "2013-05-06T19:20:42+0000",
            "content": "I thought about this some more and I realize that getComputedActualSizeInBytes works as expected. checkDiskFull should only trip if the Directory size has reached the limit, and it cannot tell how many bytes are pending in a buffer. The test would fail not only w/ RAMDirectory, but also a Directory which buffers writes (which I believe all our directories do), and therefore flush() is important for the test.\n\nSo to summarize the changes in this issue:\n\n\n\tAdded checkDiskFull to MockIOWrapper so it can trip writeBytes and copyBytes.\n\tChanged checkDiskFull to do freeSpace < len because freeSpace == len is still valid.\n\tAdded a test\n\n\n\nI plan to commit this tomorrow. ",
            "author": "Shai Erera",
            "id": "comment-13650009"
        },
        {
            "date": "2013-05-07T05:54:30+0000",
            "content": "Committed to trunk and 4x ",
            "author": "Shai Erera",
            "id": "comment-13650539"
        },
        {
            "date": "2013-07-23T18:37:11+0000",
            "content": "Bulk close resolved 4.4 issues ",
            "author": "Steve Rowe",
            "id": "comment-13716775"
        }
    ]
}