{
    "id": "SOLR-6709",
    "title": "ClassCastException in QueryResponse after applying XMLResponseParser on a response containing an \"expanded\" section",
    "details": {
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Shouldn't the following code work on the attached input file?\nIt matches the structure of a Solr response with wt=xml.\n\n\nimport java.io.InputStream;\nimport org.apache.solr.client.solrj.ResponseParser;\nimport org.apache.solr.client.solrj.impl.XMLResponseParser;\nimport org.apache.solr.client.solrj.response.QueryResponse;\nimport org.apache.solr.common.util.NamedList;\nimport org.junit.Test;\n\npublic class ParseXmlExpandedTest {\n\t@Test\n\tpublic void test() {\n\t\tResponseParser responseParser = new XMLResponseParser();\n\t\tInputStream inStream = getClass()\n\t\t\t\t.getResourceAsStream(\"test-response.xml\");\n\t\tNamedList<Object> response = responseParser\n\t\t\t\t.processResponse(inStream, \"UTF-8\");\n\t\tQueryResponse queryResponse = new QueryResponse(response, null);\n\t}\n}\n\n\nUnexpectedly (for me), it throws a\njava.lang.ClassCastException: org.apache.solr.common.util.SimpleOrderedMap cannot be cast to java.util.Map\nat org.apache.solr.client.solrj.response.QueryResponse.setResponse(QueryResponse.java:126)\n\nAm I missing something, is XMLResponseParser deprecated or something?\n\nWe use a setup like this to \"mock\" a QueryResponse for unit tests in our service that post-processes the Solr response.\nObviously, it works with the javabin format which SolrJ uses internally.\nBut that is no appropriate format for unit tests, where the response should be human readable.\n\nI think there's some conversion missing in QueryResponse or XMLResponseParser.\n\nNote: The null value supplied as SolrServer argument to the constructor of QueryResponse shouldn't have an effect as the error occurs before the parameter is even used.",
    "attachments": {
        "test-response.xml": "https://issues.apache.org/jira/secure/attachment/12679815/test-response.xml",
        "SOLR-6709.patch": "https://issues.apache.org/jira/secure/attachment/12706511/SOLR-6709.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-23T11:00:06+0000",
            "author": "Varun Thacker",
            "content": "Patch with fix and test case. \n\ntestExpandComponent will fail if the entire patch is not applied.\n\nJoel Bernstein Would be great if you could have a look at it. ",
            "id": "comment-14375742"
        },
        {
            "date": "2015-03-23T16:15:10+0000",
            "author": "Joel Bernstein",
            "content": "I should have a chance to take a look at this this week. ",
            "id": "comment-14376116"
        },
        {
            "date": "2015-03-25T15:46:45+0000",
            "author": "Varun Thacker",
            "content": "The patch I had uploaded was failing with the expand components distrib tests. I realized that it was because the group keys that were being put into the HashMap the ordering when retrieving it was the same. Just changing Map<String, DocSlice> outMap = new HashMap<>(); to  Map<String, DocSlice> outMap = new LinkedHashMap<>(); will cause the test to fail.\n\nI'll work on a new patch ",
            "id": "comment-14380092"
        },
        {
            "date": "2015-03-25T18:42:47+0000",
            "author": "Varun Thacker",
            "content": "New patch. Works fine in distirb mode also.\n\nOne question though - Was the ordering of the group keys guaranteed? ",
            "id": "comment-14380474"
        },
        {
            "date": "2015-03-30T11:36:21+0000",
            "author": "Varun Thacker",
            "content": "Hi Joel,\n\nI would really appreciate a review on the patch. Not sure what the contract is on the ordering of group keys. ",
            "id": "comment-14386592"
        },
        {
            "date": "2015-03-30T12:16:30+0000",
            "author": "Joel Bernstein",
            "content": "Hi Varun,\n\nThere was no contract on the ordering of group keys. The groups are meant to be read into a Map and then accessed by key. ",
            "id": "comment-14386615"
        },
        {
            "date": "2015-03-30T12:40:23+0000",
            "author": "Varun Thacker",
            "content": "Thanks Joel for clarifying that. \n\nI'll run the tests and commit it shortly then. ",
            "id": "comment-14386640"
        },
        {
            "date": "2015-03-30T12:40:53+0000",
            "author": "Joel Bernstein",
            "content": "Just reviewed the test case and all the groups are accessed directly by name, this simulates access into a map. The order of the documents within the groups matter in the test case. But the order of the groups themselves does not.\n\nThe only thing I worry about is that someone might imply that order matters if we use an ordered map, but we could document this more closely. ",
            "id": "comment-14386641"
        },
        {
            "date": "2015-03-31T11:31:08+0000",
            "author": "Varun Thacker",
            "content": "Added javadocs to \n{QueryResult.getExpandedResults}\n. Is there anything else that needs to be addressed?  ",
            "id": "comment-14388388"
        },
        {
            "date": "2015-03-31T11:57:31+0000",
            "author": "Joel Bernstein",
            "content": "Looking at the patch, I don't see any issues. As long as the tests are passing I think we are fine. ",
            "id": "comment-14388403"
        },
        {
            "date": "2015-04-01T07:04:33+0000",
            "author": "Varun Thacker",
            "content": "Forgot to append the Jira number. Here is the revision where it was committed to trunk - https://svn.apache.org/viewvc?view=revision&revision=1670569  ",
            "id": "comment-14390116"
        },
        {
            "date": "2015-04-01T08:38:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1670579 from Varun Thacker in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1670579 ]\n\nSOLR-6709: Fix QueryResponse to deal with the expanded section when using the XMLResponseParser (merged from trunk r1670569) ",
            "id": "comment-14390227"
        },
        {
            "date": "2015-04-01T08:40:36+0000",
            "author": "Varun Thacker",
            "content": "Thank you Simon for reporting and Joel for reviewing the patch. ",
            "id": "comment-14390232"
        },
        {
            "date": "2015-04-02T10:42:10+0000",
            "author": "Simon Endele",
            "content": "Thank you guys very much for fixing/reviewing and happy Easter! ",
            "id": "comment-14392527"
        },
        {
            "date": "2015-06-15T21:43:03+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close for 5.2.0. ",
            "id": "comment-14586825"
        }
    ]
}