{
    "id": "LUCENE-3295",
    "title": "BitVector never skips fully populated bytes when writing ClearedDgaps",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/other"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When writing cleared DGaps in BitVector we compare a byte against 0xFF (255) yet the byte is casted into an int (-1) and the comparison will never succeed. We should mask the byte with 0xFF before comparing or compare against -1",
    "attachments": {
        "LUCENE-3295.patch": "https://issues.apache.org/jira/secure/attachment/12485739/LUCENE-3295.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-07-08T14:03:32+0000",
            "content": "here is a simple patch and a test that at least exercise the code. ",
            "author": "Simon Willnauer",
            "id": "comment-13061964"
        },
        {
            "date": "2011-07-08T14:30:25+0000",
            "content": "good catch, just some thoughts looking at the test:\n\n\n\twe should create a helper no-arg LTC.newIOContext() that uses LTC's random, or\n\tshould we need to actually pass IOcontext like this in tests explicitly?\n  or, should MDW randomize the IOContexts that it passes down to its wrapped Dir?\n\n ",
            "author": "Robert Muir",
            "id": "comment-13061981"
        },
        {
            "date": "2011-07-08T14:37:31+0000",
            "content": "while those comments are really unrelated, how would you pass a randomized IOContext in the MDW? ignore the given one?\n\nI agree we should have a zero arg newIOContext() ",
            "author": "Simon Willnauer",
            "id": "comment-13061986"
        },
        {
            "date": "2011-07-08T14:46:17+0000",
            "content": "we can have a true/false setter on MDW (randomizeIOContexts), so we control if it respects the \ngiven one (e.g. tests that actually want to test IOContext works) or not. ",
            "author": "Robert Muir",
            "id": "comment-13061992"
        },
        {
            "date": "2011-07-08T19:04:54+0000",
            "content": "Egads, thanks Simon!  I found a few more crazy problems with BitVector\n(patch attached, merged with the first patch), and added some asserts\nand a few more test cases. ",
            "author": "Michael McCandless",
            "id": "comment-13062115"
        },
        {
            "date": "2011-07-11T09:36:19+0000",
            "content": "thanks for resolving this mike ",
            "author": "Simon Willnauer",
            "id": "comment-13063245"
        },
        {
            "date": "2011-07-11T12:40:41+0000",
            "content": "Thank you for catching that something was amiss in the first place   That's the hardest part. ",
            "author": "Michael McCandless",
            "id": "comment-13063312"
        }
    ]
}