{
    "id": "SOLR-1478",
    "title": "Enable sort by docid",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Lucene allows sorting by docid, but Solr currently does not provide a way to specify it.",
    "attachments": {
        "SOLR-1478.patch": "https://issues.apache.org/jira/secure/attachment/12420915/SOLR-1478.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erik Hatcher",
            "id": "comment-12760944",
            "date": "2009-09-30T16:10:47+0000",
            "content": "This patch adds a special sort field (like \"score\" is implemented) to enable sorting by docid.  \n\nThe character \"#\" was used simply to avoid any potential field name overlap, but this requires URL encoding it to %23, so maybe some other string should be used?  \n\nHere's an example URL: http://localhost:8983/solr/select?q=*:*&sort=%23%20desc&fl=id\n\nSeems like score and docid sorting should avoid using normal field name strings, so maybe score and docid or something.\n\nI marked this for 1.4, because it's a trivial patch.  Discussion welcome. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12761121",
            "date": "2009-10-01T07:45:47+0000",
            "content": "Perhaps something like _ DOCID _ instead of #. I am even tempted to suggest just using DOCID like we have SCORE.\n\n[Edit] - Jira ate my suggestion "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12761158",
            "date": "2009-10-01T10:26:25+0000",
            "content": "Does Solr ever expose the docid to users? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12761188",
            "date": "2009-10-01T12:28:39+0000",
            "content": "Only the LukeRequestHandler, that I can tell, allows fetching a document by docid and returns it in the response too.\n\nI don't see a need to return the docid even if one is sorting by it.  Sorting by docid allows for last-in-first-out, or first-in-first-out, sorting without any caching overhead of sorting by a field. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12761216",
            "date": "2009-10-01T13:34:02+0000",
            "content": "Sounds good. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12761518",
            "date": "2009-10-02T10:06:00+0000",
            "content": "I committed, and left the special \"field\" as \"#\".  I'd rather avoid a string that could potentially be a field name in use, and sorting by docid will be such a specialized case that the encoding confusion won't be too bad.  Folks have to deal with URL encoding everywhere anyway.  I kinda like that character to mean \"number\". "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12761581",
            "date": "2009-10-02T13:59:48+0000",
            "content": "A few things I don't like about '#'\n\n\tunlike many other characters, the browser can't encode it for you. For example, I can type in \"sort=foo desc\" into my browser and it can encode the space for me.  If I type in a literal #, Solr will silently truncate the request at that point.  People will have trouble with this one.\n\tit can require lexical modification to other parsers (as opposed to semantic modification).  Things like function queries or anything else that parse out field names or parameters would need to be modified at the lexical level to accept # - it's generally easier to just check for a special name.\n\tit looks like a comment\n\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12761583",
            "date": "2009-10-02T14:03:02+0000",
            "content": "Does this work with distributed search? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12761584",
            "date": "2009-10-02T14:05:14+0000",
            "content": "I don't like having an arbitrary character like '#' signifying a sort type because it does not explain itself to a user. Once 1.4 goes out, it will be public API and we won't be able to change this easily. Erik, please consider this again.\n\nThis also does not work with distributed search which should be clearly noted wherever we decide to document this. ShardDoc.java line 170 says that it is possible to support it but I'm not sure what Yonik had in mind. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12761585",
            "date": "2009-10-02T14:07:12+0000",
            "content": "Does this work with distributed search?\n\nNo, it throws an exception:\n\nSEVERE: java.lang.RuntimeException: Doc sort not supported\n\tat org.apache.solr.handler.component.ShardFieldSortedHitQueue.getCachedComparator(ShardDoc.java:171)\n\tat org.apache.solr.handler.component.ShardFieldSortedHitQueue.<init>(ShardDoc.java:96)\n\tat org.apache.solr.handler.component.QueryComponent.mergeIds(QueryComponent.java:393)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:298)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:290)\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12761694",
            "date": "2009-10-02T20:16:33+0000",
            "content": "\n_id_\n_docid_\n\n\n?\n\nThe chance of collision is super low - I'd wager that no one has ever used _id_ in their schema (single underscores on either side... it's doubled to prevent wiki syntax from turning it into italics) "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-12761699",
            "date": "2009-10-02T20:23:18+0000",
            "content": "Providing aliases would allow all parties to get what they want.  Downside: maintenance/documentation issues with multiple syntaxes (minor IMHO).  Upside: collision probability goes down even further.\n\nedit oops, completely wrong on the \"upside\" \u2013 collision probability actually goes up, not down, since the set of noncolliding field names is reduced by each reserved pseudo-field name.  Still, aliases totally rock. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-12761710",
            "date": "2009-10-02T20:37:12+0000",
            "content": "Another thought: the XML specification reserves names matching regex /^xml/i to itself for future use (see http://www.w3.org/TR/xml/#sec-common-syn).  Maybe Solr should do the same?  That way, this discussion wouldn't have to be repeated for each new pseudo-field. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12761725",
            "date": "2009-10-02T21:11:35+0000",
            "content": "A Lucene field name can be anything... so '#' could also be a collision.\nIf we wish to reserve certain names going forward, I'd vote for reserving ids with an underscore on either side.\n\nBut really, the whole collision thing is overblown... this is a single name that people will not have used before. On a practical level, I don't believe it's an issue.\nWe will need another one too - as a container for document metadata.  I've suggested meta for that in SOLR-705.\n\nWe aren't adding these all the time... there was exactly one before this.. \"score\".  No future document level metadata will collide since they will be contained in whatever meta ends up being.\n\nFurther advantages to _id_  (single underscores surrounding the id):\n\n\tconsistent with magic fieldnames _query_ and _val_ for nested queries in the query parser, and I could see supporting _id_:1 in the future\n\tpeople may want to return the actual ids for documents... wherever that info goes (separate return vector like sort_field_values for distributed search or _meta_) it will be nicer for clients if the label for it is actually an identifier and not '#'\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12763255",
            "date": "2009-10-07T20:40:45+0000",
            "content": "I've been thinking _docid_ instead of _id_ since it's further from \"id\", what we normally use as the unique key field for documents.\n\nOK, since Erik also proposed that as an alternative, and because Shalin also seems to be OK with that alternative, I'll commit that change unless I hear that more people favor a different alternative (keeping # or using _id_) "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12763260",
            "date": "2009-10-07T20:48:27+0000",
            "content": "I've been thinking docid instead of id since it's further from \"id\", what we normally use as the unique key field for documents.\n\n+1 "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775897",
            "date": "2009-11-10T15:52:17+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}