{
    "id": "LUCENE-47",
    "title": "Search lock file location should be configurable and favored over disableLuceneLocks property",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "[Currently]\nWe're using Lucene as part of one of our components in a Unix environment and\ncomponents might run under different UIDs. In our specific case component A\ncreates the index folder and component B is performing the search in the same\nfolder. Folders are readable but for security reasons write protected except for\nthe indexing component. This is a problem for us since Lucene writes commit.lock\nfiles during search. I recently noticed the following enhancement in CVS: \n\n-FROM LUCENE CHANGES.TXT->\n 1.3 DEV1\n\n 3. Added the ability to disable lock creation by using disableLuceneLocks\n    system property.  This is useful for read-only media, such as CD-ROMs.\n    (otis)\n<--END\n\nThis wouldn't solve our problem because then indexing can corrupt a search\nrunning at the same time. \n\n[Desired proposal]\nI rather would appreciate another property that let's me specify a separate and\nwritable folder for each indexing log file. Read-only media, such as CD-Roms\nmight even use a /tmp folder .e.g. then. Currently the name is commit.lock. It\nprobably has to be slightly different to be able to associate lock files with\nindexing folders. Therefore, I even suggest to encourage using these over the\ndisableLuceneLocks.\n\n[Question]\nWe recently upgraded to 1.2, which let's me assume that 1.3 is far away ;( Is\nthat correct and what will be the date.\n\nThanks for consideration,\nAndreas",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2002-07-24T05:43:20+0000",
            "content": "Changed version. Probably a better choice  ",
            "author": "Andreas Guenther",
            "id": "comment-12321109"
        },
        {
            "date": "2002-09-09T08:36:03+0000",
            "content": "Could you please clarify the following for me:\n1. Why and how would indexing corrupt a search running at the same time?\n   If the index is simply being modified, this shouldn't be a problem.\n   If your indexing application does more with the index, such as moving or\nremoving the index directory, then this would be a problem.\n\n2. What is \"indexing log file\"?  Is that supposed to be \"indexing LOCK file\"?\n\nSo you esentially want to somehow specify a directory to which Lucene should\nwrite various lock files, such as: luceneLockDir=/tmp ?\n\nBut would that really work on CD-ROMs?  I don't know enough about CD-ROMs, but I\nthink this wouldn't work for CD-ROMs, as there would be no writable file system\nanywhere on CD-ROM, so lock file creation would have to be completely disabled\nfor read-only media, such as CD-ROMs.  Changing the lock file directory wouldn't\ndo it for CD-ROMs, would it?\n\nI am not being sarcastic, the questions are for real \n\nRegarding the 1.3 release - yes, I think it will be a while before 1.3 is released. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321110"
        },
        {
            "date": "2002-09-09T12:57:55+0000",
            "content": "Otis,\nFirst, I am glad that you responded at all. Second, I am pretty disappointed\nabout your response, which doesn't really encourage people to participate in\nopen source development regarding usage and feedback. Recall that it's the user\ncommunity, which makes open source successfull and it would be more than polite\ntrying to understand the outside world using such software. However, I am not\nvery keen in debating these things since I am more interested in a solution to\nour problem.\n\nI probably didn't quite articulate myself and therefore will try to give you a\nmore detailed description of our situation:\n\nWe're using Lucene to index mailing lists. For security reasons indexing is\nperformed with a different UID than a search. This implies that search has\nread-only access to our indexed files as well as the folder they reside in. As\nwe noticed, Lucene writes lock files during search into the same folder where\nthese index files are located. To turn off lock files through\n'disableLuceneLocks' property doesn't seem to be a reasonable solution to us. At\nleast you must have had a reason to use a lock for search in the first place,\nwhich I guess is to prevent indexing in between. A proposed solution would be to\nspecify a different location through a property where Lucene could write its\nsearch lock file to. \n\nIf you have a better solution to our problem, I am more than interested to\nlisten to it. Otherwise I would appreciate a statement why a property to specify\na different location is out of the question. At least you didn't respond to that.\n\nThanks for taking your time,\nAndreas ",
            "author": "Andreas Guenther",
            "id": "comment-12321111"
        },
        {
            "date": "2002-09-09T21:25:03+0000",
            "content": "I am not going to get into a argument here.\nRegarding the bug.\nI did not say that the property you were asking for is out of question!\nI just didn't think it would work for read only media, like CD-ROMs, which you\nmentioned in the original bug report.\nWhat you suggest would probably work for you, I agree.\n\nIf possible, could you please submit a patch with a unit test?\nI am currently very busy with a number of other much bigger things in life, and\nthis would speed things up.\nThanks. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321112"
        },
        {
            "date": "2002-09-09T21:43:47+0000",
            "content": "I just took a quick look at the Lucene's source.\nIt looks like commit.lock in IndexReader (used for searches) is made via\n(FS)Directory's makeLock method, which makes use of the disableLuceneLocks, so I\nthink this will disable lock creation during searches.  Therefore, your searches\nwith a different user ID should work if the user has read permissions on the\nindex directory and files.\nCould you please try it and post the results (i.e. error, if you get it)?\nThanks. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321113"
        },
        {
            "date": "2002-09-10T04:37:32+0000",
            "content": "Thanks for the quick feedback. We still like to make use of the locking feature\nbecause indexing might happen during a search. But I am happy to suggest a patch\nwith a JUnit test case. You might want to change it to an enhancement or rather\nfeature since it seems not a lot of users need that. I'll try to have something\nsomewhere around october.\n\nThanks,\nAndreas ",
            "author": "Andreas Guenther",
            "id": "comment-12321114"
        },
        {
            "date": "2002-09-12T05:21:36+0000",
            "content": "I think you're asking for something reasonable.  It should be possible to\nconstruct an FSDirectory that has locking disabled or that uses a different lock\ndirectory without altering global system properties.  Would that meet your\nneeds?  If so, can you submit the proposed changes?  Otherwise it might be a\nwhile before someone gets to implementing this. ",
            "author": "cutting@apache.org",
            "id": "comment-12321115"
        },
        {
            "date": "2002-09-12T06:35:36+0000",
            "content": "That sounds great. I will provide something as previously suggested. ",
            "author": "Andreas Guenther",
            "id": "comment-12321116"
        },
        {
            "date": "2003-05-02T02:57:33+0000",
            "content": "Lock files are now placed in /tmp, so that a read-only index can now be locked. ",
            "author": "cutting@apache.org",
            "id": "comment-12321117"
        }
    ]
}