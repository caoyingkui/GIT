{
    "id": "SOLR-10808",
    "title": "Enable DocValues by default for all string/numeric/date fields, unless explicitly disabled",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Spinning this idea off of SOLR-10803 where Uwe suggested it...\n\n\nI'd suggest to also enable DocValues by default for all string/numeric/date fields, unless explicitly disabled.\n\nThis would be fairly easy to do \u2013 we just bump up the \"schema version\" and change the default for docValues in the affected FieldTypes (or perhaps in PrimitiveFieldType? Just like OMIT_NORMS ? ... Need to think about that a bit more.)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-03T07:30:42+0000",
            "content": "Isn't this done already? See SOLR-8740 and the followup SOLR-9449 ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16035881"
        },
        {
            "date": "2017-06-03T10:44:43+0000",
            "content": "Then there is missing documentation... I never understood the strange schmea-version behaviour for defaults. In fact this won't help users that stay with an old schema version - I have seen many people still using the ancient schema version, because nobody reminded them to update it. Maybe we should print a warning on core startup. ",
            "author": "Uwe Schindler",
            "id": "comment-16035927"
        },
        {
            "date": "2017-06-03T10:47:06+0000",
            "content": "Isn't this done already? See SOLR-8740 and the followup SOLR-9449\n\nNo it isn't. We just changed the XML files of the default schema in those issues (according to the patch). The idea was to change the default in the FieldType, so it is enabled by default for all field tytes except TextField. ",
            "author": "Uwe Schindler",
            "id": "comment-16035928"
        },
        {
            "date": "2017-06-07T18:37:19+0000",
            "content": "Probably should add Booleans to this... ",
            "author": "Erick Erickson",
            "id": "comment-16041389"
        },
        {
            "date": "2017-06-07T18:54:07+0000",
            "content": "Probably should add Booleans to this...\n\nMaybe, maybe not.  Uninverting an indexed boolean produces a nice efficient bitset representation.  Using real DocValues on a Boolean field is a bit of a hack by comparison.  I cringed when I saw DocValues support being added to Boolean fields. ",
            "author": "David Smiley",
            "id": "comment-16041413"
        },
        {
            "date": "2017-06-11T22:05:29+0000",
            "content": "Hmm; I take back my concern about docValues on a boolean field being wasteful.  It was once so but since Lucene 5.4 (or possibly before?) there is some clever encoding schemes for when the field is effectively a boolean.  It will be more wasteful when a field has true, false, and unspecified (3 states) but 2-state situations are particularly efficient.  Sorry for making a fuss. ",
            "author": "David Smiley",
            "id": "comment-16046139"
        }
    ]
}