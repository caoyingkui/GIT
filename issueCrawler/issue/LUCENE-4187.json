{
    "id": "LUCENE-4187",
    "title": "remove nightly/ directory under svn",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/build"
        ],
        "type": "Task",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I setup a jenkins while i was on vacation, it was really easy to just tell it to run an ant task.\n\nI don't like this second set of shell scripts we have: its not portable to windows and harder to setup. We should make it dead easy to setup a jenkins if someone feels inclined to run our tests.\n\nI think we should add, say two jenkins tasks 'ant jenkins' and 'ant jenkins-nightly' or something like that.\n\nFor this to work we need to port some of the stuff the scripts are doing, such as nocommit checks, to ant. Any other parameters should be exposed as ordinary ant properties so they can be overridden with -D's",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-03T20:21:58+0000",
            "content": "Since we're using ivy anyway lots of scripting opportunities open up (may be much much simpler to implement something in jython/ ruby/ beanshell/ groovy/ whatever than as an ANT task).  ",
            "author": "Dawid Weiss",
            "id": "comment-13406002"
        },
        {
            "date": "2012-07-03T20:45:02+0000",
            "content": "Robert: Thaks for opening the issue. The windows builds are already also pure ant builds.\n\nI will start with the half-hourly builds. The nightlies are more complicated because they also copy artifacts outside the checkout tree, so also requires reconfiguring jenkins javadocs and artifact archival. ",
            "author": "Uwe Schindler",
            "id": "comment-13406025"
        },
        {
            "date": "2012-07-03T20:54:48+0000",
            "content": "In general +10 for the idea \u2013 this is important not only for jenkins but for any build system (I myself use atlassian bamboo). ",
            "author": "Dawid Weiss",
            "id": "comment-13406036"
        },
        {
            "date": "2012-07-03T20:56:50+0000",
            "content": "+1, lets get those fixed first. Then anyone can easily setup a jenkins to run tests + checks ",
            "author": "Robert Muir",
            "id": "comment-13406039"
        },
        {
            "date": "2012-07-03T20:57:39+0000",
            "content": "and also you could use the 'ant jenkins' locally when you want to run these checks yourself. this is not really easy today (i run ant clean test javadocs-lint rat-sources or something like that) ",
            "author": "Robert Muir",
            "id": "comment-13406041"
        },
        {
            "date": "2012-08-12T20:33:42+0000",
            "content": "I ported all shell scripts over to top-level build.xml targets:\n\n\n\tant jenkins-hourly: this one runs the hourly test runs (it also does nightly, if you set -Dtest.nightly=true). Be sure to configure this as a Jenkins ANT build step using ANT 1.8.2. Also use \"Advanced\" options to set several properties: test.jvms and tests.multiplier, also maybe tests.nightly. This task also checks for nocommits/@author tags and verifies that the checkout is clean after running tests (like the shell scripts did before with crazy find/grep/...)\n\tant jenkins-clover: this one runs the clover tasks. In the Jenkins config you have to select ANT_OPTS with maaaaaany memory -Xmx1536M, otherwise reporting fails.\n\n\n\nASF Jenkins now has more jpobs than before, because all steps are done as separate jobs, depending on each other:\n\n\tThe first ones (running at 2:03 and 14:03) are Lucene-Solr-test-only-nightly. When those are finished, Jenkins triggers automatically Luceneartifacts, this one triggers Solr*-artifacts. Those tasks are building the artifacts (package and maven) using the official ANT task and publish them with Javadocs through Jenkins.\n\tThe clover task is run every 2 days currently, it's a clone of the hourly task, but with clover enabled (see above)\n\tOnce per week (Sat, Sun) we run the Smoke tester.\n\n\n\nI updated the websites and wiki to point to the new locations. The remaining thing is to clean up Steven's Maven Job to use ANT+MAVEN directly without shell script.\n\nThe SDDS Jenkins server also has randomization of JDKs (Oracle, IBM, JRockit; Java 6/7/8; 32bit/64bit). Unfortunately this does not work on ASF, as we have no access to Jenkins Master to configure EnvInject plugin with custom Groovy scripts. Also the plugin installed at ASF is way too outdated. ",
            "author": "Uwe Schindler",
            "id": "comment-13432824"
        },
        {
            "date": "2012-08-13T12:30:53+0000",
            "content": "I also ported the Maven build to use a 4 step freestyle build:\n\n\tDelete ~/.m2/** artifacts from Solr/Lucene, print Java version (shell task)\n\tInvoke ANT 1.8.2 with target \"generate-maven-artifacts\"\n\tInvoke Maven 2.2.1 with \"install\" as goal (including -fae parameter)\n\tfinally invoke ANT 1.8.2 again with \"generate-maven-artifacts\" as target, supplying the Apache snapshot repository ID as upload target\n\n\n\nThe nightly subdir was nuked in rev. 1372209 ",
            "author": "Uwe Schindler",
            "id": "comment-13433100"
        },
        {
            "date": "2012-08-13T12:40:37+0000",
            "content": "Delete ~/.m2/** artifacts from Solr/Lucene, print Java version (shell task)\n\nIs there a way not to remove everything from there? I have custom settings under there that I really would hate to see accidentally removed. ",
            "author": "Dawid Weiss",
            "id": "comment-13433104"
        },
        {
            "date": "2012-08-13T12:44:05+0000",
            "content": "It only nukes the artifacts nothing else, this is step 1 of this build:\n\necho \"Using JDK in $JAVA_HOME\"\n\"$JAVA_HOME/bin/java\" -version\necho \"Removing artifacts from local maven repository\"\nrm -rf \"$HOME/.m2/repository/org/apache/lucene\" \"$HOME/.m2/repository/org/apache/solr\"\n\n\n(and this is local to this Jenkins Job, apache specific, it is not in any build.xml) ",
            "author": "Uwe Schindler",
            "id": "comment-13433106"
        },
        {
            "date": "2013-05-10T10:34:45+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13654316"
        }
    ]
}