{
    "id": "SOLR-12753",
    "title": "Async logging ring buffer and OOM error",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "logging"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "7.5",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I\u2019m using a simulated environment for autoscaling tests, which may create some pretty degenerate cases (like collections with 50,000 replicas and Policy calculations over these, times 500 nodes).\n\nI noticed that when I turned on debug logging I occasionally would get an OOM error, and the heap dump showed that the biggest objects were a bunch of extremely large strings in the async logger\u2019s ring buffer. These strings were admittedly extremely large (million chars or so) but the previously used sync logging didn\u2019t have any issue with them, because they were consumed one by one.\n\nFor sure, Solr should not attempt to be logging multi-megabyte data. But I also feel like the framework could perhaps help here by enforcing large but sane limits on maximum size of log messages.",
    "attachments": {
        "SOLR-12753.patch": "https://issues.apache.org/jira/secure/attachment/12938874/SOLR-12753.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-09-07T18:36:53+0000",
            "content": "Andrzej Bialecki  Can you give this a whirl, I've found a pattern layout that limits the length of the message. Notes:\n\n\tI've arbitrarily limited the length of the messages to 10240. This is a straw-man number, WDYT?\n\tI've assumed that the truncation is done before the message is put in the buffer. I have no proof of that but it seems logical\n\tTruncated messages will have elipses at the end. Interestingly when I made the length extremely short (10) there were no elipses.\n\n\n\nLet me know if this fixes the problem you saw and anyone who wants to chime in on the default message length please do. Having a default there does allow us to predict the max memory consumption. ",
            "author": "Erick Erickson",
            "id": "comment-16607497"
        },
        {
            "date": "2018-09-12T19:19:37+0000",
            "content": "Since I backed out the async logging, I'll probably fold this into 12055 when I check it back in after the 7.5 release. ",
            "author": "Erick Erickson",
            "id": "comment-16612627"
        },
        {
            "date": "2018-11-27T21:43:45+0000",
            "content": "Andrzej Bialecki WDYT is a good length for the max size? The current patch tops it off at 10K. Too large? Too small? ",
            "author": "Erick Erickson",
            "id": "comment-16701078"
        }
    ]
}