{
    "id": "SOLR-6010",
    "title": "Wrong highlighting while querying by date range with wild card in the end range",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "highlighter",
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "Solr is returning wrong highlights when I have a date range query with wild card in the end range. For example my query q is\n\n\n(porta)+activatedate:[* TO 2014-04-24T09:55:00Z]+expiredate:[2014-04-24T09:55:00Z TO *]\n\n\n\nIn the above query activatedate, expiredate are date fields. Their definition in schema file is as follows\n\n\n<field name=\"activatedate\" type=\"date\" indexed=\"true\" stored=\"false\"\n           omitNorms=\"true\"/>\n<field name=\"expiredate\" type=\"date\" indexed=\"true\" stored=\"false\"\n           omitNorms=\"true\"/>\n\n\n\nIn the query result I am getting wrong highlighting information. Only highlighting result is show below\n\n\n \"highlighting\": {\n    \"article:3605\": {\n      \"title\": [\n        \"The <em>creative</em> <em>headline</em> of this <em>story</em> <em>really</em> <em>says</em> it <em>all</em>\"\n      ],\n      \"summary\": [\n        \"<em>Etiam</em> <em>porta</em> <em>sem</em> <em>malesuada</em> <em>magna</em> <em>mollis</em> <em>euismod</em> <em>aenean</em> <em>eu</em> <em>leo</em> <em>quam</em>. <em>Pellentesque</em> <em>ornare</em> <em>sem</em> <em>lacinia</em> <em>quam</em>.\"\n      ]\n    },\n    \"article:3604\": {\n      \"title\": [\n        \"The <em>creative</em> <em>headline</em> of this <em>story</em> <em>really</em> <em>says</em> it <em>all</em>\"\n      ],\n      \"summary\": [\n        \"<em>Etiam</em> <em>porta</em> <em>sem</em> <em>malesuada</em> <em>magna</em> <em>mollis</em> <em>euismod</em> <em>aenean</em> <em>eu</em> <em>leo</em> <em>quam</em>. <em>Pellentesque</em> <em>ornare</em> <em>sem</em> <em>lacinia</em> <em>quam</em>..\"\n      ]\n    }\n}\n\n\n\nIt should highlight only story word but it is highlighting lot other words also. What I noticed that this happens only if I have a wildcard * in the end range. If I change the above query and set a fixed date in the end range instead of * then solr return correct highlights. Modified query is shown below - \n\n\n(porta)+activatedate:[* TO 2014-04-24T09:55:00Z]+expiredate:[2014-04-24T09:55:00Z TO 3014-04-24T09:55:00Z]\n\n\n\nI guess its a bug in SOLR. If I use filter query fq instead of normal query q then highlighting result is OK for both queries.\n\nUpdate\nIf I use a specific date instead of * still it returns wrong highlights. This time it highlights numbers also. Say I am searching for the word math then it also highlights number with math. As for example if title of my article is Mathematics 1234 then it highlights 1234 also with math.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Ahmet Arslan",
            "id": "comment-13979749",
            "date": "2014-04-24T13:59:57+0000",
            "content": "Cant you set hl.requireFieldMatch to true? "
        },
        {
            "author": "Mohammad Abul Khaer",
            "id": "comment-13980875",
            "date": "2014-04-25T10:52:44+0000",
            "content": "Tried that one. In that case solr return highlighting as follows\n\n\n\"highlighting\": {\n    \"article:838\": {},\n    \"article:840\": {},\n    \"article:839\": {},\n    \"article:824\": {},\n    \"article:834\": {},\n    \"article:835\": {},\n    \"article:832\": {},\n    \"article:833\": {},\n    \"article:826\": {},\n    \"article:825\": {}\n  }\n\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-16535099",
            "date": "2018-07-06T16:42:43+0000",
            "content": "While I didn't try to reproduce this, I think the problem won't occur in Solr 7 with DatePointField (replaces older TrieDateField).  Even with TrieDateField, if you use the hl.method=unified (UnifiedHighlighter) in 6.x this problem would not occur.  It wouldn't happen with the fast vector highlighter either.  I could imagine the original highlighter still does or used to exhibit this problem.  Varun's right on hl.requireFieldMatch which probably should have been defaulted to true but alas defaults to false.  You got no results probably because of a mismatch between the field you are highlighting and the field referenced in your query.\n\nI'm going to mark closed. "
        }
    ]
}