{
    "id": "LUCENE-7431",
    "title": "Allow negative pre/post values in SpanNotQuery",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/search"
        ],
        "labels": "",
        "fix_versions": [
            "6.4"
        ],
        "priority": "Minor",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "I need to be able to specify a certain range of allowed overlap between the include and exclude parameters of SpanNotQuery.\n\nSince this behaviour is the inverse of the behaviour implemented by the pre and post constructor arguments, I suggest that this be implemented with negative pre and post values.\n\nPatch incoming.",
    "attachments": {
        "LUCENE-7431.patch": "https://issues.apache.org/jira/secure/attachment/12826303/LUCENE-7431.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15552928",
            "author": "Marc Morissette",
            "date": "2016-10-06T19:28:52+0000",
            "content": "Can I get a review of this patch please? It's rather small and includes tests. "
        },
        {
            "id": "comment-15641157",
            "author": "David Smiley",
            "date": "2016-11-06T05:03:59+0000",
            "content": "Patch looks pretty good; thanks.  \n\nI was confused a little on the semantics but after a little experimentation, I get it.  The \"negative values\" assert messages were sometimes inconsistent with the parameters, so I tweaked that, and I added a test line to help me understand something.\nfinal lines at end of testSpanNots:\n\n    assertEquals(\"SpanNotS2S1NotXXNeg_0_0\", 1, spanCount(\"s2 s1\", 10, \"xx\", 0, 0));\n    assertEquals(\"SpanNotS2S1NotXXNeg_1_1\", 1, spanCount(\"s2 s1\", 10, \"xx\", -1, -1));\n    assertEquals(\"SpanNotS2S1NotXXNeg_0_2\", 2, spanCount(\"s2 s1\", 10, \"xx\",  0, -2));\n    assertEquals(\"SpanNotS2S1NotXXNeg_1_2\", 2, spanCount(\"s2 s1\", 10, \"xx\", -1, -2));\n    assertEquals(\"SpanNotS2S1NotXXNeg_2_1\", 2, spanCount(\"s2 s1\", 10, \"xx\", -2, -1));\n    assertEquals(\"SpanNotS2S1NotXXNeg_3_1\", 2, spanCount(\"s2 s1\", 10, \"xx\", -3, -1));\n    assertEquals(\"SpanNotS2S1NotXXNeg_1_3\", 2, spanCount(\"s2 s1\", 10, \"xx\", -1, -3));\n    assertEquals(\"SpanNotS2S1NotXXNeg_2_2\", 3, spanCount(\"s2 s1\", 10, \"xx\", -2, -2));\n\n\n\nI'll commit the patch with this tweak early this coming week. "
        },
        {
            "id": "comment-15648238",
            "author": "ASF subversion and git services",
            "date": "2016-11-08T17:45:53+0000",
            "content": "Commit 750da7c5f7af74f2d9db36265639d7ae9dc9e4eb in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=750da7c ]\n\nLUCENE-7431: SpanNotQuery should support negative pre/post distance for overlap "
        },
        {
            "id": "comment-15648243",
            "author": "ASF subversion and git services",
            "date": "2016-11-08T17:47:20+0000",
            "content": "Commit 55ed23168f6367e99b7d55fb63c7fa227aafa790 in lucene-solr's branch refs/heads/branch_6x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=55ed231 ]\n\nLUCENE-7431: SpanNotQuery should support negative pre/post distance for overlap\n\n(cherry picked from commit 750da7c) "
        },
        {
            "id": "comment-15648246",
            "author": "David Smiley",
            "date": "2016-11-08T17:48:04+0000",
            "content": "Thanks Marc! "
        },
        {
            "id": "comment-15648417",
            "author": "Marc Morissette",
            "date": "2016-11-08T18:45:38+0000",
            "content": "Thanks David! "
        }
    ]
}