{
    "id": "SOLR-9981",
    "title": "Multiple analytics fixes/performance improvements",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "Included are the following improvements/fixes:\n\n\n\tImproving the unit test case.\n\tPerformance fix that stops the reading of ALL lucene segments over and again for each stats collector.\n\t\n\t\tThe AtomicReaderContext that refers to the \"current \" segment is reused.\n\t\tThis fix shows an improvement of about 25% in query time for a dataset of ~10M (=9.8M) records.\n\t\tGiven the nature of the fix, the improvement should get better as the dataset increases.\n\t\n\t\n\tFix for the NPE during comparison",
    "attachments": {
        "SOLR-9983.patch": "https://issues.apache.org/jira/secure/attachment/12848132/SOLR-9983.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-25T01:43:06+0000",
            "content": "Commit a5dce163eb09dcc0eb7f7eb81d692bf3d19964a3 in lucene-solr's branch refs/heads/master from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a5dce16 ]\n\nSOLR-9981: Performance improvements and bug fixes for the Analytics component ",
            "author": "ASF subversion and git services",
            "id": "comment-16062186"
        },
        {
            "date": "2017-06-25T02:01:05+0000",
            "content": "Commit e8057309b90db0c79fc273e2284948b84c16ce4c in lucene-solr's branch refs/heads/master from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e805730 ]\n\nSOLR-9981: Fixes precommit error in test file ",
            "author": "ASF subversion and git services",
            "id": "comment-16062189"
        },
        {
            "date": "2017-06-26T14:39:28+0000",
            "content": "My Jenkins found a reproducing RangeFacetTest failure that git bisect blames on commit a5dce163 on this issue:\n\n\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {long_ld=PostingsFormat(name=Memory), date_dtd=PostingsFormat(name=Memory), string_sd=PostingsFormat(name=Memory), int_id=PostingsFormat(name=Memory), id=PostingsFormat(name=Memory), double_dd=PostingsFormat(name=LuceneVarGapFixedInterval), float_fd=Lucene50(blocksize=128)}, docValues:{date_dtd=DocValuesFormat(name=Lucene70), doubledv=DocValuesFormat(name=Lucene70), string_sd=DocValuesFormat(name=Lucene70), float_fd=DocValuesFormat(name=Asserting), datedv=DocValuesFormat(name=Lucene70), long_ld=DocValuesFormat(name=Lucene70), longdv=DocValuesFormat(name=Direct), intdv=DocValuesFormat(name=Asserting), int_id=DocValuesFormat(name=Lucene70), id=DocValuesFormat(name=Lucene70), stringdvm=DocValuesFormat(name=Direct), double_dd=DocValuesFormat(name=Direct), stringdv=DocValuesFormat(name=Lucene70), floatdv=DocValuesFormat(name=Direct)}, maxPointsInLeafNode=612, maxMBSortInHeap=5.372483856458917, sim=RandomSimilarity(queryNorm=true): {}, locale=ar-EG, timezone=Africa/Malabo\n   [junit4]   2> NOTE: Linux 4.1.0-custom2-amd64 amd64/Oracle Corporation 1.8.0_77 (64-bit)/cpus=16,threads=1,free=213293520,total=372768768\n   [junit4]   2> NOTE: All tests run in this JVM: [FieldFacetExtrasTest, RangeFacetTest]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=RangeFacetTest -Dtests.seed=80EA8C5FB908AD34 -Dtests.slow=true -Dtests.locale=ar-EG -Dtests.timezone=Africa/Malabo -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   0.00s J2 | RangeFacetTest (suite) <<<\n   [junit4]    > Throwable #1: java.lang.IllegalArgumentException: docs were sent out-of-order: lastDocID=99 vs docID=5\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([80EA8C5FB908AD34]:0)\n   [junit4]    > \tat org.apache.lucene.queries.function.valuesource.IntFieldSource$1.getValueForDoc(IntFieldSource.java:62)\n   [junit4]    > \tat org.apache.lucene.queries.function.valuesource.IntFieldSource$1.access$000(IntFieldSource.java:57)\n   [junit4]    > \tat org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1.fillValue(IntFieldSource.java:104)\n   [junit4]    > \tat org.apache.solr.analytics.statistics.MinMaxStatsCollector.collect(MinMaxStatsCollector.java:68)\n   [junit4]    > \tat org.apache.solr.analytics.statistics.NumericStatsCollector.collect(NumericStatsCollector.java:40)\n   [junit4]    > \tat org.apache.solr.analytics.statistics.AbstractDelegatingStatsCollector.collect(AbstractDelegatingStatsCollector.java:68)\n   [junit4]    > \tat org.apache.solr.analytics.statistics.MedianStatsCollector.collect(MedianStatsCollector.java:57)\n   [junit4]    > \tat org.apache.solr.analytics.accumulator.FacetingAccumulator.collectRange(FacetingAccumulator.java:260)\n   [junit4]    > \tat org.apache.solr.analytics.accumulator.facet.RangeFacetAccumulator.collect(RangeFacetAccumulator.java:38)\n   [junit4]    > \tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:233)\n   [junit4]    > \tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:184)\n   [junit4]    > \tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39)\n   [junit4]    > \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:658)\n   [junit4]    > \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:462)\n   [junit4]    > \tat org.apache.solr.analytics.accumulator.FacetingAccumulator.processRangeFacets(FacetingAccumulator.java:741)\n   [junit4]    > \tat org.apache.solr.analytics.accumulator.FacetingAccumulator.postProcess(FacetingAccumulator.java:580)\n   [junit4]    > \tat org.apache.solr.analytics.request.AnalyticsStats.execute(AnalyticsStats.java:127)\n   [junit4]    > \tat org.apache.solr.handler.component.AnalyticsComponent.process(AnalyticsComponent.java:45)\n   [junit4]    > \tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:295)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:178)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2473)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:337)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:319)\n   [junit4]    > \tat org.apache.solr.analytics.facet.RangeFacetTest.beforeClass(RangeFacetTest.java:115)\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16063180"
        },
        {
            "date": "2017-06-26T14:41:50+0000",
            "content": "Another reproducing failure from ASF Jenkins https://builds.apache.org/job/Lucene-Solr-Tests-master/1905/:\n\n\nChecking out Revision e8057309b90db0c79fc273e2284948b84c16ce4c (refs/remotes/origin/master)\n[...]\n   [junit4]   2> NOTE: test params are: codec=FastCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=FAST, chunkSize=26330, maxDocsPerChunk=8, blockSize=4), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=FAST, chunkSize=26330, blockSize=4)), sim=RandomSimilarity(queryNorm=true): {}, locale=ar-TN, timezone=Australia/LHI\n   [junit4]   2> NOTE: Linux 3.13.0-88-generic amd64/Oracle Corporation 1.8.0_131 (64-bit)/cpus=4,threads=1,free=202540112,total=274202624\n   [junit4]   2> NOTE: All tests run in this JVM: [FieldFacetTest, AbstractAnalyticsFacetTest, RangeFacetTest]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=RangeFacetTest -Dtests.seed=9788CAF3BA815B0C -Dtests.multiplier=2 -Dtests.slow=true -Dtests.locale=ar-TN -Dtests.timezone=Australia/LHI -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.00s J0 | RangeFacetTest (suite) <<<\n   [junit4]    > Throwable #1: java.lang.IllegalArgumentException: docs were sent out-of-order: lastDocID=99 vs docID=5\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([9788CAF3BA815B0C]:0)\n   [junit4]    > \tat org.apache.lucene.queries.function.valuesource.IntFieldSource$1.getValueForDoc(IntFieldSource.java:62)\n   [junit4]    > \tat org.apache.lucene.queries.function.valuesource.IntFieldSource$1.access$000(IntFieldSource.java:57)\n   [junit4]    > \tat org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1.fillValue(IntFieldSource.java:104)\n   [junit4]    > \tat org.apache.solr.analytics.statistics.MinMaxStatsCollector.collect(MinMaxStatsCollector.java:68)\n   [junit4]    > \tat org.apache.solr.analytics.statistics.NumericStatsCollector.collect(NumericStatsCollector.java:40)\n   [junit4]    > \tat org.apache.solr.analytics.statistics.AbstractDelegatingStatsCollector.collect(AbstractDelegatingStatsCollector.java:68)\n   [junit4]    > \tat org.apache.solr.analytics.statistics.MedianStatsCollector.collect(MedianStatsCollector.java:57)\n   [junit4]    > \tat org.apache.solr.analytics.accumulator.FacetingAccumulator.collectRange(FacetingAccumulator.java:260)\n   [junit4]    > \tat org.apache.solr.analytics.accumulator.facet.RangeFacetAccumulator.collect(RangeFacetAccumulator.java:38)\n   [junit4]    > \tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:233)\n   [junit4]    > \tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:184)\n   [junit4]    > \tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39)\n   [junit4]    > \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:658)\n   [junit4]    > \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:462)\n   [junit4]    > \tat org.apache.solr.analytics.accumulator.FacetingAccumulator.processRangeFacets(FacetingAccumulator.java:741)\n   [junit4]    > \tat org.apache.solr.analytics.accumulator.FacetingAccumulator.postProcess(FacetingAccumulator.java:580)\n   [junit4]    > \tat org.apache.solr.analytics.request.AnalyticsStats.execute(AnalyticsStats.java:127)\n   [junit4]    > \tat org.apache.solr.handler.component.AnalyticsComponent.process(AnalyticsComponent.java:45)\n   [junit4]    > \tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:295)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:178)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2473)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:337)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:319)\n   [junit4]    > \tat org.apache.solr.analytics.facet.RangeFacetTest.beforeClass(RangeFacetTest.java:115)\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16063184"
        },
        {
            "date": "2017-06-26T14:44:30+0000",
            "content": "Thanks Steve Rowe. Houston is taking a look. All tests passed when I ran with this patch on Saturday. Perhaps related to a seed choice. ",
            "author": "Dennis Gove",
            "id": "comment-16063187"
        },
        {
            "date": "2017-06-26T17:16:55+0000",
            "content": "I think it has to do with re-using DocValues reader. The component is trying to read the documents as they are returned by the searcher, however the documents may not be in ascending order. This is probably fixed by the searcher giving the component a new TreeLeafReaderContext, but since we reuse a context when the same one is sent to us it is never \"refreshed\". If a \"refresh\" resets the last document read, then we are never resetting the last docID.\n\nWe would have to remove the context state saving class in the statistic collector classes to fix this.\n\nHowever we are replacing this whole component with the second generation, and this code will no longer be used. So fixing it isn't really necessary. ",
            "author": "Houston Putman",
            "id": "comment-16063441"
        },
        {
            "date": "2017-06-26T17:42:37+0000",
            "content": "However we are replacing this whole component with the second generation, and this code will no longer be used. So fixing it isn't really necessary.\n\nMaybe revert the commits on this issue then, given that it causes reproducible failures? ",
            "author": "Steve Rowe",
            "id": "comment-16063489"
        },
        {
            "date": "2017-06-26T17:59:18+0000",
            "content": "I am going to revert this change. ",
            "author": "Dennis Gove",
            "id": "comment-16063516"
        },
        {
            "date": "2017-06-26T21:33:44+0000",
            "content": "Commit 288ab09ceb913ce4784f8943a31f9bf1902c8bec in lucene-solr's branch refs/heads/master from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=288ab09 ]\n\nRevert \"SOLR-9981: Fixes precommit error in test file\"\n\nThis reverts commit e8057309b90db0c79fc273e2284948b84c16ce4c. ",
            "author": "ASF subversion and git services",
            "id": "comment-16063832"
        },
        {
            "date": "2017-06-26T21:33:45+0000",
            "content": "Commit bee8d7ccb32bc23bd808f729493631b60a64bffb in lucene-solr's branch refs/heads/master from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bee8d7c ]\n\nRevert \"SOLR-9981: Performance improvements and bug fixes for the Analytics component\"\n\nThis reverts commit a5dce163eb09dcc0eb7f7eb81d692bf3d19964a3. ",
            "author": "ASF subversion and git services",
            "id": "comment-16063833"
        },
        {
            "date": "2017-06-26T21:43:55+0000",
            "content": "Closing as no fix as this is being dealt with in SOLR-10123. ",
            "author": "Dennis Gove",
            "id": "comment-16063847"
        }
    ]
}