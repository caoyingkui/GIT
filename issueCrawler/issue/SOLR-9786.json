{
    "id": "SOLR-9786",
    "title": "Defer creation of clauses in parser, optionally delegate groups to FieldType.getSetQuery",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.4",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Solr's query parser currently creates a query for each clause it sees independently.  This is no longer desirable, since if we are creating a filter (non-scoring query), we can use a TermsQuery.\n\nPointFields SOLR-8396 also need to see a set of values together to efficiently create a set query.\n\nThis issue:\n\n\tadds context for the parser to know when it's parsing a query for matching only  (that's only for the TermsQuery... I assume Points would always use a set query when passed multiple values)\n\tdefers creation of real Query objects for simple term queries in a boolean query\n\taggregates those values by field at the end to be passed to a new FieldType.getSetQuery method\n\tFieldType.getSetQuery base implementation uses TermsQuery for indexed fields",
    "attachments": {
        "SOLR-9786.patch": "https://issues.apache.org/jira/secure/attachment/12839809/SOLR-9786.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-11-21T15:10:24+0000",
            "author": "Yonik Seeley",
            "content": "Draft patch attached.\n\nI also plan on doing some benchmarking of query parsing to ensure we're not slowing anything down too much. ",
            "id": "comment-15683811"
        },
        {
            "date": "2016-11-22T04:45:53+0000",
            "author": "David Smiley",
            "content": "This is no longer desirable\n\nThat wording suggests to me there was some change to something that made the current code inefficient... but my understanding here is instead this is really just an optimization that could have actually been added a long time ago (remember TermsFilter, the Solr 4 version of TermsQuery).  Right?\n\nI noticed the QParser.setIsFilter this patch added.  This addresses an old issue I filed: SOLR-2883   What do you think of the local-params approach suggested there? ",
            "id": "comment-15685685"
        },
        {
            "date": "2016-11-22T05:19:21+0000",
            "author": "Yonik Seeley",
            "content": "\n> This is no longer desirable\nThat wording suggests to me there was some change to something that made the current code inefficient... but my understanding here is instead this is really just an optimization that could have actually been added a long time ago\n\nI was speaking from the perspective of when the QueryParser was first created... there was no reason to not just immediately create a query for each clause.  Compared to now, when we have query types that can do set queries more efficiently.\n\nSOLR-2883 What do you think of the local-params approach suggested there?\n\nIf we needed a local param for it, that could set the right flag.  But I'm not sure it is needed?   filter queries should always ignore scores, and in a relevance query, one can always use something like filter().  Ultimately I think this should be an input to the qparser constructor... but that can probably wait for some refactoring when JSON query parsing comes along in an integrated form with QParsers. ",
            "id": "comment-15685734"
        },
        {
            "date": "2016-11-22T14:52:41+0000",
            "author": "Yonik Seeley",
            "content": "Patch w/ tests ",
            "id": "comment-15686941"
        },
        {
            "date": "2016-11-22T17:33:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bf9db95f218f49bac8e7971eb953a9fd9d13a2f0 in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bf9db95 ]\n\nSOLR-9786: FieldType.getSetQuery, QParser.flags/isFilter, solr query parser use getSetQuery when appropriate and other optimizations ",
            "id": "comment-15687356"
        },
        {
            "date": "2016-11-22T17:54:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9f24c4b59a89bb1d42b2e93abbcfb4076777e321 in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9f24c4b ]\n\nSOLR-9786: FieldType.getSetQuery, QParser.flags/isFilter, solr query parser use getSetQuery when appropriate and other optimizations ",
            "id": "comment-15687412"
        },
        {
            "date": "2016-11-22T18:54:06+0000",
            "author": "Yonik Seeley",
            "content": "I maded the isFilter + flags stuff on the QParser to be experimental so we still have flexibility to change it later. ",
            "id": "comment-15687554"
        },
        {
            "date": "2016-11-22T21:30:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3b4cc1bd1f691446008e2947e71ce0d3bc4e91ef in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3b4cc1b ]\n\nSOLR-9786: set filter flag for more parsers ",
            "id": "comment-15687955"
        },
        {
            "date": "2016-11-22T21:30:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e7aa0e4ce4283cc7ff535111c03830adb80da990 in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e7aa0e4 ]\n\nSOLR-9786: set filter flag for more parsers ",
            "id": "comment-15687957"
        },
        {
            "date": "2016-11-23T03:44:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7e6e68900b8ef4199f6cee6b262544ccab0c9294 in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7e6e689 ]\n\nSOLR-9786: set filter for join query parser ",
            "id": "comment-15688792"
        },
        {
            "date": "2016-11-23T03:45:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9a980833dff47fdba003b9d5bcf4a2836f4f0c8b in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9a98083 ]\n\nSOLR-9786: set filter for join query parser ",
            "id": "comment-15688794"
        },
        {
            "date": "2017-01-17T15:20:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7d7e5d2246d69843f259b9815332a24dc621d9e7 in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7d7e5d2 ]\n\nSOLR-9786: additional test related to TermInSetQuery now requiring all terms in same field ",
            "id": "comment-15826195"
        },
        {
            "date": "2017-01-17T15:27:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3c2e8f996f81af1b7611e77ad040e33fddf80ab0 in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3c2e8f9 ]\n\nSOLR-9786: additional test related to TermInSetQuery now requiring all terms in same field ",
            "id": "comment-15826201"
        },
        {
            "date": "2017-07-20T18:06:43+0000",
            "author": "Hoss Man",
            "content": "Bulk editing 27 jiras matching the following JQL query to include the \"numeric-tries-to-points label...\n\n\n(issue in linkedIssues(SOLR-10807) OR issue in linkedIssues(SOLR-8396) OR issue in linkedIssues(SOLR-9995)) AND project = SOLR AND status != CLOSED\n\n\n\nthese 27 jiras can be identified by searching for the comment string \"20170720hossbulkeditlabel\"\n\nemail notification is being suppressed. ",
            "id": "comment-16095104"
        },
        {
            "date": "2018-09-07T22:03:53+0000",
            "author": "Varun Thacker",
            "content": "I was trying to find this Jira to see what version was this fixed in. Then I got curious to see how it's implemented and I had a question about this one line\u00a0\n\npublic static final int TERMS_QUERY_THRESHOLD = 16;   // @lucene.internal Set to a low value temporarily for better test coverage\n\nIs 16 still supposed to be the threshold ? I don't have a sense as to what's a good/bad number but thought I'd point it out anyways ",
            "id": "comment-16607716"
        }
    ]
}