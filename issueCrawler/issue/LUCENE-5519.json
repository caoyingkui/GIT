{
    "id": "LUCENE-5519",
    "title": "Make queueDepth enforcing optional in TopNSearcher",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/FSTs"
        ],
        "affect_versions": "4.7",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ]
    },
    "description": "currently TopNSearcher enforces the maxQueueSize based on rejectedCount + topN. I have a usecase where I just simply don't know the exact limit and I am ok with a top N that is not 100% exact. Yet, if I don't specify the right upper limit for the queue size I get an assertion error when I run tests but the only workaround it to make the queue unbounded which looks odd while it would possibly work just fine. I think it's fair to add an option that just doesn't enforce the limit and if it shoudl be enforced we throw a real exception.",
    "attachments": {
        "LUCENE-5519.patch": "https://issues.apache.org/jira/secure/attachment/12634004/LUCENE-5519.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13930930",
            "author": "Simon Willnauer",
            "content": "here is a patch ",
            "date": "2014-03-11T20:50:34+0000"
        },
        {
            "id": "comment-13930943",
            "author": "Robert Muir",
            "content": "Another option might be to return a boolean in the MinResult indicating if the top-N is \"complete\" ?\n\nThis way the caller could do whatever they want.\n\nBut the current assert is bogus  ",
            "date": "2014-03-11T20:55:32+0000"
        },
        {
            "id": "comment-13930950",
            "author": "Simon Willnauer",
            "content": "yeah I like the `isPartial=True|False` idea... the caller can decide what todo and possibly assert there if needed. I will crank out another patch (I guess tomorrow) ",
            "date": "2014-03-11T21:02:18+0000"
        },
        {
            "id": "comment-13931049",
            "author": "Michael McCandless",
            "content": "+1 to return a boolean, just make sure the existing tests using this do the assert on that returned boolean; else, it means there's a serious bug (the search pruning is not admissible).\n\nCan we make the boolean isComplete?  Ie, it returns true if no truncation happened? ",
            "date": "2014-03-11T22:15:14+0000"
        },
        {
            "id": "comment-13931660",
            "author": "Simon Willnauer",
            "content": "next iteration... I added a new class TopResults that encodes the info if it's complete or not and added asssertions where appropriate. ",
            "date": "2014-03-12T11:35:58+0000"
        },
        {
            "id": "comment-13931678",
            "author": "Michael McCandless",
            "content": "Hmm, I don't like that we pre-allocate the full array[topN] here.  Can we just use a List<X> for the input/output pairs?  Or maybe just to back to List<MinResult>?\n\nIt's also sort of strange to have spaceNeeded/isFull methods: it makes this class more like a queue and less like a set of final results.  I'd prefer if it were more like TopDocs: its purpose is to simply deliver results.  I think those methods/queue state tracking should be outside of that class.\n ",
            "date": "2014-03-12T12:01:48+0000"
        },
        {
            "id": "comment-13931882",
            "author": "Simon Willnauer",
            "content": "here is a new patch moving closer to TopDocs again.I don't use an array in the TopResults since it's a pretty useless conversion and I implemented Iterable such that we can directly use it in a foreach loop.  I think it's ready.  ",
            "date": "2014-03-12T15:42:48+0000"
        },
        {
            "id": "comment-13931981",
            "author": "Michael McCandless",
            "content": "+1, looks great.  Thanks Simon! ",
            "date": "2014-03-12T16:52:54+0000"
        },
        {
            "id": "comment-13932034",
            "author": "ASF subversion and git services",
            "content": "Commit 1576825 from Simon Willnauer in branch 'dev/trunk'\n[ https://svn.apache.org/r1576825 ]\n\nLUCENE-5519: Make queueDepth enforcing optional in TopNSearcher ",
            "date": "2014-03-12T17:20:48+0000"
        },
        {
            "id": "comment-13932210",
            "author": "ASF subversion and git services",
            "content": "Commit 1576860 from Simon Willnauer in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1576860 ]\n\nLUCENE-5519: Make queueDepth enforcing optional in TopNSearcher ",
            "date": "2014-03-12T19:05:06+0000"
        },
        {
            "id": "comment-13932999",
            "author": "ASF subversion and git services",
            "content": "Commit 1577062 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1577062 ]\n\nLUCENE-5519: Fix generics ",
            "date": "2014-03-13T08:34:53+0000"
        },
        {
            "id": "comment-13933000",
            "author": "ASF subversion and git services",
            "content": "Commit 1577063 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1577063 ]\n\nMerged revision(s) 1577062 from lucene/dev/trunk:\nLUCENE-5519: Fix generics ",
            "date": "2014-03-13T08:35:51+0000"
        },
        {
            "id": "comment-13982586",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:25:49+0000"
        }
    ]
}