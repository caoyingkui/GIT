{
    "id": "SOLR-12993",
    "title": "Split the state.json into 2. a small frequently modified data + a large unmodified data",
    "details": {
        "type": "Improvement",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "This a just a proposal to minimize the ZK load and improve scalability of very large clusters.\n\nEvery time a small state change occurs for a collection/replica the following file needs to be updated + read * n times (where n = no of replicas for this collection ). The proposal is to split the main file into 2.\n\n{\"gettingstarted\":{\n    \"pullReplicas\":\"0\",\n    \"replicationFactor\":\"2\",\n    \"router\":{\"name\":\"compositeId\"},\n    \"maxShardsPerNode\":\"-1\",\n    \"autoAddReplicas\":\"false\",\n    \"nrtReplicas\":\"2\",\n    \"tlogReplicas\":\"0\",\n    \"shards\":{\n      \"shard1\":{\n        \"range\":\"80000000-ffffffff\",\n      \n        \"replicas\":{\n          \"core_node3\":{\n            \"core\":\"gettingstarted_shard1_replica_n1\",\n            \"base_url\":\"http://10.0.0.80:8983/solr\",\n            \"node_name\":\"10.0.0.80:8983_solr\",\n            \"state\":\"active\",\n            \"type\":\"NRT\",\n            \"force_set_state\":\"false\",\n            \"leader\":\"true\"},\n          \"core_node5\":{\n            \"core\":\"gettingstarted_shard1_replica_n2\",\n            \"base_url\":\"http://10.0.0.80:7574/solr\",\n            \"node_name\":\"10.0.0.80:7574_solr\",\n         \n            \"type\":\"NRT\",\n            \"force_set_state\":\"false\"}}},\n      \"shard2\":{\n        \"range\":\"0-7fffffff\",\n        \"state\":\"active\",\n        \"replicas\":{\n          \"core_node7\":{\n            \"core\":\"gettingstarted_shard2_replica_n4\",\n            \"base_url\":\"http://10.0.0.80:7574/solr\",\n            \"node_name\":\"10.0.0.80:7574_solr\",\n           \n            \"type\":\"NRT\",\n            \"force_set_state\":\"false\"},\n          \"core_node8\":{\n            \"core\":\"gettingstarted_shard2_replica_n6\",\n            \"base_url\":\"http://10.0.0.80:8983/solr\",\n            \"node_name\":\"10.0.0.80:8983_solr\",\n         \n            \"type\":\"NRT\",\n            \"force_set_state\":\"false\",\n            \"leader\":\"true\"}}}}}}\n\n\nanother file status.json which is frequently updated and small.\n\n{\n    \"shard1\": {\n      \"state\": \"ACTIVE\",\n      \"core_node3\": {\"state\": \"active\", \"leader\" : true},\n      \"core_node5\": {\"state\": \"active\"}\n    },\n    \"shard2\": {\n      \"state\": \"active\",\n      \"core_node7\": {\"state\": \"active\"},\n      \"core_node8\": {\"state\": \"active\", \"leader\" : true}}\n  }\n\n\nHere the size of the file is roughly one tenth of the other file. This leads to a dramatic reduction in the amount of data written/read to/from ZK.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16692830",
            "content": "What parts of state would be kept in the new file? I would think the replica / shard \"state\", LIR term and \"leader\" flags would be good candidates - but the example above is not clear, \"state\" and \"status\" occur in both and seem to indicate the same thing. ",
            "author": "Andrzej Bialecki",
            "date": "2018-11-20T08:27:20+0000"
        },
        {
            "id": "comment-16692886",
            "content": "Yeah, the example had it wrong. I just corrected\n\nI would think the replica / shard \"state\", LIR term and \"leader\" flags would be good candidates\n\nYes, both are suitable candidates. We can get rid of the LIR term directory altogether\n\nor alternately we can just add this data (status, leader) to the LIR term files . That way , we don't need to create any new files ",
            "author": "Noble Paul",
            "date": "2018-11-20T09:07:00+0000"
        }
    ]
}