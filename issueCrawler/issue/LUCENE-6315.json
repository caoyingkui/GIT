{
    "id": "LUCENE-6315",
    "title": "Simplify custom Term iterator used to resolve deletions",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "In LUCENE-6161 we added yet-another-term-iterator ... this patch tries to simplify that by re-using the existing BytesRefIterator instead.",
    "attachments": {
        "LUCENE-6315.patch": "https://issues.apache.org/jira/secure/attachment/12701686/LUCENE-6315.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14342102",
            "author": "Michael McCandless",
            "date": "2015-03-01T09:50:40+0000",
            "content": "Patch, cutting over the package-private FieldTermIterator to a BytesRefIterator. "
        },
        {
            "id": "comment-14489719",
            "author": "Adrien Grand",
            "date": "2015-04-10T14:43:16+0000",
            "content": "I like merging these iterators but the API still feels a bit weird to me (the field() part in particular). I wish we could reuse Fields/Terms but it doesn't look possible given that fields are not known in advance. So I think we should commit this patch. The FieldTermIterator.field() documentation says that it will return \n{@code null}\n if iteration is finished, should we rather say that the behaviour of this method is unspecified after iteration is finished? "
        },
        {
            "id": "comment-14489729",
            "author": "Robert Muir",
            "date": "2015-04-10T14:52:43+0000",
            "content": "Hi Mike, I missed this refactoring. This is an improvement +1 "
        },
        {
            "id": "comment-14489754",
            "author": "Michael McCandless",
            "date": "2015-04-10T15:10:20+0000",
            "content": "Thanks guys.\n\nThe FieldTermIterator.field() documentation says that it will return {@code null} if iteration is finished, should we rather say that the behaviour of this method is unspecified after iteration is finished?\n\n+1, that's a leftover ... I'll fix it. "
        },
        {
            "id": "comment-14489970",
            "author": "ASF subversion and git services",
            "date": "2015-04-10T17:33:35+0000",
            "content": "Commit 1672710 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1672710 ]\n\nLUCENE-6315: simplify the private iterator Lucene uses when resolving deleted terms -> docids "
        },
        {
            "id": "comment-14490000",
            "author": "ASF subversion and git services",
            "date": "2015-04-10T17:53:20+0000",
            "content": "Commit 1672713 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1672713 ]\n\nLUCENE-6315: simplify the private iterator Lucene uses when resolving deleted terms -> docids "
        },
        {
            "id": "comment-14713273",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:06:16+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}