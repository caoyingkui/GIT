{
    "id": "SOLR-10962",
    "title": "replicationHandler's reserveCommitDuration configurable in SolrCloud mode",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "replication (java)"
        ],
        "type": "New Feature",
        "fix_versions": [
            "7.1",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "With SolrCloud mode, when doing replication via IndexFetcher, we occasionally see the Fetch fail and then get restarted from scratch in cases where an Index file is deleted after fetch manifest is computed and before the fetch actually transfers the file. The risk of this happening can be reduced with a higher value of reserveCommitDuration. However, the current configuration only allows this value to be adjusted for \"master\" mode. This change allows the value to also be changed when using \"SolrCloud\" mode.\n\nhttps://lucene.apache.org/solr/guide/6_6/index-replication.html",
    "attachments": {
        "SOLR-10962.patch": "https://issues.apache.org/jira/secure/attachment/12874671/SOLR-10962.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-27T11:48:28+0000",
            "content": "\n\nAt present we can have a master or a slave or master and slave sections in the request handler configuration i.e.\n\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n  <lst name=\"master\">\n    <str name=\"commitReserveDuration\">...</str>\n    ...\n  </lst>\n</requestHandler>\n\n\n\nor\n\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n  <lst name=\"slave\">\n    ...\n  </lst>\n</requestHandler>\n\n\n\nor\n\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n  <lst name=\"master\">\n    <str name=\"commitReserveDuration\">...</str>\n    ...\n  </lst>\n  <lst name=\"slave\">\n    ...\n  </lst>\n</requestHandler>\n\n\n\nand with the addition of a cloud section the number of (valid and invalid) combinations of sections would increase.\n\nInstead of a new cloud section\n\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n  <lst name=\"cloud\">\n    <str name=\"commitReserveDuration\">...</str>\n  </lst>\n</requestHandler>\n\n\n\nwith (for now) just the one commitReserveDuration element, how about making commitReserveDuration a top-level element i.e. in cloud mode\n\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n  <str name=\"commitReserveDuration\">...</str>\n</requestHandler>\n\n\n\nand\n\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n  <str name=\"commitReserveDuration\">...</str>\n  <lst name=\"master\">\n    ...\n  </lst>\n  ...\n</requestHandler>\n\n\n\nin other modes?\n\nmaster.commitReserveDuration would be supported but deprecated for a transition period and eventually it would go away. ",
            "author": "Christine Poerschke",
            "id": "comment-16064688"
        },
        {
            "date": "2017-06-28T15:48:34+0000",
            "content": "While I was initially trying to mimic the old structure, I agree that it is better to move to what Christine suggests.\n\nHere is the fixed patch. ",
            "author": "Ramsey Haddad",
            "id": "comment-16066745"
        },
        {
            "date": "2017-06-28T17:49:39+0000",
            "content": "Thanks Ramsey for the changed patch!\n\nAttaching slightly revised patch as follows:\n\n\talways read-and-log the commitReserveDuration (if it's read and logged but not otherwise used in slave mode then so be it?)\n\tflag master.commitReserveDuration up as deprecated and throw exception if both the deprecated master.commitReserveDuration and the top-level commitReserveDuration are configured\n\tupdated docs to reflect (in text and example) that master.commitReserveDuration is deprecated in favour of commitReserveDuration\n\tadjusted existing-but-relocated commitReserveDuration description wording to avoid mention of 5Mb (anyone know how/where the 5Mb fits into the ReplicationHandler? couldn't find anything obvious from quick look around.)\n\n ",
            "author": "Christine Poerschke",
            "id": "comment-16066940"
        },
        {
            "date": "2017-06-29T17:26:52+0000",
            "content": "precommit and solr core tests pass. I think this is good to go but would appreciate further pairs of eyes on this since the change concerns a long established config element.\n\nReplication was added by SOLR-561 in 2008, Shalin Shekhar Mangar - any thoughts?\n\nHoss Man - you're always good and watchful w.r.t. config deprecation issues - do you think the proposed route to add a top-level commitReserveDuration element and to deprecate the master.commitReserveDuration sub-element makes sense? ",
            "author": "Christine Poerschke",
            "id": "comment-16068662"
        },
        {
            "date": "2017-06-29T19:01:23+0000",
            "content": "i'm not really familiar with this code \u2013 so i'm making an assumption based on trust in christine that the entire premise of this issue makes sense.  Based on that assumption and a quick skim of the patch, i think the overall approach is sound, but frankly I think the LOG.warn(\"Beginning with Solr 7.0... line is too weak, and should be something like...\n\n\n// remove this error check & backcompat logic when Version.LUCENE_7_0_0 is removed\nConfig.assertWarnOrFail(\n  \"Begining with Solr 7.0, master.\"+RESERVE + \" is deprecated and should now be configured directly on the ReplicationHandler\",\n  (null == reserve),\n  core.solrConfig.luceneMatchVersion.onOrAfter(Version.LUCENE_7_0_0));\n\n\n\nthat way:\n\n\tanyone starting with a clean (example) config will get an error if they try to use the old sytnax\n\tanyone upgrading with an old config will just get a warning - until/unless they change the <luceneMatchVersion/> in their solrconfig.xml t which point they must also change this\n\tonce LUCENE_7_0_0 is removed from the code base, this error handling will stop compiling and we'll get a built in reminder that this special error checking (and the back compat code wrapped around it) can be removed.\n\n\n\n(this pattern is is entire point of assertWarnOrFail) ",
            "author": "Hoss Man",
            "id": "comment-16068795"
        },
        {
            "date": "2017-06-29T19:12:11+0000",
            "content": "Although from a solrconfig.xml perspective, moving commitReserveDuration to a top-level attribute for ReplicationHandler is fine, I prefer that we do not force users to add these configurations in solrconfig.xml and instead use a well-known name in Config API to update these settings in the same way that we can update autoCommit.maxTime etc. Editing solrconfig.xml by hand should never be the answer to solve configurability in SolrCloud going forward. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16068808"
        },
        {
            "date": "2017-06-30T14:52:51+0000",
            "content": "Thanks for suggesting the core.solrConfig.luceneMatchVersion.onOrAfter(Version.LUCENE_7_0_0) clause, that totally makes sense.\n\n... a well-known name in Config API to update these settings in the same way that we can update autoCommit.maxTime etc. ...\n\nGood idea, let's explore that.\n\nThe replication handler already has an existing top-level attribute maxNumberOfBackups - presumably that would transition over to Config API at the same time as the (currently not top-level) reserveCommitDuration attribute. ",
            "author": "Christine Poerschke",
            "id": "comment-16070214"
        },
        {
            "date": "2017-07-04T13:28:42+0000",
            "content": "This patch takes Christine Poerschke's patch and adds Hoss Man's suggestion.\nI will look into Shalin Shekhar Mangar's suggestion within the next week. ",
            "author": "Ramsey Haddad",
            "id": "comment-16073664"
        },
        {
            "date": "2017-07-12T14:12:32+0000",
            "content": "Here is what this looks like using the Config API.\n\nWe initially tried to convert all the controls for ReplicationHandler, but it became too much of a mess.\n\n\tpartly messy because the args passed onto IndexFetcher can come from two places\n\tpartly because of the work to put in backward compatibility warnings\nSo we only changed what we need at the moment.\n\n\n\nWe ended up partitioning the Info structure work between SolrConfig and *Handler in a different way than UpdateHandler, because:\n\n\twe wanted to still allow the legacy default \"00:00:10\" behavior\n\twe wanted to keep various ReplicationHandler details local to that class\n\n\n\nAlso, since the internals work in MilliSeconds, we thought it simpler to expose that to the user. ",
            "author": "Ramsey Haddad",
            "id": "comment-16084039"
        },
        {
            "date": "2017-08-02T08:28:46+0000",
            "content": "Here is the Config API patch updated because of the int=>Long change in SOLR-11052 ",
            "author": "Ramsey Haddad",
            "id": "comment-16110520"
        },
        {
            "date": "2017-09-11T22:19:33+0000",
            "content": "Just returning to this and attaching refreshed version of the July 4th patch (which does not include the Config API configurability).\n\nThanks Ramsey for creating a patch which includes Config API support. Config API support only for the reserveCommitDuration setting since as you mention there are difficulties in supporting all ReplicationHandler settings.\n\nFrom a user's perspective I think it would be confusing to have some but not all ReplicationHandler settings configurable via the Config API. What do others think?\n\nIf there are no further comments/concerns/objections then I'd like to proceed to commit today's patch some time next week i.e. in the week starting Sept. 18th. ",
            "author": "Christine Poerschke",
            "id": "comment-16162131"
        },
        {
            "date": "2017-09-21T17:03:05+0000",
            "content": "Commit 56b8ad2f081e1e7d51e7c97fcbd1f0fbfdf07c98 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=56b8ad2 ]\n\nSOLR-10962: Make ReplicationHandler's commitReserveDuration configurable in SolrCloud mode.\n(Ramsey Haddad, Christine Poerschke, hossman) ",
            "author": "ASF subversion and git services",
            "id": "comment-16175110"
        },
        {
            "date": "2017-09-21T17:07:43+0000",
            "content": "Ran precommit and solr/core tests. Committed to master branch today and planning to cherry-pick to branch_7x in a couple of days.\n\n(Any further post-commit comments and input welcome as usual. Thank you.) ",
            "author": "Christine Poerschke",
            "id": "comment-16175119"
        },
        {
            "date": "2017-09-25T16:49:45+0000",
            "content": "Commit 20f1e633eff373d04aad65e8d7f13fa37194b32a in lucene-solr's branch refs/heads/branch_7x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=20f1e63 ]\n\nSOLR-10962: Make ReplicationHandler's commitReserveDuration configurable in SolrCloud mode.\n(Ramsey Haddad, Christine Poerschke, hossman) ",
            "author": "ASF subversion and git services",
            "id": "comment-16179301"
        },
        {
            "date": "2017-09-25T16:54:15+0000",
            "content": "Thanks everyone! ",
            "author": "Christine Poerschke",
            "id": "comment-16179312"
        },
        {
            "date": "2017-10-17T11:04:09+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16207432"
        }
    ]
}