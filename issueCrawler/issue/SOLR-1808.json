{
    "id": "SOLR-1808",
    "title": "When IndexReader.reopen is called, old reader is not properly closed",
    "details": {
        "affect_versions": "1.4",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "According to Lucene documentation:\n\"If the index has not changed since this instance was (re)opened, then this call is a NOOP and returns this instance. Otherwise, a new instance is returned. The old instance is not closed and remains usable.\"\n\nIn SolrCore.java:\n\nif (newestSearcher != null && solrConfig.reopenReaders\n          && indexDirFile.equals(newIndexDirFile)) {\n        IndexReader currentReader = newestSearcher.get().getReader();\n        IndexReader newReader = currentReader.reopen();\n\n        if (newReader == currentReader) \n{\n          currentReader.incRef();\n        }\n\n        tmp = new SolrIndexSearcher(this, schema, \"main\", newReader, true, true);\n      }\n\nWhen currentReader!=newReader, currentReader seems to be leaking.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-12841844",
            "date": "2010-03-05T13:19:54+0000",
            "content": "Right - thats how its supposed to work - we don't close the old instance because it can still be serving requests on a previous SolrIndexSearcher - it will be closed when that Searcher is closed. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12843352",
            "date": "2010-03-09T23:08:15+0000",
            "content": "As mark said: IndexReaders are refcounted (regardless of whether they come from open or reopen) so that they aren't closed until they are no logner in use.\n\nI'm not seeing any evidence of a bug here, pelase reopen if you can point to a concrete example of where an IndexReader is being leaked. "
        },
        {
            "author": "John Wang",
            "id": "comment-12843361",
            "date": "2010-03-09T23:42:25+0000",
            "content": "Thanks Mark and Chris. I meant to close this bug, but kept forgetting it. Thanks for explaining.\n\nOn the same node, Solr is maintaining a heavy weight Searcher instance, but the search related information is stored with reader. This is especially important with lucene 2.9 where segmented readers are more exposed. Do you guys still think having heavy SolrIndexSearcher instances is a good thing?\n\nAnyway, no problem with closing this issue. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12843363",
            "date": "2010-03-09T23:47:31+0000",
            "content": "Solr is maintaining a heavy weight Searcher instance\n\nWell... IndexSearcher isn't particularly heavyweight, but Solr's implementation is (due to historical reasons mostly).\nNo one is calling it optimal - we need to move more stuff to per-segment caching over time. "
        }
    ]
}