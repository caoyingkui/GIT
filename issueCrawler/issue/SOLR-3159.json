{
    "id": "SOLR-3159",
    "title": "Upgrade to Jetty 8",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Task",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Solr is currently tested (and bundled) with a patched jetty-6 version.  \n\nIdeally we can release and test with a standard version.\n\nJetty-6 (at codehaus) is just maintenance now.  New development and improvements are now hosted at eclipse.  Assuming performance is equivalent, I think we should switch to Jetty 8.",
    "attachments": {
        "SOLR-3159-maven.patch": "https://issues.apache.org/jira/secure/attachment/12517502/SOLR-3159-maven.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-13215304",
            "date": "2012-02-24T01:50:32+0000",
            "content": "I will make a branch for this so that it is easy to compare the two options.\n\nOne kicker is that JSP in Jetty 7 or 8 requires a JDK, not just the JRE.  \n\nBut with progress on the new UI, I think we can drop JSP entirely (good riddance!) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13215315",
            "date": "2012-02-24T02:15:20+0000",
            "content": "Check:\nhttps://svn.apache.org/repos/asf/lucene/dev/branches/solr_3159_jetty8/\n\nCan someone with a benchmarking setup take it for a spin?\n\nIf things look good, I'll sort out the JSP issues. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13222831",
            "date": "2012-03-06T00:37:20+0000",
            "content": "Without JSP, jetty 8 can run on JDK or JRE "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13224505",
            "date": "2012-03-07T17:03:38+0000",
            "content": "I asked this on the mailing list, got zero response.  I would like to know if there are any good reasons to upgrade to Jetty 8 with an older release, specifically 3.5.0.  Also, the Jetty 8 distribution has a fair number of config files in etc, but the example Solr only has jetty.xml and webdefault.xml.  What sort of recommendations do you have as far as config changes when upgrading?\n\nI am using the JDK, so I would I be OK with the presence of JSP in the pre-trunk version?  Solr is not directly reachable from the outside world, it is used on the internal network by our web application. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13224703",
            "date": "2012-03-07T21:01:04+0000",
            "content": "committed to trunk in #1298108\n\nWhat are thoughts on porting to 3.x?  I am -0 for a few reasons:\n\n\t3.6 is hopefully soon \u2013 I would like to see this test for a while\n\tJSP complications\n\t\n\t\trequires JDK (not just JRE)\n\t\tthe start.jar would need to be run with:\n\njava -jar start.jar -OPTIONS=jsp\n\n\n\t\n\t\n\n\n\n\n\t- - -\n\n\n\nShawn, to run this with any .war file you can put the .war file in webapps\n\nThe pile of config files in etc are for the various features you can enable \u2013 this just includes the ones I think we need  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13224709",
            "date": "2012-03-07T21:10:25+0000",
            "content": "As far as 3.x, i don't quite understand http://wiki.eclipse.org/Jetty/Starting/Jetty_Version_Comparison_Table\n\nWhat does this mean? does 'experimental' mean like Lucene's FST APIs or does it just mean its only a few years old \n\nStable/experimental is not absolute and I'm just curious what opinions are.\n\nObviously jetty7 for 3.x is possibly an option?\n\nbut\n\nAre the unicode bug fixes applied there?\nRyan already did the work for 8.x, 7.x would cost much more man hours...? is 8.x just stable enough? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13224713",
            "date": "2012-03-07T21:17:01+0000",
            "content": "I would strongly suggest to upgrade jetty also on 3.x, otherwise we could get the commons-csv proble a second time here...\n\nIn Jetty 8 the unicode bug seems fixed, not sure about Jetty 7. The work for upgrade should not be so hard here, because Jetty already uses the eclipse package name? so its just a backport with Jetty 7 JARs? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13224721",
            "date": "2012-03-07T21:27:05+0000",
            "content": "weird \u2013 I'm guessing that page is out of date... but it is not confidence inspiring!\n\nJetty 7/8 have been around since 2009.  Work has even started on Jetty 9\n\n\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13224732",
            "date": "2012-03-07T21:31:44+0000",
            "content": "I mean i lean towards jetty 8 anyway, because the work is already done \n\nWe can't just look at the stability of jetty itself: having the single jetty version across both trunk/branch_3x\nwill mean we have more testing for our integration, which is probably what matters the most anyway.\n\nJust asking questions.... not an opinion on this patch because i don't have enough knowledge.\n\nas long as my unicode test passes I am +1! "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13224747",
            "date": "2012-03-07T21:44:28+0000",
            "content": "is 8.x just stable enough?\n\nI'm confident the server is stable.  I am not confident we have the most appropriate settings in solr/example/etc/jetty.xml\n\nThese are the same settings we had for jetty 6, but I do not know if this is still the best choice.  In particular, I'm not sure about the .bio.SocketConnector vs .nio.SelectChannelConnector\n\nUwe: to backport, we can use the same setup (jetty 8) but need to add in the JSP jar files and change docs about starting the example.  Unlike the commons-csv issue, I am not concerned about the patched dependency here because if someone wants to use a different jetty release they can do it and avoid the JAR hell problems. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13224827",
            "date": "2012-03-07T23:24:42+0000",
            "content": "Hi Ryan,\n\nI'm trying to fix the Maven build to use Jetty 8, and I see that you've upgraded servlet-api jar to v3.0, but I can't find that version in the Maven Central repository.  The two closest I found are javax.servlet:javax-servlet.api:3.0.1 and javax.servlet:servlet-api:3.0-alpha-1.  Am I missing something?\n\nIf you don't know of a 3.0 Maven artifact, can we upgrade to the 3.0.1 artifact in Maven central?  (I did not test this myself.) "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13224831",
            "date": "2012-03-07T23:30:09+0000",
            "content": "That should not matter as the servlet-api.jar is just a interface hull, version is irrelevant. To compile solr, an older servlet API would be even better as requirement, so the WAR is enforced to also run in older tomcats \n\nSo I would revert the jar file in the lib/ folder for compiling of solr to 2.4 and only use the 3.0 one for executing jetty8 in the example or when running tests. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13224835",
            "date": "2012-03-07T23:35:25+0000",
            "content": "Am I missing something?\n\nWoohoo!  Found it!: org.eclipse.jetty.orbit:javax.servlet:3.0.0.v201112011016 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13224836",
            "date": "2012-03-07T23:35:54+0000",
            "content": "This was also the reason why before Ryans commit in the lib/ folder was a genric servlet-api-2.4.jar while in the example there was the jetty-supplied.\n\nFor compiling the solr source code we should in all cases use 2.4, otherwise we cannot gurantee that we are still compatible with older servlet containers like JBoss or Tomcat 6. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13224891",
            "date": "2012-03-08T01:04:54+0000",
            "content": "Maven configuration: \n\n\n\tRemoved from top-level POM the installation to local Maven repository of optional/test-only Jetty artifacts.\n\tSwitched Jetty dependencies to v8.1.1 Maven Central artifacts\n\tSwitched Servlet API dependecy to Jetty Orbit jar (this will need to be fixed if/when the 2.4 servlet jar is put back into solr/lib/\n\n\n\nCommitting shortly. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13224900",
            "date": "2012-03-08T01:10:41+0000",
            "content": "Maven configuration: [...] Committing shortly.\n\nDone: r1298247 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13225674",
            "date": "2012-03-08T23:29:57+0000",
            "content": "FWIW: on trunk, using an svn checkout, and runing \"java -jar start.jar\" i'm getting the following error in the jetty logging after solr starts up...\n\n\n2012-03-08 15:16:09.382:WARN:oejw.WebAppContext:Failed startup of context o.e.j.w.WebAppContext{/.svn,file:/home/hossman/lucene/dev/solr/example/webapps/.svn/},/home/hossman/lucene/dev/solr/example/webapps/.svn\njava.lang.StringIndexOutOfBoundsException: String index out of range: 0\n\tat java.lang.String.charAt(String.java:686)\n\tat org.eclipse.jetty.util.log.StdErrLog.condensePackageString(StdErrLog.java:210)\n\tat org.eclipse.jetty.util.log.StdErrLog.<init>(StdErrLog.java:105)\n\tat org.eclipse.jetty.util.log.StdErrLog.<init>(StdErrLog.java:97)\n\tat org.eclipse.jetty.util.log.StdErrLog.newLogger(StdErrLog.java:569)\n\tat org.eclipse.jetty.util.log.AbstractLogger.getLogger(AbstractLogger.java:21)\n\tat org.eclipse.jetty.util.log.Log.getLogger(Log.java:438)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:677)\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:454)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)\n\tat org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:36)\n\tat org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:183)\n\tat org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:491)\n\tat org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:138)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:142)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:53)\n\tat org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:604)\n\tat org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:535)\n\tat org.eclipse.jetty.util.Scanner.scan(Scanner.java:398)\n\tat org.eclipse.jetty.util.Scanner.doStart(Scanner.java:332)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:118)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)\n\tat org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:552)\n\tat org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:227)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)\n\tat org.eclipse.jetty.util.component.AggregateLifeCycle.doStart(AggregateLifeCycle.java:58)\n\tat org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:53)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:91)\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:263)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)\n\tat org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1215)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1138)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.eclipse.jetty.start.Main.invokeMain(Main.java:457)\n\tat org.eclipse.jetty.start.Main.start(Main.java:602)\n\tat org.eclipse.jetty.start.Main.main(Main.java:82)\n\n\n\n...solr is functioning just fine, but it seems like something has changed subtley in either how jetty handles the webapps dir, or how we have it configured to handle the webapps dir, such that it is trying to load .svn as a webapp.\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13225675",
            "date": "2012-03-08T23:32:27+0000",
            "content": "https://jira.codehaus.org/browse/JETTY-1489 - apparently fixed in 8.1.2 ?\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13225685",
            "date": "2012-03-08T23:49:33+0000",
            "content": "The pile of config files in etc are for the various features you can enable \u2013 this just includes the ones I think we need\n\nI checked out trunk from SVN and took a look at the example etc directory.  It only includes jetty.xml and webdefault.xml, so once things on this issue have settled down, I'll compare my config with yours and go ahead with an upgrade on my test server. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13225688",
            "date": "2012-03-08T23:54:22+0000",
            "content": "apparently fixed in 8.1.2 ?\n\nWierdly, I don't see an annoucement for v8.1.2 on the jetty-announce list archives (unlike v8.1.1, which was announced), and the Maven artifacts haven't shown up in Maven central (again, unlike the v8.1.1 artifacts).\n\nThe full 8.1.2 version name is 8.1.2.v20120302, where AFAICT the suffix is the release date, six days ago.  \n\nUnlike 8.1.2, the Maven Central artifacts for 8.1.0 and 8.1.1 are dated one day after the (assumed) release date from the version number. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13226349",
            "date": "2012-03-09T19:24:17+0000",
            "content": "Wierdly, I don't see an annoucement for v8.1.2\n\nSorry .. poor wording on my part: the issue is marked fixed in 8.1.2 but the jetty Jira system lists 8.1.2 as unreleased (ie: fixed on jetty's 8.1 branch for hte next release i guess)\n\n\u2014\n\nAnother little glitch i just noticed is that aparently with the new jetty configs JSP support isn't enabled?  loading http://localhost:8983/solr/ works fine, but http://localhost:8983/solr/admin/dataimport.jsp gives a 500 error \"JSP support not configured\" \n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13226520",
            "date": "2012-03-09T21:55:05+0000",
            "content": "\nWierdly, I don't see an annoucement for v8.1.2\n\nSorry .. poor wording on my part: the issue is marked fixed in 8.1.2 but the jetty Jira system lists 8.1.2 as unreleased (ie: fixed on jetty's 8.1 branch for hte next release i guess)\n\nWell, the weirdness from my perspective is that 8.1.2 is downloadable and marked as a release: http://download.eclipse.org/jetty/ "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13226978",
            "date": "2012-03-11T02:22:46+0000",
            "content": "They had a real 8.1.2 release... and I upgraded the .jar files in revision: 1299325 "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13227459",
            "date": "2012-03-12T12:26:42+0000",
            "content": "Another little glitch i just noticed is that aparently with the new jetty configs JSP support isn't enabled? loading http://localhost:8983/solr/ works fine, but http://localhost:8983/solr/admin/dataimport.jsp gives a 500 error \"JSP support not configured\"\n\nYepp, just created SOLR-3234 for that. We have just missed them, while sorting out all JSP-Files in SOLR-3202. They should be no longer required ,since we use now Handlers and Servlets for all the UI related stuff. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13230793",
            "date": "2012-03-16T00:56:27+0000",
            "content": "We can open a new issue for any subsequent problems "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13232171",
            "date": "2012-03-18T05:12:32+0000",
            "content": "Is this back ported to 3x? There is also a BIO issue in Jetty 6\n\nhttps://jira.codehaus.org/browse/JETTY-1458\n\nThe ticket for 3159 only says Solr 4. "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13232420",
            "date": "2012-03-19T03:29:00+0000",
            "content": "For sharding we probably want to add back the equivalent for MAX POST size.\n\n\n    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->\n    <Call class=\"java.lang.System\" name=\"setProperty\">\n      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>\n      <Arg>1000000</Arg>\n    </Call>\n\n\nTo something like:\n\n   <Call class=\"java.lang.System\" name=\"setProperty\">\n      <Arg>org.eclipse.jetty.Request.maxFormContentSize</Arg>\n      <Arg>1000000</Arg>\n    </Call>\n\n\n\nSee http://wiki.eclipse.org/Jetty/Howto/Configure_Form_Size#Changing_the_Maximum_Form_Size_for_All_Apps_on_a_Server\n\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13232622",
            "date": "2012-03-19T14:06:59+0000",
            "content": "From that link, it looks like it should probably be:\n\n    <Call name=\"setAttribute\">\n      <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>\n      <Arg>200000</Arg>\n    </Call>\n\n\n\nCan anyone test and confirm this works?\n\nThese are the same settings we had for jetty 6, but I do not know if this is still the best choice. In particular, I'm not sure about the .bio.SocketConnector vs .nio.SelectChannelConnector\n\nThe NIO connector was causing intermittent failures on Jenkins.  I have no idea if the bugs were ever found/fixed in Jetty land - but it's a risk.  It would be nice to move to the NIO connector if it is now stable though, since it could possibly allow for better logging/debugging (i.e. if we can specify our own thread pool to handle requests such that we can tell different jetty instances apart during logging).\n "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13233174",
            "date": "2012-03-20T03:49:09+0000",
            "content": "Can you point to the JENKINS issue? If there is not one, we should post an issue on the JENKINS JIRA...\n\nAre you saying that it might be isolated to JENKINS? I have been avoiding NIO - maybe for the wrong reasons. I heard that BIO ran better on Windows 2008 ?\n\n(DOn't ask why we are running SOLR on Windows).\n "
        },
        {
            "author": "Massimo Carro",
            "id": "comment-13273124",
            "date": "2012-05-11T08:43:30+0000",
            "content": "I use solr 4 with jetty 8 : highlight inside qt definition doesn't go. "
        },
        {
            "author": "Scott Stults",
            "id": "comment-13567049",
            "date": "2013-01-30T23:12:33+0000",
            "content": "It looks like the SolrJetty wiki page needs some love. Should that be tracked here or in a separate issue? "
        }
    ]
}