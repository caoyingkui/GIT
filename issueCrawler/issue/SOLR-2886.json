{
    "id": "SOLR-2886",
    "title": "Out of Memory Error with DIH and TikaEntityProcessor",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler",
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Cannot Reproduce"
    },
    "description": "I've recently upgraded from apache-solr-4.0-2011-06-14_08-33-23.war to apache-solr-4.0-2011-10-14_08-56-59.war and then apache-solr-4.0-2011-10-30_09-00-00.war to index ~5300 pdfs, of various sizes, using the TikaEntityProcessor.  My indexing would run to completion and was completely successful under the June build.  The only error was readability of the fulltext in highlighting.  This was fixed in Tika 0.10 (TIKA-611).  I chose to use the October 14 build of Solr because Tika 0.10 had recently been included (SOLR-2372).  \n\nOn the same machine without changing any memory settings my initial problem is a Perm Gen error.  Fine, I increase the PermGen space.\n\nI've set the \"onError\" parameter to \"skip\" for the TikaEntityProcessor.  Now I get several (6)\n\nSEVERE: Exception thrown while getting data\njava.net.SocketTimeoutException: Read timed out\nSEVERE: Exception in entity : tika:org.apache.solr.handler.dataimport.DataImport\nHandlerException: Exception in invoking url <url removed> # 2975\n\npairs.  And after ~3881 documents, with auto commit set unreasonably frequently I consistently get an Out of Memory Error \n\nSEVERE: Exception while processing: f document : null:org.apache.solr.handler.dataimport.DataImportHandlerException: java.lang.OutOfMemoryError: Java heap space\n\nThe stack trace points to org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer(RandomAccessBuffer.java:151) and org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:718).\n\nThe October 30 build performs identically.\n\nFunny thing is that monitoring via JConsole doesn't reveal any memory issues.\n\nBecause the out of Memory error did not occur in June, this leads me to believe that a bug has been introduced to the code since then.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Tricia Jenkins",
            "id": "comment-13157238",
            "date": "2011-11-25T16:57:53+0000",
            "content": "Some further bug tracing shows that pdfbox' RandomAccessBuffer is responsible for the Out of Memory error.  It creates a new larger buffer and then copies the existing buffer into the new buffer.  There are no checks to see if the space is available to create a new larger buffer.  Use of a RandomAccessBuffer was introduced with PDFBOX-948 at revision 1072678 on Feb 20, 2011 and in for the pdfbox 1.5 and 1.6 releases, hence TIKA-594 for tika 0.10 in revision 1080162 on Mar 10, 2011 and revision 1171497 on Sep 16, 2011.  Moving my DIH workflow to another machine with more memory available is able to run to completion.  \n\nIt appears that I am the victim of the caviate stated in PDFBOX-948:\n\nFor normal sized PDFs files, the in-memory implementation RandomAccessBuffer should not increase the memory usage too much, while providing faster IO as all access operations are only memory copies. \n\nTherefore, please consider switching the default to in-memory scratch buffers. Users with very large files can still pass a temporary directory. \n\nNow to track down how to detect \"large files\" and use a temporary directory instead.  This may turn out to be a TIKA issue rather than Solr. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412208",
            "date": "2012-07-11T22:26:23+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429741",
            "date": "2012-08-07T03:42:37+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13451064",
            "date": "2012-09-07T22:21:12+0000",
            "content": "removing fixVersion=4.0 since there is no evidence that anyone is currently working on this issue.  (this can certainly be revisited if volunteers step forward)\n\nFWIW: it's not clear to me reading the comments how Solr would/could use the suggested workaround in the PDFBOX issue, since Solr dones't invoke PDFBox directly, and delegates to Tika.\n\nIf someone with more tika knowledge can suggest a way in which solr users can configure/influence how Tika uses PDFBox to control this setting, that seems like it would resolve things "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539674",
            "date": "2016-10-02T03:53:38+0000",
            "content": "Does this happen with the latest version of Solr/Tika? If not or cannot be reproduced, I suggest closing the case. "
        }
    ]
}