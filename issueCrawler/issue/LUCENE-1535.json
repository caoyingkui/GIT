{
    "id": "LUCENE-1535",
    "title": "Make tests using java.util.Random reproducible on failure",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Test",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is a patch for LuceneTestCase to support logging of the Random seed used in randomized tests. The patch also includes an example implementation in TestTrieRangeQuery.\n\nIt overrides the protected method runTest() and inserts a try-catch around the super.runTest() call. Two new methods newRandom() and newRandom(long) are available for the test case. As each test case is run in an own TestCase object instance (so 5 test methods in a class instantiate 5 instances each method working in separate), the random seed is saved on newRandom() and when the test fails with any Throwable, a message with the seed (if not null) is printed out. If newRandom was never called no message will be printed.\n\nThis patch has only one problem: If a single test method calls newRandom() more than once, only the last seed is saved and printed out. But each test method in a Testcase should call newRandom() exactly once for usage during the execution of this test method. And it is not thread save (no sync, no volatile), but for tests it's unimportant.\n\nI forgot to mention: If a test fails, the message using the seed is printed to stdout. The developer can then change the test temporarily:\n\n\nLuceneTestCase.newRandom() -> LuceneTestCase.newRandom(long)\n\n\nusing the seed from the failed test printout.\n\nReference:\n\n: By allowing Random to randomly seed itself, we effectively test a much\n: much larger space, ie every time we all run the test, it's different.  We can\n: potentially cast a much larger net than a fixed seed.\n\ni guess i'm just in favor of less randomness and more iterations.\n\n: Fixing the bug is the \"easy\" part; discovering a bug is present is where\n: we need all the help we can get \n\nyes, but knowing a bug is there w/o having any idea what it is or how to \ntrigger it can be very frustrating.\n\nit would be enough for tests to pick a random number, log it, and then use \nit as the seed ... that way if you get a failure you at least know what \nseed was used and you can then hardcode it temporarily to reproduce/debug\n\n-Hoss",
    "attachments": {
        "LUCENE-1535.patch": "https://issues.apache.org/jira/secure/attachment/12399453/LUCENE-1535.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-02-04T14:11:22+0000",
            "content": "This is the patch.\nAs only TrieRangeQuery uses the new random functionality, the other tests should be scanned for usage of java.util.Random (simple grep) and be changed to use the LuceneTestCase methods to obtain a random number generator. ",
            "author": "Uwe Schindler",
            "id": "comment-12670337"
        },
        {
            "date": "2009-02-04T17:40:46+0000",
            "content": "OK I replaced many of the \"new Random(...)\"'s in tests, and tweaked the impl in LuceneTestCase a bit (eg I now catch if you call newRandom twice from one test).\n\nI think it's ready to commit.  I'll wait a day or two.  Maybe we'll catch ourselves a bug  ",
            "author": "Michael McCandless",
            "id": "comment-12670384"
        },
        {
            "date": "2009-02-04T19:17:16+0000",
            "content": "Hi Mike,\n\nall tests pass here, looks good. Thanks for the work to convert all test cases \nOne thing (my fault): The @link reference in the javadocs to LuceneTestCase reference #getRandom(long) not #newRandom(long) \u2013 my first version used getRandom and I renamed later.\n\nThe idea with the IllegalStateException is good and reinitializing the seed to null on each test is good (if in future jUnit changes not to create new instances for each test). ",
            "author": "Uwe Schindler",
            "id": "comment-12670421"
        },
        {
            "date": "2009-02-04T20:15:24+0000",
            "content": "The @link reference in the javadocs to LuceneTestCase reference #getRandom(long) not #newRandom(long)\n\nNo problem, I'll fix.  Thanks!\n\nif in future jUnit changes not to create new instances for each test\n\nHeh \u2013 I had assumed it did NOT create a new instance for each test, but in fact you're right: it does. ",
            "author": "Michael McCandless",
            "id": "comment-12670444"
        },
        {
            "date": "2009-02-05T22:06:13+0000",
            "content": "Committed revision 741311.  Thanks Uwe! ",
            "author": "Michael McCandless",
            "id": "comment-12670919"
        }
    ]
}