{
    "id": "SOLR-12685",
    "title": "RTG should return the whole block if schema is nested",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Sub-task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "Currently Solr's RealTimeGet component return the document if provided a docId when consulting the index. For AtomicUpdates for child documents, RTG should return the whole block when dealing with a nested schema.",
    "attachments": {
        "SOLR-12638-no-commit.patch": "https://issues.apache.org/jira/secure/attachment/12936574/SOLR-12638-no-commit.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-08-21T13:00:01+0000",
            "content": "I have started working on this,\n and currently the biggest hold I have encountered is the lack of the ability to set the return fields for the ChildDocTransformer, or a way to get the document's nest_path(docValue) without having to build a new SolrInputDocument, or a way to get a DocValue(_nest_path_) by docId.\n The path of the parent which is updated is needed to get the document which is to be changed by the atomic update in the block(nested SolrInputDocument).\n e.g. when there's an atomic update\n\n{\"id\": \"2\", \"children\": {\"add\": {\"id\":4, \"test_s\": \"test\"}}\n\nis made, and the doc with id:2 is itself a child doc of doc id:1, we need to get the path of doc id:2, to add the new child doc to it.\nI could upload a very rough no-commit patch, if needed. ",
            "author": "mosh",
            "id": "comment-16587388"
        },
        {
            "date": "2018-08-21T16:03:20+0000",
            "content": "Is this a duplicate of\u00a0SOLR-9006? \u00a0If so, it's not quite clear to me how\u00a0atomic updates of child documents is\u00a0related (which I don't even thinks works yet \u2013 SOLR-12638).\n\nBTW ChildDocTransformer really ought to take an \"fl\"! \u00a0(definitely its own issue, if you want to tackle that)\n\nPlease provide the nocommit patch; thanks. ",
            "author": "David Smiley",
            "id": "comment-16587640"
        },
        {
            "date": "2018-08-22T04:48:29+0000",
            "content": "Is this a duplicate of\u00a0SOLR-9006?\nThis ticket incorporates it, since it should return child docs from the transaction log in addition to the index,\nin case the document was not found there.\n\nQuoting Ariel Lieberman in SOLR-9006:\nTherefore, I think the capability (e.g. additional flag) to get parent with all its children is very important..\nIn my opinion adding extra flags only complicates this, and should instead check if the schema is usable for child docs...\nPerhaps there is a need though to only get that specific doc, and not the whole block, even though the document is in the block, perhaps in place update(I am not very familiar with those features, just to make sure)? ",
            "author": "mosh",
            "id": "comment-16588379"
        },
        {
            "date": "2018-08-22T05:00:24+0000",
            "content": "I have uploaded a very rough patch, which should only be viewed as a POC, to get my hands dirty before opening sub tasks.\nThe main changes are in RealTimeGetComponent, specifically in lines 655 to 669.\nI added a new test AtomicUpdateNestedTest#testAddChild, which does not yet pass.\nAfter using the ChildDocTransformer in RealTimeGetComponent, I have yet to figure out a clean way to get the child document's nest_path,\nwhich is needed for the atomic update to be merged in the right path inside the block(AtomicUpdateDocumentMerger#doAdd). ",
            "author": "mosh",
            "id": "comment-16588388"
        },
        {
            "date": "2018-08-22T16:17:27+0000",
            "content": "This ticket incorporates it, since it should return child docs from the transaction log in addition to the index,\nin case the document was not found there.\n\nOkay; it's debatable as it seems the scope of that issue ought to be both tlog & index (why do one and not the other?).  Any way we can just do it here and close that one when this is done.\n\nIn my opinion adding extra flags only complicates this, and should instead check if the schema is usable for child docs...\n\nI agree, as you might have guessed based on my feedback on related issues.\n\nPerhaps there is a need though to only get that specific doc, and not the whole block, even though the document is in the block, perhaps in place update(I am not very familiar with those features, just to make sure)?\n\nEhh; I dunno.  It hasn't been possible before; we don't have to.  It'd be more work to handle this scenario.  I suggest tabling it until some day someone can express a need for this.\n\nI looked at your rough POC.  I see what you're trying to do.  Be aware that not all \"SolrIndexSearchers\" are created equal... in RTG we need the realtime searcher (thus will see non-committed docs), not req.getSearcher().  I'm also dubious you needed to change the method signature in RTG to take SolrQueryRequest; we'll see.\n\n... which is needed for the atomic update to be merged in the right path inside the block(AtomicUpdateDocumentMerger#doAdd) ...\n\nLets not deal with updates in this issue.  I think it's separate, perhaps SOLR-12638. ",
            "author": "David Smiley",
            "id": "comment-16589082"
        },
        {
            "date": "2018-08-23T07:04:24+0000",
            "content": "in RTG we need the realtime searcher\nOh right I guess I sort of missed that part...\nI'm also dubious you needed to change the method signature in RTG to take SolrQueryRequest; we'll see.\nI guess if there is no need for req.getSearcher(), I do not foresee a need to pass req as a parameter. ",
            "author": "mosh",
            "id": "comment-16589802"
        },
        {
            "date": "2018-09-02T11:52:37+0000",
            "content": "Perhaps there is a need though to only get that specific doc, and not the whole block, even though the document is in the block, perhaps in place update(I am not very familiar with those features, just to make sure)?\nNow that SOLR-12519 was committed to master, ChildDocTransformer requires SolrIndexSearcher.\n This requirement causes documents to skip transaction log lookup, instead using a SolrIndexSearcher for docId lookup.\n\n// true in any situation where we have to use a realtime searcher rather then returning docs\n// directly from the UpdateLog\nfinal boolean mustUseRealtimeSearcher =\n      // if we have filters, we need to check those against the indexed form of the doc\n      (rb.getFilters() != null)\n      || ((null != transformer) && transformer.needsSolrIndexSearcher());\n\n\n\nif (mustUseRealtimeSearcher) {\n    // close handles to current searchers & result context\n    searcherInfo.clear();\n    resultContext = null;\n    ulog.openRealtimeSearcher();  // force open a new realtime searcher\n    o = null;  // pretend we never found this record and fall through to use the searcher\n    break;\n}\n\nI am not quite sure of the performance implications of this requirement.\n In case these implications are not deemed as a limiting factor, the trigger for block lookups under RTG component could be determined purely by the combination of IndexSchema#isUsableForChildDocs in addition to the existence of root field for the specific doc, thus removing the need for an additional flag.\nOtherwise, due to performance justifications, an additional flag might be required.\n David Smiley,\n your insights would be of the highest of aids. ",
            "author": "mosh",
            "id": "comment-16601188"
        },
        {
            "date": "2018-09-02T14:37:23+0000",
            "content": "I think I see what's going on.  This is a bit tricky.  ChildDocTransformer does use the IndexSearcher so should declare itself as doing so (as you pointed out).  But it's only there to return child docs.  If the parent doc is in the update log, then it's children ought to be there too (it's a requirement of nested docs after all), and in that event we actually don't need the child doc transformer since the child docs will already be exactly where they need to be in-place.\n\nPerhaps the use of ChildDocTransformer should become automatic in RTG, thus RTG can know when it's needed or not?  Hmmm.  I'll think about this some more; I have to go for the day. ",
            "author": "David Smiley",
            "id": "comment-16601227"
        },
        {
            "date": "2018-09-03T07:38:51+0000",
            "content": "Please correct me if mistaken.\n I was thinking RTG should not return the whole block when queried directly by the RTG handler, but rather should explicitly perform these checks when running RealTimeGetComponent#getInputDocument, which is used by AtomicUpdateDocumentMerger.\n\nSolrInputDocument oldDocument = RealTimeGetComponent.getInputDocument\n      (cmd.getReq().getCore(), idBytes,\n       null, // don't want the version to be returned\n       true, // avoid stored fields from index\n       updatedFields,\n       true); // resolve the full document\n\nUnless, of course, RTG block lookup is needed by the replication process, which, unfortunately, I am unfamiliar with.\nRunning through the code it seems like the transaction log lookup is written in RealTimeGetComponent#getInputDocumentFromTlog and in process, twice.\nWe could leverage that to ensure AtomicUpdateDocumentMerger gets the block when needed, avoiding further collision and interference with the RealTimeGetHandler. ",
            "author": "mosh",
            "id": "comment-16601844"
        },
        {
            "date": "2018-09-04T03:31:59+0000",
            "content": "I was thinking RTG should not return the whole block when queried directly by the RTG handler ...\n\nI thought that's what you set out to do in this issue, which subsumes SOLR-9006; right?  Are you changing your mind?\n\n...  but rather should explicitly perform these checks when running RealTimeGetComponent#getInputDocument, which is used by AtomicUpdateDocumentMerger\n\nIf you want to work on that, then wouldn't that be SOLR-12638? ",
            "author": "David Smiley",
            "id": "comment-16602580"
        },
        {
            "date": "2018-09-04T07:24:21+0000",
            "content": "I thought that's what you set out to do in this issue, which subsumes SOLR-9006; right? Are you changing your mind?\nPerhaps this ticket's title is a little bit misleading. There is a need for RTG component to return the whole block if schema is nested, but in the scope of child documents I do not for-see a need for the RTG handler to return the block.\n I could be mistaken, and to simplify debate and development I propose we open two separate tickets:\n\n\tA ticket for RTG public methods(ex: RealTimeGetComponent#getInputDocument)\n\tA ticket for the RTG handler(RealTimeGetComponent#process).\n WDYT?\n\n ",
            "author": "mosh",
            "id": "comment-16602682"
        },
        {
            "date": "2018-09-04T07:44:26+0000",
            "content": "A ticket for the RTG handler(RealTimeGetComponent#process).\nI was thinking about this one, it has been a tough one alright!\n Wouldn't this result in a major difference from an API perspective between the search component and the RTG component?\n When querying a document by id, unless ChildDocTransformer is specified in the fl, only the matching document is returned.\n The same applies to the RTG handler. When a request is made where ChildDocTranformer is supplied, the whole block is returned.\n This makes sense to me,\n unless there is a specific need for the \"/get\" handler to possess the ability of returning the whole block if exists,\n I can not foresee any reason for this change.\n Unless, of course, there is a concrete requirement for this logic during the replication process. ",
            "author": "mosh",
            "id": "comment-16602699"
        },
        {
            "date": "2018-09-04T15:00:51+0000",
            "content": "You make a good argument for consistency; I think we should keep the current behavior (i.e. only get child documents if you ask).\n\nYour new title of this issue seems to be conflated with SOLR-12638, and no longer suggests this subsumes SOLR-9006. \u00a0So it's pretty confusing what's going on, to me. \u00a0I think it's fine for SOLR-12638 to touch RTG code as its implementation details; no need to have a separate issue unless you think it's sufficiently distinct for whatever reason (e.g. if it accomplishes some other useful benefit, and there is work to do in SOLR-12638 that is separate and if they could be committed separately without disrupting things). \u00a0In light of that, perhaps mark this issue closed? ",
            "author": "David Smiley",
            "id": "comment-16603156"
        },
        {
            "date": "2018-09-04T15:20:17+0000",
            "content": "In light of that, perhaps mark this issue closed?\nI will close this issue.\nSince we have come to common ground that the API should stay consistent,\nthe little changes that have to be made to RTG component will be submitted in SOLR-12638. ",
            "author": "mosh",
            "id": "comment-16603185"
        }
    ]
}