{
    "id": "LUCENE-5294",
    "title": "Suggester Dictionary implementation that takes expressions as term weights",
    "details": {
        "components": [
            "core/search"
        ],
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "New Feature",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "It would be nice to have a Suggester Dictionary implementation that could compute the weights of the terms consumed by the suggester based on an user-defined expression (using lucene's expression module).\n\nIt could be an extension of the existing DocumentDictionary (which takes terms, weights and (optionally) payloads from the stored documents in the index). The only exception being that instead of taking the weights for the terms from the specified weight fields, it could compute the weights using an user-defn expression, that uses one or more NumicDocValuesField from the document.\n\nExample:\n  let the document have\n\n\tproduct_id\n\tproduct_name\n\tproduct_popularity\n\tproduct_profit\n\n\n\n  Then this implementation could be used with an expression of     \"0.2*product_popularity + 0.8*product_profit\" to determine the weights of the terms for the corresponding documents (optionally along with a payload (product_id))",
    "attachments": {
        "LUCENE-5294.patch": "https://issues.apache.org/jira/secure/attachment/12609096/LUCENE-5294.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-10-18T05:31:32+0000",
            "content": "Initial patch\n\n\timplements DocumentExpressionDictionary\n\tadded tests\n\n ",
            "author": "Areek Zillur",
            "id": "comment-13798812"
        },
        {
            "date": "2013-10-19T18:56:24+0000",
            "content": "This patch looks great; \"ant precommit\" was angry about a few missing javadocs.  I'll add them and commit.  Thanks Areek! ",
            "author": "Michael McCandless",
            "id": "comment-13799978"
        },
        {
            "date": "2013-10-19T19:06:35+0000",
            "content": "I put the wrong issue (LUCENE-4998) in the commit log so the commits are on that issue ...\n\nThanks Areek! ",
            "author": "Michael McCandless",
            "id": "comment-13799983"
        },
        {
            "date": "2013-10-19T20:23:34+0000",
            "content": "Commit 1533820 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1533820 ]\n\nLUCENE-5294: try to fix maven build ",
            "author": "ASF subversion and git services",
            "id": "comment-13799994"
        },
        {
            "date": "2013-10-19T20:23:53+0000",
            "content": "Commit 1533822 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1533822 ]\n\nLUCENE-5294: try to fix maven build ",
            "author": "ASF subversion and git services",
            "id": "comment-13799996"
        },
        {
            "date": "2013-10-20T01:13:29+0000",
            "content": "Sorry for not running the \"ant precommit\" before uploading the patch (will do that from next time!). Thanks for fixing it and committing the patch.\nHad a couple of questions though. \n\n\tDoes it make sense for the new dictionary implementation to support CompositeReader? (I actually do not know anything about it except for the fact that it has multiple leaves). I was thinking whether its worth it to add support.\n\tWhat are your thoughts on having a DocumentDictionary setting that will collect terms from documents for documents that has all the required fields and ignore the others (rather than erroring out)? Is that too much flexibility?\n\n\n\nThanks again for your quick responses! ",
            "author": "Areek Zillur",
            "id": "comment-13800058"
        },
        {
            "date": "2013-10-20T10:26:03+0000",
            "content": "Does it make sense for the new dictionary implementation to support CompositeReader?\n\nA CompositeReader is the common case, i.e. and index that has multiple segments ... I think we should support it?\n\nThe easiest way is to just wrap the incoming reader using SlowCompositeReaderWrapper.wrap.  However, this adds some unnecessary cost, because on each NDV lookup, there is a binary search to locate the right sub-reader.  In fact, we are already paying this cost in DocumentInputIterator when we use liveDoc (MultiFields.getLiveDocs).  But, I suspect in the grand scheme of things this cost is relatively minor, and a suggester is built once and used many times, so we may just want do to this option.\n\nThe other option is to pull the leaves and step through them yourself; I guess you'd need to fix DocumentInputIterator to go segment by segment instead.\n\nWhat are your thoughts on having a DocumentDictionary setting that will collect terms from documents for documents that has all the required fields and ignore the others (rather than erroring out)? Is that too much flexibility?\n\nSure, we could add such leniency?  We could even just make the whole thing lenient (i.e., no separate setting)? ",
            "author": "Michael McCandless",
            "id": "comment-13800118"
        },
        {
            "date": "2013-10-20T11:16:30+0000",
            "content": "Thanks Michael for the response!\n\n\tI will open up a jira to add support to CompositeReader for the Dictionary implementation (and hopefully change the DocumentInputIterator to go segment by segment)\n\tWill also make the DocumentDictionary more lenient.\nI hope to expose these Dictionary implementations to solr soon.\n\n ",
            "author": "Areek Zillur",
            "id": "comment-13800125"
        },
        {
            "date": "2013-10-22T00:47:03+0000",
            "content": "Commit 1534430 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1534430 ]\n\nLUCENE-5294: simmer down, validate-maven-dependencies ",
            "author": "ASF subversion and git services",
            "id": "comment-13801358"
        },
        {
            "date": "2013-10-22T00:49:35+0000",
            "content": "Commit 1534432 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1534432 ]\n\nLUCENE-5294: simmer down, validate-maven-dependencies (merged trunk r1534430) ",
            "author": "ASF subversion and git services",
            "id": "comment-13801359"
        },
        {
            "date": "2013-10-25T17:53:56+0000",
            "content": "Commit 1535797 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1535797 ]\n\nLUCENE-5294: IntelliJ config ",
            "author": "ASF subversion and git services",
            "id": "comment-13805513"
        },
        {
            "date": "2013-10-25T17:57:16+0000",
            "content": "Commit 1535798 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1535798 ]\n\nLUCENE-5294: IntelliJ config (merged trunk r1535797) ",
            "author": "ASF subversion and git services",
            "id": "comment-13805519"
        },
        {
            "date": "2013-12-31T12:04:37+0000",
            "content": "Commit 1554409 from Michael McCandless in branch 'dev/branches/lucene5376'\n[ https://svn.apache.org/r1554409 ]\n\nLUCENE-5294, LUCENE-5376: in Lucene demo server, support building suggester where weight is an expression ",
            "author": "ASF subversion and git services",
            "id": "comment-13859462"
        }
    ]
}