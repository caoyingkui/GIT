{
    "id": "SOLR-6669",
    "title": "401 is not explicitly handled when querying HttpSolrServer",
    "details": {
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "4.7",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "This is a regression, likely caused by SOLR-5532 (see comments at the end in that JIRA).\n\nI use solrj and HttpSolrServer in my web application (deployed in Tomcat 7). Recently I updated Solr from 4.4. to 4.10.1 and it seems 401 is not handled properly anymore when using a custom HttpClient.\n\nThe essentials of my code (that was working in 4.4):\n\nString theSolrBaseURL = ...\nHttpClient theHttpClient = ...\nSolrQuery theSolrQuery = ...\n\ntry {\n   SolrServer solrServer = new HttpSolrServer(theSolrBaseURL, theHttpClient);\n   QueryResponse response = solrServer.query(theSolrQuery);\n   ...\n} catch (SolrException se) {\n   if (se.code() == HttpStatus.SC_UNAUTHORIZED) {\n      // Client is using bad credentials, handle appropriately\n\t  ...\n   }\n   ...\n} catch (SolrServerException sse) {\n   ...\n}\n\n\n\nThe code should speak for itself, but the basic idea is to try to recover if the client is using bad credentials. In order to do that I catch the SolrException and check if the code is 401. This approach worked well in Solr 4.4.\n\nHowever, this doesn't work when using Solr 4.10.1. The query method throws a SolrServerException if the HttpClient is using bad credentials. The original cause is a org.apache.http.ParseException.\n\nThe problem arises in the HttpSolrServer.executeMethod(HttpRequestBase, ResponseParser) metod:\n\n\n\tThe HttpClient executes the method and gets the response\n\t\n\t\tThe response is a 401/Unauthorized\n\t\t401 response has no Content-Type header\n\t\n\t\n\tSince there are no content type, it will be set to empty string as fallback\n\tLater on the mime type is extracted using org.apache.http.entity.ContentType.parse(String) in order to handle charset issues (see SOLR-5532)\n\t\n\t\tThis metod fails to parse empty string and throws a org.apache.http.ParseException\n\t\n\t\n\tThe intermediate caller QueryRequest.process(SolrServer) will catch the exception and throw a SolrServerException\n\n\n\nA potential fix would be to add a 401 case to the existing switch\n\ncase HttpStatus.SC_UNAUTHORIZED:\n   throw new RemoteSolrException(httpStatus, \"Server at \"\n      + getBaseURL() + \" returned non ok status:\" + httpStatus\n      + \", message:\" + response.getStatusLine().getReasonPhrase(),\n       null);\n\n\n\n...and it would perhaps be appropriate to handle the content type \"fallback\" in some other way than setting it to an empty string?",
    "attachments": {
        "SOLR-6669_code_screenshots.zip": "https://issues.apache.org/jira/secure/attachment/12677886/SOLR-6669_code_screenshots.zip",
        "SolrJSearcher.java": "https://issues.apache.org/jira/secure/attachment/12733178/SolrJSearcher.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-10-29T14:06:48+0000",
            "author": "Magnus L\u00f6vgren",
            "content": "Attaching screenshots from IDEA debug session ",
            "id": "comment-14188363"
        },
        {
            "date": "2015-05-15T15:46:45+0000",
            "author": "Marius Grama",
            "content": "I've tried to reproduce the scenario (see the attachment SolrJSearcher.java) that you've exposed with the current version of the source code and there is no issue seems not to be anymore present.\nCalling a secured resource (I've used the SolrSecurity guideline for applying security on the techproducts example collection) without authentication data throws now a RemoteSolrException with the code 401 and the mesage\n\nError from server at http://localhost:8983/solr/securedtechproducts: Expected mime type application/octet-stream but got text/html. <html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"/>\n<title>Error 401 Unauthorized</title>\n</head>\n<body><h2>HTTP ERROR 401</h2>\n<p>Problem accessing /solr/securedtechproducts/select. Reason:\n<pre>    Unauthorized</pre></p><hr /><i><small>Powered by Jetty://</small></i><br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n\n</body>\n</html>\n\n\n\nI consider that this is no longer an issue in the current code base. ",
            "id": "comment-14545689"
        },
        {
            "date": "2015-05-15T15:47:47+0000",
            "author": "Marius Grama",
            "content": "SolrJSearcher.java - sample solrj client code used to reproduce the issue. ",
            "id": "comment-14545690"
        }
    ]
}