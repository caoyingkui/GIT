{
    "id": "SOLR-11854",
    "title": "multiValued PrimitiveFieldType should implicitly sort on min/max based on the asc/desc keyword",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Back in SOLR-2522, I added new syntax for (numeric) fields such that the field(someMultivaluedFieldName,min|max) syntax could be used to select either the min or max value of a multivalued (docvalues) field for use in other functions \u2013 or for sorting.\n\nA little while back, it occured to me that a good \"default\" behavior for all primative multivalued fields would be:\n\n\tautomatically use the \"min\" value when sort=someMultivaluedFieldName asc is attempted\n\tautomatically use the \"max\" value when sort=someMultivaluedFieldName desc is attempted\n\n\n\nThese defaults seem like they would be a big improvement over the current \"throw an error\" default behavior \u2013 especially since it naturally reduces down in the trivial case where all docs have at most 1 value anyway \u2013 and would align in practice with how most people I've talked to seem to think \"sorting on a multivalued field\" should work in theory.   If users don't like these dafaults, they can always use the explicit field(foo,min|max) syntax instead (ex: if users always want multivalued fields to sort on the 'min' value, regardless of the asc|desc selector)\n\nI've been experimenting with this off and on for a while, working up a POC patch \u2013 I think it's worth doing (details to follow in comment)",
    "attachments": {
        "SOLR-11854.patch": "https://issues.apache.org/jira/secure/attachment/12906070/SOLR-11854.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-15T07:33:50+0000",
            "content": "\u00a0\nIn the attached patch, I've beefed up the existing (and add some some new) helper methods in FieldType related to sorting to depend on a new method that subclasses can override...\n\n\n  /**\n   * Method for indicating which {@link MultiValueSelector} (if any) should be used when\n   * sorting on a multivalued field of this type for the specified direction (asc/desc).  \n   * The default implementation returns <code>null</code> (for all inputs).\n   *\n   * @param field The SchemaField (of this type) in question\n   * @param reverse false if this is an ascending sort, true if this is a descending sort.\n   * @return the implicit selector to use for this direction, or null if implicit sorting on the specified direction is not supported and should return an error.\n   * @see MultiValueSelector\n   */\n  public MultiValueSelector getDefaultMultiValueSelectorForSort(SchemaField field, boolean reverse) {\n    // trivial base case\n    return null;\n  }\n\n\n\n...and then I've overridden it in PrimitiveFieldType to look like this...\n\n\n  public MultiValueSelector getDefaultMultiValueSelectorForSort(SchemaField field, boolean reverse) {\n    return reverse ? MultiValueSelector.MAX : MultiValueSelector.MIN;\n  }\n\n\n\n\n...so by default, arbitrary field types will not support this implicit min/max selection based on the asc/desc keyword \u2013 but PrimativeFieldTypes (numerics, boolean, str, etc...) will support it.  Custom field types can also override this method to do so as well if they wish \u2013 they can even override it to flip the mapping such that asc->max and desc->min.\n\nThe rest of the patch consists of:\n\n\trefactoring a lot of redundent/common code related to sorting into helper methods.  Notably: I refactored a lot of the details related to the logic of which numeric values to use for sortMissingLast and sortMissingFirst depending on the asc|desc choice into the existing NumberType enum so that they could be removed from a lot of concrete type classes.\n\tadding StrField.getSingleValueSource \u2013 in my opinion i droped the ball on not including this in SOLR-2522.  Adding it now allows the same explicit sort syntax like sort=field(my_str,min) desc to work, and along with the other changes above, the new implicit multivalued sorting works automatically as well.\n\tdealing with some unique special case \"sort missing\" behavior in enum field types.\n\tbeefed up tests of the explicit function syntax on strings, as well as the implicit sort syntax for all primative types\n\n\n\n\n\nI think this patch is solid & pretty much good to go ... anyone have any concerns?\n\n\n\n\u00a0 ",
            "author": "Hoss Man",
            "id": "comment-16325960"
        },
        {
            "date": "2018-01-15T21:13:24+0000",
            "content": "patch updated to beef up ref guide section on the 'sort' param. ",
            "author": "Hoss Man",
            "id": "comment-16326581"
        },
        {
            "date": "2018-01-16T18:57:55+0000",
            "content": "Commit e2bba98dfde0420da84eb740282966ee5624b4d1 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e2bba98 ]\n\nSOLR-11854: multivalued primative fields can now be sorted by implicitly choosing the min/max value for asc/desc sort orders ",
            "author": "ASF subversion and git services",
            "id": "comment-16327589"
        },
        {
            "date": "2018-01-16T19:54:59+0000",
            "content": "Commit 3a10282a175d426523124ffda3db6c3646e795a0 in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3a10282 ]\n\nSOLR-11854: multivalued primative fields can now be sorted by implicitly choosing the min/max value for asc/desc sort orders\n\n(cherry picked from commit e2bba98dfde0420da84eb740282966ee5624b4d1) ",
            "author": "ASF subversion and git services",
            "id": "comment-16327689"
        }
    ]
}