{
    "id": "SOLR-10080",
    "title": "Fix some issues reported by findbugs",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I ran a findbugs analysis on code and found a lot of issues. I found issues in both lucene and solr, however, I am not sure whether Solr developers should fix issues like this in the lucene code or not.",
    "attachments": {
        "SOLR-10080.patch": "https://issues.apache.org/jira/secure/attachment/12850313/SOLR-10080.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-31T21:24:52+0000",
            "content": "I have fixed some of the issues reported by findbugs (and added some descriptive comments in some cases).\n\nIn some cases when, I wasn't sure if code findbugs reported as issue was intentionally written like that or not.\n\nOnce, I get feedback, I will polish the patch to remove unwanted comments (or remove code that I have just commented for now) ",
            "author": "Pushkar Raste",
            "id": "comment-15847541"
        },
        {
            "date": "2017-01-31T21:33:20+0000",
            "content": "Pushkar:\n\nOne technique people use for marking code that needs to be cleaned up is to add a //nocommit comment to it. The precommit step will flag all //nocommit entries and fail the build so it's a sure-fire way to make sure any lingering questions are cleaned up.\n\nOf course then when you're all ready to add it you have to run the 'ant precommit' step, but even if you don't the next Jenkins build will so...\n\nNo big deal, just FYI...\n ",
            "author": "Erick Erickson",
            "id": "comment-15847548"
        },
        {
            "date": "2017-01-31T21:55:18+0000",
            "content": "In BlobRepository the only use of that synchronized call I can see on first glance would be to prevent blobCreator.call from executing twice, but the same thing can be accomplished by using .computeIfAbsent.  ",
            "author": "Michael Braun",
            "id": "comment-15847585"
        }
    ]
}