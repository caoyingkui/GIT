{
    "id": "SOLR-6938",
    "title": "Implicit configuration of Update handlers does not match previous explicit one",
    "details": {
        "components": [
            "update"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "5.0",
        "status": "Closed",
        "resolution": "Won't Fix",
        "priority": "Major"
    },
    "description": "There seem to be confusion/inconsistency between contentType (stream or update) parameter as defined in the commented-out update handler and new implicit implementation.\n\nSpecifically, in (current 5 build's) techproduct's solrconfig.xml, it says:\n\n  <!-- The following are implicitly added\n  <requestHandler name=\"/update/json\" class=\"solr.UpdateRequestHandler\">\n        <lst name=\"defaults\">\n         <str name=\"stream.contentType\">application/json</str>\n       </lst>\n  </requestHandler>\n  <requestHandler name=\"/update/csv\" class=\"solr.UpdateRequestHandler\">\n        <lst name=\"defaults\">\n         <str name=\"stream.contentType\">application/csv</str>\n       </lst>\n  </requestHandler>\n  -->\n\nThe documentation also says to use stream.contentType at: https://cwiki.apache.org/confluence/display/solr/Uploading+Data+with+Index+Handlers\n\nHowever, the http://localhost:8983/solr/techproducts/config says instead:\n\n      \"/update/json\":{\n        \"name\":\"/update/json\",\n        \"class\":\"org.apache.solr.handler.UpdateRequestHandler\",\n        \"defaults\":{\"update.contentType\":\"application/json\"}},\n      \"/update/csv\":{\n        \"name\":\"/update/csv\",\n        \"class\":\"org.apache.solr.handler.UpdateRequestHandler\",\n        \"defaults\":{\"update.contentType\":\"application/csv\"}},\n\nSeems to be pure inconsistency, since Reference Guide does not mention update.contentType.\n\nYet earlier in the same solrconfig.xml it says:\n\nTo override the request content type and force a specific\nContent-type, use the request parameter:\n  ?update.contentType=text/csv\n\nAre these different or same? They should definitely be consistent between code and comment, but it seems there is a bit of an extra confusion on top.",
    "attachments": {
        "SOLR-6938.patch": "https://issues.apache.org/jira/secure/attachment/12691499/SOLR-6938.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-09T06:47:01+0000",
            "author": "Noble Paul",
            "content": "is stream.contentType used anywhere in the code? was it some legacy stuff? ",
            "id": "comment-14270651"
        },
        {
            "date": "2015-01-09T13:10:02+0000",
            "author": "Erik Hatcher",
            "content": "is stream.contentType used anywhere in the code? \n\nYes.  Look for CommonParams.STREAM_CONTENTTYPE.  The general, common stream handling uses this, if specified.  In fact, UpdateRequestHandler falls back to the stream contentType setting if the update.contentType isn't specified.\n\nAt first glance, it looks like update.contentType is redundant or unnecessary? ",
            "id": "comment-14270982"
        },
        {
            "date": "2015-01-10T11:37:34+0000",
            "author": "Noble Paul",
            "content": "anyway , let's switch it to the old one and be done with it ",
            "id": "comment-14272461"
        },
        {
            "date": "2015-01-22T18:19:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653989 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1653989 ]\n\nSOLR-6938 Implicit configuration of Update handlers does not match previous explicit one ",
            "id": "comment-14287896"
        },
        {
            "date": "2015-01-22T18:22:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653990 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653990 ]\n\nSOLR-6938 Implicit configuration of Update handlers does not match previous explicit one ",
            "id": "comment-14287906"
        },
        {
            "date": "2015-01-22T18:24:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653992 from Noble Paul in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1653992 ]\n\nSOLR-6938 Implicit configuration of Update handlers does not match previous explicit one ",
            "id": "comment-14287911"
        },
        {
            "date": "2015-01-22T20:08:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654036 from Noble Paul in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1654036 ]\n\nreverting SOLR-6938 ",
            "id": "comment-14288140"
        },
        {
            "date": "2015-01-22T20:10:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654037 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1654037 ]\n\nreverting SOLR-6938 ",
            "id": "comment-14288144"
        },
        {
            "date": "2015-01-22T20:11:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654038 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1654038 ]\n\nreverting SOLR-6938 ",
            "id": "comment-14288147"
        },
        {
            "date": "2015-01-22T20:14:33+0000",
            "author": "Noble Paul",
            "content": "There were more changes which need to be reverted. I will investigate before making a further suggestion. In the worst case we should document this in the release notes as a back incompatible change ",
            "id": "comment-14288150"
        },
        {
            "date": "2015-01-23T01:38:22+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Why is this being reverted? Just this (leading again to inconsistency) or the original - implicit configuration - as well? ",
            "id": "comment-14288573"
        },
        {
            "date": "2015-01-23T03:19:23+0000",
            "author": "Noble Paul",
            "content": "OK\nWe don't need to change anything . \n\n\tThe tests failed because it just short circuits the whole request parameters by parsing and  invoking the request handlers directly.\n\tThis has been out there this way from 4.10\n\n\n\nSo the point is, it is it does not break any backward compatibility even if you use the old config with the new binaries ",
            "id": "comment-14288675"
        },
        {
            "date": "2015-01-23T08:51:34+0000",
            "author": "Noble Paul",
            "content": "both parameters are fine and the feature would work \nbut stream.contentType is a generic parameter and update.contentType is a param specifically used by updaterequesthandler . So , I would say thisis more appropriate\n ",
            "id": "comment-14288982"
        },
        {
            "date": "2015-01-23T16:07:57+0000",
            "author": "Alexandre Rafalovitch",
            "content": "The JIRA here is not about which one is correct. It is about discrepancy between what was in the config and still is in comments and what the code actually implements.\n\nSo, one way or another, the documentation needs to be brought into alignment. So, the comments in the schema.xml (all of them I guess), the release notes if the default changed, the Reference Guide possibly too.\n\nPerhaps it has been done, I didn't check the latest subversion status yet. But, either way, this cannot be Won't Fix. At worst, it's unresolved. ",
            "id": "comment-14289450"
        },
        {
            "date": "2015-01-24T17:00:56+0000",
            "author": "Noble Paul",
            "content": "It has to be documented . So , is there anything else that we need to do? ",
            "id": "comment-14290710"
        },
        {
            "date": "2015-01-24T17:03:56+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I don't think so. If all the tests pass, I think it should be ok. Just documentation and consistency. Which is what the JIRA was about all along. ",
            "id": "comment-14290711"
        },
        {
            "date": "2015-02-23T05:02:39+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332929"
        }
    ]
}