{
    "id": "SOLR-7333",
    "title": "Make the poll queue time configurable and use knowledge that a batch is being processed to poll efficiently",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Sub-task",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "StreamingSolrClients uses ConcurrentUpdateSolrServer to stream documents from leader to replica, by default it sets the pollQueueTime for CUSS to 0 so that we don't impose an unnecessary wait when processing single document updates or the last doc in a batch. However, the downside is that replicas receive many more update requests than leaders; I've seen up to 40x number of update requests between replica and leader.\n\nIf we're processing a batch of docs, then ideally the poll queue time should be greater than 0 up until the last doc is pulled off the queue. If we're processing a single doc, then the poll queue time should always be 0 as we don't want the thread to wait unnecessarily for another doc that won't come.\n\nRather than force indexing applications to provide this optional parameter in an update request, it would be better for server-side code that can detect whether an update request is a single document or batch of documents to override this value internally, i.e. it'll be 0 by default, but since JavaBinUpdateRequestCodec can determine when it's seen the last doc in a batch, it can override the pollQueueTime to something greater than 0.\n\nThis means that current indexing clients will see a boost when doing batch updates without making any changes on their side.",
    "attachments": {
        "SOLR-7333.patch": "https://issues.apache.org/jira/secure/attachment/12708705/SOLR-7333.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-31T23:23:41+0000",
            "author": "Timothy Potter",
            "content": "Here's the original comment I made about this issue:\n\nhttps://issues.apache.org/jira/browse/SOLR-6816?focusedCommentId=14233700&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14233700 ",
            "id": "comment-14389653"
        },
        {
            "date": "2015-04-01T14:59:51+0000",
            "author": "Timothy Potter",
            "content": "Here's a first pass at a patch that uses a 25ms pollQueueTime when processing a batch of documents. The main idea here is that the javabin unmarshalling code can detect when it sees the last doc in a batch and can pass that hint down the line, eventually to the ConcurrentUpdateSolrServer the leader uses to stream docs to replicas. CUSS uses that hint to poll the queue for 0 (vs. waiting the 25ms). This helps stream more docs from the leader to replica per request, which keeps the requests processed by leaders and replicas nearly the same and reduces round-trips per batch between leader and replica. The hint about being the last doc in a batch is necessary to avoid the wait when processing docs one-by-one or when the last doc in a batch has been processed, i.e. poll the queue with a brief wait if more docs are available but don't wait if not.\n\nCurrently, the pollQueueTime is hardcoded to 25 ms, but I suppose we could make that configurable. The key is to use a short wait so I felt 25 ms should be sufficient for most indexing applications.\n\nLastly, I added the isLastDocInBatch flag as a member to UpdateRequest instead of including it into the params because CUSS checks for params changing while processing UpdateRequests in a batch and treats a change in parameters as a separate request, which is what we're trying to avoid here. ",
            "id": "comment-14390741"
        },
        {
            "date": "2015-04-02T16:18:16+0000",
            "author": "Mark Miller",
            "content": "Cool. Great stuff.\n\nCurrently, the pollQueueTime is hardcoded to 25 ms, but I suppose we could make that configurable. The key is to use a short wait so I felt 25 ms should be sufficient for most indexing applications.\n\nWith Solr no longer being a webapp, I like to make things like this configurable by sys prop as a quasi supported option (eg I don't document ). It shouldn't be needed, but given someone hits a case it is, they can exither easily experiment or work around something without an update. ",
            "id": "comment-14392899"
        },
        {
            "date": "2015-04-02T16:20:08+0000",
            "author": "Mark Miller",
            "content": "For example, RecoveryStrategy has this 'safety valve' property you shouldn't have to touch:\n\n\nprivate static final int WAIT_FOR_UPDATES_WITH_STALE_STATE_PAUSE = Integer.getInteger(\"solr.cloud.wait-for-updates-with-stale-state-pause\", 7000);\n\n ",
            "id": "comment-14392902"
        },
        {
            "date": "2015-04-03T20:13:29+0000",
            "author": "Timothy Potter",
            "content": "Thanks for the suggestion Mark! Updated patch with unit test added and ability to set the poll time using a Java system property, default is 25 ms. I think this one is ready to go. ",
            "id": "comment-14395019"
        },
        {
            "date": "2015-05-20T01:03:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1680436 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1680436 ]\n\nSOLR-7333: Make the poll queue time configurable and use knowledge that a batch is being processed to poll efficiently ",
            "id": "comment-14551592"
        },
        {
            "date": "2015-05-20T02:20:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1680441 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1680441 ]\n\nSOLR-7333: Make the poll queue time configurable and use knowledge that a batch is being processed to poll efficiently ",
            "id": "comment-14551675"
        },
        {
            "date": "2015-06-15T21:43:06+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close for 5.2.0. ",
            "id": "comment-14586829"
        },
        {
            "date": "2016-12-12T04:46:58+0000",
            "author": "Mark Miller",
            "content": "We are trying to improve on this in SOLR-9824 so that we use minimal requests and also avoid needless waits after updates for all cases.\n\nThis only worked if you used javabin and it only worked for batched docs in a request - streaming saw no benefit. ",
            "id": "comment-15740962"
        }
    ]
}