{
    "id": "SOLR-11467",
    "title": "CdcrBootstrapTest::testBootstrapWithContinousIndexingOnSourceCluster Failure",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "CDCR"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.6,                                            6.6.1,                                            7.0,                                            7.0.1,                                            7.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "CdcrBootstrapTest is still failing in master and other branches with:\n\n[junit4] FAILURE  130s J1 | CdcrBootstrapTest.testBootstrapWithContinousIndexingOnSourceCluster <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: Document mismatch on target after sync expected:<2000> but was:<1901>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([41753A7BCCA7C778:953071222BF17483]:0)\n   [junit4]    > \tat org.apache.solr.cloud.CdcrBootstrapTest.testBootstrapWithContinousIndexingOnSourceCluster(CdcrBootstrapTest.java:309)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:748)\n\n\n\nref: https://jenkins.thetaphi.de/job/Lucene-Solr-7.0-Linux/423/\n\nFrom one of the failed Solr jenkins log:\n\n   [junit4]   2> 1143166 INFO  (cdcr-replicator-4421-thread-1-processing-n:127.0.0.1:62832_solr x:cdcr-source_shard1_replica_n1 s:shard1 c:cdcr-source r:core_node2) [n:127.0.0.1:62832_solr c:cdcr-source s:shard1 r:core_node2 x:cdcr-source_shard1_replica_n1] o.a.s.h.CdcrReplicator Forwarded 991 updates to target cdcr-target\n   [junit4]   2> 1144176 INFO  (cdcr-replicator-4421-thread-1-processing-n:127.0.0.1:62832_solr x:cdcr-source_shard1_replica_n1 s:shard1 c:cdcr-source r:core_node2) [n:127.0.0.1:62832_solr c:cdcr-source s:shard1 r:core_node2 x:cdcr-source_shard1_replica_n1] o.a.s.h.CdcrReplicator Forwarded 909 updates to target cdcr-target\n   [junit4]   2> 1145118 INFO  (cdcr-replicator-4421-thread-1-processing-n:127.0.0.1:62832_solr x:cdcr-source_shard1_replica_n1 s:shard1 c:cdcr-source r:core_node2) [n:127.0.0.1:62832_solr c:cdcr-source s:shard1 r:core_node2 x:cdcr-source_shard1_replica_n1] o.a.s.h.CdcrReplicator Forwarded 0 updates to target cdcr-target\n\nTotal 1900 updates were sent, instead of 2000. Ideally the bootstrap process is responsible for 1000, and normal cdc replication is responsble for 1000. On looking closely, the bootstrap is completed successfully. We are 100% sure here, bootstrap worked w/o any issue. And still 1900 updates were sent via replicator, instead of 1000.",
    "attachments": {
        "SOLR-11467-debug-code.log": "https://issues.apache.org/jira/secure/attachment/12891510/SOLR-11467-debug-code.log"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-11T15:19:36+0000",
            "content": "The primary candidate of our culprit is whether the CORRECT collection-checkpoint has been returned to source cluster of the target. I have put extensive logging at multiple places in the uploaded patch to note versions of the updates we are sending through. I believe if it fails again, we will be able to get fair amount of idea where the problem lies. \n\nBootstrap is clear of any bugs, as of now. ",
            "author": "Amrit Sarkar",
            "id": "comment-16200441"
        },
        {
            "date": "2017-10-11T15:20:38+0000",
            "content": "Requesting committers if we can have this piece of code in master until we have another failure on same testcase.\n\nI ran beasts of 150, 150 and 500 on branch_7x, branch_7_1 and master branch respectively, and CdcrBootstrapTest didn't fail once for me. ",
            "author": "Amrit Sarkar",
            "id": "comment-16200444"
        },
        {
            "date": "2017-10-13T03:48:08+0000",
            "content": "Hi Amrit,\n\nI'll commit the patch with additional logging shortly. \n\nMaking a couple of changes before committing :\n\nThis probably doesn't need to change?\n\n- System.out.println(\"Adding \" + docs + \" docs with commit=true, numDocs=\" + numDocs);\n+ System.out.println(\"Adding 100 docs with commit=true, numDocs=\" + numDocs);\n\n\n\nAdding \"nocommit\" will get precommit. So removing that comment and adding another placeholder ",
            "author": "Varun Thacker",
            "id": "comment-16203024"
        },
        {
            "date": "2017-10-13T07:09:50+0000",
            "content": "\n- System.out.println(\"Adding \" + docs + \" docs with commit=true, numDocs=\" + numDocs);\n+ System.out.println(\"Adding 100 docs with commit=true, numDocs=\" + numDocs);\n\n\n\nThis will be seperate patch and seperate jira. We always add 100 docs in batch and commit; but still the msg shows 10, when no nightly, 100 when nightly. That's a wrong log line, I thought putting it up now will shed the confusion.\n\nYes, I did put nocommit, so that you can verify. Thanks  ",
            "author": "Amrit Sarkar",
            "id": "comment-16203143"
        },
        {
            "date": "2017-10-25T21:29:08+0000",
            "content": "I haven't see any failures on Jenkins for the last 10 days on any branch. Not sure what changed since this was only committed to master. Going to revert this from master for now ",
            "author": "Varun Thacker",
            "id": "comment-16219552"
        },
        {
            "date": "2017-10-25T21:43:52+0000",
            "content": "Commit 0ddb8a03d39c0902198b780752e0cf0934c8041a in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0ddb8a0 ]\n\nSOLR-11467: Remove additional logging to track test failures ",
            "author": "ASF subversion and git services",
            "id": "comment-16219595"
        }
    ]
}