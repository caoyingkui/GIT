{
    "id": "LUCENE-6670",
    "title": "OOM error in merge causes deadlock",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.2.1",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Using the ConcurrentMergeScheduler, when merging catches an OutOfMemoryError and tries to rollback, the merge thread ends up calling Thread.join on itself, which will never complete.\n\nStack trace (line numbers are for Lucene 5.2.1):\n\n\"Lucene Merge Thread #1\" #356502 daemon prio=5 os_prio=0 tid=0x00007f3f78622000 nid=0x11b5 in Object.wait() [0x00007f3e90528000]\n   java.lang.Thread.State: WAITING (on object monitor)\n        at java.lang.Object.wait(Native Method)\n        at java.lang.Thread.join(Thread.java:1245)\n        - locked <0x00000001965aff78> (a org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread)\n        at java.lang.Thread.join(Thread.java:1319)\n        at org.apache.lucene.index.ConcurrentMergeScheduler.sync(ConcurrentMergeScheduler.java:420)\n        at org.apache.lucene.index.ConcurrentMergeScheduler.close(ConcurrentMergeScheduler.java:401)\n        at org.apache.lucene.index.IndexWriter.rollbackInternal(IndexWriter.java:1948)\n        at org.apache.lucene.index.IndexWriter.rollback(IndexWriter.java:1921)\n        - locked <0x00000001965b0100> (a java.lang.Object)\n        at org.apache.lucene.index.IndexWriter.tragicEvent(IndexWriter.java:4439)\n        - locked <0x00000001965b0100> (a java.lang.Object)\n        at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3571)\n        at org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:581)\n        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:619)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14621259",
            "author": "Michael McCandless",
            "date": "2015-07-09T21:01:08+0000",
            "content": "Thanks, this should be fixed by LUCENE-6579 ... I hit exactly the same deadlock and fixed it there by having CMS.sync skip waiting on the calling thread. "
        },
        {
            "id": "comment-14626124",
            "author": "Michael McCandless",
            "date": "2015-07-14T09:44:00+0000",
            "content": "This should now be fixed via LUCENE-6579. "
        },
        {
            "id": "comment-14713185",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:06:01+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}