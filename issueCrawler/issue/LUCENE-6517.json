{
    "id": "LUCENE-6517",
    "title": "mockfilesystem tests fail with IBM jdk",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "Test failures look like this:\n\n   [junit4] Suite: org.apache.lucene.mockfile.TestVerboseFS\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestVerboseFS -Dtests.method=testURI -Dtests.seed=A5E55A5C894B6526 -Dtests.locale=lt_LT -Dtests.timezone=America/Marigot -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.32s J1 | TestVerboseFS.testURI <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:</home/rmuir/workspace/trunk-ibm/lucene/build/test-framework/test/J1/temp/lucene.mockfile.TestVerboseFS A5E55A5C894B6526-001/tempDir-010/\u4e2d\u56fd> but was:</home/rmuir/workspace/trunk-ibm/lucene/build/test-framework/test/J1/temp/lucene.mockfile.TestVerboseFS A5E55A5C894B6526-001/tempDir-010/-\u00fd>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([A5E55A5C894B6526:2C5721F741543F17]:0)\n   [junit4]    > \tat org.apache.lucene.mockfile.MockFileSystemTestCase.testURI(MockFileSystemTestCase.java:72)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:785)\n   [junit4]   2> NOTE: leaving temporary files on disk at: /home/rmuir/workspace/trunk-ibm/lucene/build/test-framework/test/J1/temp/lucene.mockfile.TestVerboseFS A5E55A5C894B6526-001\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene50): {}, docValues:{}, sim=RandomSimilarityProvider(queryNorm=true,coord=no): {}, locale=lt_LT, timezone=America/Marigot\n   [junit4]   2> NOTE: Linux 3.13.0-49-generic amd64/IBM Corporation 1.8.0 (64-bit)/cpus=8,threads=1,free=1578528,total=13041664\n   [junit4]   2> NOTE: All tests run in this JVM: [TestVerboseFS]\n   [junit4] Completed [4/36] on J1 in 0.97s, 14 tests, 1 failure <<< FAILURES!\n\n\n\nI think its a JDK bug. I've posted a small testcase here:\n\nhttps://developer.ibm.com/answers/questions/194536/bug-in-pathtouri-with-the-default-filesystem-provi.html",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14572041",
            "author": "Robert Muir",
            "date": "2015-06-04T03:18:04+0000",
            "content": "This is an important test: if it fails, it means your filesystem isn't working correctly.\n\nI will add an assume for the moment linked to this issue, so we can test other things. "
        },
        {
            "id": "comment-14572043",
            "author": "ASF subversion and git services",
            "date": "2015-06-04T03:20:20+0000",
            "content": "Commit 1683453 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1683453 ]\n\nLUCENE-6517: disable test on J9, for now "
        },
        {
            "id": "comment-14572044",
            "author": "ASF subversion and git services",
            "date": "2015-06-04T03:21:24+0000",
            "content": "Commit 1683454 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1683454 ]\n\nLUCENE-6517: disable test on J9, for now "
        },
        {
            "id": "comment-14595577",
            "author": "Brijesh Nekkare",
            "date": "2015-06-22T09:38:45+0000",
            "content": "The fix for this is currently undergoing the review process.\n\nBrijesh Nekkare\nIBM JRE team "
        },
        {
            "id": "comment-14679784",
            "author": "Brijesh Nekkare",
            "date": "2015-08-10T08:25:38+0000",
            "content": "APAR IV71947 fixes this issue.  Fixed as part of 15_04 release targeted for October end.\n\nError Message: \nThe java.net.URI object returned by java.nio.file.Path.toUri() is incorrect. Consequently,the java.nio.Path object created using the URI through the java.nio.Path.get(URI) is also incorrect.\n\nProblem Summary: \nThe java.nio.file.Path.toUri() returns an incorrect URI for file paths comprising of multi-byte characters. The round-trip guarantee provided by the toUri() specification to the java.io.File class is violated.  \n\nThis APAR will be fixed in the following Java Releases:\n7 SR9 FP20 (7.0.9.20)\n7 R1 SR3 FP20 (7.1.3.20)\n8 SR2 (8.0.2.0)  \n\nThanks and Regards\nBrijesh Nekkare\nIBM Java team "
        }
    ]
}