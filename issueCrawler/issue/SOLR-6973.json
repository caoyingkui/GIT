{
    "id": "SOLR-6973",
    "title": "Some documents will not update on a cloud server using SignatureUpdateProcessorFactory",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.7",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "We are using solr cloud to hold recent log data for our internal auditing and research. When first indexing the data, we flag the record with Processed=false, and use this to search solr for new records to put into our archive repository. Once the record is committed to the archive repository, we update the record by setting the flag to true. As part of eliminating duplicate log records we use the SignatureUpdateProcessorFactory with overwriteDupes set to true to deduplication any logs that have been sent more than once. This works great for 95% of the data. We are able add the records to solr, lookup any records that have not been added to the archive, add them, and then set the flag to true. However, for 5% of the records we are not able to update the flag in the cloud configuration. When sending the records that do not update using curl as a test, I do not see any error associated with the non-update.\n\nI also set up the same cores locally without a cloud configuration and the same record data does update without issue, so this seems to be a bug related to cloud.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-13T20:26:56+0000",
            "author": "Erick Erickson",
            "content": "First, it's usually best to start the discussion on the user's list before raising a JIRA, it gets more eyes and you can get faster help.\n\nIn this case, how are you routing documents? I'm pretty sure that the SignatureUpdateProcessorFactory is going to operate on docs after they get routed to a shard, not before. So I suspect you're not seeing what you think you are, you're not actually deduplicating docs that you expect to de-duplicate because they're on different shards.\n\nYou have to be careful here when testing though. If the docs happen to be routed to the same shard, then it'll all work fine.\n\nBut you haven't shown us how you configured your SignatureUpdateProcessor and where it is in your update chain. Details matter here. ",
            "id": "comment-14275874"
        },
        {
            "date": "2015-01-23T20:33:01+0000",
            "author": "Robert de Lorimier",
            "content": "Hi, sorry this is my first issue, so I did not know the protocol for how to bring up an issue. To your point, this is the update processor configuration for our core:\n\n\t<updateRequestProcessorChain name=\"dedupe\">\n\t\t<processor class=\"solr.processor.SignatureUpdateProcessorFactory\">\n\t\t\t<bool name=\"enabled\">true</bool>\n\t\t\t<str name=\"signatureField\">id</str>\n\t\t\t<bool name=\"overwriteDupes\">true</bool>\n\t\t\t<str name=\"fields\">CreateDate,DataCenter,Origin,Environment,Host,Level,Path,Message,ExceptionType</str>\n\t\t\t<str name=\"signatureClass\">solr.processor.Lookup3Signature</str>\n\t\t</processor>\n\t\t<processor class=\"solr.LogUpdateProcessorFactory\" />\n\t\t<processor class=\"solr.RunUpdateProcessorFactory\" />\n\t</updateRequestProcessorChain>\n\nAs for routing, I am using the built in routing in solr. We have three nodes, and the core has a replication of one. I am not sure what you mean by having the document routed to the different shard. In this particular case, the schema is as so:\n\n\t<field name=\"version\" type=\"long\" indexed=\"true\" required=\"true\"/>\n\t<field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\"/>\n\t<field name=\"CreateDate\" type=\"date\" indexed=\"true\" stored=\"true\" required=\"true\"/>\n\t<field name=\"DataCenter\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\t<field name=\"Origin\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\t<field name=\"Environment\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\t<field name=\"Host\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\t<field name=\"Level\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\t<field name=\"Path\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\t<field name=\"Message\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\t<field name=\"ExceptionType\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\t<field name=\"Processed\" type=\"boolean\" indexed=\"true\" stored=\"true\" multiValued=\"false\" required=\"true\"/>\n\nFrom looking at the schema, all but three fields, id, version, Processed, are included in the processor signatures. If the same values are included in the fields for the signature I would have thought that the document would always be routed the same way. Please let me know if this is different. In the case of checking whether Processed field in the document has been update or not, I am simply looking at the document via the solr url:\n\nhttp://server001:8983/solr/log2_search/select?q=id:6a692418a84a849a\n\nShowing:\n\n<response>\n<lst name=\"responseHeader\">\n  <int name=\"status\">0</int>\n  <int name=\"QTime\">1</int>\n  <lst name=\"params\"><str name=\"q\">id:6a692418a84a849a</str></lst>\n</lst>\n<result name=\"response\" numFound=\"1\" start=\"0\">\n<doc>\n  <str name=\"Host\">web.1_m2qa11ziio_dev</str>\n  <str name=\"DataCenter\">heroku</str>\n  <str name=\"Origin\">m2qa11ziio</str>\n  <str name=\"Environment\">dev</str>\n  <date name=\"CreateDate\">2015-01-10T00:07:48.811Z</date>\n  <str name=\"Level\">I</str>\n  <str name=\"ExceptionType\"/>\n  <str name=\"Message\">2015-01-09T00:07:48.811737+00:00 host heroku web.1 - Process running mem=525M(102.6%)</str>\n  <str name=\"Path\">http://rasmdev.ziio.net/app/m2qa11ziio/env/Dev/dc/Heroku</str>\n  <bool name=\"Processed\">false</bool>\n  <str name=\"id\">6a692418a84a849a</str>\n  <long name=\"version\">1490119171532390400</long>\n</doc>\n</result>\n</response>\n\nWhen I do an update via curl:\n\ncurl http://server001:8983/solr/log2_search/update/json -H 'Content-type:application/json' -d '[\n\t{\n\t\"Host\":\"web.1_m2qa11ziio_dev\",\n\t\"DataCenter\":\"heroku\",\n\t\"Origin\":\"m2qa11ziio\",\n\t\"Environment\":\"dev\",\n\t\"CreateDate\":\"2015-01-10T00:07:48.811Z\",\n\t\"Level\":\"I\",\n\t\"ExceptionType\":\"\",\n\t\"Message\":\"2015-01-09T00:07:48.811737+00:00 host heroku web.1 - Process running mem=525M(102.6%)\",\n\t\"Path\":\"http://rillodev.ziio.net/app/m2qa11ziio/env/Dev/dc/Heroku\",\n\t\"Processed\":\"true\"\n\t}\n]'\n\nNothing changes. Hopefully that is enough detail to go on. \n\nAs I noted earlier, only about 4.7% of the documents have the issue, and the document updateability does not change. If a document cannot update, it continues to not update. ",
            "id": "comment-14289918"
        }
    ]
}