{
    "id": "LUCENE-3887",
    "title": "'ant javadocs' should fail if a package is missing a package.html",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/build"
        ],
        "type": "Task",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "While reviewing the javadocs I noticed many packages are missing a basic package.html.\n\nFor 3.x I committed some package.html files where they were missing (I will port forward to trunk).\n\nI think all packages should have this... really all public/protected classes/methods/constants,\nbut this would be a good step.",
    "attachments": {
        "LUCENE-3887.patch": "https://issues.apache.org/jira/secure/attachment/12519369/LUCENE-3887.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-20T16:40:37+0000",
            "content": "+1\n\nIt shouldn't be the RM who must do this on release... ",
            "author": "Michael McCandless",
            "id": "comment-13233544"
        },
        {
            "date": "2012-03-20T17:12:17+0000",
            "content": "I couldn't find a 'javadocs linter' for stuff like this: does anyone know of one?\n\nAs a first step, maybe we could check this with some python code in the release \nsmoke tester: sure its not ideal since its still stuck on the RM but its much better \nthan manual eyeballing. ",
            "author": "Robert Muir",
            "id": "comment-13233565"
        },
        {
            "date": "2012-03-20T17:41:04+0000",
            "content": "Robert,\n\nI should be careful recommending things I haven't tried, but perhaps Checkstyle (http://checkstyle.sourceforge.net/) could be useful for this.  The javadoc package check described on http://checkstyle.sourceforge.net/config_javadoc.html seems to cover this sort of style check.\n\nCheckstyle also integrates with build tools so it's also possible to do some light style checking as part of the build \u2013 either optional or integrated longer term, if we'd like that.  (I'm sure there are various opinions on wether this is a good idea.) ",
            "author": "Christian Moen",
            "id": "comment-13233604"
        },
        {
            "date": "2012-03-20T17:45:48+0000",
            "content": "Christian this looks just like what we need! I like some of the other checks available on javadocs too.\n\nOne bummer is the GPL license, but maybe its ok for us to run this on hudson nightly as a separate thing somehow?\n\nAccording to http://ant.apache.org/nightlies.html, they are using checkstyle. ",
            "author": "Robert Muir",
            "id": "comment-13233610"
        },
        {
            "date": "2012-03-20T21:47:53+0000",
            "content": "+1. Developers should have some ant-tasks that could be run to check that their change is compliant\n\nCurrently I run something \"ant clean test javadocs dist\" to validate things before checkin. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13233820"
        },
        {
            "date": "2012-03-21T02:58:57+0000",
            "content": "Robert, very good point regarding the license.  Thanks.\n\nI believe it should be possible for us to run this as part of nightly builds somehow.  If we do light checking only and expect few problems with code changes in general, I think this sort of scheme might work just fine.\n\nEven if it turned out to be possible to include Checkstyle as a build-time dependency only by never including it in any binary or source distributions, I don't think doing so would be very wise.\n\nHaving said this, if we use Checkstyle as part of the nightly builds, there's soon a need to have it available for local builds as well, as Jan points out.\n\nPerhaps running these checks could be an optional target for developers that they can do with their self-supplied Checkstyle jar?  For example, it someone runs ant checkstyle, we'll tell them that Checkstyle isn't included for license reasons and quickly explain the few steps necessary to get checking going.\n\nPersonally, I think introducing more style checking in Lucene/Solr would be a good thing. ",
            "author": "Christian Moen",
            "id": "comment-13234046"
        },
        {
            "date": "2012-03-21T03:33:18+0000",
            "content": "\nPerhaps running these checks could be an optional target for developers that they can do with their self-supplied Checkstyle jar? For example, it someone runs ant checkstyle, we'll tell them that Checkstyle isn't included for license reasons and quickly explain the few steps necessary to get checking going.\n\nThats a good idea, maybe you just have to put the jar in your ~/.ant/lib otherwise the target does not work (kinda sorta similar to clover stuff we have). ",
            "author": "Robert Muir",
            "id": "comment-13234055"
        },
        {
            "date": "2012-03-21T03:47:00+0000",
            "content": "In my projects, I handle stuff like that in unit tests. We can have a TestRelease unit test with testPackageHTML() that lists all directories and verifies that there's a package.html found.\n\n\n\tIf someone runs proper testing before commit, he'll catch it.\n\tJenkins should definitely catch it during the night builds.\n\n\n\nWe can have these sort of tests in some common misc/src folder, and have the build.xml always run them, whether you ran the test from a specific module, or from the root.\n\nJust an idea. ",
            "author": "Shai Erera",
            "id": "comment-13234063"
        },
        {
            "date": "2012-03-21T23:42:14+0000",
            "content": "Simple patch to at least add basic checking to smokeTestRelease.py \u2013 it only checks for missing first-sentence description in package-summary.html. ",
            "author": "Michael McCandless",
            "id": "comment-13235206"
        },
        {
            "date": "2012-03-22T12:37:20+0000",
            "content": "Another iteration, this time working I think  ",
            "author": "Michael McCandless",
            "id": "comment-13235542"
        },
        {
            "date": "2012-03-22T12:44:04+0000",
            "content": "Some unrelated fixes in the patch, otherwise ok for smokeTesting. I would just disagree to add python requirements to our official ant script... ",
            "author": "Uwe Schindler",
            "id": "comment-13235543"
        },
        {
            "date": "2012-03-22T12:49:08+0000",
            "content": "Uwe well we can discuss integration into the official ant build later?\n\nFor now personally I would like to have an automated check in the smokeTester script, that would help me\nclean the stuff up rather than manually eyeballing everything. Its a step. ",
            "author": "Robert Muir",
            "id": "comment-13235546"
        },
        {
            "date": "2012-03-22T12:54:43+0000",
            "content": "Did I say anything else? ",
            "author": "Uwe Schindler",
            "id": "comment-13235549"
        },
        {
            "date": "2012-03-22T13:34:21+0000",
            "content": "You can also just run the javadoc checker directly in a source checkout, like this:\n\n  python -u dev-tools/scripts/checkJavaDocs.py /lucene/3x/lucene/build\n\n\n\nYou have to \"ant javadocs\" first yourself.\n\nRight now it only checks for missing sentences in the package-summary.html... I'll see if I can fix it to also detect missing package.html's...\n\nHere's what it reports on 3.x right now:\n\n/lucene/3x/lucene/build/docs/api/contrib-highlighter/org/apache/lucene/search/highlight/package-summary.html\n  missing: TokenStreamFromTermPositionVector\n\n/lucene/3x/lucene/build/docs/api/contrib-highlighter/org/apache/lucene/search/vectorhighlight/package-summary.html\n  missing: BoundaryScanner\n  missing: BaseFragmentsBuilder\n  missing: FieldFragList.WeightedFragInfo\n  missing: FieldFragList.WeightedFragInfo.SubInfo\n  missing: FieldPhraseList.WeightedPhraseInfo\n  missing: FieldPhraseList.WeightedPhraseInfo.Toffs\n  missing: FieldQuery.QueryPhraseMap\n  missing: FieldTermStack.TermInfo\n  missing: ScoreOrderFragmentsBuilder.ScoreComparator\n  missing: SimpleBoundaryScanner\n\n/lucene/3x/lucene/build/docs/api/contrib-spatial/org/apache/lucene/spatial/tier/package-summary.html\n  missing: DistanceHandler.Precision\n\n/lucene/3x/lucene/build/docs/api/contrib-spellchecker/org/apache/lucene/search/suggest/package-summary.html\n  missing: Lookup.LookupPriorityQueue\n\n/lucene/3x/lucene/build/docs/api/contrib-spellchecker/org/apache/lucene/search/suggest/jaspell/package-summary.html\n  missing: JaspellLookup\n\n/lucene/3x/lucene/build/docs/api/contrib-spellchecker/org/apache/lucene/search/suggest/tst/package-summary.html\n  missing: TSTAutocomplete\n  missing: TSTLookup\n\n/lucene/3x/lucene/build/docs/api/contrib-pruning/org/apache/lucene/index/pruning/package-summary.html\n  missing: CarmelTopKTermPruningPolicy.ByDocComparator\n  missing: CarmelUniformTermPruningPolicy.ByDocComparator\n\n/lucene/3x/lucene/build/docs/api/contrib-facet/org/apache/lucene/facet/taxonomy/writercache/lru/package-summary.html\n  missing: LruTaxonomyWriterCache.LRUType\n\n/lucene/3x/lucene/build/docs/api/contrib-facet/org/apache/lucene/facet/index/package-summary.html\n  missing: FacetsPayloadProcessorProvider.FacetsDirPayloadProcessor\n\n/lucene/3x/lucene/build/docs/api/core/org/apache/lucene/store/package-summary.html\n  missing: FSDirectory.FSIndexOutput\n  missing: NIOFSDirectory.NIOFSIndexInput\n  missing: RAMFile\n  missing: SimpleFSDirectory.SimpleFSIndexInput\n  missing: SimpleFSDirectory.SimpleFSIndexInput.Descriptor\n\n/lucene/3x/lucene/build/docs/api/core/org/apache/lucene/index/package-summary.html\n  missing: MergePolicy.MergeAbortedException\n\n/lucene/3x/lucene/build/docs/api/core/org/apache/lucene/search/package-summary.html\n  missing: FieldCache.CreationPlaceholder\n  missing: FieldComparator.NumericComparator&lt;T extends Number&gt;\n  missing: FieldValueHitQueue.Entry\n  missing: QueryTermVector\n  missing: ScoringRewrite&lt;Q extends Query&gt;\n  missing: SpanFilterResult.PositionInfo\n  missing: SpanFilterResult.StartEnd\n  missing: TimeLimitingCollector.TimerThread\n\n/lucene/3x/lucene/build/docs/api/core/org/apache/lucene/util/package-summary.html\n  missing: ByteBlockPool.Allocator\n  missing: ByteBlockPool.DirectAllocator\n  missing: ByteBlockPool.DirectTrackingAllocator\n  missing: BytesRefHash.BytesStartArray\n  missing: BytesRefHash.DirectBytesStartArray\n  missing: BytesRefIterator.EmptyBytesRefIterator\n  missing: DoubleBarrelLRUCache.CloneableKey\n  missing: OpenBitSetDISI\n  missing: PagedBytes.Reader\n  missing: UnicodeUtil.UTF16Result\n  missing: UnicodeUtil.UTF8Result\n\n/lucene/3x/lucene/build/docs/api/contrib-analyzers/org/tartarus/snowball/package-summary.html\n  missing: Among\n  missing: TestApp\n\n/lucene/3x/lucene/build/docs/api/contrib-xml-query-parser/org/apache/lucene/xmlparser/package-summary.html\n  missing: FilterBuilder\n  missing: CorePlusExtensionsParser\n  missing: DOMUtils\n  missing: FilterBuilderFactory\n  missing: QueryBuilderFactory\n  missing: ParserException\n\n/lucene/3x/lucene/build/docs/api/contrib-xml-query-parser/org/apache/lucene/xmlparser/builders/package-summary.html\n  missing: SpanQueryBuilder\n  missing: BooleanFilterBuilder\n  missing: BooleanQueryBuilder\n  missing: BoostingQueryBuilder\n  missing: BoostingTermBuilder\n  missing: ConstantScoreQueryBuilder\n  missing: DuplicateFilterBuilder\n  missing: FilteredQueryBuilder\n  missing: FuzzyLikeThisQueryBuilder\n  missing: LikeThisQueryBuilder\n  missing: MatchAllDocsQueryBuilder\n  missing: RangeFilterBuilder\n  missing: SpanBuilderBase\n  missing: SpanFirstBuilder\n  missing: SpanNearBuilder\n  missing: SpanNotBuilder\n  missing: SpanOrBuilder\n  missing: SpanOrTermsBuilder\n  missing: SpanQueryBuilderFactory\n  missing: SpanTermBuilder\n  missing: TermQueryBuilder\n  missing: TermsFilterBuilder\n\n/lucene/3x/lucene/build/docs/api/contrib-misc/org/apache/lucene/store/package-summary.html\n  missing: NativePosixUtil\n  missing: WindowsDirectory.WindowsIndexInput\n\n/lucene/3x/lucene/build/docs/api/test-framework/org/apache/lucene/store/package-summary.html\n  missing: MockDirectoryWrapper.Throttling\n\n/lucene/3x/lucene/build/docs/api/test-framework/org/apache/lucene/util/package-summary.html\n  missing: English\n  missing: StoreClassNameRule\n  missing: SystemPropertiesInvariantRule\n  missing: UncaughtExceptionsRule.UncaughtExceptionEntry\n\n/lucene/3x/lucene/build/docs/api/contrib-benchmark/org/apache/lucene/benchmark/byTask/feeds/demohtml/package-summary.html\n  missing: Entities\n  missing: HTMLParser\n  missing: Tags\n\n/lucene/3x/lucene/build/docs/api/contrib-benchmark/org/apache/lucene/benchmark/byTask/tasks/package-summary.html\n  missing: BenchmarkHighlighter\n  missing: NewCollationAnalyzerTask.Implementation\n\n/lucene/3x/lucene/build/docs/api/contrib-queries/org/apache/lucene/search/package-summary.html\n  missing: DuplicateFilter\n\n/lucene/3x/lucene/build/docs/api/contrib-queryparser/org/apache/lucene/queryParser/core/nodes/package-summary.html\n  missing: TextableQueryNode\n  missing: PathQueryNode.QueryText\n  missing: PhraseSlopQueryNode\n  missing: ProximityQueryNode.ProximityType\n  missing: ModifierQueryNode.Modifier\n  missing: ParametricQueryNode.CompareOperator\n  missing: ProximityQueryNode.Type\n\n/lucene/3x/lucene/build/docs/api/contrib-queryparser/org/apache/lucene/queryParser/core/parser/package-summary.html\n  missing: EscapeQuerySyntax.Type\n\n/lucene/3x/lucene/build/docs/api/contrib-queryparser/org/apache/lucene/queryParser/surround/query/package-summary.html\n  missing: DistanceSubQuery\n  missing: SimpleTerm.MatchingTermVisitor\n  missing: AndQuery\n  missing: BasicQueryFactory\n  missing: ComposedQuery\n  missing: DistanceQuery\n  missing: FieldsQuery\n  missing: NotQuery\n  missing: OrQuery\n  missing: SimpleTerm\n  missing: SpanNearClauseFactory\n  missing: SrndPrefixQuery\n  missing: SrndQuery\n  missing: SrndTermQuery\n  missing: SrndTruncQuery\n  missing: TooManyBasicQueries\n\n/lucene/3x/lucene/build/docs/api/contrib-queryparser/org/apache/lucene/queryParser/standard/parser/package-summary.html\n  missing: EscapeQuerySyntaxImpl\n  missing: StandardSyntaxParser\n\n/lucene/3x/lucene/build/docs/api/contrib-queryparser/org/apache/lucene/queryParser/standard/config/package-summary.html\n  missing: FuzzyConfig\n  missing: StandardQueryConfigHandler.ConfigurationKeys\n  missing: DefaultOperatorAttribute.Operator\n  missing: StandardQueryConfigHandler.Operator\n\n/lucene/3x/lucene/build/docs/api/contrib-queryparser/org/apache/lucene/queryParser/standard/builders/package-summary.html\n  missing: AnyQueryNodeBuilder\n\n ",
            "author": "Michael McCandless",
            "id": "comment-13235574"
        },
        {
            "date": "2012-03-22T15:26:20+0000",
            "content": "OK I committed the basic checking for smoke tester...\n\nI'll leave this open for having \"ant javadocs\" fail when things are missing... ",
            "author": "Michael McCandless",
            "id": "comment-13235635"
        },
        {
            "date": "2012-04-23T16:25:34+0000",
            "content": "initial patch: just hooks into lucene's 'javadocs-lint' (but also a one-liner to hook into solrs).\n\nI added an option for 'level' of checking, currently its at 'package'. the idea is we fix those... move to 'class'.... then 'method'.... ",
            "author": "Robert Muir",
            "id": "comment-13259697"
        },
        {
            "date": "2012-04-24T12:44:15+0000",
            "content": "This is fixed: but it would be good to fix it at class level as well, and also good to at least have package.htmls for Solr and enable the check there. ",
            "author": "Robert Muir",
            "id": "comment-13260482"
        }
    ]
}