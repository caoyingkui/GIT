{
    "id": "SOLR-11055",
    "title": "Add 'commitWithin' testing (of both soft/hard commits) to SoftAutoCommitTest",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Sub-task",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "SoftAutoCommitTest should be enhanced with it's monitor based polling to also check that commitWithin works just as well as autocommit maxTime for either softCommit or hardCommit (can't test both at the same time due to how commitWithin is configured)",
    "attachments": {
        "SOLR-11055.patch": "https://issues.apache.org/jira/secure/attachment/12876966/SOLR-11055.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-12T19:20:10+0000",
            "content": "I have not tried this yet, but here's a rough outline/psuedo-code of what i think would make sense for this...\n\n\n\tadd some enum CommitWithinType ( HARD, SOFT, NONE )\n\trefactor all existing *MaxTime* based tests, so the meat of the tests are parameterized by CommitWithinType, ala...\n\npublic void testSoftAndHardCommitMaxTimeMixedAdds() throws Exception {\n   doTestSoftAndHardCommitMaxTimeMixedAdds(NONE);\n}\npublic void testSoftCommitWithinAndHardCommitMaxTimeMixedAdds() throws Exception {\n   doTestSoftAndHardCommitMaxTimeMixedAdds(SOFT);\n}\npublic void testHardCommitWithinAndSoftCommitMaxTimeMixedAdds() throws Exception {\n   doTestSoftAndHardCommitMaxTimeMixedAdds(HARD);\n}\nprivate void doTestSoftAndHardCommitMaxTimeMixedAdds(final CommitWithinType commitWithinType) throws Exception {\n  ...\n}\n\n\n\tin the \"meat\" of these refactored methods...\n\t\n\t\tDo \"something\" to set the DUH2.commitWithinSoftCommit value\n\t\t\n\t\t\tthis might require refactoring the test to do initCore inside each method after setting the sysprop\n\t\t\tOr we add a new test only method to DUH2 to change this on the fly?\n\t\t\n\t\t\n\t\tchange the tracker setup to only set tthe autoCommit times when they don't match the commitWithinType...\n\n    softTracker.setTimeUpperBound(commitWithinType.equals(SOFT) ? -1 : softCommitWaitMillis);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(commitWithinType.equals(HARD) ? -1 : hardCommitWaitMillis);\n    hardTracker.setDocsUpperBound(-1);\n\n\n\t\tinit a new commitWithin var in the test via some helper method on the enum... \n\n// NONE returns -1\n// HARD returns hardCommitWaitMillis\n// SOFT returns softCommitWaitMillis\nfinal long commitWithin = commitWithinType.useValue(softCommitWaitMillis, hardCommitWaitMillis);\n\n\n\t\tupdate all adoc(...) calls in the test to use the alternative version that takes in commitWithin\n\t\n\t\n\tthe existing polling and assertions based on hardCommitWaitMillis and softCommitWaitMillis in all of these test methods should continue to work as expected \u2013 regardless of wether the commits are being triggered by the autoCommit timmer or the commitWithin timers\n\n ",
            "author": "Hoss Man",
            "id": "comment-16084534"
        },
        {
            "date": "2017-07-12T22:18:44+0000",
            "content": "here's a patch i'm currently testing.... seems to be working fine.\n\nNOTE: this does make SoftAutoCommitTest take longer (because it's essentially testing 3x as much stuff).  An alternative approach would be to refactor the test methods into the base class, and let subclasses just declare a (static) CommitWithinType instance.  That approach would also let us avoid the changes to DUH2: each test could just set the sysprop statically before initCore. ",
            "author": "Hoss Man",
            "id": "comment-16084829"
        },
        {
            "date": "2017-07-13T18:54:24+0000",
            "content": "updated patch to current master branch ",
            "author": "Hoss Man",
            "id": "comment-16086218"
        },
        {
            "date": "2017-07-13T18:56:07+0000",
            "content": "we should hold off on committing this until the latest commit in SOLR-10109 has a chance to soak in a bunch of jenkins builds, to better isolate/diagnose any hypothetical problems that might pop up because of either change. ",
            "author": "Hoss Man",
            "id": "comment-16086222"
        },
        {
            "date": "2017-10-09T23:27:09+0000",
            "content": "picking this back up...\n\npatch still applies to master cleanly, and i still think it's a good idea.\ni'll beast it a bit tonight and if i can't find any flaws i'll commit to master as is tomorrow and let it soak at least a week before backporting to 7x. ",
            "author": "Hoss Man",
            "id": "comment-16197866"
        },
        {
            "date": "2017-10-10T16:08:38+0000",
            "content": "Commit b21721f152b48317817bafc508066160864df4c3 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b21721f ]\n\nSOLR-11055: Add 'commitWithin' testing (of both soft/hard commits) to SoftAutoCommitTest ",
            "author": "ASF subversion and git services",
            "id": "comment-16198890"
        },
        {
            "date": "2017-10-16T17:16:45+0000",
            "content": "Commit 54b63d17af4b39f85794678077019b4672a8f8d0 in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=54b63d1 ]\n\nSOLR-11055: Add 'commitWithin' testing (of both soft/hard commits) to SoftAutoCommitTest\n\n(cherry picked from commit b21721f152b48317817bafc508066160864df4c3) ",
            "author": "ASF subversion and git services",
            "id": "comment-16206229"
        }
    ]
}