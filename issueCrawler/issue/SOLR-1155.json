{
    "id": "SOLR-1155",
    "title": "Change DirectUpdateHandler2 to allow concurrent adds during an autocommit",
    "details": {
        "affect_versions": "1.3,                                            1.4",
        "status": "Closed",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Do"
    },
    "description": "Currently DirectUpdateHandler2 will block adds during a commit, and it seems to be possible with recent changes to Lucene to allow them to run concurrently.  \n\nSee: http://www.nabble.com/Autocommit-blocking-adds---AutoCommit-Speedup--td23435224.html",
    "attachments": {
        "Solr-1155.patch": "https://issues.apache.org/jira/secure/attachment/12407972/Solr-1155.patch",
        "SOLR-1155-release1.4-rev834789.patch": "https://issues.apache.org/jira/secure/attachment/12424573/SOLR-1155-release1.4-rev834789.patch",
        "SOLR-1155-trunk-rev834706.patch": "https://issues.apache.org/jira/secure/attachment/12424572/SOLR-1155-trunk-rev834706.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jayson Minard",
            "id": "comment-12707572",
            "date": "2009-05-09T00:15:58+0000",
            "content": "This will involve a change to locking as seen in the thread mentioned above between add/delete/commit methods, but there are also synchronized methods on the CommitTracker scehduleCommitWithin method, run method, and getCommitCount method that will cause similar blocking at least for deletes. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707575",
            "date": "2009-05-09T00:18:33+0000",
            "content": "Yonik mentioned: \"We'd need to think about what type of synchronization may be needed \nfor postCommit and postOptimize hooks too.\"\n\nIs the expectation for those callbacks that nothing will change until the callback completes?  (i.e. a script might run a process that scans the index after optimize expecting it to remain optimized during the script execution)   Or is that not the contract of those callbacks? "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707600",
            "date": "2009-05-09T03:07:34+0000",
            "content": "Thinking about pending counts as well.  If adds are ongoing during a commit, there has to be a point in time where the counters clear the number of documents committed.  Currently they are set to 0 which is safe since nothing was ongoing while the commit happened.  Something to remember... "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707602",
            "date": "2009-05-09T03:50:30+0000",
            "content": "Preparing a first patch, calling it DirectUpdateHandler3 as there is a lot of reshuffling and a new commit tracker implementation that is lighter-weight. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707605",
            "date": "2009-05-09T05:00:49+0000",
            "content": "I created DirectUpdateHandler3 as a copy of DirectUpdateHandler2 and then did a pass across it rebuilding the locking, stats, and tracker.  I am basically at the \"IDE show no errors\" stage and going to read it a few more times, and start testing.  Feedback is welcome as I'm in the dark on a few areas of this code and I am working from a lot of assumptions.  Some event placeholder methods remain while I think through the issues, will trim it back when done.\n\nEvents to the auto commit tracker are within the locks to help avoid cases where we set the counts to 0 after other work has concurrently been done.  The stats information has similar concerns and is not yet dealt with, so some stats might reset to 0 on commit when there was further work being done (so they should not go to 0). "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707609",
            "date": "2009-05-09T05:09:53+0000",
            "content": "Updated with different locking around the post commit/optimize handlers.  There is a gap in time between commit and these calls, is that safe?  left TODO's in the code at places of concern. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707635",
            "date": "2009-05-09T07:29:03+0000",
            "content": "Updated file, and associated interface used to help DirectUpdateHandler2 and 3 co-exist with tests, SnapPuller and ReplicationHandler classes.\n\nA larger patch with all changes to tests, config files, and other items makeing DirectUpdateHandler3 the default (purely for running all of the unit tests using it) is attached as well.  \n\nPatch includes fix for SOLR-1157 which got in the way of running unit tests. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707636",
            "date": "2009-05-09T07:30:06+0000",
            "content": "All tests pass with the attached patch file and DirectUpdateHandler3 as the handler for each solrconfig variant in the test-files directory.  Needs review for locking holes and some of the TODO comments answered still.  And needs a lot of concurrent update testing. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707672",
            "date": "2009-05-09T14:26:12+0000",
            "content": "Things likely needing further work:\n\n\n\tserialize commits?  (two shouldn't happen at same time)\n\toptimize should us iwManageWriter lock from optimize through call-back call, so break it away from commit which only needs iwUseWriter?)  This also takes care of the contract that optimize callback is still on an optimized index.\n\n "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707675",
            "date": "2009-05-09T14:38:03+0000",
            "content": "Fixed some of the issue mentioned in the comment above.  Split commit and optimize work out since optimize has a stronger need to lock and be consistent. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707692",
            "date": "2009-05-09T17:19:55+0000",
            "content": "new TODO...\n\nRight now auto commit will eventually fire off a commit that might run into a manual commit or optimize and sit at the syncrhonization block, then fire off on the tail of the other action.  I would rather it wait until those running commands clear and THEN evaluate if it needs to do a commit or not since its information it used to make the decision could be moot due to the other action that beat it in.  So if a commit or optimize is running it will not evaluate for auto commit until they complete.   "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707696",
            "date": "2009-05-09T18:22:42+0000",
            "content": "New patch resolves the serialization of commit/optimize/close/rollback actions that should not be concurrent with each other.  Also protect methods after close to keep other threads from accidentally re-opening writer. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707701",
            "date": "2009-05-09T18:49:56+0000",
            "content": "Does anyone know if the UpdateHandler.close() method is called when everything else is shut down and no transactions can come through?  If so, I can remove the blocking added to prevent a writer from re-opening after close is called.   "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707702",
            "date": "2009-05-09T19:07:36+0000",
            "content": "move wait for searcher out of locks in optimize and commit "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707704",
            "date": "2009-05-09T19:31:34+0000",
            "content": "Refactored the AutoCommitTracker out to separate top-level class rather than inner class.  Enhanced the interface used by unit tests and other classes to talk to the update handler so make this work.  Interface is not final, just a temp answer to the decoupling. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707818",
            "date": "2009-05-10T17:52:13+0000",
            "content": "minor change to rollback to only drop and re-open writer if there was one to begin wtih. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707819",
            "date": "2009-05-10T18:04:44+0000",
            "content": "Knocked down a few TODO and cleaned up resetting of counts. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707823",
            "date": "2009-05-10T18:31:29+0000",
            "content": "Bug fixing, and added a new test that test just the AutoCommitTracker in isolation rather than through the DirectUpdateHandlerX "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12707881",
            "date": "2009-05-11T04:50:32+0000",
            "content": "Change openWriter to do a check of null writer before locking to avoid artificial contention between threads due to ensuring a writer is open.   "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12708023",
            "date": "2009-05-11T13:29:02+0000",
            "content": "Changed external commit interface to not have locking, but rather query if a commit/rollback/optimize is already running to accomplish the same goal.  Also ensure no locking around waiting for searcher after commit or optimize. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12708643",
            "date": "2009-05-12T21:38:02+0000",
            "content": "Updated unit test to compile (was missing method change from previous patch that changed an interface it implemented) "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12708788",
            "date": "2009-05-13T06:31:40+0000",
            "content": "Cleaning the patch so that RequestHandlerBase only has the required change and not the accidental reformatting. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12708795",
            "date": "2009-05-13T06:52:48+0000",
            "content": "TODO:  fix commitWithin, it isn't respected by the DirectUpdateHandler3 "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12708948",
            "date": "2009-05-13T14:41:17+0000",
            "content": "Resolve TODO for commitWithin, and updated AutoCommitTrackerTest to validate the fix. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12776339",
            "date": "2009-11-11T07:24:41+0000",
            "content": "Updated patch to trunk rev 834706 and up to date with current DirectUpdateHandler2 functionality "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12776342",
            "date": "2009-11-11T07:36:16+0000",
            "content": "Added patch for release version of 1.4 (but this is most likely identical to the last trunk patch anyway) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872561",
            "date": "2010-05-27T22:07:53+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-13016382",
            "date": "2011-04-06T14:03:46+0000",
            "content": "Is there interest in me updating this for 3.1?  It is a huge performance improvement over DirectUpdateHandler2 under heavy indexing load... "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13016389",
            "date": "2011-04-06T14:21:53+0000",
            "content": "There's absolutely a lot of interest in this feature.\nHave you checked out SOLR-2193?  It seems like a dup of this issue, but Mark just uploaded a patch for trunk. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-13019954",
            "date": "2011-04-14T18:10:59+0000",
            "content": "Thank Yonik, I'll take a look at his to see if there was anything I learned that applies.  This SOLR-1155 has been used in heavy production load and is very stable against 1.4 so maybe Mark will take a peek, I posted a note on the other issue as well. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-13019955",
            "date": "2011-04-14T18:13:04+0000",
            "content": "I'll look at updating this for 3.1 for those that need it on that release, and Mark's looks good for 4.x and beyond. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043820",
            "date": "2011-06-03T16:47:14+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106439",
            "date": "2011-09-16T14:51:06+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234694",
            "date": "2012-03-21T18:08:54+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717310",
            "date": "2013-07-23T18:47:49+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971357",
            "date": "2014-04-16T12:57:52+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16067327",
            "date": "2017-06-28T22:01:57+0000",
            "content": "Similar changes are already in the codebase through SOLR-2193. Closing as \"won't do\". If you believe this is a mistake, feel free to re-open this issue. "
        }
    ]
}