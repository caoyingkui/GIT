{
    "id": "LUCENE-8337",
    "title": "Reproducing Geo3D test failure",
    "details": {
        "components": [
            "modules/spatial3d"
        ],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "6.7",
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "[junit4] Suite: org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=RandomGeoPolygonTest -Dtests.method=testCompareSmallPolygons -Dtests.seed=6369EE055A678918 -Dtests.slow=true -Dtests.locale=es-BO -Dtests.timezone=Europe/Jersey -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.03s J0 | RandomGeoPolygonTest.testCompareSmallPolygons {seed=[6369EE055A678918:B5D2F4B1CA30632A]} <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: \n   [junit4]    > Standard polygon: GeoCompositePolygon: {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=[[lat=1.4379241972924144E-5, lon=-3.141520309370815([X=-1.0011188512685139, Y=-7.24251615257059E-5, Z=1.4395330244708275E-5])], [lat=-1.858900171939205E-5, lon=-3.1415059739464217([X=-1.001118850057461, Y=-8.677662511280753E-5, Z=-1.860980009708855E-5])], [lat=2.7071641284581073E-5, lon=-3.141469177092562([X=-1.001118845991408, Y=-1.2361464904363391E-4, Z=2.7101930495137982E-5])], [lat=8.285235549000288E-5, lon=-3.1414967545451287([X=-1.0011188459297669, Y=-9.600634121467467E-5, Z=8.29450550819143E-5])]], internalEdges={3}}, GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=[[lat=1.4379241972924144E-5, lon=-3.141520309370815([X=-1.0011188512685139, Y=-7.24251615257059E-5, Z=1.4395330244708275E-5])], [lat=8.285235549000288E-5, lon=-3.1414967545451287([X=-1.0011188459297669, Y=-9.600634121467467E-5, Z=8.29450550819143E-5])], [lat=-8.956596846349593E-303, lon=-3.1415926535897922([X=-1.0011188539924791, Y=-1.0117738616818362E-15, Z=-8.966617970490158E-303])]], internalEdges={0}}]}\n   [junit4]    > Large polygon: GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=c865f21d, testPoint=[lat=2.114284741800425E-5, lon=-3.141516973708951([X=-1.0011188509002849, Y=-7.57645554894811E-5, Z=2.1166503175641402E-5])], testPointInSet=true, shapes={ {[lat=1.4379241972924144E-5, lon=-3.141520309370815([X=-1.0011188512685139, Y=-7.24251615257059E-5, Z=1.4395330244708275E-5])], [lat=-1.858900171939205E-5, lon=-3.1415059739464217([X=-1.001118850057461, Y=-8.677662511280753E-5, Z=-1.860980009708855E-5])], [lat=2.7071641284581073E-5, lon=-3.141469177092562([X=-1.001118845991408, Y=-1.2361464904363391E-4, Z=2.7101930495137982E-5])], [lat=8.285235549000288E-5, lon=-3.1414967545451287([X=-1.0011188459297669, Y=-9.600634121467467E-5, Z=8.29450550819143E-5])], [lat=-8.956596846349593E-303, lon=-3.1415926535897922([X=-1.0011188539924791, Y=-1.0117738616818362E-15, Z=-8.966617970490158E-303])]}}\n   [junit4]    > Point: [lat=-6.499661194605612E-10, lon=-2.0286460544410216([X=-0.4425148814082194, Y=-0.8980086522698344, Z=-6.506933366482957E-10])]\n   [junit4]    > WKT: POLYGON((-179.9950336222651 -0.001065071343882595,-179.9929253178396 0.001551090790098614,-179.9945053894814 0.004747090292294721,-179.99999999999994 -5.131751980960148E-301,-179.99585498158038 8.238698776459206E-4,-179.9950336222651 -0.001065071343882595))\n   [junit4]    > WKT: POINT(-116.23285704533717 -3.7240315471586036E-8)\n   [junit4]    > normal polygon: false\n   [junit4]    > large polygon: true\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([6369EE055A678918:B5D2F4B1CA30632A]:0)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest.checkPoint(RandomGeoPolygonTest.java:227)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest.testComparePolygons(RandomGeoPolygonTest.java:202)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest.testCompareSmallPolygons(RandomGeoPolygonTest.java:109)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:748)\n   [junit4]   2> NOTE: test params are: codec=Lucene70, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@735f0010), locale=es-BO, timezone=Europe/Jersey\n   [junit4]   2> NOTE: SunOS 5.11 amd64/Oracle Corporation 1.8.0_172 (64-bit)/cpus=3,threads=1,free=256153464,total=524288000\n   [junit4]   2> NOTE: All tests run in this JVM: [TestGeo3DDocValues, GeoCircleTest, GeoExactCircleTest, GeoPolygonTest, RandomBinaryCodecTest, RandomGeoPolygonTest]",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16493827",
            "author": "ASF subversion and git services",
            "content": "Commit 7ce6dbda1815778d482e3ae2c00ec96fe1b10162 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7ce6dbd ]\n\nLUCENE-8337: Add disabled unit test for failure ",
            "date": "2018-05-29T16:43:15+0000"
        },
        {
            "id": "comment-16493828",
            "author": "ASF subversion and git services",
            "content": "Commit 6c31e2859316a21186252320f547638ec335d198 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6c31e28 ]\n\nLUCENE-8337: Add disabled unit test for failure ",
            "date": "2018-05-29T16:44:26+0000"
        },
        {
            "id": "comment-16493830",
            "author": "ASF subversion and git services",
            "content": "Commit 318d72c411f1b829001f6054cd3959f3c40c59db in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=318d72c ]\n\nLUCENE-8337: Add disabled unit test for failure ",
            "date": "2018-05-29T16:45:05+0000"
        },
        {
            "id": "comment-16493851",
            "author": "Karl Wright",
            "content": "Ignacio Vera, I've committed a disabled unit test (GeoPolygonTest.LUCENE8337).  Do you have any time/interest in analysis?  I'm not going to have time until the weekend.\n ",
            "date": "2018-05-29T16:57:51+0000"
        },
        {
            "id": "comment-16494010",
            "author": "Karl Wright",
            "content": "Pertinent output below.\nIt appears that the complex polygon is in error for some reason; the check point should not be in-set:\n\n\n   [junit4]   1> IsInSet called for [-0.4425148814082194,-0.8980086522698344,-6.506933366482957E-10], testPoint=[lat=2.1142847418004256E-5, lon=-3.141516973708951([X=-1.0011188509002849, Y=-7.576455548948112E-5, Z=2.116650317564141E-5])]; is in set? true\n\n   [junit4]   1>  Using two planes\n\n   [junit4]   1>  Finding whether [X=-1.0011188509002849, Y=-7.86848650368001E-5, Z=-6.506933366482957E-10] is in-set, based on travel from [lat=2.1142847418004256E-5, lon=-3.141516973708951([X=-1.0011188509002849, Y=-7.576455548948112E-5, Z=2.116650317564141E-5])] along [A=1.0, B=0.0; C=0.0; D=1.0011188509002849] (value=-1.0011188509002849)\n\n   [junit4]   1>  creating sector linear crossing edge iterator\n\n   [junit4]   1>  Edge [[lat=1.4379241972924144E-5, lon=-3.141520309370815([X=-1.0011188512685139, Y=-7.24251615257059E-5, Z=1.4395330244708275E-5])] --> [lat=-1.858900171939205E-5, lon=-3.1415059739464217([X=-1.001118850057461, Y=-8.677662511280753E-5, Z=-1.860980009708855E-5])]] potentially crosses travel plane [A=1.0, B=0.0; C=0.0; D=1.0011188509002849]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There were intersection points!\n   [junit4]   1>   Getting above crossings...\n   [junit4]   1>   Getting below crossings...\n   [junit4]   1>   Above crossings = 1; below crossings = 0\n\n   [junit4]   1>  Edge [[lat=-8.956596846349593E-303, lon=-3.1415926535897922([X=-1.0011188539924791, Y=-1.0117738616818362E-15, Z=-8.966617970490158E-303])] --> [lat=1.4379241972924144E-5, lon=-3.141520309370815([X=-1.0011188512685139, Y=-7.24251615257059E-5, Z=1.4395330244708275E-5])]] potentially crosses travel plane [A=1.0, B=0.0; C=0.0; D=1.0011188509002849]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There are no intersection points within bounds.\n   [junit4]   1>    Endpoint(s) of edge are not on travel plane; distances: -3.0921942784090106E-9 and -3.682290028450552E-10\n\n   [junit4]   1>  Edge [[lat=8.285235549000288E-5, lon=-3.1414967545451287([X=-1.0011188459297669, Y=-9.600634121467467E-5, Z=8.29450550819143E-5])] --> [lat=-8.956596846349593E-303, lon=-3.1415926535897922([X=-1.0011188539924791, Y=-1.0117738616818362E-15, Z=-8.966617970490158E-303])]] potentially crosses travel plane [A=1.0, B=0.0; C=0.0; D=1.0011188509002849]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There are no intersection points within bounds.\n   [junit4]   1>    Endpoint(s) of edge are not on travel plane; distances: 4.970517997193724E-9 and -3.0921942784090106E-9\n\n   [junit4]   1>  Edge [[lat=-1.858900171939205E-5, lon=-3.1415059739464217([X=-1.001118850057461, Y=-8.677662511280753E-5, Z=-1.860980009708855E-5])] --> [lat=2.7071641284581073E-5, lon=-3.141469177092562([X=-1.001118845991408, Y=-1.2361464904363391E-4, Z=2.7101930495137982E-5])]] potentially crosses travel plane [A=1.0, B=0.0; C=0.0; D=1.0011188509002849]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There are no intersection points within bounds.\n   [junit4]   1>    Endpoint(s) of edge are not on travel plane; distances: 8.428238107427433E-10 and 4.908876860554301E-9\n\n   [junit4]   1>  Finding whether [-0.4425148814082194,-0.8980086522698344,-6.506933366482957E-10] is in-set, based on travel from [X=-1.0011188509002849, Y=-7.86848650368001E-5, Z=-6.506933366482957E-10] along [A=0.0, B=0.0; C=1.0; D=6.506933366482957E-10] (value=-6.506933366482957E-10)\n\n   [junit4]   1>  creating sector linear crossing edge iterator\n\n   [junit4]   1>  Edge [[lat=8.285235549000288E-5, lon=-3.1414967545451287([X=-1.0011188459297669, Y=-9.600634121467467E-5, Z=8.29450550819143E-5])] --> [lat=-8.956596846349593E-303, lon=-3.1415926535897922([X=-1.0011188539924791, Y=-1.0117738616818362E-15, Z=-8.966617970490158E-303])]] potentially crosses travel plane [A=0.0, B=0.0; C=1.0; D=6.506933366482957E-10]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There are no intersection points within bounds.\n   [junit4]   1>    Endpoint(s) of edge are not on travel plane; distances: 8.294570577525095E-5 and 6.506933366482957E-10\n\n   [junit4]   1>  Edge [[lat=1.4379241972924144E-5, lon=-3.141520309370815([X=-1.0011188512685139, Y=-7.24251615257059E-5, Z=1.4395330244708275E-5])] --> [lat=-1.858900171939205E-5, lon=-3.1415059739464217([X=-1.001118850057461, Y=-8.677662511280753E-5, Z=-1.860980009708855E-5])]] potentially crosses travel plane [A=0.0, B=0.0; C=1.0; D=6.506933366482957E-10]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There were intersection points!\n   [junit4]   1>   Getting above crossings...\n   [junit4]   1>   Getting below crossings...\n   [junit4]   1>   Above crossings = 1; below crossings = 1\n\n   [junit4]   1>  Edge [[lat=-1.858900171939205E-5, lon=-3.1415059739464217([X=-1.001118850057461, Y=-8.677662511280753E-5, Z=-1.860980009708855E-5])] --> [lat=2.7071641284581073E-5, lon=-3.141469177092562([X=-1.001118845991408, Y=-1.2361464904363391E-4, Z=2.7101930495137982E-5])]] potentially crosses travel plane [A=0.0, B=0.0; C=1.0; D=6.506933366482957E-10]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There were intersection points!\n   [junit4]   1>   Getting above crossings...\n   [junit4]   1>   Getting below crossings...\n   [junit4]   1>   Above crossings = 1; below crossings = 1\n\n   [junit4]   1>  Edge [[lat=-8.956596846349593E-303, lon=-3.1415926535897922([X=-1.0011188539924791, Y=-1.0117738616818362E-15, Z=-8.966617970490158E-303])] --> [lat=1.4379241972924144E-5, lon=-3.141520309370815([X=-1.0011188512685139, Y=-7.24251615257059E-5, Z=1.4395330244708275E-5])]] potentially crosses travel plane [A=0.0, B=0.0; C=1.0; D=6.506933366482957E-10]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There are no intersection points within bounds.\n\n   [junit4]   1>    Endpoint(s) of edge are not on travel plane; distances: 6.506933366482957E-10 and 1.4395980938044924E-5\n\n   [junit4]   1>  Check point in set? true\n   [junit4]   1> large inset: true\n\n ",
            "date": "2018-05-29T18:25:21+0000"
        },
        {
            "id": "comment-16494036",
            "author": "Karl Wright",
            "content": "Ignacio Vera Traversal planes cross above plane three times, and below plane twice, so the count comes out as even.  I need a graphical picture to understand where the issue lies. ",
            "date": "2018-05-29T18:40:32+0000"
        },
        {
            "id": "comment-16494519",
            "author": "Karl Wright",
            "content": "I think I understand the problem \u2013 it has to do with picking a bad path once again.  Here's debugging output for the edge where a crossing should be detected (I think):\n\n\n   [junit4]   1>  Edge [[lat=1.4379241972924144E-5, lon=-3.141520309370815([X=-1.0011188512685139, Y=-7.24251615257059E-5, Z=1.4395330244708275E-5])] --> [lat=-1.858900171939205E-5, lon=-3.1415059739464217([X=-1.001118850057461, Y=-8.677662511280753E-5, Z=-1.860980009708855E-5])]] potentially crosses travel plane [A=1.0, B=0.0; C=0.0; D=1.0011188509002849]\n   [junit4]   1>   Finding intersections between edge plane and travel plane...\n   [junit4]   1>   There were intersection points!\n   [junit4]   1>   Getting above crossings...\n   [junit4]   1>    Envelope intersection point = [X=-1.0011188509012852, Y=-7.86721312086303E-5, Z=2.870854372572661E-8]\n   [junit4]   1>      Adjoining points not found.  Are planes parallel?  edge = [A=7.207753470315688E-5, B=-0.9170557581136873; C=0.3987589890088486; D=0.0]; envelope = [A=1.0, B=0.0; C=0.0; D=1.0011188509012852]; perpendicular = [X=3.130986100560408E-5, Y=-0.39875898777965174, Z=-0.9170557609462142]\n   [junit4]   1>     No adjoining points\n   [junit4]   1>    Edge crosses envelope 1 times\n   [junit4]   1>   Getting below crossings...\n   [junit4]   1>   Above crossings = 1; below crossings = 0\n\n\n\nNote that the \"above\" envelope intersection point is way out at the negative X pole, and the \"above\" envelope plane equation is: A=1.0, B=0.0; C=0.0; D=1.0011188509012852 .  This is so far out that the adjoining points algorithm can't locate any adjoining points even though the edge plane and the envelope plane are not parallel, not even close.  The algorithm still detects it as a crossing, which is OK, but not for the \"below\" envelope plane, which apparently doesn't intersect the edge plane at all, possibly because it doesn't even intersect the world.\n\nSo it appears that the problem here is once again a poor choice of path. ",
            "date": "2018-05-30T00:19:28+0000"
        },
        {
            "id": "comment-16494548",
            "author": "ASF subversion and git services",
            "content": "Commit ceb4f768bf5b71a91872f9ecdc5ebed4d0262903 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ceb4f76 ]\n\nLUCENE-8337: Fix problems with how travel planes too close to edge of world are disallowed, and increase the size of the disallowed window by an order of magnitude. ",
            "date": "2018-05-30T01:04:01+0000"
        },
        {
            "id": "comment-16494550",
            "author": "ASF subversion and git services",
            "content": "Commit fcd7fc19944cf6b30d386e7433263fbd18fcd21b in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fcd7fc1 ]\n\nLUCENE-8337: Fix problems with how travel planes too close to edge of world are disallowed, and increase the size of the disallowed window by an order of magnitude. ",
            "date": "2018-05-30T01:04:31+0000"
        },
        {
            "id": "comment-16494551",
            "author": "ASF subversion and git services",
            "content": "Commit 488c11063b5b7eef63473ff3a9ab56291b39febe in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=488c110 ]\n\nLUCENE-8337: Fix problems with how travel planes too close to edge of world are disallowed, and increase the size of the disallowed window by an order of magnitude. ",
            "date": "2018-05-30T01:05:11+0000"
        }
    ]
}