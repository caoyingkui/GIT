{
    "id": "SOLR-4947",
    "title": "geofilt gives wrong results (indexed polygons)",
    "details": {
        "affect_versions": "4.3",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "spatial"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "I have indexed (filtered) OpenStreetMap data for Germany including ways, total 3,855,159 documents, core is optimized.\n\nQueries contain some correct results but also (seemingly) arbitrary others:\n\n\n<lst name=\"responseHeader\">\n  <int name=\"status\">0</int>\n  <int name=\"QTime\">335</int>\n  <lst name=\"params\">\n    <str name=\"indent\">true</str>\n    <str name=\"q\">{!geofilt  sfield=geo pt=49.434825,11.079835 d=1}  </str>\n    <str name=\"_\">1371806261508</str>\n    <str name=\"wt\">xml</str>\n  </lst>\n</lst>\n<result name=\"response\" numFound=\"823\" start=\"0\">\n  <doc>\n    <str name=\"id\">w55380630</str>\n    <str name=\"geo\">POLYGON((7.342515 49.3058912, 7.3428923 49.3058912, 7.3428923 49.3057308, 7.342515 49.3057308, 7.342515 49.3058912)\n)</str>\n    <str name=\"amenity\">place_of_worship</str>\n    <str name=\"name\">Klinikkirche</str>\n    <long name=\"_version_\">1438312839527792640</long></doc>\n  <doc>\n    <str name=\"id\">w77731561</str>\n    <str name=\"geo\">POLYGON((7.7563699 50.4972286, 7.7563699 50.4972296, 7.7563713 50.4972296, 7.7563713 50.4972286, 7.7563699 50.4972286)\n)</str>\n[...]\n\n\n\n7.7\u00b0 is not within 1km of 11.1\u00b0. It only happens with shapes.\n\nIndexing only a part of Germany the query works fine and produces the correct results.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "David Smiley",
            "id": "comment-13691049",
            "date": "2013-06-22T04:46:44+0000",
            "content": "I surmise you are seeing the effect of grid approximation.  If you haven't changed the default location_rpt configuration then you have ~1 meter precision and 2.5% shape approximation (distErrPct=0.025).  Shapes are pixelated/gridded which of course approximates the original shape.  At the expense of slowing indexing, using more memory during indexing, and a larger index, try setting distErrPct to 0.001.  Maybe that will give you enough additional precision to satisfy your requirements.  I suspect it will since you didn't notice the approximation when you indexed a smaller piece of the original polygon.\n\nOne day, maybe next year, I'd like to have an indexing approach in which the original geometries are stored and evaluated to confirm the match, but only when the search algorithm isn't certain it's a match. "
        },
        {
            "author": "Christian Winkler",
            "id": "comment-13691087",
            "date": "2013-06-22T09:05:57+0000",
            "content": "Thanks for your super fast reply David.\n\nIndeed I have played with the precision. However the polygon \"Klinikkirche\" (which is a church) has a dimension of only a few hundred square meters whereas the filter requests a 1km distance of an object which is a few hundred  kilometers away. So I don't think it is related to the precision.\n\nIndexing at the moment takes already one day and the index is about 12 GB. I suspect that it will take considerably longer with higher precision and lead to a much larger index. But sure I can give it a try.\n\nIs there any way to show the distance without scoring? As soon as I switch on the score=distance I get an OOM. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13691157",
            "date": "2013-06-22T13:55:23+0000",
            "content": "Glad to be of help, Christian.\n\nI thought the problem was precision but, no, that was not it.  Your polygon is a rectangle, and such polygons must follow the counter-clockwise order rule.  The WKT spec says this is how it needs to be, although apparently most software out there appears to work by allowing either order and limiting rects to < 180 degrees.  Spatial4j follows the spec but in its next release I plan to have it not do this so that it is more compatible.  This is a very common issue people hit and it's in the FAQ (see \"Common Error\").\n\nBecause it was in the wrong order, the rectangle loops the other way around the world, and because it's now a bigger shape than intended it's also gridded to larger grid cells. \n\nTo see what the problem was, I brought up the spatial solr sandbox (spatial demo) and had it plot your polygon in Google Earth.  You can watch me do this as part of a bigger presentation on spatial I did at Lucene Revolution. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13691159",
            "date": "2013-06-22T13:58:59+0000",
            "content": "Is there any way to show the distance without scoring? As soon as I switch on the score=distance I get an OOM.\n\nReturning the distance will only work for points that you index, not polygons.  And furthermore, the implementation in RPT doesn't scale well.  If you can use one point per document (perhaps the center point of your shape), then put that in a LatLonType field and use that.  And set the dynamic field \"*_coordinate\" to be a tfloat to save you memory. "
        },
        {
            "author": "Christian Winkler",
            "id": "comment-13691255",
            "date": "2013-06-22T21:32:49+0000",
            "content": "Thanks for the clarification and sorry that I have not found it in the FAQ. I would never have thought of the inverted polygon as I was taking OpenStreetMap for granted. Even the WKT plotter there plots the correct polygon.\n\nMaybe it makes sense to mention OpenStreetMap explicitly in the FAQ as probably many people will take data from there.\n\nThanks again "
        }
    ]
}