{
    "id": "SOLR-7086",
    "title": "Suggester dictionary empty if payload field does not exist",
    "details": {
        "components": [
            "Suggester"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "4.10.3",
        "status": "Resolved",
        "resolution": "Duplicate",
        "priority": "Major"
    },
    "description": "Setting up a suggester for authors using DocumentDictionaryFactory and payloadField. If no documents have data in the payload field, the dictionary will be empty.\n\n\n   <lst name=\"suggester\">\n      <str name=\"name\">authors</str>\n      <str name=\"lookupImpl\">BlendedInfixLookupFactory</str>     \n      <str name=\"suggestAnalyzerFieldType\">text_folded</str>\n      <str name=\"dictionaryImpl\">DocumentDictionaryFactory</str>     \n      <str name=\"field\">authors_s</str>\n      <str name=\"payloadField\">not_exist_s</str>\n   </lst>\n\n\n\nIt should use an empty payload instead.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-05-15T13:11:52+0000",
            "author": "Marius Grama",
            "content": "I could reproduce the issue by using the sample suggester from the example techproducts collection.\nsolrconfig.xml configuration\nsearchComponent name=\"suggest\" class=\"solr.SuggestComponent\" \n                   enable=\"${solr.suggester.enabled:false}\"     >\n    <lst name=\"suggester\">\n      <str name=\"name\">mySuggester</str>\n      <str name=\"lookupImpl\">FuzzyLookupFactory</str>      \n      <str name=\"dictionaryImpl\">DocumentDictionaryFactory</str>\n      <str name=\"field\">cat</str>\n      <str name=\"weightField\">price</str>\n      <!-- <str name=\"payloadField\">not_exist_s</str> -->\n      <str name=\"suggestAnalyzerFieldType\">string</str>\n    </lst>\n  </searchComponent>\n\n  <requestHandler name=\"/suggest\" class=\"solr.SearchHandler\" \n                  startup=\"lazy\" enable=\"${solr.suggester.enabled:false}\" >\n    <lst name=\"defaults\">\n      <str name=\"suggest\">true</str>\n      <str name=\"suggest.count\">10</str>\n    </lst>\n    <arr name=\"components\">\n      <str>suggest</str>\n    </arr>\n  </requestHandler>\n\n\n\nI used the request http://localhost:8983/solr/techproducts/suggest?suggest=true&suggest.build=true&suggest.dictionary=mySuggester&wt=json&suggest.q=elec for reproducing the issue.\n\nWhen the payload field is not specified (like in the configuration example above), the result is :\n\n{\n    \"responseHeader\": {\n        \"status\": 0,\n        \"QTime\": 21\n    },\n    \"command\": \"build\",\n    \"suggest\": {\n        \"mySuggester\": {\n            \"elec\": {\n                \"numFound\": 3,\n                \"suggestions\": [\n                    {\n                        \"term\": \"electronics and computer1\",\n                        \"weight\": 2199,\n                        \"payload\": \"\"\n                    },\n                    {\n                        \"term\": \"electronics\",\n                        \"weight\": 649,\n                        \"payload\": \"\"\n                    },\n                    {\n                        \"term\": \"electronics and stuff2\",\n                        \"weight\": 279,\n                        \"payload\": \"\"\n                    }\n                ]\n            }\n        }\n    }\n}\n\n\nOn the other hand, when the unexisting payload field is specified (uncommented in the configuration example above) the result is empty:\n\n\n{\n    \"responseHeader\": {\n        \"status\": 0,\n        \"QTime\": 7\n    },\n    \"command\": \"build\",\n    \"suggest\": {\n        \"mySuggester\": {\n            \"elec\": {\n                \"numFound\": 0,\n                \"suggestions\": []\n            }\n        }\n    }\n}\n\n\n\nJan H\u00f8ydahl the issue that you reported has actually to do with the class DocumentDictionary.DocumentInputIterator which simply skips documents that have a null payload.\n\n        if (hasPayloads) {\n          StorableField payload = doc.getField(payloadField);\n          if (payload == null) {\n            continue;\n          } else if (payload.binaryValue() != null) {\n            tempPayload =  payload.binaryValue();\n          } else if (payload.stringValue() != null) {\n            tempPayload = new BytesRef(payload.stringValue());\n          } else {\n            continue;\n          }\n        } else {\n          tempPayload = null;\n        } \n\n\n\nSince the payload is an optional attribute, I agree with Jan H\u00f8ydahl that this null-check is affecting the validity of the suggest scenarios.\n\nMichael McCandless, you've written the first version of the class DocumentDictionary and up until the last version of the implementation the check whether the payload is null is being kept. Can the null-check for the payload be modified, without breaking any existing functionality, so that null payloads are also accepted when the field payload field is specified for the suggester? ",
            "id": "comment-14545459"
        },
        {
            "date": "2015-05-15T13:13:01+0000",
            "author": "Marius Grama",
            "content": "payload null-check has been brought into discussion also in this ticket. ",
            "id": "comment-14545460"
        },
        {
            "date": "2015-05-15T14:36:48+0000",
            "author": "Michael McCandless",
            "content": "Hmm but if you have no payloads, why ask the suggester to index them? ",
            "id": "comment-14545578"
        },
        {
            "date": "2015-05-15T14:44:12+0000",
            "author": "Marius Grama",
            "content": "I take it so that the payload is an additional optional information that the client of the suggest search handler can make use of in order to enrich the suggestion. Mandatory is only the suggestion term. Moreover if the field denoted by the payload for a document is null, the suggestion term contained in the document still needs to be taken into account isn't it? ",
            "id": "comment-14545588"
        },
        {
            "date": "2015-05-15T21:10:12+0000",
            "author": "Michael McCandless",
            "content": "OK I think it makes sense for payload to be optional; I'm not sure whether any existing suggesters will be upset by this.  Maybe open a Lucene issue and add a patch? ",
            "id": "comment-14546177"
        },
        {
            "date": "2015-05-16T10:06:38+0000",
            "author": "Marius Grama",
            "content": "Great.I'm almost done with the Lucene patch. Still have to do some additional tests to see that it doesn't break the suggester. I will open a Lucene ticket and submit the patch for it. ",
            "id": "comment-14546667"
        },
        {
            "date": "2015-05-16T17:07:43+0000",
            "author": "Marius Grama",
            "content": "Created patch for the Lucene issue  LUCENE-6486 and tested it locally. The suggester takes into account now also documents with null payload fields, instead of skipping them. ",
            "id": "comment-14546860"
        }
    ]
}