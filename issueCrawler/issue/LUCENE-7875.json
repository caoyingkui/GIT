{
    "id": "LUCENE-7875",
    "title": "Rename or move most of MultiFields",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "master (8.0)"
        ]
    },
    "description": "MultiFields.java has a bunch of static methods that provide a single LeafReader's view over a bunch of things.\n\nThis goes to MultiBits (which will become public):\n\n\tBits getLiveDocs(IndexReader reader)\n\n\n\nThese go to\u00a0FieldInfos:\n\n\tFieldInfos getMergedFieldInfos(IndexReader reader)\n\tCollection<String> getIndexedFields(IndexReader reader)\n\n\n\nThese go\u00a0to MultiTerms:\n\n\tTerms getTerms(IndexReader r, String field)\n\tPostingsEnum getTermPostingsEnum(IndexReader r, String field, BytesRef term) which is renamed a little",
    "attachments": {
        "LUCENE-7875.patch": "https://issues.apache.org/jira/secure/attachment/12941987/LUCENE-7875.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16621167",
            "date": "2018-09-19T20:32:41+0000",
            "content": "It's a shame MultiReader is already taken as a name since it'd be a good place for some of these methods given our use of Multi in many places.  Perhaps MultiLeafReader could be a new class to hold these utilities?\n\nI'd like to get these changes into 8.0, to further ween ourselves off of MultiFields. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-16634226",
            "date": "2018-10-01T15:54:38+0000",
            "content": "Here's the patch.  It's pretty big because there are many callers, most are in test methods.\n\n\tNew MultiLeafReader (static utility class) now has getLiveDocs, getMergedFieldInfos, and getIndexedFields.\n\tMultiTerms now has getTerms, getTermDocsEnum, getTermPositionsEnum\n\n\n\nAlan Woodward Perhaps we can consider removing and/or renaming getTermDocsEnum and getTermPositionsEnum which are basically the same thing.  I recall you were involved in some related refactorings.  It could be in a separate issue or this one.\n\nIn a separate issue, I'll be able to move MultiFields with MappedMultiFields into the o.a.l.codecs package and make package-private.  If the two together were in the codecs package, they could be hidden.\n\nAn alternative to introducing MultiLeafReader would be to move getMergedFieldInfos & getIndexedFields (maybe changing that latter one a bit to be more generic with a predicate), and then move getLiveDocs to MultiBits but would need to make it public.  Shrug; I have no strong opinion. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-16634232",
            "date": "2018-10-01T16:00:34+0000",
            "content": "> getTermDocsEnum and getTermPositionsEnum which are basically the same thing\n\nA blast from the past, that one... they can definitely be merged into a getPostingsEnum() method. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-16639689",
            "date": "2018-10-05T11:26:28+0000",
            "content": "In this patch update I simply removed both getTermDocsEnum ones (changing callers accordingly), and improved the javadocs slightly on getTermPositionsEnum. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-16639739",
            "date": "2018-10-05T12:09:59+0000",
            "content": "Can we rename it to getTermPostingsEnum()? ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-16639763",
            "date": "2018-10-05T12:25:05+0000",
            "content": "Definitely; yeah that's better.  Updated patch accordingly. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-16640347",
            "date": "2018-10-05T21:10:40+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 65 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   9m  7s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n -1 \n  compile  \n   1m 38s \n  core in the patch failed.  \n\n\n -1 \n  javac  \n   1m 38s \n  core in the patch failed.  \n\n\n +1 \n  Release audit (RAT)  \n   0m 18s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 12s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 11s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 11s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 10s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 11s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 12s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 11s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 10s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 10s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 10s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 11s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 10s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 11s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 11s \n  Release audit (RAT) rat-sources passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m  8s \n  Release audit (RAT) rat-sources passed  \n\n\n -1 \n  Release audit (RAT)  \n   0m  4s \n  core in the patch failed.  \n\n\n -1 \n  Check forbidden APIs  \n   0m 18s \n  Check forbidden APIs check-forbidden-apis failed  \n\n\n -1 \n  Validate source patterns  \n   0m 18s \n  Check forbidden APIs check-forbidden-apis failed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   7m 19s \n  common in the patch passed.  \n\n\n +1 \n  unit  \n   1m 58s \n  backward-codecs in the patch passed.  \n\n\n +1 \n  unit  \n   0m 17s \n  benchmark in the patch passed.  \n\n\n +1 \n  unit  \n   0m 22s \n  classification in the patch passed.  \n\n\n +1 \n  unit  \n   9m 35s \n  codecs in the patch passed.  \n\n\n +1 \n  unit  \n  29m 55s \n  core in the patch passed.  \n\n\n +1 \n  unit  \n   1m  9s \n  facet in the patch passed.  \n\n\n +1 \n  unit  \n   1m 51s \n  highlighter in the patch passed.  \n\n\n +1 \n  unit  \n   1m 57s \n  join in the patch passed.  \n\n\n +1 \n  unit  \n   0m 18s \n  memory in the patch passed.  \n\n\n +1 \n  unit  \n   1m  0s \n  misc in the patch passed.  \n\n\n +1 \n  unit  \n   1m  4s \n  queries in the patch passed.  \n\n\n +1 \n  unit  \n   1m  7s \n  queryparser in the patch passed.  \n\n\n +1 \n  unit  \n   3m 56s \n  sandbox in the patch passed.  \n\n\n +1 \n  unit  \n   2m 39s \n  suggest in the patch passed.  \n\n\n +1 \n  unit  \n   4m 58s \n  test-framework in the patch passed.  \n\n\n -1 \n  unit  \n   0m 18s \n  core in the patch failed.  \n\n\n  \n   \n  89m 55s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-7875 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12942551/LUCENE-7875.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / eb47099 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n compile \n https://builds.apache.org/job/PreCommit-LUCENE-Build/101/artifact/out/patch-compile-solr_core.txt \n\n\n javac \n https://builds.apache.org/job/PreCommit-LUCENE-Build/101/artifact/out/patch-compile-solr_core.txt \n\n\n Release audit (RAT) \n https://builds.apache.org/job/PreCommit-LUCENE-Build/101/artifact/out/patch-compile-solr_core.txt \n\n\n Check forbidden APIs \n https://builds.apache.org/job/PreCommit-LUCENE-Build/101/artifact/out/patch-check-forbidden-apis-root.txt \n\n\n Validate source patterns \n https://builds.apache.org/job/PreCommit-LUCENE-Build/101/artifact/out/patch-check-forbidden-apis-root.txt \n\n\n unit \n https://builds.apache.org/job/PreCommit-LUCENE-Build/101/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/101/testReport/ \n\n\n modules \n C: lucene/analysis/common lucene/backward-codecs lucene/benchmark lucene/classification lucene/codecs lucene/core lucene/facet lucene/highlighter lucene/join lucene/memory lucene/misc lucene/queries lucene/queryparser lucene/sandbox lucene/suggest lucene/test-framework solr/core U: . \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/101/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA"
        },
        {
            "id": "comment-16647930",
            "date": "2018-10-12T13:59:05+0000",
            "content": "New patch.  I didn't love having this new MultiLeafReader class after all for just these few methods that felt ad-hoc (i.e. why just these when maybe should have a bunch more?).  I moved getMergedFieldInfos and getIndexedFields off to FieldInfos which is a suitable place for them.  I made MultiBits public and moved getLiveDocs there.  I also removed MultiBits.getMatchingSub (with SubResult class) which wasn't being used.\n\nRandom question that occurred to me: if getMergedFieldInfos is given a LeafReader, shouldn't we just return it's FieldInfos? ",
            "author": "David Smiley"
        },
        {
            "id": "comment-16648609",
            "date": "2018-10-13T00:05:52+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 65 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   8m 37s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   9m 32s \n  the patch passed  \n\n\n +1 \n  javac  \n   9m 32s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m  3s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 48s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 48s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   8m 20s \n  common in the patch passed.  \n\n\n +1 \n  unit  \n   0m 54s \n  backward-codecs in the patch passed.  \n\n\n +1 \n  unit  \n   0m 18s \n  benchmark in the patch passed.  \n\n\n +1 \n  unit  \n   0m 48s \n  classification in the patch passed.  \n\n\n +1 \n  unit  \n   8m 55s \n  codecs in the patch passed.  \n\n\n +1 \n  unit  \n  29m 49s \n  core in the patch passed.  \n\n\n +1 \n  unit  \n   1m 10s \n  facet in the patch passed.  \n\n\n +1 \n  unit  \n   1m 50s \n  highlighter in the patch passed.  \n\n\n +1 \n  unit  \n   1m 45s \n  join in the patch passed.  \n\n\n +1 \n  unit  \n   0m 26s \n  memory in the patch passed.  \n\n\n +1 \n  unit  \n   0m 28s \n  misc in the patch passed.  \n\n\n +1 \n  unit  \n   0m 54s \n  queries in the patch passed.  \n\n\n +1 \n  unit  \n   1m  7s \n  queryparser in the patch passed.  \n\n\n +1 \n  unit  \n   4m 49s \n  sandbox in the patch passed.  \n\n\n +1 \n  unit  \n   2m 36s \n  suggest in the patch passed.  \n\n\n +1 \n  unit  \n   5m  0s \n  test-framework in the patch passed.  \n\n\n -1 \n  unit  \n  85m 33s \n  core in the patch failed.  \n\n\n  \n   \n 179m 35s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.update.MaxSizeAutoCommitTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-7875 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12943648/LUCENE-7875.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 9c8ffab \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-LUCENE-Build/106/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/106/testReport/ \n\n\n modules \n C: lucene lucene/analysis/common lucene/backward-codecs lucene/benchmark lucene/classification lucene/codecs lucene/core lucene/facet lucene/highlighter lucene/join lucene/memory lucene/misc lucene/queries lucene/queryparser lucene/sandbox lucene/suggest lucene/test-framework solr/core U: . \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/106/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA"
        },
        {
            "id": "comment-16656045",
            "date": "2018-10-18T23:49:26+0000",
            "content": "Commit fd9164801e703b278922dae6cc3c53e0578fa1d6 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fd91648 ]\n\nLUCENE-7875: Moved MultiFields static methods to MultiTerms, FieldInfos and MultiBits.\nMultiBits is now public and has getLiveDocs. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16658730",
            "date": "2018-10-22T08:07:05+0000",
            "content": "Commit fd9164801e703b278922dae6cc3c53e0578fa1d6 in lucene-solr's branch refs/heads/jira/http2 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fd91648 ]\n\nLUCENE-7875: Moved MultiFields static methods to MultiTerms, FieldInfos and MultiBits.\nMultiBits is now public and has getLiveDocs. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16704444",
            "date": "2018-11-30T09:07:55+0000",
            "content": "David Smiley I noticed that this change ended in \"Changes in Runtime Behavior\" in the changelog, wouldn't \"API Changes\" be a better fit? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16704791",
            "date": "2018-11-30T14:20:26+0000",
            "content": "Commit 04916239337f4e1435e70ba78bb174c019f9f925 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0491623 ]\n\nLUCENE-7875: CHANGES.txt: moved to API changes ",
            "author": "ASF subversion and git services"
        }
    ]
}