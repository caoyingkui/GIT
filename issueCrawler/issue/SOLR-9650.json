{
    "id": "SOLR-9650",
    "title": "CloneFieldUpdateProcessorFactory doesn't preserve source fields order from configuration",
    "details": {
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "We are using configuration like this:\n\n  <!-- Creates a composite ID -->\n  <updateRequestProcessorChain name=\"composite-id\">\n    <processor class=\"solr.CloneFieldUpdateProcessorFactory\">\n      <str name=\"source\">_id</str>\n      <str name=\"source\">_validFrom</str>\n      <str name=\"dest\">_solrId</str>\n    </processor>\n    <processor class=\"solr.ConcatFieldUpdateProcessorFactory\">\n      <str name=\"fieldName\">_solrId</str>\n      <str name=\"delimiter\">-</str>\n    </processor>\n    <processor class=\"solr.LogUpdateProcessorFactory\" />\n    <processor class=\"solr.RunUpdateProcessorFactory\" />\n  </updateRequestProcessorChain>\n\n\n\nExpected _solrId field value for document\n\n{\n  \"name\": \"Name\",\n  \"_validFrom\": 342230400000,\n  \"_validTo\": null,\n  \"_id\": \"a518fad5-5421-4253-b501-0ebea0d32cd2\"\n}\n\n\n\nis a518fad5-5421-4253-b501-0ebea0d32cd2-342230400000\nWhen HTTP REST is used, everything work fine.\nWhen programmatics interface using SolrInputDocument in SolrClient is used value of _solrId will 342230400000-a518fad5-5421-4253-b501-0ebea0d32cd2 because fields are composed in order from SolrInputDocument",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-16T15:14:56+0000",
            "author": "Shawn Heisey",
            "content": "This probably should have been brought up on the mailing list or IRC channel before going to Jira.  I can understand why you would think it's a bug without discussion, though.\n\nLooking at the code for CloneFieldUpdateProcessorFactory, the order of the fields in the configuration makes no difference.\n\nFor the Clone processor, the order of the fields in the SolrInputDocument (AFTER it is received by Solr) is what matters.  That class stores them in a LinkedHashMap, which guarantees insertion order, but I do not know if there is any guarantee that the SolrInputDocument built in SolrJ will be 100% identical to the SolrInputDocument used by the update processor as far as field order.  That would depend on two things \u2013 exactly how SolrJ packages the document for transmission, and exactly how Solr treats the request when it receives it and turns it back into a SolrInputDocument for update processing.  I'm not very familiar with that code.  If a different map implementation (like HashMap) is used at any point in that process, then field order might not be preserved.\n\nYou did say \"fields are composed in order from SolrInputDocument\" above ... but that's vague.  Can you share your SolrJ code, with {code:java} before it in the comment, and {code} after it in the comment? ",
            "id": "comment-15580118"
        },
        {
            "date": "2016-10-17T06:10:55+0000",
            "author": "Libor Ondrusek",
            "content": "I'm not using IRC and mailing list is very old and confused approach for solving issues.\n\nMy SolrJ code looks like that:\n\nMapType mapType = MapType.construct(Map.class, SimpleType.construct(String.class), SimpleType.construct(Object.class));\nList<Map<String, Object>> data = objectMapper.readValue(resource.getInputStream(), CollectionType.construct(List.class, mapType));\n\nList<SolrInputDocument> inputDocuments = data.stream()\n        .map(dataItem -> {\n            SolrInputDocument inputDocument = new SolrInputDocument();\n            dataItem.entrySet().stream().forEach(entry -> inputDocument.addField(entry.getKey(), entry.getValue()));\n            return inputDocument;\n        })\n        .collect(toList());\n\n\n\nData are readed from JSON file. I'm using SolrJ for that because I need EmbeddedSolrServer for integration testing. ",
            "id": "comment-15581344"
        },
        {
            "date": "2016-10-17T12:14:15+0000",
            "author": "Erick Erickson",
            "content": "bq: I'm not using IRC and mailing list is very old and confused approach for solving issues\n\nYour preference is not the point. The point is that asking usage-level questions as JIRAs makes it much more difficult for people who actually try to improve Solr/Lucene to do that level of work. Consider the difficulty of trying to find a code discussion if all the user's list questions were written up as JIRAs.\n\nPlease at least try to adapt to the community standards rather than impose your preferences upon it.\n\nErick ",
            "id": "comment-15582068"
        },
        {
            "date": "2016-10-17T12:45:01+0000",
            "author": "Libor Ondrusek",
            "content": "Sorry but I'm little busy for reading chats or endless mailing conversation. If you want take anything from my issue, take it in other case close the issue. ",
            "id": "comment-15582146"
        }
    ]
}