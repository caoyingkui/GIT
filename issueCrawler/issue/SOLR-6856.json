{
    "id": "SOLR-6856",
    "title": "regression in /update/extract ? ref guide examples of fmap & xpath don't seem to be working",
    "details": {
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "4.10.4",
            "5.0",
            "5.1",
            "6.0"
        ],
        "affect_versions": "3.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "I updated this page to know about hte new bin/solr and example/exampledocs structure/contents...\nhttps://cwiki.apache.org/confluence/display/solr/Uploading+Data+with+Solr+Cell+using+Apache+Tika\n\nhowever i noticed that several of the examples listed on that page didn't seem to work any more \u2013 notably...\n\n\n\texamples using \"fmap\" don't seem to create the fields they say they will\n\texamples using \"xpath\" don't seem to create any docs at all\n\n\n\nSpecific examples i had problems with...\n\n\ncurl \"http://localhost:8983/solr/techproducts/update/extract?literal.id=doc2&captureAttr=true&defaultField=text&fmap.div=foo_t&capture=div&commit=true\" -F \"sample=@example/exampledocs/sample.html\"\ncurl \"http://localhost:8983/solr/techproducts/update/extract?literal.id=doc3&captureAttr=true&defaultField=text&capture=div&fmap.div=foo_t&boost.foo_t=3&commit=true\" -F \"sample=@example/exampledocs/sample.html\"\ncurl \"http://localhost:8983/solr/techproducts/update/extract?literal.id=doc4&captureAttr=true&defaultField=text&capture=div&fmap.div=foo_t&boost.foo_t=3&literal.blah_s=Bah&commit=true\" -F \"sample=@example/exampledocs/sample.html\"\ncurl \"http://localhost:8983/solr/techproducts/update/extract?literal.id=doc5&captureAttr=true&defaultField=text&capture=div&fmap.div=foo_t&boost.foo_t=3&literal.id=id&xpath=/xhtml:html/xhtml:body/xhtml:div/descendant:node()&commit=true\" -F \"sample=@example/exampledocs/sample.html\"\n\n\n\n...none of these example commands produced an error, but they also didn't seem to create the fields/docs they said they would (ie: no \"foo_t\" field was created)",
    "attachments": {
        "SOLR-6856.patch": "https://issues.apache.org/jira/secure/attachment/12694219/SOLR-6856.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-23T16:28:45+0000",
            "author": "Anshum Gupta",
            "content": "Is anyone looking at this yet? This is the only blocker for 5.0. now. ",
            "id": "comment-14289469"
        },
        {
            "date": "2015-01-23T17:23:27+0000",
            "author": "Steve Rowe",
            "content": "I'm looking into the fmap issue, and I found that the same error is tripped whether defaultField or uprefix is used.\n\nHowever, when I switch to capturing <p> elements' content rather than <div> elements', using &fmap.p=foo_t&capture=p, the failure goes away.  Looks like the problem is with the capturing phase, not the mapping phase.\n\nSo maybe this is about block vs. inline elements?\n\nDigging more. ",
            "id": "comment-14289547"
        },
        {
            "date": "2015-01-23T18:09:28+0000",
            "author": "Steve Rowe",
            "content": "So maybe this is about block vs. inline elements?\n\nThat actually doesn't make any sense, since both <p> and div are block elements.\n\nI looked at the SAX events sent into SolrContentHandler.startElement(), where the capture mechanism is invoked, and it never sees <div> start-tag events, but <p> start-tags come through. ",
            "id": "comment-14289631"
        },
        {
            "date": "2015-01-23T19:12:41+0000",
            "author": "Steve Rowe",
            "content": "The <div> capture issue (also a mapping issue since there's nothing to map) is that in Tika 0.6 (Solr 3.1 upgraded Tika from 0.4 to 0.8), a DefaultHtmlMapper was introduced that only creates events for a subset of HTML tags - when HtmlMapper.mapSafeElement() returns null for a tag (as it does for any non-mapped tags), its child content is processed, but no event is created for it.  HtmlParser uses DefaultHtmlMapper if no HtmlMapper.class mapping is supplied with ParseContext.  Here's the 1.7 DefaultHtmlMapper.SAFE_ELEMENTS definition, where the mappings are initialized: http://svn.apache.org/viewvc/tika/tags/1.7/tika-parsers/src/main/java/org/apache/tika/parser/html/DefaultHtmlMapper.java?view=markup#l33 - no <div> in there.\n\nThe attached patch maps the HtmlMapper.class in ParseContext to IdentityHtmlMapper, which creates events for every HTML element.  A new test is added to check that elements including <div> are captured and mapped properly. ",
            "id": "comment-14289762"
        },
        {
            "date": "2015-01-23T19:17:10+0000",
            "author": "Steve Rowe",
            "content": "I'm looking into the xpath examples now to see if they are caused by the same issue. ",
            "id": "comment-14289764"
        },
        {
            "date": "2015-01-23T19:21:51+0000",
            "author": "Uwe Schindler",
            "content": "So this issue exists since Solr 3.1... Strange that nobody ever complained. I would prefer to cleanup the HTML as this mapper does, but the IdentityMapper is also fine to me. I think nobody ever wished to capture useless dif elements \n\nThanks Steve for investigating the problem! ",
            "id": "comment-14289777"
        },
        {
            "date": "2015-01-23T19:39:01+0000",
            "author": "Hoss Man",
            "content": "my main concern when filing this issue is that examples from the ref guide (which presumably worked at some point) did not work (now).\n\nif folks think the current behavior is \"better\" then the \"fixed\" behavior in steve's patch \u2013 that's fine with me, we can just resolve the issue by fixing hte docs to use better examples.\n\ni don't understand the diff in behavior enough to have an opinion. ",
            "id": "comment-14289805"
        },
        {
            "date": "2015-01-23T20:21:10+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I fixed something similar for DIH in 4.3 SOLR-4530 ",
            "id": "comment-14289892"
        },
        {
            "date": "2015-01-23T21:21:21+0000",
            "author": "Steve Rowe",
            "content": "I fixed something similar for DIH in 4.3 SOLR-4530\n\nThanks for the pointer Alexandre Rafalovitch. ",
            "id": "comment-14289999"
        },
        {
            "date": "2015-01-23T22:30:47+0000",
            "author": "Steve Rowe",
            "content": "I noticed when using IdentityHtmlMapper that the <br/> tag causes the string \"none\\n\" to show up in the catch-all content field Tika produces, e.g. for \n\n\n<p>distinct<br/>words</p>\n\n\n\nthe following is extracted in the catch-all field:\n\n\n distinctnone\nwords\n\n\n\nI suspect this is a Tika bug, but I didn't track down why this happens.\n\nI addressed this problem by copy/pasting IdentityHtmlMapper into a nested class of ExtractingDocumentLoader and overriding mapSafeElement(String name) to return null when name is br - this causes Tika to not output the \"none\\n\" string in the catch-all field.\n\nI noticed that DefaultHtmlMapper excludes <SCRIPT> and <STYLE> tags and their content, while IdentityHtmlMapper does not.  I thought I would need to also address this, because a general-purpose HTML extraction facility should not include that <SCRIPT> or <STYLE> content.  But apparently Tika handles exclusion of these tags and their content at some location other than the HtmlMapper - even when using IdentityHtmlMapper, no start-element events are created for these tags.  Nevertheless, I added a test to make sure that <SCRIPT> and <STYLE> content is not extracted.\n\nI added a new test to more fully demonstrate that xpath handling works properly.\n\nI think it's ready to go. I'm running all Solr tests now. ",
            "id": "comment-14290131"
        },
        {
            "date": "2015-01-23T22:36:38+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for the patch Steve Rowe. It's a blocker but doesn't have a fix version. 5.0 ? ",
            "id": "comment-14290143"
        },
        {
            "date": "2015-01-23T22:38:00+0000",
            "author": "Steve Rowe",
            "content": "I'm running all Solr tests now.\n\n\nBUILD SUCCESSFUL\nTotal time: 22 minutes 23 seconds\n\n\n\nI'll go and run all the ref guide examples before I commit. ",
            "id": "comment-14290145"
        },
        {
            "date": "2015-01-23T23:34:26+0000",
            "author": "Steve Rowe",
            "content": "I'll go and run all the ref guide examples before I commit.\n\nThey all run properly, though a couple need adjustment - I'll fix them in a minute.\n\nCommitting shortly. ",
            "id": "comment-14290214"
        },
        {
            "date": "2015-01-23T23:44:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654431 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1654431 ]\n\nSOLR-6856: Restore ExtractingRequestHandler's ability to capture all HTML tags when parsing (X)HTML. ",
            "id": "comment-14290223"
        },
        {
            "date": "2015-01-23T23:50:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654432 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1654432 ]\n\nSOLR-6856: Restore ExtractingRequestHandler's ability to capture all HTML tags when parsing (X)HTML. (merged trunk r1654431) ",
            "id": "comment-14290228"
        },
        {
            "date": "2015-01-23T23:51:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654433 from Use account \"steve_rowe\" instead in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1654433 ]\n\nSOLR-6856: Restore ExtractingRequestHandler's ability to capture all HTML tags when parsing (X)HTML. (merged trunk r1654431) ",
            "id": "comment-14290230"
        },
        {
            "date": "2015-01-24T00:26:36+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for fixing this Steve! ",
            "id": "comment-14290263"
        },
        {
            "date": "2015-01-24T01:04:03+0000",
            "author": "Steve Rowe",
            "content": "Chris Hostetter (Unused) and Uwe Schindler figured out why <br/> caused \"none\\n\" to be dumped into the catch-all field. See the #lucene-dev IRC conversation here.\n\nIn short, the tagsoup parser used by Tika exposes default attributes on (some?) elements, and the <br> tag has a default attribute clear with value none.  When solr-cell's captureAttr param is false, all attribute values are dumped into the catch-all text field.  Uwe pointed out that this is terrible, since lots of junk like style and class attributes will get dumped there.  We did identify several useful attributes though: href, title, alt, summary.  I'll make another issue for post-5.0 to try to improve the situation.\n\nAs noted above, the \"none\\n\" (and all other attribute values) pasted into the catch-all field has no preceding whitespace, so tokenization will break.  Uwe provided a patch to fix this:\n\n\nIndex: solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler.java\n===================================================================\n--- solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler.java\t(revision 1654430)\n+++ solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler.java\t(working copy)\n@@ -280,7 +280,7 @@\n       }\n     } else {\n       for (int i = 0; i < attributes.getLength(); i++) {\n-        bldrStack.getLast().append(attributes.getValue(i)).append(' ');\n+        bldrStack.getLast().append(' ').append(attributes.getValue(i));\n       }\n     }\n     bldrStack.getLast().append(' ');\n\n\n\nCommitting shortly. ",
            "id": "comment-14290305"
        },
        {
            "date": "2015-01-24T01:07:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654444 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1654444 ]\n\nSOLR-6856: fix preceding whitespace for attribute values dumped into the catch-all field. ",
            "id": "comment-14290312"
        },
        {
            "date": "2015-01-24T01:07:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654445 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1654445 ]\n\nSOLR-6856: fix preceding whitespace for attribute values dumped into the catch-all field. (merged trunk r1654444) ",
            "id": "comment-14290313"
        },
        {
            "date": "2015-01-24T01:08:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654446 from Use account \"steve_rowe\" instead in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1654446 ]\n\nSOLR-6856: fix preceding whitespace for attribute values dumped into the catch-all field. (merged trunk r1654444) ",
            "id": "comment-14290314"
        },
        {
            "date": "2015-01-24T01:23:41+0000",
            "author": "Steve Rowe",
            "content": "Here's the issue for improving catch-all attribute extraction: SOLR-7027 ",
            "id": "comment-14290330"
        },
        {
            "date": "2015-02-23T05:03:02+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14333002"
        },
        {
            "date": "2015-02-26T16:21:18+0000",
            "author": "Anshum Gupta",
            "content": "Reopening for back porting to 4.10.4 ",
            "id": "comment-14338635"
        },
        {
            "date": "2015-02-26T17:26:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662499 from Anshum Gupta in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1662499 ]\n\nSOLR-6856: Restore ExtractingRequestHandler's ability to capture all HTML tags when parsing (X)HTML and fix preceding whitespace for attribute values dumped into the catch-all field. (merge from 5x) ",
            "id": "comment-14338730"
        },
        {
            "date": "2015-03-05T15:36:24+0000",
            "author": "Michael McCandless",
            "content": "Bulk close for 4.10.4 release ",
            "id": "comment-14348896"
        }
    ]
}