{
    "id": "SOLR-10320",
    "title": "Perform secondary sort using both values in and outside Solr index",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "There are some situations that we need to sort results based on values outside of Solr (say, from a separate datastore or a data analytics service that ranks entities based on analytic results). There is also the need to return results in a deterministic order but applying a dynamic chain of sorting and/or ranking algorithms to the result set. This chain would be processed as a secondary sort implementation, where ties returned from one sorting/ranking algorithm are passed to the next sorting/ranking algorithm in the chain until all ties are resolved, resulting in a deterministic result order. This chain should have the ability to apply sorting algorithms that use data found within the solr index as well as outside of the index.",
    "attachments": {
        "0001-SOLR-10320-Perform-secondary-sort-using-both-values-.patch": "https://issues.apache.org/jira/secure/attachment/12861293/0001-SOLR-10320-Perform-secondary-sort-using-both-values-.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-20T16:46:35+0000",
            "content": "first, before submitting a JIRA it's a good idea to discuss something on the user's list.\n\nDo you have a patch you'd like to submit? \n\nYou can sort by function queries, and you can write custom function query. Since based on something outside Solr is, by definition, custom for most situations, you'd have to write some custom code anyway so would that do?\n\nAnd the overriding concern here is speed. Every doc that has a non-zero score will have to go through sorting. It's hard to see how going out to an external-to-solr source for, potentially, billions of documents has to be very, very efficient. ",
            "author": "Erick Erickson",
            "id": "comment-15933017"
        },
        {
            "date": "2017-03-20T17:43:00+0000",
            "content": "I have custom code for my own need, and would like to make it as a Solr feature so everyone could use it.\n\nI think Solr can provide public methods which take a map (field key->value) or a ordered list of values, and use these data to sort matched results. So Solr just provides a standard way to developers, reduce the custom code they need to write.\n\nAnd for performance, nothing is free. Developers who use this feature need to know there will be extra overhead, from the external data service, and from sorting operations within Solr. For my case and probably many out there, we can live with this price. ",
            "author": "Yuchuan Zhou",
            "id": "comment-15933154"
        },
        {
            "date": "2017-03-30T18:28:26+0000",
            "content": "GitHub user bkinlaw opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/178\n\n    SOLR-10320: Perform secondary sort using both values in and outside S\u2026\n\n    \u2026olr index\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/bkinlaw/lucene-solr SOLR-10320\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/178.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #178\n\n\ncommit 52a72dc845261e116a304ccda6e78d2a04790529\nAuthor: Yuchuan Zhou <yuchuan_zhou@cable.comcast.com>\nDate:   2017-03-23T14:07:28Z\n\n    SOLR-10320: Perform secondary sort using both values in and outside Solr index\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-15949553"
        },
        {
            "date": "2017-03-30T18:28:31+0000",
            "content": "Github user bkinlaw closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/178 ",
            "author": "ASF GitHub Bot",
            "id": "comment-15949554"
        },
        {
            "date": "2017-03-30T18:30:20+0000",
            "content": "GitHub user bkinlaw opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/179\n\n    SOLR-10320: Perform secondary sort using both values in and outside S\u2026\n\n    \u2026olr index\n\n\n    This is an ideas pull request to address issue SOLR-10320. Any suggestions/feedback is welcome. Still needs more testing and unit tests. \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/bkinlaw/lucene-solr SOLR-10320\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/179.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #179\n\n\ncommit 52a72dc845261e116a304ccda6e78d2a04790529\nAuthor: Yuchuan Zhou <yuchuan_zhou@cable.comcast.com>\nDate:   2017-03-23T14:07:28Z\n\n    SOLR-10320: Perform secondary sort using both values in and outside Solr index\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-15949555"
        },
        {
            "date": "2017-03-30T18:31:11+0000",
            "content": "Submitted Pull Request #179. This is just an ideas pull request to address issue SOLR-10320. Any suggestions/feedback is welcome. Still needs more testing and unit tests.  ",
            "author": "Brandy Kinlaw",
            "id": "comment-15949563"
        }
    ]
}