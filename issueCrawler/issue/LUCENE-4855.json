{
    "id": "LUCENE-4855",
    "title": "Potential exception in TermInfosWriter#initialize() swallowed makes debugging hard",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [],
        "affect_versions": "3.6.2",
        "priority": "Minor",
        "labels": "",
        "type": "Bug",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "TermInfosWriter#initialize() can potentially fail with an exception when trying to write any of the values in the try block. If that happens the finally clause will be called and that may also fail during close(). This exception will mask the original one potentially hiding the real cause and making debugging such failures difficult.\n\nMy particular case involves failing the first write in the initialize() and close() failing the seek. My code receives:\n\nCaused by: java.io.IOException: Illegal seek\n        at java.io.RandomAccessFile.seek(Native Method) ~[na:1.6.0_31]\n        at org.apache.lucene.store.FSDirectory$FSIndexOutput.seek(FSDirectory.java:479)\n        at org.apache.lucene.index.TermInfosWriter.close(TermInfosWriter.java:244)\n        at org.apache.lucene.util.IOUtils.close(IOUtils.java:141)\n\nwhich provides no indication as to why the initialization failed. The above stack trace has been created with lucene version 3.5.0 but the exception handling is still the same in 3.6.2",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-03-20T10:21:41+0000",
            "content": "Hmmm, I'm confused.  That code does this:\n\n    boolean success = false;\n    try {\n      output.writeInt(FORMAT_CURRENT);              // write format\n      output.writeLong(0);                          // leave space for size\n      output.writeInt(indexInterval);               // write indexInterval\n      output.writeInt(skipInterval);                // write skipInterval\n      output.writeInt(maxSkipLevels);               // write maxSkipLevels\n      assert initUTF16Results();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(output);\n      }\n    }\n\n\n\nSo any exception inside the try block should then call IOUtils.closeWhileHandlingException, which should suppress any exceptions hit during closing and continue throwing the original exception.\n\nCan you post the full exception? ",
            "author": "Michael McCandless",
            "id": "comment-13607475"
        },
        {
            "date": "2013-03-20T13:11:39+0000",
            "content": "I must apologize - i am looking back at the stack trace i have and it does not even include closeWhileHandlingException() - i don't know how i came to this conclusion.\n\nFor completeness, the stack trace is \n\nCaused by: java.io.IOException: Illegal seek\n        at java.io.RandomAccessFile.seek(Native Method)\n        at org.apache.lucene.store.FSDirectory$FSIndexOutput.seek(FSDirectory.java:479)\n        at org.apache.lucene.index.TermInfosWriter.close(TermInfosWriter.java:244)\n        at org.apache.lucene.util.IOUtils.close(IOUtils.java:141)\n        at org.apache.lucene.index.FormatPostingsFieldsWriter.finish(FormatPostingsFieldsWriter.java:70)\n        at org.apache.lucene.index.FreqProxTermsWriter.flush(FreqProxTermsWriter.java:138)\n        at org.apache.lucene.index.TermsHash.flush(TermsHash.java:113)\n        at org.apache.lucene.index.DocInverter.flush(DocInverter.java:70)\n        at org.apache.lucene.index.DocFieldProcessor.flush(DocFieldProcessor.java:60)\n        at org.apache.lucene.index.DocumentsWriter.flush(DocumentsWriter.java:581)\n        at org.apache.lucene.index.IndexWriter.doFlush(IndexWriter.java:3623)\n        at org.apache.lucene.index.IndexWriter.flush(IndexWriter.java:3588)\n        at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:2334)\n        at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:2299)\n\n\n\nwhich is still a problem for me but unrelated to the original purpose of this bug report. I will of course close this issue. ",
            "author": "Chris Gioran",
            "id": "comment-13607580"
        },
        {
            "date": "2013-03-20T13:29:44+0000",
            "content": "OK thanks Chris.  But now I wonder why you are hitting Illegal seek ... what filesystem? ",
            "author": "Michael McCandless",
            "id": "comment-13607601"
        },
        {
            "date": "2013-03-20T15:53:25+0000",
            "content": "It is running on an Amazon EC2 EBS volume formatted as ext4. ",
            "author": "Chris Gioran",
            "id": "comment-13607755"
        },
        {
            "date": "2013-04-29T10:41:08+0000",
            "content": "Just as a follow up, it turns out that this was caused by filesystem corruption, as caught by fsck. So nothing to see here. ",
            "author": "Chris Gioran",
            "id": "comment-13644405"
        },
        {
            "date": "2013-04-29T10:50:07+0000",
            "content": "OK, thanks for bringing closure Chris! ",
            "author": "Michael McCandless",
            "id": "comment-13644412"
        }
    ]
}