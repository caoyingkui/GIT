{
    "id": "SOLR-9898",
    "title": "Documentation for metrics collection and /admin/metrics",
    "details": {
        "components": [
            "documentation"
        ],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "6.4"
        ],
        "affect_versions": "6.4,                                            7.0",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Draft documentation follows.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-28T12:32:43+0000",
            "author": "Andrzej Bialecki",
            "content": "Overview\nSolr 6.4 adds a developer API and instrumentation for the collection of detailed performance-oriented metrics throughout the life-cycle of Solr service and its various components. Internally it uses Dropwizard Metrics API, which uses the following classes of meters to measure events:\n\n\tcounters - simply count events. They provide a single long value, e.g. the number of requests.\n\tmeters - additionally compute rates of events. Provide a count (as above) and 1-, 5-, and 15-minute exponentially decaying rates, similarly to the Unix system load average.\n\thistograms - calculate approximate distribution of events according to their values. Provide the following approximate statistics, with a similar exponential decay as above: mean (arithmetic average), median, maximum, minimum, standard deviation, and 75-th, 95-th, 98-th, 99-th and 999-th percentiles.\n\ttimers - measure the number and duration of events. They provide a count and histogram of timings.\n\tgauges - offer instantaneous reading of a current value, e.g. current queue depth, current number of active connections, free heap size.\n\n\n\nGroup of related metrics with unique names is managed in a metric registry. Solr maintains several such registries, each corresponding to a high-level group such as: jvm, jetty, http, node, core (see below). Metrics are maintained and accumulated through all life-cycles of components since the start of the process until its shutdown - e.g. metrics for a particular SolrCore are tracked through possibly several load / unload / rename operations, and deleted only when a core is explicitly deleted. However, metrics are not persisted across process restarts - restarting Solr will discard all collected metrics.\n\nFor each group (and/or for each registry) there can be several reporters - components responsible for communication of metrics from selected registries to external systems. Currently implemented reporters support emitting metrics via JMX, Ganglia, Graphite and SLF4J. There is also a dedicated /admin/metrics handler that can be queried to report all or a subset of the current metrics from multiple registries.\n\nMetric groups\nThese are the major groups of metrics that are collected:\n\nJVM level (solr.jvm registry):\n\n\tdirect and mapped buffer pools\n\tclass loading / unloading\n\tOS memory, CPU time, file descriptors, swap, system load\n\tGC count and time\n\theap, non-heap memory and GC pools\n\tnumber of threads, their states and deadlocks\n\n\n\nNode / CoreContainer level (solr.node registry):\n\n\thandler requests (count, timing): collections, info, admin, configSets, etc.\n\tnumber of cores (loaded, lazy, unloaded)\n\n\n\nCore (SolrCore) level (solr.core.<collection>... registries, one for each core):\n\n\tall common RequestHandler-s report: request timers / counters, timeouts, errors.\n\tindex-level events (in progress - SOLR-9854): meters for minor / major merges, number of merged docs, number of deleted docs, gauges for currently running merges and their size.\n\tdirectory-level IO: total read / write meters, histograms for read / write operations and their size, optionally split per index file (eg. field data, term dictionary, docValues, etc) (SOLR-9854 in progress)\n\tshard replication and transaction log replay on replicas (TBD, SOLR-9856)\n\tTBD: caches, update handler details, and other relevant SolrInfoMBean-s\n\n\n\nHTTP level (solr.http registry):\n\n\topen / available / pending connections for shard handler and update handler\n\n\n\nJetty level (solr.jetty registry):\n\n\tthreads and pools,\n\tconnection and request timers,\n\tmeters for responses by HTTP class (1xx, 2xx, etc)\n\n\n\nShard leader (TBD)\n\n\taggregated metrics from each replica (SOLR-9857)\n\n\n\nOverseer (TBD)\n\n\taggregated metrics from shard leaders and cluster nodes (SOLR-9858)\n\n ",
            "id": "comment-15782804"
        },
        {
            "date": "2016-12-28T14:06:19+0000",
            "author": "Andrzej Bialecki",
            "content": "Reporters\nReporter configurations are specified in solr.xml file in <metrics><reporter> sections, for example:\n\n<solr>\n <metrics>\n  <reporter name=\"graphite\" group=\"node, jvm\" class=\"org.apache.solr.metrics.reporters.SolrGraphiteReporter\">\n    <str name=\"host\">graphite-server</str>\n    <int name=\"port\">9999</int>\n    <int name=\"period\">60</int>\n  </reporter>\n  <reporter name=\"collection1Updates\" registry=\"solr.core.collection1\" class=\"org.apache.solr.metrics.reporters.SolrSlf4jReporter\">\n    <int name=\"period\">300</int>\n    <str name=\"prefix\">example</str>\n    <str name=\"logger\">updatesLogger</str>\n    <str name=\"filter\">QUERYHANDLER./update</str>\n  </reporter>  \n </metrics>\n...\n</solr>\n\n\nReporter plugins use the following attributes:\n\n\tname - (required) unique name of the reporter plugin\n\tclass - (required) fully-qualified implementation class of the plugin, must extend SolrMetricReporter\n\tgroup - (optional) one or more of the predefined groups (see above)\n\tregistry - (optional) one or more of valid fully-qualified registry names\n\n\n\nIf both group and registry attributes are specified only the group attribute is considered. If neither attribute is specified then the plugin will be used for all groups and registries. Multiple group or registry names can be specified, separated by comma and/or space.\n\nAdditionally, several implementation-specific initialization arguments can be specified in nested elements. There are some arguments that are common to SLF4J, Ganglia and Graphite reporters:\n\n\tperiod - (optional int) period in seconds between reports. Default value is 60.\n\tprefix - (optional str) prefix to be added to metric names, may be helpful in logical grouping of related Solr instances, eg. machine name or cluster name. Default is empty string, ie. just the registry name and metric name will be used to form a fully-qualified metric name.\n\tfilter - (optional str) if not empty then only metric names that start with this value will be reported. Default is no filtering, ie. all metrics from selected registry will be reported.\n\n\n\nReporters are instantiated for every group and registry that they were configured for, at the time when the respective components are initialized (eg. on JVM startup or SolrCore load). When reporters are created their configuration is validated (and eg. necessary connections are established). Uncaught errors at this initialization stage cause the reporter to be discarded from the running configuration. Reporters are closed when the corresponding component is being closed (eg. on SolrCore close, or JVM shutdown) but metrics that they reported are still maintained in respective registries, as explained in the previous section.\n\nThe following sections provide information on implementation-specific arguments. All implementation classes provided with Solr can be found under org.apache.solr.metrics.reporters.\n\nJMX reporter (org.apache.solr.metrics.reporters.SolrJmxReporter)\n\n\tdomain - (optional str) JMX domain name. If not specified then registry name will be used.\n\tserviceUrl - (optional str) service URL for a JMX server. If not specified then the default platform MBean server will be used.\n\tagentId - (optional str) agent ID for a JMX server. Note: either serviceUrl or agentId can be specified but not both - if both are specified then the default MBean server will be used.\n\n\n\nObject names created by this reporter are hierarchical, dot-separated but also properly structured to form corresponding hierarchies in eg. JConsole. This hierarchy consists of the following elements in the top-down order:\n\n\tregistry name (eg. solr.core.collection1.shard1.replica1. Dot-separated registry names are also split into ObjectName hierarchy levels, so that metrics for this registry will be shown under /solr/core/collection1/shard1/replica1 in JConsole, with each domain part being assigned to dom1, dom2, ... domN property.\n\treporter name (the value of reporter's name attribute)\n\tcategory, scope and name for request handlers\n\tor additional name1, name2, ... nameN elements for metrics from other components.\n\n\n\nSLF4J reporter (org.apache.solr.metrics.reporters.SolrSlf4jReporter)\n(See also common arguments above)\n\n\tlogger - (optional str) name of the logger to use. Default is empty, in which case the group or registry name will be used if specified in the plugin configuration.\n\n\n\nUsers can specify logger name (and the corresponding logger configuration in eg. Log4j configuration) to output metrics-related logging to separate file(s), which can then be processed by external applications. Each log line produced by this reporter consists of configuration-specific fields, and a message that follows this format:\n\ntype=COUNTER, name={}, count={}\n\ntype=GAUGE, name={}, value={}\n\ntype=TIMER, name={}, count={}, min={}, max={}, mean={}, stddev={}, median={}, p75={}, p95={}, p98={}, p99={}, p999={}, mean_rate={}, m1={}, m5={}, m15={}, rate_unit={}, duration_unit={}\n\ntype=METER, name={}, count={}, mean_rate={}, m1={}, m5={}, m15={}, rate_unit={}\n\ntype=HISTOGRAM, name={}, count={}, min={}, max={}, mean={}, stddev={}, median={}, p75={}, p95={}, p98={}, p99={}, p999={}\n\n\n(curly braces added only as placeholders for actual values).\n\nGraphite reporter (org.apache.solr.metrics.reporters.SolrGraphiteReporter)\n(See also common arguments above)\n\n\thost - (required str) host name where Graphite server is running.\n\tport - (required int) port number for the server\n\tpickled - (optional bool) use \"pickled\" Graphite protocol which may be more efficient. Default is false (use plain-text protocol).\n\n\n\nWhen plain-text protocol is used (pickled==false) it's possible to use this reporter to integrate with systems other than Graphite, if they can accept space-separated and line-oriented input over network in the following format:\n\ndot.separated.metric.name[.and.attribute] value epochTimestamp\n\n\nFor example:\n\nexample.solr.node.cores.lazy 0 1482932097\nexample.solr.node.cores.loaded 1 1482932097\nexample.solr.jetty.org.eclipse.jetty.server.handler.DefaultHandler.2xx-responses.count 21 1482932097\nexample.solr.jetty.org.eclipse.jetty.server.handler.DefaultHandler.2xx-responses.m1_rate 2.5474287707930614 1482932097\nexample.solr.jetty.org.eclipse.jetty.server.handler.DefaultHandler.2xx-responses.m5_rate 3.8003171557510305 1482932097\nexample.solr.jetty.org.eclipse.jetty.server.handler.DefaultHandler.2xx-responses.m15_rate 4.0623076220244245 1482932097\nexample.solr.jetty.org.eclipse.jetty.server.handler.DefaultHandler.2xx-responses.mean_rate 0.5698031798408144 1482932097\n\n\n\nGanglia reporter (org.apache.solr.metrics.reporters.SolrGangliaReporter)\n(See also common arguments above)\n\n\thost - (required str) host name where Ganglia server is running.\n\tport - (required int) port number for the server\n\tmulticast - (optional bool) when true use multicast UDP communication, otherwise use UDP unicast. Default is false.\n\n ",
            "id": "comment-15782953"
        },
        {
            "date": "2016-12-29T18:59:31+0000",
            "author": "Cassandra Targett",
            "content": "I've started a page in the \"drafts\" area of the Solr Ref Guide: https://cwiki.apache.org/confluence/display/solr/Metrics+Reporting.\n\nedit: the name can be changed if there's a better one. ",
            "id": "comment-15785883"
        },
        {
            "date": "2017-01-03T15:06:12+0000",
            "author": "Andrzej Bialecki",
            "content": "Index merge metrics\nThese metrics are collected in respective registries for each core (eg. solr.core.collection1....), under the INDEX category. Basic metrics are always collected - collection of additional metrics can be turned on using boolean parameters in the /config/indexConfig/metrics section of solrconfig.xml:\n\n<config>\n  ...\n  <indexConfig>\n    <metrics>\n      <majorMergeDocs>524288</majorMergeDocs>\n      <bool name=\"mergeDetails\">true</bool>\n      <bool name=\"directoryDetails\">true</bool>\n    </metrics>\n    ...\n  </indexConfig>\n...\n</config>\n\n\n\nThe following metrics are collected:\n\n\tINDEX.merge.major - timer for merge operations that include at least \"majorMergeDocs\" (default value for this parameter is 512k documents).\n\tINDEX.merge.minor - timer for merge operations that include less than \"majorMergeDocs\".\n\tINDEX.merge.errors - counter for merge errors.\n\tINDEX.flush - meter for index flush operations.\n\n\n\nAdditionally, the following gauges are reported, which help to monitor the momentary state of index merge operations:\n\n\tINDEX.merge.major.running - number of running major merge operations (depending on the implementation of MergeScheduler that is used there can be several concurrently running merge operations).\n\tINDEX.merge.minor.running - as above, for minor merge operations.\n\tINDEX.merge.major.running.docs - total number of documents in the segments being currently merged in major merge operations.\n\tINDEX.merge.minor.running.docs - as above, for minor merge operations.\n\tINDEX.merge.major.running.segments - number of segments being currently merged in major merge operations.\n\tINDEX.merge.minor.running.segments - as above, for minor merge operations.\n\n\n\nIf the boolean flag mergeDetails is true then the following additional metrics are collected:\n\n\tINDEX.merge.major.docs - meter for the number of documents merged in major merge operations\n\tINDEX.merge.major.deletedDocs - meter for the number of deleted documents expunged in major merge operations\n\n ",
            "id": "comment-15795262"
        },
        {
            "date": "2017-01-03T16:30:47+0000",
            "author": "Andrzej Bialecki",
            "content": "Directory I/O metrics\nIndex storage (represented in Lucene/Solr by Directory abstraction) is monitored for I/O throughput, which is optionally tracked per index file (see the previous section, directoryDetails argument). As with the index-level metrics, these metrics are also registered in per-core registries.\n\nThe following metrics are collected:\n\n\tDIRECTORY.total.reads - meter for total read bytes from the directory.\n\tDIRECTORY.total.writes - meter for total written bytes to the directory.\n\n\n\nIf directoryDetails is set to true the following additional metrics are collected (note: this can potentially produce a lot of metrics so it should not be used in production):\n\n\tDIRECTORY.total.readSizes - histogram of read operation sizes (in byte units)\n\tDIRECTORY.total.writeSizes - histogram of write operation sizes (in byte units)\n\tDIRECTORY.<file type>.reads - meter for read bytes per \"file type\". File type is either segments for segments_N and pending_segments_N, or a file extension (eg. fdt, doc, tim, etc). The number and type of these files vary depending on the type of Lucene Codec used.\n\tDIRECTORY.<file type>.writes - meter for written bytes per \"file type\".\n\tDIRECTORY.<file type>.readSizes -  histogram of write operation sizes per \"file type\" (in byte units).\n\tDIRECTORY.<file type>.writeSizes -  histogram of write operation sizes per \"file type\" (in byte units).\n\n ",
            "id": "comment-15795443"
        },
        {
            "date": "2017-03-03T09:22:23+0000",
            "author": "Andrzej Bialecki",
            "content": "SOLR-10182 removed the DIRECTORY metrics in 6.4.2, 6.5 and master. As such they are only present in 6.4.1 - I'm not sure how this should be reflected in the docs... ",
            "id": "comment-15893972"
        },
        {
            "date": "2017-06-02T17:00:46+0000",
            "author": "Cassandra Targett",
            "content": "Totally forgot to resolve this when I added it to the Ref Guide in 6.4. ",
            "id": "comment-16035044"
        }
    ]
}