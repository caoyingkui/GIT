{
    "id": "SOLR-7130",
    "title": "Make stale state notification work without failing the requests",
    "details": {
        "components": [
            "clients - java",
            "SolrCloud",
            "SolrJ"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "I wasn't sure whether to label this a bug or an improvement.\n\nFor collections with stateFormat=2, we now fail requests (because of stale state) which we didn't previously. The client having stale cached cluster state is not a sufficient reason to fail and retry the entire request because in most of such cases, the node receiving the request is still perfectly capable of returning a valid response (either from local replicas or remote ones).\n\nWe should find a better way to notify clients that they have stale state. Perhaps we can modify the response and add a \"routing\" section instead of outright exception.",
    "attachments": {
        "SOLR-7130.patch": "https://issues.apache.org/jira/secure/attachment/12700147/SOLR-7130.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-02-23T06:22:38+0000",
            "author": "Noble Paul",
            "content": "When the node is capable of serving the requests locally, We can add the missing details into the payload. But, when we are proxying the requests to a remote server, we can't afford to unmarshal the response and add the extra information. So , for such requests, out options are \n\n\tSend an exception as it does today\n\tSend the information in the response headers. I'm not sure about using HTTP headers because if we move to a different transport mechanism in the future it is bad\n\n\n\nAnother point we need to keep in mind is backward compatibility . Should we start sending the version number of SolrJ along with the request? So, based on that request parameter we can choose to throw an exception or send the information in the payload itself. This will also help us avoiding breaking backcompat in javabin format ",
            "id": "comment-14333036"
        },
        {
            "date": "2015-02-23T09:08:51+0000",
            "author": "Noble Paul",
            "content": "The response NamedList contains information about the znode version of the collection in the server . After the response is received, the client would try to update local colection cache to the version at the server . If another thread updated the version this node expects, then the ZK call is avoided ",
            "id": "comment-14333131"
        },
        {
            "date": "2015-02-23T15:12:13+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Noble. Some comments:\n\n\tMaybe we should use the responseHeader to send this routing information? That way we can avoid having to parse the entire response from remote servers too?\n\tThis patch still throws an exception if the request is proxied to a remote node. IMO, that isn't acceptable.\n\tCan you add some java docs and define the behaviour/result of ZkStateReader.compareStateVersions method?\n\tPlease take care of formatting in the new/changed code.\n\n ",
            "id": "comment-14333379"
        },
        {
            "date": "2015-02-23T16:21:07+0000",
            "author": "Noble Paul",
            "content": "Maybe we should use the responseHeader to send this routing information? That way we can avoid having to parse the entire response from remote servers too?\n\nI don't think it is a good idea. We don't use it anywhere as of now and if we use another transport mechanism it will be a problem\n\nThis patch still throws an exception if the request is proxied to a remote node. IMO, that isn't acceptable.\n\nThat is a rare case . It happened when a core went down completely (and the node is still up).. We can afford to resend the request. Comparing the cost of proxying a request to resending a request , we are not saving much\n\nThis is a first patch , Not fully cleaned up or anything.  ",
            "id": "comment-14333450"
        },
        {
            "date": "2015-02-23T16:33:01+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I don't think it is a good idea. We don't use it anywhere as of now and if we use another transport mechanism it will be a problem\n\nI am referring to the response header which is part of the response. Any transport mechanism that we choose will likely have a responseHeader section.\n\nThat is a rare case . It happened when a core went down completely (and the node is still up).. We can afford to resend the request. Comparing the cost of proxying a request to resending a request , we are not saving much\n\nOkay but in that case we should change the following logging to INFO level because it will flood the logs needlessly:\n\nlog.error(\"Request to collection {} failed due to (\"+errorCode+\n          \") {}, retry? \"+retryCount, collection, rootCause.toString());\n\n ",
            "id": "comment-14333469"
        },
        {
            "date": "2015-02-23T17:11:03+0000",
            "author": "Noble Paul",
            "content": "I am referring to the response header which is part of the response. Any transport mechanism that we choose will likely have a responseHeader section.\n\nWe don't/can't parse just the header part of a payload\n\nOkay but in that case we should change the following logging to INFO level because it will flood the logs needlessly:\n\nSure ",
            "id": "comment-14333521"
        },
        {
            "date": "2015-02-26T13:07:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662439 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1662439 ]\n\nSOLR-7130: Make stale state notification work without failing the requests ",
            "id": "comment-14338370"
        },
        {
            "date": "2015-02-26T13:29:50+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662445 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662445 ]\n\nSOLR-7130: Make stale state notification work without failing the requests ",
            "id": "comment-14338389"
        },
        {
            "date": "2015-02-26T17:31:41+0000",
            "author": "Mark Miller",
            "content": "+      if(col !=null) {\n\nThese if's should have a space after them. Please install the correct lucene / solr code formating rules into your IDE. ",
            "id": "comment-14338743"
        },
        {
            "date": "2015-02-26T17:33:27+0000",
            "author": "Mark Miller",
            "content": "if(col !=null) {\n\nThis one in particular needs a space before null as well. It's easier to let your IDE do the work of proper formatting rather than introducing a lot of sloppy formatting as has been happening. We have a code standard - it's not the law, but everyone should at least make a half hearted attempt at following it. ",
            "id": "comment-14338749"
        },
        {
            "date": "2015-02-26T19:35:24+0000",
            "author": "Noble Paul",
            "content": "sure mark\n ",
            "id": "comment-14338979"
        },
        {
            "date": "2015-02-26T19:35:55+0000",
            "author": "Noble Paul",
            "content": "tests failing \n\nBuild: http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Linux/11887/\nJava: 64bit/jdk1.8.0_40-ea-b22 -XX:-UseCompressedOops -XX:+UseConcMarkSweepGC\n\n1 tests failed.\nFAILED:  org.apache.solr.cloud.BasicDistributedZk2Test.test\n\nError Message:\n._stateVer_:{collection1=16}!=null\n\nStack Trace:\njunit.framework.AssertionFailedError: ._stateVer_:{collection1=16}!=null\n        at __randomizedtesting.SeedInfo.seed([827245A9BAAE634A:A267A7314520EB2]:0)\n        at junit.framework.Assert.fail(Assert.java:50)\n        at org.apache.solr.BaseDistributedSearchTestCase.compareSolrResponses(BaseDistributedSearchTestCase.java:873)\n        at org.apache.solr.BaseDistributedSearchTestCase.compareResponses(BaseDistributedSearchTestCase.java:892)\n        at org.apache.solr.BaseDistributedSearchTestCase.query(BaseDistributedSearchTestCase.java:593)\n        at org.apache.solr.BaseDistributedSearchTestCase.query(BaseDistributedSearchTestCase.java:573)\n        at org.apache.solr.BaseDistributedSearchTestCase.query(BaseDistributedSearchTestCase.java:552)\n        at org.apache.solr.cloud.BasicDistributedZk2Test.brindDownShardIndexSomeDocsAndRecover(BasicDistributedZk2Test.java:280)\n\n ",
            "id": "comment-14338981"
        },
        {
            "date": "2015-02-26T19:40:52+0000",
            "author": "Noble Paul",
            "content": "If I reformat the entire file I end up making the diffs too much because a lot of the existing code does not follow the standards. So I have to selectively make these changes . Some times they slip through ",
            "id": "comment-14339000"
        },
        {
            "date": "2015-02-26T19:44:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662546 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1662546 ]\n\nSOLR-7130: formatting mistakes ",
            "id": "comment-14339021"
        },
        {
            "date": "2015-02-26T19:47:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662547 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662547 ]\n\nSOLR-7130: formatting mistakes ",
            "id": "comment-14339028"
        },
        {
            "date": "2015-02-26T19:55:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662554 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1662554 ]\n\nSOLR-7130: remove the special entry from response after reading, so that tests don't see them ",
            "id": "comment-14339043"
        },
        {
            "date": "2015-02-26T19:58:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662555 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662555 ]\n\nSOLR-7130: remove the special entry from response after reading, so that tests don't see them ",
            "id": "comment-14339048"
        },
        {
            "date": "2015-04-15T00:30:59+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495403"
        }
    ]
}