{
    "id": "SOLR-8378",
    "title": "Add upconfig and downconfig commands to the bin/solr script",
    "details": {
        "components": [
            "scripts and tools"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "5.4,                                            6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "It would be convenient to be able to upload and download arbitrary configsets to Zookeeper.\n\nThis might be the last thing we need before not requiring users be aware of zkcli, which is awkward.",
    "attachments": {
        "SOLR-8378.patch": "https://issues.apache.org/jira/secure/attachment/12775971/SOLR-8378.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-06T06:08:25+0000",
            "author": "Erick Erickson",
            "content": "First cut, seems to work on a very quick once-over. I need to look it over with fresh eyes, it's Saturday after all....\n\nAny comments on the approach? Or whether this is worth doing? Unless there are objections I'm going to check this in next week sometime after some more polish.\n\nOne thing I'm not too happy about is that I moved the upconfig method from CreateCollectionTool to the base class so I could easily re-use it in the new ConfigSetUploadTool. Any suggestions? It needed access to the \"echo\" method so unless we rearrange things significantly it's easier this way.\n\nUpayavira I'm torn on whether to put this in 5.4. Maybe I'll put it in if there's a re-spin? What do you think? The necessity of using zkcli has long rankled me as it's yet another thing a new person has to understand. But one point of releases is to try to not shoehorn lots of stuff in at the last minute.\n\nI suppose a lot of it depends on whether there'll be a 5.5 release. I'd really like to get this in place in the 5x code line somewhere.\nUpayavira ",
            "id": "comment-15043722"
        },
        {
            "date": "2015-12-06T06:12:48+0000",
            "author": "Erick Erickson",
            "content": "Hmmm, got some scope creep in here because what this patch also does is add in a managed_schema_configs, which I'd really like to get into the 5.4 line. The point there is to have a convenient way to use the managed schema stuff without all the field guessing stuff.\n\nAt least the patch I'm about to put up actually puts up the managed_schema_configs that I reference in the scripts....\n\nOpinions? ",
            "id": "comment-15043723"
        },
        {
            "date": "2015-12-07T06:07:55+0000",
            "author": "Erick Erickson",
            "content": "I think this is ready, much of it it copy/paste/change reproducing the pattern for the other commands. \n\nI'm particularly interested in any comments Timothy Potter has.\n\nThis really does two things:\n1> provides an upconfig and downconfig so we don't force the users to use zkcli or bootstrap options.\n\n2> provides a managed schema configset that does not have the field guessing in it.\n\nI'd actually like to get this in to 5.4 if there aren't too many objections, I'm guessing there'll be a re-spin. Especially because this in conjunction with the new admin API allows the managed schema to be used from the UI with or without the field guessing API.\n\nUnless there are objections, I plan on committing this to at least trunk and 5x Tuesday or so, whether to also include it in 5.4 is another question. ",
            "id": "comment-15044421"
        },
        {
            "date": "2015-12-07T06:24:12+0000",
            "author": "Varun Thacker",
            "content": "Hi Erick,\n\n\n2> provides a managed schema configset that does not have the field guessing in it.\n\nWith SOLR-8131 ( which I plan on committing today ) all branch5x examples will explicitly use managed-schema . So basic schema will also be equivalent to the managed-only schema here? There will be less duplication of example configsets we ship with in that case.\n\nAlso I think we should not add this to 5.4 . If there not being another 5.x release a motive here? We could do a 5.5 release in early/mid January since 6.0 could be soon after that in that case  ",
            "id": "comment-15044438"
        },
        {
            "date": "2015-12-07T09:23:57+0000",
            "author": "Upayavira",
            "content": "Having a schema sample that does not include the schemaless stuff is really important. Schemaless is fraught with danger, and whilst it is clever, and useful in a limited range of scenarios, we should not have it being the only managed schema sample config.\n\nThat said, this ticket is about upconfig/downconfig. I support the addition of these to bin/solr. It is a real pain to locate the zk-cli script and explain its need/etc. \n\nNeither are bugs in 5.4.0 so should not be a part of that release. 5.5.0 could be released in 2 weeks time if we wanted to. ",
            "id": "comment-15044628"
        },
        {
            "date": "2015-12-07T15:48:19+0000",
            "author": "Timothy Potter",
            "content": "I don't think this should be committed w/o also including these new commands in bin\\solr.cmd for our Windows users. I like Varun's idea of just having managed schema enabled in the existing configs, making managed_schema_configs == basic_configs ... but sounds like he's already handled that issue in another ticket.\n\nI know the Windows stuff is a major pain, but this addition shouldn't be much more than copy-paste in a few key areas, but then there's the testing. I usually spin up an instance in EC2 to do my Windows testing, so I can help test.\n ",
            "id": "comment-15045102"
        },
        {
            "date": "2015-12-07T16:25:28+0000",
            "author": "Erick Erickson",
            "content": "Timothy Potter Rats! I thought about the windows command file on Saturday but then forgot it completely. Siiigggh. I'll take you up on the testing bits. Thanks for reminding me.\n\nVarun Thacker Solr-8131 defaults to schemaless mode. While related, these are two different beasts from a user's perspective. I've run into lots of situations where the user wants docs to fail indexing first time, every time when it contains undefined fields, fields of an unintended type, etc.. One of the points of this ticket is to accommodate that desire while being able to define fields via the new admin UI. You'll notice that there aren't even any dynamic fields defined in the schema for instance.\n\nI did struggle a bit with whether or not to leave all the fieldTypes defined but in the end decided to leave them in. I became convinced that in managed schema mode they're actually more important than in the manually-edited examples we've been shipping for so long.\n\nbq:  If there not being another 5.x release a motive here.\n\nI'll defer to the release manager here and he's spoken. It's not going in 5.4.\n\nUpayavira OK, not going in 5.4 \n ",
            "id": "comment-15045188"
        },
        {
            "date": "2015-12-07T21:47:22+0000",
            "author": "Erick Erickson",
            "content": "Updated patch with Windows support.\n\nWARNING: this hasn't been tested yet as I don't have a handy Windows environment. I'll spin up an EC2 instance sometime if someone doesn't beat me to it. ",
            "id": "comment-15045806"
        },
        {
            "date": "2015-12-08T05:12:16+0000",
            "author": "Varun Thacker",
            "content": "Solr-8131 defaults to schemaless mode. While related, these are two different beasts from a user's perspective. I've run into lots of situations where the user wants docs to fail indexing first time, every time when it contains undefined fields, fields of an unintended type, etc.. One of the points of this ticket is to accommodate that desire while being able to define fields via the new admin UI. You'll notice that there aren't even any dynamic fields defined in the schema for instance.\n\nSOLR-8131 doesn't default to schemaless mode. It defaults to managed schema mode , meaning the Schema APIs will be available to everyone to modify fields/fieldTypes etc. The type guessing is only part of the data_driven example like before. ",
            "id": "comment-15046368"
        },
        {
            "date": "2015-12-08T07:53:57+0000",
            "author": "Erick Erickson",
            "content": "Just had an offline chat with Varun. His work on SOLR-8131 and this one crossed. There's no need for a new configset, I've removed it.\n\nWARNING: It's late and I'll be able to test this in the morning. ",
            "id": "comment-15046536"
        },
        {
            "date": "2015-12-08T22:36:28+0000",
            "author": "Gregory Chanan",
            "content": "Some thoughts:\n\nI'm on board with having useful commands in one place rather than requiring end users know about zkcli.  That said, I don't think adding more uncategorized comands to the same script is the correct way to go.  In our distribution (CDH) we have had script that does a bunch of different actions on solr/zk and I've found it's pretty confusing to users what command actually goes where.  Ideally the users wouldn't have to know that sort of information (at least when starting up, but I think quickstart is a different enough use case to warrant special consideration), but that's just not practical \u2013 consider if the configs znode has ACLs enabled \u2013 you need to pass a reasonable endpoint-specific error message back to the user, you have to have an end-point specific mechanism to pass kerberos credentials (does this script work in a secure environment)?, etc.  So what will happen if we continue along this path is we'll have a bunch of different useful commands where it is unclear to users what information they actually need to provide without looking it up each time.  Heck, I wrote a lot of the commands in our distribution and I get confused .\n\nSo, my suggestion is that we break up the commands into \"subtopics\" based on the endpoint (the solr http endpoint can be an unnamed default).  So long story short, I'd argue for naming these:\nzk upconfig\nzk downconfig\nor something like that. ",
            "id": "comment-15047606"
        },
        {
            "date": "2015-12-08T23:06:53+0000",
            "author": "Shawn Heisey",
            "content": "Just the other day, I was silently cursing the fact that zkcli was buried in a deep directory under server, rather than living in the bin directory.\n\n\nzk upconfig\nzk downconfig\n\nAssuming that I understand what you're proposing correctly, the command name you've decribed (zk) is very simple.  Perhaps more important, it is unlikely to be confused with the zkCli script that comes with zookeeper, which causes confusion with some users trying to use zkcli.  I do wonder if maybe it should be name something like zksolr instead, so the fact that it's tied to solr is more obvious.  The \"zk\" name is very acceptable, unless Solr is packaged to LSB standards and the scripts end up someplace like /usr/bin, in which case it will be confusing. ",
            "id": "comment-15047649"
        },
        {
            "date": "2015-12-09T01:27:19+0000",
            "author": "Mike Drob",
            "content": "I think what Greg is suggesting is that there still be bin/solr as the main entry point, but you can invoke it as solr zk upconfig and solr zk downconfig. Then maybe someday we add solr zk foo and everything is happily namespaced. This is the same pattern that Hadoop used for a while, although they eventually split into multiple executables IIRC. ",
            "id": "comment-15047835"
        },
        {
            "date": "2015-12-09T10:29:22+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "This discussion is related to SOLR-7074 and SOLR-7233 where we discuss moving zkcli.sh to bin and renaming it as bin/zk, and also let it have the ability to start standalone zookeeper.\n\nI'm a bit back and forth to what I think is best here. It sounds nice to keep all ZK related things in a new bin/zk, but then if that script is able to bin/zk start, bin/zk stop, bin/zk status etc, then it feels odd to mix in upconfig/downconfig since those are solr-specific and client type of operations. So I'm leaning towards letting bin/solr take care of the solr-specific Zk interaction, so the sequence of events, if we implement SOLR-7074 will be:\n\n\nbin/zk start   # We could let it sniff ZK_HOST from solr.in.sh?\nbin/solr start\nbin/solr zk upconfig -d path/to/config -n myconf\nbin/solr create -c mycoll -n myconf\n\n ",
            "id": "comment-15048441"
        },
        {
            "date": "2015-12-09T18:52:35+0000",
            "author": "Erick Erickson",
            "content": "I changed the code to \"namespace\" the ZK stuff, good suggestions!\n\nI'll upload a patch today/tomorrow I hope, need to get the junk working on AWS for testing Windows.... ",
            "id": "comment-15049183"
        },
        {
            "date": "2015-12-10T04:41:09+0000",
            "author": "Erick Erickson",
            "content": "I think this is ready. I finally got an AWS Windows instance to test the Windows and it seems to check out.\n\nI still have to precommit and test, but if all that goes well I'll probably be committing this tomorrow morning. ",
            "id": "comment-15050045"
        },
        {
            "date": "2015-12-10T04:54:58+0000",
            "author": "Erick Erickson",
            "content": "BTW, this incorporates the \"zk\" namespace idea, so examples of using this are\n\nbin/solr zk -upconfig -d directory -n name -z localhost:2181\nbin/solr zk -downconfig -d directory -n name -z localhost:2181\n\n\"directory\" in the upconfig command can be one of the pre-configured configsets. ",
            "id": "comment-15050061"
        },
        {
            "date": "2015-12-10T04:55:51+0000",
            "author": "Erick Erickson",
            "content": "And of course I thought of some wording I wanted to change in the help text right after putting the other patch up. ",
            "id": "comment-15050063"
        },
        {
            "date": "2015-12-10T09:32:56+0000",
            "author": "Upayavira",
            "content": "Just a thought - could it be possible to have a -c collection-name parameter to the upconfig command, and issue a collections API call to reload that collection once the configs have been uploaded? This would improve ease of use substantially. ",
            "id": "comment-15050443"
        },
        {
            "date": "2015-12-10T12:18:14+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I think we should not mix uploading a config set with reloading a collection. The config you upload may be shared between multiple collections for that sake. I think what we need is the reload command available from the script as well. See SOLR-8400 for followup (not to hijack this one) ",
            "id": "comment-15050892"
        },
        {
            "date": "2015-12-10T15:12:18+0000",
            "author": "Erick Erickson",
            "content": "Jan's comments are well taken, and besides I'm about to check this in \n\nThe new UI already has the reload button for collections, so I think that covers it for now. I think if anything I'd prefer to add a \"reload\" operation to the start script rather than have reloading the collection become a side-effect of upconfig, but I'm not even really wild about that.\n\nWe can always raise another JIRA ",
            "id": "comment-15051105"
        },
        {
            "date": "2015-12-10T15:16:39+0000",
            "author": "Upayavira",
            "content": "I'm happy with Jan's suggestion of an option to the bin/solr command. Basically, what I want to avoid is context switching. If you are at the command line, let that task be completable at the command line, rather than requiring a command line request for half, and an API call or UI click for the rest. ",
            "id": "comment-15051109"
        },
        {
            "date": "2015-12-10T15:32:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1719099 from Erick Erickson in branch 'dev/trunk'\n[ https://svn.apache.org/r1719099 ]\n\nSOLR-8378: Add upconfig and downconfig commands to the bin/solr script ",
            "id": "comment-15051123"
        },
        {
            "date": "2015-12-10T17:30:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1719119 from Erick Erickson in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1719119 ]\n\nSOLR-8378: Add upconfig and downconfig commands to the bin/solr script ",
            "id": "comment-15051298"
        }
    ]
}