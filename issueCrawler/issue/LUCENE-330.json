{
    "id": "LUCENE-330",
    "title": "[PATCH] Use filter bits for next() and skipTo() in FilteredQuery",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This improves performance of FilteredQuery by not calling score() \non documents that do not pass the filter. \nThis passes the current tests for FilteredQuery, but these tests \nhave not been adapted/extended.",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--FilteredQueryPatch1.txt": "https://issues.apache.org/jira/secure/attachment/12312490/ASF.LICENSE.NOT.GRANTED--FilteredQueryPatch1.txt",
        "ASF.LICENSE.NOT.GRANTED--SkipFilter.java": "https://issues.apache.org/jira/secure/attachment/12312495/ASF.LICENSE.NOT.GRANTED--SkipFilter.java",
        "ASF.LICENSE.NOT.GRANTED--FilteredQuery.java": "https://issues.apache.org/jira/secure/attachment/12312493/ASF.LICENSE.NOT.GRANTED--FilteredQuery.java",
        "ASF.LICENSE.NOT.GRANTED--IndexSearcherPatch2.txt": "https://issues.apache.org/jira/secure/attachment/12312491/ASF.LICENSE.NOT.GRANTED--IndexSearcherPatch2.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2005-01-07T00:19:57+0000",
            "content": "Created an attachment (id=13910)\nUse filter bits for next() and skipTo() in FilteredQuery\n\ncvs diff -u, 6 Jan 2005 ",
            "author": "Paul Elschot",
            "id": "comment-12322125"
        },
        {
            "date": "2005-01-07T00:21:52+0000",
            "content": "The patch requires java 1.4 because it uses BitSet.nextSetBit()  ",
            "author": "Paul Elschot",
            "id": "comment-12322126"
        },
        {
            "date": "2005-01-07T04:13:30+0000",
            "content": "Created an attachment (id=13914)\nPatch to IndexSearcher.java to use FilteredQuery\n\nThis patch actually simplifies IndexSearcher.java .\nUsed cvs diff -u against current head, 6 Jan 2004.\n\nWith this patch FilteredQuery is used in the following tests:\nTestDateFilter, TestFilteredQuery, TestRangeFilter and\nTestRemoteSearchable.\n\nObtained this list by running all tests with a System.out.println(this);\nin the constructor of FilteredQuery.\n\nRegards,\nPaul Elschot ",
            "author": "Paul Elschot",
            "id": "comment-12322127"
        },
        {
            "date": "2005-01-08T22:26:26+0000",
            "content": "Created an attachment (id=13939)\nCounterpart of Filter to enable use of SortedVIntList ",
            "author": "Paul Elschot",
            "id": "comment-12322128"
        },
        {
            "date": "2005-01-08T22:38:59+0000",
            "content": "Created an attachment (id=13940)\nReworked FilteredQuery to also use IterFilter\n\nUsing both filter types required introducing some abstract inline superclasses\nfor the Weight and the Scorer.\nThe inline subclasses for the Scorer are a bit too large for good\nreadability.\nAll Lucene tests pass.\n\nThis version always converts a BitSet filter to an IterFilter for testing.\nThis conversion is done by an calling an the useIterFilter()\nmethod in the BitSet constructor.\nLeaving out this call provides backward compatible behaviour.\n\nAll tests pass, with and without the call to useIterFilter().\nSome tests from TestRangeFilter even show a reduced\nsize for the SortedVIntList when compared to the BitSet.\n\nRegards,\nPaul Elschot ",
            "author": "Paul Elschot",
            "id": "comment-12322129"
        },
        {
            "date": "2005-01-09T01:21:21+0000",
            "content": "This 5 Jan 2005 version of FilteredQuery.java could be simplified \nby deriving an intIterator directly from a BitSet. \nIn the useIterFilter() method this is done with a SortedVIntList \nin between, but it could easily be done directly. \n\nPerhaps the intIterator attachment should be renamed to DocNrIter \nor DocNrIterator. \n\nWith the current Filter only a java.lang.BitSet \ncan be used as the underlying data structure for the filter.  \nIterFilter allows the use of other data structures, \neg. an int array of document numbers, or a SortedVIntList. \n\nRegards, \nPaul Elschot \n ",
            "author": "Paul Elschot",
            "id": "comment-12322130"
        },
        {
            "date": "2005-01-09T01:24:03+0000",
            "content": "(In reply to comment #6) \n> This 5 Jan 2005 version of FilteredQuery.java could be simplified  \n\nThat should be 8 Jan 2005. \n ",
            "author": "Paul Elschot",
            "id": "comment-12322131"
        },
        {
            "date": "2005-01-09T06:40:55+0000",
            "content": "Created an attachment (id=13944)\nRefactoring of FilteredQuery, 2nd version of 8 Jan 2005.\n\nFilteredScorer now has separate methods for next() and skipTo()\nfor the filter (abstract filterNext() and abstract filterSkipTo())\nand for the query scorer (scorerNext() and scorerSkipTo()).\nThe next() and skipTo() methods work like ConjunctionScorer,\nbut the filter and query scorer are separately called.\nThe filter is always used before the query scorer to minimize I/O.\n\nThe inline subclasses of FilteredScorer for Filter and IterFilter\nonly differ for the filterNext() and filterSkipTo() methods and on a helper\nmethod for explain(), so they now have a readable size.\n\nRegards,\nPaul Elschot ",
            "author": "Paul Elschot",
            "id": "comment-12322132"
        },
        {
            "date": "2005-01-17T02:11:27+0000",
            "content": "Created an attachment (id=14023)\nSkipFilter.java\n\nA query filter in the form of a DocNrSkipper from an IndexReader. ",
            "author": "Paul Elschot",
            "id": "comment-12322133"
        },
        {
            "date": "2005-01-17T02:16:05+0000",
            "content": "Created an attachment (id=14024)\nSkipFilter.java, 16 Jan 2005\n\nFilteredQuery.java using skipTo() on the query, and extended\nwith a SkipFilter constructor. ",
            "author": "Paul Elschot",
            "id": "comment-12322134"
        },
        {
            "date": "2005-01-17T02:22:01+0000",
            "content": "The patch in IndexSearcher is independent of the rest of these \nattachments. \n\nSkipFilter.java also contains a method to replace the Filter by \na SkipFilter. This method is for testing only. \n\nWith and without the use of this method, and with the patch to \nIndexSearcher, all current tests pass. \nThis could indicate that the combination of BooleanQuery and Filter \nis is missing from the current tests. \n\nFilteredQuery is also considerably simplified wrt. to the version \nof 8 Jan 2005. \n\nRegards, \nPaul Elschot \n ",
            "author": "Paul Elschot",
            "id": "comment-12322135"
        },
        {
            "date": "2005-02-09T04:48:53+0000",
            "content": "Created an attachment (id=14214)\nSkipFilter.java, assigned copyright to ASF ",
            "author": "Paul Elschot",
            "id": "comment-12322136"
        },
        {
            "date": "2005-02-09T04:52:01+0000",
            "content": "Created an attachment (id=14215)\nFilteredQuery.java, assigned copyright to ASG, added explain() ",
            "author": "Paul Elschot",
            "id": "comment-12322137"
        },
        {
            "date": "2006-03-05T23:06:43+0000",
            "content": "Paul - it is unfortunate that we've let this patch sit for as long as it has.  I've just encountered issues with FilteredQuery myself and am looking to apply your patches in hopes they'll address the problem I've encountered with FilteredQuery's nested within a BooleanQuery.  There is a comment in some of your code that this doesn't work with BooleanQuery though.  Since the code has changed and your patches are no longer easily applied, could you advise on what the latest patches should be and how to go about going from trunk to these patches?   Many thanks! ",
            "author": "Erik Hatcher",
            "id": "comment-12368934"
        },
        {
            "date": "2006-03-06T00:04:47+0000",
            "content": "There are multiple related issues here\n\n\tintroduction and use of SkipFilter, which returns DocNrSkipper instead of a BitSet.\n\tchanges to IndexSearcher.search(...,filter) to create and use a FilteredQuery\n\n\n\nWithout taking the full plunge into DocNrSkippers yet, the applicable patch to keep FilteredQuery from\nmatching filtered documents would be\nhttp://issues.apache.org/jira/secure/attachment/12312490/FilteredQueryPatch1.txt\n\n> There is a comment in some of your code that this doesn't work with BooleanQuery though\nThe patch I referenced should work.  Paul is refering to BooleanScorer which doesn't implement skipTo, as opposed to BooleanScorer2, which does.\n\nIf the 1.4 BooleanScorer isn't used, then FilteredQueryPatch1.txt  can be made more efficient by using scorer.skipTo() in conjunction with bitset.nextSetBit() (per Paul's comments). ",
            "author": "Yonik Seeley",
            "id": "comment-12368945"
        },
        {
            "date": "2006-03-06T00:20:04+0000",
            "content": "> The patch I referenced should work.\n\nTo be more explicit, that patch should work with both BooleanScorer and BooleanScorer2 because it doesn't use skipTo() in next().\nIf the optimization was made to use skipTo() in next(), then only BooleanScorer2 would work. ",
            "author": "Yonik Seeley",
            "id": "comment-12368947"
        },
        {
            "date": "2006-03-06T00:51:23+0000",
            "content": "I manually applied that patch (prior to my first comment actually) as automatically applying didn't work.  I just committed another test to TestFilteredQuery, which fails with this patch with this error:\n\njava.lang.IndexOutOfBoundsException: Not a valid hit number: 0\n\tat org.apache.lucene.search.Hits.hitDoc(Hits.java:134)\n\tat org.apache.lucene.search.Hits.id(Hits.java:116)\n\tat org.apache.lucene.search.TestFilteredQuery.testBoolean(TestFilteredQuery.java:139)\n\nI'm fairly confident I applied the patch correctly, though I suppose its possible I missed something.  \n\nHere's an inlined version of the diff I have locally of FilteredQuery:\n\n$ svn diff FilteredQuery.java\nIndex: FilteredQuery.java\n===================================================================\n\u2014 FilteredQuery.java  (revision 383339)\n+++ FilteredQuery.java  (working copy)\n@@ -34,6 +34,7 @@\n\n\t<p>Created: Apr 20, 2004 8:58:29 AM\n  *\n\t@author  Tim Jones\n+ * @author  Paul Elschot\n\t@since   1.4\n\t@version $Id$\n\t@see     CachingWrapperFilter\n@@ -75,22 +76,42 @@\n       // return this query\n       public Query getQuery() \n{ return FilteredQuery.this; }\n\n\n\n\n\t// return a scorer that overrides the enclosed query's score if\n\t// the given hit has been filtered out.\n\tpublic Scorer scorer (IndexReader indexReader) throws IOException {\n+      // return a filtering scorer\n+       public Scorer scorer (IndexReader indexReader) throws IOException {\n         final Scorer scorer = weight.scorer (indexReader);\n         final BitSet bitset = filter.bits (indexReader);\n         return new Scorer (similarity) {\n\n\n\n\n\t// pass these methods through to the enclosed scorer\n\tpublic boolean next() throws IOException \n{ return scorer.next(); }\n+          public boolean next() throws IOException {\n+            do \nUnknown macro: {+              if (! scorer.next()) {\n+                return false;\n+              }\n+            } while (! bitset.get(scorer.doc()));\n+            /* When skipTo() is allowed on scorer it should be used here\n+             * in combination with bitset.nextSetBit(...)\n+             * See the while loop in skipTo() below.\n+             */\n+            return true;\n+          }\n           public int doc() { return scorer.doc(); }\n-          public boolean skipTo (int i) throws IOException { return scorer.skipTo(i); }\n \n-          // if the document has been filtered out, set score to 0.0\n-          public float score() throws IOException {\n-            return (bitset.get(scorer.doc())) ? scorer.score() : 0.0f;\n-          }\n+          public boolean skipTo(int i) throws IOException {\n+            if (! scorer.skipTo) {\n+              return false;\n+            }\n+            while (! bitset.get(scorer.doc())) {\n+              int nextFiltered = bitset.nextSetBit(scorer.doc() + 1);\n+              if (nextFiltered == -1) {+                return false;+              } else if (! scorer.skipTo(nextFiltered)) {\n+                return false;\n+              }+            } \n+            return true;\n+           }\n+          \n+          public float score() throws IOException \n{ return scorer.score(); }\n\n\n\n           // add an explanation about whether the document was filtered\n           public Explanation explain (int i) throws IOException {\n\nWhat am I missing? ",
            "author": "Erik Hatcher",
            "id": "comment-12368948"
        },
        {
            "date": "2006-03-06T02:01:50+0000",
            "content": "(Erik\n>  I've just encountered issues with FilteredQuery ...\n\nCould you be more specific?\n\n> Since the code has changed and your patches are no longer easily applied, could you advise on what the latest patches should be and how to go about going from trunk to these patches?\n\nMy current version is adapted for gcj 4.0.0 (which can/could not deal with inline abstract classes), so I can't\nprovide a fresh patch quickly at the moment.\n\nYonik identified all issues, nothing to add there.\n\nThe patch contains my name as @author, could that be removed?\nThe ASL 2.0 is somewhat inconclusive as to whether that can be done without me providing a\nfresh patch without that line, but I'd like to have that line removed nonetheless.\nIf necessary, I'll provide a patch for this once the tests work again.\n\nI'll try the new TestFilteredQuery later. ",
            "author": "Paul Elschot",
            "id": "comment-12368951"
        },
        {
            "date": "2006-03-06T02:15:46+0000",
            "content": "> Could you be more specific? \n\nThe new TestFilteredQuery shows the details of the failure, with the stack trace in my last comment provided the patch I supplied.  Those are all the specifics I have.\n\n> The patch contains my name as @author, could that be removed? \n\nSure, no problem.  I simply was true to the patch you provided earlier on in this issue, but I'd be happy to remove it if this patch gets committed. ",
            "author": "Erik Hatcher",
            "id": "comment-12368953"
        },
        {
            "date": "2006-03-08T09:00:55+0000",
            "content": "The patch from FilteredQueryPatch1.txt has been applied and committed.  Thanks for the fix, Paul! ",
            "author": "Erik Hatcher",
            "id": "comment-12369342"
        },
        {
            "date": "2006-05-05T20:34:14+0000",
            "content": "This was added to FilteredQuery not so long ago. ",
            "author": "Paul Elschot",
            "id": "comment-12378030"
        }
    ]
}