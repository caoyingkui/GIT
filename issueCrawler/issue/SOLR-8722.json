{
    "id": "SOLR-8722",
    "title": "Don't force a full ZkStateReader refresh on every Overseer operation",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "affect_versions": "5.4.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "We're doing an unnecessary ZkStateReader forced refresh on all Overseer operations.  This isn't necessary because ZkStateReader keeps itself up to date.\n\nAccording to Shalin Shekhar Mangar's analysis, we just need to put a wait loop at the end of addReplica to observe the state change.",
    "attachments": {
        "SOLR-8722.patch": "https://issues.apache.org/jira/secure/attachment/12789272/SOLR-8722.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-23T18:50:52+0000",
            "author": "Scott Blum",
            "content": "Shalin Shekhar Mangar is this what you had in mind?  We could probably optimize exactly what this code waits on, but I figured I'd just start by reusing the existing code.  But looping 320 x 1 second seems a bit excessive for a new core creation.\n\nAlso, what's the right way to handle things if the remote call fails?  Will the code throw before it reaches the wait loop, or should I try to inspect the response object for errors before deciding to wait?  I didn't see any special handling at other call sites. ",
            "id": "comment-15159408"
        },
        {
            "date": "2016-02-25T06:19:17+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Hi Scott, yes this should work fine. Sorry for being out of the loop re: SOLR-8696. I was travelling back to India and had a terrible jet lag.\n\nAlso, what's the right way to handle things if the remote call fails? Will the code throw before it reaches the wait loop, or should I try to inspect the response object for errors before deciding to wait? I didn't see any special handling at other call sites.\n\nHmm, good question. The processResponses method will throw an exception if abortOnError=true (which it is, in this case) but the 'async' handling does not throw any exceptions. So if the remote call fails and the user had specified the 'async' parameter, the wait loop will still be invoked. ",
            "id": "comment-15166792"
        },
        {
            "date": "2016-02-25T16:42:43+0000",
            "author": "Scott Blum",
            "content": "No problem!  Welcome back, hope you had a good trip.\n\nWhat would you suggest in this case?  Spinning for a very long time when the remote call might have failed quickly seems bad.  What other handler methods do you think demonstrate the correct pattern?  The code can be hard to follow.  Sometime when you're on IRC I'd love to pick your brain about the code in OverseerCollectionMessageHandler & OverseerTaskProcessor. ",
            "id": "comment-15167405"
        },
        {
            "date": "2016-02-26T23:26:37+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "What would you suggest in this case? Spinning for a very long time when the remote call might have failed quickly seems bad.\n\nI guess the only way is to modify the processResponses method to throw an exception in case the async request failed just like how we do it today for non-async requests.\n\nWhat other handler methods do you think demonstrate the correct pattern?\n\nI don't think any of them do  ",
            "id": "comment-15170092"
        },
        {
            "date": "2016-02-28T21:02:41+0000",
            "author": "Scott Blum",
            "content": "In that case, should we land this patch as-is and then come back with a more holistic answer for async failures? ",
            "id": "comment-15171185"
        },
        {
            "date": "2016-03-02T15:44:30+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "In that case, should we land this patch as-is and then come back with a more holistic answer for async failures?\n\n+1, I'll commit after running tests. ",
            "id": "comment-15175816"
        },
        {
            "date": "2016-03-03T12:50:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 93133f54fd8cad47d7638c50a2360e3eb9daeb14 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=93133f5 ]\n\nSOLR-8722: Don't force a full ZkStateReader refresh on every Overseer operation ",
            "id": "comment-15177768"
        },
        {
            "date": "2016-03-03T12:52:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e4712bb028849f9a9b202651728c1f5c0a224374 in lucene-solr's branch refs/heads/branch_6x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e4712bb ]\n\nSOLR-8722: Don't force a full ZkStateReader refresh on every Overseer operation\n(cherry picked from commit 93133f5) ",
            "id": "comment-15177772"
        },
        {
            "date": "2016-03-03T12:56:23+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Scott! ",
            "id": "comment-15177775"
        },
        {
            "date": "2016-05-10T22:25:51+0000",
            "author": "Hoss Man",
            "content": "\nManually correcting fixVersion per Step #S5 of LUCENE-7271 ",
            "id": "comment-15279121"
        }
    ]
}