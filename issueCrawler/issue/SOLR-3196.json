{
    "id": "SOLR-3196",
    "title": "partialResults response header not propagated in distributed search",
    "details": {
        "affect_versions": "3.5,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "For timeAllowed=true requests, the response contains a partialResults header that indicates when a search was terminated early due to running out of time.  This header is being discarded by the collator.  Patch to follow.",
    "attachments": {
        "SOLR-3196-partialResults-header.patch": "https://issues.apache.org/jira/secure/attachment/12516906/SOLR-3196-partialResults-header.patch",
        "SOLR-3196-3x.patch": "https://issues.apache.org/jira/secure/attachment/12518197/SOLR-3196-3x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13221510",
            "date": "2012-03-03T04:26:44+0000",
            "content": "Nice, thanks guys. We should prob add a simple test too - I can probably take this issue on if no one else jumps on it. "
        },
        {
            "author": "Russell Black",
            "id": "comment-13223789",
            "date": "2012-03-06T23:21:10+0000",
            "content": "I looked into writing a test case for this, but ran into some difficulties.  The problem is that for the small data sets used by the test cases, all queries return within 1 millisecond, so I can't force the timeout.  (1 ms is the lowest value supported for the timeAllowed parameter, passing 0 is the same as not passing a timeout).  I haven't been able to come up with a query that takes sufficiently long to test timeAllowed.  It appears that there are no test cases that test for the presence of the partialResults header even for non-distributed searches.  I am confident that this patch works, however, since I have tested it thoroughly in our own index.  It's a pretty uncomplicated patch.   "
        },
        {
            "author": "Russell Black",
            "id": "comment-13224779",
            "date": "2012-03-07T22:14:57+0000",
            "content": "Will it be possible to have this committed to 3x as well?  The patch should apply just fine to the 3x branch and we'd love to have this make it into 3.6. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13228490",
            "date": "2012-03-13T16:25:05+0000",
            "content": "Patch didn't apply to 3x, apparently a few things moved around.\n\nRussel: \nCould you take a quick check and see if this looks OK for 3x?\n\nAny back-compat issues with changing what comes back in the responseHeader? "
        },
        {
            "author": "Russell Black",
            "id": "comment-13228513",
            "date": "2012-03-13T16:49:55+0000",
            "content": "Erick, \n\nThanks for trying, i'll take a look at what's going on.   "
        },
        {
            "author": "Russell Black",
            "id": "comment-13228573",
            "date": "2012-03-13T18:37:37+0000",
            "content": "I'm not sure why the original patch fails to apply to 3x.  However, your patch looks good to me.  \n\nI don't see any problems with backwards compatibility.  This patch has the effect of adding a partialResults true header, making it behave the same as a non-distributed request for time limited queries.  It's hard for me to imagine a situation where this would break backwards-compatibility. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13230330",
            "date": "2012-03-15T17:13:53+0000",
            "content": "4.x r: 1301097\n3.6 r: 1301096\n\nRight, after looking a bit more closely, there's nothing here that would break back-compat, that was just my paranoia was at work. "
        }
    ]
}