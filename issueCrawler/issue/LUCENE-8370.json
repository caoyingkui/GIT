{
    "id": "LUCENE-8370",
    "title": "Reproducing TestLucene{54,70}DocValuesFormat.testSortedSetVariableLengthBigVsStoredFields() failures",
    "details": {
        "components": [
            "core/index",
            "general/test"
        ],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "Policeman Jenkins found a reproducing seed for a TestLucene70DocValuesFormat.testSortedSetVariableLengthBigVsStoredFields() failure https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/22320/; git bisect blames commit 2519025 on LUCENE-7976:\n\n\nChecking out Revision 8c714348aeea51df19e7603905f85995bcf0371c (refs/remotes/origin/master)\n[...]\n   [junit4] Suite: org.apache.lucene.codecs.lucene70.TestLucene70DocValuesFormat\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLucene70DocValuesFormat -Dtests.method=testSortedSetVariableLengthBigVsStoredFields -Dtests.seed=63A61B46A6934B1A -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=sw-TZ -Dtests.timezone=Pacific/Pitcairn -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 23.3s J2 | TestLucene70DocValuesFormat.testSortedSetVariableLengthBigVsStoredFields <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: limit=4 actual=5\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([63A61B46A6934B1A:6BE93FA35E02851]:0)\n   [junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.doRandomForceMerge(RandomIndexWriter.java:372)\n   [junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.getReader(RandomIndexWriter.java:386)\n   [junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.getReader(RandomIndexWriter.java:332)\n   [junit4]    > \tat org.apache.lucene.index.BaseDocValuesFormatTestCase.doTestSortedSetVsStoredFields(BaseDocValuesFormatTestCase.java:2155)\n   [junit4]    > \tat org.apache.lucene.codecs.lucene70.TestLucene70DocValuesFormat.testSortedSetVariableLengthBigVsStoredFields(TestLucene70DocValuesFormat.java:93)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n[...]\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=693, maxMBSortInHeap=5.078503794479895, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@20a604e6), locale=sw-TZ, timezone=Pacific/Pitcairn\n   [junit4]   2> NOTE: Linux 4.13.0-41-generic amd64/Oracle Corporation 9.0.4 (64-bit)/cpus=8,threads=1,free=352300304,total=518979584",
    "attachments": {
        "LUCENE-8370.patch": "https://issues.apache.org/jira/secure/attachment/12929655/LUCENE-8370.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16523021",
            "author": "Erick Erickson",
            "content": "Digging. Whimper.... ",
            "date": "2018-06-26T01:09:52+0000"
        },
        {
            "id": "comment-16523031",
            "author": "Robert Muir",
            "content": "The assert in RandomIndexWriter seems broken to me, given my understanding of the changes. Its checking that forceMerge(N) really merged to <= N segments, but the merge policy will no longer due that if it violates the max segment size, correct?\n\nThe other problem is that this only happened in a massive stress test. Seems like this max segment size might not being randomized properly enough in tests? If we lower it, more tests will engage these constraints. ",
            "date": "2018-06-26T01:20:28+0000"
        },
        {
            "id": "comment-16523034",
            "author": "Robert Muir",
            "content": "I mean it would be good to actually run the test with verbose+infostream to confirm its not a real merge policy bug, but seems like testing that merge policy's logic is correct belongs in the test for the specific merge policy, and RandomIndexWriter shouldn't do this assert. ",
            "date": "2018-06-26T01:22:52+0000"
        },
        {
            "id": "comment-16524103",
            "author": "Erick Erickson",
            "content": "Robert Muir Thanks for looking, I just got to it.\n\nI agree the test makes some (now) invalid assumptions about TMP.\n\nWhen specifying the maximum number of segments (other than 1), TMP does a \"best effort\" attempt to hit that target but does not guarantee it. The algorithm is roughly.\n\n1> compute the theoretical segment size to hit the target exactly, i.e. totalIndexBytes/numSegmentsSpecified\n\n2> Increase <1> by 25% (this is a totally arbitrary percentage on my part).\n\n3> Find the \"best\" merges respecting the size in <2> and do them.\n\nIf the scoring algorithm happens to pick segments to merge that don't pack well in the limit from <2> above, and there'll be more segments than specified.\n\nWhat should be true in this case is that no pair of the segments that result from the merge will sum to <  the theoretical max size ((totalIndexBytes/segsSpecified) * 1.25).\n\nTestTieredMergePolicy does test this expectation.\n\nI can take this assert out of this specific policy (TMP) here in RandomIndexWriter or remove it completely, WDYT? Actually take this out of RandomIndexWriter for TMP or when it's TMP and the number of segments specified is > 1.\n\nMichael McCandless any opinions? This is the \"scary loop\" from LUCENE-7976 that made us both nervous and I removed. ",
            "date": "2018-06-26T18:39:26+0000"
        },
        {
            "id": "comment-16524917",
            "author": "Steve Rowe",
            "content": "Another reproducing test failure that git bisect blames on commit 9c4e315 on LUCENE-7976, from https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/2204/:\n\n\nChecking out Revision e2ac4ab4799322c573a9ada771b2c42ea1eb0b82 (refs/remotes/origin/branch_7x)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLucene54DocValuesFormat -Dtests.method=testSortedVariableLengthBigVsStoredFields -Dtests.seed=88F1838D71AF157F -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=fr-FR -Dtests.timezone=America/Guayaquil -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 10.2s J0 | TestLucene54DocValuesFormat.testSortedVariableLengthBigVsStoredFields <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: limit=2 actual=3\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([88F1838D71AF157F:7801C4E842B4B0F0]:0)\n   [junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.doRandomForceMerge(RandomIndexWriter.java:372)\n   [junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.getReader(RandomIndexWriter.java:386)\n   [junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.getReader(RandomIndexWriter.java:332)\n   [junit4]    > \tat org.apache.lucene.index.BaseDocValuesFormatTestCase.doTestSortedVsStoredFields(BaseDocValuesFormatTestCase.java:1572)\n   [junit4]    > \tat org.apache.lucene.index.BaseDocValuesFormatTestCase.doTestSortedVsStoredFields(BaseDocValuesFormatTestCase.java:1648)\n   [junit4]    > \tat org.apache.lucene.codecs.lucene54.TestLucene54DocValuesFormat.testSortedVariableLengthBigVsStoredFields(TestLucene54DocValuesFormat.java:109)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:832)\n   [junit4] IGNOR/A 0.00s J0 | TestLucene54DocValuesFormat.testTermsEnumRandomMany\n[...]\n   [junit4]   2> NOTE: test params are: codec=HighCompressionCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=HIGH_COMPRESSION, chunkSize=20365, maxDocsPerChunk=84, blockSize=368), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=HIGH_COMPRESSION, chunkSize=20365, blockSize=368)), sim=RandomSimilarity(queryNorm=false): {fieldname=DFR I(F)L3(800.0), docId=DFR I(F)B1, id=DFR I(n)LZ(0.3)}, locale=fr-FR, timezone=America/Guayaquil\n   [junit4]   2> NOTE: Linux 4.13.0-41-generic amd64/Oracle Corporation 11-ea (64-bit)/cpus=8,threads=1,free=385758864,total=518979584\n\n ",
            "date": "2018-06-27T11:07:42+0000"
        },
        {
            "id": "comment-16525206",
            "author": "Erick Erickson",
            "content": "Thanks Steve.\n\nI'm pretty sure that this will be fixed by whatever we do with RandomIndexWriter, but I'll be sure to check. ",
            "date": "2018-06-27T15:35:50+0000"
        },
        {
            "id": "comment-16526356",
            "author": "Michael McCandless",
            "content": "+1 to fix RandomIndexWriter's assert to skip that check when TMP is in use.\u00a0 Does TieredMergePolicy's javadocs advertise that it's only a \"best effort\" now? ",
            "date": "2018-06-28T14:26:06+0000"
        },
        {
            "id": "comment-16526427",
            "author": "Erick Erickson",
            "content": "OK, I'll get this done. \n\nGah. The comments say it but not the Javadocs. I'll fix. Hmmm, I need to check the ref guide for that too. ",
            "date": "2018-06-28T15:24:23+0000"
        },
        {
            "id": "comment-16527021",
            "author": "ASF subversion and git services",
            "content": "Commit c303c5f126bd6ea26bf651684041f7cb499bf579 in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c303c5f ]\n\nLUCENE-8370: Reproducing TestLucene\n{54,70}\nDocValuesFormat.testSortedSetVariableLengthBigVsStoredFields() failures ",
            "date": "2018-06-29T01:34:32+0000"
        },
        {
            "id": "comment-16527027",
            "author": "ASF subversion and git services",
            "content": "Commit 1f5c75cb9a3704db395cd13140005130dcf726c0 in lucene-solr's branch refs/heads/branch_7x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1f5c75c ]\n\nLUCENE-8370: Reproducing TestLucene\n{54,70}\nDocValuesFormat.testSortedSetVariableLengthBigVsStoredFields() failures\n\n(cherry picked from commit c303c5f) ",
            "date": "2018-06-29T01:46:00+0000"
        },
        {
            "id": "comment-16527028",
            "author": "Erick Erickson",
            "content": "Both failures Steve pointed up were the same root cause. Thanks for pointing them out Steve.\n\nI also updated the Javadocs and ref guide as per Mike's question, stating that maxSegments is implemented on a \"best effort\" basis.\n\nTieredMergePolicy didn't change code-wise, just comments. ",
            "date": "2018-06-29T01:48:47+0000"
        }
    ]
}