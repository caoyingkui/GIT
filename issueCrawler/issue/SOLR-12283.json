{
    "id": "SOLR-12283",
    "title": "Unable To Load ZKPropertiesWriter when dih.jar is added as runtimelib BLOB in .system collection",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Test",
        "fix_versions": [],
        "affect_versions": "6.6.1,                                            7.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Hello,\n\nIt's been 2 weeks that I try to correct this problem with the community user-solr but no success. I seriously wonder if this is not a problem in the code. I do not have the impression that many people use DIH with Solr's cloud version.\nOn Internet, no similar problem.\n\nFor information, the following configuration of DIH comes from DIHs that work in production on a single Solr server. The connections to the databases are therefore correct.\n\nErrors messages:\n\nDataImporter\n\nFull Import failed:org.apache.solr.handler.dataimport.DataImportHandlerException: Unable to PropertyWriter implementation:ZKPropertiesWriter\n\tat org.apache.solr.handler.dataimport.DataImporter.createPropertyWriter(DataImporter.java:339)\n\tat org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:420)\n\tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483)\n\tat org.apache.solr.handler.dataimport.DataImportHandler.handleRequestBody(DataImportHandler.java:183)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:195)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2503)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:711)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:517)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:384)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:330)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:219)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:530)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:347)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:256)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.NullPointerException\n\tat org.apache.solr.handler.dataimport.DocBuilder.loadClass(DocBuilder.java:935)\n\tat org.apache.solr.handler.dataimport.DataImporter.createPropertyWriter(DataImporter.java:335)\n\t... 42 more\n\n\n\n\n\nRequestHandlerBase\n\njava.lang.NullPointerException\n\tat org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:429)\n\tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483)\n\tat org.apache.solr.handler.dataimport.DataImportHandler.handleRequestBody(DataImportHandler.java:183)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:195)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2503)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:711)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:517)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:384)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:330)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:219)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:530)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:347)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:256)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\n\tat java.lang.Thread.run(Thread.java:748)\n\n\n\n\n\nHttpSolrCall\n\nnull:java.lang.NullPointerException\n\tat org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:429)\n\tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483)\n\tat org.apache.solr.handler.dataimport.DataImportHandler.handleRequestBody(DataImportHandler.java:183)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:195)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2503)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:711)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:517)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:384)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:330)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:219)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:530)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:347)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:256)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\n\tat java.lang.Thread.run(Thread.java:748)\n\n\n\n\n\nProcess to reproduce the problem:\n\nCreate .system collection for the BLOB\n\ncurl http://localhost:8983/solr/admin/collections?action=CREATE&name=.system\n\n\n\nAdd Data Import Handler JAR file.\n\ncurl -X POST -H 'Content-Type: application/octet-stream' --data-binary @solr-dataimporthandler-7.3.0.jar http://localhost:8983/solr/.system/blob/data-import-handler\n\n\n\nAdd the runtime lib on the configoverlay.json with the API\n\ncurl http://localhost:8983/solr/unicorn/config -H 'Content-type:application/json' -d '{\"add-runtimelib\": { \"name\":\"data-import-handler\", \"version\":1 }}'\n\n\n\nSend mysql connector on the blob. I have test with the connector-bin.jar but I have the same error.\n\ncurl -X POST -H 'Content-Type: application/octet-stream' --data-binary @mysql-connector-java-5.1.46.jar http://localhost:8983/solr/.system/blob/mysql-connector-java\n\n\n\nAdd runtime\n\ncurl http://localhost:8983/solr/unicorn/config -H 'Content-type:application/json' -d '{\"add-runtimelib\": { \"name\":\"mysql-connector-java\", \"version\":1 }}'\n\n\n\nPersonally, I create a DIH folder on the collection config path on the cloud. It's not necessary.\n\nAnd I put the DIH config file on the cloud with the zkcli (it's a personnal script to overload the zkcli.sh on Solr but it's the same result. My file is on the cloud.)\n\n./zkcli.py putfile /configs/unicorn/DIH/ DIH/indexation_events.xml\n\n\n\nAdd request handler config:\n\ncurl -X POST http://{solr_server}:8983/solr/{collection_name}/config -H 'Content-type:application/json' -d '\n{\n  \"add-requesthandler\":\n  {\n    \"name\": \"/test-dih\",\n    \"class\": \"org.apache.solr.handler.dataimport.DataImportHandler\",\n    \"runtimeLib\": true,\n    \"version\": 1,\n    \"defaults\":\n    {\n      \"config\": \"DIH/indexation_events.xml\"\n    }\n  }\n} '\n\n\n\nReload the config:\n\ncurl http://localhost:8983/solr/unicorn/test-dih?command=reload-config&commit=true&debug=true\n\n\n\nImport and have error:\n\ncurl http://localhost:8983/solr/unicorn/test-dih?command=full-import&commit=true&debug=true\n\n\n\nI have test to add on request handler and BLOB this jar files but not change:\n\n\tdata-import-handler-extras\n\tsolr-core\n\tsolr-solrj\n\n\n\nI have join all files used in this process.\n\nThansk you.",
    "attachments": {
        "mysql-connector-java-5.1.46-bin.jar": "https://issues.apache.org/jira/secure/attachment/12920982/mysql-connector-java-5.1.46-bin.jar",
        "solr.log": "https://issues.apache.org/jira/secure/attachment/12921022/solr.log",
        "request_handler_config.json": "https://issues.apache.org/jira/secure/attachment/12920981/request_handler_config.json",
        "solr-solrj-7.3.0.jar": "https://issues.apache.org/jira/secure/attachment/12920977/solr-solrj-7.3.0.jar",
        "solr-core-7.3.0.jar": "https://issues.apache.org/jira/secure/attachment/12920980/solr-core-7.3.0.jar",
        "mysql-connector-java-5.1.46.jar": "https://issues.apache.org/jira/secure/attachment/12920983/mysql-connector-java-5.1.46.jar",
        "solr-dataimporthandler-extras-7.3.0.jar": "https://issues.apache.org/jira/secure/attachment/12920978/solr-dataimporthandler-extras-7.3.0.jar",
        "solr-dataimporthandler-7.3.0.jar": "https://issues.apache.org/jira/secure/attachment/12920979/solr-dataimporthandler-7.3.0.jar",
        "modified-DIH.zip": "https://issues.apache.org/jira/secure/attachment/12921034/modified-DIH.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-27T14:44:56+0000",
            "content": "Opening a bug is premature.  Attaching publicly available jars to the issue is unnecessary.\n\nThese exceptions basically shouldn't be happening.  The first one is a very fundamental issue with methods that all Java classes should have even if they aren't actually defined.  The later ones show that an important data point in the dataimporter class is not defined \u2013 it's null.  I do not know how that can happen.\n\nCan you share a solr.log file where the problem has happened?  We need to see the errors in context with everything else that's happening. ",
            "author": "Shawn Heisey",
            "id": "comment-16456546"
        },
        {
            "date": "2018-04-27T15:02:47+0000",
            "content": " solr.log It's add ",
            "author": "Maxence SAUNIER",
            "id": "comment-16456575"
        },
        {
            "date": "2018-04-27T15:07:42+0000",
            "content": "have you reloaded all cores of unicorn collection after putting jars/config overlays, before triggerring dih?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16456581"
        },
        {
            "date": "2018-04-27T15:27:21+0000",
            "content": "I did not reload the collections. I did it and I have the same problem. ",
            "author": "Maxence SAUNIER",
            "id": "comment-16456612"
        },
        {
            "date": "2018-04-27T16:14:06+0000",
            "content": "I have never used the .system collection, or the Config API.  I do not know if this unusual behavior could be a result of using those features.\n\nI will concentrate first on the \"Unable to PropertyWriter\" error that happens when an import is attempted.\n\nThe line in DocBuilder.java where the NPE occurs is dense enough that I cannot tell exactly what part of it is null.  I have modified the source code slightly and have built a new DIH jar, which I will attach.  Can you move all other copies of the DIH jar you're using out and try this one instead, so we can figure out exactly what is failing? ",
            "author": "Shawn Heisey",
            "id": "comment-16456688"
        },
        {
            "date": "2018-04-27T16:36:50+0000",
            "content": "New Solr.log attached with your DIH jar. ",
            "author": "Maxence SAUNIER",
            "id": "comment-16456709"
        },
        {
            "date": "2018-04-27T16:50:50+0000",
            "content": "This looks like the same solr.log file, but longer.  The timestamp at the beginning is the same as the other one.  I would expect a new starting timestamp if Solr had been restarted to apply a new jar. ",
            "author": "Shawn Heisey",
            "id": "comment-16456729"
        },
        {
            "date": "2018-04-30T10:11:50+0000",
            "content": "I have restart solr with your DIH jar. I join the file. solr.log  ",
            "author": "Maxence SAUNIER",
            "id": "comment-16458448"
        },
        {
            "date": "2018-05-19T09:33:52+0000",
            "content": "No news ? ",
            "author": "Maxence SAUNIER",
            "id": "comment-16481521"
        },
        {
            "date": "2018-05-19T19:09:06+0000",
            "content": "Sorry about that.  I hadn't noticed that a new log was available.  Just looked at it, which is a really long time delay.\n\nAre you absolutely sure that you have replaced the DIH jar with the one that I provided, and didn't just ADD the new jar?  I ask because the line number in the exception (DocBuilder.Java:935) is still the same, which suggests that either I didn't fix the code right, or that Solr is still loading the class from the original jar.  I will make a slightly different change that should make it very apparent which jar is in use, and attach another new jar. ",
            "author": "Shawn Heisey",
            "id": "comment-16481744"
        },
        {
            "date": "2018-05-19T19:21:04+0000",
            "content": "The filename of either jar I provided is not the same as the filename of the jar it replaces.  It has \"-SNAPSHOT\" in the name because it is not from an official release. ",
            "author": "Shawn Heisey",
            "id": "comment-16481749"
        },
        {
            "date": "2018-06-05T12:20:03+0000",
            "content": " solr.log \nWith your DIH Snapshot\n\nThanks ",
            "author": "Maxence SAUNIER",
            "id": "comment-16501680"
        },
        {
            "date": "2018-06-06T00:08:23+0000",
            "content": "The stacktrace isn't making any sense.  It's complaining about a line number that shouldn't have any problem.\n\nLine 940 is the last line of this bit of code:\n\n        ClassNotFoundException ex = new ClassNotFoundException(\"Unable to load \" + name + \" or \"\n            + DocBuilder\n            .class\n            .getPackage()\n            .getName()\n            + \".\" + name, e);\n\n\n\nI've tested this construct, and cannot get an NPE.  Thoroughly confused. ",
            "author": "Shawn Heisey",
            "id": "comment-16502671"
        },
        {
            "date": "2018-06-06T08:02:38+0000",
            "content": "Hello Shawn,\n\nIn cloud? With Solr 7.3?\n\nMy process to add my DIH in Solr 7.3 inCloud:\n\n1. Create .system for the BLOB\n\ncurl \"http://localhost:8983/solr/admin/collections?action=CREATE&name=.system\"\n\n2. Send Data Import Handler Jar on the BLOB\n\ncurl -X POST -H 'Content-Type: application/octet-stream' --data-binary @solr-dataimporthandler-7.3.0-SNAPSHOT.jar http://localhost:8983/solr/.system/blob/data-import-handler\n\n3. Add on the runtime lib\n\ncurl http://localhost:8983/solr/unicorn/config -H 'Content-type:application/json' -d '{\"add-runtimelib\": { \"name\":\"data-import-handler\", \"version\":1 }}'\n\n4. Add MySQL connector Jar on the BLOB\n\ncurl -X POST -H 'Content-Type: application/octet-stream' --data-binary @mysql-connector-java-5.1.46.jar http://localhost:8983/solr/.system/blob/mysql-connector-java\n\n5. Add MySQL Connector on the runtime lib\n\ncurl http://localhost:8983/solr/unicorn/config -H 'Content-type:application/json' -d '{\"add-runtimelib\": { \"name\":\"mysql-connector-java\", \"version\":1 }}'\n\n6. Create DIH Path on the cloud (zkcli.py if a script to overload default zkcli. It work good.)\n\n./zkcli.py makepath /configs/unicorn/DIH\n\n7. Send to DIH folder the XML definition\n\n./zkcli.py putfile /configs/unicorn/DIH/ DIH/test-dih.xml\n\ntest-dih.xml =\n\n<dataConfig>\n\n\t<dataSource name=\"Gesloc\"  type=\"JdbcDataSource\" driver=\"com.mysql.jdbc.Driver\" url=\"jdbc:mysql://srv-gesloc-sql/TRANSACTIONCITYANEWLOCATION\" user=\"secret\" password=\"secret\" />\n\n\t<document>\n\t\t<entity name=\"events_Gesloc\" pk=\"id\" dataSource=\"Gesloc\" query=\"SELECT id from view_indexation_advertisements\" >\n\n\t\t\t<field column=\"id\" name=\"id\"/>\n\n\t\t</entity>\n\t</document>\n\n</dataConfig>\n\n\n\n8. Add request handler\n\ncurl -X POST -H 'Content-type:application/json' -d @request_dih.json http://localhost:8983/solr/unicorn/config\n\n\nrequest_dih.json=\n\n{\n  \"add-requesthandler\":\n  {\n    \"name\": \"/test-dih\",\n    \"class\": \"org.apache.solr.handler.dataimport.DataImportHandler\",\n    \"runtimeLib\": true,\n    \"version\": 1,\n    \"defaults\":\n    {\n      \"config\": \"DIH/test-dih.xml\"\n    }\n  }\n} \n\n\n\n9. Reload config\n\ncurl http://localhost:8983/solr/unicorn/test-dih?command=reload-config&commit=true&debug=true\n\n\nThanks for your help. ",
            "author": "Maxence SAUNIER",
            "id": "comment-16502952"
        },
        {
            "date": "2018-06-07T08:08:30+0000",
            "content": "Indeed, it looks like DIH doesn't work if its jar is loaded via the .system collection.\n\nIf I do this the way you did, setting it up on Windows 10 with the cloud example in solr 7.3.0, running curl remotely on a Linux machine, I get a similar, but not absolutely identical, problem.  Different line number for the NPE, but much the same issue.\n\n\nERROR - 2018-06-07 07:49:04.817; [c:foo s:shard1 r:core_node2 x:foo_shard1_replica_n1] org.apache.solr.common.SolrException; Full Import failed:org.apache.solr.handler.dataimport.DataImportHandlerException: Unable to PropertyWriter implementation:ZKPropertiesWriter\n\tat org.apache.solr.handler.dataimport.DataImporter.createPropertyWriter(DataImporter.java:339)\n\tat org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:420)\n\tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483)\n\tat org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.NullPointerException\n\tat org.apache.solr.handler.dataimport.DocBuilder.loadClass(DocBuilder.java:941)\n\tat org.apache.solr.handler.dataimport.DataImporter.createPropertyWriter(DataImporter.java:335)\n\t... 4 more\n\n\n\nThen I got rid of that collection and the .system collection, created a lib directory in each of the solr homes for the example nodes, copied the two jars to those lib directories, restarted everything, made a NEW collection with the handler, and tried again.  This time DIH itself worked and it was the MySQL connection that failed.\n\n\nERROR - 2018-06-07 08:00:42.981; [c:bar2 s:shard1 r:core_node2 x:bar2_shard1_replica_n1] org.apache.solr.common.SolrException; Exception while processing: events_Gesloc document : SolrInputDocument(fields: []):org.apache.solr.handler.dataimport.DataImportHandlerException: Unable to execute query: SELECT id from view_indexation_advertisements Processing Document # 1\n\tat org.apache.solr.handler.dataimport.DataImportHandlerException.wrapAndThrow(DataImportHandlerException.java:69)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource$ResultSetIterator.<init>(JdbcDataSource.java:327)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource.createResultSetIterator(JdbcDataSource.java:288)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource.getData(JdbcDataSource.java:283)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource.getData(JdbcDataSource.java:52)\n\tat org.apache.solr.handler.dataimport.SqlEntityProcessor.initQuery(SqlEntityProcessor.java:59)\n\tat org.apache.solr.handler.dataimport.SqlEntityProcessor.nextRow(SqlEntityProcessor.java:73)\n\tat org.apache.solr.handler.dataimport.EntityProcessorWrapper.nextRow(EntityProcessorWrapper.java:267)\n\tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:476)\n\tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415)\n\tat org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330)\n\tat org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233)\n\tat org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424)\n\tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483)\n\tat org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:425)\n\tat com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)\n\tat com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)\n\tat com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)\n\tat com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)\n\tat com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)\n\tat com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)\n\tat com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:425)\n\tat com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)\n\tat com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource$1.call(JdbcDataSource.java:192)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource$1.call(JdbcDataSource.java:172)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource.getConnection(JdbcDataSource.java:528)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource$ResultSetIterator.<init>(JdbcDataSource.java:317)\n\t... 14 more\nCaused by: java.net.UnknownHostException: srv-gesloc-sql\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1280)\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1192)\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1126)\n\tat com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)\n\tat com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)\n\t... 30 more\n\n\n\nThis is quite odd.  It looks like a classloader issue, but I would have expected the same problem either way, because in both cases, the jar is loaded by runtime classloaders. ",
            "author": "Shawn Heisey",
            "id": "comment-16504386"
        },
        {
            "date": "2018-06-08T08:17:27+0000",
            "content": "So, the solution is : to add local .jar files locally on all servers? ",
            "author": "Maxence SAUNIER",
            "id": "comment-16505826"
        },
        {
            "date": "2018-06-08T12:41:03+0000",
            "content": "So, the solution is : to add local .jar files locally on all servers?\n\nI would call it a workaround more than a solution.\n\nBut yes, if you go to the solr home (usually where your core directories are), create a lib directory there, and place all extra jars in it, they will be available to all cores.  It is my recommendation when using this method to remove all the <lib> config elements from solrconfig.xml and make sure that all the jars you need are in the new directory.\n\nI honestly have no idea whether it will be possible to load the DIH jar from .system like you're trying to do.  I would think it SHOULD be possible, but classloading in Java is not always straightforward.  Somebody else is going to have to look into the problem. ",
            "author": "Shawn Heisey",
            "id": "comment-16505982"
        }
    ]
}