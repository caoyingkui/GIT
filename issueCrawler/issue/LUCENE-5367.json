{
    "id": "LUCENE-5367",
    "title": "NoSuchElementException occurs when org.apache.lucene.facet.index.FacetFields is used.",
    "details": {
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "modules/facet"
        ],
        "affect_versions": "4.2.1,                                            4.6",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "Hi,\n\nWhen I use the API as below :\n\nList<CategoryPath> categories = Collections.<CategoryPath>singletonList(new CategoryPath(path.toArray(new String[path.size()])));\nFacetFields facetFields = new FacetFields(taxonomyWriter);\nfacetFields.addFields(document, categories);\ntaxonomyWriter.commit();\n\n\nAn exception occurs :\n\njava.util.NoSuchElementException\n\tat java.util.Collections$1.next(Collections.java:3302)\n\tat org.apache.lucene.facet.index.DrillDownStream.reset(DrillDownStream.java:78)\n\tat org.apache.lucene.index.DocInverterPerField.processFields(DocInverterPerField.java:97)\n\tat org.apache.lucene.index.DocFieldProcessor.processDocument(DocFieldProcessor.java:248)\n\tat org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:253)\n\tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:453)\n\tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1520)\n\tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1190)\n\tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1171)\n\nSeems likes this is due to multiple calls to org.apache.lucene.facet.index.DrillDownStream#reset which invoques #next() on an 'used' iterator.\n\nRegards,\nLucien",
    "attachments": {
        "Lucene5367.java": "https://issues.apache.org/jira/secure/attachment/12625187/Lucene5367.java",
        "lucene_solr_4_6_0_LUCECE_5367.patch": "https://issues.apache.org/jira/secure/attachment/12625186/lucene_solr_4_6_0_LUCECE_5367.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13846204",
            "author": "Shai Erera",
            "content": "This is strange, it means that reset() is called twice, which should have failed every test that we have. Can you post a full testcase which reproduces the error? In the code example that you posted above you call addFields() and then taxoWriter.commit(), but not indexWriter.addDocument(). You don't need to call taxoWriter.commit() after .addFields() and you must call indexWriter.addDocument(). So, a full testcase will help debug this. ",
            "date": "2013-12-12T09:42:41+0000"
        },
        {
            "id": "comment-13856187",
            "author": "Shai Erera",
            "content": "Lucien, do you have a testcase which reproduces the error? If not, I'll close the issue. ",
            "date": "2013-12-24T06:39:59+0000"
        },
        {
            "id": "comment-13856264",
            "author": "Lucien Pereira",
            "content": "Shai,\n\nSorry for the delay. It it happens when a given document is added several times :\n\nLucene5367.java\npackage testcase;\n\nimport java.io.File;\nimport java.util.List;\n\nimport org.apache.lucene.analysis.core.KeywordAnalyzer;\nimport org.apache.lucene.document.Document;\nimport org.apache.lucene.facet.index.FacetFields;\nimport org.apache.lucene.facet.taxonomy.CategoryPath;\nimport org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter;\nimport org.apache.lucene.index.IndexWriter;\nimport org.apache.lucene.index.IndexWriterConfig;\nimport org.apache.lucene.store.Directory;\nimport org.apache.lucene.store.NIOFSDirectory;\nimport org.apache.lucene.util.Version;\n\npublic class Lucene5367 {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tDirectory indexDirectory = new NIOFSDirectory(new File(\"~/index\"));\n\t\tDirectory taxonomyDirectory = new NIOFSDirectory(new File(\"~/taxonomy\"));\n\t\tDocument document = new Document();\n\t\tIndexWriter indexWriter = new IndexWriter(indexDirectory,\n\t\t\t\tnew IndexWriterConfig(Version.LUCENE_46, new KeywordAnalyzer()));\n\t\tDirectoryTaxonomyWriter taxonomyWriter = new DirectoryTaxonomyWriter(\n\t\t\t\ttaxonomyDirectory);\n\t\tList<CategoryPath> categories = java.util.Collections\n\t\t\t\t.singletonList(new CategoryPath(\"home\", \"root\"));\n\t\tFacetFields facetFields = new FacetFields(taxonomyWriter);\n\n\t\tfacetFields.addFields(document, categories);\n\n\t\ttaxonomyWriter.close();\n\t\tindexWriter.addDocument(document);\n\t\tindexWriter.addDocument(document);\n\n\t\tindexWriter.close();\n\t}\n}\n\n\n\nRegards,\nLucien ",
            "date": "2013-12-24T10:40:55+0000"
        },
        {
            "id": "comment-13856533",
            "author": "Shai Erera",
            "content": "Thanks Lucien, this helps clarify the issue. The thing is, FacetFields adds a TokenStream as a Field to the document, and in general you shouldn't expect to be able to add the same document multiple times, if it contains a Field that was added with a TokenStream. However, in terms of the facet APIs, this is all hidden to the user, and so the user has no way to know this is supported/not.\n\nI can fix DrillDownStream to save the Iterable it receives instead of the the Iterator, and in reset() call iterable.iterator(). This should allow you to add the same document multiple times. However, on LUCENE-5339 we're pretty much rewriting the entire facet APIs, and it looks like this issue is gone there, as DrillDownStream is gone (instead, every level in the hierarchy is added as a StringField). I believe LUCENE-5339 will make it into the next release (4.7), so let's do two things:\n\n\n\tCan you try this test over the LUCENE-5339 branch?\n\tI'll link this issue to LUCENE-5339, and mark as a blocker for 4.7. If LUCENE-5339 is committed before 4.7, I'll close this issue, otherwise fix DrillDownStream.\n\n ",
            "date": "2013-12-25T06:39:30+0000"
        },
        {
            "id": "comment-13856534",
            "author": "Shai Erera",
            "content": "If LUCENE-5339 isn't committed before we release 4.7, we should fix this issue. ",
            "date": "2013-12-25T06:41:08+0000"
        },
        {
            "id": "comment-13881913",
            "author": "Ying Andrews",
            "content": "Hi Shai,\n\nI fixed this issue with your suggestion in branch 4.6.  Attached is the patch. I also tested it in branch 539399 (formerly known as 5339) and as you suspected, the problem is gone. So I guess you can flag this as fixed in 4.7.\n\nThanks again for your insight.\nYing ",
            "date": "2014-01-25T14:44:29+0000"
        },
        {
            "id": "comment-13881915",
            "author": "Ying Andrews",
            "content": "Hi Lucien,\n\nYou can either apply the patch I have submitted here in 4.6 or wait for 4.7 to come out. The problem doesn't exist in 4.7.  You can use the attached file to test it against the build in branch 539399. ",
            "date": "2014-01-25T14:49:20+0000"
        },
        {
            "id": "comment-13885391",
            "author": "ASF subversion and git services",
            "content": "Commit 1562462 from Shai Erera in branch 'dev/trunk'\n[ https://svn.apache.org/r1562462 ]\n\nLUCENE-5367: add test to ensure we don't introduce the bug again ",
            "date": "2014-01-29T14:44:10+0000"
        },
        {
            "id": "comment-13885397",
            "author": "ASF subversion and git services",
            "content": "Commit 1562467 from Shai Erera in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1562467 ]\n\nLUCENE-5367: add test to ensure we don't introduce the bug again ",
            "date": "2014-01-29T14:53:04+0000"
        },
        {
            "id": "comment-13885398",
            "author": "Shai Erera",
            "content": "This was already fixed by LUCENE-5339. I committed a test to make sure we don't introduce the bug again in the future. Thanks Lucien for reporting this! ",
            "date": "2014-01-29T14:54:30+0000"
        }
    ]
}