{
    "id": "LUCENE-1573",
    "title": "IndexWriter does not do the right thing when a Thread is interrupt()'d",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "1.9,                                            2.0.0,                                            2.1,                                            2.2,                                            2.3,                                            2.3.1,                                            2.3.2,                                            2.4,                                            2.4.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Spinoff from here:\n\n    http://www.nabble.com/Deadlock-with-concurrent-merges-and-IndexWriter--Lucene-2.4--to22714290.html\n\nWhen a Thread is interrupt()'d while inside Lucene, there is a risk currently that it will cause a spinloop and starve BG merges from completing.\n\nInstead, when possible, we should allow interruption.  But unfortunately for back-compat, we will need to wrap the exception in an unchecked version.  In 3.0 we can change that to simply throw InterruptedException.",
    "attachments": {
        "LUCENE-1573.patch": "https://issues.apache.org/jira/secure/attachment/12403729/LUCENE-1573.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-03-26T19:39:35+0000",
            "content": "Attached patch.  All tests pass, including a new one that showed the deadlock.\n\nI also found & fixed a case where IndexWriter would hang during close (thinking a BG merge was still running when it wasn't) if the InterruptedException arrived at the right time.\n\nI'll commit in a day or two. ",
            "author": "Michael McCandless",
            "id": "comment-12689614"
        },
        {
            "date": "2009-03-28T19:11:20+0000",
            "content": "Thanks Jeremy. ",
            "author": "Michael McCandless",
            "id": "comment-12693482"
        }
    ]
}