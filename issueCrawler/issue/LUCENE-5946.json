{
    "id": "LUCENE-5946",
    "title": "Change SimpleFSDirectory to use newByteChannel",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ]
    },
    "description": "Currently our javadocs point to using SimpleFSDirectory \"to avoid ClosedByInterruptException\".\n\nBut this is really bogus. If you interrupt() a thread doing i/o, then you need to be prepared for the consequences. Its just that RAF is broken and not interruptible at all, but that shouldnt justify us continuing to use it.\n\nSimpleFSDirectory should be \"the most portable\", so it should use Files.newByteChannel. And we should remove the javadocs/warnings about ClosedByInterrupt",
    "attachments": {
        "LUCENE-5946.patch": "https://issues.apache.org/jira/secure/attachment/12668629/LUCENE-5946.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14133009",
            "author": "Uwe Schindler",
            "content": "One possibility would be to move the old SimpleFSDirectory to lucene/misc or lucene/snapshot, named RAFDirectory. SimpleFSDirectory in trunk should use Java 7 APIs only. The interrupt() arguments were never seen in any issue report, it was only Simon mentioning it on an issue.\n\nJust dont use Future.cancel(true): http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Future.html#cancel(boolean)\n\nIt's your own fault if you do this with Lucene code. ",
            "date": "2014-09-13T22:39:30+0000"
        },
        {
            "id": "comment-14133050",
            "author": "Robert Muir",
            "content": "Here's a patch with Uwe's approach. I put the current RandomAccessFile one in misc/ as RAFDirectory and cutover SimpleFSDirectory.\n\nall tests pass. ",
            "date": "2014-09-14T01:59:40+0000"
        },
        {
            "id": "comment-14133217",
            "author": "Uwe Schindler",
            "content": "Looks good! Maybe improve the documentation of the contrib/misc RAFDirectory to explain why it actually exists!\n\nBy the way: why did NIO use 16384 bytes bufsize instead of the default 8192? In my opinion we should consequently use 8 KiB, especially if we do heavy random access like docvalues.\n\nBut this is another discussion for another issue. ",
            "date": "2014-09-14T13:45:18+0000"
        },
        {
            "id": "comment-14133232",
            "author": "Uwe Schindler",
            "content": "\nBy the way: why did NIO use 16384 bytes bufsize instead of the default 8192? In my opinion we should consequently use 8 KiB, especially if we do heavy random access like docvalues.\nBut this is another discussion for another issue.\n\nWe no longer use RAF here, so the malloc \"bug\" in the JVM does not apply. So 16384 is a good choice here, too (was extensively tested for NIOFSDir)! We should just not make the buffer larger, because NIO internally has a pool of DirectBuffers to handle the actual disk I/O.\n\nIn addition, this is unrelated to the actual buffer size. This is just the maximum to read as chunk if some code requests megabytes of data. The BufferedIndexInput buffering is unrelated, so most reads (like docvalues) use much smaller buffers. ",
            "date": "2014-09-14T14:09:14+0000"
        },
        {
            "id": "comment-14133253",
            "author": "Robert Muir",
            "content": "Thanks Uwe, I will add the following note to it when committing:\n\n/**\n *  ...\n *  NOTE: Because this uses RandomAccessFile, it will generally\n *  not work with non-default filesystem providers. It is only\n *  provided for applications that relied on the fact that \n *  RandomAccessFile's IO was not interruptible.\n */\n\n ",
            "date": "2014-09-14T15:49:20+0000"
        },
        {
            "id": "comment-14133260",
            "author": "Uwe Schindler",
            "content": "Thanks, looks fine! ",
            "date": "2014-09-14T16:16:38+0000"
        },
        {
            "id": "comment-14133290",
            "author": "ASF subversion and git services",
            "content": "Commit 1624879 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1624879 ]\n\nLUCENE-5946: fix incorrect javadocs link ",
            "date": "2014-09-14T17:34:07+0000"
        },
        {
            "id": "comment-14332920",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:02:36+0000"
        }
    ]
}