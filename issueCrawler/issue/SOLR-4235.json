{
    "id": "SOLR-4235",
    "title": "Solr join or subquery should support sorting (and perhaps paging)",
    "details": {
        "affect_versions": "4.0",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Suppose a list of product documents, and a list of order documents, in the same core.  We want to retrieve the products ordered. With the new join syntax,\nq=\n{!join from=orderSku to=sku}accountNumber=x\n\nGreat.  Now, we wish to retrieve the products most recently ordered, by order date.\n\nq={!join from=orderSku to=sku}\naccountNumber=x&sort=orderDate desc \nNope - product doesn't have an orderDate field, no effect\n\nq={!join from=order to=sku)query:\"accountNumber:x&sort=orderDate desc\"\nNope. Parser approves it, but appears to have no effect. My guess is that sort is applied after the subquery result is effectively sent to the parent.\n\nSo we wind up getting all of the orders by date desc, and bundling up their SKUs, and POSTing that as a big OR clause. All things that join was supposed to save us from. It would be great if there was a way to support sort on the parent instead.\n\nIt would also be helpful if there was a way to support pagination of the parent.  For example, suppose I now want to display the date of the order along side the product. I can join from product to order, but if they've paged the search result I can't page the products used in the join.\n\nI'd be perfectly content to use nested query syntax for both of these things - that might be more flexible overall - but it doesn't appear to work.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}