{
    "id": "SOLR-7826",
    "title": "Permission issues when creating cores with bin/solr as root user",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Ran into an interesting situation on IRC today.\n\nSolr has been installed as a service using the shell script install_solr_service.sh ... so it is running as an unprivileged user.\n\nUser is running \"bin/solr create\" as root.  This causes permission problems, because the script creates the core's instanceDir with root ownership, then when Solr is instructed to actually create the core, it cannot create the dataDir.\n\nEnhancement idea:  When the install script is used, leave breadcrumbs somewhere so that the \"create core\" section of the main script can find it and su to the user specified during install.",
    "attachments": {
        "SOLR-7826.patch": "https://issues.apache.org/jira/secure/attachment/12798072/SOLR-7826.patch",
        "SOLR-7826_sameuser.patch": "https://issues.apache.org/jira/secure/attachment/12831514/SOLR-7826_sameuser.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-07-23T19:19:18+0000",
            "author": "Shawn Heisey",
            "content": "I know, the user should not be logged in as root.  Let's just not have that flamewar, OK? ",
            "id": "comment-14639384"
        },
        {
            "date": "2015-08-10T17:39:09+0000",
            "author": "Shawn Heisey",
            "content": "At the very least, the script should probably detect uid 0 and display a warning saying that creating cores as root might cause permission issues. ",
            "id": "comment-14680422"
        },
        {
            "date": "2015-08-11T07:22:01+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I believe creating cores as root will cause problems every single time, so why allow it at all? Perhaps bin/solr always should bail out early if executed as root, perhaps with an --runasrootonyourownrisk param to override? ",
            "id": "comment-14681358"
        },
        {
            "date": "2015-08-11T15:52:29+0000",
            "author": "Shawn Heisey",
            "content": "Perhaps bin/solr always should bail out early if executed as root, perhaps with an --runasrootonyourownrisk param to override?\n\nSounds awesome to me.  There's another project that does something similar to protect the user from themselves, and the option to explicitly force the action is not documented anywhere except in the program output, which I think is a reasonable thing to do here.\n\nI want to say that it's the linux raid tools (mdadm) that has the undocumented \"I really know what I'm doing, please proceed\" option, but I can no longer remember ... and google isn't helpful since it's not documented.  ",
            "id": "comment-14681977"
        },
        {
            "date": "2015-08-11T20:06:17+0000",
            "author": "Shawn Heisey",
            "content": "Found this info related to the \"mkraid\" command.  I can't seem to find that command on any of my Linux installs right now, so it appears this command is not currently part of the mdadm package, and may be an old utility that has not survived to the present.  I still like the idea of requiring an option that can only be discovered by actually trying to perform the action that's considered unsafe.\n\n\n-f, --force, --really-force, -R\n\n    Forces the initialization, even if data or filesystems are detected on any of the block devices to be included in the array. This is a fail-safe to prevent uninitiated users from accidentally destroying their data. The --really-force or -R flag is undocumented in the command help and manual pages. When the -f or --force flags are used, mkraid will display an additional warning and request that the command be retyped with the --really-force flag.\n\n\n\nI have seen another program with a \"force\" option that's quite long and essentially makes the user type out something like \"I acknowledge that this is a really bad idea\" to run the command.  I don't think we need to go that far, but I was quite amused by it. ",
            "id": "comment-14682393"
        },
        {
            "date": "2015-08-11T20:22:10+0000",
            "author": "Shawn Heisey",
            "content": "I'm going to assume that the \"id\" command (/usr/bin/id on Ubuntu and redhat-based systems) is present in the system and that the short options on a commercial Unix behave like the gnu version.  On Linux, the \"id\" command is in the same package (coreutils) as \"ls\" so I think this is a safe assumption. ",
            "id": "comment-14682420"
        },
        {
            "date": "2015-08-11T22:36:34+0000",
            "author": "Shawn Heisey",
            "content": "Initial attempts are not working completely, and I'm fighting with a flaky Internet connection at the location where I'm doing the work.  If I manage to get something that works right, I'll upload a patch. ",
            "id": "comment-14692407"
        },
        {
            "date": "2016-01-28T15:46:00+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Tagging this as newdev, as it should be 3 lines in bin/solr  ",
            "id": "comment-15121740"
        },
        {
            "date": "2016-04-06T05:49:44+0000",
            "author": "Binoy Dalal",
            "content": "I would like to take a shot at this.\nSo the idea is to put in an extra option and a warning to users right? ",
            "id": "comment-15227772"
        },
        {
            "date": "2016-04-06T17:55:40+0000",
            "author": "Shawn Heisey",
            "content": "Binoy Dalal: Exactly.  If the script detects uid 0 when creating cores (probably more accurate than checking the username), abort, unless the special option is provided.\n\nThis check is not required when creating collections in cloud mode, because the script doesn't touch the filesystem.  Solr itself handles the filesystem work. ",
            "id": "comment-15228749"
        },
        {
            "date": "2016-04-10T10:23:35+0000",
            "author": "Binoy Dalal",
            "content": "I've made modifications to the script and SolrCLI.java to support this but I don't think this approach really solves anything.\nConsidering that solr was run as an unprivileged user, when creating the cores as root without the option, the script throws an error and bails.\nBut when the option is used, the user will still be unable to create a core since the code will throw an AcessDeniedException, so usage of the option makes no difference whatsoever.\nI think it would make more sense if the user weren't allowed to create cores at all using root, or if the AccessDeniedException was caught and a suitable warning was provided to the user.\n\nI would like to know your thoughts on this. ",
            "id": "comment-15234047"
        },
        {
            "date": "2016-04-10T18:37:23+0000",
            "author": "Shawn Heisey",
            "content": "If the user has started Solr as root (rather than running the installer script and starting the service), then running \"bin/solr create\" as root is not a problem, and this is where the option comes in. ",
            "id": "comment-15234246"
        },
        {
            "date": "2016-04-11T03:33:27+0000",
            "author": "Binoy Dalal",
            "content": "Ok. That makes sense. I'll finish off the patch and put it up asap.\nThanks. ",
            "id": "comment-15234453"
        },
        {
            "date": "2016-04-11T17:31:06+0000",
            "author": "Binoy Dalal",
            "content": "I'm having a bit of an issue with the current implementation so I'll just outline my approach, and state the problem:\n1) Detect the user while solr is first started.\n2) Pass the user detected in (1) to SolrCLI and the option if any.\n3) Perform the user and option check if user=root.\n4) Return appropriate message.\n\nI'm facing a problem in step 1 and 2. I am not sure of how to store the detected user so that the next time the script is run, it can find that user. I've tried exporting the variable but that doesn't seem to work without adding the variable to permanent list of environment variables, which I don't think is something that should be done.\n\nAnother option that I've thought of is to write the user id to a file like the solr port is written and use that in subsequent script calls for user checking, and delete it once solr is stopped. I think this would be a good approach.\n\nPlease advise.\n\n\u2013 EDIT \u2013\nI've tested out the file creation approach and it works fine.\n\nTo recap the requirements, to see if I missed something:\n1) If solr is started as root, and user tries to create a core as root then display warning with the option to user.\n2) If solr is started as root, and user tries to create a core as root with option, allow creation of core.\n3) If solr is started as an unprivileged user and creation of a core is attempted with root, an exception is thrown with the default behaviour (no changes to be made here).\n\nLet me know if I've missed something.\n\nThanks. ",
            "id": "comment-15235549"
        },
        {
            "date": "2016-05-10T17:52:37+0000",
            "author": "Binoy Dalal",
            "content": "Shawn/Jan,\nI've tested out this patch with the lucene-solr trunk.\nIt works as per the requirements I've stated in my previous comment.\n\nPlease review and let me know if the approach I've taken is fine or if I've missed something.\n\nIf all's good then this patch is ready to be committed I guess. So one of the committers can take it up. ",
            "id": "comment-15278555"
        },
        {
            "date": "2016-09-08T04:52:58+0000",
            "author": "nicerobot",
            "content": "Using 6.2. I haven't tested the patch. This is a usable workaround. e.g.\n\nsudo -u solr bin/solr create -c demo\n\n ",
            "id": "comment-15472758"
        },
        {
            "date": "2016-09-13T22:47:37+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I took a fresh look at this, and came up with a much simpler patch with 10 new lines in bin/solr only. I think this is sufficient for now, no need to remember which user started Solr, we simply always warn if run by root. I have no idea of whether the same problem occurs as Administrator user on Windows, so not trying to fix that. ",
            "id": "comment-15488700"
        },
        {
            "date": "2016-09-21T20:24:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7561461f738a447856bb93b0a847b0200fff4c9c in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7561461 ]\n\nSOLR-7826: Refuse \"bin/solr create\" if run as root, unless -force is specified ",
            "id": "comment-15511067"
        },
        {
            "date": "2016-09-21T20:26:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6b10283765cf015aad59f054919134662d060c3b in lucene-solr's branch refs/heads/branch_6x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6b10283 ]\n\nSOLR-7826: Refuse \"bin/solr create\" if run as root, unless -force is specified\n\n(cherry picked from commit 7561461) ",
            "id": "comment-15511075"
        },
        {
            "date": "2016-09-21T20:40:55+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Thanks for the discussion and the contributions. Binoy/Shawn, I hope you don't feel bad that I did not use your approach/patch. I thought it was a bit overkill. Since the installer script by default creates a \"solr\" user for starting solr, it would be very uncommon for Solr to be run as root, and absolutely not something we would recommend. So now we always warn.\n\nThe question is if we should discourage and warn about starting solr as root as well, since this is not recommended? ",
            "id": "comment-15511113"
        },
        {
            "date": "2016-09-21T21:31:57+0000",
            "author": "Shawn Heisey",
            "content": "The question is if we should discourage and warn about starting solr as root as well, since this is not recommended?\n\nI would say yes to this.  I'd even go a little bit further.  The script should refuse to run (without the force option) any command that creates or modifies filesystem data \u2013 but only if Solr also writes to the same filesystem location.  This would mean that creating collections in cloud mode and options like upconfig and downconfig would be perfectly acceptable to run as root. ",
            "id": "comment-15511249"
        },
        {
            "date": "2016-09-21T21:47:25+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "SOLR-9547 ",
            "id": "comment-15511292"
        },
        {
            "date": "2016-09-22T21:16:00+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Documented the -force flag and removed warning box in ref-guide https://cwiki.apache.org/confluence/pages/diffpagesbyversion.action?pageId=50234737&selectedPageVersions=50&selectedPageVersions=49, as the script will now warn the user itself  ",
            "id": "comment-15514495"
        },
        {
            "date": "2016-09-30T22:56:42+0000",
            "author": "Hoss Man",
            "content": "I know i'm late to the party, but FWIW: I think adding a -force option and treating \"root\" as special still leaves a lot of room for the underlying problem to occur (and in general i think adding a -force option that's only supported by one (sub-)command is a bad idea \u2013 more on that below) ...\n\nJust rejecting root won't help if solr is the effective UID of the process, but user bob runs bin/solr create and the new core directories wind up owned by bob but not readable by solr.  Likewise, running as root may be perfectly fine, if the original install (foolishly) installed as root\n\nWhat really matters is that if bin/solr create is used to try and create new core directories, those new core directories should really be owned by whatever use owns the cores parent directory, and have the same user:group permissions \u2013 because that way, regardless of what effective UI the solr process is running under, there's no risk that Solr will be able to find the new core dir, but not read the new core dir.\n\nie: \n\n\n\twe don't have to do anything special to keep track of what user installed solr, or treat root special\n\tall we have to do is compare whoami to stat -c '%U' on the cores directory, and complain if they don't match\n\n\n\n\n\nMy general thoughts on -force:\n\neven if we switch to comparing the current user to the directory owner instead of treating \"root\" as special, a -force option could still be supported i guess, but doesn't really seem necessary and in general i would say we should avoid it unless/until we really think through all of the possible commands where we might want to enforce some restrictions unless -force is specified.  because a user who sees that there is a -force option for some bin/solr commands would have a reasonable expectation that they will be \"protected\" unless they specify -force on other risky solr commands as well (ie: deleting a core that's currently LOADed?, delete ZK nodes currently used by a collection? downloading files from ZK and overwriting existing files on disk? uploading a config set and overwritting an existing config set with the same name? etc...)\n\nIn general, i'm -0 to the changes made by this issue - i don't think Solr, on the whole, is better off with these changes, and I'd encourage the folks who worked on this jira to consider rolling them back and replacing them with a `whoami` == `stat -c '%U' .../cores` type comparison instead.  ",
            "id": "comment-15537330"
        },
        {
            "date": "2016-10-02T02:26:42+0000",
            "author": "Shawn Heisey",
            "content": "+1 to comments by Hoss Man.  I just opened SOLR-9590 for exploration.\n\nIf \"bin/solr create\" IS run as root, the idea of paying attention to the owner of the parent directory and matching it seems like a good idea too. ",
            "id": "comment-15539560"
        },
        {
            "date": "2016-10-02T14:34:54+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Just rejecting root won't help if solr is the effective UID of the process, but user bob runs bin/solr create and the new core directories wind up owned by bob but not readable by solr. \n\nIs this a real or theoretical problem? Testing on Ubuntu shows that the /var/solr folder is not writable by other than the solr user, and new folders created by a user has group \"solr\". I tested running bin/solr create -c foo with another user, and got\n\nsolr2@acc999d2179f:/opt/solr$ bin/solr create -c newcore\n\nERROR: Failed to create new core instance directory: /var/solr/data/newcore\n\n\nOn most other systems where some \"staff\" group may be used, folder permission is \"rwxr-xr-x\" as far as I know, so a random other user cannot create files in another users area.\n\nSo I think the current fix solves the problem at hand. But I agree it could be solved more generically using stat. I'll leave that for future improvements. Patches welcome.\n\nLikewise, running as root may be perfectly fine, if the original install (foolishly) installed as root\nWell, since SOLR-9547 we warn against running solr as root, so fewer users will make that mistake, and if they do, they need to -force both start and create commands.\n\nbecause a user who sees that there is a -force option for some bin/solr commands would have a reasonable expectation that they will be \"protected\" unless they specify -force on other risky solr commands as well\n\nCurrently, the -force option is added for the create and start commands, but it is not advertised in -h printout, so users would only know about it if trying to start solr or create cores as root. The documentation in RefGuide clearly tells what the command is for.\n\nYou may be right that we could add even more protection for users by adding -force flags for other situations as well, please open new JIRAs for those. ",
            "id": "comment-15540456"
        },
        {
            "date": "2016-10-03T17:26:13+0000",
            "author": "Hoss Man",
            "content": "Is this a real or theoretical problem? ...\n\nBy definition it's a theoretical problem because this code added here hasn't been released yet \u2013 that doesn't mean we shouldn't give serious consideration to it ... we shouldn't have to wait for users to get screwed by bugs before we discuss if there is a better solution.\n\nTesting on Ubuntu shows that the /var/solr folder is not writable by other than the solr user, and new folders created by a user has group \"solr\"....\n\nyou seem to be assuming that people only install using the installation script, and that no one might ever changes the default groups/perms of the solr user.  On platforms where people install solr manually (either because the install script doesn't support their os, or because they choose to) the default group/perms of those directories could be anything.\n\nWe shouldn't make bin/solr only work well \u2013 or fail cleanly \u2013 if you install exactly as we expect you to (and never change any file system perms, or group masks)  when it's just as easy to make bin/solr work well and fail cleanly anytime by testing the current directory stats ",
            "id": "comment-15542918"
        },
        {
            "date": "2016-10-03T20:51:11+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "we shouldn't have to wait for users to get screwed by bugs before we discuss if there is a better solution.\nBefore this patch we had no safeguards whatsoever, but now we protect against inadvertently messing up by running as root. In my eyes that is improvement over perfection. It will always be possible for you or others to open new issues and work on improving usability even more. ",
            "id": "comment-15543396"
        },
        {
            "date": "2016-10-03T22:01:49+0000",
            "author": "Hoss Man",
            "content": "Forgive me, I thought i mentioned this before but...\n\nWell, since SOLR-9547 we warn against running solr as root, so fewer users will make that mistake, and if they do, they need to -force both start and create commands.\n\nExcept that SOLR-9547 is really just a spin off of this issue, with the same broader problem of UID mismatches between the user running the command and the owner of the files on disk \u2013 It's not really an independent reason to add -force.  The same \"fix\" I'm suggesting here is also applicable to bin/solr start (ie: don't allow solr to start unless `whoami` matches the owner of the cores directory on the filesystem) \n\n\n\n... In my eyes that is improvement over perfection. ...\n\nAnd we are both entitled to our opinions \u2013 In my eyes: \n\n\n\teven if the initial bug report was specific to running as root, that is a single example of an underlying problem that causes strange behavior/errors anytime the user running the command isn't the same as the user owning the files on disk.\n\tthe solution(s) you committed (both here and in SOLR-9547) only address in the special case of running as root \u2013 which I view as a bandaid over the underlying problem\n\tthe solution you committed introduces a new \"api\" / feature (-force) which we are now in a position of needing to support/consider moving forward.\n\n\n\n...hence my concern that on the whole, this isn't a \"net\" overall improvement \u2013 we've \"fixed\" the initial bug as reported, but not the underlying problem; and the way we've fixed it has increased the surface area of the \"bin/solr command line api\" in a way that I find confusing and will find hard to explain/justify to users moving forward.\n\nIt will always be possible for you or others to open new issues and work on improving usability even more.\n\nAgreed, but now any such improvements in the future will be hamstrung in terms of supporting the -force option added here.\n\nIf the only change made in this jira (and SOLR-9547) was the bandaid to fail fast when run as root \u2013 then i would 100% agree with your view that those changes are an improvement to the current situation, even if not a perfect solution to the underlying problem.  But I don't personally think adding a \" -force feature\" like this (as a side effect of a bug fix) is a good idea until/unless it is more carefully and consistently thought out for all commands.\n\nPlease don't think I'm trying to brow beat you into reverting this change \u2013 You stepped up to provide a fix when I and many others didn't, so I'm in no position to argue with you about it.\n\nIf I find the time/inclination to put in the work needed to implement & test a more complete solution to the underlying problem before we release a version of Solr with -force in it, then I'll re-raise the question of whether -force is actually a good idea.  Until then, i was just hoping to persuade you to voluntarily revert it \u2013  If I haven't convinced you it's a bad idea, then i haven't convinced you \u2013 and i'm ok with that. ",
            "id": "comment-15543560"
        },
        {
            "date": "2016-10-04T12:04:29+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Experimented with Java 8's file attribute API, which works well and avoids using stat in bash. See attached SOLR-7826_sameuser.patch for a solution where we don't look for root or -force, but bail out if not same user as SOLR_HOME.\n\nI created a new AssertTool for this, which can also be used for other scripting, such as to assert that Solr is runing:\n\nusage: bin/solr assert  [-r] [-s <url>] [-u <dir>] [-x <dir>]\n -help                        Print this message\n -r,--not-root                Makes sure we are not the root user\n -s,--started <url>           Makes sure Solr is started on a certain URL\n -u,--same-user <directory>   Makes sure we run as same user that owns\n                              <directory>\n -verbose                     Generate verbose log messages\n -x,--exists <directory>      Requires directory <directory> to exist\n\n ",
            "id": "comment-15545172"
        },
        {
            "date": "2016-10-04T12:11:38+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "But then should it not be allowed to create SOLR_HOME by hand as another user, and then make sure that the solr user has full access through its group memberships? Or equivalent ACL rights for Windows? Seems potentially more trappy than the root check... ",
            "id": "comment-15545187"
        },
        {
            "date": "2016-10-04T16:52:36+0000",
            "author": "Hoss Man",
            "content": "1. I love your new AssertTool code\n2. ...\n\nBut then should it not be allowed to create SOLR_HOME by hand as another user, and then make sure that the solr user has full access through its group memberships? Or equivalent ACL rights for Windows? Seems potentially more trappy than the root check...\n\nThat's a good point ... I feel like enforcing that the same user be used every where is the lesser of the evils \u2013 but only if we had been doing that since day #1 in bin/solr.  If we start enforcing that now that might screw people with existing installs like you describe.\n\nI honestly don't know how i feel about this issue anymore.\n\nMaybe we should just stick with \"only root is special / prohibited\" behavior for now (either using the code you already committed, or your new AssertTool code) and consider more restrictive \"use the same user everywhere, but -force will \" let you use any user\" type logic in 7.0? ",
            "id": "comment-15545946"
        },
        {
            "date": "2016-10-04T19:41:04+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I think I'll leave things as they are for now. Same-user policy for 7.0 sounds ok. Perhaps see where the breadcrumbs effort in SOLR-9590 leads us, but that will anyway not help for manual installs.\n\nOne idea could be to determine whether Solr has been started before or not, i.e. by looking for a file that is always created by the Solr process, such as $SOLR_LOGS_DIR/solr.log or $SOLR_HOME/<directory>/data/index, and require that user. If Solr has not been started before, let the start command succeed as any user, but test first that the user has write access to both SOLR_HOME and SOLR_LOGS_DIR? ",
            "id": "comment-15546431"
        },
        {
            "date": "2016-10-06T20:15:09+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Moved the AssertTool code to new issue SOLR-9610 ",
            "id": "comment-15553060"
        },
        {
            "date": "2016-11-09T08:37:37+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650240"
        }
    ]
}