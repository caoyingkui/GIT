{
    "id": "SOLR-6252",
    "title": "A couple of small improvements to UnInvertedField class.",
    "details": {
        "affect_versions": "6.0",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Looks like UnInvertedField#getUnInvertedField has implemented a bit additional synchronization module rather than what is required, and thereby increasing the complexity.\n\nhttps://github.com/apache/lucene-solr/blob/trunk/solr/core/src/java/org/apache/solr/request/UnInvertedField.java#L667\n\nAs pointed out in the above link, as the synchronization is performed on the cache variable(which itself will protect the threads from obtaining access to the cache), we can safely remove all the placeholder flags. As long as cache.get() is in synchronized block, we can simply populate the cache with new entries and other threads will be able to see the changes.\n\nThis change has been introduced in https://issues.apache.org/jira/browse/SOLR-2548 (Multithreaded faceting)",
    "attachments": {
        "solr-uninvertedfield-cache.patch": "https://issues.apache.org/jira/secure/attachment/12687052/solr-uninvertedfield-cache.patch",
        "SOLR-6252-v3.patch": "https://issues.apache.org/jira/secure/attachment/12656968/SOLR-6252-v3.patch",
        "SOLR-6252v2.patch": "https://issues.apache.org/jira/secure/attachment/12656170/SOLR-6252v2.patch",
        "SOLR-6252.patch": "https://issues.apache.org/jira/secure/attachment/12656169/SOLR-6252.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Gregory Chanan",
            "id": "comment-14064290",
            "date": "2014-07-16T22:59:39+0000",
            "content": "// This thread will load this field, don't let other threads try.\n\nThis comment no longer seems relevant "
        },
        {
            "author": "Vamsee Yarlagadda",
            "id": "comment-14064298",
            "date": "2014-07-16T23:06:17+0000",
            "content": "Removed the extra comment as pointed by Greg. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14066767",
            "date": "2014-07-18T19:31:49+0000",
            "content": "Looks good to me. I'll commit this soon. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14067750",
            "date": "2014-07-20T01:25:18+0000",
            "content": "Hmm...now I'm looking at this beyond the correctness of how it was taken out...\n\nWasn't the intent to pull the creation of the UnInvertedField out of the sync block on cache so that more of them can be constructed in parallel rather than sequentially?  "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-14067760",
            "date": "2014-07-20T01:53:36+0000",
            "content": "Good point Mark.  Maybe a comment to that affect and removing isPlaceholder checks with == checks against the static variable is the right way to go here?  [I'm assuming \"==\" on references vs booleans has similar performance, though I haven't actually checked that myself...] "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14068762",
            "date": "2014-07-21T16:46:53+0000",
            "content": "Yeah, sounds reasonable to me.\n\nCan you take one more pass Vamsee Yarlagadda? "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-14068795",
            "date": "2014-07-21T17:06:10+0000",
            "content": "Also, the synchronized lock is held when checking the placeholder, when it really only needs to be held for the get/put.\n\n(it's subtle to get that correct though, because the non-placeholder needs to be notified correctly, so probably not worth doing. "
        },
        {
            "author": "Vamsee Yarlagadda",
            "id": "comment-14069392",
            "date": "2014-07-21T22:03:09+0000",
            "content": "Mark Miller Good point!\nUpdated the patch to reflect the suggestions. \nThanks Gregory Chanan. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14069439",
            "date": "2014-07-21T22:29:45+0000",
            "content": "Commit 1612422 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1612422 ]\n\nSOLR-6252: A couple of small improvements to UnInvertedField class. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14069446",
            "date": "2014-07-21T22:32:49+0000",
            "content": "Commit 1612423 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1612423 ]\n\nSOLR-6252: A couple of small improvements to UnInvertedField class. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14070365",
            "date": "2014-07-22T15:10:06+0000",
            "content": "Thanks Vamsee and Greg! "
        },
        {
            "author": "Avishai Ish-Shalom",
            "id": "comment-14245473",
            "date": "2014-12-13T18:43:34+0000",
            "content": "The new code is still vulnerable to deadlock: if a call gets to the 2nd synchronized block and blocks on cache.wait() then it will never be released since cache.notifyAll() is also inside a synchronized block of the same monitor object.  "
        },
        {
            "author": "Avishai Ish-Shalom",
            "id": "comment-14245474",
            "date": "2014-12-13T18:45:33+0000",
            "content": "A patch using a single synchronized block and no .wait() calls. should be free of deadlocks. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14245503",
            "date": "2014-12-13T19:41:12+0000",
            "content": "Thanks Avishai.\n\nSince this is a released issue, do you mind filing a new bug and attaching your patch? We can link that issue to this one. "
        },
        {
            "author": "Avishai Ish-Shalom",
            "id": "comment-14245878",
            "date": "2014-12-14T09:44:13+0000",
            "content": "done "
        }
    ]
}