{
    "id": "SOLR-439",
    "title": "SolrInputDocument should preserve Field addition order",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The SolrInputDocument currently uses a Map for storing the names of Fields.  While in general this is fine, there are cases where it is important to preserve the ordering of Fields as Lucene does.  For instance, some applications may only need to return certain fields w/ the results, in which case some optimization could be attained by having them occur first in the document so that Lucene doesn't have to skip over other Fields (if using the FieldSelector to restrict what Fields get loaded)\n\nAlso, in some cases it is possible to setup Analyzers that coordinate results between Fields by using the TeeTokenFilter (see LUCENE-1058 and http://www.gossamer-threads.com/lists/lucene/java-dev/55927) thus saving on indexing time.\n\nSimply changing line 42 of SolrInputDocument to:\n_fields = new LinkedHashMap<String,SolrInputField>();\n\nshould do the trick.  This requires no interface changes, etc. and should be back-compatible.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12552490",
            "date": "2007-12-17T18:16:52+0000",
            "content": "committed in rev 604951\n\nAn early version of SolrInputDocument had this an an option... better to make it the behavior.  \n\nthanks Grant "
        }
    ]
}