{
    "id": "LUCENE-352",
    "title": "[PATCH] NullPointerException when using nested SpanOrQuery in SpanNotQuery",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.0.0"
        ],
        "affect_versions": "1.4",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Overview description: \nI'm using the span query classes in Lucene to generate higher scores for \nsearch results where the search terms are closer together. In certain \nsituations I want to exclude terms from the span. When I attempt to exclude \nmore than one term I get an error. \n\nThe example query I'm using is:  \n\n'brighton AND tourism' -pier -contents \n\nI construct the query objects and the toString() version is: \n\nspanNot(spanNear([contents:brighton contents:tourism], 10, false), \nspanOr([contents:pier, contents:road])) \n\n\nSteps to reproduce: \n1. Construct a SpanNearQuery (must have at least one term, but at least two \nmakes more sense) \n2. Construct a SpanOrQuery containing two or more terms \n3. Construct a SpanNotQuery to include the first query object and exclude the \nsecond (SpanOrQuery) \n4. Execute the search \n\n\nActual Results: \nA null pointer exception is thrown while generating the scores within the \nsearch. \n\nStack trace:  \njava.lang.NullPointerException   \n        at   \norg.apache.lucene.search.spans.SpanOrQuery$1.doc(SpanOrQuery.java:174)   \n        at   \norg.apache.lucene.search.spans.SpanNotQuery$1.next(SpanNotQuery.java:75)   \n        at org.apache.lucene.search.spans.SpanScorer.next(SpanScorer.java:50)   \n        at org.apache.lucene.search.Scorer.score(Scorer.java:37)   \n        at   \norg.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:92)   \n        at org.apache.lucene.search.Hits.getMoreDocs(Hits.java:64)   \n        at org.apache.lucene.search.Hits.<init>(Hits.java:43)   \n        at org.apache.lucene.search.Searcher.search(Searcher.java:33)   \n        at org.apache.lucene.search.Searcher.search(Searcher.java:27)   \n        at   \ncom.runtimecollective.search.LuceneSearch.search(LuceneSearch.java:362)   \n\n\nExpected Resuts: \nIt executes the search and results where the first search terms (near query) \nare close together but without the second terms (or query) appearing.",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--patch.txt": "https://issues.apache.org/jira/secure/attachment/12312530/ASF.LICENSE.NOT.GRANTED--patch.txt",
        "ASF.LICENSE.NOT.GRANTED--TestBasics.java.patch": "https://issues.apache.org/jira/secure/attachment/12312531/ASF.LICENSE.NOT.GRANTED--TestBasics.java.patch",
        "LUCENE-352-consolidated-SpanNot-NPE.patch": "https://issues.apache.org/jira/secure/attachment/12331945/LUCENE-352-consolidated-SpanNot-NPE.patch",
        "ASF.LICENSE.NOT.GRANTED--TestBasicsPatch2.txt": "https://issues.apache.org/jira/secure/attachment/12312532/ASF.LICENSE.NOT.GRANTED--TestBasicsPatch2.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2005-02-25T01:23:29+0000",
            "content": "The bug could be in SpanNotQuery.java, line 67, \nwhich sets moreExclude to true. \n\nCould you try with: \n\n        private boolean moreExclude = excludeSpans.next(); \n\ninstead? \n\nRegards, \nPaul Elschot \n ",
            "author": "Paul Elschot",
            "id": "comment-12322207"
        },
        {
            "date": "2005-02-25T01:35:31+0000",
            "content": "Created an attachment (id=14356)\nChange suggested by Paul Elschot\n\nChanging moreExlude from 'true' to 'excludeSpans.next()' did the trick. ",
            "author": "Miles Barr",
            "id": "comment-12322208"
        },
        {
            "date": "2005-02-25T01:36:05+0000",
            "content": "That should be 'moreExclude'.  ",
            "author": "Miles Barr",
            "id": "comment-12322209"
        },
        {
            "date": "2005-02-25T02:17:35+0000",
            "content": "(In reply to comment #2) \n> Created an attachment (id=14356) [edit] \n> Change suggested by Paul Elschot \n>  \n> Changing moreExlude from 'true' to 'excludeSpans.next()' did the trick. \n\nThat's good news. Thanks for the patch. \n\nWould it be possible for you to add a few test cases \nfor this? \n\norg.apache.lucune.search.spans.TestSpans in the src/test \ndirectory has some test examples. \n\n ",
            "author": "Paul Elschot",
            "id": "comment-12322210"
        },
        {
            "date": "2005-02-25T02:49:36+0000",
            "content": "Created an attachment (id=14357)\nAdditional test cases for when using a SpanOrQuery as the exclude option\n\nHere's a patch file for\n\ntest/src/org/apache/lucene/search/spans/TestBasics.java\n\nI added two test cases:\n\n1. When there's only one SpanQuery in the SpanOrQuery\n2. When there's more than one SpanQuery in the SpanOrQuery\n\nThere's also a commented out test for when you have an empty SpanOrQuery but\nthat currently throws an exception (complains that fields don't have the same\nname) when you try to run it. \n\nI only used regular SpanTermQuery objects within the SpanOrQuery. I assume the\nregular SpanOrQuery tests verify the SpanOrQuery works correctly with the\ndifferent span classes. ",
            "author": "Miles Barr",
            "id": "comment-12322211"
        },
        {
            "date": "2005-02-25T03:15:16+0000",
            "content": "Miles, \n\nThe commented test case in the patch to TestBasics passes an empty \nSpanOrQuery to a SpanNotQuery. That is probably not intended. \n\nRegards, \nPaul Elschot \n ",
            "author": "Paul Elschot",
            "id": "comment-12322212"
        },
        {
            "date": "2005-02-25T03:19:20+0000",
            "content": "(In reply to comment #6) \n> Miles,  \n>   \n> The commented test case in the patch to TestBasics passes an empty  \n> SpanOrQuery to a SpanNotQuery. That is probably not intended. \n\nI just reread the previous post, and it is intended. \nHowever, I don't get the point of passing an empty SpanOrQuery. \n\n>   \n> Regards,  \n> Paul Elschot  \n>   \n\n ",
            "author": "Paul Elschot",
            "id": "comment-12322213"
        },
        {
            "date": "2005-02-25T18:30:13+0000",
            "content": "My reasoning was that a poorly written parser might construct it with an empty \nSpanOrQuery and it should probably produce the same results as just the \ninclude query. But it would be incorrect to do so, so you'd expect an error.  \n\nIf you don't want to change the behaviour then just throw out the commented \ntest case.  ",
            "author": "Miles Barr",
            "id": "comment-12322214"
        },
        {
            "date": "2005-03-25T03:34:45+0000",
            "content": "Created an attachment (id=14558)\nPatch to TestBasics.java with the additional test cases except the discussed\none.\n\nI think this settles the discussion,\nRegards,\nPaul Elschot ",
            "author": "Paul Elschot",
            "id": "comment-12322215"
        },
        {
            "date": "2005-07-20T04:17:46+0000",
            "content": "The patch of 24 Feb 2005 has not yet been applied. \nThis bug might be reopened because of that, but that would be overdoing it. \n\nThe extra test code in the patch of 24 March 2005 seems ok to me. \n\nRegards, \nPaul Elschot \n ",
            "author": "Paul Elschot",
            "id": "comment-12322216"
        },
        {
            "date": "2006-05-05T20:41:02+0000",
            "content": "The fix in patch.txt is not in the trunk, and there was some recent discussion on\nwhat might be the same bug, so I'm reopening this. ",
            "author": "Paul Elschot",
            "id": "comment-12378033"
        },
        {
            "date": "2006-05-16T08:09:33+0000",
            "content": "consolidated patch containing...\n\n\n\tadditional test methods in TestBasicsPatch2.txt\n\tadditional test methods from LUCENE-560\n\tone line change to from patch.txt that makes these tests pass\n\n ",
            "author": "Hoss Man",
            "id": "comment-12402469"
        },
        {
            "date": "2006-05-16T08:11:08+0000",
            "content": "I think this bug is actualy simple enough that I can honestly say I understand it ... so unless anyone obejcts i'll commit \"LUCENE-352-consolidated-SpanNot-NPE.patch\" in a few days. ",
            "author": "Hoss Man",
            "id": "comment-12402470"
        },
        {
            "date": "2006-05-16T08:39:43+0000",
            "content": "+1\nlooks fine. ",
            "author": "Yonik Seeley",
            "id": "comment-12402474"
        },
        {
            "date": "2006-05-18T14:40:55+0000",
            "content": "commited patch ",
            "author": "Hoss Man",
            "id": "comment-12412303"
        }
    ]
}