{
    "id": "SOLR-3033",
    "title": "\"numberToKeep\" on replication handler does not work with \"backupAfter\"",
    "details": {
        "affect_versions": "3.5",
        "status": "Closed",
        "fix_versions": [
            "3.6"
        ],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Configured my replication handler like this:\n\n   <requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\" >\n       <lst name=\"master\">\n       <str name=\"replicateAfter\">startup</str>\n       <str name=\"replicateAfter\">commit</str>\n       <str name=\"replicateAfter\">optimize</str>\n       <str name=\"confFiles\">elevate.xml,schema.xml,spellings.txt,stopwords.txt,stopwords_de.txt,stopwords_en.txt,synonyms_de.txt,synonyms.txt</str>\n       <str name=\"backupAfter\">optimize</str>\n       <str name=\"numberToKeep\">1</str>\n     </lst>\n   </requestHandler>\n\nSo after optimize a snapshot should be taken, this works. But numberToKeep is ignored, snapshots are increasing with each call to optimize and are kept forever. Seems this settings have no effect.",
    "attachments": {
        "SOLR-3033.patch": "https://issues.apache.org/jira/secure/attachment/12510914/SOLR-3033.patch",
        "SOLR-3033-failingtest.patch": "https://issues.apache.org/jira/secure/attachment/12521364/SOLR-3033-failingtest.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "James Dyer",
            "id": "comment-13187047",
            "date": "2012-01-16T17:57:59+0000",
            "content": "Torsten,\n\nI think for this to work you need to put the \"numberToKeep\" parameter in the request URL, not in the configuration file.  I realize this is counterintuitive because most request handlers let you specify parameters either way.  I think the reason it doesn't work in the config file might be because you've got to nest parameters within the <lst name=\"master\" /> element.   So try putting this in the url and see if that works for you.\n\nIn any case, I'm thinking the only thing to do for this is perhaps clarify this point in the wiki.  Even if we could fix this, it wouldn't be appropriate to put this parameter is every replication request as typically you'd use the same handler for both replication and backups, and this one applies to backups only.  Anyone have any thoughts about this? "
        },
        {
            "author": "Torsten Krah",
            "id": "comment-13187258",
            "date": "2012-01-16T22:21:56+0000",
            "content": "I do not call an url. Just doing an optimize call.\nThe option \"backupAfter\" would make no sense if e.g. set to optimize, if replication handler can not be configured for \"backup\" usage to tell how much numbers to keep.\n\nWhy its not possible to propagate numberToKeep to the backup function call? backupAfter is propagated too and numberToKeep would match to this scenario, wouldn't it?\nIf i have to make an explicit call for a snapshot - ehh how would such a request look? - the option backupAfter optimize is suboptimal as diskspace may be running out until the url request is coming in which does delete the old ones, isn't it? "
        },
        {
            "author": "James Dyer",
            "id": "comment-13187268",
            "date": "2012-01-16T22:36:55+0000",
            "content": "I see what you're saying.  I wasn't thinking about using the \"backupAfter\" parameter at all.  It seems reasonable then, because of \"backupAfter\", we would have to support having \"numberToKeep\" in the configuration. \n\nAs a workaround, you can execute backups by calling the command url.  The syntax is:\n\nhttp://master_host:port/solr/replication?command=backup&numberToKeep=1\n\n\n\nSee http://wiki.apache.org/solr/SolrReplication#HTTP_API for more information. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13188091",
            "date": "2012-01-17T22:46:12+0000",
            "content": "Here's a patch that allows \"numberToKeep\" in the config file. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13197387",
            "date": "2012-01-31T23:40:31+0000",
            "content": "James: two things to think about.\n\n1) when adding new test configs, try to keep them as minimal as possible, so the only things in them are things that have to be there for the purposes of the test. \n\n2) there are really two types of \"params\" when dealing with request handlers \u2013 init params (ie: things in the body of the requestHandler tag in solrconfig.xml) and request params (things passed to the handler when it is executed.  via RequestHandlerBase many request handlers support the idea of init params named \"defaults\", \"invariants\" and \"appends\" which can contain sub-params that are consulted when parsing/processing request params in handleRequest.\n\nIn the case of the \"numberToKeep\", this is already a request param, and ReplicationHandler already subclasses RequestHandlerBase which means people can define a \"defaults\" section in their ReplicationHandler config so any requests to \"http://master_host:port/solr/replication?command=backup\" get that value automaticly.  but your patch seems to add support for an init param with the same name: which raises questions like \"what happens if i specify differnet values for numberToKeep in init params and in invariant params?\"\n\nit seems like the crux of the problem is that if you use the \"backupAfter\" option, the code path to create the backup bypasses a lot of the logic that is normally used when a backup command is processed via handleRequest.  So  instead of adding an init param version of numberToKeep, perhaps it owuld be better if the \"backupAfter\" codepath followed the same code path as handleRequest as much as possible?  perhaps it could be something as straight forward as changing the meat of getEventListener to look like...\n\n\nSolrQueryRequest req = new LocalSolrRequest(core ...);\ntry {\n  RequestHandler.this.handleRequest(req, new SolrQueryResponse());\n} finally {\n  req.close();\n}\n\n\n\nwhat do you think? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13197388",
            "date": "2012-01-31T23:41:44+0000",
            "content": "updating summary to clarify scope of problem "
        },
        {
            "author": "James Dyer",
            "id": "comment-13197948",
            "date": "2012-02-01T16:47:28+0000",
            "content": "\nSo instead of adding an init param version of numberToKeep, perhaps it owuld be better if the \"backupAfter\" codepath followed the same code path as handleRequest as much as possible?\nIt wasn't so much my intention to add an init-param but to make a way to give a default value for this in solrconfig.xml as you can for other handlers.  Without a way to declare a default in solrconfig.xml, the user has no way to use this parameter should a backup be triggered by \"backupAfter\".  \n\nWhen I looked at this, it didn't seem that ReplicationHandler follows the normal rules.  We don't have a <defaults /> section for request parameters, do we?  And looking at the available request parameters, we probably wouldn't want defaults for any of them  (see http://wiki.apache.org/solr/SolrReplication#HTTP_API).  \n\nThis makes me wonder if my first try was a mistake.  Possibly this should only be an init-param.  This would let users configure how many to keep on the Master, and how many to keep on the Slave.  We don't let users change poll intervals with request params, so why let them change the archive policy with request params?\n\nIf we kept it as a request-param only, but then let the user specify defaults, would that create a legal <defaults /> and <invariants /> section nested within <master /> and <slave />, so users can specify defaults for each?\n\nI don't have a strong feeling on this and would change the patch to work any way you thought best.  Somehow it seems that \"numberToKeep\" needs to have a default setting somewhere, somehow, so it will work with \"backupAfter\". "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13198076",
            "date": "2012-02-01T19:32:24+0000",
            "content": "Without a way to declare a default in solrconfig.xml, the user has no way to use this parameter should a backup be triggered by \"backupAfter\". \n\nright \u2013 my point is we already have a convention for specifying \"default params for a request handler\" but your patch doesn't use that convention.\n\nWe don't have a <defaults /> section for request parameters, do we?\n\nAny request handler that subclasses RequestHandlerBase automatically gets defaults applied when handleRequest is called if they are specified in the configs (the syntax isn't \"<defaults />\" it's \"<lst name=\"defaults\">...</lst><lst name=\"appends\">...</lst><lst name=\"invariants\">...</lst>)\n\nIf we kept it as a request-param only, but then let the user specify defaults, would that create a legal <defaults /> and <invariants /> section nested within <master /> and <slave />, so users can specify defaults for each?\n\nI'm not sure that would really make sense .. what if an instances was acting as a repeater so it's both a master and a slave?  if you told it to create a backup, how many would it keep if there was a differnet value specified in the master/slave sections?\n\nI think maybe you've hit the nail on the head here...\n\n\nAnd looking at the available request parameters, we probably wouldn't want defaults for any of them \n...\nThis makes me wonder if my first try was a mistake. Possibly this should only be an init-param.\n\nSo perhaps the way forward is...\n\n\n\tkeep the \"numberToKeep\" request param around for backcompat with Solr 3.5 for people who want to manually specify it when triggering command=backups\n\tadd a new init param for ReplicationHandler to specify how many backups to keep when backups are made \u2013 the name for this new param should probably not be numberToKeep (suggestion: \"maxNumberOfBackups\") because:\n\t\n\t\twe need a name that clarifies it's specific to backups\n\t\twe want a name that is distinct from the request param so in docs it's clear which one is being refered to\n\t\n\t\n\tdocument clearly the interaction between the maxNumberOfBackups init param and the numberToKeep request param (suggestion: \"the numberToKeep request param can be used with the backup command unless the maxNumberOfBackups init param has been specified on the handler \u2013 in which case maxNumberOfBackups is always used and attempts to use the numberToKeep request param will cause an error\"\n\n\n\nwhat do you think? "
        },
        {
            "author": "James Dyer",
            "id": "comment-13198114",
            "date": "2012-02-01T20:22:33+0000",
            "content": "I agree we should have it as a request param for backwards compatibility, and allow it as a better-named initParam.  Clear documentation in the wiki would be in order.  Two things though:\n\n1. Maybe we should have the request param override the init param rather than generate an error.  This is consistent with how handler params work in general.  As it was lost on me, many people won't appreciate the subtle difference between an init-param and a request-param in this case and will just want it to behave like any other handler.  (moot point here if we are just removing the init-param from 4.x and keeping it, deprecated, in 3.x)\n\n2. Are you saying that we should require this param to be outside <slave/> and <master/>, thus avoiding the conflict if a node is a repeater?  We could allow it inside <slave/> and <master/> and document that in the case of a repeater the value in <slave/> takes precedence over the value in <master/>.  This is more confusing for the repeater case, but simpler in that it seems every other init parameter gets specified separately for slaves and master.\n\nOnce again I don't have a strong preference here but the thoughts occurred... "
        },
        {
            "author": "James Dyer",
            "id": "comment-13217584",
            "date": "2012-02-27T21:33:38+0000",
            "content": "New patch incorporates Hoss's suggestions from 1-12-2012.\n\n\n\t\"numberToKeep\" stays as a request param\n\n\n\n\n\t\"maxNumberOfBackups\" is introduced as a init param.  This is top-level and cannot be specified separately for masters & slaves.\n\n\n\n\n\tTrying to use both params results in a \"BAD_REQUEST\" (400) SolrException.\n\n\n\nI will commit this shortly to Trunk & 3.x along with Wiki changes. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13218319",
            "date": "2012-02-28T16:27:56+0000",
            "content": "\n\tCommitted r1294702 (trunk) & r1294718 (3.x).\n\tUpdated the Wiki with explanation of the new parameter\n\n\n\nThanks for reporting this Torsten. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13246586",
            "date": "2012-04-04T18:53:39+0000",
            "content": "This fix is not working for me with this configuration:\n\n  <requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n    <lst name=\"master\">\n    \t<str name=\"replicateAfter\">commit</str>\n        <str name=\"backupAfter\">commit</str>\n    </lst>\n    <str name=\"maxNumberOfBackups\">3</str>\n  </requestHandler>\n\n\n\nThe backups are created as expected, but snapshots are never deleted. They do if I issue a request with \"numberToKeep\", but not automatically after a commit.\nI'm attaching a test case.\n\nMy tests and the patch are for trunk. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13254750",
            "date": "2012-04-16T15:18:11+0000",
            "content": "James, did you get a chance to review my patch? am I missing something? "
        },
        {
            "author": "James Dyer",
            "id": "comment-13255068",
            "date": "2012-04-16T21:16:47+0000",
            "content": "Tomas,\n\nYou're correct this is a bug.  I opened SOLR-3361 for this and attached a fix.  Thank you for reporting this. "
        }
    ]
}