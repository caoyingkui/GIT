{
    "id": "LUCENE-8554",
    "title": "Add new LatLonShapeLineQuery",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Implemented",
        "fix_versions": [],
        "affect_versions": "7.6,                                            master (8.0)",
        "labels": "",
        "priority": "Blocker",
        "type": "New Feature"
    },
    "description": "Its often useful to be able to query a shape index for documents that either INTERSECT or are DISJOINT from a given LINESTRING. Occasionally the linestring of interest may also have a distance component, which creates a buffered query (often used in routing, or shape snapping). This feature first adds a new LatLonShapeLineQuery for querying  LatLonShape fields by arbitrary lines. A distance component can then be added in a future issue.",
    "attachments": {
        "LUCENE-8554.patch": "https://issues.apache.org/jira/secure/attachment/12946587/LUCENE-8554.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16671968",
            "author": "Nicholas Knize",
            "content": "Attached patch provides:\n\n\n\tNew LatLonShapeLineQuery for querying indexed shapes that are DISJOINT or INTERSECT an arbitrary Line or Line[]\n\tRefactored main Polygon2D logic into more aptly named class EdgeTree\n\tRefactored Polygon2D to derive from EdgeTree\n\tNew Line2D for computing box and triangle relations with a Line represented as a KD Tree (similar to Polygon2D)\n\tNew LatLonShape#newLineQuery factory method for creating a new LatLonShapeLineQuery\n\tAdded random Line query testing to BaseLatLonShapeTestCase\n\tUpdated test validators to include line query testing\n\tCleaned up LatLonShapeBoundingBox for legibility to use restructured logic\n\n ",
            "date": "2018-11-01T18:24:29+0000"
        },
        {
            "id": "comment-16671987",
            "author": "Nicholas Knize",
            "content": "Cleaned up a System.out in BaseLatLonShapeTestCase. Everything else is the same. ",
            "date": "2018-11-01T18:43:04+0000"
        },
        {
            "id": "comment-16672829",
            "author": "Ignacio Vera",
            "content": "LGTM. I have a minor comment about java docs:\n\nEdgeTree:\u00a0 Javadocs refer to Polygon2D.\n\nLine2D: Javadocs refer to Polygon2D.\n\nLatLonShapeLineQuery: I think the line that refers to how shapes are indexed is inaccurate.\n\nLatLonShape: Add java docs to functions that creates queries.\n\n\u00a0 ",
            "date": "2018-11-02T09:46:39+0000"
        },
        {
            "id": "comment-16673404",
            "author": "ASF subversion and git services",
            "content": "Commit 0cbefe8b25044a0f565c8491bda86626f2eddf5e in lucene-solr's branch refs/heads/master from Nicholas Knize\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0cbefe8 ]\n\nLUCENE-8554: Add new LatLonShapeLineQuery that queries indexed LatLonShape fields by arbitrary lines ",
            "date": "2018-11-02T16:49:53+0000"
        },
        {
            "id": "comment-16673415",
            "author": "ASF subversion and git services",
            "content": "Commit a00cc3be72bbb39430f6b895a4d29a26bce4f6b4 in lucene-solr's branch refs/heads/branch_7x from Nicholas Knize\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a00cc3b ]\n\nLUCENE-8554: Add new LatLonShapeLineQuery that queries indexed LatLonShape fields by arbitrary lines ",
            "date": "2018-11-02T17:01:49+0000"
        },
        {
            "id": "comment-16674965",
            "author": "ASF subversion and git services",
            "content": "Commit 0cbefe8b25044a0f565c8491bda86626f2eddf5e in lucene-solr's branch refs/heads/jira/http2 from Nicholas Knize\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0cbefe8 ]\n\nLUCENE-8554: Add new LatLonShapeLineQuery that queries indexed LatLonShape fields by arbitrary lines ",
            "date": "2018-11-05T11:01:33+0000"
        },
        {
            "id": "comment-16685543",
            "author": "Nicholas Knize",
            "content": "Just pointing out there was a nice performance improvement side effect from this patch:\n\nSeen here in geobench.html#search-polyMedium\n\nA simple optimization was added to EdgeTree.java#330 to check if either end of the polygon's line segment is contained by the target rectangle. This\u00a0optimization skips all of the determinant calculations below giving what appears to be a boost in search performance of ~1.4 QPS for LatLonPoint#newPolygonQuery ",
            "date": "2018-11-13T17:58:26+0000"
        }
    ]
}