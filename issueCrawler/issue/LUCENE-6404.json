{
    "id": "LUCENE-6404",
    "title": "MemoryIndex payloads are sometimes out of bounds.",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "See patch for tests:\n\nant test  -Dtestcase=TestMemoryIndexAgainstRAMDir -Dtests.method=testRandomQueries -Dtests.seed=CB6EBF17EFD0300E\n\n\n   [junit4] ERROR   4.82s | TestMemoryIndexAgainstRAMDir.testRandomQueries <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: term [74 65 6c 6d]: doc 0: pos 85 payload length is out of bounds 0\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([CB6EBF17EFD0300E:95450FFBD70A1D90]:0)\n   [junit4]    > \tat org.apache.lucene.index.CheckIndex.checkFields(CheckIndex.java:1335)\n   [junit4]    > \tat org.apache.lucene.index.CheckIndex.testPostings(CheckIndex.java:1694)\n   [junit4]    > \tat org.apache.lucene.util.TestUtil.checkReader(TestUtil.java:315)\n   [junit4]    > \tat org.apache.lucene.util.TestUtil.checkReader(TestUtil.java:297)\n   [junit4]    > \tat org.apache.lucene.index.memory.TestMemoryIndexAgainstRAMDir.assertAgainstRAMDirectory(TestMemoryIndexAgainstRAMDir.java",
    "attachments": {
        "LUCENE-6404.patch": "https://issues.apache.org/jira/secure/attachment/12723605/LUCENE-6404.patch",
        "LUCENE-6404_test.patch": "https://issues.apache.org/jira/secure/attachment/12723602/LUCENE-6404_test.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14483044",
            "author": "Robert Muir",
            "date": "2015-04-07T11:31:58+0000",
            "content": "It just needs to handle the 0-length payload case and return null there. "
        },
        {
            "id": "comment-14483049",
            "author": "Robert Muir",
            "date": "2015-04-07T11:35:46+0000",
            "content": "Trivial patch. It was just missing the check. "
        },
        {
            "id": "comment-14483050",
            "author": "ASF subversion and git services",
            "date": "2015-04-07T11:38:00+0000",
            "content": "Commit 1671813 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1671813 ]\n\nLUCENE-6404: fix 0-length payload semantics in MemoryIndex "
        },
        {
            "id": "comment-14483054",
            "author": "ASF subversion and git services",
            "date": "2015-04-07T11:39:45+0000",
            "content": "Commit 1671816 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1671816 ]\n\nLUCENE-6404: fix 0-length payload semantics in MemoryIndex "
        },
        {
            "id": "comment-14483132",
            "author": "David Smiley",
            "date": "2015-04-07T13:16:18+0000",
            "content": "Thanks Rob.  When I wrote that line I wasn't certain if a null Payload and 0-length payload should be the same, and now I know. "
        },
        {
            "id": "comment-14586963",
            "author": "Anshum Gupta",
            "date": "2015-06-15T21:45:14+0000",
            "content": "Bulk close for 5.2.0. "
        }
    ]
}