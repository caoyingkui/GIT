{
    "id": "SOLR-6717",
    "title": "SolrCloud indexing performance when sending updates to incorrect core is terrible",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "4.10.2",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "A user on the mailing list was sending document updates to a random node/core in his SolrCloud.  Performance was not scaling anywhere close to what was expected.  Basically, indexing performance was not scaling when adding shards and servers.\n\nAs soon as the user implemented a smart router that was aware of the cloud structure and could send to the proper shard leader, performance scaled exactly as expected.  It's not Java code, so CloudSolrServer was not an option.\n\nThere will always be some overhead involved when sending update requests to the wrong shard replica, but hopefully something can be done about the performance hit.\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-solr-user/201411.mbox/%3CCALswpfDQT4+_eZ6416gMyVHkuhdTYtxXxwxQabR6xeTZ8Lx=tQ@mail.gmail.com%3E",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-07T16:24:01+0000",
            "author": "Shawn Heisey",
            "content": "Link in description now works, the message has been archived. ",
            "id": "comment-14202212"
        },
        {
            "date": "2014-11-07T18:25:00+0000",
            "author": "Otis Gospodnetic",
            "content": "Here's the full thread: http://search-lucene.com/m/QTPaWzeof ",
            "id": "comment-14202392"
        }
    ]
}