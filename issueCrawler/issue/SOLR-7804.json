{
    "id": "SOLR-7804",
    "title": "TestCloudPivotFacet failures: expected:<X> but was:<Y>",
    "details": {
        "components": [
            "faceting"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3,                                            6.0",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "A couple failures recently on my Jenkins (Linux), both on branch_5x and trunk - here's one on trunk: http://jenkins.sarowe.net/job/Lucene-Solr-tests-trunk/766/, and another on branch_5x: http://jenkins.sarowe.net/job/Lucene-Solr-tests-5.x-Java8/546/.\n\nI reproduced another branch_5x failure from a few days ago (Jenkins job has been removed already) on OS X, using both java7 and java8:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudPivotFacet -Dtests.method=test -Dtests.seed=D8E5204E25B3DB16 -Dtests.slow=true -Dtests.locale=es_PA -Dtests.timezone=America/El_Salvador -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 46.6s | TestCloudPivotFacet.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: {main(facet=true&facet.pivot=%7B%21stats%3Dst0%7Dpivot_ti1&facet.pivot=%7B%21stats%3Dst0%7Dpivot_ti1&facet.limit=4&facet.offset=6&facet.missing=true&facet.overrequest.ratio=-0.9744149),extra(rows=0&q=id%3A%5B*+TO+448%5D&fq=id%3A%5B*+TO+516%5D&_test_miss=true)} num pivots expected:<2> but was:<1>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([D8E5204E25B3DB16:50B11F948B4FB6EE]:0)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:251)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.test(TestCloudPivotFacet.java:228)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:960)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:935)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-07-20T22:59:27+0000",
            "author": "Steve Rowe",
            "content": "Another trunk failure on Linux: http://jenkins.sarowe.net/job/Lucene-Solr-tests-trunk/901/ - reproduces for me on OS X, both on trunk and on branch_5x, the latter with both Java7 and Java8: \n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudPivotFacet -Dtests.method=test -Dtests.seed=957BC6861F510BE -Dtests.slow=true -Dtests.locale=sr_BA -Dtests.timezone=America/Guadeloupe -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 36.2s J3  | TestCloudPivotFacet.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: {main(facet=true&facet.pivot=pivot_b%2Cpivot_f%2Cpivot_dt1&facet.pivot=%7B%21stats%3Dst3%7Dpivot_td%2Cpivot_z_s1&facet.limit=5&facet.pivot.mincount=16&facet.missing=true&facet.sort=index&facet.overrequest.ratio=1.1832508),extra(rows=0&q=*%3A*&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_tl&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_tdt1&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Ddense_pivot_y_s&_test_min=16&_test_miss=true&_test_sort=index)} ==> pivot_b,pivot_f,pivot_dt1: {params(rows=0),defaults({main(rows=0&q=*%3A*&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_tl&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_tdt1&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Ddense_pivot_y_s&_test_min=16&_test_miss=true&_test_sort=index),extra(fq=-pivot_b%3A%5B*+TO+*%5D)})} expected:<17> but was:<22>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([957BC6861F510BE:810383B2CF097D46]:0)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:281)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.test(TestCloudPivotFacet.java:228)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:963)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:938)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.lang.AssertionError: pivot_b,pivot_f,pivot_dt1: {params(rows=0),defaults({main(rows=0&q=*%3A*&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_tl&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_tdt1&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Ddense_pivot_y_s&_test_min=16&_test_miss=true&_test_sort=index),extra(fq=-pivot_b%3A%5B*+TO+*%5D)})} expected:<17> but was:<22>\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertNumFound(TestCloudPivotFacet.java:680)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotData(TestCloudPivotFacet.java:335)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:302)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:271)\n   [junit4]    > \t... 42 more\n\n ",
            "id": "comment-14634228"
        },
        {
            "date": "2015-07-24T17:32:52+0000",
            "author": "Hoss Man",
            "content": "There's two distinct types of failures here..\n\n\n\tassertPivotCountsAreCorrect fails directly (and very early in it's cycle) because num pivots expected:<X> but was:<X-1>\n\t\n\t\tthis is a straightforward test bug - it's not accounting for the 1 in ~1000 chance that it will generate the exact same \"facet.pivot\" param twice in a single request\n\t\n\t\n\tassertNumFound fails with {{expected:<X> but was:<X+Y>\n\t\n\t\tthis is ... something else.  it's not immediately obvious to me why these are failing\n\t\t\n\t\t\tin both of the examples give so far, the specific failure msg indicates that it's trying to verify the count from a \"missing\" constraint (ie: dos that do not have a pivot constrain value) and when adding an fq=-fieldname:[* TO *] to the original query, it gets more documents then the facet said it should.\n\t\t\tbesides the fact that they are both the \"missing\" counts, the only other commonality that jumps out at me is that facet.mincount is used in both queries, and in both cases the facet.mincount is just slightly below the count returned \u2013 making me wonder if there is a bug in how the we're dealing with counts from individual shards below the mincount? (pure speculation)\n\t\t\ti should not explicitly that in one of the failures, the facet.limit=5 and the incorrect count is from a boolean field which is the very first field in the pivot \u2013 so refinement shouldn't be a factor in whatever is going wrong.\n\t\t\n\t\t\n\t\n\t\n\n\n\n\n\nI've got a trivial patch for the first problem that i'll commit soon \u2013 it doens't affect the entropy of the randomized test, so the other seeds (for the second problem) still fail and can be used to continue to test that remaining problem...\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudPivotFacet -Dtests.method=test -Dtests.seed=957BC6861F510BE -Dtests.slow=true -Dtests.locale=sr_BA -Dtests.timezone=America/Guadeloupe -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 36.2s J3  | TestCloudPivotFacet.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: {main(facet=true&facet.pivot=pivot_b%2Cpivot_f%2Cpivot_dt1&facet.pivot=%7B%21stats%3Dst3%7Dpivot_td%2Cpivot_z_s1&facet.limit=5&facet.pivot.mincount=16&facet.missing=true&facet.sort=index&facet.overrequest.ratio=1.1832508),extra(rows=0&q=*%3A*&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_tl&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_tdt1&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Ddense_pivot_y_s&_test_min=16&_test_miss=true&_test_sort=index)} ==> pivot_b,pivot_f,pivot_dt1: {params(rows=0),defaults({main(rows=0&q=*%3A*&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_tl&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_tdt1&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Ddense_pivot_y_s&_test_min=16&_test_miss=true&_test_sort=index),extra(fq=-pivot_b%3A%5B*+TO+*%5D)})} expected:<17> but was:<22>\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudPivotFacet -Dtests.method=test -Dtests.seed=4FE0B7EDE128DBAA -Dtests.slow=true -Dtests.locale=ga -Dtests.timezone=America/Detroit -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 34.7s J10 | TestCloudPivotFacet.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: {main(facet=true&facet.pivot=%7B%21stats%3Dst2%7Dpivot_f%2Cdense_pivot_i1&facet.pivot=pivot_f%2Cdense_pivot_x_s1%2Cbogus_not_in_any_doc_s&facet.limit=13&facet.pivot.mincount=5&facet.missing=true&facet.sort=index&facet.overrequest.count=0&facet.overrequest.ratio=0),extra(rows=0&q=*%3A*&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_x_s1&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_i1&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Dpivot_dt1&_test_min=5&_test_miss=true&_test_sort=index)} ==> pivot_f,dense_pivot_i1: {params(rows=0),defaults({main({main(rows=0&q=*%3A*&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_x_s1&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_i1&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Dpivot_dt1&_test_min=5&_test_miss=true&_test_sort=index),extra(fq=%7B%21term+f%3Dpivot_f%7D0.33333334)}),extra(fq=-dense_pivot_i1%3A%5B*+TO+*%5D)})} expected:<6> but was:<7>\n\n\n ",
            "id": "comment-14640773"
        },
        {
            "date": "2015-07-24T17:34:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1692552 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1692552 ]\n\nSOLR-7804: Fix test bug where it was randomly generating 2 identical facet.pivot params w/o realizing it ",
            "id": "comment-14640775"
        },
        {
            "date": "2015-07-24T17:40:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1692554 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1692554 ]\n\nSOLR-7804: Fix test bug where it was randomly generating 2 identical facet.pivot params w/o realizing it (merge r1692552) ",
            "id": "comment-14640785"
        },
        {
            "date": "2015-07-24T18:40:17+0000",
            "author": "Hoss Man",
            "content": "Confirmed the facet.missing count discrepency is a definite code bug, and split it off into it's own issue (SOLR-7829)\n\nWill resolve this issue once that fix is in place and i confirm these seeds start working again. ",
            "id": "comment-14640899"
        },
        {
            "date": "2015-07-24T20:35:04+0000",
            "author": "Steve Rowe",
            "content": "I looked through recent failures on my Jenkins for more seeds, and found no more seeds for the previously identified failure modes (I don't think anyway).  I found two that look like they trigger an OOM (I'll give info in a following comment), and one that looks like another test bug (rounding/no epsilon?) - branch_5x / r1692571 / Java8:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudPivotFacet -Dtests.method=test -Dtests.seed=2701C0115CD1BF95 -Dtests.slow=true -Dtests.locale=ja_JP -Dtests.timezone=Asia/Riyadh -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 46.9s | TestCloudPivotFacet.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: {main(facet=true&facet.pivot=%7B%21stats%3Dst1%7Dpivot_y_s1%2Cdense_pivot_y_s%2Cdense_pivot_ti1&facet.limit=9&facet.sort=index),extra(rows=0&q=id%3A%5B*+TO+304%5D&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_tf1&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_x_s&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Ddense_pivot_ti1&_test_sort=index)} ==> Sum of sk1 => pivot_y_s1,dense_pivot_y_s,dense_pivot_ti1: {params(rows=0),defaults({main(rows=0&q=id%3A%5B*+TO+304%5D&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_tf1&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_x_s&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Ddense_pivot_ti1&_test_sort=index),extra(fq=%7B%21term+f%3Dpivot_y_s1%7Dh)})} expected:<-1.2722582464444444E9> but was:<-1.2722582464444442E9>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([2701C0115CD1BF95:AF55FFCBF22DD26D]:0)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:286)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.test(TestCloudPivotFacet.java:233)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:963)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:938)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.lang.AssertionError: Sum of sk1 => pivot_y_s1,dense_pivot_y_s,dense_pivot_ti1: {params(rows=0),defaults({main(rows=0&q=id%3A%5B*+TO+304%5D&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_tf1&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dpivot_x_s&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Ddense_pivot_ti1&_test_sort=index),extra(fq=%7B%21term+f%3Dpivot_y_s1%7Dh)})} expected:<-1.2722582464444444E9> but was:<-1.2722582464444442E9>\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertNumerics(TestCloudPivotFacet.java:738)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotStats(TestCloudPivotFacet.java:394)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotData(TestCloudPivotFacet.java:344)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:307)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:276)\n   [junit4]    > \t... 42 more\n\n ",
            "id": "comment-14641036"
        },
        {
            "date": "2015-07-24T21:20:19+0000",
            "author": "Steve Rowe",
            "content": "About the OOM failure mode: I don't have time to fully investigate ATM (and it's not clear that this is directly as a result of TestCloudPivotFacet or pivot faceting), but here's the only Jenkins job I still have (the other one was removed after X builds had been run) - one of these two (forget which one) reproduced for me, even with -Xmx2g : http://jenkins.sarowe.net/job/Lucene-Solr-tests-5.x-Java8/744/\n\n\n   [junit4]   2> 604839 ERROR (qtp1541684701-1973) [n:127.0.0.1:52056_i%2Fi c:collection1 s:shard1 r:core_node4 x:collection1] o.a.s.s.SolrDispatchFilter null:java.lang.RuntimeException: java.lang.OutOfMemoryError: GC overhead limit exceeded\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudPivotFacet -Dtests.method=test -Dtests.seed=758FAB738FCA688C -Dtests.slow=true -Dtests.locale=in -Dtests.timezone=Africa/Libreville -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR    471s J2  | TestCloudPivotFacet.test <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: init query failed: {main(facet=true&facet.pivot=%7B%21stats%3Dst2%7Dpivot_f1%2Cpivot_tdt%2Cpivot_tl&facet.pivot=%7B%21stats%3Dst2%7Dpivot_tdt%2Cpivot_y_s%2Cdense_pivot_i1&facet.limit=17&facet.offset=7&facet.missing=true&facet.overrequest.count=5),extra(rows=0&q=id%3A%5B*+TO+351%5D&fq=id%3A%5B*+TO+717%5D&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Ddense_pivot_y_s1&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Ddense_pivot_y_s1&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Dpivot_tdt&_test_miss=true)}: No live SolrServers available to handle this request:[http://127.0.0.1:55265/i/i/collection1, http://127.0.0.1:52056/i/i/collection1]\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([758FAB738FCA688C:FDDB94A921360574]:0)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:255)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.test(TestCloudPivotFacet.java:228)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:963)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:938)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: org.apache.solr.client.solrj.SolrServerException: No live SolrServers available to handle this request:[http://127.0.0.1:55265/i/i/collection1, http://127.0.0.1:52056/i/i/collection1]\n\n\n\nThe other one I only have an email from Jenkins, which doesn't include the repro line, but has the seed in the stack trace:\n\n\njava.lang.RuntimeException: init query failed: {main(facet=true&facet.pivot=%7B%21stats%3Dst3%7Dpivot_dt1%2Cpivot_x_s%2Cpivot_i&facet.pivot=%7B%21stats%3Dst1%7Dpivot_z_s%2Cpivot_y_s%2Cpivot_x_s&facet.limit=17&facet.offset=5&facet.pivot.mincount=314&facet.missing=false&facet.sort=count&facet.overrequest.ratio=1.4131997),extra(rows=0&q=*%3A*&fq=id%3A%5B*+TO+235%5D&stats=true&stats.field=%7B%21key%3Dsk1+tag%3Dst1%2Cst2%7Dpivot_z_s&stats.field=%7B%21key%3Dsk2+tag%3Dst2%2Cst3%7Dbogus_not_in_any_doc_s&stats.field=%7B%21key%3Dsk3+tag%3Dst3%2Cst4%7Dpivot_l1&_test_min=314&_test_miss=false&_test_sort=count)}: No live SolrServers available to handle this request:[http://127.0.0.1:56936/collection1, http://127.0.0.1:50452/collection1]\n\tat __randomizedtesting.SeedInfo.seed([2CA9EAEEE4A8D506:A4FDD5344A54B8FE]:0)\n\tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:255)\n\n ",
            "id": "comment-14641088"
        },
        {
            "date": "2015-07-28T21:01:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1693160 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1693160 ]\n\nSOLR-7804: fix test bug that caused incorrect epsilon comparisons when expected value is negative.  also fix bug in \"test the test\" sanity checks of epsilon comparisons ",
            "id": "comment-14645038"
        },
        {
            "date": "2015-07-28T21:04:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1693162 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1693162 ]\n\nSOLR-7804: fix test bug that caused incorrect epsilon comparisons when expected value is negative.  also fix bug in \"test the test\" sanity checks of epsilon comparisons (merge r1693160) ",
            "id": "comment-14645040"
        },
        {
            "date": "2015-07-28T21:08:55+0000",
            "author": "Hoss Man",
            "content": "There was definitely an epsilon bug when dealing with expected values that were negative ... unrelated to that, while update the sanity check of the epsilon assertion function i realized all the existing sanity checks where flawed (it expected an assert which was then ignored for being \"correct\", but if we didn't get the assert we expected, it threw a new assert ... which the same catch block ignored.)\n\n\n\nThe OOM situation is tricky ... basically some random permutations are just the worst of all possible worlds (max# of facet.pivot params, max# fields in each pivot, sparse fields that need lots of refinement, max randomized facet.offset, max randomized facet.limit, max randomized overrequest, stats on all pivots, etc...)   I need to figure out how to tweak things so that if one set of params are already \"worst case\" then other param randomization is dialed back \u2013 I don't just wan to hobble all the randomization to be small enough that it still works in the wosrt case situation.\n\ni'll think about this a bit more.... ",
            "id": "comment-14645048"
        },
        {
            "date": "2017-06-14T09:18:14+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I found another failure while testing some changes recently. Then I managed to reproduce the same failure on stock master. I can reproduce the failure with the same seed 1/3 times.\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudPivotFacet -Dtests.method=test -Dtests.seed=DAF5E62F5FF49AE9 -Dtests.slow=true -Dtests.locale=be -Dtests.timezone=Europe/Skopje -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 23.5s | TestCloudPivotFacet.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: {main(facet=true&facet.pivot={!stats%3Dst2}dense_pivot_i&facet.limit=8&facet.offset=3&facet.sort=index),extra(rows=0&q=*:*&fq=id:[*+TO+581]&stats=true&stats.field={!key%3Dsk1+tag%3Dst1,st2}pivot_tdt1&stats.field={!key%3Dsk2+tag%3Dst2,st3}pivot_z_s&stats.field={!key%3Dsk3+tag%3Dst3,st4}pivot_f&_test_sort=index)} ==> Stddev of sk1 => dense_pivot_i: {params(rows=0),defaults({main(rows=0&q=*:*&fq=id:[*+TO+581]&stats=true&stats.field={!key%3Dsk1+tag%3Dst1,st2}pivot_tdt1&stats.field={!key%3Dsk2+tag%3Dst2,st3}pivot_z_s&stats.field={!key%3Dsk3+tag%3Dst3,st4}pivot_f&_test_sort=index),extra(fq={!term+f%3Ddense_pivot_i}24)})} expected:<16921.32243846995> but was:<23930.363685772376>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([DAF5E62F5FF49AE9:52A1D9F5F108F711]:0)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:297)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.test(TestCloudPivotFacet.java:244)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:985)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:960)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:748)\n   [junit4]    > Caused by: java.lang.AssertionError: Stddev of sk1 => dense_pivot_i: {params(rows=0),defaults({main(rows=0&q=*:*&fq=id:[*+TO+581]&stats=true&stats.field={!key%3Dsk1+tag%3Dst1,st2}pivot_tdt1&stats.field={!key%3Dsk2+tag%3Dst2,st3}pivot_z_s&stats.field={!key%3Dsk3+tag%3Dst3,st4}pivot_f&_test_sort=index),extra(fq={!term+f%3Ddense_pivot_i}24)})} expected:<16921.32243846995> but was:<23930.363685772376>\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertNumerics(TestCloudPivotFacet.java:748)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotStats(TestCloudPivotFacet.java:407)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotData(TestCloudPivotFacet.java:355)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:318)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:287)\n   [junit4]    > \t... 42 more\n\n ",
            "id": "comment-16048908"
        },
        {
            "date": "2018-10-31T15:27:48+0000",
            "author": "Steve Rowe",
            "content": "Another failure from https://builds.apache.org/job/Lucene-Solr-NightlyTests-7.x/363, reproduces for me 10/10 iterations:\n\n\nChecking out Revision e8503da7c43b8ff3eb968c631ca2ac718a2c736b (refs/remotes/origin/branch_7x)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudPivotFacet -Dtests.method=test -Dtests.seed=E8745FA6D96CE260 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/jenkins-slave/workspace/Lucene-Solr-NightlyTests-7.x/test-data/enwiki.random.lines.txt -Dtests.locale=ko-KR -Dtests.timezone=Pacific/Samoa -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 37.2s J1 | TestCloudPivotFacet.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: {main(facet=true&facet.pivot={!stats%3Dst0}bogus_not_in_any_doc_s&facet.pivot={!stats%3Dst2}pivot_z_s1,pivot_x_s,pivot_tdt&facet.limit=15&facet.missing=true&facet.sort=index&facet.overrequest.count=0),extra(rows=0&q=*:*&stats=true&stats.field={!key%3Dsk1+tag%3Dst1,st2}pivot_d&stats.field={!key%3Dsk2+tag%3Dst2,st3}pivot_dt1&stats.field={!key%3Dsk3+tag%3Dst3,st4}pivot_z_s&_test_miss=true&_test_sort=index)} ==> Stddev of sk2 => pivot_z_s1,pivot_x_s,pivot_tdt: {params(rows=0),defaults({main({main(rows=0&q=*:*&stats=true&stats.field={!key%3Dsk1+tag%3Dst1,st2}pivot_d&stats.field={!key%3Dsk2+tag%3Dst2,st3}pivot_dt1&stats.field={!key%3Dsk3+tag%3Dst3,st4}pivot_z_s&_test_miss=true&_test_sort=index),extra(fq={!term+f%3Dpivot_z_s1}a)}),extra(fq={!term+f%3Dpivot_x_s}b)})} expected:<0.0> but was:<20724.30287367949>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([E8745FA6D96CE260:6020607C77908F98]:0)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:292)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.test(TestCloudPivotFacet.java:239)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:1010)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:985)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:748)\n   [junit4]    > Caused by: java.lang.AssertionError: Stddev of sk2 => pivot_z_s1,pivot_x_s,pivot_tdt: {params(rows=0),defaults({main({main(rows=0&q=*:*&stats=true&stats.field={!key%3Dsk1+tag%3Dst1,st2}pivot_d&stats.field={!key%3Dsk2+tag%3Dst2,st3}pivot_dt1&stats.field={!key%3Dsk3+tag%3Dst3,st4}pivot_z_s&_test_miss=true&_test_sort=index),extra(fq={!term+f%3Dpivot_z_s1}a)}),extra(fq={!term+f%3Dpivot_x_s}b)})} expected:<0.0> but was:<20724.30287367949>\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertNumerics(TestCloudPivotFacet.java:743)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotStats(TestCloudPivotFacet.java:402)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotData(TestCloudPivotFacet.java:350)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:313)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:324)\n   [junit4]    > \tat org.apache.solr.cloud.TestCloudPivotFacet.assertPivotCountsAreCorrect(TestCloudPivotFacet.java:282)\n   [junit4]    > \t... 42 more\n[...]\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {dense_pivot_y_s=FSTOrd50, multiDefault=FSTOrd50, pivot_x_s=PostingsFormat(name=Memory), pivot_b1=FSTOrd50, pivot_x_s1=PostingsFormat(name=Direct), pivot_y_s=FSTOrd50, pivot_z_s=PostingsFormat(name=MockRandom), pivot_y_s1=PostingsFormat(name=Memory), pivot_z_s1=FSTOrd50, id=PostingsFormat(name=MockRandom), dense_pivot_x_s1=PostingsFormat(name=Direct), pivot_b=PostingsFormat(name=MockRandom), dense_pivot_y_s1=PostingsFormat(name=Memory), dense_pivot_x_s=PostingsFormat(name=MockRandom)}, docValues:{pivot_dt1=DocValuesFormat(name=Direct), dense_pivot_i1=DocValuesFormat(name=Asserting), pivot_l1=DocValuesFormat(name=Lucene70), range_facet_l_dv=DocValuesFormat(name=Asserting), multiDefault=DocValuesFormat(name=Direct), pivot_f1=DocValuesFormat(name=Direct), intDefault=DocValuesFormat(name=Lucene70), pivot_d1=DocValuesFormat(name=Lucene70), pivot_x_s=DocValuesFormat(name=Memory), pivot_b1=DocValuesFormat(name=Direct), pivot_dt=DocValuesFormat(name=Asserting), dense_pivot_ti1=DocValuesFormat(name=Asserting), range_facet_l=DocValuesFormat(name=Lucene70), pivot_y_s=DocValuesFormat(name=Direct), pivot_x_s1=DocValuesFormat(name=Lucene70), pivot_z_s=DocValuesFormat(name=Asserting), dense_pivot_ti=DocValuesFormat(name=Lucene70), pivot_z_s1=DocValuesFormat(name=Direct), pivot_tl1=DocValuesFormat(name=Direct), id=DocValuesFormat(name=Asserting), intDvoDefault=DocValuesFormat(name=Memory), dense_pivot_x_s1=DocValuesFormat(name=Lucene70), timestamp=DocValuesFormat(name=Lucene70), pivot_td1=DocValuesFormat(name=Direct), dense_pivot_y_s=DocValuesFormat(name=Direct), pivot_tdt=DocValuesFormat(name=Memory), pivot_i1=DocValuesFormat(name=Asserting), pivot_tf1=DocValuesFormat(name=Lucene70), pivot_td=DocValuesFormat(name=Asserting), pivot_tf=DocValuesFormat(name=Memory), pivot_f=DocValuesFormat(name=Asserting), pivot_ti=DocValuesFormat(name=Lucene70), pivot_tl=DocValuesFormat(name=Asserting), pivot_i=DocValuesFormat(name=Direct), _version_=DocValuesFormat(name=Lucene70), pivot_l=DocValuesFormat(name=Memory), pivot_y_s1=DocValuesFormat(name=Memory), id_i1=DocValuesFormat(name=Direct), pivot_ti1=DocValuesFormat(name=Memory), range_facet_i_dv=DocValuesFormat(name=Lucene70), dense_pivot_i=DocValuesFormat(name=Direct), pivot_b=DocValuesFormat(name=Asserting), pivot_tdt1=DocValuesFormat(name=Lucene70), pivot_d=DocValuesFormat(name=Memory), dense_pivot_y_s1=DocValuesFormat(name=Memory), dense_pivot_x_s=DocValuesFormat(name=Asserting)}, maxPointsInLeafNode=1001, maxMBSortInHeap=7.105595273305583, sim=RandomSimilarity(queryNorm=false): {}, locale=ko-KR, timezone=Pacific/Samoa\n   [junit4]   2> NOTE: Linux 4.4.0-137-generic amd64/Oracle Corporation 1.8.0_172 (64-bit)/cpus=4,threads=1,free=228378136,total=520617984\n\n ",
            "id": "comment-16670242"
        },
        {
            "date": "2018-11-01T19:07:32+0000",
            "author": "Hoss Man",
            "content": "Ok ... so here's what's happening in both the seed sarowe mentioned, (and I believe the failure shalin mentioned a year ago that i didn't notice at the time)...\n\nWhen I wrote this test way way back, I knew & recognized that when dealing with floating point values, the order that the docs were collected in a shard, and the intermediate stats (sum & sumOfSquares) were accumulated from multiple shards, could intoduce subtle variations in the final values \u2013 the classic \"due to precision loss, the order of a sequence of additions of flots|doubles matters\"\n\nI even tried to be smart, and wrote the test to expect a bit of epsillon when looking at stats on Doubles and Floats.\n\nWhat I forgot at the time was that when computing stats for Date fields, floating point intermediate values are used (because the sum|sumOfSquares for a lot of big longs can easily overflow a long) ... so while the final \"mean\" value may be a Date object, the \"millisSinceEpoch\" used to build that date comes from a (long)(((double)sum)/((long)count))\n\nI also didn't account for the fact that my \"pick an epsilon based on the magnitude of the expected value\" wasn't going to work well when the expected value is \"0.0\".\n\nI could update the test to make the Date comparisons also use an epsilon and be lossy to account for hte intermediate floating point math, and update the epsilon calculation for things like stddev to be based on the min/max ... but ultimatley i think we should just completely remove the checks of lossy stats ....\n\nThis test really isn't about stats. It tries to verify that stats computed on pivot facet buckets match equivilent stats for queries against those bucket constraints because it wants to ensure the delegation of pivot faceting to stats works \u2013 but this same type of subtle inconsistentcies that cause these failures can exist if you just did a top level stats request against a query (w/o using faceting) over and over and get differnet replica orders on the distributed merge.\n\nSo i think what makes sense is to simplify the test and only bother collecting the basic stats that should never be lossy (count, missing, min, max) regardless of field type, and disable the other stats.\u00a0 that will give us plenty of sanity checking that hanging stats on pivots works correctly.\n\nI'll work this up, hammer on it, and commit ASAP. ",
            "id": "comment-16672035"
        },
        {
            "date": "2018-11-02T05:06:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a807cd234b6a8c148a90c1418ee56d31e872f533 in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a807cd2 ]\n\nSOLR-7804: remove problematic assertions on lossy stats.field values that aren't fundemental to the purpose of the test anyway\n\n(cherry picked from commit 1e0e8d45e5f30ed08853db1e8a941ef82c6977a4) ",
            "id": "comment-16672571"
        },
        {
            "date": "2018-11-02T05:06:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1e0e8d45e5f30ed08853db1e8a941ef82c6977a4 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1e0e8d4 ]\n\nSOLR-7804: remove problematic assertions on lossy stats.field values that aren't fundemental to the purpose of the test anyway ",
            "id": "comment-16672572"
        }
    ]
}