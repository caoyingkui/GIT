{
    "id": "LUCENE-1101",
    "title": "TokenStream.next(Token) reuse 'policy': calling Token.clear() should be responsibility of producer.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "2.3",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Tokenizers which implement the reuse form of the next method:\n    next(Token result) \nshould reset the postionIncrement of the returned token to 1.",
    "attachments": {
        "lucene-1101.patch": "https://issues.apache.org/jira/secure/attachment/12372233/lucene-1101.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-12-26T22:07:39+0000",
            "content": "Simple patch fixing this.\nPlaning to commit this shortly if no objections. ",
            "author": "Doron Cohen",
            "id": "comment-12554471"
        },
        {
            "date": "2007-12-26T22:14:51+0000",
            "content": "Resetting tokens (including the position) is currently handled via Token.clear() before the consumer reuses a token. ",
            "author": "Yonik Seeley",
            "id": "comment-12554473"
        },
        {
            "date": "2007-12-26T22:20:11+0000",
            "content": "I think I checked that and found that Token.clear() is too strong to be invoked in those cases, but let me check again... ",
            "author": "Doron Cohen",
            "id": "comment-12554474"
        },
        {
            "date": "2007-12-26T22:43:05+0000",
            "content": "In what cases?  The protocol we are currently using requires that the caller of next(token) provide a suitably initialized token (positionIncrement defaults to 1, payload removed, etc). ",
            "author": "Yonik Seeley",
            "id": "comment-12554481"
        },
        {
            "date": "2007-12-26T22:44:15+0000",
            "content": "Currently Token.clear() is used only for un-tokenized fields in DocmentsWriter - Tokenizer implementations of next(Token) do not call it.\nI think they can be modified to call it (instead of explicitly reseting just the pos-incr).\nBut since these methods already set the value for start-offset, calling these method might eat the speed-up gained by reusing tokens.\nBut then again, shouldn't tokenizers also reset the payload info? (seems wrong to assume there there's no payload in the input reusable token.)\nSo I guess the right thing to do is to call clear() in all toknizers (3 actually) - will work that path.\n ",
            "author": "Doron Cohen",
            "id": "comment-12554482"
        },
        {
            "date": "2007-12-26T23:06:51+0000",
            "content": "Updated patch - Tokenizers now calling clear() as suggested.\nThis seems cleaner - Token manages its data members that should get cleared, so if more data members are added to Token in the future only Token.clear() needs to be updated - thanks Yonik!\nAll core tests pass. ",
            "author": "Doron Cohen",
            "id": "comment-12554487"
        },
        {
            "date": "2007-12-27T04:53:28+0000",
            "content": "Currently Token.clear() is used only for un-tokenized fields in DocmentsWriter\n\nI think it's used for both tokenized and un-tokenized.... see line1319.\nIt seems redundant to call clear() in both the consumer (DocumentsWriter) and producer (Tokenizer).\n ",
            "author": "Yonik Seeley",
            "id": "comment-12554520"
        },
        {
            "date": "2007-12-27T06:37:46+0000",
            "content": "\nI think it's used for both tokenized and un-tokenized.... see line1319.\nIt seems redundant to call clear() in both the consumer (DocumentsWriter) and producer (Tokenizer).\n\nYou're right again Yonik, I missed line 1319.\n\nBut I think it would be cleaner/safer to move the responsibility to clear() from consumers to producers.\n(Producer being the deepest tokenstream in the call sequence, the one that would instantiate a new Token if it implemented next()).\n\nOtherwise you get bugs like the one I had in testStopPositons() in the patch for LUCENE-1095: \nThe test chains two stop filters:\n\n\ta = WhiltSpaceAnalyzer().\n\tf1 = StopFilter(a)\n\tf2 = StopFilter(f1)\n\n\n\nNow the test itself calls next().\nStopFilter implements only next(Token).\nSo this is the sequence we get:\n\n\ttest call f2.next()\n\tTokenSteam next() calls t2.next(new Token())\n\tt2.next(r) calls t1.next(r) repeatedly (until r not stopped).\n\tt1.next(r) calls a.ts.next(r) repeatedly (until r not stopped).\n\n\n\nThe cause for the bug was that when t1 returns a token r, it may have set r's pos_incr to something other than1. But when t2 calls t1 again (because t2 stopped r), that pos_incr should have bean cleared to 1. Now this can also be fixed by changing StopFilter to clear() before every call to t1.next(r), except for the first time it calls ts.next(), because for the first call it can assume that its consumer already cleared r. Since most words are not stopped, this distinction between first call to successive calls is important, performance wise.\n\nNow, this is a little complicated (and not only because of my writing style : - ) ), \nand so I think moving the clear() responsibility to the (deep most) producer would make things more simple and safe.  ",
            "author": "Doron Cohen",
            "id": "comment-12554533"
        },
        {
            "date": "2007-12-29T11:07:06+0000",
            "content": "\nBut I think it would be cleaner/safer to move the responsibility to clear() from consumers to producers.\n\n+1\n\nSo, the contract of next(Token) is: if you are the source of Tokens, you must call Token.clear() before setting the fields in it & returning it. ",
            "author": "Michael McCandless",
            "id": "comment-12554908"
        },
        {
            "date": "2007-12-30T06:25:45+0000",
            "content": "Thanks Mike, I'll remove the call from DocumentsWriter and updated the javadocs accordingly. ",
            "author": "Doron Cohen",
            "id": "comment-12554980"
        },
        {
            "date": "2007-12-30T06:27:20+0000",
            "content": "Updated patch calling Token.clear() only by producers and javadocs updated as discussed. ",
            "author": "Doron Cohen",
            "id": "comment-12554981"
        },
        {
            "date": "2007-12-30T07:36:47+0000",
            "content": "Committed, thanks for the reviews Yonik & Mike! ",
            "author": "Doron Cohen",
            "id": "comment-12554982"
        }
    ]
}