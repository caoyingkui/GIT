{
    "id": "SOLR-4497",
    "title": "Collection Aliasing.",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We should bring back the old aliasing feature, but for SolrCloud and with the ability to alias one collection to many.\n\nThe old alias feature was of more limited use and had some problems, so we dropped it, but I think we can do this in a more useful way with SolrCloud, and at a level were it's not invasive to the CoreContainer.\n\nInitially, the search side will allowing mapping a single alias to multiple collections, but the index side will only support mapping a single alias to a single collection.",
    "attachments": {
        "CDH-4497.patch": "https://issues.apache.org/jira/secure/attachment/12572418/CDH-4497.patch",
        "SOLR-4497.patch": "https://issues.apache.org/jira/secure/attachment/12570693/SOLR-4497.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13585539",
            "date": "2013-02-24T23:48:18+0000",
            "content": "Here is a patch for an initial pass. \n\n\n\tThere are two new actions for the collections api, createalias and deletealias.\n\tcreatealias is also currently used to update.\n\tOn the search side you can map from one alias to multiple collections\n\tOn the update side, only a one to one mapping will work.\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13589563",
            "date": "2013-02-28T14:31:43+0000",
            "content": "I'd like to get this into 4.2, so I'll commit so that it can start baking and hopefully I can get some more feedback. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13593918",
            "date": "2013-03-05T21:14:00+0000",
            "content": "We should also strive for 100% visibility of an alias once the call returns.\nFor example, one should be able to script a call to create an alias and then immediately use it w/o worrying about some nodes not seeing it yet.\nThe easiest way to implement this would be to re-read the aliases from ZK on any \"miss\". "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13593945",
            "date": "2013-03-05T21:40:26+0000",
            "content": "Okay, I'll look into that. "
        },
        {
            "author": "Tim Vaillancourt",
            "id": "comment-13594340",
            "date": "2013-03-06T04:14:56+0000",
            "content": "What about the case where the alias already exists, but just has a new destination (no alias miss)? Can/should the call return success on the change reaching Zookeeper, or the running alias on all nodes? I'd prefer the later but I expect that may be a significant amount of work. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13595013",
            "date": "2013-03-06T19:26:32+0000",
            "content": "Good point Tim. I imagine I will have to setting for the former initially, but def thinking about how to deal with that case. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13595084",
            "date": "2013-03-06T20:43:07+0000",
            "content": "how to deal with that case.\n\nSo, it's not really as solid a solution as I'd like, but I've handled it this way:\n\nThe Overseer that actually writes the new Alias will wait until it locally gets pinged by ZK and gets the latest Aliases. It then waits a small fudge factor for other nodes that may get updated slightly behind and returns. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13595212",
            "date": "2013-03-06T22:34:42+0000",
            "content": "New patch.\n\n\n\tAdditional testing\n\tFixes the case when the node you are hitting does not have a piece of the first collection in your alias list\n\tUpdates aliases and does a retry on alias miss\n\tTries to wait for alias changes as mentioned in my comment above.\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13595229",
            "date": "2013-03-06T22:47:05+0000",
            "content": "I'm ready to commit this soon - I'd like to get it in for 4.2. "
        },
        {
            "author": "Tim Vaillancourt",
            "id": "comment-13595530",
            "date": "2013-03-07T04:16:55+0000",
            "content": "I think that is a good start. The change wouldn't be 100% immediate on return of the call, but designing the client/app to expect this could be ok. If there was a STATUS call on the Cores API that could detail the node's running alias, one could write an external script to \"check\" that the change made it everywhere.\n\nThis lead me to wondering (again without understanding implications and design goals) would it be best to have the Overseer push the change to all nodes (and write to ZK) vs relying only on the change in ZK, which has delays. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13595572",
            "date": "2013-03-07T05:47:44+0000",
            "content": "Okay - committing the current state now.\n\nThis lead me to wondering (again without understanding implications and design goals) would it be best to have the Overseer push the change to all nodes (and write to ZK) vs relying only on the change in ZK, which has delays.\n\nI think this is something we should consider. It actually came up before with the clusterstate.json as well - I think we are actually okay with how that works currently though, but it may make sense to have the overseer to distribute this. Let's make a new JIRA issue and investigate it as a future improvement. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13595577",
            "date": "2013-03-07T05:56:49+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1453687\n\nSOLR-4497: Collection Aliasing. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13595587",
            "date": "2013-03-07T06:08:14+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1453691\n\nSOLR-4497: Collection Aliasing. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653718",
            "date": "2013-05-10T10:32:46+0000",
            "content": "Closed after release. "
        }
    ]
}