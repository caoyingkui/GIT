{
    "id": "LUCENE-1437",
    "title": "Faster skipTo on SegmentTermEnum",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "2.4",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "I've been trying to speed up function I have that involves calling TermEnum.skipTo a lot on a very large index with many terms.\nThis patch avoids excessive object creation of Term objects as part of the default implementation in the TermEnum base class.\n\nMy tests output with this patch was as follows:\n    Took 1894 ms for 42304 calls to skipTo on index with 182693176 docs \nand unmodified Lucene 2.4 results were:\n    Took 2438 ms for 42304 calls to skipTo on index with 182693176 docs \n\nThe logic is based on the existing code in SegmentTermEnum. scanTo(Term term) and avoids the object construction code found in the TermEnum.skipTo code which repeatedly calls next() and term() to create Term objects.\n\nAnyone see any negative side effects in changing this?",
    "attachments": {
        "fasterSkip.patch": "https://issues.apache.org/jira/secure/attachment/12393252/fasterSkip.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-11-03T14:27:05+0000",
            "content": "Patch to SegmentTermEnum to override slow TermEnum.skipTo ",
            "author": "Mark Harwood",
            "id": "comment-12644729"
        },
        {
            "date": "2008-11-04T10:41:17+0000",
            "content": "This may now be a valid optimisation but without a use case.\nI have subsequently found that I can get significantly better performance repeatedly calling IndexReader.docFreq(term) for a large ordered list of terms than I can calling TermEnum.skipTo(term) and then TermEnum.docFreq().\n\nI can't find anywhere else that uses TermEnum.skipTo so this optimisation now seems somewhat redundant. ",
            "author": "Mark Harwood",
            "id": "comment-12644938"
        },
        {
            "date": "2008-11-04T11:34:24+0000",
            "content": "Also, I'm [trying to] refactor this code in working on flexible indexing.  So I think for now at least it's low priority to fix this. ",
            "author": "Michael McCandless",
            "id": "comment-12644946"
        },
        {
            "date": "2008-11-04T18:37:24+0000",
            "content": "I can't find anywhere else that uses TermEnum.skipTo so this optimisation now seems somewhat redundant.\n\nRight, it does a linear scan, so it's normally best avoided.  It would probably be nice if it could somehow use the index as IndexReader.terms(term) does when it returns a new TermEnum. ",
            "author": "Yonik Seeley",
            "id": "comment-12645033"
        },
        {
            "date": "2011-01-25T19:37:32+0000",
            "content": "skipTo() was never implemented effective. It was always recommended to get a new TermEnum when seeking was needed. In 2.9, skipTo() was deprecated and removed in Lucene 3.0.\n\nIn Lucene trunk (4.0), the new class TermsEnum supports seeking. ",
            "author": "Uwe Schindler",
            "id": "comment-12986641"
        }
    ]
}