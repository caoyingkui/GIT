{
    "id": "SOLR-176",
    "title": "Add detailed timing data to query response output",
    "details": {
        "affect_versions": "1.2",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "see http://www.nabble.com/%27accumulate%27-copyField-for-faceting-tf3329986.html",
    "attachments": {
        "dtiming.patch": "https://issues.apache.org/jira/secure/attachment/12352657/dtiming.patch",
        "RequesthandlerBase.patch": "https://issues.apache.org/jira/secure/attachment/12357541/RequesthandlerBase.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12477439",
            "date": "2007-03-02T20:43:42+0000",
            "content": "If possible, it would also be nice to include the change in cache sizes from the beginning to the end of the request.  This would help optimize cache sizes for faceting.\n\nthanks "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12477446",
            "date": "2007-03-02T21:07:37+0000",
            "content": "Well, we could provide deltas of all the solr statistics, but I'm not sure if it provides much benefit over watching the stats page before and after executing a query.\n\nWhat might be more useful if for the facet code to detect facet-cache-thrashing (evictions ~= insertions), and emit a performance warning in the logfile. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12478162",
            "date": "2007-03-05T21:22:25+0000",
            "content": "A quick version for people to play with.  Includes a new timing class, plus timing data inserted into the dismax handler.\n "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12478164",
            "date": "2007-03-05T21:24:18+0000",
            "content": "Same version with ASF license.  Output format looks like:\n\n<lst name=\"timing\">\n  <double name=\"debug\">13.0</double>\n  <double name=\"main query\">1.0</double>\n  <double name=\"time\">19.0</double>\n  <double name=\"setup/query parsing\">5.0</double>\n  <double name=\"pre fetch\">0.0</double>\n</lst>\n\n(Note that RTimer supports aritrary nesting of timers) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12478252",
            "date": "2007-03-06T02:06:48+0000",
            "content": "works great for me.  thanks!\n\nnesting timers is really nice. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12482289",
            "date": "2007-03-20T02:03:10+0000",
            "content": "Anyone else have an opinion on timing?  It would be easy for me to wrap StandardRequestHandler similarly and commit.\n\nIf I add a test or two and put a warning about RTimer being not part of the official solr programmable api, then backward concerns should be limited to the response output.  (Otherwise it is likely necessary to think about the design of the RTimer api). "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12482550",
            "date": "2007-03-20T22:00:34+0000",
            "content": "i don't have any strong opinions, but i agree with your plan about putting some warnings in the RTTimer javadocs.\n\nRandom thought: it might be cleaner/easier in the long run to create/register a hog Handler that records timing differences and add calls to Logger.entering and Logger.exiting on the various methods.\n\nsomeone may have already implemented such a Handler "
        },
        {
            "author": "Will Johnson",
            "id": "comment-12496565",
            "date": "2007-05-17T13:41:35+0000",
            "content": "added some average stats to RequestHandlerBase.  all of the same info can be obtained by parsing the log files but having it show up on the admin screens and jmx is simple and nice to have.  stats added: avgTimePerRequest and avgRequestsPerSecond. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12505391",
            "date": "2007-06-15T22:05:30+0000",
            "content": "\n\tapplies with trunk.\n\tadded timing info to StandardRequestHandler\n\n\n\nI think this will make lots of sense in the context of  search components:\nhttp://www.nabble.com/search-components-%28plugins%29-tf3898040.html "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12505393",
            "date": "2007-06-15T22:10:01+0000",
            "content": "Might it then make sense to wait until the search component thing is done?  Auto-timing everything would be easy. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12505395",
            "date": "2007-06-15T22:17:18+0000",
            "content": "Will's RequesthandlerBase.patch addition is simple, straightforward, useful - i will add that now. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12505397",
            "date": "2007-06-15T22:23:31+0000",
            "content": "> \n> Might it then make sense to wait until the search component thing is done?  Auto-timing everything would be easy.\n> \n\nYes, i think so.  but this is still useful for debuging in the meantime. (as a patch)\n\nWill's addition is independent, it adds average timing info to RequestHandler statistics "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12505400",
            "date": "2007-06-15T22:32:39+0000",
            "content": "added javadocs for RTimer.java, and removed a superfluous line from SRH.java "
        },
        {
            "author": "Will Johnson",
            "id": "comment-12506539",
            "date": "2007-06-20T13:50:22+0000",
            "content": "a slightly more ambitious patch that tracks: \n\n\n\ttotal number of requests/errors\n\trequests/errors in the current interval (interval defined in solrconfig)\n\trequets/errors as of the start of the last interval\n\tavg requet times for total / current interval\n\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12541913",
            "date": "2007-11-12T19:40:02+0000",
            "content": "Committed as part of SOLR-281 "
        }
    ]
}