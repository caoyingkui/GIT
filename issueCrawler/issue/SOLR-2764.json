{
    "id": "SOLR-2764",
    "title": "Create a NorwegianLightStemmer and NorwegianMinimalStemmer",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We need a simple light-weight stemmer and a minimal stemmer for plural/singlular only in Norwegian",
    "attachments": {
        "SOLR-2764.patch": "https://issues.apache.org/jira/secure/attachment/12512182/SOLR-2764.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13104468",
            "date": "2011-09-14T12:44:45+0000",
            "content": "One idea is try the Hunspell stemmer and modify the .aff file to only do plural/singular of nouns "
        },
        {
            "author": "Chris Male",
            "id": "comment-13104479",
            "date": "2011-09-14T13:15:10+0000",
            "content": "I don't know much about Norwegian, but I think its best to follow the same model as the other light / minimal stemmers.  They are incredibly efficient, targeted and easy to understand. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13104539",
            "date": "2011-09-14T14:50:57+0000",
            "content": "Unfortunately the rules for Noun conjugation is much more complex in Norwegian than English, and there are many irregularities. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13104577",
            "date": "2011-09-14T15:38:42+0000",
            "content": "I would leave the irregularities out (e.g. just like our english one basically 'strips the s)'.\nsomeone can always deal with exceptions with their own list: stemmerOverrideFilter etc\n\ni dont know anything about norwegian but you can take the other languages as examples here, \nand create the ruleset for the most common nominal inflections... e.g. strip \n{ -a, -ene, -en, -er, -et }\n  \nor whatever. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13194859",
            "date": "2012-01-27T15:44:38+0000",
            "content": "First attempt at a NorwegianLightStemmer, adapted from the Swedish one.\n\nCan someone come up with a larger test corups? Not sure if I got all the rules yet. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13194874",
            "date": "2012-01-27T16:02:50+0000",
            "content": "Looks nice to me actually. I can't tell from the test data what you are using already (binary file),\nbut a few suggestions for testing (this was the process I used before):\n\n\n\tthe existing actual+expected testdata for the light stemmers were generated by running the C implementations against snowball vocabulary sets,\nI took the vocabulary files from snowball (the voc.txt in TestSnowballVocabData.zip), and ran the original implementations over them \nand created expected output. This is just a broad check that our implementation does the same thing as the original C one.\nI'm not sure how great of a vocabulary set that is for norwegian though.\n\n\n\n\n\tin this case, you don't actually have an existing evaluated impl you are trying to conform to, so this test is not so useful,\nexcept to check for PorterStemmer-type JRE crashes and to ensure any future refactorings aren't changing the algorithm (breaking index back compat).\n\n\n\nPersonally at a glance this looks pretty conservative and nice, but I think since there is no published algorithm to refer to, it might be nice\nto add some notes to the Stemmer's java file describing some high level stuff, and also some individual tests that are just examples showing what it does.\n\nTake a look at Latvian (lv) for an example. In this case the algorithm is not exactly what was published in the referred phd thesis,\nI did actually implement the original algorithm but my tests found it to be extremely aggressive... so its similar to your case I think. "
        },
        {
            "author": "Christian Moen",
            "id": "comment-13194909",
            "date": "2012-01-27T16:50:39+0000",
            "content": "Jan, could you attach nolighttestdata.zip?  Many thanks. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13195318",
            "date": "2012-01-28T01:11:06+0000",
            "content": "Thanks for reviewing.\n\nYou're right - we don't have a reference implementation or corpus that we can validate against, so forking the Swedish LightStemmer was perhaps a bit optimistic. So it needs some more love \n\nThen I created a NorwegianMinimalStemmer only for nouns and -s endings. It is much simpler to hand-craft and it works pretty well to my taste \n\nSince the test dictionary is small, I changed it into plaintext rather than .zip, so now both dictionaries are in the patch. "
        },
        {
            "author": "Christian Moen",
            "id": "comment-13195451",
            "date": "2012-01-28T07:51:43+0000",
            "content": "I added a few entries to the tests, including some irregular ones, to validate and illustrate how the stemmer works in these cases.  Jan, looks good to me.  +1 "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13195820",
            "date": "2012-01-29T19:05:19+0000",
            "content": "Thanks Christian. I further refined stuff:\n\n\n\tI think the MinimalStemmer is more or less good to go, it seems to do what it's supposed to\n\tFor LightStemmer, we now do \"two-pass\" removal for the -dom and -het endings. This means that the word \"kristendom\" will first be stemmed to \"kristen\", and then all the general rules apply so it will be further stemmed to \"krist\". The effect of this is that both \"kristen,kristendom,kristendommen,kristendommens\" will all be stemmed to \"krist\" (due to in this case incorrect interpretation of -en as singular definite ending).\n\tAdded some more tests to highlight this\n\n\n\nWhat do you think, is this -dom -het thing a reasonable improvement or could there be side effects?\n\nAre there some other general rules that could easily be incorporated to catch semi-regular conjugations for the light stemmer? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13195863",
            "date": "2012-01-29T22:35:53+0000",
            "content": "just some general suggestions:\n\nin a light stemmer, i would be wary of derivational endings. \nit seems in the case of dom/het because its dealing with adj/noun that its\non the edge (maybe ok here), but if possible it would be more ideal to\navoid multiple passes... this is the kind of thing that causes snowball problems.\n\nCan you think of examples for dom/het where the meaning would be changed?\n\nfor example: \"freedom\" is used the same way in english, but stemming this \nto \"free\" is very lossy, since free has a variety of meanings (such as costs nothing), \nsome of which are incompatible with \"freedom\". This is the danger of stripping\nderivational suffixes... "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13199227",
            "date": "2012-02-02T21:12:06+0000",
            "content": "When looking at words enging in -het and -dom in dictionaries (such as Ooo nb_NO.dic), the base word has the same meaning in the vast majority of cases. But of course there will be exceptions. Take the word \"brennhet\" (het as in hot), it will be stemmed to \"brenn\" -> \"bren\" which is kind of wrong, but then \"bren\" is not a valid word so it won't cause errors. There may be such cases where the final stem clashes with another word, but not more than the base rules. I.e. there is a Norwegian surname \"Brenna\" which will be stemmed to \"brenn\" by the \"-a\" rule, believing it's a fem.definite ending, and then we get a clash with the verb \"brenn\" (burn). And the first name \"Tore\" (boy) or \"Tora\" (girl) will be stemmed to \"Tor\" (boy) which is another valid first name...\n\nMy hunch is that the -dom/-het rules make more good than wrong. Mainly because in the majority of cases it leads to the base word and the -het/-dom word being stemmed to the same stem in cases where the \"-en/-et/-a/-e/-n\" rule are applied wrongly. Example:\n\n\nOne pass                       Two passes\nforlegen        forleg         forlegen        forleg\nforlegenhet     forlegen       forlegenhet     forleg\nforlegenheten   forlegen       forlegenheten   forleg\nforlegenhetens  forlegen       forlegenhetens  forleg\nfirkantet       firkant        firkantet       firkant\nfirkantethet    firkantet      firkantethet    firkant\nfirkantetheten  firkantet      firkantetheten  firkant\n\n\n\nBut I think maybe the rules -dommer and -dommen should be removed, because the word dommer (judge) and dommen (the sentence) are both common words valid in word endings. So the word \"linjedommer\" (linesman) would be stemmed to \"linje\" (line) which is too aggressive.\n\nI see that it soon gets complicated to try to be clever. Should we go back to the one-pass again for the light stemmer? Christian? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13199235",
            "date": "2012-02-02T21:22:04+0000",
            "content": "Jan, i wasn't trying to be critical about these endings, because of course some of the existing light stemmers\nhave a few selected derivational endings that are taken care of. And thats really what its all about,\nwhen we are talking about something like adjective->noun, I didnt mean to say we shouldn't do it, because\nit sounds quite reasonable: but we should explore the options.\n\nFor example, as an alternative to multi-pass, a 'less elegant to some' but really practical way to go about it\ncan be to 'multiply through' and convert the possibilities to single-pass.\n\nE.g. the typical 'undrinkables' hunspell example: if i have the english inflectional plural ending -s and the \nderivational ending -able, instead of:\n\n\tpass 1: remove inflectional endings (e.g. -s)\n\tpass 2: remove derivational endings (e.g. -able)\n\n\n\nwe just take all the pass 2 endings that are compatible with pass 1 endings and cross-multiply, to make a single\npass algorithm. some won't be compatible, (so we won't combine -able + -s into -ables).\n\nI'm not sure if this is helpful for the norwegian case as I'm not as familiar with it, just an idea. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13228345",
            "date": "2012-03-13T12:03:46+0000",
            "content": "Will try to prepare a new patch for this when time allows, with one-pass. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13231796",
            "date": "2012-03-17T01:45:58+0000",
            "content": "Updated patch with single-pass -het -dom. Tests adjusted and passes. Think this is ready now. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13233396",
            "date": "2012-03-20T13:24:09+0000",
            "content": "Committed to trunk and branch_3x "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13233472",
            "date": "2012-03-20T15:11:37+0000",
            "content": "Very nice work Jan! "
        }
    ]
}