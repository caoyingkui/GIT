{
    "id": "SOLR-9352",
    "title": "matchAllDocsQuery instead of WildCardQuery from lucene qp with df and *",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10,                                            5.4",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Hi,\n    I'm surprised by lucene query parser translating this query\n\nhttp://localhost:8983/solr/collection1/select?df=id&q=*\n\nin\n<str name=\"parsedquery\">MatchAllDocsQuery(:)</str>\nI was expecting it to execute: \"id:*\"\n\nthe problem seems to be in\nin o.a.s.parser.SolrQueryParserBase:\n\nthe field is not set explicity but in the df, so getExplicitField returns null\n// called from parser\nprotected Query getWildcardQuery(String field, String termStr) throws SyntaxError {\n  checkNullField(field);\n  // : -> MatchAllDocsQuery\n  if (\"*\".equals(termStr)) {\n    if (\"*\".equals(field) || getExplicitField() == null) \n{\n      return newMatchAllDocsQuery();\n    }\n  }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-07-29T23:39:52+0000",
            "author": "Hoss Man",
            "content": "See linked issue for justification of this behavior.\n\nMy comments from recent mailing list thread that evidently sparked the creation of this jira...\n\n\nthat behavior was intentionally added becaus most users kept getting \nreally confused by the older default behavion (which was previously a \n0-length prefix against hte default search field)\n\n        https://issues.apache.org/jira/browse/SOLR-2996\n\nif you do in fact whant a 0-length prefix query against hte default search \nfield...\n\n* use the prefix parser:  q={!prefix f=$df v=''}\n* use an explicit field name: q=yourDefaultField:*\n\n...if you just want all fields that contain any terms in your default \nfield, use the \"fieldName:[* TO *]\" range syntax (which should be more \nefficient ... although it's possible \"fieldName:*\" was also optimized to \nbe as efficient ... i can't remember)\n\n\n\n\n\n\nIn my opinion this jira should be \"Won't Fixed\" ",
            "id": "comment-15400246"
        }
    ]
}