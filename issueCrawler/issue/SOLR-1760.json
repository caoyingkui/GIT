{
    "id": "SOLR-1760",
    "title": "convert synonymsfilter to new tokenstream API",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "This is the other non-trival tokenstream to convert to the new API. I looked at this again today, and think I have a design where it will be nice and efficient.\n\nif you have ideas or are already looking at it, please comment!! I havent started coding and we shouldn't duplicate any efforts.\n\nhere is my current design:\n\n\n\tadd a variable 'maximumContext' to SynonymMap. This is simply the maximum singleMatch.size(), its the maximum number of tokens lookahead that is ever needed.\n\tsave/restoreState/cloning can be minimized by using a stack (fixed array of maximumContext) of references to the SynonymMap submaps. This way we can backtrack efficiently for multiword matches without save/restoreState and less comparisons.\n\ttwo queues (can be fixed arrays of maximumContext) are needed still for placing state objects. the first is those that have been evaluated (always empty in the case of !preserveOriginal), and the second is those that havent yet been evaluated, but are queued due to lookahead.\n\n\n\ni plan on coding this up soon, if you have a better idea or have started work, please comment.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Lance Norskog",
            "id": "comment-13292200",
            "date": "2012-06-09T06:06:11+0000",
            "content": "This issue is obsolete. "
        }
    ]
}