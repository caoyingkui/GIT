{
    "id": "SOLR-7808",
    "title": "MorphlineGoLiveMiniMRTest fails using YARN",
    "details": {
        "components": [
            "contrib - MapReduce"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Cannot Reproduce",
        "priority": "Major"
    },
    "description": "[junit4]    > Throwable #1: java.io.IOException: Failed on local exception: java.io.IOException: Connection reset by peer; Host Details : local host is: \"drob-rhel/172.25.10.46\"; destination host is: \"drob-rhel\":52807; \n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([4D93EC191980246A:C5C7D3C3B77C4992]:0)\n   [junit4]    > \tat org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:772)\n   [junit4]    > \tat org.apache.hadoop.ipc.Client.call(Client.java:1472)\n   [junit4]    > \tat org.apache.hadoop.ipc.Client.call(Client.java:1399)\n   [junit4]    > \tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:232)\n   [junit4]    > \tat com.sun.proxy.$Proxy111.getClusterMetrics(Unknown Source)\n   [junit4]    > \tat org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl.getClusterMetrics(ApplicationClientProtocolPBClientImpl.java:202)\n   [junit4]    > \tat org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:187)\n   [junit4]    > \tat org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:102)\n   [junit4]    > \tat com.sun.proxy.$Proxy112.getClusterMetrics(Unknown Source)\n   [junit4]    > \tat org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.getYarnClusterMetrics(YarnClientImpl.java:461)\n   [junit4]    > \tat org.apache.hadoop.mapred.ResourceMgrDelegate.getClusterMetrics(ResourceMgrDelegate.java:151)\n   [junit4]    > \tat org.apache.hadoop.mapred.YARNRunner.getClusterMetrics(YARNRunner.java:179)\n   [junit4]    > \tat org.apache.hadoop.mapreduce.Cluster.getClusterStatus(Cluster.java:246)\n   [junit4]    > \tat org.apache.hadoop.mapred.JobClient$3.run(JobClient.java:719)\n   [junit4]    > \tat org.apache.hadoop.mapred.JobClient$3.run(JobClient.java:717)\n   [junit4]    > \tat java.security.AccessController.doPrivileged(Native Method)\n   [junit4]    > \tat javax.security.auth.Subject.doAs(Subject.java:422)\n   [junit4]    > \tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1628)\n   [junit4]    > \tat org.apache.hadoop.mapred.JobClient.getClusterStatus(JobClient.java:717)\n   [junit4]    > \tat org.apache.solr.hadoop.MapReduceIndexerTool.run(MapReduceIndexerTool.java:645)\n   [junit4]    > \tat org.apache.solr.hadoop.MapReduceIndexerTool.run(MapReduceIndexerTool.java:608)\n   [junit4]    > \tat org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70)\n   [junit4]    > \tat org.apache.solr.hadoop.MorphlineGoLiveMiniMRTest.test(MorphlineGoLiveMiniMRTest.java:400)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:960)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:935)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.io.IOException: Connection reset by peer\n   [junit4]    > \tat sun.nio.ch.FileDispatcherImpl.write0(Native Method)\n   [junit4]    > \tat sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)\n   [junit4]    > \tat sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)\n   [junit4]    > \tat sun.nio.ch.IOUtil.write(IOUtil.java:65)\n   [junit4]    > \tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)\n   [junit4]    > \tat org.apache.hadoop.net.SocketOutputStream$Writer.performIO(SocketOutputStream.java:63)\n   [junit4]    > \tat org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:142)\n   [junit4]    > \tat org.apache.hadoop.net.SocketOutputStream.write(SocketOutputStream.java:159)\n   [junit4]    > \tat org.apache.hadoop.net.SocketOutputStream.write(SocketOutputStream.java:117)\n   [junit4]    > \tat java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)\n   [junit4]    > \tat java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)\n   [junit4]    > \tat java.io.DataOutputStream.flush(DataOutputStream.java:123)\n   [junit4]    > \tat org.apache.hadoop.ipc.Client$Connection$3.run(Client.java:1030)\n   [junit4]    > \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n   [junit4]    > \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n   [junit4]    > \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n   [junit4]    > \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n   [junit4]    > \t... 1 more\n\n\n\nWhich is\n\n    int mappers = new JobClient(job.getConfiguration()).getClusterStatus().getMaxMapTasks(); // MR1\n    //int mappers = job.getCluster().getClusterStatus().getMapSlotCapacity(); // Yarn only\n\n\n\nThen later, this segment would fail:\n\n    int reducers = new JobClient(job.getConfiguration()).getClusterStatus().getMaxReduceTasks(); // MR1\n    //reducers = job.getCluster().getClusterStatus().getReduceSlotCapacity(); // Yarn only",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-07-17T17:50:50+0000",
            "author": "Mike Drob",
            "content": "ant test  -Dtestcase=MorphlineGoLiveMiniMRTest -Dtests.method=test -Dtests.seed=4D93EC191980246A -Dtests.nightly=true -Dtests.slow=true -Dtests.locale=sr_BA -Dtests.timezone=Europe/Zaporozhye -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1 to reproduce. ",
            "id": "comment-14631664"
        },
        {
            "date": "2015-07-18T03:38:25+0000",
            "author": "Mike Drob",
            "content": "Can somebody else run this command and tell me if they are able to reproduce or not?\n\nI haven't seen Jenkins complain but saw the same failure locally on both Ubuntu 14.04 (java/ant/etc downloaded + installed manually) and CentOS 7 (everything installed via yum). ",
            "id": "comment-14632245"
        },
        {
            "date": "2015-07-30T20:11:16+0000",
            "author": "Mike Drob",
            "content": "No longer seems to be an issue... some other change in the past 2 weeks might have taken care of it. ",
            "id": "comment-14648229"
        }
    ]
}