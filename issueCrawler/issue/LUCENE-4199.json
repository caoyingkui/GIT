{
    "id": "LUCENE-4199",
    "title": "Add ANT tool to track/disallow \"forbidden\" method invocations",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-BETA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In LUCENE-3877 Greg Bowyer has some asm.jar-based code to inspe ct class files for System.out/err class. I wanted to modify this code to run it in a jar-linter task on ant, so all compiled class files are parsed and method/ctor calls to e.g. new String(byte[]) without charset are forbidden. We would add a list of method signatures that we dont want to have (new FileReader(File), commons.IOUtils.loadFileToString()) and this linter will throw BuildException after static inspection, if any class file in Lucene/Solr (including line numbers) uses any method call.\n\nGreg's code would be changed to use visitMethodInsn visitor, very easy.",
    "attachments": {
        "LUCENE-4199.patch": "https://issues.apache.org/jira/secure/attachment/12535370/LUCENE-4199.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-06T08:37:58+0000",
            "content": "I still think an aspectj pass would be nicer... but I'll live with asm. It would be faster too. ",
            "author": "Dawid Weiss",
            "id": "comment-13407812"
        },
        {
            "date": "2012-07-06T09:10:57+0000",
            "content": "Or we could use PMD or FindBugs. ",
            "author": "Chris Male",
            "id": "comment-13407847"
        },
        {
            "date": "2012-07-06T09:30:19+0000",
            "content": "They're sooooooo slow  ",
            "author": "Dawid Weiss",
            "id": "comment-13407861"
        },
        {
            "date": "2012-07-06T09:42:54+0000",
            "content": "And aspectj is bloated and asm is inflexible and requires a lot of boilerplate  ",
            "author": "Chris Male",
            "id": "comment-13407864"
        },
        {
            "date": "2012-07-06T09:50:35+0000",
            "content": "This is a good idea!\n\nSimilar to default Charset, there are also trappy methods that use default Locale, i would like to detect these too (there would be some to fix): String.toLowerCase(), etc etc ",
            "author": "Robert Muir",
            "id": "comment-13407870"
        },
        {
            "date": "2012-07-06T09:55:34+0000",
            "content": "And aspectj is bloated and asm is inflexible and requires a lot of boilerplate \n\nThere are pros and cons of every choice, I don't deny it. My experience with pmd/ findbugs is that they're painfully slow. So I'd opt for a custom fast scanner if it were to become part of the regular build pipeline or aspectj if it were to become part of a nightly/ jenkins run. Everybody has his favorite toys  ",
            "author": "Dawid Weiss",
            "id": "comment-13407871"
        },
        {
            "date": "2012-07-06T11:02:30+0000",
            "content": "If I would not have been outside for ice cream, the non bloated fast version would already have been finished . Working... (one-handed)\n\nI come back in a microsecond! ",
            "author": "Uwe Schindler",
            "id": "comment-13407888"
        },
        {
            "date": "2012-07-06T15:02:18+0000",
            "content": "Very rough patch for testing and it already found 75 errors: \n\n\nvalidate2:\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\java\\org\\apache\\lucene\\analysis\\br\\BrazilianStemmer.class, source line 246\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\java\\org\\apache\\lucene\\analysis\\de\\GermanStemmer.class, source line 50\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\sinks\\TestTeeSinkTokenFilter.class, source line 167\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toUpperCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\sinks\\TestTeeSinkTokenFilter.class, source line 183\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toUpperCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharArraySet.class, source line 261\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toUpperCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharArraySet.class, source line 308\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toUpperCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharArraySet.class, source line 354\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharTokenizers.class, source line 56\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharTokenizers.class, source line 73\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharTokenizers.class, source line 87\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharTokenizers.class, source line 87\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharTokenizers.class, source line 101\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\common\\classes\\test\\org\\apache\\lucene\\analysis\\util\\TestCharTokenizers.class, source line 101\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toUpperCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\java\\org\\egothor\\stemmer\\Compile.class, source line 92\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\java\\org\\egothor\\stemmer\\Compile.class, source line 130\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\java\\org\\egothor\\stemmer\\DiffIt.class, source line 101\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toUpperCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\test\\org\\egothor\\stemmer\\TestCompile.class, source line 110\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\test\\org\\egothor\\stemmer\\TestCompile.class, source line 127\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\test\\org\\egothor\\stemmer\\TestCompile.class, source line 135\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\test\\org\\egothor\\stemmer\\TestCompile.class, source line 135\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\test\\org\\egothor\\stemmer\\TestCompile.class, source line 146\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\analysis\\stempel\\classes\\test\\org\\egothor\\stemmer\\TestCompile.class, source line 146\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\benchmark\\classes\\java\\org\\apache\\lucene\\benchmark\\byTask\\feeds\\EnwikiContentSource$Parser.class, source line 149\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\benchmark\\classes\\java\\org\\apache\\lucene\\benchmark\\byTask\\tasks\\TaskSequence.class, source line 490\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\benchmark\\classes\\java\\org\\apache\\lucene\\benchmark\\byTask\\utils\\Algorithm.class, source line 162\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\document\\TestBinaryDocument.class, source line 40\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([BII)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\document\\TestBinaryDocument.class, source line 65\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\document\\TestBinaryDocument.class, source line 78\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([B)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\document\\TestBinaryDocument.class, source line 97\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\index\\TestPayloads.class, source line 46\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\index\\TestPayloads.class, source line 76\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\index\\TestPayloads.class, source line 99\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\index\\TestPayloads.class, source line 100\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics$SimplePayloadFilter.class, source line 84\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 414\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 429\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 430\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 442\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 443\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 444\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 473\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 474\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 475\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestBasics.class, source line 476\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestPayloadSpans$PayloadFilter.class, source line 508\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestPayloadSpans$PayloadFilter.class, source line 510\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([B)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestPayloadSpans.class, source line 279\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([B)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestPayloadSpans.class, source line 314\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([B)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestPayloadSpans.class, source line 350\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([B)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestPayloadSpans.class, source line 386\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([B)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\core\\classes\\test\\org\\apache\\lucene\\search\\spans\\TestPayloadSpans.class, source line 458\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([BII)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\facet\\classes\\test\\org\\apache\\lucene\\facet\\taxonomy\\writercache\\cl2o\\TestCharBlockArray.class, source line 45\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([BII)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\facet\\classes\\test\\org\\apache\\lucene\\facet\\taxonomy\\writercache\\cl2o\\TestCharBlockArray.class, source line 54\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([BII)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\facet\\classes\\test\\org\\apache\\lucene\\facet\\taxonomy\\writercache\\cl2o\\TestCharBlockArray.class, source line 63\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#<init>([BII)V\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\facet\\classes\\test\\org\\apache\\lucene\\facet\\taxonomy\\writercache\\cl2o\\TestCompactLabelToOrdinal.class, source line 49\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\classic\\QueryParserBase.class, source line 661\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\classic\\QueryParserBase.class, source line 662\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\classic\\QueryParserBase.class, source line 938\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\classic\\QueryParserBase.class, source line 967\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\classic\\QueryParserBase.class, source line 1001\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\classic\\QueryParserBase.class, source line 1021\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\core\\nodes\\QueryNodeImpl.class, source line 154\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\core\\nodes\\QueryNodeImpl.class, source line 158\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\core\\nodes\\QueryNodeImpl.class, source line 163\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\core\\nodes\\QueryNodeImpl.class, source line 167\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\core\\util\\UnescapedCharSequence.class, source line 151\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\core\\util\\UnescapedCharSequence.class, source line 155\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\standard\\parser\\EscapeQuerySyntaxImpl.class, source line 53\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\standard\\parser\\EscapeQuerySyntaxImpl.class, source line 76\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\java\\org\\apache\\lucene\\queryparser\\flexible\\standard\\parser\\EscapeQuerySyntaxImpl.class, source line 181\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#getBytes()[B\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\queryparser\\classes\\test\\org\\apache\\lucene\\queryparser\\xml\\builders\\TestNumericRangeFilterBuilder.class, source line 206\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\suggest\\classes\\java\\org\\apache\\lucene\\search\\suggest\\jaspell\\JaspellTernarySearchTrie.class, source line 215\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\suggest\\classes\\java\\org\\apache\\lucene\\search\\suggest\\jaspell\\JaspellTernarySearchTrie.class, source line 245\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\suggest\\classes\\java\\org\\apache\\lucene\\search\\suggest\\jaspell\\JaspellTernarySearchTrie.class, source line 385\n[forbidden-method-calls] Forbidden method invocation: java/lang/String#toLowerCase()Ljava/lang/String;\n[forbidden-method-calls]   in C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build\\suggest\\classes\\java\\org\\apache\\lucene\\search\\suggest\\jaspell\\JaspellTernarySearchTrie.class, source line 766\n[forbidden-method-calls] Scanned 4959 class file(s) for forbidden method invocations (in 2.45s.), 75 error(s).\n\nBUILD FAILED\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\build.xml:179: The following error occurred while executing this line:\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr0\\lucene\\tools\\custom-tasks.xml:70: Check for forbidden method calls failed, see log.\n\n\n\nfor this simple list of methods:\n\n\naddConstructor(String.class, byte[].class);\naddConstructor(String.class, byte[].class, int.class);\naddConstructor(String.class, byte[].class, int.class, int.class);\naddConstructor(String.class, byte[].class, int.class, int.class, int.class);\naddMethod(String.class, \"getBytes\");\naddMethod(String.class, \"toLowerCase\");\naddMethod(String.class, \"toUpperCase\");\n\n\n\nFurther improvements coming:\n\nI prefer to make the method declarations type safe, so the TASK needs all classes with illegal methods in classpath. For Lucene this is no problem, as it only uses JDK classes.\nIn Solr, we should also add commons.io to this classpath, as lots of tests and core classes use the horrible IOUtils methods to converty binary files to strings or copy InputStreams to Strings. I will think about a more dynamic syntax to declare method invocations, than the above hardcoded java code.\n\nThe task is simply called on a FileSet of .class files, currently like all other linters from top-level only. ",
            "author": "Uwe Schindler",
            "id": "comment-13408047"
        },
        {
            "date": "2012-07-06T23:14:42+0000",
            "content": "Patch with full-featured ANT task and advanced list of methods:\n\n\n\tText-based method declarations are in separate text file(s) provided by <methodFileSet/>, inline as CDATA, or with methodFile-attribute\n\tSupport for <classpath/>, classpath attribute, or classpathRef attribute (used for parsing the method files - Solr uses this to point the parser to commons-io.jar)\n\tinner fileset points to all */.class files to validate\n\n\n\nCurrently the task is on top-level in Solr and Lucene and depends on compilation of tests (including core). It could maybe be per-module, but this may cause PermGen problems.\n\nCurrently not run automatically, list of methods should be extended. But we already have too many violations! ",
            "author": "Uwe Schindler",
            "id": "comment-13408438"
        },
        {
            "date": "2012-07-06T23:15:59+0000",
            "content": "Executing the linter by: ant check-forbidden-methods (top-level, solr, or lucene) ",
            "author": "Uwe Schindler",
            "id": "comment-13408441"
        },
        {
            "date": "2012-07-07T06:51:20+0000",
            "content": "+1 for top-level only. Can we make it a dependency of validate? ",
            "author": "Dawid Weiss",
            "id": "comment-13408593"
        },
        {
            "date": "2012-07-07T11:30:34+0000",
            "content": "New patch with improvements:\n\n\n\tUse ASM-4.0 with generics support (asm-debug-all).\n\tAdd licence and notice files.\n\tSeparate the 2 tasks and make validate task depend on licenses and forbidden task.\n\tRename to \"forbidden-api\". The revised version now supports discouraging whole classes (FileReader, FileWriter), so not all ctors must be explicitely listed. The ant target only doing the API checks is now \"ant check-forbidden-apis\".\n\tMore compact output (format of class file and line numbers like in Java Stack traces).\n\n\n\nI think it's ready to commit, we may only disable some of the classes that are forbidden until fixed. We may also add option to not fail the build, but warn only.  ",
            "author": "Uwe Schindler",
            "id": "comment-13408628"
        },
        {
            "date": "2012-07-07T11:33:17+0000",
            "content": "\nWe may also add option to not fail the build, but warn only. \n\nLets please not do this. Nobody ever does anything about warnings. ",
            "author": "Robert Muir",
            "id": "comment-13408630"
        },
        {
            "date": "2012-07-07T11:38:42+0000",
            "content": "I agree with Robert, this seems like something we should force devs to care about. ",
            "author": "Chris Male",
            "id": "comment-13408633"
        },
        {
            "date": "2012-07-07T11:40:40+0000",
            "content": "If you care about something at all, fix it across the entire codebase and then make hudson fail on it.\n\nThen it will stay fixed. Otherwise you are fighting a losing battle. ",
            "author": "Robert Muir",
            "id": "comment-13408635"
        },
        {
            "date": "2012-07-07T11:41:30+0000",
            "content": "fix charset bug in notice file as noted by Robert in chat  die,die,die ",
            "author": "Uwe Schindler",
            "id": "comment-13408637"
        },
        {
            "date": "2012-07-07T11:47:44+0000",
            "content": "Lemme get some coffee made, I say lets create subtasks and fix all this crap and lock it into hudson  ",
            "author": "Robert Muir",
            "id": "comment-13408640"
        },
        {
            "date": "2012-07-07T12:04:44+0000",
            "content": "Here is a heavy committing branch: https://svn.apache.org/repos/asf/lucene/dev/branches/lucene4199 ",
            "author": "Robert Muir",
            "id": "comment-13408645"
        },
        {
            "date": "2012-07-07T12:09:12+0000",
            "content": "Thanks! Thats helkpful.\n\nI found in the PMD and FindBugs projects list of APIs:\n\n\thttp://old.nabble.com/Default-charset-detector-td16231149.html [we can copypaste!]\n\n\n\nActually findbugs has a plugin to do that but PMD has not yet resolved the issue at all. So my detector which is horribly fast is the best we get at the moment (http://sourceforge.net/tracker/?func=detail&atid=479921&aid=2978603&group_id=56262). ",
            "author": "Uwe Schindler",
            "id": "comment-13408647"
        },
        {
            "date": "2012-07-07T12:55:06+0000",
            "content": "I think I am working to make the list shorter at the same time Uwe is working to make it longer! ",
            "author": "Robert Muir",
            "id": "comment-13408655"
        },
        {
            "date": "2012-07-07T13:25:40+0000",
            "content": "LOL, I stopped adding new ones. I just heavy committed some fixes in the list, too! ",
            "author": "Uwe Schindler",
            "id": "comment-13408668"
        },
        {
            "date": "2012-07-07T13:52:38+0000",
            "content": "I wanted to run the checker under solr, but I got this error:\n\ncheck-forbidden-apis:\n\nBUILD FAILED\n/home/rmuir/workspace/lucene-trunk/solr/build.xml:194: No method found with following signature: org.apache.commons.io.IOUtils#toInputStream(java.lang.CharSequence)\n\nTotal time: 26 seconds\n\n\n\nDo you know whats up? ",
            "author": "Robert Muir",
            "id": "comment-13408673"
        },
        {
            "date": "2012-07-07T14:00:56+0000",
            "content": "I know the problem: its because i have apache-rat-0.8.jar in my .ant/lib\n\nThis contains an embedded older commons-io that does not have this method.\n\nI wonder if the checker can ignore ant's classpath? ",
            "author": "Robert Muir",
            "id": "comment-13408676"
        },
        {
            "date": "2012-07-07T14:18:42+0000",
            "content": "I removed rat from my .ant/lib, for now its working.\n\nI have an issue somewhere to make rat work via ivy-download, for some reason i could not make that work. \nWe should revisit it sometime. Anyway ignore these problems, its not your problem  ",
            "author": "Robert Muir",
            "id": "comment-13408681"
        },
        {
            "date": "2012-07-08T07:52:10+0000",
            "content": "This looks good enough to be useful as a stand-alone utility (or part of rat), actually. Minor comment \u2013\n\n\n-  <path id=\"classpath\"/>\n+  <path id=\"classpath\">\n+    <fileset dir=\"lib\">\n+      <include name=\"asm-debug-all-4.0.jar\"/>\n+    </fileset>\n+  </path>\n\n\n\nwe could probably change this to use ivycache; one place less to update versions, etc. I used two different ivy configs for junit4 - you can do a similar thing here if needed. ",
            "author": "Dawid Weiss",
            "id": "comment-13408869"
        },
        {
            "date": "2012-07-09T14:45:49+0000",
            "content": "Here is the final patch for trunk merged from our heavy committing branch.\n\nThanks to Robert for doing all the work in fixing Lucene and Solr.\n\nSolr's DIH is currently exclude from the checks because of SOLR-1916.\n\nWe will commit this now, as it may get outdated fast. We need to backport after that. ",
            "author": "Uwe Schindler",
            "id": "comment-13409532"
        },
        {
            "date": "2012-07-09T14:57:41+0000",
            "content": "+1. Ill do a check under lucene/ to ensure everything is passing with UTF-16 default charset.\n\nWe cant check this yet for solr/ because of http://jira.codehaus.org/browse/JETTY-1532 ",
            "author": "Robert Muir",
            "id": "comment-13409542"
        },
        {
            "date": "2012-07-09T15:04:24+0000",
            "content": "Committed trunk revision: 1359202\n\nNow backporting! ",
            "author": "Uwe Schindler",
            "id": "comment-13409545"
        },
        {
            "date": "2012-07-09T15:14:31+0000",
            "content": "UTF-16 tests passed on my windows box. So we are ok on trunk!\n\nOn branch_4x i think the fixes are easy: just some deprecated stuff. No errors in solr. ",
            "author": "Robert Muir",
            "id": "comment-13409555"
        },
        {
            "date": "2012-07-09T15:47:38+0000",
            "content": "Committed 4.x revision: 1359229\n\nThanks Robert for the hard work in assisting a one-armed guy  ",
            "author": "Uwe Schindler",
            "id": "comment-13409584"
        },
        {
            "date": "2012-07-11T23:16:14+0000",
            "content": "hoss20120711-manual-post-40alpha-change ",
            "author": "Hoss Man",
            "id": "comment-13412342"
        },
        {
            "date": "2012-07-13T10:39:03+0000",
            "content": "I just wanted to add my recent blog post on this issue as further documentation: http://blog.thetaphi.de/2012/07/default-locales-default-charsets-and.html ",
            "author": "Uwe Schindler",
            "id": "comment-13413644"
        }
    ]
}