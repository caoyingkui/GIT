{
    "id": "SOLR-2288",
    "title": "clean up compiler warnings",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "there's a ton of compiler warning in the solr tree, and it's high time we cleaned them up, or annotate them to be suppressed so we can start making a bigger stink when/if code is added to the tree thta produces warnings (we'll never do a good job of noticing new warnings when we have ~175 existing ones)\n\nUsing this issue to track related commits\n\nThe goal of this issue should not be to change any functionality or APIs, just deal with each warning in the most appropriate way;\n\n\n\tfix generic declarations\n\tadd SuppressWarning anotation if it's safe in context",
    "attachments": {
        "SOLR-2288_namedlist.patch": "https://issues.apache.org/jira/secure/attachment/12466386/SOLR-2288_namedlist.patch",
        "warning.cleanup.patch": "https://issues.apache.org/jira/secure/attachment/12466281/warning.cleanup.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12971511",
            "date": "2010-12-15T01:07:17+0000",
            "content": "here's a patch i worked up a bit today ... i started by trying to focus on the facet code, and then started bouncing around to areas where NamedList was being used w/o a bounds on the generic, but i know even with that i'm missing some.\n\ni'm posting this here in the hoops that the generics policeman (et. al.) will help give it a once over review \u2013 assuming the general approach taken here doesn't raise any red flags with anyone in the next day or so, i'll commit and continue on with similar easy fixes arround the tree w/o bothering to post patches to jira (since this type of patch tends to get stale quickly and leads to a lot of pain trying to keep up to date) "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12972093",
            "date": "2010-12-16T14:59:56+0000",
            "content": "Hi Hoss Man, thanks for starting this issue.\n\nI looked at your patch, and personally I think NamedList should really be type-safe.\nIf users want to use it in a type-unsafe way, thats fine, but the container itself shouldn't be List<Object>.\n\nHere's an initial patch (all tests pass)... it also removes the deprecated methods. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12972107",
            "date": "2010-12-16T15:23:46+0000",
            "content": "Robert: as mentioned, i'm trying to keep a narrow focus on this issue: dealing with warnings that can be cleaned up w/o changing functionality...\n\nThe goal of this issue should not be to change any functionality or APIs, just deal with each warning\n\n...can we please confine discusions of changing the implementation of NamedList (or any other classes) to distinct issues?  like SOLR-912? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12972108",
            "date": "2010-12-16T15:27:41+0000",
            "content": "Robert: as mentioned, i'm trying to keep a narrow focus on this issue: dealing with warnings that can be cleaned up w/o changing functionality...\n\nOk but i didnt change the functionality? the functionality is the same, just the implementation is different.\n\nThis is the root cause of most of the compiler warnings, let's not dodge the issue.\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12972114",
            "date": "2010-12-16T15:37:42+0000",
            "content": "just the implementation is different.\n\nfair enough \u2013 i ment i was trying to avoid changes to either the APIs or the internals, just focusing on the quick wins that were easy to review at a glance and shouldn't affect the bytecode (Collection<Object> instead of Collection; etc...)\n\nI don't expect that all compiler warnings can be dealt with using trivial patches, but that's what i was trying to focus on in this issue.\n\nchanges to the internals of specific classes seem like they should be tracked in distinct issues with more visibility "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12972116",
            "date": "2010-12-16T15:40:44+0000",
            "content": "For compiler warnings... without chaning the API, can we just use:  NamedList<?>  rather then bind it explicitly to Object? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12972121",
            "date": "2010-12-16T15:53:33+0000",
            "content": "Separately, i just want to say the following about NamedList:\n\nAll uses of this API should really be reviewed. I'm quite aware that it warns you about the fact that its slow for certain operations,\nbut in my opinion these slow operations such as get(String, int) should be deprecated and removed.\n\nAny users that are using NamedList in this way, especially in loops, are very likely using the wrong datastructure. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12973791",
            "date": "2010-12-21T17:50:12+0000",
            "content": "can we just use: NamedList<?> rather then bind it explicitly to Object? \n\ni think in the changes i made so far i used \"?\" every place i could.  Binding to \"?\" is appropriate when you don't care what the typevar is, but \"Object\" is what you have to use when you know you are dealing with a collection of heterogenous objects \u2013 which is many uses of NamedList.\n\nin the cases where the code was dealing with a NamedList of homogeneous objects, i used the specific homogeneous type (ie: \"NamedList<NamedList<String>>\")\n\nThat said: there certainly may be places where i could have used NamedList<?> and didn't realize it. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12979022",
            "date": "2011-01-07T23:22:02+0000",
            "content": "\nIn the absence of any direct object to the approach taken in my initial patch (i even solicited feedback from the generics policeman multiple times on IRC over the past few weeks) I went ahead and commited to trunk...\n\nCommitted revision 1056558.\n\nas mentioned before, i'm going continue on with similar easy fixes around the tree w/o bothering to post patches to jira \u2013 we can use CTR if anyone has concerns about specific changes.\n\neventually i'd like to try and port some of this to 3x, but that's a lower priority "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12979047",
            "date": "2011-01-08T00:59:27+0000",
            "content": "Committed revision 1056578. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12979063",
            "date": "2011-01-08T01:58:32+0000",
            "content": "Committed revision 1056594. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12979067",
            "date": "2011-01-08T02:08:21+0000",
            "content": "Committed revision 1056595. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12979081",
            "date": "2011-01-08T03:47:43+0000",
            "content": "Committed revision 1056612. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12979188",
            "date": "2011-01-08T19:39:47+0000",
            "content": "Reminder to self: feedback from rmuir on the mailing list to replace the static EMPTY set/map refs w/type info that i added with direct usage like this...\n\n\n\tthis(fieldName, fieldType, analyzer, EMPTY_STRING_SET);\n+      this(fieldName, fieldType, analyzer, Collections.<String>emptySet());\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16019016",
            "date": "2017-05-21T22:47:41+0000",
            "content": "This was committed for 4.0, please resolve as fixed. "
        }
    ]
}