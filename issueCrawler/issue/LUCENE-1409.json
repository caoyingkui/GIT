{
    "id": "LUCENE-1409",
    "title": "read past EOF",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.3.2",
        "resolution": "Cannot Reproduce",
        "status": "Resolved"
    },
    "description": "I create index with a lot of documents (~500 000). During add documents to \"read past EOF\" error occured. It occure after random number of indexed documents. I used lucene with compass framework but I think that is not important. It is a link to compass forum where that problem was reporeted http://forum.compass-project.org/thread.jspa?threadID=215641&tstart=0\n\njava.io.IOException: read past EOF\n\tat org.apache.lucene.store.BufferedIndexInput.refill(BufferedIndexInput.java:146)\n\tat org.apache.lucene.store.BufferedIndexInput.readByte(BufferedIndexInput.java:38)\n\tat org.apache.lucene.store.IndexInput.readVInt(IndexInput.java:76)\n\tat org.apache.lucene.index.FieldInfos.read(FieldInfos.java:304)\n\tat org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:59)\n\tat org.apache.lucene.index.SegmentReader.initialize(SegmentReader.java:298)\n\tat org.apache.lucene.index.SegmentReader.get(SegmentReader.java:262)\n\tat org.apache.lucene.index.SegmentReader.get(SegmentReader.java:197)\n\tat org.apache.lucene.index.MultiSegmentReader.<init>(MultiSegmentReader.java:109)\n\tat org.apache.lucene.index.MultiSegmentReader.doReopen(MultiSegmentReader.java:203)\n\tat org.apache.lucene.index.DirectoryIndexReader$2.doBody(DirectoryIndexReader.java:98)\n\tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:636)\n\tat org.apache.lucene.index.DirectoryIndexReader.reopen(DirectoryIndexReader.java:92)\n\tat org.compass.core.lucene.engine.manager.DefaultLuceneSearchEngineIndexManager.internalRefreshCache(DefaultLuceneSearchEngineIndexManager.java:368)\n\tat org.compass.core.lucene.engine.manager.DefaultLuceneSearchEngineIndexManager.refreshCache(DefaultLuceneSearchEngineIndexManager.java:358)\n\tat org.compass.core.lucene.engine.transaction.readcommitted.ReadCommittedTransaction$CommitCallable.call(ReadCommittedTransaction.java:422)\n\tat org.compass.core.transaction.context.TransactionalCallable$1.doInTransaction(TransactionalCallable.java:44)\n\tat org.compass.core.impl.DefaultCompass$CompassTransactionContext.execute(DefaultCompass.java:342)\n\tat org.compass.core.transaction.context.TransactionalCallable.call(TransactionalCallable.java:41)\n\tat org.compass.core.executor.DefaultExecutorManager.invokeAllWithLimit(DefaultExecutorManager.java:104)\n\tat org.compass.core.executor.DefaultExecutorManager.invokeAllWithLimitBailOnException(DefaultExecutorManager.java:73)\n\tat org.compass.core.lucene.engine.transaction.readcommitted.ReadCommittedTransaction.doCommit(ReadCommittedTransaction.java:142)\n\tat org.compass.core.lucene.engine.transaction.AbstractTransaction.commit(AbstractTransaction.java:98)\n\tat org.compass.core.lucene.engine.LuceneSearchEngine.commit(LuceneSearchEngine.java:172)\n\tat org.compass.core.transaction.LocalTransaction.doCommit(LocalTransaction.java:97)\n\tat org.compass.core.transaction.AbstractTransaction.commit(AbstractTransaction.java:46)\n\tat org.compass.core.CompassTemplate.execute(CompassTemplate.java:131)\n\tat org.compass.core.CompassTemplate.execute(CompassTemplate.java:112)\n\tat asl.simplesearch.compass.CompassService.createCall(Unknown Source)\n\tat asl.util.IndexCreator.createIndex(Unknown Source)\n\tat asl.util.IndexCreator.start(Unknown Source)\n\tat asl.util.IndexCreatorTestCase.main(IndexCreatorTestCase.java:20)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2008-10-01T15:42:31+0000",
            "content": "Since Lucene 2.4 is about to be released, if I were you I would get Lucene from trunk, build the jar, and replace your 2.3.2 version.  If that eliminates this error, could you please close this issue? ",
            "author": "Otis Gospodnetic",
            "id": "comment-12636068"
        },
        {
            "date": "2008-10-01T17:05:44+0000",
            "content": "\nI would still like to get to the root cause here, in case it still exists in 2.4.\n\nAdam, around how many added objects (using your test posted in the above forum) do you see the error happen.  I've run several times so far and haven't gotten the error to happen.\n\nAlso, the test seems to slow down drastically over time.  At first it indexes at ~ 10 objects/ sec; after 4000 object this slows down to ~ 3 objects/sec.  Do you know why that is?  Lucene by itself doesn't exhibit this slowdown (well, it does a little, as merges become necessary, but it's much less of a slowdown).  It seems like compass is periodically waking up and optimizing the index, fairly frequently.  That could explain this slowdown. ",
            "author": "Michael McCandless",
            "id": "comment-12636098"
        },
        {
            "date": "2008-10-01T19:30:12+0000",
            "content": "Last time I have got that error after ~46000 objects added to index but my last test still working and there are indexed about 160000 objects. That error is very strange but occur and I cannot finish may task. Do you have any idea how avoid it (maybe change some configuration of lucene)?\nThat slowdown I think is caused by optimizer as you wrote, I forgot switch off it for that test. You can do it simply by set following configuration in compass.cfg.xml file:\n<searchEngine>\n  [...]\n  <optimizer type=\"org.compass.core.lucene.engine.optimizer.NullOptimizer\"/>\n</searchEngine> ",
            "author": "Adam \u0141\u0105czy\u0144ski",
            "id": "comment-12636132"
        },
        {
            "date": "2008-10-01T22:18:08+0000",
            "content": "Apparently, compass committed its transaction and is attempting to reopen the IndexReader but the reopen hits that exception because somehow the fieldInfos file (*.fnm) for one of your segments is 0 bytes long.\n\nI don't know what would do truncate your _X.fnm file like that.\n\nWhich OS are you on?\n\nAre you sure there's nothing external to Lucene that might interfere w/ the index files?  Or, is it possible you have filesystem corrutption (does this happen on a different computer)?  Or could it be that two writers are accidentally operating on this index at once?\n\nThat slowdown I think is caused by optimizer as you wrote\n\nI turned off optimize as you suggested.  It helped, but, strangely, it's still drastically slowing down.  Have other users of compass seen this? ",
            "author": "Michael McCandless",
            "id": "comment-12636207"
        },
        {
            "date": "2008-10-06T07:49:02+0000",
            "content": "OS: Linux build1 2.6.22-14-server, x86_64 GNU/Linux\nJava: 1.5.0_08\n\nI am sure that only one process has access to Lucene index files. ",
            "author": "Adam \u0141\u0105czy\u0144ski",
            "id": "comment-12637033"
        },
        {
            "date": "2008-10-07T09:14:28+0000",
            "content": "Alas I can't reproduce this issue from your test case.\n\nDo you see this on a different computer? ",
            "author": "Michael McCandless",
            "id": "comment-12637423"
        },
        {
            "date": "2008-10-07T12:36:09+0000",
            "content": "That error was occured on 2 machines, one described above and second:\nOS: Linux pre-ch1 2.6.22-14-server #1 SMP Sun Oct 14 22:09:15 GMT 2007 x86_64\nJava: 1.5.0_14\n\nStrange think is that i cannot reproduce it on 3th machine:\nOS: Linux dc 2.6.22.18-0.2-default #1 SMP 2008-06-09 13:53:20 +0200 x86_64 x86_64 x86_64 GNU/Linux\nJava: 1.5.0_15 ",
            "author": "Adam \u0141\u0105czy\u0144ski",
            "id": "comment-12637458"
        },
        {
            "date": "2008-11-10T02:43:54+0000",
            "content": "I think this is ready to be closed soon. Looks like the trail is cold, and its too likely that the index was simply corrupted in a manner that involves compass. ",
            "author": "Mark Miller",
            "id": "comment-12646151"
        },
        {
            "date": "2008-11-10T16:11:33+0000",
            "content": "I agree. ",
            "author": "Michael McCandless",
            "id": "comment-12646286"
        }
    ]
}