{
    "id": "LUCENE-4989",
    "title": "Hanging on DocumentsWriterStallControl.waitIfStalled forever",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "4.3.1",
            "6.0"
        ],
        "affect_versions": "4.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In an environment where our underlying storage was timing out on various operations, we find all of our indexing threads eventually stuck in the following state (so far for 4 days):\n\n\"Thread-0\" daemon prio=5 Thread id=556  WAITING\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.Object.wait(Object.java:503)\n\tat org.apache.lucene.index.DocumentsWriterStallControl.waitIfStalled(DocumentsWriterStallControl.java:74)\n\tat org.apache.lucene.index.DocumentsWriterFlushControl.waitIfStalled(DocumentsWriterFlushControl.java:676)\n\tat org.apache.lucene.index.DocumentsWriter.preUpdate(DocumentsWriter.java:301)\n\tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:361)\n\tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1484)\n\tat ...\n\nI have not yet enabled detail logging and tried to reproduce yet, but looking at the code, I see that DWFC.abortPendingFlushes does\n\n        try \n{\n          dwpt.abort();\n          doAfterFlush(dwpt);\n        }\n catch (Throwable ex) \n{\n          // ignore - keep on aborting the flush queue\n        }\n\n(and the same for the blocked ones). Since the throwable is ignored, I can't say for sure, but I've seen DWPT.abort thrown in other cases, so if it does throw, we'd fail to call doAfterFlush and properly decrement flushBytes. This can be a problem, right? Is it possible to do this instead:\n\n        try {\n          dwpt.abort();\n        } catch (Throwable ex) {          // ignore - keep on aborting the flush queue        }\n finally {\n          try \n{\n            doAfterFlush(dwpt);\n          }\n catch (Throwable ex2) \n{\n            // ignore - keep on aborting the flush queue\n          }\n        }\n\nIt's ugly but safer. Otherwise, maybe at least add logging for the throwable just to make sure this is/isn't happening.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-05-16T11:25:27+0000",
            "content": "This looks bad ... we should fix for 4.3.1? ",
            "author": "Michael McCandless",
            "id": "comment-13659441"
        },
        {
            "date": "2013-05-16T11:36:39+0000",
            "content": "this might be related to LUCENE-5002 I think. this can happen in multiple scenarios. Can you tell if there are any other blocked threads in flush by any chance?\n ",
            "author": "Simon Willnauer",
            "id": "comment-13659448"
        },
        {
            "date": "2013-05-16T18:56:48+0000",
            "content": "Thanks for the quick replies guys. Simon, no, there wasn't any blocked threads (it would have made tracking the problem down easier ). ",
            "author": "Jessica Cheng Mallet",
            "id": "comment-13659825"
        },
        {
            "date": "2013-06-03T17:18:45+0000",
            "content": "Any update on this?  is it definitely a dup of LUCENE-5002 ?\n\nIs this still a 4.3.1 blocker? ",
            "author": "Hoss Man",
            "id": "comment-13673332"
        },
        {
            "date": "2013-06-03T17:43:24+0000",
            "content": "I'm not sure if it's a dup of LUCENE-5002 (Simon?) but I don't think this should block 4.3.1. ",
            "author": "Michael McCandless",
            "id": "comment-13673357"
        },
        {
            "date": "2013-06-04T08:47:05+0000",
            "content": "I actually committed the fix outlined above in LUCENE-5002 and I think this was the cause. I wasn't able to reproduce though but I think we can close it. ",
            "author": "Simon Willnauer",
            "id": "comment-13674180"
        },
        {
            "date": "2013-06-04T15:52:41+0000",
            "content": "I very highly suspect that the cause is where I outlined in this bug, so if doAfterFlush(dwpt); is placed in a second finally block, I think we're fine closing this bug and I can reopen or open a new bug if I see it again. However, I don't think this is LUCENE 5002 because there definitely wasn't any blocked thread (I double-checked in my thread dump). Thanks! ",
            "author": "Jessica Cheng Mallet",
            "id": "comment-13674514"
        },
        {
            "date": "2013-06-05T07:40:58+0000",
            "content": "jessica, I agree this is not related to LUCENE-5002. I will go ahead and close it! thanks for reporting this! ",
            "author": "Simon Willnauer",
            "id": "comment-13675669"
        },
        {
            "date": "2013-06-05T07:41:55+0000",
            "content": "fixed via LUCENE-5002 ",
            "author": "Simon Willnauer",
            "id": "comment-13675670"
        },
        {
            "date": "2013-06-18T16:55:13+0000",
            "content": "Bulk closing after 4.3.1 release ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13686944"
        }
    ]
}