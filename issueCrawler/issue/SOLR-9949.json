{
    "id": "SOLR-9949",
    "title": "Non-serializable AlreadyClosedException returned by MBeanServer",
    "details": {
        "components": [
            "JMX"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.3.1"
        ],
        "affect_versions": "4.8",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "Solr JMX monitoring agent is throwing InvalidClassException when trying to deserialize AlreadyClosedException thrown by Solr during JMX stat fetching.\n\nStack trace:\n\norg.apache.lucene.store.AlreadyClosedException; local class incompatible: stream classdesc serialVersionUID = 5608155941692732578, local class serialVersionUID = -1978883495828278874\"\njava.rmi.UnmarshalException: Error unmarshaling return; nested exception is: \n    java.io.InvalidClassException: org.apache.lucene.store.AlreadyClosedException; local class incompatible: stream classdesc serialVersionUID = 5608155941692732578, local class serialVersionUID = -1978883495828278874\"\n\nThe serialVersionUID value computed by java at runtime changed when a new constructor was added with a 'cause' field.\n\nAlreadyClosedExceptions can be thrown by the MBean server if a remote instance is trying to access stats on a recently deleted core for instance. In this case, the exception is serialized/deserialized by the MBean handler which can cause InvalidClassExceptions if the monitoring service is using a different version of lucene. Since Lucene doesn't want to implement Serializable, these exceptions should not be propagated up to the MBeanServer.",
    "attachments": {
        "SOLR-9949.diff": "https://issues.apache.org/jira/secure/attachment/12846395/SOLR-9949.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-09T19:43:37+0000",
            "author": "Mikhail Khludnev",
            "content": "\n\tI wonder if it can be fixed with aligning lucene jar versions between jvms\n\tI hope AlreadyClosedException is gone after SOLR-9330\n\n ",
            "id": "comment-15812651"
        },
        {
            "date": "2017-01-09T19:52:34+0000",
            "author": "Oliver Bates",
            "content": "It could be, but this can be operationally challenging if one monitoring service covers several clusters. It's difficult to ensure that those clusters all run the same version. Granted this is not likely to be that common, but if AlreadyClosedException doesn't implement Serializable (which I understand is something Lucene intentionally avoids), then it seems like it shouldn't be allowed to propagate up to the MBeanServer anyway (from a 'good practice' perspective). If those exceptions are going away though, then this whole point is moot  ",
            "id": "comment-15812677"
        }
    ]
}