{
    "id": "LUCENE-798",
    "title": "Factory for RangeFilters that caches sections of ranges to reduce disk reads",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Not A Problem",
        "status": "Closed"
    },
    "description": "RangeFilters can be cached using CachingWrapperFilter but are only re-used if a user happens to use exactly the same upper/lower bounds.\n\nThis class demonstrates a caching approach where sections of ranges are cached as bitsets and these are re-used/combined to construct large range filters if they fall within the required range. This can improve the \"cache hit\" ratio and avoid going to disk to read large lists of Doc ids from TermDocs.\n\nThis class needs some more work to add thread safety but I'm making it available to gather feedback on the design at this early stage before making robust.",
    "attachments": {
        "CachedRangesFilterFactory.java": "https://issues.apache.org/jira/secure/attachment/12350987/CachedRangesFilterFactory.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-04-04T20:51:54+0000",
            "content": "I am working on a patch that will use the Field cache to do range queries.\n\nThe bit sets will be proxies to the field cache. This way the data is stored in the filed cache and if you change the limits of your range it will just need a new proxy BitSet  ",
            "author": "Matt Ericson",
            "id": "comment-12486768"
        },
        {
            "date": "2011-01-25T16:10:25+0000",
            "content": "This patch does not apply anymore, as Filters no longer use BitSets, but DocIdSets. Also this issue is solved by NumericRangeQuery, NumericRangeFilter, FieldCacheRangeFilter - one of these classes should meet your requirements. ",
            "author": "Uwe Schindler",
            "id": "comment-12986475"
        }
    ]
}