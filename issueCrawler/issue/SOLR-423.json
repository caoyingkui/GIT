{
    "id": "SOLR-423",
    "title": "SolrRequestHandler close notification",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "It may be beneficial for implementations of SolrRequestHandler to be notified that the SolrCore is closing so that they can release any resources that they may have open.",
    "attachments": {
        "SOLR-423.patch": "https://issues.apache.org/jira/secure/attachment/12370432/SOLR-423.patch",
        "SOLR-423-CloseHook.patch": "https://issues.apache.org/jira/secure/attachment/12370577/SOLR-423-CloseHook.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Grant Ingersoll",
            "id": "comment-12546359",
            "date": "2007-11-28T19:27:58+0000",
            "content": "Draft patch that implements close() callback on the SolrRequestHandler and provides empty implementation for RequestHandlerBase.\n\nObviously, this is not backward compatible since it adds a new method to an interface, but I am not sure where else to put it for now.  My guess is most people extend RequestHandlerBase anyway, so it may not be that big of an issue.\n\nPatch hooks into the SolrCore.close() call by calling RequestHandlers.closeHandlers() similar to how it inits the handlers.\n\nAll tests should pass.  Also added a test to SolrCoreTest to explicitly check that close is being called. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12546427",
            "date": "2007-11-28T22:01:03+0000",
            "content": "Aaaah that freaking interface!  So far, we have not broken API compatibility in 1.3 (though I have tried!) so I think we ought to find another way.\n\nOff hand I see two options:\n\n1.  Add close( SolrCore core ) to the SolrCoreAware interface\n2.  Put the close method in RequestHandlerBase and have RequestHandlers.closeHandlers() check instanceof\n\n#1 seems interesting because it would also give access to close() for QueryResponseWriters and SearchComponents\n\n\n\nside note, where you have:\n\n\n for (Iterator<SolrRequestHandler> objectIterator = handlers.values().iterator(); objectIterator.hasNext();) {\n      SolrRequestHandler handler = objectIterator.next();\n      handler.close();\n   }\n\n\nwith java 1.5 this could be:\n\n\nfor( SolrRequestHandler handler : handlers ) {\n  handler.close();\n}\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12546434",
            "date": "2007-11-28T22:14:04+0000",
            "content": "i was thinking the same thing about #1 but that got me thinking that instead of SolrCoreAware having a close method, SolrCore could have an \"addCloseHook(CloseHook) method which SolrCoreAware request handlers could call as part their inform() method.\n\nThat then got me thinking that instead of a CloseHook we should probably have a generic \"closeCore\" event type ... users could configure explicit SolrEventListeners in the solrconfig.xml, and plugins could use the internal methods to add implicit event listeners that they need. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12546849",
            "date": "2007-11-29T19:30:40+0000",
            "content": "This version adds a CloseHook to SolrCore.  The test now looks like:\n\n\nclass ClosingRequestHandler extends EmptyRequestHandler implements SolrCoreAware {\n  boolean closed = false;\n\n  public void inform(SolrCore core) {\n    core.addCloseHook( new SolrCore.CloseHook() {\n      public void close(SolrCore core) {\n        closed = true;\n      }\n    });\n  }\n}\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12546851",
            "date": "2007-11-29T19:33:40+0000",
            "content": "> That then got me thinking that instead of a CloseHook we should probably have a generic \"closeCore\" event type ... users could configure explicit SolrEventListeners in the solrconfig.xml, and plugins could use the internal methods to add implicit event listeners that they need.\n\nHow would this work?  I don't quite follow.  If we add close() to SolrEventListener that would break the API. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12548513",
            "date": "2007-12-05T02:17:31+0000",
            "content": "> How would this work? I don't quite follow. If we add close() to \n> SolrEventListener that would break the API.\n\n...sigh....   you're 100% right.  It's been a while since i looked at that API, i forgot it was an interface (heck: i forgot the event types were different methods)  oh well. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12548514",
            "date": "2007-12-05T02:20:56+0000",
            "content": "SolrEventListener is a place where we might be able to make changes because no one uses their own listeners (they probably just use Solr's builtin listeners). "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12560388",
            "date": "2008-01-18T14:04:21+0000",
            "content": "Meant to follow up on this.  I think the close hook is fine. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12607623",
            "date": "2008-06-24T14:34:19+0000",
            "content": "Minor updates, added some javadocs, plan to commit soon. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12608522",
            "date": "2008-06-26T17:44:49+0000",
            "content": "Committed revision 671960. "
        }
    ]
}