{
    "id": "SOLR-1757",
    "title": "DIH multithreading sometimes throws NPE",
    "details": {
        "affect_versions": "1.4",
        "status": "Resolved",
        "fix_versions": [
            "1.5"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When the \"threads\" attribute is set on a root entity in the DIH's data-config.xml, the multithreading code sometimes throws a NullPointerException after the full-index command is given.\n\nI haven't yet been able to figure out exactly which reference holds the null or why, but it does happen consistently with the same backtrace.\n\nMy configuration is:\n\n1. Multi-core Solr under tomcat\n2. Using JdbcDataSource and the default SqlEntityProcessor\n\nTo reproduce:\n\n1. Add the attribute threads=\"2\" to the root entity declaration in data-config.xml\n2. Send the full-import command either directly to .../core/dataimport?command=full-import or through the /admin/dataimport.jsp control panel.\n3. Wait for the NPE to show up in the logs/console",
    "attachments": {
        "solr-1757-abort-threaddump.zip": "https://issues.apache.org/jira/secure/attachment/12435218/solr-1757-abort-threaddump.zip",
        "SOLR-1757.patch": "https://issues.apache.org/jira/secure/attachment/12434946/SOLR-1757.patch",
        "solr-1352-threads-bt.txt": "https://issues.apache.org/jira/secure/attachment/12434918/solr-1352-threads-bt.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Michael Henson",
            "id": "comment-12829919",
            "date": "2010-02-05T02:15:08+0000",
            "content": "This is the backtrace I get with this NPE. The backtrace is always the same, though I haven't confirmed whether or not it happens with the same data or after the same number of rows have been processed. The redacted part of the backtrace looked normal - no missing fields, no empty values. "
        },
        {
            "author": "Michael Henson",
            "id": "comment-12830395",
            "date": "2010-02-06T01:01:17+0000",
            "content": "The patch works to get it running. Now the issue is that the process doesn't stop after an \"abort\" command is given. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12830450",
            "date": "2010-02-06T04:03:06+0000",
            "content": "thanks Micheal. I'll commit this soon\n\ncould you help me w/ the thread dumps after the abort.  "
        },
        {
            "author": "Michael Henson",
            "id": "comment-12831163",
            "date": "2010-02-08T22:29:53+0000",
            "content": "This is the ../admin/threaddjump.jsp page for the core configured with threads=\"3\", running a full-import, after having sent it the abort command. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12831298",
            "date": "2010-02-09T05:24:19+0000",
            "content": "I guess you have pasted the wrong stacktrace.\n\nWe can close this issue and open another for the persistent threads after abort command "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12831299",
            "date": "2010-02-09T05:26:39+0000",
            "content": "comitted r907935 "
        }
    ]
}