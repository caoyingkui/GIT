{
    "id": "LUCENE-6439",
    "title": "Create test-framework/src/test",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Test"
    },
    "description": "We have quite a few tests (~30 suites) for test-framework stuff (\"test-the-tester\") but currently they all sit in lucene/core housed with real tests.\n\nI think we should just give test-framework a src/test and move these tests there. This makes the build simpler in the future too, because its less \"special\".",
    "attachments": {
        "LUCENE-6439-maven.patch": "https://issues.apache.org/jira/secure/attachment/12726671/LUCENE-6439-maven.patch",
        "LUCENE-6439.patch": "https://issues.apache.org/jira/secure/attachment/12726486/LUCENE-6439.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14502198",
            "author": "Robert Muir",
            "date": "2015-04-20T00:56:57+0000",
            "content": "Here is a patch (with --no-diff-deleted). I ran coverage analysis for test-framework and was surprised, found a few bugs in the tests against AssertingCodec, they weren't testing at all what they are supposed to. "
        },
        {
            "id": "comment-14502524",
            "author": "Michael McCandless",
            "date": "2015-04-20T08:38:27+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14503057",
            "author": "Adrien Grand",
            "date": "2015-04-20T15:42:43+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14503142",
            "author": "Uwe Schindler",
            "date": "2015-04-20T16:31:06+0000",
            "content": "+1. The Maven changes should be a one-line change after my cleanup. I can help with that later.\n\nWe should also add the src/test dir to the forbidden-test ant target (it was redefined to only check src/java). It should check both for forbidden signatures in tests.txt.\n\nFor Maven this is just adding the goal in the redefinition <goals><goal>check</goal><goal>testCheck<goal></goals>. I can do this. "
        },
        {
            "id": "comment-14503213",
            "author": "Robert Muir",
            "date": "2015-04-20T17:08:51+0000",
            "content": "Thanks, I added src/test to the forbidden check locally already. I am testing one more time with your latest commit (with annotation support).\n\nI will defer the maven changes to you, thanks for the help! "
        },
        {
            "id": "comment-14503251",
            "author": "ASF subversion and git services",
            "date": "2015-04-20T17:24:00+0000",
            "content": "Commit 1674946 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1674946 ]\n\nLUCENE-6439: Create test-framework/src/test "
        },
        {
            "id": "comment-14503289",
            "author": "ASF subversion and git services",
            "date": "2015-04-20T17:46:48+0000",
            "content": "Commit 1674948 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1674948 ]\n\nLUCENE-6439: Create test-framework/src/test "
        },
        {
            "id": "comment-14503693",
            "author": "Uwe Schindler",
            "date": "2015-04-20T21:29:45+0000",
            "content": "Here is the patch with maven support.\n\nOn windows the new test currently fail with:\n\n\norg.apache.lucene.mockfile.TestMockFilesystems  Time elapsed: 23.615 sec  <<< ERROR!\ncom.carrotsearch.randomizedtesting.ThreadLeakError: 9 threads leaked from SUITE scope at org.apache.lucene.mockfile.TestMockFilesyst\nems:\n   1) Thread[id=235, name=Thread-205, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at java.lang.Thread.run(Thread.java:745)\n   2) Thread[id=239, name=Thread-209, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   3) Thread[id=243, name=Thread-213, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   4) Thread[id=237, name=Thread-207, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   5) Thread[id=238, name=Thread-208, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   6) Thread[id=241, name=Thread-211, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   7) Thread[id=242, name=Thread-212, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   8) Thread[id=236, name=Thread-206, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   9) Thread[id=240, name=Thread-210, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n        at __randomizedtesting.SeedInfo.seed([2A52FE13A022A104]:0)\n\norg.apache.lucene.mockfile.TestMockFilesystems  Time elapsed: 23.615 sec  <<< ERROR!\ncom.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:\n   1) Thread[id=235, name=Thread-205, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at java.lang.Thread.run(Thread.java:745)\n   2) Thread[id=239, name=Thread-209, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   3) Thread[id=243, name=Thread-213, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   4) Thread[id=237, name=Thread-207, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   5) Thread[id=238, name=Thread-208, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   6) Thread[id=241, name=Thread-211, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   7) Thread[id=242, name=Thread-212, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   8) Thread[id=236, name=Thread-206, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n   9) Thread[id=240, name=Thread-210, state=RUNNABLE, group=TGRP-TestMockFilesystems]\n        at sun.nio.ch.Iocp.getQueuedCompletionStatus(Native Method)\n        at sun.nio.ch.Iocp.access$300(Iocp.java:46)\n        at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:333)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n        at __randomizedtesting.SeedInfo.seed([2A52FE13A022A104]:0)\n\n\n\nInterestingly on Ant, the TestMockFileSystems seems to assume on Windows and disable some tests... "
        },
        {
            "id": "comment-14503699",
            "author": "ASF subversion and git services",
            "date": "2015-04-20T21:32:14+0000",
            "content": "Commit 1674990 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1674990 ]\n\nLUCENE-6439: enable support fors test-framework-tests on Maven build "
        },
        {
            "id": "comment-14503705",
            "author": "ASF subversion and git services",
            "date": "2015-04-20T21:34:34+0000",
            "content": "Commit 1674991 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1674991 ]\n\nMerged revision(s) 1674990 from lucene/dev/trunk:\nLUCENE-6439: enable support fors test-framework-tests on Maven build "
        },
        {
            "id": "comment-14503728",
            "author": "Uwe Schindler",
            "date": "2015-04-20T21:42:58+0000",
            "content": "I have no idea why TestMockFileSystems leaks threads on Maven but not on Ant. Mabye Steve Rowe knows better. "
        },
        {
            "id": "comment-14503736",
            "author": "Uwe Schindler",
            "date": "2015-04-20T21:48:18+0000",
            "content": "The TestMockFileSystems test also leaks threads in old trunk without the changes here, so this is unrelated. Seems to be a maven/surefire problem. "
        },
        {
            "id": "comment-14503741",
            "author": "Uwe Schindler",
            "date": "2015-04-20T21:49:51+0000",
            "content": "Thanks Robert! "
        },
        {
            "id": "comment-14503880",
            "author": "Robert Muir",
            "date": "2015-04-20T22:56:26+0000",
            "content": "Hi Uwe: on Windows we can't currently instantiate MockWindows. MockWindows does not play along well with the real Windows! to make it work better, we have to emulate windows semantics better so its more correct.\n\nThe assumeFalse uses Constants.Windows. So maybe something is wrong with this logic in Constants.java? anyway perhaps we should look into it more on a separate issue.  "
        },
        {
            "id": "comment-14504557",
            "author": "Uwe Schindler",
            "date": "2015-04-21T08:09:54+0000",
            "content": "Hi Robert: I checked the assumes, they are all working. So it correctly detects windows also on Maven.\n\nThe difference is that the Maven build uses the surefire plugin and not the test-runner framework of Dawid. Maybe this causes issues here. To me it looks like some additional threads are started as a side effect. Unfortunately I have no idea.\n\nThe error was also happening previously, so is unrelated to this issue. This is why I resolved it. We broke nothing that was not broke already. "
        },
        {
            "id": "comment-14504568",
            "author": "Dawid Weiss",
            "date": "2015-04-21T08:14:50+0000",
            "content": "It looks like an unclosed executor from an internal channel management in the JRE (windows-only). Iocp says:\n\n/**\n * Windows implementation of AsynchronousChannelGroup encapsulating an I/O\n * completion port.\n */\n\n\n\nMaybe surefire uses async file channels for something and this fires the executor somehow? "
        },
        {
            "id": "comment-14504782",
            "author": "Uwe Schindler",
            "date": "2015-04-21T11:16:16+0000",
            "content": "In my opinion, the Maven build should change to the carrotsearch runner. There is already an issue open: LUCENE-4045\n\nFor the same reason I disabled tests on the Maven Jenkins Build a while ago. ASF Jenkins uses -DskipTests=true; this is why it never failed. Previously Solr failed with similar errors, so I think that the surefire test runner is doning crazy channel stuff that spawn threads. Maybe we should put those on the list of \"allowed  threads\". The failures on Linux are similar. We should open a separate issue - its completely unrelated to this one. "
        },
        {
            "id": "comment-14504784",
            "author": "Dawid Weiss",
            "date": "2015-04-21T11:19:38+0000",
            "content": "I assigned LUCENE-4045 to myself, let me take a look. "
        },
        {
            "id": "comment-14586911",
            "author": "Anshum Gupta",
            "date": "2015-06-15T21:44:25+0000",
            "content": "Bulk close for 5.2.0. "
        },
        {
            "id": "comment-15334160",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T17:01:50+0000",
            "content": "Commit dca4f85f69b1cbe632550b9babdf3f675adab4f2 in lucene-solr's branch refs/heads/branch_5_5 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dca4f85 ]\n\nLUCENE-6439: IntelliJ config "
        },
        {
            "id": "comment-15334169",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T17:06:38+0000",
            "content": "Commit ff1ffc22c1648c67554afa0f9224db45b79b69de in lucene-solr's branch refs/heads/branch_5x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ff1ffc2 ]\n\nLUCENE-6439: IntelliJ config "
        },
        {
            "id": "comment-15334170",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T17:06:39+0000",
            "content": "Commit 950077915f0da98fd003252b14eae094dcae2922 in lucene-solr's branch refs/heads/branch_6_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9500779 ]\n\nLUCENE-6439: IntelliJ config "
        },
        {
            "id": "comment-15334172",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T17:06:40+0000",
            "content": "Commit 4c107a9a5287aabcafc8e5ce4e73d0faae653a3a in lucene-solr's branch refs/heads/branch_6_1 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4c107a9 ]\n\nLUCENE-6439: IntelliJ config "
        },
        {
            "id": "comment-15334173",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T17:06:42+0000",
            "content": "Commit b85c5be6c4f682136512851c5cce2d456b3ea85c in lucene-solr's branch refs/heads/branch_6x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b85c5be ]\n\nLUCENE-6439: IntelliJ config "
        },
        {
            "id": "comment-15334174",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T17:06:43+0000",
            "content": "Commit a4455a4b14f2bf947db1136f9d5fc7d0d88d32ef in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a4455a4 ]\n\nLUCENE-6439: IntelliJ config "
        }
    ]
}