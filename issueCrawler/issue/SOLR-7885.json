{
    "id": "SOLR-7885",
    "title": "Add support for loading HTTP resources",
    "details": {
        "components": [
            "contrib - DataImportHandler",
            "SolrJ"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3",
        "status": "Closed",
        "resolution": "Not A Problem",
        "priority": "Major"
    },
    "description": "I have a need to be able to load data import handler configuration files from an HTTP server instead of the local file system.  So, I modified \n\norg.apache.solr.core.SolrResourceLoader\n\n and some of the respective dataimport files in \n\norg.apache.solr.handler.dataimport\n\n to be able to support doing this.  \n\n\nsolrconfig.xml\n\n now has the option to define a parameter: configRemote, and if defined (and it's an HTTP(s) URL), it'll attempt to load the resource.  If successfully, it'll also persist the resource to the local file system so that it is available on a solr server restart per chance that the remote resource is currently unavailable.\n\nLastly, to be consistent with the pattern that already exists in SolrResourceLoader, this feature is disabled by default, and requires the setting of an additional JVM property: \n\n-Dsolr.allow.http.resourceloading=true\n\n.\n\nPlease review and let me know if there is anything else that needs to be done in order for this patch to make the next release.  As far as I can tell, it's fully tested and ready to go.\n\nThanks.",
    "attachments": {
        "SOLR-7885-1.patch": "https://issues.apache.org/jira/secure/attachment/12749126/SOLR-7885-1.patch",
        "SOLR-7885-2.patch": "https://issues.apache.org/jira/secure/attachment/12749127/SOLR-7885-2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-06T20:21:39+0000",
            "author": "Aaron LaBella",
            "content": "I split the patch into 2 parts, one for solr-core and one for dataimporthandler ",
            "id": "comment-14660736"
        },
        {
            "date": "2015-08-26T14:01:58+0000",
            "author": "Aaron LaBella",
            "content": "Can someone take a look at this patch and commit if approved?\nThanks. ",
            "id": "comment-14713468"
        },
        {
            "date": "2015-12-02T09:48:30+0000",
            "author": "Mikhail Khludnev",
            "content": "Aaron LaBella did you consider to send dataConfig content as a request parameter. \nAt least it's supported for reloading config: ?command=reload-config&dataConfig=<dataConfig.....\nbut it might be also supported for command=full-import too \n\nif you are interesting it might be sent as POST body. \n\nregarding the patch, personally I'm hesitating to open one more backdoor in Solr. \nI'm sorry for silence, I just found jira notification in gmail Spam folder.  ",
            "id": "comment-15035558"
        },
        {
            "date": "2015-12-02T14:10:48+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "To understand whether your use case better, please describe why you have to rely on config loading over HTTP. There may be other, more robust ways to achieve the end goal. ",
            "id": "comment-15035839"
        },
        {
            "date": "2015-12-07T15:18:17+0000",
            "author": "Aaron LaBella",
            "content": "Sure.  Our DIH configuration files are stored, protected and maintained on a separate HTTP server with an admin/editing interface.  This allows us to give users an actual front-end editor, make changes to the DIH, and have those changes reloaded in SOLR automatically \u2013 without having to explicitly reload SOLR in any form (either at runtime or with a server restart).\n\nI guess I didn't try reload-config because a.) I'm not really seeing any great documentation on this feature and b.) I'm confused if it actually persists an uploaded and/or reloaded configuration back to the local file system.  If not, then this is a problem because it means that if the SOLR server restarts it'll re-load the old configurations.\n\nI suppose you could argue this as a \"back door\" to SOLR, but, it's also something that is disabled by default and users would have to consciously enable using -Dsolr.allow.http.resourceloading, assuming they are willing to accept the risk. ",
            "id": "comment-15045068"
        },
        {
            "date": "2015-12-16T21:24:40+0000",
            "author": "Aaron LaBella",
            "content": "I'm closing this issue as I literally just took my patch and moved it into a custom RequestHandler instead.\nThanks. ",
            "id": "comment-15060901"
        },
        {
            "date": "2015-12-16T21:26:28+0000",
            "author": "Aaron LaBella",
            "content": "BTW, trying to call command=reload-config&dataConfig=... on the DIH doesn't work \u2013 since, if anything, it just updates the in memory config \u2013 it doesn't persist the config to the local file system, which was half the point of the patch. ",
            "id": "comment-15060905"
        },
        {
            "date": "2015-12-16T21:47:42+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "With SolrCloud, you could use ZooKeeper as integration point and let the external system push updated config to ZK and then call the reload-config API, or even reload the whole collection.\n\nAnother future solution could be adding a REST API for editing DIH-configs, along the lines of what we already have for schema, solrconfig and security.json. Cannot find any open JIRAs for such a feature though. ",
            "id": "comment-15060946"
        }
    ]
}