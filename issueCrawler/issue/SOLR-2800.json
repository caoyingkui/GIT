{
    "id": "SOLR-2800",
    "title": "optimize RemoveDuplicatesTokenFilterFactory",
    "details": {
        "affect_versions": "3.4",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Using RemoveDuplicatesTokenFilterFactory can not remove the duplicated term.\n\nin http://svn.apache.org/viewvc/lucene/dev/branches/lucene_solr_3_4/solr/core/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilter.java?view=markup\n\n@Override\n53 \tpublic boolean incrementToken() throws IOException {\n54 \twhile (input.incrementToken()) {\n55 \tfinal char term[] = termAttribute.buffer();\n56 \tfinal int length = termAttribute.length();\n57 \tfinal int posIncrement = posIncAttribute.getPositionIncrement();\n58 \t\n59 \tif (posIncrement > 0) \n{\n60 \tprevious.clear();\n61 \t}\n62 \t\n63 \tboolean duplicate = (posIncrement == 0 && previous.contains(term, 0, length));\n64 \t\n65 \t// clone the term, and add to the set of seen terms.\n66 \tchar saved[] = new char[length];\n67 \tSystem.arraycopy(term, 0, saved, 0, length);\n68 \tprevious.add(saved);\n69 \t\n70 \tif (!duplicate) \n{\n71 \treturn true;\n72 \t}\n73 \t}\n74 \treturn false;\n75 \t}\n\n\n\nit should be like following:\n@Override\npublic boolean incrementToken() throws IOException {\n\twhile (input.incrementToken()) {\n\t\tfinal char term[] = termAttribute.buffer();\n\t\tfinal int length = termAttribute.length();\n\t\tfinal int posIncrement = posIncAttribute.getPositionIncrement();\n\n\t\tif (posIncrement > 0) \n{\n\t\t\tprevious.clear();\n\t\t}\n\n\t\tboolean duplicate = (posIncrement == 0 && previous.contains(term, 0, length));\n\n\t\tif(duplicate )\n\t\t{\n\t\t  return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// clone the term, and add to the set of seen terms.\n\t\t\tchar saved[] = new char[length];\n\t\t\tSystem.arraycopy(term, 0, saved, 0, length);\n\t\t\tprevious.add(saved);\n\t\t}\n\t}\n\treturn true;\n}",
    "attachments": {
        "SOLR-2800.patch": "https://issues.apache.org/jira/secure/attachment/12544340/SOLR-2800.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Steve Rowe",
            "id": "comment-13117312",
            "date": "2011-09-29T14:13:00+0000",
            "content": "Can you provide a test case?  Your version seems more efficient, since duplicates are not placed in the CharArraySet, but the functionality looks the same to me as the original.  Your test case should demonstrate what is failing without your changes, and that your changes fix the problem.\n\nPlease provide code/tests in the form of a patch - it's much easier to see what you have changed/added.  Also, it's very important when you provide code that you attach a patch to the issue and click where it says \"Grant license to ASF for inclusion in ASF works (as per the Apache License \u00a75)\" - unless you do this, we can't use your code.\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13117317",
            "date": "2011-09-29T14:18:48+0000",
            "content": "\nYour version seems more efficient, since duplicates are not placed in the CharArraySet, but the functionality looks the same to me as the original.\n\nWell if you have Joe (Posinc=1), Pizza (posinc=0), Joe (posinc=0), Beer (posinc=0), Pizza (posinc=0), will you end up with 1 Joe, 1 Pizza, and 1 Beer (This is how the filter is defined)?\n\nThats why the set is needed I think. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13117321",
            "date": "2011-09-29T14:34:07+0000",
            "content": "I agree the set is needed, but the current code clones and then adds every single term to the set, regardless of whether it's already in the set. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13117329",
            "date": "2011-09-29T14:43:30+0000",
            "content": "Yeah thats stupid, we only need to clone the term if it doesnt exist... on the other hand its not too bad since this is the 'common case', but we should fix it. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13117372",
            "date": "2011-09-29T15:40:27+0000",
            "content": "Wen, your changes introduce a bug: incrementToken() should return false only at end-of-stream.\n\nThat is, instead of:\n\n\nif(duplicate )\n{ return false; }\n\n\n\nyou should use:\n\n\nif (duplicate) { continue; }\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13237041",
            "date": "2012-03-23T20:31:32+0000",
            "content": "Bulk changing fixVersion 3.6 to 4.0 for any open issues that are unassigned and have not been updated since March 19.\n\nEmail spam suppressed for this bulk edit; search for hoss20120323nofix36 to identify all issues edited "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412119",
            "date": "2012-07-11T22:26:03+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429804",
            "date": "2012-08-07T03:43:11+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13451065",
            "date": "2012-09-07T22:23:47+0000",
            "content": "removing fixVersion=4.0 since there is no evidence that anyone is currently working on this issue.\n\nBut also assigning to Robert Muir since if i'm understanding his comments, it seems he thinks there is an easy win here, we just need a test case. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13451230",
            "date": "2012-09-08T03:00:02+0000",
            "content": "here's the optimization. basically it saves a clone etc only for additional posinc=0 duplicates that we aren't going to return anyway. "
        }
    ]
}