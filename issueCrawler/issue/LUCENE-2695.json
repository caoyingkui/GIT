{
    "id": "LUCENE-2695",
    "title": "DisjunctionMaxScorer allocates 2 arrays per scored doc",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "It has this:\n\n  @Override\n  public float score() throws IOException {\n    int doc = subScorers[0].docID();\n    float[] sum = { subScorers[0].score() }, max = { sum[0] };\n    int size = numScorers;\n    scoreAll(1, size, doc, sum, max);\n    scoreAll(2, size, doc, sum, max);\n    return max[0] + (sum[0] - max[0]) * tieBreakerMultiplier;\n  }\n\n\n\nThey are thread-private arrays so possibly/likely JVM can optimize this case (allocate only on the stack) but still I think instead it should have private instance vars for the score/max.",
    "attachments": {
        "LUCENE-2695.patch": "https://issues.apache.org/jira/secure/attachment/12456852/LUCENE-2695.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-10-11T13:19:33+0000",
            "content": "Simple patch... I'll commit shortly. ",
            "author": "Michael McCandless",
            "id": "comment-12919813"
        },
        {
            "date": "2011-03-30T15:50:22+0000",
            "content": "Bulk close for 3.1 ",
            "author": "Grant Ingersoll",
            "id": "comment-13013452"
        }
    ]
}