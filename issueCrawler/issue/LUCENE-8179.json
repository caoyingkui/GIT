{
    "id": "LUCENE-8179",
    "title": "StandardTokenizer doesn't tokenize the word \"system\" but it works for the plural \"systems\"",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Not A Problem",
        "affect_versions": "4.10.4",
        "status": "Resolved",
        "type": "Bug",
        "components": [
            "modules/analysis"
        ],
        "fix_versions": []
    },
    "description": "Hi,\n\nWe use the Standard tokenizer to tokenize text. The Standard Tokenizer tokenizes 'systems' correctly, but it fails to tokenize 'system' Attached a small program to demo this.\n\nIs this a known issue.Is there a way to fix it?\u00a0I have tried a few different text examples with different stop words and only this word seems to show this issue.",
    "attachments": {
        "TokenizerBug.java": "https://issues.apache.org/jira/secure/attachment/12911167/TokenizerBug.java",
        "TokenizerBugRevised.java": "https://issues.apache.org/jira/secure/attachment/12911251/TokenizerBugRevised.java"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16369847",
            "date": "2018-02-20T09:35:28+0000",
            "content": "When I run your test program, it produces the tokens 'system' and 'down', which seems correct?\u00a0 What output do you see? ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-16370266",
            "date": "2018-02-20T17:02:13+0000",
            "content": "Alan Woodward\u00a0, Actually, we use a custom analyzer which uses a stop filter with a list of stop words.This list contains 'system'.\n\nWhenI run the program in the microservice, it doesn't go into the\u00a0while(ts.incrementToken()) loop. But when the text has the plural word 'systems' it goes in the loop and creates the terms just fine. ",
            "author": "Joanita Dsouza"
        },
        {
            "id": "comment-16370277",
            "date": "2018-02-20T17:06:45+0000",
            "content": "From a quick look, it seems that all the terms in your example sentence are stop words, so the resulting TokenStream is empty. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-16370341",
            "date": "2018-02-20T17:42:56+0000",
            "content": "Thanks Alan Woodward .I think I need to change our stop words list  ",
            "author": "Joanita Dsouza"
        }
    ]
}