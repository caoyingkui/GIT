{
    "id": "SOLR-10275",
    "title": "Failures for intranode communication when blockUnknown is set to true",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.4.1",
        "resolution": "Later",
        "status": "Closed"
    },
    "description": "forwarding update to https://{server}:{port}/solr/{shard}/ failed - retrying ... retries: 11 add{,id={value}} params:update.distrib=TOLEADER&distrib.from= https://{server}:{port}/solr/{shard}/  rsp:-1:java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:668)\n\tat org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(SSLSocketFactory.java:532)\n\tat org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(SSLSocketFactory.java:409)\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:177)\n\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:304)\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:611)\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:446)\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:882)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient$Runner.sendUpdateStream(ConcurrentUpdateSolrClient.java:311)\n\tat org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient$Runner.run(ConcurrentUpdateSolrClient.java:184)\n\tat com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable.run(InstrumentedExecutorService.java:176)\n\tat org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:229)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-13T23:11:18+0000",
            "content": "This is saying \"connection refused\" which would typically mean that either Solr isn't running or that there's something blocking the traffic like a firewall.  If there was a problem with authentication, I would expect the exception to say something very different. ",
            "author": "Shawn Heisey",
            "id": "comment-15923154"
        },
        {
            "date": "2017-03-13T23:17:55+0000",
            "content": "It's theoretically possible that In extreme situations SOLR-10130 MIGHT cause issues like this, but if that were the case, I wouldn't expect to see \"connection refused.\"  I am not 100 percent confident about what Java and HttpClient do when a TCP connection timeout is exceeded, and I am not sure what SolrCloud's inter-node TCP connection timeout is set to by default. ",
            "author": "Shawn Heisey",
            "id": "comment-15923163"
        }
    ]
}