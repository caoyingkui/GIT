{
    "id": "LUCENE-1359",
    "title": "FrenchAnalyzer's tokenStream method does not honour the contract of Analyzer",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.0"
        ],
        "affect_versions": "2.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In Analyzer :\n\n/** Creates a TokenStream which tokenizes all the text in the provided\n    Reader.  Default implementation forwards to tokenStream(Reader) for \n    compatibility with older version.  Override to allow Analyzer to choose \n    strategy based on document and/or field.  Must be able to handle null\n    field name for backward compatibility. */\n  public abstract TokenStream tokenStream(String fieldName, Reader reader);\n\n\n\n\nand in FrenchAnalyzer\n\n\npublic final TokenStream tokenStream(String fieldName, Reader reader) {\n\n    if (fieldName == null) throw new IllegalArgumentException(\"fieldName must not be null\");\n    if (reader == null) throw new IllegalArgumentException(\"reader must not be null\");",
    "attachments": {
        "LUCENE-1359.patch": "https://issues.apache.org/jira/secure/attachment/12418901/LUCENE-1359.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-08-11T00:00:50+0000",
            "content": "Depends on how you read things - it must be able to handle null for backward compatibility - but contrib analyzers have no explicit back compat requirement - so not supporting such a thing, while inconvenient, is not necessarily wrong. ",
            "author": "Mark Miller",
            "id": "comment-12741631"
        },
        {
            "date": "2009-10-22T04:04:00+0000",
            "content": "Committed revision 828298.\n\nthis inconsistency annoyed me too.\n\nthanks Andrew! ",
            "author": "Robert Muir",
            "id": "comment-12768556"
        }
    ]
}