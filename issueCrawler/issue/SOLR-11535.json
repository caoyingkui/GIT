{
    "id": "SOLR-11535",
    "title": "Weird behavior of CollectionStateWatcher",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "7.2,                                            master (8.0)",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "While working on SOLR-11320 I noticed a strange behavior in ActiveReplicaWatcher, which is a subclass of CollectionStateWatcher - it appears that its onStateChanged method can be called from multiple threads with exactly the same DocCollection state, ie. unchanged between the calls.\n\nThis seems to run contrary to the javadoc, which implies that this method is called only when the state actually changes, and it also doesn't mention anything about the need for thread-safety in the method implementation.\n\nI attached the log, which has a lot of additional debugging - but the most pertinent part being where a Watcher-s hashCode is printed together with the DocCollection - notice that these overlapping calls both submit an instance of DocCollection with the same zkVersion.\n\nScott Blum, Alan Woodward - could you please take a look at this? If this behavior is expected then the javadoc should be updated to state clearly that multiple calls can be made concurrently, with exactly the same state (which is kind of a weak guarantee for a method called onStateChanged  ).",
    "attachments": {
        "test.log": "https://issues.apache.org/jira/secure/attachment/12893726/test.log"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-24T11:19:44+0000",
            "content": "Look for lines with ActiveReplicaWatcher \u2013 onStateChanged, and see how the same instance of watcher gets invoked twice with the same version of DocCollection. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16216713"
        },
        {
            "date": "2018-04-17T06:38:40+0000",
            "content": "This may be related to the fact that we execute ZooKeeper watches in a multi-thread executor, so if multiple threads in parallel could call the StateWatcher.refreshAndWatch method concurrently (coming from two watches fired on the same znode). Note that we re-set the watch when we call fetchCollectionState. This is similar to what I saw while working on SOLR-12172.\n Maybe the solution is to not call constructState when updateWatchedCollection returns false. Other option I think could be to put\n\nDocCollection newState = fetchCollectionState(coll, this);\nupdateWatchedCollection(coll, newState);\n\n\ninside the synchronize. Other option is to document that the watchers could be called more than once for the same data and make the watcher call handle it. Maybe Shalin Shekhar Mangar also has some thoughts. ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16440480"
        }
    ]
}