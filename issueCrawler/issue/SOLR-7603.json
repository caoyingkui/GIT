{
    "id": "SOLR-7603",
    "title": "Scary non reproducible failure from UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "jenkins nightly hit a very inexplicable error today...\n\n\nBuild: https://builds.apache.org/job/Lucene-Solr-NightlyTests-5.x/860/\nAt revision 1682097\nUpdating http://svn.apache.org/repos/asf/lucene/dev/branches/branch_5x at revision '2015-05-27T14:50:50.016 -0400'\n[java-info] java version \"1.7.0_72\"\n[java-info] Java(TM) SE Runtime Environment (1.7.0_72-b14, Oracle Corporation)\n[java-info] Java HotSpot(TM) 64-Bit Server VM (24.72-b04, Oracle Corporation)\n\n\n\n\n  [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=UpdateRequestProcessorFactoryTest\n-Dtests.method=testUpdateDistribChainSkipping -Dtests.seed=4ECABCCFD159BE21 -Dtests.multiplier=2\n-Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/x1/jenkins/lucene-data/enwiki.random.lines.txt\n-Dtests.locale=mt_MT -Dtests.timezone=Etc/GMT0 -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] FAILURE 0.01s J0 | UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([4ECABCCFD159BE21:3F2E4219A7B299ED]:0)\n   [junit4]    >        at\norg.apache.solr.update.processor.UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping(UpdateRequestProcessorFactoryTest.java:111)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n\n\n\n\n...the line in question is asserting that when executing a distributed update (ie: forwarded from another node), the LogUpdateProcessor is still part of the chain because it's got got the \"RunAlways\" annotation indicating it should always be included in the chain (everything before hte DistribUpdateProcessor is normally)\n\nThere's really no explanation for why the LogUpdateProcessor wouldn't be found other then a code bug \u2013 but in that case why doesn't the seed reproduce reliably?",
    "attachments": {
        "SOLR-7603.consoleText.txt": "https://issues.apache.org/jira/secure/attachment/12735709/SOLR-7603.consoleText.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-05-27T22:28:38+0000",
            "author": "Hoss Man",
            "content": "full log from jenkins.\n\nfor now, the only thing i can think of, is to add some more logging & assert details to the test to help us diagnose if it fails again. ",
            "id": "comment-14561862"
        },
        {
            "date": "2015-05-27T22:40:17+0000",
            "author": "Hoss Man",
            "content": "fixed description - i was missunderstanding why the Log processor was expected by the test. ",
            "id": "comment-14561884"
        },
        {
            "date": "2015-05-27T23:36:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1682137 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1682137 ]\n\nSOLR-7603: more test verbosity to try and track this down in the future ",
            "id": "comment-14561992"
        },
        {
            "date": "2015-05-27T23:39:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1682138 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1682138 ]\n\nSOLR-7603: more test verbosity to try and track this down in the future (merge r1682137) ",
            "id": "comment-14561995"
        },
        {
            "date": "2015-05-29T18:16:58+0000",
            "author": "Hoss Man",
            "content": "This happened again last night with the new test assertions providing a bit more detail...\n\n\nDate: Fri, 29 May 2015 09:42:29 +0000 (UTC)\nBuild: https://builds.apache.org/job/Lucene-Solr-NightlyTests-trunk/696/\nUpdating http://svn.apache.org/repos/asf/lucene/dev/trunk at revision '2015-05-29T03:12:26.055 -0400'\nAt revision 1682377\n\n-print-java-info:\n[java-info] java version \"1.8.0_25\"\n[java-info] Java(TM) SE Runtime Environment (1.8.0_25-b17, Oracle Corporation)\n[java-info] Java HotSpot(TM) 64-Bit Server VM (25.25-b02, Oracle Corporation)\n[java-info] Test args: []\n\njava.lang.AssertionError: distrib-chain-explicit expected LogUpdateProcessor in chain due to @RunAllways, but not\nfound: org.apache.solr.update.processor.DistributedUpdateProcessor@638c6e19,\norg.apache.solr.update.processor.RemoveBlankFieldUpdateProcessorFactory$1@25bbdfcb,\norg.apache.solr.update.processor.RunUpdateProcessor@473fea05, \n        at __randomizedtesting.SeedInfo.seed([3AF6852C6379681:724B9684B0DCB14D]:0)\n        at org.junit.Assert.fail(Assert.java:93)\n        at org.junit.Assert.assertTrue(Assert.java:43)\n        at\norg.apache.solr.update.processor.UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping(UpdateRequestProcessorFactoryTest.java:127)\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=UpdateRequestProcessorFactoryTest -Dtests.method=testUpdateDistribChainSkipping -Dtests.seed=3AF6852C6379681 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/x1/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=ru -Dtests.timezone=Asia/Baghdad -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] FAILURE 0.03s J2 | UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: distrib-chain-explicit expected LogUpdateProcessor in chain due to @RunAllways, but not found: org.apache.solr.update.processor.DistributedUpdateProcessor@638c6e19, org.apache.solr.update.processor.RemoveBlankFieldUpdateProcessorFactory$1@25bbdfcb, org.apache.solr.update.processor.RunUpdateProcessor@473fea05, \n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([3AF6852C6379681:724B9684B0DCB14D]:0)\n   [junit4]    > \tat org.apache.solr.update.processor.UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping(UpdateRequestProcessorFactoryTest.java:127)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n\n\n(EDIT: updated with reproduce line now that builds.apache.org is back up)\n\nI realy can't make heads or tails of why LogUpdateProcessor wouldn't be in that chain.\n\n\n\nFWIW: first incidence i can find of a failure from this assert is...\n\n\nDate: Sat, 2 May 2015 17:14:16 +0000 (UTC)\nBuild: https://builds.apache.org/job/Lucene-Solr-NightlyTests-5.x/835/\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=UpdateRequestProcessorFactoryTest -Dtests.method=testUpdateDistribChainSkipping -Dtests.seed=D82449739AD0D42D -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=nl -Dtests.timezone=America/Denver -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.01s J0 | UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([D82449739AD0D42D:A9C0B7A5EC3BF3E1]:0)\n   [junit4]    >        at org.apache.solr.update.processor.UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping(UpdateRequestProcessorFactoryTest.java:111)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n\n ",
            "id": "comment-14565170"
        },
        {
            "date": "2015-05-29T22:55:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1682564 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1682564 ]\n\nSOLR-7603: more detail in asserts, and more asserts on the initial chain (before looking at the distributed version) to try and figure out WTF is going on here ",
            "id": "comment-14565610"
        },
        {
            "date": "2015-05-29T22:57:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1682565 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1682565 ]\n\nSOLR-7603: more detail in asserts, and more asserts on the initial chain (before looking at the distributed version) to try and figure out WTF is going on here (merge r1682564) ",
            "id": "comment-14565612"
        },
        {
            "date": "2015-05-29T23:02:10+0000",
            "author": "Hoss Man",
            "content": "TL;DR: still no clue, but added more logging/assert details to test\n\ni've been beating my head against this and still can't make heads or tells of this failure \u2013 the best guess i've got is that the logic for \"pruning\" the distributed chain down (but including any \"RunAllways\" processors) is actually working fine, but perhaps there is some failure in the initial construction of the chain in the first place? (SOLR-6892 recently modified the way the chains are initialized)\n\nSo i've added a hack to increase the log level for the duration of the test, as well as some more asserts regarding the state of the chain, and simplified the logic around how we assert properties of the distributed chain so it's a bit more straight forward an we can include a list of every proc in every assert. ",
            "id": "comment-14565617"
        },
        {
            "date": "2015-05-30T00:04:49+0000",
            "author": "Hoss Man",
            "content": "TL;DR: fairly certain this is a (nightly only) test bug caused by SOLR-7408, working on fix\n\nOn IRC Tim drew my attention to some behavior of the LogUpdateProcessorFactory that i had completely forgotten about...\n\n\n  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    return LogUpdateProcessor.log.isInfoEnabled() ? new LogUpdateProcessor(req, rsp, this, next) : null;\n  }\n\n\n\n...in a nut shell: as an optimization, the factory doesn't produce a processor if it can tell from the current logging level that there is no point in using that processor.\n\nTim's theory was that some of the recent MDC/logging related changes may be affecting hte log level used i nthe nightly tests \u2013 but i'm fairly certain the root cause is much more of a fluke...\n\nSOLR-7408 introduced ConcurrentDeleteAndCreateCollectionTest in r1675274 on \"Apr 22 08:25:26 2015 UTC\" .. this is an @Nightly test that has this bit of code in it...\n\n\n    Logger.getLogger(\"org.apache.solr\").setLevel(Level.WARN);\n\n\n\nWhich means if this test runs before UpdateRequestProcessorFactoryTest in the same JVM, the log level won't be low enough for the LogUpdateProcessor to ever be created.\n\nI've confirmed that happeend in both of the very recent failures...\n\nhttps://builds.apache.org/job/Lucene-Solr-NightlyTests-trunk/696/consoleText\n\n   [junit4]   2> NOTE: All tests run in this JVM: [NotRequiredUniqueKeyTest, ShardSplitTest, DeleteLastCustomShardedReplicaTest, RequestLoggingTest, TestReplicaProperties, TestCSVResponseWriter, TestShardHandlerFactory, QueryEqualityTest, TestAnalyzeInfixSuggestions, TestSystemIdResolver, InfoHandlerTest, TestLRUStatsCache, StatsComponentTest, CoreAdminRequestStatusTest, SoftAutoCommitTest, FacetPivotSmallTest, TestTrie, SimpleFacetsTest, TestExtendedDismaxParser, TestQueryUtils, TestDocSet, TestPerFieldSimilarity, SolrCoreCheckLockOnStartupTest, SearchHandlerTest, TestSchemaManager, DirectUpdateHandlerTest, HdfsChaosMonkeySafeLeaderTest, SpellCheckCollatorTest, SolrInfoMBeanTest, TestConfigOverlay, DistributedQueueTest, TestXIncludeConfig, TestSolrJ, OutputWriterTest, HdfsLockFactoryTest, TestLeaderElectionZkExpiry, TestBM25SimilarityFactory, AddSchemaFieldsUpdateProcessorFactoryTest, PathHierarchyTokenizerFactoryTest, DistributedFacetPivotSmallAdvancedTest, BinaryUpdateRequestHandlerTest, SOLR749Test, TestComplexPhraseQParserPlugin, TestRandomMergePolicy, CachingDirectoryFactoryTest, LeaderElectionTest, HdfsNNFailoverTest, TestManagedSchemaDynamicFieldResource, OverseerCollectionProcessorTest, TestQuerySenderNoQuery, SortByFunctionTest, TestNRTOpen, AddBlockUpdateTest, TestBinaryResponseWriter, AutoCommitTest, CloudExitableDirectoryReaderTest, TestExactSharedStatsCache, HighlighterMaxOffsetTest, TestDefaultSimilarityFactory, TestSchemaNameResource, TestAuthorizationFramework, TestSchemaSimilarityResource, TestCollationFieldDocValues, TestZkChroot, ConcurrentDeleteAndCreateCollectionTest, BufferStoreTest, TestRestoreCore, QueryResultKeyTest, TermVectorComponentDistributedTest, TestFieldTypeCollectionResource, TestSolrConfigHandlerConcurrent, MoreLikeThisHandlerTest, TestChildDocTransformer, CursorMarkTest, TestSimpleQParserPlugin, XsltUpdateRequestHandlerTest, TestSurroundQueryParser, OverseerTest, FullSolrCloudDistribCmdsTest, ZkSolrClientTest, TestRandomDVFaceting, ZkCLITest, TestDistributedSearch, TestDistributedGrouping, TestRecovery, TestRealTimeGet, TestStressReorder, TestJoin, TestReload, HardAutoCommitTest, TestRangeQuery, TestGroupingSearch, SolrCmdDistributorTest, PeerSyncTest, BadIndexSchemaTest, TestSort, TestFiltering, BasicFunctionalityTest, TestIndexSearcher, ShowFileRequestHandlerTest, CurrencyFieldOpenExchangeTest, DistributedQueryElevationComponentTest, SolrIndexSplitterTest, AnalysisAfterCoreReloadTest, SignatureUpdateProcessorFactoryTest, SuggesterFSTTest, CoreAdminHandlerTest, SolrRequestParserTest, TestFoldingMultitermQuery, DocValuesTest, SuggesterTest, SpatialFilterTest, PolyFieldTest, NoCacheHeaderTest, WordBreakSolrSpellCheckerTest, SchemaVersionSpecificBehaviorTest, TestPseudoReturnFields, FieldMutatingUpdateProcessorTest, TestAtomicUpdateErrorCases, DirectUpdateHandlerOptimizeTest, TestRemoteStreaming, TestSolrDeletionPolicy1, StandardRequestHandlerTest, TestWriterPerf, DirectSolrSpellCheckerTest, TestReversedWildcardFilterFactory, DocumentAnalysisRequestHandlerTest, TestQueryTypes, PrimitiveFieldTypeTest, TestOmitPositions, FileBasedSpellCheckerTest, XmlUpdateRequestHandlerTest, DocumentBuilderTest, TestValueSourceCache, TestIndexingPerformance, RequiredFieldsTest, FieldAnalysisRequestHandlerTest, TestSolrQueryParser, LoggingHandlerTest, RegexBoostProcessorTest, SolrPluginUtilsTest, TestCollationField, ReturnFieldsTest, UpdateRequestProcessorFactoryTest]\n\n\n\nhttps://builds.apache.org/job/Lucene-Solr-NightlyTests-5.x/860/consoleText\n\n   [junit4]   2> NOTE: All tests run in this JVM: [TermVectorComponentTest, MBeansHandlerTest, TestSolrDeletionPolicy1, TestDocumentBuilder, HighlighterConfigTest, DistributedSpellCheckComponentTest, TestSchemaManager, EnumFieldTest, TestNRTOpen, TestStressLucene, TestJoin, AsyncMigrateRouteKeyTest, URLClassifyProcessorTest, TestBinaryField, SignatureUpdateProcessorFactoryTest, TestJmxMonitoredMap, TestIBSimilarityFactory, TestRandomFaceting, DistributedFacetPivotSmallTest, TestEmbeddedSolrServerConstructors, AnalyticsMergeStrategyTest, TestDFRSimilarityFactory, SuggesterWFSTTest, HdfsRecoveryZkTest, TestReRankQParserPlugin, DistributedExpandComponentTest, IndexBasedSpellCheckerTest, TestWordDelimiterFilterFactory, BufferStoreTest, QueryElevationComponentTest, TestJettySolrRunner, TestSweetSpotSimilarityFactory, DistribCursorPagingTest, TestArbitraryIndexDir, DistributedFacetPivotLargeTest, TestConfig, TestBadConfig, ConcurrentDeleteAndCreateCollectionTest, SolrCloudExampleTest, TestUniqueKeyFieldResource, TestExceedMaxTermLength, BlockCacheTest, SolrIndexConfigTest, CursorMarkTest, TestPhraseSuggestions, TestImplicitCoreProperties, TestSolr4Spatial, TestRawResponseWriter, TestFaceting, DateFieldTest, TestCryptoKeys, RuleEngineTest, OverseerStatusTest, PrimitiveFieldTypeTest, ExternalFileFieldSortTest, MultiThreadedOCPTest, RequestHandlersTest, TestRangeQuery, RulesTest, ShardSplitTest, TestCodecSupport, RecoveryAfterSoftCommitTest, CoreMergeIndexesAdminHandlerTest, LeaderElectionIntegrationTest, SchemaVersionSpecificBehaviorTest, MinimalSchemaTest, ParsingFieldUpdateProcessorsTest, ClusterStateTest, DateMathParserTest, DebugComponentTest, TestLazyCores, TestManagedSchemaDynamicFieldResource, ChaosMonkeyNothingIsSafeTest, SyncSliceTest, ZkNodePropsTest, TestMergePolicyConfig, TestCSVLoader, SolrRequestParserTest, BasicZkTest, TestFunctionQuery, ActionThrottleTest, BasicDistributedZkTest, ChaosMonkeySafeLeaderTest, OverseerTest, ClusterStateUpdateTest, TestZkChroot, TestRandomDVFaceting, ZkCLITest, TestDistributedSearch, ZkControllerTest, TestRealTimeGet, DistributedTermsComponentTest, TestCoreContainer, SolrCoreTest, PeerSyncTest, BadIndexSchemaTest, TestSort, BasicFunctionalityTest, DirectUpdateHandlerTest, HighlighterTest, SoftAutoCommitTest, ShowFileRequestHandlerTest, CurrencyFieldXmlFileTest, SimplePostToolTest, TestExtendedDismaxParser, SuggesterFSTTest, DocValuesTest, SuggesterTSTTest, PolyFieldTest, TestUpdate, TestAtomicUpdateErrorCases, DirectUpdateHandlerOptimizeTest, DefaultValueUpdateProcessorTest, SortByFunctionTest, TestRemoteStreaming, DocValuesMultiTest, DistanceFunctionTest, SolrInfoMBeanTest, XsltUpdateRequestHandlerTest, CacheHeaderTest, TestQueryUtils, StandardRequestHandlerTest, TestWriterPerf, TestReversedWildcardFilterFactory, DocumentAnalysisRequestHandlerTest, TestQueryTypes, TestOmitPositions, FileBasedSpellCheckerTest, TermsComponentTest, DocumentBuilderTest, TestValueSourceCache, PathHierarchyTokenizerFactoryTest, TestIndexingPerformance, RequiredFieldsTest, FieldAnalysisRequestHandlerTest, TestSolrQueryParser, FastVectorHighlighterTest, IndexSchemaRuntimeFieldTest, LoggingHandlerTest, SolrPluginUtilsTest, IndexSchemaTest, TestJmxIntegration, TestCollationField, UpdateRequestProcessorFactoryTest]\n\n\n\n...ironically, one of the changes i recently made was to force the log level to DEBUG for the duration of the UpdateRequestProcessorFactoryTest so we'd get full logs in the even of failure \u2013 so i'm pretty sure that will prevent the failure from ever happening again.  but what i plan to do as a more long term fix:\n\n\tfix ConcurrentDeleteAndCreateCollectionTest to reset the log level it munges\n\tmake UpdateRequestProcessorFactoryTest assert the neccessary log level needed for LogUpdateProcessor to future proof us on similar bugs\n\t(eventually) remove the forced DEBUG that i just added to the test (once some time has gone by w/o any other failures just in case i'm wrong)\n\n ",
            "id": "comment-14565681"
        },
        {
            "date": "2015-05-30T00:56:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1682570 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1682570 ]\n\nSOLR-7603: more test tweaks to protect ourselves from unexpected log levels in tests like the one introduced by SOLR-7408 ",
            "id": "comment-14565735"
        },
        {
            "date": "2015-05-30T00:59:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1682571 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1682571 ]\n\nSOLR-7603: more test tweaks to protect ourselves from unexpected log levels in tests like the one introduced by SOLR-7408 (merge r1682570) ",
            "id": "comment-14565737"
        },
        {
            "date": "2015-06-10T17:03:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1684714 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1684714 ]\n\nSOLR-7603: remove extra logging added to diagnose problem - failure hasn't reappeared since fix applied in r1682570 ",
            "id": "comment-14580808"
        },
        {
            "date": "2015-06-10T17:19:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1684718 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1684718 ]\n\nSOLR-7603: remove extra logging added to diagnose problem - failure hasn't reappeared since fix applied in r1682570 (merge r1684714) ",
            "id": "comment-14580839"
        },
        {
            "date": "2015-08-26T13:06:04+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Bulk close for 5.3.0 release ",
            "id": "comment-14713207"
        },
        {
            "date": "2017-08-24T06:25:20+0000",
            "author": "Mikhail Khludnev",
            "content": "Does it related with recent?\nhttps://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/308/\n\nFAILED:  org.apache.solr.update.processor.UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping\n\nError Message:\nTests must be run with INFO level logging otherwise LogUpdateProcessor isn't used and can't be tested.\n\nStack Trace:\njava.lang.AssertionError: Tests must be run with INFO level logging otherwise LogUpdateProcessor isn't used and can't be tested.\n        at __randomizedtesting.SeedInfo.seed([CC8B32DFC6FE1FB8:BD6FCC09B0153874]:0)\n        at org.junit.Assert.fail(Assert.java:93)\n        at org.junit.Assert.assertTrue(Assert.java:43)\n        at org.apache.solr.update.processor.UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping(UpdateRequestProcessorFactoryTest.java:101) ",
            "id": "comment-16139614"
        },
        {
            "date": "2017-08-24T16:29:53+0000",
            "author": "Hoss Man",
            "content": "Does it related with recent?\n\nIt's certainly related in that this jira (SOLR-7603) added the assert that fails w/ the message \"Tests must be run with INFO level logging...\" ... but that's just a safety guard, w/o that assert the test would still fail \u2013 just in a confusing way.\n\nthe root cause of the recent jenkins failure is still some other as yet unidentified (AFAIK) change to some code or tests that is somehow changing the logging level and breaking this test \u2013 in a similar way to how SOLR-7408 broke it back in 2015 (which is why this assert was added as a safe guard) ",
            "id": "comment-16140264"
        }
    ]
}