{
    "id": "SOLR-11406",
    "title": "Solr 7.0 cannot read indexes from 6.x versions",
    "details": {
        "labels": "",
        "priority": "Blocker",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.0.1",
            "7.1",
            "master (8.0)"
        ],
        "affect_versions": "7.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Reproduced a user problem from the mailing list.\n\nSteps:\n\n\tStart Solr 6.6.0 from an extracted download with \"bin/solr start\"\n\tCreate a core: \"bin/solr create -c foo\"\n\tAdd documents with the admin UI\n\tStop Solr\n\tCopy solr-6.6.0/server/solr/foo to solr-7.0.0/server/solr in extracted Solr 7.0 download\n\tStart Solr 7.0 with \"bin/solr start\"\n\n\n\n(I was on Windows, so I used backslashes everywhere these steps have forward slashes)\n\nSolr will be unable to start the core.  Error and stacktrace:\n\n\n2017-09-27 15:13:30.050 ERROR (coreContainerWorkExecutor-2-thread-1) [   ] o.a.s.c.CoreContainer Error waiting for SolrCore to be created\njava.util.concurrent.ExecutionException: org.apache.solr.common.SolrException: Unable to create core [foo]\n    at java.util.concurrent.FutureTask.report(FutureTask.java:122)\n    at java.util.concurrent.FutureTask.get(FutureTask.java:192)\n    at org.apache.solr.core.CoreContainer.lambda$load$118(CoreContainer.java:647)\n    at com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable.run(InstrumentedExecutorService.java:176)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$128(ExecutorUtil.java:188)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n    at java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.solr.common.SolrException: Unable to create core [foo]\n    at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:996)\n    at org.apache.solr.core.CoreContainer.lambda$load$117(CoreContainer.java:619)\n    at com.codahale.metrics.InstrumentedExecutorService$InstrumentedCallable.call(InstrumentedExecutorService.java:197)\n    ... 5 more\nCaused by: org.apache.solr.common.SolrException: Error opening new searcher\n    at org.apache.solr.core.SolrCore.<init>(SolrCore.java:988)\n    at org.apache.solr.core.SolrCore.<init>(SolrCore.java:843)\n    at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:980)\n    ... 7 more\nCaused by: org.apache.solr.common.SolrException: Error opening new searcher\n    at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:2066)\n    at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:2186)\n    at org.apache.solr.core.SolrCore.initSearcher(SolrCore.java:1071)\n    at org.apache.solr.core.SolrCore.<init>(SolrCore.java:960)\n    ... 9 more\nCaused by: java.lang.NullPointerException\n    at java.util.Objects.requireNonNull(Objects.java:203)\n    at java.util.Optional.<init>(Optional.java:96)\n    at java.util.Optional.of(Optional.java:108)\n    at java.util.stream.ReduceOps$2ReducingSink.get(ReduceOps.java:129)\n    at java.util.stream.ReduceOps$2ReducingSink.get(ReduceOps.java:107)\n    at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n    at java.util.stream.ReferencePipeline.reduce(ReferencePipeline.java:479)\n    at org.apache.solr.index.SlowCompositeReaderWrapper.<init>(SlowCompositeReaderWrapper.java:76)\n    at org.apache.solr.index.SlowCompositeReaderWrapper.wrap(SlowCompositeReaderWrapper.java:57)\n    at org.apache.solr.search.SolrIndexSearcher.<init>(SolrIndexSearcher.java:252)\n    at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:2034)\n    ... 12 more",
    "attachments": {
        "SOLR-11406.patch": "https://issues.apache.org/jira/secure/attachment/12889391/SOLR-11406.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-09-27T16:06:43+0000",
            "content": "If I delete the foo/data directory, then Solr will start with no problem, so the actual Lucene index does appear to be involved.\n\nThe user on the mailing list was trying with an index from 6.6.1, I tried 6.6.0 because that's what I already had downloaded.\n\nA quick glance at SlowCompositeReaderWrapper line 76 (the innermost \"caused by\" section references that line) leaves me with more questions and no answers.  The low-level internals are not something I understand. ",
            "author": "Shawn Heisey",
            "id": "comment-16182796"
        },
        {
            "date": "2017-09-27T16:28:38+0000",
            "content": "I too was able to reproduce using 6.6.1/7.0:\n\n\nwget http://archive.apache.org/dist/lucene/solr/6.6.1/solr-6.6.1.tgz\ntar xvfz solr-6.6.1.tgz \nwget http://mirror.metrocast.net/apache/lucene/solr/7.0.0/solr-7.0.0.tgz\ntar xvfz solr-7.0.0.tgz \ncd solr-6.6.1\nbin/solr start -e techproducts\nbin/solr stop -all\ncp -r example/techproducts/ ../solr-7.0.0/example/\ncd ../solr-7.0.0\nbin/solr start -s example/techproducts/solr\n\n\n\nAlthough bin/solr start under 7.0 appeared to succeed (Started Solr server on port 8983 (pid=16090). Happy searching!), the log (and the admin UI) show differently (this is a separate problem from the upgrade issue).  My log has the same entries as in the description:\n\n\nERROR - 2017-09-27 16:14:00.907; [   ] org.apache.solr.core.CoreContainer; Error waiting for SolrCore to be created\njava.util.concurrent.ExecutionException: org.apache.solr.common.SolrException: Unable to create core [techproducts]\n        at java.util.concurrent.FutureTask.report(FutureTask.java:122)\n        at java.util.concurrent.FutureTask.get(FutureTask.java:192)\n        at org.apache.solr.core.CoreContainer.lambda$load$118(CoreContainer.java:647)\n        at com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable.run(InstrumentedExecutorService.java:176)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n        at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$128(ExecutorUtil.java:188)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.solr.common.SolrException: Unable to create core [techproducts]\n        at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:996)\n        at org.apache.solr.core.CoreContainer.lambda$load$117(CoreContainer.java:619)\n        at com.codahale.metrics.InstrumentedExecutorService$InstrumentedCallable.call(InstrumentedExecutorService.java:197)\n        ... 5 more\nCaused by: org.apache.solr.common.SolrException: Error opening new searcher\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:988)\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:843)\n        at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:980)\n        ... 7 more\nCaused by: org.apache.solr.common.SolrException: Error opening new searcher\n        at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:2066)\n        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:2186)\n        at org.apache.solr.core.SolrCore.initSearcher(SolrCore.java:1071)\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:960)\n        ... 9 more\nCaused by: java.lang.NullPointerException\n        at java.util.Objects.requireNonNull(Objects.java:203)\n        at java.util.Optional.<init>(Optional.java:96)\n        at java.util.Optional.of(Optional.java:108)\n        at java.util.stream.ReduceOps$2ReducingSink.get(ReduceOps.java:129)\n        at java.util.stream.ReduceOps$2ReducingSink.get(ReduceOps.java:107)\n        at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n        at java.util.stream.ReferencePipeline.reduce(ReferencePipeline.java:479)\n        at org.apache.solr.index.SlowCompositeReaderWrapper.<init>(SlowCompositeReaderWrapper.java:76)\n        at org.apache.solr.index.SlowCompositeReaderWrapper.wrap(SlowCompositeReaderWrapper.java:57)\n        at org.apache.solr.search.SolrIndexSearcher.<init>(SolrIndexSearcher.java:252)\n        at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:2034)\n        ... 12 more\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16182846"
        },
        {
            "date": "2017-09-27T16:51:24+0000",
            "content": "From SlowCompositeReaderWrapper:\n\n\n64:  SlowCompositeReaderWrapper(CompositeReader reader) throws IOException {\n65:    super();\n66:    in = reader;\n67:    fields = MultiFields.getFields(in);\n68:    in.registerParentReader(this);\n69:    if (reader.leaves().isEmpty()) {\n70:      metaData = new LeafMetaData(Version.LATEST.major, Version.LATEST, null);\n71:    } else {\n72:      Version minVersion = reader.leaves().stream()\n73:          .map(LeafReaderContext::reader)\n74:          .map(LeafReader::getMetaData)\n75:          .map(LeafMetaData::getMinVersion)\n76:          .reduce((v1, v2) -> v1 == null ? null : v2 == null ? null : v2.onOrAfter(v1) ? v1 : v2)\n77:          .get();\n78:      metaData = new LeafMetaData(reader.leaves().get(0).reader().getMetaData().getCreatedVersionMajor(), minVersion, null);\n79:    }\n80:  }\n\n\n\nThis version-comparison code was added in 7.0 as part of LUCENE-7756.  The minVersion will be null for a pre-7.0 index.  I'll see if I can repro with Lucene.  (Shouldn't back-compat tests have caught this if it's a Lucene bug though?) ",
            "author": "Steve Rowe",
            "id": "comment-16182880"
        },
        {
            "date": "2017-09-27T19:02:16+0000",
            "content": "Sounds like it would be a good idea for Solr to include at least one back-compat test.\n\nBased on all available info, I think it would fail this way with an index from any 6.x version.\n\nWith an index from 4.x, loading fails.  That's expected.  The message correctly refers to the index format.\n\nWith an index from 6.3.0, the failure is the same as with 6.6.x. ",
            "author": "Shawn Heisey",
            "id": "comment-16183100"
        },
        {
            "date": "2017-09-27T23:21:38+0000",
            "content": "I'll see if I can repro with Lucene. (Shouldn't back-compat tests have caught this if it's a Lucene bug though?)\n\nSlowCompositeReaderWrapper is Solr-specific (as of LUCENE-7283), so this won't be reproducible in Lucene. \n\nThe reason for the NPE is that Stream.reduce() isn't allowed to produce nulls, which the version checking code given in a previous comment does.  From the javadocs:\n\n@throws NullPointerException if the result of the reduction is null\n\nI'll try switching to a simple loop; I expect it won't have the same problem.  Here's an example from ParallelLeafReader:\n\n\n    Version minVersion = Version.LATEST;\n    for (final LeafReader reader : this.parallelReaders) {\n      Version leafVersion = reader.getMetaData().getMinVersion();\n      if (leafVersion == null) {\n        minVersion = null;\n        break;\n      } else if (minVersion.onOrAfter(leafVersion)) {\n        minVersion = leafVersion;\n      }\n    }\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16183424"
        },
        {
            "date": "2017-09-27T23:41:29+0000",
            "content": "I'll try switching to a simple loop; I expect it won't have the same problem.\n\nPatch, fixes the issue for me.\n\nI'm going to look at creating back-compat tests. ",
            "author": "Steve Rowe",
            "id": "comment-16183449"
        },
        {
            "date": "2017-09-28T13:39:19+0000",
            "content": "All Solr tests pass with the attached patch.\n\nAdrien Grand I'd appreciate a review. ",
            "author": "Steve Rowe",
            "id": "comment-16184187"
        },
        {
            "date": "2017-09-28T14:13:07+0000",
            "content": "The patch that was submitted yesterday looks good to me, thanks for fixing! I didn't know reduce could not deal with null results and wrongly assumed at least one test would exercise this logic. Just in case, did you forget to attach a patch with your last comment or did you want me to review yesterday's patch?\n\nAs a side note, we should look into removing this slow wrapper from Solr too as a follow-up. ",
            "author": "Adrien Grand",
            "id": "comment-16184229"
        },
        {
            "date": "2017-09-28T14:33:38+0000",
            "content": "The patch that was submitted yesterday looks good to me, thanks for fixing!\n\nThanks Adrien.\n\nJust in case, did you forget to attach a patch with your last comment or did you want me to review yesterday's patch?\n\nNo, I was asking for a review of yesterday's patch. ",
            "author": "Steve Rowe",
            "id": "comment-16184255"
        },
        {
            "date": "2017-09-28T15:41:39+0000",
            "content": "A possible workaround I'm thinking of is to run IndexUpgrader on the index before trying to use it with 7.0.  Would that avoid this problem? ",
            "author": "Shawn Heisey",
            "id": "comment-16184333"
        },
        {
            "date": "2017-09-28T15:53:47+0000",
            "content": "I tried to copy an index from 6.6.0 and then run the 7.0 IndexUpgrader on it.  It did rewrite the index, but I still got the exception from this issue at startup.  I wonder if I did something wrong. ",
            "author": "Shawn Heisey",
            "id": "comment-16184360"
        },
        {
            "date": "2017-09-28T20:45:26+0000",
            "content": "This was the command I used (shown with the prompt so you can see the directory I was in):\n\n\nC:\\Users\\sheisey\\Downloads\\solr-7.0.0\\server\\solr>java -cp ..\\solr-webapp\\webapp\\WEB-INF\\lib\\lucene-core-7.0.0.jar;..\\solr-webapp\\webapp\\WEB-INF\\lib\\lucene-backward-codecs-7.0.0.jar org.apache.lucene.index.IndexUpgrader foo\\data\\index\n\n ",
            "author": "Shawn Heisey",
            "id": "comment-16184839"
        },
        {
            "date": "2017-09-29T18:52:21+0000",
            "content": "Patch for branch_7_0, includes previous fix-only patch, and adds a CHANGES entry and basic read/write testing of the (currently 6.x) indexes in Lucene's backward-codecs module.  The new test fails without the fix and succeeds with it.\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-16186234"
        },
        {
            "date": "2017-09-29T20:42:23+0000",
            "content": "Commit 2916fba3b24adce7eaf0f55a36b8287e6afc6e40 in lucene-solr's branch refs/heads/branch_7_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2916fba ]\n\nSOLR-11406: Solr 7.0 cannot read indexes from 6.x versions ",
            "author": "ASF subversion and git services",
            "id": "comment-16186388"
        },
        {
            "date": "2017-09-29T20:42:25+0000",
            "content": "Commit 47ea4283d9311c1e8619dcedd262f285954120ac in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=47ea428 ]\n\nSOLR-11406: Solr 7.0 cannot read indexes from 6.x versions ",
            "author": "ASF subversion and git services",
            "id": "comment-16186389"
        },
        {
            "date": "2017-09-29T20:42:26+0000",
            "content": "Commit 39ba1c3da56c5ac3e9476830efe1f4c396ccf7c0 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=39ba1c3 ]\n\nSOLR-11406: Solr 7.0 cannot read indexes from 6.x versions ",
            "author": "ASF subversion and git services",
            "id": "comment-16186390"
        },
        {
            "date": "2017-10-06T21:56:46+0000",
            "content": "Closing after 7.0.1 release. ",
            "author": "Steve Rowe",
            "id": "comment-16195299"
        },
        {
            "date": "2017-10-09T17:43:28+0000",
            "content": "I have the same problem but using SolrCloud.\nI am trying to upgrade from 6.6.1 to 7.0.1 but one installed the new version, solrCloud does not start.\nHere is the stacktrace:017-10-09 17:28:44.815 INFO  (main) [   ] o.a.s.c.ZkController Register node as live in ZooKeeper:/live_nodes/161.72.52.153:8983_solr\n2017-10-09 17:28:44.826 INFO  (zkCallback-4-thread-1-processing-n:161.72.52.153:8983_solr) [   ] o.a.s.c.c.ZkStateReader Updated live nodes from ZooKeeper... (2) -> (3)\n2017-10-09 17:28:45.141 INFO  (main) [   ] o.a.s.c.CorePropertiesLocator Found 4 core definitions underneath /var/solr/data\n2017-10-09 17:28:45.146 INFO  (main) [   ] o.a.s.c.CorePropertiesLocator Cores are: [weave_opr3plus_shard3_replica2, weave_opr3plus_shard2_replica1, weave_opr3plus_shard6_replica2, weave_opr3plus_shard5_replica1]\n2017-10-09 17:28:45.168 INFO  (coreLoadExecutor-6-thread-3-processing-n:161.72.52.153:8983_solr) [   ] o.a.s.c.TransientSolrCoreCacheDefault Allocating transient cache for 2147483647 transient cores\n2017-10-09 17:28:45.173 ERROR (coreContainerWorkExecutor-2-thread-1-processing-n:161.72.52.153:8983_solr) [   ] o.a.s.c.CoreContainer Error waiting for SolrCore to be created\njava.util.concurrent.ExecutionException: org.apache.solr.common.SolrException: Unable to create core [weave_opr3plus_shard2_replica1]\n        at java.util.concurrent.FutureTask.report(FutureTask.java:122)\n        at java.util.concurrent.FutureTask.get(FutureTask.java:192)\n        at org.apache.solr.core.CoreContainer.lambda$load$12(CoreContainer.java:648)\n        at com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable.run(InstrumentedExecutorService.java:176)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n        at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:188)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.solr.common.SolrException: Unable to create core [weave_opr3plus_shard2_replica1]\n        at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:1022)\n        at org.apache.solr.core.CoreContainer.lambda$load$11(CoreContainer.java:619)\n        at com.codahale.metrics.InstrumentedExecutorService$InstrumentedCallable.call(InstrumentedExecutorService.java:197)\n        ... 5 more\nCaused by: org.apache.solr.common.SolrException: No coreNodeName for CoreDescriptor[name=weave_opr3plus_shard2_replica1;instanceDir=/var/solr/data/weave_opr3plus_shard2_replica1]\n        at org.apache.solr.cloud.ZkController.checkStateInZk(ZkController.java:1514)\n        at org.apache.solr.cloud.ZkController.preRegister(ZkController.java:1474)\n        at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:999)\n        ... 7 more\n2017-10-09 17:28:45.177 ERROR (coreContainerWorkExecutor-2-thread-1-processing-n:161.72.52.153:8983_solr) [   ] o.a.s.c.CoreContainer Error waiting for SolrCore to be created\njava.util.concurrent.ExecutionException: org.apache.solr.common.SolrException: Unable to create core [weave_opr3plus_shard3_replica2]\n        at java.util.concurrent.FutureTask.report(FutureTask.java:122)\n        at java.util.concurrent.FutureTask.get(FutureTask.java:192)\n        at org.apache.solr.core.CoreContainer.lambda$load$12(CoreContainer.java:648)\n        at com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable.run(InstrumentedExecutorService.java:176)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n        at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:188)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.solr.common.SolrException: Unable to create core [weave_opr3plus_shard3_replica2]\n        at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:1022)\n        at org.apache.solr.core.CoreContainer.lambda$load$11(CoreContainer.java:619)\n        at com.codahale.metrics.InstrumentedExecutorService$InstrumentedCallable.call(InstrumentedExecutorService.java:197)\n        ... 5 more\nCaused by: org.apache.solr.common.SolrException: No coreNodeName for CoreDescriptor[name=weave_opr3plus_shard3_replica2;instanceDir=/var/solr/data/weave_opr3plus_shard3_replica2]\n        at org.apache.solr.cloud.ZkController.checkStateInZk(ZkController.java:1514)\n        at org.apache.solr.cloud.ZkController.preRegister(ZkController.java:1474)\n        at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:999)\n        ... 7 more ",
            "author": "Marcello Lodi",
            "id": "comment-16197370"
        },
        {
            "date": "2017-10-09T17:47:35+0000",
            "content": "You need to install 7.0.1 to get past this. ",
            "author": "Erick Erickson",
            "id": "comment-16197380"
        },
        {
            "date": "2017-10-09T17:51:13+0000",
            "content": "The stack trace posted here is completely unrelated. So this has nothing to do with the 7.0.0 bug described in this issue. It looks like something else went wrong. Please read the upgrade guidelines! To me it looks like you need to modify some config files. ",
            "author": "Uwe Schindler",
            "id": "comment-16197394"
        }
    ]
}