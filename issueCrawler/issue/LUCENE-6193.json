{
    "id": "LUCENE-6193",
    "title": "Collapse identical catch branches in try-catch statements",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Trivial",
        "status": "Closed",
        "type": "Task"
    },
    "description": "We are on Java 7+ so we can reduce verbosity by collapsing identical catch statements into one. We did the same for solr in SOLR-7014.",
    "attachments": {
        "LUCENE-6193.patch": "https://issues.apache.org/jira/secure/attachment/12693741/LUCENE-6193.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14286524",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-01-21T23:20:16+0000",
            "content": "The only places where I did not make these changes are where the catch blocks have different comments or the code wasn't ASL.\n\nThe following were excluded:\n\n\torg.apache.lucene.analysis.core.TestFactories\n\torg.apache.lucene.index.TestReaderClosed\n\torg.apache.lucene.queryparser.flexible.messages.NLS (one instance)\n\torg.egothor.stemmer.Diff (license different from ASL)\n\torg.tartarus.snowball.SnowballProgram (license different from ASL)\n\n "
        },
        {
            "id": "comment-14286570",
            "author": "ASF subversion and git services",
            "date": "2015-01-21T23:48:36+0000",
            "content": "Commit 1653707 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1653707 ]\n\nLUCENE-6193: Collapse identical catch branches in try-catch statements "
        },
        {
            "id": "comment-14286575",
            "author": "ASF subversion and git services",
            "date": "2015-01-21T23:49:56+0000",
            "content": "Commit 1653709 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653709 ]\n\nLUCENE-6193: Collapse identical catch branches in try-catch statements "
        },
        {
            "id": "comment-14287058",
            "author": "Uwe Schindler",
            "date": "2015-01-22T07:34:22+0000",
            "content": "Hi,\nFYI: If you had in the past the multiple catch statements around reflection errors, all those exceptions have new superclass in Java 7: ReflectiveOperationException. This can sometimes simplify the code more! This applies in most cases around where you have stuff like ClassNotFoundException, IllegalAccessException, InstantiationException, InvocationTargetException, NoSuchFieldException, NoSuchMethodException, all handled by identical catch.\n\nJust catching ReflectiveOperationException around reflection access is in most cases all you need now. "
        },
        {
            "id": "comment-14287586",
            "author": "ASF subversion and git services",
            "date": "2015-01-22T15:21:29+0000",
            "content": "Commit 1653909 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1653909 ]\n\nLUCENE-6193: Use ReflectiveOperationException to simplify catch clauses around reflection errors "
        },
        {
            "id": "comment-14287588",
            "author": "ASF subversion and git services",
            "date": "2015-01-22T15:22:26+0000",
            "content": "Commit 1653911 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653911 ]\n\nLUCENE-6193: Use ReflectiveOperationException to simplify catch clauses around reflection errors "
        },
        {
            "id": "comment-14287604",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-01-22T15:24:02+0000",
            "content": "Thanks Uwe! I changed LockStressTest and JavascriptCompiler to use ReflectiveOperationException. "
        },
        {
            "id": "comment-14495327",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:37+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}