{
    "id": "SOLR-8617",
    "title": "Add a wait for active option in to add replica",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Won't Fix",
        "priority": "Minor"
    },
    "description": "Currently the AddReplica call returns success as soon as the replica is created . It doesn't wait for the replica to become active .\n\nIt would be useful to add a waitForActive flag so that the call would block till the replica becomes active.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-28T19:55:41+0000",
            "author": "Anshum Gupta",
            "content": "We don't want for the same when we split shard either. Guess I'm missing something here but why do we need this? Under most circumstances, the http request would time out because it'd take some time for the new replica to sync up. ",
            "id": "comment-15122220"
        },
        {
            "date": "2016-01-28T20:11:59+0000",
            "author": "Varun Thacker",
            "content": "Guess I'm missing something here but why do we need this?\n\nWhen you add a replica the API call would return success but the replica can't be used for say the next 10 minutes while it fetches the index feels unintuitive ?\n\nUnder most circumstances, the http request would time out because it'd take some time for the new replica to sync up.\n\nSure and we should always use async in those cases. ",
            "id": "comment-15122249"
        },
        {
            "date": "2016-01-28T20:15:12+0000",
            "author": "Anshum Gupta",
            "content": "Sure, though you could still achieve this via ADDREPLICA + CLUSTERSTATUS right now.  ",
            "id": "comment-15122253"
        },
        {
            "date": "2016-01-28T22:16:43+0000",
            "author": "Varun Thacker",
            "content": "Well thats true. I guess the only advantage is that it's more consistent and no work required to parse the cluster status response . ",
            "id": "comment-15122415"
        },
        {
            "date": "2016-01-30T06:22:19+0000",
            "author": "Shai Erera",
            "content": "I agree w/ Anshum Gupta, I feel like the ASYNC call is enough for this use case. If the connection times out, the client needs to issue CLUSTERSTATUS until it's ACTIVE, and so we didn't gain anything. Also, in the general case, a Solr node may be restarted, and by the time it got back up it may need to recover from the leader, therefore being unusable for a certain amount of time. So I don't see an ADDREPLICA as different.\n\nI'd say that shard splitting and adding replicas should be considered as long running operations, and therefore you should use the ASYNC option.\n\nBTW, SPLITSHARD says that it returns when the shard has been split, but it doesn't say what's the status of the new replicas specifically. So when it returns, I know the shard has been split, but do the new sub shards already have their repFactor replicas? Are they all ACTIVE?\n\nIn any case, I think that ADDREPLICA and SPLITSHARD are consistent now: both return when the command was executed. But because of the nature of our async operations with replicas and recovery, the new replicas/shards may not yet be usable. But that's seamless in Solr in general, and is taken care of. So I think we shouldn't complicate the API and just advertise the use of ASYNC more.\n\nFWIW, I think we should have an ASYNC option on DELETESHARD too, since deleting a very big shard w/ many replicas may timeout the HTTP connection. But that's a matter for a different issue. ",
            "id": "comment-15124768"
        },
        {
            "date": "2016-01-30T20:05:50+0000",
            "author": "Mark Miller",
            "content": "Yeah, seems best to wait for a concrete use case to add the option?\n\nA lot of the original work I did on SolrCloud calls, I didn't pay much attention to waits (though I assumed we would add some options for them) for a couple reasons:\n\n\n\tSome calls are really long running\n\tI had this idea that we wanted to get to like this model and actual state situation where you could make changes to the model, and they would almost never fail and be very quick, and the cluster would work to make the actual state match the model over time.\n\n ",
            "id": "comment-15125056"
        },
        {
            "date": "2016-02-08T18:06:26+0000",
            "author": "Varun Thacker",
            "content": "I had this idea that we wanted to get to like this model and actual state situation where you could make changes to the model, and they would almost never fail and be very quick, and the cluster would work to make the actual state match the model over time.\n\nOkay I shall not add complexity then  \n\nMarking this Jira as not as won't-fix ",
            "id": "comment-15137373"
        }
    ]
}