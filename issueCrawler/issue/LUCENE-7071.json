{
    "id": "LUCENE-7071",
    "title": "Can we reeduce excessive byte[] copying in OfflineSorter?",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "OfflineSorter, which dimensional points uses heavily in the > 1D case,\nworks by reading one partition, a set of N unsorted values, from disk\nand sorting it in memory and writing it out again.\n\nThe sort invokes a provided Comparator on two BytesRef values,\neach of which is fully copied from the ByteBlockPool, when it could\noften reference a slice from the pool instead.\n\nAnother byte[] copy happens when iterating through the sorted values.\n\nThis is an optimization ... I'm targeting 6.1.0 not 6.0.0!",
    "attachments": {
        "LUCENE-7071.patch": "https://issues.apache.org/jira/secure/attachment/12791667/LUCENE-7071.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15182135",
            "author": "Michael McCandless",
            "date": "2016-03-06T12:44:26+0000",
            "content": "Patch, avoiding copying bytes when the referenced slice already lies within a single byte[] block from the pool.  The new APIs are a bit ugly looking, however, they are package private, so I think it's OK?  I also can't think of any cleaner way to pack bytes in so nothing is \"wasted\", yet avoid copying bytes in the common case.\n\nI also stumbled upon and fixed some pre-existing \"ignore BytesRef.offset\" bugs in suggest's SortedInputIterator.\n\nThis gives a ~10% speedup on the time it takes to merge all ~61M 2D lat/lon points in the London, UK benchmark. "
        },
        {
            "id": "comment-15182317",
            "author": "Robert Muir",
            "date": "2016-03-06T20:44:25+0000",
            "content": "I think its ok since its package-private. We should avoid doing this kind of copying in a comparison function!  "
        },
        {
            "id": "comment-15183961",
            "author": "ASF subversion and git services",
            "date": "2016-03-07T23:11:33+0000",
            "content": "Commit 3d633c6e68ec7a2e47d398daae203582537593a4 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3d633c6 ]\n\nLUCENE-7071: reduce byte copying costs of OfflineSorter "
        },
        {
            "id": "comment-15184049",
            "author": "ASF subversion and git services",
            "date": "2016-03-07T23:53:48+0000",
            "content": "Commit 549e6d7c497b1da0368f012ef0a2521cf0548582 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=549e6d7 ]\n\nLUCENE-7071: reduce byte copying costs of OfflineSorter "
        },
        {
            "id": "comment-15184051",
            "author": "Michael McCandless",
            "date": "2016-03-07T23:54:11+0000",
            "content": "Yay, a not-for-6.0 issue! "
        },
        {
            "id": "comment-15279117",
            "author": "Hoss Man",
            "date": "2016-05-10T22:23:10+0000",
            "content": "\nManually correcting fixVersion per Step #S5 of LUCENE-7271 "
        }
    ]
}