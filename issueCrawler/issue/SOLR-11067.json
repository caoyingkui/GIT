{
    "id": "SOLR-11067",
    "title": "REPLACENODE should make it optional to provide a target node",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling",
            "SolrCloud"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The REPLACENODE API currently accepts a replacement target and moves all replicas from the source to the given target. We can improve this by having it figure out the right target node for each replica contained in the source.\n\nThis can also then be a thin wrapper over nodeLost event just like how UTILIZENODE (SOLR-9743) can be a wrapper over nodeAdded event.",
    "attachments": {
        "SOLR-11067.patch": "https://issues.apache.org/jira/secure/attachment/12908378/SOLR-11067.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-31T10:48:21+0000",
            "content": "Commit aeef6001acfc69394e0ba48585be526d2e85227d in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=aeef600 ]\n\nSOLR-11067: REPLACENODE should identify appropriate nodes if targetNode is not provided ",
            "author": "ASF subversion and git services",
            "id": "comment-16346586"
        },
        {
            "date": "2018-01-31T10:49:42+0000",
            "content": "Commit 3ad61d2f9ce62ac12ab6021ca3f3a1085d9c2d75 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3ad61d2 ]\n\nSOLR-11067: REPLACENODE should identify appropriate nodes if targetNode is not provided ",
            "author": "ASF subversion and git services",
            "id": "comment-16346589"
        },
        {
            "date": "2018-01-31T20:18:50+0000",
            "content": "Commit 0b0e8e5e7a67362c5757c1df4cee249ad193b51b in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0b0e8e5 ]\n\nSOLR-11880: ref-guide ",
            "author": "Noble Paul",
            "id": "comment-16347546"
        },
        {
            "date": "2018-01-31T20:19:06+0000",
            "content": "Commit 32ca9cf4d83731511c0cdfa073659247959677cc in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=32ca9cf ]\n\nSOLR-11880: ref-guide ",
            "author": "Noble Paul",
            "id": "comment-16347549"
        },
        {
            "date": "2018-02-26T23:23:55+0000",
            "content": "\n\nSince this issue is still marked \"Open\" i'll post this here instead of creating a new jira..\n\nThe logic used by REPLACENODE when no target is specified appears to be flawed.  The logs from jenkins falures of ReplaceNodeNoTargetTest show that sometimes the 'source' node is choosen to be it's own replacement...\n\nhttps://jenkins.thetaphi.de/view/Lucene-Solr/job/Lucene-Solr-master-Linux/21538/\n\n   [junit4]   2> 1369525 INFO  (qtp1209949969-11440) [n:127.0.0.1:35749_solr    ] o.a.s.h.a.CollectionsHandler Invoked Collection Action :replacenode with params async=001&action=REPLACENODE&source=127.0.0.1:45303_solr&wt=javabin&version=2 and sendToOCPQueue=true\n   [junit4]   2> 1369526 INFO  (qtp1209949969-11440) [n:127.0.0.1:35749_solr    ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/collections params={async=001&action=REPLACENODE&source=127.0.0.1:45303_solr&wt=javabin&version=2} status=0 QTime=1\n...\n   [junit4]   2> 1369527 INFO  (OverseerThreadFactory-4614-thread-2-processing-n:127.0.0.1:33719_solr) [n:127.0.0.1:33719_solr    ] o.a.s.c.a.c.ReplaceNodeCmd Going to create replica for collection=replacenodetest_coll_notarget shard=shard1 on node=null\n...\n   [junit4]   2> 1369551 INFO  (OverseerThreadFactory-4614-thread-2-processing-n:127.0.0.1:33719_solr) [n:127.0.0.1:33719_solr    ] o.a.s.c.a.c.AddReplicaCmd Node Identified 127.0.0.1:45303_solr for creating new replica\n   [junit4]   2> 1369553 INFO  (OverseerStateUpdate-72215357633069068-127.0.0.1:33719_solr-n_0000000000) [n:127.0.0.1:33719_solr    ] o.a.s.c.o.SliceMutator createReplica() {\n   [junit4]   2>   \"operation\":\"addreplica\",\n   [junit4]   2>   \"collection\":\"replacenodetest_coll_notarget\",\n   [junit4]   2>   \"shard\":\"shard1\",\n   [junit4]   2>   \"core\":\"replacenodetest_coll_notarget_shard1_replica_n21\",\n   [junit4]   2>   \"state\":\"down\",\n   [junit4]   2>   \"base_url\":\"http://127.0.0.1:45303/solr\",\n   [junit4]   2>   \"node_name\":\"127.0.0.1:45303_solr\",\n   [junit4]   2>   \"type\":\"NRT\"} \n\n\n\nNOTE: The test currently fails with an obscurely vague java.lang.AssertionError (when the node count of cores on the source node is non-0 after the command completes) roughly ~30% of the times it is run by jenkins.  This is consistent with the idea that REPLACENODE command is randomly picking from all currently active NODES (w/o excluding the one to be replaced) since there are 6 nodes to choose from, but a total of 10 cores in the cluster \u2013 so instead of just failing in 1/6th of the runes, 2 out 3 runs there are 2 cores on the source node and the randomized selection happens twice in the test:  (1/3 * 1/6) + (2/3 * (1/6 + 1/6)) ~= 27%\n\n\n\nI plan to commit some improvements to the test assertion/logging that helped me in realizing that the root problem was that entirely new cores were being added to the `node2bdecommissioned` which lead to discovering the (aparent) root cause failure, but someone who understands the actual `REPLACENODE` code needs to figure out \"the right\" fix for this bug.\n\nSIDE NOTE: what happens if i try `REPLACENODE` w/o a target on a cluster with only one node? presumably that should be a failure case \u2013 but i'm confident we don't have a test for it. (because if we did then based on the logs above it would be failing 100% of the time as it just kept re-using the source node every time)  ",
            "author": "Hoss Man",
            "id": "comment-16377774"
        },
        {
            "date": "2018-02-26T23:51:38+0000",
            "content": "Commit 8760e3225fe98c23210a0c73aff4c8f56bb7f39f in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8760e32 ]\n\nSOLR-11067: improve tests logging ",
            "author": "ASF subversion and git services",
            "id": "comment-16377804"
        },
        {
            "date": "2018-02-26T23:51:54+0000",
            "content": "Commit 00d3271c97f15dcdfcfc0f9731c358df7b0e89e6 in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=00d3271 ]\n\nSOLR-11067: improve tests logging\n\n(cherry picked from commit 8760e3225fe98c23210a0c73aff4c8f56bb7f39f) ",
            "author": "ASF subversion and git services",
            "id": "comment-16377806"
        },
        {
            "date": "2018-02-27T00:00:50+0000",
            "content": "Commit 1fc3ca0cbb2fcdd99c4a58dcf98d346e1bab5015 in lucene-solr's branch refs/heads/master from noble\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1fc3ca0 ]\n\nSOLR-11067: AwaitsFix. The test fails often as the target node some times is same as the source node ",
            "author": "ASF subversion and git services",
            "id": "comment-16377815"
        },
        {
            "date": "2018-02-27T21:32:12+0000",
            "content": "Commit f54ac04bee324ddfdd6816361ff984ac0533b6fc in lucene-solr's branch refs/heads/branch_7x from noble\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f54ac04 ]\n\nSOLR-11067: AwaitsFix. The test fails often as the target node some times is same as the source node ",
            "author": "ASF subversion and git services",
            "id": "comment-16379307"
        }
    ]
}