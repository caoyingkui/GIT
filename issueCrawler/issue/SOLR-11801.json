{
    "id": "SOLR-11801",
    "title": "support customisation of the \"highlighting\" query response element",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "highlighter"
        ],
        "type": "New Feature",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The objective and use case behind the proposed changes is to be able to receive not the out-of-the-box highlighting map\n\n{\n  ...\n  \"highlighting\" : {\n    \"MA147LL/A\" : {\n      \"manu\" : [\n        \"<em>Apple</em> Computer Inc.\"\n      ]\n    }\n  }\n}\n\n\nas illustrated in https://lucene.apache.org/solr/guide/7_2/highlighting.html#highlighting-in-the-query-response but to be able to alternatively name and customise the highlighting element of the query response to (for example) be like this\n\n{\n  ...\n  \"custom_highlighting\" : [\n    {\n      \"id\" : \"MA147LL/A\",\n      \"snippets\" : {\n        \"manu\" : [\n          \"<em>Apple</em> Computer Inc.\"\n        ]\n      }\n    }\n  ]\n}\n\n\nwhere the highlighting element itself is a list and where the keys of each list element are 'knowable' in advance i.e. they are not 'unknowable' document ids.",
    "attachments": {
        "2618 jenkins.log": "https://issues.apache.org/jira/secure/attachment/12937330/2618%20jenkins.log",
        "17766 jenkins.log": "https://issues.apache.org/jira/secure/attachment/12937331/17766%20jenkins.log",
        "SOLR-11801.patch": "https://issues.apache.org/jira/secure/attachment/12903930/SOLR-11801.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-28T17:47:23+0000",
            "content": "support customisation of the \"highlighting\" query response element\n(Ramsey Haddad, Pranav Murugappan, Christine Poerschke)\n\nThe attached patch meets the objective but we would welcome feedback and input, generally and specifically on the following points:\n\n\n\tCustomHighlightComponentTest extending AbstractFullDistribZkTestBase seems a little heavy. To do/Yet to explore extending SolrCloudTestCase instead whilst still using the Config API, similar to TestReqParamsAPI.\n\n\n\n\n\tDavid Smiley, you as part of SOLR-9708 deprecated some code portions and mentioned about future restructuring. It seems the changes proposed here would not interfere with such plans, do you agree?\n\n\n\n\n\tInstead of refactoring the code as attached to allow customisation, might there be scope for and/or value in formally exposing the alternative \"highlighting\" query response element e.g. via a new hl.collator parameter (similar to JSON Response Writer's json.nl parameter) e.g.\n\t\n\t\thl.collator=mapmap - the default corresponding to current/existing behaviour, and\n\t\thl.collator=arrmap - the alternative format as in the patch's test component, and\n\t\t(potentially in future) hl.collator=arrarr - avoiding use of the \"manu\" field as a key in the snippets map, i.e.\n\n{\n  ...\n  \"highlighting\" : [\n    {\n      \"id\" : \"MA147LL/A\",\n      \"highlights\" : [\n        {\n          \"field\" : \"manu\",\n          \"snippets\" : [\n            \"<em>Apple</em> Computer Inc.\"\n          ]\n        }\n      ]\n    }\n  ]\n}\n\n\n\t\n\t\n\n ",
            "author": "Christine Poerschke",
            "id": "comment-16305622"
        },
        {
            "date": "2017-12-29T04:48:50+0000",
            "content": "If the point here to make it easier for Solr plugin authors (a subset of Solr users) to customize the highlighting response then wouldn't it be simpler to add a few protected methods to HighlightComponent and suggest it be subclassed, instead of adding a new abstraction \"HighlightCollator\"?  Or if the objective is to also provide a hl.collator param with some options then I can understand that you might want this collator thing.  But I'm not sure what value there is to your suggested hl.collator=mapmap|arrmap params... seems a matter of taste.\n\nBTW it would be nice if the highlight component's response was restructured to optionally allow returning richer information \u2013 see SOLR-1954 (return char offsets).  Certainly not to be tackled in this issue but just want to share.\n\nDavid Smiley, you as part of SOLR-9708 deprecated some code portions and mentioned about future restructuring. It seems the changes proposed here would not interfere with such plans, do you agree?\n\nYes.\n ",
            "author": "David Smiley",
            "id": "comment-16305986"
        },
        {
            "date": "2017-12-29T04:53:02+0000",
            "content": "BTW somewhat related but I've been kicking around an idea of that Solr ought to have a HighlightDocTransformer as an alternative to the HighlightComponent.  Why set aside highlighting in the Solr response when it's per-document information \u2013 it ought to go in the document response! ",
            "author": "David Smiley",
            "id": "comment-16305988"
        },
        {
            "date": "2017-12-29T13:22:02+0000",
            "content": "Thanks David for the quick reply!\n\nIf the point here to make it easier for Solr plugin authors (a subset of Solr users) to customize the highlighting response ... Or if the objective is to also provide a hl.collator param ...\n\nWhilst the two objectives are not mutually exclusive the main point was for easier customisation and for the hl.collator param to be added only if easier customisation is not enough of an objective in its own right or because there is demand for a hl.collator param.\n\n... I've been kicking around an idea ... Why set aside highlighting in the Solr response when it's per-document information \u2013 it ought to go in the document response!\n\nThat's a great idea, having the highlights on a per-document basis will make things easier for Solr clients i.e. no need to fold the highlighting response into the main response or to pass around two separate response elements.\n\nOkay, given that customisation of the highlighting response is probably a relatively niche use case and on the assumption that in future the highlighting response element could go away in favour of per-document highlights, then the introduction of a new hl.collator param doesn't quite make sense in my opinion and only the easier customisation objective remains.\n\n... wouldn't it be simpler to add a few protected methods to HighlightComponent and suggest it be subclassed, instead of adding a new abstraction \"HighlightCollator\"? ...\n\nThe patch proposes just the one new protected method to obtain a collator object; the collator object then defines the methods used in collating and it's (hopefully) clear that way that the convertHighlights/addHighlights/getAllHighlights methods need to operate in concert.\n\nThe collator abstraction could be removed and as you put it \"a few protected methods\" be added directly instead. This would be less clear in terms of code structure though I think; the collator is a combination of its methods and a supporting data structure with the custom collator using a different data structure type.\n\nSigh, writing that made me realise that with the collator containing (per request) state it should not be a member of the highlight component itself, per request state such as the doHighlights flag is stored in the ResponseBuilder but intuitively I'm reluctant to add a highlightCollator field to the ResponseBuilder class ... okay, some more thinking needed ...\n\nBTW it would be nice if the highlight component's response was restructured to optionally allow returning richer information \u2013 see SOLR-1954 (return char offsets). Certainly not to be tackled in this issue but just want to share.\n\nThanks for sharing! So richer information could then mean being able to distinguish a snippet early on in the text from a snippet that is later on in the text, yes, that makes sense to me as a use case, though yes out of scope for this issue here. ",
            "author": "Christine Poerschke",
            "id": "comment-16306270"
        },
        {
            "date": "2017-12-29T13:29:52+0000",
            "content": "... CustomHighlightComponentTest extending AbstractFullDistribZkTestBase seems a little heavy. To do/Yet to explore extending SolrCloudTestCase instead whilst still using the Config API ...\n\nAttaching revised patch. The CustomHighlightComponentTest now extends SolrCloudTestCase. Also the (test) custom highlighting response now uses \"custom_highlighting\" as the response key since solrj QueryResponse requires that the \"highlighting\" response element has its existing structure.\n\nnext step: think about how to not have per-request state within a HighlightComponent (highlightCollator) field. ",
            "author": "Christine Poerschke",
            "id": "comment-16306275"
        },
        {
            "date": "2017-12-29T15:05:41+0000",
            "content": "Attaching revised patch which does away with the previously proposed HighlightCollator abstraction in favour of a quintet of five protected methods; the finishStage's typed arr changes to be of Object[] type which is a bit ugly but not the end of the world either.\n\nThe new protected methods are consecutively arranged and located at the end of the class, they are javadoc-ed to indicate their purpose and the CustomHighlightComponentTest class has been tweaked a little to make it more suitable for reuse by anyone writing a custom highlight component.\n\nWhat do you think? ",
            "author": "Christine Poerschke",
            "id": "comment-16306328"
        },
        {
            "date": "2017-12-29T16:50:58+0000",
            "content": "Looks fine to me Christine.  Some nit picks...\n\n\tCould CustomHighlightComponent be a static inner class of the test that uses it?\n\tIMO the javadocs on these methods could lose the common leading part \"Expert: sub-class and override this method to return highlighting information ...\" to just get to the point, or lose it altogether \u2013 some future Solr hacker will probably look at the test to truly get the gist.  Protected methods imply you can subclass and override them.  It's a matter of taste I know; I don't like repetition or superfluous things.  This is up to you.\n\n ",
            "author": "David Smiley",
            "id": "comment-16306370"
        },
        {
            "date": "2017-12-29T17:10:56+0000",
            "content": "Also, another nit-pick, please heed the wisdom here: https://stackoverflow.com/questions/13327534/details-of-difference-between-see-and-inheritdoc   \u2013 thus remove the @inheritDoc stuff from your IDE template as it's noisy boilerplate. ",
            "author": "David Smiley",
            "id": "comment-16306388"
        },
        {
            "date": "2018-01-02T14:29:12+0000",
            "content": "Polished patch as nit-pick suggested. I agree that less-is-more w.r.t. javadocs; LUCENE-8115 proposes to fail precommit on unnecessary @inheritDoc use. ",
            "author": "Christine Poerschke",
            "id": "comment-16308123"
        },
        {
            "date": "2018-01-03T13:33:52+0000",
            "content": "+1 excellent.  It's nice to see a few KB of the patch disappear  ",
            "author": "David Smiley",
            "id": "comment-16309652"
        },
        {
            "date": "2018-01-04T14:55:28+0000",
            "content": "Commit 65c842f9faed1c9de9dce38a247a43c36b82873f in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=65c842f ]\n\nSOLR-11801: Support customisation of the highlighting query response element.\n(Ramsey Haddad, Pranav Murugappan, David Smiley, Christine Poerschke) ",
            "author": "ASF subversion and git services",
            "id": "comment-16311431"
        },
        {
            "date": "2018-01-04T15:01:12+0000",
            "content": "Commit b09ee29ba2efad2fb2f0cc452a16142b3b99842e in lucene-solr's branch refs/heads/branch_7x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b09ee29 ]\n\nSOLR-11801: Support customisation of the highlighting query response element.\n(Ramsey Haddad, Pranav Murugappan, David Smiley, Christine Poerschke) ",
            "author": "ASF subversion and git services",
            "id": "comment-16311439"
        },
        {
            "date": "2018-01-04T15:20:44+0000",
            "content": "Thanks everyone! ",
            "author": "Christine Poerschke",
            "id": "comment-16311480"
        },
        {
            "date": "2018-08-27T20:43:15+0000",
            "content": "It appears this test is a bit flakey, and Erick is about to badapple it.  I went to the fucit build failure report and saw the failures for this test.  I'll attach some console exports of just the output for this failing test.  It's not clear to me what's wrong.  The seeds don't reproduce, so there's some timing issue. ",
            "author": "David Smiley",
            "id": "comment-16594202"
        },
        {
            "date": "2018-08-28T02:46:16+0000",
            "content": "David Smiley I can beast the heck out of this if you need me to. ",
            "author": "Erick Erickson",
            "id": "comment-16594427"
        },
        {
            "date": "2018-08-28T13:47:48+0000",
            "content": "I just filed SOLR-12706 and this test seems to have caused it many times, although I don't know what the relationship is. ",
            "author": "David Smiley",
            "id": "comment-16594991"
        }
    ]
}