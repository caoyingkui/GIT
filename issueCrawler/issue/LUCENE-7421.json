{
    "id": "LUCENE-7421",
    "title": "Speed up BS2 by caching the 2nd lowest doc id in the priority queue",
    "details": {
        "resolution": "Won't Fix",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "BS2 uses a priority queue in order to merge several sorted iterators into a new sorted iterator. We call updateTop every time that we move the 'top' iterator forward, which requires to check the size of the priority queue at least twice and perform at least two comparisons of doc ids.\n\nInstead, DisjunctionSumScorer could cache the 2nd lowest doc id of the priority queue and only call updateTop when the doc id of the entry at the top of the priority queue goes beyong the 2nd lowest doc id. While this would involve slightly more work in the case that the PQ has two high-cardinality clauses whose docs are interleaved, this would help when one clause has a much higher cardinality than the other ones or when the doc ids of the various clauses are clustered.",
    "attachments": {
        "LUCENE-7421.patch": "https://issues.apache.org/jira/secure/attachment/12825015/LUCENE-7421.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15432486",
            "author": "Adrien Grand",
            "date": "2016-08-23T09:29:09+0000",
            "content": "Here is a patch. I tested it on wikimedium10m by disabling BS1:\n\n\n                    TaskQPS baseline      StdDev   QPS patch      StdDev                Pct diff\n         MedSloppyPhrase       31.52      (5.8%)       31.38      (6.1%)   -0.4% ( -11% -   12%)\n               LowPhrase       79.45      (3.7%)       79.12      (5.3%)   -0.4% (  -9% -    8%)\n            OrNotHighMed      160.15      (3.4%)      159.62      (3.0%)   -0.3% (  -6% -    6%)\n         LowSloppyPhrase       18.74      (6.8%)       18.70      (6.7%)   -0.2% ( -12% -   14%)\n              AndHighLow      571.10      (5.8%)      570.18      (6.4%)   -0.2% ( -11% -   12%)\n                HighTerm       93.87      (7.1%)       93.83      (6.1%)   -0.1% ( -12% -   14%)\n             LowSpanNear      191.42      (4.2%)      191.59      (4.2%)    0.1% (  -8% -    8%)\n            HighSpanNear        2.69      (4.8%)        2.70      (5.4%)    0.1% (  -9% -   10%)\n            OrNotHighLow      766.17      (7.5%)      767.55      (5.4%)    0.2% ( -11% -   14%)\n           OrHighNotHigh       56.81      (4.5%)       56.93      (4.4%)    0.2% (  -8% -    9%)\n                 Respell       63.21      (6.6%)       63.39      (5.7%)    0.3% ( -11% -   13%)\n        HighSloppyPhrase        2.78      (8.4%)        2.79      (8.0%)    0.4% ( -14% -   18%)\n                  IntNRQ       11.20     (19.8%)       11.26     (19.5%)    0.5% ( -32% -   49%)\n                 Prefix3       99.08      (8.3%)       99.59      (6.8%)    0.5% ( -13% -   17%)\n                 MedTerm      224.98      (6.1%)      226.23      (5.4%)    0.6% ( -10% -   12%)\n              AndHighMed      234.21      (3.9%)      235.65      (2.9%)    0.6% (  -5% -    7%)\n                 LowTerm      565.85     (10.8%)      570.49     (11.3%)    0.8% ( -19% -   25%)\n             AndHighHigh       66.68      (4.0%)       67.23      (3.2%)    0.8% (  -6% -    8%)\n             MedSpanNear       55.15      (5.9%)       55.67      (3.6%)    0.9% (  -8% -   11%)\n            OrHighNotLow       75.71      (7.8%)       76.44      (6.3%)    1.0% ( -12% -   16%)\n                Wildcard       15.89      (8.5%)       16.05      (6.9%)    1.0% ( -13% -   17%)\n           OrNotHighHigh       50.83      (5.4%)       51.38      (3.7%)    1.1% (  -7% -   10%)\n               MedPhrase       31.99      (6.5%)       32.41      (2.9%)    1.3% (  -7% -   11%)\n              HighPhrase       23.83      (5.4%)       24.18      (3.6%)    1.5% (  -7% -   11%)\n                  Fuzzy1       39.46      (8.5%)       40.13      (7.0%)    1.7% ( -12% -   18%)\n            OrHighNotMed       70.05      (6.8%)       71.36      (5.6%)    1.9% (  -9% -   15%)\n              OrHighHigh       18.82      (6.0%)       19.57      (4.7%)    4.0% (  -6% -   15%)\n                  Fuzzy2       49.95     (17.2%)       52.28     (17.2%)    4.7% ( -25% -   47%)\n               OrHighMed       18.20      (8.8%)       20.01      (6.9%)    9.9% (  -5% -   28%)\n               OrHighLow       47.39      (7.2%)       52.25      (6.0%)   10.2% (  -2% -   25%)\n\n\n\nAll 3 disjunctions got a performance boost, especially those whose clauses have very different doc frequencies: OrHighMed and OrHighLow. "
        },
        {
            "id": "comment-15432562",
            "author": "Adrien Grand",
            "date": "2016-08-23T10:07:45+0000",
            "content": "Hmm actually it helps less (only 2-3%) when the boolean query is nested under a conjunction (which is typically how BS2 gets used), so this is probably not that interesting.\n\n\n         AndMedOrHighLow       22.62      (2.3%)       23.24      (2.3%)    2.7% (  -1% -    7%)\n\n "
        }
    ]
}