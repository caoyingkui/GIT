{
    "id": "SOLR-4080",
    "title": "SolrJ: CloudSolrServer atomic updates doesn\u00b4t work with Lists/Arrays (Objects, in general).",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "4.1"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Atomic updates with a CloudSolrServer object instance doesn\u00b4t work properly. \n\n\n\tCode snippet:\n\n\n\n// CloudSolrSever instance.\nLBHttpSolrServer lbSolrServer = new LBHttpSolrServer(solrEndpoints);\nCloudSolrServer cloudSolrServer = new CloudSolrServer(zookeeperEndpoints, lbSolrServer);\n\n// SolrInputDocument to update: \nSolrInputDocument do = ne SolrInputDocument();\ndoc.addField(\"id\", \"myId\");\n\nMap<String, List<String>> operation = new HashMap<String, List<String>>();\noperation.put(\"set\", [[a list of String elements]]);  // I want a set operation to override field values.\ndoc.addField(\"fieldName\", operation);\n\n// Atomic update operation.\ncloudSolrServer.add(doc); \n\n\n\n\tResult:\n\n\n\ndoc: {\n    id: \"myId\",\n    fieldName: [ \"\n{set=values}\n\"\n    ],\n\n    ...\n}\n\n\n\tChanging map from snippet like Map operation = new HashMap() instead of Map<String, List<String>> operation = new HashMap<String, List<String>>() obtains the following result after the atomic update:\n\n\n\ndoc: {\n    id: \"myId\",\n    fieldName: [\"[Value1, Value2]\"\n    ],\n\n    ...\n}\n\n\n\tAlso, the old value is never erased, and instead of a \"set\" operation an \"add\" operation happens.\n\n\n\n\nCONCLUSION: during an atomic update with CloudSolrServer the List/Array/Object value passed is being processed with just a toString() method.",
    "attachments": {
        "SOLR-4080.patch": "https://issues.apache.org/jira/secure/attachment/12561505/SOLR-4080.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Luis Cappa Banda",
            "id": "comment-13498055",
            "date": "2012-11-15T14:49:02+0000",
            "content": "I\u00b4ve noticed that the same occurs using HttpSolrServer. However, if you set to HttpSolrServer instance the following Writers it works:\n\nHttpSolrServer solrServer = new HttpSolrServer(...);\nsolrServer.setParser(new BinaryResponseParser());\nsolrServer.setRequestWriter(new BinaryRequestWriter());\n\n\nI\u00b4ve tried to find a way to set those Writers via CloudServer or via LBHttpSolrServer but I found nothing.\n "
        },
        {
            "author": "Luis Cappa Banda",
            "id": "comment-13500983",
            "date": "2012-11-20T10:46:10+0000",
            "content": "Creating a CloudSolrServer and setting it this custom LBHttpSolrServer solves the problem:\n\n\nimport org.apache.solr.client.solrj.impl.BinaryRequestWriter;\nimport org.apache.solr.client.solrj.impl.HttpSolrServer;\nimport org.apache.solr.client.solrj.impl.LBHttpSolrServer;\n\npackage com.example.custom.solr;\n\nimport java.net.MalformedURLException;\n\npublic class BinaryLBHttpSolrServer extends LBHttpSolrServer {\n\n\tprivate static final long serialVersionUID = 3905956120804659445L;\n\n    public BinaryLBHttpSolrServer(String[] endpoints) throws MalformedURLException \n{\n    \tsuper(endpoints);\n    }\n\n    @Override\n    protected HttpSolrServer makeServer(String server) throws MalformedURLException \n{\n        HttpSolrServer solrServer = super.makeServer(server);\n        solrServer.setRequestWriter(new BinaryRequestWriter());\n        return solrServer;\n    }\n} "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13535006",
            "date": "2012-12-18T16:13:08+0000",
            "content": "Here's a patch (branch_4x) to reproduce the problem.\n\nI'm working on the fix. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13537844",
            "date": "2012-12-21T13:19:13+0000",
            "content": "Fix committed as part of SOLR-4134. "
        }
    ]
}