{
    "id": "SOLR-2141",
    "title": "NullPointerException when using escapeSql function",
    "details": {
        "affect_versions": "1.4.1,                                            4.0",
        "status": "Closed",
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I have two entities defined, nested in each other..\n\n<entity name=\"article\" query=\"select category, subcategory from articles\">\n   <entity name=\"other\" query=\"select other from othertable where category='${dataimporter.functions.escapeSql(article.category)}'\n              AND subcategory='${dataimporter.functions.escapeSql(article.subcategory)}'\">  \n   </entity>\n</entity>\n\nNow, when I run that it bombs on any article where subcategory = '' (it's a NOT NULL column so empty string is there)  If i do where subcategory!='' in the article query it works fine (aside from not pulling in all of the articles).\n\norg.apache.solr.handler.dataimport.DataImportHandlerException: java.lang.NullPointerException\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:424)\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:383)\n        at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:242)\n        at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:180)\n        at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:331)\n        at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:389)\n        at org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:370)\nCaused by: java.lang.NullPointerException\n        at org.apache.solr.handler.dataimport.EvaluatorBag$1.evaluate(EvaluatorBag.java:75)\n        at org.apache.solr.handler.dataimport.EvaluatorBag$5.get(EvaluatorBag.java:216)\n        at org.apache.solr.handler.dataimport.EvaluatorBag$5.get(EvaluatorBag.java:204)\n        at org.apache.solr.handler.dataimport.VariableResolverImpl.resolve(VariableResolverImpl.java:107)\n        at org.apache.solr.handler.dataimport.TemplateString.fillTokens(TemplateString.java:81)\n        at org.apache.solr.handler.dataimport.TemplateString.replaceTokens(TemplateString.java:75)\n        at org.apache.solr.handler.dataimport.VariableResolverImpl.replaceTokens(VariableResolverImpl.java:87)\n        at org.apache.solr.handler.dataimport.SqlEntityProcessor.nextRow(SqlEntityProcessor.java:71)\n        at org.apache.solr.handler.dataimport.EntityProcessorWrapper.nextRow(EntityProcessorWrapper.java:237)\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:357)\n        ... 6 more",
    "attachments": {
        "dih-config.xml": "https://issues.apache.org/jira/secure/attachment/12553117/dih-config.xml",
        "SOLR-2141-test.patch": "https://issues.apache.org/jira/secure/attachment/12553286/SOLR-2141-test.patch",
        "SOLR-2141.b341f5b.patch": "https://issues.apache.org/jira/secure/attachment/12553309/SOLR-2141.b341f5b.patch",
        "dih-file.xml": "https://issues.apache.org/jira/secure/attachment/12553118/dih-file.xml",
        "SOLR-2141.patch": "https://issues.apache.org/jira/secure/attachment/12553508/SOLR-2141.patch",
        "SOLR-2141-sample.patch": "https://issues.apache.org/jira/secure/attachment/12458473/SOLR-2141-sample.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12926543",
            "date": "2010-10-30T05:57:06+0000",
            "content": "Edward,\n\nMaybe I'm missing something, but I couldn't reproduce the problem you mentioned using attached short sample.\nPlease modify the attached file and reproduce it to share your problem. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12982501",
            "date": "2011-01-17T07:03:07+0000",
            "content": "Don't hesitate to reopen when you reproduce the problem. "
        },
        {
            "author": "Sandeep Parmar",
            "id": "comment-13153821",
            "date": "2011-11-20T16:02:59+0000",
            "content": "I am also getting same error. \n\nThanks,\nSand "
        },
        {
            "author": "Vadim Kirilchuk",
            "id": "comment-13495281",
            "date": "2012-11-12T14:23:01+0000",
            "content": "Hi, \n\nI am facing this error too and it seems that something is broken in 4.x branch.\n\nI am attaching two files which can help to reproduce the problem:\n1) dih-config.xml\ncontains dih configuration which uses escapeSql function with outer entity parameter\n2) dih-file.xml \nTo create outer entity without any db related stuff i need to create it from file.\nNote: YOU MUST CHANGE ABSOLUTE PATH TO THIS FILE IN dih-config.xml to correct one.\n\n--------------------\nOk, i can also shay the light on what happens under the hood:\n\nThe problem is in instances of VariableResolverImpl which are created every time anyone calls DocBuilder#getVariableResolver();\n\nFirst, it is called to create function namespaces which are cached in DocBuilder instance.\n\nThen it is created when DocBuilder#doFullDump() is called.\n\nThen subEntity tries to resolve its 'query' parameter which has escapeSql function, and escapeSql function tries to resolve its param with the first VariableResolver which know nothing about current context and outer entity values.\n\nHowever all fails a little bit later, when EvaluatorBag#evaluate() is called:\nList l = parseParams(expression, context.getVariableResolver());\n        if (l.size() != 1) \n{\n          throw new DataImportHandlerException(SEVERE, \"'escapeSql' must have at least one parameter \");\n        }\n        String s = l.get(0).toString();\n        return s.replaceAll\n\nHere parseParams returns list with single VariableWrapper, but wrapper.toString returns null because variable cant be resolved. And finally (ta-dam!) replaceAll method is called on null value.\n\nP.s.\ndon`t be confused with FileDataSource for first entity mixed up with Sql query for second entity. Absense of sql datasource has no effect on this bug.\n\nThanks, it would be great if this bug will be fixed ASAP. "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13495410",
            "date": "2012-11-12T16:54:21+0000",
            "content": "I am having the exact same issue since upgrading from 4.0.0 nightly (aprox. November 2011) to 4.0.0 stable (and previously also 4.0.0 BETA).\n\nI already tried to resolve it with the help of the Solr User's mailinglist:\nhttp://mail-archives.apache.org/mod_mbox/lucene-solr-user/201210.mbox/%3CCAAh4Jhuv86xbVa6=ZdxshUw3FeRuM+ORg4pDTkqAdGagEFbsDg@mail.gmail.com%3E "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13495421",
            "date": "2012-11-12T17:06:42+0000",
            "content": "Sadly there's no way for me to reopen this issue like Koji Sekiguchi suggested.\nMaybe Edward Rudd can? "
        },
        {
            "author": "James Dyer",
            "id": "comment-13495438",
            "date": "2012-11-12T17:29:56+0000",
            "content": "I re-opened the issue as it sounds like an actual problem.\n\nVadim/Sand, can either of you create a failing unit test?  This would make it a lot easier to fix.  Perhaps you can start with something like TestFileListWithLineEntityProcessor .  Also, can you point to an svn revision number when this functionality worked for you?  This would help track down what broke it. "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13495635",
            "date": "2012-11-12T21:06:59+0000",
            "content": "If it helps:\nI just checked for the nightly build I had in use (with DIH working fine) until I started upgrading to 4.0.0 (beta) a few weeks ago:\n\napache-solr-4.0-2011-09-16_08-37-32.war\n\nwith\n\napache-solr-dataimporthandler-4.0-2011-09-16_08-37-32.jar\napache-solr-dataimporthandler-extras-4.0-2011-09-16_08-37-32.jar "
        },
        {
            "author": "James Dyer",
            "id": "comment-13495701",
            "date": "2012-11-12T22:31:44+0000",
            "content": "We really need a failing unit test for this, or at least simplify the config info Vadim supplied with the bare essentials (and maybe a step-by-step how-to) for reproducing this failure.\n\nGoing through the commits since Sept 2011, there isn't any one that seems like it definitely would have caused this.  These 3 seem most suspicious but this is just a guess:\n\nr1201659 - SOLR-2382, pluggable caches\nr1231367 - SOLR-2542, fix for context variables\nr1332292 - SOLR-3422, refactor configuration load "
        },
        {
            "author": "Vadim Kirilchuk",
            "id": "comment-13496033",
            "date": "2012-11-13T08:06:37+0000",
            "content": "Hi,\n\nI am attaching the patch (SOLR-2141-test.patch) to existing test that will help to reproduce the issue. (I`d like someone to write another test instead of modifying existing one)\n\nIf you execute this test you will see already mentioned stacktrace in console output:\n\nCaused by: java.lang.RuntimeException: org.apache.solr.handler.dataimport.DataImportHandlerException: java.lang.NullPointerException\n\t\tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:413)\n\t\tat org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:326)\n\t\tat org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:234)\n\t\t... 47 more\n\tCaused by: org.apache.solr.handler.dataimport.DataImportHandlerException: java.lang.NullPointerException\n\t\tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:556)\n\t\tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:411)\n\t\t... 49 more\n\tCaused by: java.lang.NullPointerException\n\t\tat org.apache.solr.client.solrj.util.ClientUtils.escapeQueryChars(ClientUtils.java:206)\n\t\tat org.apache.solr.handler.dataimport.EvaluatorBag$3.evaluate(EvaluatorBag.java:101)\n\t\tat org.apache.solr.handler.dataimport.EvaluatorBag$6.get(EvaluatorBag.java:223)\n\t\tat org.apache.solr.handler.dataimport.EvaluatorBag$6.get(EvaluatorBag.java:1)\n\t\tat org.apache.solr.handler.dataimport.VariableResolverImpl.resolve(VariableResolverImpl.java:113)\n\t\tat org.apache.solr.handler.dataimport.TemplateString.fillTokens(TemplateString.java:81)\n\t\tat org.apache.solr.handler.dataimport.TemplateString.replaceTokens(TemplateString.java:75)\n\t\tat org.apache.solr.handler.dataimport.VariableResolverImpl.replaceTokens(VariableResolverImpl.java:91)\n\t\tat org.apache.solr.handler.dataimport.ContextImpl.getResolvedEntityAttribute(ContextImpl.java:81)\n\t\tat org.apache.solr.handler.dataimport.LineEntityProcessor.init(LineEntityProcessor.java:84)\n\t\tat org.apache.solr.handler.dataimport.EntityProcessorWrapper.init(EntityProcessorWrapper.java:74)\n\t\tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:430)\n\t\tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:511)\n\nP.s my solr is branch_4x 7da8d768b8b08923b274fcf32ca28edd1a78e8eb "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13496160",
            "date": "2012-11-13T12:55:41+0000",
            "content": "I just added the patch SOLR-2141.b341f5b.patch for commit b341f5b (github mirror of branch_4x).\nMight this have caused the error?\nThe way I see it the EvaluatorBag looses the current context when used in a nested entity.\nThe commit was executed in connection with SOLR-2542 as git log shows:\n\nb341f5b - SOLR-2542: Fixed DIH Context variables which were broken for all scopes other then SCOPE_ENTITY (10 months ago) <Chris M. Hostetter> "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13497207",
            "date": "2012-11-14T16:34:36+0000",
            "content": "Hi guys,\n\nI think I might have found the root of evil:\nSOLR-3262 (removing \"threads\" from DIH). Problem is that in nested entites the used VariableResolverImpl differs from the one used by the EvaluatorBag (since everytime the getVariableResolver method is called a new one gets created) in the functions namespace (since that one get's initialized in the DocBuilder constructor).\nAnyway: I removed the private functionsNamespace cache property from the docBuilder and moved the call EvaluatorBag.getFunctionsNamespace() into DocBuilder.getVariableResolver(). That fixes all of my problems.\n\nVadim Kirilchuk, Sandeep Parmar please find attached patch and let me know if this fixes your errors, too. "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13497209",
            "date": "2012-11-14T16:35:39+0000",
            "content": "Patch to fix loading of functions namespace at runtime to use the correct (the newly created) VariableResolverImpl "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13500132",
            "date": "2012-11-19T10:31:01+0000",
            "content": "/push Vadim Kirilchuk, Sandeep Parmar, James Dyer "
        },
        {
            "author": "Vadim Kirilchuk",
            "id": "comment-13500198",
            "date": "2012-11-19T12:32:33+0000",
            "content": "Dominik Siebel sorry, but i am very busy this week. I looked through your patch and i think it will fix my issue, however currently i have no time to check it. Thanks for the patch anyway! "
        },
        {
            "author": "James Dyer",
            "id": "comment-13502319",
            "date": "2012-11-21T21:19:02+0000",
            "content": "Could you try importing again with the latest revision from Trunk/5.x or branch_4x ?  Based on my limited understanding of this problem, I think it might have been solved with SOLR-4086.\n\nIn either case, we probably should write a good unit test for this so that it doesn't break again. "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13502751",
            "date": "2012-11-22T12:57:45+0000",
            "content": "James Dyer Thanks, this seems to have fixed my problem. I'm currently doing a full import with a build from branch_4x, no NPEs, yet (at ~10% now).\nSorry for the (maybe) dumb question, but: is there a gonna be a \"stable\" bugfix release or tag in the near future (not only for this issue, of course)? "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13503763",
            "date": "2012-11-26T12:47:14+0000",
            "content": "James Dyer\nAfter I finally had some time to check whether the indexed results (after the update) are as I expect them to be I had to find out that the importer did not throw any NPE's now, instead the fields are just missing.\nI have 7 fields defined in my nested entity that use escapeSql. Those are the exact fields that don't get indexed now :-/\nAny other suggestions? \n\nI will have a look at the changed DIH code, maybe i can figure out where this is coming from. "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13503815",
            "date": "2012-11-26T14:51:57+0000",
            "content": "Hi James Dyer,\nI just worked through the changes in the DIH. Turns out my fields were null, because I used the 'dih.functions.' namespace since the 'dataimporter.functions.' was marked deprecated before the change. Did you change that back on purpose, because it might cause some confusion (like in my case). "
        },
        {
            "author": "James Dyer",
            "id": "comment-13503828",
            "date": "2012-11-26T15:11:58+0000",
            "content": "Dominik,\n\nCan you confirm for me that with the current Trunk that the functionality is working so long you use the \"dataimporter.functions.\" namespace?\n\nRemoving support for the \"dih.functions.\" namespace was indeed a mistake.  I can fix that too (and its a simple change).  But I really want to know for sure if your bigger problem is solved first?? "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13503879",
            "date": "2012-11-26T16:37:34+0000",
            "content": "Checked with\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1413079 13f79535-47bb-0310-9956-ffa450edef68\n\nfrom github trunk.\nEverything seems to be running, at least the fields are present. \nOn optimize I get a \"SEVERE: null:java.lang.NoSuchMethodError: org.apache.lucene.document.Document.add(Lorg/apache/lucene/index/IndexableField;)V\" from the SpellChecker component, though. But this might be related to some other issue.\n\nI could not verify with the whole dataset yet since indexing, commit and optimize (required for spellcheckers) take around 5h. I'll get back to you once the import finished on our staging system. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13504104",
            "date": "2012-11-26T21:15:53+0000",
            "content": "I've attached a patch which fixes the functions namespace issue.  More importantly, it tests for the problem described here, in SOLR-4047 & SOLR-3842.  \n\nMy plan is to commit this tomorrow and if you do not have any more problems, I will close this. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13504184",
            "date": "2012-11-26T22:23:16+0000",
            "content": "better patch.  fixes problem for SOLR-3842 also. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13504189",
            "date": "2012-11-26T22:31:23+0000",
            "content": "this 3rd patch version contains a test that won't begin to fail on Jan 1  "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13504443",
            "date": "2012-11-27T08:19:18+0000",
            "content": "Hi James Dyer,\nIndex with the whole dataset looks good. So things seem to be fixed now. Thanks for that!\n\nJust another dumb question:\nWhat do I use the patch for? Aren't those the changes that are already in the branch_4x & trunk? "
        },
        {
            "author": "James Dyer",
            "id": "comment-13504714",
            "date": "2012-11-27T16:09:45+0000",
            "content": "final patch to commit, fixes a locale problem in the unit test.\n\nDominik, this patch solves the absence of the dih.functions. namespace, so you can use either \"dih.\" or \"dataimport.\" as before.  Also, it solves the related problem on SOLR-3842.  Finally it has a pretty good unit test that demonstrates this issue, SOLR-3842 and SOLR-4047 (this last one doesn't appear to actually be broken). "
        },
        {
            "author": "James Dyer",
            "id": "comment-13504752",
            "date": "2012-11-27T16:51:27+0000",
            "content": "committed.\n\nTrunk: r1414242\n4x: r1414250 "
        },
        {
            "author": "Dominik Siebel",
            "id": "comment-13505337",
            "date": "2012-11-28T09:53:36+0000",
            "content": "Hi, James, sorry I already forgot about that. Thanks for the good work! "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610495",
            "date": "2013-03-22T16:13:28+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1414260\n\nSOLR-2141  / SOLR-4047 / SOLR-3842 - remove tabs "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610498",
            "date": "2013-03-22T16:13:36+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1414250\n\nSOLR-2141  / SOLR-4047 / SOLR-3842 - fix problems with VariableResolver, better test coverage "
        }
    ]
}