{
    "id": "SOLR-7060",
    "title": "NoSuchMethodError - org/apache/lucene/util/AttributeImpl",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10.2,                                            4.10.3",
        "status": "Closed",
        "resolution": "Invalid",
        "priority": "Major"
    },
    "description": "When sending a document update to this solr instance the following error is thrown. For example just updating a single value of an existing document.\n\nI cannot reproduce the same thing on another machine running on CentOS7 or Windows Server 2008 or 2012.\n\nI can confirm that the exact same thing works on the same machine with Solr Version 4.7.0\n\nI found the same Exception here: https://jira.duraspace.org/browse/DS-2293 but was closed as cannot reproduce.\n\nAny suggestions, how to resolve or analyze this?\n\n\n org.apache.solr.common.SolrException; null:java.lang.RuntimeException: java.lang.NoSuchMethodError: java.lang.invoke.MethodHandle.invokeExact()Lorg/apache/lucene/util/AttributeImpl;\n\tat org.apache.solr.servlet.SolrDispatchFilter.sendError(SolrDispatchFilter.java:793)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:434)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:207)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1070)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:611)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NoSuchMethodError: java.lang.invoke.MethodHandle.invokeExact()Lorg/apache/lucene/util/AttributeImpl;\n\tat org.apache.lucene.util.AttributeFactory$DefaultAttributeFactory.createAttributeInstance(AttributeFactory.java:68)\n\tat org.apache.lucene.analysis.NumericTokenStream$NumericAttributeFactory.createAttributeInstance(NumericTokenStream.java:139)\n\tat org.apache.lucene.util.AttributeSource.addAttribute(AttributeSource.java:222)\n\tat org.apache.lucene.analysis.NumericTokenStream.<init>(NumericTokenStream.java:321)\n\tat org.apache.lucene.analysis.NumericTokenStream.<init>(NumericTokenStream.java:232)\n\tat org.apache.lucene.document.Field.tokenStream(Field.java:512)\n\tat org.apache.lucene.index.DefaultIndexingChain$PerField.invert(DefaultIndexingChain.java:611)\n\tat org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:359)\n\tat org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:318)\n\tat org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:239)\n\tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:454)\n\tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1511)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:240)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:164)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:69)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:926)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1080)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:692)\n\tat org.apache.solr.handler.loader.JavabinLoader$1.update(JavabinLoader.java:96)\n\tat org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$1.readOuterMostDocIterator(JavaBinUpdateRequestCodec.java:166)\n\tat org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$1.readIterator(JavaBinUpdateRequestCodec.java:136)\n\tat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:225)\n\tat org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$1.readNamedList(JavaBinUpdateRequestCodec.java:121)\n\tat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:190)\n\tat org.apache.solr.common.util.JavaBinCodec.unmarshal(JavaBinCodec.java:116)\n\tat org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.unmarshal(JavaBinUpdateRequestCodec.java:173)\n\tat org.apache.solr.handler.loader.JavabinLoader.parseAndLoadDocs(JavabinLoader.java:106)\n\tat org.apache.solr.handler.loader.JavabinLoader.load(JavabinLoader.java:58)\n\tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:99)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1967)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:777)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:418)\n\t... 18 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-29T20:57:35+0000",
            "author": "Hoss Man",
            "content": "NoSuchMethodError is an extremeley low level java problem indicating that you have compiled byte code refering to a method that does not exist.\n\nthis usually means either:\n\n\n\tyou have a custom plugin compiled against one version of SOlr and you are trying ot use it with a differnet version of solr that doesn't have the same internal methods\n\tyou have jars from multiple (conflicting) versions of solr in your classpath and the JVm is using a mismatched set of classes, one of which expects the other to have a method it does not (yet) have.\n\n\n\nsince your stack trace doesn't mention any non-standrad classes, i suspect it's the later. ",
            "id": "comment-14297653"
        },
        {
            "date": "2015-01-30T11:54:50+0000",
            "author": "Rene Loitzenbauer",
            "content": "Thanks for your reply.\n\nI could narrow the problem down to the yourkit profiler. If the yourkit profiler is configured like \"-agentpath:/opt/yourkitagent/libyjpagent.so\" then the error occures. When i remove the yourkit configuration the error does not occur. ",
            "id": "comment-14298530"
        },
        {
            "date": "2015-02-15T11:27:59+0000",
            "author": "Uwe Schindler",
            "content": "Hi,\nI just have seen this issue very late. In fact, Yourkit is problematic, but the same happens with many other profilers/plugins for the JVM that are not fully Java 7+ compatible. In fact the bytecode generated by Java 7's javac is interpreted in a different way in the runtime (it refers to a not really existent method): MethodHandle#invokeExact() is annotated with a special @PolymorphicSignature annotation in JDK's source code (http://goo.gl/UXo3GR):\n\nInvokes the method handle, allowing any caller type descriptor, but requiring an exact type match. The symbolic type descriptor at the call site of invokeExact must exactly match this method handle's type. No conversions are allowed on arguments or return values. When this method is observed via the Core Reflection API, it will appear as a single native method, taking an object array and returning an object. If this native method is invoked directly via java.lang.reflect.Method.invoke, via JNI, or indirectly via Lookup.unreflect, it will throw an UnsupportedOperationException.\n\nThis means that the argument and return types are fully flexible and are linked at runtime only. This is related to the new java 7 invokedynamic instruction, but used in Lucene to have very fast access to TokenStream's attributes without using reflection. This could also be seen as something like a varargs implementation without array-emulation and hard types.\nSo I would suggest to update Yourkit or ask them for help with that.\nUwe ",
            "id": "comment-14321927"
        },
        {
            "date": "2015-02-15T11:33:55+0000",
            "author": "Uwe Schindler",
            "content": "In addition this is how its compiled by javac:\n\n\nMethod handle compilation\n\nA Java method call expression naming invokeExact or invoke can invoke a method handle from Java source code. From the viewpoint of source code, these methods can take any arguments and their result can be cast to any return type. Formally this is accomplished by giving the invoker methods Object return types and variable arity Object arguments, but they have an additional quality called signature polymorphism which connects this freedom of invocation directly to the JVM execution stack. ",
            "id": "comment-14321931"
        }
    ]
}