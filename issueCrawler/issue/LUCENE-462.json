{
    "id": "LUCENE-462",
    "title": "bad normalization in sorted search returning TopDocs",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "1.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "FieldSortedHitQueue.maxscore is maintained in the lessThan method (which never gets called if a single document is added to the queue).\n\nI've checked in a test to TestSort.testTopDocsScores() with the final assertion commented out.",
    "attachments": {
        "FieldSortedHitQueue_maxscore.patch": "https://issues.apache.org/jira/secure/attachment/12320579/FieldSortedHitQueue_maxscore.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2005-11-10T07:06:29+0000",
            "content": "Proposed patch attached:\n\n\tinsert(FieldDoc) keeps track of maxscore and calls super.insert(Object)\n\tthe maximum score is now kept track of, even if it is less than 1.0\n\tgetMaxScore() added\n\n\n\nThis should also be slightly faster than the old way since there are only \"n\" comparisons against maxscore.\nPreviously, two comparisons would be done for every call to lessThan() (2*nlog maybe?) ",
            "author": "Yonik Seeley",
            "id": "comment-12357149"
        },
        {
            "date": "2005-11-12T06:24:45+0000",
            "content": "fixed. ",
            "author": "Yonik Seeley",
            "id": "comment-12357437"
        }
    ]
}