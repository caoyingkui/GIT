{
    "id": "SOLR-2037",
    "title": "Distinguish Editorial Results from \"normal\" results in the QueryElevationComponent",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In many cases, it would be nice if the results that are provided by the QueryElevationComponent were identified as such so that one could make a decision at rendering time whether to treat them differently or not.",
    "attachments": {
        "SOLR-2037.patch": "https://issues.apache.org/jira/secure/attachment/12504228/SOLR-2037.patch",
        "EditorialMarkerFactory.java": "https://issues.apache.org/jira/secure/attachment/12504225/EditorialMarkerFactory.java",
        "SOLR-2037-editoral-marker.patch": "https://issues.apache.org/jira/secure/attachment/12503714/SOLR-2037-editoral-marker.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Grant Ingersoll",
            "id": "comment-13150218",
            "date": "2011-11-15T03:27:29+0000",
            "content": "Now that SOLR-1566 is fixed, we should be able to do this.  The main issue is this gets hooked into sorting, so we don't really have access to the documents to mark them.  Now, I could still hook it into the response writer as a transformer that uses the elevation info, but that isn't surefire either since we wouldn't truly know if it was elevated or not.  The other option, perhaps is that the FieldcomparatorSource used would need to put something into a data structure in the request that can then be consumed by a Transformer later.  Not sure this will work w/ the current setup, as it caches the comparator.  To deal with that, might need to separate that part out a little bit so as to be able to construct a really lightweight comparator that is constructed each time, but wraps an object that has the main sorting configuration done only when needed per the current approach. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13150222",
            "date": "2011-11-15T03:54:46+0000",
            "content": "this is a super quick/dirty sketch on how you may be able to do it just by sticking something into the request context.\n\nTo do this for real, we would need to do somethign smarter with the ids "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13152876",
            "date": "2011-11-18T13:51:51+0000",
            "content": "Ah, makes sense, Ryan.  I forgot that we have the ids handy outside of the comparator.  I'll add some tests, etc. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13152904",
            "date": "2011-11-18T14:42:05+0000",
            "content": "Hmm, Ryan.  Not sure this is going to work.  The creation of the factory happens before the prepare method gets called, so the BOOSTED value is always null, AFAICT. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13152905",
            "date": "2011-11-18T14:43:21+0000",
            "content": "As far as interface... what about by default adding an _elevated_ pseudo-field? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13152936",
            "date": "2011-11-18T15:52:20+0000",
            "content": "ah right \u2013 what about lazy loading the BOOSTED set?\n\nThis is a bit more ugly, but could work  \n(again, totally untested... just here for suggestion) "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13152944",
            "date": "2011-11-18T16:18:55+0000",
            "content": "Seems like transform() should just take in the Context. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13152954",
            "date": "2011-11-18T16:44:20+0000",
            "content": "ya, that would also work \u2013 TextResponseWriter has the request.\n "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13152963",
            "date": "2011-11-18T17:00:42+0000",
            "content": "Here's a patch that adds the SolrQueryRequest to the transform call.  Not sure yet what the implications of that are for the TransformerContext.  Seems like we aught to just use the Request.getContext() instead of the setContext stuff.  Simpler and one less data structure to manage. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13152966",
            "date": "2011-11-18T17:01:19+0000",
            "content": "I should add the patch also has tests that now pass for using the EditorialMarkerFactory "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13152977",
            "date": "2011-11-18T17:16:05+0000",
            "content": "Not sure yet what the implications of that are for the TransformerContext.\n\nSomething like that will still be needed in the future to handle transformers that need to do stuff in batches and not doc-at-a-time.\nOne example of this is function queries containing a relevancy query component - those aren't random access.\n\nAs far as naming, [elevated]=true seems more readable than [qecBooster]=true?\n "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13152981",
            "date": "2011-11-18T17:21:36+0000",
            "content": "As far as naming, [elevated]=true seems more readable than [qecBooster]=true?\n\nYeah, I can change that (I'd like to change the name of the QEC too).  I'm on the fence as to whether this one should be on by default or not, since the QEC is not on by default. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13152987",
            "date": "2011-11-18T17:30:22+0000",
            "content": "TransformerContext != Request.getContext() it has lots of info about the query that made the DocList \u2013 this is necessary for things that need to know the actual Query and DocIterator \u2013 see ExplainAugmenterFactory.\n\nRather then adding SolrQueryRequest to the transform, we could also add it to the TransformerContext.\n\nYes, setContext() is potentially more error prone then passing it along with every transform call \u2013 but this also gives us a consistent way to avoid lazy loading.  We know setContext is called before any documents are transformed.  Rather then have the lazy load logic i suggested earler, what about putting that in setContext? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13152988",
            "date": "2011-11-18T17:32:40+0000",
            "content": "Switches to elevated, handles the case where elevated is requested, but no items are elevated. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13152993",
            "date": "2011-11-18T17:42:02+0000",
            "content": "I'm on the fence as to whether this one should be on by default or not, since the QEC is not on by default.\n\nRight, we shouldn't be adding [elevated]=false to all the docs by default, even when QEC isn't being used.\n\nThe only question left then is if the augmenter/transformer should be on by default if QEC is being used (i.e. forceElevation==true?)  Or should the user explicitly put [elevated] in their field list?  I'm thinking the latter, for folks who put fl=id and expect only the id field to be returned.\n\nIt would also be nice if one didn't have to define this EditorialMarkerFactory in solr.xml... seems like from the user perspective it should \"just work\" (either the QEC can dynamically register it, or it can always be registered by default like explain, docid, etc). "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13152998",
            "date": "2011-11-18T17:50:27+0000",
            "content": "@Ryan, that clarifies things.  I have left it as is.\n\n@Yonik:\nThe only question left then is if the augmenter/transformer should be on by default if QEC is being used (i.e. forceElevation==true?) Or should the user explicitly put [elevated] in their field list? I'm thinking the latter, for folks who put fl=id and expect only the id field to be returned.\n\nAgreed, I think it should be off by default. \n\nIt would also be nice if one didn't have to define this EditorialMarkerFactory in solr.xml... seems like from the user perspective it should \"just work\" (either the QEC can dynamically register it, or it can always be registered by default like explain, docid, etc).\n\nGood point.  Consider it done. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13153010",
            "date": "2011-11-18T18:07:19+0000",
            "content": "rather then:\n\n-  public abstract void transform(SolrDocument doc, int docid) throws IOException;\n+  public abstract void transform(SolrDocument doc, int docid, SolrQueryRequest req) throws IOException;\n\n\n\nWhat about adding SolrQueryRequest to the TransformerContext?  This could avoid the lazy load logic in this Transformer, and also give access to SolrQueryRequest for things that need batch processing (as yonik discussed)\n\n\nOr should the user explicitly put [elevated] in their field list?\n+1 this should all be explicit "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13153095",
            "date": "2011-11-18T20:11:01+0000",
            "content": "Auto-registers the Marker Factory, but still allows the name to be picked by the user, if they so choose.\n\nSwitches to using the TransformContext. \n\nAll tests pass.  I believe it should be ready to go. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13153103",
            "date": "2011-11-18T20:28:04+0000",
            "content": "+1\n\nnot sure what (if anythign) belongs in solrconfig.xml\n\nAfter this goes in, I will add some more javadocs to tranformer stuff "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13153107",
            "date": "2011-11-18T20:40:43+0000",
            "content": "not sure what (if anythign) belongs in solrconfig.xml\n\nYou can, optionally, in the QEC configuration specify:\n{{{\n<str name=\"editorialMarkerFieldName\">foo</str>\n}}}\n\nand that will change the name of the pseudo-field from \"elevated\" to whatever specified.  This way, if for some reason someone already has elevated it won't be confused.  Of course, it's really \"[elevated]\" anyway, but still less confusion, hopefully. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13153126",
            "date": "2011-11-18T21:09:20+0000",
            "content": "Committed.  Of course, the next thing I want is to know what the old rank was, but that is likely much harder. "
        }
    ]
}