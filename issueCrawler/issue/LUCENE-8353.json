{
    "id": "LUCENE-8353",
    "title": "FrenchLightStemmer dont work with \u00eb, \u00f6 and \u00ef",
    "details": {
        "components": [
            "modules/analysis"
        ],
        "status": "Open",
        "resolution": "Unresolved",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Improvement"
    },
    "description": "\u00eb, \u00f6 and \u00ef are not present in\u00a0FrenchLightStemmer so if you search per exemple\n\nLaicit\u00e9 when you index contains La\u00efcit\u00e9, that's not match\n\nI try to fixe this issue in\u00a0https://github.com/apache/lucene-solr/pull/379",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16509321",
            "author": "Adrien Grand",
            "content": "This stemmer is borrowed from work from Jacques Savoy (http://members.unine.ch/jacques.savoy/clef/frenchStemmerPlus.txt) so we would diverge from it though I can't think of a reason to not do it, especially given the name of the function.\n\nI wonder how best to handle backward compatibility for existing indices here. Maybe we could fork the stemmer into a new class that has your changes, deprecate the old one, and make FrenchLightStemmerFactory use the new one depending on getLuceneMatchVersion. Another option could be to add a version parameter to the constructor but it proved problematic in the past (LUCENE-5859). Could you also put comments that make it clear where this stemmer differs from the original one? ",
            "date": "2018-06-12T08:11:49+0000"
        },
        {
            "id": "comment-16629637",
            "author": "Hoss Man",
            "content": "... Another option could be to add a version parameter to the constructor but it proved problematic in the past (LUCENE-5859). ....\nIt's almost like the exact situation I was worried about & described (when urging that we add no arg constructors\u00a0in addition to the Version constructors instead of removing them outright) has come to pass: we would ideally like to change the \"default\" behavior of an analysis class to be the \"better\" then the current behavior, but we also don't\u00a0 want to break existing code for existing users.\n\nso now it seems like we either:\n\n\tadd FrenchLightStemmer2 ...or maybe jump straight to FrenchLightStemmerHuperDuper ?\n\tleave the default (bad) behavior as it is an add a void setIWantTheGoodVowelBehavior(boolean) option that new users can call if they are smart enough to know that they should\n\tbreak backcompat and add a void setIWantTheOldVowelBehavior(boolean) option existing users can call if they are smart enough to know that they should.\n\n\n\nMan ... LUCENE-5859 really is the gift that just keeps on giving isn't it?\n\n</rant> ",
            "date": "2018-09-27T01:42:18+0000"
        }
    ]
}