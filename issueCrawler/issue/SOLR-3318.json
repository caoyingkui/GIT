{
    "id": "SOLR-3318",
    "title": "LBHttpSolrClient should allow to specify a preferred server for a query",
    "details": {
        "affect_versions": "6.3",
        "status": "Reopened",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "For a user query we make several solr queries that differ only slightly and therefore should use/reuse objects cached from the first query (we're using a custom request handler and custom caches).\nThus such subsequent queries should hit the same solr server.\n\nThe implemented solution looks like this:\n\n\tThe client obtains a live SolrServer from LBHttpSolrServer\n\tThe client provides this SolrServer as preferred server for a query\n\tIf the preferred server is no longer alive the request is retried on another live server\n\tEverything else follows the existing logic:\n\t\n\t\tAfter live servers are exhausted, any servers previously marked as dead will be tried before failing the request\n\t\tIf no live servers are found a SolrServerException is thrown\n\t\n\t\n\n\n\nThe implementation is also on github.\n\nMailing list thread: http://lucene.472066.n3.nabble.com/LBHttpSolrServer-to-query-a-preferred-server-tt3884140.html",
    "attachments": {
        "SOLR-3318.git.patch": "https://issues.apache.org/jira/secure/attachment/12521420/SOLR-3318.git.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Martin Grotzke",
            "id": "comment-13246847",
            "date": "2012-04-04T23:39:01+0000",
            "content": "Patch created from git changeset. "
        },
        {
            "author": "Torsten B\u00f8gh K\u00f6ster",
            "id": "comment-13250497",
            "date": "2012-04-10T07:59:35+0000",
            "content": "+1 on this one. To construct a response we run 2 solr queries, one for results one for facets. For caching purpuses it would be perfect to run those consecutive one on the same solr instance "
        },
        {
            "author": "Martin Grotzke",
            "id": "comment-13264620",
            "date": "2012-04-29T22:09:20+0000",
            "content": "Any feedback on this? "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15582213",
            "date": "2016-10-17T13:11:37+0000",
            "content": "LBHttpSolrServer.java is no longer in the codebase. Is this issue still relevant? "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15600752",
            "date": "2016-10-24T02:45:52+0000",
            "content": "No longer relevant issue, as the mentioned code is gone. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15600790",
            "date": "2016-10-24T03:13:21+0000",
            "content": "Alexandre Rafalovitch \u2013 the code is not gone. It is renamed to LBHttpSolrClient.java which is internally used by CloudSolrClient. I think the issue is still valid. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15601852",
            "date": "2016-10-24T12:32:04+0000",
            "content": "[Shalin Shekhar Mangar Thanks for the catch. I reviewed the LBHttpSolrClient and I see no indication of server stickiness being implemented.\n\nDo you think it is a viable feature still? One that could be marked newdev, as it has a patch that needs to be adapted to master? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15604149",
            "date": "2016-10-25T04:32:22+0000",
            "content": "The idea of fixing servers for a query is valid but I'd do it differently in SolrCloud \u2013 see SOLR-8146 for a better idea of using snitches for routing. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15641113",
            "date": "2016-11-06T04:24:25+0000",
            "content": "Still a valid issue as per Shalin Shekhar Mangar and relevant to the latest Solr (even if patch is not relevant) "
        }
    ]
}