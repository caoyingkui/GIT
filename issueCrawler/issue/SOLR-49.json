{
    "id": "SOLR-49",
    "title": "PATCH: XSLTServletFilter",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.1.0"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Patch that implements server-side XSLT transforms of query results.\n\nThe filter is activated by using select/html instead of select/ to run queries, and optionally adding a transform parameter to specify the XSLT transform to use, for example:\n\n  http://localhost:8983/solr/select/html?q=usage&transform=my.xsl\n\nIn which case my.xsl should be found in solr/conf/xslt/ with the example configuration. The default transform (solr/conf/xslt/query-to-html.xsl) outputs a simplistic HTML format.\n\nPerformance is suboptimal, as the filter reparses the XML output generated by Solr. Modifying the XMLWriter to output to a ContentHandler would be more efficient, but I didn't have time to go that far.\n\nThe TransformerProvider trivially caches the last Transformer used, could be improved using an LRU cache of several transformers, I haven't checked if Solr's infrastructure contains such an animal already.\n\nThe patch is all new files, except for adding this in web.xml before the first <servlet>:\n\n  <filter>\n    <filter-name>xslt</filter-name>\n    <filter-class>org.apache.solr.xslt.XSLTServletFilter</filter-class>\n  </filter>\n\n  <!-- apply the XSLT filter when select/html is used to make queries -->  \n  <filter-mapping>\n    <filter-name>xslt</filter-name>\n    <url-pattern>/select/html/*</url-pattern>\n  </filter-mapping> \n\nI've left the client-side XSLT stuff (stylesheet parameter) as is for the moment.",
    "attachments": {
        "SOLR-49.diff": "https://issues.apache.org/jira/secure/attachment/12343110/SOLR-49.diff",
        "xslt-filter-files.tar.gz": "https://issues.apache.org/jira/secure/attachment/12340851/xslt-filter-files.tar.gz",
        "solr-XSLTResponseWriter-20060922.tar.gz": "https://issues.apache.org/jira/secure/attachment/12341455/solr-XSLTResponseWriter-20060922.tar.gz",
        "solr-XSLTResponseWriter-files.tar.gz": "https://issues.apache.org/jira/secure/attachment/12341198/solr-XSLTResponseWriter-files.tar.gz",
        "solr-XSLTResponseWriter-20061016.tar.gz": "https://issues.apache.org/jira/secure/attachment/12342985/solr-XSLTResponseWriter-20061016.tar.gz"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12434717",
            "date": "2006-09-14T15:52:58+0000",
            "content": "New files "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12435553",
            "date": "2006-09-18T19:06:01+0000",
            "content": "Thanks Bertrand, I've not used servlet filters before.\n\nWhat do people think the tradeoffs are of using a different url \"/select/html\" vs a different response writer \"wt=html&wt.xslt=...\"\n?\n\nAnyone else have opinions on if this should be committed? "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12436135",
            "date": "2006-09-20T07:10:09+0000",
            "content": "In retrospect I think a different response writer is more consistent with the way other output formats are generated, shouldn't be hard to implement that way.\n\nThe content-type should also be selectable by a request parameter, with text/html as the default I guess. "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12436201",
            "date": "2006-09-20T10:05:48+0000",
            "content": "Here's a new patch, I've reworked the code into an XSLTResponseWriter.\n\nMust be configured like this in solrconfig.xml:\n\n  <queryResponseWriter name=\"xslt\" class=\"org.apache.solr.request.XSLTResponseWriter\"/>\n\nAnd the following request parameters activate it:\n\n  wt = xslt\n  tr = my-xslt-transform.xsl\n  ct = text/html (which is the default value)\n\n(don't you love terse param names \n\nThe XSLT transform is read using SolrConfig.config.openResource(...), so it must be available in the solr/conf directory when running the Solr example config. "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12437055",
            "date": "2006-09-23T08:50:52+0000",
            "content": "Here's yet another version which takes the Content-Type from the XSLT transform.\n\nThe code and these instructions replace the previous versions:\n\nMust be configured like this in solrconfig.xml:\n\n  <!-- \n    XSLT response writer (SOLR-49)\n    Changes to XSLT transforms are taken into account every xsltCacheLifetimeSeconds at most.\n   -->\n  <queryResponseWriter \n    name=\"xslt\" \n    class=\"org.apache.solr.request.XSLTResponseWriter\"\n    xsltCacheLifetimeSeconds=\"5\"\n  />\n\nThe following request parameters activate the XSLTResponseWriter:\n\n  wt = xslt\n  tr = my-xslt-transform.xsl\n\nThe Content-Type comes from the xsl:output element of the XSLT transform:\n\n    <xsl:output media-type=\"text/html\"/>\n\nAnd finally, the TransformerProvider warns about the possible performance implications of its simplistic cache, when first used:\n\n  ATTENTION: The TransformerProvider's simplistic XSLT caching mechanism is \n  not appropriate for high load scenarios, unless a single XSLT transform is used \n  and xsltCacheLifetimeSeconds is set to a sufficiently high value. "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12442528",
            "date": "2006-10-16T09:59:32+0000",
            "content": "Here's the latest incarnation, using a more Solrish way of initializing the response writer. \n\nThe solr-XSLTResponseWriter-20061016.tar.gz attachment replaces all the previous patches.\n\nI have added an init(NamedList args) method to the QueryResponseWriter (solr-49.patch in the attached file), which means that the solrconfig.xml part has changed:\n\n<!--\n    XSLT response writer (SOLR-49)\n    Changes to XSLT transforms are taken into account every  xsltCacheLifetimeSeconds at most.\n   -->\n  <queryResponseWriter\n    name=\"xslt\"\n    class=\"org.apache.solr.request.XSLTResponseWriter\"\n   >\n     <int name=\"xsltCacheLifetimeSeconds\">5</int>\n   </queryResponseWriter> \n\nApart from that, the patch works as indicated in my previous comment. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12442978",
            "date": "2006-10-17T17:01:27+0000",
            "content": "I'm going to try and review this again today. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12443083",
            "date": "2006-10-17T21:34:22+0000",
            "content": "SOLR-49.diff is solr-XSLTResponseWriter-20061016.tar.gz in svn patch form with a few small tweaks...\n\n1) I removed the javadocs on the init() method in each of the concrete QueryResponseWriter classes so they would inherit the interface docs.\n2) I added a small unit test to demonstrate that the stylesheet was being applied\n\nI think this is commitable as is, but one small thing occured to me that i wanted to get concensus on first: right now this can be used to expose any file in the ${solr.home}/conf by trying to use it as an XSLT ... should it respect the \n<gettableFiles> directive in the solrconfig.xml \u2013 which might be anoying since it requires explicitly listing each file, or should we change this to only look at files in some new ${solr.home}/xslt (or ${solr.home}/conf/xslt) directory?\n\nanother minor nit: query-to-html.xsl seems like it would render the \"query\" as html, not the results of the query ... maybe we should just call it \"example.xsl\" ? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12443085",
            "date": "2006-10-17T21:42:07+0000",
            "content": "> right now this can be used to expose any file in the ${solr.home}/conf by trying to use it as an XSLT\n\nIt's good that you noted it, but I think it's fine for now:\n\n\tconf doesn't contain personal data like logs could...\n\tSolr is a backend system with all the doors left wide open... IMO, locking a window isn't currently worth the effort, esp if it makes it harder to use.\n\n\n\n "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12443196",
            "date": "2006-10-18T07:31:57+0000",
            "content": "I'm with Yonik on the security thing, Solr is wide open as is anyway. \n\nOTOH, forcing the XSLT files to be under conf/xslt would avoid cluttering the conf directory, I think it's a good idea.\n\n> query-to-html.xsl seems like it would render the \"query\" as html...\n\nYou mean that the filename gives this impression, right? No problem with a rename, example.xsl is fine, or maybe xslt-writer-example.xsl. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12443316",
            "date": "2006-10-18T17:55:20+0000",
            "content": "Commited with both the subdirectory change and the rename to \"example.xsl\"\n\nThanks again Bertrand. "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12443761",
            "date": "2006-10-20T09:22:58+0000",
            "content": "Thanks for committing, I have documented this at http://wiki.apache.org/solr/XsltResponseWriter "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589344",
            "date": "2008-04-15T23:56:43+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.1\n\n\n\nThe Fix Version for all 38 issues found was set to 1.1, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman3 "
        }
    ]
}