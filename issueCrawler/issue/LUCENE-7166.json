{
    "id": "LUCENE-7166",
    "title": "fix quantization bugs in LatLonPoint and GeoPointField, remove test leniency",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Currently a few remaining tests (around newRectQuery) are lenient and quantize the query rectangles. This is masking several bugs:\n1. Both LatLonPoint and GeoPointField's bbox queries quantize their endpoints incorrectly at query-time, which can e.g. cause it to bring in false positive results\n2. Tests have always been lenient about this (either by using epsilons or incorrectly quantizing the query rectangles in tests), hiding the above. \n3. Both LatLonPoint and GeoPointField still have rounding issues at quantization. For very special values they do not always consistently round in one direction.\n4. Random encoding tests will never find the above issue, hiding it. This is because you need very special double values that the current stuff (e.g. -180 + 360.0 * random().nextDouble() will never find!).",
    "attachments": {
        "LUCENE-7166.patch": "https://issues.apache.org/jira/secure/attachment/12796648/LUCENE-7166.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15222686",
            "author": "Robert Muir",
            "date": "2016-04-02T03:50:24+0000",
            "content": "Attached is a patch:\n\n\tfixes Geo random tests to not quantize query rectangles.\n\tfixes testRectBoundariesAreInclusive to properly quantize its rectangle (for an exact inclusive test), and then test around that boundary with Math.nextUp/Math.nextDown\n\tfixes LatLonPoint encoding tests to not just use e.g. nextLatitude/nextLongitude, but to also walk the double space with Math.nextUp/nextDown.\n\tfixes LatLonPoint encoding to always correctly round down.\n\tfixes LatLonPoint box generation code to correctly round minimum values so false positives are never brought in.\n\tfixes GeoPoint bounding box impl to not quantize range endpoints at all, so false positives are never brought in.\n\n\n\nNote that GeoPoint's quantization is still inconsistent. Its not always rounding down. I don't think it makes sense to fix that here, instead it will be easier to just fix it with LUCENE-7165. Instead I fixed it by just removing its quantization. Its box query is quite different from LatLonPoint: its a two-phase confirm approach already, so it weeds out the false positives that way (once i removed the bogus quantization of these endpoints). GeoPoint cannot be changed to work like LatLonPoint's bounding box (which is more efficient), until its encoding is fixed to have consistent rounding. This is no change from how it works today, but the inconsistency does kinda suck.  "
        },
        {
            "id": "comment-15222811",
            "author": "Michael McCandless",
            "date": "2016-04-02T09:15:44+0000",
            "content": "+1, tricky  "
        },
        {
            "id": "comment-15222858",
            "author": "ASF subversion and git services",
            "date": "2016-04-02T11:24:45+0000",
            "content": "Commit f8ea8b855e43fc0a2fa434ab8c366de810047c8f in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f8ea8b8 ]\n\nLUCENE-7166: fix quantization bugs in LatLonPoint and GeoPointField, remove test leniency\n\nSquashed commit of the following:\n\ncommit 83c0f9b6158495b8b3d7108059a23bdf38e0f7f3\nAuthor: Robert Muir <rmuir@apache.org>\nDate:   Fri Apr 1 23:33:29 2016 -0400\n\n    fix geopoint\n\ncommit 97ebd2de516e61c236542fb2fb28e71cf6bdc403\nAuthor: Robert Muir <rmuir@apache.org>\nDate:   Fri Apr 1 23:06:05 2016 -0400\n\n    fix test and LatLonPoint encoding/quantization/box queries "
        },
        {
            "id": "comment-15222860",
            "author": "ASF subversion and git services",
            "date": "2016-04-02T11:27:12+0000",
            "content": "Commit 99d16feb7e5b7be70c7bf172c19f82c4df4e6b0e in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=99d16fe ]\n\nLUCENE-7166: fix quantization bugs in LatLonPoint and GeoPointField, remove test leniency\n\nSquashed commit of the following:\n\ncommit 83c0f9b6158495b8b3d7108059a23bdf38e0f7f3\nAuthor: Robert Muir <rmuir@apache.org>\nDate:   Fri Apr 1 23:33:29 2016 -0400\n\n    fix geopoint\n\ncommit 97ebd2de516e61c236542fb2fb28e71cf6bdc403\nAuthor: Robert Muir <rmuir@apache.org>\nDate:   Fri Apr 1 23:06:05 2016 -0400\n\n    fix test and LatLonPoint encoding/quantization/box queries "
        },
        {
            "id": "comment-15278922",
            "author": "Hoss Man",
            "date": "2016-05-10T21:10:27+0000",
            "content": "\nManually correcting fixVersion per Step #S5 of LUCENE-7271 "
        }
    ]
}