{
    "id": "LUCENE-736",
    "title": "Sloppy Phrase Scorer matches the doc \"A B C D E\" for query = \"B C B\"~2",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.2"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is an extension of https://issues.apache.org/jira/browse/LUCENE-697\n\nIn addition to abnormalities Yonik pointed out in 697, there seem to be other issues with slopy phrase search and scoring.\n\n1) A phrase with a repeated word would be detected in a document although it is not there.\nI.e. document = A B D C E , query = \"B C B\" would not find this document (as expected), but query \"B C B\"~2 would find it. \nI think that no matter how large the slop is, this document should not be a match.\n\n2) A document containing both orders of a query, symmetrically, would score differently for the queru and for its reveresed form.\nI.e. document = A B C B A would score differently for queries \"B C\"~2 and \"C B\"~2, although it is symmetric to both.\n\nI will attach test cases that show both these problems and the one reported by Yonik in 697.",
    "attachments": {
        "perf-search-orig.log": "https://issues.apache.org/jira/secure/attachment/12346206/perf-search-orig.log",
        "sloppy_phrase.patch2.txt": "https://issues.apache.org/jira/secure/attachment/12346271/sloppy_phrase.patch2.txt",
        "res-search-orig2.log": "https://issues.apache.org/jira/secure/attachment/12346272/res-search-orig2.log",
        "perf-search-new.log": "https://issues.apache.org/jira/secure/attachment/12346205/perf-search-new.log",
        "res-search-new2.log": "https://issues.apache.org/jira/secure/attachment/12346273/res-search-new2.log",
        "sloppy_phrase_tests.patch.txt": "https://issues.apache.org/jira/secure/attachment/12346191/sloppy_phrase_tests.patch.txt",
        "sloppy_phrase.patch3.txt": "https://issues.apache.org/jira/secure/attachment/12346374/sloppy_phrase.patch3.txt",
        "sloppy_phrase_java.patch.txt": "https://issues.apache.org/jira/secure/attachment/12346204/sloppy_phrase_java.patch.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2006-12-01T09:24:59+0000",
            "content": "sloppy_phrase_tests.patch.txt  contains:\n\n\n\ttwo test cases added in TestPhraseQuery.\nThese new tests currently fail. \n\n\n\n\n\tskipTo() behavior tests that were originaly in issue 697.\nThis too currently fails.\n\n ",
            "author": "Doron Cohen",
            "id": "comment-12454847"
        },
        {
            "date": "2006-12-01T10:24:49+0000",
            "content": "Attached sloppy_phrase_java.patch.txt is fixing the failing new tests. \nThis also includes the skipTo() bug from issue 697.\n\nThe fix does not guarantee that document A B C B A would score \"A B C\"~4 and \"C B A\"~4 the same. \nIt does that for \"B C\"~2 and \"C B\"~2.\nThis is because a general fix for that (at least the one that I devised) would be too expensive.\nAlthough this is an interesting case, I'd like to think it is not an important one.\n\nThis fix comes with a performance cost:  about 15% degradation in CPU activity of sloppy phrase scoring, as the attcahed perf logs show.\nHere is the summary of these tests:\n\n.......Operation..........runCnt...recsPerRun.....rec/s..elapsedSec\nOrig:..SearchSameRdr_3000......4.........3000.....216.1.......55.52\nNew:...SearchSameRdr_3000......4.........3000.....187.8.......63.91\n\nI think that in a real life scenario - real index, real documents, real queries - this extra CPU will be shaded by IO, but I also belive we should refrain from slowing down search, so, unhappy with this degradation (anyone would, I would look for a other ways to fix this - ideas are welcome.\n\nPerf test was done using the task benchmark framework (see issue 675), The logs show also the queries that were searched.\n\nAll tests pass with new code. ",
            "author": "Doron Cohen",
            "id": "comment-12454866"
        },
        {
            "date": "2006-12-01T17:04:59+0000",
            "content": "Great investigations Doron!\nPersonally I'm more concerned with (1) than (2).  Was the fix for one issue more responsible for the performance loss than the other?\n ",
            "author": "Yonik Seeley",
            "id": "comment-12454955"
        },
        {
            "date": "2006-12-01T19:02:18+0000",
            "content": "I have had similar concerns when I implemented NearSpansOrdered.java and NearSpansUnordered.java,\nwhich are in the trunk now.\nThese match somewhat different phrases, but it would be good to ensure that the same matches score\nthe same for spans and phrases. ",
            "author": "Paul Elschot",
            "id": "comment-12454971"
        },
        {
            "date": "2006-12-02T08:33:34+0000",
            "content": "The change to fix case 2 was not the main performance degradation cause.\n\nI agree with Yonik that case 2 is much more important than case 1.\nSo I modified to fix case 2 but not case 1. \nAlso extended the perf test to create also the \"reversed\" form of the sloppy phrases (slop increased for reversed cases so that queries would match docs).\n\nCost of this fix dropped from 15% more CPU time to about 3%. \nI feel ok with this.\n\n.....Operation..........runCnt...recsPerRun...rec/s..elapsedSec....avgUsedMem....avgTotalMem\nOrig.SearchSameRdr_6000......4.........6000...194.2......123.59.....8,032,732.....11,333,632\nNew..SearchSameRdr_6000......4.........6000...187.5......128.02.....8,172,258.....11,333,632\n\nAttached sloppy_phrase.patch2.txt has the updated fix, including both java and test parts. Some of the asserts in the new tests were commented out cause the patch takes decision not to fix case 1 above.\n\nAlso attaching the updates perf test logs - res-search-orig2.log and res-search-new2.log.\n\nI did not compare scoring of similar cases between sloppy phrase and near spans and Paul suggested - perhaps next week - not sure this should hold progress with this issue. ",
            "author": "Doron Cohen",
            "id": "comment-12455080"
        },
        {
            "date": "2006-12-02T09:46:14+0000",
            "content": "There is no need to hold up this issue for span phrases.\nPerhaps a good way to get the spans and the phrases work well together is by adding a getSpans() to\nPhraseQuery, or by introduction of a SpanPhraseQuery. But this would better be done at a new jira issue. ",
            "author": "Paul Elschot",
            "id": "comment-12455085"
        },
        {
            "date": "2006-12-04T21:08:57+0000",
            "content": "There is a bug in my recent patch (sloppy_phrase.patch2.txt):\n\n\tfor the case of phrase with repetitions, some additional computation is required before starting each doc.\n\tthis does not affect the regular/common case of phrase with no repetitions.\nI extended the test to expose this and will commit an updated patch later today.\n\n ",
            "author": "Doron Cohen",
            "id": "comment-12455422"
        },
        {
            "date": "2006-12-04T21:49:59+0000",
            "content": "Test case - testNonExistingWrappedPhrase - was extended.\nA bug in the patch (described above) was fixed.\n\nAll tests pass.  ",
            "author": "Doron Cohen",
            "id": "comment-12455429"
        },
        {
            "date": "2007-04-16T18:23:55+0000",
            "content": "Doron, sounds like this is ripe for a commit now to take care of both this and LUCENE-697. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12489187"
        },
        {
            "date": "2007-04-19T05:23:14+0000",
            "content": "Need to see if the parts of the test (in QueryUtils) that were disabled by LUCENE-730 (BooleanScorer2 sometimes falls back to BooleanScorer). One possibility is to have two versions of this - a BooleanScoere version, and the rest - this issue (736) is about sloppy/exact phrase scoring, so it would fall into the \"rest\", and so the test would still catch this. ",
            "author": "Doron Cohen",
            "id": "comment-12489930"
        },
        {
            "date": "2007-04-24T05:15:11+0000",
            "content": "Changing the title to match what we decided to fix here. ",
            "author": "Doron Cohen",
            "id": "comment-12491136"
        },
        {
            "date": "2007-04-24T05:37:43+0000",
            "content": "Fixed.\n\n\tSearch time cost of this fix is 4%, for sloppy phrase search.\n\tThis fix also partially brings back the the tests checkSkipTo() in QueryUtils,\n  (which was disabled by LUCENE-730), but this is now invoked only for non Boolean scorers.\n\n ",
            "author": "Doron Cohen",
            "id": "comment-12491138"
        },
        {
            "date": "2007-04-24T05:39:53+0000",
            "content": "Attaching for any future reference the fix that was applied for this. ",
            "author": "Doron Cohen",
            "id": "comment-12491141"
        }
    ]
}