{
    "id": "SOLR-9548",
    "title": "solr.log should start with informative welcome message",
    "details": {
        "components": [
            "Server"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "When starting Solr, the first log line should be more informative, such as\n\n\nWelcome to Apache Solr\u2122 version 7.0.0, running in standalone mode on port 8983 from folder /Users/janhoy/git/lucene-solr/solr",
    "attachments": {
        "SOLR-9548-detailversion.patch": "https://issues.apache.org/jira/secure/attachment/12830277/SOLR-9548-detailversion.patch",
        "SOLR-9548.patch": "https://issues.apache.org/jira/secure/attachment/12829714/SOLR-9548.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-21T23:07:39+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Simple patch. I'm assuming jetty.port and solr.install.dir are always set, and that the presence of either sysprop zkHost or zkRun is a certain way of detecting Cloud mode.\n\nAfter reducing more log noise this will be the 2nd line in a fresh solr.log file. Since this log line says almost exactly the same as the echo line from the start script when starting in foreground, this patch removes that echo.\n\nStartup will then look like\n\n% bin/solr start -f\n162  INFO  (main) [   ] o.e.j.s.Server jetty-9.3.8.v20160314\n500  INFO  (main) [   ] o.a.s.s.SolrDispatchFilter Welcome to Apache Solr\u2122 version 7.0.0, starting in standalone mode on port 8983 from /Users/janhoy/git/lucene-solr/solr\n524  INFO  (main) [   ] o.a.s.c.SolrResourceLoader using system property solr.solr.home: /Users/janhoy/git/lucene-solr/solr/server/solr\n...\n\n\n\nAny objections to this approach? ",
            "id": "comment-15511480"
        },
        {
            "date": "2016-09-21T23:36:20+0000",
            "author": "Shawn Heisey",
            "content": "No objections.  The line is fairly long, though.  A thought for consideration:  Would it make sense to output multiple lines that are each shorter, to reduce the risk of the lines wrapping on an 80-column text console? ",
            "id": "comment-15511532"
        },
        {
            "date": "2016-09-22T07:31:56+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "How about this? \n\n163  INFO  (main) [   ] o.e.j.s.Server jetty-9.3.8.v20160314\n442  INFO  (main) [   ] o.a.s.s.SolrDispatchFilter  ___      _       Welcome to Apache Solr\u2122 version 7.0.0\n442  INFO  (main) [   ] o.a.s.s.SolrDispatchFilter / __| ___| |_ _   Starting in standalone mode on port 8983\n442  INFO  (main) [   ] o.a.s.s.SolrDispatchFilter \\__ \\/ _ \\ | '_|  Install dir: /Users/janhoy/git/lucene-solr/solr\n493  INFO  (main) [   ] o.a.s.s.SolrDispatchFilter |___/\\___/_|_|    Start time: 2016-09-22T07:30:46.085Z\n409  INFO  (main) [   ] o.a.s.c.SolrResourceLoader using system property solr.solr.home: /Users/janhoy/git/lucene-solr/solr/server/solr\n\n ",
            "id": "comment-15512469"
        },
        {
            "date": "2016-09-22T12:23:43+0000",
            "author": "Shawn Heisey",
            "content": "That's really cool.  \n\nLooks like an 80 column display is too narrow for that info even if we don't include the text logo.  And in solr.log, with it's much larger timestamp, there's even less room.  So trying to fit it into 80 columns is impossible anyway, unless each line is super short, but that would make it difficult to relay useful info.  My idea won't work. ",
            "id": "comment-15513146"
        },
        {
            "date": "2016-09-22T12:30:02+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Yea. Btw we switched to logging full date-time also for console in another JIRA. I'm starting to doubt if that was wise, since it steals a lot of space. Adding the \"Start time\" to the top of the log will make it possible to convert the relative time into absolute time if one should need that. And those that need to run Solr in production with NSSM or similar which only can take STDOUT, can always edit log4j.properties. What do you say, shall we go back to relative time and shorter width? Could we also sacrifice (main), I guess that is thread name? ",
            "id": "comment-15513159"
        },
        {
            "date": "2016-09-22T13:09:01+0000",
            "author": "Shawn Heisey",
            "content": "I much prefer a real timestamp to an ever-increasing measure of runtime.  Without it, it's extremely difficult to compare an external timestamp to log information.\n\nI'm ambivalent when it comes to thread names in the log.  I have not yet seen any situation where the thread names in Solr are useful, but perhaps that's a failure of imagination on my part.  I haven't tried to connect different logging statements together by thread name.  If they can be useful, we should leave them in, but if they aren't useful to most people, we should take them out, and explain in the docs how to adjust the config for situations where they can be useful. ",
            "id": "comment-15513262"
        },
        {
            "date": "2016-09-26T09:04:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4c7a8c4b813ff75aad4b05189e2903501d34fd33 in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4c7a8c4 ]\n\nSOLR-9548: The beginning of solr.log now starts with a more informative welcome message ",
            "id": "comment-15522515"
        },
        {
            "date": "2016-09-26T09:27:59+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I committed to master. But when testing further, I see that the version printout never contains -SNAPSHOT even from my own build. I'm using Version.LATEST. I think it would make sense to be able to distinguish from the log whether this is an official full release or a SNAPSHOT build. How can I do this in the best way? I see that the SystemInfoHandler uses SolrCore.class.getPackage().getImplementationVersion(), but is there a simpler way? I'd like it to simply print the spec-version if it is an official release, but perhaps the full impl-version if it is a snapshot release? ",
            "id": "comment-15522563"
        },
        {
            "date": "2016-09-26T10:45:10+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "So the attached patch SOLR-9548-detailversion.patch is the best I could do for now. At least now it is evident from the log file by what exact version this log was generated. ",
            "id": "comment-15522707"
        },
        {
            "date": "2016-09-26T21:22:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c1553c20f0590cccaeb0571cb254efc7394f8275 in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c1553c2 ]\n\nSOLR-9548: Print full solr-impl version for SNAPSHOT builds ",
            "id": "comment-15524210"
        },
        {
            "date": "2016-09-26T21:24:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 047b643d2baeb2e9011d0d1bdf40209c5f1ee2c2 in lucene-solr's branch refs/heads/branch_6x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=047b643 ]\n\nSOLR-9548: The beginning of solr.log now starts with a more informative welcome message\n\n(cherry picked from commit 4c7a8c4) ",
            "id": "comment-15524212"
        },
        {
            "date": "2016-09-26T21:24:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6e1c82336f2fba7ea15ec37037a1515f6ef4ecb5 in lucene-solr's branch refs/heads/branch_6x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6e1c823 ]\n\nSOLR-9548: Print full solr-impl version for SNAPSHOT builds\n\n(cherry picked from commit c1553c2) ",
            "id": "comment-15524213"
        },
        {
            "date": "2016-10-11T23:15:45+0000",
            "author": "Shawn Heisey",
            "content": "I think this probably needs to be in another issue, but I can't locate an open one, and I don't want to open a new one until I know that there's not an existing one we can do the work in:\n\nThe startup logging, when in cloud mode, should log the precise information that will be used when registering with zookeeper \u2013 host, port, context path, http/https, etc.  Have a user on IRC that has run into a problem starting a second node because it sees an existing ephemeral live node that matches the info it's trying to use to register.  Setting the \"-h hostname\" option on bin/solr fixes the issue.  If the logging had included the precise registration info, it would have been easier to track down.  Ultimately we figured out that both hosts were trying to register as 127.0.1.1 \u2013 because /etc/hosts was incorrect. ",
            "id": "comment-15566924"
        },
        {
            "date": "2016-10-12T06:48:55+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Please open a new issue. I think you may want to add some logging in ZkContainer#initZookeeper(), by adding the extra info you need in this line which is already there:\n\nlog.info(\"Zookeeper client=\" + zookeeperHost);  \n\n ",
            "id": "comment-15567818"
        },
        {
            "date": "2016-11-09T08:39:30+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650332"
        }
    ]
}