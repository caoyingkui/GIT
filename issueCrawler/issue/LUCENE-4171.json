{
    "id": "LUCENE-4171",
    "title": "Performance improvements to Packed64",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/other"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "4.0-BETA"
        ],
        "affect_versions": "4.0-ALPHA,                                            6.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Based on the performance measurements of PackedInts.Mutable's in LUCENE-4062, a new version of Packed64 has been created that is consistently faster than the old Packed64 for both get and set.",
    "attachments": {
        "LUCENE-4171.patch": "https://issues.apache.org/jira/secure/attachment/12533706/LUCENE-4171.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-06-27T21:13:20+0000",
            "content": "Finished implementation, ready for review & potential merge. TestPackedInts passes. ",
            "author": "Toke Eskildsen",
            "id": "comment-13402558"
        },
        {
            "date": "2012-06-28T09:07:03+0000",
            "content": "Patch looks very good, all core tests pass on my computer too. Maybe still two minor things to fix before commit:\n\n\tyou shouldn't override getArray. This method must return a non-null array only when the number of bits per value matches the backing array type (some components use it to directly work with an array instead of a PackedInts.Reader).\n\tcould you use lower camelCase for instance variables (MASK_LEFT, MASK_RIGHT and BPV_MINUS_BLOCK_SIZE)?\n\n ",
            "author": "Adrien Grand",
            "id": "comment-13402947"
        },
        {
            "date": "2012-06-28T10:27:40+0000",
            "content": "I did wonder about the getArray-thing, but I did not look all the way back to the Reader interface, where the JavaDoc is very clear on the subject. I have removed the method and corrected the variable names. ",
            "author": "Toke Eskildsen",
            "id": "comment-13402987"
        },
        {
            "date": "2012-06-28T11:38:32+0000",
            "content": "Thanks, Toke. I think there are still a few minor fixes to perform:\n\n\tthe maskLeft variable seems unused, can it be removed?\n\tthe copyright header doens't need to be a javadoc comment (those that start with /** instead of // or /*), can you fix it?\n\tsince this impl uses the default format, there is no need to override getFormat\n\n\n\nI think it is not necessary to try to keep the same number of blocks as the old impl (cf. comments in ctor #1 and #3). Could we just use size(valueCount, bitsPerValue) to compute the required number of blocks? ",
            "author": "Adrien Grand",
            "id": "comment-13403018"
        },
        {
            "date": "2012-06-28T12:30:33+0000",
            "content": "I have corrected the issues. I do worry a little bit about the block count thing: As the change is seen in the constructor and the reader, and the writer uses valueCount, the persistent format should be the same, right? ",
            "author": "Toke Eskildsen",
            "id": "comment-13403053"
        },
        {
            "date": "2012-06-28T12:55:47+0000",
            "content": "Even if Packed64 used one or two additional blocks to avoid branches, the reader and the writer always read/wrote the exact number of required blocks (this is why ctor #3 reads size longs instead of blocks.length == size + 1 blocks). So this should not be a problem.\n\nCan you fix ctor #1 so that it uses the size method instead of valueCount * bitsPerValue / BLOCK_SIZE + 1 (this may create one more block than required: for example, if bitsPerValue=1 and valueCount=64, blocks will have a length of 2 while only 1 block is required)? ",
            "author": "Adrien Grand",
            "id": "comment-13403070"
        },
        {
            "date": "2012-06-29T08:20:00+0000",
            "content": "Attached patch with constructor #1 size calculation change. Unit-test still passes. ",
            "author": "Toke Eskildsen",
            "id": "comment-13403769"
        },
        {
            "date": "2012-06-29T13:24:49+0000",
            "content": "Committed (r1355346 and r1355352 on trunk, r1355359 on branch_4x).\n\nThanks a lot, Toke! ",
            "author": "Adrien Grand",
            "id": "comment-13403889"
        },
        {
            "date": "2012-07-11T23:10:25+0000",
            "content": "hoss20120711-manual-post-40alpha-change ",
            "author": "Hoss Man",
            "id": "comment-13412330"
        }
    ]
}