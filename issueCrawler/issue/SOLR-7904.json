{
    "id": "SOLR-7904",
    "title": "Make FacetStream Expressible",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "affect_versions": "6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "This ticket makes the FacetStream (SOLR-7903) expressible, so it can be used as a Streaming Expression.",
    "attachments": {
        "SOLR-7904.patch": "https://issues.apache.org/jira/secure/attachment/12777218/SOLR-7904.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-11T13:29:18+0000",
            "author": "Dennis Gove",
            "content": "I'm finalizing some of the tests but so far everything is passing fine. The expression format is as follows\n\nfacet(\n  collection1,\n  q=\"*:*\",\n  fl=\"a_s,a_i,a_f\",\n  sort=\"a_s asc\",\n  buckets=\"a_s\",\n  bucketSorts=\"sum(a_i) asc\",\n  bucketSizeLimit=10,\n  sum(a_i), sum(a_f),\n  min(a_i), min(a_f),\n  max(a_i), max(a_f),\n  avg(a_i), avg(a_f),\n  count(*),\n  zkHost=\"url:port\"\n)\n\n\nIt supports multiple buckets and multiple bucketSorts. All standard query properties (q, fl, sort, etc...) are also supported. The example above is only showing 3 of them. zkHost is optional. ",
            "id": "comment-15052745"
        },
        {
            "date": "2015-12-11T14:02:26+0000",
            "author": "Dennis Gove",
            "content": "I did consider an alternative format that would put the bucket options together and allow for different things in each bucket but steered away from it because it would require larger changes to the FacetStream implementation and may not have a usecase\n\n\nfacet(\n  collection1,\n  q=\"*:*\",\n  fl=\"a_s,b_s,a_i,a_f\",\n  sort=\"a_s asc\",\n  bucket(\"a_s\", sort=\"sum(a_i) asc\", limit=5, sum(a_i), avg(a_i), count(*)),\n  bucket(\"b_s\", sort=\"max(a_i) desc, min(a_i) desc\", limit=20, sum(a_i), min(a_i), max(a_i)),\n)\n\n ",
            "id": "comment-15052794"
        },
        {
            "date": "2015-12-11T14:06:14+0000",
            "author": "Joel Bernstein",
            "content": "I'll take a look again at the FacetStream impl. I think the fl and sort parameters are not needed. The StreamingTests have these params, but I think they were just pasted from another test. So this should work:\n\n\nfacet(\n  collection1,\n  q=\"*:*\",\n  buckets=\"a_s\",\n  bucketSorts=\"sum(a_i) asc\",\n  bucketSizeLimit=10,\n  sum(a_i), sum(a_f),\n  min(a_i), min(a_f),\n  max(a_i), max(a_f),\n  avg(a_i), avg(a_f),\n  count(*),\n  zkHost=\"url:port\"\n)\n\n\n ",
            "id": "comment-15052795"
        },
        {
            "date": "2015-12-11T14:11:20+0000",
            "author": "Joel Bernstein",
            "content": "Yeah, the FacetStream flattens out the hierarchical params of the JSON facet API. This works pretty well for SQL group by queries. But not nearly as expressive as the JSON facet API. But I think it's OK for version 1.  ",
            "id": "comment-15052804"
        },
        {
            "date": "2015-12-11T14:13:46+0000",
            "author": "Joel Bernstein",
            "content": "Also the result set is flattened to mimic the results of a SQL group by query.  ",
            "id": "comment-15052808"
        },
        {
            "date": "2015-12-11T14:13:51+0000",
            "author": "Dennis Gove",
            "content": "Alright. The expression parsing is similar to CloudSolrStream whereby some named parameters are required (buckets, bucketSorts, bucketSizeLimit) but the others are just passed down to the QueryRequest and are not considered explicitly. If fl and sort are not required then it'd just be a change in the documentation and not an implementation change (since the expression parsing doesn't explicitly look to ensure those were provided). ",
            "id": "comment-15052809"
        },
        {
            "date": "2015-12-12T00:53:21+0000",
            "author": "Dennis Gove",
            "content": "Fully implemented. All relevant tests pass. ",
            "id": "comment-15053871"
        },
        {
            "date": "2015-12-12T01:18:33+0000",
            "author": "Dennis Gove",
            "content": "Adds facet as a default function in the StreamHandler. ",
            "id": "comment-15053908"
        },
        {
            "date": "2015-12-13T03:09:03+0000",
            "author": "Joel Bernstein",
            "content": "+1\n\nLooks good to me. ",
            "id": "comment-15054768"
        },
        {
            "date": "2015-12-13T21:21:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1719838 from dpgove@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1719838 ]\n\nSOLR-7904: Add StreamExpression Support to FacetStream ",
            "id": "comment-15055157"
        },
        {
            "date": "2015-12-13T21:22:42+0000",
            "author": "Dennis Gove",
            "content": "Rebased against trunk. ",
            "id": "comment-15055159"
        }
    ]
}