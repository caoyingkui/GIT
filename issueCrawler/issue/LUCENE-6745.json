{
    "id": "LUCENE-6745",
    "title": "RAMInputStream.clone is not thread safe",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "This took some time to track down ... it's the root cause of the RangeTree failures that Steve Rowe found at https://issues.apache.org/jira/browse/LUCENE-6697?focusedCommentId=14696999&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14696999\n\nThe problem happens when one thread is using the original IndexInput (RAMInputStream) from a RAMDirectory, but other threads are also cloning  that IndexInput at the same time.",
    "attachments": {
        "LUCENE-6745.patch": "https://issues.apache.org/jira/secure/attachment/12751093/LUCENE-6745.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14701832",
            "author": "Michael McCandless",
            "date": "2015-08-18T19:25:00+0000",
            "content": "Patch w/ test and fix ...\n\nOther dir impls seem to be OK. "
        },
        {
            "id": "comment-14701857",
            "author": "David Smiley",
            "date": "2015-08-18T19:41:49+0000",
            "content": "Nice catch     Nice test too. "
        },
        {
            "id": "comment-14701915",
            "author": "Robert Muir",
            "date": "2015-08-18T20:12:04+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14701922",
            "author": "Uwe Schindler",
            "date": "2015-08-18T20:16:01+0000",
            "content": "Should the test have a shotgun? BTW, I would prefer using ExecutorService for the test. "
        },
        {
            "id": "comment-14701961",
            "author": "Michael McCandless",
            "date": "2015-08-18T20:45:25+0000",
            "content": "Should the test have a shotgun? BTW, I would prefer using ExecutorService for the test.\n\nI prefer to keep concurrency constructs to a minimum ... I think it's important that our tests are approachable.\n\nAnd the bug repros fine w/o the shotgun. "
        },
        {
            "id": "comment-14705019",
            "author": "ASF subversion and git services",
            "date": "2015-08-20T14:39:32+0000",
            "content": "Commit 1696798 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1696798 ]\n\nLUCENE-6745: RAMInputStream.clone was not thread safe (Mike McCandless) "
        },
        {
            "id": "comment-14705031",
            "author": "ASF subversion and git services",
            "date": "2015-08-20T14:44:29+0000",
            "content": "Commit 1696802 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1696802 ]\n\nLUCENE-6745: RAMInputStream.clone was not thread safe (Mike McCandless) "
        },
        {
            "id": "comment-14706774",
            "author": "Michael McCandless",
            "date": "2015-08-21T14:11:12+0000",
            "content": "Reopening this, I think we should revert it:\n\nI dug into this test failure: http://jenkins.thetaphi.de/job/Lucene-Solr-5.x-MacOSX/2604/\n\n\n[junit4] Suite: org.apache.lucene.store.TestMultiMMap\n   [junit4]   2> aug 21, 2015 9:50:09 AM com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\n   [junit4]   2> WARNING: Uncaught exception in thread: Thread[Thread-428,5,TGRP-TestMultiMMap]\n   [junit4]   2> java.lang.AssertionError: java.io.EOFException: seek past EOF: MMapIndexInput(path=\"/Users/jenkins/workspace/Lucene-Solr-5.x-MacOSX/lucene/build/core/test/J1/temp/lucene.store.TestMultiMMap_F4E5EB2F2F531D5D-001/tempDir-005/randombytes\")\n   [junit4]   2> \tat __randomizedtesting.SeedInfo.seed([F4E5EB2F2F531D5D]:0)\n   [junit4]   2> \tat org.apache.lucene.store.ByteBufferIndexInput.clone(ByteBufferIndexInput.java:259)\n   [junit4]   2> \tat org.apache.lucene.store.ByteBufferIndexInput$MultiBufferImpl.clone(ByteBufferIndexInput.java:487)\n   [junit4]   2> \tat org.apache.lucene.store.BaseDirectoryTestCase$1.run(BaseDirectoryTestCase.java:1200)\n   [junit4]   2> Caused by: java.io.EOFException: seek past EOF: MMapIndexInput(path=\"/Users/jenkins/workspace/Lucene-Solr-5.x-MacOSX/lucene/build/core/test/J1/temp/lucene.store.TestMultiMMap_F4E5EB2F2F531D5D-001/tempDir-005/randombytes\")\n   [junit4]   2> \tat org.apache.lucene.store.ByteBufferIndexInput.seek(ByteBufferIndexInput.java:174)\n   [junit4]   2> \tat org.apache.lucene.store.ByteBufferIndexInput$MultiBufferImpl.seek(ByteBufferIndexInput.java:504)\n   [junit4]   2> \tat org.apache.lucene.store.ByteBufferIndexInput.clone(ByteBufferIndexInput.java:257)\n   [junit4]   2> \t... 2 more\n   [junit4]   2> \n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestMultiMMap -Dtests.method=testCloneThreadSafety -Dtests.seed=F4E5EB2F2F531D5D -Dtests.slow=true -Dtests.locale=da -Dtests.timezone=Europe/Zurich -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\n\n\nThe failure is easy to reproduce, and indeed MMap's IndexInput.clone is not thread safe.\n\nBut thinking about it more ... I think this is too much to expect from Directory impls.\n\nInstead, I think the bug is in BKDDVFormat, because it's doing \"real stuff\" with the original IndexInput it opened, instead of always using clones to do so ... "
        },
        {
            "id": "comment-14706779",
            "author": "Robert Muir",
            "date": "2015-08-21T14:15:48+0000",
            "content": "\nInstead, I think the bug is in BKDDVFormat, because it's doing \"real stuff\" with the original IndexInput it opened, instead of always using clones to do so ...\n\nIn my opinion the API is trappy here. There are two ways i see this currently done today:\n\n\tcodec opens an immutable IndexInput, clone()s off that. Its ok without sync because it does not modify the original.\n\tcodec protects clone() with sync.\n\n\n\nLong term, maybe we should explore enforcing the first one with the API to prevent crazy stuff. In other words, Directory would return a Handle or Descriptor, that represents the actual FD opened. And it really has no conceptual state, you cannot really do anything with it except close it and get IndexInputs from it.\n\nI do hate the additional abstraction, however the more I think about it, the more I think its better: it would just be representing what actually happens today, but without the thread safety bugs of using IndexInput for both purposes. "
        },
        {
            "id": "comment-14706787",
            "author": "Michael McCandless",
            "date": "2015-08-21T14:24:54+0000",
            "content": "+1 for a separate abstraction making this \"convention\" strongly typed.\n\nFor this issue I'll just revert the commit, and fix the BKD/RangeTree producers. "
        },
        {
            "id": "comment-14706796",
            "author": "Michael McCandless",
            "date": "2015-08-21T14:31:18+0000",
            "content": "Patch, reverting the original commit, and fixing BKD to always clone before using the original IndexInput.\n\nI'll open a new issue to make this strongly typed. "
        },
        {
            "id": "comment-14706808",
            "author": "Michael McCandless",
            "date": "2015-08-21T14:41:35+0000",
            "content": "I opened LUCENE-6757 for the longer term fix. "
        },
        {
            "id": "comment-14706862",
            "author": "ASF subversion and git services",
            "date": "2015-08-21T15:24:05+0000",
            "content": "Commit 1697010 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1697010 ]\n\nLUCENE-6745: IndexInput.clone is not thread-safe; fix BKD/RangeTree to respect that "
        },
        {
            "id": "comment-14706864",
            "author": "ASF subversion and git services",
            "date": "2015-08-21T15:26:56+0000",
            "content": "Commit 1697011 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1697011 ]\n\nLUCENE-6745: IndexInput.clone is not thread-safe; fix BKD/RangeTree to respect that "
        }
    ]
}