{
    "id": "LUCENE-3056",
    "title": "Support Query Rewriting Caching",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Out of LUCENE-3041, its become apparent that using a Visitor / Walker isn't right for caching the rewrites of Querys.  Although we still intend to introduce the Query / Walker for advanced query transformations, rewriting still serves a purpose for very specific implementation detail writing.  As such, it can be very expensive.  So I think we should introduce first class support for rewrite caching.  I also feel the key is to make the caching as transparent as possible, to reduce the strain on Query implementors.\n\nThe TermState idea gave me the idea of maybe making a RewriteState / RewriteCache / RewriteInterceptor, which would be consulted for rewritten Querys.  It would then maintain an internal cache that it would check.  If a value wasn't found, it'd then call Query#rewrite, and cache the result.\n\nBy having this external rewrite source, people could 'pre' rewrite Querys if they were particularly expensive but also common.",
    "attachments": {
        "LUCENE-3056.patch": "https://issues.apache.org/jira/secure/attachment/12477880/LUCENE-3056.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-04-30T14:31:58+0000",
            "content": "Patch implementing what I outlined.  Converted BooleanQuery over to using RewriteState. ",
            "author": "Chris Male",
            "id": "comment-13027334"
        },
        {
            "date": "2011-05-02T08:02:31+0000",
            "content": "Hey chris,\n\nhere are some comments:\n\n\n\tI like that you only have to change BooleanQuery to enable this!! nice!\n\tCan we rename RewriteState into RewriteContext its just more consistent to all the other ctx we pass to query and scorer?\n\tCan we rename DefaultRewriteState into CachingRewriteContext and make a RewriteContext that simply does query.rewrite() that way nothing changes by default and we can use a static instance in Query#rewrite(IndexReader) maybe as an anonymous inner class in Query?\n\tCan we move CachingRewriteContext into lucene/src/java/org/apache/lucene/util?\n\n\n\nThis change somewhat depends on LUCENE-3041 since we might wanna pass that RewriteContext on a per segment level right? So maybe we should link those issues. ",
            "author": "Simon Willnauer",
            "id": "comment-13027578"
        },
        {
            "date": "2011-05-02T08:50:42+0000",
            "content": "This change somewhat depends on LUCENE-3041 since we might wanna pass that RewriteContext on a per segment level right?\n\nYeah, thats very true.  I'm wondering whether its best to rethink the signatures of the #search methods in IS since we need to incorporate both this and LUCENE-3041.\n\nI'll upload a patch shortly addressing the other improvements. ",
            "author": "Chris Male",
            "id": "comment-13027592"
        },
        {
            "date": "2011-05-02T09:07:46+0000",
            "content": "Patch implementing Simon's suggestions\n\n\n\tRewriteState -> RewriteContext\n\tDefaultRewriteState -> org.apache.lucene.util.CachingRewriteContext\n\tQuery now has a static anonymous inner class instance which does simple rewrite.\n\n ",
            "author": "Chris Male",
            "id": "comment-13027601"
        },
        {
            "date": "2013-07-23T18:44:47+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717057"
        },
        {
            "date": "2014-04-16T12:54:39+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970830"
        }
    ]
}