{
    "id": "SOLR-5929",
    "title": "Solrj QueryResponse results not presented in proper score order",
    "details": {
        "affect_versions": "4.6.1",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "It would appear that the results collection is sorting on the score as a string where there is an exponent.\n\nWhen searching for a term that returns two documents, one with a significantly smaller score than the other the results are returned correctly from solr directly.\n\n{\n    responseHeader: {\n        status: 0,\n        QTime: 69,\n        params: {\n            q: \"sausages\",\n            indent: \"true\",\n            fl: \"id, inv_text_summary, score\",\n            wt: \"json\",\n            debugQuery: \"true\"\n        }\n    },\n    response: {\n        numFound: 2,\n        start: 0,\n        maxScore: 0.0012368863,\n        docs: [\n            {\n                inv_text_summary: \"Contrary to popular belief, Lorem sausages sausages sausages sausagesIpsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the ...\",\n                id: \"/content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm2\",\n                score: 0.0012368863\n            },\n            {\n                inv_text_summary: \"Contrary to sausages belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consecte...\",\n                id: \"/content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm1\",\n                score: 0.0006184431\n            }\n        ]\n    },\n    debug: {\n        rawquerystring: \"sausages\",\n        querystring: \"sausages\",\n        parsedquery: \"(+DisjunctionMaxQuery((inv_path:sausages | inv_h1:sausages^8.0 | inv_text_summary:sausages^2.0 | inv_title:sausages^18.0 | inv_h2:sausages^6.0 | inv_h3:sausages^4.0 | inv_text:sausages)~1.0) () () () () () () ())/no_coord\",\n        parsedquery_toString: \"+(inv_path:sausages | inv_h1:sausages^8.0 | inv_text_summary:sausages^2.0 | inv_title:sausages^18.0 | inv_h2:sausages^6.0 | inv_h3:sausages^4.0 | inv_text:sausages)~1.0 () () () () () () ()\",\n        explain: {\n            /content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm2: \" 0.0012368863 = (MATCH) sum of: 0.0012368863 = (MATCH) max plus 1.0 times others of: 0.0012368863 = (MATCH) weight(inv_text:sausages in 0) [DefaultSimilarity], result of: 0.0012368863 = score(doc=0,freq=4.0 = termFreq=4.0 ), product of: 0.016643414 = queryWeight, product of: 0.5945349 = idf(docFreq=2, maxDocs=2) 0.027994009 = queryNorm 0.07431686 = fieldWeight in 0, product of: 2.0 = tf(freq=4.0), with freq of: 4.0 = termFreq=4.0 0.5945349 = idf(docFreq=2, maxDocs=2) 0.0625 = fieldNorm(doc=0) \",\n            /content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm1: \" 6.184431E-4 = (MATCH) sum of: 6.184431E-4 = (MATCH) max plus 1.0 times others of: 6.184431E-4 = (MATCH) weight(inv_text:sausages in 0) [DefaultSimilarity], result of: 6.184431E-4 = score(doc=0,freq=1.0 = termFreq=1.0 ), product of: 0.016643414 = queryWeight, product of: 0.5945349 = idf(docFreq=2, maxDocs=2) 0.027994009 = queryNorm 0.03715843 = fieldWeight in 0, product of: 1.0 = tf(freq=1.0), with freq of: 1.0 = termFreq=1.0 0.5945349 = idf(docFreq=2, maxDocs=2) 0.0625 = fieldNorm(doc=0) \"\n        },\n        QParser: \"ExtendedDismaxQParser\",\n        altquerystring: null,\n        boost_queries: null,\n        parsed_boost_queries: [\n            \n        ],\n        boostfuncs: null,\n        timing: {\n            time: 69,\n            prepare: {\n                time: 14,\n                query: {\n                    time: 14\n                },\n                facet: {\n                    time: 0\n                },\n                mlt: {\n                    time: 0\n                },\n                highlight: {\n                    time: 0\n                },\n                stats: {\n                    time: 0\n                },\n                debug: {\n                    time: 0\n                }\n            },\n            process: {\n                time: 55,\n                query: {\n                    time: 0\n                },\n                facet: {\n                    time: 0\n                },\n                mlt: {\n                    time: 0\n                },\n                highlight: {\n                    time: 0\n                },\n                stats: {\n                    time: 0\n                },\n                debug: {\n                    time: 55\n                }\n            }\n        }\n    }\n}\n\n\nHowever, when read through the solrj client, the document with the lower score is presented first.  This could be as the lower score (0.0006184431) is expressed as 6.184431E-4 so if a string sort was applied, could explain the order.\n\nThe QueryResponse.toString looks like this.\n\n[responseHeader=[status=0,QTime=2156,params=[q=sausages,hl.useFastVectorHighlighter=true,facet.field=[inv_siteContentType, inv_siteCategory],qt=/selectmin,hl=true,start=0,sort=inv_desktopPageTitleSort asc,id asc,rows=5,facet=true,wt=javabin,version=2,debugQuery=true]],response=[numFound=2,start=0,maxScore=0.0012368863,docs=[SolrDocument[inv_text_summary=Contrary to sausages\u00a0belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consecte..., inv_title=[multiterm1 - Investec Specialist Bank], inv_customContentTypes=[#1:COMMON#2:#3:#4:#5:[]#6:#7:[]#8:[]], id=/content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm1, inv_created=Thu Mar 27 12:54:34 CET 2014, inv_contentProcessed=Thu Mar 27 12:59:04 CET 2014, inv_desktopPageTitle=multiterm1, inv_mobilePageTitle=multiterm1, inv_lastModified=Thu Mar 27 12:57:48 CET 2014, score=6.184431E-4], SolrDocument[inv_text_summary=Contrary to popular belief, Lorem sausages sausages\u00a0sausages\u00a0sausagesIpsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the ..., inv_title=[multiterm2 - Investec Specialist Bank], inv_customContentTypes=[#1:COMMON#2:#3:#4:#5:[]#6:#7:[]#8:[]], id=/content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm2, inv_created=Thu Mar 27 12:54:42 CET 2014, inv_contentProcessed=Thu Mar 27 13:03:31 CET 2014, inv_desktopPageTitle=multiterm2, inv_mobilePageTitle=multiterm2, inv_lastModified=Thu Mar 27 13:03:27 CET 2014, score=0.0012368863]]],facet_counts=[facet_queries=[],facet_fields=[inv_siteContentType=[NONE=2],inv_siteCategory=[NONE=2]],facet_dates=[],facet_ranges=[]],highlighting=[/content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm1=[inv_text=[Contrary to <b>sausages</b>\u00a0belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical]],/content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm2=[inv_text=[Contrary to popular belief, Lorem <b>sausages</b> <b>sausages</b>\u00a0<b>sausages</b>\u00a0<b>sausages</b>Ipsum is not simply random text. It]]],debug=[rawquerystring=sausages,querystring=sausages,parsedquery=(+DisjunctionMaxQuery((inv_path:sausages | inv_h1:sausages^8.0 | inv_text_summary:sausages^2.0 | inv_title:sausages^18.0 | inv_h2:sausages^6.0 | inv_h3:sausages^4.0 | inv_text:sausages)~1.0) () () () () () () ())/no_coord,parsedquery_toString=+(inv_path:sausages | inv_h1:sausages^8.0 | inv_text_summary:sausages^2.0 | inv_title:sausages^18.0 | inv_h2:sausages^6.0 | inv_h3:sausages^4.0 | inv_text:sausages)~1.0 () () () () () () (),explain=\n[/content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm1=\n6.184431E-4 = (MATCH) sum of:\n  6.184431E-4 = (MATCH) max plus 1.0 times others of:\n    6.184431E-4 = (MATCH) weight(inv_text:sausages in 0) [DefaultSimilarity], result of:\n      6.184431E-4 = score(doc=0,freq=1.0 = termFreq=1.0\n), product of:\n        0.016643414 = queryWeight, product of:\n          0.5945349 = idf(docFreq=2, maxDocs=2)\n          0.027994009 = queryNorm\n        0.03715843 = fieldWeight in 0, product of:\n          1.0 = tf(freq=1.0), with freq of:\n            1.0 = termFreq=1.0\n          0.5945349 = idf(docFreq=2, maxDocs=2)\n          0.0625 = fieldNorm(doc=0)\n,/content/site-qa/capital/en_gb/home/test_pages/test_page_2/multiterm2=\n0.0012368863 = (MATCH) sum of:\n  0.0012368863 = (MATCH) max plus 1.0 times others of:\n    0.0012368863 = (MATCH) weight(inv_text:sausages in 0) [DefaultSimilarity], result of:\n      0.0012368863 = score(doc=0,freq=4.0 = termFreq=4.0\n), product of:\n        0.016643414 = queryWeight, product of:\n          0.5945349 = idf(docFreq=2, maxDocs=2)\n          0.027994009 = queryNorm\n        0.07431686 = fieldWeight in 0, product of:\n          2.0 = tf(freq=4.0), with freq of:\n            4.0 = termFreq=4.0\n          0.5945349 = idf(docFreq=2, maxDocs=2)\n          0.0625 = fieldNorm(doc=0)\n]",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-13950802",
            "date": "2014-03-28T14:47:35+0000",
            "content": "Problems should be raised on the mailing list first.  We try to confirm bugs before opening issues in JIRA.  The Solr \"discussion\" page mentions this.\n\nhttp://lucene.apache.org/solr/discussion.html\n\nSolrJ just returns results in the order that Solr delivers them.  It does not do any re-ordering.\n\nThe first response (formatted json) doesn't list a sort parameter.  The second one (toString from SolrJ) does list a sort parameter.  The requests are different, which is why the results are different.\n\nThe source of your confusion here appears to be the document scores.  Your first search does not have a sort field.  It uses the score.  The second has a sort field, so the score is ignored, and the sort parameter is the only thing that is used.  The debug will still calculate the score, even though it doesn't matter. "
        },
        {
            "author": "Chris Pilsworth",
            "id": "comment-13951808",
            "date": "2014-03-29T08:36:34+0000",
            "content": "Understood.  Thanks for your input and sorry for wasting your time with this non-issue "
        }
    ]
}