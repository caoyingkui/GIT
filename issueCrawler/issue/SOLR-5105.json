{
    "id": "SOLR-5105",
    "title": "Merge CoreAdmin and Collections API",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "For 5.0, we should remove the distinction between the Core Admin API and the Collections API.  It's confusing for users, and adds unnecessary complexity and duplication to the core code.\n\n\n\tUnder the hood, the AdminHandlers should just be deserializing the various core parameters and then passing them onto the CoreContainer to do the actual work.\n\tThe CoreContainer API can be cleaned up (need a distinction between loading existing cores and creating new ones, remove the various 'registerCore' methods)\n\tZkContainer should become a subclass of CoreContainer (maybe CloudCoreContainer?) and deal with the zookeeper interactions, while the base class deals with local cores.\n\tThe CoreContainer should be dealing with all core name logic (aliases, collections, etc).  This will have the nice side-effect of simplifying the core dispatch logic as well.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}