{
    "id": "SOLR-2033",
    "title": "Response parsing fragility in solrj",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Implemented"
    },
    "description": "In QueryResponse.setResponse(). the ordering of NamedList matters:\n\n// Look for known things\n    for( int i=0; i<res.size(); i++ ) {\n      String n = res.getName( i );\n      if( \"responseHeader\".equals( n ) ) \n{\n        _header = (NamedList<Object>) res.getVal( i );\n      }\n      else if( \"response\".equals( n ) ) \n{\n        _results = (SolrDocumentList) res.getVal( i );\n      }\n      else if( \"sort_values\".equals( n ) ) \n{\n        _sortvalues = (NamedList<ArrayList>) res.getVal( i );\n      }\n      else if( \"facet_counts\".equals( n ) ) \n{\n        _facetInfo = (NamedList<Object>) res.getVal( i );\n        extractFacetInfo( _facetInfo );                       <------------- this will throw NPE if _results is not set, but _result may be set later in the iteration\n      }\n      else if( \"debug\".equals( n ) ) \n{\n        _debugInfo = (NamedList<Object>) res.getVal( i );\n        extractDebugInfo( _debugInfo );\n      }\n      else if( \"highlighting\".equals( n ) ) \n{\n        _highlightingInfo = (NamedList<Object>) res.getVal( i );\n        extractHighlightingInfo( _highlightingInfo );\n      }\n      else if ( \"spellcheck\".equals( n ) )  \n{\n        _spellInfo = (NamedList<Object>) res.getVal( i );\n        extractSpellCheckInfo( _spellInfo );\n      }\n      else if ( \"stats\".equals( n ) )  \n{\n        _statsInfo = (NamedList<Object>) res.getVal( i );\n        extractStatsInfo( _statsInfo );\n      }\n    }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16019005",
            "date": "2017-05-21T22:23:00+0000",
            "content": "This bug is fixed in current code base "
        }
    ]
}