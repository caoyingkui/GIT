{
    "id": "LUCENE-7514",
    "title": "TestLatLonPointQueries fails with biased (evil) numbers",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Open",
        "type": "Bug"
    },
    "description": "After I commit LUCENE-7513 and switch to evil numbers, some tests fail in TestLatLonPointQueries. Could be I made a mistake somewhere in BiasedNumbers, but a verification would be nice.\n\nExample failing seed: \n-Dtests.seed=B6740F75309ABA5D\n\nbut it fails with multiple seeds, actually. The output for the seed above:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLatLonPointQueries -Dtests.method=testAllLatEqual -Dtests.seed=B6740F75309ABA5D -Dtests.slow=true -Dtests.locale=lv-LV -Dtests.timezone=Antarctica/McMurdo -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 1.42s | TestLatLonPointQueries.testAllLatEqual <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: wrong hit (first of possibly more):\n   [junit4]    > FAIL: id=6 should not match but did\n   [junit4]    >   box=Rectangle(lat=0.0 TO 1.401298464324817E-45 lon=179.99999999999997 TO 180.0)\n   [junit4]    >   query=point:[0.0 TO 0.0],[179.99999991618097 TO 179.99999991618097] docID=6\n   [junit4]    >   lat=0.0 lon=179.99999991618097\n   [junit4]    >   deleted?=false\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([B6740F75309ABA5D:BE159FB39579850]:0)\n   [junit4]    >        at org.apache.lucene.geo.BaseGeoPointTestCase.verifyRandomRectangles(BaseGeoPointTestCase.java:858)\n   [junit4]    >        at org.apache.lucene.geo.BaseGeoPointTestCase.verify(BaseGeoPointTestCase.java:740)\n   [junit4]    >        at org.apache.lucene.geo.BaseGeoPointTestCase.testAllLatEqual(BaseGeoPointTestCase.java:449)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {id=FST50}, docValues:{id=DocValuesFormat(name=Asserting), point=DocValuesFormat(name=Direct)}, maxPointsInLeafNode=1823, maxMBSortInHeap=7.309388819818781, sim=RandomSimilarity(queryNorm=false): {}, locale=lv-LV, timezone=Antarctica/McMurdo\n   [junit4]   2> NOTE: Windows 10 10.0 amd64/Oracle Corporation 1.8.0_102 (64-bit)/cpus=8,threads=1,free=182766440,total=257425408\n   [junit4]   2> NOTE: All tests run in this JVM: [TestLatLonPointQueries]\n   [junit4] Completed [1/1 (1!)] in 1.98s, 1 test, 1 failure <<< FAILURES!",
    "attachments": {
        "LUCENE-7514.patch": "https://issues.apache.org/jira/secure/attachment/12834624/LUCENE-7514.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15594605",
            "author": "Dawid Weiss",
            "date": "2016-10-21T09:21:34+0000",
            "content": "Patch to trigger the exception. "
        },
        {
            "id": "comment-15989906",
            "author": "Dawid Weiss",
            "date": "2017-04-29T15:09:21+0000",
            "content": "Didn't look, but I once replaced float generation with \"biased\" floats and it was relatively easy to break other geo tests too. "
        }
    ]
}