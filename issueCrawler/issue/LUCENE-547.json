{
    "id": "LUCENE-547",
    "title": "Directory implementation for Applets",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/store"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "1.9",
        "resolution": "Not A Problem",
        "status": "Closed"
    },
    "description": "This directory implementation can be used inside of applets, where the index files are located on the server.\nAlso teh applet is not required to be signed, as no calls to the System.getProperty are made.",
    "attachments": {
        "AppletDirectory.zip": "https://issues.apache.org/jira/secure/attachment/12325579/AppletDirectory.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2006-04-20T06:10:41+0000",
            "content": "The classes are based on the RAMxxx classes, perhaps some of them could be reused instead of creating new ones.\n\nCurrently we have to give a list of urls/files the applet will load.\nIt could perhaps be enhanced in a way that only the sements file is loaded and then all other files are loaded/detected when requested by the lucene engine. That way we would not have to pass in a list of the index files. ",
            "author": "Andre Schild",
            "id": "comment-12375211"
        },
        {
            "date": "2011-01-25T15:30:50+0000",
            "content": "This is not a Directory for Applets, but rather a Directory which copies its files on-demand from some remote server. I don't see why would someone want to use a Directory inside an Applet, vs e.g. issuing searches (or other operations) over REST - they carry far less data on them. Due to long inactivity and that I'm not sure we want to adopt every Directory impl out there into Lucene, closing the issue. ",
            "author": "Shai Erera",
            "id": "comment-12986435"
        },
        {
            "date": "2011-01-25T16:06:15+0000",
            "content": "The reason for this implementation is the following:\n\nWe have built a QM documentation system which \ngenerates static PDF and html pages, with a tree navigation.\n\nIt also generates a fulltext lucene index to be able to\ndo a full text search.\n\nWe don't require a server to deliver the content, but instead\nwe can just start the documentation system from a local harddisk,\nor even a CDROM drive.\n\nSo, since we don't have a server on hand, we can't use REST. ",
            "author": "Andre Schild",
            "id": "comment-12986465"
        },
        {
            "date": "2011-01-25T16:10:06+0000",
            "content": "If you don't have a server, where does the Directory take its files from? If it's from the local hard-disk, you can use RAMDirectory to load the files from a FSDirectory. ",
            "author": "Shai Erera",
            "id": "comment-12986471"
        },
        {
            "date": "2011-01-25T16:20:18+0000",
            "content": "The problem with RAMDirectory is, that it uses java.io.File\n\nWhen you work in a applet environment, then you don't have explicit java.io.File objects (for security reasons)\nbut instead you have to use the java.net.URL to get access to the \"files\".\n\nSo inheriting from RAMDirectory won't do.\n\nBut you can leave it closed, as I have a working implementation, and since\nnoby seems to have the need for that in over 5 years....\n\nThanks anyway for your work. ",
            "author": "Andre Schild",
            "id": "comment-12986490"
        }
    ]
}