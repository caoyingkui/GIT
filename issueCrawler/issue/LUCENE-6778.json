{
    "id": "LUCENE-6778",
    "title": "Add GeoPointDistanceRangeQuery support for GeoPointField types",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "New Feature"
    },
    "description": "GeoPointDistanceQuery currently handles a single point distance. This improvement adds a GeoPointDistanceRangeQuery for supporting use cases such as: find all points between 10km and 20km of a known location.",
    "attachments": {
        "LUCENE-6778.patch": "https://issues.apache.org/jira/secure/attachment/12754025/LUCENE-6778.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14729337",
            "author": "Nicholas Knize",
            "date": "2015-09-03T16:18:39+0000",
            "content": "Attached patch adds GeoPointDistanceRangeQuery support to GeoPointField.  This patch includes both explicit and randomized testing. "
        },
        {
            "id": "comment-14738424",
            "author": "Michael McCandless",
            "date": "2015-09-10T08:51:10+0000",
            "content": "This looks nice Nicholas Knize!  I like how simple the query is, just rewriting to a BQ that excludes the minRadius distance points.\n\nWhen the radius is too big, instead of doing the \"whole world bbox query\", couldn't we just do a MatchAllDocsQuery?  Should be the same thing but faster?\n\nI know BQ effectively rewrites correctly, but instead of BooleanClause.Occur.SHOULD can you use MUST, for the outer radius query?  It just makes it clear that we have a MUST and a MUST_NOT clause.\n\nIn the randomized test, instead of using the bbox to derive a radius, why not just make a random radius to begin with (this is pre-existing)?\n\nCan you please make this a an if statement instead?\n\n\n+                query = (rangeQuery) ? new GeoPointDistanceRangeQuery(FIELD_NAME, centerLon, centerLat, radius, radiusMax) :\n+                    new GeoPointDistanceQuery(FIELD_NAME, centerLon, centerLat, radius);\n\n\n\nThanks. "
        },
        {
            "id": "comment-14961250",
            "author": "Nicholas Knize",
            "date": "2015-10-16T19:31:41+0000",
            "content": "Updated patch based on feedback. "
        },
        {
            "id": "comment-14961254",
            "author": "Nicholas Knize",
            "date": "2015-10-16T19:38:32+0000",
            "content": "added incorrect patch... correct one now attached. "
        },
        {
            "id": "comment-14961367",
            "author": "Michael McCandless",
            "date": "2015-10-16T21:12:38+0000",
            "content": "Thanks Nicholas Knize, patch looks great, but I'm seeing test failures, e.g:\n\n\n   [junit4] Suite: org.apache.lucene.search.TestGeoPointQuery\n   [junit4]   1> T1: id=0 docID=0 lat=0.0 lon=0.0 deleted?=false expected=true but got false query=GeoPointDistanceRangeQuery: field=geoField: Center: [0.0,0.0] Distance: 290419.347234561 m Lower Left: [-2.6088813842482064,-2.626445466260717] Upper Right: [2.6088813842482064,2.626445466260717]\n   [junit4]   1> T0: id=0 docID=0 lat=0.0 lon=0.0 deleted?=false expected=true but got false query=GeoPointDistanceRangeQuery: field=geoField: Center: [0.0,0.0] Distance: 290419.347234561 m Lower Left: [-2.6088813842482064,-2.626445466260717] Upper Right: [2.6088813842482064,2.626445466260717]\n   [junit4]   2> Spa 16, 2015 1:08:38 PM com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\n   [junit4]   2> WARNING: Uncaught exception in thread: Thread[T0,5,TGRP-TestGeoPointQuery]\n   [junit4]   2> java.lang.AssertionError: wrong hit\n   [junit4]   2> \tat __randomizedtesting.SeedInfo.seed([7080C492088EC9F3]:0)\n   [junit4]   2> \tat org.junit.Assert.fail(Assert.java:93)\n   [junit4]   2> \tat org.apache.lucene.search.TestGeoPointQuery$VerifyHits.test(TestGeoPointQuery.java:582)\n   [junit4]   2> \tat org.apache.lucene.search.TestGeoPointQuery$1._run(TestGeoPointQuery.java:523)\n   [junit4]   2> \tat org.apache.lucene.search.TestGeoPointQuery$1.run(TestGeoPointQuery.java:408)\n   [junit4]   2> \n   [junit4]   2> Spa 16, 2015 1:08:38 PM com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\n   [junit4]   2> WARNING: Uncaught exception in thread: Thread[T1,5,TGRP-TestGeoPointQuery]\n   [junit4]   2> java.lang.AssertionError: wrong hit\n   [junit4]   2> \tat __randomizedtesting.SeedInfo.seed([7080C492088EC9F3]:0)\n   [junit4]   2> \tat org.junit.Assert.fail(Assert.java:93)\n   [junit4]   2> \tat org.apache.lucene.search.TestGeoPointQuery$VerifyHits.test(TestGeoPointQuery.java:582)\n   [junit4]   2> \tat org.apache.lucene.search.TestGeoPointQuery$1._run(TestGeoPointQuery.java:523)\n   [junit4]   2> \tat org.apache.lucene.search.TestGeoPointQuery$1.run(TestGeoPointQuery.java:408)\n   [junit4]   2> \n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestGeoPointQuery -Dtests.method=testRandom -Dtests.seed=7080C492088EC9F3 -Dtests.locale=lt_LT -Dtests.timezone=AST -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\n\n\nAlso, I realized (after struggling with it on LUCENE-6780) I was wrong about rewriting to MatchAllDocsQuery: this is not safe, because in general some docs won't have the geo field and we will then incorrectly match them.  So I think you should go back to the whole world bbox query?  (Maybe this explains the test failures?). "
        },
        {
            "id": "comment-14963781",
            "author": "Nicholas Knize",
            "date": "2015-10-19T18:31:26+0000",
            "content": "Updated patch \n\n\n\tReverts matchAllDocs change\n\tFixes PointDistanceRangeQuery test bug\n\n "
        },
        {
            "id": "comment-14963989",
            "author": "Michael McCandless",
            "date": "2015-10-19T20:25:15+0000",
            "content": "Thanks Nicholas Knize, looks great, I'll commit soon! "
        },
        {
            "id": "comment-14964014",
            "author": "ASF subversion and git services",
            "date": "2015-10-19T20:40:59+0000",
            "content": "Commit 1709476 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1709476 ]\n\nLUCENE-6778: add GeoPointDistanceRangeQuery "
        },
        {
            "id": "comment-14964054",
            "author": "ASF subversion and git services",
            "date": "2015-10-19T21:06:25+0000",
            "content": "Commit 1709477 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1709477 ]\n\nLUCENE-6778: add GeoPointDistanceRangeQuery "
        },
        {
            "id": "comment-14964059",
            "author": "ASF subversion and git services",
            "date": "2015-10-19T21:11:55+0000",
            "content": "Commit 1709478 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1709478 ]\n\nLUCENE-6778: just use this.radius "
        },
        {
            "id": "comment-14964061",
            "author": "ASF subversion and git services",
            "date": "2015-10-19T21:12:40+0000",
            "content": "Commit 1709479 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1709479 ]\n\nLUCENE-6778: just use this.radius "
        }
    ]
}