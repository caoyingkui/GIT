{
    "id": "SOLR-1841",
    "title": "Unregistering of Searcher MBean doesn't work in Websphere",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "On a Websphere cluster, all MBeans registered in the default MBean server get renamed on registration (it adds properties based on which node and cell in the Websphere cluster the process was running).  This means that when Solr tries to unregister an MBean (e.g. an old searcher), the old MBean is never removed.  In the case of a rebind the binding of the new MBean fails because it tries to register a name that is already taken.\n\nTo get around this the name the mbean gets assigned must be stored somewhere where it can be looked up when we need to remove the binding.",
    "attachments": {
        "SOLR-1841.patch": "https://issues.apache.org/jira/secure/attachment/12444147/SOLR-1841.patch",
        "patch": "https://issues.apache.org/jira/secure/attachment/12439649/patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Patrik Nordebo",
            "id": "comment-12849143",
            "date": "2010-03-24T10:48:16+0000",
            "content": "Proposed fix: whenever the name returned from the register method differs from the name we passed to the server, store the new name so we can look it up from the original name, and use the server-provided name when unregistering. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12865941",
            "date": "2010-05-10T21:50:29+0000",
            "content": "Updated patch to work against trunk ... also tweaked the variable naming convention \u2013 using \"serverName\" to refer to \"object name used by the server\" wsa confusing to me, so i switched it to a simpler \"altName\" convention.\n\nPatrick: thanks for bringing this up ... i had no idea an MBeanServer was allowed to use a differnet ObjectName then the one specified.  (strictly speaking: i'm not sure if it is/isn't legal under the spec, but the Java API certianly seems to leave the possibly open, and as you say: Websphere seems to do this)\n\nMy only concern with this patch is that i think this new new Map<ObjectName, ObjectName> increases the thread un-safety of JmxMonitoredMap ... from what i can tell, it has never really ben very thread safe if two threads attempted to \"put\" with the same name concurrently \u2013 but i believe the worst case scenario currently is that you get an exception (either from server.unregister because the other thread already unregistered the previous instance, or from server.register because the other thread already registered a different MBean with that name).  But with your patch, now (i thin) a new possibility will arise: that put() will exit \"successfully\", but with an ObjectName=>ObjectName recordd that doesn't corrispond with the bean mapping in the server \u2013 which will make any subsequent put or unregister calls behave very oddly.\n\n(i'm not 100% certain, but i think that's possible) "
        },
        {
            "author": "Patrik Nordebo",
            "id": "comment-12866106",
            "date": "2010-05-11T09:19:52+0000",
            "content": "I assumed in the patch that the derived object name returned for an original object name is always the same.  If that isn't the case, then the map will have to be synchronized to be safe, unless we can be sure that no two threads will ever register/unregister the same name at the same time. I believe the latter was the case when I wrote the patch, but I could be misremembering.  In Websphere we also always get the same name (as long as we're running in the same VM), so there at least the implementation should be safe. "
        },
        {
            "author": "cvalois",
            "id": "comment-12882961",
            "date": "2010-06-27T16:16:04+0000",
            "content": "I applied the patch to the code and when compiling the solr 1.4 code.. I'm getting this:\n\n\n[javac] Compiling 388 source files to C:\\eclipse-621_workspace\\testSOLR\\Testthis\\build\\solr\n       [javac] C:\\eclipse-621_workspace\\testSOLR\\Testthis\\src\\java\\org\\apache\\solr\\core\\JmxMonitoredMap.java:69: cannot find symbol\n       [javac] symbol  : variable rootName\n       [javac] location: class org.apache.solr.core.SolrConfig.JmxConfiguration\n       [javac]     jmxRootName = (null != jmxConfig.rootName ? \n       [javac]                                     ^\n       [javac] C:\\eclipse-621_workspace\\testSOLR\\Testthis\\src\\java\\org\\apache\\solr\\core\\JmxMonitoredMap.java:70: cannot find symbol\n       [javac] symbol  : variable rootName\n       [javac] location: class org.apache.solr.core.SolrConfig.JmxConfiguration\n       [javac]                    jmxConfig.rootName\n       [javac]                             ^\n       [javac] Note: Some input files use or override a deprecated API.\n       [javac] Note: Recompile with -Xlint:deprecation for details.\n       [javac] Note: Some input files use unchecked or unsafe operations.\n       [javac] Note: Recompile with -Xlint:unchecked for details.\n       [javac] 2 errors "
        },
        {
            "author": "cvalois",
            "id": "comment-12883535",
            "date": "2010-06-29T12:57:45+0000",
            "content": "Do you guys have any idea when you are going to add this patch to the code?  "
        },
        {
            "author": "wing-tung Leung",
            "id": "comment-13455804",
            "date": "2012-09-14T14:02:49+0000",
            "content": "There is also another possible implementation fix: when we could provide a custom MBean naming strategy, we can avoid that the name is altered by the MBean server. This at least works for Websphere AS 6.1, if you provide some extra information like cell, domain and node name attributes.\n\nBut it would require some extra configuration attribute for the \"jmx\" tag, to provide your own implementation.\n\nAny change that such patch would be accepted for the 3.6.x branch?\n\nE.g. <jmx namingStrategy=\"com.mycompany.util.jmx.WebSphereNamingStrategy\" /> "
        }
    ]
}