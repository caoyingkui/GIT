{
    "id": "LUCENE-8222",
    "title": "TestICUTokenizerCJK failure",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Bug",
        "components": [],
        "fix_versions": []
    },
    "description": "This reproduces for me:\n\n[junit4] 2> NOTE: reproduce with: ant test -Dtestcase=TestICUTokenizerCJK -Dtests.method=testRandomHugeStrings -Dtests.seed=2C1F4414ECB02FE4 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=pl-PL -Dtests.timezone=Europe/Athens -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n[junit4] FAILURE 0.57s | TestICUTokenizerCJK.testRandomHugeStrings <<<\n[junit4] > Throwable #1: org.junit.ComparisonFailure: term 128 expected:<\u30fc[]> but was:<\u30fc[\u30c7]>\n[junit4] > at __randomizedtesting.SeedInfo.seed([2C1F4414ECB02FE4:B43C23D7B2C693AC]:0)\n[junit4] > at org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:201)\n[junit4] > at org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:325)\n[junit4] > at org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:329)\n[junit4] > at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkAnalysisConsistency(BaseTokenStreamTestCase.java:869)\n[junit4] > at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:668)\n[junit4] > at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:566)\n[junit4] > at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:479)\n[junit4] > at org.apache.lucene.analysis.icu.segmentation.TestICUTokenizerCJK.testRandomHugeStrings(TestICUTokenizerCJK.java:107)\n[junit4] > at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n[junit4] > at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n[junit4] > at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n[junit4] > at java.base/java.lang.reflect.Method.invoke(Method.java:564)\n[junit4] > at java.base/java.lang.Thread.run(Thread.java:844)\n[junit4] 2> NOTE: test params are: codec=Asserting(Lucene70): {dummy=PostingsFormat(name=LuceneVarGapDocFreqInterval)}, docValues:{}, maxPointsInLeafNode=1800, maxMBSortInHeap=7.290162896982681, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@3f70f3d9), locale=pl-PL, timezone=Europe/Athens\n[junit4] 2> NOTE: Mac OS X 10.13.3 x86_64/Oracle Corporation 9.0.1 (64-bit)/cpus=8,threads=1,free=150530048,total=268435456",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16415710",
            "date": "2018-03-27T14:26:02+0000",
            "content": "This seems to be a bug in ICU4J. For instance the following example creates a similar issue. I sent an email to the icu-support mailing-list to ask what they think about it.\n\n\nString t = \"\u53e3\u8a23 \u30fc\u30c7\u30ad\u30e2\u30b5\u30e9\u30a7\u30ec\u30e7\u30a0\u30a4 \u30a0h\";\nBreakIterator it = BreakIterator.getWordInstance(ULocale.ROOT);\n\nit.setText(t);\nList<Integer> boundaries = new ArrayList<>();\nfor (int i = it.next(); i != BreakIterator.DONE; i = it.next()) {\n\tboundaries.add(i);\n}\n\nit.setText(t);\nList<Integer> boundaries2 = new ArrayList<>();\nfor (int i = it.next(); i != BreakIterator.DONE; i = it.next()) {\n\tboundaries2.add(i);\n}\n\nSystem.out.println(boundaries);\nSystem.out.println(boundaries2);\n\n\n\nwhich prints\n\n\n[2, 3, 4, 5, 7, 9, 10, 11, 14, 15, 16, 17]\n[2, 3, 14, 15, 16, 17]\n\n\n\nThe issue is that RuleBasedBreakIterator keeps a cache of the language break engines to use depending on the next character, and character \u30a0 expands the set of characters that the \"unhandled\" engine covers, which ends up making RuleBasedBreakIterator use a this unhandled break engine for \u30fc in the second run, while it used the cjk break engine in the first run. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16415711",
            "date": "2018-03-27T14:26:35+0000",
            "content": "For the record, this reproduces with both versions 59.1 and 61.1, and I don't think this should be a blocker for 7.3. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16415750",
            "date": "2018-03-27T14:49:49+0000",
            "content": "FYI: 7.3 is still on 59.1\n\nAll the 61.1 stuff was moved out to 7.4. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16415814",
            "date": "2018-03-27T15:35:58+0000",
            "content": "Here is my email to icu-support: https://sourceforge.net/p/icu/mailman/icu-support/thread/CAPsWd%2BOPN293cateTdUVOxtPK9ps0iZ1UmKByzx4jMMeNSbN9A%40mail.gmail.com/ ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16430213",
            "date": "2018-04-09T07:47:22+0000",
            "content": "Here is the bug report in the ICU bug tracker: http://bugs.icu-project.org/trac/ticket/13669. I'll awaitfix TestICUTokenizerCJK. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16430219",
            "date": "2018-04-09T07:53:55+0000",
            "content": "Commit 8803bb5d844e4757c7ad5b8572fcaf2b2f4f21ab in lucene-solr's branch refs/heads/branch_7x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8803bb5 ]\n\nLUCENE-8222: Await-fix TestICUTokenizerCJK. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16430220",
            "date": "2018-04-09T07:53:56+0000",
            "content": "Commit 6568f3bb59877b063385e318400055fa1907bbc4 in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6568f3b ]\n\nLUCENE-8222: Await-fix TestICUTokenizerCJK. ",
            "author": "ASF subversion and git services"
        }
    ]
}