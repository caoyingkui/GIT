{
    "id": "LUCENE-4719",
    "title": "Payloads per position broken",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [],
        "affect_versions": "4.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Reopened"
    },
    "description": "In 4.0 it worked. Since 4.1 getPayload() returns the same value for every position of the same term. Additionally payloads stored on the term vector (correct) may differ form payloads stored in the postings (wrong).",
    "attachments": {
        "PayloadsTestCase.java": "https://issues.apache.org/jira/secure/attachment/12566627/PayloadsTestCase.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-25T16:00:10+0000",
            "content": "read the javadocs: its ok that it returns the same instance.\n\nthe instance is not yours and will refer to different bytes, or bytes with different content (all at the discretion of the implementation) ",
            "author": "Robert Muir",
            "id": "comment-13562796"
        },
        {
            "date": "2013-01-25T16:03:28+0000",
            "content": "Yes, you are right, but the value is also the same. You can easily test it. ",
            "author": "Andr\u00e9",
            "id": "comment-13562801"
        },
        {
            "date": "2013-01-26T11:33:14+0000",
            "content": "Hi Andr\u00e9, could you produce a small test case showing the issue? ",
            "author": "Michael McCandless",
            "id": "comment-13563450"
        },
        {
            "date": "2013-01-26T12:22:11+0000",
            "content": "The attached test case shows different output for lucene 4.0.0 und lucene 4.1.0. maybe i misunderstood the javadocs. ",
            "author": "Andr\u00e9",
            "id": "comment-13563469"
        },
        {
            "date": "2013-01-26T17:18:34+0000",
            "content": "I think there is a bug in your test case: you are ignoring the offset and length of the BytesRef returned when you call getPayload? ",
            "author": "Michael McCandless",
            "id": "comment-13563552"
        },
        {
            "date": "2013-04-23T22:01:52+0000",
            "content": "Hi Andre:\n\n   Michael is right, I had the same bug in my code  \n\n   I think on the line: System.out.println(te.term().utf8ToString() + \": \" + decodeInt(tp.getPayload().bytes, 0));\n\n   Instead of passing 0 as the offset, change it to tp.getPayload().offset, your test should work.\n\n-John ",
            "author": "John Wang",
            "id": "comment-13639691"
        },
        {
            "date": "2017-05-20T00:49:22+0000",
            "content": "Is this still an open issue?   Looks like it was re-opened but then it was a test code issue instead? ",
            "author": "Erik Hatcher",
            "id": "comment-16018214"
        }
    ]
}