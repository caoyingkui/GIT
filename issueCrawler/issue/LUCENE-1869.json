{
    "id": "LUCENE-1869",
    "title": "when checking tvx/fdx size mismatch, also include whether the file exists",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "IndexWriter checks, during flush and during merge, that the size of the index file for stored fields (.fdx) and term vectors (.tvx) matches how many bytes it has just written.\n\nThis originally was added for LUCENE-1282, ie, as a safety to catch the nasty \"off by 1\" JRE hotspot bug that would otherwise silently corrupt the index.\n\nHowever, this check also seems to catch a different case, where the size of the file is zero.   The most recent example is LUCENE-1521.  I'd like to improve the message in the exception to include whether or not the file exists, to help understand why users are sometimes hitting this exception.  My best theory at this point is something external is removing the file out from under the IndexWriter.",
    "attachments": {
        "LUCENE-1869.patch": "https://issues.apache.org/jira/secure/attachment/12417975/LUCENE-1869.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-08-28T09:02:53+0000",
            "content": "Attached patch.\n\nThe patch is trivial (only changes the String message in the already-thrown RuntimeException when there is a mismatch detected in expected vs actual size of *.fdx or *.tvx). ",
            "author": "Michael McCandless",
            "id": "comment-12748752"
        }
    ]
}