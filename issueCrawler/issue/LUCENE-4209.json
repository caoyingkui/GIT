{
    "id": "LUCENE-4209",
    "title": "BytesRefSorter leaves files in /tmp and never cleans them up",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "core/FSTs"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.6.1",
            "4.0-BETA",
            "6.0"
        ],
        "affect_versions": "3.6,                                            4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When reviewing my Jenkins installation, I found out that /tmp is filled by Jenkins with the following files (in Linux and Windows).\n\nrw-rr- 1 jenkins  nogroup     12433 Jul  5 21:14\nRefSorter-1839005885812820606.sorted\nrw-rr- 1 jenkins  nogroup     13574 Jul  5 19:26\nRefSorter-2799526995307200478.sorted\nrw-rr- 1 jenkins  nogroup     12600 Jul  5 17:14\nRefSorter-2841491891429925756.sorted\nrw-rr- 1 jenkins  nogroup     11697 Jul  5 19:57\nRefSorter-3302954184439492426.sorted\nrw-rr- 1 jenkins  nogroup     13496 Jul  5 16:30\nRefSorter-3738422482066276549.sorted\nrw-rr- 1 jenkins  nogroup     13781 Jul  5 15:36\nRefSorter-4235756851148318773.sorted\nrw-rr- 1 jenkins  nogroup     12719 Jul  5 18:54\nRefSorter-4530019493984469514.sorted\nrw-rr- 1 jenkins  nogroup     12696 Jul  5 16:04\nRefSorter-5245195867837976219.sorted\nrw-rr- 1 jenkins  nogroup     13879 Jul  5 18:27\nRefSorter-5977302780601133089.sorted\nrw-rr- 1 jenkins  nogroup     12712 Jul  5 21:39\nRefSorter-6336186633027300753.sorted\nrw-rr- 1 jenkins  nogroup     12820 Jul  5 20:30\nRefSorter-6447286760971372233.sorted\nrw-rr- 1 jenkins  nogroup     12105 Jul  5 17:48\nRefSorter-6532780916605441895.sorted\nrw-rr- 1 jenkins  nogroup     13505 Jul  5 20:53\nRefSorter-7247901917320979657.sorted\nrw-rr- 1 jenkins  nogroup     12688 Jul  5 22:10\nRefSorter-7796370222379929612.sorted\nrw-rr- 1 jenkins  nogroup        19 Jul  5 18:54\nsort1277839437346448611partition\nrw-rr- 1 jenkins  nogroup  21299752 Jul  5 15:35\nsort1362726822297484023intermediate\nrw-rr- 1 jenkins  nogroup  21300496 Jul  5 17:48\nsort1435680293746542872intermediate\nrw-rr- 1 jenkins  nogroup        19 Jul  5 16:30\nsort1498884601796138622partition\nrw-rr- 1 jenkins  nogroup  21300869 Jul  5 20:30\nsort1634015425760928615intermediate\nrw-rr- 1 jenkins  nogroup        19 Jul  5 20:30\nsort1954741677243403383partition\nrw-rr- 1 jenkins  nogroup  21300802 Jul  5 20:53\nsort2203784121687916561intermediate\nrw-rr- 1 jenkins  nogroup  21300493 Jul  5 22:10\nsort24154414907891444intermediate\nrw-rr- 1 jenkins  nogroup        19 Jul  5 22:10\nsort2816986454022083882partition\nrw-rr- 1 jenkins  nogroup  21300111 Jul  5 18:27\nsort285022281545547041intermediate\nrw-rr- 1 jenkins  nogroup        19 Jul  5 18:28\nsort295507558144077223partition\nrw-rr- 1 jenkins  nogroup  21300569 Jul  5 16:30\nsort3013772538520090513intermediate\nrw-rr- 1 jenkins  nogroup  21300574 Jul  5 17:14\nsort3297463807520676013intermediate\nrw-rr- 1 jenkins  nogroup        19 Jul  5 21:14\nsort3364874175018276528partition\nrw-rr- 1 jenkins  nogroup        19 Jul  5 17:14\nsort3846182021346233750partition\nrw-rr- 1 jenkins  nogroup  21300204 Jul  5 19:26\nsort4397860673342757974intermediate\nrw-rr- 1 jenkins  nogroup  21300050 Jul  5 16:04\nsort4474792189525490476intermediate\nrw-rr- 1 jenkins  nogroup  21300825 Jul  5 18:54\nsort4518448528614283778intermediate\nrw-rr- 1 jenkins  nogroup        19 Jul  5 21:39\nsort4756172476965226743partition\nrw-rr- 1 jenkins  nogroup        19 Jul  5 20:53\nsort5416699953867843402partition\nrw-rr- 1 jenkins  nogroup        19 Jul  5 19:26\nsort5558474409634346477partition\nrw-rr- 1 jenkins  nogroup        19 Jul  5 17:48\nsort6281513108922200314partition\nrw-rr- 1 jenkins  nogroup  21300155 Jul  5 21:39\nsort6639309492804635005intermediate\nrw-rr- 1 jenkins  nogroup        19 Jul  5 19:57\nsort6777765458777941142partition\nrw-rr- 1 jenkins  nogroup  21301369 Jul  5 19:57\nsort6973021800616034113intermediate\nrw-rr- 1 jenkins  nogroup  21300341 Jul  5 21:14\nsort7260811068342958052intermediate\nrw-rr- 1 jenkins  nogroup        19 Jul  5 16:04\nsort852078170643422390partition\nrw-rr- 1 jenkins  nogroup        19 Jul  5 15:35\nsort8857722113319559286partition\n\nThe pattern \"RefSorter-\" I found in Lucene's source code, so it must come\nfrom tests. Why are they not cleaned up and why do we need those files? Would a RamDirectory not be enough for this?\n\nThis is serious, as the files are never cleaned up, they stay alive when the test passes, so its not caused by the always failing Solr Suggester tests.\n\nThere are also other filenames with .sorted and similar at end.\n\nThe slave was taken automatically offline after its RAM-based /tmp (2 GB) was filling in <24h). On the Windows Box c:\\Users\\JenkinsSlave\\AppData\\Temp contained already 60,000 files like this (still deleting them), taking 12 GB of disk space. I will review Apache Jenkins, too -> also cleaned up lots of files.",
    "attachments": {
        "LUCENE-4209_more.patch": "https://issues.apache.org/jira/secure/attachment/12535947/LUCENE-4209_more.patch",
        "LUCENE-4209.patch": "https://issues.apache.org/jira/secure/attachment/12535891/LUCENE-4209.patch",
        "LUCENE-4209-enforce-cleanup.patch": "https://issues.apache.org/jira/secure/attachment/12535951/LUCENE-4209-enforce-cleanup.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-10T18:26:47+0000",
            "content": "In my opinion, the placing of files should be configureable for user, it should not create File.createTempFile() [Robert: Put it on the forbidden list, please...] ",
            "author": "Uwe Schindler",
            "id": "comment-13410664"
        },
        {
            "date": "2012-07-10T18:28:47+0000",
            "content": "can you try this one on windows? ",
            "author": "Robert Muir",
            "id": "comment-13410666"
        },
        {
            "date": "2012-07-10T18:38:21+0000",
            "content": "I have also seen (on Windows), shit like: WFSTTermFreqIteratorWrapper8451761996211413579.sorted\n\nI will try now after cleaning up. ",
            "author": "Uwe Schindler",
            "id": "comment-13410683"
        },
        {
            "date": "2012-07-10T18:41:08+0000",
            "content": "On Windows, those files stayed there after running tests in suggest:\n\n10.07.2012  20:40                 0 SortedTermFreqIteratorWrapper1308605874198741902.sorted\n10.07.2012  20:40           351.131 SortedTermFreqIteratorWrapper2027363697367869268.sorted\n10.07.2012  20:40           449.985 SortedTermFreqIteratorWrapper5542079452540558393.sorted\n10.07.2012  20:39               241 SortedTermFreqIteratorWrapper690999681538401442.sorted\n10.07.2012  20:40            13.505 WFSTTermFreqIteratorWrapper6984334111477611000.sorted\n10.07.2012  20:40                47 WFSTTermFreqIteratorWrapper7332590534826479332.sorted ",
            "author": "Uwe Schindler",
            "id": "comment-13410688"
        },
        {
            "date": "2012-07-10T18:46:55+0000",
            "content": "try this one: I think i know the problem on Windows.\n\nSee my changes to SortedTermFreqIteratorWrapper. ",
            "author": "Robert Muir",
            "id": "comment-13410693"
        },
        {
            "date": "2012-07-10T18:54:04+0000",
            "content": "This one fixes on windows, too.\n\nWe should commit this now to make my machines happy and open another issue to make this horrible random file placement configureable like in your original Sorter (taking Directory instead of File.createTempFile()). We must put this method on the forbidden list!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! damn!!!!!! ",
            "author": "Uwe Schindler",
            "id": "comment-13410698"
        },
        {
            "date": "2012-07-10T18:56:22+0000",
            "content": "I agree the Directory abstraction would be nice here.\n\nThen we can verify everything (including windows correctness and no leaks) with MockDirectoryWrapper. ",
            "author": "Robert Muir",
            "id": "comment-13410702"
        },
        {
            "date": "2012-07-10T19:48:31+0000",
            "content": "Why were those temporary files not cleaned up? A bug? ",
            "author": "Dawid Weiss",
            "id": "comment-13410745"
        },
        {
            "date": "2012-07-10T19:53:56+0000",
            "content": "there were three cases:\n1. not calling Sorter.close() in FSTCompletionLookup\n2. not closing things in tests.\n3. trying to delete things before closing an open reader on them in SoftedTermFreqIteratorWrapper: windows problem only, it will not allow that. ",
            "author": "Robert Muir",
            "id": "comment-13410749"
        },
        {
            "date": "2012-07-10T20:07:12+0000",
            "content": "Oh crap. ",
            "author": "Dawid Weiss",
            "id": "comment-13410766"
        },
        {
            "date": "2012-07-10T20:11:15+0000",
            "content": "I committed this on trunk/branch_4x/branch_3_6 ",
            "author": "Robert Muir",
            "id": "comment-13410774"
        },
        {
            "date": "2012-07-10T21:26:57+0000",
            "content": "The Solr FST test also creates (in Linux, too) 2 of those files and never deletes them:\n\nrw-rr- 1 jenkins  nogroup        19 Jul 10 21:07 sort3792768274336297309partition\nrw-rr- 1 jenkins  nogroup  21300609 Jul 10 21:07 sort8319180334296886006intermediate ",
            "author": "Uwe Schindler",
            "id": "comment-13410938"
        },
        {
            "date": "2012-07-10T23:02:16+0000",
            "content": "Problem found with Robert:\nIt's not Solr, its again Sort.java.\n\nThis time this happens:\nOn the Jenkins machine /tmp is a separate filesystem (tmpfs), so the code uses the fallback, if file.renbameTo() does not work and copies the file. But forgets to delete the orginal.\n\nRobert has patch. ",
            "author": "Uwe Schindler",
            "id": "comment-13411032"
        },
        {
            "date": "2012-07-10T23:07:53+0000",
            "content": "here's the patch: what a horrendous thing to track down.\n\nIt only happened on Uwe's computer because he has /tmp on a separate volume. So the rename fails, and it does this copy() thing, but doesn't delete the old file. ",
            "author": "Robert Muir",
            "id": "comment-13411040"
        },
        {
            "date": "2012-07-10T23:39:48+0000",
            "content": "Patch that enforces cleanup of all temporarily generated files on success or failure, also partially written output files are deleted on error.\n\nWe should do the same for the other places like BytesRefSorter. ",
            "author": "Uwe Schindler",
            "id": "comment-13411067"
        },
        {
            "date": "2012-07-10T23:43:31+0000",
            "content": "+1 ",
            "author": "Robert Muir",
            "id": "comment-13411069"
        },
        {
            "date": "2012-07-10T23:50:39+0000",
            "content": "Committed trunk revision 1359953, 4.x revision 1359954, 3.6 revision 1359956. ",
            "author": "Uwe Schindler",
            "id": "comment-13411075"
        },
        {
            "date": "2012-07-11T23:03:43+0000",
            "content": "bulk cleanup of 4.0-ALPHA / 4.0 Jira versioning. all bulk edited issues have hoss20120711-bulk-40-change in a comment ",
            "author": "Hoss Man",
            "id": "comment-13412290"
        },
        {
            "date": "2012-08-03T13:16:50+0000",
            "content": "issue was left hanging open, but its resolved. ",
            "author": "Robert Muir",
            "id": "comment-13428067"
        }
    ]
}