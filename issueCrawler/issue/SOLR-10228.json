{
    "id": "SOLR-10228",
    "title": "XLSXWriter can fail on some JVMs if no fonts are available due to JVM/OS pacakging of fonts - causes errors in TestXLSXResponseWriter",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Not A Problem",
        "status": "Resolved"
    },
    "description": "I found this while trying to setup some automated testing against JDK9, but it can also affect users of java8/java7 depending on how their JDK/JRE is packaged.\n\nSome JVM packagers (in particular debian JVM \"*-headless\" packages) do not install any fonts along with the JDK/JRE, nor do these pacakges depend on any other packages providing fontconfig support for the JVM to pick up dynamically.\n\nThis can cause problems when using \nXLSXWriter \u2013 notably in the form of errors that look like this...\n\n\n   [junit4]    > Throwable #1: java.lang.InternalError: java.lang.reflect.InvocationTargetException\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([C8331E32DDBEC2E6:3E224C5FC7B09A3D]:0)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory$1.run(FontManagerFactory.java:86)\n   [junit4]    > \tat java.base/java.security.AccessController.doPrivileged(Native Method)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory.getInstance(FontManagerFactory.java:74)\n   [junit4]    > \tat java.desktop/java.awt.Font.getFont2D(Font.java:495)\n   [junit4]    > \tat java.desktop/java.awt.Font.canDisplayUpTo(Font.java:2244)\n   [junit4]    > \tat java.desktop/java.awt.font.TextLayout.singleFont(TextLayout.java:469)\n   [junit4]    > \tat java.desktop/java.awt.font.TextLayout.<init>(TextLayout.java:530)\n   [junit4]    > \tat org.apache.poi.ss.util.SheetUtil.getDefaultCharWidth(SheetUtil.java:254)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.AutoSizeColumnTracker.<init>(AutoSizeColumnTracker.java:117)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFSheet.<init>(SXSSFSheet.java:77)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createAndRegisterSXSSFSheet(SXSSFWorkbook.java:653)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:646)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXWriter$SerialWriteWorkbook.<init>(XLSXResponseWriter.java:112)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXWriter.<init>(XLSXResponseWriter.java:165)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXResponseWriter.write(XLSXResponseWriter.java:66)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.getWSResultForQuery(TestXLSXResponseWriter.java:237)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.getWSResultForQuery(TestXLSXResponseWriter.java:232)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.testPseudoFields(TestXLSXResponseWriter.java:211)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:547)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]    > Caused by: java.lang.reflect.InvocationTargetException\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n   [junit4]    > \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:473)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory$1.run(FontManagerFactory.java:84)\n   [junit4]    > \t... 55 more\n   [junit4]    > Caused by: java.lang.NullPointerException\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.getVersion(FontConfiguration.java:1288)\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.readFontConfigFile(FontConfiguration.java:225)\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.init(FontConfiguration.java:107)\n   [junit4]    > \tat java.desktop/sun.awt.X11FontManager.createFontConfiguration(X11FontManager.java:765)\n   [junit4]    > \tat java.desktop/sun.font.SunFontManager$2.run(SunFontManager.java:440)\n   [junit4]    > \tat java.base/java.security.AccessController.doPrivileged(Native Method)\n   [junit4]    > \tat java.desktop/sun.font.SunFontManager.<init>(SunFontManager.java:385)\n   [junit4]    > \tat java.desktop/sun.awt.FcFontManager.<init>(FcFontManager.java:35)\n   [junit4]    > \tat java.desktop/sun.awt.X11FontManager.<init>(X11FontManager.java:56)\n   [junit4]    > \t... 60 more\n\n\n\nThe solution is to ensure your JVM has proper font support \u2013 most likely by ensuring the neccessarily font packages are installed (in the case of debian, installing the libfontconfig1 package should fix this problem.)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-04T01:01:54+0000",
            "content": "\nWe can probably work around this in the test with an assume \u2013 but the correct fix is probably for XLSXWriter to fail to init if it can't be used \u2013 perhaps using java.awt.GraphicsEnvironment.isHeadless() ?\n\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestXLSXResponseWriter -Dtests.method=testStructuredDataViaBaseWriters -Dtests.seed=C8331E32DDBEC2E6 -Dtests.slow=true -Dtests.locale=ro -Dtests.timezone=America/Kentucky/Monticello -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   1.07s J0 | TestXLSXResponseWriter.testStructuredDataViaBaseWriters <<<\n   [junit4]    > Throwable #1: java.lang.InternalError: java.lang.reflect.InvocationTargetException\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([C8331E32DDBEC2E6:B964176DC21A5BD9]:0)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory$1.run(FontManagerFactory.java:86)\n   [junit4]    > \tat java.base/java.security.AccessController.doPrivileged(Native Method)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory.getInstance(FontManagerFactory.java:74)\n   [junit4]    > \tat java.desktop/java.awt.Font.getFont2D(Font.java:495)\n   [junit4]    > \tat java.desktop/java.awt.Font.canDisplayUpTo(Font.java:2244)\n   [junit4]    > \tat java.desktop/java.awt.font.TextLayout.singleFont(TextLayout.java:469)\n   [junit4]    > \tat java.desktop/java.awt.font.TextLayout.<init>(TextLayout.java:530)\n   [junit4]    > \tat org.apache.poi.ss.util.SheetUtil.getDefaultCharWidth(SheetUtil.java:254)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.AutoSizeColumnTracker.<init>(AutoSizeColumnTracker.java:117)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFSheet.<init>(SXSSFSheet.java:77)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createAndRegisterSXSSFSheet(SXSSFWorkbook.java:653)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:646)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXWriter$SerialWriteWorkbook.<init>(XLSXResponseWriter.java:112)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXWriter.<init>(XLSXResponseWriter.java:165)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXResponseWriter.write(XLSXResponseWriter.java:66)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.getWSResultForQuery(TestXLSXResponseWriter.java:237)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.getWSResultForQuery(TestXLSXResponseWriter.java:232)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.testStructuredDataViaBaseWriters(TestXLSXResponseWriter.java:89)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:547)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]    > Caused by: java.lang.reflect.InvocationTargetException\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n   [junit4]    > \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:473)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory$1.run(FontManagerFactory.java:84)\n   [junit4]    > \t... 55 more\n   [junit4]    > Caused by: java.lang.NullPointerException\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.getVersion(FontConfiguration.java:1288)\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.readFontConfigFile(FontConfiguration.java:225)\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.init(FontConfiguration.java:107)\n   [junit4]    > \tat java.desktop/sun.awt.X11FontManager.createFontConfiguration(X11FontManager.java:765)\n   [junit4]    > \tat java.desktop/sun.font.SunFontManager$2.run(SunFontManager.java:440)\n   [junit4]    > \tat java.base/java.security.AccessController.doPrivileged(Native Method)\n   [junit4]    > \tat java.desktop/sun.font.SunFontManager.<init>(SunFontManager.java:385)\n   [junit4]    > \tat java.desktop/sun.awt.FcFontManager.<init>(FcFontManager.java:35)\n   [junit4]    > \tat java.desktop/sun.awt.X11FontManager.<init>(X11FontManager.java:56)\n   [junit4]    > \t... 60 more\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestXLSXResponseWriter -Dtests.method=testPseudoFields -Dtests.seed=C8331E32DDBEC2E6 -Dtests.slow=true -Dtests.locale=ro -Dtests.timezone=America/Kentucky/Monticello -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.06s J0 | TestXLSXResponseWriter.testPseudoFields <<<\n   [junit4]    > Throwable #1: java.lang.InternalError: java.lang.reflect.InvocationTargetException\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([C8331E32DDBEC2E6:3E224C5FC7B09A3D]:0)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory$1.run(FontManagerFactory.java:86)\n   [junit4]    > \tat java.base/java.security.AccessController.doPrivileged(Native Method)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory.getInstance(FontManagerFactory.java:74)\n   [junit4]    > \tat java.desktop/java.awt.Font.getFont2D(Font.java:495)\n   [junit4]    > \tat java.desktop/java.awt.Font.canDisplayUpTo(Font.java:2244)\n   [junit4]    > \tat java.desktop/java.awt.font.TextLayout.singleFont(TextLayout.java:469)\n   [junit4]    > \tat java.desktop/java.awt.font.TextLayout.<init>(TextLayout.java:530)\n   [junit4]    > \tat org.apache.poi.ss.util.SheetUtil.getDefaultCharWidth(SheetUtil.java:254)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.AutoSizeColumnTracker.<init>(AutoSizeColumnTracker.java:117)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFSheet.<init>(SXSSFSheet.java:77)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createAndRegisterSXSSFSheet(SXSSFWorkbook.java:653)\n   [junit4]    > \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:646)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXWriter$SerialWriteWorkbook.<init>(XLSXResponseWriter.java:112)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXWriter.<init>(XLSXResponseWriter.java:165)\n   [junit4]    > \tat org.apache.solr.handler.extraction.XLSXResponseWriter.write(XLSXResponseWriter.java:66)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.getWSResultForQuery(TestXLSXResponseWriter.java:237)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.getWSResultForQuery(TestXLSXResponseWriter.java:232)\n   [junit4]    > \tat org.apache.solr.handler.extraction.TestXLSXResponseWriter.testPseudoFields(TestXLSXResponseWriter.java:211)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:547)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]    > Caused by: java.lang.reflect.InvocationTargetException\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n   [junit4]    > \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:473)\n   [junit4]    > \tat java.desktop/sun.font.FontManagerFactory$1.run(FontManagerFactory.java:84)\n   [junit4]    > \t... 55 more\n   [junit4]    > Caused by: java.lang.NullPointerException\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.getVersion(FontConfiguration.java:1288)\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.readFontConfigFile(FontConfiguration.java:225)\n   [junit4]    > \tat java.desktop/sun.awt.FontConfiguration.init(FontConfiguration.java:107)\n   [junit4]    > \tat java.desktop/sun.awt.X11FontManager.createFontConfiguration(X11FontManager.java:765)\n   [junit4]    > \tat java.desktop/sun.font.SunFontManager$2.run(SunFontManager.java:440)\n   [junit4]    > \tat java.base/java.security.AccessController.doPrivileged(Native Method)\n   [junit4]    > \tat java.desktop/sun.font.SunFontManager.<init>(SunFontManager.java:385)\n   [junit4]    > \tat java.desktop/sun.awt.FcFontManager.<init>(FcFontManager.java:35)\n   [junit4]    > \tat java.desktop/sun.awt.X11FontManager.<init>(X11FontManager.java:56)\n   [junit4]    > \t... 60 more\n\n ",
            "author": "Hoss Man",
            "id": "comment-15895344"
        },
        {
            "date": "2017-03-04T20:01:26+0000",
            "content": "+1 to disable feature and tests if we lost our head  ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15895844"
        },
        {
            "date": "2017-03-06T21:09:34+0000",
            "content": "The undelrying problem is more nuanced then I initailly realized, and has nothing to do with being \"headless\"\n\n\n\tour build system already runs all our test JVMs using -Djava.awt.headless=true \u2013 so that's not relevant (GraphicsEnvironment.isHeadless() is always true in our tests)\n\tthe root problem i was seeing appears to be specific to how the JDK/JVM can be packaged, and whether or not any fonts are available for it to use...\n\t\n\t\thttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=793210\n\t\thttps://github.com/docker-library/openjdk/issues/73\n\t\n\t\n\n\n\nI've updated the summary to try and make this more clear to other people who might make the same mistaken assumption I did about the solr code not working on \"headless\" JVMs ",
            "author": "Hoss Man",
            "id": "comment-15898107"
        }
    ]
}