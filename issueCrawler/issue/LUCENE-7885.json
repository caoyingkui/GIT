{
    "id": "LUCENE-7885",
    "title": "Inconsistent return of documents in TermsEnum.postings after unsuccesful TermsEnum.seekExact(bytes)",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Invalid",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Bug",
        "components": [
            "core/index"
        ],
        "fix_versions": []
    },
    "description": "Depending on the number of segments, TermsEnum.seekExact(bytes) to find a non-existing term, followed by TermsEnum.postings() is inconsistently returning different results.\n\nWhen optimized (to 1 segment in my test), the TermsEnum.postings() return the PostingsEnum with documents associated with the next entry in the terms list, if the term does not exist in the list.\nIf the core is not optimized, TermsEnum.postings() returns null.\n\nIn both cases, the TermsEnum.seekExact(bytes.toBytesRef()) and consecutive TermsEnum.term appears to have advanced to the next entry (relative to the non-existing term).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16057406",
            "date": "2017-06-21T12:40:01+0000",
            "content": "Right, the behaviour is undefined in that case. Documentation for seekExact states: Attempts to seek to the exact term, returning true if the term is found.  If this returns false, the enum is unpositioned. and documentation for postings states Do not call this when the enum is unpositioned. If you want to go to the next term when a term is not found, maybe you should use seekCeil instead?\n\nFor the record, you might want to consider using AssertingDirectoryReader in your tests, which would detect this kind of issues. ",
            "author": "Adrien Grand"
        }
    ]
}