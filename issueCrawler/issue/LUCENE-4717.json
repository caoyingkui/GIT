{
    "id": "LUCENE-4717",
    "title": "Lucene40's DocValues (sometimes?) have a bogus extra ordinal",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "affect_versions": "4.0,                                            4.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I committed the following commented out check in CheckIndex:\n\n      if (seenOrds.cardinality() != sortedValues.getValueCount()) {\n        // TODO: find the bug here and figure out a workaround (we can implement in LUCENE-4547's back compat layer maybe)\n        // basically ord 0 is unused by any docs: so the sortedbytes ords are all off-by-one\n        // does it always happen? e.g. maybe only if there are missing values? or a bug in its merge optimizations?\n        // throw new RuntimeException(\"dv for field: \" + fieldName + \" has holes in its ords, valueCount=\" + sortedValues.getValueCount() + \" but only used: \" + seenOrds.cardinality());\n      }\n\n\n\nI'd really like to have this check in CheckIndex, and so it would be great to understand the conditions when the bug happens, and if we can correct it on-the-fly in Lucene40DocValuesReader in LUCENE-4547 branch... otherwise we will have to conditionalize the check based on when the segment was written (it will ultimately be corrected on merge, just annoying)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-24T21:08:36+0000",
            "content": "I committed a fix to detect and correct this to the branch I'm happy with: http://svn.apache.org/viewvc?view=revision&revision=1438195\n\nWe can resolve it when LUCENE-4547 lands. ",
            "author": "Robert Muir",
            "id": "comment-13561983"
        },
        {
            "date": "2013-05-10T10:33:22+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653906"
        }
    ]
}