{
    "id": "SOLR-8099",
    "title": "Remove sleep() function / ValueSourceParser",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5"
        ],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "As per Doug Turnbull, the sleep() represents a security risk.\n\n\nI noticed a while back that \"sleep\" is a function query. Which I\nbelieve means I can make the current query thread sleep for as long as I\nlike.\n\nI'm guessing an attacker could use this to starve Solr of threads, running\na denial of service attack by running multiple queries with sleeps in them.\n\nIs this a concern? I realize there may be test purposes to sleep a function\nquery, but I'm trying to think if there's really practical purpose to\nhaving sleep here.\n\nBest,\n-Doug\n\n\n\nThis issue is to remove it, since it is neither documented publicly, nor used internally very much, apart from one test suite.",
    "attachments": {
        "SOLR-8099.patch": "https://issues.apache.org/jira/secure/attachment/12762596/SOLR-8099.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-27T13:27:58+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Here's a patch that removes both threadid() and sleep(). Neither is used anywhere apart from the QueryEqualityTest, nor is publicly documented. ",
            "id": "comment-14909736"
        },
        {
            "date": "2015-12-01T17:08:14+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Both these were added by Yonik Seeley in SOLR-3685 (https://svn.apache.org/viewvc?view=revision&revision=1370297). Is it supposed to be useful for tests which are under consideration? Or is it dead code which is safe to remove? ",
            "id": "comment-15034085"
        },
        {
            "date": "2015-12-01T17:19:05+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Updating the patch to keep those two functions around, but removing them from the list of implicitly added functions. If someone wants, he could still use it, and if not we can eventually remove it. ",
            "id": "comment-15034107"
        },
        {
            "date": "2015-12-01T17:23:55+0000",
            "author": "Yonik Seeley",
            "content": "They are useful for manual testing.  I've often used sleep for testing timeout situations.\nI used the threadid s long time ago to verify that thread pools were behaving as expected so we wouldn't use more thread locals than expected (this dates back to when Lucene used more thread-locals).\n\nWhether sleep should be considered a security issue?  shrug.\nWhat if it was modified to respect any timeAllowed parameter?  w/o a timeAllowed, there are dozens of ways I could construct requests that would take a long time and suck up a lot more resources than sleep does. ",
            "id": "comment-15034117"
        },
        {
            "date": "2015-12-01T17:54:43+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "I'm not really sure myself if this is a security issue. Was just wondering if it served any purpose. And seems like it does.\n\nDo you think we can stop loading it implicitly for everyone, and load it up using solrconfig.xml for only those who want it?\nHere's a patch that adds the two VSPs to solrconfig.xml, and the QueryEqualityTest.testTestFunc() passes. ",
            "id": "comment-15034196"
        },
        {
            "date": "2016-09-14T21:57:38+0000",
            "author": "Shawn Heisey",
            "content": "This issue turned up in an IRC discussion.  Somebody wanted to use the sleep function for some testing they were doing.  It took some headscratching and digging to determine that the function requires TWO parameters, and help from Hoss to determine exactly what that second parameter does.\n\nIMHO, any function we have should be documented, even those that are only used for testing.  I understand the security risk mentioned up above, so perhaps a general config option that enables risky behavior could be implemented, and the availability of the sleep function could be one of the things controlled by that option. ",
            "id": "comment-15491557"
        }
    ]
}