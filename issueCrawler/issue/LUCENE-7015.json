{
    "id": "LUCENE-7015",
    "title": "Refactor spatial module to spatial-extras",
    "details": {
        "resolution": "Done",
        "affect_versions": "None",
        "components": [
            "modules/spatial"
        ],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Blocker",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "Follow on to LUCENE-6997: non GeoPoint* classes need to be refactored from existing spatial module to a new spatial-extras module. All dev-tools, build and project files will be updated to correctly reference and build the new module.",
    "attachments": {
        "LUCENE-7015.patch": "https://issues.apache.org/jira/secure/attachment/12787211/LUCENE-7015.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15140274",
            "author": "Nicholas Knize",
            "date": "2016-02-10T04:13:20+0000",
            "content": "Patch includes:\n\n\tRefactor original lucene spatial classes from spatial module to new spatial-extras module\n\tUpdates build scripts and project files to build new module\n\tIncludes feedback from LUCENE-6997\n\n\n\nPasses ant idea generate-maven-artfacts and precommit Would love another round of review from Steve Rowe "
        },
        {
            "id": "comment-15140983",
            "author": "Steve Rowe",
            "date": "2016-02-10T15:24:37+0000",
            "content": "I'll take a look later today. "
        },
        {
            "id": "comment-15144706",
            "author": "Michael McCandless",
            "date": "2016-02-12T15:29:59+0000",
            "content": "I think this is a blocker for 6.0.0 release? "
        },
        {
            "id": "comment-15156211",
            "author": "Nicholas Knize",
            "date": "2016-02-21T20:18:02+0000",
            "content": "Michael McCandless Yes, this is a blocker for 6.0. Anyone have a chance to review this refactor? "
        },
        {
            "id": "comment-15156213",
            "author": "Steve Rowe",
            "date": "2016-02-21T20:24:37+0000",
            "content": "Applying the patch now, but several classes have moved packages since the patch on this issue (manually adjusting), e.g. GeoPointDistanceRangeQuery.java "
        },
        {
            "id": "comment-15156217",
            "author": "Nicholas Knize",
            "date": "2016-02-21T20:41:08+0000",
            "content": "++ Thanks Steve Rowe I'll update the patch "
        },
        {
            "id": "comment-15156298",
            "author": "Nicholas Knize",
            "date": "2016-02-21T23:48:54+0000",
            "content": "Updated patch to include spatial refactor from 5.5 release "
        },
        {
            "id": "comment-15158154",
            "author": "Steve Rowe",
            "date": "2016-02-23T02:10:38+0000",
            "content": "Thanks Nick, LGTM.\n\nA couple nits:\n\n\n\tYour patch includes import/whitespace-trimming-only changes 4 Solr .java files - those changes should be made elsewhere, not on this issue.\n\tIn spatial-extras/build.xml, the \"spatialextrasjar\" path id is a misnomer, should be spatial4j-jar or something like that (in spatial module it's currently named \"spatialjar\")\n\tIn spatial-extras/build.xml: spatial4j-tests.jar should go to test-lib/ instead of lib/ (note that this same issue was present in the spatial module, I'm fine with leaving this as-is for this JIRA).\n\n "
        },
        {
            "id": "comment-15172731",
            "author": "ASF subversion and git services",
            "date": "2016-02-29T22:19:50+0000",
            "content": "Commit 89db4950b9e2aee605d4313592466ad699ea7523 in lucene-solr's branch refs/heads/master from nknize\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=89db495 ]\n\nLUCENE-7015: Refactor spatial module to spatial-extras\n\nRefactors non GeoPoint* classes from existing spatial module to a new spatial-extras module. dev-tools, build, and project files are updated to include new spatial-extras module. "
        },
        {
            "id": "comment-15172835",
            "author": "Michael McCandless",
            "date": "2016-02-29T23:15:09+0000",
            "content": "Thanks Nicholas Knize, can this be resolved now?  It's the only 6.0 blocker  "
        },
        {
            "id": "comment-15173000",
            "author": "ASF subversion and git services",
            "date": "2016-03-01T00:50:45+0000",
            "content": "Commit dc39fc3e5a99e70aebf70fa565f7868e2544e9ca in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dc39fc3 ]\n\nLUCENE-7015: \"fix\" package-info/javadocs issues across duplicated packages. "
        },
        {
            "id": "comment-15174664",
            "author": "Gus Heck",
            "date": "2016-03-02T00:09:15+0000",
            "content": "When I updated today, saw red, ran \"ant idea\" and still a bunch of things turned red. (in IDEA) and I started getting this: \n\nBUILD FAILED\n/Users/gus/projects/solr/git/lucene-solr/build.xml:117: The following error occurred while executing this line:\n/Users/gus/projects/solr/git/lucene-solr/lucene/build.xml:115: The following error occurred while executing this line:\n/Users/gus/projects/solr/git/lucene-solr/lucene/common-build.xml:2187: The following error occurred while executing this line:\n/Users/gus/projects/solr/git/lucene-solr/lucene/common-build.xml:2389: Check for forbidden API calls failed: java.lang.ClassNotFoundException: com.spatial4j.core.context.SpatialContext\n        at de.thetaphi.forbiddenapis.Checker.getClassFromClassLoader(Checker.java:264)\n        at de.thetaphi.forbiddenapis.Checker.lookupRelatedClass(Checker.java:277)\n        at de.thetaphi.forbiddenapis.ClassScanner.checkType(ClassScanner.java:178)\n        at de.thetaphi.forbiddenapis.ClassScanner.checkType(ClassScanner.java:191)\n\n\nAlso I notice your commit contains workspace.xml... this is against JetBrain's reccomendations for working with version control systems: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839 "
        },
        {
            "id": "comment-15174694",
            "author": "Steve Rowe",
            "date": "2016-03-02T00:29:28+0000",
            "content": "Also I notice your commit contains workspace.xml... this is against JetBrain's reccomendations for working with version control systems: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\nThe checked-in workspace.xml (along with the other IntelliJ config files) is at a different location (under dev-tools/idea/) than the one used in your working directory - ant idea copies them into place.  The checked-in version contains a run configuration to run all JUnit tests for each module in the project, which I think has some value.\n\nBut you (and JetBrains) are right in pointing out that sharing config like this is problematic when it contains per-user settings.  Right now, we recommend running ant clean-idea idea to blow away your local config before copying the checked-in one into place, and this of course means you lose any local settings.  David Smiley has worked out a way to symlink rather than copy these config files into place, which theoretically allows for maintaining local modifications - see the writeup, starting at \"An alternative approach to use symbolic links\", at https://wiki.apache.org/lucene-java/HowtoConfigureIntelliJ.  I'm not sure if/how this interacts with the new git setup though. "
        },
        {
            "id": "comment-15175639",
            "author": "Gus Heck",
            "date": "2016-03-02T14:08:18+0000",
            "content": "Yeah, for example it blows away all MY run configurations for the tests I was working on. As for symlinks, Ant has a <symlink> task which has options for making symlinks and even persisting them so they can be checked in as a properties file and re-constituted. "
        },
        {
            "id": "comment-15175644",
            "author": "Steve Rowe",
            "date": "2016-03-02T14:16:03+0000",
            "content": "Yeah, for example it blows away all MY run configurations for the tests I was working on. As for symlinks, Ant has a <symlink> task which has options for making symlinks and even persisting them so they can be checked in as a properties file and re-constituted.\n\nRight.  I think the ideal thing, assuming it's useful to maintain an OOTB set of run configurations, is for ant idea to merge the OOTB set into the user's workspace.xml rather than just copying over it.  You could manually do that, too, but it's probably easier just to re-create them. "
        }
    ]
}