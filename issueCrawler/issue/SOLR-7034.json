{
    "id": "SOLR-7034",
    "title": "Consider allowing any node to become leader, regardless of their last published state.",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Now that we allow a min replication param for updates, I think it's time to loosen this up. Currently, you can end up in a state where no one in a shard thinks they can be leader and you so do this fast ugly infinite loop trying to pick the leader.\n\nWe should let anyone that is able to properly sync with the available replicas to become leader if that process succeeds.\n\nThe previous strategy was to account for the case of not having enough replicas after a machine loss to ensure you don't lose the data. The idea was that you should stop the cluster to avoid losing data and repair and get all your replicas involved in a leadership election. Instead, we should favor carrying on, and those that want to ensure they don't lose data due to major replica loss should use the min replication update param.",
    "attachments": {
        "SOLR-7034.patch": "https://issues.apache.org/jira/secure/attachment/12911337/SOLR-7034.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-27T19:21:44+0000",
            "author": "Mark Miller",
            "content": "A good first step might be, if all replicas in a shard participate in a leader sync, don't consult last published state. This would at least deal with cases where replicas 'blink' at the same time (gc, network interrupt, etc), but everyone gets it together and are ready to move on. ",
            "id": "comment-14294015"
        },
        {
            "date": "2015-01-30T00:53:48+0000",
            "author": "Mark Miller",
            "content": "I filed SOLR-7065 to tackle the lesser change in my last comment. ",
            "id": "comment-14297991"
        },
        {
            "date": "2018-02-21T04:16:24+0000",
            "author": "Cao Manh Dat",
            "content": "Shalin Shekhar Mangar patch for this issue using SOLR-11702 term value, term value is good enough to determine that a replica is able to become a leader or not. ",
            "id": "comment-16370927"
        },
        {
            "date": "2018-02-21T07:53:05+0000",
            "author": "Cao Manh Dat",
            "content": "The latest patch removed the lir call in SolrCmdDistributor. \nShalin Shekhar Mangar I think the patch is ready, can you review it? ",
            "id": "comment-16371062"
        },
        {
            "date": "2018-02-21T11:28:53+0000",
            "author": "Cao Manh Dat",
            "content": "In second thought, I think the patch should belong to SOLR-12011 ",
            "id": "comment-16371265"
        },
        {
            "date": "2018-03-05T04:06:15+0000",
            "author": "Cao Manh Dat",
            "content": "After SOLR-12011 get committed, the only thing left for this issue is removing the useless\u00a0FORCEPREPAREFORLEADERSHIP API and related tests. ",
            "id": "comment-16385579"
        },
        {
            "date": "2018-03-05T09:18:49+0000",
            "author": "Cao Manh Dat",
            "content": "Fixed by SOLR-12011 ",
            "id": "comment-16385840"
        }
    ]
}