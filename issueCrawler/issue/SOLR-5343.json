{
    "id": "SOLR-5343",
    "title": "TestReplicationHandler.doTestStressReplication fails ~ 33% of the time",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.6.1",
            "4.7",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This test fails ~ 1/3 of the time in every jenkins, locally on my machine, etc.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "ASF subversion and git services",
            "id": "comment-13793756",
            "date": "2013-10-13T18:58:54+0000",
            "content": "Commit 1531731 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1531731 ]\n\nSOLR-5343: disable unreliable test method (fails more than 1/3 of the time) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13793757",
            "date": "2013-10-13T18:59:33+0000",
            "content": "Commit 1531732 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1531732 ]\n\nSOLR-5343: disable unreliable test method (fails more than 1/3 of the time) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13793758",
            "date": "2013-10-13T19:00:00+0000",
            "content": "Commit 1531733 from Robert Muir in branch 'dev/branches/lucene_solr_4_5'\n[ https://svn.apache.org/r1531733 ]\n\nSOLR-5343: disable unreliable test method (fails more than 1/3 of the time) "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13793843",
            "date": "2013-10-13T23:43:10+0000",
            "content": "Chris Hostetter (Unused) and I have both tracked down this issue at one point or another (with no fix implemented yet). I can't recall/find the JIRA issue that might refer to this right now though. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13793844",
            "date": "2013-10-13T23:44:33+0000",
            "content": "To refresh Hoss's memory - this was related to the core reload after replication. I can't remember the details without doing some digging again. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13793847",
            "date": "2013-10-13T23:50:23+0000",
            "content": "I see the core reload method failing too (doTestReplicateAfterCoreReload). But I think thats a different failure than this doTestStressReplication.\n\nWhen doTestReplicationAfterCoreReload fails, the set of actual files differs from expected.\n\nWhen doTestStressReplication fails, its because of this: java.lang.AssertionError: timed out waiting for collection1 startAt time to exceed: Tue Aug 13 19:08:57 NFT 2013 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13793849",
            "date": "2013-10-13T23:54:50+0000",
            "content": "I still think it's what I'm referring too - the start time has not changed due to this core reload and it happening in the same thread or something along those lines - my memory is fuzzy, but it applies to doTestStressReplication. Hopefully Hossman remembers better than me or is willing to exercise his better research skills.\n\nI think the doTestReplicateAfterCoreReload fails are probably something else and a coincidence on the name. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13793906",
            "date": "2013-10-14T04:07:35+0000",
            "content": "Assuming this is what i think it is, i got as far as i could, and then miller said he'd take a look at the weird code i found...\n\nhttps://issues.apache.org/jira/browse/SOLR-4709\nhttps://issues.apache.org/jira/browse/SOLR-4629\n\n...the best suggestion i had to offer (SOLR-4709)...\n\nie: is there a bug here to fix in SolrCore; or should SnapPuller include retry logic if the core reload fails; or both?  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13828976",
            "date": "2013-11-21T14:36:46+0000",
            "content": "Okay, back to looking at this due to a local test failure that's driving me nuts.\n\nNow I think I remember what I was talking about - I think the issue would be solved if we didn't start a new thread to do the reload - that means it can easily happen to late for logic in the reload to work as hoped. We can make it happen like we want if we didn't start a new thread, but we can't reload a core from a core handler in the same thread - that's the issue I was referring to.\n\nI think I've got a workaround. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13829033",
            "date": "2013-11-21T15:40:10+0000",
            "content": "Commit 1544220 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1544220 ]\n\nSOLR-4709: The core reload after replication if config files have changed can fail due to a race condition.\nSOLR-5489: TestIndexAndConfigAliasReplication commonly fails because it tries to get a lock for a locked index.\nSOLR-5343: TestReplicationHandler.doTestStressReplication fails ~ 33% of the time "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13829040",
            "date": "2013-11-21T15:45:46+0000",
            "content": "Missed the comment on the merge back - in 4x as well. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13829046",
            "date": "2013-11-21T15:52:25+0000",
            "content": "Maaaaaaaany thanks! I hope Jenkins will now be more sunny than cloudy or stormy  "
        }
    ]
}