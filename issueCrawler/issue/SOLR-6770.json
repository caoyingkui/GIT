{
    "id": "SOLR-6770",
    "title": "Add/edit param sets and use them in Requests",
    "details": {
        "components": [],
        "type": "Sub-task",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Make it possible to define paramsets and use them directly in requests\n\nexample\n\ncurl http://localhost:8983/solr/collection1/config/params -H 'Content-type:application/json'  -d '{\n\"set\" : {\"x\": {\n              \"a\":\"A val\",\n              \"b\": \"B val\"}\n           },\n\"set\" : {\"y\": {\n               \"x\":\"X val\",\n               \"Y\": \"Y val\"}\n           },\n\"update\" : {\"y\": {\n               \"x\":\"X val modified\"}\n           },\n\n\"delete\" : \"z\"\n}'\n#do a GET to view all the configured params\ncurl http://localhost:8983/solr/collection1/config/params\n\n#or  GET with a specific name to get only one set of params\ncurl http://localhost:8983/solr/collection1/config/params/x\n\n\n\nThis data will be stored in conf/params.json\n\nThis is used requesttime and adding/editing params will not result in core reload and it will have no impact on the performance \n\nexample usage http://localhost/solr/collection/select?useParams=x,y\n\nor it can be directly configured with a request handler as follows\n\n<requestHandler name=\"/dump1\" class=\"DumpRequestHandler\" useParams=\"x\"/>\n\n\n\n useParams specified in request overrides the one specified in requestHandler\n\nA more realistic example\n\ncurl http://localhost:8983/solr/collection1/config/params -H 'Content-type:application/json'  -d '{\n\"set\":{\"query\":{\n    \"defType\":\"edismax\",\n    \"q.alt\":\"*:*\",\n    \"rows\":10,\n    \"fl\":\"*,score\"  },\n  \"facets\":{\n    \"facet\":\"on\",\n    \"facet.mincount\": 1\n  },\n \"velocity\":{\n   \"wt\": \"velocity\",\n   \"v.template\":\"browse\",\n   \"v.layout\": \"layout\"\n }\n}\n}\n\n\n and use all of them directly is a requesthandler\n\n  <requestHandler name=\"/browse\" class=\"solr.SearchHandler\" useParams=\"query,facets,velocity,browse\"/>",
    "attachments": {
        "SOLR-6770.patch": "https://issues.apache.org/jira/secure/attachment/12688678/SOLR-6770.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-12-18T13:46:41+0000",
            "author": "David Smiley",
            "content": "+1 Nice!  Looking forward to this. ",
            "id": "comment-14251655"
        },
        {
            "date": "2014-12-20T17:11:45+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Would these be default params only? Or compulsory/added params as well? ",
            "id": "comment-14254852"
        },
        {
            "date": "2014-12-20T18:13:26+0000",
            "author": "Noble Paul",
            "content": "These are shorthands for request params . it is equivalent to defaults but the component will not have access to these during init() . So it is purely a request time construct ",
            "id": "comment-14254883"
        },
        {
            "date": "2014-12-20T18:49:49+0000",
            "author": "Alexandre Rafalovitch",
            "content": "What about in your second example where you are defining them on the requestHandler itself? Does it become just a second set of default to layer on top of the set defined in-place. What order does it apply in if both are present? ",
            "id": "comment-14254914"
        },
        {
            "date": "2014-12-20T18:59:31+0000",
            "author": "Noble Paul",
            "content": "The second option is an shorthand if you don't want to pass it with every request and again those parameters will not be available during init()\n\nThe construct allows you to apply more than one param sets. I can say useParam=x,y,z and in that case all are applied in the order they are specified (the way defaults are applied currently) .  If the request has a useParam value , the one specified in the requestHandler is ignored. ",
            "id": "comment-14254918"
        },
        {
            "date": "2014-12-21T21:41:39+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This looks nice!\n\n\n\tCan we please use \"params\" or \"value\" instead of \"val\" in the json commands?\n\tSpecifying the content-type would be optional, right?\n\n ",
            "id": "comment-14255276"
        },
        {
            "date": "2014-12-22T10:41:44+0000",
            "author": "Noble Paul",
            "content": "yes we can change the key\n\nIf we don't specify the content type curl sets it to application/x-www-form-urlencoded so we can't omit it in the examples ",
            "id": "comment-14255629"
        },
        {
            "date": "2014-12-22T17:11:35+0000",
            "author": "Noble Paul",
            "content": "feature done, tests not done ",
            "id": "comment-14255943"
        },
        {
            "date": "2014-12-23T11:51:26+0000",
            "author": "Noble Paul",
            "content": "I'm planning to commit this soon ",
            "id": "comment-14256902"
        },
        {
            "date": "2014-12-23T12:26:08+0000",
            "author": "Yonik Seeley",
            "content": "The singular \"param\" in \"useParam\" sounds a little weird since you're actually specifying a set of params.  How about \"useParams\"?\n\n\n#do a GET to view all the configured params\ncurl http://localhost:8983/solr/collection1/config/params\n\n#or  GET with a specific name to get only one set of params\ncurl http://localhost:8983/solr/collection1/config/params/x\n\n\n\nThese feels very rest-like... is there a reason we're not going more rest-like for the updates as well?\n\ncurl http://localhost:8983/solr/collection1/config/params/x -d '\n{\n              \"a\":\"A val\",\n              \"b\": \"B val\"\n}\n'\n\nOR...\n\ncurl -XPUT http://localhost:8983/solr/collection1/config/params -d '\n{\n  \"x\" : {\n       \"a\":\"A val\",\n       \"b\": \"B val\"\n  }\n}\n'\n\n\n\nI suppose it's because of the desire to be able to specify \"create\" vs \"update\" (and I assume the latter changes a param set rather than overwrites it?).\nIs there another \"resty\" way to specify that distinction?\n\nEven if we keep updates of the form:\n\n\"create\" : {\"name\" ,\"x\",\n            \"params\": {\n              \"a\":\"A val\",\n              \"b\": \"B val\"}\n\n\nWe could actually eliminate the other names of \"name\" and \"params\" with a structure like:\n\n\"create\" : {\n  \"x\": {\n    \"a\":\"A val\",\n    \"b\": \"B val\"\n  }\n}\n\n\n\nAlso, if \"create\" can overwrite the previous param set, then \"set\" might be a better verb. ",
            "id": "comment-14256927"
        },
        {
            "date": "2014-12-23T12:52:16+0000",
            "author": "Noble Paul",
            "content": "The singular \"param\" in \"useParam\" \n\nI'm still ambivalent about it. I shall make it useParams\n\nThese feels very rest-like... is there a reason we're not going more rest-like for the updates as well?\n\nThis could have followed full REST. But, then, we have a lot of APIs schema/config which support  only GET/POST. I wanted this to be fully consistent with those APIs. \n\nthe verbs available are create ,update,modify and delete\n\nI'm still open to renaming the verbs . \n ",
            "id": "comment-14256947"
        },
        {
            "date": "2014-12-23T13:13:58+0000",
            "author": "Noble Paul",
            "content": "We could actually eliminate the other names of \"name\" and \"params\" with a structure like:\n\nI actually started with that . I am worried  how to support any metadata if I wish to add them in future ? \n\n\n\"create\" : {\n  \"x\": {\n    \"\": {\"meta-key1\" : \"val\"},\n    \"a\":\"A val\",\n    \"b\": \"B val\"\n  }\n}\n\n ",
            "id": "comment-14256957"
        },
        {
            "date": "2014-12-23T13:19:22+0000",
            "author": "Noble Paul",
            "content": "OK , I'll change the syntax and post a new patch ",
            "id": "comment-14256959"
        },
        {
            "date": "2014-12-23T14:53:03+0000",
            "author": "Noble Paul",
            "content": "changed the syntax . The description is modified accordingly ",
            "id": "comment-14257034"
        },
        {
            "date": "2014-12-24T08:51:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1647748 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1647748 ]\n\nSOLR-6770 Add/edit param sets and use them in requests ",
            "id": "comment-14258117"
        },
        {
            "date": "2014-12-24T14:43:52+0000",
            "author": "Yonik Seeley",
            "content": "Do we really need separate \"create\" and \"update\" actions?  (and I was initially confused about the difference between \"update\" and \"modify\").\n\"create\" doesn't seem so useful if \"update\" can do the same thing without erroring if it already exists. ",
            "id": "comment-14258301"
        },
        {
            "date": "2014-12-24T16:57:46+0000",
            "author": "Noble Paul",
            "content": "I have separate commands to avoid accidental overwrite. It is just to idiot proof the system. ",
            "id": "comment-14258374"
        },
        {
            "date": "2014-12-24T17:10:30+0000",
            "author": "Yonik Seeley",
            "content": "I have separate commands to avoid accidental overwrite. It is just to idiot proof the system.\n\nI understand the rational, but I just wonder if it makes it easier or harder to use in practice.  This actually creates another mode of failure.\nAs an example, a common \"idiot\"/newbie mistake to make may now be:\n\n1) send in a \"create\" command\n2) try it out... yay, it works.\n3) modify the command a bit and send it in again... failure? Arg... I have to use a different command if it already exists?\n\nLook at our APIs for adding documents... by default it's a create that replaces any existing document.\n\nObviously, the right default semantics depend on the API and expected use-cases.  But I can't think of realistic use-cases when I want to add a param set but I want it to fail if it already exists. ",
            "id": "comment-14258381"
        },
        {
            "date": "2014-12-24T18:45:59+0000",
            "author": "Noble Paul",
            "content": "But I can't think of realistic use-cases when I want to add a param set but I want it to fail if it already exists.\n\nActually , the usecase is, I'm trying to update a paramset and I made a typo in the name . Now, I have two paramsets  and the user thought he was right and he gets weird results\n\nTo be honest I can go either way ",
            "id": "comment-14258438"
        },
        {
            "date": "2014-12-24T18:50:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1647829 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1647829 ]\n\nSOLR-6770 fixing test failures http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-MacOSX/2013/ ",
            "id": "comment-14258443"
        },
        {
            "date": "2014-12-24T19:21:38+0000",
            "author": "Yonik Seeley",
            "content": "Actually , the usecase is, I'm trying to update a paramset and I made a typo in the name . Now, I have two paramsets and the user thought he was right and he gets weird results\n\nUrgg... does this mean that I can't just use \"update\" if I don't care if I'm overwriting a previous one or not?  If that's true, I've mis-interpreted these parameters yet again.\n\nThis doesn't really protect against anything.  Someone could just as easily make a typo in one of the parameters or one of the values.  The name isn't special.  This just makes it harder for people not making typing errors.\n\nFor example, if I make a script to set a bunch of params periodically, I just want one way to do it.  I don't want to have to do it one way the first time and then a different way every subsequent time. ",
            "id": "comment-14258467"
        },
        {
            "date": "2014-12-24T19:28:55+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Is there a result status (created, updated, deleted, failed, etc)? Might be a way to unify the API yet show the difference in treatment. ",
            "id": "comment-14258472"
        },
        {
            "date": "2014-12-24T19:46:50+0000",
            "author": "David Smiley",
            "content": "+1 to this point.  Like with documents, I want to add if not there or update if it is there. Perhaps the response might let me know what happened if I'm curious. ",
            "id": "comment-14258486"
        },
        {
            "date": "2014-12-25T06:37:21+0000",
            "author": "Noble Paul",
            "content": "OK, So let's make the commands\n\n\n\tset : create if does not exist. replace if exists\n\tupdate : merge the map with new values\n\tdelete\n\n ",
            "id": "comment-14258655"
        },
        {
            "date": "2014-12-26T03:25:21+0000",
            "author": "David Smiley",
            "content": "+1 ",
            "id": "comment-14258911"
        },
        {
            "date": "2014-12-26T12:27:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1647962 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1647962 ]\n\nSOLR-6770 changed command names to set, update ",
            "id": "comment-14259062"
        },
        {
            "date": "2014-12-31T12:25:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1648689 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1648689 ]\n\nSOLR-6801 more tests , SOLR-6770 refactored code around ",
            "id": "comment-14262137"
        },
        {
            "date": "2015-01-01T14:30:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1648847 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1648847 ]\n\nSOLR-6770: Add/edit param sets and use them in Requests ",
            "id": "comment-14262561"
        },
        {
            "date": "2015-01-05T15:13:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1649542 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1649542 ]\n\nSOLR-6770 wrong file name in standalone mode ",
            "id": "comment-14264660"
        },
        {
            "date": "2015-01-05T15:14:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1649543 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1649543 ]\n\nSOLR-6770 wrong file name in standalone mode ",
            "id": "comment-14264663"
        },
        {
            "date": "2015-01-05T15:44:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1649551 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1649551 ]\n\nSOLR-6770 Added testcase for standalone mode and fixed a reload bug ",
            "id": "comment-14264695"
        },
        {
            "date": "2015-01-05T15:46:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1649553 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1649553 ]\n\nSOLR-6770 Added testcase for standalone mode and fixed a reload bug ",
            "id": "comment-14264701"
        },
        {
            "date": "2015-01-13T09:05:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1651308 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1651308 ]\n\nSOLR-6770 Optimize tests to avoid duplicate RE[BST calls ",
            "id": "comment-14274942"
        },
        {
            "date": "2015-01-13T10:06:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1651316 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1651316 ]\n\nSOLR-6770 Optimize tests to avoid duplicate REST calls ",
            "id": "comment-14275008"
        },
        {
            "date": "2015-01-15T15:20:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652134 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1652134 ]\n\nSOLR-6770 mask the useParams aftger expanding it ",
            "id": "comment-14278785"
        },
        {
            "date": "2015-01-15T15:38:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652137 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1652137 ]\n\nSOLR-6770 mask the useParams after expanding it ",
            "id": "comment-14278814"
        },
        {
            "date": "2015-01-15T16:06:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652153 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1652153 ]\n\nSOLR-6770 accidentally commented out a test ",
            "id": "comment-14278863"
        },
        {
            "date": "2015-01-15T16:07:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652155 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1652155 ]\n\nSOLR-6770 accidentally commented out a test ",
            "id": "comment-14278869"
        },
        {
            "date": "2015-01-15T16:15:40+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652159 from Noble Paul in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1652159 ]\n\nSOLR-6770 mask the useParams after expanding it ",
            "id": "comment-14278883"
        },
        {
            "date": "2015-01-16T01:53:23+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Do we have a real example of this, rather than a/b/c? I am not entirely sure how to use/test these in the end. ",
            "id": "comment-14279689"
        },
        {
            "date": "2015-01-16T06:20:24+0000",
            "author": "Noble Paul",
            "content": "The current trunk implements the /browse feature using useParams\n\nI'll post another real world example ",
            "id": "comment-14279861"
        },
        {
            "date": "2015-02-23T05:01:58+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332800"
        },
        {
            "date": "2015-03-15T17:58:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1666816 from Yonik Seeley in branch 'dev/trunk'\n[ https://svn.apache.org/r1666816 ]\n\nSOLR-6770: reformat - fix bad indentation and funky formatting ",
            "id": "comment-14362474"
        },
        {
            "date": "2015-03-15T18:00:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1666817 from Yonik Seeley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1666817 ]\n\nSOLR-6770: reformat - fix bad indentation and funky formatting ",
            "id": "comment-14362477"
        }
    ]
}