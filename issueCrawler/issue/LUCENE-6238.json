{
    "id": "LUCENE-6238",
    "title": "minimize tests.policy",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "This is overly permissive:\n\n  // Basic permissions needed for Lucene to work:\n  permission java.util.PropertyPermission \"*\", \"read,write\";\n  permission java.lang.reflect.ReflectPermission \"*\";\n  permission java.lang.RuntimePermission \"*\";\n\n\n\nBecause of various BS like unsafe-hacks (only mmap seems to do it properly), this means effectively you cannot use lucene with SM today, without allowing SM itself to just be disabled with reflection. \n\nThis is easy to fix.",
    "attachments": {
        "LUCENE-6238.patch": "https://issues.apache.org/jira/secure/attachment/12700679/LUCENE-6238.patch",
        "LUCENE-6238-mmap.patch": "https://issues.apache.org/jira/secure/attachment/12700850/LUCENE-6238-mmap.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14336031",
            "author": "Robert Muir",
            "date": "2015-02-25T05:35:49+0000",
            "content": "Here is a patch:\n\n\tremoves read and execute permission for whole filesystem\n\tremoves unnecessary network permissions\n\tadds only runtimepermissions actually needed\n\n\n\nThis found a few test bugs. "
        },
        {
            "id": "comment-14336166",
            "author": "Ryan Ernst",
            "date": "2015-02-25T07:52:58+0000",
            "content": "+1\n\nFor the properties permission, it looks like the end quote of the permissions is in the wrong place?\n\"read\",write; should be \"read,write\";? "
        },
        {
            "id": "comment-14336200",
            "author": "Uwe Schindler",
            "date": "2015-02-25T08:26:11+0000",
            "content": "Thanks Robert. I will later try and run everything on windows to ensure all is fine.\n\nYour recent patch (LUCENE-6292) added read access to \"/dev/urandom\", maybe we should also add this here to test it thoroughly (currently it falls back to backup strategy for getting a random seed)? Or is this not applicable for tests because it always uses -Dtest.seed while testing so it never tries to open that file? "
        },
        {
            "id": "comment-14336248",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-02-25T08:54:35+0000",
            "content": "+1\n\nAll tests pass after I merged Ryan's fix for the PropertyPermission. Thanks Robert! "
        },
        {
            "id": "comment-14336455",
            "author": "Robert Muir",
            "date": "2015-02-25T12:57:16+0000",
            "content": "\n Or is this not applicable for tests because it always uses -Dtest.seed while testing so it never tries to open that file?\n\nExactly, its not needed. "
        },
        {
            "id": "comment-14336466",
            "author": "Robert Muir",
            "date": "2015-02-25T13:19:09+0000",
            "content": "\nFor the properties permission, it looks like the end quote of the permissions is in the wrong place?\n\"read\",write; should be \"read,write\";?\n\nugh, this is because i really wanted to remove this wildcard. unfortunately, junit4-ant \"requires\" it (by requires i mean, doesnt actually need it, but shits the bed if you take it away).  "
        },
        {
            "id": "comment-14336472",
            "author": "Robert Muir",
            "date": "2015-02-25T13:23:05+0000",
            "content": "I opened a bug here for that, as its the last remaining wildcard and really frustrating:\nhttps://github.com/carrotsearch/randomizedtesting/issues/187 "
        },
        {
            "id": "comment-14336486",
            "author": "Robert Muir",
            "date": "2015-02-25T13:48:04+0000",
            "content": "Fix typo found by ryan. "
        },
        {
            "id": "comment-14336501",
            "author": "Uwe Schindler",
            "date": "2015-02-25T14:11:12+0000",
            "content": "Lucene tests passed on windows with whitespace in file name \n\nSolr did not really change so I hit Ctrl-C after I verified that the setup generally works (Solr uses the old policy file of Lucene). "
        },
        {
            "id": "comment-14336522",
            "author": "Robert Muir",
            "date": "2015-02-25T14:18:30+0000",
            "content": "Thanks for testing Uwe "
        },
        {
            "id": "comment-14336706",
            "author": "ASF subversion and git services",
            "date": "2015-02-25T16:26:17+0000",
            "content": "Commit 1662254 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1662254 ]\n\nLUCENE-6238: minimize tests.policy "
        },
        {
            "id": "comment-14336749",
            "author": "Robert Muir",
            "date": "2015-02-25T16:59:44+0000",
            "content": "Note: with java 7 on branch_5x, i had to add an additional permission:\n\n  // expressions TestCustomFunctions (only on java7?)\n  permission java.lang.RuntimePermission \"getClassLoader\"; "
        },
        {
            "id": "comment-14336754",
            "author": "ASF subversion and git services",
            "date": "2015-02-25T17:03:22+0000",
            "content": "Commit 1662263 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662263 ]\n\nLUCENE-6238: minimize tests.policy "
        },
        {
            "id": "comment-14336968",
            "author": "ASF subversion and git services",
            "date": "2015-02-25T18:52:07+0000",
            "content": "Commit 1662293 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1662293 ]\n\nLUCENE-6238: add policy oddity to trunk too "
        },
        {
            "id": "comment-14337122",
            "author": "Uwe Schindler",
            "date": "2015-02-25T20:26:14+0000",
            "content": "Hi,\nI tried to remove the \"sun.misc\" reflection in mmap, but it is still needed and leads to SecurityException. The most important thing is that static <clinit> code should not rely or reflect on sun.misc APIs.\n\nNevertheless I did the following:\n\n\tremoved the explicit check on the sun.misc.Cleaner class (which is unused, because we don't care about the actual impl of the Cleaner class)\n\tI also added doPrivileged() to the static check. This allows better sceurity check by those who want to restrict access.\n\n\n\nIn general we should open a separate issue and review the whole reflection in Lucene's codebase and make it use AccessController. Because without AccessController the code is run with security privileges of the caller, so user has to allow access to sun.misc.* and other reflection stuff to his whole libs (also untrusted stuff). With doPrivileged, he can simply allow reflection access to lucene-core.jar.\n\nThis code uses Java 8 code, when backporting I will remove the method references and do it with anonymous inner classes. "
        },
        {
            "id": "comment-14337337",
            "author": "ASF subversion and git services",
            "date": "2015-02-25T22:18:44+0000",
            "content": "Commit 1662317 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1662317 ]\n\nLUCENE-6238: Remove access to sun.misc package from static <clinit> code. "
        },
        {
            "id": "comment-14337343",
            "author": "ASF subversion and git services",
            "date": "2015-02-25T22:23:51+0000",
            "content": "Commit 1662318 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662318 ]\n\nMerged revision(s) 1662317 from lucene/dev/trunk:\nLUCENE-6238: Remove access to sun.misc package from static <clinit> code. "
        },
        {
            "id": "comment-14337597",
            "author": "ASF subversion and git services",
            "date": "2015-02-26T00:53:21+0000",
            "content": "Commit 1662341 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1662341 ]\n\nLUCENE-6238: the resourcebundle stuff happening here can cause problems in some configs (e.g. OS X 10.10.x) "
        },
        {
            "id": "comment-14337600",
            "author": "ASF subversion and git services",
            "date": "2015-02-26T00:55:53+0000",
            "content": "Commit 1662342 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662342 ]\n\nLUCENE-6238: the resourcebundle stuff happening here can cause problems in some configs (e.g. OS X 10.10.x) "
        },
        {
            "id": "comment-14341710",
            "author": "Dawid Weiss",
            "date": "2015-02-28T18:34:48+0000",
            "content": "I admit I am not a big fan of Java's security architecture... and I never mastered writing those policy files. I will fix that call to retrieve all properties, but it is actually a legitimate and valid use case, not something that is a \"bug\" or a shitty piece of code. The reason for enumerating all system properties and putting them in an XML report (which isn't obligatory, by the way) is that by default both ant and maven's junit runners produce such a map and many tools (jenkins, bamboo) consume those properties.\n\nI don't see any other way of enumerating all system properties with a \"read only\" access other than by calling System.getProperties().\n\nMy \"fix\" will be to ignore any security exception thrown there and just return an empty map of properties. This said, I think that the policy file should be written so that it selectively gives more privileges to the test runner's code, for example by explicitly restricting them to a location as shown here:\n\nhttp://docs.oracle.com/javase/7/docs/technotes/guides/security/PolicyFiles.html#PropertyExp\n\n\ngrant codeBase \"${randomizedrunner.jar}\" {\n        permission ...;\n        permission ...;\n    };\n\n\n\nThere may still be problems with proper security context passing, etc. "
        },
        {
            "id": "comment-14341859",
            "author": "Dawid Weiss",
            "date": "2015-03-01T00:55:29+0000",
            "content": "I've applied the required changes to not fail on forbidden getProperties access. I don't think it is a solvable problem though. Certain properties get set by the Java runtime (and we do want pristine environment from test to test!). For example, after I switched to:\n\n  // read access to all system properties:\n  permission java.util.PropertyPermission \"*\", \"read\";\n\n\n\nI get this exception:\n\n   > Throwable #1: java.security.AccessControlException: access denied (\"java.util.PropertyPermission\" \"user.language\" \"write\")\n   > \tat java.security.AccessControlContext.checkPermission(AccessControlContext.java:457)\n   > \tat java.security.AccessController.checkPermission(AccessController.java:884)\n   > \tat java.lang.SecurityManager.checkPermission(SecurityManager.java:549)\n   > \tat java.util.Locale.setDefault(Locale.java:974)\n   > \tat java.util.Locale.setDefault(Locale.java:933)\n   > \tat org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv.before(TestRuleSetupAndRestoreClassEnv.java:225)\n...\n\n\n\nThis is a by-product of setting the default locale \u2013 it sets user.language (similar thing happens to time zones). Note that granting write permission to Java's runtime doesn't solve the problem of resetting this property from test to test (since in general we don't know which properties are set by the runtime and when).\n\nI don't have any idea how to give read-only access to properties and be able to isolate test cases from each other at the same time. "
        },
        {
            "id": "comment-14341861",
            "author": "Robert Muir",
            "date": "2015-03-01T00:57:44+0000",
            "content": "Its not a big deal, we just allow write access to that particular property. So we know which ones we change when we run tests and why and there are no surprises.\n\nThis is so much better than having to grant wildcard R/W here! "
        },
        {
            "id": "comment-14341862",
            "author": "Dawid Weiss",
            "date": "2015-03-01T00:58:18+0000",
            "content": "I attach a patch that fetches (unreleased officially) randomizedtesting package 2.1.12.\n\nThis patch also removes SystemPropertiesInvariantRule and SystemPropertiesRestoreRule (from a subset of classes) because both these rules require full access to system properties. "
        },
        {
            "id": "comment-14341863",
            "author": "Robert Muir",
            "date": "2015-03-01T01:00:34+0000",
            "content": "Thanks Dawid! I'll take your patch and fix the policy with writes for the ones we need and why. "
        },
        {
            "id": "comment-14341864",
            "author": "Dawid Weiss",
            "date": "2015-03-01T01:03:35+0000",
            "content": "You'd also need to allow:\n\n\"user.timezone\", \"java.rmi.server.randomIDs\" \n\n\nand you'd need to clear these accordingly after each test so that their values don't propagate to the next test class. Some \"tests of the tests\" also set system properties that emulate command-line options \u2013 these would either have to be removed or be granted globally. I am not convinced this is a better way to solve this then the \"before-after\" invariant that just compares the set of properties.\n\nI will release RR in a minute with the patch, if you wish to take it from there go ahead. "
        },
        {
            "id": "comment-14341876",
            "author": "Robert Muir",
            "date": "2015-03-01T01:31:59+0000",
            "content": "Dawid's patch, with mods to allow write to the properties we need. all tests pass. "
        },
        {
            "id": "comment-14341877",
            "author": "Robert Muir",
            "date": "2015-03-01T01:32:31+0000",
            "content": "\nYou'd also need to allow:\n\n\"user.timezone\", \"java.rmi.server.randomIDs\" \n\nWhy the randomIDs one? All tests pass without this randomIDs. we don't use RMI anywhere. "
        },
        {
            "id": "comment-14342206",
            "author": "Dawid Weiss",
            "date": "2015-03-01T12:43:13+0000",
            "content": "I guess it's Solr or one of its dependencies.\n\nsvn log -r 1384923 LuceneTestCase.java\nr1384923 | markrmiller | 2012-09-14 23:05:15 +0200 (Fri, 14 Sep 2012) | 19 lines\n\nsvn diff -r 1384922:1384923 LuceneTestCase.java\nIndex: LuceneTestCase.java\n===================================================================\n--- LuceneTestCase.java (revision 1384922)\n+++ LuceneTestCase.java (revision 1384923)\n@@ -289,7 +289,7 @@\n    * @see #classRules\n    */\n   private static final String [] IGNORED_INVARIANT_PROPERTIES = {\n-    \"user.timezone\"\n+    \"user.timezone\", \"java.rmi.server.randomIDs\"\n   };\n\n   /** Filesystem-based {@link Directory} implementations. */\n\n "
        },
        {
            "id": "comment-14342410",
            "author": "Dawid Weiss",
            "date": "2015-03-01T19:33:16+0000",
            "content": "This still requires some work because, for example:\n\nIndex: lucene/core/src/test/org/apache/lucene/util/junitcompat/WithNestedTests.java\n===================================================================\n--- lucene/core/src/test/org/apache/lucene/util/junitcompat/WithNestedTests.java\t(revision 1662995)\n+++ lucene/core/src/test/org/apache/lucene/util/junitcompat/WithNestedTests.java\t(working copy)\n@@ -124,8 +124,8 @@\n   {\n     final TestRuleMarkFailure marker = new TestRuleMarkFailure();\n     rules = RuleChain\n-      .outerRule(new SystemPropertiesRestoreRule())\n-      .around(new TestRuleAdapter() {\n+      // .outerRule(new SystemPropertiesRestoreRule())\n+      .outerRule(new TestRuleAdapter() {\n\n\n\nthis isn't a functional equivalent. We need to make sure even those selected writeable properties aren't propagated from test to test \u2013 this could (and would) break isolation between classes.\n\nI'm thinking the code to restore r/w properties could be made part of the LTC (or the setup environment rule), but those \"nested\" tests  still need a separate snippet of code since they're not running under LTC's control.\n\nI'll look into this. "
        },
        {
            "id": "comment-14342444",
            "author": "Dawid Weiss",
            "date": "2015-03-01T20:27:18+0000",
            "content": "I added a rule to restore selected (explicit) system properties where needed; pulled part of the same code from env setup rule. I also updated SHAs of RR and nuked one test case that was no longer relevant.\n\nThe code is also on a branch here:\nhttps://svn.apache.org/repos/asf/lucene/dev/branches/lucene6238 "
        },
        {
            "id": "comment-14342445",
            "author": "ASF subversion and git services",
            "date": "2015-03-01T20:28:14+0000",
            "content": "Commit 1663156 from Dawid Weiss in branch 'dev/branches/lucene6238'\n[ https://svn.apache.org/r1663156 ]\n\nA branch for LUCENE-6238 "
        },
        {
            "id": "comment-14342456",
            "author": "Robert Muir",
            "date": "2015-03-01T20:54:22+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14343748",
            "author": "ASF subversion and git services",
            "date": "2015-03-02T20:57:46+0000",
            "content": "Commit 1663431 from Dawid Weiss in branch 'dev/trunk'\n[ https://svn.apache.org/r1663431 ]\n\nLUCENE-6238: minimize tests.policy (upgrade of randomizedtesting, system properties are read-only). "
        },
        {
            "id": "comment-14343763",
            "author": "ASF subversion and git services",
            "date": "2015-03-02T21:08:27+0000",
            "content": "Commit 1663432 from Dawid Weiss in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1663432 ]\n\nLUCENE-6238: minimize tests.policy (upgrade of randomizedtesting, system properties are\nread-only). "
        },
        {
            "id": "comment-14495402",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:58+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}