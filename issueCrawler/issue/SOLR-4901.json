{
    "id": "SOLR-4901",
    "title": "Newcomer Curb Appeal - improve the Out Of Box experience for new users",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "Admin UI",
            "documentation"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "This is a master issue to track improvements affecting a new user's experience with Solr.  Please link other issues, blocking this one.\n\nSolr is immensely complex.  When I first started using it, the initial learning curve was incredibly steep.  It's still uphill even now, but I mostly know where the handrails are.\n\nThe general focus for linked issues:\n\n1) Improving what the user sees when they first download Solr.\n\nI think issues for this item will mostly be about the included txt files and the wiki pages referenced there.\n\nWe want to be sure that the user who downloads Solr and looks at README.txt is able to find information that will give them insight into how the Solr startup works and what information is configured where.  Any wiki pages referenced need to be top quality, with introductions that really help a novice user and advanced reference material for users with more experience.\n\nThe README should tell them how to get into the example's admin UI.  Until we improve the UI, IMHO it should set expectations about what kind of features they'll get out of the UI and let them know that they'll probably be accessing API URLs directly and editing config files.\n\nMoving from the example in the download to a robust production installation, especially for SolrCloud, should be in our documentation.\n\n2) Improving the UI so the novice doesn't have to edit so many config files or immediately learn how to use arcane HTTP API calls.  Experienced users look at these things and have no problem with them, but they are voodoo to the new user.\n\nWhen using the UI to make changes (for example, CoreAdmin), the actual API URL that was called should be available, and if it fails, helpful text and a wiki link should be displayed so that the user can figure out what went wrong.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}