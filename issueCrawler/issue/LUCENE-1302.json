{
    "id": "LUCENE-1302",
    "title": "explain should not mask negative scores",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/query/scoring"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.4"
        ],
        "affect_versions": "None",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "Explanation.isMatch() returns false for 0 or negative scores. \nHence negative scores are omitted from the explanation.\nThis causes, when using e.g. BoostingTermQuery with negative boosts, a difference between the collected doc score and the score shown by explain().  \n\nA word on the usage of this - BTQ with negative boosts is useful for \"punishing\" documents for containing a term. It also allows all sorts of tricks with multiplying query boost by the BTQ boost, so you get a positive score if both boosts have the same sign but negative otherwise. - I am sure there other uses as well.",
    "attachments": {
        "lucene-1302-explain-negative.patch": "https://issues.apache.org/jira/secure/attachment/12383747/lucene-1302-explain-negative.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-06-10T13:25:39+0000",
            "content": "With this patch isMatch() returns false only for score == zero .\nAll tests pass.\nIt does disturb though to announce a negative score as a \"match\".\nSo, while this patch easily makes things work with negative scores, a better fix may be to leave isMatch() as is, but modify calls to it that are meant to decide if the questioned explanation should be included in the constructed explanation by a test of the score, or perhaps a specific new method e.g. isInformative().  ",
            "author": "Doron Cohen",
            "id": "comment-12603866"
        },
        {
            "date": "2008-06-10T13:35:14+0000",
            "content": "Another option is for BTQ to return a ComplexExplanation instead of Explanation and setMatch(true) if the score is non-zero.\nStill it would disturb to declare a \"negative score\" as a \"match\". ",
            "author": "Doron Cohen",
            "id": "comment-12603869"
        },
        {
            "date": "2008-06-10T15:26:20+0000",
            "content": "Doron: i haven't looked at your patch, but Explanation.isMatch returns false for negative scores to be backwards compatible (see LUCENE-605).  Any non-trivial query types where a match can get a non-positive score should be using a ComplexExplanation.\n\nthese comments don't make sense to me...\n\nAnother option is for BTQ to return a ComplexExplanation instead of Explanation and setMatch(true) if the score is non-zero.\n\n...BTQ should call setMatch(true) if it's a \"match\" (ie: if the doc would be passed to a HItCollectors collect method) not conditionally based on the score.\n\nStill it would disturb to declare a \"negative score\" as a \"match\".\n\n... no idea what you ment there. ",
            "author": "Hoss Man",
            "id": "comment-12603905"
        },
        {
            "date": "2008-06-10T16:27:27+0000",
            "content": "Hoss, thanks for the pointer to LUCENE-605. \n\n\n    :: Still it would disturb to declare a \"negative score\" as a \"match\".\n\n    ... no idea what you ment there.\n\nAssume a boolean query that contains a BTQ, among other things.\nThe score of a doc is a sum over several scores, all elements are positive, except the BTQ element which is negative.\nThe total sum is positive and hence (say) was accepted by the collector in effect. \nAs the code is right now, the explanation for the boolean query would ignore the (negative) BTQ part and its value would differ that of the actual search. \n\nFixing BTQ to return a complex explanation and calling setMatch(True) will fix the score difference, and now the BQ explanation would also contain the sub-expl of the BTQ. Great. This also makes perfect sense in BTQ, because the way the score is computed, it can be negative or even 0. I'll open a separate issue for fixing BTQ.\n\nThe one thing that bothers me still is that the BTQ sub-expl would print as MATCH when in fact it just hurts the current doc score (apparently \"not enough\"). Would it be more correct for the (negative) BTQ part to say \"NON-MATCH\"?\n ",
            "author": "Doron Cohen",
            "id": "comment-12603923"
        },
        {
            "date": "2008-06-10T16:38:58+0000",
            "content": "The one thing that bothers me still is that the BTQ sub-expl would print as MATCH when in fact it just hurts the current doc score (apparently \"not enough\"). Would it be more correct for the (negative) BTQ part to say \"NON-MATCH\"?\n\nBottom Line: if \"next()\" stops on a doc, then the Explanation for that doc should indicate a \"MATCH\" ... regardless of what the score is.\n\nthe the Explanation by BTQ indicates it's a \"NON-MACH\" even thought the BTQ Scorer would return it as a \"hit\" when searching, that would screw up the Explanation generated by a BooleanQuery.  Consider a 3 clause BooleanQuery with minNrShouldMath set to 2.  one of the clauses only matches doc#42, one of the clauses matches no docs, and the third clause is a BTQ \u2013 if the Explanation for the BTQ says NO_MATCH for doc#42 just because it has a negative score then the BooleanQuery Explanation is going to say the wrong thing. ",
            "author": "Hoss Man",
            "id": "comment-12603925"
        },
        {
            "date": "2008-06-10T16:48:44+0000",
            "content": "I'd like to have Explanation.isMatch() returning true mean that Scorer.next() or Scorer.skipTo() returned true for the explained document score, and to have the Scorer.score() value completely independent of that.\n\nThe javadocs in of the Scorers in the core trunk are consistent about using 'match' this way.\n\nAlso, I think there are currently no more backward compatibility issues for this. ",
            "author": "Paul Elschot",
            "id": "comment-12603927"
        },
        {
            "date": "2008-06-10T16:57:41+0000",
            "content": "FWIW: Paul's comment is exactly what i was trying to get at.\n\nThe only reason Explaination.isMatch returns true for positive scores without requiring that the match state be specified explicitly was is so it would be backwards compatible for older legacy query types (possibly created by lucene users) when the match/score semantics where clarified in order to allow/support negative scores for matching documents.\n\n\n ",
            "author": "Hoss Man",
            "id": "comment-12603929"
        },
        {
            "date": "2008-06-10T16:58:48+0000",
            "content": "I can live with BTQ printing \"match\" although it actually just hurt a certain doc.\n\nIs it somewhat strange for BQ to count a negative score contributer for its minNrShouldMatch condition? ",
            "author": "Doron Cohen",
            "id": "comment-12603931"
        },
        {
            "date": "2008-06-10T17:07:21+0000",
            "content": "> Is it somewhat strange for BQ to count a negative score contributer for its minNrShouldMatch condition?\n\nThe count of the number of matchers in BooleanQuery depends on the return values of next() and skipTo() only. It could be made to ignore scorers with a negative score value, but that would mean another option to BooleanQuery. ",
            "author": "Paul Elschot",
            "id": "comment-12603933"
        },
        {
            "date": "2008-06-10T17:08:55+0000",
            "content": " minNrShouldMatch is all about matching, and  a match is a match is a match ... it doesn't matter if the score is negative or not.  \n\nif a sub query doesn't want to count as a match, it shouldn't match.\n\nhaving the notion of a wrapper query like BQ that cares about a \"minScore\" from subqueries in order for it to count a doc as a match would be something new. ",
            "author": "Hoss Man",
            "id": "comment-12603934"
        },
        {
            "date": "2008-06-10T19:50:44+0000",
            "content": "Okay I am convinced, thanks for bearing with me Hoss and Paul.\n\nSo I am closing this issue as \"Invalid\". \n\nJust to summarize: \"A match is a match is a match\" (quoting Hoss) seem the key concept:\nI always thought of \"match\" as a saying (by the query) - \"that document is relevant for this query\".\nSeems to me now that a more accurate interpretation is: \"that document is related to this query\",\nwhere positively related would be relevant and negatively related would be the opposite. ",
            "author": "Doron Cohen",
            "id": "comment-12604004"
        }
    ]
}