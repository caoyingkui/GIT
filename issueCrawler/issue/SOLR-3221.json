{
    "id": "SOLR-3221",
    "title": "Make Shard handler threadpool configurable",
    "details": {
        "affect_versions": "3.6,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "From profiling of monitor contention, as well as observations of the\n95th and 99th response times for nodes that perform distributed search\n(or \u201faggregator\u201f nodes) it would appear that the HttpShardHandler code\ncurrently does a suboptimal job of managing outgoing shard level\nrequests.\n\nPresently the code contained within lucene 3.5's SearchHandler and\nLucene trunk / 3x's ShardHandlerFactory create arbitrary threads in\norder to service distributed search requests. This is done presently to\nlimit the size of the threadpool such that it does not consume resources\nin deployment configurations that do not use distributed search.\n\nThis unfortunately has two impacts on the response time if the node\ncoordinating the distribution is under high load.\n\nThe usage of the MaxConnectionsPerHost configuration option results in\naggressive activity on semaphores within HttpCommons, it has been\nobserved that the aggregator can have a response time far greater than\nthat of the searchers. The above monitor contention would appear to\nsuggest that in some cases its possible for liveness issues to occur and\nfor simple queries to be starved of resources simply due to a lack of\nattention from the viewpoint of context switching.\n\nWith, as mentioned above the http commons connection being hotly\ncontended\n\nThe fair, queue based configuration eliminates this, at the cost of\nthroughput.\n\nThis patch aims to make the threadpool largely configurable allowing for\nthose using solr to choose the throughput vs latency balance they\ndesire.",
    "attachments": {
        "SOLR-3221-3x_branch.patch": "https://issues.apache.org/jira/secure/attachment/12517660/SOLR-3221-3x_branch.patch",
        "SOLR-3221-trunk.patch": "https://issues.apache.org/jira/secure/attachment/12517664/SOLR-3221-trunk.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jason Rutherglen",
            "id": "comment-13225788",
            "date": "2012-03-09T02:22:54+0000",
            "content": "+1 Long overdue. "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13225792",
            "date": "2012-03-09T02:25:19+0000",
            "content": "Lucene 4.x version "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13225799",
            "date": "2012-03-09T02:45:02+0000",
            "content": "Whoops ! I didnt spot a silly potential NPE in this patch, found locally by the randomised testing and corrected "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13225800",
            "date": "2012-03-09T02:47:06+0000",
            "content": ".... And remove the git nonsense from the patch files "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13225802",
            "date": "2012-03-09T03:03:51+0000",
            "content": "... apparently I cannot write code :S "
        },
        {
            "author": "Eric Pugh",
            "id": "comment-13226156",
            "date": "2012-03-09T15:48:42+0000",
            "content": "I've been struggling with the same issue, and resolved it by just bumping up the number of connections per host (see SOLR-2184 which maybe should be marked as a related issue?)\n\nOne thing that I would suggest (and be willing to help with!) is doing a great job of documenting what these parameters do, and potentially listing out as examples the two options for optimizing for throughput versus fair balanced response times, and why you would do one or the other.  Exposing these params is good, but can often cause folks to seize on them and use the inappropriately and shoot themselves in the foot.   As an example, think of the current issues with the \"Optimize\" command, where I have seen folks optimize after every commit, because who wouldn't want that!? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13226343",
            "date": "2012-03-09T19:17:38+0000",
            "content": "The 3x patch runs through all the tests, but the trunk fails.\n\nThe first one at least (and I'd guess the others as well) apparently don't depend on this seed, they fail in IntelliJ too. They all seem to fail on SearchHandler[298]. I think once it was a result of something not being implemented in one of the Mocks, but can't swear to it.\n\nErrors in the debugger like: java.lang.IllegalArgumentException: Invalid uri 'http://://[::1]:33332/solr/select': escaped absolute path not valid. What????\n\nI don't have time to look into it now...\n\nant test -Dtestcase=TestDistributedGrouping -Dtestmethod=testDistribSearch -Dtests.seed=-7e47ec572525db2b:747a1a2f9e04dca3:611098fa6c7bdbe4 -Dargs=\"-Dfile.encoding=MacRoman\"\nant test -Dtestcase=FullSolrCloudDistribCmdsTest -Dtestmethod=testDistribSearch -Dtests.seed=666cf0bc1fb2bbe2:-307010e33b27cd24:611098fa6c7bdbe4 -Dargs=\"-Dfile.encoding=MacRoman\"\nant test -Dtestcase=DistributedSpellCheckComponentTest -Dtestmethod=testDistribSearch -Dtests.seed=-19364590f7798def:3cfbf5694891d7b:611098fa6c7bdbe4 -Dargs=\"-Dfile.encoding=MacRoman\"\nant test -Dtestcase=TestDistributedSearch -Dtestmethod=testDistribSearch -Dtests.seed=6cdbfdcabaf8471c:af7365c8c8b063:-35863e1b26976412 -Dargs=\"-Dfile.encoding=MacRoman\"\nant test -Dtestcase=OverseerTest -Dtestmethod=testShardLeaderChange -Dtests.seed=47a8a04f4df29e39:7cf1cab9cde30f9f:-35863e1b26976412 -Dargs=\"-Dfile.encoding=MacRoman\"\nant test -Dtestcase=BasicDistributedZkTest -Dtestmethod=testDistribSearch -Dtests.seed=-37854d406161a603:-3d7c63121a0b99fe:-a77be13ddf887d7 -Dargs=\"-Dfile.encoding=MacRoman\"\nant test -Dtestcase=DistributedTermsComponentTest -Dtestmethod=testDistribSearch -Dtests.seed=6fe8b3c1860d0a59:-20d9908f662d6a90:-35863e1b26976412 -Dargs=\"-Dfile.encoding=MacRoman\"\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13226346",
            "date": "2012-03-09T19:22:39+0000",
            "content": "\n+    this.scheme = getParameter(args, INIT_URL_SCHEME, \"http://\");\n+    this.scheme = (!this.scheme.endsWith(\"://\")) ? this.scheme : this.scheme + \"://\";\n\n\n\nLooks like this log: adds the :// again if it already exists? "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13226388",
            "date": "2012-03-09T20:04:34+0000",
            "content": "yes thats the problem, I will recut both patches in a moment "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13226483",
            "date": "2012-03-09T21:26:09+0000",
            "content": "Fixed the schema issue "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13227557",
            "date": "2012-03-12T14:19:21+0000",
            "content": "OK, this passes all the tests on my mac. I'll have a chance to look over the code today. I'll commit this today or tomorrow unless somebody finds something. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13227558",
            "date": "2012-03-12T14:19:22+0000",
            "content": "OK, this passes all the tests on my mac. I'll have a chance to look over the code today. I'll commit this today or tomorrow unless somebody finds something. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13227906",
            "date": "2012-03-12T21:11:16+0000",
            "content": "The above monitor contention would appear to suggest that in some cases its possible for liveness issues to occur and for simple queries to be starved of resources simply due to a lack of attention from the viewpoint of context switching.\n\nthat's pretty interesting... how many concurrent requests were you running through a single aggregator? "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13228063",
            "date": "2012-03-12T23:42:02+0000",
            "content": "About 100 Requests/second  "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13228413",
            "date": "2012-03-13T14:47:23+0000",
            "content": "Trunk r: 1300160\n3.6   r: 1300158\n\nBig thanks Greg!\n\nGreg:\nHow about an entry in CHANGES.txt? And perhaps a short example somewhere on the Wiki explaining how to make this happen? "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13228850",
            "date": "2012-03-14T00:50:29+0000",
            "content": "No problems, how would I change the wiki, just go ahead and edit it ?\n\nI am loathe to submit a patch for changing the CHANGES.txt, but is that the same as the wiki ? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13229197",
            "date": "2012-03-14T13:51:47+0000",
            "content": "Yeah, just go ahead and edit the Wiki, all you need to do is create an account.\n\nAs for CHANGES.txt. Just attach it to this JIRA and I'll go ahead and commit it without a new JIRA. Two tricky things:\n1> there are two files, one in the 3x branch and one in the 4x, both need the text\n2> The 4x branch needs to be edited in two places, one for the 3.x section and in the 4x section.\n\nI'll see it when if this JIRA changes and check them in.\n\nThanks! "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13234862",
            "date": "2012-03-21T19:00:23+0000",
            "content": "I added some information to the wiki in the solrconfig.xml section talking about the shardHandlerFactory that you might want to review. Documentation is not my strong point\n\nalso can we can put the following into the CHANGES.TXT\n\n\n\tSOLR-3221: Added the ability to directly configure aspects of the concurrency\n  and thread-pooling used within distributed search in solr. This allows for finer\n  grained controlled and can be tuned by end users to target their own specific\n  requirements. This builds on the work of the HttpCommComponent and uses the same\n  configuration block to configure the thread pool. The default configuration has\n  the same behaviour as solr 3.5, favouring throughput over latency. More\n  information can be found on the wiki (http://wiki.apache.org/solr/SolrConfigXml)\n\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-13253425",
            "date": "2012-04-13T14:51:03+0000",
            "content": "Curious; why was the default choice made to favor throughput over low latency?  Generally speaking, low latency in search is more important.  There should be no issue of backwards compatibility, either. "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13269834",
            "date": "2012-05-07T18:15:32+0000",
            "content": "Only to support the exacting behaviour that was in solr prior to this patch. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13270498",
            "date": "2012-05-08T14:46:53+0000",
            "content": "I am loathe to submit a patch for changing the CHANGES.txt\n\nUsually the committer handles this - no rules about it though. \n\nI'd go with something a bit shorter - no need to get into the gritty details - that's why the JIRA issue number is there. I'd stick to something closer to \"Make shard handler threadpool configurable.\" or \"Added the ability to directly configure aspects of the concurrency and thread-pooling used within distributed search in solr.\" "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13270504",
            "date": "2012-05-08T14:54:08+0000",
            "content": "Sorry the changes.txt change was done so I dont think there is anything left for this jira ticket, I think Erick added the changes.txt for the 3.6 release "
        },
        {
            "author": "David Smiley",
            "id": "comment-13273507",
            "date": "2012-05-11T18:57:23+0000",
            "content": "Only to support the exacting behaviour that was in solr prior to this patch.\n\nI wouldn't of made the same decision but it's moot now, esp. for 3x.  I don't see how this change would break anybody, and I see how it would improve.\n\nI think Solr 4 should have better defaults; agreed?   "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13273514",
            "date": "2012-05-11T19:05:41+0000",
            "content": "I would agree that latency is preferred as default. "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13273799",
            "date": "2012-05-12T02:05:33+0000",
            "content": "I agree, I was being cowardly when I wrote it because I am not a committer  "
        },
        {
            "author": "David Smiley",
            "id": "comment-13473791",
            "date": "2012-10-11T02:37:03+0000",
            "content": "Greg, I heard you intend to add a small patch to flip Solr 4's default on this feature?  I was picking Erick since forever and he pawned it off on you. "
        }
    ]
}