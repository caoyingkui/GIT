{
    "id": "SOLR-11751",
    "title": "Collections API:  Implement collection properties that block Collections API actions",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "7.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Yago Riveiro asked on the mailing list whether we had any ability to prevent a collection from being deleted with a property.\n\nI don't know of any way to do this currently, but it does strike me as useful, so here's the proposal:\n\nImplement some new collection properties, that when set, block certain Collections API actions.\n\nAt this time, I'm not even sure that user-modifiable collection-level properties actually exist, so that may need to be implemented before this can be implemented.  It could be done with cluster properties, but that seems like a hack.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-12T19:16:42+0000",
            "content": "The collecitons API MODIFYCOLLECTION can add/modify collection properties I think, which would allow you to add the tags at least already. We'd need to build in code to respect such tags of course.\n\nI'd guess you'd have to change the property in order to be able to delete the collection if you really wanted to delete it at some later point.\n\nI can imagine you'd like to lock down configsets too, although that'd be a sticky wicket wrt field guessing, and the schema and config APIs. ",
            "author": "Erick Erickson",
            "id": "comment-16288106"
        },
        {
            "date": "2017-12-12T19:29:53+0000",
            "content": "Optional ideas:\n\n\tIf a blocking property can have an arbitrary value, implement an API parameter that would override the block, IF the value for that parameter matches the value in the property.\n\tOne single property that blocks ALL Collections API usage.\n\n\n\nA tangent idea, for a separate issue:\n\n\tPrevent external CoreAdmin requests on SolrCloud unless a property is set that essentially makes the user declare \"yes, I know what I'm doing\".  This one probably should work at the cluster or collection level.\n\n ",
            "author": "Shawn Heisey",
            "id": "comment-16288137"
        },
        {
            "date": "2017-12-12T19:41:18+0000",
            "content": "Erick Erickson, I didn't see your comment until after I had finished adding my optional ideas.  Which I did type immediately, but forgot to click \"Add\" until later.\n\nRegarding the optional idea where an override parameter must match the value in the property:  If we make it so that an empty string in the property can't ever be matched, that would allow somebody to easily prevent the override.  Of course the same thing could be accomplished with a special string, like \"NO_OVERRIDE\". ",
            "author": "Shawn Heisey",
            "id": "comment-16288156"
        }
    ]
}