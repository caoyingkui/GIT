{
    "id": "LUCENE-8439",
    "title": "DisjunctionMaxScorer should leverage sub scorers' per-block max scores",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Minor",
        "type": "Improvement"
    },
    "description": "This issue is similar to https://issues.apache.org/jira/browse/LUCENE-8204 but for the DisjunctionMaxScorer.",
    "attachments": {
        "LUCENE-8439.patch": "https://issues.apache.org/jira/secure/attachment/12933775/LUCENE-8439.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16563761",
            "author": "Jim Ferenczi",
            "content": "Here is a patch that uses the same strategy to find blocks than LUCENE-8204.\nI ran a benchmark using wikibigall and disjunction max queries on the Low/Med/High terms over the body and title fields.\nResults below show a nice speed up with any tiebreaker value (except 1 since we rewrite to a boolean query in this case):\n\n\n        TaskQPS lucene_baseline      StdDevQPS lucene_candidate      StdDev                Pct diff\n                 LowTerm      121.15      (3.3%)      838.54     (33.6%)  592.1% ( 537% -  650%)\n                 MedTerm       25.52      (5.1%)      385.07    (114.0%) 1409.1% (1227% - 1610%)\n                HighTerm        9.62      (5.6%)      183.10    (162.7%) 1803.6% (1548% - 2089%)\n\n ",
            "date": "2018-07-31T14:31:38+0000"
        },
        {
            "id": "comment-16564252",
            "author": "Adrien Grand",
            "content": "Pretty cool. I guess it works well because scores on title dominate the overall score?\n\nShould we factor out a DocIdSetIterator implementation similar to ImpactsDISI but that would take a Scorer rather than an ImpactsSource to reuse in ReqOptSumScorer, DisjunctionMaxScorer and probably other scorers (ConstantScoreScorer and CoveringScorer come to mind).\n\nMaybe we should also replace boolean needsScores with ScoreMode scoreMode so that we would only wrap the approximation when top scores are needed rather than all scores? ",
            "date": "2018-07-31T19:27:08+0000"
        },
        {
            "id": "comment-16565438",
            "author": "Jim Ferenczi",
            "content": "Thanks for looking Adrien. I pushed a new patch that factors out a BlockMaxDISI implementation and uses it only if the score mode is set to TOP_SCORES.\u00a0\n\n\n\u00a0I guess it works well because scores on title dominate the overall score?\n\nYes, this optim works best when the small field (here title) dominates the overall score. ",
            "date": "2018-08-01T14:56:41+0000"
        },
        {
            "id": "comment-16571970",
            "author": "Adrien Grand",
            "content": "I'm curious why you introduced wrapTopScoresApprox instead of directly wrapping the approximation with a BlockMaxDISI in DisjunctionScorer? ",
            "date": "2018-08-07T17:02:05+0000"
        },
        {
            "id": "comment-16572889",
            "author": "Jim Ferenczi",
            "content": "I need to access the BlockMaxDISI in the DisjunctionMaxScorer but it can work with a simple getter in the DisjunctionScorer. I pushed a new patch that replaces the\u00a0wrapTopScoresApprox with this approach. ",
            "date": "2018-08-08T08:44:30+0000"
        },
        {
            "id": "comment-16572934",
            "author": "Adrien Grand",
            "content": "+1 ",
            "date": "2018-08-08T09:36:18+0000"
        },
        {
            "id": "comment-16572938",
            "author": "Adrien Grand",
            "content": "FYI the patch includes some unintended changes in the solr/ directory, but changes under lucene/ look good to me! ",
            "date": "2018-08-08T09:37:39+0000"
        },
        {
            "id": "comment-16572999",
            "author": "ASF subversion and git services",
            "content": "Commit ba9b18f36743dc9674478dce5bbf2da509ef41c0 in lucene-solr's branch refs/heads/master from Jim Ferenczi\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ba9b18f ]\n\nLUCENE-8439: Disjunction max queries can skip blocks to select the top documents when the total hit count is not required ",
            "date": "2018-08-08T10:34:55+0000"
        },
        {
            "id": "comment-16573000",
            "author": "Jim Ferenczi",
            "content": "Thanks Adrien Grand ! ",
            "date": "2018-08-08T10:35:31+0000"
        }
    ]
}