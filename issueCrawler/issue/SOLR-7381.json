{
    "id": "SOLR-7381",
    "title": "Improve Debuggability of SolrCloud using MDC",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Critical"
    },
    "description": "SOLR-6673 added MDC based logging in a few places but we have a lot of ground to cover.\n\n\n\tThreads created via thread pool executors do not inherit MDC values and those are some of the most interesting places to log MDC context.\n\tWe must expose node names (in tests) so that we can debug faster\n\tWe can expose more information via thread names so that a thread dump has enough context to help debug problems in production\n\n\n\nThis is critical to help debug SolrCloud failures.",
    "attachments": {
        "SOLR-7381-thread-names.patch": "https://issues.apache.org/jira/secure/attachment/12724922/SOLR-7381-thread-names.patch",
        "SOLR-7381-forbid-threadpoolexecutor.patch": "https://issues.apache.org/jira/secure/attachment/12725164/SOLR-7381-forbid-threadpoolexecutor.patch",
        "SOLR-7381.patch": "https://issues.apache.org/jira/secure/attachment/12724816/SOLR-7381.patch",
        "SOLR-7381-submitter-stacktrace.patch": "https://issues.apache.org/jira/secure/attachment/12726359/SOLR-7381-submitter-stacktrace.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-12T14:04:21+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "\n\tAdded a new ExecutorUtils.MDCAwareThreadPoolExecutor class which sets the MDC context of the caller thread and unsets after the runnable completes\n\tAdded some helper methods in ExecutorUtils similar to the ones in Executors\n\tUsed the above two throughout the code base\n\tAdded the node name in the MDC context when running in cloud mode\n\n\n\nExamples:\n\n2531 T46 N:127.0.0.1:35418_zx_%2Ft oass.IndexSchema.readSchema default search field in schema is text\n\n2843 T50 N:127.0.0.1:35418_zx_%2Ft C:control_collection S:shard1 oascc.SolrZkClient.makePath makePath: /collections/control_collection/leader_elect/shard1/election\n\n7495 T73 N:127.0.0.1:35418_zx_%2Ft oascc.ZkStateReader.updateWatchedCollection Updating data for collection1 to ver 6\n\n23926 T62 N:127.0.0.1:60362_ oasc.SolrException.log ERROR null:org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /aliases.json\n\t\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:127)\n\t\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n\n\n\nStill a few places to fix. ",
            "id": "comment-14491472"
        },
        {
            "date": "2015-04-12T19:04:53+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Copying over some comments from SOLR-6673:\n\nYonik Seeley's comment: \nhttps://issues.apache.org/jira/browse/SOLR-6673?focusedCommentId=14381847&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14381847\n\nThere is some other redundant info now though: C17 P62757\nThat's the core number and the port number. Both where important in the past (along with the thread number) to figuring out chaos monkey test fails. But they don't seem important for production? The port number should be different for diff log files in production, and the collection name we already have.\n\nThe log snippet that I pasted in SOLR-6673 was actually a test log which is why it had C17 and such things. Those are not logged in production logs. There is still merit in logging the core short id in tests because it can be used to differentiate between reloaded cores. Now that I am logging the node name, we don't need the port in the logs so I'll remove it (it is currently logged only in cloud mode).\n\nMark Miller's comment at https://issues.apache.org/jira/browse/SOLR-6673?focusedCommentId=14381918&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14381918\n\nI don't really like using caps for the label distinction. Seems nicer to have like c:collection n:core1 or something. Looks a lot nicer, doesn't overload the c char. I don't really know that it screams \"small c, must be core\" anyway. We just need a consistent clean format that is easy script parsable. Or c:collection s:core1 for the more proper SolrCore?\n\nIf we use \"s:core1\" then what should we use for the shard name? ",
            "id": "comment-14491655"
        },
        {
            "date": "2015-04-13T05:38:22+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "\n\tJettySolrRunner takes care to not pollute the caller thread with the context set by Solr's init and destroy\n\tI added the following to forbidden-apis for Solr only so that we don't accidentally create non-MDC aware thread pools:\n\njava.util.concurrent.Executors#newFixedThreadPool(int,java.util.concurrent.ThreadFactory)\njava.util.concurrent.Executors#newSingleThreadExecutor(java.util.concurrent.ThreadFactory)\njava.util.concurrent.Executors#newCachedThreadPool(java.util.concurrent.ThreadFactory)\n\n\n\n\n\nI'll commit this shortly. ",
            "id": "comment-14491932"
        },
        {
            "date": "2015-04-13T06:09:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673116 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1673116 ]\n\nSOLR-7381: Improve logging by adding node name in MDC in SolrCloud mode and adding MDC to all thread pools ",
            "id": "comment-14491958"
        },
        {
            "date": "2015-04-13T07:02:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673121 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673121 ]\n\nSOLR-7381: Improve logging by adding node name in MDC in SolrCloud mode and adding MDC to all thread pools ",
            "id": "comment-14491991"
        },
        {
            "date": "2015-04-13T10:54:15+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This patch takes us a step further in improving debuggability by exposing MDC values in thread names so that a thread dump can give us a better idea of what was happening at the time.\n\nFor example, here is a stack trace showing a CloudSolrClient update thread which has the URL of the remote host in its name:\n\n\"CloudSolrClient ThreadPool-6-thread-1-processing-{CloudSolrClient.url=http:/127.0.0.1:53410/ollection1/\" #185 prio=5 os_prio=0 tid=0x00007f7778097000 nid=0x218a runnable [0x00007f77415d7000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\n\n\n\nHere's another stack trace showing the update executor thread running on core=collection1, replica=core_node2, node_name=127.0.0.1:53410_ and making a call to http://127.0.0.1:57515/collection1:\n\n\"updateExecutor-11-thread-1-processing-{core=collection1, replica=core_node2, node_name=127.0.0.1:53410_, ConcurrentUpdateSolrClient.baseUrl=http:/127.0.0.1:57515/ollection1, shard=shard3, collection=collection1}\" #177 prio=5 os_prio=0 tid=0x00007f775400a000 nid=0x2182 runnable [0x00007f7741ddf000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:153)\n\n\n\nInterestingly, the java thread names seem to use the forward slash character as a special one and ignore the character following it so e.g. a url added to the name has \"http:/127.0.0.1:57515/ollection1\" (notice 'ollection1'!)\n\nAll you need to do to take advantage of this feature is to set (any) MDC values before you submit a task to the thread pool and everything else is taken care for you.\n\nI should probably add some upper limit to the thread names. ",
            "id": "comment-14492267"
        },
        {
            "date": "2015-04-14T06:42:18+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Here's a patch which forbids the ThreadPoolExecutor from being used in Solr. I had changed the bulk of its usages earlier but I had to change BatchWriter and GoLive in the hadoop contrib to get the checks passing.\n\nI'm going to commit this patch shortly. ",
            "id": "comment-14493674"
        },
        {
            "date": "2015-04-14T06:50:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673372 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1673372 ]\n\nSOLR-7381: Usages of Executors#newFixedThreadPool, #newSingleThreadExecutor, #newCachedThreadPool as well as ThreadPoolExecutor directly is now forbidden in Solr ",
            "id": "comment-14493685"
        },
        {
            "date": "2015-04-14T06:52:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673373 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673373 ]\n\nSOLR-7381: Usages of Executors#newFixedThreadPool, #newSingleThreadExecutor, #newCachedThreadPool as well as ThreadPoolExecutor directly is now forbidden in Solr ",
            "id": "comment-14493687"
        },
        {
            "date": "2015-04-14T11:45:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673411 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1673411 ]\n\nSOLR-7381: Set node name in MDC inside ZkController as soon as we discover it ",
            "id": "comment-14494004"
        },
        {
            "date": "2015-04-14T11:46:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673412 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673412 ]\n\nSOLR-7381: Set node name in MDC inside ZkController as soon as we discover it ",
            "id": "comment-14494005"
        },
        {
            "date": "2015-04-14T14:57:29+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "A better patch for adding thread names in stack traces.\n\n\tLimited the thread name to 512 characters\n\tEscape forward slash characters in thread names so that they show up correctly in thread dumps.\n\tAdded urls to MDC in LbHttpSolrServer and HttpShardHandler\n\n ",
            "id": "comment-14494190"
        },
        {
            "date": "2015-04-14T17:00:29+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "\n\tRenamed some MDC keys to be consistent with each other\n\tAdded a null check in CoreAdminHandler for action (which can be null if a custom action is invoked)\n\n\n\nAll tests pass. I'll commit this shortly. ",
            "id": "comment-14494400"
        },
        {
            "date": "2015-04-14T17:03:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673469 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1673469 ]\n\nSOLR-7381: MDC keys are now exposed in thread names automatically so that a thread dump can give hints on what the thread was doing ",
            "id": "comment-14494402"
        },
        {
            "date": "2015-04-14T17:06:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673471 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673471 ]\n\nSOLR-7381: MDC keys are now exposed in thread names automatically so that a thread dump can give hints on what the thread was doing ",
            "id": "comment-14494404"
        },
        {
            "date": "2015-04-18T13:13:42+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This patch logs the submitter's stack trace in case there is an uncaught exception from a task submitted to the thread pool.\n\nIt'd be even better if we can find a way to log this for all exceptions inside a task thread but I can't find a clean/efficient way to do it. ",
            "id": "comment-14501352"
        },
        {
            "date": "2015-04-19T03:48:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1674593 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1674593 ]\n\nSOLR-7381: Uncaught exceptions thrown by tasks in the pool are logged along with submitter's stack trace ",
            "id": "comment-14501676"
        },
        {
            "date": "2015-04-19T03:49:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1674594 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1674594 ]\n\nSOLR-7381: Uncaught exceptions thrown by tasks in the pool are logged along with submitter's stack trace ",
            "id": "comment-14501677"
        },
        {
            "date": "2015-06-15T21:44:22+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close for 5.2.0. ",
            "id": "comment-14586908"
        },
        {
            "date": "2018-11-01T17:42:11+0000",
            "author": "Ted Yu",
            "content": "I was looking at MDCAwareFixedThreadPool and found this JIRA.\n\nI wonder if what was stated here is relevant:\nhttp://ashtonkemerling.com/blog/2017/09/01/mdc-and-threadpools/\n\nThanks ",
            "id": "comment-16671925"
        },
        {
            "date": "2018-11-12T17:54:32+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Ted Yu - No, our implementation explicitly sets MDC context from parent threads and unsets/restores old context once the submitted task finishes. See ExecutorUtil.MDCAwareThreadPoolExecutor for the implementation. ",
            "id": "comment-16684166"
        }
    ]
}