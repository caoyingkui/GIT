{
    "id": "SOLR-485",
    "title": "Deprecate SpellCheckRequestHandler replace with one that does query analysis and spell checks each token",
    "details": {
        "affect_versions": "1.2",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "The current spellchecker does not handle multiword queries very well, if at all.  Depending on the settings, it either ignores multiword tokens, or it splits on whitespace.  It should use the query analyzer associated with the spelling field to produce tokens for spelling.\n\nWe should deprecate the current one and replace it with one that is similar, but does the appropriate thing with the query tokens.\n\nSeehttp://www.mail-archive.com/solr-dev@lucene.apache.org/msg07542.html",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12572829",
            "date": "2008-02-27T08:39:28+0000",
            "content": "Is the deprecation truly necessary here? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12572890",
            "date": "2008-02-27T12:21:31+0000",
            "content": "I suppose that depends on whether you think people should still use the existing one.  My take is it should be, since it doesn't analyze the tokens, thus things like case, etc. and it can't even take in multiword queries, which would be pretty common.  Essentially, it really forces you to do things on the client side that shouldn't need to be done.  \n\nIdeally, the new version is a search component, such that one doesn't have to send separate requests, either. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12572935",
            "date": "2008-02-27T15:26:49+0000",
            "content": "I understand it's different under the hood, just wondering if it would really break things for existing users.  If not, perhaps a replacement is enough.  No big deal. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12595867",
            "date": "2008-05-11T01:03:37+0000",
            "content": "I'm about to make some SCRH changes (e.g. read words from one or more files instead of from another index's field, optionally strip diacritics...) and I'm wondering where you are with this, Grant.  I'll work off of trunk unless you have something you can attach here. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12595884",
            "date": "2008-05-11T05:49:04+0000",
            "content": "Otis \u2013 I'm working on the changes I described in SOLR-507, do you think those changes are better suited for a new RequestHandler? I was adding new request parameters to use the field's query analyzer as described in this issue. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12595964",
            "date": "2008-05-12T03:42:16+0000",
            "content": "Shalin - great!  I think at this point it makes sense to (re)write the SCRH as a Search Component, so perhaps it's okay to take the deprecation route Grant proposed if the changes you are making look like they could break things for consumers of current SCRH.\n\nOh, do you know when, roughly, you will have this ready?  Not trying to be pushy, but plan to see if/when I should make my SC changes.  I'd rather wait for you a little instead of doing similar work in parallel. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12595973",
            "date": "2008-05-12T05:10:17+0000",
            "content": "Otis - I was being careful not to break compatibility with current clients but I also think it makes sense to implement this as a Search Component from the ground up. Existing clients can continue to use SCRH and new clients can use the search component. That way, we can provide all the latest and greatest features without resorting to unintuitive syntax that may be needed to remain backwards-compatible. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12595975",
            "date": "2008-05-12T05:29:57+0000",
            "content": "Sounds good and clean to me. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12609233",
            "date": "2008-06-30T13:44:48+0000",
            "content": "See SOLR-572 for a better Spell checker "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12613950",
            "date": "2008-07-16T13:17:49+0000",
            "content": "Is the concern here not to break compatibility for folks who use are using the /trunk SCRH?\n\nBefore releasing 1.3, we could consider reverting SCRH to the 1.2 version \u2013 this way we have less code to maintain.  As we move forward, are new features added to both?  \n\n(I'm fine keeping it in... just want to make sure we consider it before 1.3 release) "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12613982",
            "date": "2008-07-16T15:20:52+0000",
            "content": "I think maybe we should just deprecate it for 1.3, but not make any other changes. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12614010",
            "date": "2008-07-16T16:35:46+0000",
            "content": "I think we should deprecate it and remove it from the example solrconfig.xml\n\ncome to think of it we should remove all the deprecated handlers from solrconfig.xml.  Dismax is really just a SearchHandler with a queryParser=dismax. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12620236",
            "date": "2008-08-06T12:56:18+0000",
            "content": "I'm going to mark as deprecated. "
        }
    ]
}