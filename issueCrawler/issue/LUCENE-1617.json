{
    "id": "LUCENE-1617",
    "title": "Add \"testpackage\" to common-build.xml",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/build"
        ],
        "type": "Improvement",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "One can define \"testcase\" to execute just one test class, which is convenient. However, I didn't notice any equivalent for testing a whole package. I find it convenient to be able to test packages rather than test cases because often it is not so clear which test class to run.\n\nFollowing patch allows one to \"ant test -Dtestpackage=search\" (for example) and run all tests under the */search/* packages in core, contrib and tags, or do \"ant test-core -Dtestpackage=search\" and execute similarly just for core, or do \"ant test-core -Dtestpacakge=lucene/search/function\" and run all the tests under */lucene/search/function/* (just in case there is another o.a.l.something.search.function package out there which we want to exclude.",
    "attachments": {
        "LUCENE-1617.patch": "https://issues.apache.org/jira/secure/attachment/12406506/LUCENE-1617.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-04-27T14:39:01+0000",
            "content": "Looks good; I'll commit shortly.  Thanks Shai! ",
            "author": "Michael McCandless",
            "id": "comment-12703146"
        },
        {
            "date": "2009-04-27T14:44:36+0000",
            "content": "Hmm \u2013 how does one test the non-sub-package tests?  Eg org.apache.lucene.TestDemo?\n\nI tried \"ant test -Dtestpackage=\" but that seems to incorrectly run legacy (non-junit) tests, eg:\n\n\n[junit] Testsuite: org.apache.lucene.AnalysisTest\n[junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0.166 sec\n[junit] \n[junit] Testcase: initializationError0(org.apache.lucene.AnalysisTest):\tCaused an ERROR\n[junit] Test class should have public zero-argument constructor\n[junit] java.lang.Exception: Test class should have public zero-argument constructor\n[junit] \tat java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n[junit] \tat java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n[junit] Caused by: java.lang.NoSuchMethodException: org.apache.lucene.AnalysisTest.<init>()\n[junit] \tat java.lang.Class.getConstructor0(Class.java:2706)\n[junit] \tat java.lang.Class.getConstructor(Class.java:1657)\n\n ",
            "author": "Michael McCandless",
            "id": "comment-12703149"
        },
        {
            "date": "2009-04-27T14:51:57+0000",
            "content": "I thought that should be \"ant test -Dtestcase=TestDemo\" (using testcase and not testpackage). I tried it and that works.\n\nDo you see a need for being able to run the o.a.l.*.java only? (without the sub-packages)?\n\nIf that's important, perhaps we include a -Drootonly=true and in that case include ${testpackage}/Test.java rather than ${testpackage}/*/*Test.java? ",
            "author": "Shai Erera",
            "id": "comment-12703150"
        },
        {
            "date": "2009-04-27T15:02:07+0000",
            "content": "I would like to be able to run them (one use case for this would be to parallelize tests \u2013 I do this now (Python script) by running test-core/test-tag/test-contrib in parallel, but it's mis-balanced because contrib finishes so quickly).  How about \"-Dtestrootonly=true\"? ",
            "author": "Michael McCandless",
            "id": "comment-12703156"
        },
        {
            "date": "2009-04-27T15:24:24+0000",
            "content": "Added another property \"testpackageroot\". So now you can define:\n\n\ttestcase - for a single test class\n\ttestpackage - for all classes in a package, including sub-packages\n\ttestpackageroot - for all classes in a package, without sub-packages\n\n\n\nBut something is strange ... if I run \"ant test-core\" it works ok. If I run \"ant test-core -Dtestpackage=lucene\" few classes fail, like AnalysisTest, IndexTest etc. (those that end with Test). That's because they are not TestCases ... I wonder why in \"ant test-core\" those files are skipped (and I see they are not executed) but in testpackage they are not.\n\nAnyway, I'll look into it later, unless someone who is more knowledgeable in Ant want to look at it.\n\nThis is not ready to be committed, as \"ant test-core -Dtestpackage=lucene\" and \"ant test-core -Dtestpackageroot=lucene\" fail on those non-test cases files. ",
            "author": "Shai Erera",
            "id": "comment-12703171"
        },
        {
            "date": "2009-04-27T20:22:02+0000",
            "content": "Ok, so I've done some research, and I'm really puzzled. Everywhere I read, it is mentioned that <batchtest> uses <fileset> to include test cases, and that you should include them using a pattern like \"*/Test.java\" ... which is what is done already if none of the special \"test modes\" is specified (a single test, a package or package-root).\n\nHowever, for some reason if the definition looks like this, those non-TestCase classes are filtered out / skipped:\n\n<fileset dir=\"src/test\" includes=\"**/Test*.java,**/*Tets.java\" />\n\n\n\nBut if the definition looks like this, they are executed, which results in a failure:\n\n<fileset dir=\"src/test\" includes=\"**/lucene/Test*.java,**/lucene/*Tets.java\" />\n\n\n\nAs if the batchtest task behaves differently when the definition of \"includes\" contains a different pattern than the first one. I also tried to modify the \"dir\" attribute, to define \"src/test/org/apache/lucene\", but that doesn't seem to solve the problem.\n\nSo the only thing I can think of is to rename those classes to not start/end with \"Test\"? I'd hate to lose the ability to test an entire package, just because of that limitation. By running \"ant test-core -Dtestpackage=lucene\" I can discover all the non-test classes that start/end with Test.\n\nWhat do you think? ",
            "author": "Shai Erera",
            "id": "comment-12703341"
        },
        {
            "date": "2009-04-27T20:30:58+0000",
            "content": "So the only thing I can think of is to rename those classes to not start/end with \"Test\"?\n\nI think this is an OK workaround for the ant spookiness?  (We could also ask our resident ant expert to figure it out  )\n\nI think these classes are quite old and probably never used by anyone anymore. ",
            "author": "Michael McCandless",
            "id": "comment-12703346"
        },
        {
            "date": "2009-04-27T20:34:34+0000",
            "content": "I think these classes are quite old and probably never used by anyone anymore.\n\nThen perhaps I just delete them? \n\nIf that's not acceptable, I'll run all the tests in core and contrib and rename those that fail. But deleting them really tickles the tip of my fingers ! ",
            "author": "Shai Erera",
            "id": "comment-12703348"
        },
        {
            "date": "2009-04-27T20:42:49+0000",
            "content": "Actually I think deleting them is a good idea!\n\nDoes anyone object? ",
            "author": "Michael McCandless",
            "id": "comment-12703356"
        },
        {
            "date": "2009-04-27T20:55:40+0000",
            "content": "As reference, I ran test-core and test-contrib and these are the problematic classes (from core only):\n\n\tTest org.apache.lucene.AnalysisTest\n\tTest org.apache.lucene.IndexTest\n\tTest org.apache.lucene.SearchTest\n\tTest org.apache.lucene.StoreTest\n\tTest org.apache.lucene.ThreadSafetyTest\n\n ",
            "author": "Shai Erera",
            "id": "comment-12703365"
        },
        {
            "date": "2009-04-27T21:04:25+0000",
            "content": "This one removes the aforementioned test classes (that are not really tests), in case everybody agrees. ",
            "author": "Shai Erera",
            "id": "comment-12703372"
        },
        {
            "date": "2009-04-27T21:15:13+0000",
            "content": "OK looks good.  I'll wait a day or two before committing.  Thanks Shai! ",
            "author": "Michael McCandless",
            "id": "comment-12703381"
        },
        {
            "date": "2009-04-28T20:24:04+0000",
            "content": "Thanks Shai! ",
            "author": "Michael McCandless",
            "id": "comment-12703817"
        }
    ]
}