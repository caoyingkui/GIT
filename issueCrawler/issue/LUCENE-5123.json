{
    "id": "LUCENE-5123",
    "title": "invert the codec postings API",
    "details": {
        "components": [],
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Wish",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Currently FieldsConsumer/PostingsConsumer/etc is a \"push\" oriented api, e.g. FreqProxTermsWriter streams the postings at flush, and the default merge() takes the incoming codec api and filters out deleted docs and \"pushes\" via same api (but that can be overridden).\n\nIt could be cleaner if we allowed for a \"pull\" model instead (like DocValues). For example, maybe FreqProxTermsWriter could expose a Terms of itself and just passed this to the codec consumer.\n\nThis would give the codec more flexibility to e.g. do multiple passes if it wanted to do things like encode high-frequency terms more efficiently with a bitset-like encoding or other things...\n\nA codec can try to do things like this to some extent today, but its very difficult (look at buffering in Pulsing). We made this change with DV and it made a lot of interesting optimizations easy to implement...",
    "attachments": {
        "LUCENE-5123.patch": "https://issues.apache.org/jira/secure/attachment/12599304/LUCENE-5123.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-07-19T17:08:43+0000",
            "content": "+1\n\nI think this would allow for more innovation in PostingsFormats ... ",
            "author": "Michael McCandless",
            "id": "comment-13713851"
        },
        {
            "date": "2013-08-21T23:30:58+0000",
            "content": "Here's a starting patch with lots of nocommits, but tests are passing ...\n\nThis patch adds a postings (Fields) impl during flush (FreqProxFields), reading the postings from FreqProxTermWriter's RAM buffers, and another for merging (MappedMultiFields).\n\nIt also adds a new PostingsFormat.write to write the postings ... the idea is this will eventually replace PostingsFormat.fieldsConsumer, but for now, so we can cutover existing postings formats iteratively, I made a default impl for write that takes a Fields and steps through Fields/Terms/Postings for the FieldsConsumer API. ",
            "author": "Michael McCandless",
            "id": "comment-13747018"
        },
        {
            "date": "2013-08-21T23:44:56+0000",
            "content": "This is exciting! \n\nOne idea is to just keep the old API (at least for now)?\nThen, we dont have to cutover tons of code at once and we just have a new low level api (and back compat by accident).\n\nI think it would be good if we wrote or converted a 'demo' codec (simpletext is ok for example, or a new simple one) to the new api first, just to see if we are happy with it.\n\nLike maybe its just fine that if you are implementing the new API you have to compute the stats in your codec yourself, maybe its simple, or maybe we just plan on keeping the higher level API and not deprecating it. ",
            "author": "Robert Muir",
            "id": "comment-13747034"
        },
        {
            "date": "2013-08-23T13:39:43+0000",
            "content": "New patch, cutting over SimpleText to the new inverted API.\n\nI also had to cutover PerFieldPF (otherwise it would not be able to embed SimpleText), and a couple of tests.\n\nTests pass, at least once! ",
            "author": "Michael McCandless",
            "id": "comment-13748545"
        },
        {
            "date": "2013-08-29T11:19:31+0000",
            "content": "New patch, adding a test case that \"exercises\" this API a bit... ",
            "author": "Michael McCandless",
            "id": "comment-13753513"
        },
        {
            "date": "2013-08-30T16:09:55+0000",
            "content": "Maybe we should:\n\n\n\tmove write() from PostingsFormat to FieldsConsumer\n\tmake the \"push\" api a subclass of FieldsConsumer that has a final implementation of write() and exposes the abstract api it has today (e.g. addField)\n\n\n\nor we can keep the names the same and have the new one be \"underneath\" FieldsConsumer (e.g. RawFieldsConsumer).\n\nBut I am not sure we should focus on nuking the old api or even cutting over impls that dont \"need\" the visitor api, since the existing api works pretty well\nfor a lot of implementations and if you dont need to do fancy stuff it might be easier and less error-prone.\n ",
            "author": "Robert Muir",
            "id": "comment-13754835"
        },
        {
            "date": "2013-09-08T22:39:36+0000",
            "content": "\n1. move write() from PostingsFormat to FieldsConsumer\n2. make the \"push\" api a subclass of FieldsConsumer that has a final implementation of write() and exposes the abstract api it has today (e.g. addField)\n\nI started down this path (moved the write method to FieldsConsumer, and created a PushFieldsConsumer subclass that impls final write, exposing the current API) but ... this causes problems for wrapping/delegating PostingsConsumers (e.g. AssertingPF, BloomPF, PulsingPF) since suddenly they must be strongly typed to accept only PushFieldsConsumer.  Either that or I guess we could cut each of these over to write().\n\nI mean, it exposes a real issue w/ the current patch: you cannot wrap SimpleTextPF (or any future PF that uses the pull API) inside these PFs that use the push API.  Not sure what to do ...\n ",
            "author": "Michael McCandless",
            "id": "comment-13761540"
        },
        {
            "date": "2013-09-12T14:46:46+0000",
            "content": "New patch, moving write method to FieldsConsumer, and creating a PushFieldsConsumer subclass that overrides write with a final impl that switches to the \"push\" API (Fields/Terms/PostingsConsumer).\n\nI changed the BloomPF to require a PushFieldsConsumer, and I also removed custom comparators from Terms/Enum.\n\nStill a few nocommits left but I think this is getting close-ish. ",
            "author": "Michael McCandless",
            "id": "comment-13765489"
        },
        {
            "date": "2013-09-13T15:20:47+0000",
            "content": "New patch, resolving all nocommits.  Tests and ant precommit pass. I\nthink it's ready!\n\nI moved all the MappingMulti* from oal.codecs to oal.index and made\nthem package private.\n\nWe can later tackle cutting over different postings formats to the\npull API... ",
            "author": "Michael McCandless",
            "id": "comment-13766544"
        },
        {
            "date": "2013-09-19T16:12:55+0000",
            "content": "+1 to commit: patch looks awesome!\n\nThe change to TestConcurrentMergeScheduler looks leftover/accidental? ",
            "author": "Robert Muir",
            "id": "comment-13771998"
        },
        {
            "date": "2013-09-19T17:41:43+0000",
            "content": "Thanks Rob, I'll commit soon.\n\nThe change to TestConcurrentMergeScheduler looks leftover/accidental?\n\nIt is separate, but intentional: it adds some fangs to that test.  I'll put a comment ... ",
            "author": "Michael McCandless",
            "id": "comment-13772087"
        },
        {
            "date": "2013-09-19T20:57:10+0000",
            "content": "Commit 1524840 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1524840 ]\n\nLUCENE-5123: invert postings writing API ",
            "author": "ASF subversion and git services",
            "id": "comment-13772307"
        },
        {
            "date": "2013-09-20T08:08:13+0000",
            "content": "Nice change! Although PushFieldsConsumer is still using the old API, I like the migrating\nof flush() logic from FreqProxTermsWriterPerField to PushFieldsConsumer, the calling chain is \nmore clear in codec level now. \n\nAlso, I'm quite curious whether StoredFields and TermVectors will get rid of 'merge()' later. ",
            "author": "Han Jiang",
            "id": "comment-13772862"
        },
        {
            "date": "2013-09-20T11:04:31+0000",
            "content": "Thanks Han, I do like the new API better ...\n\nI don't think we need go get rid of merge() for stored fields / term vectors, at least not yet ... ",
            "author": "Michael McCandless",
            "id": "comment-13772939"
        },
        {
            "date": "2013-09-20T14:24:44+0000",
            "content": "The only reason merge() exists there is so they can implement some \"bulk merging\" optimizations?\n\nCan we remove these optimizations? Has there ever been a benchmark showing they help at all?\n\nWe shouldnt have such scary code in lucene because it \"looks faster\". Every time I look at infostreams from merge, its completely dominated by postings and other things. ",
            "author": "Robert Muir",
            "id": "comment-13773028"
        },
        {
            "date": "2014-08-25T01:26:13+0000",
            "content": "This has baked for a year. Lets backport it to 4.x for auto-prefix terms and other feature that can make use of it. ",
            "author": "Robert Muir",
            "id": "comment-14108663"
        },
        {
            "date": "2014-08-25T01:52:10+0000",
            "content": "Commit 1620250 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1620250 ]\n\nLUCENE-5123, LUCENE-5268: invert codec postings api (backport from trunk) ",
            "author": "ASF subversion and git services",
            "id": "comment-14108669"
        },
        {
            "date": "2014-08-25T01:57:34+0000",
            "content": "Commit 1620252 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1620252 ]\n\nLUCENE-5123, LUCENE-5268: move CHANGES 5.0 -> 4.11 ",
            "author": "ASF subversion and git services",
            "id": "comment-14108672"
        },
        {
            "date": "2014-08-25T10:00:45+0000",
            "content": "Thanks Rob! ",
            "author": "Michael McCandless",
            "id": "comment-14108967"
        },
        {
            "date": "2014-11-20T20:47:38+0000",
            "content": "Commit 1640807 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1640807 ]\n\nLUCENE-5123: fix changes ",
            "author": "ASF subversion and git services",
            "id": "comment-14219969"
        },
        {
            "date": "2014-11-20T20:49:10+0000",
            "content": "Commit 1640808 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1640808 ]\n\nLUCENE-5123: fix changes ",
            "author": "ASF subversion and git services",
            "id": "comment-14219971"
        },
        {
            "date": "2015-02-23T05:02:11+0000",
            "content": "Bulk close after 5.0 release. ",
            "author": "Anshum Gupta",
            "id": "comment-14332835"
        }
    ]
}