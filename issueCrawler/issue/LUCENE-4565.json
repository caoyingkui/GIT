{
    "id": "LUCENE-4565",
    "title": "Simplify TaxoReader ParentArray/ChildrenArrays",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Minor",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "TaxoReader exposes two structures which provide information about a categories parent/childs/siblings: ParentArray and ChildrenArrays. ChildrenArrays are derived (i.e. created) from ParentArray.\n\nI propose to consolidate all that into one API ParentInfo, or CategoryTreeInfo (a better name?) which will provide the same information, only from one object. So instead of making these calls:\n\n\nint[] parents = taxoReader.getParentArray();\nint[] youngestChilds = taxoReader.getChildrenArrays().getYoungestChildArray();\nint[] olderSiblings = taxoReader.getChildrenArrays().getOlderSiblingArray();\n\n\n\none would make these calls:\n\n\nint[] parents = taxoReader.getParentInfo().parents();\nint[] youngestChilds = taxoReader.getParentInfo().youngestChilds();\nint[] olderSiblings = taxoReader.getParentInfo().olderSiblings();\n\n\n\nNot a big change, just consolidate more code into one logical place. All of these arrays will continue to be lazily allocated.",
    "attachments": {
        "LUCENE-4565.patch": "https://issues.apache.org/jira/secure/attachment/12556266/LUCENE-4565.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-12-05T15:39:45+0000",
            "content": "I was thinking about a name for this ParentInfo (I don't like 'info' much), and here are a couple of suggestions: Family, TaxonomyTree, Ancestree and ParallelTaxonomyArray (thanks Robert for the analogy to ParallelPostingsArray !).\n\nSo far I like ParallelTaxonomyArray, but if anyone has a better suggestion, please speak up ! ",
            "author": "Shai Erera",
            "id": "comment-13510538"
        },
        {
            "date": "2012-12-05T17:10:16+0000",
            "content": "FamilyTree?\nGenealogy?\nHow about Stemma ? ",
            "author": "Gilad Barkai",
            "id": "comment-13510603"
        },
        {
            "date": "2012-12-06T12:17:31+0000",
            "content": "Patch replaces ParentArray and ChildrenArrays by ParallelTaxonomyArrays. Most of the changes are due to this API change, but nothing conceptually changed. You still get 3 arrays for traversing the taxonomy tree, only now from one object.\n\nAll tests pass.\n\nGilad, I chose ParallelTaxoArrays because in the end this object returns you arrays and nothing else. The ParallelArrays name already exists in Lucene (ParallelPostingArrays), and so I've followed the same convention.\n\nIf one day we'll change this object to provide service methods for getting parent, child and sibling, then a better name (like FamilyTree) might be more adequate. ",
            "author": "Shai Erera",
            "id": "comment-13511306"
        },
        {
            "date": "2012-12-06T12:56:07+0000",
            "content": "Patch's OK, some comments:\n\n\n\tThe notion of youngestChild and olderSibling is important. I would not have removed the 'older/youngest' parts. Especially not from the TaxoArray's API. But would rather have them everywhere.\n\n\n\n\n\tIn DirectoryTaxonomyWriter, the loop over the termEnums had been changed to \"reuse\" the TermsEnum and DocsEnum - only they are not reused. I got confused trying to find the reusability. Is there an internal java expert optimization for such cases?\n\n\n ",
            "author": "Gilad Barkai",
            "id": "comment-13511315"
        },
        {
            "date": "2012-12-06T13:10:13+0000",
            "content": "The notion of youngestChild and olderSibling is important. I would not have removed the 'older/youngest' parts. Especially not from the TaxoArray's AP\n\nI thought that it's over-verbosing to put them in the method names. Rather, I think that good javadocs are what's needed here. It's an API that one reads one time usually.\n\nIn DirectoryTaxonomyWriter, the loop over the termEnums had been changed to \"reuse\" the TermsEnum and DocsEnum - only they are not reused.\n\nThey are reused. Look at the calls below - according to the javadocs, passing the TermsEnum/DocsEnum to the respective methods reuses them.\n\n\ntermsEnum = terms.iterator(termsEnum);\nand\ndocs = termsEnum.docs(null, docs, 0 /* freqs not required */);\n\n ",
            "author": "Shai Erera",
            "id": "comment-13511320"
        },
        {
            "date": "2012-12-06T13:14:12+0000",
            "content": "I thought that it's over-verbosing to put them in the method names. Rather, I think that good javadocs are what's needed here. It's an API that one reads one time usually.\n\n.children() looks like it's getting all children, it does not. .siblings() looks like it returns all siblings, which it does not. I think a good JavaDoc is a blessing, but it's not a penalty in making the code document itself - which it did till now. I see no reason to change that.\n\nThey are reused\nMy bad! I need coffee... ",
            "author": "Gilad Barkai",
            "id": "comment-13511331"
        },
        {
            "date": "2012-12-06T13:27:43+0000",
            "content": "I don't think that youngestChild() is clearer than children() + the javadocs. Only contains more characters. Naming is hard, I don't think that the existing names are good. Maybe to those who developed the algorithm and know what it does. But I didn't understand the word 'youngest' until I saw an example on paper.\n\nTherefore whatever we call this method, I think that someone will need to read the javadocs (unless we call it childrenThatWereAddedLastToTheTaxonomy). I'll proceed with the short names. They're not wrong, they do return one child and one sibling (and one parent) of every category. Which child/sibling? Read the javadocs.\n\nMaybe tomorrow someone will come up w/ a better structure, where children[i] would actually mean oldestChild (and youngestSibling)? I don't know. So why commit to it in the API? ",
            "author": "Shai Erera",
            "id": "comment-13511342"
        },
        {
            "date": "2012-12-06T13:35:07+0000",
            "content": "In fact, now that I think of it, one should not really care which child/sibling we return - that's implementation details. All that matters is how to traverse the taxonomy tree. You start from ROOT (ordinal=0), ask for children[0], and then depends if you want to do DFS/BFS you call siblings[children[0]] or children[children[0]] .. what does it matter if the child is the youngest/oldest? ",
            "author": "Shai Erera",
            "id": "comment-13511347"
        },
        {
            "date": "2012-12-06T14:06:13+0000",
            "content": "I've decided to leave the API with the short names + javadocs. I thought about removing any mentions about youngest/oldest because that's implementation detail and might change one day. But I didn't.\n\nWhat should really matter to one is how to use the information in these 3 arrays to traverse the tree, so I added some explanation in the classes javadocs.\n\nCommitted the changes to trunk and 4x. ",
            "author": "Shai Erera",
            "id": "comment-13511399"
        },
        {
            "date": "2012-12-08T05:27:45+0000",
            "content": "[branch_4x commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1417893\n\nLUCENE-4565: Consolidate ParentArray and ChildrenArrays into ParallelTaxonomyArrays\n ",
            "author": "Commit Tag Bot",
            "id": "comment-13527047"
        },
        {
            "date": "2012-12-08T05:27:56+0000",
            "content": "[trunk commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1417889\n\nLUCENE-4565: Consolidate ParentArray and ChildrenArrays into ParallelTaxonomyArrays\n ",
            "author": "Commit Tag Bot",
            "id": "comment-13527064"
        },
        {
            "date": "2012-12-09T09:11:29+0000",
            "content": "One data point about using a class with methods like getParent(), getChild() etc. I modified TestDirTaxoWriter.testConcurrency to check the parents too. I originally called TaxoReader.getParent() and ran with 100 iterations - took 160 seconds to complete all iters. I then modififed the code to get the parents[] array once, and then do parents[ord] instead, time dropped to 60 seconds.\n\nThis is not a benchmark (TaxoReader.getParent() is not optimized to be inlined), but still a data point to refer to if we'll ever want to consider that. ",
            "author": "Shai Erera",
            "id": "comment-13527378"
        },
        {
            "date": "2013-03-22T16:11:36+0000",
            "content": "[branch_4x commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1417893\n\nLUCENE-4565: Consolidate ParentArray and ChildrenArrays into ParallelTaxonomyArrays ",
            "author": "Commit Tag Bot",
            "id": "comment-13610462"
        }
    ]
}