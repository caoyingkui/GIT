{
    "id": "LUCENE-4134",
    "title": "modify release process/scripts to use svn for rc/release publishing (svnpubsub)",
    "details": {
        "labels": "",
        "priority": "Blocker",
        "components": [],
        "type": "Task",
        "fix_versions": [
            "4.1"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "By the end of 2012, all of www.apache.org INCLUDING THE DIST DIR must be entirely managed using \"svnpubsub\" ... our use of the Apache CMS for lucene.apache.org puts us in compliance for our main website, but the dist dir use for publishing release artifacts also needs to be manaved via svn.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-06-11T19:00:35+0000",
            "content": "\nRecent email from INFRA...\n\n> FYI: infrastructure policy regarding website hosting has\n> changed as of November 2011: we are requiring all websites\n> and dist/ dirs to be svnpubsub or ASF CMS backed by the end of 2012.\n> If your PMC has already met this requirement congratulations,\n> you can ignore the remainder of this post.\n> \n> As stated on http://www.apache.org/dev/project-site.html#svnpubsub\n> we are migrating our webserver infrastructure to 100% svnpubsub\n> over the course of 2012.\u00a0 If your site does not currently make\n> use of this technology, it is time to consider a migration effort,\n> as rsync-based sites will be PERMANENTLY FROZEN in Jan 2013 due \n\n...\n\n> NOTE: the policy for dist/ dirs for managing project releases is\n> similar.\u00a0 We have setup a dedicated svn server for handling this,\n> please contact infra when you are ready to start using it.\n\n\n\nSome docs...\n\nhttp://www.apache.org/dev/release.html#upload-ci\n\nAt a minimum we need to open a Jira with INFRA when we are ready for them to setup \"https://dist.apache.org/repos/dist/release/lucene\" and start using it for subsequent release publishing (instead of copying to the magic \"dist\" dir on people.apache.org and waiting for rsync.  But as part of this new process there will also be a \"https://dist.apache.org/repos/dist/dev/lucene\" directory where release candidates can be put for review (instead of people.apache.org/~releasemanager/...), and if/when they are voted successfully a simple \"svn mv\" to dist/release/lucene makes them official and pushes them to the mirrors.\n\nSo we should also change our release scripts to start svn committing the release candidates there instead of scping to people.apache.org ",
            "author": "Hoss Man",
            "id": "comment-13292986"
        },
        {
            "date": "2012-06-11T19:02:41+0000",
            "content": "I agree we should do the first part. As for the second part, i personally dont want to use any scripts that ssh or svn commit automatically so its no problem for me. \n\nI think instead we should just have instructions on where we should commit things manually in ReleaseTODO etc. If someone wants to add automation thats great, but I just don't like automation when it comes to my passwords. ",
            "author": "Robert Muir",
            "id": "comment-13292988"
        },
        {
            "date": "2012-06-11T19:07:42+0000",
            "content": "rmuir: doesn't the automation already exist in \"buildAndPushrelease.py\" ? ... doesn't that automatically scp to RCs to people.apache.org:~you/public_html/staging_area/ ?\n\ni'm just suggesting we change that to do the svn commit to https://dist.apache.org/repos/dist/dev/lucene ... the RCs are still \"uploaded\" automaticly, they would just start geting \"uploaded\" to an INFRA blessed location that would make it easier to (manually) publish them post-VOTE with an \"svn mv\" ",
            "author": "Hoss Man",
            "id": "comment-13292994"
        },
        {
            "date": "2012-06-11T19:12:49+0000",
            "content": "Hoss: right I'm saying i dont use that script \n\nI think we should still lay out the new instructions on the wiki for people who dont want scripts svn committing for them, thats all. ",
            "author": "Robert Muir",
            "id": "comment-13292997"
        },
        {
            "date": "2012-06-11T19:16:53+0000",
            "content": "Ah ... sorry ... i thought you were saying \"we shouldn't add automation for this\" ... didn't realize you ment \"i don't use the automation we currently have\"\n\nI think we should still lay out the new instructions on the wiki for people who dont want scripts svn committing for them, thats all.\n\n+1 ",
            "author": "Hoss Man",
            "id": "comment-13293001"
        },
        {
            "date": "2013-01-08T11:49:55+0000",
            "content": "we can't release anything until we fix this issue. ",
            "author": "Robert Muir",
            "id": "comment-13546812"
        },
        {
            "date": "2013-01-08T12:56:38+0000",
            "content": "I never used the automated script, too. If they exist I don't think they are still maintained. The ANT scripts in SOLR were removed a while ago while cleaning up the build.\n\n+1 to change the ReleaseTODO. I don't think we should add automation at all, because this last step should always be manual. I personally copy every file and will from this year on commit all of them to svnpubsub. The Javadocs relaese is very manual, too, as you have to commit millions of files to svnpubsub which takes \"4 beers for Lucene and 1 beer for solr\" (Robert Muir). So it should be manual, because you have to carefully manage all this.\n\nUwe ",
            "author": "Uwe Schindler",
            "id": "comment-13546844"
        },
        {
            "date": "2013-01-08T13:07:10+0000",
            "content": "I feel like as step 1 here we need to ask infra to create us a release area underneath https://dist.apache.org/repos/dist/release/\n\nI'm just going to reiterate: until we resolve this ticket we cannot release ANYTHING. ",
            "author": "Robert Muir",
            "id": "comment-13546854"
        },
        {
            "date": "2013-01-08T13:57:43+0000",
            "content": "I feel like as step 1 here we need to ask infra to create us a release area underneath https://dist.apache.org/repos/dist/release/\n\nI'll make a JIRA for this. ",
            "author": "Steve Rowe",
            "id": "comment-13546897"
        },
        {
            "date": "2013-01-08T13:59:37+0000",
            "content": "Step 2 I think we have to figure out what our process is for doing candidates and votes and stuff?\n\nI havent looked at the instructions page here, but i think it provides some integration with this...\n\nWe should figure out how we want it to work.  ",
            "author": "Robert Muir",
            "id": "comment-13546898"
        },
        {
            "date": "2013-01-08T14:07:35+0000",
            "content": "\nI feel like as step 1 here we need to ask infra to create us a release area underneath https://dist.apache.org/repos/dist/release/\n\nI'll make a JIRA for this.\n\nDone: INFRA-5739 ",
            "author": "Steve Rowe",
            "id": "comment-13546909"
        },
        {
            "date": "2013-01-10T20:07:06+0000",
            "content": "[A]s part of this new process there will also be a \"https://dist.apache.org/repos/dist/dev/lucene\" directory where release candidates can be put for review (instead of people.apache.org/~releasemanager/...), and if/when they are voted successfully a simple \"svn mv\" to dist/release/lucene makes them official and pushes them to the mirrors.\n\nThere is a wrinkle here: maven artifacts.  Our current process includes them with the ASF release artifacts at the RC review download link.  If we continue this when we instead commit RCs to repos/dist/dev/lucene/{java,solr}/X.Y.ZRCN-rMMMMMMM/, then the release publishing process can't be just svn mv dev/lucene/{java,solr}/X.Y.ZRCN-rMMMMMMM release/lucene/{java,solr}/X.Y.Z.  Instead, we'll have to somehow exclude the maven artifacts, e.g. svn rm dev/lucene/{java,solr}/X.Y.ZRCN-rMMMMMMM/maven.\n\nAn alternative: now that we stage maven artifacts to Nexus (repository.apache.org) prior to the release, we could as part of an RC announcement also include the Nexus link, and not include the maven artifacts in repos/dist/dev/lucene/.  This option gets my +1. ",
            "author": "Steve Rowe",
            "id": "comment-13550352"
        },
        {
            "date": "2013-01-10T20:22:04+0000",
            "content": "Wouldn't another alternative instead just continue to use our p.a.o/~ versus deploying to two places?\n\nI don't like having to check a \"release\" spread across two different places. And this would also make automatic \nverification difficult (today, we can pass the p.a.o link and it checks \"everything\") ",
            "author": "Robert Muir",
            "id": "comment-13550373"
        },
        {
            "date": "2013-01-10T20:34:43+0000",
            "content": "Wouldn't another alternative instead just continue to use our p.a.o/~ versus deploying to two places?\n\n+1\n\nI would suggest that for now we move forward with the simplest possible changes to our overall processes that satisfies infra: using the new svn repo for our final release \"dist\", but leave everything else related to RCs, and smoke checking, as is.\n\nThen we can discuss/iterate on other changes to the release process at our leasiure (ie: maybe we put hte RCs in svn, and tweak the directory structure so a simple \"svn mv\" works for the dist files, and we have some other script for the maven files) ",
            "author": "Hoss Man",
            "id": "comment-13550383"
        },
        {
            "date": "2013-01-10T20:51:47+0000",
            "content": "Wouldn't another alternative instead just continue to use our p.a.o/~ versus deploying to two places?\n\nYes, you're right: +1\n\nThen we can discuss/iterate on other changes to the release process at our leasiure (ie: maybe we put hte RCs in svn, and tweak the directory structure so a simple \"svn mv\" works for the dist files, and we have some other script for the maven files)\n\nIf the maven/ directories weren't there, a simple \"svn mv\" would work - no other tweaking required.\n\nWhat \"other script\" did you have in mind for the maven files?  Are you talking about the need to change the smoke tester if the maven artifacts are moved out of the RC? ",
            "author": "Steve Rowe",
            "id": "comment-13550399"
        },
        {
            "date": "2013-01-10T20:58:14+0000",
            "content": "personally i would prefer if we don't have a separate script for changing the maven files.\n\nI'm not really sure what this tester is currently doing: but in my opinion if someone gets \n\"Lucene 4.1\" i should know WTF they got, regardless of whether its from an FTP site or maven.\n\nSo if it doesnt exist now, at least in the future I'd like more logic cross-checking between \nthe two things to ensure they are consistent with each other.\n\nIts scary to me that different build systems are producing different artifacts and we don't\nhave this today. \n\nAnd i know the checking isn't good enough when i see basic shit like things not even named\nthe same way: SOLR-4287 ",
            "author": "Robert Muir",
            "id": "comment-13550406"
        },
        {
            "date": "2013-01-10T22:52:36+0000",
            "content": "What \"other script\" did you have in mind for the maven files?\n\nI just ment whatever we currently do to push them to to where ever we push them once the VOTE is official \u2013 if that's currently bundled up i na script that also scp's the files to people.apache.org:/dist, then lets only worry about changing the people.apache.org part to start committing to svn, and worry about switching to RCs in svn and how we upload to maven from there later.\n ",
            "author": "Hoss Man",
            "id": "comment-13550538"
        },
        {
            "date": "2013-01-10T23:05:04+0000",
            "content": "personally i would prefer if we don't have a separate script for changing the maven files.  I'm not really sure what this tester is currently doing.\n\ns/changing/checking/ ?\n\nHere's what the maven artifact checking portion of the smoke tester currently does:\n\n\n\tDownloads the POM templates from the branch tag in Subversion (for later checking that all checked-in POM templates have corresponding artifacts)\n\tDownloads all the files under the maven/ directories at the RC location\n\tVerifies that there is a deployed POM for each binary jar/war\n\tVerifies there is a binary jar for each POM template\n\tVerifies that the md5/sha1 digests for each Maven jar/war exist and are correct\n\tVerifies there is a source and javadocs jar for each binary jar\n\tVerifies that each deployed POM's artifactId/groupId (pulled from the POM) matches the POM's dir+filename\n\tVerifies that there is the binary jar for each deployed POM\n\tDownloads and unpacks the official distributions, and also unpacks the Solr war\n\tVerifies that the Maven binary artifacts have same-named files (after adding \"apache-\" to the Maven Solr jars/war)\n\n\n\nThese are a couple of additional steps in there to handle non-Mavenized dependencies, which we don't have any of anymore; these steps could be removed.   \n\nIts scary to me that different build systems are producing different artifacts\n\nAll the Maven artifacts are produced by Ant, not by Maven and not by maven-ant-tasks. \n\nAnd i know the checking isn't good enough when i see basic shit like things not even named the same way: SOLR-4287\n\nmaven-ant-tasks renames the Solr artifacts based on the Maven jar naming convention: artifactId-version(-type).jar - groupId org.apache.solr is not included.  This has been the Solr Maven artifact naming scheme since Solr artifacts started being published on the Maven central repository (v1.3).  Using the Solr naming convention would result in the coordinates org.apache.solr.apache-solr.*, or maybe even org.apache.apache-solr:apache-solr.*, both of which look goofy to me.\n\nI think Maven can technically handle artifact naming schemes that differ from artifactId-version(-type).jar, but I've never done that before, and I personally don't think it's worth the effort, especially given the IMHO goofy result.  Before SOLR-4287, I haven't seen anybody complain.  (If you look at SOLR-4287, by the way, the suggestion isn't to change Maven naming, it's to change the official Solr artifact naming.)   ",
            "author": "Steve Rowe",
            "id": "comment-13550551"
        },
        {
            "date": "2013-01-10T23:17:25+0000",
            "content": "\nWhat \"other script\" did you have in mind for the maven files?\n\nI just ment whatever we currently do to push them to to where ever we push them once the VOTE is official \u2013 if that's currently bundled up i na script that also scp's the files to people.apache.org:/dist, then lets only worry about changing the people.apache.org part to start committing to svn, and worry about switching to RCs in svn and how we upload to maven from there later.\n\nThe process is here: http://wiki.apache.org/lucene-java/PublishMavenArtifacts.  It's a two step process: first an Ant task stages the artifacts to the Nexus repository at repository.apache.org.  Then when the VOTE succeeds, the RM clicks a button on the Nexus web interface to publish them, and a few hours later they get synch'd to the Maven central repository. ",
            "author": "Steve Rowe",
            "id": "comment-13550555"
        },
        {
            "date": "2013-01-10T23:43:53+0000",
            "content": "I think Maven can technically handle artifact naming schemes that differ from artifactId-version(-type).jar, but I've never done that before, and I personally don't think it's worth the effort, especially given the IMHO goofy result.\n\nHmm, I just realized that there are actually two possible ways to address the naming difference - the above comment confuses the second with the first: \n\n\n\tChange the Solr artifactIds, and maybe also the groupId, by prepending \"apache-\".  This is what I was calling goofy.\n\tChange the Solr artifact filenames by prepending \"apache-\", without changing the artifactIds or the groupId.\n\n\n\nThinking about it more, I'm dubious that #2 is even possible; while I know that maven-jar-plugin (the Maven jar producer) allows for its output to be named non-conventionally, I don't know how Maven resolution would work if the filename starts with something other than the artifactId. ",
            "author": "Steve Rowe",
            "id": "comment-13550568"
        },
        {
            "date": "2013-01-11T09:35:41+0000",
            "content": "I would prefer to rename the ant artifacts too. \n\nBut how we fix the inconsistency is irrelevant: the problem is that it exists! ",
            "author": "Robert Muir",
            "id": "comment-13551007"
        },
        {
            "date": "2013-01-11T17:39:44+0000",
            "content": "I agree it's a problem that the Solr artifact filenames differ depending on where you get them from.\n\nBut this problem has existed for years, and I don't think it makes sense to block the 4.1 release because of it. ",
            "author": "Steve Rowe",
            "id": "comment-13551303"
        },
        {
            "date": "2013-01-11T17:43:00+0000",
            "content": "Why not? we fix other bugs when we find them.\n\nYou've advocated before that packaging bugs should be blockers because\nnobody looks at packaging except at release time. ",
            "author": "Robert Muir",
            "id": "comment-13551309"
        },
        {
            "date": "2013-01-11T17:49:04+0000",
            "content": "You've got me there.\n\nI'll put up a patch on SOLR-4287 and see if anybody objects to a concrete proposal to change the Ant artifact names.\n\nPart of my reluctance to do this is a feeling that the \"apache-*\" naming is embedded lots of places.  We'll see... ",
            "author": "Steve Rowe",
            "id": "comment-13551319"
        },
        {
            "date": "2013-01-11T17:49:16+0000",
            "content": "I'm also volunteering to help fix the problem (its terribly confusing).\nI just havent looked yet. ",
            "author": "Robert Muir",
            "id": "comment-13551320"
        },
        {
            "date": "2013-01-29T01:01:31+0000",
            "content": "INFRA-5739 has been resolved - svnpubsub for releases has been set up.  And it functioned properly for the 4.1 Lucene & Solr releases.\n\nI've taken a first pass at modernizing the Lucene ReleaseTodo documentation,  including a description of publishing by committing final release distributions to the dist.apache.org/repos/dist/releases/lucene/ SVN repo.\n\nI updated Mike McCandless's dev-tools/scripts/buildAndPushRelease.py script to run under Python 3.2 - otherwise it wouldn't run the smoke tester, which requires Python 3.2.  I used this script to build, push, and smoke test the RC.  It's very nice - it handles lots of tedious details for you.  The flip side of this is that what it does could become magic; my recommendation is to fully review the script before using it to make a real RC. \n\nI think enough progress was made here for now.  Further changes can be made via new issues. ",
            "author": "Steve Rowe",
            "id": "comment-13564931"
        }
    ]
}