{
    "id": "SOLR-6174",
    "title": "Facet count incorrect when duplicate facet queries (facet.query) are specified",
    "details": {
        "affect_versions": "4.7.2",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Cannot Reproduce"
    },
    "description": "A request like:\n\nfacet=true&facet.query=test correctly returns\n\n\n{\n  \"facet_counts\": {\n     \"facet_queries\": {\n        \"test\": 3\n     }\n  }\n} \n\n\n\nBut, specifying the facet.query more than once like facet=true&facet.query=test&facet.query=test will sum the results of both queries, returning double the correct count.\n\n\n{\n  \"facet_counts\": {\n     \"facet_queries\": {\n        \"test\": 6\n     }\n  }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-14034324",
            "date": "2014-06-17T20:32:37+0000",
            "content": "Interesting edge case.\n\nI haven't looked closely, but this is probably due to how the distributed facet logic collects the results from multiple shards \u2013 it's probably looping over the results from each shard and incrementing the local state w/o considering the possibility of duplicates.\n\ni'm not sure why you would really want multiple redundant facet queries unless you were also using tag/ex localparams (which should bypass this problem) but using the \"key\" localparam should be a viable work around until a proper fix can be made.  "
        },
        {
            "author": "Scott Smerchek",
            "id": "comment-14034362",
            "date": "2014-06-17T20:54:35+0000",
            "content": "It is interesting, indeed. \n\nIt's not so much that we want redundant facet queries, but we are generating the facet queries based on user input, so it's possible the user for some reason has duplicate queries. \n\nFor us, the best workaround is to simply distinct the facet queries before passing them in. Since they are identical, when we read out the results we look up the count and get the correct result for both.  "
        },
        {
            "author": "Alessandro Benedetti",
            "id": "comment-16051798",
            "date": "2017-06-16T11:49:26+0000",
            "content": "Hi Hoss Man,\nI think that a combination of SOLR-6780 and this issue is causing me this very annoying behavior in a 4.10.2 Solr Cloud cluster :\n\nScenario\nI append a facet query in a request handler in the solrconfig.xml of a collection.\n\nBug\nWhen I run a query, the facet query count is incorrect and specifically it is num_shards*correct_count .\nSo it seems an aggregation of duplicated facet queries.\n\nWeird thing is that this affect all the facet queries, even the ones you send at runtime as request params.\n\nThe bug seems solved in Solr 6.5.x , so I guess we should be OK.\n\nCheers "
        },
        {
            "author": "Cassandra Targett",
            "id": "comment-16322905",
            "date": "2018-01-11T20:35:57+0000",
            "content": "As noted by Alessandro, I think this has been fixed at some point since 2014. I can also no longer reproduce it using 7.2. "
        }
    ]
}