{
    "id": "LUCENE-5399",
    "title": "PagingFieldCollector is very slow with String fields",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/search"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "PagingFieldCollector (sort comparator) is significantly slower with string fields, because of how its \"seen on a previous page\" works: it calls compareDocToValue(int doc, T t) first to check this. (its the only user of this method)\n\nThis is very slow with String, because no ordinals are used. so each document must lookup ord, then lookup bytes, then compare bytes.\n\nI think maybe we should replace this method with an 'after' slot, and just have compareDocToAfter or something.\n\nOtherwise we could use a hack-patch like the one i will upload (i did this just to test the performance, although tests do pass).",
    "attachments": {
        "LUCENE-5399.patch": "https://issues.apache.org/jira/secure/attachment/12622827/LUCENE-5399.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13870607",
            "author": "Robert Muir",
            "content": "here's my patch (the hack version).\n\nI found this because solr's searchAfter integration (SOLR-5463) requires a sort on the unique key, so basically that means its tripping this worst case. ",
            "date": "2014-01-14T10:33:34+0000"
        },
        {
            "id": "comment-13870875",
            "author": "Michael McCandless",
            "content": "Good catch Rob; I like your solution.\n\nIt's crazy we have this code dup (the duplicate, I think out of date, copy\nof TermOrdValComparator in Solr) ... I think we should refactor here\nand fix Solr to use Lucene's improved version.  You shouldn't have to\nfix issues like this in N places.\n\nSo I started from your patch, and got missing last/first support\nworking in Lucene ... but I haven't dedup'd Solr's copy yet.\n\nI also want to try reversing the \"check bottom\" and \"check top\" in\nPagingFieldCollector; I think that might give some speedups too. ",
            "date": "2014-01-14T16:36:29+0000"
        },
        {
            "id": "comment-13870886",
            "author": "Robert Muir",
            "content": "oh this is great, this was really frustrating when trying to test the missing value support in DV.\n\nas far as \"my solution\", i think its totally bogus actually: its caching a reference to a mutable thing (BytesRef)... I just did it this way because exactly one and only one thing calls this method (PagingFIeldCollector) and so I knew i could do benchmarks and so on (i only investigated this as some 'page 2' results with searchAfter were like 8x slower than if you didnt use searchAfter, with current patch like 2x).\n\nas far as reversing the checks, that sounds fantastic, I think that explains why my page 2 results are still 2x slower: 2x the work because they read the ordinal twice, since most hits are neither competitive nor previously visited.  ",
            "date": "2014-01-14T16:47:34+0000"
        },
        {
            "id": "comment-13870889",
            "author": "Michael McCandless",
            "content": "New patch, reversing the order of \"checking bottom\" and \"checking top\"; I think this should be a good speedup: it should greatly reduce how many times we call FC.compareDocToValue for typical cases. ",
            "date": "2014-01-14T16:49:33+0000"
        },
        {
            "id": "comment-13870949",
            "author": "Robert Muir",
            "content": "I benchmarked the patch, it seems to erase that 2x performance difference, with just some small % overhead. Thanks Mike! I actually think your opto is way more potent than mine, but it would still be great to keep both of them, to keep speed high for the deeper pages too.\n\ni think now we should just investigate a simple slot api, it would remove some per-doc checks too (since the after value is not changing), but mainly will be cleaner and not have the bogus caching of the bytesref object reference... ",
            "date": "2014-01-14T17:40:57+0000"
        },
        {
            "id": "comment-13871336",
            "author": "Michael McCandless",
            "content": "New patch, cutting over to explicit up-front slot instead of the slower compareDocToValue. ",
            "date": "2014-01-14T23:02:32+0000"
        },
        {
            "id": "comment-13871583",
            "author": "Robert Muir",
            "content": "Are you sure its not the same copy of the old patch? ",
            "date": "2014-01-15T03:19:44+0000"
        },
        {
            "id": "comment-13871873",
            "author": "Michael McCandless",
            "content": "Argh, trying again... ",
            "date": "2014-01-15T09:56:24+0000"
        },
        {
            "id": "comment-13871984",
            "author": "Michael McCandless",
            "content": "Another iteration, adding fangs to TestSearchAfter, fixing some crabs in StringValComparator, and fixing some nocommits ... ",
            "date": "2014-01-15T12:17:53+0000"
        },
        {
            "id": "comment-13872208",
            "author": "Robert Muir",
            "content": "same as mike's patch, but compiles with (at least my version) of java7.\n\nwould be great if it could be setTopValue(T value) ",
            "date": "2014-01-15T15:54:08+0000"
        },
        {
            "id": "comment-13872227",
            "author": "Uwe Schindler",
            "content": "You could do:\n\n      // Tell all comparators their top value:\n      for(int i=0;i<comparators.length;i++) {\n        @SuppressWarnings(\"unchecked\")\n        FieldComparator<Object> comp = (FieldComparator<Object>) comparators;\n        comp.setTopValue(after.fields);\n      }\n\n ",
            "date": "2014-01-15T16:12:07+0000"
        },
        {
            "id": "comment-13872228",
            "author": "Robert Muir",
            "content": "MIke what java compiler are you using?  ",
            "date": "2014-01-15T16:13:03+0000"
        },
        {
            "id": "comment-13872229",
            "author": "Robert Muir",
            "content": "patch with Uwe's idea. ",
            "date": "2014-01-15T16:13:25+0000"
        },
        {
            "id": "comment-13872236",
            "author": "ASF subversion and git services",
            "content": "Commit 1558450 from Robert Muir in branch 'dev/branches/lucene539399'\n[ https://svn.apache.org/r1558450 ]\n\nLUCENE-5399: make branch ",
            "date": "2014-01-15T16:20:17+0000"
        },
        {
            "id": "comment-13872237",
            "author": "ASF subversion and git services",
            "content": "Commit 1558451 from Robert Muir in branch 'dev/branches/lucene539399'\n[ https://svn.apache.org/r1558451 ]\n\nLUCENE-5399: current state ",
            "date": "2014-01-15T16:21:33+0000"
        },
        {
            "id": "comment-13872431",
            "author": "ASF subversion and git services",
            "content": "Commit 1558516 from Michael McCandless in branch 'dev/branches/lucene539399'\n[ https://svn.apache.org/r1558516 ]\n\nLUCENE-5399: add fangs, fix 2 bugs ",
            "date": "2014-01-15T19:03:08+0000"
        },
        {
            "id": "comment-13872508",
            "author": "ASF subversion and git services",
            "content": "Commit 1558552 from Robert Muir in branch 'dev/branches/lucene539399'\n[ https://svn.apache.org/r1558552 ]\n\nLUCENE-5399: remove code duplication ",
            "date": "2014-01-15T19:44:08+0000"
        },
        {
            "id": "comment-13872593",
            "author": "ASF subversion and git services",
            "content": "Commit 1558565 from Michael McCandless in branch 'dev/branches/lucene539399'\n[ https://svn.apache.org/r1558565 ]\n\nLUCENE-5399: add fangs, but no new bugs found... ",
            "date": "2014-01-15T21:08:20+0000"
        },
        {
            "id": "comment-13872842",
            "author": "ASF subversion and git services",
            "content": "Commit 1558618 from Robert Muir in branch 'dev/branches/lucene539399'\n[ https://svn.apache.org/r1558618 ]\n\nLUCENE-5399, SOLR-5354: fix distributed grouping to marshal/unmarshal sort values properly ",
            "date": "2014-01-15T23:58:53+0000"
        },
        {
            "id": "comment-13872847",
            "author": "ASF subversion and git services",
            "content": "Commit 1558621 from Michael McCandless in branch 'dev/branches/lucene539399'\n[ https://svn.apache.org/r1558621 ]\n\nLUCENE-5399: remove nocommit ",
            "date": "2014-01-16T00:01:17+0000"
        },
        {
            "id": "comment-13872859",
            "author": "Michael McCandless",
            "content": "I think this is ready ... here's the patch (using diffSources.py). ",
            "date": "2014-01-16T00:13:35+0000"
        },
        {
            "id": "comment-13873647",
            "author": "ASF subversion and git services",
            "content": "Commit 1558865 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1558865 ]\n\nLUCENE-5399: add missingFirst/last support when sorting by Type.STRING; speed up deep paging; fix solr's distributed group sort for certain field types ",
            "date": "2014-01-16T17:40:26+0000"
        },
        {
            "id": "comment-13873770",
            "author": "ASF subversion and git services",
            "content": "Commit 1558887 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1558887 ]\n\nLUCENE-5399: add missingFirst/last support when sorting by Type.STRING; speed up deep paging; fix solr's distributed group sort for certain field types ",
            "date": "2014-01-16T18:58:25+0000"
        },
        {
            "id": "comment-13874977",
            "author": "ASF subversion and git services",
            "content": "Commit 1559196 from Michael McCandless in branch 'dev/branches/lucene5376'\n[ https://svn.apache.org/r1559196 ]\n\nLUCENE-5376, LUCENE-5399: add missingLast support to lucene server ",
            "date": "2014-01-17T17:23:38+0000"
        },
        {
            "id": "comment-13908323",
            "author": "ASF subversion and git services",
            "content": "Commit 1570569 from Martijn van Groningen in branch 'dev/trunk'\n[ https://svn.apache.org/r1570569 ]\n\nFixed typo in CHANGES.txt for issue LUCENE-5399 and moved that issue under optimizations. ",
            "date": "2014-02-21T13:49:26+0000"
        },
        {
            "id": "comment-13908335",
            "author": "ASF subversion and git services",
            "content": "Commit 1570573 from Martijn van Groningen in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1570573 ]\n\nFixed typo in CHANGES.txt for issue LUCENE-5399 and moved that issue under optimizations. ",
            "date": "2014-02-21T14:01:13+0000"
        },
        {
            "id": "comment-13908340",
            "author": "ASF subversion and git services",
            "content": "Commit 1570576 from Martijn van Groningen in branch 'dev/branches/lucene_solr_4_7'\n[ https://svn.apache.org/r1570576 ]\n\nFixed typo in CHANGES.txt for issue LUCENE-5399 and moved that issue under optimizations. ",
            "date": "2014-02-21T14:06:42+0000"
        }
    ]
}