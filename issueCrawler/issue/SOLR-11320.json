{
    "id": "SOLR-11320",
    "title": "Lock autoscaling triggers when changes they requested are being made",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Autoscaling triggers generate events that are then processed by actions such as ComputePlanAction and ExecutePlanAction. This process is far from instantaneous - it may take sometimes several seconds or even minutes to eg. move or add replicas.\n\nThe original condition that caused the first event will usually persist during this time, and eventually after waitFor time elapsed it will lead to a new event being generated, which will be queued for execution once the previous actions are completed - but by that time the original condition may have been alleviated by these actions, and the conditions reported in the new event no longer reflect the latest cluster state.\n\nFor this reason some autoscaling frameworks introduce a \"cooldown\" period, where triggers are temporarily disabled for a fixed period of time to avoid piling up new events while cluster changes are being made. This method introduces a fixed delay that is specific to a trigger.\n\nFrom the point of view of control theory the feedback loop design should minimize inherent delays because they are very hard to properly compensate for and either lead to instability (when controller tries to compensate for an out-of-step state) or lead to increased system lag (the system sluggishly reacts to changes because it has to wait for things to settle down) - so from this point of view a fixed delay, which is also hard to estimate properly and may be inadequate depending on varying conditions, is not ideal.\n\nA better alternative would be to lock the trigger just for the actual duration of time while changes are being made. Initially this could be implemented as a global lock for all triggers for the duration of modifications performed by ExecutePlanAction.\n\nCurrently cluster modifications executed by ExecutePlanAction are made asynchronously, so it's hard to determine when the changes actually take effect, eg. when a new (or moved) replica becomes active, so this would have to be changed as well.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-26T14:36:03+0000",
            "content": "Commit ed611a085134df9257bc6ac6ba4bef37ff3b514a in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ed611a0 ]\n\nSOLR-11320: Lock autoscaling triggers when changes they requested are being made. ",
            "author": "ASF subversion and git services",
            "id": "comment-16220537"
        },
        {
            "date": "2017-10-31T09:02:11+0000",
            "content": "Commit 084e028d16ba939acb9aa6660ecbbc91e7775b7c in lucene-solr's branch refs/heads/branch_7x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=084e028 ]\n\nSOLR-11320: Lock autoscaling triggers when changes they requested are being made. ",
            "author": "ASF subversion and git services",
            "id": "comment-16226479"
        }
    ]
}