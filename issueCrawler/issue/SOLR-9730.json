{
    "id": "SOLR-9730",
    "title": "IndexSchema Dynamic Field Definition Caching",
    "details": {
        "components": [
            "Schema and Analysis"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.5.2,                                            6.2.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "A small optimization suggestion for IndexSchema class, cache the definitions of the dynamic fields:\n\n\nprivate Map<String, SchemaField> cachedDynamicFields = new HashMap<>();\n\n@Override\n\tpublic SchemaField getFieldOrNull(String fieldName)\n\t{\n\t\tSchemaField f = fields.get(fieldName);\n\t\tif (f != null) return f;\n\n\t\tf = cachedDynamicFields.get(fieldName);\n\t\tif (f != null) return f;\n\n\t\tfor (DynamicField df : dynamicFields) {\n\t\t\tif (df.matches(fieldName)) {\n\t\t\t\tf = df.makeSchemaField(fieldName);\n\t\t\t\tcachedDynamicFields.put(fieldName, f);\n\t\t\t\treturn f;\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\n\nAre there any reasons not to do this?",
    "attachments": {},
    "issue_links": {},
    "comments": []
}