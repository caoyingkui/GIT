{
    "id": "LUCENE-4472",
    "title": "Add setting that prevents merging on updateDocument",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "4.0",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Currently we always call maybeMerge if a segment was flushed after updateDocument. Some apps and in particular ElasticSearch uses some hacky workarounds to disable that ie for merge throttling. It should be easier to enable this kind of behavior.",
    "attachments": {
        "LUCENE-4472.patch": "https://issues.apache.org/jira/secure/attachment/12548565/LUCENE-4472.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-10-10T14:06:58+0000",
            "content": "here is a patch that adds such an option to IWC via live settings.  ",
            "author": "Simon Willnauer",
            "id": "comment-13473241"
        },
        {
            "date": "2012-10-10T14:25:09+0000",
            "content": "Neat   How does ES customize / throttle its merging?\n\nMaybe the setting should mean we never call maybeMerge implicitly?  (Ie, neither on close nor NRT reader or any other time), rather than just singling out updateDocument/addDocument?  Eg if we add other methods in the future (like field updates), it should also prevent those from doing merges? ",
            "author": "Michael McCandless",
            "id": "comment-13473255"
        },
        {
            "date": "2012-10-10T14:39:55+0000",
            "content": "+1, if you have a lot of indexes and they all start merging at the same time it can be quite taxing\n\nI think ES has dedicated configurable thread pool where for each index a maybeMerge() is scheduled on an interval. (Size of thread pool limits number of  concurrent merges) ",
            "author": "selckin",
            "id": "comment-13473264"
        },
        {
            "date": "2012-10-10T14:40:49+0000",
            "content": "Patch looks good. One minor comment \u2013 LiveIWC.setMaybeMergeAfterFlush() contains a redundant 'a' in its javadocs --> \".. after a each segment\".\n\nMaybe the setting should mean we never call maybeMerge implicitly?\n\nPerhaps the issue's description should change to \"Add setting to prevent merging on segment flush\". Because as I understand the fix, the check is made only after a segment has been flushed, which already covers addDocument/updateDocument as well as future field updates? ",
            "author": "Shai Erera",
            "id": "comment-13473265"
        },
        {
            "date": "2012-10-10T14:45:16+0000",
            "content": "Can we consider instead giving MergePolicy the proper context here instead of adding a boolean?\n\nThis seems more flexible. ",
            "author": "Robert Muir",
            "id": "comment-13473270"
        },
        {
            "date": "2012-10-10T22:19:14+0000",
            "content": "Agree with Robert on the additional context flag, that would make things most flexible. A flag on IW makes things simpler from the user perspective though, cause then there is no need to customize the built in merge policies. ",
            "author": "Shay Banon",
            "id": "comment-13473617"
        },
        {
            "date": "2012-10-10T22:34:05+0000",
            "content": "I don't think you need to customize anything built in. Just delegate and forward findMerges()?\n\nThe problem is this doesn't really have the necessary context today: I think we should fix that.\nBut I'd like policies around merging to stay in ... MergePolicy \n\nOtherwise IWC could easily get cluttered with conflicting options which makes it complex. ",
            "author": "Robert Muir",
            "id": "comment-13473624"
        },
        {
            "date": "2012-10-10T22:36:28+0000",
            "content": "The MergePolicy is tricky here since we clone the MP in IW you need to actually pull and cast the MP from IW to change the setting if you want to do this in realtime. Maybe we can add something like this to MP so we can change MergeSettings in RT too. Otherwise you need to build a special MP but we can certainly do that. ",
            "author": "Simon Willnauer",
            "id": "comment-13473626"
        },
        {
            "date": "2012-10-15T11:30:28+0000",
            "content": "I played around with this and sketched out how this could look like. I don't think we should entirely break BW compat but open up the context like I did in the patch. There are still edges in the patch but some initial feedback would be great. ",
            "author": "Simon Willnauer",
            "id": "comment-13476087"
        },
        {
            "date": "2012-10-16T05:14:35+0000",
            "content": "I like this patch much better than the first one.\n\nAs far as back compat, I'm not sure if we should try to do anything tricky, the current patch isn't really a break\nit just allows MP to handle this stuff at a more fine-grained level, I think its fine.\n\np.s. UNKOWN and EMPTY_FOCED_SEGMENTS look like typos  ",
            "author": "Robert Muir",
            "id": "comment-13476753"
        },
        {
            "date": "2012-10-16T11:14:49+0000",
            "content": "I like the new MergeCause enum!\n\nBut, instead of folding all parameters into a MergeContext, and exposing a single MergePolicy.findMerges methods, can we keep the methods we have today and just add MergeCause as another parameter?  This is a very expert API and I think it's fine to simply change it.  I think this approach is more type-safe for the future, ie if we need to add something important such that a custom merge policy should pay attention to it ... apps will see compilation errors on upgrading and know they have to handle the new parameter. ",
            "author": "Michael McCandless",
            "id": "comment-13476915"
        },
        {
            "date": "2012-10-16T11:22:53+0000",
            "content": "Actually I think we only need to add the MergeCause (maybe rename this to MergeTrigger?) param to findMerges?  That method is invoked for natural merges, and knowing the trigger for the natural merge is useful...\n\nThe other two methods (findForceMerges, findForcedDeletesMerges) are only triggered when the app explicitly asked IndexWriter to do so. ",
            "author": "Michael McCandless",
            "id": "comment-13476920"
        },
        {
            "date": "2012-10-16T11:36:30+0000",
            "content": "The other two methods (findForceMerges, findForcedDeletesMerges) are only triggered when the app explicitly asked IndexWriter to do so.\n\nI am not sure if we should really do that. I'd rather make those two methods protected and make it a impl detail of merge policy. I think the specialized methods are a poor man's approach to the MergeContext and the api is rather clumsy along those lines. I'd be happy to not break bw. compat but only add a more flexible API that is the authoritative source / single entry point for the IndexWriter. If you think this through finfForcedDeletesMerges and findForcedMerges are really and impl detail of the current IndexWriter and if we would modularize it would become even more obvious.   ",
            "author": "Simon Willnauer",
            "id": "comment-13476928"
        },
        {
            "date": "2012-10-16T22:37:40+0000",
            "content": "I think forced merges or forcing reclaiming of deletions, both invoked\nby explicit app request, are very different use cases than the\n\"natural merging\" Lucene does during indexing (not directly invoked by\nthe app, but as a side effect of other API calls).\n\nSo I think it makes sense that the MP has separate methods to handle\nthese very different use cases.\n\nI don't thing we should use single param / single method XXXContext\napproach to \"bypass\" back compat.  We already tried this with\nScorerContext but backed it out because of the loss of type\nsafety... for expert APIs like this one I think it's actually good to\nrequire apps to revisit their impls on upgrading, if we've added\nparameters: it gives them a chance to improve their impls.  Plus this\nAPI is already marked @experimental...\n\nAlso, single method taking a single XXXContext obj means that method\nwill have to have a switch or bunch of if statements to handle what\nare in fact very different use cases, which is rather awkward.\n\nStill, separately I would love to make forceMerge/Deletes un-public so\nyou have to work harder to invoke them (eg maybe you invoke the merge\npolicy directly and then call IW.maybeMerge ... or something).  We can\ndo that separately... ",
            "author": "Michael McCandless",
            "id": "comment-13477418"
        },
        {
            "date": "2012-10-18T13:33:29+0000",
            "content": "fair enough mike. I think as long as we don't have a modular IW this is a fair argument to bind it to the IW impl. This patch contains the least intrusive change adding a MergeTrigger enum to findMerges. I think its ready unless somebody find better names or something. ",
            "author": "Simon Willnauer",
            "id": "comment-13478995"
        },
        {
            "date": "2012-10-18T15:40:53+0000",
            "content": "Thanks Simon, looks good! ",
            "author": "Michael McCandless",
            "id": "comment-13479080"
        },
        {
            "date": "2012-10-18T15:45:46+0000",
            "content": "I will go ahead and commit this. I will let it bake in a day or two before I backport. I think we should not deprecate but break BWCompat here this is experimental and super expert. ",
            "author": "Simon Willnauer",
            "id": "comment-13479087"
        },
        {
            "date": "2012-10-18T16:04:02+0000",
            "content": "Committed to trunk in revision 1399712. ",
            "author": "Simon Willnauer",
            "id": "comment-13479097"
        },
        {
            "date": "2012-10-19T11:04:45+0000",
            "content": "backported to 4.x & Committed revision 1400041. ",
            "author": "Simon Willnauer",
            "id": "comment-13479953"
        },
        {
            "date": "2013-03-22T16:25:07+0000",
            "content": "[branch_4x commit] Simon Willnauer\nhttp://svn.apache.org/viewvc?view=revision&revision=1400041\n\nLUCENE-4472: provide propper context information to MergePolicy which events triggered a findMerges ",
            "author": "Commit Tag Bot",
            "id": "comment-13610661"
        }
    ]
}