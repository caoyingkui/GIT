{
    "id": "LUCENE-1122",
    "title": "queryparser whitespace escaping and documentation?",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/queryparser",
            "general/website"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "as noted in this solr thread...\n\nhttp://www.nabble.com/PhraseQuery-and-WildcardQuery-to14503609.html#a14503609\n\n...it's possible to escape a whitespace character in the value of a term or prefix query by using a backslash so that the QueryParser will not treat it as \"special\" (ie: won't split on it when dividing the input into chunks for analysis).\n\nat a minimum, this should be noted here...\n\nhttp://lucene.apache.org/java/docs/queryparsersyntax.html#Escaping%20Special%20Characters\n\n...but it got me wondering...\n\n\n\tis this a side effect of something else, or will QueryParser really respect this everywhere? even in field names? (i haven't tested) ... i think this is a result of QueryParser allowing you to escape any character even if it isn't \"special\" to the syntax\n\tshouldn't a space be considered \"special\" since it does trigger certain behavior? ... so shouldn't QueryParser.escape(String) escape spaces as well as the other special characters?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2008-01-08T16:33:32+0000",
            "content": "\nshouldn't a space be considered \"special\" since it does trigger certain behavior? ... so shouldn't QueryParser.escape(String) escape spaces as well as the other special characters?\n\nIf escape() were changed to escape spaces, a previously supported use case (escaping an entire query, consisting exclusively of terms in the default field) would no longer be supported.  In this case, the Javadocs should be changed to be very explicit about the supported use case(s). ",
            "author": "Steve Rowe",
            "id": "comment-12556934"
        },
        {
            "date": "2008-11-10T15:01:07+0000",
            "content": "Its because a term is madeup of TERM_START_CHAR + TERM_CHAR*, both of which can contain an ESCAPED_CHAR, which is an escape, '\\', followed by anything. So backslash space matches ESCAPED_CHAR, and the space is eaten as part of the term rather than being used as a whitespace break.\n\nWe could change it, or it sounds like its fine to leave it. If we leave it, I guess we can doc it and close this issue. Give me your preference and I'll be happy to do it. ",
            "author": "Mark Miller",
            "id": "comment-12646275"
        },
        {
            "date": "2013-03-10T13:26:22+0000",
            "content": "SPRING_CLEANING_2013 We can reopen if necessary. ",
            "author": "Erick Erickson",
            "id": "comment-13598241"
        }
    ]
}