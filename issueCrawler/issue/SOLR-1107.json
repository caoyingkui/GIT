{
    "id": "SOLR-1107",
    "title": "Lifecycle management for CoreContainer before SolrCore-s are initialized",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "CoreContainer -> load creates and initializes SolrCore-s . \n\nFor some practical purposes - we may want to do some initialization / injection before the (custom) request handlers and the (custom) search components of the multiple cores are getting instantiated. \n\nHence we need a guaranteed way of providing lifecycle management that gets invoked once before the rest ( and hence , orthogonally  a destroy() needs to be invoked if there is an error in initialization ). \n\nNew class added:  CoreContainerLifecycleListener ( that needs to be implemented by custom lifecycle listeners ) \n\n<code>\n */\npublic abstract class CoreContainerLifecycleListener {\n\n  /**\n\n\tGuaranteed to be called before the initialization of the individual solr\n\tcores.\n\t\n\t@param props\n\tProperties loaded from the config file. <br >\n\t<b>Important: This could be null </b>\n   */\n  public abstract void onInit(final Properties props);\n\n\n\n  /**\n\n\tGuaranteed to be called when an exception occurs in the initialization of\n\tthe solr core container.\n   */\n  public abstract void onDestroy();\n}\n</code>\n\n\n\nCorresponding representation in solr.xml : \n\n\n<solr>\n    <lifecycles>\n          <lifecycle type=\"my.class.type.from.CoreContainerLifecycleListener\" />\n            <lifecycle type=\"my.class.type2.from.CoreContainerLifecycleListener\" >\n                  <property name=\"key\" value=\"value\" />\n             </lifecycle>\n     </lifecycles>\n</solr>\n\n2 CoreContainerLifecycleListener-s are instantiated and the method onInit(Properties) is invoked on the same. In case of a container initialization error- onDestroy() is called too.",
    "attachments": {
        "SOLR-1107.patch": "https://issues.apache.org/jira/secure/attachment/12404997/SOLR-1107.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Karthik K",
            "id": "comment-12697155",
            "date": "2009-04-08T19:15:14+0000",
            "content": "New class added  = CoreContainerLifecycleEventListener . \n\nCoreContainer changes to process LifecycleEventListeners as well.  "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13604381",
            "date": "2013-03-16T19:13:00+0000",
            "content": "SPRING_CLEANING_2013. We can reopen if there's interest. "
        },
        {
            "author": "Eugen Paraschiv",
            "id": "comment-13924450",
            "date": "2014-03-07T22:55:33+0000",
            "content": "This would be a really useful thing - a hook into the SOLR lifecycle. A usecase would be a custom QueryResponseWriter - having the option to set things up and tear things down would definitely help.  "
        }
    ]
}