{
    "id": "SOLR-243",
    "title": "Create a hook to allow custom code to create custom IndexReaders",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I have a customized IndexReader and I want to write a Solr plugin to use my derived IndexReader implementation. Currently IndexReader instantiation is hard coded to be: \nIndexReader.open(path)\n\nIt would be really useful if this is done thru a plugable factory that can be configured, e.g. IndexReaderFactory\n\ninterface IndexReaderFactory{\n     IndexReader newReader(String name,String path);\n}\n\nthe default implementation would just return: IndexReader.open(path)\n\nAnd in the newSearcher and getSearcher methods in SolrCore class can call the current factory implementation to get the IndexReader instance and then build the SolrIndexSearcher by passing in the reader.\n\nIt would be really nice to add this improvement soon (This seems to be a trivial addition) as our project really depends on this.\n\nThanks\n\n-John",
    "attachments": {
        "indexReaderFactory.patch": "https://issues.apache.org/jira/secure/attachment/12358299/indexReaderFactory.patch",
        "SOLR-243.patch": "https://issues.apache.org/jira/secure/attachment/12388970/SOLR-243.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "John Wang",
            "id": "comment-12499281",
            "date": "2007-05-26T03:31:07+0000",
            "content": "I have attached a patch for this issue. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12499284",
            "date": "2007-05-26T05:16:01+0000",
            "content": "some comments after reading the patch (haven't run it yet) ...\n\n1) in the future, please use 2 spaces for indenting (and no tabs)\n\n2) the existing public constructors for SolrIndexSearcher are now private which is an API change that has to be carefully considered ... on top of that, they don't even use the new IndexReder factory at all (they could get it by asking the SolrCore - it's a singleton).\n\n3) instead of adding a new indexReaderFactory element directly to the solrconfig.xml, it would probably make sense to get it when parsing the mainIndex/indexDefaults blocks.\n\n4) StandardIndexReaderFactory\" might be a better class name then \"DefaultIndexReaderFactory\"\n\n5) I don't think we really need IndexReaderFactory.DEFAULT (static final instances in interfaces never make sense to me, they are not part of the \"interface\")  ... just let SolrCore have a hardcoded instance of to use if it can't find one in the config.\n\n6) people should be able to specify configuration options for their factories ... either using an init(NamedLIst) method (like RequestHandlers) or using an init(Map<String,String>) method (like Caches, TokenFilters, etc...)\n\n7) catching \"Exception\" when calling newInstance() is too broad. explicitly catch only the exceptions that are expected and warrant using the default factory, otherwise you might silently ignore a really serious problem. ... although frankly, if someone configures an explict IndexReader, and it can't be instantiated, that should probably be SEVERE not just WARNING.\n\n\n "
        },
        {
            "author": "John Wang",
            "id": "comment-12499294",
            "date": "2007-05-26T09:00:48+0000",
            "content": "1) Sorry about this, my eclipse IDE showed 2 spaces. I will remember in the future.\n\n2) Sorry about this one as well, I changed them from public to private to do some testing and forgot to change them back. I have no problem with them being public. \n\n3) That sounds good. I just picked a spot in solrConfig.xml\n\n4) Sure.\n\n5) I think that is a coding style, but I am not religious about it.\n\n6) That is a great idea! I wanted to add this but wasn't sure how to do it.\n\n7) Ok.\n\nThanks for the code review!\n\n-John "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12499369",
            "date": "2007-05-27T00:04:26+0000",
            "content": "regarding the IndexReaderFactory.DEFAULT, i have  ahard time viewing it as good coding style at all ..but then again i've never seen any literature arguming for or against the concept, so i'm not sure what the \"pros\" are.  My personal list of \"cons\"...\na) violates the API / impl abstraction; interfaces shouldn't have to know about any of their Impls\nb) forces people who want to write their own impl to have the \"default\" class loaded at run time even if they don't use it.\nc) can't be changed; static variables in interfaces are be final (even if they aren't declared final) and can give the false impression to people reading an API that they can change it to something else.\n\nas far as #6 above (an init method)  SolrCore.parseListener is a good example of how to NamedList style initing (see the SolrEventListener API).  IndexSchema.readTokenFilterFactory is a good example of the simpler Map style initing.\n\nI saw an idea thrown around recently about making super interfaces for each of the two types of initialization so a lot of this code could be refactored away ... but that probably won't happen soon, and when/if it does it will be a big undertaking that will clean up everything, so in the mean time a cut/paste/tweak approach would be the best way to proceed "
        },
        {
            "author": "John Wang",
            "id": "comment-12499443",
            "date": "2007-05-27T20:05:30+0000",
            "content": "New patch incorporating Chris's comments 1-6.\n\nfor item 3) config is now placed under indexDefaults section. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12500217",
            "date": "2007-05-30T18:56:40+0000",
            "content": "Thanks John, I also have a need for this type of functionality.\nIn my case, I need to open open a MultiReader over several index segments.\n\nOne thing that crosses my mind is if some factories will need a little more context, such as what reader is being created (for what purpose).  For example, is it the main index reader, or is it for something like the spelling index, is it only for deleting in the IndexWriter, etc.\n\nWhen instantiating the factory, why not just call Config.newInstance(name) and let it throw an exception (or did you want to continue on after a failure to find or instantiate?) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12500219",
            "date": "2007-05-30T19:02:36+0000",
            "content": "Minor nit: is there a reason that IndexReaderFactory can't be a class instead of an interface?\nIt doesn't seem to be a likely candidate for multiple inheritance, and making it a class allows us to \"upgrade\" the interface in the future while providing a backward compatible default implementation for people who have already implemented it. "
        },
        {
            "author": "John Wang",
            "id": "comment-12500261",
            "date": "2007-05-30T23:55:22+0000",
            "content": "Hi Yonik:\n\n1) context in factory: I am not sure how the interface would look like, suggestions?\n\n2) I catch the exception to default to the normal IndexReader.open mechanism.\n\n3) I just picked it to be an interface, I think making it an abstract class is fine.\n\nthanks\n\n-John "
        },
        {
            "author": "John Wang",
            "id": "comment-12500262",
            "date": "2007-05-30T23:57:40+0000",
            "content": "My motivation in doing this is to create a plugin into solr for my project:\n\nwww.browseengine.com\nor\nbobo-browse.sourceforge.net\n\nwhich is a more extensive facetted search implementation. I need a special IndexReader to do the plugin.\n\nPlease take a look.\n\nThanks\n\n-John "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12503691",
            "date": "2007-06-12T00:42:41+0000",
            "content": "comments on the latest patch..\n\n1) SolrIndexSeacher constructor is still private\n\n2) i believe Yonik's question about calling Config.newInstance(name) was in realtion to initializing the Factory (you currently just use \"factory = clazz.newInstance()\")\n\n3) my comment about the mainIndex/indexDefaults blocks was that for many options they can be specified in the indexDefaults section, and overriden in the mainIndex section ... from what i can tell the current patch requires it to be in indexDefaults, ideally it would follow the same behavior as the other settings (mainIndex is used for the .. well, \"main index\" while indexDefaults also applies to other intermediate indexes ... down the road we may deprecate it, or expand it's usage for other types of micro indexes various pieces of functionality use like spellchecking) but for now any option relating to an indexreader/writer should support the \"dfaulting mechanism and work with both sections.\n\n\n(I'm not sure what type of API Yonik might have been thinking of for conveying context). "
        },
        {
            "author": "John Wang",
            "id": "comment-12503697",
            "date": "2007-06-12T00:59:47+0000",
            "content": "Are you looking at the right patch?\n\nFor 1) at least, they are public.\n\n2) I am using  Config.findClass\n\n3) I just picked one from your suggestions, mainIndex is fine.\n\nI feel I am jumping through quite a few arbitrary hoops just to contribute to an open source project, and this is wrong and defeats the whole purpose of the idea of open source.\n\nI think being more constructive and result oriented instead of being difficult and purist can benefit this project much more.  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12503959",
            "date": "2007-06-12T18:27:47+0000",
            "content": "1) i'm sorry, i transposed the lines in my mind when i was readingthe patch (you've made a private constructor public, not the otherway arround \u2013 my mistake)\n\n2) yes, you're using Config.findClass ... what yonik asked was if there was a particular reason not to use Config.newInstance(name) in the loadIndexReaderFactory ... there is a lot of duplicate code in that method (mainly exception handling) that Config.newInstance takes care of for you.\n\n3) I think you're missing my point about indexDefaults and mainIndex ... it's not a matter of just picking one, it's making it work with both so that a factory can be specified in the defaults for use anytime an IndexReader is opened, or from mainIndex awhen the \"main index\" is opened.  I just poked around and found that the relevant class is \"SolrIndexConfig\"  ... my suggestion was that this be where the IndexReaderFactory hook be so that it works the same way.\n\n\n\nI'm sorry if you feel like you are jumping through a lot of hoops ... it's not my intention to be difficult, i'm just making comments on the patch and asking general questions (not specificly directed at your patch) about how Solr as a project can best support the topic of this issue (hooks to allow custom code to create custom index readers).\n\nIf the patch you have works well for you that's great, but that doesn't mean it will work well for everyone, which is something committers have to keep that in mind ... making public API changes (including new config syntax and especially new plugin hooks) is a serious change to the project and has to be considered very carefully because we have to be able to support it for a very very long time.\n "
        },
        {
            "author": "John Wang",
            "id": "comment-12503999",
            "date": "2007-06-12T20:52:11+0000",
            "content": "My apologies for not being patient with this process.\nI have made the requested changes and submitted another patch.\n\nPlease let me know if these are the correct things to do.\n\nThanks\n\n-John "
        },
        {
            "author": "Kevin Osborn",
            "id": "comment-12549609",
            "date": "2007-12-07T23:47:03+0000",
            "content": "We used this patch with great success. We have a custom multiindex reader. This patch allowed us to just plug in our changes without resorting to hack up the base Solr code. "
        },
        {
            "author": "John Wang",
            "id": "comment-12549654",
            "date": "2007-12-08T05:43:48+0000",
            "content": "Thanks Kevin!\nPlease vote on this patch to have it committed.\n\n-John\n\n "
        },
        {
            "author": "John Wang",
            "id": "comment-12576693",
            "date": "2008-03-09T03:57:08+0000",
            "content": "What is the plan for this patch?\nWe have a couple of votes for it.\n\nThanks\n\n-John "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12578549",
            "date": "2008-03-14T00:22:40+0000",
            "content": "minimal set of changes i could make to previous patch so that: a) it compiles against the trunk r636903; b) it doesn't rely on the deprecated singletons (SolrConfig or SolrCore) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12578550",
            "date": "2008-03-14T00:23:41+0000",
            "content": "further refinement: made IndexReaderFactory an abstract class extending NamedListInitializedPlugin. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12578553",
            "date": "2008-03-14T00:32:48+0000",
            "content": "John: first off, i want to apologize for the extremely belated patch review ... I know i told you i'd try to look at this months ago, but ... yeah ... life tends to get in the way of patches.\n\non the whole, things seem pretty good \u2013 although you were still using an interface instead of an abstract class.  Having the main API for a type of plugin be an abstract class is an important mechanism to help future proof ourselves against possible additions we want to make the the plugin API in the future; if it's an interface we can't really change it once it's released (because we might break people Impls); if it's an abstract class, we can always provide a default impl for people.\n\nthe biggest concern i have about this patch at the moment is that there are no tests, and no example configs, so it's hard to be sure it's even working at all \n\nhere's what i see as the current todo list for this issue...\n\n 1) there are some legacy SolrIndexSearcher constructors that need to delegate to the SolrCore to get indexReaderFactory ... perhaps we should have a helper method that decides which SolrIndexConfig to use based on the \"name\" ?\n 2) we need tests showing custom IndexReaderFactory getting used (even if it's just a mock IndexReaderFactory thatsets a boolean to show it's being used) ... this will also serve as a test that config syntax works.\n 3) need commented out example of using a custom indexReaderFactory in example/solr/conf/solrconfig.xml\n 4) sanity check this against SOLR-465, make sure we aren't painting ourselves into a corner.\n 5) we should make IndexReaderFactory use the AbstractPluginLoader stuff and remove the guts of SolrIndexConfig.loadIndexReaderFactory.  It looks like we'll need to add a \"single item\" version of load to the AbstractPluginLoader to make that work well.\n\n#5 is something that can be done after this is committed, but 1-4 are pretty important.  If you can update the patch with some configs/tests i'll think about the legacy SolrIndexSearcher constructors and try to figure out a good solution for them "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12578554",
            "date": "2008-03-14T00:34:00+0000",
            "content": "Grrr.... reattaching with the right radio button this time.\n\n\nfurther refinement: made IndexReaderFactory an abstract class extending NamedListInitializedPlugin. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12578563",
            "date": "2008-03-14T01:40:50+0000",
            "content": "thinking about the legacy SolrIndexSearch constructors a bit more, and how SolrIndexConfig is used, i realized i few things...\n\n\n\twe can just always use the mainIndex config in those constructors\n\twe should really deprecate one of those constructors anyway\n\twe don't need to be quite as paranoid about getting the defaultIndexConfig if main isn't set \u2013 SolrIndexConfig takes care of that for us.\n\tthere were some tabs still left in the diff.\n\n "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12602836",
            "date": "2008-06-05T23:07:03+0000",
            "content": "Do we still want to target 1.3 here?  (Seems like there is a lot to do before it is commit-worthy, based on the comments) "
        },
        {
            "author": "John Wang",
            "id": "comment-12602844",
            "date": "2008-06-05T23:14:46+0000",
            "content": "Not sure what do you mean?It was supposed to be a simple addition.\n\n-John\n\n "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12602860",
            "date": "2008-06-05T23:40:30+0000",
            "content": "Hi John,\n\nHoss has marked the issue for 1.3, so it will be in the release.\n\n-Mike "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12605424",
            "date": "2008-06-16T22:15:13+0000",
            "content": "Hoss has marked the issue for 1.3, so it will be in the release.\n\nfor the record, i marked it as 1.3 because itwould be nice to see this in 1.3 ... but as i said in my 2008-03-13 comment: we need unit tests and example configuration before i'm willing to commit.\n "
        },
        {
            "author": "John Wang",
            "id": "comment-12605447",
            "date": "2008-06-16T22:43:45+0000",
            "content": "Sorry, I didn't see Hoss's earlier comments.\nThanks\n\n-John\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12620136",
            "date": "2008-08-06T04:45:21+0000",
            "content": "unmarking for 1.3 ... on hold until we have tests and/or more interest "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12625925",
            "date": "2008-08-27T00:55:21+0000",
            "content": "Okay, I am after SOLR-465, but since this guy hovers around it, so:\n\nNew patch with a test to be sure the config / alt factory is indeed used. Factory class loaded in SolrCore now with the pluginloader - added a new loadSingle method.  SolrIndexConfig really doesn't seem like the right place for that method that was there anyway...\n\nSo, in pushing SOLR-465, I'd like to do things pretty much as is over there (except use the pluginloader stuff) just before loading the reader factory, so that the correct Directory imp can be passed to the getReader method. So comments to how this is done here will direct what I attempt there.\n\nThoughts? Pick away please, I'd like to help out wrapping this and 465 soon. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12636924",
            "date": "2008-10-05T18:35:07+0000",
            "content": "Updates patch to trunk "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12637654",
            "date": "2008-10-07T21:06:06+0000",
            "content": "Adds a config option to turn on/off reopening readers. apache pork. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12647435",
            "date": "2008-11-13T22:33:42+0000",
            "content": "First attempt at getting this back up to trunk.\n\nShould probably merge the alt dir and alt reader test config files into one. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12670666",
            "date": "2009-02-05T08:46:42+0000",
            "content": "Mark, are you still interested in this issue? If not, should we mark this to 1.5? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12671675",
            "date": "2009-02-08T20:48:33+0000",
            "content": "Updated to trunk and now uses alt directory test config file rather than a new one. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12674126",
            "date": "2009-02-17T07:29:28+0000",
            "content": "Marked for 1.5 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12703637",
            "date": "2009-04-28T13:28:16+0000",
            "content": "to trunk "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12712746",
            "date": "2009-05-25T16:34:17+0000",
            "content": "This is a useful functionality when using FilterIndexReader or ParallelReader, +1 for adding it to core. I updated the patch to the latest trunk - all tests pass. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12713013",
            "date": "2009-05-26T14:00:57+0000",
            "content": "I'm going to commit this if there are no objections.\n\n\n\tMark\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12713022",
            "date": "2009-05-26T14:22:14+0000",
            "content": "Mark, this patch still has the code for SOLR-1184. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12713024",
            "date": "2009-05-26T14:28:26+0000",
            "content": "Yup I know - in the case that that goes in first, its easier to resolve (I had already put it here). And if it does not, I'll remove it before committing. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12713580",
            "date": "2009-05-27T14:14:37+0000",
            "content": "to trunk "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12716267",
            "date": "2009-06-04T13:03:44+0000",
            "content": "to trunk, remove non readonly reader factory method and fixes readOnly propagation in a couple spots. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12717278",
            "date": "2009-06-08T14:57:05+0000",
            "content": "Committed, thanks to all involved. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775498",
            "date": "2009-11-10T15:51:41+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}