{
    "id": "SOLR-609",
    "title": "SpellCheckComponent doesn't read default options from solrconfig.xml",
    "details": {
        "affect_versions": "1.3",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "solrconfig.xml contains :\n\n[...]\n<searchComponent name=\"ArtistSpellCheck\"\n\t\tclass=\"org.apache.solr.handler.component.SpellCheckComponent\">\n\t\t<lst name=\"defaults\">\n\t\t\t<!-- omp = Only More Popular -->\n\t\t\t<str name=\"spellcheck.onlyMorePopular\">false</str>\n\t\t\t<!-- exr = Extended Results -->\n\t\t\t<str name=\"spellcheck.extendedResults\">true</str>\n\t\t\t<!--  The number of suggestions to return -->\n\t\t\t<str name=\"spellcheck.count\">1</str>\n\t\t\t<!--  collate ther results for providing an easier 'correctly spelt query' -->\n\t\t\t<str name=\"spellcheck.collate\">true</str>\n\t\t</lst>\n[... all default options after this]\n\nconfirmed options .count , collate , extendedResults set in solrconfig.xml take no effect on the query . They work as intended if added to the URL.",
    "attachments": {
        "SOLR-609.patch": "https://issues.apache.org/jira/secure/attachment/12384813/SOLR-609.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12608667",
            "date": "2008-06-27T06:16:16+0000",
            "content": "Constructs a defaults SolrParams in the init method which is used for getting default value specified in solrconfig.xml for onlyMorePopular, count, collate and extendedResults parameters. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12608756",
            "date": "2008-06-27T12:43:16+0000",
            "content": "Committed revision 672257.\n\nI guess I assumed Solr's RequestHandler default init magic worked for components too, but now looking at them more deeply, I see most don't have defaults. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12608760",
            "date": "2008-06-27T12:53:59+0000",
            "content": "Actually, now that I think about it, another way would have been to add these default params to the request handler which is using SpellCheckComponent. "
        },
        {
            "author": "Beto Meijome",
            "id": "comment-12609143",
            "date": "2008-06-30T00:45:48+0000",
            "content": "Actually, now that I think about it, another way would have been to add these default params to the request handler which is using SpellCheckComponent.\n\nTrue - it would help if one wanted to run the same spellchecker with different defaults and different query handlers , ie, different defaults for spellchecker if using qt=standard vs qt=dismax. \n\nIn your implementation, we'd have to have a different spellchecker component handler defined, which is fine in most cases, at least for me... Would it be a problem having different spellchecker handlers pointing to the same data directory  ? \n\nthanks!\nB "
        },
        {
            "author": "Beto Meijome",
            "id": "comment-12609148",
            "date": "2008-06-30T02:48:42+0000",
            "content": "Confirmed working ok.\n\nTo make it clear, the 'spellcheck=true' param to enable the spellchecker by default has to be added, in solrconfig.xml , to the query handler section, not the spell checker itself - i may update the wiki to reflect this. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12609300",
            "date": "2008-06-30T17:38:32+0000",
            "content": "\nActually, now that I think about it, another way would have been to add these default params to the request handler which is using SpellCheckComponent.\n\nYeah, this probably makes sense.  We could roll this one back.  I haven't tested it, but I'm thinking it is just a documentation issue, then, right?  As the ReqHandler will take care of the default handling stuff. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12609306",
            "date": "2008-06-30T17:48:00+0000",
            "content": "Reopen, change to not use defaults, but to setup defaults on the ReqHandler "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12609312",
            "date": "2008-06-30T17:59:44+0000",
            "content": "Yeah, this probably makes sense. We could roll this one back. I haven't tested it, but I'm thinking it is just a documentation issue, then, right? As the ReqHandler will take care of the default handling stuff.\n\nYes, I think we should do that. No need to rewrite the defaults/appends/invariants parameter handling in this component which is taken care of by request handlers. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12609314",
            "date": "2008-06-30T18:04:38+0000",
            "content": "OK, I committed this, give it a try. "
        },
        {
            "author": "Ronald Braun",
            "id": "comment-12610634",
            "date": "2008-07-04T18:02:09+0000",
            "content": "Is the accuracy (or sp.query.accuracy) parameter from SpellCheckerRequestHandler also supported by SpellCheckComponent (there is no documentation about it on the wiki)?  If so, presumably it is handled by this same mechanism, but thought I'd throw it out there. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12610638",
            "date": "2008-07-04T18:27:20+0000",
            "content": "The accuracy request parameter is not supported by this component. The request handler accepts the accuracy as a request parameter and calls Lucene SpellChecker.setAccuracy before getting the suggestion. However, this is neither thread-safe nor can we guarantee that the accuracy is actually enforced for the suggestion.\n\nHowever, you can set the accuracy as a configuration parameter just like you set the spellCheckIndexDir. I shall update the wiki documentation with this bit. "
        }
    ]
}