{
    "id": "LUCENE-5207",
    "title": "lucene expressions module",
    "details": {
        "components": [],
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "New Feature",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Expressions are geared at defining an alternative ranking function (e.g. incorporating the text relevance score and other field values/ranking\nsignals). So they are conceptually much more like ElasticSearch's scripting support (http://www.elasticsearch.org/guide/reference/modules/scripting/) than solr's function queries.\n\nSome additional notes:\n\n\tIn addition to referring to other fields, they can also refer to other expressions, so they can be used as \"computed fields\".\n\tYou can rank documents easily by multiple expressions (its a SortField at the end), e.g. Sort by year descending, then some function of score price and time ascending.\n\tThe provided javascript expression syntax is much more efficient than using a scripting engine, because it does not have dynamic typing (compiles to .class files that work on doubles). Performance is similar to writing a custom FieldComparator yourself, but much easier to do.\n\tWe have solr integration to contribute in the future, but this is just the standalone lucene part as a start. Since lucene has no schema, it includes an implementation of Bindings (SimpleBindings) that maps variable names to SortField's or other expressions.",
    "attachments": {
        "LUCENE-5207.patch": "https://issues.apache.org/jira/secure/attachment/12602907/LUCENE-5207.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-09-12T23:33:56+0000",
            "content": "First patch.  It still needs more documentation and tests, but the core APIs are there.\n\nNote there is generated code in the patch, so it is a little bloated. ",
            "author": "Ryan Ernst",
            "id": "comment-13766013"
        },
        {
            "date": "2013-09-12T23:38:06+0000",
            "content": "Here are some examples of how the API works:\n\n\n// compile an expression:\nExpression expr = JavascriptCompiler.compile(\"sqrt(_score) + ln(popularity)\");\n  \n// SimpleBindings just maps variables to SortField instances\nSimpleBindings bindings = new SimpleBindings();    \nbindings.add(new SortField(\"_score\", SortField.Type.SCORE));\nbindings.add(new SortField(\"popularity\", SortField.Type.INT));\n \n// create a sort field and sort by it (reverse order)\nSort sort = new Sort(expr.getSortField(bindings, true));\nQuery query = new TermQuery(new Term(\"body\", \"contents\"));\nsearcher.search(query, null, 10, sort);\n\n ",
            "author": "Ryan Ernst",
            "id": "comment-13766019"
        },
        {
            "date": "2013-09-12T23:38:14+0000",
            "content": "Wow, this sounds awesome!\n\nSo, you can use an arbitrary JavaScript expression to combine DV fields and score into a new dynamic field for sorting?\n\nE.g., a blended relevance + recency sort (which I do w/ a custom comparator now on http://jirasearch.mikemccandless.com). ",
            "author": "Michael McCandless",
            "id": "comment-13766021"
        },
        {
            "date": "2013-09-13T00:26:59+0000",
            "content": "Hi, very cool!\n\nI like the elegant parser!\n\nIts also the correct way to do the dynamic classes: 1 class per classloader, so it can be unloaded easily. The JVM does the same for reflection speedups (it creates stubs for Method#invoke calls, one stub per classloader). The \"Loader\" class is already \"policeman-certified\" and used by my code, too.\n\nI am not happy about the various raw \"signatures\" in binary form. I would rewrite JavascriptFunction to take a java.lang.reflect.Method objects and use http://asm.ow2.org/asm40/javadoc/user/org/objectweb/asm/commons/Method.html#getMethod(java.lang.reflect.Method) or http://asm.ow2.org/asm40/javadoc/user/org/objectweb/asm/Type.html#getMethodDescriptor(java.lang.reflect.Method) to get the signature and argument count. The other hardcoded \"L/foo/bar\" stuff should be rewritten to use http://asm.ow2.org/asm40/javadoc/user/org/objectweb/asm/Type.html#getDescriptor(java.lang.Class). I can help with that. By using real reflected types we have the safety that all methods are syntactically correct and checked at runtime/compile time.\n\nI think we should create a heavy committing branch. I would help, this is too cool. ",
            "author": "Uwe Schindler",
            "id": "comment-13766068"
        },
        {
            "date": "2013-09-13T03:11:19+0000",
            "content": "Commit 1522767 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522767 ]\n\nLUCENE-5207: initial patch from ryan ",
            "author": "ASF subversion and git services",
            "id": "comment-13766198"
        },
        {
            "date": "2013-09-13T03:14:47+0000",
            "content": "\nI am not happy about the various raw \"signatures\" in binary form.\n\n+1, I am not either, lets fix that. Otherwise we rely completely on tests to ensure e.g. every function is working and so on.\n\n\nI think we should create a heavy committing branch.\n\nI created a branch here: https://svn.apache.org/repos/asf/lucene/dev/branches/lucene5207 ",
            "author": "Robert Muir",
            "id": "comment-13766200"
        },
        {
            "date": "2013-09-13T03:21:55+0000",
            "content": "Commit 1522768 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522768 ]\n\nLUCENE-5207: setup svn:ignores and so on ",
            "author": "ASF subversion and git services",
            "id": "comment-13766206"
        },
        {
            "date": "2013-09-13T03:23:10+0000",
            "content": "Commit 1522769 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522769 ]\n\nLUCENE-5207: eol-style native ",
            "author": "ASF subversion and git services",
            "id": "comment-13766207"
        },
        {
            "date": "2013-09-13T03:28:55+0000",
            "content": "Commit 1522770 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522770 ]\n\nLUCENE-5207: replaceregexp tabs with spaces in generated parser ",
            "author": "ASF subversion and git services",
            "id": "comment-13766209"
        },
        {
            "date": "2013-09-13T03:33:00+0000",
            "content": "Commit 1522771 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522771 ]\n\nLUCENE-5207: only depends on antlr-runtime ",
            "author": "ASF subversion and git services",
            "id": "comment-13766212"
        },
        {
            "date": "2013-09-13T03:41:44+0000",
            "content": "Commit 1522772 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522772 ]\n\nLUCENE-5207: fix broken javadoc link ",
            "author": "ASF subversion and git services",
            "id": "comment-13766215"
        },
        {
            "date": "2013-09-13T05:21:29+0000",
            "content": "Commit 1522781 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522781 ]\n\nLUCENE-5207: minor docs and API cleanups ",
            "author": "ASF subversion and git services",
            "id": "comment-13766250"
        },
        {
            "date": "2013-09-13T05:41:41+0000",
            "content": "Commit 1522783 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522783 ]\n\nLUCENE-5207: sync up syntax docs ",
            "author": "ASF subversion and git services",
            "id": "comment-13766255"
        },
        {
            "date": "2013-09-13T06:33:34+0000",
            "content": "Commit 1522788 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522788 ]\n\nLUCENE-5207: maven/idea config ",
            "author": "ASF subversion and git services",
            "id": "comment-13766280"
        },
        {
            "date": "2013-09-13T07:11:09+0000",
            "content": "Thanks Robert, I will refactor the JavaScriptFunctions class as a first step! ",
            "author": "Uwe Schindler",
            "id": "comment-13766294"
        },
        {
            "date": "2013-09-13T07:18:13+0000",
            "content": "Commit 1522798 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522798 ]\n\nLUCENE-5207: simplify tests ",
            "author": "ASF subversion and git services",
            "id": "comment-13766297"
        },
        {
            "date": "2013-09-13T08:00:48+0000",
            "content": "Commit 1522805 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522805 ]\n\nLUCENE-5207: Cleanup JavascriptFunction class to use reflection and type-safe checking (to be extended) ",
            "author": "ASF subversion and git services",
            "id": "comment-13766318"
        },
        {
            "date": "2013-09-13T08:37:12+0000",
            "content": "Commit 1522813 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522813 ]\n\nLUCENE-5207: More strict checks for invalid method signatures (currently only double is accepted as parameter or return type). The method must be static, too. ",
            "author": "ASF subversion and git services",
            "id": "comment-13766337"
        },
        {
            "date": "2013-09-13T09:04:47+0000",
            "content": "Commit 1522822 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522822 ]\n\nLUCENE-5207: Add missing test for atan2 including funny values (+/-0). The original patch had a bug with this method, because the arity was wrong. ",
            "author": "ASF subversion and git services",
            "id": "comment-13766346"
        },
        {
            "date": "2013-09-13T09:07:57+0000",
            "content": "Currently the JavascriptFunction class is very inflexible and hard to extend with custom new methods (maybe needed for Solr).\n\nI propose to make the javascript name (\"call\") and the mapped Java method signature (\"method\") be a resource file. We can use the forbidden-apis signature parser to lookup the methods. ",
            "author": "Uwe Schindler",
            "id": "comment-13766347"
        },
        {
            "date": "2013-09-13T09:52:32+0000",
            "content": "Commit 1522839 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522839 ]\n\nLUCENE-5207: Simplifications ",
            "author": "ASF subversion and git services",
            "id": "comment-13766365"
        },
        {
            "date": "2013-09-13T10:21:41+0000",
            "content": "Commit 1522850 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522850 ]\n\nLUCENE-5207: Remove the crazy internal signature notation and use ASM Type to generate them ",
            "author": "ASF subversion and git services",
            "id": "comment-13766384"
        },
        {
            "date": "2013-09-13T10:45:38+0000",
            "content": "Commit 1522858 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522858 ]\n\nLUCENE-5207: Remove classloader constructor, because it makes no sense to use any other classloader ",
            "author": "ASF subversion and git services",
            "id": "comment-13766392"
        },
        {
            "date": "2013-09-13T11:22:43+0000",
            "content": "Commit 1522873 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522873 ]\n\nLUCENE-5207: Create the class name of generated classes from the parsed text ",
            "author": "ASF subversion and git services",
            "id": "comment-13766411"
        },
        {
            "date": "2013-09-13T11:27:27+0000",
            "content": "Commit 1522877 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522877 ]\n\nLUCENE-5207: Limit the maximum class name length ",
            "author": "ASF subversion and git services",
            "id": "comment-13766416"
        },
        {
            "date": "2013-09-13T12:06:27+0000",
            "content": "Commit 1522888 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522888 ]\n\nLUCENE-5207: Remove stupidity...  ",
            "author": "ASF subversion and git services",
            "id": "comment-13766428"
        },
        {
            "date": "2013-09-13T12:54:31+0000",
            "content": "Commit 1522907 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522907 ]\n\nLUCENE-5207: Revert the dynamic class name. Its much better to use the \"source file attribute\". The class name is now constant (as every class gets own class loader) and looks like an internal class of the compiler. The stack trace is then looking like:\nThrowable #1: java.lang.IllegalArgumentException: foobar\n       at __randomizedtesting.SeedInfo.seed([3968E8DD2901F71C:4292B9595A397818]:0)\n       at org.apache.lucene.util.MathUtil.log(MathUtil.java:51)\n       at org.apache.lucene.expressions.js.JavascriptCompiler$CompiledExpression.evaluate(logn(2, 0))\n       at org.apache.lucene.expressions.js.TestJavascriptFunction.assertEvaluatesTo(TestJavascriptFunction.java:27)\n       at org.apache.lucene.expressions.js.TestJavascriptFunction.testLognMethod(TestJavascriptFunction.java:178)\n       at java.lang.Thread.run(Thread.java:724) ",
            "author": "ASF subversion and git services",
            "id": "comment-13766454"
        },
        {
            "date": "2013-09-13T13:40:58+0000",
            "content": "Commit 1522925 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522925 ]\n\nLUCENE-5207: Add a unused test method to make sure that if we change the FunctionValues interface we get compile error. Also make the class format version a constant for easy maintenance (once we backport) ",
            "author": "ASF subversion and git services",
            "id": "comment-13766482"
        },
        {
            "date": "2013-09-13T15:10:25+0000",
            "content": "Commit 1522967 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522967 ]\n\nLUCENE-5207: Remove classloader field (is not needed, we call only once) ",
            "author": "ASF subversion and git services",
            "id": "comment-13766534"
        },
        {
            "date": "2013-09-13T15:22:42+0000",
            "content": "Commit 1522972 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1522972 ]\n\nLUCENE-5207: Refactor compiler to use final fields and simplify initialization ",
            "author": "ASF subversion and git services",
            "id": "comment-13766545"
        },
        {
            "date": "2013-09-13T17:02:55+0000",
            "content": "Commit 1523016 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523016 ]\n\nLUCENE-5207: Minor cleanups, also mark all generated methods as SYNTHETIC because there exists no source code ",
            "author": "ASF subversion and git services",
            "id": "comment-13766644"
        },
        {
            "date": "2013-09-13T18:18:03+0000",
            "content": "Commit 1523042 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523042 ]\n\nLUCENE-5207: Update to antlr 3.5 (which produces no warnings while compiling with java 7). Also fix the regen-macro to handle windows file paths while replacing ",
            "author": "ASF subversion and git services",
            "id": "comment-13766751"
        },
        {
            "date": "2013-09-13T18:22:20+0000",
            "content": "Commit 1523046 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523046 ]\n\nLUCENE-5207: replace tabs by 2 spaces now. antlr 3.5 produces tabs consistently now, so we can replace them (no mixed tabs anymore) ",
            "author": "ASF subversion and git services",
            "id": "comment-13766757"
        },
        {
            "date": "2013-09-13T18:22:59+0000",
            "content": "Commit 1523047 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523047 ]\n\nLUCENE-5207: upgrade checksum/maven ",
            "author": "ASF subversion and git services",
            "id": "comment-13766760"
        },
        {
            "date": "2013-09-13T18:40:43+0000",
            "content": "Commit 1523057 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523057 ]\n\nLUCENE-5207: try a hack around antlr hashmap bugs ",
            "author": "ASF subversion and git services",
            "id": "comment-13766785"
        },
        {
            "date": "2013-09-13T18:48:59+0000",
            "content": "Commit 1523059 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523059 ]\n\nLUCENE-5207: enforce encoding and locale (for paranoia reasons) ",
            "author": "ASF subversion and git services",
            "id": "comment-13766797"
        },
        {
            "date": "2013-09-13T20:04:16+0000",
            "content": "Commit 1523075 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523075 ]\n\nLUCENE-5207: add comment that the regen hack does not work in Java 8 ",
            "author": "ASF subversion and git services",
            "id": "comment-13766877"
        },
        {
            "date": "2013-09-13T21:38:38+0000",
            "content": "Commit 1523114 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523114 ]\n\nLUCENE-5207: load available javascript functions from resource file (properties) ",
            "author": "ASF subversion and git services",
            "id": "comment-13766996"
        },
        {
            "date": "2013-09-14T10:20:49+0000",
            "content": "Commit 1523204 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523204 ]\n\nLUCENE-5207: Throw correct exception in JavascriptFunction ctor ",
            "author": "ASF subversion and git services",
            "id": "comment-13767436"
        },
        {
            "date": "2013-09-14T11:40:50+0000",
            "content": "I think the branch is now in a quite good state.\n\nI thought a little bit about extensibility of Javascript functions: The current code is more or less \"hardcoded\" (although its configureable by a resource file in the JAR). But this is not extensible by users (all private, you have to rebuild JAR).\n\nMy idea would be to extend Bindings to also allow to get \"methods\". So one could register a java.lang.reflect.Method binding. The code would check that it only accepts \"double\" as parameters and returns a \"double\". Solr could then use this to register stuff like \"haversine\". The compiler would be extended to first try to get a binding for the function name (if it is a Method instance) otherwise it falls back to the builtins.\n\nAnother thing to discuss (which is not yet a problem): If we allow function binding and e.g. a Solr contrib from SolrResourceLoader would register a function, the generated bytecode would fail to find the function: This is because we use the classloader of the JavaScript module not the one of the caller. We should either make this configureable or (I like this better): If somebody registers a custom function we should include this into the classloader, so the custom function impl class can be found by the JVM:\n\n\tthe classloader of the custom function must be at least a child classloader of the function module, otherwise it won't work at all. If all registered custom functions don't have a common classloader hierarchy, throw exception.\n\tthe child classloader check function is already part of Lucene, it is used when loading SPIs.\n\n\n\nIf we make the classloader configureable (like it was in the original patch), we must also check that our own classloader is a parent of the given one. ",
            "author": "Uwe Schindler",
            "id": "comment-13767464"
        },
        {
            "date": "2013-09-14T16:53:04+0000",
            "content": "Uwe: can we defer that function stuff to another issue?\n\nThe whole discussion about classloader stuff doesnt make a lot of sense to me. Today Functions are implemented with just normal invokeVirtual. Bindings aren't used until you actually run the query... Today the way an expression interacts with the Bindings is not with invokeVirtual, its just another valuesource coming in to its array at runtime. \n\nSo I dont think custom functions should go thru Bindings, its totally unrelated to how that class works at all. I also don't want to make the API very confusing just because solr does crazy things with classloaders quite yet: I think this is very close to usable for lucene users as-is. ",
            "author": "Robert Muir",
            "id": "comment-13767523"
        },
        {
            "date": "2013-09-14T17:22:01+0000",
            "content": "Commit 1523279 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523279 ]\n\nLUCENE-5207: add resources folder here ",
            "author": "ASF subversion and git services",
            "id": "comment-13767530"
        },
        {
            "date": "2013-09-14T17:50:21+0000",
            "content": "\nI thought a little bit about extensibility of Javascript functions: The current code is more or less \"hardcoded\" (although its configureable by a resource file in the JAR). But this is not extensible by users (all private, you have to rebuild JAR).\n\nThats not exactly true. Someone can make plug in their own compiler that compiles String->Expression in some other way.\n\nIf we want to make this particular one more extensible, then we should give it ctors or protected methods to do that. \n\nThis is easy to do and does not involve classloader hell. Doing functions through Bindings would be both slow and wrong. ",
            "author": "Robert Muir",
            "id": "comment-13767536"
        },
        {
            "date": "2013-09-14T18:18:41+0000",
            "content": "Hi Robert,\nsorry for beeing a little bit confusing:\nThe two issues Classloader and Functions extensibility don't really have something to do, they are mostly separate. With the current code and private ctors and static functions, there is indeed no need for a custom classloader. This is why I argued to remove it.\n\nThe classloader also does not have anything to do with Bindings. The bindings was just an idea how to make it \"easy\" for the user to register own functions in a non-static way. I was under the impression, that the bindings are availabe while compiling. I don't want it \"dynamic\" - I wanted it still statically compiled. The idea was to add the reflected Method to the bindings, so when compiling the bytecode the method can be used (not per call). After reviewing the code again, I can see that the bindings are not available at the time of compiling - that was the misunderstanding, sorry (but it could still be fixed to support this). It just looked elegant to treat a function like a binding.\n\nThe current patch is fine, let's commit it and do all other stuff like extending custom functions later. For that we have to make the whole JavascriptFunction interface public and non-static (currently its a singleton-like factory). But this can be done in another issue.\n\nThe classloader problem is something that comes into the game when users are able to register own functions. The problem here is that the classloader used to load the ASM-generated class has the one of lucene-core as parent (because we use the compiler's own classloader: this.getClass().getClassloader()). This classloader does not necessarily have access to anything in a different classloader (e.g. a plugin in ElasticSearch or Solr).\n\nFinally its simple: Once we allow foreign, user-defined functions, we must add the Classloader argument to the compiler again, otherwise you cannot register methods from classes of foreign classloaders. An alternative would be to let the compiler figure out himself by passing a list of java.lang.reflect.Method and it chooses the correct classloader automatically. ",
            "author": "Uwe Schindler",
            "id": "comment-13767538"
        },
        {
            "date": "2013-09-14T18:29:55+0000",
            "content": "Commit 1523286 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523286 ]\n\nLUCENE-5207: make functions pluggable ",
            "author": "ASF subversion and git services",
            "id": "comment-13767539"
        },
        {
            "date": "2013-09-14T18:33:17+0000",
            "content": "Hi Uwe: please see my commit (we can revert it, if we have to, but i think its an easy step).\n\nThe idea is: JavascriptFunction as a class provides nothing really, it is nothing more than a Method with some extra checks in its ctor.\n\nSo i dont think this class need exist at all, and the default list is nothing but a unmodifiable Map<String,Method>.\n\nSo in addition to:\n\npublic static Expression compile(String sourceText);\n\n\n\nI added:\n\n  public static Expression compile(String sourceText, Map<String,Method> functions) throws ParseException {\n    for (Method m : functions.values()) {\n      checkFunction(m);\n    }\n    return new JavascriptCompiler(sourceText, functions).compileExpression();\n  }\n\n\n\nI will add some tests, but this is very simple and allows someone to expose whatever methods they want, not just add but also remove  ",
            "author": "Robert Muir",
            "id": "comment-13767540"
        },
        {
            "date": "2013-09-14T18:51:21+0000",
            "content": "\nFinally its simple: Once we allow foreign, user-defined functions, we must add the Classloader argument to the compiler again, otherwise you cannot register methods from classes of foreign classloaders. An alternative would be to let the compiler figure out himself by passing a list of java.lang.reflect.Method and it chooses the correct classloader automatically.\n\nI think we can add this to the second method signature? ",
            "author": "Robert Muir",
            "id": "comment-13767542"
        },
        {
            "date": "2013-09-14T19:12:24+0000",
            "content": "Commit 1523296 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523296 ]\n\nLUCENE-5207: add some simple tests for custom functions ",
            "author": "ASF subversion and git services",
            "id": "comment-13767544"
        },
        {
            "date": "2013-09-14T19:22:24+0000",
            "content": "Commit 1523297 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523297 ]\n\nLUCENE-5207: allow specifying classloader when using custom functions ",
            "author": "ASF subversion and git services",
            "id": "comment-13767545"
        },
        {
            "date": "2013-09-14T19:33:58+0000",
            "content": "Commit 1523300 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523300 ]\n\nLUCENE-5207: add some checks and tests for illegal stuff ",
            "author": "ASF subversion and git services",
            "id": "comment-13767550"
        },
        {
            "date": "2013-09-14T19:40:21+0000",
            "content": "Commit 1523301 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523301 ]\n\nLUCENE-5207: check the class too ",
            "author": "ASF subversion and git services",
            "id": "comment-13767554"
        },
        {
            "date": "2013-09-14T19:40:59+0000",
            "content": "Commit 1523302 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523302 ]\n\nLUCENE-5207: fix oops in test ",
            "author": "ASF subversion and git services",
            "id": "comment-13767555"
        },
        {
            "date": "2013-09-14T20:31:54+0000",
            "content": "Commit 1523315 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523315 ]\n\nLUCENE-5207: Add checks for classloader, so all methods in the Map are accessible ",
            "author": "ASF subversion and git services",
            "id": "comment-13767569"
        },
        {
            "date": "2013-09-14T21:03:45+0000",
            "content": "Commit 1523324 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523324 ]\n\nLUCENE-5207: Remove useless check ",
            "author": "ASF subversion and git services",
            "id": "comment-13767581"
        },
        {
            "date": "2013-09-14T22:14:22+0000",
            "content": "Commit 1523339 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523339 ]\n\nLUCENE-5207: add test for huge amounts of variables ",
            "author": "ASF subversion and git services",
            "id": "comment-13767599"
        },
        {
            "date": "2013-09-14T22:21:32+0000",
            "content": "Commit 1523341 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523341 ]\n\nLUCENE-5207: Start to rewrite the bytecode generator using GeneratorAdapter ",
            "author": "ASF subversion and git services",
            "id": "comment-13767602"
        },
        {
            "date": "2013-09-14T22:28:36+0000",
            "content": "Commit 1523345 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523345 ]\n\nLUCENE-5207: update maven config ",
            "author": "ASF subversion and git services",
            "id": "comment-13767604"
        },
        {
            "date": "2013-09-14T22:48:20+0000",
            "content": "Commit 1523350 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523350 ]\n\nLUCENE-5207: add test ",
            "author": "ASF subversion and git services",
            "id": "comment-13767609"
        },
        {
            "date": "2013-09-14T23:13:26+0000",
            "content": "Commit 1523351 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523351 ]\n\nLUCENE-5207: more parser tests ",
            "author": "ASF subversion and git services",
            "id": "comment-13767613"
        },
        {
            "date": "2013-09-14T23:33:54+0000",
            "content": "Commit 1523357 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523357 ]\n\nLUCENE-5207: more tests ",
            "author": "ASF subversion and git services",
            "id": "comment-13767618"
        },
        {
            "date": "2013-09-14T23:39:06+0000",
            "content": "Commit 1523358 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523358 ]\n\nLUCENE-5207: More simplifications ",
            "author": "ASF subversion and git services",
            "id": "comment-13767619"
        },
        {
            "date": "2013-09-14T23:45:44+0000",
            "content": "Commit 1523360 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523360 ]\n\nLUCENE-5207: Thanks Robert for help with this opcode ",
            "author": "ASF subversion and git services",
            "id": "comment-13767621"
        },
        {
            "date": "2013-09-14T23:54:14+0000",
            "content": "Commit 1523361 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523361 ]\n\nLUCENE-5207: Simpler without cast ",
            "author": "ASF subversion and git services",
            "id": "comment-13767624"
        },
        {
            "date": "2013-09-15T00:08:37+0000",
            "content": "Commit 1523362 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523362 ]\n\nLUCENE-5207: Rename method, use a switch statement again ",
            "author": "ASF subversion and git services",
            "id": "comment-13767626"
        },
        {
            "date": "2013-09-15T00:11:29+0000",
            "content": "Commit 1523364 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523364 ]\n\nLUCENE-5207: Rename field ",
            "author": "ASF subversion and git services",
            "id": "comment-13767627"
        },
        {
            "date": "2013-09-15T00:48:45+0000",
            "content": "Commit 1523375 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523375 ]\n\nLUCENE-5207: Simplify the comparisons ",
            "author": "ASF subversion and git services",
            "id": "comment-13767634"
        },
        {
            "date": "2013-09-15T01:19:29+0000",
            "content": "Commit 1523382 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523382 ]\n\nLUCENE-5207: simplify some of operators ",
            "author": "ASF subversion and git services",
            "id": "comment-13767642"
        },
        {
            "date": "2013-09-15T01:50:05+0000",
            "content": "Commit 1523385 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523385 ]\n\nLUCENE-5207: javadocs ",
            "author": "ASF subversion and git services",
            "id": "comment-13767648"
        },
        {
            "date": "2013-09-15T03:36:50+0000",
            "content": "Commit 1523393 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523393 ]\n\nLUCENE-5207: add test ",
            "author": "ASF subversion and git services",
            "id": "comment-13767671"
        },
        {
            "date": "2013-09-15T03:42:17+0000",
            "content": "Commit 1523394 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523394 ]\n\nLUCENE-5207: simplify ",
            "author": "ASF subversion and git services",
            "id": "comment-13767672"
        },
        {
            "date": "2013-09-15T03:43:18+0000",
            "content": "Commit 1523395 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523395 ]\n\nLUCENE-5207: didnt mean to change unrelated test... ",
            "author": "ASF subversion and git services",
            "id": "comment-13767674"
        },
        {
            "date": "2013-09-15T04:09:32+0000",
            "content": "Here's an applyable patch for review showing differences between branch and trunk.\n\nI excluded generated code, so run 'ant regenerate' first. ",
            "author": "Robert Muir",
            "id": "comment-13767679"
        },
        {
            "date": "2013-09-15T08:53:32+0000",
            "content": "Commit 1523419 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523419 ]\n\nLUCENE-5207: Add a test which verifies that the classloader restrictions work correctly ",
            "author": "ASF subversion and git services",
            "id": "comment-13767732"
        },
        {
            "date": "2013-09-15T09:06:01+0000",
            "content": "Commit 1523421 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523421 ]\n\nLUCENE-5207: Actually test that it works with mixed classloaders ",
            "author": "ASF subversion and git services",
            "id": "comment-13767733"
        },
        {
            "date": "2013-09-15T10:39:12+0000",
            "content": "Commit 1523426 from Uwe Schindler in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523426 ]\n\nLUCENE-5207: Better classloade test: It now uses a completely synthetic class, so its 100% unreachable from main classloader. Also remove the static Opcodes imports ",
            "author": "ASF subversion and git services",
            "id": "comment-13767765"
        },
        {
            "date": "2013-09-15T16:06:36+0000",
            "content": "+1 to merge & commit this to trunk and 4.x. In the last 3 commits to the branch I just added new tests, so no functional changes anymore.\n\nRobert: If you create a new patch for reference, it would be good. Otherwise do merge --reintegrate, commit, and delete the branch! ",
            "author": "Uwe Schindler",
            "id": "comment-13767825"
        },
        {
            "date": "2013-09-15T16:43:49+0000",
            "content": "Yes, I'll merge (because I am not totally sure about the python script really showing all the differences in various config stuff).\n\nHere is the updated patch from the script though. ",
            "author": "Robert Muir",
            "id": "comment-13767842"
        },
        {
            "date": "2013-09-15T17:10:27+0000",
            "content": "Thanks! ",
            "author": "Uwe Schindler",
            "id": "comment-13767851"
        },
        {
            "date": "2013-09-15T17:15:04+0000",
            "content": "Commit 1523462 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1523462 ]\n\nLUCENE-5207: lucene expressions module ",
            "author": "ASF subversion and git services",
            "id": "comment-13767855"
        },
        {
            "date": "2013-09-15T17:24:06+0000",
            "content": "Commit 1523464 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1523464 ]\n\nLUCENE-5207: Fix a bug in the test and add final to the classloader ",
            "author": "ASF subversion and git services",
            "id": "comment-13767858"
        },
        {
            "date": "2013-09-15T18:14:30+0000",
            "content": "Commit 1523470 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1523470 ]\n\nLUCENE-5207: lucene expressions module ",
            "author": "ASF subversion and git services",
            "id": "comment-13767869"
        },
        {
            "date": "2013-09-15T18:17:14+0000",
            "content": "Commit 1523471 from Robert Muir in branch 'dev/branches/lucene5207'\n[ https://svn.apache.org/r1523471 ]\n\nLUCENE-5207: remove branch ",
            "author": "ASF subversion and git services",
            "id": "comment-13767871"
        },
        {
            "date": "2013-09-15T18:17:49+0000",
            "content": "Thanks Ryan! ",
            "author": "Robert Muir",
            "id": "comment-13767872"
        },
        {
            "date": "2013-09-19T23:22:16+0000",
            "content": "Commit 1524859 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1524859 ]\n\nLUCENE-5207: Intellij config for the new expressions module: add Ant support and whole-module JUnit run configuration ",
            "author": "ASF subversion and git services",
            "id": "comment-13772458"
        },
        {
            "date": "2013-09-19T23:24:21+0000",
            "content": "Commit 1524860 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1524860 ]\n\nLUCENE-5207: Intellij config for the new expressions module: add Ant support and whole-module JUnit run configuration (merged trunk r1524859) ",
            "author": "ASF subversion and git services",
            "id": "comment-13772461"
        },
        {
            "date": "2013-09-21T03:42:53+0000",
            "content": "Commit 1525194 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1525194 ]\n\nLUCENE-5207: Add a test that checks if the stack trace of an exception thrown from a Javascript function contains the original expression source code as the \"filename\". ",
            "author": "ASF subversion and git services",
            "id": "comment-13773710"
        },
        {
            "date": "2013-09-21T03:44:46+0000",
            "content": "Commit 1525195 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1525195 ]\n\nMerged revision(s) 1525194 from lucene/dev/trunk:\nLUCENE-5207: Add a test that checks if the stack trace of an exception thrown from a Javascript function contains the original expression source code as the \"filename\". ",
            "author": "ASF subversion and git services",
            "id": "comment-13773712"
        },
        {
            "date": "2014-01-08T12:00:49+0000",
            "content": "Commit 1556508 from Michael McCandless in branch 'dev/branches/lucene5376'\n[ https://svn.apache.org/r1556508 ]\n\nLUCENE-5207, LUCENE-5376: add expressions support to lucene server, so you can define a virtual field from any JS expression and then sort by that field or retrieve its values for all hits ",
            "author": "ASF subversion and git services",
            "id": "comment-13865351"
        }
    ]
}