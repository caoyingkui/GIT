{
    "id": "SOLR-32",
    "title": "Result of select request is not well-formed XML when text field contains non-ASCII chars and ampersand",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.1.0"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Starting with the supplied start.jar, the ampersand from this field is not correctly escaped in the XML search results provided by the select page:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<add>\n  <doc>\n    <field name=\"id\">amp-test-one</field>\n    <field name=\"content\">Les \u00e9v\u00e9nements chez Bonnie & Clyde.</field>\n  </doc>\n</add>\n</stuff>\n\nThe \"content\" field is defined as a \"text\" field in the schema.\n\nAdding this document to the index and querying on \"id:amp-test-one\" returns\n...\n <doc>\n  <str name=\"content\">Les \u00e9v\u00e9nements chez Bonnie & Clyde.& Clyde.</str>\n  <str name=\"id\">amp-test-one</str>\n </doc>\n\nWith first \"Bonnie & Clyde\" unescaped and then the correct escaped &\n\nBrowsing the index with Luke shows that the field is correctly stored.\n\nI think this might be a Jetty bug: patching the util/XML class of SOLR to avoid the use of Writer.write(String,start,len) fixes the problem. Maybe the Jetty ServletWriter gets confused by the presence of non-ascii chars?\n\nHere are my changes in util/XML.java. It looks like the class did use String.substring(...) before, Writer.write might be faster but it seems like it's broken in that environment.\n\nHere are my patches to util/XML.java:\n\nIndex: src/java/org/apache/solr/util/XML.java\n===================================================================\n\u2014 src/java/org/apache/solr/util/XML.java      (revision 422655)\n+++ src/java/org/apache/solr/util/XML.java      (working copy)\n@@ -159,8 +159,8 @@\n       }\n       if (subst != null) {\n         if (start<i) \n{\n-          // out.write(str.substring(start,i));\n-          out.write(str, start, i-start);\n+          out.write(str.substring(start,i));\n+          // out.write(str, start, i-start);\n           // n+=i-start;\n         }\n         out.write(subst);\n@@ -172,8 +172,8 @@\n       out.write(str);\n       // n += str.length();\n     } else if (start<str.length()) \n{\n-      // out.write(str.substring(start));\n-      out.write(str, start, str.length()-start);\n+      out.write(str.substring(start));\n+      // out.write(str, start, str.length()-start);\n       // n += str.length()-start;\n     }\n     // return n;",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12421673",
            "date": "2006-07-17T17:35:41+0000",
            "content": "Yes, we had been having problems all along with Jetty and it's UTF-8 writer.\nI just committed this (correctness before performance...)\nThanks for tracking down the problem! "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12421674",
            "date": "2006-07-17T17:42:51+0000",
            "content": "Just wanted to confirm this problem in my application.  It is an odd interaction with unicode and Jetty's io stack--it seems to only occur when an offseted write() into a  String with unicode characters that was preceded by a non-unicode write (writing the whole string is fine, as is writing char arrays).\n\nThe attached patch fixed the problem, though it was only necessary to convert the first write() to substring. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12421677",
            "date": "2006-07-17T18:00:30+0000",
            "content": "Anyone know if this is still a problem in the latest Jetty6?  Someone might want to follow up with them on it. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589330",
            "date": "2008-04-15T23:56:42+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.1\n\n\n\nThe Fix Version for all 38 issues found was set to 1.1, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman3 "
        }
    ]
}