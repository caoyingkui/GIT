{
    "id": "SOLR-7164",
    "title": "BBoxFieldType should not store values for subfields (by default)",
    "details": {
        "components": [
            "spatial"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "When the bbox field creates the subfields, it uses the schema for 'double' and 'boolean' types.  \n\nAs is, we can specify these field types as indexed, not stored \u2013 but that is a bit trappy.\n\nLets add a property to the field definition:\n\n storeSubFields=\"false\"\n\n\n\nand register the subfields appropriatly",
    "attachments": {
        "SOLR-7164-bbox-stored.patch": "https://issues.apache.org/jira/secure/attachment/12700854/SOLR-7164-bbox-stored.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-02-25T20:23:43+0000",
            "author": "David Smiley",
            "content": "Did you mean to put this into the Solr project?  Lets say you did.  I don't think this requires a new attribute; we can simply honor the 'stored' of the subfield type.\n\nJust curious; what is the use-case? ",
            "id": "comment-14337118"
        },
        {
            "date": "2015-02-25T20:52:53+0000",
            "author": "Ryan McKinley",
            "content": "here is a patch\n\nthe use case is to make users be explicit about wanting to store the sub fields.  If you do store the fields, weird things happen with the 'update' feature \u2013 since it treats them as explicitly set values.\n\nAs is, you can avoid this by creating a special field type that is not stored.  but i think most users (at least most schemas I have seen) set the indexed/stored properties on fields, not field types ",
            "id": "comment-14337153"
        },
        {
            "date": "2015-02-25T20:53:22+0000",
            "author": "Ryan McKinley",
            "content": "Did you mean to put this into the Solr project?\n\nya \u2013 moved it to solr  ",
            "id": "comment-14337154"
        },
        {
            "date": "2015-02-25T22:37:02+0000",
            "author": "David Smiley",
            "content": "If you do store the fields, weird things happen with the 'update' feature \u2013 since it treats them as explicitly set values.\n\nBefore committing the patch; I'd like to better appreciate this problem \u2013 I don't understand it.  Can you write a test that demonstrates the problem?  Perhaps there is a fix that can address the root cause.\n\nI guess LatLonType & PointType would be similarly affected since they have sub-fields.  Do you think so? ",
            "id": "comment-14337357"
        },
        {
            "date": "2015-02-25T23:48:28+0000",
            "author": "Ryan McKinley",
            "content": "the test that would fail is include in the patch:\n\n@Test\n  public void testSpatialConfig() throws Exception {\n    IndexSchema schema = h.getCoreInc().getLatestSchema();\n\n    // BBox Config\n    // Make sure the subfields are not stored\n    SchemaField sub = schema.getField(\"bbox\"+BBoxStrategy.SUFFIX_MINX);\n    assertFalse(sub.stored());\n    assertTrue(sub.indexed());\n  }\n\n\n\nThe out of the box 'fix' is just to define a 'doubleType' and 'booleanType' that is indexed but not stored.  Totally possible, but easy to miss.  I'm just suggesting we make it hard to miss, explicitly say \"i want the values stored also\"\n\nLatLonType & PointType use AbstractSubTypeFieldType... I don't fully understand that class, but I think it takes this into account.  it looks like the subfields are forced to:\n\nMap<String, String> props = new HashMap<>();\n    //Just set these, delegate everything else to the field type\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    int p = SchemaField.calcProps(name, type, props);\n\n ",
            "id": "comment-14337503"
        },
        {
            "date": "2015-02-25T23:56:29+0000",
            "author": "Ryan McKinley",
            "content": "I'd like to better appreciate this problem \u2013 I don't understand it\n\nare you asking about the 'update' issue?  If so, i can just explain it \u2013 my real concern is really that I don't want to accidentally create stored fields!\n\nwith the update feature, it reads out all stored fields and then writes them back to the index... so if you update the bbox, that would write the various subfields as if the original request had them.  I'm not sure the exact behavior, but it seem unpredictable and will depend on field ordering etc.  If the field is multi-valued it may work, but that is also an incorrect assumption for the normal case ",
            "id": "comment-14337517"
        },
        {
            "date": "2015-02-26T03:57:10+0000",
            "author": "David Smiley",
            "content": "Okay, I understand now and I like what you propose as seen in the patch with one exception.  You forced the sub-field to be indexed.  I don't think we should force that; the user might want docValues and to use BBoxField for relevancy and not for search/filtering. ",
            "id": "comment-14337829"
        },
        {
            "date": "2015-02-26T04:37:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662354 from Ryan McKinley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662354 ]\n\nSOLR-7164: BBoxFieldType defaults sub fields to not-stored ",
            "id": "comment-14337857"
        },
        {
            "date": "2015-02-26T04:40:29+0000",
            "author": "Ryan McKinley",
            "content": "i removed the 'indexed' flag, but made sure it is single valued (multi-valued would do weird things!) ",
            "id": "comment-14337858"
        },
        {
            "date": "2015-02-26T04:41:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662355 from Ryan McKinley in branch 'dev/trunk'\n[ https://svn.apache.org/r1662355 ]\n\nSOLR-7164: BBoxFieldType defaults sub fields to not-stored ",
            "id": "comment-14337859"
        },
        {
            "date": "2015-02-26T04:46:50+0000",
            "author": "David Smiley",
            "content": "I noticed you added this:\n\nprops &= ~MULTIVALUED; // must not be multivalued\n\n\nBut I think we should detect and throw an exception instead \u2013 this field type fundamentally doesn't support it.  Maaaybe a warning and not an exception.  But as-is it's misconfigured in the schema.\n\nAlso, BBoxField doesn't have the \"Type\" suffix in its name.  This issue title and the CHANGES.txt is wrong. ",
            "id": "comment-14337865"
        },
        {
            "date": "2015-02-26T05:08:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662356 from Ryan McKinley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662356 ]\n\nSOLR-7164: fix README for BBoxFieldType ",
            "id": "comment-14337886"
        },
        {
            "date": "2015-02-26T05:11:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662357 from Ryan McKinley in branch 'dev/trunk'\n[ https://svn.apache.org/r1662357 ]\n\nSOLR-7164: fix README for BBoxFieldType ",
            "id": "comment-14337887"
        },
        {
            "date": "2015-02-26T07:01:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662368 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1662368 ]\n\nSOLR-7164: Fix failing TestSolr4Spatial by closing SolrCore ",
            "id": "comment-14338027"
        },
        {
            "date": "2015-02-26T07:04:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662369 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662369 ]\n\nSOLR-7164: Fix failing TestSolr4Spatial by closing SolrCore ",
            "id": "comment-14338030"
        },
        {
            "date": "2015-02-26T08:22:51+0000",
            "author": "Ryan McKinley",
            "content": "thanks Shalin Shekhar Mangar! ",
            "id": "comment-14338082"
        },
        {
            "date": "2015-04-09T23:44:46+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672518 from Ryan McKinley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1672518 ]\n\nSOLR-7164: update lucene field also ",
            "id": "comment-14488521"
        },
        {
            "date": "2015-04-10T03:37:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1672532 from Ryan McKinley in branch 'dev/trunk'\n[ https://svn.apache.org/r1672532 ]\n\nMerged revision(s) 1672518 from lucene/dev/branches/branch_5x:\nSOLR-7164: update lucene field also\n........ ",
            "id": "comment-14488836"
        },
        {
            "date": "2015-04-15T00:31:00+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495409"
        }
    ]
}