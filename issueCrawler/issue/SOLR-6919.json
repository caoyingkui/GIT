{
    "id": "SOLR-6919",
    "title": "Log REST info before executing",
    "details": {
        "components": [
            "search"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "We should log request info (path, parameters, etc...) before attempting to execute a query. This is helpful in cases where we get a bad query that causes OOM or something else catastrophic, and are doing post-event triage.",
    "attachments": {
        "SOLR-6919.patch": "https://issues.apache.org/jira/secure/attachment/12690435/SOLR-6919.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-06T22:47:33+0000",
            "author": "Mike Drob",
            "content": "Patch based on trunk, but also applies cleanly to 5x and 4x ",
            "id": "comment-14266905"
        },
        {
            "date": "2015-01-26T23:14:59+0000",
            "author": "Gregory Chanan",
            "content": "Is it possible to test the log output?  Are there tests that do that today? ",
            "id": "comment-14292596"
        },
        {
            "date": "2015-01-28T18:17:40+0000",
            "author": "Miklos Christine",
            "content": "I like the idea of logging at INFO level instead of DEBUG level. \nI'd like to detect a problematic query the first time it occurs. In my opinion, this would be better because the log would catch the issue with the default log level instead of trying to reproduce the issue to find a problematic query.  ",
            "id": "comment-14295553"
        },
        {
            "date": "2015-01-28T18:41:01+0000",
            "author": "Alexandre Rafalovitch",
            "content": "At the point the patch logs the message, has it already been normalized with all the defaults, implicit settings, etc? ",
            "id": "comment-14295589"
        },
        {
            "date": "2015-01-28T19:09:57+0000",
            "author": "Mike Drob",
            "content": "Gregory Chanan - Good question, I will figure out a way to test the output.\n\nMiklos Christine - I originally did DEBUG because I was worried about essentially doubling the amount of logging happening per request. All of the info is already logged after query completion, so I was worried about too much information when generally we won't need it. Your thoughts?\n\nAlexandre Rafalovitch - I'm think this only logs the info that came in to the system. It is my impression that the defaults get added in handleRequest. Since that method could explode for unknown reasons, though, the impetus here is to log before any of that happens. What do you think? ",
            "id": "comment-14295637"
        },
        {
            "date": "2015-01-28T19:14:38+0000",
            "author": "Gregory Chanan",
            "content": "log4j allows you to set the log level for specific classes/packages, so it seems reasonable to me to start at DEBUG and if people are concerned with queries blowing up, they can set the proper log4j properties without it impacting most users.\n\nOn Alexandre's question, that's part of the reason I asked for testing, so we can verify we will actually be logging something useful. ",
            "id": "comment-14295649"
        },
        {
            "date": "2015-01-28T19:14:51+0000",
            "author": "Alexandre Rafalovitch",
            "content": "If it only logs what the request sent, then how is this better than the access log that can be enabled for Jetty itself? In fact, we already have the definition, it's just commented out.\n\nCan you include an example of the output you are getting with it, preferably against a complex handler that has some of the extras. ",
            "id": "comment-14295650"
        },
        {
            "date": "2015-01-28T19:15:45+0000",
            "author": "Mark Miller",
            "content": "Miklos Christine - I originally did DEBUG because I was worried about essentially doubling the amount of logging happening per request.\n\nAgreed - we don't want to do that. Anyone that wants to ensure they have all queries logged regardless of debug level can turn on container level request logging. Otherwise, we strive for a log line per event for something as common as a query event when it comes to INFO level logging. ",
            "id": "comment-14295655"
        },
        {
            "date": "2015-01-30T21:31:35+0000",
            "author": "Mike Drob",
            "content": "An example of the logging:\n\n\n2997 T13 C0 oasc.SolrCore.execute DEBUG [collection1] webapp=null path=null params={q=*:*&wt=xml}\n3037 T13 C0 oasc.SolrCore.execute [collection1] webapp=null path=null params={q=*:*&wt=xml} hits=0 status=0 QTime=41\n\n\n\nI pulled this out of tests-report.txt so the format might not be exactly the same as on a production system, but the content is mostly there. The first line is the line I added, which happens before the query exceutes. The second line already exists, and is logged after processing completes. These two lines are very similar.\n\nOne advantage of logging this local to Solr is that it will help correlate events when troubleshooting. If several requests come in near the same time, it may not be clear which one caused isseus if they are all elsewhere (i.e. in container logs).\n\nI've added a simple test to ensure that the logging occurs, but it might be a good idea to test with a more complicated query set to see if you get better results. ",
            "id": "comment-14299244"
        },
        {
            "date": "2015-02-02T21:34:01+0000",
            "author": "Gregory Chanan",
            "content": "Slight change to the test case.  Checks that what we are matching against doesn't contain the post-debug information (i.e. status, hits, QTime). ",
            "id": "comment-14301973"
        },
        {
            "date": "2015-02-02T22:13:45+0000",
            "author": "Mike Drob",
            "content": "Checks that what we are matching against doesn't contain the post-debug information (i.e. status, hits, QTime).\n+1.\n\nDid you want to add any other queries to the test case as well? ",
            "id": "comment-14302040"
        },
        {
            "date": "2015-02-02T22:21:31+0000",
            "author": "Gregory Chanan",
            "content": "Did you want to add any other queries to the test case as well?\n\nI think this is fine for an initial version...feel free to post follow on jiras if you want to improve the testing.\n\n+1. ",
            "id": "comment-14302052"
        },
        {
            "date": "2015-02-02T22:41:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1656596 from gchanan@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1656596 ]\n\nSOLR-6919: Log REST info before executing ",
            "id": "comment-14302079"
        },
        {
            "date": "2015-02-02T22:41:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1656597 from gchanan@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1656597 ]\n\nSOLR-6919: Log REST info before executing ",
            "id": "comment-14302081"
        },
        {
            "date": "2015-02-02T22:42:13+0000",
            "author": "Gregory Chanan",
            "content": "Committed to Trunk and 5.1, thanks for the patch, Mike! ",
            "id": "comment-14302084"
        },
        {
            "date": "2015-02-02T23:36:41+0000",
            "author": "Mark Miller",
            "content": "We might want to consider making this a special log object like Lucene's IndexWriter Info Logger. Having to turn on DEBUG for the whole SolrCore class means it's fairly likely that you could inadvertently add a lot of debug chatter in the logs in the future when you really just want to turn on logging the query before it's executed. ",
            "id": "comment-14302327"
        },
        {
            "date": "2015-02-02T23:52:03+0000",
            "author": "Gregory Chanan",
            "content": "We might want to consider making this a special log object like Lucene's IndexWriter Info Logger. Having to turn on DEBUG for the whole SolrCore class means it's fairly likely that you could inadvertently add a lot of debug chatter in the logs in the future when you really just want to turn on logging the query before it's executed.\n\nSeems reasonable, do you have a pointer to the Lucene IndexWriter Info Logger?  FWIW, I only see one other debug statement in SolrCore trunk, and it's in an unexpected situation.  So I don't think this is high priority. ",
            "id": "comment-14302354"
        },
        {
            "date": "2015-02-03T15:16:07+0000",
            "author": "Mark Miller",
            "content": "FWIW, I only see one other debug statement in SolrCore trunk, and it's in an unexpected situation. So I don't think this is high priority.\n\nI'm not really worried about the situation today, I'm worried about it tomorrow. Debug is a developers tool and can be put in tight loops or pretty much anywhere - SolrCore is a very large class - doing it this way seems like, okay, it's fine this release, SolrCore does not currently have a lot of debug logging, but it could make it useless on a upgrade, or even essentially cause a bug on upgrade as all of a sudden you start pumping out a ton of debug logging and have performance issues, flood your log, etc. You don't really want to turn on debug logging for Solrcore - you want to turn on pre logging of the query. ",
            "id": "comment-14303412"
        },
        {
            "date": "2015-02-03T16:20:16+0000",
            "author": "Mike Drob",
            "content": "I checked out IndexWriter and InfoStream and think it might be somewhat overengineered for this case.\n\nHow about we just create a child logger and use that? Then it will inherit the default levels and settings from the SolrCore logger, or can be set separately if desired. I've attached another patch with this if we think this is a good path to go. ",
            "id": "comment-14303515"
        },
        {
            "date": "2015-02-03T16:25:55+0000",
            "author": "Mark Miller",
            "content": "I don't mean to use it's implementation. Just that it's kind of a special logging object and we could make this the same. \n\nAFAIK, you can just make a special logger name for this that controls it - like org.apache.solr.queryprelog=DEBUG or whatever.\n\nHow about we just create a child logger and use that? \n\nLooking at the patch, yeah, that's what I meant. I don't know what the right name is, but I think that's right implementation path. ",
            "id": "comment-14303525"
        },
        {
            "date": "2015-02-03T16:27:27+0000",
            "author": "Mark Miller",
            "content": "I checked out IndexWriter and InfoStream and think it might be somewhat overengineered for this case.\n\nJust to be clear, those are Lucene specific class for special IndexWriter debug logging. We expose turning that on in Solr with a somewhat special log object.\n\nOnly other note on this topic is that if we do use a special 'child' logger object like this, we should probably add it to the documentation. ",
            "id": "comment-14303528"
        },
        {
            "date": "2015-02-03T16:29:52+0000",
            "author": "Mike Drob",
            "content": "Only other note on this topic is that if we do use a special 'child' logger object like this, we should probably add it to the documentation.\n\nDo you mean somewhere in the wiki, or is there a good place for this in source control? I'm still learning the layout of everything, so any pointers would be appreciated in this case. ",
            "id": "comment-14303536"
        },
        {
            "date": "2015-02-03T16:32:06+0000",
            "author": "Mark Miller",
            "content": "The official documentation is now at https://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide\n\nContributors can comment, committers can change. ",
            "id": "comment-14303541"
        },
        {
            "date": "2015-02-03T16:57:17+0000",
            "author": "Mike Drob",
            "content": "Great, thanks. Comment made at https://cwiki.apache.org/confluence/display/solr/Configuring+Logging?focusedCommentId=51808825#comment-51808825 ",
            "id": "comment-14303573"
        },
        {
            "date": "2015-02-03T17:28:03+0000",
            "author": "Mark Miller",
            "content": "Awesome, thanks, looks great. I think we have to wait till the 5.0 guide is out before putting it in. ",
            "id": "comment-14303642"
        },
        {
            "date": "2015-02-03T18:37:51+0000",
            "author": "Mike Drob",
            "content": "Attaching a new patch that is built on top of the content that Gregory Chanan already committed. ",
            "id": "comment-14303727"
        },
        {
            "date": "2015-02-03T19:30:31+0000",
            "author": "Gregory Chanan",
            "content": "should the slow query log also go to the request log?\n\nif you are generating this on top of what is already committed why does the test case look like a new file? ",
            "id": "comment-14303815"
        },
        {
            "date": "2015-02-03T19:37:29+0000",
            "author": "Mike Drob",
            "content": "should the slow query log also go to the request log?\nI can see an argument made for this, but I don't think it is necessary.\n\nif you are generating this on top of what is already committed why does the test case look like a new file?\nI'm not sure, I must have made a mistake somewhere. Here's a new patch that looks correct w.r.t. the test case. ",
            "id": "comment-14303835"
        },
        {
            "date": "2015-02-04T20:32:24+0000",
            "author": "Gregory Chanan",
            "content": "+1 on latest update. ",
            "id": "comment-14305895"
        },
        {
            "date": "2015-02-04T22:04:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1657417 from gchanan@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1657417 ]\n\nSOLR-6919: Use separate logger for SolrCore request logging ",
            "id": "comment-14306063"
        },
        {
            "date": "2015-02-04T22:04:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1657418 from gchanan@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1657418 ]\n\nSOLR-6919: Use separate logger for SolrCore request logging ",
            "id": "comment-14306065"
        },
        {
            "date": "2015-04-15T00:30:11+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495233"
        },
        {
            "date": "2016-02-08T18:40:25+0000",
            "author": "Shawn Heisey",
            "content": "I was really confused when I was looking at my Solr 5 logs, because the class being logged on every request was not a class that I could find.  I finally figured out why \u2013 the \"class\" only exists as a logger instance on SolrCore.\n\nDo we want to have logs coming from a class that doesn't exist?  This might be perfectly OK, but it did lead me on a bit of a snipe hunt. ",
            "id": "comment-15137444"
        }
    ]
}