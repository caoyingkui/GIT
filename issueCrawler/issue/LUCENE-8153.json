{
    "id": "LUCENE-8153",
    "title": "checkindex time more than doubles for wikipedia index with recent change",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "master (8.0)"
        ]
    },
    "description": "See http://people.apache.org/~mikemccand/lucenebench/checkIndexTime.html\n\nSince this is a pretty basic index, seems like something might be wrong?",
    "attachments": {
        "LUCENE-8153.patch": "https://issues.apache.org/jira/secure/attachment/12910764/LUCENE-8153.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16350361",
            "date": "2018-02-02T13:55:48+0000",
            "content": "I'll dig. This is certainly due to my changes. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16350602",
            "date": "2018-02-02T16:23:52+0000",
            "content": "I confirmed this is due to the additional checks that I added for impacts. I'm running CheckIndex in 180 seconds locally vs. 74 seconds before LUCENE-4198. This is slower because eg. ImpactsEnum doesn't give way to reuse existing instances (it shouldn't be needed) and the checks we perform are a bit more costly than comparing the freqs, but still important.\n\nI started looking into short-circuiting long postings lists, but it doesn't buy too much (around 150 seconds) because most postings lists are still very short. Another option could be to only check 1/16th of terms for instance. Any opinions? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16350624",
            "date": "2018-02-02T16:39:07+0000",
            "content": "for other skipping tests don't we already do only 1/N of them? Maybe we should just try to be consistent with that for now? ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16350626",
            "date": "2018-02-02T16:41:48+0000",
            "content": "also in both cases we are making a tradeoff for all users which may be good but not for all cases.\n\nperhaps we should fix the general issue? We have checkindex -fast which just does does checksum validation and basic stuff like that. Maybe we should add a checkindex -slow which is more thorough (even if its like 10x-20x slower) and doesn't sample in such cases. And use that one mostly in tests. But we can sample by default to make a reasonable balance of bugs found vs effort. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16350636",
            "date": "2018-02-02T16:50:11+0000",
            "content": "Basically i would propose we deprecate crossCheckTermVectors and fold it into a -slow too. We are already cheating like this to get more checking in tests. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16365803",
            "date": "2018-02-15T16:09:40+0000",
            "content": "I gave this idea a try:\n\n\u00a0- renamed crossCheckTermVectors to doSlowChecks, or -slow on the command-line\n\n\u00a0- made impacts checks cheaper when doSlowChecks is false ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16365811",
            "date": "2018-02-15T16:14:34+0000",
            "content": "Can we also update the \"usage\" for this tool (crossCheckTermVectors -> slow)? ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16370109",
            "date": "2018-02-20T14:38:20+0000",
            "content": "Thanks for catching this. I ran grep to make sure I didn't forget any other occurrences. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16370111",
            "date": "2018-02-20T14:39:43+0000",
            "content": "+1 ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16371125",
            "date": "2018-02-21T09:20:26+0000",
            "content": "CheckIndex time looks more reasonable now. http://people.apache.org/~mikemccand/lucenebench/checkIndexTime.html It's still slower than before, but that is expected since it also performs more checks. ",
            "author": "Adrien Grand"
        }
    ]
}