{
    "id": "LUCENE-7632",
    "title": "Add some sugar constructors to TermQuery",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Improvement",
        "components": [],
        "fix_versions": []
    },
    "description": "TermQuery should have constructors that take a field and term, in addition to the one taking a Term object.  This has been annoying me for about five years now.",
    "attachments": {
        "LUCENE-7632.patch": "https://issues.apache.org/jira/secure/attachment/12847492/LUCENE-7632.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15822793",
            "date": "2017-01-14T11:04:01+0000",
            "content": "Patch, adding constructors to TermQuery and SpanTermQuery.  It also moves the TermQuery constructors to the top of the class. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15822796",
            "date": "2017-01-14T11:11:51+0000",
            "content": "> TermQuery should have constructors that take a field and term, in addition to the one taking a Term object. \n\nWait, why   What's wrong w/ making a Term yourself and passing that in?  In general I don't think we should have two ways to do the same thing ... ambiguity is one bane of software development. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15822800",
            "date": "2017-01-14T11:25:56+0000",
            "content": "I don't think this adds ambiguity though, does it?  And it saves a lot of typing and screen width.  Maybe it's just me, but every time I write a test I type 'new TermQuery(field, term)' and then have to go back and add 'new Term()' in there as well. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15822926",
            "date": "2017-01-14T19:36:00+0000",
            "content": "The Term class often feels to me like an unnecessary wrapper. I just looked at the usage of this class (http://lucene.apache.org/core/6_3_0/core/org/apache/lucene/index/class-use/Term.html) and most times it seems to me that passing a String field and BytesRef term instead would make things simpler. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15822967",
            "date": "2017-01-14T22:12:33+0000",
            "content": "+1 to remove/deprecate Term entirely: I agree it's annoying \n\nBut I'd rather do the change on this issue at the same time as removing Term, instead of having this period of time when some APIs sometimes take the field and term text separately and some don't: I really don't like the added ambiguity. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15823156",
            "date": "2017-01-15T14:44:30+0000",
            "content": "Agreed that both changes need to be done at the same time. ",
            "author": "Adrien Grand"
        }
    ]
}