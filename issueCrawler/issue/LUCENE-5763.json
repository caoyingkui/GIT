{
    "id": "LUCENE-5763",
    "title": "HTMLStripCharFilter += HTML5",
    "details": {
        "type": "Task",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "modules/analysis"
        ],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "HTMLStripCharFilter knows some specific things about HTML4 (like named character entities, which are converted to the corresponding characters), but not about HTML5.\n\nHTML5 has way more named character entities: 2,231 vs 259 by my count.\n\nThere's probably other stuff to do, e.g. there are new tags.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14031891",
            "author": "Steve Rowe",
            "content": "Apparently the HTML5 named character entity set is almost a superset of HTML4's, but not quite: &lang; and &rang; expand to different characters.  I don't think this blocks switching, just something that needs to be documented.  Some background here: https://www.w3.org/Bugs/Public/show_bug.cgi?id=14429 ",
            "date": "2014-06-15T14:00:13+0000"
        },
        {
            "id": "comment-14036908",
            "author": "Shawn Heisey",
            "content": "On the &lang; and &rang; difference: Will a filter like ICUFoldingFilter reduce these to the plain ascii < and > regardless of which entity interpretation is used?  If so, it won't affect me ... and perhaps it might be something to mention in HTMLStripCharFilter javadocs.\n\nWould it be useful at all to have a config option for the HTML version? ",
            "date": "2014-06-19T03:41:13+0000"
        },
        {
            "id": "comment-14037272",
            "author": "Steve Rowe",
            "content": "On the &lang; and &rang; difference: Will a filter like ICUFoldingFilter reduce these to the plain ascii < and > regardless of which entity interpretation is used? \n\nNo, ICUFoldingFilter doesn't fold (leaves intact) the HTML5 &lang;/&rang; (left: U+27E8; right: U+27E9), but folds the HTML4 ones (left: U+2329; right: U+232A) to full-width CJK angle brackets U+3008 and U+3009, respectively...  This 2007 WHATWG email mentions that earlier drafts of HTML5 mapped &lang;/&rang;  to these full-width CJK characters.\n\nAnd ASCIIFoldingFilter doesn't cover either of the blocks in question, so wouldn't fold any of these characters.\n\nFor text search, typically punctuation like this is stripped as part of the tokenization process, so I don't see the folding filters' deficits here as terribly problematic.   ",
            "date": "2014-06-19T11:52:49+0000"
        },
        {
            "id": "comment-14037290",
            "author": "Steve Rowe",
            "content": "Would it be useful at all to have a config option for the HTML version?\n\nI don't think so - the use for this thing is generally HTML you don't control (hence the ability to handle non-well-formed content), so it seems very unlikely that people will know which HTML version they should target.  And I don't think we should have a mode where we output the HTML4 versions (left: U+2329; right: U+232A), because these characters are described in the Unicode specification as deprecated: from http://www.unicode.org/charts/PDF/U2300.pdf:\n\n\nDeprecated angle brackets\n\nThese characters are deprecated and are strongly discouraged for mathematical use because of their canonical equivalence to CJK punctuation.\n\n2329  \u2329  LEFT-POINTING ANGLE BRACKET\n[...]\n232A  \u232a  RIGHT-POINTING ANGLE BRACKET ",
            "date": "2014-06-19T12:14:21+0000"
        }
    ]
}