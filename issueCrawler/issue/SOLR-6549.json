{
    "id": "SOLR-6549",
    "title": "bin/solr script should support a -s option to set the -Dsolr.solr.home property",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.10.2",
            "5.0"
        ],
        "components": [
            "scripts and tools"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The bin/solr script supports a -d parameter for specifying the directory containing the webapp, resources, etc, lib ... In most cases, these binaries are reusable (and will eventually be in a server directory SOLR-3619) even if you want to have multiple solr.solr.home directories on the same server. In other words, it is more common/better to do:\n\n\nbin/solr start -d server -s home1\nbin/solr start -d server -s home2\n\n\n\nthan to do:\n\n\nbin/solr start -d server1\nbin/solr start -d server2\n\n\n\nBasically, the start script needs to support a -s option that allows you to share binaries but have different Solr home directories for running multiple Solr instances on the same host.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "ASF subversion and git services",
            "id": "comment-14165515",
            "date": "2014-10-09T18:42:22+0000",
            "content": "Commit 1630550 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1630550 ]\n\nSOLR-6549: add a -s option to set the -Dsolr.solr.home property, thus allowing multiple Solr nodes on the same host to share the same server directory -d but with different Solr home directories "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14165518",
            "date": "2014-10-09T18:43:48+0000",
            "content": "Commit 1630551 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1630551 ]\n\nSOLR-6549: add a -s option to set the -Dsolr.solr.home property, thus allowing multiple Solr nodes on the same host to share the same server directory -d but with different Solr home directories "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14165525",
            "date": "2014-10-09T18:45:13+0000",
            "content": "Commit 1630552 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1630552 ]\n\nSOLR-6549: fix ignores on solr/example/logs directory "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14169866",
            "date": "2014-10-13T20:08:09+0000",
            "content": "Commit 1631528 from Timothy Potter in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1631528 ]\n\nSOLR-6509, SOLR-6486, SOLR-6549, SOLR-6529: backport recent fixes / improvements to the bin/solr scripts for inclusion in 4.10.2 release. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14170368",
            "date": "2014-10-14T02:00:14+0000",
            "content": "Paraphrasing some thoughts that I expressed on IRC:\n\n\nIf the -s option is used, the argument could be tested.  If it's not a directory, a startup warning can be logged, or the script could even abort.  If solr.xml does not exist in the directory indicated, a warning could be printed.  A lack of solr.xml should abort, because the user might have solr.xml in zookeeper, or they might be intentionally trying to start in single-core mode.  (Related: single-core mode probably should be nuked from 5.0, if it's not already)\n\nPerhaps a -q option could be implemented to suppress startup warnings.  If the script sources /etc/default/solr (or some other filename), options could be picked up from that file.\n\nI see that after I said these things and started transferring my thoughts here, Timothy Potter replied on IRC, saying that the script already does check for the existence of both the solr home and solr.xml, then disappeared.  I admit that I did not look at the script before speaking.  Have to stop doing that!  I think the existing checks can be improved, will think about it. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14735640",
            "date": "2015-09-08T21:21:57+0000",
            "content": "Scott Blum popped up on IRC asking about GC tuning options, and noticed that CMSInitiatingOccupancyFraction was at 50%, and he was going to try it at 70.\n\nI noted that the CMS parameters on my solr wiki page were at 70, and that the initial GC tuning parameters were heavily influenced by that wiki page.\n\nScott went digging deeper, and found that solr.in.sh was initially using 70, then it was changed to 50 by the initial commits for this issue.\n\nWe were wondering whether the change was intentional, and if it was, what the motivation was.  The GC change was not mentioned in the commit message. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14745634",
            "date": "2015-09-15T15:52:43+0000",
            "content": "The change was intentional. I found that having the CMS start collecting sooner rather than later reduced pause times in my testing. However, if you're seeing something different, I'd love to see some empirical evidence that using 50 vs. 70 is causing problems. Keep in mind this is the threshold when concurrent collections start, although there is some stop-the-world phases of CMS, so I can see how starting too early (or too often) can lead to issues. Of course, initial GC tuning params will never be correct for all workloads, so if 70 works better for you, then use 70. The default is 68 if not specified. If we want to remove those options, that's fine as well, but be sure to remove -XX:+UseCMSInitiatingOccupancyOnly to let the JVM pick the correct value. "
        }
    ]
}