{
    "id": "LUCENE-3209",
    "title": "Memory codec",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This codec stores all terms/postings in RAM.  It uses an\nFST<BytesRef>.  This is useful on a primary key field to ensure\nlookups don't need to hit disk, to keep NRT reopen time fast even\nunder IO contention.",
    "attachments": {
        "LUCENE-3209.patch": "https://issues.apache.org/jira/secure/attachment/12482876/LUCENE-3209.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-16T23:11:02+0000",
            "content": "Patch; I think it's working and ready to commit.  All tests pass w/ it, and I went and disabled the same tests that avoid SimpleText codec. ",
            "author": "Michael McCandless",
            "id": "comment-13050791"
        },
        {
            "date": "2011-06-16T23:13:51+0000",
            "content": "To clarify: this codec stores postings on disk, but then on read (for searching) it loads the full byte[] from disk into RAM. ",
            "author": "Michael McCandless",
            "id": "comment-13050793"
        },
        {
            "date": "2011-06-17T06:48:23+0000",
            "content": "This seems to be related to LUCENE-3069 right? ",
            "author": "Simon Willnauer",
            "id": "comment-13050909"
        },
        {
            "date": "2011-06-17T07:00:41+0000",
            "content": "Looks like a related thing to me. ",
            "author": "Dawid Weiss",
            "id": "comment-13050912"
        },
        {
            "date": "2011-06-17T11:52:39+0000",
            "content": "Woops!  I forgot about LUCENE-3069, but, yes this is very similar.\n\nBut I think one difference is LUCENE-3069 aims to have all terms memory resident but postings would still reside in the Directory, I think?  Whereas my patch here puts all terms and postings in RAM (in a single FST).  The postings format is similar to what PulsingCodec does, ie, doc + tf + pos + payload are all serialized into a single byte[] using delta vInts.\n\nSo I think we should keep LUCENE-3069 open, as an enhancement to this codec to make it separately controllable whether postings should also be in RAM? ",
            "author": "Michael McCandless",
            "id": "comment-13051002"
        }
    ]
}