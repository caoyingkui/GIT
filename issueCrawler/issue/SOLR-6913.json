{
    "id": "SOLR-6913",
    "title": "audit & cleanup \"schema\" in data_driven_schema_configs",
    "details": {
        "components": [],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "the data_driven_schema_configs configset has some issues that should be reviewed carefully & cleaned up...\n\n\n\tcurrentkly includes a schema.xml file:\n\t\n\t\tthis was previously pat of the old example to show the automatic \"bootstraping\" of schema.xml -> managed-schema, but at this point it's just kind of confusing\n\t\twe should just rename this to \"managed-schema\" in svn - the ref guide explains the bootstraping\n\t\n\t\n\tthe effective schema as it currently stands includes a bunch of copyFields & dynamicFields that are taken wholesale from the techproducts example\n\t\n\t\tsome of these might make sense to keep in a general example (ie: \"*_txt\") but in general they should all be reviewed.\n\t\ta bunch of this cruft is actually commented out already, but anything we don't want to keep should be removed to eliminate confusion\n\t\n\t\n\tSOLR-6471 added an explicit \"_text\" field as the default and made it a copyField catchall (ie: \"*\")\n\t\n\t\tthe ref guide schema API example responses need to reflect the existence of this field: https://cwiki.apache.org/confluence/display/solr/Schemaless+Mode\n\t\twe should draw heavy attention to this field+copyField \u2013 both with a \"/!\\ NOTE\" in the refguide and call it out in solrconfig.xml & \"managed-schema\" file comments since people who start with these configs may be suprised and wind up with a very bloated index",
    "attachments": {
        "SOLR-6913-trim-schema.patch": "https://issues.apache.org/jira/secure/attachment/12690235/SOLR-6913-trim-schema.patch",
        "SOLR-6913.patch": "https://issues.apache.org/jira/secure/attachment/12690875/SOLR-6913.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-06T02:54:45+0000",
            "author": "Steve Rowe",
            "content": "\"managed-schema\" file comments\n\nI want to strip all (non-license) comments from the shipped managed-schema file - I'll start up the example and get it to do the auto-bootstrap thing (removes comments in the process of serialization), then add back the license comment, then svn rm schema.xml and svn add managed-schema. ",
            "id": "comment-14265600"
        },
        {
            "date": "2015-01-06T03:08:25+0000",
            "author": "Steve Rowe",
            "content": "Patch to the data-driven-schema-configs's schema.xml that removes the following:\n\n\n\tbinary field type\n\tAll currency-related dynamic fields and field types\n\tAll geo-related dynamic fields and field types\n\tAll text field types and associated dynamic fields except string and text_general, specifically all language-specific field types.\n\tAll plural field types (these just add multiValued=\"true\" to the corresponding singular field types - this can instead be done on individual fields where necessary).\n\tThe random field type and random_* dynamic field - these are for sorting, but the data-driven example produces fields that are multi-valued, and so not sortable.\n\n\n\nThis leaves a lot of dynamic fields, but since these are complementary to managed schema, I'd like to leave them in.\n\nLeft to do:\n\n\n\tRemove the lang/ directory and its contents\n\tRemove protwords.txt (unused)\n\tSwitch to managed stopwords and synonyms\n\n ",
            "id": "comment-14265611"
        },
        {
            "date": "2015-01-06T12:59:25+0000",
            "author": "Erik Hatcher",
            "content": "That patch breaks the data_driven_schema_configs because the plural field types are still specified for AddSchemaFieldsUpdateProcessorFactory in solrconfig:\n\n\n$ bin/solr create_core -n films -c data_driven_schema_configs\n\nCreating new core 'films' using command:\nhttp://localhost:8983/solr/admin/cores?action=CREATE&name=films&instanceDir=films\n\nFailed to create core 'films' due to: Error CREATEing SolrCore 'films': Unable to create core [films] Caused by: fieldType 'booleans' not found in the schema\n\n\n\nI thought the plural field types were awkward, but they do allow multi-valued content to come in easily.  What happens with these schema changes when multivalued content comes in the first time?   Does this require fields be configured prior to data ingestion?\n\nOne test for the changes here is to follow the steps in example/films/README.txt ",
            "id": "comment-14266054"
        },
        {
            "date": "2015-01-06T13:48:13+0000",
            "author": "Erik Hatcher",
            "content": "And changing all those plural field types mentioned in solrconfig to singular, this is what happens on bin/post films example/films/films.json:\n\n\nLucidErikMBP:solr erikhatcher$ bin/post films example/films/films.json \n\nINFO  - 2015-01-06 13:45:08.001; org.apache.solr.schema.ManagedIndexSchema; Upgraded to managed schema at /Users/erikhatcher/dev/trunk/solr/server/solr/films/conf/managed-schema\nINFO  - 2015-01-06 13:45:08.041; org.apache.solr.update.processor.LogUpdateProcessor; [films] webapp=/solr path=/update params={} {add=[/en/001 (1489556637456793600)]} 0 75\nERROR - 2015-01-06 13:45:08.042; org.apache.solr.common.SolrException; org.apache.solr.common.SolrException: ERROR: [doc=/en/45_2006] multiple values encountered for non multiValued field genre: [Black comedy, Thriller, Psychological thriller, Indie film, Action Film, Crime Thriller, Crime Fiction, Drama]\n\n\n\n:/ - now what?  We need the auto-field guessing to also guess and set multiValued, seems like. ",
            "id": "comment-14266114"
        },
        {
            "date": "2015-01-06T14:37:12+0000",
            "author": "Alexandre Rafalovitch",
            "content": "All fields have to be multiValued or there needs to be a way to upgrade a field definition to multiValued. \n\nThe last (single->multiValued upgrade) is what ElasticSearch does behind the scenes. Or more like always being multivalued, but return content as value or as array depending on how many items are there. Of course that ambiguity may then break the clients if they expect a single value and get an array back.\n\nThe other option is to introduce dry-run URP that looks at all the values before creating the type. As per the side-discussion in SOLR-6016. ",
            "id": "comment-14266163"
        },
        {
            "date": "2015-01-06T18:51:15+0000",
            "author": "Erik Hatcher",
            "content": "We need the auto-field guessing to also guess and set multiValued, seems like.\n\nI gave this a whirl (patch below as code comment for posterity) and did not like it.  I did not like it because the data I tried always had one field that comes in as a single value (or even a single valued array in, say, JSON; that's indistinguishable from a single value at this update processor level it seems) in the first, or even more confusing after a handful of documents go in successfully, then multiple values start coming in.  A prime example of where \"guessing\" this stuff is, more often than not, incorrect or inappropriate (at least on a single field value sample size) somewhere along the way with real data.  It's easiest, I'll echo, to just assume multivalued on new fields.  No worries, this is why it's now been made easy to nudge these things with something as straightforward as this when setting things up:\n\n\ncurl http://localhost:8983/solr/films/schema/fields -X POST -H 'Content-type:application/json' --data-binary '\n[\n    {\n        \"name\":\"name\",\n        \"type\":\"text_general\",\n        \"stored\":true\n    }\n]'\n\n\n\n\nIndex: core/src/java/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactory.java\n===================================================================\n--- core/src/java/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactory.java\t(revision 1649842)\n+++ core/src/java/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactory.java\t(working copy)\n@@ -39,8 +39,10 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n import static org.apache.solr.common.SolrException.ErrorCode.BAD_REQUEST;\n@@ -279,8 +281,16 @@\n         FieldNameSelector selector = buildSelector(oldSchema);\n         for (final String fieldName : doc.getFieldNames()) {\n           if (selector.shouldMutate(fieldName)) { // returns false if the field already exists in the current schema\n-            String fieldTypeName = mapValueClassesToFieldType(doc.getField(fieldName));\n-            newFields.add(oldSchema.newField(fieldName, fieldTypeName, Collections.<String,Object>emptyMap()));\n+            SolrInputField value = doc.getField(fieldName);\n+            String fieldTypeName = mapValueClassesToFieldType(value);\n+            Map<String,Object> options = new HashMap<>();\n+\n+            if (value.getValueCount() > 1) {\n+              options.put(\"multiValued\", true);\n+            }\n+\n+            SchemaField newField = oldSchema.newField(fieldName, fieldTypeName, options);\n+            newFields.add(newField);\n           }\n         }\n         if (newFields.isEmpty()) {\n\n ",
            "id": "comment-14266547"
        },
        {
            "date": "2015-01-06T22:44:10+0000",
            "author": "Steve Rowe",
            "content": "That patch breaks the data_driven_schema_configs because the plural field types are still specified for AddSchemaFieldsUpdateProcessorFactory in solrconfig\n\nYeah, I'd forgotten about the plural field types needing to be there for the class->fieldtype mappings, since that URP currently doesn't have any way of allowing created fields to specialize field types.\n\nHere's an updated patch that puts back all the plural field types I took out.\n\nI haven't test driven it yet - thanks Erik Hatcher for doing that with the previous version - I'll go try it now. ",
            "id": "comment-14266902"
        },
        {
            "date": "2015-01-08T16:27:29+0000",
            "author": "Steve Rowe",
            "content": "In addition to the changes mentioned above, this patch does the following in the data_driven_schema_configs configset:\n\n\n\tAdds managed-schema produced by the auto-bootstrap of the schema as modified in the most recent trim-schema patch on this issue, but with the manual addition of a license comment\n\tDeletes schema.xml\n\tDeletes the lang/ dir and its contents\n\tDeletes protwords.txt\n\tDeletes currency.xml\n\n\n\nI did not switch to managed stopwords and synonyms.\n\nCommitting shortly. ",
            "id": "comment-14269507"
        },
        {
            "date": "2015-01-08T16:57:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1650329 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1650329 ]\n\nSOLR-6913: cleanup schema in data_drive_schema_configs configset ",
            "id": "comment-14269555"
        },
        {
            "date": "2015-01-08T17:00:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1650330 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1650330 ]\n\nSOLR-6913: eol-style for managed-schema ",
            "id": "comment-14269564"
        },
        {
            "date": "2015-01-08T17:09:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1650336 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1650336 ]\n\nSOLR-6913: cleanup schema in data_drive_schema_configs configset (merged trunk r1650329 and r1650330) ",
            "id": "comment-14269583"
        },
        {
            "date": "2015-01-08T17:11:45+0000",
            "author": "Steve Rowe",
            "content": "Committed to trunk and branch_5x.\n\nAlso modified the ref guide along the lines suggested by Hoss in the issue summary. ",
            "id": "comment-14269587"
        },
        {
            "date": "2015-01-09T13:06:15+0000",
            "author": "Grant Ingersoll",
            "content": "What's the reasoning behind removing so many of the field types?   ",
            "id": "comment-14270978"
        },
        {
            "date": "2015-01-09T13:09:20+0000",
            "author": "Grant Ingersoll",
            "content": "I think the regular workflow for exploring new datasets is to just start throwing it at Solr and then to tweak the data, not tweak the schema.  Data first, schema second.  So, for instance, I'm working on this citibike data.  My first step is to index it w/ no schema whatsoever.  I then iterate by writing a little python to index some of the columns as spatial.  What I don't do is go muck w/ the schema, hence the name data-driven. ",
            "id": "comment-14270981"
        },
        {
            "date": "2015-01-09T13:15:33+0000",
            "author": "Grant Ingersoll",
            "content": "I'd vote for returning:\n\n\n\tgeo related\n\tcurrency\n\tLanguage support\n\n\n\nIndifferent on the rest. ",
            "id": "comment-14270989"
        },
        {
            "date": "2015-01-09T15:39:56+0000",
            "author": "Steve Rowe",
            "content": "What's the reasoning behind removing so many of the field types?\n\nMy thinking was that the schemaless example should be minimal.  In particular, if we don't have a way for field types to be used (via (dynamic)field definitions or field guessing), why include them?  If the user can add fields, they can add field types too.\n\n\nI'd vote for returning:\n\n\tgeo related\n\tcurrency\n\tLanguage support\n\n\n\nIn the cases of language support, there was no way to use those field types without manually adding fields (there were no dynamic fields defined for them), and as it stands we don't have a way to document the schema so that people can figure out what field types to use (though see my schema annotation proposal: http://mail-archives.apache.org/mod_mbox/lucene-dev/201308.mbox/%3C7384F7F2-AD35-480B-8523-3DB75AA06FAC@gmail.com%3E).\n\nThere were geo dynamic field to go with the defined field types, but I removed them because understanding which geo type to use seemed confusing, and solr spatial is evolving, so it seemed better to let the user find the latest advice for how to use this and update the schema themselves.\n\nI removed the currency capabilities because it seemed esoteric, and didn't fit with a simple example. ",
            "id": "comment-14271198"
        },
        {
            "date": "2015-01-09T16:29:25+0000",
            "author": "Grant Ingersoll",
            "content": "My thinking was that the schemaless example should be minimal. In particular, if we don't have a way for field types to be used (via (dynamic)field definitions or field guessing), why include them? If the user can add fields, they can add field types too.\n\nThe main issue is that OOTB, this is the default and it thus leaves us pretty underpowered for an OOTB experience.  Those Field Types have been in Solr for a long time and I think they hold up reasonably well, so I would vote for putting them back in.\n\nI think the big difference is, Solr experts come at the situation from edit schema/config first.  New users come at data stores as let me manipulate my data first and then harden it later. ",
            "id": "comment-14271487"
        },
        {
            "date": "2015-01-09T16:38:14+0000",
            "author": "Grant Ingersoll",
            "content": "IOW, it's not about schemaless, it's about schema-later ",
            "id": "comment-14271499"
        },
        {
            "date": "2015-01-09T17:10:59+0000",
            "author": "Steve Rowe",
            "content": "The main issue is that OOTB, this is the default and it thus leaves us pretty underpowered for an OOTB experience. \n\nOkay, I'll buy it: since data_driven_schema_configs is the default configset when creating a core or a collection from bin/solr, broad field type and dynamic field support is called for.\n\nIn addition to putting back the geo related and currency dynamic fields and field types, I'll put back the lang-specific field types, and add (previously missing) dynamic fields for them. ",
            "id": "comment-14271547"
        },
        {
            "date": "2015-01-09T20:10:13+0000",
            "author": "Grant Ingersoll",
            "content": "Awesome, thanks Steve! ",
            "id": "comment-14271806"
        },
        {
            "date": "2015-01-09T23:25:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1650696 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1650696 ]\n\nSOLR-6913: revert cleanup schema in data_drive_schema_configs configset (schema modifications will follow) ",
            "id": "comment-14272063"
        },
        {
            "date": "2015-01-10T00:38:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1650701 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1650701 ]\n\nSOLR-6913: In data_driven_schema_configs configset, rename schema.xml to managed-schema, remove example-only fieldtypes, add dynamic fields for each fieldtype where they don't exist, and add a warning about the catch-all _text field ",
            "id": "comment-14272153"
        },
        {
            "date": "2015-01-10T00:43:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1650702 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1650702 ]\n\nSOLR-6913: revert cleanup schema in data_drive_schema_configs configset (schema modifications will follow) ",
            "id": "comment-14272157"
        },
        {
            "date": "2015-01-10T01:05:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1650706 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1650706 ]\n\nSOLR-6913: In data_driven_schema_configs configset, rename schema.xml to managed-schema, remove example-only fieldtypes, add dynamic fields for each fieldtype where they don't exist, and add a warning about the catch-all _text field (merged trunk r1650701) ",
            "id": "comment-14272182"
        },
        {
            "date": "2015-01-10T01:11:43+0000",
            "author": "Steve Rowe",
            "content": "I reverted my initial commit, then made changes to schema.xml, putting back most field type and dynamic fields I had removed, added dynamic fields for each field type when they weren't there, added a warning about the catch-all _text field to the schema, then renamed schema.xml to managed-schema.   This keeps the comments-as-documentation intact in the configset, where they won't be overwritten.  Also, the schema will be much easier to maintain, and track history for.\n\nI think this is done. (Should have reopened and then resolved again - too late now...) ",
            "id": "comment-14272191"
        },
        {
            "date": "2015-01-21T02:04:48+0000",
            "author": "Steve Rowe",
            "content": "Reopening to put back the *_t dynamic field removed under this issue from data_driven_schema_configs. ",
            "id": "comment-14285009"
        },
        {
            "date": "2015-01-21T02:13:58+0000",
            "author": "Steve Rowe",
            "content": "I mistakenly removed the *_t dynamic field from data_drive_schema_configs's managed-schema.\n\nCurrently data_driven_schema_configs has:\n\n\n<dynamicField name=\"*_txt\" type=\"text_general\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>\n\n\n\nI'm going to remove multiValued=\"true\" from the *_txt declaration (since the text_general field type already has multiValued=\"true\", and then make *_t be the same as it - the result will be:\n\n\n    <dynamicField name=\"*_t\"   type=\"text_general\" indexed=\"true\" stored=\"true\"/>\n    <dynamicField name=\"*_txt\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>\n\n\n\nCommitting shortly. ",
            "id": "comment-14285022"
        },
        {
            "date": "2015-01-21T02:15:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653419 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1653419 ]\n\nSOLR-6913: put back mistakenly removed '*_t' dynamic field ",
            "id": "comment-14285023"
        },
        {
            "date": "2015-01-21T02:15:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653420 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653420 ]\n\nSOLR-6913: put back mistakenly removed '*_t' dynamic field (merged trunk r1653419) ",
            "id": "comment-14285025"
        },
        {
            "date": "2015-01-21T02:16:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653421 from Use account \"steve_rowe\" instead in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1653421 ]\n\nSOLR-6913: put back mistakenly removed '*_t' dynamic field (merged trunk r1653419) ",
            "id": "comment-14285026"
        },
        {
            "date": "2015-01-21T02:17:31+0000",
            "author": "Steve Rowe",
            "content": "Put back the *_t dynamic field on trunk, branch_5x, and lucene_solr_5_0. ",
            "id": "comment-14285028"
        },
        {
            "date": "2015-02-23T05:00:39+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332555"
        }
    ]
}