{
    "id": "LUCENE-7615",
    "title": "SpanSynonymQuery",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Won't Fix",
        "affect_versions": "7.0",
        "status": "Resolved",
        "type": "Improvement",
        "components": [
            "core/search"
        ],
        "fix_versions": []
    },
    "description": "A SpanQuery that tries to score as SynonymQuery.",
    "attachments": {
        "LUCENE-7615.patch": "https://issues.apache.org/jira/secure/attachment/12845291/LUCENE-7615.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15792835",
            "date": "2017-01-02T13:04:37+0000",
            "content": "Patch of 2 Jan 2017.\n\nThis can be used as proximity subquery whenever SynonymQuery is used now, i.e. for synonym terms.\n\nI think this improves span scoring somewhat, see the tests and the test output when uncommenting showQueryResults for the test cases with two terms.\n\nImplementation:\nSynonymQuery exposes new methods getField() and SynonymWeight.getSimScorer() for use in SpanSynonymQuery.\n\nImproved use of o.a.l.index.Terms and TermsEnum in SynonymQuery, at most a single TermsEnum will be used.\nAside: how about renaming Terms to FieldTerms?\n\nThis takes DisjunctionSpans out of SpanOrQuery.\nThis adds SynonymSpans as (an almost empty) subclass of DisjunctionSpans, for later further scoring improvement.\n\nPHRASE_TO_SPAN_TERM_POSITIONS_COST is used from SpanTermQuery and made package private there. ",
            "author": "Paul Elschot"
        },
        {
            "id": "comment-15792842",
            "date": "2017-01-02T13:09:47+0000",
            "content": "Some plans for using this:\n\nIn LUCENE-7580 to get real synonym scoring behaviour.\n\nIn Surround to score truncations. ",
            "author": "Paul Elschot"
        },
        {
            "id": "comment-15795030",
            "date": "2017-01-03T13:07:57+0000",
            "content": "In the patch of 2 Jan 2017 the term contexts are extracted twice, once in SynonymWeight and once to create the SpanSynonymWeight.\nI'll post a fix later. ",
            "author": "Paul Elschot"
        },
        {
            "id": "comment-15795376",
            "date": "2017-01-03T16:06:55+0000",
            "content": "Patch of 3 Jan 2017.\n\nCompared to yesterday, this adds getTermContexts() in SynonymWeight for use in SpanSynonymQuery. ",
            "author": "Paul Elschot"
        },
        {
            "id": "comment-15801532",
            "date": "2017-01-05T14:46:19+0000",
            "content": "In SpanSynonymQuery.java here, this is not used:\n\nimport org.apache.lucene.search.similarities.Similarity;\n\n ",
            "author": "Paul Elschot"
        },
        {
            "id": "comment-15902073",
            "date": "2017-03-08T22:16:09+0000",
            "content": "GitHub user PaulElschot opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/165\n\n    LUCENE-7615 of 8 March 2017.\n\n    Adds support for SpanSynonymQuery in xml queryparser.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/PaulElschot/lucene-solr lucene7615-20170308\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/165.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #165\n\n\ncommit 676c13c0c70e3f344ad6fb430eb5868270be83aa\nAuthor: Paul Elschot <paul.j.elschot@gmail.com>\nDate:   2017-03-08T22:10:40Z\n\n    LUCENE-7615 of 8 March 2017.\n\n    Adds support for SpanSynonymQuery in xml queryparser.\n\n ",
            "author": "ASF GitHub Bot"
        },
        {
            "id": "comment-16423034",
            "date": "2018-04-02T19:38:51+0000",
            "content": "Resolved: not enough interest. ",
            "author": "Paul Elschot"
        }
    ]
}