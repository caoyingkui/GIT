{
    "id": "SOLR-8420",
    "title": "Date statistics: sumOfSquares overflows long",
    "details": {
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5.1",
            "6.0"
        ],
        "affect_versions": "5.4",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "The values for Dates are large enough that squaring them overflows a \"long\" field. This should be converted to a double. \n\nStatsValuesFactory.java, line 755 DateStatsValues#updateTypeSpecificStats Add a cast to double \n\nsumOfSquares += ( (double)value * value * count);",
    "attachments": {
        "StdDev.java": "https://issues.apache.org/jira/secure/attachment/12779138/StdDev.java",
        "0001-Fix-overflow-in-date-statistics.patch": "https://issues.apache.org/jira/secure/attachment/12777818/0001-Fix-overflow-in-date-statistics.patch",
        "SOLR-8420.patch": "https://issues.apache.org/jira/secure/attachment/12789853/SOLR-8420.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-18T18:00:03+0000",
            "author": "Tom Hill",
            "content": "Fixes overflow in stddev, too.\n\nNot ready to commit. I still have to fix a rounding error in TestDistributed. ",
            "id": "comment-15064346"
        },
        {
            "date": "2015-12-22T22:01:44+0000",
            "author": "Tom Hill",
            "content": "Just a quick demo of why TestDistributedSearch is failing, when running with the patch.\n\nWhen TestDistributedSearch#test is run with two partitions, it gets a slightly different value than when run on one partition. \n\nThe two results are \n100010100011010110010111011100111101011001010000011100001000110\n100010100011010110010111011100111101011001010000011100001000101\n\nThis matches the numbers seen in TestDistributedSearch.\n\nIt looks like we need to add some delta into the compare for doubles in \n\nBaseDistributedSearchTestCase#public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) ",
            "id": "comment-15068793"
        },
        {
            "date": "2015-12-23T10:29:27+0000",
            "author": "Christine Poerschke",
            "content": "sumOfSquares overflow, interesting. I wonder if DateStatsValues's private long sum = 0; might perhaps become double also (similar to NumericStatsValues's sum being a double already). ",
            "id": "comment-15069489"
        },
        {
            "date": "2015-12-28T21:28:32+0000",
            "author": "Tom Hill",
            "content": "Certainly could be changed. Looks like it currently would overflow if you are looking at more than 6 million+ dates, which is a pretty small number today.\n\nDownside is small loss of precision for smaller datasets.\n\nI think it probably should be changed. I'll update the patch.\n ",
            "id": "comment-15073165"
        },
        {
            "date": "2016-01-20T00:28:18+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I wonder if DateStatsValues's private long sum = 0; might perhaps become double also (similar to NumericStatsValues's sum being a double already).\nYes, I think it should. This should also change the output, currently it's a date like:\n\n<date name=\"sum\">122366-06-12T21:06:06Z</date>\n\n ",
            "id": "comment-15107737"
        },
        {
            "date": "2016-02-10T21:38:20+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I created SOLR-8671 for this particular change ",
            "id": "comment-15141720"
        },
        {
            "date": "2016-02-11T00:24:20+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "While looking at this patch I noticed that in the line 841 of TestDistributedSearch it says:\n\nrsp = query(\"q\", \"*:*\", \"rows\", \"0\", \"stats\", \"true\",\n\n\nbut was intended to be\n\nrsp = query(\"q\", q, \"rows\", \"0\", \"stats\", \"true\",\n\n\nWe should fix that as part of this Jira too. ",
            "id": "comment-15142019"
        },
        {
            "date": "2016-02-23T19:17:58+0000",
            "author": "Tom Hill",
            "content": "This latest version of the path adds an allowance in tests for floating point errors in computations for specific stats. \n\nIt also fixes the error in the test that Tomas noted. ",
            "id": "comment-15159469"
        },
        {
            "date": "2016-02-24T01:13:09+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Thanks Tom Hill, patch looks good to me, will commit shortly ",
            "id": "comment-15160003"
        },
        {
            "date": "2016-02-25T02:52:51+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Minor change, FUZZY comparison passes in case of both numbers being NaN, made the accepted ratio a constant and added some javadocs to FUZZY flag ",
            "id": "comment-15166625"
        },
        {
            "date": "2016-02-25T03:04:50+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 730d10f145378b164a93d63b82a02dcf7f2fdf14 in lucene-solr's branch refs/heads/master from Tomas Fernandez Lobbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=730d10f ]\n\nSOLR-8420: Fix long overflow in sumOfSquares for Date statistics\n\nCasted operations to double. Changed the test to support a percentage error given the FUZZY flag in doubles ",
            "id": "comment-15166636"
        },
        {
            "date": "2016-04-21T21:01:00+0000",
            "author": "Anshum Gupta",
            "content": "Reopening to back port for 5.5.1 ",
            "id": "comment-15252721"
        },
        {
            "date": "2016-04-21T21:49:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2beccf469f9e07eb5a05fef9ec3f869d6da4008a in lucene-solr's branch refs/heads/branch_5x from Tomas Fernandez Lobbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2beccf4 ]\n\nSOLR-8420: Fix long overflow in sumOfSquares for Date statistics\n\nCasted operations to double. Changed the test to support a percentage error given the FUZZY flag in doubles ",
            "id": "comment-15252816"
        },
        {
            "date": "2016-04-21T22:14:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f9acafbd917b7970b29f12e0c637612d2cd216f7 in lucene-solr's branch refs/heads/branch_5_5 from Tomas Fernandez Lobbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f9acafb ]\n\nSOLR-8420: Fix long overflow in sumOfSquares for Date statistics\n\nCasted operations to double. Changed the test to support a percentage error given the FUZZY flag in doubles ",
            "id": "comment-15252869"
        }
    ]
}