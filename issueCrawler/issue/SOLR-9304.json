{
    "id": "SOLR-9304",
    "title": "SOLR_SSL_CHECK_PEER_NAME=false (aka -Dsolr.ssl.checkPeerName=false) has no effect",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "7.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "-Dsolr.ssl.checkPeerName=false is completely ignored on master...\n\n\nhossman@tray:~/lucene/dev/solr [master] $ find -name \\*.java | xargs grep checkPeerName\n./solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil.java:  public static final String SYS_PROP_CHECK_PEER_NAME = \"solr.ssl.checkPeerName\";\nhossman@tray:~/lucene/dev/solr [master] $ find -name \\*.java | xargs grep SYS_PROP_CHECK_PEER_NAME\n./test-framework/src/java/org/apache/solr/util/SSLTestConfig.java:      boolean sslCheckPeerName = toBooleanDefaultIfNull(toBooleanObject(System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME)), true);\n./solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil.java:  public static final String SYS_PROP_CHECK_PEER_NAME = \"solr.ssl.checkPeerName\";",
    "attachments": {
        "SOLR-9304.patch": "https://issues.apache.org/jira/secure/attachment/12901768/SOLR-9304.patch",
        "SOLR-9304-uses-deprecated.patch": "https://issues.apache.org/jira/secure/attachment/12901762/SOLR-9304-uses-deprecated.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-12T20:47:29+0000",
            "author": "Shawn Heisey",
            "content": "Patch that uses deprecated HttpClient stuff.  Also re-introduces a couple of boolean-related methods that perhaps should be done another way.  The patch would probably work, but I don't think it's a very good one. ",
            "id": "comment-16288250"
        },
        {
            "date": "2017-12-12T21:25:36+0000",
            "author": "Shawn Heisey",
            "content": "With some help from Hoss Man, I was able to eliminate the deprecated code.\n\nApparently directly setting things like the hostname verifier can be overridden by other configuration, particularly by setting an SSL context.  I didn't see that being done in the code, but it's something that could be added later.\n\nI did put nocommit in the patch \u2013 I think we need a test that can verify that disabling hostname verification with a sysprop actually works. ",
            "id": "comment-16288293"
        },
        {
            "date": "2017-12-12T22:40:34+0000",
            "author": "Carlton Findley",
            "content": "Thanks for the patch! ",
            "id": "comment-16288400"
        },
        {
            "date": "2017-12-16T00:54:03+0000",
            "author": "Carlton Findley",
            "content": "I tested out the previous patch and still saw the same behavior. I came up with an alternative fix which works in my environment. I also added a couple of unit tests. I added the updated patch for review. ",
            "id": "comment-16293500"
        },
        {
            "date": "2018-03-24T04:49:07+0000",
            "author": "Shawn Heisey",
            "content": "At first I was worried about the fact that the previous patch was 2K and the new one is 12K ... but after a quick look, I see that most of it is a new test.  Always like to see new tests!\n\nI haven't really looked at the test.  Something important to do for any test:  Run the test without the fix and make sure it fails, then run it again with the fix and make sure it passes.\n\nI'm uploading a slightly modified patch.  Instead of defining the socket factory initially and then defining a new socket factory if the check is disabled, it uses an \"else\" clause so the object is created once either way. ",
            "id": "comment-16412409"
        },
        {
            "date": "2018-03-24T04:56:15+0000",
            "author": "Shawn Heisey",
            "content": "I did have to resolve a merge conflict when I applied the patch to master.  Didn't look extensively into what was wrong, but I think I got it worked out, the new patch and the old patch are very similar.  I did reorganize the imports in the test class.  One of the conflicts was in the imports, so I just deleted the entire conflicting section and let eclipse figure out what imports were needed.  ",
            "id": "comment-16412418"
        },
        {
            "date": "2018-03-24T05:04:58+0000",
            "author": "Shawn Heisey",
            "content": "I screwed up my \"git diff\".  Have to upload it again.\n\nI notice that two methods were removed from the test.  It looks like they were unused. ",
            "id": "comment-16412421"
        },
        {
            "date": "2018-03-26T16:17:08+0000",
            "author": "Carlton Findley",
            "content": "Thanks for working on this! ",
            "id": "comment-16414073"
        },
        {
            "date": "2018-03-31T00:11:34+0000",
            "author": "Carlton Findley",
            "content": "I found an additional issue when testing this out. To support the bin/solr commandline tool, I had to add some logic there to read environment variables into arguments passed to the JVM. Not sure this is the ideal way to do this but does work. I have a patch but it is for 7.2.1, not main, so won't post here. But this is the change for linux, similar change needs to be added to solr.cmd. Then the solr.in.sh needs to have the value set. Added code in bold:\n\n\u00a0\u00a0\u00a0 if [ -n \"$SOLR_SSL_TRUST_STORE_TYPE\" ]; then\n\u00a0\u00a0\u00a0\u00a0\u00a0 SOLR_SSL_OPTS+=\" -Djavax.net.ssl.trustStoreType=$SOLR_SSL_TRUST_STORE_TYPE\"\n\u00a0\u00a0\u00a0 fi\n\u00a0 fi\n\u00a0 if [ -n \"$SOLR_SSL_CHECK_PEER_NAME\" ]; then\n\u00a0\u00a0\u00a0 SOLR_SSL_OPTS+=\" -Dsolr.ssl.checkPeerName=$SOLR_SSL_CHECK_PEER_NAME\"\n\u00a0 fi ",
            "id": "comment-16421094"
        },
        {
            "date": "2018-03-31T02:50:36+0000",
            "author": "Robby Pond",
            "content": "Thanks for working on this patch. I updated the patch with the changes to both bin/solr and bin/solr.cmd ",
            "id": "comment-16421152"
        },
        {
            "date": "2018-04-19T17:07:30+0000",
            "author": "Hoss Man",
            "content": "I think the fix approach in this patch looks correct, allthough 2 related things bother me regarding the testing of this issue...\n\n\n\tthe only tests added are reflection based inspection of the final SchemaRegistery \u2013 which not only means they'll be brittle if/when we upgrade commons-http, but it also means that we're not actaully testing that checkPeerNames==false does what we say it does.  We assert that HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry().lookup(\"https\") is a ConnectionSocketFactory that uses NoopHostnameVerifier, but that doesn't prove prove that invalid hostnames will ignored when that property is set.  (Somewhere down the road either the solr code or the http-commons could be refactored so that that code is irelevant)\n\tIt makes no sense that SSLTestConfig is checking the value of System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME) \u2013 this completely predates this patch, and as far as I can tell is a blatent bug introduced by SOLR-4509 as part of that refactoring, but we should address it here.  The behavior of all our SSL testing should be deterministic regardless of what env/sys-props the user has set.\n\n\n\nI'm about to attach an updated version of the patch with some improvements to address these concerns...\n\n\n\tminor refactoring to HttpClientUtilTest to reduce duplication\n\tre-add create-keystores.sh\n\t\n\t\tthis is the script that creates the keystore our SSL testing uses, and it appears that i removed this in SOLR-10791\n\t\tit really should have been moved to solr/test-framework/src/resources/ prior to that (when the original keystore location was copied/moved).\n\t\n\t\n\timprove create-keystores.sh so that it generates 2 different keystores:\n\t\n\t\t(the existing) keystore that uses \"localhost\" and the loopback IP\n\t\tanother (new) keystore that uses bogus hostname/ip combo that should fail peer name validation on any machine.\n\t\n\t\n\tAdd an option to SSLTestConfig to make peer name validation configurable, and pick the keystore to use based on that choice.\n\t\n\t\tWhen SSLTestConfig's checkPeerName=true, the config will use the exsiting \"localhost\" keystore\n\t\tif it's checkPeerName=false the (new) keystore containing the bogus hostname/ip combo will be used to ensure that all the SSL client code truly is ignoring the peer name in the cert.\n\t\n\t\n\tChange SSLTestConfig so that by default it does NOT do peer name validation\n\t\n\t\tthis is technically a change in the default testing behavior, but in my opinion a minor one since in the past it was only ever validating \"localhost\"\n\t\tif anything it now means less false negatives if someone has \"localhost\" configured improperly on their machine.\n\t\t\n\t\t\twe could potentially randomize this as part of that @RandomizeSSL annotation \u2013 i personally don't see a lot of value in doing that, but i'm open to it if other people feel strongly.\n\t\t\n\t\t\n\t\n\t\n\tAdd 2 new tests to TestMiniSolrCloudClusterSSL:\n\t\n\t\tone that ensures an SSLTestConfig with checkPeerName=true is usable and works and clients can talk to the servers\n\t\tone that \"tests the test\" to ensure that if checkPeerName=false and the servers are using our \"bogus hostname cert\" that a client who trust's that cert, but has set HttpClientUtil.SYS_PROP_CHECK_PEER_NAME=true will get an SSLException if it tries to talk to those servers.\n\t\n\t\n\n\n\n\n\nI'm still doing some manual testing, but feedback appreciated.  Please note that because of the new (binary) keystore files,the patch was generated with git diff --staged --binary.  You should be able to use git apply just fine, but other patch based tools may not be happy with it.\n\n\n\n ",
            "id": "comment-16444395"
        },
        {
            "date": "2018-04-19T21:33:40+0000",
            "author": "Hoss Man",
            "content": "patch updated to:\n\n\tinclude commented out SOLR_SSL_CHECK_PEER_NAME in solr.in.sh and solr.in.cmd\n\tupdate both those files as well as enabling-ssl.adoc to be consistent in their list of settings and comments about those settings\n\n ",
            "id": "comment-16444834"
        },
        {
            "date": "2018-04-20T07:02:15+0000",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m  8s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m  5s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m  5s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 47s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 33s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 33s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   1m 34s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  60m 15s \n  core in the patch failed.  \n\n\n +1 \n  unit  \n   5m  4s \n  solrj in the patch passed.  \n\n\n +1 \n  unit  \n   0m 46s \n  test-framework in the patch passed.  \n\n\n  \n   \n  73m 56s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-9304 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12919899/SOLR-9304.patch \n\n\n Optional Tests \n  validatesourcepatterns  compile  javac  unit  ratsources  checkforbiddenapis  validaterefguide  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 5ef43e9 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_152 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/62/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/62/testReport/ \n\n\n modules \n C: solr solr/core solr/solrj solr/solr-ref-guide solr/test-framework U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/62/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "id": "comment-16445401"
        },
        {
            "date": "2018-04-22T22:01:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2dffe4ed59e6bf7230b9d1a363bc208182afa5a6 in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2dffe4e ]\n\nSOLR-9304: Fix Solr's HTTP handling to respect '-Dsolr.ssl.checkPeerName=false' aka SOLR_SSL_CHECK_PEER_NAME\n\n(cherry picked from commit 4e0e8e979b66abdf0778fc0ea86ae5ef5d8f2f91) ",
            "id": "comment-16447390"
        },
        {
            "date": "2018-04-22T22:01:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4e0e8e979b66abdf0778fc0ea86ae5ef5d8f2f91 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4e0e8e9 ]\n\nSOLR-9304: Fix Solr's HTTP handling to respect '-Dsolr.ssl.checkPeerName=false' aka SOLR_SSL_CHECK_PEER_NAME ",
            "id": "comment-16447391"
        },
        {
            "date": "2018-04-22T22:02:51+0000",
            "author": "Hoss Man",
            "content": "thanks everybody. ",
            "id": "comment-16447392"
        },
        {
            "date": "2018-04-24T00:36:52+0000",
            "author": "Carlton Findley",
            "content": "Thanks for getting this in. ",
            "id": "comment-16449112"
        }
    ]
}