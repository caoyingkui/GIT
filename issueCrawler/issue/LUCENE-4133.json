{
    "id": "LUCENE-4133",
    "title": "FastVectorHighlighter: A weighted approach for ordered fragments",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/highlighter"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA",
            "6.0"
        ],
        "affect_versions": "4.0-ALPHA,                                            6.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The FastVectorHighlighter currently disregards IDF-weights for matching terms within generated fragments. In the worst case, a fragment, which contains high number of very common words, is scored higher, than a fragment that contains all of the terms which have been used in the original query.\n\nThis patch provides ordered fragments with IDF-weighted terms:\n\nFor each distinct matching term per fragment: \nweight = weight + IDF * boost\n\nFor each fragment: \nweight = weight * length * 1 / sqrt( length )\n\n\n\n\nweight\n total weight of fragment\n\n\nIDF\n inverse document frequency for each distinct matching term\n\n\nboost\n query boost as provided, for example term^2\n\n\nlength\n total number of non-distinct matching terms per fragment\n\n\n\n\n\n\nMethod:\n\n\n  public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) {\n    \n    float totalBoost = 0;\n    \n    List<SubInfo> subInfos = new ArrayList<SubInfo>();\n    HashSet<String> distinctTerms = new HashSet<String>();\n    \n    int length = 0;\n\n    for( WeightedPhraseInfo phraseInfo : phraseInfoList ){\n      subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum() ) );\n      for ( TermInfo ti :  phraseInfo.getTermsInfos()) {\n        if ( distinctTerms.add( ti.getText() ) )\n          totalBoost += ti.getWeight() * phraseInfo.getBoost();\n        length++;\n      }\n    }\n    totalBoost *= length * ( 1 / Math.sqrt( length ) );\n    \n    getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) );\n  }\n\n\n\nThe ranking-formula should be the same, or at least similar, to that one used in QueryTermScorer.\n\nThis patch contains:\n\n\n\ta changed class-member in FieldPhraseList (termInfos to termsInfos)\n\ta changed local variable in SimpleFieldFragList (score to totalBoost)\n\tadds a missing @override in SimpleFragListBuilder\n\tclass WeightedFieldFragList, a implementation of FieldFragList\n\tclass WeightedFragListBuilder, a implementation of BaseFragListBuilder\n\tclass WeightedFragListBuilderTest, a simple test-case\n\tupdated docs for FVH\n\n\n\nLast part (see also LUCENE-4091, LUCENE-4107, LUCENE-4113) of LUCENE-3440.",
    "attachments": {
        "LUCENE-4133.patch": "https://issues.apache.org/jira/secure/attachment/12531679/LUCENE-4133.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-06-12T02:31:24+0000",
            "content": "Hi Sebastian, thank you for the patch and the description as always!\n\nI applied the patch to trunk and run test, I got the following error:\n\n\n$ cd lucene/highlighter\n$ ant clean test\n:\ncommon.test:\n    [mkdir] Created dir: /Users/koji/Project/lucene/lusolr/trunk/COMMIT-NEW/lucene/build/highlighter/test\n   [junit4] <JUnit4> says hi! Master seed: F7909ECA1C4FD1AE\n   [junit4] Executing 16 suites with 4 JVMs.\n   [junit4] Suite: org.apache.lucene.search.highlight.custom.HighlightCustomQueryTest\n   [junit4] Completed on J2 in 0.36s, 1 test\n   [junit4]  \n   [junit4] Suite: org.apache.lucene.search.vectorhighlight.SingleFragListBuilderTest\n   [junit4] Completed on J1 in 1.02s, 3 tests\n   [junit4]  \n   [junit4] Suite: org.apache.lucene.search.vectorhighlight.WeightedFragListBuilderTest\n   [junit4] FAILURE 0.85s J0 | WeightedFragListBuilderTest.test2WeightedFragList\n   [junit4]    > Throwable #1: org.junit.ComparisonFailure: expected:<...eboth((195,203)))/0.[26632088](189,289)> but was:<...eboth((195,203)))/0.[86791086](189,289)>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([F7909ECA1C4FD1AE:94B09B8AD58716F0]:0)\n   [junit4]    > \tat org.junit.Assert.assertEquals(Assert.java:125)\n   [junit4]    > \tat org.junit.Assert.assertEquals(Assert.java:147)\n   [junit4]    > \tat org.apache.lucene.search.vectorhighlight.WeightedFragListBuilderTest.test2WeightedFragList(WeightedFragListBuilderTest.java:32)\n   :\n\n\n\nIf I change 0.26632088 to 0.86791086 in WeightedFragListBuilderTest, test is successful. Is the change ok for you? ",
            "author": "Koji Sekiguchi",
            "id": "comment-13293295"
        },
        {
            "date": "2012-06-12T02:33:53+0000",
            "content": "I changed 0.26632088 to 0.86791086 in WeightedFragListBuilderTest and use prettify in package.html in the patch. ",
            "author": "Koji Sekiguchi",
            "id": "comment-13293296"
        },
        {
            "date": "2012-06-12T09:07:42+0000",
            "content": "Hi Koji,\n\nI changed 0.26632088 to 0.86791086 in WeightedFragListBuilderTest and use prettify in package.html in the patch. \n\nUps, yes, sure that's perfectly fine with me. I forgot to update the test when I removed the Math.pow from the formula. Sloppy me!         ",
            "author": "Sebastian Lutze",
            "id": "comment-13293461"
        },
        {
            "date": "2012-06-12T14:08:55+0000",
            "content": "Committed in trunk and 4x. ",
            "author": "Koji Sekiguchi",
            "id": "comment-13293645"
        }
    ]
}