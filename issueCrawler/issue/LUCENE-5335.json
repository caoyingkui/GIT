{
    "id": "LUCENE-5335",
    "title": "Change raw Map type to Map<String,Object> for ValueSource context",
    "details": {
        "components": [],
        "fix_versions": [],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Sub-task",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Just as the title says.  Simple refactoring.",
    "attachments": {
        "LUCENE-5335.patch": "https://issues.apache.org/jira/secure/attachment/12612729/LUCENE-5335.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-11-07T22:35:37+0000",
            "content": "+1 ",
            "author": "Adrien Grand",
            "id": "comment-13816729"
        },
        {
            "date": "2013-11-07T22:45:58+0000",
            "content": "Hmmm, but the map is currently an identity hash map, and all the keys are not currently Strings.  It may not always be easy to come up with a unique String, and perhaps no good reason to require it? ",
            "author": "Yonik Seeley",
            "id": "comment-13816740"
        },
        {
            "date": "2013-11-07T23:04:18+0000",
            "content": "Patch. ",
            "author": "Ryan Ernst",
            "id": "comment-13816752"
        },
        {
            "date": "2013-11-07T23:07:08+0000",
            "content": "\nHmmm, but the map is currently an identity hash map, and all the keys are not currently Strings.\n\nWhere is there a non-String key? The patch compiles fine; I would have expected problems if a key existed somewhere that wasn't a String. ",
            "author": "Ryan Ernst",
            "id": "comment-13816763"
        },
        {
            "date": "2013-11-07T23:34:16+0000",
            "content": "I would have expected problems if a key existed somewhere that wasn't a String.\n\nOn a quick look, you only converted getValues and not createWeight?  Perhaps that's why it compiles (but should get an error at runtime if we have good enough test coverage).\n\nSumTotalTermFreqValueSource is one example of where \"this\" is very conveniently used as a key. ",
            "author": "Yonik Seeley",
            "id": "comment-13816790"
        },
        {
            "date": "2013-11-07T23:35:46+0000",
            "content": "That is strange that it even compiles... your patch has this:\n\n\n+  public FunctionValues getValues(Map<String, Object> context, AtomicReaderContext readerContext) throws IOException {\n     return (FunctionValues)context.get(this);\n   }\n\n\n ",
            "author": "Yonik Seeley",
            "id": "comment-13816794"
        },
        {
            "date": "2013-11-08T07:09:29+0000",
            "content": "I dont think things like SumTotalTermFreqValueSource should be a blocker to fixing this map API, actually I think a cleaner API here is really needed.\n\nLook at DocFreqValueSource for example, it screws this up: if you have 30 segments it will call docFreq for the term 900 times. Same goes with IDFValueSource and many of these other things.\n\nThese \"top level\" valuesources should be implemented in a cleaner and consistent way that is not slow. ",
            "author": "Robert Muir",
            "id": "comment-13817068"
        },
        {
            "date": "2013-11-08T13:53:28+0000",
            "content": "I dont think things like SumTotalTermFreqValueSource should be a blocker to fixing this map API\n\nThe whole point of the current context is so you can do stuff like the current code does, so it's really unclear how you would \"fix\" it (or why it needs fixing), without first figuring out a different way to implement stuff like SumTotalTermFreqValueSource.  In that sense, it certainly does seem like a blocker. ",
            "author": "Yonik Seeley",
            "id": "comment-13817290"
        }
    ]
}