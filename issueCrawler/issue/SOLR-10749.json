{
    "id": "SOLR-10749",
    "title": "Should ref guide asciidoc files' line length be limited?",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Sub-task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "From David Smiley and Jan H\u00f8ydahl on SOLR-10290:\n\n\nDavid: Can we auto-linewrap the asciidoc content we've imported somehow? The lines are super-long in my IDE (IntelliJ). I can toggle the active editor's \"soft wrap\" at least (View menu, then Active Editor menu).\n\nJan: Yea, those lines are long\n\nFrom a conversation Cassandra Targett and I had on SOLR-10379:\n\n\nSteve: I updated the ref guide docs. While I was at it, I installed and used the IntelliJ plugin named \"Wrap To Column\" to wrap at 120 chars (a.k.a. \"fill paragraph\") in the two .adoc files I edited.\n\nCassandra: What is the point of this, or even, the big deal about asking your IDE to do soft wraps instead?\n\nSteve: Not all editors support soft-wrapping. There is project consensus to wrap code at 120-chars; why make an exception for these doc files?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-25T22:12:54+0000",
            "content": "The most recent discussions about code line length:\n\n\"Line length in Lucene/Solr code\", February 2013: https://lists.apache.org/thread.html/32a568c5772f3d23224b92b8350298062ffb13cc5227f27b94aabbef@1361788759@%3Cdev.lucene.apache.org%3E\n\n\"Change line length setting in eclipse to 120 chars\", April 2015: https://lists.apache.org/thread.html/8fea0227dccd362f5457d0b608a8afe31f7aad448a54a8c29d16d057@1429340836@%3Cdev.lucene.apache.org%3E\n ",
            "author": "Steve Rowe",
            "id": "comment-16025470"
        },
        {
            "date": "2017-05-25T22:42:16+0000",
            "content": "FYI, in IntelliJ 2017.1, which I use, soft wrapping can be togged in the current editing window via:\n\n View | Active Editor | Use Soft Wraps\n\n(I had thought that IntelliJ might have a way to configure soft wraps by file type, but apparently this isn't possible.) ",
            "author": "Steve Rowe",
            "id": "comment-16025504"
        },
        {
            "date": "2017-05-26T03:48:00+0000",
            "content": "Yes I think we should line length limit them.  Even if I have IDE features to wrap them, I need to remember to toggle it which is a hassle.  And I practically never (not even once a year) have to use this IDE feature otherwise in my work.\n\nIf we do reformatting, lets do it in commits just for that purpose so as not to confuse reformatting with actual content editing. ",
            "author": "David Smiley",
            "id": "comment-16025764"
        },
        {
            "date": "2017-05-26T19:58:37+0000",
            "content": "Now that I know where the setting is, toggling soft wraps in IntelliJ takes like 5 seconds, and the experience is very smooth: whole words begin on the next line, as opposed to being broken in the middle; and the JavaFX-based preview alignment is maintained automatically.\n\nI'm guessing Cassandra Targett wants to avoid the need for constant line length adjustment busy-work, which could easily dwarf the amount of time it takes to turn on soft wrapping.\n\nAnd I practically never (not even once a year) have to use this IDE feature otherwise in my work.\n\nYeah that was my motivation for the changes I initially made on SOLR-10379, but now that we're all going to be regular ref guide contributors, I'm guessing that the frequency with which we need to do this will increase to the point that it won't feel like a burden. ",
            "author": "Steve Rowe",
            "id": "comment-16026751"
        },
        {
            "date": "2017-05-31T15:54:54+0000",
            "content": "My objection isn't only the busy-work (although that's part of it, which I'll mention below), but that it will actually break the docs. There are two aspects to consider:\n\nFirst, there shouldn't be any issue with forcing a line-length for paragraphs of text. The tools we use to build the PDF and HTML versions default to assuming text in successive lines should go together as a paragraph, and I believe it also automatically adds the proper space between words/sentences. So that aspect of it is fine, although it will get messy with subsequent edits and people not caring enough to make the lines of a paragraph actually flow properly will personally drive me nuts.\n\nHowever, I believe there would be an issue with source and literal blocks, which are meant to be converted exactly the way they are entered into the raw document. For stuff that's from a config file or actual code, no problem because it's probably already line-length limited. But we have a lot of examples of Solr URLs, API calls, request parameters, curl inputs, and even annotated code that are longer than the limit. Also, rendering into PDF will wrap them to fit the width of the page, so with those combined, artificially forcing these might make the examples confusing if they aren't all reviewed to be sure, and I fear subsequent edits with IDEs forcing line breaks will break them every single time the page is touched. And, related to this, I don't know what happens to links to other pages or sites on the internet if they are broken in the middle by a hard line break.\n\nSo, I don't know a way around all that. One compromise I thought of was to say that all new sentences must be on their own lines, but I doubt that's sufficient, or even enforceable in any realistic way. ",
            "author": "Cassandra Targett",
            "id": "comment-16031406"
        },
        {
            "date": "2017-05-31T16:54:25+0000",
            "content": "Another point that I haven't heard yet is how enforcing a line length would affect diff/patch readability.\n\nImagine an *.adoc paragraph of 10 source lines, each close to the max-length.  Adding a phrase in the second line will cause a cascade of words onto all the subsequent lines in the paragraph.  A diff will show 8 lines changed.  This is noisy, and might make actual changes in substance/content hard to pick out.  Especially when there is more than one change per paragraph.\n\nSome diff viewers/editors might mitigate this somewhat.  So take it for what it's worth.  Just wanted to mention it as I hadn't heard anyone bring it up yet. ",
            "author": "Jason Gerlowski",
            "id": "comment-16031506"
        },
        {
            "date": "2017-05-31T19:34:11+0000",
            "content": "FYI I just added a key mapping in IntelliJ to toggle soft wrapping (I used ctrl-option-command-backslash), so toggling soft wraps is now sub-second for me. ",
            "author": "Steve Rowe",
            "id": "comment-16031814"
        },
        {
            "date": "2017-06-01T03:50:04+0000",
            "content": "-1 on enforcing line length. The argument that we enforce line wrapping in code is apples-oranges IMO. In code both readability and correctness are sensitive to line breaks\n\nsomeObject.getSomethng().dosomething()\nor\nsomeObject.getSomethng().\n   dosomething()\n\nor even \nsomeObject.getSomething()\n   .dosomething()\n\nall hang together.\n\nBut\nsomeObject.get\n    Somethng().dosomething()\n\nnot only is hard to follow, it fails compilation.\n\nText is a different beast. If I have to adjust all of the lines in a paragraph because I want to add three words to the first sentence I'll go mad. Requiring each new sentence to start after a hard break would make very spaced-out documents or ones that are visually unappealing. Isn't the usual standard here that hard breaks do a 1.5 spacing where soft breaks are 1.0? So new paragraphs have a bit of extra space from the last sentence of the previous paragraph. Besides, a single sentence could easily go over 120 characters (or whatever the limit would be), does that now require a hard line break too? How would that be distinguished from the user-entered hard breaks at the end of sentences? Line length is really a null concept in flowed text, paragraphs are what count.\n\nI confess that I don't particularly like the vertical pane splitting in the IntelliJ IDE, haven't figured out how to make it horizontal instead, but even so seeing the text appear in its final format as I type is really helpful... ",
            "author": "Erick Erickson",
            "id": "comment-16032398"
        }
    ]
}