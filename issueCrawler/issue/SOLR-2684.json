{
    "id": "SOLR-2684",
    "title": "ConcurrentModificationException from BinaryResponseWriter",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "ConcurrentModificationException  thrown from BinaryResponseWriter  while writing SolrDocument to the response.\n\nSEVERE: java.util.ConcurrentModificationException\n\tat java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)\n\tat java.util.LinkedHashMap$KeyIterator.next(LinkedHashMap.java:384)\n\tat org.apache.solr.response.BinaryResponseWriter$Resolver.resolve(BinaryResponseWriter.java:98)\n\tat org.apache.solr.common.util.JavaBinCodec.writeKnownType(JavaBinCodec.java:242)\n\tat org.apache.solr.common.util.JavaBinCodec.writeVal(JavaBinCodec.java:139)\n\tat org.apache.solr.common.util.JavaBinCodec.writeArray(JavaBinCodec.java:377)\n\tat org.apache.solr.common.util.JavaBinCodec.writeSolrDocumentList(JavaBinCodec.java:340)\n\tat org.apache.solr.common.util.JavaBinCodec.writeKnownType(JavaBinCodec.java:226)\n\tat org.apache.solr.common.util.JavaBinCodec.writeVal(JavaBinCodec.java:139)\n\tat org.apache.solr.common.util.JavaBinCodec.writeNamedList(JavaBinCodec.java:134)\n\tat org.apache.solr.common.util.JavaBinCodec.writeKnownType(JavaBinCodec.java:222)\n\tat org.apache.solr.common.util.JavaBinCodec.writeVal(JavaBinCodec.java:139)\n\tat org.apache.solr.common.util.JavaBinCodec.marshal(JavaBinCodec.java:87)\n\tat org.apache.solr.response.BinaryResponseWriter.write(BinaryResponseWriter.java:49)\n\tat org.apache.solr.servlet.SolrDispatchFilter.writeResponse(SolrDispatchFilter.java:333)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:261)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n\tat org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n\tat org.mortbay.jetty.Server.handle(Server.java:326)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:945)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n\tat org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)\n\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)",
    "attachments": {
        "SOLR-2684.patch": "https://issues.apache.org/jira/secure/attachment/12488220/SOLR-2684.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Arul Kalaipandian",
            "id": "comment-13072869",
            "date": "2011-07-29T15:42:43+0000",
            "content": "Patch to fix the ConcurrentModificationException from SolrDocument "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13073104",
            "date": "2011-07-30T01:32:26+0000",
            "content": "Arul: thank you so much for reporting this and especially for submitting a patch with tests!\n\nI believe the behavior of SolrDocument.getFieldNames is intentional (it's really just a historical alias for keySet from before that class implemented Map) and the true bug is in the code in BinaryResponseWrriter (recently changed by SOLR-1566)\n\nI've attached a patch that:\n\n\tchanged your test to use an actual Resolver instance and moved it to TestBinaryResponseWriter\n\tFixes BinaryResponseWriter.Resolver to use the iterator to remove fields.\n\tadds some javadocs to SolrDocument.getFieldNames clarifying that the Collection is backed by the Map.\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13073645",
            "date": "2011-08-01T18:22:42+0000",
            "content": "Committed revision 1152885.\n\nCHANGES.txt attrib added to SOLR-1566 since this was a bug in unreleased code.\n\nThanks Arul! "
        }
    ]
}