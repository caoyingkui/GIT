{
    "id": "SOLR-6692",
    "title": "hl.maxAnalyzedChars should apply cumulatively on a multi-valued field",
    "details": {
        "components": [
            "highlighter"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.2"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "in DefaultSolrHighlighter, the hl.maxAnalyzedChars figure is used to constrain how much text is analyzed before the highlighter stops, in the interests of performance.  For a multi-valued field, it effectively treats each value anew, no matter how much text it was previously analyzed for other values for the same field for the current document. The PostingsHighlighter doesn't work this way \u2013 hl.maxAnalyzedChars is effectively the total budget for a field for a document, no matter how many values there might be.  It's not reset for each value.  I think this makes more sense.  When we loop over the values, we should subtract from hl.maxAnalyzedChars the length of the value just checked.  The motivation here is consistency with PostingsHighlighter, and to allow for hl.maxAnalyzedChars to be pushed down to term vector uninversion, which wouldn't be possible for multi-valued fields based on the current way this parameter is used.\n\nInterestingly, I noticed Solr's use of FastVectorHighlighter doesn't honor hl.maxAnalyzedChars as the FVH doesn't have a knob for that.  It does have hl.phraseLimit which is a limit that could be used for a similar purpose, albeit applied differently.\n\nFurthermore, DefaultSolrHighligher.doHighlightingByHighlighter should exit early from it's field value loop if it reaches hl.snippets, and if hl.preserveMulti=true",
    "attachments": {
        "SOLR-6692_hl_maxAnalyzedChars_cumulative_multiValued,_and_more.patch": "https://issues.apache.org/jira/secure/attachment/12709267/SOLR-6692_hl_maxAnalyzedChars_cumulative_multiValued%2C_and_more.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-04T16:26:06+0000",
            "author": "David Smiley",
            "content": "Furthermore, DefaultSolrHighligher.doHighlightingByHighlighter should exit early from it's field value loop if it reaches hl.snippets.\n\nUpon further inspection, it can only do that if hl.preserveMulti=true ",
            "id": "comment-14196313"
        },
        {
            "date": "2015-04-03T17:10:11+0000",
            "author": "David Smiley",
            "content": "This patch includes several things. I'm sorry if it's doing too many things; I will break it down into separate patches and/or JIRA issue if advised to. I will certainly point out the separate parts in CHANGES.txt so users know what's going on.  Nevertheless the patch is small IMO and the net LOC is practically 0.\n\n\n\thl.maxAnalyzedChars is budgeted across all values for the field being highlighted.  The budget is decremented by the field length at each iteration, and so progressively smaller limits are passed on through until it's <= 0 at which we we exit the loop. I added a test for this which randomly chooses between a field with term vectors or not.\n\tRefactor/extensibility:\n\t\n\t\tAll methods that were private are now protected.  This widens the scope of possibilities for subclassing without having to fork this code.\n\t\tThe no-arg constructor isn't used; I removed it and made the SolrCore field final as a clarification.  If anyone ever tried to use the no-arg constructor (I have), they would have soon realized that was not an option since an NPE would be thrown from init().\n\t\tI extracted a method getFieldValues whose sole job is to get the field values (Strings) to be highlighted given the provided field name & some other parameters. This is a useful extension point so that a subclass can get the field values from another field (i.e. the source of a copyField).  Till now, people had to use hl.requireFieldMatch=false which had its drawbacks in terms of highlight precision.  A side-benefit is that this method is aware of hl.maxMultiValuedToMatch and hl.maxAnalyzedChars, which will limit the values it returns. This aids the term-vector code path which can now in more circumstances see when there is only one value to highlight, and thus forgo wrapping the term vector stream with a OffsetWindow filter, which is a big penalty to avoid.\n\t\n\t\n\thl.usePhraseHighlighter can now be toggled per-field.\n\tIt includes a nocommit to confirm from SOLR-4656 (Erick) that the intention of hl.maxMultiValuedToMatch is to limit fragments, not matching values, despite the parameter name hinting otherwise.\n\tI fixed a bug with hl.maxMultiValuedToMatch in which it would decrement its counter when in fact the fragment didn't match. This bug would only occur when hl.preserveMulti=true.\n\tI fixed a small bug in ordering the fragments by score.  It used Math.round() which will coalesce values close to 0 to appear as the same weighting. Now it simply uses Float.compare(a,b).\n\tnote: the code changes below the field value loop, except for the small score order bug I just mentioned, are purely code clean-up and don't change behavior. The code was more complex due to it thinking a fragment could be null when in fact by that point it's impossible.\n\n ",
            "id": "comment-14394707"
        },
        {
            "date": "2015-04-03T17:48:45+0000",
            "author": "David Smiley",
            "content": "Furthermore, DefaultSolrHighligher.doHighlightingByHighlighter should exit early from it's field value loop if it reaches hl.snippets.\n\nActually it can never do that because it takes the top hl.snippets from every value and then takes the top hl.snippets of that.  Anyway; there's multiple mechanisms to exit early now \u2013 hl.maxAnalyzedChars, and both hl.multiValued* options. ",
            "id": "comment-14394764"
        },
        {
            "date": "2015-04-13T13:35:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673183 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1673183 ]\n\nSOLR-6692: Made standard highlighter more extensible\nPrivate methods are now protected, removed bad constructor, and refactored out getFieldValues() and getResponseForFragments() for both clarity and sub-class extension utility.  Some refactoring of doHighlightingByHighlighter to clarify logic.  These changes should have ZERO effect on highlights. ",
            "id": "comment-14492397"
        },
        {
            "date": "2015-04-13T13:43:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673184 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673184 ]\n\nSOLR-6692: Made standard highlighter more extensible\nPrivate methods are now protected, removed bad constructor, and refactored out getFieldValues() and getResponseForFragments() for both clarity and sub-class extension utility.  Some refactoring of doHighlightingByHighlighter to clarify logic.  These changes should have ZERO effect on highlights. ",
            "id": "comment-14492403"
        },
        {
            "date": "2015-04-13T13:45:12+0000",
            "author": "David Smiley",
            "content": "I'm committing this in pieces to clarify each change.\nOne delta from my patch file here is that I refactored out getResponseForFragments so that a subclass could add scores and/or source offsets. ",
            "id": "comment-14492404"
        },
        {
            "date": "2015-04-13T13:48:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673185 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1673185 ]\n\nSOLR-6692: Don't round highlight fragment scores for ordering purposes ",
            "id": "comment-14492407"
        },
        {
            "date": "2015-04-13T13:49:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673187 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673187 ]\n\nSOLR-6692: Don't round highlight fragment scores for ordering purposes ",
            "id": "comment-14492409"
        },
        {
            "date": "2015-04-13T14:08:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673200 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1673200 ]\n\nSOLR-6692: hl.maxAnalyzedChars should apply cumulatively on a multi-valued field ",
            "id": "comment-14492426"
        },
        {
            "date": "2015-04-13T14:10:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673201 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673201 ]\n\nSOLR-6692: hl.maxAnalyzedChars should apply cumulatively on a multi-valued field ",
            "id": "comment-14492432"
        },
        {
            "date": "2015-04-13T14:53:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673216 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1673216 ]\n\nSOLR-6692: When using hl.maxMultiValuedToMatch with hl.preserveMulti, only count matched snippets. ",
            "id": "comment-14492476"
        },
        {
            "date": "2015-04-13T16:29:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673237 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673237 ]\n\nSOLR-6692: When using hl.maxMultiValuedToMatch with hl.preserveMulti, only count matched snippets. ",
            "id": "comment-14492595"
        },
        {
            "date": "2015-04-13T17:30:20+0000",
            "author": "Varun Thacker",
            "content": "Hi David Smiley,\n\nAre these two failures related? I can reproduce it on my machine but haven't looked into it in detail.\n\n\nant test  -Dtestcase=TestWriterPerf -Dtests.method=testPerf -Dtests.seed=88D84B0068AE130 -Dtests.slow=true -Dtests.locale=es_AR -Dtests.timezone=US/East-Indiana -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n\nant test  -Dtestcase=TestWriterPerf -Dtests.seed=88D84B0068AE130 -Dtests.slow=true -Dtests.locale=es_AR -Dtests.timezone=US/East-Indiana -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n\n ",
            "id": "comment-14492702"
        },
        {
            "date": "2015-04-13T21:11:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673281 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1673281 ]\n\nSOLR-6692: Highlighter NPE bugfix when highlight nonexistent field. ",
            "id": "comment-14493101"
        },
        {
            "date": "2015-04-13T21:12:40+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673283 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673283 ]\n\nSOLR-6692: Highlighter NPE bugfix when highlight nonexistent field. ",
            "id": "comment-14493108"
        },
        {
            "date": "2015-04-14T01:04:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673328 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1673328 ]\n\nSOLR-6692: highlighter refactorings...\n\n\textract method getDocPrefetchFieldNames\n\ttrim field names in getHighlightFields instead of later on\n\tlazy-create FVH (could be expensive for wildcard queries)\n\n ",
            "id": "comment-14493396"
        },
        {
            "date": "2015-04-14T01:37:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1673332 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673332 ]\n\nSOLR-6692: highlighter refactorings...\n\n\textract method getDocPrefetchFieldNames\n\ttrim field names in getHighlightFields instead of later on\n\tlazy-create FVH (could be expensive for wildcard queries)\n\n ",
            "id": "comment-14493428"
        },
        {
            "date": "2015-06-15T21:43:04+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close for 5.2.0. ",
            "id": "comment-14586826"
        }
    ]
}