{
    "id": "LUCENE-8142",
    "title": "Should codecs expose raw impacts?",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "master (8.0)"
        ]
    },
    "description": "Follow-up of LUCENE-4198. Currently, call-sites of TermsEnum.impacts provide a SimScorer so that the maximum score for the block can be computed. Should ImpactsEnum instead return the (freq,norm) pairs and let callers deal with max score computation?",
    "attachments": {
        "LUCENE-8142.patch": "https://issues.apache.org/jira/secure/attachment/12919263/LUCENE-8142.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16439805",
            "date": "2018-04-16T18:09:52+0000",
            "content": "I gave this a try. ImpactsEnum has a new method getImpacts that returns impacts on multiple levels. It makes it naturally implemented by a skip list. It might make it more challenging to back this information by another data-structure, but it also has API benefits, like removing references  to SimScorer  from TermsEnum.impacts.\n\nwikibigall gives an improvement to term queries since this change allows term queries to skip at any level while they could only do it on the first level before. However the fact that the API is a bit more heavy seems to incur a slight slow down to conjunctions/disjunctions. I don't think it is an issue, especially because this change improves testing by allowing to better compare impacts against indexed data. Also this API means that we can now speed up queries that merge frequencies and norms rather than scores like SynonymQuery and BlendedTermQuery, which was not possible before.\n\n\n             AndHighHigh       83.36      (3.8%)       79.45      (3.1%)   -4.7% ( -11% -    2%)\n              OrHighHigh       34.42      (2.7%)       32.93      (2.0%)   -4.3% (  -8% -    0%)\n              AndHighMed      115.73      (3.3%)      111.67      (3.0%)   -3.5% (  -9% -    2%)\n               OrHighMed       24.44      (3.3%)       23.74      (2.1%)   -2.9% (  -8% -    2%)\n               OrHighLow     1952.31      (4.7%)     1912.93      (3.6%)   -2.0% (  -9% -    6%)\n              AndHighLow     1837.61      (4.1%)     1802.22      (3.9%)   -1.9% (  -9% -    6%)\n                  Fuzzy1      229.31      (9.8%)      226.03      (8.9%)   -1.4% ( -18% -   19%)\n                  IntNRQ       31.75     (14.0%)       31.36     (12.5%)   -1.2% ( -24% -   29%)\n                  Fuzzy2      194.10      (9.6%)      192.36     (11.6%)   -0.9% ( -20% -   22%)\n         MedSloppyPhrase       54.96      (4.7%)       54.62      (4.2%)   -0.6% (  -9% -    8%)\n        HighSloppyPhrase        6.21      (5.9%)        6.18      (5.7%)   -0.5% ( -11% -   11%)\n         LowSloppyPhrase       19.26      (4.4%)       19.19      (4.3%)   -0.4% (  -8% -    8%)\n       HighTermMonthSort      180.22      (9.8%)      179.53     (10.4%)   -0.4% ( -18% -   21%)\n                Wildcard       60.86      (6.0%)       60.63      (6.3%)   -0.4% ( -11% -   12%)\n                 Prefix3       88.19      (8.3%)       87.89      (8.5%)   -0.3% ( -15% -   17%)\n                 Respell      195.14      (2.1%)      194.57      (2.5%)   -0.3% (  -4% -    4%)\n              HighPhrase       54.69      (1.6%)       54.72      (1.6%)    0.1% (  -3% -    3%)\n               MedPhrase       41.52      (1.8%)       41.56      (1.9%)    0.1% (  -3% -    3%)\n               LowPhrase       55.59      (1.8%)       55.68      (1.9%)    0.2% (  -3% -    3%)\n             MedSpanNear       28.55      (3.8%)       28.74      (3.8%)    0.7% (  -6% -    8%)\n            HighSpanNear       16.88      (4.6%)       17.03      (4.6%)    0.9% (  -7% -   10%)\n             LowSpanNear       14.50      (6.3%)       14.67      (6.2%)    1.1% ( -10% -   14%)\n   HighTermDayOfYearSort       61.22     (12.3%)       62.04     (12.4%)    1.3% ( -20% -   29%)\n                 LowTerm     2478.52      (4.1%)     2692.79      (4.0%)    8.6% (   0% -   17%)\n                 MedTerm      835.85      (5.8%)     1323.83      (6.8%)   58.4% (  43% -   75%)\n                HighTerm      472.60      (6.8%)     1718.45     (15.6%)  263.6% ( 225% -  306%)\n\n ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16456266",
            "date": "2018-04-27T11:50:29+0000",
            "content": "+1 ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16460998",
            "date": "2018-05-02T13:12:44+0000",
            "content": "Commit af680af77f3f80c779e038a0ad8a136c9dcb9f5d in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=af680af ]\n\nLUCENE-8142: Make postings APIs expose raw impacts rather than scores. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16461165",
            "date": "2018-05-02T15:21:38+0000",
            "content": "Commit 46ecb739766a1a82b458b417e35f9c0936288e65 in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=46ecb73 ]\n\nLUCENE-8142: Fix AssertingImpactsEnum and add missing javadoc. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16461201",
            "date": "2018-05-02T15:42:48+0000",
            "content": "Commit 67c13bbe2ebdab23c8ff316f8f0805529146a63d in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=67c13bb ]\n\nLUCENE-8142: Fix QueryUtils to only call getMaxScore when it is legal to do so. ",
            "author": "ASF subversion and git services"
        }
    ]
}