{
    "id": "LUCENE-7053",
    "title": "Remove deprecated BytesRef#getUTF8SortedAsUTF16Comparator(); remove natural comparator in favour of Java 8 one",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/other"
        ],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "Followup from LUCENE-7052: This removes the legacy, deprecated getUTF8SortedAsUTF16Comparator() in the BytesRef class. I know originally we added the different comparators to be able to allow the index term dict to be sorted in different order. This never proved to be useful, as many Lucene queries rely on the default order. The only codec that used another byte order internally was the Lucene 3 one (but it used the unicode spaghetti algorithm to reorder its term enums at runtime).\n\nThis patch also removes the BytesRef-Comparator completely and just implements compareTo. So all code can rely on natural ordering.\n\nThis patch also cleans up other usages of natural order comparators, e.g. in ArrayUtil, because Java 8 natively provides a comparator.",
    "attachments": {
        "LUCENE-7053.patch": "https://issues.apache.org/jira/secure/attachment/12790352/LUCENE-7053.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15171005",
            "author": "Uwe Schindler",
            "date": "2016-02-28T11:00:37+0000",
            "content": "Patch (copy from LUCENE-7052). "
        },
        {
            "id": "comment-15171008",
            "author": "Uwe Schindler",
            "date": "2016-02-28T11:06:52+0000",
            "content": "There is a bit code duplication in both tests (sorting Strings in code point order), should we maybe move the new comparator to TestUtil? "
        },
        {
            "id": "comment-15171010",
            "author": "Michael McCandless",
            "date": "2016-02-28T11:09:14+0000",
            "content": "+1 to the patch.\n\nYou can also fix TestUnicodeUtil's custom String -> int[] code points logic maybe?\n\nThere is a bit code duplication in both tests (sorting Strings in code point order), should we maybe move the new comparator to TestUtil?\n\n+1\n\nWe can take this further, e.g. I grep'd for places calling BytesRef.getUTF8SortedAsUnicodeComparator and it turns up silliness in BlockTermsReader that should just be invoking BytesRef.compareTo directly instead, I think? "
        },
        {
            "id": "comment-15171012",
            "author": "Uwe Schindler",
            "date": "2016-02-28T11:18:40+0000",
            "content": "We can take this further, e.g. I grep'd for places calling BytesRef.getUTF8SortedAsUnicodeComparator and it turns up silliness in BlockTermsReader that should just be invoking BytesRef.compareTo directly instead, I think?\n\nYeah. As said, we may not remove the comparator completely, but we should only use it at places where we can't use Comparable<BytesRef> interface that BytesRef implements.\n\nYou can also fix TestUnicodeUtil's custom String -> int[] code points logic maybe?\n\nWill check this, too. I am currently investigating it Java 8 already has some Comparator interface somewhere ready-to use. But does not look like that. "
        },
        {
            "id": "comment-15171016",
            "author": "Uwe Schindler",
            "date": "2016-02-28T12:02:09+0000",
            "content": "New patch with Mike's suggestions. I added a comparator static final constant to TestUtil with a warning that it is not as effective as it could be (Dawid Weiss comment on LUCENE-7052).\n\nI did not yet look into further cleaning up and removing comparator usage. "
        },
        {
            "id": "comment-15171021",
            "author": "Uwe Schindler",
            "date": "2016-02-28T12:19:03+0000",
            "content": "New patch:\n\n\tI removed some usage of comparator and replaced by compareTo at many places.\n\tMoved the code of the comparator to compareTo.\n\tThe comparator isstelf is now a static final constant BytesRef.COMPARATOR (the name was horrible). It is documented to just order by bytes. In fact its just a method reference to the compareTo method!\n\tI also removed the chicken-egg statement in FuzzyQuery.\n\n "
        },
        {
            "id": "comment-15171027",
            "author": "Uwe Schindler",
            "date": "2016-02-28T12:35:56+0000",
            "content": "As we implemented compareTo we could remove the comparator completely. One could use Comparator.naturalOrder() (see https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#naturalOrder--) instead (naturalOrder is defined to use compareTo. At places like Collections.sort() we could remove the comparator argument completely.\n\nAny comments on this? "
        },
        {
            "id": "comment-15171058",
            "author": "Robert Muir",
            "date": "2016-02-28T14:39:23+0000",
            "content": "Yes, please, and remove BytesRef.COMPARATOR which just duplicates that: naturalOrder() already returns a singleton.\n\nAlso in cases like TreeSet creation in the join tests, we should just make new TreeSet<>() and not pass any comparator in at all. "
        },
        {
            "id": "comment-15171075",
            "author": "Uwe Schindler",
            "date": "2016-02-28T16:01:33+0000",
            "content": "Here is the comparator cleanup. I removed usage of the BytesRef comparator completely (where possible). Otherwise I used Comparator.naturalOrder().\n\nI also removed the ArrayUtil.naturalComparator() method, because it is obsolete with Java 8. "
        },
        {
            "id": "comment-15171087",
            "author": "Uwe Schindler",
            "date": "2016-02-28T16:18:04+0000",
            "content": "All tests pass. "
        },
        {
            "id": "comment-15171111",
            "author": "Robert Muir",
            "date": "2016-02-28T17:17:08+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15171576",
            "author": "ASF subversion and git services",
            "date": "2016-02-29T08:26:14+0000",
            "content": "Commit f48d23cd1448f20fb1b97ec986ded76a04a7075c in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f48d23c ]\n\nLUCENE-7053: Remove custom comparators from BytesRef class and solely use natural byte[] comparator throughout codebase. It also replaces the natural comparator in ArrayUtil by Java 8's Comparator#naturalOrder(). "
        },
        {
            "id": "comment-15171596",
            "author": "ASF subversion and git services",
            "date": "2016-02-29T08:54:34+0000",
            "content": "Commit 8ffa436f00d24cb45af49160739f71b3654349ce in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8ffa436 ]\n\nLUCENE-7053: Move comparator to better place in code; generalize to use CharSequence instead of String "
        },
        {
            "id": "comment-15171680",
            "author": "Michael McCandless",
            "date": "2016-02-29T10:03:49+0000",
            "content": "Thanks Uwe Schindler! "
        },
        {
            "id": "comment-15174080",
            "author": "ASF subversion and git services",
            "date": "2016-03-01T17:37:15+0000",
            "content": "Commit 3c27980c4ae7777716ba74b3a0e2c70b3dd1c1d4 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3c27980 ]\n\nLUCENE-7053: Simplify code to work around Java 8u25 compiler bug "
        }
    ]
}