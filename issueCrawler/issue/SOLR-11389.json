{
    "id": "SOLR-11389",
    "title": "call registerReporter after Solr(Shard|Cluster)Reporter.setCore[Container]",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "metrics"
        ],
        "type": "Task",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Currently SolrMetricManager.loadReporter does four things:\n\n\tcreates a new SolrMetricReporter instance (object)\n\tcalls reporter.init(pluginInfo); on the object\n\tcalls registerReporter(registry, pluginInfo.name, tag, reporter); for the object\n\treturn reporter; returns the object\n\n\n\nFor the returned object the SolrMetricManager.loadShardReporters and SolrMetricManager.loadClusterReporters callers of SolrMetricManager.loadReporter then call the ((SolrShardReporter)reporter).setCore(core); or ((SolrClusterReporter)reporter).setCoreContainer(cc); method. This means that registerReporter happened before the SolrShardReporter and SolrClusterReporter objects were fully set up. (I have not yet fully investigated if this might be unintentional-and-not-required or intentional-and-required.)\n\nThe changes proposed in this ticket can be summarised as follows:\n\n\n\tSolrMetricReporter.java\n\n-  public SolrMetricReporter loadReporter(...) throws Exception {\n+  public void               loadReporter(...) throws Exception {\n     ...\n     try {\n-      reporter.init(pluginInfo);\n+      if (reporter instanceof SolrShardReporter) {\n+        ((SolrShardReporter)reporter).init(pluginInfo, solrCore);\n+      } else if (reporter instanceof SolrClusterReporter) {\n+        ((SolrClusterReporter)reporter).init(pluginInfo, coreContainer);\n+      } else {\n+        reporter.init(pluginInfo);\n+      }\n     } catch (IllegalStateException e) {\n       throw new IllegalArgumentException(\"reporter init failed: \" + pluginInfo, e);\n     }\n     registerReporter(registry, pluginInfo.name, tag, reporter);\n-    return reporter;\n   }\n\n\n\n\n\n\n\tSolrShardReporter.java\n\n+  @Override\n+  public void init(PluginInfo pluginInfo) {\n+    throw new UnsupportedOperationException(getClass().getCanonicalName()+\".init(PluginInfo) is not supported, use init(PluginInfo,SolrCore) instead.\");\n+  }\n\n-  public void setCore(SolrCore core) {\n+  public void init(PluginInfo pluginInfo, SolrCore core) {\n+    super.init(pluginInfo);\n     ...\n   }\n\n\n\n\n\n\n\tSolrClusterReporter.java\n\n+  @Override\n+  public void init(PluginInfo pluginInfo) {\n+    throw new UnsupportedOperationException(getClass().getCanonicalName()+\".init(PluginInfo) is not supported, use init(PluginInfo,CoreContainer) instead.\");\n+  }\n\n-  public void setCoreContainer(CoreContainer cc) {\n+  public void init(PluginInfo pluginInfo, CoreContainer cc) {\n+    super.init(pluginInfo);\n     ...\n   }\n\n\n\n\n\nContext and motivation for the proposed changes is to support (in SOLR-11291) the factoring out of an abstract SolrCoreReporter class, allowing folks to create new reporters that 'know' the SolrCore they are reporting on.",
    "attachments": {
        "SOLR-11389.patch": "https://issues.apache.org/jira/secure/attachment/12888522/SOLR-11389.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-09-22T16:05:33+0000",
            "content": "Attaching proposed patch. Yet to run the full test suite though. ",
            "author": "Christine Poerschke",
            "id": "comment-16176636"
        },
        {
            "date": "2017-10-10T18:00:26+0000",
            "content": "solr/core unit test suite passes. Questions, comments and/or code reviews welcome as usual. Hoping to commit these changes early next week. ",
            "author": "Christine Poerschke",
            "id": "comment-16199093"
        },
        {
            "date": "2017-10-18T15:13:46+0000",
            "content": "Attaching rebased patch (there was one trivial import related conflict). ",
            "author": "Christine Poerschke",
            "id": "comment-16209512"
        },
        {
            "date": "2017-10-18T15:51:20+0000",
            "content": "Commit 0b0ed2118277a5b22843faec259da5fefad2be53 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0b0ed21 ]\n\nSOLR-11389: For Solr(Shard|Cluster)Reporter instances the SolrMetricManager.registerReporter method is now called after the SolrCore or CoreContainer has been set for the instance. ",
            "author": "ASF subversion and git services",
            "id": "comment-16209567"
        },
        {
            "date": "2017-10-18T15:52:53+0000",
            "content": "Changes committed to master branch; post commit input still welcome as usual.\n\nWill let the change settle in on master branch for a few days before cherry-picking to branch_7x branch. ",
            "author": "Christine Poerschke",
            "id": "comment-16209569"
        },
        {
            "date": "2017-10-24T10:46:02+0000",
            "content": "Commit 87783306a4c4450827f97781734806b1806c4b38 in lucene-solr's branch refs/heads/branch_7x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8778330 ]\n\nSOLR-11389: For Solr(Shard|Cluster)Reporter instances the SolrMetricManager.registerReporter method is now called after the SolrCore or CoreContainer has been set for the instance. ",
            "author": "ASF subversion and git services",
            "id": "comment-16216691"
        }
    ]
}