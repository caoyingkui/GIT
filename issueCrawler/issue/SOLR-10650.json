{
    "id": "SOLR-10650",
    "title": "First start fails due to \"Problem accessing /solr/. Reason:      Not Found\"",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.5.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "After downloading Solr 6.5.1. standalone zip archive, extracting it into `$HOME` and starting it with `cd solr-6.5.1/ && bin/solr start` I see\n\n```\nHTTP ERROR: 404\n\nProblem accessing /solr/. Reason:\n\n    Not Found\n```\n\nwhen I access http://localhost:8983 which redirects to http://localhost:8983/solr.\n\nAfter the initial start there's no log file (at least not one which can intuitively be found with `find . -name '*.log'`). There're some workarounds like http://stackoverflow.com/questions/27669323/solr-404-error-with-getting-admin-page, but they involve log files I don't find (and if they'd exist are unnecessarily hard to find), and this issue is more about shedding light on the fact that the first and possibly simplest use case (starting the application) doesn't work. Any sane person interested in trying out Solr would turn it's back on it immediately which is a petty. Please provide an intuitive configuration-free startup routine like one can expect from any good software.\n\nexperienced with 6.5.1 (which is not in the list of available versions)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-09T13:43:26+0000",
            "content": "Well, I followed your exact step and it works perfectly for me. And what do you mean by: \"experienced with 6.5.1 (which is not in the list of available versions)\"? If you go here: http://lucene.apache.org/solr/downloads.html the click the \"latest downloads\" section you get a bunch of mirrors clearly labeled as 6.5.1.\n\nSo we need a lot more details before there's much we can do. Where did you download from? What operating system? What Java are you running? My guess is you've made some assumptions that are not true. Java 1.8 is required. From the page you linked \"Generally, this error occurs when you have a mismatch between the Solr required Java JDK and your current Java JDK.\".\n\nAnd in the future, when you run into an issue please ping the user's list first until we can agree that it's a code issue, then raise a JIRA. In this case so far  ",
            "author": "Erick Erickson",
            "id": "comment-16002693"
        },
        {
            "date": "2017-05-09T14:37:53+0000",
            "content": "> And what do you mean by: \"experienced with 6.5.1 (which is not in the list of available versions)\"? If you go here: http://lucene.apache.org/solr/downloads.html the click the \"latest downloads\" section you get a bunch of mirrors clearly labeled as 6.5.1.\n\nI'm referring to the available versions of the JIRA issue tracker. It contains a lot of subversions, but only 6.5 and not 6.5.1.\n\n> So we need a lot more details before there's much we can do. Where did you download from? What operating system? What Java are you running? My guess is you've made some assumptions that are not true. Java 1.8 is required. From the page you linked \"Generally, this error occurs when you have a mismatch between the Solr required Java JDK and your current Java JDK.\".\n\nThe issue is indeed if `JAVA_HOME` is set to OpenJDK 9, i.e. `env JAVA_HOME=/usr/lib/jvm/java-9-openjdk-amd64/ bin/solr start` (on Ubuntu 17.04 amd64). It'd be nice to add that as helpful verbose feedback so that the application is usable without a search engine. There's imo no reason why `bin/solr start` should succeed if the application then doesn't work.\n\n> And in the future, when you run into an issue please ping the user's list first until we can agree that it's a code issue, then raise a JIRA. In this case so far \n\nAgreed. I think with the update to the request to improve the feedback and intuitive use, it's an acceptable report, now, and the issues posted on stackoverflow.com confirm that there's an issue. ",
            "author": "Karl Richter",
            "id": "comment-16002792"
        },
        {
            "date": "2017-05-09T14:45:01+0000",
            "content": "JDK 9 is not supported yet. They have changed a number of very deep architectural issues that a bunch of projects (including Lucene/Solr) is still trying to deal with.\n\nPlease retest that with JDK 8.\n\nThe Stack Overflow issue, on the other hand, was about running a version that was too old (and the Solr also was too old). The opposite problem from what you seem to  be having here.\n\nThank you for letting us know you could not select 6.5.1 in the version drop-down. I'll get the Admin to fix that.\n ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-16002802"
        },
        {
            "date": "2017-05-09T15:05:08+0000",
            "content": "> JDK 9 is not supported yet. They have changed a number of very deep architectural issues that a bunch of projects (including Lucene/Solr) is still trying to deal with.\n> \n> Please retest that with JDK 8.\n>\n> The Stack Overflow issue, on the other hand, was about running a version that was too old (and the Solr also was too old). The opposite problem from what you seem to be having here.\n\nThe issue is not about the failure itself, it's about the insufficient feedback which the application supplies when it encounters the failure. ",
            "author": "Karl Richter",
            "id": "comment-16002838"
        },
        {
            "date": "2017-05-09T15:23:46+0000",
            "content": "Care to submit a patch? ",
            "author": "Erick Erickson",
            "id": "comment-16002861"
        },
        {
            "date": "2017-05-09T15:29:10+0000",
            "content": "Your point about feedback is valid. And, there has been a number of improvements in Solr recently to improve that feedback. A number of useless log messages were reduced, some additional error and JVM version detection was added. All of that should already be in 6.5.1.\n\nThere is always more work that can be done, of course. Edge cases (like using unsupported version of JDK here) are always an issue. \n\nCould you check if you have any logs in the solr-6.5.1/server/logs directory? That's where they should be when you do bin/solr start without any other parameters. I am surprised you have nothing there. Especially since from your description it seems that the server part itself started but not the Solr part. Usually, they fail together.\n\nLike I said, yours seems to be a very edge case, probably due to unsupported configuration. But, let's at least try to collect as much information about it as possible to estimate the impact. ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-16002875"
        },
        {
            "date": "2017-05-09T15:44:31+0000",
            "content": "> Your point about feedback is valid. And, there has been a number of improvements in Solr recently to improve that feedback. A number of useless log messages were reduced, some additional error and JVM version detection was added. All of that should already be in 6.5.1.\n>\n> There is always more work that can be done, of course. Edge cases (like using unsupported version of JDK here) are always an issue.\n>\n> Could you check if you have any logs in the solr-6.5.1/server/logs directory? That's where they should be when you do bin/solr start without any other parameters. I am surprised you have nothing there. Especially since from your description it seems that the server part itself started but not the Solr part. Usually, they fail together.\n\nI see `server/logs/solr.log` now both with `env JAVA_HOME=/usr/lib/jvm/java-9-openjdk-amd64/ bin/solr start` and `env JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/ bin/solr start` in a freshly extracted zip in `/tmp`. With OpenJDK it contains\n\n\n2017-05-09 15:33:32.267 INFO  (main) [   ] o.e.j.s.Server jetty-9.3.14.v20161028\n2017-05-09 15:33:32.559 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter  ___      _       Welcome to Apache Solr\u2122 version 6.5.1\n2017-05-09 15:33:32.559 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter / __| ___| |_ _   Starting in standalone mode on port 8983\n2017-05-09 15:33:32.559 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter \\__ \\/ _ \\ | '_|  Install dir: /tmp/solr-6.5.1\n2017-05-09 15:33:32.576 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter |___/\\___/_|_|    Start time: 2017-05-09T15:33:32.561400Z\n2017-05-09 15:33:32.577 INFO  (main) [   ] o.a.s.s.StartupLoggingUtils Property solr.log.muteconsole given. Muting ConsoleAppender named CONSOLE\n2017-05-09 15:33:32.639 INFO  (main) [   ] o.a.s.c.SolrResourceLoader Using system property solr.solr.home: /tmp/solr-6.5.1/server/solr\n2017-05-09 15:33:32.647 INFO  (main) [   ] o.a.s.c.SolrXmlConfig Loading container configuration from /tmp/solr-6.5.1/server/solr/solr.xml\n2017-05-09 15:33:32.822 ERROR (main) [   ] o.a.s.s.SolrDispatchFilter Could not start Solr. Check solr/home property and the logs\n2017-05-09 15:33:32.845 ERROR (main) [   ] o.a.s.c.SolrCore null:java.lang.ExceptionInInitializerError\n\tat java.base/javax.crypto.JceSecurityManager.<clinit>(JceSecurityManager.java:66)\n\tat java.base/javax.crypto.Cipher.getConfiguredPermission(Cipher.java:2610)\n\tat java.base/javax.crypto.Cipher.getMaxAllowedKeyLength(Cipher.java:2634)\n\tat java.base/sun.security.ssl.CipherSuite$BulkCipher.isUnlimited(CipherSuite.java:602)\n\tat java.base/sun.security.ssl.CipherSuite$BulkCipher.<init>(CipherSuite.java:574)\n\tat java.base/sun.security.ssl.CipherSuite$BulkCipher.<clinit>(CipherSuite.java:460)\n\tat java.base/sun.security.ssl.CipherSuite.<clinit>(CipherSuite.java:1074)\n\tat java.base/sun.security.ssl.SSLContextImpl.getApplicableSupportedCipherSuiteList(SSLContextImpl.java:354)\n\tat java.base/sun.security.ssl.SSLContextImpl.access$100(SSLContextImpl.java:42)\n\tat java.base/sun.security.ssl.SSLContextImpl$AbstractTLSContext.<clinit>(SSLContextImpl.java:590)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:292)\n\tat java.base/java.security.Provider$Service.getImplClass(Provider.java:1844)\n\tat java.base/java.security.Provider$Service.newInstance(Provider.java:1820)\n\tat java.base/sun.security.jca.GetInstance.getInstance(GetInstance.java:236)\n\tat java.base/sun.security.jca.GetInstance.getInstance(GetInstance.java:164)\n\tat java.base/javax.net.ssl.SSLContext.getInstance(SSLContext.java:169)\n\tat java.base/javax.net.ssl.SSLContext.getDefault(SSLContext.java:99)\n\tat java.base/javax.net.ssl.SSLSocketFactory.getDefault(SSLSocketFactory.java:123)\n\tat org.apache.http.conn.ssl.SSLSocketFactory.getSystemSocketFactory(SSLSocketFactory.java:190)\n\tat org.apache.http.impl.conn.SchemeRegistryFactory.createSystemDefault(SchemeRegistryFactory.java:85)\n\tat org.apache.solr.handler.component.HttpShardHandlerFactory.init(HttpShardHandlerFactory.java:210)\n\tat org.apache.solr.handler.component.ShardHandlerFactory.newInstance(ShardHandlerFactory.java:47)\n\tat org.apache.solr.core.CoreContainer.load(CoreContainer.java:462)\n\tat org.apache.solr.servlet.SolrDispatchFilter.createCoreContainer(SolrDispatchFilter.java:237)\n\tat org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:169)\n\tat org.eclipse.jetty.servlet.FilterHolder.initialize(FilterHolder.java:137)\n\tat org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:873)\n\tat org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)\n\tat org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:778)\n\tat org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)\n\tat org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)\n\tat org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:499)\n\tat org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:147)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:180)\n\tat org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:458)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:64)\n\tat org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)\n\tat org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)\n\tat org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)\n\tat org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:150)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:561)\n\tat org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:236)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131)\n\tat org.eclipse.jetty.server.Server.start(Server.java:422)\n\tat org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:113)\n\tat org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:389)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1516)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1441)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:547)\n\tat org.eclipse.jetty.start.Main.invokeMain(Main.java:214)\n\tat org.eclipse.jetty.start.Main.start(Main.java:457)\n\tat org.eclipse.jetty.start.Main.main(Main.java:75)\nCaused by: java.lang.SecurityException: Can not initialize cryptographic mechanism\n\tat java.base/javax.crypto.JceSecurity.<clinit>(JceSecurity.java:118)\n\t... 68 more\nCaused by: java.lang.SecurityException: Can't read cryptographic policy directory: unlimited\n\tat java.base/javax.crypto.JceSecurity.setupJurisdictionPolicies(JceSecurity.java:324)\n\tat java.base/javax.crypto.JceSecurity.access$000(JceSecurity.java:73)\n\tat java.base/javax.crypto.JceSecurity$1.run(JceSecurity.java:109)\n\tat java.base/javax.crypto.JceSecurity$1.run(JceSecurity.java:106)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/javax.crypto.JceSecurity.<clinit>(JceSecurity.java:105)\n\t... 68 more\n\n2017-05-09 15:33:32.846 WARN  (main) [   ] o.e.j.d.DeploymentManager Unable to reach node goal: started\njava.lang.ExceptionInInitializerError\n\tat java.base/javax.crypto.JceSecurityManager.<clinit>(JceSecurityManager.java:66)\n\tat java.base/javax.crypto.Cipher.getConfiguredPermission(Cipher.java:2610)\n\tat java.base/javax.crypto.Cipher.getMaxAllowedKeyLength(Cipher.java:2634)\n\tat java.base/sun.security.ssl.CipherSuite$BulkCipher.isUnlimited(CipherSuite.java:602)\n\tat java.base/sun.security.ssl.CipherSuite$BulkCipher.<init>(CipherSuite.java:574)\n\tat java.base/sun.security.ssl.CipherSuite$BulkCipher.<clinit>(CipherSuite.java:460)\n\tat java.base/sun.security.ssl.CipherSuite.<clinit>(CipherSuite.java:1074)\n\tat java.base/sun.security.ssl.SSLContextImpl.getApplicableSupportedCipherSuiteList(SSLContextImpl.java:354)\n\tat java.base/sun.security.ssl.SSLContextImpl.access$100(SSLContextImpl.java:42)\n\tat java.base/sun.security.ssl.SSLContextImpl$AbstractTLSContext.<clinit>(SSLContextImpl.java:590)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:292)\n\tat java.base/java.security.Provider$Service.getImplClass(Provider.java:1844)\n\tat java.base/java.security.Provider$Service.newInstance(Provider.java:1820)\n\tat java.base/sun.security.jca.GetInstance.getInstance(GetInstance.java:236)\n\tat java.base/sun.security.jca.GetInstance.getInstance(GetInstance.java:164)\n\tat java.base/javax.net.ssl.SSLContext.getInstance(SSLContext.java:169)\n\tat java.base/javax.net.ssl.SSLContext.getDefault(SSLContext.java:99)\n\tat java.base/javax.net.ssl.SSLSocketFactory.getDefault(SSLSocketFactory.java:123)\n\tat org.apache.http.conn.ssl.SSLSocketFactory.getSystemSocketFactory(SSLSocketFactory.java:190)\n\tat org.apache.http.impl.conn.SchemeRegistryFactory.createSystemDefault(SchemeRegistryFactory.java:85)\n\tat org.apache.solr.handler.component.HttpShardHandlerFactory.init(HttpShardHandlerFactory.java:210)\n\tat org.apache.solr.handler.component.ShardHandlerFactory.newInstance(ShardHandlerFactory.java:47)\n\tat org.apache.solr.core.CoreContainer.load(CoreContainer.java:462)\n\tat org.apache.solr.servlet.SolrDispatchFilter.createCoreContainer(SolrDispatchFilter.java:237)\n\tat org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:169)\n\tat org.eclipse.jetty.servlet.FilterHolder.initialize(FilterHolder.java:137)\n\tat org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:873)\n\tat org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)\n\tat org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:778)\n\tat org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)\n\tat org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)\n\tat org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:499)\n\tat org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:147)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:180)\n\tat org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:458)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:64)\n\tat org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)\n\tat org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)\n\tat org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)\n\tat org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:150)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:561)\n\tat org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:236)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131)\n\tat org.eclipse.jetty.server.Server.start(Server.java:422)\n\tat org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:113)\n\tat org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:389)\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n\tat org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1516)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1441)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:547)\n\tat org.eclipse.jetty.start.Main.invokeMain(Main.java:214)\n\tat org.eclipse.jetty.start.Main.start(Main.java:457)\n\tat org.eclipse.jetty.start.Main.main(Main.java:75)\nCaused by: java.lang.SecurityException: Can not initialize cryptographic mechanism\n\tat java.base/javax.crypto.JceSecurity.<clinit>(JceSecurity.java:118)\n\t... 68 more\nCaused by: java.lang.SecurityException: Can't read cryptographic policy directory: unlimited\n\tat java.base/javax.crypto.JceSecurity.setupJurisdictionPolicies(JceSecurity.java:324)\n\tat java.base/javax.crypto.JceSecurity.access$000(JceSecurity.java:73)\n\tat java.base/javax.crypto.JceSecurity$1.run(JceSecurity.java:109)\n\tat java.base/javax.crypto.JceSecurity$1.run(JceSecurity.java:106)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/javax.crypto.JceSecurity.<clinit>(JceSecurity.java:105)\n\t... 68 more\n2017-05-09 15:33:32.858 INFO  (main) [   ] o.e.j.s.Server Started @9287ms\n\n\n\nwhich doesn't really help a first-time user who wants to start Solr. Regardless of the availability of logs (which I was wrong about) there should be feedback which is better 404 + \"Not found\" in the Web UI as well. The entry `Caused by: java.lang.SecurityException: Can't read cryptographic policy directory: unlimited` seems to indicate a misconfiguration of my JRE 9, however the start process shouldn't reach so far if Java 9 isn't supported anyway. This implies that a version check is not active. \"Server Started\" is misleading because even though the web server might have started (and be unable to serve anything) it suggests that the Solr is working which it is not. Afaik there's no working JDK version check in 6.5.1 if \"working\" includes useful feedback (which it always should).\n\nCan you reproduce this issue with Ubuntu 17.04, download from http://apache.mirror.iphh.net/lucene/solr/6.5.1/solr-6.5.1.zip to `/tmp`, unzipping and start with the two `env` directives given above (with OpenJDKs from Ubuntu packages)?\n\nThank you for your patient feedback. ",
            "author": "Karl Richter",
            "id": "comment-16002911"
        },
        {
            "date": "2017-05-09T15:54:13+0000",
            "content": "Ok,\n\nSo, we do have logs clearing showing Solr did not start well. And we know the underlying cause (incorrect Java version), so it is not a bug.\n\nAnd we know - from other un-linked Jiras - that other similar use cases (e.g. missing Java setup, earlier, rather than later Java version) are now detected. We also know that most issues when Solr does not start, the bin/solr script does catch that and complaint (e.g. if there is a port conflict).\n\nSo, to me, this case becomes VERY SPECIFICALLY about adding a version check and an error message for a later Java version. As such, it is probably not the highest priority, but we can adjust the Jira title and summary to reflect specific use case. A patch - of course - would be welcome too. ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-16002930"
        }
    ]
}