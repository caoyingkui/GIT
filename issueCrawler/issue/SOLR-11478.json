{
    "id": "SOLR-11478",
    "title": "Solr should remove itself from live_nodes in zk immediately on shutdown",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Solr currently, upon receiving the stop command, removes its entry from the zk /live_nodes znode after it has finished processing all inflight requests, just before finally shutting down.\nIn this case, any applications that depend on a solr node's live_node entry to decide whether or not to query it fail once the stop command has been executed but solr has not yet fully shut down.\nSomething similar occurs during startup of a solr node. The solr node seems to add it's entry to the /live_nodes in zk once it is up but before it has started accepting requests and once again, this causes dependent applications to fail in a similar fashion.\nHence, removal of the node entry and addition of the same to the zk live_nodes immediately upon shutting down and at the very end upon coming up respectively will greatly benefit applications that depend the live_nodes znode.",
    "attachments": {
        "SOLR-11478.patch": "https://issues.apache.org/jira/secure/attachment/12892512/SOLR-11478.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-16T03:08:00+0000",
            "content": "For shutdown case, this change makes sense and can easily get done. But for startup cases, this is not trivial and bring little benefit\n\n\tWhen the node startup, it will register all its replicas as DOWN, therefore we do not forward any requests to replicas which have state = DOWN, although /live_nodes entry is already created.\n\tReplicas will want to receive updates requests when its state = RECOVERING ( but refuse query requests ) on startup, therefore live_nodes entry must already be created.\n\n\n\nSo advice for anyone is looking at both /live_nodes and state of replica before sending commands to them. ",
            "author": "Cao Manh Dat",
            "id": "comment-16205397"
        },
        {
            "date": "2017-10-16T03:28:36+0000",
            "content": "When the node startup, it will register all its replicas as DOWN, therefore we do not forward any requests to replicas which have state = DOWN, although /live_nodes entry is already created.\n\nAFAIK Solr node that doesn't have any replicas for a collection - forwards all requests for this collection to other nodes. Shouldn't Solr node with replicas in DOWN state do the same? Thus /live_nodes entry can be present and all its replicas be DOWN - but node still be operational. WDYT? ",
            "author": "Alexey Serba",
            "id": "comment-16205402"
        },
        {
            "date": "2017-10-17T02:13:26+0000",
            "content": "AFAIK Solr node that doesn't have any replicas for a collection - forwards all requests for this collection to other nodes. Shouldn't Solr node with replicas in DOWN state do the same? Thus /live_nodes entry can be present and all its replicas be DOWN - but node still be operational. WDYT?\n\nYeah, that sounds reasonable, but should we handle this in another ticket? Cause It is a different solution. I still think that you should use states.json info so you can boost your performance and avoid unnecessary routing. ",
            "author": "Cao Manh Dat",
            "id": "comment-16206914"
        },
        {
            "date": "2017-10-17T02:39:55+0000",
            "content": "Patch for this ticket, all tests passed. Will commit soon. ",
            "author": "Cao Manh Dat",
            "id": "comment-16206929"
        },
        {
            "date": "2017-10-17T10:35:14+0000",
            "content": "Commit 57e976341b24c5f86f090c52f41ce6940f9cd6a5 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=57e9763 ]\n\nSOLR-11478: Solr should remove itself from live_nodes in zk immediately on shutdown ",
            "author": "ASF subversion and git services",
            "id": "comment-16207267"
        },
        {
            "date": "2017-10-19T02:21:15+0000",
            "content": "Commit 56dee524fec8aa73831a4369740d31bce92f2aa7 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=56dee52 ]\n\nSOLR-11478: Solr should remove itself from live_nodes in zk immediately on shutdown ",
            "author": "ASF subversion and git services",
            "id": "comment-16210478"
        },
        {
            "date": "2017-10-19T03:42:24+0000",
            "content": "Commit 99e853faf820b891d577626d30b15a3dfef72970 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=99e853f ]\n\nSOLR-11478: Only remove nodeAddedPath node if it exists ",
            "author": "ASF subversion and git services",
            "id": "comment-16210529"
        },
        {
            "date": "2017-10-19T03:43:05+0000",
            "content": "Commit 5b04617d67d8585c3bbbdf64e822f2daba1e857d in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5b04617 ]\n\nSOLR-11478: Only remove nodeAddedPath node if it exists ",
            "author": "ASF subversion and git services",
            "id": "comment-16210530"
        }
    ]
}