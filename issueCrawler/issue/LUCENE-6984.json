{
    "id": "LUCENE-6984",
    "title": "MultiTermQuery mutability can cause assertion failures in BooleanQuery",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "BooleanQuery caches its hashcode on the grounds that it is immutable.  However, this immutability doesn't hold if some of its clauses hold queries that are not themselves immutable - for example, a MultiTermQuery with a changeable rewrite method.  If one of these clauses is mutated after the hashcode has been calculated, then the next time the parent BooleanQuery is used the assertion in BooleanQuery.hashCode() will fail.",
    "attachments": {
        "LUCENE-6984.patch": "https://issues.apache.org/jira/secure/attachment/12783335/LUCENE-6984.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15108283",
            "author": "Alan Woodward",
            "date": "2016-01-20T09:32:05+0000",
            "content": "I found this through the highlighting code in luwak, where we rewrite queries into their Span equivalents.  MultiTermQueries are wrapped in SpanMultiTermQueryWrapper, which alters the inner query's RewriteMethod.  If the MTQ is within a deeply-nested BooleanQuery then this invalidates the query's hashcode, and the assertion trips the next time the query is used.\n\nI can see a few ways to solve this:\n\n\tmake MTQ immutable, and rework SpanMTQWrapper so that it uses its inner query's TermsEnum to rewrite itself rather than altering the inner query's rewrite method directly\n\tmake MTQ cloneable, and use a copy of the query in SpanMTQWrapper rather than altering the query directly\n\tstop caching the hashcode on BooleanQuery\n\n\n\nI think we probably need to stop the caching anyway, because there's no way to guarantee that any query passed to BQ is itself immutable, but it's also worth making our core queries immutable if we can. "
        },
        {
            "id": "comment-15108358",
            "author": "Adrien Grand",
            "date": "2016-01-20T10:41:52+0000",
            "content": "The way I see it, queries should be considered immutable once created, so it is a bug that SpanMTQWrapper modifies the query that is passed in its constructor. Removing the hashcode cache could help fix the bug that you hit but then I am a bit afraid that this would still be an issue for simple search use-cases because of filter caching. Maybe a way to fix it would be for SpanMTQWrapper to have its own MTQ wrapper that allows to override the rewrite method of the query that is provided? "
        },
        {
            "id": "comment-15108471",
            "author": "Alan Woodward",
            "date": "2016-01-20T12:51:59+0000",
            "content": "Here's a patch that changes SpanMTQWrapper to have its own RewriteMethod, and to use that for rewriting rather than delegating down to the wrapped query.\n\nI'll open a separate issue to make MTQ and SpanMTQWrapper immutable in trunk. "
        },
        {
            "id": "comment-15108489",
            "author": "Adrien Grand",
            "date": "2016-01-20T13:05:12+0000",
            "content": "+1 to the patch, it is much better than my previous suggestion, and +1 to see if we can make (Span)MTQ immutable "
        },
        {
            "id": "comment-15108552",
            "author": "ASF subversion and git services",
            "date": "2016-01-20T13:36:58+0000",
            "content": "Commit 1725719 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1725719 ]\n\nLUCENE-6984: SpanMultiTermQueryWrapper no longer modifies its wrapped query "
        },
        {
            "id": "comment-15108593",
            "author": "ASF subversion and git services",
            "date": "2016-01-20T14:10:12+0000",
            "content": "Commit 1725724 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1725724 ]\n\nLUCENE-6984: SpanMultiTermQueryWrapper no longer modifies its wrapped query "
        },
        {
            "id": "comment-15108596",
            "author": "Alan Woodward",
            "date": "2016-01-20T14:11:08+0000",
            "content": "Thanks for the review Adrien.  I'll open a new issue to deal with immutability. "
        },
        {
            "id": "comment-15108733",
            "author": "ASF subversion and git services",
            "date": "2016-01-20T15:32:44+0000",
            "content": "Commit 1725743 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1725743 ]\n\nLUCENE-6984: Remove out-of-date javadoc note "
        },
        {
            "id": "comment-15108738",
            "author": "ASF subversion and git services",
            "date": "2016-01-20T15:33:28+0000",
            "content": "Commit 1725744 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1725744 ]\n\nLUCENE-6984: Remove out-of-date javadoc note "
        }
    ]
}