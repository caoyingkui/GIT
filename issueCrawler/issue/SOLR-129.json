{
    "id": "SOLR-129",
    "title": "Solrb - UTF 8 Support for add/delete",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "clients - ruby - flare"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Cannot Reproduce"
    },
    "description": "Hi:\n\nThis could be a ruby utf-8 bug. Anyway when I try to do a UTF-8 document add via post.sh and then do query via Solr Admin everything works as it should. However using the solrb ruby lib or flare UTF-8 doc add doesn't work as it should. I am not sure what I am doing wrong and I don't think its Solr cos it works as it should.\n\nCould this be a famous utf-8 ruby bug? I am using ruby 1.8.5 with rails 1.2.1\n\nCheers",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Antonio Eggberg",
            "id": "comment-12468920",
            "date": "2007-01-31T08:08:30+0000",
            "content": "Please close this bug. I have found the problem. For those of you who might be wondering why do you see strange char in flare index page.. cos you are in debug mode  If I read the code a bit more carefully :-.. anyway turn off \"debug\" in your app/view pages. \n\nHowever the problem of post i.e. add document.. still exist. this is above my java expertise .. so here is the error log...\n\nSEVERE: org.xmlpull.v1.XmlPullParserException: could not resolve entity named 'aring' (position: START_TAG seen ...<field name=\\'description_text\\'>Tv\u00e5... @1:115) \n        at org.xmlpull.mxp1.MXParser.nextImpl(MXParser.java:1282)\n        at org.xmlpull.mxp1.MXParser.next(MXParser.java:1093)\n        at org.xmlpull.mxp1.MXParser.nextText(MXParser.java:1058)\n        at org.apache.solr.core.SolrCore.readDoc(SolrCore.java:927)\n        at org.apache.solr.core.SolrCore.update(SolrCore.java:720)\n        at org.apache.solr.servlet.SolrUpdateServlet.doPost(SolrUpdateServlet.java:53)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:616)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)\n        at org.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplicationHandler.java:473)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:568)\n        at org.mortbay.http.HttpContext.handle(HttpContext.java:1530)\n        at org.mortbay.jetty.servlet.WebApplicationContext.handle(WebApplicationContext.java:633)\n        at org.mortbay.http.HttpContext.handle(HttpContext.java:1482)\n        at org.mortbay.http.HttpServer.service(HttpServer.java:909)\n        at org.mortbay.http.HttpConnection.service(HttpConnection.java:820)\n        at org.mortbay.http.HttpConnection.handleNext(HttpConnection.java:986)\n        at org.mortbay.http.HttpConnection.handle(HttpConnection.java:837)\n        at org.mortbay.http.SocketListener.handleConnection(SocketListener.java:245)\n        at org.mortbay.util.ThreadedServer.handle(ThreadedServer.java:357)\n        at org.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:534)  "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-12469072",
            "date": "2007-01-31T15:19:13+0000",
            "content": "This is not a bug, unless a bad error message is a bug. It looks like the XML uses the  HTML entity \"\u00e5\" , which is not defined in XML. It has nothing to do with UTF-8. It really should generate an error message with line number instead of a stack trace.\n\nwunder "
        },
        {
            "author": "Ed Summers",
            "id": "comment-12469075",
            "date": "2007-01-31T15:29:22+0000",
            "content": "It would be great if you could add a functional test for this test/functional/i18n_test.rb or somesuch.... "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12469334",
            "date": "2007-02-01T05:21:11+0000",
            "content": "I added a controller and view to display the \"features\" from the utf8-example.xml file to flare.\n\n    1) fire up the Solr example application, and post.sh *.xml from the exampledocs directory.\n\n    2) fire up flare, hit /i18n (http://localhost:3000/i18n\n\nShowing all the accented characters worked fine for me.\n\nI suspect we probably still have some i18n issues to iron out, so any help or at least test cases in that regard would be most helpful. "
        }
    ]
}