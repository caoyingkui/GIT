{
    "id": "LUCENE-4753",
    "title": "Make forbidden API checks per-module",
    "details": {
        "components": [
            "general/build"
        ],
        "fix_versions": [
            "4.6"
        ],
        "affect_versions": "None",
        "priority": "Critical",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "After the forbidden API checker was released separately from Lucene as a Google Code project (forked and improved), including Maven support, the checks on Lucene should be changed to work per-module.\n\nThe reason for this is: The improved checker is more picky about e.g. extending classes that are forbidden or overriding methods and calling super.method() if they are on the forbidden signatures list. For these checks, it is not enough to have the class files and the rt.jar, you need the whole classpath. The forbidden APIs 1.0 now by default complains if classes are missing from the classpath.\n\nIt is very hard with the module architecture of Lucene/Solr, to make a uber-classpath, instead the checks should be done per module, so the default compile/test classpath of the module can be used and no crazy path statements with */.jar are needed. This needs some refactoring in the exclusion lists, but the Lucene checks could be done by a macro in common-build, that allows custom exclusion lists for specific modules.\n\nCurrently, the \"strict\" checking is disabled for Solr, so the checker only complains about missing classes but does not fail the build:\n\n\n-check-forbidden-java-apis:\n[forbidden-apis] Reading bundled API signatures: jdk-unsafe-1.6\n[forbidden-apis] Reading bundled API signatures: jdk-deprecated-1.6\n[forbidden-apis] Reading bundled API signatures: commons-io-unsafe-2.1\n[forbidden-apis] Reading API signatures: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr3\\lucene\\tools\\forbiddenApis\\executors.txt\n[forbidden-apis] Reading API signatures: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr3\\lucene\\tools\\forbiddenApis\\servlet-api.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] WARNING: The referenced class 'org.apache.lucene.analysis.uima.ae.AEProviderFactory' cannot be loaded. Please fix the classpath!\n[forbidden-apis] WARNING: The referenced class 'org.apache.lucene.analysis.uima.ae.AEProviderFactory' cannot be loaded. Please fix the classpath!\n[forbidden-apis] WARNING: The referenced class 'org.apache.lucene.analysis.uima.ae.AEProvider' cannot be loaded. Please fix the classpath!\n[forbidden-apis] WARNING: The referenced class 'org.apache.lucene.collation.ICUCollationKeyAnalyzer' cannot be loaded. Please fix the classpath!\n[forbidden-apis] Scanned 2177 (and 1222 related) class file(s) for forbidden API invocations (in 1.80s), 0 error(s).\n\n\n\nI added almost all missing jars, but those do not seem to be in the solr part of the source tree (i think they are only copied when building artifacts). With making the whole thing per module, we can use the default classpath of the module which makes it much easier.",
    "attachments": {
        "LUCENE-4753.patch": "https://issues.apache.org/jira/secure/attachment/12613064/LUCENE-4753.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-11-10T17:29:04+0000",
            "content": "Recently on MacOSX, with the default heap size, we get OOMs while running forbidden-checker. So we should really do this now.\n\nMy proposal: Move the forbidden targets into commons-build.xml on Lucene and Solr. Inside commons-build, also define some properties to make some excludes, so we can define per module, which patterns/filesets should be checked. ",
            "author": "Uwe Schindler",
            "id": "comment-13818498"
        },
        {
            "date": "2013-11-10T17:31:37+0000",
            "content": "The Maven builds are already per module! So we should get the file patterns and targets also synchronized with the definitions in the maven POMs - I have to say: in this case, the maven build is better than our ANT build  Thanks Steve Rowe!!! ",
            "author": "Uwe Schindler",
            "id": "comment-13818499"
        },
        {
            "date": "2013-11-10T22:29:40+0000",
            "content": "Patch. I will commit this soon if nobody objects.\n\nThere is still room for improvements (e.g. we can now enable servlet-api checks in some Lucene modules that use servlets, or enable commons-io checks for lucene modules that use commons-io). ",
            "author": "Uwe Schindler",
            "id": "comment-13818580"
        },
        {
            "date": "2013-11-10T22:35:38+0000",
            "content": "New patch, removed useless dependency. ",
            "author": "Uwe Schindler",
            "id": "comment-13818584"
        },
        {
            "date": "2013-11-10T22:49:37+0000",
            "content": "Final patch. Will commit in a moment. ",
            "author": "Uwe Schindler",
            "id": "comment-13818601"
        },
        {
            "date": "2013-11-10T22:51:31+0000",
            "content": "Commit 1540573 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1540573 ]\n\nLUCENE-4753: Run forbidden-apis Ant task per module. This allows more improvements and prevents OOMs after the number of class files raised recently ",
            "author": "ASF subversion and git services",
            "id": "comment-13818603"
        },
        {
            "date": "2013-11-10T22:59:33+0000",
            "content": "Commit 1540575 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1540575 ]\n\nMerged revision(s) 1540573 from lucene/dev/trunk:\nLUCENE-4753: Run forbidden-apis Ant task per module. This allows more improvements and prevents OOMs after the number of class files raised recently ",
            "author": "ASF subversion and git services",
            "id": "comment-13818609"
        },
        {
            "date": "2013-11-10T23:09:33+0000",
            "content": "FYI: I opened https://code.google.com/p/forbidden-apis/issues/detail?id=20 to improve the memory usage of forbidden-apis. ",
            "author": "Uwe Schindler",
            "id": "comment-13818616"
        },
        {
            "date": "2013-11-11T12:56:09+0000",
            "content": "Hi Uwe, i can't compile anymore since something was changed to build.xml\n\n\nBUILD FAILED\nTarget \"install-forbidden-apis\" does not exist in the project \"solr\". It is used from target \"check-forbidden-apis\".\n\nTotal time: 0 seconds\n\n ",
            "author": "Markus Jelsma",
            "id": "comment-13818926"
        },
        {
            "date": "2013-11-11T13:11:57+0000",
            "content": "Hi,\n\nwhich build target did you call from where? This outdated target \"install-forbidden-apis\" no longer exists (it was renamed). I looks like you have a checkout with mixed svn revisions or you have changed some build.xml files yourself and they conflicted.\n\nBe sure to:\n\n\trevert all changes (make sure you save your changes in a diff before doing this)\n\tupdate your checkout from the root folder (where lucene, dev-tools, and solr subfolders are visible). Updating only solr or lucene subfolder leads to inconsistency as dependencies inside ANT no longer work\n\tif nothing helps, use a fresh checkout and try again. You can apply the patch from step 1 to restore your changes.\n\n\n\nJenkins already verified that everything is fine. I cannot find any problems, too: I can call \"ant compile/test/check-forbidden-apis/...\" from everywhere and it works. ",
            "author": "Uwe Schindler",
            "id": "comment-13818933"
        },
        {
            "date": "2013-11-11T13:24:15+0000",
            "content": "ant example from /solr. I svn upped my checkout not long ago and got no updated build.xml. I upped again and i finally received your commit. Svn must be behind.\nThanks ",
            "author": "Markus Jelsma",
            "id": "comment-13818947"
        },
        {
            "date": "2013-11-11T13:50:09+0000",
            "content": "It is still strange, because the whole change was one single commit. So you would have either nothing or all of the changes. From your error message, it looks as you may have only updated the lucene folder and not solr. Because this old target was only existent in lucene/common-build.xml; if this file was updated, solr would no longer find it with the old name. ",
            "author": "Uwe Schindler",
            "id": "comment-13818970"
        },
        {
            "date": "2013-11-11T14:01:04+0000",
            "content": "I usually update both but perhaps i didn't this time or i didn't get all commits, the latter sometimes happens and then i have to update twice.\nIt's fixed now. ",
            "author": "Markus Jelsma",
            "id": "comment-13818976"
        }
    ]
}