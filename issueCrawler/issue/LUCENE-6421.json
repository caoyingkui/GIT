{
    "id": "LUCENE-6421",
    "title": "Add two-phase support to MultiPhraseQuery",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Two-phase support currently works for both sloppy and exact Scorers but it does not work if you have multiple terms at the same position (MultiPhraseQuery).\n\nThis is because UnionPostingsEnum.nextDoc() aggressively reads and merges all the positions. Even making this initialization lazy might just be enough?",
    "attachments": {
        "LUCENE-6421_luceneutil.patch": "https://issues.apache.org/jira/secure/attachment/12725147/LUCENE-6421_luceneutil.patch",
        "LUCENE-6421.patch": "https://issues.apache.org/jira/secure/attachment/12725146/LUCENE-6421.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14493568",
            "author": "Robert Muir",
            "date": "2015-04-14T05:06:12+0000",
            "content": "See attached patch and benchmarks modifications / tasks file.\n\n\n\tno longer keeps subs \"one document ahead\", its like a normal disjunction\n\tpositions reading/merging are deferred until freq() is called.\n\tgeneral cleanups\n\n\n\nThe problems with the current code is more than just two-phase iteration, because it always reads all positions from all subs on nextDoc()/advance(), it slows down even the simplest multiphrase queries like these added to the tasks file:\n\nMultiPhraseHHH: multiPhrase//(body:in|of the)\nMultiPhraseHHM: multiPhrase//(body:in|of your)\nMultiPhraseHHL: multiPhrase//(body:in|of harvard)\nMultiPhraseMMH: multiPhrase//(body:northern|southern states)\nMultiPhraseMMM: multiPhrase//(body:northern|southern usa)\nMultiPhraseMML: multiPhrase//(body:northern|southern iraq)\n\n\n\nSo in the example of northern|southern states, today all positions are read from either or both 'northern' and 'southern', regardless of whether 'states' is present in the doc at all. Filters will only aggravate the situation even more. \n\nBenchmarking these is super-slow, but after a few iterations it looks like this:\n\n                    Task   QPS trunk      StdDev   QPS patch      StdDev                Pct diff\n          MultiPhraseHHH        0.34      (2.1%)        0.33      (1.4%)   -2.1% (  -5% -    1%)\n          MultiPhraseHHL       17.26      (0.7%)       17.67      (0.5%)    2.3% (   1% -    3%)\n          MultiPhraseHHM        5.13      (1.6%)        5.34      (0.3%)    4.1% (   2% -    6%)\n          MultiPhraseMMH       33.99      (1.3%)       39.19      (0.7%)   15.3% (  13% -   17%)\n          MultiPhraseMML      160.11      (0.2%)      202.29      (0.6%)   26.3% (  25% -   27%)\n          MultiPhraseMMM       72.20      (1.7%)       95.66      (2.0%)   32.5% (  28% -   36%)\n\n "
        },
        {
            "id": "comment-14493849",
            "author": "Robert Muir",
            "date": "2015-04-14T09:44:14+0000",
            "content": "final result:\n\nReport after iter 19:\nChart saved to out.png... (wd: /home/rmuir/workspace/util/src/python)\n                    Task   QPS trunk      StdDev   QPS patch      StdDev                Pct diff\n          MultiPhraseHHH        0.35      (6.3%)        0.35      (5.7%)    2.2% (  -9% -   15%)\n          MultiPhraseHHL       17.21      (1.8%)       17.65      (1.3%)    2.6% (   0% -    5%)\n          MultiPhraseHHM        5.12      (2.8%)        5.42      (1.9%)    5.7% (   1% -   10%)\n          MultiPhraseMMH       33.71      (2.9%)       39.70      (1.2%)   17.8% (  13% -   22%)\n          MultiPhraseMML      160.35      (1.5%)      201.54      (1.4%)   25.7% (  22% -   29%)\n          MultiPhraseMMM       72.26      (2.2%)       95.67      (2.0%)   32.4% (  27% -   37%)\n\n "
        },
        {
            "id": "comment-14494349",
            "author": "Adrien Grand",
            "date": "2015-04-14T16:27:59+0000",
            "content": "+1 this looks much cleaner already "
        },
        {
            "id": "comment-14495027",
            "author": "ASF subversion and git services",
            "date": "2015-04-14T22:26:22+0000",
            "content": "Commit 1673572 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1673572 ]\n\nLUCENE-6421: defer reading of positions in MultiPhraseQuery until they are needed "
        },
        {
            "id": "comment-14495055",
            "author": "ASF subversion and git services",
            "date": "2015-04-14T22:43:32+0000",
            "content": "Commit 1673575 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673575 ]\n\nLUCENE-6421: defer reading of positions in MultiPhraseQuery until they are needed "
        },
        {
            "id": "comment-14495092",
            "author": "ASF subversion and git services",
            "date": "2015-04-14T23:02:23+0000",
            "content": "Commit 1673576 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673576 ]\n\nLUCENE-6421: revert "
        },
        {
            "id": "comment-14495094",
            "author": "ASF subversion and git services",
            "date": "2015-04-14T23:02:54+0000",
            "content": "Commit 1673577 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1673577 ]\n\nLUCENE-6421: revert "
        },
        {
            "id": "comment-14495449",
            "author": "Robert Muir",
            "date": "2015-04-15T00:40:03+0000",
            "content": "The bug was silly. MultiPhraseWeight would 'return null' if one term didn't exist in the segment, but that code is dead (we just ignore it and check if the list of postings is empty at the end).\n\nI also added some unit tests for the postings enum (which didnt have bugs, but still good to have direct tests). "
        },
        {
            "id": "comment-14495479",
            "author": "ASF subversion and git services",
            "date": "2015-04-15T00:54:05+0000",
            "content": "Commit 1673595 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1673595 ]\n\nLUCENE-6421: defer reading of positions in MultiPhraseQuery until they are needed "
        },
        {
            "id": "comment-14495491",
            "author": "ASF subversion and git services",
            "date": "2015-04-15T01:00:12+0000",
            "content": "Commit 1673597 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673597 ]\n\nLUCENE-6421: defer reading of positions in MultiPhraseQuery until they are needed "
        },
        {
            "id": "comment-14586804",
            "author": "Anshum Gupta",
            "date": "2015-06-15T21:42:47+0000",
            "content": "Bulk close for 5.2.0. "
        }
    ]
}