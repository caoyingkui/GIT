{
    "id": "LUCENE-6249",
    "title": "StandardQueryParser doesn't support pure negative clauses",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "4.10.3,                                            5.0",
        "components": [],
        "labels": "",
        "fix_versions": [
            "4.10.5",
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "At first I thought it's by design but Uwe says it's a bug. SQP emits this:\n\n\nStandardQueryParser qp = new StandardQueryParser();\nqp.setDefaultOperator(Operator.AND);\n   \nSystem.out.println(qp.parse(\"summary:foo\", \"deffld\"));\nSystem.out.println(qp.parse(\"-summary:foo\", \"deffld\"));\nSystem.out.println(qp.parse(\"!summary:foo\", \"deffld\"));\nSystem.out.println(qp.parse(\"NOT summary:foo\", \"deffld\"));\n\n\n\nsummary:foo\nsummary:foo\nsummary:foo\nsummary:foo",
    "attachments": {
        "LUCENE-6249.patch": "https://issues.apache.org/jira/secure/attachment/12699136/LUCENE-6249.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14322802",
            "author": "Dawid Weiss",
            "date": "2015-02-16T14:14:39+0000",
            "content": "The problem doesn't seem to be with the grammar, but with query building after the parse tree is acquired.\n\nThe tree is fine:\n\n<modifier operation='MOD_NOT'>\n<field start='9' end='12' field='summary' text='foo'/>\n</modifier>\n\n\n\nbut it eventually goes to a single ModifierQueryNodeBuilder which just returns the unmodified underlying query. I don't fully understand the parser, looking into it. "
        },
        {
            "id": "comment-14322812",
            "author": "Dawid Weiss",
            "date": "2015-02-16T14:28:29+0000",
            "content": "Ok, it looks like any top-level ModifierQueryNode will be ignored because the only reason it exists is that it modifies the behavior of boolean nodes, etc.\n\nI think a top-level check and conversion into a Boolean node should be applied if modifier query node is the top-node. "
        },
        {
            "id": "comment-14323025",
            "author": "Dawid Weiss",
            "date": "2015-02-16T17:10:45+0000",
            "content": "Here's a modification to the parser that I think handles this. "
        },
        {
            "id": "comment-14323235",
            "author": "Dawid Weiss",
            "date": "2015-02-16T20:19:06+0000",
            "content": "Finished a full test run, all tests pass with this patch (Solr and Lucene). If nobody minds, I'll commit it in tomorrow. "
        },
        {
            "id": "comment-14323923",
            "author": "ASF subversion and git services",
            "date": "2015-02-17T08:26:28+0000",
            "content": "Commit 1660315 from Dawid Weiss in branch 'dev/trunk'\n[ https://svn.apache.org/r1660315 ]\n\nLUCENE-6249: StandardQueryParser doesn't support pure negative clauses.\nLUCENE-6248: Remove unused odd constants from StandardSyntaxParser.jj "
        },
        {
            "id": "comment-14323928",
            "author": "ASF subversion and git services",
            "date": "2015-02-17T08:31:32+0000",
            "content": "Commit 1660316 from Dawid Weiss in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1660316 ]\n\nLUCENE-6249: StandardQueryParser doesn't support pure negative clauses.\nLUCENE-6248: Remove unused odd constants from StandardSyntaxParser.jj "
        },
        {
            "id": "comment-14495343",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:42+0000",
            "content": "Bulk close after 5.1 release "
        },
        {
            "id": "comment-14976959",
            "author": "Jigar Shah",
            "date": "2015-10-27T18:55:32+0000",
            "content": "This issue was impacting queries where NOT operator is used within parenthesis which is fixed now, \n\nExample:\n\nlottery AND (NOT ticket)\nLucene 4.10.3: +lottery +ticket   [Incorrect]\nLucene 5.2.0: +lottery +(-ticket) [Correct]\n\nCan we add one testcase having NOT with parenthesis? "
        },
        {
            "id": "comment-14977028",
            "author": "Dawid Weiss",
            "date": "2015-10-27T19:40:15+0000",
            "content": "Please create w new issue and provide a respective patch there. "
        },
        {
            "id": "comment-14977934",
            "author": "Jigar Shah",
            "date": "2015-10-28T08:00:49+0000",
            "content": "Provided patch in LUCENE-6857. \n\nI applied patch attached to the issue on 4.10.3 branch and it works!! Is it possible to get this fix in 4.10.x version of Lucene ? "
        },
        {
            "id": "comment-14978088",
            "author": "Dawid Weiss",
            "date": "2015-10-28T09:49:08+0000",
            "content": "To be honest I don't think version 4.x is even planned unless something major pops up. I think you should consider switching to 5.x line (or fork your patched version). "
        },
        {
            "id": "comment-14978114",
            "author": "Jigar Shah",
            "date": "2015-10-28T10:04:59+0000",
            "content": "It seems this fix is very important considering the following case, it returns hits when it should not return, to me it seems a major bug.\n\nlottery AND (NOT ticket)\nLucene 4.10.3: +lottery +ticket [Incorrect] gives results just because its parsed incorrectly.\nLucene 5.2.0: +lottery +(-ticket) [Correct]\n\nAnd this fix seems to be safe for 4.10 version !! I am not in hurry to get this, But it will be helpful in case some production systems are on 4.x version, and don't want to re-index there database for 5.x just for query parser change. "
        },
        {
            "id": "comment-14978588",
            "author": "ASF subversion and git services",
            "date": "2015-10-28T15:26:19+0000",
            "content": "Commit 1711034 from Dawid Weiss in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1711034 ]\n\nLUCENE-6249: StandardQueryParser doesn't support pure negative clauses. \nLUCENE-6248: Remove unused odd constants from StandardSyntaxParser.jj "
        },
        {
            "id": "comment-14978596",
            "author": "Dawid Weiss",
            "date": "2015-10-28T15:32:24+0000",
            "content": "Backport to 4.10.5 "
        },
        {
            "id": "comment-14978653",
            "author": "Jigar Shah",
            "date": "2015-10-28T16:06:21+0000",
            "content": "Thanks for this Backport  "
        },
        {
            "id": "comment-14978656",
            "author": "Dawid Weiss",
            "date": "2015-10-28T16:07:11+0000",
            "content": "You're welcome! "
        }
    ]
}