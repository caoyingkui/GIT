{
    "id": "SOLR-1880",
    "title": "Performance: Distributed Search should skip GET_FIELDS stage if EXECUTE_QUERY stage gets all fields",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Right now, a typical distributed search using QueryComponent makes two HTTP requests to each shard:\n\n\tSTAGE_EXECUTE_QUERY executes one HTTP request to each shard to get top N ids and sort keys, merges the results to produce a final list of document IDs (PURPOSE_GET_TOP_IDS).\n\tSTAGE_GET_FIELDS executes a second HTTP request to each shard to get the document field values for the final list of document IDs (PURPOSE_GET_FIELDS).\n\n\n\nIf the \"fl\" param is just \"id\" or just \"id,score\", all document data to return is already fetched by STAGE_EXECUTE_QUERY.  The second STAGE_GET_FIELDS query is completely unnecessary.  Eliminating that 2nd HTTP request can make a big difference in overall performance.\n\nAlso, the \"fl\" param only gets id, score and sort columns, it would probably be cheaper to fetch the final sort column data in STAGE_EXECUTE_QUERY which has to read the sort column data anyway, and skip STAGE_GET_FIELDS.",
    "attachments": {
        "SOLR-1880.patch": "https://issues.apache.org/jira/secure/attachment/12629423/SOLR-1880.patch",
        "ASF.LICENSE.NOT.GRANTED--one-pass-query-v1.4.0.patch": "https://issues.apache.org/jira/secure/attachment/12441533/ASF.LICENSE.NOT.GRANTED--one-pass-query-v1.4.0.patch",
        "ASF.LICENSE.NOT.GRANTED--one-pass-query.patch": "https://issues.apache.org/jira/secure/attachment/12441523/ASF.LICENSE.NOT.GRANTED--one-pass-query.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Smith",
            "id": "comment-12856079",
            "date": "2010-04-12T17:47:53+0000",
            "content": "We mainly use Solr mainly to fetch just document IDs, then look up those IDs in a database.  So this would make a big difference for us.\n\nIn particular, we have a few reports that fetch the IDs of top ~50,000 documents (rows=50000).  With so many IDs to return, the GET_TOP_IDS requests execute in a couple of hundred milliseconds but the GET_FIELDS requests take 5-10 seconds.  So on those queries we'd get more than a 10x speedup by skipping the 2nd request. "
        },
        {
            "author": "Shawn Smith",
            "id": "comment-12856080",
            "date": "2010-04-12T17:52:39+0000",
            "content": "Attached a trunk patch that skips STAGE_GET_FIELDS if the \"fl\" param is just \"id\" or \"id,score\". "
        },
        {
            "author": "Shawn Smith",
            "id": "comment-12856121",
            "date": "2010-04-12T18:53:44+0000",
            "content": "Attached a version of the patch that can applied to v1.4.0 source.  The trunk patch above assumes a couple of fixes made since v1.4.0. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13835735",
            "date": "2013-11-30T13:28:46+0000",
            "content": "2013 Old JIRA cleanup "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-13903483",
            "date": "2014-02-17T19:56:17+0000",
            "content": "Updated to latest trunk. \nAdded functional distributed test org.apache.solr.handler.component.DistributedQueryComponentOptimizationTest for one step pass.\nAdded trace to return error reason in org.apache.solr.client.solrj.impl.HttpSolrServer, otherwise runtime errors hard to detect. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13903824",
            "date": "2014-02-18T06:35:27+0000",
            "content": "Also, the \"fl\" param only gets id, score and sort columns, it would probably be cheaper to fetch the final sort column data in STAGE_EXECUTE_QUERY which has to read the sort column data anyway, and skip STAGE_GET_FIELDS.\n\nThanks Vitaliy. When fl=id,score,sortField then the STAGE_GET_FIELDS is still executed, right? In other words, the only case which is optimized is when fl=id,score. That alone is also a nice improvement but since the issue description as well as your test has the above comment, I thought I should ask. "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-13905530",
            "date": "2014-02-19T15:06:15+0000",
            "content": "Yes, this optimization will work in case fl=id,score only "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13908681",
            "date": "2014-02-21T19:02:46+0000",
            "content": "There was some code duplication in QueryComponent.returnFields:\n\nfor (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = (SolrDocumentList) srsp.getSolrResponse().getResponse().get(\"response\");\n\n        for (SolrDocument doc : docs) {\n          Object id = doc.getFieldValue(keyFieldName);\n          ShardDoc sdoc = rb.resultIds.get(id.toString());\n          if (sdoc != null) {\n            if (returnScores && sdoc.score != null) {\n              doc.setField(\"score\", sdoc.score);\n            }\n            rb._responseDocs.set(sdoc.positionInResponse, doc);\n          }\n          if (sdoc != null) {\n            if (returnScores && sdoc.score != null) {\n              doc.setField(\"score\", sdoc.score);\n            }\n            if (removeKeyField) {\n              doc.removeFields(keyFieldName);\n            }\n            rb._responseDocs.set(sdoc.positionInResponse, doc);\n          }\n        }\n      }\n\n\n\nI changed that to:\n\nfor (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = (SolrDocumentList) srsp.getSolrResponse().getResponse().get(\"response\");\n\n        for (SolrDocument doc : docs) {\n          Object id = doc.getFieldValue(keyFieldName);\n          ShardDoc sdoc = rb.resultIds.get(id.toString());\n          if (sdoc != null) {\n            if (returnScores && sdoc.score != null) {\n              doc.setField(\"score\", sdoc.score);\n            }\n            if (removeKeyField) {\n              doc.removeFields(keyFieldName);\n            }\n            rb._responseDocs.set(sdoc.positionInResponse, doc);\n          }\n        }\n      }\n\n\n\nI also removed the comment about fl=id,score,sortField in the DistributedQueryComponentOptimizationTest\n\nThis is ready to go. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13910036",
            "date": "2014-02-24T05:43:25+0000",
            "content": "Commit 1571152 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1571152 ]\n\nSOLR-1880: Distributed Search skips GET_FIELDS stage if EXECUTE_QUERY stage gets all fields. Requests with fl=id or fl=id,score are now single-pass. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13910038",
            "date": "2014-02-24T05:45:14+0000",
            "content": "Commit 1571153 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1571153 ]\n\nSOLR-1880: Distributed Search skips GET_FIELDS stage if EXECUTE_QUERY stage gets all fields. Requests with fl=id or fl=id,score are now single-pass. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13910157",
            "date": "2014-02-24T10:01:59+0000",
            "content": "Thanks Shawn and Vitaliy!\n\nI opened SOLR-5768 for another related improvement suggested by Yonik on the solr-user list. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13982609",
            "date": "2014-04-27T23:25:57+0000",
            "content": "Close issue after release of 4.8.0 "
        }
    ]
}