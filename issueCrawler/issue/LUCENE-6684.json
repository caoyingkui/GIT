{
    "id": "LUCENE-6684",
    "title": "TestSimpleFSLockFactory.testStressLock assert trip only on Windows?",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "It's happened at least twice before; here's the second occurrence:\n\nhttp://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Windows/5042/\n\n\n  [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSimpleFSLockFactory -Dtests.method=testStressLocks -Dtests.seed=86DA7F883D64B036 -Dtests.slow=true -Dtests.locale=th -Dtests.timezone=America/Metlakatla -Dtests.asserts=true -Dtests.file.encoding=Cp1252\n   [junit4] ERROR   1.58s J1 | TestSimpleFSLockFactory.testStressLocks <<<\n   [junit4]    > Throwable #1: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=62, name=Thread-35, state=RUNNABLE, group=TGRP-TestSimpleFSLockFactory]\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([86DA7F883D64B036:D8EB317521C87850]:0)\n   [junit4]    > Caused by: java.lang.AssertionError: hit unexpected NoSuchFileException: file=_3.cfs\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([86DA7F883D64B036]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deleteFile(IndexFileDeleter.java:750)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deletePendingFiles(IndexFileDeleter.java:528)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deleteNewFiles(IndexFileDeleter.java:731)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.deleteNewFiles(IndexWriter.java:4686)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriter$DeleteNewFilesEvent.process(DocumentsWriter.java:732)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4743)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4734)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.doFlush(IndexWriter.java:3115)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.flush(IndexWriter.java:3082)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.shutdown(IndexWriter.java:1064)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1109)\n   [junit4]    > \tat org.apache.lucene.store.BaseLockFactoryTestCase$WriterThread.run(BaseLockFactoryTestCase.java:221)\n   [junit4] IGNOR/A 0.01s J1 | TestSimpleFSLockFactory.testDeleteLockFile\n   [junit4]    > Assumption #1: test requires the ability to delete a locked file(throwable: java.io.IOException: cannot delete file: test.lock, a virus scanner has it open)\n   [junit4]   2> NOTE: test params are: codec=CheapBastard, sim=DefaultSimilarity, locale=th, timezone=America/Metlakatla\n   [junit4]   2> NOTE: Windows 7 6.1 amd64/Oracle Corporation 1.8.0_45 (64-bit)/cpus=3,threads=1,free=44713016,total=64880640\n   [junit4]   2> NOTE: All tests run in this JVM: [TestRAMDirectory, TestFastDecompressionMode, TestSetOnce, TestRegexpQuery, TestDeterminism, TestCachingTokenFilter, TestIOUtils, TestSimpleFSLockFactory]\n   [junit4] Completed [16/398] on J1 in 5.05s, 7 tests, 1 error, 1 skipped <<< FAILURES!\n\n\n\nIt means that somehow on flush IW was asked to remove a new file _3.cfs yet that file does not exist.  I don't think this test generates fake (for testing) exceptions so it's especially curious...",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14631523",
            "author": "Michael McCandless",
            "date": "2015-07-17T16:17:07+0000",
            "content": "It's also especially odd because this file path (deleting new files on flush) should only ever be used to delete the newly flushed files that were just converted into a .cfs file, and so _3.cfs should never have been in that list of files in the first place! "
        },
        {
            "id": "comment-14679144",
            "author": "Robert Muir",
            "date": "2015-08-09T13:34:16+0000",
            "content": "It happens regardless of the lock factory. And the last time i looked at this test, it is not actually stressing locks: it only makes one writer at a time. Maybe I am missing something. "
        },
        {
            "id": "comment-14698220",
            "author": "Michael McCandless",
            "date": "2015-08-15T10:36:48+0000",
            "content": "One way this windows-only failure could happen is if on Windows, sometimes, when you try to delete a file, you hit an IOException yet the delete actually succeeded.\n\nAnother way to hit this would be if windows somehow incorrectly throws NoSuchFileExc or FileNotFoundExc when we try to delete a file that does in fact exist,  i.e. if there is a bug in its low level IO error handling that causes some other problem, such as access denied because the file is still open, to throw the wrong exception. "
        },
        {
            "id": "comment-14698222",
            "author": "Michael McCandless",
            "date": "2015-08-15T10:37:43+0000",
            "content": "And it could also simply be a bug in IndexFileDeleter: this class is really only \"interesting\" on Windows, where file delete fails if a file is still open... "
        },
        {
            "id": "comment-14698223",
            "author": "Michael McCandless",
            "date": "2015-08-15T10:38:03+0000",
            "content": "... yet our mock WindowsFS doesn't provoke the bug. "
        },
        {
            "id": "comment-14721459",
            "author": "Michael McCandless",
            "date": "2015-08-30T09:23:50+0000",
            "content": "Copying my email to the dev list about this:\n\nOK I dug a bit, and this behavior is maybe \"by design\" in Windows:\n\nHere's a java issue about it:\n\n    https://bugs.openjdk.java.net/browse/JDK-8029608\n\nHere's the \"by design\" explanation (though it's very old, I think it's\nlikely the semantics of NTFS have not changed in this regard):\n\n    https://support.microsoft.com/en-us/kb/159199\n\nI didn't realize a file on NTFS could be in this \"pending delete\"\nstate: I think this means the Files.delete call against the file\nsucceeded (maybe?) in one thread, but then other threads still have\nthe file open (in \"shared access\" mode).  This puts the file into\n\"pending delete\" state such that 1) it is still included in the dir\nlisting, but 2) you cannot open it for read or write, nor delete it\nagain ( ? ).\n\nIf this interpretation is correct, it easily explains this failure,\nand it might explain LUCENE-6684 if (maybe?) the original Files.delete\ncall fails w/ an IOException.\n\nI'm going to disable these asserts for Windows: they are just causing\nnoisy false test failures. "
        },
        {
            "id": "comment-14721462",
            "author": "ASF subversion and git services",
            "date": "2015-08-30T09:35:44+0000",
            "content": "Commit 1700100 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1700100 ]\n\nLUCENE-6684: disable asserts on windows that false-trip due to 'pending delete' state that an NTFS file can be in "
        },
        {
            "id": "comment-14721463",
            "author": "ASF subversion and git services",
            "date": "2015-08-30T09:38:58+0000",
            "content": "Commit 1700101 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700101 ]\n\nLUCENE-6684: disable asserts on windows that false-trip due to 'pending delete' state that an NTFS file can be in "
        },
        {
            "id": "comment-15136359",
            "author": "ASF subversion and git services",
            "date": "2016-02-07T18:22:12+0000",
            "content": "Commit f8bd22e58c953a5ef27fd4859c91845755ebd490 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f8bd22e ]\n\nLUCENE-6835, LUCENE-6684: move the 'suppress NSFE on windows' hack down lower, out of IFD into FSDir; also fix IFD to remove segments files before others "
        },
        {
            "id": "comment-15136398",
            "author": "ASF subversion and git services",
            "date": "2016-02-07T19:45:43+0000",
            "content": "Commit f8bd22e58c953a5ef27fd4859c91845755ebd490 in lucene-solr's branch refs/heads/jira/lucene-5438-nrt-replication from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f8bd22e ]\n\nLUCENE-6835, LUCENE-6684: move the 'suppress NSFE on windows' hack down lower, out of IFD into FSDir; also fix IFD to remove segments files before others "
        },
        {
            "id": "comment-15137466",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T18:53:29+0000",
            "content": "Commit 2cee9f16934b6458ee18a60d194e586c33ed36d9 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2cee9f1 ]\n\nLUCENE-6835, LUCENE-6684: keep the 'suppress NSFE on windows' hack inside IFD as well "
        }
    ]
}