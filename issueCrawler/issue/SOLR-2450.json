{
    "id": "SOLR-2450",
    "title": "Carrot2 clustering should use both its own and Solr's stop words",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.2",
            "4.0-ALPHA"
        ],
        "components": [
            "contrib - Clustering"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "While using only Solr's stop words for clustering isn't a good idea (compared to indexing, clustering needs more aggressive stop word removal to get reasonable cluster labels), it would be good if Carrot2 used both its own and Solr's stop words.\n\nI'm not sure what the best way to implement this would be though. My first thought was to simply load stopwords.txt from Solr config dir and merge them with Carrot2's. But then, maybe a better approach would be to get the stop words from the StopFilter being used? Ideally, we should also consider the per-field stop filters configured on the fields used for clustering.",
    "attachments": {
        "SOLR-2450.patch": "https://issues.apache.org/jira/secure/attachment/12475289/SOLR-2450.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13013624",
            "date": "2011-03-30T20:17:59+0000",
            "content": "people can name their stopwords file anything they want \u2013 and that's just with the default StopFilterFactory, it doesn't even account for the possibility of other filter factories that implement similar functionality.\n\none thing you could probably do, assuming you wanted to stick with just worrying about the stock StopFilterFactory, is to query the IndexSchema for the analyzer of the fieldTypes you are interested in (presumably via some configured list of field names) and then test those analyzers to see if they are analysis chain based, and if they are look to see if they contain the StopFilterFactory, and if they do, THEN you can get the list of words (or at the very least: the file the words came from)\n\nAnalysisRequestHandlerBase should have an example of walking an analysis chain to see what factories are in it. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13013629",
            "date": "2011-03-30T20:27:57+0000",
            "content": "just to extend on hossman's point, there are a variety of ways someone could be setting up stopwords:\n\n\n\tWith StopWordFilterFactory\n\tby configuring their analyzer with <analyzer class=....> and the Analyzer actually uses a stopword list internally (in this case, if its a supplied lucene analyzer you can check: if (instanceof StopwordAnalyzerBase) ... and then invoke StopwordAnalyzerBase.getStopwordSet() on the analyzer, but its true someone could make a custom one that uses stopwords, but extends Analyzer directly).\n\tby using stopwords-like stuff such as CommonGramsFilter, that still have the concept of stopwords but just work differently.\n\tby using a custom filter/analyzer of their own that acts like stopfilter.\n\n "
        },
        {
            "author": "Stanislaw Osinski",
            "id": "comment-13015060",
            "date": "2011-04-02T18:11:09+0000",
            "content": "Patch for the use of stop words from the field's StopWordFilterFactory and CommonGramsFilterFactory in addition to Carrot2's built-in stop words.\n\nRequires the SOLR-2448 and SOLR-2449 patches applied.  "
        },
        {
            "author": "Stanislaw Osinski",
            "id": "comment-13034086",
            "date": "2011-05-16T16:30:38+0000",
            "content": "Committed to trunk and branch_3x. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043583",
            "date": "2011-06-03T16:44:54+0000",
            "content": "Bulk close for 3.2 "
        }
    ]
}