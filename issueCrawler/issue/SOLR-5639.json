{
    "id": "SOLR-5639",
    "title": "Return type parameter 'wt' is completely ignored when url is html escaped",
    "details": {
        "affect_versions": "4.5.1",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "query parsers",
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "Querying solr with 'wt' parameter formats the result type as requested which works fine except when url is html escaped.\n\nFor example: \nhttp://localhost:8983/solr/suggest?q=Status:ac&amp;wt=json&indent=true\nthe response I get is :\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n\n<lst name=\"responseHeader\">\n  <int name=\"status\">0</int>\n  <int name=\"QTime\">1</int>\n</lst>\n<lst name=\"spellcheck\">\n  <lst name=\"suggestions\">\n    <lst name=\"ac\">\n      <int name=\"numFound\">5</int>\n      <int name=\"startOffset\">7</int>\n      <int name=\"endOffset\">9</int>\n      <arr name=\"suggestion\">\n        <str>acknowledged</str>\n        <str>ack</str>\n        <str>actual</str>\n        <str>actually</str>\n        <str>access</str>\n      </arr>\n    </lst>\n    <str name=\"collation\">Status:acknowledged</str>\n  </lst>\n</lst>\n</response>\n\nwhereas the correct response should be:\n\n{\n\u00a0 \"responseHeader\":\n{\n\u00a0 \u00a0 \"status\":0,\n\u00a0 \u00a0 \"QTime\":1}\n,\n\u00a0 \"spellcheck\":{\n\u00a0 \u00a0 \"suggestions\":[\n\u00a0 \u00a0 \u00a0 \"ac\",\n{\n\u00a0 \u00a0 \u00a0 \u00a0 \"numFound\":5,\n\u00a0 \u00a0 \u00a0 \u00a0 \"startOffset\":7,\n\u00a0 \u00a0 \u00a0 \u00a0 \"endOffset\":9,\n\u00a0 \u00a0 \u00a0 \u00a0 \"suggestion\":[\"acknowledged\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"ack\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"actual\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"actually\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"access\"]}\n,\n\u00a0 \u00a0 \u00a0 \"collation\",\"Status:acknowledged\"]}}\n\n\nThis causes severe problem when solr is integrated with GWT client where embedded script often encode url as per http encoding and ends up failing with timeout exception. Specially noticeable solr JSONP queries. for example: http://localhost:8983/solr/suggest?q=Status:ac&wt=json&amp;indent=true&json.wrf=xyz when it returns xml instead of json. \n\n Noticeably other arguments works perfectly fine for example: http://localhost:8983/solr/suggest?q=Status:ac&wt=json&amp;indent=true.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13875376",
            "date": "2014-01-17T23:07:32+0000",
            "content": "What you are seeing is not \"http encoding\" or the URL.  What you are describing is a URL that has been \"xml escaped\" (or html escaped\").\n\nif you ask a server for the raw URL /foo?a=b&x=y the application will receive the following parameters:\n\n\t\"a\" = \"b\"\n\t\"amp;x\" = \"y\"\n\n\n\nwhich means if the server is expecting a parameter named \"x\" it will not get one \u2013 this is what's happening in your case: you are sending solr a parameter named \"amp;wt\" instead of named \"wt\" and it's being ignored.\n\nYou can see this fairly clearly using something like \"echoParams\" (which is configured by default in the solr example...\n\n\n$ curl 'http://localhost:8983/solr/collection1/select?indent=true&amp;wt=json'\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n\n<lst name=\"responseHeader\">\n  <int name=\"status\">0</int>\n  <int name=\"QTime\">0</int>\n  <lst name=\"params\">\n    <str name=\"indent\">true</str>\n    <str name=\"amp;wt\">json</str>\n  </lst>\n</lst>\n<result name=\"response\" numFound=\"0\" start=\"0\">\n</result>\n</response>\n\n\n\nYou're going to see the same basic behavior from any server you send a CGI (aka: form data) request to...\n\n\nhossman@frisbee:~$ curl -sS 'http://www.tipjar.com/cgi-bin/test?q=bar&amp;wt=json' | grep '<td>json</td>'\n<tr><td>amp;wt</td><td>json</td><td>json</td></tr>\nhossman@frisbee:~$ curl -sS 'http://www.tipjar.com/cgi-bin/test?q=bar&wt=json' | grep '<td>json</td>'\n<tr><td>wt</td><td>json</td><td>json</td></tr>\n\n\n\nThis causes severe problem when solr is integrated with GWT client where embedded script often encode url as per http encoding and ends up failing with timeout exception. Specially noticeable solr JSONP queries.\n\nI don't really know anything about GWT, but based on your description of the problem it sounds like something/somewhere in your client code is either incorrectly XML/HTML escaping the URL prior to being fetched, or it is correctly XML/HTML escaped for serialization, but then the code you are using to make the call does not know it is XML/HTML escaped and is then attempting to use it as a \"real\" URL.\n\nI suggest that you either: 1) start a thread on solr-user with more detail about your GWT client code to see if other Solr folks with GWT knowledge can help spot the problem; 2) ask on a GWT forum about how/why/where URLs used in JSONP request get escaped and unescaped.\n\nThere's really no bug here. "
        },
        {
            "author": "Suneeta Mall",
            "id": "comment-13875763",
            "date": "2014-01-18T22:39:25+0000",
            "content": "Hello Hoss,\n\nThanks a lot for looking into this issue. I agree with you that the correct term to describe the 'http encoding' is html escaped. And also, when I mentioned that other parameters works when url is html escaped, I was wrong. It was a plugin that was formatting it for me. Apologies for that.\n\nAs per my understanding browsers support html escaped urls and so does most of the web applications (even apache jira handle it (url https://issues.apache.org/jira/secure/RapidBoard.jspa?rapidView=10&view=reporting&amp;chart=burndownChart => please note its not browser thats doing the trick here, because I am testing both the solar and apache jira in the same browser). However I could be wrong.\n\nI would like to look at forums, as suggested by you, and confirm that its okay if Solr does not support html escaped urls before I could close the ticket. \n\nThanks a lot again.  "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13876286",
            "date": "2014-01-20T09:43:03+0000",
            "content": "Perhaps this Stackoverflow thread can clarify things  http://stackoverflow.com/questions/275150/xhtml-and-ampersand-encoding "
        }
    ]
}