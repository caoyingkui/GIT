{
    "id": "SOLR-295",
    "title": "Implementing MoreLikeThis support in DismaxRequestHandler",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There's nothing too clever about this initial patch to be upload shortly, I have simply extracted the MLT code from the StandardRequestHandler and inserted it into the DismaxRequestHandler.  However, there are some broader MLT issues that I'd also like to address in the near future:\n\n1) (trivial) No \"This response format is experimental\" warning when MLT is used with StandardRequestHandler (or DismaxRequestHandler).  Not really a big deal but at least makes developers aware of the possibility of future changes.\n\n2) (trivial) \"org.apache.solr.common.util.MoreLikeThisParams\" should perhaps be moved to the more appropriate package \"org.apache.solr.common.params\".\n\n3) (non-trivial) The ability to specify the list of fields that should be returned when MLT is invoked from an external handler (i.e. StandardRequestHandler).  Currently the field list (FL) parameter is inherited from the main query but I can envisage cases where it would be desirable to specify more or less return fields in the MLT query than the main query.  One complication is that \"mlt.fl\" is already used to specify the fields used for similarity.  Perhaps \"mlt.fl\" is not the best name for this parameter and should be renamed to avoid potential conflict / confusion?\n\n4) (fairly-trivial) On a similar note to 3, there is currently no way to specify a \"start\" value for the rows returned when MLT is invoked from an external handler (e.g. StandardRequestHandler), it is hard-coded to 0 (i.e. the first \"mlt.count\" documents matched).  While I can see the logic in naming the parameter \"mlt.count\", it does seem a little inconsistent and perhaps it would be better to rename (or at least alias) it to \"mlt.rows\" to be consistent with the CommonQueryParameters.  Note that \"mlt.start\" is fundamentally different to the \"mlt.match.offset\" parameter as the later deals with documents matching the initial MLT query while the former deals with documents returned by the MLT query (hope that makes sense).\n\nI have created a patch that implemented \"mlt.start\" (to specify the start doc) and added \"mlt.rows\" that could be used interchangeably with \"mlt.count\" (but I would prefer to remove \"mlt.count\" altogether), but since it involves changing the method definition of MoreLikeThisHelper.getMoreLikeThese(), I wanted to get some opinions before submitting it.\n\n5) (non-trivial) Interesting Terms - the ability to return interesting term information using the \"mlt.interestingTerms\" parameter when MLT is invoked from an external handler.  This is perhaps the most useful feature I am looking to implement, I can see great benefit in being able to provide a list of interesting terms or \"keywords\" for each document returned in a standard or dismax query.  Currently this only available from the MLT request handler so perhaps the best approach would be to re-factor the \"interestingTerms\" code in MoreLikeThisHandler class and put it somewhere in MoreLikeThisHelper so it is available to all handlers?  Again, I would appreciate any comments or suggestions.\n\nI've also noted the MLT features suggested by Tristan [ http://www.nabble.com/MoreLikeThis-with-DisMax-boost-query---functions-tf4047187.html ] which could quite possibly be rolled together with the above points \u2013 I'm not sure whether is is better to have a single ticket tracking several related issues or create invididual tickets for each issue, however will be happy to comply with the Solr issue tracking policy on advice from the core developers.\n\nregards,\nPieter",
    "attachments": {
        "MoreLikeThis-DismaxRequestHandler_SOLR-295.patch": "https://issues.apache.org/jira/secure/attachment/12361455/MoreLikeThis-DismaxRequestHandler_SOLR-295.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Pieter Berkel",
            "id": "comment-12511312",
            "date": "2007-07-10T02:13:11+0000",
            "content": "Patch to add MoreLikeThis functionality to the DismaxRequestHandler. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12511332",
            "date": "2007-07-10T04:48:57+0000",
            "content": "I haven't looked at the patch yet.  Everything sounds reasonable.  I am a bit reluctant to glob MLT on to the dismax request handler because we keep seeing the need to glob on more and more.  Recent discussions have pointed towards a 'search component' framework.  Something that defines a chain of stuff that could typically happen in a query (dismax+mlt+faceting+faceting on mlt+collapse+highlighting+...).  SOLR-281 is a quick/crude implementation.\n\nsomething to think about... "
        },
        {
            "author": "Pieter Berkel",
            "id": "comment-12511346",
            "date": "2007-07-10T07:14:36+0000",
            "content": "Thanks Ryan, I missed that original thread mentioned in SOLR-281 but completely agree with the line of thinking and proposals, (actually I was thinking the same when I made the above patch).  There is little point in duplicating code across request handlers (leading to code bloat as you suggested), refactoring common functionality in separate components is going to ensure consistency in the response format across all handlers.\n\nI'll take a look at the patch submitted on SOLR-281 and see what I can do in terms of implementing my MLT ideas, however until the 'search component' framework concept has really been 'solidified', I'm afraid it's going to be difficult to extend.\n\nregards,\nPieter "
        },
        {
            "author": "Pieter Berkel",
            "id": "comment-12511416",
            "date": "2007-07-10T12:49:19+0000",
            "content": "Probably a good idea to focus efforts on developing pluggable Search Components described in SOLR-281 before tackling suggested MLT improvements. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12543414",
            "date": "2007-11-18T21:36:32+0000",
            "content": "In SOLR-281, DisMaxRequestHandler became a subclass of StandardRequestHandler and both include the MoreLIkeThis query component. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589284",
            "date": "2008-04-15T23:28:41+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tCurrently marked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\t\"Affects Versions\" included 1.3\n\n\n\nThe Fix Version for all 8 issues found was set to 1.3 (1.3 has not yet been released, if an issue is already fixed, and it affected 1.3 then the fix will be in 1.3)\n\nEmail notification was suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string:  20080415hossman1 "
        }
    ]
}