{
    "id": "SOLR-9713",
    "title": "TLS-SSL Mutual-Auth doesn't work, Unable to load keyStore with given password",
    "details": {
        "components": [
            "Authentication",
            "config-api",
            "scripts and tools",
            "security"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.2.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Official manual 6.2 says that for enabling HTTPS you have to create keystore with keypair having \"secret\" as password (example), assume that i have done everything else needed to enable HTTPS correctly.\nWhen i want to create keystore and keypair with another password it works only on Linux OS but on Windows only with \"secret\" as a password.\n\nsolr.in.cmd properties aren't used by server properly on Windows:\nCASE1:\nkeystore password: secret\nkepair password: secret\nSOLR_SSL_KEY_STORE_PASSWORD=secret\nSOLR_SSL_TRUST_STORE_PASSWORD=secret\nEverything works\n\nCASE2:\nkeystore password: secret\nkepair password: secret\nSOLR_SSL_KEY_STORE_PASSWORD=changeit\nSOLR_SSL_TRUST_STORE_PASSWORD=changeit\nNo \"Keystore was tampered with, or password was incorrect\" -> which means it uses \"secret\" as password when it shouldn't\nMultiple repeating Errors:\nINFO  - 2016-11-02 07:52:00.657; org.apache.http.impl.client.DefaultRequestDirector; I/O exception (java.net.SocketException) caught when connecting to \n{s}->https://localhost:8983: java.security.NoSuchAlgorithmException: Error constructing implementation (algorithm: Default, provider: SunJSSE, class: sun.security.ssl.SSLContextImpl$DefaultSSLContext)\nINFO  - 2016-11-02 07:52:00.657; org.apache.http.impl.client.DefaultRequestDirector; Retrying connect to {s}\n->https://localhost:8983\n\nCASE3:\nkeystore password: changeit\nkepair password: changeit\nSOLR_SSL_KEY_STORE_PASSWORD=changeit\nSOLR_SSL_TRUST_STORE_PASSWORD=changeit\n\nErrors:\njava.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at org.eclipse.jetty.start.Main.invokeMain(Main.java:214)\n        at org.eclipse.jetty.start.Main.start(Main.java:457)\n        at org.eclipse.jetty.start.Main.main(Main.java:75)\nCaused by: java.io.IOException: Keystore was tampered with, or password was incorrect\n        at sun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:780)\n        at sun.security.provider.JavaKeyStore$JKS.engineLoad(JavaKeyStore.java:56)\n        at sun.security.provider.KeyStoreDelegator.engineLoad(KeyStoreDelegator.java:224)\n        at sun.security.provider.JavaKeyStore$DualFormatJKS.engineLoad(JavaKeyStore.java:70)\n        at java.security.KeyStore.load(KeyStore.java:1445)\n        at org.eclipse.jetty.util.security.CertificateUtils.getKeyStore(CertificateUtils.java:52)\n        at org.eclipse.jetty.util.ssl.SslContextFactory.loadKeyStore(SslContextFactory.java:1016)\n        at org.eclipse.jetty.util.ssl.SslContextFactory.doStart(SslContextFactory.java:332)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)\n        at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)\n        at org.eclipse.jetty.server.SslConnectionFactory.doStart(SslConnectionFactory.java:64)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)\n        at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)\n        at org.eclipse.jetty.server.AbstractConnector.doStart(AbstractConnector.java:260)\n        at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:81)\n        at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:244)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.server.Server.doStart(Server.java:384)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1510)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1435)\n        ... 7 more\nCaused by: java.security.UnrecoverableKeyException: Password verification failed\n        at sun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:778)\n        ... 30 more\n\nUsage: java -jar start.jar [options] [properties] [configs]\n       java -jar start.jar --help  # for more information\nINFO  - 2016-11-02 07:53:55.221; org.apache.http.impl.client.DefaultRequestDirector; I/O exception (java.net.SocketException) caught when connecting to \n{s}->https://localhost:8983: Connection reset\nINFO  - 2016-11-02 07:53:55.225; org.apache.http.impl.client.DefaultRequestDirector; Retrying connect to {s}\n->https://localhost:8983\n\nAnother issue:\nI want for the server to require Client Authentification by certificate but the properties aren't passed to the server or used by the server. Doens't work on Windows, works on Linux.\n\nCASE1:\nset SOLR_SSL_NEED_CLIENT_AUTH=true\nset SOLR_SSL_WANT_CLIENT_AUTH=false\nserver doesn't require client certificate for authentification\n\nCASE2:\nset SOLR_SSL_NEED_CLIENT_AUTH=false\nset SOLR_SSL_WANT_CLIENT_AUTH=true\nserver doesn't want client certificate for authentification\n\n\nI found that i can set the properties defaults in jetty-ssl.xml\nwhich somehow helps a bit but the server still won't start and throws errors:\nINFO  - 2016-11-02 09:29:05.036; org.apache.http.impl.client.DefaultRequestDirector; I/O exception (java.net.SocketException) caught when connecting to \n{s}->https://localhost:8983: java.security.NoSuchAlgorithmException: Error constructing implementation (algorithm: Default, provider: SunJSSE, class: sun.security.ssl.SSLContextImpl$DefaultSSLContext)\nINFO  - 2016-11-02 09:29:05.036; org.apache.http.impl.client.DefaultRequestDirector; Retrying connect to {s}\n->https://localhost:8983\n\nI know that most of the solr projects probably runs on Linux but we use also Windows environment for testing, because we have to ensure that our solution is platform independent.\n\nWould be cool if someone would lay an eye on that.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}