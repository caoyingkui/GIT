{
    "id": "SOLR-3217",
    "title": "refactor range faceting code so that the list of FieldTypes supported isn't hardcoded",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "idea that occured to me reviewing SOLR-2202, haven't thought it through all the way to be certain it would work...\n\n1) create a new marker interface \"RangeFacetable\" which contains a single method getRangeEndpointCalculator(SchemaField)\n2) refactor SimpleFacets so that instead of the big {{if (ft instanceof ...) \n{ ... }\n else if ....}} block there right now, we just check if the FieldType is an instance of RangeFacetable\n3) use ft.getRangeEndpointCalculator to do the voodoo we curently doodoo\n4) make all of the existing private static subclasses of RangeEndpointCalculator (like IntegerRangeEndpointCalculator) public top level classes so custom FieldTypes can use them",
    "attachments": {},
    "issue_links": {},
    "comments": []
}