{
    "id": "SOLR-7460",
    "title": "bin/solr start command shows an error when used with Java 1.7.0 - bin/solr: line 1290: [[: .0: syntax error: operand expected (error token is \".0\")",
    "details": {
        "components": [
            "scripts and tools"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.1",
        "status": "Closed",
        "resolution": "Won't Fix",
        "priority": "Trivial"
    },
    "description": "I am trying to start Solr 5.1.0 using Java 1.7.0, Solr does start but I see this error:\n\n$ bin/solr start\nbin/solr: line 1290: [[: .0: syntax error: operand expected (error token is \".0\")\nWaiting to see Solr listening on port 8983 [/]  \nStarted Solr server on port 8983 (pid=13627). Happy searching!\n\nDigging further, I saw in solr script:\n\n1285   JAVA_VERSION=`echo \"$(\"$JAVA\" -version 2>&1)\" | grep \"java version\" | awk '\n{ print substr($3, 2, length($3)-2); }\n'`\n1286   if [ \"${JAVA_VERSION:0:3}\" == \"1.7\" ]; then\n1287     # Specific Java version hacking\n1288     #GC_TUNE+=('-XX:CMSFullGCsBeforeCompaction=1' '-XX:CMSTriggerPermRatio=80')\n1289     JAVA_MINOR_VERSION=${JAVA_VERSION-2)}\n1290     if [[ $JAVA_MINOR_VERSION -ge 40 && $JAVA_MINOR_VERSION -le 51 ]]; then\n1291       GC_TUNE+=('-XX:-UseSuperWord')\n1292       echo -e \"\\nWARNING: Java version $JAVA_VERSION has known bugs with Lucene and requires the -XX:-UseSuperWord flag. Please consider upgrading your JVM.\\n\"\n\nWhen JAVA_VERSION is 1.7.0 to 1.7.9 the line (#1289):\n\nJAVA_MINOR_VERSION=${JAVA_VERSION-2)}\n\nwill evaluate JAVA_MINOR_VERSION as .0 hence the if check that follows fails.\n\nThe above code would work fine for Java versions 1.7.10 and above\n\nThis line should be changed to (chop the string 4 positions from start to get the minor version, instead of chopping 2 positions from the end)\n\nJAVA_MINOR_VERSION=${JAVA_VERSION:(4)}",
    "attachments": {
        "screenshot.png": "https://issues.apache.org/jira/secure/attachment/12727887/screenshot.png",
        "screenshot-1.png": "https://issues.apache.org/jira/secure/attachment/12727885/screenshot-1.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-24T13:41:16+0000",
            "author": "Shawn Heisey",
            "content": "All Java 7 versions are 1.7.0.  The information after the 1.7.0 version is what is different, at least for implementations other than the one from IBM.\n\nIt appears that IBM does not follow the typical version string semantics that the other implementations do.  Here are a couple of other version outputs:\n\n[root@idxa1 ~]# java -version\njava version \"1.7.0_72\"\nJava(TM) SE Runtime Environment (build 1.7.0_72-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 24.72-b04, mixed mode)\n\n[root@bigindy5 ~]# java -version\njava version \"1.7.0_71\"\nOpenJDK Runtime Environment (rhel-2.5.3.1.el7_0-x86_64 u71-b14)\nOpenJDK 64-Bit Server VM (build 24.65-b04, mixed mode)\n\nIBM's Java has a history of bugs resulting from extreme optimizations in their virtual machine, bugs which are tripped by the Lucene code that Solr relies on.  You should not be using IBM's Java with Solr.  Use the latest version of Oracle Java or OpenJDK that you can get.\n\nI do not think we will be fixing this particular problem, because IBM does not follow the version convention established by Oracle, and IBM's Java is known to cause severe problems with Lucene programs. ",
            "id": "comment-14511055"
        },
        {
            "date": "2015-04-24T13:43:28+0000",
            "author": "Shawn Heisey",
            "content": "It might be a good idea to detect the specific \"1.7.0\" version number with nothing trailing after it and output a different error message, saying that there are likely problems with the version detected. ",
            "id": "comment-14511078"
        },
        {
            "date": "2016-10-31T12:30:23+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "The script has been rewritten and now Java8 is a requirement for both master and 6.x, so the minor version tests are gone.\n\nWe won't fix this for the end-of-life 5.x series. Closing. ",
            "id": "comment-15622021"
        }
    ]
}