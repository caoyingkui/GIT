{
    "id": "SOLR-10698",
    "title": "StreamHandler should allow connections to be closed early",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.6.1",
            "7.0",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Before a stream is drained out, if we call close() we get an exception like this:\n\n\nat\norg.apache.http.impl.io.ChunkedInputStream.read(ChunkedInputStream.java:215)\nat\norg.apache.http.impl.io.ChunkedInputStream.close(ChunkedInputStream.java:316)\nat\norg.apache.http.impl.execchain.ResponseEntityProxy.streamClosed(ResponseEntityProxy.java:128)\nat\norg.apache.http.conn.EofSensorInputStream.checkClose(EofSensorInputStream.java:228)\nat\norg.apache.http.conn.EofSensorInputStream.close(EofSensorInputStream.java:174)\nat sun.nio.cs.StreamDecoder.implClose(StreamDecoder.java:378)\nat sun.nio.cs.StreamDecoder.close(StreamDecoder.java:193)\nat java.io.InputStreamReader.close(InputStreamReader.java:199)\nat\norg.apache.solr.client.solrj.io.stream.JSONTupleStream.close(JSONTupleStream.java:91)\nat\norg.apache.solr.client.solrj.io.stream.SolrStream.close(SolrStream.java:186)\n\n\n\n\nAs quoted from https://www.mail-archive.com/solr-user@lucene.apache.org/msg130676.html the problem seems to when we hit an exception the /steam handler does not close the stream.",
    "attachments": {
        "SOLR-10698.patch": "https://issues.apache.org/jira/secure/attachment/12869022/SOLR-10698.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-18T19:38:27+0000",
            "content": "I started to dig into this ticket. What I found straight off is that when a client disconnects, the streaming code continues to write data to the outputstream and and an exception is never thrown. The expected behavior would be to receive an org.eclipse.jetty.io.EofException. I'm currently investigating how this could be happening. One possible reason for this is that the exception is being swallowed somewhere in Jetty's outputstream stack, so that client disconnects don't throw exceptions. I'll dig into this and see what I find. \n\n ",
            "author": "Joel Bernstein",
            "id": "comment-16016328"
        },
        {
            "date": "2017-05-19T18:10:12+0000",
            "content": "Update on this ticket. It turned out the problem had nothing to do with jetty. The issue is that the HttpClient continues to consume the stream even after the inputstream from the httpclient has been closed. Varun Thacker, noticed the odd looking read following the close in the stack trace. This is the ChunkedInputStream close behavior, which is to consume the entire stream when close is called.\n\nI'll post a patch shortly that closes the HttpResponse rather then the inputstream. The patch also catches all exceptions that occur while writing to the client and closes the underlying tuple stream. \n\nThe effect of these two changes should be that when the client closes a TupleStream:\n\n1) The server writing the tuples will get a broken pipe exception and close it's underlying TupleStream.\n2) This will cause a chain reaction of broken pipes and stream closings that will eventually shut down all streams and stop the /export handler with a broken pipe exception.\n\nThis patch has not yet been tested.\n\n ",
            "author": "Joel Bernstein",
            "id": "comment-16017775"
        },
        {
            "date": "2017-05-19T19:14:10+0000",
            "content": "In my local testing it looks like the patch resolves the issue. I'll do some more testing but it looks promising. ",
            "author": "Joel Bernstein",
            "id": "comment-16017873"
        },
        {
            "date": "2017-05-22T15:05:51+0000",
            "content": "Commit 02b1c8aa360c8c87bf4cc20b688d7993ec6d7b1b in lucene-solr's branch refs/heads/master from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=02b1c8a ]\n\nSOLR-10698: StreamHandler should allow connections to be closed early ",
            "author": "ASF subversion and git services",
            "id": "comment-16019673"
        },
        {
            "date": "2017-05-22T15:05:54+0000",
            "content": "Commit c71ce16bb90c5fc58acbc8f9ee2e74249f11f3ac in lucene-solr's branch refs/heads/master from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c71ce16 ]\n\nSOLR-10698: Fix precommit ",
            "author": "ASF subversion and git services",
            "id": "comment-16019674"
        },
        {
            "date": "2017-05-22T15:12:12+0000",
            "content": "There is now a fix for this in master. We should discuss the backporting of this ticket. A couple of things to think about:\n\n1) Will there be a Lucene/Solr 6.7. Even though 7.0 is imminent I think a 6.7 would be useful for users that will not be able to immediately upgrade to 7.0.\n\n2) If there is not going to be a 6.7 do we need a bug fix release on 6.6 for this issue.\n\n3) There may be a need to backport this even further to a build prior to the refactoring for binary transport. If that's the case then it's not a straight backport and will involve different classes. We can discuss what classes need to be changed in this scenario. ",
            "author": "Joel Bernstein",
            "id": "comment-16019684"
        },
        {
            "date": "2017-05-22T15:24:40+0000",
            "content": "My vote would be to back-port for 6.7. I suspect that there will be one just to wrap up the 6x code line with a bow. If a 6.6.x is released we can back port then I should think if we want. ",
            "author": "Erick Erickson",
            "id": "comment-16019700"
        },
        {
            "date": "2017-05-22T15:26:55+0000",
            "content": "+1. This should be a simple backport. ",
            "author": "Joel Bernstein",
            "id": "comment-16019702"
        },
        {
            "date": "2017-05-22T15:32:54+0000",
            "content": "My vote would be to back-port for 6.7. I suspect that there will be one just to wrap up the 6x code line with a bow. \n\nI agree - there's no reason any release needs to be particularly large, so having 6.7 as just a wrap-up release (probably concurrently with 7.0?) makes sense. ",
            "author": "Yonik Seeley",
            "id": "comment-16019713"
        },
        {
            "date": "2017-05-30T20:46:04+0000",
            "content": "Grabbed to back-port to 6.7 ",
            "author": "Erick Erickson",
            "id": "comment-16030090"
        },
        {
            "date": "2017-05-31T03:48:11+0000",
            "content": "Commit a8db3701e93bca385bf15058c1abdbfd786a88ae in lucene-solr's branch refs/heads/branch_6x from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a8db370 ]\n\nSOLR-10698: StreamHandler should allow connections to be closed early\n\n(cherry picked from commit 02b1c8a) ",
            "author": "ASF subversion and git services",
            "id": "comment-16030579"
        },
        {
            "date": "2017-05-31T03:48:15+0000",
            "content": "Commit f9f64a9574d6da18a7395a22ce73c40438899c11 in lucene-solr's branch refs/heads/branch_6x from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f9f64a9 ]\n\nSOLR-10698: Fix precommit\n\n(cherry picked from commit c71ce16) ",
            "author": "ASF subversion and git services",
            "id": "comment-16030580"
        },
        {
            "date": "2017-05-31T08:36:27+0000",
            "content": "Just for some additional context \u2013 The close method tries to consume the entire stream because if you don't do that, the connection can no longer be re-used and must be discarded. So in normal cases, this behavior of consuming the stream is a good thing because it allows you the connection to go back to the pool and be reused. But obviously for long running requests that receive huge amounts of data from StreamHandler or ExportHandler, attempting to consume the stream fully on abort is a problem. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16030840"
        },
        {
            "date": "2017-08-14T21:01:44+0000",
            "content": "Hi Joel,\n\nShould we add a CHANGES.txt entry for this? ",
            "author": "Varun Thacker",
            "id": "comment-16126387"
        },
        {
            "date": "2017-08-15T12:52:05+0000",
            "content": "Yes, let's add this to CHANGES.txt. I'll be working on docs and updates to CHANGES for the 7.0 release today. I'll include this ticket. ",
            "author": "Joel Bernstein",
            "id": "comment-16127174"
        },
        {
            "date": "2017-08-16T01:10:35+0000",
            "content": "Commit 5786d092545f323c0c13adcb4633d949d08b1bd3 in lucene-solr's branch refs/heads/master from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5786d09 ]\n\nSOLR-10698: Updated CHANGES.txt ",
            "author": "ASF subversion and git services",
            "id": "comment-16128176"
        },
        {
            "date": "2017-08-16T01:13:20+0000",
            "content": "Commit 92f3caf8cfc93b8525895d4d2fa9a2c383b90c08 in lucene-solr's branch refs/heads/branch_7_0 from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=92f3caf ]\n\nSOLR-10698: Updated CHANGES.txt ",
            "author": "ASF subversion and git services",
            "id": "comment-16128179"
        },
        {
            "date": "2017-08-16T01:13:43+0000",
            "content": "Commit 39ac9def8529347a3b0c3912b2797f4021ac72cb in lucene-solr's branch refs/heads/branch_7x from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=39ac9de ]\n\nSOLR-10698: Updated CHANGES.txt ",
            "author": "ASF subversion and git services",
            "id": "comment-16128180"
        },
        {
            "date": "2017-08-21T03:21:22+0000",
            "content": "Commit f31c5a2906efb92900bf66373ecdd4d21ba4110e in lucene-solr's branch refs/heads/branch_6_6 from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f31c5a2 ]\n\nSOLR-10698: StreamHandler should allow connections to be closed early ",
            "author": "ASF subversion and git services",
            "id": "comment-16134664"
        }
    ]
}