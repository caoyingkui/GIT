{
    "id": "SOLR-9592",
    "title": "decorateDocValues cause serious performance issue because of using slowCompositeReaderWrapper",
    "details": {
        "components": [
            "Response Writers",
            "search"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "6.0,                                            6.1,                                            6.2",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "I have serious performance issue using AtomicUpdate (and RealtimeGet) with non stored docValues.\nBecause decorateDocValues try to merge each leafLeader on the fly via slowCompositeReaderWrapper and it\u2019s extremely slow (> 10sec).\nSimply access docValues via nonCompositeReader could resolve this issue.(patch) \n\nAtomicUpdate performance(or RealtimeGet performance)\n\n\tEnvironment\n\t\n\t\tsolr version : 6.0.0\n\t\tschema ~ 100 fields(90% docValues, some of those are multi valued)\n\t\tindex : 5,000,000\n\t\n\t\n\tPerformance\n\t\n\t\toriginal :  > 10sec per query\n\t\tpatched : at least 100msec per query\n\t\n\t\n\n\n\nThis patch will also enhance search performance, because DocStreamer also fetch docValues via decorateDocValues.\nThough it depends on each environment, I could take 20% search performance gain.\n\n(This patch originally written for solr 6.0.0, and now rewritten for master)",
    "attachments": {
        "SOLR-9592_6x.patch": "https://issues.apache.org/jira/secure/attachment/12831528/SOLR-9592_6x.patch",
        "SOLR-9592.patch": "https://issues.apache.org/jira/secure/attachment/12831460/SOLR-9592.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-04T04:39:04+0000",
            "author": "Takahiro Ishikawa",
            "content": "attached patch ",
            "id": "comment-15544325"
        },
        {
            "date": "2016-10-04T07:41:17+0000",
            "author": "Varun Thacker",
            "content": "Thanks for the patch Takahiro!\n\nAdditionally should we rename SolrIndexSearcher#getLeafReader to SolrIndexSearcher#getSlowAtomicReader to make it more accurate? Also we could add Javadocs encouraging people to use leafContexts ? ",
            "id": "comment-15544642"
        },
        {
            "date": "2016-10-04T09:28:38+0000",
            "author": "Takahiro Ishikawa",
            "content": "Thanks for comments, Varun!\n\nYes! Renaming to getSlowAtomicReader is great idea. I'll add a patch soon. ",
            "id": "comment-15544884"
        },
        {
            "date": "2016-10-04T10:44:43+0000",
            "author": "Takahiro Ishikawa",
            "content": "updated patch for master(solr-7.0)\nAnd I'm working on a patch for branch_6x which needs some modifications. ",
            "id": "comment-15545041"
        },
        {
            "date": "2016-10-04T12:26:28+0000",
            "author": "Yonik Seeley",
            "content": "Nice catch!  I knew there had to be reasons why /select was so much slower than /xport for docValues!\n\nThe method name change might help a little, but the real issue is knowing how to use things like MultiDocValues (i.e. you generally want to use them for the ord mapping, but not the other stuff!)\n\nWe should really cache the MultiDocValues created as well... but that can be a different JIRA. ",
            "id": "comment-15545222"
        },
        {
            "date": "2016-10-04T13:49:54+0000",
            "author": "Takahiro Ishikawa",
            "content": "updated patch for branch_6x\n\n'ant test' passed without doTestIndexAndConfigAliasReplication().\nAnd the test failure is reported SOLR-9426, so this is other problem. ",
            "id": "comment-15545392"
        },
        {
            "date": "2016-10-04T15:17:39+0000",
            "author": "Takahiro Ishikawa",
            "content": "Thanks for comments, Yonik!\n\nI'm glad to resolve your concern!\n\n\nThe method name change might help a little\nAre you disagree with renaming(-1) or weakly agree with(+0)? \nI agree with renaming(Varun suggested). Because, at first glance, getLeafReader does not imply internally calling SlowCompositeLeafReader and this make people find performance bottlenecks difficult.\n\n\n\nbut the real issue is knowing how to use things like MultiDocValues (i.e. you generally want to use them for the ord mapping, but not the other stuff!)\nWe should really cache the MultiDocValues created as well... but that can be a different JIRA.\nI may not catch the meaning here. If my understanding is clear, we should use MultiDocValues in cases where you essencially need global view and decorateDocValues usage is not the case right?\nHow to handle things like MultiDocValues in those cases(caching) is interesting problem and might be other JIRA. ",
            "id": "comment-15545623"
        },
        {
            "date": "2016-10-04T22:20:09+0000",
            "author": "Yonik Seeley",
            "content": "Are you disagree with renaming(-1) or weakly agree with(+0)? \n\nI supposed weakly agree \n\nBecause, at first glance, getLeafReader \n\nYeah, I really don't care for that name.\n\nIf my understanding is clear, we should use MultiDocValues in cases where you essencially need global view and decorateDocValues usage is not the case right?\n\nRight.  Sometimes you need both a global view and a segment view to do it right.  See something like FacetFieldProcessorByArrayDV, where we use both top level and segment level.\n\ndecorateDocValues would seem to only need segment level access. ",
            "id": "comment-15546847"
        },
        {
            "date": "2016-10-05T03:02:43+0000",
            "author": "Takahiro Ishikawa",
            "content": "I supposed weakly agree\nThank you. I'll keep it(getLeafReader) renamed \n\n\nRight. Sometimes you need both a global view and a segment view to do it right. See something like FacetFieldProcessorByArrayDV, where we use both top level and segment level.\nYes, I got what you are saying. If I have a time, I'll go into detail for MultiDocValues problem.\n\nNow all my work is done. Is there any other comments? ",
            "id": "comment-15547449"
        },
        {
            "date": "2016-10-05T19:14:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cae6b49a065bfbc5789d8bdcf3706c158c0fc10d in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cae6b49 ]\n\nSOLR-9592: use correct leaf reader rather than top-level reader in SolrIndexReaderm.decorateDocValues ",
            "id": "comment-15549673"
        },
        {
            "date": "2016-10-05T19:23:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 59d83f57e12f72ff8db503a0c01b77cb5df354fd in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=59d83f5 ]\n\nSOLR-9592: use correct leaf reader rather than top-level reader in SolrIndexReaderm.decorateDocValues ",
            "id": "comment-15549690"
        },
        {
            "date": "2016-10-05T19:28:32+0000",
            "author": "Yonik Seeley",
            "content": "Committed.  Thanks! ",
            "id": "comment-15549706"
        },
        {
            "date": "2016-10-05T23:30:50+0000",
            "author": "Takahiro Ishikawa",
            "content": "Thanks for commit! Yonik Seeley! ",
            "id": "comment-15550289"
        },
        {
            "date": "2016-11-09T08:37:09+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650211"
        }
    ]
}