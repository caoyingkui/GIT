{
    "id": "LUCENE-6242",
    "title": "SparseFixedBitDocIdSet.ramBytesUsed() reports wrong size if alignment of JVM is not 8",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "There seems to be a bug in SparseFixedBitDocIdSet's ramBytesUsed. To me this is a bit crazy implemented, so I have not yet found the issue. To me it looks like some of the summing up breaks if the alignment of the JVM is not 8:\n\n\n   [junit4] Suite: org.apache.lucene.util.TestSparseFixedBitDocIdSet\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSparseFixedBitDocIdSet -Dtests.method=testRamBytesUsed -Dtests.seed=\nC1F3B881CB1C5E8A -Dtests.locale=es_BO -Dtests.timezone=America/Detroit -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] FAILURE 0.06s J1 | TestSparseFixedBitDocIdSet.testRamBytesUsed <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<264> but was:<256>\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([C1F3B881CB1C5E8A:3350AAC1016341DC]:0)\n   [junit4]    >        at org.apache.lucene.util.BaseDocIdSetTestCase.testRamBytesUsed(BaseDocIdSetTestCase.java:104)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n\n\n\nTo reproduce this failure, run inside core (with 64 bits JVM):\n\n\nant test -Dtestcase=TestSparseFixedBitDocIdSet -Dtests.method=testRamBytesUsed -Dargs=\"-XX:ObjectAlignmentInBytes=16\" -Dtests.seed=C1F3B881CB1C5E8A\n\n\n\nThe default works:\n\n\nant test -Dtestcase=TestSparseFixedBitDocIdSet -Dtests.method=testRamBytesUsed -Dargs=\"-XX:ObjectAlignmentInBytes=8\" -Dtests.seed=C1F3B881CB1C5E8A\n\n\n\nI think we should randomly also specify the ObjectAlignmentInBytes for test runs on Policeman Jenkins. Any Power of 2 is fine.",
    "attachments": {
        "LUCENE-6242.patch": "https://issues.apache.org/jira/secure/attachment/12698428/LUCENE-6242.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14318170",
            "author": "Dawid Weiss",
            "date": "2015-02-12T13:20:48+0000",
            "content": "Just a note \u2013 I was toying with alignments a while ago and I had random JVM crashes. "
        },
        {
            "id": "comment-14318179",
            "author": "Uwe Schindler",
            "date": "2015-02-12T13:25:01+0000",
            "content": "Oha  I assume for large ones or also with stuff like 16?\n\nAt least we should fix this issue here. If we enable random alignments could be decided after some local tests. In any case I would enable this only very seldom with values 8 <= x <= 128. "
        },
        {
            "id": "comment-14318180",
            "author": "Dawid Weiss",
            "date": "2015-02-12T13:25:52+0000",
            "content": "Definitely the larger ones (> 32 from what I recall). "
        },
        {
            "id": "comment-14318194",
            "author": "Adrien Grand",
            "date": "2015-02-12T13:43:32+0000",
            "content": "Thanks Uwe, I will look into this issue. "
        },
        {
            "id": "comment-14318199",
            "author": "Adrien Grand",
            "date": "2015-02-12T13:51:40+0000",
            "content": "Here is a patch. "
        },
        {
            "id": "comment-14318216",
            "author": "Uwe Schindler",
            "date": "2015-02-12T14:05:04+0000",
            "content": "Hehe, I was expecting that something like this is missing, I assumed that the Length-1-Longs are the bad ones. I have no idea if this fix is correct, because I have no idea how the ramBytesUsed are calculated \n\nDid you check some values of the alignment and ran it with \"test beast\" on several values of alignment? "
        },
        {
            "id": "comment-14318217",
            "author": "Adrien Grand",
            "date": "2015-02-12T14:11:11+0000",
            "content": "I just beasted (50 iters) with alignements of 8, 16, 32, 64 and 128 and tests passed. "
        },
        {
            "id": "comment-14318222",
            "author": "Uwe Schindler",
            "date": "2015-02-12T14:14:18+0000",
            "content": "Yeah, I think I understand the logic now. Looks good to me!\nIf you tested already I am more than fine with this patch! "
        },
        {
            "id": "comment-14318227",
            "author": "Robert Muir",
            "date": "2015-02-12T14:20:35+0000",
            "content": "\nAt least we should fix this issue here. If we enable random alignments could be decided after some local tests. In any case I would enable this only very seldom with values 8 <= x <= 128.\n\nYou can do what you like with your jenkins, but if the failures aren't using the default alignment, I won't even look at them.\n\nI don't think we should test this. "
        },
        {
            "id": "comment-14318230",
            "author": "Uwe Schindler",
            "date": "2015-02-12T14:23:13+0000",
            "content": "I would only look at them if they are related to ramBytesUsed calculations  This was my intention in running those tests.\n\nI agree, we should not really randomize those. I am already annoyed by G1GC tests! "
        },
        {
            "id": "comment-14318264",
            "author": "ASF subversion and git services",
            "date": "2015-02-12T14:27:29+0000",
            "content": "Commit 1659273 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1659273 ]\n\nLUCENE-6242: Fix SparseFixedBitSet ram usage estimation when object alignment is different from 8. "
        },
        {
            "id": "comment-14318267",
            "author": "Robert Muir",
            "date": "2015-02-12T14:28:35+0000",
            "content": "\n I am already annoyed by G1GC tests!\n\nYes, thats exactly my problem. When looking at any test failure that has G1GC, i know there is a 50% chance (at least) that I am completely wasting my time. Many days, i see G1GC was in use, and just move on with my day, because I simply dont have the time to waste. "
        },
        {
            "id": "comment-14318271",
            "author": "Uwe Schindler",
            "date": "2015-02-12T14:31:29+0000",
            "content": "I think we should still run the G1GC tests to be able to show to people, that it is currently a bad idea to run with G1GC. "
        },
        {
            "id": "comment-14318280",
            "author": "ASF subversion and git services",
            "date": "2015-02-12T14:35:44+0000",
            "content": "Commit 1659278 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1659278 ]\n\nLUCENE-6242: Fix SparseFixedBitSet ram usage estimation when object alignment is different from 8. "
        },
        {
            "id": "comment-14495297",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:28+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}