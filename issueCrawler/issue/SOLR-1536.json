{
    "id": "SOLR-1536",
    "title": "Support for TokenFilters that may modify input documents",
    "details": {
        "affect_versions": "1.5",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "Schema and Analysis"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "In some scenarios it's useful to be able to create or modify fields in the input document based on analysis of other fields of this document. This need arises e.g. when indexing multilingual documents, or when doing NLP processing such as NER. However, currently this is not possible to do.\n\nThis issue provides an implementation of this functionality that consists of the following parts:\n\n\n\tDocumentAlteringFilterFactory - abstract superclass that indicates that TokenFilter-s created from this factory may modify fields in a SolrInputDocument.\n\n\n\n\n\tTypeAsFieldFilterFactory - example implementation that illustrates this concept, with a JUnit test.\n\n\n\n\n\tDocumentBuilder modifications to support this functionality.",
    "attachments": {
        "altering.patch": "https://issues.apache.org/jira/secure/attachment/12423707/altering.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12774057",
            "date": "2009-11-05T20:15:56+0000",
            "content": "Is this better than writing a custom UpdateRequestProcessor that takes the value of the incoming SolrInputDocument (SID), does something to it, removes the original field, and adds the modified version back to SID? "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12774162",
            "date": "2009-11-06T00:51:44+0000",
            "content": "My opinion may be biased, but I'll try to be as objective as I can  I think it's better, because it provides you much more flexibility in building analysis & indexing chains without coding. If we went with URProcessor you would have to implement a new one whenever your analysis chain changes ... With the approach in this patch it's just a configuration issue, and not an issue of implementing as many custom update processors as there are possible combinations ... "
        },
        {
            "author": "Mike Perham",
            "id": "comment-12832493",
            "date": "2010-02-11T14:19:36+0000",
            "content": "This would be hugely useful for us in implementing a profanity detector.  We'd like to scan the 'content' field for profane tokens and mark a boolean 'safe' field with the results. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12832518",
            "date": "2010-02-11T15:25:16+0000",
            "content": "In my head document-level modifications belong in UpdateRequestProcessors. You always have SOLR-1725 to script those quickly, and configuring a chain is easily done in XML (http://wiki.apache.org/solr/SolrConfigXml#UpdateRequestProcessorChain_section).\n\nTrouble is, when you need to act on an analyzed version of a field, say, to match terms against a normalized dictionary. To allow this, could we allow Analysis to run anywhere in the update chain? That way we can put UpdateRequestProcessors after analysis as well:\n\n\n<updateRequestProcessorChain name=\"test\">\n    <processor class=\"org.apache.solr.update.processor.MyPreProcessorFactory\" />\n    <analysis />\n    <processor class=\"org.apache.solr.update.processor.MyPostProcessorFactory\" />\n</updateRequestProcessorChain>\n\n\n\nMaking <analysis/> optional, the default would be at end as today. I have no idea of how easy such a change would be with the current architecture. "
        },
        {
            "author": "Mike Perham",
            "id": "comment-12832523",
            "date": "2010-02-11T15:35:53+0000",
            "content": "Another developer just mentioned that I might be able to use TFVs to implement the profanity detector.  We've got termVectors=\"true\" on the content field since we are also using MoreLikeThis.  If I can get access to the field's TFV in the URP, I can just run through the profanities, checking for each one in the TFV...  I'm not sure if this is possible - need to check the javadocs. "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12835660",
            "date": "2010-02-19T09:06:35+0000",
            "content": "Term freq. vectors are not available at this stage, unless you go to an expense of creating a MemoryIndex. I think the solution I proposed is less costly and more generic. "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12835707",
            "date": "2010-02-19T11:29:46+0000",
            "content": "Patch updated to trunk. "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12835731",
            "date": "2010-02-19T12:41:27+0000",
            "content": "Updated patch - previous patch produced NPEs. "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12922328",
            "date": "2010-10-18T22:26:11+0000",
            "content": "Patch updated to trunk. "
        },
        {
            "author": "Bill Bell",
            "id": "comment-12989397",
            "date": "2011-02-01T21:44:32+0000",
            "content": "This fails on the latest trunk. "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-13125871",
            "date": "2011-10-12T14:10:40+0000",
            "content": "Resolving as Won't Fix - the complications to DocumentBuilder don't seem worth it. It's probably better to implement this as an UpdateRequestProcessor. "
        },
        {
            "author": "Kai G\u00fclzau",
            "id": "comment-13574588",
            "date": "2013-02-08T16:17:59+0000",
            "content": "Is there a follow up ticket for Jan H\u00f8ydahl's idea of placing the analyzer phase in the middle of the updateRequestProcessorChain?\nThis would solve my problem http://mail-archives.apache.org/mod_mbox/lucene-solr-user/201302.mbox/%3CB65DA877C3F93B4FB39EA49A1A03C95CC30173%40email.novomind.com%3E "
        }
    ]
}