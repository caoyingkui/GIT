{
    "id": "SOLR-3772",
    "title": "On cluster startup, we should wait until we see all registered replicas before running the leader process - or if they all do not come up, N amount of time.",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This seems like a simple and good way to start.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13447073",
            "date": "2012-09-03T01:03:34+0000",
            "content": "Like SOLR-3750 (see recent comment on that issue), I plan to make this off by default for now, with the ability to enable it and configure the wait time. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13454893",
            "date": "2012-09-13T13:43:51+0000",
            "content": "After further thought, we don't need to worry about the expiration case, and this one should be on by default. Unless someone convinces me otherwise, I've gone with a default of a 3 minute wait. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610844",
            "date": "2013-03-22T16:39:24+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1384937\n\nSOLR-3833: When a election is started because a leader went down, the new leader candidate should decline if the last state they published was not active.\n\nSOLR-3836: When doing peer sync, we should only count sync attempts that cannot reach the given host as success when the candidate leader is syncing with the replicas - not when replicas are syncing to the leader.\n\nSOLR-3835: In our leader election algorithm, if on connection loss we found we did not create our election node, we should retry, not throw an exception.\n\nSOLR-3834: A new leader on cluster startup should also run the leader sync process in case there was a bad cluster shutdown.\n\nSOLR-3772: On cluster startup, we should wait until we see all registered replicas before running the leader process - or if they all do not come up, N amount of time.\n\nSOLR-3756: If we are elected the leader of a shard, but we fail to publish this for any reason, we should clean up and re trigger a leader election.\n\nSOLR-3812: ConnectionLoss during recovery can cause lost updates, leading to shard inconsistency.\n\nSOLR-3813: When a new leader syncs, we need to ask all shards to sync back, not just those that are active.\n\nSOLR-3807: Currently during recovery we pause for a number of seconds after waiting for the leader to see a recovering state so that any previous updates will have finished before our commit on the leader - we don't need this wait for peersync.\n\nSOLR-3837: When a leader is elected and asks replicas to sync back to him and that fails, we should ask those nodes to recovery asynchronously rather than synchronously. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653767",
            "date": "2013-05-10T10:32:55+0000",
            "content": "Closed after release. "
        }
    ]
}