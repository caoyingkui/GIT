{
    "id": "SOLR-6952",
    "title": "Re-using data-driven configsets by default is not helpful",
    "details": {
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "5.0",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "When creating collections (I'm using the bin/solr scripts), I think we should automatically copy configsets, especially when running in \"getting started mode\" or data driven mode.\n\nI did the following:\n\nbin/solr create_collection -n foo\nbin/post foo some_data.csv\n\n\n\nI then created a second collection with the intention of sending in the same data, but this time run through a python script that changed a value from an int to a string (since it was an enumerated type) and was surprised to see that I got:\n\nCaused by: java.lang.NumberFormatException: For input string: \"NA\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.lang.Long.parseLong(Long.java:441)\n\nfor my new version of the data that passes in a string instead of an int, as this new collection had only seen strings for that field.",
    "attachments": {
        "SOLR-6952.patch": "https://issues.apache.org/jira/secure/attachment/12691660/SOLR-6952.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-10T15:37:16+0000",
            "author": "Noble Paul",
            "content": "Should it be  a feature of the scripts or should it be an option in the Collection create?  \nNow that we made the configsets mutable , it makes sense to make it a more accessible feature ",
            "id": "comment-14272552"
        },
        {
            "date": "2015-01-10T15:53:00+0000",
            "author": "Grant Ingersoll",
            "content": "To work around this, I tried this from a clean install:\n\n\n\tbin/solr -cloud\n\tbin/solr create_collectioin foo\n\tbin/solr create_collection foo2\n\n\n\nI then indexed the data to foo using the ints and then followed up and indexed to foo2 using the Strings and much to my dismay, I got the same error and have come to find out that the configset is  being shared.  This is bad, IMO.  At a minimum, data-driven configsets should be copied from the default template and we should never modify the base template for a specific instance.   Not sure on the other ones, but my gut says we should copy, not modify. ",
            "id": "comment-14272559"
        },
        {
            "date": "2015-01-10T15:54:17+0000",
            "author": "Noble Paul",
            "content": "Keeping in mind ease the script by default  should create a copy unless specified otherwise ",
            "id": "comment-14272560"
        },
        {
            "date": "2015-01-11T17:01:13+0000",
            "author": "Timothy Potter",
            "content": "How should the user specify they want to reuse a config that already exists in ZooKeeper instead of creating a new config in ZK by copying the template? The default behavior will copy the template and name the config the same name as the collection in ZK. Maybe something like a \"-sharedConfig\" option?\n\n\nbin/solr create_collection -n foo -sharedConfig data_driven_schema_configs\n\n\n\nThis means to use the data_driven_schema_configs as-is in ZooKeeper and not copy it to a new config directory. I like making the \"shared\" concept explicit in the param / help for the command but open to other approaches too.\n\nAlternatively, we can change the interface to create_collection / create_core to use a -t parameter (t for template) and then make the -c optional, giving us:\n\nExample 1:\n\nbin/solr create_collection -n foo -t data_driven_schema_configs\n\n\n\nResult will be to copy the data_driven_schema_configs directory to ZooKeeper as /configs/foo\n\nExample 2:\n\nbin/solr create_collection -n foo -t data_driven_schema_configs -c shared\n\n\n\nResult will be to copy the data_driven_schema_configs directory to ZooKeeper as /configs/shared\n\nOf course, if /configs/shared already exists, then it will be used without uploading anything new ... ",
            "id": "comment-14272978"
        },
        {
            "date": "2015-01-12T10:10:59+0000",
            "author": "Noble Paul",
            "content": "I would say , first we should add support for this in collection API with an extra request param. Collection API should copy a config to a new dir if that param is passed.\n\nThe script should use that param ON by default . The reason is going forward config is editable, through configoverlay.json and params.json . So, shared configs are dangerous and unsuspecting users will not know why things are screwed up\n\nexample I would prefer\n\nbin/solr create_collection -n foo -t data_driven_schema_configs -c -shareconfig\n\n ",
            "id": "comment-14273463"
        },
        {
            "date": "2015-01-12T15:10:31+0000",
            "author": "Timothy Potter",
            "content": "Collection API has nothing to do with loading a configuration into ZooKeeper. Currently, you use zkCli.sh/bat to load a configuration directory into ZooKeeper and when doing so, you can assign any name you want to the configuration directory that is uploaded. Since bin/solr is being fixed to handle copying vs. sharing by default, I don't think there are any changes needed to the Collection API. ",
            "id": "comment-14273677"
        },
        {
            "date": "2015-01-12T15:28:31+0000",
            "author": "Noble Paul",
            "content": "Collection API has nothing to do with loading a configuration into ZooKeeper\n\nI know that. I meant to say that if someone is not using the script to create a collection ,(and using the http API) he misses the fun ",
            "id": "comment-14273692"
        },
        {
            "date": "2015-01-12T15:33:59+0000",
            "author": "Timothy Potter",
            "content": "Here's a patch that implements the desired behavior. Easiest way to understand is to look at a few examples:\n\nExample 1\n\nbin/solr create -n foo\n\n\n\nWill upload the data_driven_schema_configs directory (the default) into ZooKeeper as /configs/foo, i.e. the data_driven_schema_configs \"template\" is copied to a unique config directory in ZooKeeper using the name of the collection you are creating.\n\nExample 2\n\nbin/solr create -n foo2 -t basic_configs -c SharedBasicSchema\n\n\n\nWill upload the basic_configs directory into ZooKeeper as /configs/SharedBasicSchema. If one wants to reuse the SharedBasicSchema configuration directory when creating another collection, they can just do: bin/solr create -n foo3 -c SharedBasicSchema\n\nIf we're happy with this approach, I'll port over the changes to solr.cmd (for Windows) ",
            "id": "comment-14273697"
        },
        {
            "date": "2015-01-12T17:06:50+0000",
            "author": "Timothy Potter",
            "content": "Actually, since I'm tweaking the arg names of bin/solr create options, I think I'll just line them up with what was already being done in zkcli.sh. Specifically, I'm going to change the options to be:\n\n\n-c = name of collection or core to create (was -n)\n-d = configuration directory to copy (was -c)\n-n = configuration name (didn't exist)\n\n ",
            "id": "comment-14273785"
        },
        {
            "date": "2015-01-12T17:37:17+0000",
            "author": "Noble Paul",
            "content": "What r the long names ? \n ",
            "id": "comment-14273812"
        },
        {
            "date": "2015-01-12T17:55:20+0000",
            "author": "Timothy Potter",
            "content": "same as zkcli.sh ",
            "id": "comment-14273846"
        },
        {
            "date": "2015-01-12T20:17:24+0000",
            "author": "Timothy Potter",
            "content": "Here's an updated patch that changes around some of the parameter names to be consistent with the zkcli.sh script. I also tackled the \"create\" alias (SOLR-6933) in this patch since it was easier to address both issues with one patch.\n\nExample 1\n\nbin/solr create -c foo\n\n\n\nThis is equivalent to doing:\n\n\nbin/solr create -c foo -d data_driven_schema_configs\n\n\n\nor\n\n\nbin/solr create -c foo -d data_driven_schema_configs -n foo\n\n\n\nThe create action will upload the data_driven_schema_configs directory (the default) into ZooKeeper as /configs/foo, i.e. the data_driven_schema_configs \"template\" is copied to a unique config directory in ZooKeeper using the name of the collection you are creating.\n\nExample 2\n\nbin/solr create -c foo2 -d basic_configs -n SharedBasicSchema\n\n\n\nThis will upload the basic_configs directory into ZooKeeper as /configs/SharedBasicSchema. If one wants to reuse the SharedBasicSchema configuration directory when creating another collection, they can just do: \n\nbin/solr create -c foo3 -n SharedBasicSchema\n\n\n\nGoing to start porting these changes to the Windows solr.cmd, so please speak up now or this is what we'll have for 5.0  ",
            "id": "comment-14274103"
        },
        {
            "date": "2015-01-12T23:33:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1651231 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1651231 ]\n\nSOLR-6952: bin/solr create action should copy configset directory instead of reusing an existing configset in ZooKeeper by default; commit also includes fix for SOLR-6933 - create alias ",
            "id": "comment-14274397"
        },
        {
            "date": "2015-01-12T23:40:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1651233 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1651233 ]\n\nSOLR-6952: bin/solr create action should copy configset directory instead of reusing an existing configset in ZooKeeper by default; commit also includes fix for SOLR-6933 - create alias ",
            "id": "comment-14274414"
        },
        {
            "date": "2015-02-03T14:19:11+0000",
            "author": "Noble Paul",
            "content": "This has broken the blob store API\n\nThe schema and config are automatically created by the system for .system collection\n\nThere should be a way to create a colection without creating a configset\n\n bin/solr create -c .system -n .system\n\n ",
            "id": "comment-14303313"
        },
        {
            "date": "2015-05-01T23:03:30+0000",
            "author": "Timothy Potter",
            "content": "There should be a way to create a colection without creating a configset\n\nI disagree with that requirement. If something special is needed for .system I think we shouldn't expose that at the user interface level (which bin/solr create is). ",
            "id": "comment-14524242"
        },
        {
            "date": "2015-05-05T13:41:38+0000",
            "author": "Noble Paul",
            "content": "This is opened as a new ticket SOLR-7502 ",
            "id": "comment-14528434"
        }
    ]
}