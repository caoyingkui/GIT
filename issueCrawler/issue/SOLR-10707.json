{
    "id": "SOLR-10707",
    "title": "Dynamic point fields incorrectly being matched",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.7,                                            7.0",
        "resolution": "Invalid",
        "status": "Resolved"
    },
    "description": "Didn't see this on 6x, but didn't look specifically.\n\nIndexing a doc with just a single field like this:\n\ndoc.addField(\"id\", UUID.randomUUID().toString());\ndoc.addField(\"facet_i\", 6850281131226296000L);\ndoc.addField(\"facet_d\", 6850281131226296000L);\n\nwhere \"facet_i\" is defined as:\n  <field indexed=\"true\" name=\"facet_i\" stored=\"false\" type=\"tlong\" docValues=\"false\" />\n\nand \"facet_d\" is defined as:\n  <field indexed=\"false\" name=\"facet_d\" stored=\"false\" type=\"tlong\" docValues=\"true\"/>\n\n\nResults in the document being returned as:\n\nfacet_pi: -28447040,\nfacet_pd: 6850281131226296000,\nversion: 1567746273059012600,\nfacet_d: 6850281131226296000",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-18T15:46:33+0000",
            "content": "Not clear to me, how is \"_pi\" defined? Are you seeing this issue when querying or just the response value? ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16015966"
        },
        {
            "date": "2017-05-18T15:49:03+0000",
            "content": "Yeah, just thought about that. _pi and _pd are dynamic fields in techproducts schema that I'm using:\n\n   <dynamicField name=\"*_pi\" type=\"pint\"    indexed=\"true\"  stored=\"true\"/>\n   <dynamicField name=\"*_pd\" type=\"pdouble\" indexed=\"true\"  stored=\"true\"/>\n\nBut since I'm adding an explicit field this rule shouldn't be hit.\n\nAnd when I saw \"pint\" I had a horrible moment thinking somehow an ancient field type had crept back in \n\nSo assuming this is actually happening, and is happening in 6.6, I'd seriously consider making this a blocker for 6.6. For a large corpus this will consume a lot of unexpected resources. ",
            "author": "Erick Erickson",
            "id": "comment-16015970"
        },
        {
            "date": "2017-05-18T15:55:13+0000",
            "content": "But since I'm adding an explicit field this rule shouldn't be hit.\nWhat do you mean? What rule? Aren't you indexing a long into an int field? ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16015978"
        },
        {
            "date": "2017-05-18T16:50:50+0000",
            "content": "You mean you have a specific field \"facet_pi\"? How is that one defined? ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16016062"
        },
        {
            "date": "2017-05-18T19:17:59+0000",
            "content": "Yeah, all the data is here but it's scattered so I'll condense it.\n\nI have these fields in my schema:\n\n<field indexed=\"true\" name=\"facet_i\" stored=\"false\" type=\"tlong\" docValues=\"false\" />\n<field indexed=\"false\" name=\"facet_d\" stored=\"false\" type=\"tlong\" docValues=\"true\"/>\nand\n<dynamicField name=\"*_pi\" type=\"pint\" indexed=\"true\" stored=\"true\"/>\n<dynamicField name=\"*_pd\" type=\"pdouble\" indexed=\"true\" stored=\"true\"/>\n\nNow when I add a doc like this:\ndoc.addField(\"id\", UUID.randomUUID().toString());\ndoc.addField(\"facet_i\", 6850281131226296000L);\ndoc.addField(\"facet_d\", 6850281131226296000L);\n\nI get these fields returned in the doc on a q=:&fl=*:\n\nfacet_pi: -28447040,\nfacet_pd: 6850281131226296000,\nversion: 1567746273059012600,\nfacet_d: 6850281131226296000\n\n(there's no facet_i returned since my definition has stored=\"false\" set. facet_d is being returned since it's DocValues and doesn't need to be stored).\n\nThere's no reason I should have a \"facet_pi\" or a \"facet_pd\" defined in this document, I'm guessing that they were generated from facet_i and facet_d by inappropriate matching in the dynamic field definition. By \"rule\" I meant that IIUC any field name in the document that exactly matches a field in the schema should not match any dynamic field. ",
            "author": "Erick Erickson",
            "id": "comment-16016304"
        },
        {
            "date": "2017-05-18T20:12:45+0000",
            "content": "OK, I now understand what you mean, the field \"facet_pi\" should not be populated but it is. I thought you were talking about matching queries and things made no sense in my head. \nSilly check, the \"sample_techproducts\" schema comes with:\n\n<copyField source=\"*_i\" dest=\"*_pi\"/>\n\n\nDid you remove that? ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16016392"
        },
        {
            "date": "2017-05-18T20:29:32+0000",
            "content": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe You're right, I'm wrong. It was the copyField. Whew!\n ",
            "author": "Erick Erickson",
            "id": "comment-16016419"
        }
    ]
}