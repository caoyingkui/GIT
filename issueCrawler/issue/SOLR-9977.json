{
    "id": "SOLR-9977",
    "title": "reproducible failures in DistribDocExpirationUpdateProcessorTest due to IndexWriterConfig randomization",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Here's an example of a seed that currently fails reliably on master...\n\n\nant test  -Dtestcase=DistribDocExpirationUpdateProcessorTest -Dtests.method=test -Dtests.seed=34988FCF7C369D9 -Dtests.slow=true -Dtests.locale=el -Dtests.timezone=Etc/GMT+10 -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4]    > Throwable #1: java.lang.AssertionError: Exactly one shard should have changed, instead: [core_node1, core_node2] nodes=([expiry_shard2_replica1(core_node1), expiry_shard1_replica1(core_node2)]) expected:<1> but was:<2>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([34988FCF7C369D9:8B1DB726593F0421]:0)\n   [junit4]    > \tat org.apache.solr.cloud.DistribDocExpirationUpdateProcessorTest.test(DistribDocExpirationUpdateProcessorTest.java:116)\n\n\n\nThe meat of the test is to verify that the periodic DBQs triggered by the DocExpirationUpdateProcessor don't cause unnecessary new searchers w/cache flushing/warming.  \u2013 only shards affected by  deltheetes get their searchers re-opened.\n\nenabling infoStream logging on the test shows that (something I havne't fully dug into in) the randomized IndexWriterConfig is causing the IndexWriter to generate a new segments file after a commit early in the test \u2013 completely unrelated to the DBQ+commit logic we're paying close attention to \u2013 that still contains the exact same underlying segments/docs.  It's just a new segments file name with a new index version# \u2013 which throws off the index version# tracking the test is using to make sure only the segment that should be impacted by our DBQ is impacted by the DBQ.\n\n\n\nSince this kind of randomized index changing under the covers contradicts the methodology used in the test, it should be removed so we can reliably know that the only reason an reader/searcher changes is either because the solr code being tested does it deliberately, or because of a bug that needs fixed.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-18T00:37:40+0000",
            "content": "Commit 70f312943e53e60c27e3ccf589bd3829b63e5d84 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=70f3129 ]\n\nSOLR-9977: Fix config bug in DistribDocExpirationUpdateProcessorTest that allowed false assumptions about when index version changes\n\n(cherry picked from commit 9ee48aa857e15461dd6ec6482194141da72e0ba2) ",
            "author": "ASF subversion and git services",
            "id": "comment-15827136"
        },
        {
            "date": "2017-01-18T00:37:42+0000",
            "content": "Commit 9ee48aa857e15461dd6ec6482194141da72e0ba2 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9ee48aa ]\n\nSOLR-9977: Fix config bug in DistribDocExpirationUpdateProcessorTest that allowed false assumptions about when index version changes ",
            "author": "ASF subversion and git services",
            "id": "comment-15827138"
        },
        {
            "date": "2017-02-22T15:49:44+0000",
            "content": "Commit c58eac13378f618532190348574d96a72ef413e7 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c58eac1 ]\n\nSOLR-9977, SOLR-9979: move CHANGES entries to correct section (Bug)\n\nAparently these were shifted during merge/cherry-picks ",
            "author": "ASF subversion and git services",
            "id": "comment-15878514"
        }
    ]
}