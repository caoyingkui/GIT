{
    "id": "SOLR-2151",
    "title": "MappingUpdateProcessor",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Implement an UpdateProcessor which can read one field, lookup the value in a dictionary and write the mapped value to another field.",
    "attachments": {
        "SOLR-2151-solr1.4.patch": "https://issues.apache.org/jira/secure/attachment/12456959/SOLR-2151-solr1.4.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12920169",
            "date": "2010-10-12T12:35:59+0000",
            "content": "First crash-implementation, without any tests or anything. It only supports a mapping file similar to the synonyms.txt file format, but currently supports only a simple from=>to mapping. No expand, no case insensitive, etc.\n\nThe patch SOLR-2151-solr1.4.patch is against the 1.4 branch, not trunk.\n\nConfigure the UpdateProcessor like this:\n\n\n<processor class=\"org.apache.solr.update.processor.MappingUpdateProcessorFactory\">\n  <str name=\"inputField\">myInputField</str>\n  <str name=\"outputField\">myOutputField</str>\n  <str name=\"idField\">id</str>\n  <str name=\"fallback\"></str>\n  <str name=\"mappingFile\">innbinding-sokeord_mapping.txt</str>\n</processor>\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12920212",
            "date": "2010-10-12T14:05:57+0000",
            "content": "Updated so that fallback value is not set if null or empty "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12996801",
            "date": "2011-02-19T16:29:01+0000",
            "content": "One thing we've talked about before is having a mapping update processor that can do much of the stuff needed by both solr cell and the csv update handler.\n\n\n\tfield moving\n\tfield value mapping\n\tsetting constant values\n\tfield trimming\n\n\n\nBut now reading this issue again, this looks more specific (many value mappings for a single field).  It may or may not make sense to incorporate all this into a single issue / update processor.\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-12997284",
            "date": "2011-02-21T05:30:34+0000",
            "content": "The benefit of not relying on this capability for the CSV update handler and Solr Cell is that this these things are configurable in the request, whereas an update processor must be configured in solrconfig.xml. That's not to say the update processor proposed here wouldn't be useful, though. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12997337",
            "date": "2011-02-21T10:33:30+0000",
            "content": "What stops you from configuring an UpdateProcessor from the request? The UP class has access to the request object, not?\n\nI'm a big fan of moving more logic from RHs into UPs, and hope to find some time to contribute to SOLR-1763 "
        },
        {
            "author": "David Smiley",
            "id": "comment-12997634",
            "date": "2011-02-22T04:02:38+0000",
            "content": "Good point Jan! I'm really liking this then. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15448528",
            "date": "2016-08-30T09:13:39+0000",
            "content": "I have updated the MappingUpdateProcessor for master and put it up on https://github.com/cominvent/solr-update-processors\nAny interest of including it in core? "
        }
    ]
}