{
    "id": "SOLR-4790",
    "title": "When defining a core with the same name (discovery mode or not), CoreContainer should throw an error",
    "details": {
        "affect_versions": "4.3,                                            6.0",
        "status": "Closed",
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When you define a core with the same name as another core (discovery mode definitely, old-style xml probably), last one wins. Which means it's very hard to track down what caused the problem.\n\nWhat's worse, the last-encountered core replaces the first one, leading to cores that change an unexpected index.",
    "attachments": {
        "SOLR-4790.patch": "https://issues.apache.org/jira/secure/attachment/12581983/SOLR-4790.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13650192",
            "date": "2013-05-06T22:42:38+0000",
            "content": "Gaah. Maintaining all the backwards junk is a pain, this is SOOOO much simpler than what was in there before. It only works for discovery mode, I'll take a quick look at what it would take to deal with old-style in a second. If it's too complicated I'll pass on it since old-style is going to end-of-life.\n\nAnyway, preliminary patch, I'm running the test suite now and have yet to look it over, but is this along the lines you Mark Miller had in mind? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13650202",
            "date": "2013-05-06T22:52:26+0000",
            "content": "In this case, rather than a new back compat break, this is really an improvement. In the past, the only legit reason to do this was to reload a core - but now that's a broken way to reload - u must use the reload method. So failing is much better than what we do now IMO.  "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13650268",
            "date": "2013-05-07T00:14:43+0000",
            "content": "Updated version, all tests pass. I took a quick look at what happens if you define two cores with the same name old-style, and errors are thrown in addition to the warning issued. So leaving it as-is seems fine.\n\nBut, while looking at that code I think it throws a bogus warning, it just tests for the dataDir defined in the <core> tag. So defining two cores with dataDir=./data would issue the warning even though they were in different instance dirs.\n\nTwo questions: \n1> is \nString absData = new File(instDir, dataDir).getCanonicalPath();\na reliable way to get the full path? If so, the test in this patch will work in old-style. It worked on a single test anyway.\n\n2> One could test for duplicate dirs in new-style as well. Is it worth it? Two variants come to mind:\n2a> Pass a map a-la coreDescriptorMap and do simliar stuff.\n2b> in SolrCoreDiscoverer.discover, just analyze the map upon return and issue a warning.\n\nEither way it would just be some bookeeping local to SolrCoreDiscoverer and not intrusive. But is either one worth the effort?\n\n[~markrmiller] Andy Fowler any opinions?\n "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13654577",
            "date": "2013-05-10T16:26:51+0000",
            "content": "[trunk commit] erick\nhttp://svn.apache.org/viewvc?view=revision&revision=1481079\n\nSOLR-4790, Defining a core with the same name should throw an error "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13654596",
            "date": "2013-05-10T16:49:47+0000",
            "content": "Final patch "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13654618",
            "date": "2013-05-10T17:16:54+0000",
            "content": "[branch_4x commit] erick\nhttp://svn.apache.org/viewvc?view=revision&revision=1481111\n\nSOLR-4790, Defining a core with the same name should throw an error "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13716824",
            "date": "2013-07-23T18:38:41+0000",
            "content": "Bulk close resolved 4.4 issues "
        }
    ]
}