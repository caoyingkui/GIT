{
    "id": "SOLR-9661",
    "title": "Explain of select that uses replace() throws exception",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "select(\n   search(test, q=\"table:article \", fl=\"edge_id\", sort=\"edge_id desc\", rows=10),\n   edge_id,\n   replace(type,null, withValue=\"1\")\n)\n\n\nas a streaming expression produced this stack trace:\n\nERROR (qtp1989972246-17) [c:test s:shard1 r:core_node1 x:test_shard1_replica1] o.a.s.s.HttpSolrCall null:java.io.IOException: Unable to find function name for class 'org.apache.solr.client.solrj.io.ops.ReplaceWithValueOperation'\n\tat org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getFunctionName(StreamFactory.java:335)\n\tat org.apache.solr.client.solrj.io.ops.ReplaceWithValueOperation.toExpression(ReplaceWithValueOperation.java:108)\n\tat org.apache.solr.client.solrj.io.ops.ReplaceOperation.toExpression(ReplaceOperation.java:81)\n\tat org.apache.solr.client.solrj.io.stream.SelectStream.toExpression(SelectStream.java:148)\n\tat org.apache.solr.client.solrj.io.stream.SelectStream.toExplanation(SelectStream.java:164)\n\tat org.apache.solr.client.solrj.io.stream.PushBackStream.toExplanation(PushBackStream.java:56)\n\tat org.apache.solr.client.solrj.io.stream.ComplementStream.toExplanation(ComplementStream.java:132)\n\tat org.apache.solr.client.solrj.io.stream.PushBackStream.toExplanation(PushBackStream.java:56)\n\tat org.apache.solr.client.solrj.io.stream.ComplementStream.toExplanation(ComplementStream.java:132)\n\tat org.apache.solr.client.solrj.io.stream.RankStream.toExplanation(RankStream.java:142)\n\tat org.apache.solr.client.solrj.io.stream.PushBackStream.toExplanation(PushBackStream.java:56)\n\tat org.apache.solr.client.solrj.io.stream.MergeStream.toExplanation(MergeStream.java:136)\n\tat org.apache.solr.client.solrj.io.stream.HashJoinStream.toExplanation(HashJoinStream.java:174)\n\tat org.apache.solr.client.solrj.io.stream.SelectStream.toExplanation(SelectStream.java:159)\n\tat org.apache.solr.client.solrj.io.stream.RankStream.toExplanation(RankStream.java:142)\n\tat org.apache.solr.client.solrj.io.stream.SelectStream.toExplanation(SelectStream.java:159)\n\tat org.apache.solr.handler.StreamHandler.handleRequestBody(StreamHandler.java:205)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:154)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2089)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:652)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:459)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:257)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:208)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1160)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1092)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:518)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:308)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\n\tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:246)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:156)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\n\tat java.lang.Thread.run(Thread.java:745)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-18T21:06:35+0000",
            "author": "Dennis Gove",
            "content": "I haven't looked at the code but I can imagine how this would occur. I'll see if I can take a look in the next day or two. ",
            "id": "comment-15586661"
        },
        {
            "date": "2016-11-01T11:48:20+0000",
            "author": "Dennis Gove",
            "content": "I've thrown together a simple test that shows this exception.\n\n\n@Test\npublic void replaceToExplanation() throws Exception{\n  StreamFactory factory = new StreamFactory().withFunctionName(\"replace\", ReplaceOperation.class);\n  StreamOperation operation = new ReplaceOperation(\"fieldA\", StreamExpressionParser.parse(\"replace(null, withValue=foo)\"), factory);\n\n  StreamExpressionParameter expression = operation.toExpression(factory);\n  Explanation explanation = operation.toExplanation(factory);\n}\n\n\n\nObviously, the toExplanation(...) line throws an exception but so does the toExpression(...) line. I'm not sure why this hasn't come up before as toExpression is used extensively, particularly by the parallel stream. ",
            "id": "comment-15625220"
        },
        {
            "date": "2016-11-01T12:01:31+0000",
            "author": "Dennis Gove",
            "content": "I can't think of a clever, generic way to handle this case. \n\nReplaceWithFieldOperation\n \nand \n\nReplaceWithValueOperation\n \nare both aliased by the \n\nReplaceOperation\n\n\nclass.\n\nWithin either of those classes there's no simple way to know which function name is assigned. There are a couple of ways to do it but they feel rather hokey. I'm going to give it some thought before deciding on a course of action. ",
            "id": "comment-15625245"
        }
    ]
}