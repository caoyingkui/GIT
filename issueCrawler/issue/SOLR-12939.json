{
    "id": "SOLR-12939",
    "title": "standardise test class naming",
    "details": {
        "type": "Test",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "This was mentioned and proposed on the dev mailing list. Starting this ticket here to start to make it happen?",
    "attachments": {
        "SOLR-12939_hoss_validation_groovy_experiment.patch": "https://issues.apache.org/jira/secure/attachment/12946415/SOLR-12939_hoss_validation_groovy_experiment.patch",
        "SOLR-12939.01.patch": "https://issues.apache.org/jira/secure/attachment/12946106/SOLR-12939.01.patch",
        "SOLR-12939.02.patch": "https://issues.apache.org/jira/secure/attachment/12946291/SOLR-12939.02.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16667746",
            "content": "The current TestFooBar : FooBarTest ratio is approximately 2:1 - so would it make sense to standardise on the former i.e. to prefer TestFooBar.java over FooBarTest.java?\n\nAttached SOLR-12939.01.patch is one way we could incrementally standardise directories (and then keep them standardised going forward). ",
            "author": "Christine Poerschke",
            "date": "2018-10-29T20:45:55+0000"
        },
        {
            "id": "comment-16667781",
            "content": "At the risk of venturing into a tabs vs spaces sort of thing, I have found that many online examples use the Test suffix rather than prefix.  For example:\nhttp://www.mkyong.com/unittest/junit-4-tutorial-1-basic-usage/\n\nAlso the junit team themselves used *Test \nhttps://github.com/junit-team/junit4/tree/master/src/test/java/org/junit/internal\n\nWhen I first had contact with the code I was shocked to see Test* classes. YMMV here's hoping I don't start a silly holy war  ",
            "author": "Gus Heck",
            "date": "2018-10-29T21:33:56+0000"
        },
        {
            "id": "comment-16669330",
            "content": "... the Test suffix rather than prefix. ...\n\nI have no strong views either way. Instead of choosing one or the other a hybrid solution could also be to permit both but to enforce that within a given directory/sub-package/package there is consistency.\n\nIllustrative SOLR-12939.02.patch patch to follow on how ant validate-source-patterns (which runs as part of ant precommit) could incrementally enforce that. ",
            "author": "Christine Poerschke",
            "date": "2018-10-30T21:03:27+0000"
        },
        {
            "id": "comment-16670321",
            "content": "I concur with Gus. \u00a0If we're going to standardize, I've seen explicit code styles\u00a0and other projects that have Test as the suffix and I think we should follow suite. \u00a0Though I admit it may not\u00a0matter what we standardize on.\n\nThanks for working on the\u00a0patch Christine. ",
            "author": "David Smiley",
            "date": "2018-10-31T16:06:50+0000"
        },
        {
            "id": "comment-16670414",
            "content": "a few thoughts...\n\n\n\tif we're going to have a standard naming convention for tests, then it seems like it needs to be across the entire codebase, so this should probably be a LUCENE level issue, not a SOLR issue?\n\ti'm not sure if a \"source\" level validation will go far enough for enforcing this \u2013 to be really useful, whatever \"rule\" we bikeshe as far as how tests will be named needs to be enforcible to the point that anything matching that rule must be a runnable test (ie: not an abstract base class for tests, and not a collection of helper utility methods)\n\n\n\nI'm attaching a patch where i breifly experimented with a groovy script to walk all compiled class files and then use reflection to try and validate the properties of the class against expecations of it's name. \n\nI think the results are promosing, it works fine on things like lucene-core, but i've run into some sort of classpath/classloading related problem with some of the solr tests variable references between tests and code ...  probably some silly classpath mistake i'm making, or something i'm missunderstanding about how ant/groovy sets up the classpath the shell runs in ... either way it's probably solvable.\n\nIn any case ... i wanted to put this out there as a POC for thought/discussion in case anyone wants to pick it up and run with it ... i probably won't be focusing much time on this specifically.\n ",
            "author": "Hoss Man",
            "date": "2018-10-31T17:26:30+0000"
        }
    ]
}