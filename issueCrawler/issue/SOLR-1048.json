{
    "id": "SOLR-1048",
    "title": "Ids parameter and fl=score throws an exception for wt=json",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "http://yourHost:8080/solr/select/?ids=YourDocId&version=2.2&start=0&rows=10&indent=on&fl=score,id&q=%2B*:*\n\nshows that when using ids= the score for docs is null; when using wt=json:\nhttp://yourHost:8080/solr/select/?ids=YourDocId&version=2.2&start=0&rows=10&indent=on&fl=score,id&q=%2B*:*&wt=json\n\nthat throws a NullPointerException:\n\nHTTP Status 500 - null java.lang.NullPointerException at org.apache.solr.search.DocSlice$1.score(DocSlice.java:120) at org.apache.solr.request.JSONWriter.writeDocList(JSONResponseWriter.java:490) at org.apache.solr.request.TextResponseWriter.writeVal(TextResponseWriter.java:140) at org.apache.solr.request.JSONWriter.writeNamedListAsMapWithDups(JSONResponseWriter.java:175) at org.apache.solr.request.JSONWriter.writeNamedList(JSONResponseWriter.java:288) at org.apache.solr.request.JSONWriter.writeResponse(JSONResponseWriter.java:88) at org.apache.solr.request.JSONResponseWriter.write(JSONResponseWriter.java:49) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:257) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:847) at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583) at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454) at java.lang.Thread.run(Thread.java:619)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12682747",
            "date": "2009-03-17T18:36:04+0000",
            "content": "the ids param is used in secondary queries as part of a Shard requests right? ... is it even considered a supported param for user requests?\n\nI suspect this is the same bug as SOLR-40 ... a response writer is assuming it will find scores on the DocList (because \"score\" is in the fl param) but the request handler didn't execute the query in a way that produces scores. (an id lookup based query has no need for score ... in a sharded secondary query the first query already generated the scores for the docs against the original query) "
        },
        {
            "author": "Jon Bodner",
            "id": "comment-12967035",
            "date": "2010-12-05T22:11:01+0000",
            "content": "The issue is still present in the 1.4.1 code base for Solr.  I found the source of the problem.  In the ids stage for sharding, the score is not calculated (it was returned in the previous stage), so the DocSlice's scores float array is still null.  XMLWriter and BinaryResponseWriter include lines like:\n\n        includeScore = includeScore && ids.hasScores();\n\nbut JSONWriter does not. \n\nThis issue is only going to present itself when you are debugging, since I think the ids parameter is only used for sharding, and Solr uses the javabin wire protocol instead of json. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13225770",
            "date": "2012-03-09T01:25:58+0000",
            "content": "This goes away with SOLR-1566.  "
        }
    ]
}