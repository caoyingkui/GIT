{
    "id": "SOLR-3473",
    "title": "Distributed deduplication broken",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "SolrCloud",
            "update"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Solr's deduplication via the SignatureUpdateProcessor is broken for distributed updates on SolrCloud.\n\nMark Miller:\n\nLooking again at the SignatureUpdateProcessor code, I think that indeed this won't currently work with distrib updates. Could you file a JIRA issue for that? The problem is that we convert update commands into solr documents - and that can cause a loss of info if an update proc modifies the update command.\n\nI think the reason that you see a multiple values error when you try the other order is because of the lack of a document clone (the other issue I mentioned a few emails back). Addressing that won't solve your issue though - we have to come up with a way to propagate the currently lost info on the update command.\n\nPlease see the ML thread for the full discussion: http://lucene.472066.n3.nabble.com/SolrCloud-deduplication-td3984657.html",
    "attachments": {
        "SOLR-3473-trunk-2.patch": "https://issues.apache.org/jira/secure/attachment/12539260/SOLR-3473-trunk-2.patch",
        "SOLR-3473.patch": "https://issues.apache.org/jira/secure/attachment/12530084/SOLR-3473.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13280256",
            "date": "2012-05-21T16:22:14+0000",
            "content": "My next response on the ML:\n\nI take that back - I think that may be the only way to make this work well. We need that document clone, which will let you put the dedupe proc after the distrib proc. I think in general, the dedupe proc will only work if your signature field is the id field though - otherwise, hash sharding that happens on the id field is going to cause a problem. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13280264",
            "date": "2012-05-21T16:28:41+0000",
            "content": "That makes sense indeed.\n\nTo work around the problem of having the digest field as ID, could it not simply issue a deleteByQuery for the digest prior to adding it? Would that cause significant overhead for very large systems with many updates?\n\nWe would, from Nutch' point of view, certainly want to avoid changing the ID from URL to digest.\n\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13280280",
            "date": "2012-05-21T17:00:17+0000",
            "content": "To work around the problem of having the digest field as ID, could it not simply issue a deleteByQuery for the digest prior to adding it? Would that cause significant overhead for very large systems with many updates?\n\nYeah, that might be an option - I don't know that it will be great perf wise, or race airtight wise, but it may a viable option.\n\nWe would, from Nutch' point of view, certainly want to avoid changing the ID from URL to digest.\n\nAh, interesting. If you are enforcing uniqueness by digest though, is this really a problem? It would only have to be in the Solr world that the id was the digest - and you could even call it something else and have an id:url field as well. Just thinking out loud.\n\nOr, perhaps we could make it so you could pick the hash field? Then hash on digest. If you are using overwrite=true, this should work right?\n\nOr perhaps someone else has some ideas... "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13280358",
            "date": "2012-05-21T18:55:56+0000",
            "content": "i'm not entirely sure i'm understanding the problems. here's what i think i understand...\n\n1) if you put dedup prior to distrib, then regardless of how it is configured it currently runs twice, which is bad - this seems like it is solved by SOLR-2822\n\n2) if you want to use dedup to generate a sig for the uniqueKey field, then it really has to come before distrib, otherwise forwarding to the leader just wont work. (again: SOLR-2822 should make this do-able)\n\n3) if you want to use dedup to generate a sig field that is not the uniqueKey field, AND you want to use \"overwriteDupes=true\" then (currently) this needs to happen after distrib, because otherwise the info about the deletion \u2013 tracked in \nAddUpdateCommand.updateTerm - is lost when distrib does the forward.  This seems like something that the distrib processor should deal with by ensuring it serializes/deserializes all of the key information in the AddUpdateCommand when sending/recieving a TOLEADER/FROMLEADER request (using SOLR-2822 vernacular)\n\n3a) it's not enough to ensure that the \"updateTerm\" is forwarded all the replicas in the shard, because other docs in other shards may have the same term value for the hash. (hence Markus's suggestions about doing a deleteByQuery \u2013 this should be in distribUP when AddUpdateCommand.updateTerm is non-null)\n\n4) something about document cloning ... i still don't really understand this \u2013 not just in terms of dedup, but in generally i don't really understand why SOLR-3215 is an issue assuming we fix SOLR-2822. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13285047",
            "date": "2012-05-29T19:38:53+0000",
            "content": "test demonstrating problem.\n\nwhere SignatureUpdateProcessorFactory lives in the chain doesn't affect the outcome. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13286189",
            "date": "2012-05-30T23:33:18+0000",
            "content": "Updated patch to include my (meager) attempt at fixing the problem by making processAdd immediately execute a deleteByQuery if the add includes an updateTerm.\n\nI banged my head against a bunch of version mismatch errors to get into the current state of the patch, such that all the updates succeed, but the query assertions in the test still fail indicating that docs with duplicate signatures are making it into the index.\n\nOn the up side: far fewer duplicates are making it into the index now then before the patch (when docs would only be deleted from the node that got the initial request if that node happened to be a shard leader)...\n\nwrong number of deduped docs (added 68 total) expected:<7> but was:<10>\nwrong number of deduped docs (added 71 total) expected:<7> but was:<8>\nwrong number of deduped docs (added 70 total) expected:<7> but was:<9>\n\n...so apparently there is still some tiny corner case code path where dups are sneaking in (either that or the existing deleteByQuery code isn't reliable).\n\nI'm fairly certain i'm out of my depth at this point. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412105",
            "date": "2012-07-11T22:26:02+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13429063",
            "date": "2012-08-06T10:20:39+0000",
            "content": "Hello - Could the deleteByQuery issue you mention be fixed with SOLR-3473? I've attached an updated patch for today's trunk. The previous patch was missing the signature field but i added it to one schema. Now other tests seem to fail because they don't see the sig field but do use the update chain.\n\nAnyway, it seems the BasicDistributedZkTest passes but i'm not very sure, there's too much log output but it doesn't fail. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429878",
            "date": "2012-08-07T03:43:56+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-13446539",
            "date": "2012-09-01T00:47:38+0000",
            "content": "It would be great to have this work in some form, even if it does not have the same API as before. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13456393",
            "date": "2012-09-15T12:49:26+0000",
            "content": "Unassigned issues -> 4.1 "
        },
        {
            "author": "Ken Ip",
            "id": "comment-13572466",
            "date": "2013-02-06T14:56:22+0000",
            "content": "Hoss, any interest in bring this patch forward to trunk? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717307",
            "date": "2013-07-23T18:47:49+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971135",
            "date": "2014-04-16T12:57:15+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}