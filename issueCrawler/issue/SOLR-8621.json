{
    "id": "SOLR-8621",
    "title": "solrconfig.xml: deprecate/replace <mergePolicy> with <mergePolicyFactory>",
    "details": {
        "components": [],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "<mergePolicyFactory> end-user benefits:\n\n\tLucene's UpgradeIndexMergePolicy can be configured in Solr\n\tLucene's SortingMergePolicy can be configured in Solr (with SOLR-5730)\n\tcustomisability: arbitrary merge policies including wrapping/nested merge policies can be created and configured\n\n\n\nroadmap:\n\n\tsolr 5.5 introduces <mergePolicyFactory> support\n\tsolr 5.5 deprecates (but maintains) <mergePolicy> support\n\tSOLR-8668 in solr 6.0(?) will remove <mergePolicy> support",
    "attachments": {
        "explicit-merge-auto-set.patch": "https://issues.apache.org/jira/secure/attachment/12786904/explicit-merge-auto-set.patch",
        "SOLR-8621-example_contrib_configs.patch": "https://issues.apache.org/jira/secure/attachment/12787198/SOLR-8621-example_contrib_configs.patch",
        "SOLR-8621.patch": "https://issues.apache.org/jira/secure/attachment/12786835/SOLR-8621.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-29T11:31:29+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera wrote in SOLR-5730:\n... How about if we introduce a MergePolicyPlugin/Factory, which would allow one to implement whatever MergePolicy he wants (including wrapping others).  ...\n\nChristine Poerschke wrote in SOLR-5730:\nI like the idea of a MergePolicyFactory ... We currently have mergeFactor and maxMergeDocs elements alongside the mergePolicy element. I would see the MergePolicyFactory route as an opportunity to deprecate the mergeFactor/maxMergeDocs/mergePolicy elements i.e. for a transition period users can use the existing/deprecated elements or the new mergePolicyFactory element but eventually we will remove the deprecated elements. ... ",
            "id": "comment-15123366"
        },
        {
            "date": "2016-01-29T11:38:42+0000",
            "author": "Christine Poerschke",
            "content": "proposed in SOLR-5730:\n\n... out-of-the-box factories for all existing non-wrapping merge policies e.g.\n\n<!-- public TieredMergePolicy() { -->\n<mergePolicyFactory class=\"TieredMergePolicyFactory\">\n  <int name=\"segmentsPerTier\">42</int>\n</mergePolicyFactory>\n\n\nAn out-of-the-box factory ... for existing plain wrapping merge policies e.g.\n\n<!-- public UpgradeIndexMergePolicy(MergePolicy base) { -->\n<mergePolicyFactory class=\"UpgradeIndexMergePolicyFactory\">\n  <str name=\"base\">TieredMergePolicyFactory</str>\n  <int name=\"base.segmentsPerTier\">42</int>\n</mergePolicyFactory>\n\n\nThe factory for building sorting merge policies [in SOLR-5730] could look something like this:\n\n<!-- public SortingMergePolicy(MergePolicy in, Sort sort) { -->\n<mergePolicyFactory class=\"SortingMergePolicyFactory\">\n  <str name=\"in\">TieredMergePolicyFactory</str>\n  <int name=\"in.segmentsPerTier\">42</int>\n  <str name=\"sort\">timestamp desc</str>\n</mergePolicyFactory>\n\n\nFor consistency ... conceptually support wrapping of wrapping merge policies e.g. someone could go and create their own MyInstrumentedMergePolicyFactory factory and use it like this:\n\n<!-- public MyInstrumentedMergePolicy(MergePolicy mergePolicy) { -->\n<mergePolicyFactory class=\"MyInstrumentedMergePolicyFactory\">\n  <str name=\"mergePolicy\">SortingMergePolicyFactory</str>\n  <str name=\"mergePolicy.in\">TieredMergePolicyFactory</str>\n  <int name=\"mergePolicy.in.segmentsPerTier\">42</int>\n  <str name=\"mergePolicy.sort\">timestamp desc</str>\n  <int name=\"instrumentationLevel\">42</int>\n</mergePolicyFactory>\n\n ",
            "id": "comment-15123372"
        },
        {
            "date": "2016-01-29T11:52:52+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3c4929e8efa041d53117e6f3669485d96839c98d in lucene-solr's branch refs/heads/master-solr-8621 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3c4929e ]\n\n[outline] SOLR-8621: solrconfig.xml: deprecate/replace <mergePolicy> with <mergePolicyFactory>\n\noutline summary:\n\nsubtleties:\n\n\tWe currently have mergeFactor and maxMergeDocs elements alongside the mergePolicy element. The mergeFactor/maxMergeDocs/mergePolicy elements will be deprecated together i.e. mergePolicyFactory will ignore mergeFactor and maxMergeDocs. (Note that maxMergeDocs only applies to LogMergePolicy policies, and that mergeFactor only applies to LogMergePolicy and TieredMergePolicy policies.)\n\tWe currently have SolrIndexConfig.fixUseCFMergePolicyInitArg to account for any <useCompoundFile> in <mergePolicy> (since ?.? <useCompoundFile> is directly specified in <indexConfig>). For the <mergePolicyFactory> element no such accommodations would be made.\n\n\n\nindependent:\n\n\tsome invokeSetter functionality from solr/util/SolrPluginUtils factored out into lucene/util/LucenePluginUtils (SolrPluginUtilsTest would need similar factoring out)\n\n\n\nlucene:\n\n\tnew classes (but no tests for them as yet) in lucene/core/src/java/org/apache/lucene/index\n\t\n\t\tMergePolicyFactory[Helper|Args]\n\t\t(Simple|Wrapper)MergePolicyFactory\n\t\t(Tiered|UpgradeIndex)MergePolicyFactory (additional factories needed e.g. for NoMergePolicy and LogMergePolicy)\n\t\n\t\n\n\n\nsolr:\n\n\tSolrIndexConfig.java changes to add <mergePolicyFactory> support and deprecate (but maintain) <mergePolicy> element support\n\tsolrconfig-tieredmergepolicy.xml added based on solrconfig-tieredmergepolicy.xml with tests randomly choosing one or the other (similar would be needed for other test solrconfig.xml files)\n\n\n\nother:\n\n\texample and documentation changes - TODO\n\n ",
            "id": "comment-15123381"
        },
        {
            "date": "2016-01-29T12:25:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 14d2b0c32d56da20ef1f8c2026f747640f7109d2 in lucene-solr's branch refs/heads/master-solr-8621 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=14d2b0c ]\n\n[work-in-progress] SOLR-8621: missed out .../test-files/.../solrconfig-tieredmergepolicyfactory.xml\n in initial commit ",
            "id": "comment-15123419"
        },
        {
            "date": "2016-01-29T15:26:19+0000",
            "author": "Jack Krupansky",
            "content": "Is this simply a rename of the XML element name (from <mergePolicy> to <mergePolicyFactory>) or is there some other user-visible feature enhancement or change?\n\nIs Fix Version 6.0? ",
            "id": "comment-15123590"
        },
        {
            "date": "2016-01-29T16:12:07+0000",
            "author": "Christine Poerschke",
            "content": "Is this simply a rename of the XML element name (from <mergePolicy> to <mergePolicyFactory>) or is there some other user-visible feature enhancement or change?\n\nGood question. This is more-or-less-but-not-quite a simple rename (see illustration below). The end-user benefit of the change is to make policies such as Lucene's UpgradeIndexMergePolicy configurable in Solr (see illustration above). The <mergePolicyFactory> element will also encompass all merge policy related parameters whereas currently <mergeFactor> and <maxMergeDocs> elements (applicable for some but not all merge policies) can be 'alongside' the <mergePolicy> element.\n\nexisting/deprecated:\n\n<mergeFactor>12</mergeFactor>\n<maxMergeDocs>345</maxMergeDocs>\n<mergePolicy class=\"...\" />\n  <str name=\"abc\">def</str>\n</mergePolicy>\n\n\n\nreplacement:\n\n<mergePolicyFactory class=\"...Factory\">\n  <int name=\"mergeFactor\">12</int>\n  <int name=\"maxMergeDocs\">345</int>\n  <str name=\"abc\">def</str>\n</mergePolicyFactory>\n\n ",
            "id": "comment-15123657"
        },
        {
            "date": "2016-01-29T16:14:32+0000",
            "author": "Christine Poerschke",
            "content": "Is Fix Version 6.0?\n\nThe proposed roadmap (i will update the ticket summary to reflect that it is only a proposed roadmap at this stage) is that Version 5.5 introduces <mergePolicyFactory> and deprecates <mergePolicy> and that Version 6.0 removes <mergePolicy> support. ",
            "id": "comment-15123664"
        },
        {
            "date": "2016-02-01T16:54:29+0000",
            "author": "Christine Poerschke",
            "content": "Noticed the two LUCENE-7005 things whilst working on SOLR-8621 but really the former is separate from the latter. ",
            "id": "comment-15126554"
        },
        {
            "date": "2016-02-01T18:11:37+0000",
            "author": "Hoss Man",
            "content": "(proposed) roadmap:\n\nA pattern we've followed in the past is to make those deprecations/failures contingent on luceneMatchVersion.\n\nSo a person using Solr X >= 5.5 with a luceneMatchVersion < 5.5 gets a warning that mergePolicy is deprecated.  but if they change their luceneMatchVersion >= 5.5 then it starts being an error.\n\nThat way users who do a drop in upgrade w/o changing configs just get a handy warning, but new users who start with an example config that has luceneMatchVersion >= 5.5 will get a helpful fail-fast error if they try to follow old advice/docs and add something that's already dperecated.\n\n(most of the places you see assertWarnOrFail(..., true) used use to have a luceneMatchVersion comparison done in the last param, before those very old version constants (ie pre 5.0) were completely removed) ",
            "id": "comment-15126694"
        },
        {
            "date": "2016-02-01T21:42:32+0000",
            "author": "Jack Krupansky",
            "content": "Will both the <mergeFactor> and <maxMergeDocs> elements will be deprecated as well (in addition to being allowed within the new <mergPolicyFactory>)? ",
            "id": "comment-15127090"
        },
        {
            "date": "2016-02-01T21:47:29+0000",
            "author": "Jack Krupansky",
            "content": "IIUC, the motivation here is to permit any number of merge policies to be configured with the goal of supporting wrapping of merge policies. Okay, but what tells Solr which MP is the outer/default MP? ",
            "id": "comment-15127099"
        },
        {
            "date": "2016-02-02T08:08:00+0000",
            "author": "Shai Erera",
            "content": "Will both the <mergeFactor> and <maxMergeDocs> elements will be deprecated as well\n\nYes\n\n\nIIUC, the motivation here is to permit any number of merge policies to be configured with the goal of supporting wrapping of merge policies. Okay, but what tells Solr which MP is the outer/default MP?\n\nThe intention is to have a MergePolicyFactory which creates a MergePolicy instance. See Christine Poerschke description above for the proposed structure in solrconfig.xml. If you want to construct your own MP, maybe it's a compound MP, you can simply define the class name of your factory, and then pass whatever arguments inside. ",
            "id": "comment-15127869"
        },
        {
            "date": "2016-02-02T08:48:44+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke about the commit, I have few comments:\n\n\n\tMergePolicyFactory, IMO, should belong to Solr. I don't see it being used by Lucene users, as they already construct IndexWriterConfig which takes a MergePolicy instance. The factory, again IMO, is useful in Solr-land, because Solr is configured from a file and therefore being able to construct an MP from a set of properties will be useful to Solr users.\n\n\n\n\n\tI don't fully get the purpose of MergePolicyFactoryHelper. Did you create that abstraction so we can use it in Solr? If we move MPF to Solr, I think we can get rid of it? Its only purpose as I can tell is to create an instance of an MP, but I thought that's what the factory will do?\n\n\n\n\n\tSimpleMergePolicyFactory is what I had in mind for the simple MPs. I wonder if we took the actual MPs class name in the properties, we wouldn't need TieredMPF, and will also simply support LogMP. What do you think? The XML element would look like:\n\n\n\n\n<mergePolicyFactory class=\"solr.SimpleMergePolicyFactory\">\n  <str name=\"class\">solr.TieredMergePolicy</str>\n  ...\n</mergePolicyFactory>\n\n\n\nWhat do you think?\n\n\n\tIs it OK if I make some changes to the code and push to the branch, or are you actively working on it?\n\n ",
            "id": "comment-15127916"
        },
        {
            "date": "2016-02-02T10:00:29+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera - thanks for your comments.\n\n\n\tYes, the purpose of MergePolicyFactoryHelper was to allow the lucene factory to use the method currently used by solr to create new instances but if the factories belonged to Solr instead of Lucene then no helper would be needed.\n\tSimpleMergePolicyFactory with a class property - yes, that sounds good to me.\n\tmaster-solr-8621 just updated to merge in LUCENE-7005 and LUCENE-7006 from master. I've got one more push to the branch in the next hour or so but then don't expect to be working on it until Thursday at the earliest, though hoping take a look at the LUCENE-7006 TestSortingMergePolicy test failure at some point.\n\n ",
            "id": "comment-15128000"
        },
        {
            "date": "2016-02-02T10:57:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 43671b3e0dc998bab73fd53bcd4df829d8eb273d in lucene-solr's branch refs/heads/master-solr-8621 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=43671b3 ]\n\nfor SOLR-8621 work-in-progress branch:\n\n\tadds LogByteSizeMergePolicyFactory and LogDocMergePolicyFactory\n\tremoves subPackages arg from MergePolicyFactoryHelper.newInstance signature\n\tadds BaseMergePolicyTestCase.testMergePolicyFactory method (and the things it calls)\n\n ",
            "id": "comment-15128059"
        },
        {
            "date": "2016-02-02T11:15:04+0000",
            "author": "Shai Erera",
            "content": "Thanks Christine Poerschke. I've also started to make some changes, so I'll rebase on yours after you push them. If you haven't done so already, I'll move the factory under o.a.solr and adjust the relevant classes.\n\nBTW, I think we should split this into multiple commits:\n\n\n\tIntroduce MergePolicyFactory and some implementing classes. Add a warning to SolrIndexConfig. That way, all existing solrconfig.xml will continue to work.\n\tChange all solrconfig.xml to use the new <mergePolicyFactory>, and change the warning to an error in SolrIndexConfig on trunk and keep the warning on 5x.\n\n\n\nAlso, I would personally start with only supporting simple MPF for now, because the wrapped ones need a bit of discussion I feel (per the review I've done). E.g. UpgradeIndexMergePolicyFactory hardcodes the prefix properties to \"base\", but it's not documented anywhere. I think that we can generalize the whole idea of wrapping MPF with something like this (indentations for clarity only)\n\n\n<!-- public MyInstrumentedMergePolicy(MergePolicy mergePolicy) { -->\n<mergePolicyFactory class=\"MyInstrumentedMergePolicyFactory\">\n  <int name=\"instrumentationLevel\">42</int>\n  <str name=\"wrapped.key\">mergePolicy</str>\n    <str name=\"mergePolicy\">SortingMergePolicyFactory</str>\n    <str name=\"mergePolicy.sort\">timestamp desc</str>\n    <str name=\"mergePolicy.wrapped.key\">in</str>\n      <str name=\"mergePolicy.in\">TieredMergePolicyFactory</str>\n      <int name=\"mergePolicy.in.segmentsPerTier\">42</int>\n</mergePolicyFactory>\n\n\n\nAlso, I feel that having a fixed/expected key name for the class will be useful in the code too, e.g.:\n\n\n<!-- public MyInstrumentedMergePolicy(MergePolicy mergePolicy) { -->\n<mergePolicyFactory class=\"MyInstrumentedMergePolicyFactory\">\n  <int name=\"instrumentationLevel\">42</int>\n  <str name=\"wrapped.key\">mergePolicy</str>\n    <str name=\"mergePolicy.class\">SortingMergePolicyFactory</str>\n    <str name=\"mergePolicy.sort\">timestamp desc</str>\n    <str name=\"mergePolicy.wrapped.key\">in</str>\n      <str name=\"mergePolicy.in.class\">TieredMergePolicyFactory</str>\n      <int name=\"mergePolicy.in.segmentsPerTier\">42</int>\n</mergePolicyFactory>\n\n\n\nIt's then both consistent with the wrapped <mergePolicyFactory> element (taking a 'class') and also in the code we can just do args.get(\"class\") and fail early if none is defined. What do you think? ",
            "id": "comment-15128081"
        },
        {
            "date": "2016-02-02T11:33:04+0000",
            "author": "Christine Poerschke",
            "content": "BTW, I think we should split this into multiple commits: ...\n\nI am a big fan of multiple commits if that makes logically sense and can see it applying to this ticket also.\n\n... start with only supporting simple MPF for now ...\n\nSounds good. Though both simple MPF and wrapped MPF support should from the end-user perspective be in the same solr release in my opinion since otherwise there will be this new <mergePolicyFactory> element in solrconfig.xml without an immediate end-user benefit.\n\n... <str name=\"mergePolicy.wrapped.key\">in</str> ...\n\nExcellent idea, I like it. Need we consider the possibility of a custom merge policy factory wrapping more-than-one merge policy?\n\nPS: I have pushed all my current changes to master-solr-8621 as per above. Thanks! ",
            "id": "comment-15128100"
        },
        {
            "date": "2016-02-02T11:47:31+0000",
            "author": "Shai Erera",
            "content": "Though both simple MPF and wrapped MPF support should from the end-user perspective be in the same solr release\n\nWell, Simple for sure because that's what users can do today. No one, as far as I can tell, define today a compound MP like SortingMP or UpgradeIndexMP without defining his own MP class which will delegate to them. So introduce MergePolicyFactory which can allow you to conveniently do that in solrconfig.xml is a new feature. But, we want to get them both out in 5.5, so no need to argue about it, let's just make it happen. If 5.5 was a week away, we'd perhaps want to finish working on Simple first, but it's not.\n\nNeed we consider the possibility of a custom merge policy factory wrapping more-than-one merge policy?\n\nDo you mean an MP wrapping an MP wrapping an MP? I am not aware of any MP in Lucene today that behaves like that, but I think a WrapperMPF should just seamlessly allow it?\n\nPS: I have pushed all my current changes to master-solr-8621 as per above. Thanks!\n\nThanks and I've already rebased. I'll move the classes under *.solr now and get the next set of changes in reasonable shape and push them. From a multiple commits standpoint, we can do the following:\n\n\n\tFinish current work stream by introducing Simple/Wrapper etc. Once we're satisfied with these changes (i.e. willing to commit to trunk/5x) we squash the commits into one and push to master/branch_5x.\n\tHandle the warning/error path, by modifying solrconfig.xmls, failing in trunk and warning in 5x. Push those to master/branch_5x.\n\tHandle SortingMergePolicy on the other issue.\n\n\n\nWhat do you think? ",
            "id": "comment-15128127"
        },
        {
            "date": "2016-02-02T11:59:53+0000",
            "author": "Christine Poerschke",
            "content": "Need we consider the possibility of a custom merge policy factory wrapping more-than-one merge policy?\n\nIllustration (using admittedly contrived hypothetical examples):\n\npublic SeasonalMergePolicy(MergePolicy spring, MergePolicy summer, MergePolicy autumn, MergePolicy winter) {\npublic WorkingWeekMergePolicy(MergePolicy weekday, MergePolicy weekend) {\npublic CloudAwareMergePolicy(MergePolicy busyCloud, MergePolicy unbusyCloud) {\n\n ",
            "id": "comment-15128140"
        },
        {
            "date": "2016-02-02T12:13:35+0000",
            "author": "Shai Erera",
            "content": "Hmm .. interesting ideas . In that case I think we can change \"wrapped.key\" to take a comma-separated list of keys and then create an appropriate factory class? Or, we don't change anything and just create an appropriate MPF for each of them, taking whatever parameters we need? I'd do that though in a separate issue. ",
            "id": "comment-15128154"
        },
        {
            "date": "2016-02-02T12:29:43+0000",
            "author": "Christine Poerschke",
            "content": "I'd do that though in a separate issue.\n\nYep, totally that can be a separate issue and for now we just need to keep in mind that a merge policy that wraps two or more other merge policies could exists at some point in the future. ",
            "id": "comment-15128174"
        },
        {
            "date": "2016-02-02T17:44:24+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke I've pushed my changes to the branch. You're welcome to review it. ",
            "id": "comment-15128650"
        },
        {
            "date": "2016-02-02T18:17:03+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke I've one question about the branch you created. It seemed that when you updated it to latest master, you did that with a git merge command - correct? So if now I type 'git log' I see something like this:\n\n\nsolr-8621 commit\nsolr-8621 commit\nnon-solr-8621 commit\nnon-solr-8621 commit\nnon-solr-8621 commit\nnon-solr-8621 commit\nnon-solr-8621 commit\nnon-solr-8621 commit\nnon-solr-8621 commit\nsolr-8621 commit\nsolr-8621 commit\n\n\n\nI know we're still discussing rebase vs merge on that thread, and I don't mean to continue the discussion here. I just want to level set with your expectations and understand if you did that intentionally, i.e. is that how you expect 'git log' to look eventually, or was that done as an afterthought?\n\nI would personally rebase all commits we do in this branch on master, so that eventually we can have the commits stacked on top of the latest one in master. I would even squash all of them into a single commit which says \"SOLR-8621: add MergePolicyFactory\" and with a broader description.\n\nSo again, just mean to level set with your intentions here . ",
            "id": "comment-15128712"
        },
        {
            "date": "2016-02-02T20:09:33+0000",
            "author": "Christine Poerschke",
            "content": "I've pushed my changes to the branch. You're welcome to review it.\n\nGreat, thanks! Will take a look, very likely not before Thursday though.\n\nI've one question about the branch you created. ...\n\nCorrect, I used git merge master to merge the latest (at the time) changes from master onto master-solr-8621 branch. (This unexpectedly added updates to the tickets concerned which might be confusing, but that's a separate discussion for elsewhere.) My intention was for the master-solr-8621 history to reflect its detailed history. As far as 'committing to master' is concerned (at least with respect to this SOLR-8621 ticket here) my outlook currently is that all the master-solr-8621 history would be squashed 'at the end' and going back to 'master' there would be just a single commit. How does that sound (with respect to this ticket, not generally speaking)? ",
            "id": "comment-15128930"
        },
        {
            "date": "2016-02-02T20:25:24+0000",
            "author": "Shai Erera",
            "content": "my outlook currently is that all the master-solr-8621 history would be squashed 'at the end' and going back to 'master' there would be just a single commit. How does that sound\n\nThat sounds just like I would prefer it to happen, so glad to see we're in agreement here. Just FYI, it would have been easier to do this squash if you rebased master-solr-8621 on origin/master. Then all our commits would stack on top of each other.\n\nWe can still do this though, but I think we'd need to cherry-pick all commits there into a separate local branch, and then squash. Not sure it matters much now though. I don't mind doing the final \"commit\" after we finish iterating on the changes. ",
            "id": "comment-15128957"
        },
        {
            "date": "2016-02-04T21:37:00+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke have you had a chance to review the latest changes yet? ",
            "id": "comment-15133081"
        },
        {
            "date": "2016-02-04T21:55:40+0000",
            "author": "Christine Poerschke",
            "content": "Christine Poerschke have you had a chance to review the latest changes yet?\n\nYes, literally having a look at now/this evening, looks good  Am tinkering a little with tests and exploring if a DefaultMergePolicyFactory could make an appearance (as-is both SolrIndexConfig and UpgradeIndexMergePolicy have the concept of TieredMergePolicy being the default). Hoping to push update to master-solr-8621 branch in the next hour or so. ",
            "id": "comment-15133121"
        },
        {
            "date": "2016-02-04T23:28:41+0000",
            "author": "Christine Poerschke",
            "content": "Christine Poerschke have you had a chance to review the latest changes yet?\n\nPushed my changes to master-solr-8621 branch. Shai Erera - let me know what you think.\n\nFor WrapperMergePolicyFactoryTest I'd like to add one more test, tomorrow hopefully, it currently tests that the wrapped policy correctly 'claims' its arguments from the args list and it would be good to also test that the wrapped policy is not wrongly claiming arguments belonging to either the wrapping policy nor arguments belonging to another wrapped policy.\n\n... I don't mind doing the final \"commit\" after we finish iterating on the changes.\n\nSure, that works for me. ",
            "id": "comment-15133316"
        },
        {
            "date": "2016-02-05T15:57:33+0000",
            "author": "Shai Erera",
            "content": "Thanks Christine Poerschke, I'll review the two commits that you pushed. One quick comment/question that I have is about SolrIndexConfig's defaultMP class and factory names. (1) I think they can be private since they're used only in SolrIndexConfig. Two, I think we can use an instance, rather than class name? So that in buildMPFromInfo we just create a new instance (i.e. new DefaultMPFactory().getMP()). What do you think?\n\nI'll give it another review later. ",
            "id": "comment-15134365"
        },
        {
            "date": "2016-02-05T17:48:42+0000",
            "author": "Christine Poerschke",
            "content": "Hello Shai Erera, thanks for taking a look.\n\n... I think they can be private since they're used only in SolrIndexConfig\n\nI had considered package-visibility but assumed/think it's not possible since SolrIndexConfig is org.apache.solr.update and DefaultMergePolicyFactory is org.apache.solr.index. But your second point would make this moot anyhow.\n\n... in buildMPFromInfo we just create a new instance (i.e. new DefaultMPFactory().getMP()).\n\nYes, that totally makes sense. My focus had been on having a single unified place where 'default merge policy-ness' is handled, changing the existing buildMergePolicy[FromInfo] code to also use the new default factory simply hadn't appeared on the radar. Good find! I'll go make that change.\n\nUnrelated to the above, just pushed changes to MergePolicyFactoryArgs which will do away with the need to change SolrPluginUtils but still keep MergePolicyFactoryArgs as an abstraction which just happens to be implemented via a NamedList at the moment. ",
            "id": "comment-15134561"
        },
        {
            "date": "2016-02-05T17:51:40+0000",
            "author": "Christine Poerschke",
            "content": "One more thing: release 5.5 branch cutting is on the horizon. Are we intending to be in 5.5 with SOLR-8621? I think it would be good to be in 5.5 release. What do you think? ",
            "id": "comment-15134567"
        },
        {
            "date": "2016-02-05T20:15:55+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke, IMO we should definitely aim at releasing it in 5.5, since we have to deprecate the <mergePolicy> stuff in solrconfig.xml. So let's mark this issue as a Blocker for 5.5. I suspect 5.5 will take a while, especially if it's supposed to be the last 5.x release before 6.0, cause a lot of stuff will need to be properly deprecated. Anyway, I think we're close and can probably finish this one by next week. ",
            "id": "comment-15134897"
        },
        {
            "date": "2016-02-05T22:59:34+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera - my last push to master-solr-8621 proposes to make SimpleMergePolicyFactory non-abstract and considers (in the admittedly rather long commit message)\n\n\twhether or not (Log(ByteSize|Doc)|Tiered)MergePolicyFactory should be retained, and\n\twhether or not WrapperMergePolicyFactory should support a \"class\" element.\n\n\n\nI'm thinking \"no\" and \"yes\" - what do you think? ",
            "id": "comment-15135205"
        },
        {
            "date": "2016-02-06T15:44:18+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke I reviewed the latest patch and here's my take on SimpleMergePolicyFactory: at first, I thought about this approach too, but eventually preferred the explicit TieredMPFactory. It has few advantages IMO:\n\n\n\tIt's simple. Requires less typing by the user, and having a SimpleMPF for which you declare a 'class' feels like a level of indirection. It's as if SimpleMPF itself has no use.\n\tWrapperMPF is also a code-only class, but users don't specify it explicitly in config.xml. Users would specify a SortingMPF or UpgradeIndexMPF.\n\tThe 'class' element of WrapperMPF is a Factory class, not an MP class. Unlike the one we'll have on SimpleMPF.\n\n\n\nIf we'll have both SimpleMPF and TieredMPF, it feels like duplicated efforts. Perhaps we should start simple (i.e. keep SimpleMPF abstract and only expose the concrete factories) and if demand arises, we can make it a concrete class too? That route is always back-compat, but the other one may not be.\n\nSo Simple/Wrapper belong more to the code-design land, while the concrete factories belong to the user land.\n\nWhat do you think? ",
            "id": "comment-15135830"
        },
        {
            "date": "2016-02-06T15:55:03+0000",
            "author": "Shai Erera",
            "content": "About WrapperMergePolicyFactory, for it too I prefer that we keep the top-level concrete/exposed, and leave Wrapper to be an implementation helper.\n\nBTW, I thought that we can have wrapped.key optional and default to 'delegate' if one isn't specified. Again, to simplify configuration for users, who in most cases will wrap a simple MP factory. Opinions?\n\nIn terms of 5.5, I personally feel like what we have so far is very solid and already covers all the MP scenarios I can think about. The factory itself lets you implement one from scratch and configure it however you want. And we offer helper classes (Wrapper and Simple) if you want to implement something on your own, but not from scratch. And we cover all currently supported-by-Solr MPs.\n\nSo I'd rather we finish the work on this issue, so that 5.5 can really go out with it. We still have a lot to do in terms of actually deprecating <mergePolicy> support, remove in trunk, modify existing {{solrconfig.xml}}s etc. Then we want to expose SortingMPF (SOLR-5730), though that can happen post 5.5 if we don't make it.\n\nAs I said in my previous comment, if we later discover that we want to make Simple/Wrapper more concrete classes, we can always do that. Post 6.0 too. ",
            "id": "comment-15135847"
        },
        {
            "date": "2016-02-08T12:32:50+0000",
            "author": "Shai Erera",
            "content": "\nUnrelated to the above, just pushed changes to MergePolicyFactoryArgs which will do away with the need to change SolrPluginUtils but still keep MergePolicyFactoryArgs as an abstraction which just happens to be implemented via a NamedList at the moment.\n\nI actually prefer that we not extend the usage of NamedList . Really what we need is a Map<String,Object> (which NamedList is also), so why introduce it in this class? Would you mind if we switch back to Map? I also think that some of the changes to SolrPluginUtils, e.g. the refactoring of the findMethod method, contributed to its code readability, so I'd like to restore them too. And finally, we we move back to a Map, then keys() don't need to create a new HashSet.\n\nBTW, I thought that we can have wrapped.key optional and default to 'delegate' if one isn't specified.\n\nI take it back for now. Currently, if wrapper.key is not specified, we assume a default wrapped MP should be used. We can still make wrapper.key optional, but I don't mind if we defer that change for now. It can always be made optional later. ",
            "id": "comment-15136886"
        },
        {
            "date": "2016-02-08T13:03:37+0000",
            "author": "Christine Poerschke",
            "content": "Hello Shai Erera - thanks for your comments. I'm just catching up on things here.\n\n... I actually prefer that we not extend the usage of NamedList  . Really what we need is a Map<String,Object> ...\n\nSure, we can switch back to Map. Shall I just revert the particular commit or do we perhaps want to do away with MergePolicyFactoryArgs at this point?\n\n... have wrapped.key optional and default to 'delegate' ...\n\nYes, at first glance defaulting to 'delegate' sounds convenient but on second thoughts like you say wrapper.key not specified corresponding to default wrapped MP is clearer and more user friendly. ",
            "id": "comment-15136911"
        },
        {
            "date": "2016-02-08T13:12:34+0000",
            "author": "Christine Poerschke",
            "content": "re: SimpleMergePolicyFactory - I will revert the commit that made this class non-abstract. How about factoryClass (or even factory) instead of class element though? E.g.\n\n<mergePolicyFactory class=\"UpgradeMergePolicyFactory\">\n  <str name=\"wrapped.key\">mergePolicy</str>\n  <str name=\"mergePolicy.factoryClass\">TieredMergePolicyFactory</str>\n  <int name=\"mergePolicy.segmentsPerTier\">42</int>\n</mergePolicyFactory>\n\n\ninstead of\n\n<mergePolicyFactory class=\"UpgradeMergePolicyFactory\">\n  <str name=\"wrapped.key\">mergePolicy</str>\n  <str name=\"mergePolicy.class\">TieredMergePolicyFactory</str>\n  <int name=\"mergePolicy.segmentsPerTier\">42</int>\n</mergePolicyFactory>\n\n ",
            "id": "comment-15136923"
        },
        {
            "date": "2016-02-08T13:28:01+0000",
            "author": "Shai Erera",
            "content": "Shall I just revert the particular commit or do we perhaps want to do away with MergePolicyFactoryArgs at this point?\n\nNo need to, I'll handle that.\n\nI will revert the commit that made this class non-abstract\n\nNo need to, we can simply skip it when we cherry-pick the commits.\n\nHow about factoryClass (or even factory) instead of class element though?\n\nI think 'class' is more consistent with the wrapper <mergePolicyFactory class=\"\"> element? ",
            "id": "comment-15136936"
        },
        {
            "date": "2016-02-08T13:36:28+0000",
            "author": "Christine Poerschke",
            "content": "Thanks for quick reply. The piece I intend to tackle next is the solr/core/src/test-files/solr/collection1/conf solrconfig*.xml changes - is that okay? For solrconfig-tieredmergepolicy.xml there is solrconfig-tieredmergepolicyfactory.xml already and the test randomly chooses one or the other. For the other files a similar pattern would be followed and when \"<mergePolicy>\" support goes away the solrconfig-tieredmergepolicy.xml file goes away along with it. ",
            "id": "comment-15136946"
        },
        {
            "date": "2016-02-08T14:33:21+0000",
            "author": "Shai Erera",
            "content": "We definitely should fix all the solrconfig.xmls, but I thought this can be done in a separate commit, together with decprecating <mergePolicy>. What do you think?\n\nFor this current 'commit' I want to finish the SolrPluginUtils changes and then I thought to combine all changes we have into one commit. What do you think? ",
            "id": "comment-15136996"
        },
        {
            "date": "2016-02-08T16:32:12+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke, patch includes the changes from all commits that we've pushed to master-solr-8621, minus the commit we wanted to revert, and also after rebasing all our changes on current 'master'. The reason I didn't push it to our branch is so that we don't need to revert that commit, and also cause at some point we merged with master rather than rebasing.\n\nNote that I had to remove SolrIndexConfig.buildMergePolicy() cause of a test that failed. We should just call SolrIndexConfig.buildMergePolicyFromInfo() to unify how we configure the MP.\n\nIf you prefer that I push it to branch, then I can try and squash all the commits etc., or can push it to a separate branch. But I think it's ready. ",
            "id": "comment-15137178"
        },
        {
            "date": "2016-02-08T17:31:32+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera, thanks for combining branch snapshot into a patch file.\n\nI've continued work on the solrconfig.xml test changes and from that found that just a <mergeFactor> element without a <mergePolicy> element is currently valid and SolrIndexConfig.java needs to consider it, something like https://git1-us-west.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=7b21aa1c - what do you think?\n\nTomorrow/Tuesday I'm hoping to tackle the tests currently containing\n\n<mergePolicy class=\"${solr.tests.mergePolicy:org.apache.solr.util.RandomMergePolicy}\" />\n\n\ni.e. continuing on from http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/28d07935 refactor.\n\nIf you prefer that I push it to branch ... But I think it's ready.\n\nHappy for you to take care of the push to master and branch_5x merge.\n\nIn terms of ready, if the solrconfig-mergepolicy-legacy.xml i.e. TestMergePolicyConfig passes and other existing tests pass, then yes let's go for it and commit the code changes and partial test changes. Once that is done then we can take care of the remaining tests and examples and the SortingMergePolicy for SOLR-5730 can also be added then. How does that sound?\n\n ",
            "id": "comment-15137302"
        },
        {
            "date": "2016-02-08T18:28:52+0000",
            "author": "Shai Erera",
            "content": "Thanks Christine Poerschke, I'm running tests now. I'm not sure why you needed to add those checks to SolrIndexConfig and remove the assertions? The 'legacy' test that filed due to <mergeFactor> is fixed in my patch, by always calling buildMergePolicyFromInfo() (which I might change to just buildMergePolicy() now). Was there another test that failed? ",
            "id": "comment-15137424"
        },
        {
            "date": "2016-02-08T20:42:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit fc5b1ac279a02f51b634f0fd16ae3efdcdbc520b in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fc5b1ac ]\n\nSOLR-8621: deprecate <mergePolicy> in favor of <mergePolicyFactory> ",
            "id": "comment-15137644"
        },
        {
            "date": "2016-02-08T21:17:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit eac5a35960ba77f4f44ae255f658fc2174325af3 in lucene-solr's branch refs/heads/branch_5x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eac5a35 ]\n\nSOLR-8621: deprecate <mergePolicy> in favor of <mergePolicyFactory> ",
            "id": "comment-15137700"
        },
        {
            "date": "2016-02-08T21:20:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit fe2cf250796a98ff1791a504d21acb67f0a1c397 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fe2cf25 ]\n\nSOLR-8621: Fix SolrIndexConfig.toMap() to use mergePolicyFactoryInfo if present ",
            "id": "comment-15137711"
        },
        {
            "date": "2016-02-08T21:23:04+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke I pushed the changes to both master and branch_5x. I think we can now remove support for <mergePolicy>  in master? We also need to modify the ref guide .. do we do that via JIRA too? Let me know how you want to proceed, not sure if you've already started to work on any of these.\n\nBTW, I'll delete the remote tracking branch or this feature. We can create a new one if needed. Have you pushed anything more to it? ",
            "id": "comment-15137717"
        },
        {
            "date": "2016-02-08T21:48:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 71f4e01d9fa5d008cc59c0343637d8b2585018c5 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71f4e01 ]\n\nSOLR-8621: add missing package-info.java ",
            "id": "comment-15137761"
        },
        {
            "date": "2016-02-08T21:49:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 67bf26f78d588748c157445b33e6c6b78197ec98 in lucene-solr's branch refs/heads/branch_5x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=67bf26f ]\n\nSOLR-8621: add missing package-info.java ",
            "id": "comment-15137764"
        },
        {
            "date": "2016-02-08T22:48:59+0000",
            "author": "Shawn Heisey",
            "content": "I just saw a commit email with some \"upgrading from 5.4\" changes for this issue.\n\nThe example in the doc shows a maxMergeAtOnce and segmentsPerTier value of 42 ... but this specific example will probably not work entirely as expected, because the default value of \"maxMergeAtOnceExplicit\" is 30.\n\nWith a value of 42 for the two primary settings, maxMergeAtOnceExplicit should be changed to 126.  I cannot claim to know how everything interacts with that setting, but before I found out about it, I had trouble with optimizes when I set the other two values to 35.  It did not behave as it was supposed to until I set the explicit value to 105.\n\nI wonder if perhaps the default setting of maxMergeAtOnceExplicit (if not manually configured) should be 3 times the current value of maxMergeAtOnce, rather than hardcoded to 30.  If maxMergeAtOnceExplicit is actually configured, then it should definitely override that default.\n\nI've whipped up a patch.  If it looks like a good idea, then it needs its own LUCENE issue. ",
            "id": "comment-15137918"
        },
        {
            "date": "2016-02-09T09:34:31+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera - thanks for pushing changes to master and branch_5x.\n\n... I think we can now remove support for <mergePolicy> in master? ...\n\nCould I suggest leaving support in master until 5.5 is released? Perhaps 'remove <mergePolicy> support' should be a separate JIRA even? Two main motivations for keeping the deprecated mergePolicy around for a little longer: (a) I'd like to do a little more work on the tests to ensure we didn't inadvertently break anything as part of the change. (b) If any little changes are needed then it might be easier to commit-to-master-and-then-merge-to-5.5 if master still has the deprecated mergePolicy support. How does that sound?\n\nWe also need to modify the ref guide .. do we do that via JIRA too? Let me know how you want to proceed, not sure if you've already started to work on any of these.\n\nGood question, not sure how ref guide changes are normally handled. No, I haven't started to work on the ref guide things as yet.\n\nBTW, I'll delete the remote tracking branch or this feature. We can create a new one if needed. Have you pushed anything more to it?\n\nLet me check, I think there might have been some test-related stuff and draft solr/CHANGES.txt examples. ",
            "id": "comment-15138627"
        },
        {
            "date": "2016-02-09T09:53:09+0000",
            "author": "Christine Poerschke",
            "content": "Shawn Heisey - It's the master-solr-8621 i.e. working branch https://git1-us-west.apache.org/repos/asf?p=lucene-solr.git;a=commitdiff;h=8ec2c844 that you refer to I think?\n\n... maxMergeAtOnce and segmentsPerTier value of 42 ...\n\nMy intention was to communicate that users with an existing <mergeFactor> or <maxMergeDocs> setting likely need to add an equivalent element to the <mergePolicyFactory> element. Using 42 as an example value was clearly distracting, I will use ?? instead then.\n\n... maxMergeAtOnce ... maxMergeAtOnceExplicit ...\n\nInteresting point about the alignment or otherwise of these values. Yes, that sounds worthy of its own LUCENE issue. ",
            "id": "comment-15138669"
        },
        {
            "date": "2016-02-09T10:55:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 360376095446db236c1708af18b95dd13c605634 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3603760 ]\n\nSOLR-8621: solr/CHANGES.txt 'Upgrading from 5.4' section now also mentions <mergeFactor> and <maxMergeDocs> deprecation, also useCompoundFile attribute/element. ",
            "id": "comment-15138780"
        },
        {
            "date": "2016-02-09T10:57:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b052a8f93776ed7fef3c47764650566cfd9a358f in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b052a8f ]\n\nSOLR-8621: solr/CHANGES.txt 'Upgrading from 5.4' section now also mentions <mergeFactor> and <maxMergeDocs> deprecation, also useCompoundFile attribute/element. ",
            "id": "comment-15138782"
        },
        {
            "date": "2016-02-09T12:13:57+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke: OK so let's do the following:\n\n\n\tMove all solrconfig.xmls to use the new factory, except the legacy ones (used for tests). Also, let's mark somehow all the tests/code that we want to remove in master, so it will be easier to track.\n\n\n\n\n\tOpen an issue to remove support for <mergePolicy> in 6.0. We can make it a blocker for 6.0.\n\n\n\n\n\tAbout the ref guide, I don't think that we work on it via JIRA. Do we modify it in confluence directly?\n\n\n\nAbout splitting the work, is there something you prefer to do? If not, I'd rather handle the existing solrconfigs than modify the ref guide. You'll probably do a better job at it than me . I will gladly help with reviews!\n\nAlso, if there's anything else you think should be done in the context of this issue, or need help with, please let me know! ",
            "id": "comment-15138848"
        },
        {
            "date": "2016-02-09T12:39:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e9c90037aaf2f392d7f99a7837abd944a9577e9e in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e9c9003 ]\n\nSOLR-8621: TestMergePolicyConfig.testTieredMergePolicyConfig now randomly chooses between solrconfig-tieredmergepolicy.xml and solrconfig-tieredmergepolicyfactory.xml; solrconfig-tieredmergepolicyfactory.xml fix so that TestMergePolicyConfig.testTieredMergePolicyConfig passes. ",
            "id": "comment-15138883"
        },
        {
            "date": "2016-02-09T12:47:20+0000",
            "author": "Christine Poerschke",
            "content": "About splitting the work, is there something you prefer to do?\n\nCould I take on the solr/core/src/test-files/solr/collection1/conf portion of the solrconfig.xml changes? It continues from the remaining bits of the master-solr-8621 working branch that weren't yet ready to be committed alongside the main changes.\n\nBTW, I'll delete the remote tracking branch or this feature. We can create a new one if needed. Have you pushed anything more to it?\n\nFrom the things pushed late yesterday and not included in the main commit, I have squashed/rebased stuff locally and captured all I need i.e. the master-solr-8621 working branch as-is can be deleted. Not sure if we need or want a new one to replace it? ",
            "id": "comment-15138888"
        },
        {
            "date": "2016-02-09T12:50:59+0000",
            "author": "Shai Erera",
            "content": "Could I take on the\n\nSure. You lead this, I'm only here to help . So tell me how can I help more.\n\nNot sure if we need or want a new one to replace it?\n\nFor fixing the config xmls, I don't think that we need a branch. If we're not collaborating on the same task / code path, no need for a remote branch. If that's OK with you, I'll go ahead and delete it. ",
            "id": "comment-15138897"
        },
        {
            "date": "2016-02-09T12:55:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 39fd942514a5474d81a285a3a69f4d2c1dca33c7 in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=39fd942 ]\n\nSOLR-8621: TestMergePolicyConfig.testTieredMergePolicyConfig now randomly chooses between solrconfig-tieredmergepolicy.xml and solrconfig-tieredmergepolicyfactory.xml; solrconfig-tieredmergepolicyfactory.xml fix so that TestMergePolicyConfig.testTieredMergePolicyConfig passes. ",
            "id": "comment-15138906"
        },
        {
            "date": "2016-02-09T13:02:27+0000",
            "author": "Christine Poerschke",
            "content": "It's great to collaborate on this  and I agree if we don't work on the same code paths then no need for a remote branch. Yes please, go ahead and delete the master-solr-8621 working branch.\n\nCould you take care of the solr/contrib and solr/example solrconfig.xml changes? And opening the follow-on issue to remove support for <mergePolicy> in 6.0?\n\nMy next steps are to continue on the core/src/test-files/solr/collection1/conf solrconfig.xml changes and in parallel with that to rebase SOLR-5730 where a SortingMergePolicyFactory code review would be much appreciated later on. ",
            "id": "comment-15138912"
        },
        {
            "date": "2016-02-09T16:55:11+0000",
            "author": "Christine Poerschke",
            "content": "Hmm, small hiccup re: MergePolicyFactory's getMergePolicy signature. The SortingMergePolicyFactory in SOLR-5730 needs access to the schema with the 'obvious' signature change being\n\n-  public abstract MergePolicy getMergePolicy();\n+  public abstract MergePolicy getMergePolicy(IndexSchema schema);\n\n\nfor the abstract MergePolicyFactory class and all classes inheriting from it.\n\nShai Erera - would you have any thoughts on this? I'm thinking that changing the signature at this point is still okay since <mergePolicyFactory> support is not yet released and in practice SolrIndexConfig.buildMergePolicy(final IndexSchema schema) is always able to pass the schema to the getMergePolicy method. ",
            "id": "comment-15139198"
        },
        {
            "date": "2016-02-09T17:27:41+0000",
            "author": "Christine Poerschke",
            "content": "Upon further consideration, changing the getMergePolicy signature means that getMergePolicyInstance and getDefaultWrappedMergePolicy and getWrappedMergePolicy signatures all change also.\n\nHere's an alternative, change the MergePolicyFactory constructor:\n\n-  protected MergePolicyFactory(SolrResourceLoader resourceLoader, MergePolicyFactoryArgs args) {\n+  protected MergePolicyFactory(SolrResourceLoader resourceLoader, MergePolicyFactoryArgs args, IndexSchema schema) {\n\n ",
            "id": "comment-15139254"
        },
        {
            "date": "2016-02-09T17:48:52+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b47eeb2bb39e94f23d64df3c4621e7303bbe9dd9 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b47eeb2 ]\n\nSOLR-8621: more <mergePolicy> vs. <mergePolicyFactory> test coverage\n\n\n\tadded bad-mpf-solrconfig.xml as MergePolicyFactory equivalent of bad-mp-solrconfig.xml (with DummyMergePolicyFactory as equivalent to DummyMergePolicy)\n\n\n\n\n\tadded solrconfig-logmergepolicyfactory.xml as MergePolicyFactory equivalent of solrconfig-logmergepolicy.xml\n\n\n\n\n\tadded solrconfig-mergepolicyfactory-nocfs.xml as MergePolicyFactory equivalent of solrconfig-mergepolicy-nocfs.xml\n\n\n\n\n\tadded solrconfig-indexconfig-mergepolicyfactory.xml as MergePolicyFactory equivalent of solrconfig-indexconfig.xml\n\n\n\n\n\tadded solrconfig-warmer-randommergepolicyfactory.xml as MergePolicyFactory equivalent of solrconfig-warmer.xml\n\n ",
            "id": "comment-15139285"
        },
        {
            "date": "2016-02-09T18:10:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 594145f2d5307ebd208dd9d054f5b63678bd415f in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=594145f ]\n\nSOLR-8621: more <mergePolicy> vs. <mergePolicyFactory> test coverage\n\n\n\tadded bad-mpf-solrconfig.xml as MergePolicyFactory equivalent of bad-mp-solrconfig.xml (with DummyMergePolicyFactory as equivalent to DummyMergePolicy)\n\n\n\n\n\tadded solrconfig-logmergepolicyfactory.xml as MergePolicyFactory equivalent of solrconfig-logmergepolicy.xml\n\n\n\n\n\tadded solrconfig-mergepolicyfactory-nocfs.xml as MergePolicyFactory equivalent of solrconfig-mergepolicy-nocfs.xml\n\n\n\n\n\tadded solrconfig-indexconfig-mergepolicyfactory.xml as MergePolicyFactory equivalent of solrconfig-indexconfig.xml\n\n\n\n\n\tadded solrconfig-warmer-randommergepolicyfactory.xml as MergePolicyFactory equivalent of solrconfig-warmer.xml\n\n ",
            "id": "comment-15139322"
        },
        {
            "date": "2016-02-09T21:44:42+0000",
            "author": "Christine Poerschke",
            "content": "e0b2ebf9c5b9013c8ab2a10717feefd11a101bcb on jira/solr-5730-master working-branch turned out as my preferred way of making the IndexSchema available to SortingMergePolicyFactory but if the alternative of\n\n-  public abstract MergePolicy getMergePolicy();\n+  public abstract MergePolicy getMergePolicy(IndexSchema schema);\n\n\nis considered more suitable then it's something that can be easily changed tomorrow/Wednesday. Shai Erera - what do you think? ",
            "id": "comment-15139838"
        },
        {
            "date": "2016-02-10T01:15:31+0000",
            "author": "Shai Erera",
            "content": "Could you take care of the solr/contrib and solr/example solrconfig.xml changes?\n\nSure, I'll take a look at them.\n\nAnd opening the follow-on issue to remove support for <mergePolicy> in 6.0?\n\nOpened SOLR-8668.\n\nAbout IndexSchema, I was going to propose that you add it as a ctor argument, but I see you've already done that. Just wondering though, what does SortingMergePolicyFactory need from IndexSchema that it cannot create on its own? It already receives the sort-by fields and order in the config, all it needs to do is to create a Sort class. What does it get from IndexSchema then? ",
            "id": "comment-15140147"
        },
        {
            "date": "2016-02-10T01:45:11+0000",
            "author": "Shai Erera",
            "content": "Patch changes solrconfig.xmls under solr/contrib and solr/example. Christine Poerschke, none of these files actually configured an MP, so I only changed the commented out sections. Let me know if you have concerns about this change. ",
            "id": "comment-15140190"
        },
        {
            "date": "2016-02-10T11:35:55+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera - thanks for patch changes to solrconfig.xmls under solr/contrib and solr/example. Question: if/where the commented out sections correspond completely to what is 'default merge policy factory' might it make sense to just completely remove the commented out <mergePolicy*> element and just have a comment saying that the default will be used because the <mergePolicyFactory> element is absent but something else could be configured via\n\n<mergePolicyFacory class=\"...\">\n</mergePolicyFacory>\n\n\nif required? That would be my preference I think. Alternatively, if we are keeping and just updating the commented out elements then the <mergeFactor> element maps to TieredMergePolicyFactory.maxMergeAtOnce and TieredMergePolicyFactory.segmentsPerTier but TieredMergePolicy[Factory] itself has no mergeFactor setter. With solrconfig-tieredmergepolicyfactory.xml I got this wrong also at the first attempt and thus made 360376095446db236c1708af18b95dd13c605634 solr/CHANGES.txt 'Upgrading from 5.4' section change. What do you think? ",
            "id": "comment-15140668"
        },
        {
            "date": "2016-02-10T11:48:45+0000",
            "author": "Christine Poerschke",
            "content": "... what does SortingMergePolicyFactory need from IndexSchema that it cannot create on its own? It already receives the sort-by fields and order in the config, all it needs to do is to create a Sort class. What does it get from IndexSchema then?\n\nThe plan so far was that the sort would be specified as a string e.g.\n\n<str name=\"sort\">popularity desc, timestamp desc</str>\n\n\n in the same way as when a &sort=... parameter is passed as part of a select request. The solrconfig.xml SortingMergePolicyFactory's sort string is then parsed using the essentially the same methods used for parsing the sort parameter in the select request e.g. SortSpecParsing.parseSortSpec(sortArg, schema) - does that kind of make sense?\n\n... It already receives the sort-by fields and order in the config, all it needs to do is to create a Sort class ...\n\nAre you saying that perhaps there is a way to create the Sort class without use of IndexSchema if the solrconfig.xml sort-by fields and order are provided in a structured way that requires no parsing? Interesting idea, let me look into that a little further. ",
            "id": "comment-15140676"
        },
        {
            "date": "2016-02-10T12:07:01+0000",
            "author": "Christine Poerschke",
            "content": "ticket cross-reference: LUCENE-7020 is the follow-on ticket. ",
            "id": "comment-15140690"
        },
        {
            "date": "2016-02-10T12:07:23+0000",
            "author": "Christine Poerschke",
            "content": "ticket cross-reference: LUCENE-7020 is the follow-on ticket. ",
            "id": "comment-15140691"
        },
        {
            "date": "2016-02-10T13:20:02+0000",
            "author": "Shai Erera",
            "content": "Good catch, I just blindly moved that 'mergeFactor' in . I'll remove it. I'd like to keep the example though, since it's consistent with the rest of the commented out examples.\n\nAbout SortingMergePolicyFactory and IndexSchema, I see that SortSpecParsing uses the provided schema only to validate that the field exists in the schema. If we want to keep that validity check, then let's continue with your proposal of passing IndexSchema to the factory's ctor.\n\nAbout this parsing logic, it also relies on request params, so perhaps factor out the parsing logic to a utility that you can use? That utility can then also validate that the sort field exists in the schema. I didn't review that method fully, but I hope it's doable. ",
            "id": "comment-15140753"
        },
        {
            "date": "2016-02-10T13:24:19+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke if you're OK with this patch, I'll commit it. ",
            "id": "comment-15140755"
        },
        {
            "date": "2016-02-10T14:30:21+0000",
            "author": "Christine Poerschke",
            "content": "About this parsing logic, it also relies on request params, so perhaps factor out the parsing logic to a utility that you can use? That utility can then also validate that the sort field exists in the schema. I didn't review that method fully, but I hope it's doable.\n\nSOLR-8321 was to 'add a (SolrQueryRequest free) SortSpecParsing.parseSortSpec variant' i.e. I hope it's already done what was doable \n\nRevised SOLR-8621-example_contrib_configs.patch looks good to me, thanks for taking care of it. ",
            "id": "comment-15140870"
        },
        {
            "date": "2016-02-10T14:33:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a5accccbfcb95ee180d0f069274c07f771844f61 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a5acccc ]\n\nSOLR-8621: fix solrconfig.xml under contrib and example ",
            "id": "comment-15140876"
        },
        {
            "date": "2016-02-10T14:34:00+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 24f4025dc13aaaea7e89e349249e8819ba925279 in lucene-solr's branch refs/heads/branch_5x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=24f4025 ]\n\nSOLR-8621: fix solrconfig.xml under contrib and example ",
            "id": "comment-15140878"
        },
        {
            "date": "2016-02-10T14:39:20+0000",
            "author": "Shai Erera",
            "content": "You're right Christine, I didn't notice the IndexSchema only variant. Let's continue on SOLR-5730 then by adding the schema to the factory's ctor.\n\nSo besides this API change, what's left to do in the context of this issue? Since it's marked blocker for 5.5, I want to make sure that we don't hold up the release too long:\n\n\n\tSo the API change has to go in.\n\tAdding tests can be done separately? (unless you already have some work done there).\n\tWe finished (as far as I could tell), updating all existing solrconfig.xmls.\n\tWe have a separate issue to remove support in 6.0.\n\tWe should update the ref guide, but the ref guide is usually released after the binaries anyway.\n\n\n\nAm I missing something? ",
            "id": "comment-15140888"
        },
        {
            "date": "2016-02-10T16:41:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5d32609cdc413e15619a94d8d508987a65514e7e in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5d32609 ]\n\nSOLR-8621: add IndexSchema arg to MergePolicyFactory constructor ",
            "id": "comment-15141116"
        },
        {
            "date": "2016-02-10T16:48:06+0000",
            "author": "Christine Poerschke",
            "content": "... Am I missing something?\n\nNo, that list of bullet points sounds right to me. Additional/Remaining test coverage to be done separately, yes, that makes sense and I hope that by end of today we can 'un-blocker' for 5.5 here. Before then, I seem to have discovered issues with the (wrapper?) factory and the setters i.e. them not taking effect as expected, hoping to have test case and fix shortly. ",
            "id": "comment-15141128"
        },
        {
            "date": "2016-02-10T16:53:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5d106503e7d4fbb8ac015c4fc723883f4ab7397e in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5d10650 ]\n\nSOLR-8621: add IndexSchema arg to MergePolicyFactory constructor ",
            "id": "comment-15141137"
        },
        {
            "date": "2016-02-10T21:33:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 588e3ff0842a5d021cff09aa72d94b0b5de45ca9 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=588e3ff ]\n\nSOLR-8621: fix mergePolicyFacory vs. mergePolicyFactory typos in comments in solr/contrib and solr/example solrconfig.xml files. ",
            "id": "comment-15141709"
        },
        {
            "date": "2016-02-10T21:34:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bbbc90f58b2f336c4c51f4844cd0f63121c76ccf in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bbbc90f ]\n\nSOLR-8621: fix mergePolicyFacory vs. mergePolicyFactory typos in comments in solr/contrib and solr/example solrconfig.xml files. ",
            "id": "comment-15141711"
        },
        {
            "date": "2016-02-10T22:27:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6b6932e8e1f72caf29a078f0532a56c284711f9f in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6b6932e ]\n\nSOLR-8621: WrapperMergePolicyFactory logic tweaks\n\n\n\tfix so that getMergePolicy() can now be called more than once\n\tadded WrapperMergePolicyFactoryTest.testUpgradeIndexMergePolicyFactory()\n\taccount for overlap between wrapping and wrapped setters (and disallow it)\n\t\n\t\tillustration:\n   <mergePolicyFactory class=\"UpgradeMergePolicyFactory\">\n      <int name=\"noCFSRatio\">0.24</int>\n      <str name=\"wrapped.prefix\">mergePolicy</str>\n                      <str name=\"mergePolicy.class\">TieredMergePolicyFactory</str>\n                      <int name=\"mergePolicy.noCFSRatio\">0.42</int>\n   </mergePolicyFactory>\n\t\timplementation details: the wrapping MP's setter calls the wrapped MP's setter and in the current code the wrapping MP's value prevails i.e. the 0.24 value in the illustration since the wrapped MP is constructed before the wrapping MP. an end-user however might reasonably assume that the wrapped MP's 0.42 value will prevail. at best configuring the same setter twice within the same overall <mergePolicyFactory> element is ambiguous and so the code now disallows it.\n\t\n\t\n\n ",
            "id": "comment-15141829"
        },
        {
            "date": "2016-02-10T22:30:21+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera - would you have any thoughts re: 6b6932e8e1f72caf29a078f0532a56c284711f9f commit above? If it is logical and reasonable then I will cherry-pick it to branch_5x and branch_5_5 tomorrow/Thursday. Thanks! ",
            "id": "comment-15141836"
        },
        {
            "date": "2016-02-11T01:18:42+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke thx for fixing that typo! And your latest commit looks fine to me. +1 to get it in. ",
            "id": "comment-15142095"
        },
        {
            "date": "2016-02-11T10:45:11+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera - thanks for reviewing the latest commit, i'll cherry-pick it to branch_5x and branch_5_5 later today.\n\nNo problem about the typo, I had also missed it in the patches and just stumbled across it when git-grep-ing to see which places still mention mergePolicy-but-not-mergePolicyFactory in their solrconfig.xml file.\n\nSomewhat but not quite related to MergePolicyFactory here and SortingMergePolicyFactory on SOLR-5730 - there were a few more TestSortingMergePolicy.testForceMergeNotNeeded test failures after LUCENE-7010 and maybe or maybe not similar to LUCENE-7008 test failure - would you have bandwidth to take a look perhaps at some point? ",
            "id": "comment-15142552"
        },
        {
            "date": "2016-02-11T10:51:50+0000",
            "author": "Shai Erera",
            "content": "Can you point me to a test failure? ",
            "id": "comment-15142568"
        },
        {
            "date": "2016-02-11T10:57:44+0000",
            "author": "Christine Poerschke",
            "content": "Sure, there were two failures - https://builds.apache.org/job/Lucene-Solr-NightlyTests-trunk/926/ on Feb 6th and http://jenkins.thetaphi.de/job/Lucene-Solr-5.x-Linux/15524/ on Feb 9th - I double-counted the latter one and thus arrived at the impression of 'two' failures being 'a few', sorry. ",
            "id": "comment-15142573"
        },
        {
            "date": "2016-02-11T11:32:28+0000",
            "author": "Shai Erera",
            "content": "Thanks I'll take a look. ",
            "id": "comment-15142613"
        },
        {
            "date": "2016-02-11T13:07:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bdef478737792afb861dc73ca33cb9a1775af4fe in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bdef478 ]\n\nSOLR-8621: WrapperMergePolicyFactory logic tweaks\n\n\n\tfix so that getMergePolicy() can now be called more than once\n\tadded WrapperMergePolicyFactoryTest.testUpgradeIndexMergePolicyFactory()\n\taccount for overlap between wrapping and wrapped setters (and disallow it)\n\t\n\t\tillustration:\n   <mergePolicyFactory class=\"UpgradeMergePolicyFactory\">\n      <int name=\"noCFSRatio\">0.24</int>\n      <str name=\"wrapped.prefix\">mergePolicy</str>\n                      <str name=\"mergePolicy.class\">TieredMergePolicyFactory</str>\n                      <int name=\"mergePolicy.noCFSRatio\">0.42</int>\n   </mergePolicyFactory>\n\t\timplementation details: the wrapping MP's setter calls the wrapped MP's setter and in the current code the wrapping MP's value prevails i.e. the 0.24 value in the illustration since the wrapped MP is constructed before the wrapping MP. an end-user however might reasonably assume that the wrapped MP's 0.42 value will prevail. at best configuring the same setter twice within the same overall <mergePolicyFactory> element is ambiguous and so the code now disallows it.\n\t\n\t\n\n ",
            "id": "comment-15142686"
        },
        {
            "date": "2016-02-11T13:25:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 47055d569dbefb41f88631ad917ab76b550ad8d4 in lucene-solr's branch refs/heads/branch_5_5 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=47055d5 ]\n\nSOLR-8621: fix mergePolicyFacory vs. mergePolicyFactory typos in comments in solr/contrib and solr/example solrconfig.xml files. ",
            "id": "comment-15142714"
        },
        {
            "date": "2016-02-11T13:25:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3f06f9a76f97203445ff9b35306ec0dcda59e0d8 in lucene-solr's branch refs/heads/branch_5_5 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3f06f9a ]\n\nSOLR-8621: WrapperMergePolicyFactory logic tweaks\n\n\n\tfix so that getMergePolicy() can now be called more than once\n\tadded WrapperMergePolicyFactoryTest.testUpgradeIndexMergePolicyFactory()\n\taccount for overlap between wrapping and wrapped setters (and disallow it)\n\t\n\t\tillustration:\n   <mergePolicyFactory class=\"UpgradeMergePolicyFactory\">\n      <int name=\"noCFSRatio\">0.24</int>\n      <str name=\"wrapped.prefix\">mergePolicy</str>\n                      <str name=\"mergePolicy.class\">TieredMergePolicyFactory</str>\n                      <int name=\"mergePolicy.noCFSRatio\">0.42</int>\n   </mergePolicyFactory>\n\t\timplementation details: the wrapping MP's setter calls the wrapped MP's setter and in the current code the wrapping MP's value prevails i.e. the 0.24 value in the illustration since the wrapped MP is constructed before the wrapping MP. an end-user however might reasonably assume that the wrapped MP's 0.42 value will prevail. at best configuring the same setter twice within the same overall <mergePolicyFactory> element is ambiguous and so the code now disallows it.\n\t\n\t\n\n ",
            "id": "comment-15142715"
        },
        {
            "date": "2016-02-11T17:24:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 360051a414e291a7b3ffb5a0180a404fa18f3a6c in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=360051a ]\n\nSOLR-8621: factor out protected abstract WrapperMergePolicyFactory.getMergePolicyInstance method\n\nHere in SOLR-8621:\n\n\tUpgradeIndexMergePolicyFactory extends WrapperMergePolicyFactory\n\t(WrapperMergePolicyFactoryTest's) DefaultingWrapperMergePolicyFactory extends WrapperMergePolicyFactory\n\n\n\nElsewhere in SOLR-5730:\n\n\tSortingMergePolicyFactory will extend WrapperMergePolicyFactory\n\n ",
            "id": "comment-15143092"
        },
        {
            "date": "2016-02-11T17:24:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 360051a414e291a7b3ffb5a0180a404fa18f3a6c in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=360051a ]\n\nSOLR-8621: factor out protected abstract WrapperMergePolicyFactory.getMergePolicyInstance method\n\nHere in SOLR-8621:\n\n\tUpgradeIndexMergePolicyFactory extends WrapperMergePolicyFactory\n\t(WrapperMergePolicyFactoryTest's) DefaultingWrapperMergePolicyFactory extends WrapperMergePolicyFactory\n\n\n\nElsewhere in SOLR-5730:\n\n\tSortingMergePolicyFactory will extend WrapperMergePolicyFactory\n\n ",
            "id": "comment-15143093"
        },
        {
            "date": "2016-02-11T17:47:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b2e47984f4411ec3cdde93ae57f72daab789b254 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b2e4798 ]\n\nSOLR-8621: add (test-framework) RandomForceMergePolicyFactory for existing (test-framework) RandomForceMergePolicy ",
            "id": "comment-15143136"
        },
        {
            "date": "2016-02-11T20:42:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 159ace1b7c6d002dd30e3fd17f497f3093944039 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=159ace1 ]\n\nSOLR-8621: solrconfig.xml in solr/server/solr/configsets and test-files/solr/configsets/bad-mergepolicy now also use <mergePolicyFactory> instead of <mergePolicy> ",
            "id": "comment-15143473"
        },
        {
            "date": "2016-02-11T22:19:32+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera - thanks for your review comments on SOLR-5730. The first two of the above three latest master commits for this SOLR-8621 ticket here are based on that. If both those two and the third master commits are reasonable then I will cherry-pick them to branch_5x and branch_5_5 tomorrow/Friday hopefully.\n\nFor the remaining test-related changes I have created SOLR-8674 'transition from solr.tests.mergePolicy to solr.tests.mergePolicyFactory' ticket. So then we are done with SOLR-8621 here I think - what do you think?\n\n(The Solr Reference Guide changes still to be done separately and likely directly in Confluence.) ",
            "id": "comment-15143602"
        },
        {
            "date": "2016-02-11T22:27:01+0000",
            "author": "Shai Erera",
            "content": "Christine Poerschke these look good, so +1 to merge to 5x. I agree that we're done w/ this issue here. We can separately take care of SOLR-8674 and SOLR-8668. I enjoyed this collaboration, thank you very much for such a fun and positive experience! ",
            "id": "comment-15143618"
        },
        {
            "date": "2016-02-12T16:18:52+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b2e83b6788b5b3c9ee6cf13be1cddec7f21014f4 in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b2e83b6 ]\n\nSOLR-8621: factor out protected abstract WrapperMergePolicyFactory.getMergePolicyInstance method\n\nHere in SOLR-8621:\n\n\tUpgradeIndexMergePolicyFactory extends WrapperMergePolicyFactory\n\t(WrapperMergePolicyFactoryTest's) DefaultingWrapperMergePolicyFactory extends WrapperMergePolicyFactory\n\n\n\nElsewhere in SOLR-5730:\n\n\tSortingMergePolicyFactory will extend WrapperMergePolicyFactory\n\n ",
            "id": "comment-15144781"
        },
        {
            "date": "2016-02-12T16:18:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b2e83b6788b5b3c9ee6cf13be1cddec7f21014f4 in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b2e83b6 ]\n\nSOLR-8621: factor out protected abstract WrapperMergePolicyFactory.getMergePolicyInstance method\n\nHere in SOLR-8621:\n\n\tUpgradeIndexMergePolicyFactory extends WrapperMergePolicyFactory\n\t(WrapperMergePolicyFactoryTest's) DefaultingWrapperMergePolicyFactory extends WrapperMergePolicyFactory\n\n\n\nElsewhere in SOLR-5730:\n\n\tSortingMergePolicyFactory will extend WrapperMergePolicyFactory\n\n ",
            "id": "comment-15144782"
        },
        {
            "date": "2016-02-12T16:18:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d76be85a42e58ff906342c1283b3d4608d59df36 in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d76be85 ]\n\nSOLR-8621: add (test-framework) RandomForceMergePolicyFactory for existing (test-framework) RandomForceMergePolicy ",
            "id": "comment-15144784"
        },
        {
            "date": "2016-02-12T16:18:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a267fa729bc62267173760ca5a05e912f7089fa9 in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a267fa7 ]\n\nSOLR-8621: solrconfig.xml in solr/server/solr/configsets and test-files/solr/configsets/bad-mergepolicy now also use <mergePolicyFactory> instead of <mergePolicy> ",
            "id": "comment-15144785"
        },
        {
            "date": "2016-02-12T16:40:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6a9d89309595ff668f851c17af4f3f97af7640c1 in lucene-solr's branch refs/heads/branch_5_5 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6a9d893 ]\n\nSOLR-8621: factor out protected abstract WrapperMergePolicyFactory.getMergePolicyInstance method\n\nHere in SOLR-8621:\n\n\tUpgradeIndexMergePolicyFactory extends WrapperMergePolicyFactory\n\t(WrapperMergePolicyFactoryTest's) DefaultingWrapperMergePolicyFactory extends WrapperMergePolicyFactory\n\n\n\nElsewhere in SOLR-5730:\n\n\tSortingMergePolicyFactory will extend WrapperMergePolicyFactory\n\n ",
            "id": "comment-15144816"
        },
        {
            "date": "2016-02-12T16:40:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6a9d89309595ff668f851c17af4f3f97af7640c1 in lucene-solr's branch refs/heads/branch_5_5 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6a9d893 ]\n\nSOLR-8621: factor out protected abstract WrapperMergePolicyFactory.getMergePolicyInstance method\n\nHere in SOLR-8621:\n\n\tUpgradeIndexMergePolicyFactory extends WrapperMergePolicyFactory\n\t(WrapperMergePolicyFactoryTest's) DefaultingWrapperMergePolicyFactory extends WrapperMergePolicyFactory\n\n\n\nElsewhere in SOLR-5730:\n\n\tSortingMergePolicyFactory will extend WrapperMergePolicyFactory\n\n ",
            "id": "comment-15144817"
        },
        {
            "date": "2016-02-12T16:40:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d49d9dac835ecabd0c5202507cb98d2fdd6d95c5 in lucene-solr's branch refs/heads/branch_5_5 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d49d9da ]\n\nSOLR-8621: add (test-framework) RandomForceMergePolicyFactory for existing (test-framework) RandomForceMergePolicy ",
            "id": "comment-15144819"
        },
        {
            "date": "2016-02-12T16:40:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4c7c1d3c58d2398de4cc651025a32125afe7adbc in lucene-solr's branch refs/heads/branch_5_5 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4c7c1d3 ]\n\nSOLR-8621: solrconfig.xml in solr/server/solr/configsets and test-files/solr/configsets/bad-mergepolicy now also use <mergePolicyFactory> instead of <mergePolicy> ",
            "id": "comment-15144820"
        },
        {
            "date": "2016-02-12T16:45:30+0000",
            "author": "Christine Poerschke",
            "content": "Shai Erera - likewise, thank you for collaborating on this, I also enjoyed it as a fun and positive experience.\n\nCherry-picking to branch_5x and branch_5_5 is complete. Yesterday I also git push origin --delete master-solr-8621 tidied up the working branch.\n ",
            "id": "comment-15144830"
        },
        {
            "date": "2016-02-12T17:01:36+0000",
            "author": "Christine Poerschke",
            "content": "This ticket is complete and the changes on master are present in branch_5x and branch_5_5.\n\nbranch_5_5:\n\n$ git logdog --oneline origin/branch_5_5 | grep \"SOLR-8621\" | cut -b1-80\n* 4c7c1d3 (origin/branch_5_5, branch_5_5) SOLR-8621: solrconfig.xml in solr/serv\n* d49d9da SOLR-8621: add (test-framework) RandomForceMergePolicyFactory for exis\n* 6a9d893 SOLR-8621: factor out protected abstract WrapperMergePolicyFactory.get\n* 3f06f9a SOLR-8621: WrapperMergePolicyFactory logic tweaks\n* 47055d5 SOLR-8621: fix mergePolicyFacory vs. mergePolicyFactory typos in comme\n* 5d10650 SOLR-8621: add IndexSchema arg to MergePolicyFactory constructor\n* 24f4025 SOLR-8621: fix solrconfig.xml under contrib and example\n* 594145f SOLR-8621: more <mergePolicy> vs. <mergePolicyFactory> test coverage\n* 39fd942 SOLR-8621: TestMergePolicyConfig.testTieredMergePolicyConfig now rando\n* b052a8f SOLR-8621: solr/CHANGES.txt 'Upgrading from 5.4' section now also ment\n* 67bf26f SOLR-8621: add missing package-info.java\n* eac5a35 SOLR-8621: deprecate <mergePolicy> in favor of <mergePolicyFactory>\n\n\n\nbranch_5x:\n\n$ git logdog --oneline origin/branch_5x | grep \"SOLR-8621\" | cut -b1-80\n* a267fa7 (origin/branch_5x, branch_5x) SOLR-8621: solrconfig.xml in solr/server\n* d76be85 SOLR-8621: add (test-framework) RandomForceMergePolicyFactory for exis\n* b2e83b6 SOLR-8621: factor out protected abstract WrapperMergePolicyFactory.get\n* bdef478 SOLR-8621: WrapperMergePolicyFactory logic tweaks\n* bbbc90f SOLR-8621: fix mergePolicyFacory vs. mergePolicyFactory typos in comme\n* 5d10650 SOLR-8621: add IndexSchema arg to MergePolicyFactory constructor\n* 24f4025 SOLR-8621: fix solrconfig.xml under contrib and example\n* 594145f SOLR-8621: more <mergePolicy> vs. <mergePolicyFactory> test coverage\n* 39fd942 SOLR-8621: TestMergePolicyConfig.testTieredMergePolicyConfig now rando\n* b052a8f SOLR-8621: solr/CHANGES.txt 'Upgrading from 5.4' section now also ment\n* 67bf26f SOLR-8621: add missing package-info.java\n* eac5a35 SOLR-8621: deprecate <mergePolicy> in favor of <mergePolicyFactory>\n\n\n\nmaster:\n\n$ git logdog --oneline origin/master | grep \"SOLR-8621\" | cut -b1-80\n* 159ace1 (HEAD -> master, origin/master, origin/HEAD) SOLR-8621: solrconfig.xml\n* b2e4798 SOLR-8621: add (test-framework) RandomForceMergePolicyFactory for exis\n* 360051a SOLR-8621: factor out protected abstract WrapperMergePolicyFactory.get\n* | | | 6b6932e SOLR-8621: WrapperMergePolicyFactory logic tweaks\n* | | | 588e3ff SOLR-8621: fix mergePolicyFacory vs. mergePolicyFactory typos in\n* | | | 5d32609 SOLR-8621: add IndexSchema arg to MergePolicyFactory constructor\n* | | | a5acccc SOLR-8621: fix solrconfig.xml under contrib and example\n* | | | b47eeb2 SOLR-8621: more <mergePolicy> vs. <mergePolicyFactory> test cove\n* | | | e9c9003 SOLR-8621: TestMergePolicyConfig.testTieredMergePolicyConfig now\n* | | | 3603760 SOLR-8621: solr/CHANGES.txt 'Upgrading from 5.4' section now als\n* | | | 71f4e01 SOLR-8621: add missing package-info.java\n* | | | fe2cf25 SOLR-8621: Fix SolrIndexConfig.toMap() to use mergePolicyFactory\n* | | | fc5b1ac SOLR-8621: deprecate <mergePolicy> in favor of <mergePolicyFacto\n\n\n\n(I have confirmed that the extra fe2cf250796a98ff1791a504d21acb67f0a1c397 commit on master is present in branch_5x and branch_5_5 as part of their initial 'deprecate <mergePolicy> in favor of <mergePolicyFactory>' commits.) ",
            "id": "comment-15144856"
        },
        {
            "date": "2016-02-12T17:07:09+0000",
            "author": "Christine Poerschke",
            "content": "Err, oops, having done that master/branch_5x/branch_5_5 consistency check above and looked at the fe2cf250796a98ff1791a504d21acb67f0a1c397 commit again, I think we need one more little tweak:\n\n     if (mergePolicyInfo != null) {\n       m.put(\"mergePolicy\", mergePolicyInfo.toMap());\n     } else if (mergePolicyFactoryInfo != null) {\n-      m.put(\"mergePolicy\", mergePolicyFactoryInfo.toMap());\n+      m.put(\"mergePolicyFactory\", mergePolicyFactoryInfo.toMap());\n     }\n\n\nwith likely an accompanying test code change. ",
            "id": "comment-15144869"
        },
        {
            "date": "2016-02-12T19:05:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 77558a649fb4412e42c0a4d1dd0007f0c539b8b2 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=77558a6 ]\n\nSOLR-8621: SolrIndexConfig.toMap() fix to distinguish mergePolicyInfo and mergePolicyFactoryInfo, associated SolrIndexConfigTest and TestConfig tweaks. ",
            "id": "comment-15145089"
        },
        {
            "date": "2016-02-12T19:07:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8488cc7ba2188a0d8212af3b876090541cc9fb0a in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8488cc7 ]\n\nSOLR-8621: SolrIndexConfig.toMap() fix to distinguish mergePolicyInfo and mergePolicyFactoryInfo, associated SolrIndexConfigTest and TestConfig tweaks. ",
            "id": "comment-15145091"
        },
        {
            "date": "2016-02-12T19:08:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8c60352182f721f897b88f6111ff5c28cd66bc65 in lucene-solr's branch refs/heads/branch_5_5 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8c60352 ]\n\nSOLR-8621: SolrIndexConfig.toMap() fix to distinguish mergePolicyInfo and mergePolicyFactoryInfo, associated SolrIndexConfigTest and TestConfig tweaks. ",
            "id": "comment-15145096"
        },
        {
            "date": "2016-02-12T19:10:20+0000",
            "author": "Christine Poerschke",
            "content": "77558a649fb4412e42c0a4d1dd0007f0c539b8b2 is master commit for this. ",
            "id": "comment-15145102"
        },
        {
            "date": "2016-02-18T17:40:44+0000",
            "author": "Hoss Man",
            "content": "Christine Poerschke & Shai Erera ... can you guys please spot check the edits i made to the ref guide for this issue...\n\nhttps://cwiki.apache.org/confluence/pages/diffpagesbyversion.action?pageId=32604214&selectedPageVersions=31&selectedPageVersions=32 ",
            "id": "comment-15152699"
        },
        {
            "date": "2016-02-18T21:07:19+0000",
            "author": "Jack Krupansky",
            "content": "Shouldn't the index config reference page still list <mergePolicy> but with a \"Deprecated\" notice? Ditto for <mergeFactor>.\n\nThe Upgrading Solr ref page does give an example of how to migrate from MP to MPF (and for MF) - it would be nice to link to that from a deprecated notice on the index config page.\n\nSee:\nhttps://cwiki.apache.org/confluence/display/solr/IndexConfig+in+SolrConfig\nhttps://cwiki.apache.org/confluence/display/solr/Upgrading+Solr ",
            "id": "comment-15153085"
        },
        {
            "date": "2016-02-18T21:35:04+0000",
            "author": "Hoss Man",
            "content": "Shouldn't the index config reference page still list <mergePolicy> but with a \"Deprecated\" notice?\n\nNo.\n\nThe ref guide is not a living document, there are specific versions for each release that show the current way of doing things (not the old way).  When users lookup how to do something we don't want to confuse them by telling them how to do something that is no longer supported.  If you want to know how to edit older configs, look at older versions of the ref guide. ",
            "id": "comment-15153148"
        },
        {
            "date": "2016-02-19T13:48:19+0000",
            "author": "Christine Poerschke",
            "content": "... spot check the edits i made to the ref guide ...\n\nhttps://cwiki.apache.org/confluence/pages/diffpagesbyversion.action?pageId=32604214&selectedPageVersions=31&selectedPageVersions=32 edit looks good to me.\n\nhttps://cwiki.apache.org/confluence/pages/diffpagesbyversion.action?pageId=32604214&selectedPageVersions=35&selectedPageVersions=37 is the 'custom merge policies' paragraph i added - what do you think? ",
            "id": "comment-15154225"
        },
        {
            "date": "2016-02-19T15:56:09+0000",
            "author": "Shai Erera",
            "content": "I am not sure how to comment on those pages, so I'll comment here:\n\n<mergePolicyFactory class=\"org.apache.lucene.index.TieredMergePolicy\">\n\nShouldn't the class be TieredMergePolicyFactory?\n\nThis process can continue indefinitely\n\nWell, not indefinitely . More like \"The process can continue until there are no more mergeFactor segments to merge of same size\".\n\nand the maxMergeAtOnce setting determines how many segments should be included in the merge\n\nPerhaps \"... should be included in each merge\"? Cause if segmentsPerTier is 30 and maxMergeAtOnce is 10, there will be 3 merges.\n\nIt also can also result\n\nOne extra 'also' here.\n\nclass=\"MyCustomMergePolicyFactory\"\n\nShould we write class=\"full.package.MyCustomMergePolicyFactory\"? It's not critical but I want to emphasize that one cannot just give the class name here, but needs to FQCN.\n\norg.apache.solr.index.TieredMergePolicyFactory\n\nIf solr.TieredMergePolicyFactory works too, let's write that? That way, if the factory changes packages, we won't need to update the guide. ",
            "id": "comment-15154388"
        },
        {
            "date": "2016-02-19T16:07:45+0000",
            "author": "Christine Poerschke",
            "content": "Thanks Shai Erera!\n\nThis is the latest end-to-end combined edit: https://cwiki.apache.org/confluence/pages/diffpagesbyversion.action?pageId=32604214&selectedPageVersions=31&selectedPageVersions=38\n\nLooks like mergeScheduler and mergedSegmentWarmer use org.apache.lucene.index. - so perhaps for consistency mergePolicyFactory should maintain that style even if solr.TieredMergePolicyFactory were to also work (haven't tried it). ",
            "id": "comment-15154431"
        },
        {
            "date": "2016-02-21T06:15:34+0000",
            "author": "Shai Erera",
            "content": "Looks good Christine Poerschke! And yes, let's be consistent and keep the full package name, as the other examples. ",
            "id": "comment-15155909"
        },
        {
            "date": "2016-07-12T13:06:30+0000",
            "author": "Henrik",
            "content": "Hi Christine Poerschke and others,\n\nI couldn't find an upgrade document for mergeFactor, so I'll just ask here.  This is my current config:\n\n<indexConfig>\n        <mergeFactor>6</mergeFactor>\n        <maxIndexingThreads>8</maxIndexingThreads>\n</indexConfig>\n\nIf want the exact same behaviour as I currently have, how should it look in Solr6?  I can't find mention of maxIndexingThreads in https://cwiki.apache.org/confluence/display/solr/IndexConfig+in+SolrConfig and I haven't figured out if the \"old\" policy is TieredMergePolicyFactory or \nLogMergePolicy.  \n\nThanks. ",
            "id": "comment-15372847"
        },
        {
            "date": "2016-07-12T13:08:06+0000",
            "author": "Henrik",
            "content": "I also have this, by the way:\n\n    <mergeScheduler class=\"org.apache.lucene.index.ConcurrentMergeScheduler\">\n        <int name=\"maxMergeCount\">5</int>\n    </mergeScheduler>\n ",
            "id": "comment-15372851"
        },
        {
            "date": "2016-07-12T21:05:16+0000",
            "author": "Henrik",
            "content": "Never mind, I found the answer in https://archive.apache.org/dist/lucene/solr/ref-guide/apache-solr-ref-guide-5.4.pdf in \"Merging Index Segments\". ",
            "id": "comment-15373691"
        },
        {
            "date": "2017-06-02T14:12:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c64f9d64b4edc8c3761368befc394e879b2284ff in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c64f9d6 ]\n\nSOLR-8668: In solrconfig.xml remove <mergePolicy> (and related <mergeFactor> and <maxMergeDocs>)\nsupport in favor of the <mergePolicyFactory> element introduced by SOLR-8621 in Solr 5.5.0.\n(Christine Poerschke, hossman) ",
            "id": "comment-16034751"
        }
    ]
}