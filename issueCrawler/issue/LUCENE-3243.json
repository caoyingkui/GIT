{
    "id": "LUCENE-3243",
    "title": "FastVectorHighlighter - add position offset to FieldPhraseList.WeightedPhraseInfo.Toffs",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/highlighter"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "3.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Needed to return position offsets along with highlighted snippets when using FVH for highlighting. \n\nUsing the (LUCENE-3141) patch I was able to get the fragInfo for a particular Phrase search. Currently the Toffs(Term offsets) class only stores the start and end offset.\n\nTo get the position offset, I added the position offset information in Toffs and FieldPhraseList class.",
    "attachments": {
        "LUCENE-3243.patch.diff": "https://issues.apache.org/jira/secure/attachment/12483848/LUCENE-3243.patch.diff",
        "CustomSolrHighlighter.java": "https://issues.apache.org/jira/secure/attachment/12483963/CustomSolrHighlighter.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-27T06:07:41+0000",
            "content": "Thank you for the proposal and patch! I don't understand:\n\n\n\tWhat is the position offset? Isn't it just a position?\n\tWhy is the position offset String?\n\tWhy do you need setPositionOffset()? I don't understand the implementation of the method... it appends the argument position to the current position.\n\n ",
            "author": "Koji Sekiguchi",
            "id": "comment-13055347"
        },
        {
            "date": "2011-06-27T15:54:01+0000",
            "content": "Hi Koji,\n\nSorry for not elaborating more on our requirements and our implementation. Basically for every search result we needed the position(word offset)  information of the search hits in the document. On the search result page, this position offsets information was embedded in the search result links. When the user clicked on a search link, at the target page using javascript and the position offset information we would highlight the search terms.\n\nTo return the position offset information along with the highlighted snippet we created a CustomSolrHighlihter(attached). Depending on the type of query the custom highlighter returns the position offsets information. \n\n\n\tNon-phrase query: Using FieldTermStack we return the term position offset for the terms in the query.\n\tPhrase query: Using the WeightedFragInfo.fragInfos we return the term position offset for the terms in the query.\n\n\n\nBut currently the Toffs(Term offsets) class only stores the start and end offset and so we updated it so that it would store the position information as well.\n\nAnswers to your questions:\n\n\n\tWhat is the position offset? Isn't it just a position?\nYes, it is just the position.\n\n\n\n\n\tWhy is the position offset String?\nSince for phrase queries(e.g. \"divine knowledge\") the position-gap between terms == 1, WeightedPhraseInfo would only store the startOffset(i.e 12) of the first term of the phrase terms and the endOffset(i.e. 29) of the phrase terms.\n\n \n\t\t\n\t\t[startOffset, endOffset]\n\"divine knowledge\": [(12,29)]\n\n\nBut as we needed position information(i.e. 5,6) of all the terms it required storing the position of the terms of a phrase query as a String. \n\n\t[startOffset, endOffset, positions]\n\"divine knowledge\": [(12,29, [5,6])]\n\n\n\n\tWhy do you need setPositionOffset()?\nsetPositionOffset() is used to store the positions of consecutive terms of a phrase query. For every terms of the phrase query it just appends the argument position to the current position(i.e. [5,6]). \n\n\n\nExample output:\n\n\n<lst name=\"/book/title/pg15\">\n   <arr name=\"para\">\n       <str>un of <strong class=\"highlight\">divine knowledge</strong> and understanding, and become the recipients of a grace that is infinite and </str>\n   </arr>\n   <str name=\"positionOffsets\">80,81,118,119</str>\n</lst>\n\n\n\n\n\nP.S. In order to able to override doHighlightingByFastVectorHighlighter() method in CustomSolrHighlighter we had to change the access modifier for alternateField() and getSolrFragmentsBuilder() to protected. ",
            "author": "Jahangir Anwari",
            "id": "comment-13055610"
        }
    ]
}