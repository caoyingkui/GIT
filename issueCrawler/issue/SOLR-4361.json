{
    "id": "SOLR-4361",
    "title": "DIH request parameters with dots throws UnsupportedOperationException",
    "details": {
        "affect_versions": "4.1",
        "status": "Reopened",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "If the user puts placeholders for request parameters and these contain dots, DIH fails.  Current workaround is to either use no dots or use the 4.0 DIH jar.",
    "attachments": {
        "SOLR-4361.patch": "https://issues.apache.org/jira/secure/attachment/12572849/SOLR-4361.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "James Dyer",
            "id": "comment-13562900",
            "date": "2013-01-25T18:42:38+0000",
            "content": "Example from user list:\n\nI've just tried to upgrade from 4.0 to 4.1 and I have the following\nexception when reindexing my data:\n\nCaused by: java.lang.UnsupportedOperationException\n at java.util.Collections$UnmodifiableMap.put(Collections.java:1283)\nat\norg.apache.solr.handler.dataimport.VariableResolver.currentLevelMap(VariableResolver.java:204)\n at\norg.apache.solr.handler.dataimport.VariableResolver.resolve(VariableResolver.java:94)\nat\norg.apache.solr.handler.dataimport.VariableResolver.replaceTokens(VariableResolver.java:144)\n at\norg.apache.solr.handler.dataimport.ContextImpl.replaceTokens(ContextImpl.java:254)\nat\norg.apache.solr.handler.dataimport.JdbcDataSource.resolveVariables(JdbcDataSource.java:203)\n at\norg.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(JdbcDataSource.java:101)\nat\norg.apache.solr.handler.dataimport.JdbcDataSource.init(JdbcDataSource.java:62)\n at\norg.apache.solr.handler.dataimport.DataImporter.getDataSourceInstance(DataImporter.java:394)\n\nIt seems to be related to the use of placeholders in data-config.xml:\n\n<dataConfig>\n    <dataSource type=\"JdbcDataSource\"\n                name=\"bceDS\"\n                driver=\"${dataimporter.request.solr.bceDS.driver}\"\n                url=\"${dataimporter.request.solr.bceDS.url}\"\n                user=\"${dataimporter.request.solr.bceDS.user}\"\n                password=\"${dataimporter.request.solr.bceDS.password}\"\n                batchSize=\"-1\"/>\n\nsolrconfig.xml:\n\n<requestHandler name=\"/dataimport\"\nclass=\"org.apache.solr.handler.dataimport.DataImportHandler\">\n <lst name=\"defaults\">\n<str name=\"config\">data-config.xml</str>\n\n<!-- dataSource parameters for data-config.xml -->\n<str name=\"solr.bceDS.driver\">...</str>\n <str name=\"solr.bceDS.url\">...</str>\n<str name=\"solr.bceDS.user\">...</str>\n <str name=\"solr.bceDS.password\">...</str>\n</lst>\n</requestHandler> "
        },
        {
            "author": "James Dyer",
            "id": "comment-13562947",
            "date": "2013-01-25T19:37:40+0000",
            "content": "Also, this workaround was mentioned.  This should be protected with a unit test so it doesn't get broken, also added to the wiki if not currently documented:\n\nI do something similar, but without the placeholders in db-data-config.xml. You can define the entire datasource in solrconfig.xml, then leave out that element entirely in db-data-config.xml. It seems really odd, but that is how the code works.\n\nThis is working for me in 4.1, so it might be a workaround for you.\n\nIt looks like this:\n\n  <requestHandler name=\"/dataimport\" class=\"org.apache.solr.handler.dataimport.DataImportHandler\">\n    <lst name=\"defaults\">\n      <str name=\"config\">db-data-config.xml</str>\n      <lst name=\"datasource\">\n        <str name=\"defType\">JdbcDataSource</str>\n        <str name=\"driver\">com.mysql.jdbc.Driver</str>\n        <str name=\"url\">jdbc:mysql://${textbooks.dbhost:nohost}/xxxx</str>\n        <str name=\"user\">${textbooks.dbuser:yyyyy}</str>\n        <str name=\"password\">${textbooks.dbpass:zzzzzz}</str>\n\t<str name=\"batchSize\">-1</str>\n\t<str name=\"readOnly\">true</str>\n\t<str name=\"onError\">skip</str>\n\t<str name=\"netTimeoutForStreamingResults\">600</str>\n\t<str name=\"zeroDateTimeBehavior\">convertToNull</str>\n      </lst>\n    </lst>\n  </requestHandler> "
        },
        {
            "author": "James Dyer",
            "id": "comment-13597649",
            "date": "2013-03-08T22:43:25+0000",
            "content": "Here is a fix and a unit test.  All DIH tests pass with this.  I will commit in a few days. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13599037",
            "date": "2013-03-11T17:40:37+0000",
            "content": "[trunk commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1455245\n\nSOLR-4361: DIH to allow handler parameters with dots in the name "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13599043",
            "date": "2013-03-11T17:48:32+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1455247\n\nSOLR-4361: DIH to allow handler parameters with dots in the name "
        },
        {
            "author": "Chris Eldredge",
            "id": "comment-13609404",
            "date": "2013-03-21T20:12:58+0000",
            "content": "Request to reopen this issue. Testing on lucene_solr_4_2 r1459428, TestURLDataSource is still broken when changing \"baseurl\" to \"base.url\" and \"${dataimporter.request.baseurl}\" to \"${dataimporter.request.base.url}\". "
        },
        {
            "author": "James Dyer",
            "id": "comment-13609432",
            "date": "2013-03-21T20:30:24+0000",
            "content": "Chris,\n\nDo you have a real-world problem that is still broken, or is this just a problem with modifying TestURLDataSource?  This issue is tested in TestVariableResolverEndToEnd.  The solrconfig.xml file contains a default parameter \"dots.in.hsqldb.driver\" with the driver name.  The test subsequently references <dataSource ... driver=\"${dataimporter.request.dots.in.hsqldb.driver}\" ... />.  Prior to fixing VariableResolver, this test would fail because the driver name would not resolve.  With this fix, the test passes.\n\nThe difference is that the \"dataimporter.request\" namespaces are (in reality) added by DocBuilder#getVariableResolver by creating a map for the \"dataimporter\" namespace and then a child map for the \"request\" namespace.  With the fix here, VariableResolver is still requiring each node in the Variable tree to be added individually, rather than taking the shortcut you used in your modified version of TestURLDataSource.  However, it is more forgiving with variable names containing dots:  if it cannot walk the tree to find the rightmost name, then it goes as far as it can and then assumes the rest is a name with embedded dots in it. "
        },
        {
            "author": "Chris Eldredge",
            "id": "comment-13609493",
            "date": "2013-03-21T21:16:37+0000",
            "content": "Yes, upgrading from 4.0 to 4.2 breaks DIH for me. I'm using the URLDataSource with variables in the baseUrl, such as dataimport.request.server.prefix. The properties are all replaced with empty strings whereas in 4.0 they're correctly substituted. I'll test using variables that don't contain dots to make sure it's related to this issue. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13609511",
            "date": "2013-03-21T21:30:05+0000",
            "content": "If this is still a problem for you, by all means, reopen.  Please include the line in your data-config.xml that has the variable that doesn't resolve and also the url you're using (or section from solrconfig.xml that has the variable in \"defaults\").  Based on TestVariableResolverEndToEnd, which does something very similar to what you describe, I would not expect this to still fail.  "
        },
        {
            "author": "Chris Eldredge",
            "id": "comment-13614464",
            "date": "2013-03-26T19:42:33+0000",
            "content": "I don't have permission to reopen the issue, but I just confirmed that URLDataSource does not correctly replace variables that contain dots in its baseUrl. However, it substitutes an empty string instead of throwing UnsupportedOperationException.\n\nRemoving the dots still works around the issue.\n\nI tested against https://svn.apache.org/repos/asf/lucene/dev/branches/lucene_solr_4_2@1460810 "
        },
        {
            "author": "James Dyer",
            "id": "comment-13614469",
            "date": "2013-03-26T19:45:55+0000",
            "content": "re-open to investigate the issue reported by Chris Eldredge.  \n\nChris, Can you provide (at least) the line in your data-config.xml that has the variable that doesn't resolve and also the url you're using (or section from solrconfig.xml that has the variable in \"defaults\"). "
        },
        {
            "author": "Chris Eldredge",
            "id": "comment-13614485",
            "date": "2013-03-26T19:56:39+0000",
            "content": "Snippet of our configuration that stopped working in 4.2:\n\nsolrconfig.xml\n<requestHandler name=\"/dataimport\" class=\"org.apache.solr.handler.dataimport.DataImportHandler\">\n  <lst name=\"defaults\">\n    <str name=\"server.prefix\">${server.prefix:}</str>\n  </lst>\n</requestHandler>\n\n\n\ndata-config.xml\n<dataSource type=\"URLDataSource\" baseUrl=\"http://${dataimporter.request.server.prefix}api.fool.com\" />\n\n\n\nChanging server.prefix to server-prefix makes it work again. "
        },
        {
            "author": "Chris Eldredge",
            "id": "comment-13614545",
            "date": "2013-03-26T21:01:25+0000",
            "content": "By the way, in case it isn't clear, we define server.prefix as a system property and it defaults to \"\" in production, but it would be something like \"test.\" in pre-production to produce a complete baseUrl like http://test.api.fool.com "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717236",
            "date": "2013-07-23T18:47:34+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971042",
            "date": "2014-04-16T12:56:58+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}