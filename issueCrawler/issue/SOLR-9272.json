{
    "id": "SOLR-9272",
    "title": "Auto resolve zkHost for bin/solr zk for running Solr",
    "details": {
        "components": [
            "scripts and tools"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.2",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Spinoff from SOLR-9194:\n\nWe can skip requiring -z for bin/solr zk for a Solr that is already running. We can optionally accept the -p parameter instead, and with that use StatusTool to fetch the cloud/ZooKeeper property from there. It's easier to remember solr port than zk string.\n\nExample:\n\nbin/solr start -c -p 9090\nbin/solr zk ls / -p 9090",
    "attachments": {
        "SOLR-9272.patch": "https://issues.apache.org/jira/secure/attachment/12879620/SOLR-9272.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-14T22:40:54+0000",
            "author": "Amrit Sarkar",
            "content": "Jan H\u00f8ydahl,\n\nStatusTool implements abstract method runImpl of SolrCli.ToolBase of return type void. In order to fetch cloud/Zookeeper we have to change the base abstract method return type and corresponding all its classes which implements it.\n\nStatusTool and all other classes which extends ToolBase, echo the output and returns void. I would like to drive this to conclusion; hence seeking suggestion whether it is a good idea to change base abstract method's return type or it is too much change for too little convenience. ",
            "id": "comment-16088228"
        },
        {
            "date": "2017-07-18T09:08:42+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I think you can simply instantiate the tool in-line as being done in RunExampleTool.checkPortConflict:\nhttps://github.com/apache/lucene-solr/blob/5f28780e5db55172d04c0d4bb3d5a6b96c698c1c/solr/core/src/java/org/apache/solr/util/SolrCLI.java#L3016 ",
            "id": "comment-16091323"
        },
        {
            "date": "2017-07-31T11:50:17+0000",
            "author": "Amrit Sarkar",
            "content": "Correct, makes sense. I was trying to invoke StatusTool to get ZK_HOST string and then make the request to ZK for the various operations.\n\nAttached first draft patch. There is some weird ??? getting inserted into solr.sh, I don't know why. I will try to edit in vim probably and not in IntelliJ IDE. I need to modify description for \"zk\" too in the solr(.sh/.cmd), write the tests and make the similar changes in solr.cmd. Feedback will be much appreciated. ",
            "id": "comment-16107183"
        },
        {
            "date": "2017-07-31T15:25:36+0000",
            "author": "Amrit Sarkar",
            "content": "Though I am able to get out of weird ??.. in solr.sh, it is reading it as a new insertion though the characters are unchanged. Not sure what to do with it.\n\nUpdated patch ::\n\n\tmodified:   solr/bin/solr\n\tmodified:   solr/bin/solr.cmd\n\tmodified:   solr/core/src/java/org/apache/solr/util/SolrCLI.java\n\n\n\nJan H\u00f8ydahl, I don't see tests for the \"zk\" operation for SolrCLI. Show we write those or basic testing on our own will be enough? ",
            "id": "comment-16107428"
        },
        {
            "date": "2017-07-31T15:39:47+0000",
            "author": "Erick Erickson",
            "content": "Amrit Sarkar What about SolrCLIZkUtilsTest.java? ",
            "id": "comment-16107451"
        },
        {
            "date": "2017-07-31T15:57:13+0000",
            "author": "Amrit Sarkar",
            "content": "Erick Erickson Oh yes, sorry. Will write / update the tests and upload soon. ",
            "id": "comment-16107477"
        },
        {
            "date": "2017-08-01T21:04:23+0000",
            "author": "Amrit Sarkar",
            "content": "Completed patch with tests with modification in retrieving ZK_HOST from passed PORT in SolrCLI::getZkHost(..), BUT ran into ::\n\n\n [junit4]   2> 21567 INFO  (TEST-SolrCLIZkUtilsTest.testMv-seed#[1EF13B9630905526]) [    ] o.a.h.i.e.RetryExec I/O exception (org.apache.http.conn.UnsupportedSchemeException) caught when processing request to {}->http://localhost:63840: http protocol is not supported\n   [junit4]   2> 21569 INFO  (TEST-SolrCLIZkUtilsTest.testMv-seed#[1EF13B9630905526]) [    ] o.a.h.i.e.RetryExec Retrying request to {}->http://localhost:63840\n   [junit4]   2> 21569 INFO  (TEST-SolrCLIZkUtilsTest.testMv-seed#[1EF13B9630905526]) [    ] o.a.h.i.e.RetryExec I/O exception (org.apache.http.conn.UnsupportedSchemeException) caught when processing request to {}->http://localhost:63840: http protocol is not supported\n   [junit4]   2> 21570 INFO  (TEST-SolrCLIZkUtilsTest.testMv-seed#[1EF13B9630905526]) [    ] o.a.h.i.e.RetryExec Retrying request to {}->http://localhost:63840\n   [junit4]   2> 21570 INFO  (TEST-SolrCLIZkUtilsTest.testMv-seed#[1EF13B9630905526]) [    ] o.a.h.i.e.RetryExec I/O exception (org.apache.http.conn.UnsupportedSchemeException) caught when processing request to {}->http://localhost:63840: http protocol is not supported\n   [junit4]   2> 21570 INFO  (TEST-SolrCLIZkUtilsTest.testMv-seed#[1EF13B9630905526]) [    ] o.a.h.i.e.RetryExec Retrying request to {}->http://localhost:63840\n   [junit4]   2> \n   [junit4]   2> ERROR: http protocol is not supported\n   [junit4]   2> \n   [junit4]   2> 21575 INFO  (TEST-SolrCLIZkUtilsTest.testMv-seed#[1EF13B9630905526]) [    ] o.a.s.SolrTestCaseJ4 ###Ending testMv\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=SolrCLIZkUtilsTest -Dtests.method=testMv -Dtests.seed=1EF13B9630905526 -Dtests.slow=true -Dtests.locale=es-CR -Dtests.timezone=America/Edmonton -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] FAILURE 0.46s | SolrCLIZkUtilsTest.testMv <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: Move should have succeeded. expected:<0> but was:<1>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([1EF13B9630905526:1353C648AA6C3F0B]:0)\n   [junit4]    > \tat org.apache.solr.cloud.SolrCLIZkUtilsTest.testMv(SolrCLIZkUtilsTest.java:466)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n\n\nLooking into how to fix it. Patch uploaded. ",
            "id": "comment-16109770"
        },
        {
            "date": "2017-09-02T12:48:06+0000",
            "author": "Amrit Sarkar",
            "content": "Took me a while to rewrite the patch as there were some changes introduced in scripts since I worked into this.\n\nThe new patch is uploaded. Review and feedback will be much appreciated.\n\n\tmodified:   solr/bin/solr\n\tmodified:   solr/bin/solr.cmd\n\tmodified:   solr/core/src/java/org/apache/solr/util/SolrCLI.java\n\tmodified:   solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest.java\n\n\n\nErick Erickson I have a query regarding SolrCLIZkUtilsTest. It fails miserably when -Dtests.iters or -Dtests.dups are passed, any specific reason?\n\nBeasts are still failing with http protocol not supported error, which I believe is any http jar version / permission issue, not necessarily solr code problem. Still need to look how to fix it. I have tested thoroughly on my system, it is working fine. \nConsidering SolrCLIZkUtilsTest.java only checks the \"zk\" functionalities solr script, something's off with version / permission maybe. Looking into how to fix it, advices will be highly appreciated. ",
            "id": "comment-16151499"
        },
        {
            "date": "2017-09-02T14:29:05+0000",
            "author": "Amrit Sarkar",
            "content": "http protocol not supported; its an http scheme issue. I have verified the http protocol ... error happening at httpclient.execute(...)\n\n\n@SuppressWarnings({\"unchecked\"})\n  public static Map<String,Object> getJson(HttpClient httpClient, String getUrl) throws Exception {\n    try {\n      // ensure we're requesting JSON back from Solr\n      HttpGet httpGet = new HttpGet(new URIBuilder(getUrl).setParameter(CommonParams.WT, CommonParams.JSON).build());\n\n      // make the request and get back a parsed JSON object\n      Map<String, Object> json = httpClient.execute(httpGet, new SolrResponseHandler(), HttpClientUtil.createNewHttpClientRequestContext());\n\n\n\nURIBuilder is creating the right-some URI to feed it to next HttpGet and eventually HttpClient. I read about the Scheme and SchemeRegistry: https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/conn/scheme/Scheme.html.\n\nPlease note: the patch is fine;  \"zk ....\" is working as expected. Its only SolrCLIZkUtilsTest while is failing when beasted. ",
            "id": "comment-16151510"
        },
        {
            "date": "2017-09-03T09:42:51+0000",
            "author": "Amrit Sarkar",
            "content": "Got to the crux of the problem ::\n\nSolrCLIZkUtilsTest extends SolrCloudTestCase, SolrCloudTestCase extends SolrTestCaseJ. In SolrTestCaseJ ::\n\n\n  private static SSLTestConfig buildSSLConfig() {\n\n    SSLRandomizer sslRandomizer =\n      SSLRandomizer.getSSLRandomizerForClass(RandomizedContext.current().getTargetClass());\n    \n    if (Constants.MAC_OS_X) {\n      // see SOLR-9039\n      // If a solution is found to remove this, please make sure to also update\n      // TestMiniSolrCloudClusterSSL.testSslAndClientAuth as well.\n      sslRandomizer = new SSLRandomizer(sslRandomizer.ssl, 0.0D, (sslRandomizer.debug + \" w/ MAC_OS_X supressed clientAuth\"));\n    }\n\n    SSLTestConfig result = sslRandomizer.createSSLTestConfig();\n    log.info(\"Randomized ssl ({}) and clientAuth ({}) via: {}\",\n             result.isSSLMode(), result.isClientAuthMode(), sslRandomizer.debug);\n    return result;\n  }\n\n\n\nWhether the current cluster will be SSL configured (HTTPS) or conventional HTTP, is RANDOMIZED. Either https or http will be supported, not both in any case.\n\nNow, in our code, specifically say, we look for zk host corresponding to :: http://localhost:[solr_port]/solr. What should be done? We should check whether SSL is configured or not and according to that use the scheme e.g.\n\nif (useSSL == true ) then solrURL = https://localhost:.......\nelse solrURL = http://localhost:........\n\nA little guidance here will be deeply appreciated. ",
            "id": "comment-16151758"
        },
        {
            "date": "2017-11-07T16:37:52+0000",
            "author": "Amrit Sarkar",
            "content": "Looking for any suggestions. Not comforable saying this, but we can ignore tests for this utility, as I can see hardcoded \"http://localhost:.....\" for default Solr url and not being tested anywhere. Pretty sure if tested under SolrTestCaseJ, it will randomise SSL config.\n\nLet me know Erick Erickson Jan H\u00f8ydahl ",
            "id": "comment-16242335"
        },
        {
            "date": "2018-01-10T10:14:36+0000",
            "author": "Amrit Sarkar",
            "content": "Jan H\u00f8ydahl,\n\nI have fixed the SSL issue by smartly retrying whenever HTTP schema fails and SSL is configured. Attached updated patch. Requesting feedback and comments. ",
            "id": "comment-16319996"
        },
        {
            "date": "2018-01-16T00:04:49+0000",
            "author": "Jason Gerlowski",
            "content": "Sorry to jump on so late here guys; only caught this Jira recently.\n\nBased on my understanding (which may be wrong), the -p option can only be used when Solr is running on that box. (But the alternative -z option can be used regardless of where the script is being run).\n\nThis limitation of -p is probably worth mentioning in the help-text for that option, just so it's documented and avoids confusing users.\n\n(I suspect a bunch of the bin/solr commands have this same pitfall and don't document it, now that I think about it.\u00a0 But fixing those up would be work for a different JIRA...) ",
            "id": "comment-16326645"
        },
        {
            "date": "2018-01-17T12:54:16+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Nice work. Sorry for the long silence.\n\n\tYou have a few System.out.println\u00a0debug prints still in the patch\n\tHTTP->HTTPS workaround I guess is acceptable if not the most elegant \n\n\n\nPerhaps the tool can assume port 8983 if neither -z or -p is given? Then bin/solr zk ls / would work if solr is running locally on default port. Most other operations such as start, stop etc will attempt to work with port 8983 if nothing else specified, so it would be nice if we did the same here? ",
            "id": "comment-16328709"
        },
        {
            "date": "2018-01-17T13:00:41+0000",
            "author": "Amrit Sarkar",
            "content": "Jan H\u00f8ydahl,\n\nThank you for the feedback, and yes not elegant  Sorry about the debug lines, by bad. I like default \"-p 8983\", when both -z and -p are not specified, I will improve and clean the current patch, thank you. ",
            "id": "comment-16328725"
        },
        {
            "date": "2018-01-17T20:17:02+0000",
            "author": "Amrit Sarkar",
            "content": "Patch uploaded. Though I am not able to test the commands on windows machine, solr.cmd, but I followed the notions. ",
            "id": "comment-16329385"
        },
        {
            "date": "2018-02-16T21:12:29+0000",
            "author": "Amrit Sarkar",
            "content": "Jan H\u00f8ydahl, eagerly waiting for your feedback and review, thanks. ",
            "id": "comment-16367885"
        },
        {
            "date": "2018-03-16T21:30:48+0000",
            "author": "Amrit Sarkar",
            "content": "Jan H\u00f8ydahl, eagerly waiting for your feedback and review, thanks. ",
            "id": "comment-16402566"
        },
        {
            "date": "2018-04-12T18:24:26+0000",
            "author": "Amrit Sarkar",
            "content": "Jan H\u00f8ydahl waiting for your feedback. ",
            "id": "comment-16436098"
        },
        {
            "date": "2018-04-17T11:53:50+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "So sorry for not answering your gentle requests before, thanks for nudging! I'll give the latest patch a new look soon! ",
            "id": "comment-16440781"
        },
        {
            "date": "2018-04-17T17:08:19+0000",
            "author": "Amrit Sarkar",
            "content": "Thank you Jan H\u00f8ydahl. ",
            "id": "comment-16441191"
        },
        {
            "date": "2018-04-20T14:33:17+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I tested the feature and found a few flaws that I have included in a new patch (attached):\n\n\tDefault port functionality was buggy. Now defaults to 8983\n\tImproved error output if getZkhost()\u00a0throws exception.\n\tIf HttpHostConnectException during talking to Solr, we now also print tool usage and a hint to specify -p or -z (applies for all tools using this method)\n\tModified RefGuide page\u00a0solr-control-script-reference.adoc\n\tPasses precommit\n\tAdded CHANGES entry\n\n\n\nThink we are getting there now... ",
            "id": "comment-16445809"
        },
        {
            "date": "2018-04-20T16:50:51+0000",
            "author": "Amrit Sarkar",
            "content": "Thanks Jan H\u00f8ydahl,\n\nDefault port functionality was buggy. Now defaults to 8983\nOh my bad, I thought I checked / tested properly and made sure all bases are covered, I will look through the current patch and understand where it lacked. ",
            "id": "comment-16446018"
        },
        {
            "date": "2018-04-24T16:15:29+0000",
            "author": "Jason Gerlowski",
            "content": "Just wanted to toss a reminder on here about the fledgling test suite we now have for the bin/solr scripts.  You can run it on Linux via cd solr && bin-test/test.  Test coverage is very sparse, but the suite can save you some manual testing burden (esp. if you add test cases for things you run into). ",
            "id": "comment-16450143"
        },
        {
            "date": "2018-05-29T21:17:12+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Amrit Sarkar have you been able to take my latest patch for a spin? ",
            "id": "comment-16494286"
        },
        {
            "date": "2018-05-29T21:35:51+0000",
            "author": "Amrit Sarkar",
            "content": "Hi Jan H\u00f8ydahl, thanks for checking in. I did test it thoroughly and it is working just fine. My bad I didn't post the feedback prior and the latest patch applies on solr module. +1 from my side. Hope the feature gets in now  ",
            "id": "comment-16494310"
        },
        {
            "date": "2018-06-01T01:57:36+0000",
            "author": "Steve Rowe",
            "content": "\nWhether the current cluster will be SSL configured (HTTPS) or conventional HTTP, is RANDOMIZED. Either https or http will be supported, not both in any case.\nNow, in our code, specifically say, we look for zk host corresponding to :: http://localhost:[solr_port]/solr. What should be done?\n[...]\nI have fixed the SSL issue by smartly retrying whenever HTTP schema fails and SSL is configured. Attached updated patch. Requesting feedback and comments.\n\nRunExampleTool passes the -urlScheme param (bin/solr & bin\\solr.cmd pass SOLR_URL_SCHEME env. var.'s value); couldn't the zk sub-commands do the same?  Then testing could add a param for this, and you wouldn't have to do the \"smart retry\" thing. ",
            "id": "comment-16497468"
        },
        {
            "date": "2018-08-28T19:11:36+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "It's not much left for this to go in. Have not checked your proposal Steve about looking at SOLR_URL_SCHEME but it sounds like a very good idea. Would you like to explore it as a last improvement Amrit Sarkar? ",
            "id": "comment-16595463"
        },
        {
            "date": "2018-08-30T23:50:04+0000",
            "author": "Amrit Sarkar",
            "content": "Thanks Jan, Steve. The current patch not getting cleanly applied to master branch anymore; it would take me some time to write this cleanly, will have a go at it. ",
            "id": "comment-16598049"
        }
    ]
}