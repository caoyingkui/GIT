{
    "id": "SOLR-6024",
    "title": "StatsComponent does not work for docValues enabled multiValued fields",
    "details": {
        "affect_versions": "4.8",
        "status": "Closed",
        "fix_versions": [
            "4.10.1",
            "5.0",
            "6.0"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Harish Agarwal reported this in solr user mailing list : http://search-lucene.com/m/QTPaoTJXV1\n\nIt is east to re-produce with default example solr setup. Following types are added example schema.xml. And exampledocs are indexed.\n\n\n <field name=\"cat\" type=\"string\" indexed=\"true\" stored=\"true\" docValues=\"true\" multiValued=\"true\"/>\n  <field name=\"popularity\" type=\"int\" indexed=\"true\" stored=\"false\" docValues=\"true\" multiValued=\"true\"/>\n\n\n\nWhen docValues=\"true\" and multiValued=\"true\" are used at the same time, StatsComponent throws :\n\n\nERROR org.apache.solr.core.SolrCore  \u2013 org.apache.solr.common.SolrException: Type mismatch: popularity was indexed as SORTED_SET\n\tat org.apache.solr.request.UnInvertedField.<init>(UnInvertedField.java:193)\n\tat org.apache.solr.request.UnInvertedField.getUnInvertedField(UnInvertedField.java:699)\n\tat org.apache.solr.handler.component.SimpleStats.getStatsFields(StatsComponent.java:319)\n\tat org.apache.solr.handler.component.SimpleStats.getStatsCounts(StatsComponent.java:290)\n\tat org.apache.solr.handler.component.StatsComponent.process(StatsComponent.java:78)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:221)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1964)",
    "attachments": {
        "SOLR-6024.patch": "https://issues.apache.org/jira/secure/attachment/12662367/SOLR-6024.patch",
        "SOLR-6024-trunk.patch": "https://issues.apache.org/jira/secure/attachment/12664472/SOLR-6024-trunk.patch",
        "SOLR-6024-branch_4x.patch": "https://issues.apache.org/jira/secure/attachment/12666420/SOLR-6024-branch_4x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ahmet Arslan",
            "id": "comment-13982337",
            "date": "2014-04-27T14:24:51+0000",
            "content": "Here are the search URLs that produce error message:\n\n\n\thttp://localhost:8983/solr/collection1/select?stats=true&stats.field=popularity\n\thttp://localhost:8983/solr/collection1/select?stats=true&stats.field=cat\n\n "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-14099995",
            "date": "2014-08-17T17:27:26+0000",
            "content": "Issue reproduced in solr-4.9.0.\nIssue not reproduced on trunk, attached test in patch don't get exception on query.\nUnInvertedField invokation was removed in rev:\n1595259\t5/16/14 6:39 PM\trmuir\t\t1594441, 1593789\tLUCENE-5666: Add UninvertingReader "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-14108500",
            "date": "2014-08-24T19:13:52+0000",
            "content": "Added patch based for lucene_solr_4_9 branch fixing issue,\nfor fields having docValues called org.apache.solr.request.DocValuesStats#getCounts from rev. 1595259 and UnInvertedField in other cases. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14110959",
            "date": "2014-08-26T17:09:50+0000",
            "content": "The added test fails if the codec is Lucene 4.0. Tested this on branch_4x and trunk:\n\n\n   [junit4] ERROR   0.22s | StatsComponentTest.testFieldStatisticsDocValuesAndMultiValued <<<\n   [junit4]    > Throwable #1: org.apache.solr.common.SolrException: java.lang.UnsupportedOperationException: Lucene 4.0 does not support SortedSet docvalues\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([D7B0D3D7FE664ABF:A5CE511C61788BCE]:0)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.update(TestHarness.java:247)\n   [junit4]    > \tat org.apache.solr.util.BaseTestHarness.checkUpdateStatus(BaseTestHarness.java:282)\n   [junit4]    > \tat org.apache.solr.util.BaseTestHarness.validateUpdate(BaseTestHarness.java:252)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.checkUpdateU(SolrTestCaseJ4.java:676)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertU(SolrTestCaseJ4.java:655)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertU(SolrTestCaseJ4.java:649)\n   [junit4]    > \tat org.apache.solr.handler.component.StatsComponentTest.testFieldStatisticsDocValuesAndMultiValued(StatsComponentTest.java:449)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.lang.UnsupportedOperationException: Lucene 4.0 does not support SortedSet docvalues\n   [junit4]    > \tat org.apache.lucene.codecs.lucene40.Lucene40DocValuesWriter.addSortedSetField(Lucene40DocValuesWriter.java:540)\n   [junit4]    > \tat org.apache.lucene.index.SortedSetDocValuesWriter.flush(SortedSetDocValuesWriter.java:164)\n   [junit4]    > \tat org.apache.lucene.index.DefaultIndexingChain.writeDocValues(DefaultIndexingChain.java:142)\n   [junit4]    > \tat org.apache.lucene.index.DefaultIndexingChain.flush(DefaultIndexingChain.java:96)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterPerThread.flush(DocumentsWriterPerThread.java:442)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriter.doFlush(DocumentsWriter.java:510)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriter.flushAllThreads(DocumentsWriter.java:621)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.java:2793)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:2952)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:2919)\n   [junit4]    > \tat org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.java:582)\n   [junit4]    > \tat org.apache.solr.update.processor.RunUpdateProcessor.processCommit(RunUpdateProcessorFactory.java:95)\n   [junit4]    > \tat org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(UpdateRequestProcessor.java:64)\n   [junit4]    > \tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalCommit(DistributedUpdateProcessor.java:1650)\n   [junit4]    > \tat org.apache.solr.update.processor.DistributedUpdateProcessor.processCommit(DistributedUpdateProcessor.java:1627)\n   [junit4]    > \tat org.apache.solr.update.processor.LogUpdateProcessor.processCommit(LogUpdateProcessorFactory.java:157)\n   [junit4]    > \tat org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:267)\n   [junit4]    > \tat org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:174)\n   [junit4]    > \tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:99)\n   [junit4]    > \tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1985)\n   [junit4]    > \tat org.apache.solr.servlet.DirectSolrConnection.request(DirectSolrConnection.java:131)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.update(TestHarness.java:243)\n   [junit4]    > \t... 46 more\n   [junit4]   2> 19528 T11 oas.SolrTestCaseJ4.deleteCore ###deleteCore\n\n\n "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14111278",
            "date": "2014-08-26T20:34:11+0000",
            "content": "Patch for trunk. Adds Vitaliy Zhovtyuk's test and suppress codec Lucene 4.0 in the test.  "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14111410",
            "date": "2014-08-26T21:58:23+0000",
            "content": "Added docValues fields for testing in trunk "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14112442",
            "date": "2014-08-27T16:59:03+0000",
            "content": "The test I added can fail in trunk when using a codec older than Lucene 4.5 because of missing values. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14114071",
            "date": "2014-08-28T18:05:34+0000",
            "content": "Suppressing codecs older than Lucene 4.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14114082",
            "date": "2014-08-28T18:10:52+0000",
            "content": "ok ... so from an svn management standpoint, it looks like the cleanest thing to do is backport all of the commits to DocValuesStats.java from trunk to the 4x branch (r1594441, r1594445, r1595259, r1600688, r1602997), combined with your modified version of StatsComponent.java to still conditionally use UnInvertedField.\n\ni'm still not really comfortable calling this bug \"fixed\" w/o more tests thought \u2013 in particular there is already plumbing in StatsComponentTest.doTestMVFieldStatisticsResult for testing that multivalued field stats \u2013 we need to add multivalued=true+docValue=true+indexed=false versions of all the Trie types to the test schema and ensure that method works for them.\n\n(we should also reach down into the schema like testStatsFacetMultivaluedErrorHandling() does to assert the SchemaField objects have all the properties we expect to help ensure no one changes the docValues or indexed setting and invalidates the test)\n\nand of course: we should commit the tests to trunk and then backport to 4x. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14114098",
            "date": "2014-08-28T18:17:50+0000",
            "content": "ok ... so from an svn management standpoint, it looks like the cleanest thing to do is backport all of the commits to DocValuesStats.java from trunk to the 4x branch (r1594441, r1594445, r1595259, r1600688, r1602997), combined with your modified version of StatsComponent.java to still conditionally use UnInvertedField.\nI see, I was going to ask what was the best way to bring the DocValuesStats class, it has been in trunk for long now. \n\nand of course: we should commit the tests to trunk and then backport to 4x.\nYes, that was why I was adding the \"-trunk\" patches.  "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14114125",
            "date": "2014-08-28T18:32:20+0000",
            "content": "we need to add multivalued=true+docValue=true+indexed=false versions\nThe \"missing\" stat won't work with this configuration (on trunk). It's being calculated as: \n\nDocSet missing = docs.andNot( searcher.getDocSet(new TermRangeQuery(fieldName, null, null, false, false)));\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14114479",
            "date": "2014-08-28T22:22:33+0000",
            "content": "Ok \u2013 totally ignore my last comment.  aparently i had a stale copy of this page open in my browser, and didn't see any of tomas's updates to this issue after Vitaliy's last patch.\n\ni haven't looked closely yet, but at first glance Tomas's patch looks like most likely adds all the test concerns i had. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14114493",
            "date": "2014-08-28T22:30:14+0000",
            "content": "Gah!  .... I don't know what's up with my browser, because it just happened again (firefox doesn't like tomas!)\n\nYes, that was why I was adding the \"-trunk\" patches. \n\nYeah ... i think it makes sense to focus on adding test coverage to trunk (and ferreting out any subtle bugs we've been missing due to the lack of test coverate) and then worry about backporting the individual changes to 4x and manually applying the neccessary StatsComponent.java change to conditionally use UnInvertedField when needed.\n\nThe \"missing\" stat won't work with this configuration (on trunk). It's being calculated as: \n\nisn't that a bug then?  we should definitely be able to get \"missing\" info from the DocValues API, and we should use it instead of depending on indexed=true for a docValues field. right? "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14115472",
            "date": "2014-08-29T17:00:44+0000",
            "content": "isn't that a bug then?\nI think it is. I'd tackle that in a different Jira, it has a workaround (use index=true) and it reproduces in trunk (unlike the issue described here). \nAfter a quick look, I think it would be easy to count the missing values for the complete field, but not trivial to count the missing values when using \"stats.facet\" (for each different value) "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14115542",
            "date": "2014-08-29T17:39:23+0000",
            "content": "I created SOLR-6452 for the bug with the \"missing\" stat "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14115585",
            "date": "2014-08-29T17:56:17+0000",
            "content": "Added preconditions to the new test. \nTest for docValues=true & indexed=false (commented out for now) "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-14116897",
            "date": "2014-08-31T21:14:40+0000",
            "content": "Patch based on latest added trunk patch.\nAdded stats calculation tests for docValues and multiValued fields of float and integer numeric types, added calculate distinct count, added stats.facet query on docValues field (leads to field type exception)  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14120748",
            "date": "2014-09-04T00:18:57+0000",
            "content": "tests looks good, precommit looks fine ... i tried to ping tomas earlier asking if he wanted ot commit and deal with the backpot or not but i don't think he saw it so i'm going to go ahead and commit to trunk and look into doing the backport & fix on 4.x "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14120750",
            "date": "2014-09-04T00:19:57+0000",
            "content": "Commit 1622386 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1622386 ]\n\nSOLR-6024: Fix StatsComponent when using docValues=true multiValued=true (bug only on 4x trunk commit is just test changes demonstrating correct behavior) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14120775",
            "date": "2014-09-04T00:51:23+0000",
            "content": "schema11.xml backport is pretty hairy due to divergence between trunk & 4x (removing deprecated types) and then trunk re-adding fieldTypes with the same name as old types.\n\ngoing to leave this alone for now and pick it back up tomorow - tomas said on IRC he might take a look at it first, we may wind up doing a tag team backport. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-14120978",
            "date": "2014-09-04T05:41:22+0000",
            "content": "This patch includes the last changes in trunk plus the changes needed for branch 4x. \nIt also include DocValuesStats (should probably be merged from trunk instead) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14121632",
            "date": "2014-09-04T17:40:23+0000",
            "content": "This patch includes the last changes in trunk plus the changes needed for branch 4x.\nIt also include DocValuesStats (should probably be merged from trunk instead)\n\nthanks tomas, looks good to me - currently running precommit (and another round of tests just to be safe) on 4x and then i'll commit.\n\nFWIW, here's my backporting steps...\n\n\n# NOTE: working dir is 4x checkout, ../dev is trunk checkout...\n\nsvn merge -c 1622386 ../dev/\n\n# manually massaged schema11.xml, StatsComponent.java per Tomas's 4x patch\n# confirm all tests *except* the new StatsComponentTest pass\n\n# manually copy DocValuesStats.java from Tomas's 4x patch\n# confirm StatsComponentTest passes now\n\nsvn add solr/core/src/java/org/apache/solr/request/DocValuesStats.java\n\nsvn merge --record-only -c 1594441 ../dev solr/core/src/java/org/apache/solr/request/DocValuesStats.java\nsvn merge --record-only -c 1594445 ../dev solr/core/src/java/org/apache/solr/request/DocValuesStats.java\nsvn merge --record-only -c 1595259 ../dev solr/core/src/java/org/apache/solr/request/DocValuesStats.java\nsvn merge --record-only -c 1600688 ../dev solr/core/src/java/org/apache/solr/request/DocValuesStats.java\nsvn merge --record-only -c 1602997 ../dev solr/core/src/java/org/apache/solr/request/DocValuesStats.java\n\n\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14121726",
            "date": "2014-09-04T18:31:34+0000",
            "content": "Commit 1622525 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622525 ]\n\nSOLR-6024: Fix StatsComponent when using docValues=true multiValued=true (merge r1622386, and DocValuesStats.java specific changes from r1594441, r1594445, r1595259, r1600688, r1602997) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14121728",
            "date": "2014-09-04T18:33:15+0000",
            "content": "I think we're all good. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14128936",
            "date": "2014-09-10T19:08:07+0000",
            "content": "Commit 1624097 from hossman@apache.org in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1624097 ]\n\nSOLR-6024: Fix StatsComponent when using docValues=true multiValued=true (merge r1622525) "
        },
        {
            "author": "Michael McCandless",
            "id": "comment-14151031",
            "date": "2014-09-28T09:03:52+0000",
            "content": "Bulk close for Lucene/Solr 4.10.1 release "
        },
        {
            "author": "Elran Dvir",
            "id": "comment-14267630",
            "date": "2015-01-07T13:45:28+0000",
            "content": "Hi All,\n\nI am trying to apply this patch on Solr 4.8.\nI have compilation problems with the class DocValuesStats.\nI get the following errors:\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project solr-core: Compilation failure: Compilation failure:\n[ERROR] /D:/ckp/src/solr_4.8/solr/core/src/java/org/apache/solr/request/DocValuesStats.java:[88,21] cannot find symbol\n[ERROR] symbol:   method emptySortedSet()\n[ERROR] location: class org.apache.lucene.index.DocValues\n[ERROR] /D:/ckp/src/solr_4.8/solr/core/src/java/org/apache/solr/request/DocValuesStats.java:[116,28] cannot find symbol\n[ERROR] symbol:   method emptySortedSet()\n[ERROR] location: class org.apache.lucene.index.DocValues\n[ERROR] /D:/ckp/src/solr_4.8/solr/core/src/java/org/apache/solr/request/DocValuesStats.java:[128,28] cannot find symbol\n[ERROR] symbol:   method emptySorted()\n[ERROR] location: class org.apache.lucene.index.DocValues\n[ERROR] /D:/ckp/src/solr_4.8/solr/core/src/java/org/apache/solr/request/DocValuesStats.java:[139,34] method lookupOrd in class org.apache.lucene.index.SortedSetDocValues cannot be applied to given types;\n[ERROR] required: long,org.apache.lucene.util.BytesRef\n[ERROR] found: int\n[ERROR] reason: actual and formal argument lists differ in length\n[ERROR] /D:/ckp/src/solr_4.8/solr/core/src/java/org/apache/solr/request/DocValuesStats.java:[165,55] cannot find symbol\n[ERROR] symbol:   method getGlobalOrds(int)\n[ERROR] location: variable map of type org.apache.lucene.index.MultiDocValues.OrdinalMap\n[ERROR] /D:/ckp/src/solr_4.8/solr/core/src/java/org/apache/solr/request/DocValuesStats.java:[183,55] cannot find symbol\n[ERROR] symbol:   method getGlobalOrds(int)\n[ERROR] location: variable map of type org.apache.lucene.index.MultiDocValues.OrdinalMap\n\nI guess these methods are implemented in newer versions of Solr/lucene.\n\nHow can I fix it in 4.8?\nWhat is the oldest version the patch can be applied to?\n\nThank you very much.  "
        }
    ]
}