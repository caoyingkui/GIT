{
    "id": "SOLR-2745",
    "title": "Sorting on a field whose name resembles an integer in scientific notation",
    "details": {
        "affect_versions": "3.3",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "I have created a schema where the field names are in a uuid format eg: 1cf1691c0-a1a4-4255-8943-57d87c923e31_t. I am also implementing dynamic fields via the 'star underscore' format eg: *_t.\n\nWhenever I try and sort on a field name that has a format of one or more integers followed by an 'e', I get a NumberFormatException like the following: java.lang.NumberFormatException: For input string: \"8e\". This particular error comes from trying to sort on a field name 8ecdced6f-3eb4-e508-4e7d-d40a86305096_dt. If the field name started with 12345e, I would get an error java.lang.NumberFormatException: For input string: \"12345e\".\n\nI'm not sure if this is a major issue or not but it is something that has appeared in our testing quite often. You would be surprised at how often randomly generated uuid's start with a number and then 'e'...",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Lance Norskog",
            "id": "comment-13098499",
            "date": "2011-09-07T00:24:04+0000",
            "content": "What kind of data do you want to store in these fields? What do you expect to get when you sort on the field?\n\nFields named \"*_dt\" are datestamps. They are stored in a numerical format. Solr should not even let you index non-dates into this field.\n\nFields named '*_t' are text fields. These are indexed, and sorting on them does not make sense. It used to be that sorting would blow up if there were more term facets (what you sort on) than documents. In recent Solr (trunk) this will not blow up, but it still does not make sense.\n "
        },
        {
            "author": "Joey",
            "id": "comment-13098507",
            "date": "2011-09-07T00:48:17+0000",
            "content": "I store data that I assume the dynamic field expects. ie: *_t is text, *_dt is storing only dates, *_i is storing only integers. I'm not putting unexpected  data into these fields. Also, I'm not allowing users from the front-end of my system to sort on text fields but that's beside the point.\n\nI reinstalled 3.3 to make sure I had the latest version and started from scratch with only 3 docs indexed. Sorting on the _dt field (actual field name 8ecdced6f-3eb4-e508-4e7d-d40a86305096_dt) still gives me that same error. \n\nI can confirm that there is only datestamps in my dynamic date fields in the 3 indexed docs I now have.\n\nI am no expert but from this it seems that the error is not a data one but a field name parsing issue. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13098517",
            "date": "2011-09-07T01:06:49+0000",
            "content": "That is odd. I just reproduced it with 3.3. Here are the field defs (stock Solr schema):\n<field name=\"12345e\" type=\"text_ws\" indexed=\"true\" />\n<field name=\"12345e_dt\" type=\"date\" indexed=\"true\"/>\n\nIt happens when sorting on either field. I have one doc in my index with these fields, put in this way:\n  <field name=\"12345e\">stuff and nonsense is rampant in our society</field>\n  <field name=\"12345e_dt\">2010-02-03T00:00:00Z</field>\n\nOne other peculiar thing, when I named the fields 8e32_dt and 8e32 it succeeded. but 832e and 832e_dt produced the number format exception, a little at odds with the original statement, but still.\n\nWhy the field #name# should show a number format exception is...er...interesting. \n\nnote also that my sort fragment was: &sort=832e_dt, which seems to be getting the _dt truncated.\n\nBut it's late, so I may be seeing things.\n\nFull stack trace (minus most of the Jetty stuff):\n\nHTTP ERROR 500\n\nProblem accessing /solr/select. Reason:\n\n    For input string: \"832e\"\n\njava.lang.NumberFormatException: For input string: \"832e\"\n\tat sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1222)\n\tat java.lang.Double.parseDouble(Double.java:510)\n\tat org.apache.solr.search.QueryParsing$StrParser.getNumber(QueryParsing.java:694)\n\tat org.apache.solr.search.FunctionQParser.parseValueSource(FunctionQParser.java:293)\n\tat org.apache.solr.search.FunctionQParser.parse(FunctionQParser.java:67)\n\tat org.apache.solr.search.QParser.getQuery(QParser.java:142)\n\tat org.apache.solr.search.QueryParsing.parseSort(QueryParsing.java:303)\n\tat org.apache.solr.search.QParser.getSort(QParser.java:222)\n\tat org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:82)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:173)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1368)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:356)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:252)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13098518",
            "date": "2011-09-07T01:14:42+0000",
            "content": "This is a dup of SOLR-2606, fixed in 3x (will be 3.4) "
        }
    ]
}