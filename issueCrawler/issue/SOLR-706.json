{
    "id": "SOLR-706",
    "title": "Fast auto-complete suggestions",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "1.5"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "A lot of users have suggested that facet.prefix in Solr is not the most efficient way to implement an auto-complete suggestion feature. A fast in-memory trie like structure has often been suggested instead. This issue aims to incorporate a faster/efficient way to answer auto-complete queries in Solr.\n\nRefer to the following discussion on solr-dev \u2013 http://markmail.org/message/sjjojrnroo3msugj",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12670661",
            "date": "2009-02-05T08:34:00+0000",
            "content": "Marking for 1.5 "
        },
        {
            "author": "Earwin Burrfoot",
            "id": "comment-12717108",
            "date": "2009-06-07T23:01:28+0000",
            "content": "When I did autocompletion for my project, simple java TreeMap had superior memory characteristics and almost the same performance as tries. I think it's not worth inventing something elaborate for this task. "
        },
        {
            "author": "Ankul Garg",
            "id": "comment-12740128",
            "date": "2009-08-06T16:02:46+0000",
            "content": "I got some benchmarking results comparing lucene's prefix search and autocomplete by trie using hashMap at each node (roughly a TST or even better). TST works much better than lucene's prefix search. How about using it in Solr? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12754669",
            "date": "2009-09-13T06:42:15+0000",
            "content": "SOLR-1316 has some interesting links. Closing this one. "
        }
    ]
}