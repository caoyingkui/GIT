{
    "id": "LUCENE-4725",
    "title": "Use Animal-Sniffer ANT task to enforce JDK compatibility",
    "details": {
        "components": [
            "general/build"
        ],
        "fix_versions": [],
        "affect_versions": "4.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "While developing the fork of the forbidden-apis check, I recogized another very useful task to execute (in fact its similar to the forbidden-apis task, it just does the opposite - it only allows specific signatures).\n\nThe problem is in general: If the developer has a newer JDK version installed and builds Lucene/Solr against it, he can accidentally use method signatures or classes not available in the compile target java version (in our case 1.6). This is especially useful for Mac users, who are enforced to use the JDK version shipped with the operating system.\n\nThe Animal-Sniffer ANT plugin can handle this for us (http://mojo.codehaus.org/animal-sniffer/animal-sniffer-ant-tasks/), available via IVY. The corresponding signatures are also available via IVY: http://mojo.codehaus.org/signatures/java16/\n\nLike the forbidden APIs scanner it scans the byte code and fails the build if any signature is used that is not shipped with the compiler target JDK.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}