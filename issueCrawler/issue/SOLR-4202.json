{
    "id": "SOLR-4202",
    "title": "Relax rules around accepting updates when not connected to zookeeper.",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "We are pretty tight about this currently - I think it might be a bit nicer if we relax a little.\n\nRight now, as soon we realize we cannot talk to zookeeper, we stop accepting updates in all cases.\n\nI think it might be better if we change that a bit for a non leader. It might be nicer if it would still accept updates from the leader, but fail them. This way, there is some chance that if the problem was simply a connection loss with zookeeper, when the leader asks the replica to recover because it failed the update, it's more likely to just take a peersync to catch up.\n\nThoughts?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13535061",
            "date": "2012-12-18T17:11:35+0000",
            "content": "Tricky.... it's hard to figure out of this will increase fail scenarios.\n\nWhat if we lose connectivity, and miss a few updates.\nThen we get back connectivity, accept a bunch of updates (more than the window of recent updates we keep track of), then reconnect to ZK.\nWe do a recovery, compare recent updates, and conclude that we are up to date.\n\nAside: I thought the leader requested a replica to go into recovery if it returns a failure from an update? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653699",
            "date": "2013-05-10T10:32:42+0000",
            "content": "Closed after release. "
        }
    ]
}