{
    "id": "LUCENE-7878",
    "title": "QueryParser AND default operator and MultiWords synonyms failed if keywords exactly matches a synonym",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "6.5.1,                                            6.6,                                            7.0",
        "status": "Resolved",
        "type": "Bug",
        "components": [
            "core/queryparser"
        ],
        "fix_versions": [
            "6.6.1",
            "6.7",
            "7.0"
        ]
    },
    "description": "This issue is about using the QueryParser with MultiWordsSynonyms.\n\nTo reproduce the bug:\n\n\tUse AND as default operator\n\tUse a query string which exactly matches one synonym.\n\n\n\nIn short, the part of the query which handle the synonym lookup should keep a \"OR\" relation between the synonyms, but it is translated as a \"AND\".\n\nIf I parse: \"guinea pig\" which is a synonym of \"cavy\":\n\nUsing default OR, I get something correct:\n    \"(+guinea +pig) cavy\"\n\nNote: I should probably better have ((+guinea +pic) cavy)\n\nUsing AND as default operator, I get something wrong:\n    +(+guinea +pig) +cavy\n\nI was expected:\n    +((+guinea +pig) cavy)\n\nThe relation between \"guinea pig\" and \"cavy\" is now a AND. It should be still a OR because it is a synonym clause.\n\nTo help understanding. If now I parse \"guinea pig world\"\nAnd I get the expected result:\n    +((+guinea +pig) cavy) +world\n\nThe relation between \"guinea pig\" and \"cavy\" is a OR as expected (it is a synonym), and the relation with \"world\" is AND as expected by the default operator.\n\nHere is the additional unit test for, I hope it is pretty self-explanatory:\norg.apache.lucene.queryparser.classic.TestQueryParser\n\n\npublic void testDefaultOperatorWhenKeywordsMatchesExactlyOneSynonym() throws ParseException {\n    // Using the default OR operator\n    QueryParser smart = new QueryParser(\"field\", new Analyzer1());\n    smart.setSplitOnWhitespace(false);\n    smart.setDefaultOperator(Operator.OR);\n    assertEquals(\"(+guinea +pig) cavy\", smart.parse(\"guinea pig\").toString(\"field\"));\n\n    // Using the default AND operator\n    smart = new QueryParser(\"field\", new Analyzer1());\n    smart.setSplitOnWhitespace(false);\n    smart.setDefaultOperator(Operator.AND);\n    assertEquals(\"+((+guinea +pig) cavy) +world\", smart.parse(\"guinea pig world\").toString(\"field\"));\n\n    // Using the default AND operator\n    smart = new QueryParser(\"field\", new Analyzer1());\n    smart.setSplitOnWhitespace(false);\n    smart.setDefaultOperator(Operator.AND);\n    assertEquals(\"+((+guinea +pig) cavy)\", smart.parse(\"guinea pig\").toString(\"field\"));\n  }",
    "attachments": {
        "LUCENE-7878.patch": "https://issues.apache.org/jira/secure/attachment/12872998/LUCENE-7878.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16049318",
            "date": "2017-06-14T15:52:35+0000",
            "content": "Thanks  Emanuel ! \nI confirm that this is a bug and that the bug only occurs when there is a single multi-words synonym in the query. In that case the should clause that is supposed to handle the synonym rule is removed by the query parser, I'll work on a fix.\n ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-16049329",
            "date": "2017-06-14T16:03:51+0000",
            "content": "Here is a patch. The logic to simplify the boolean query produced by the graph analysis was wrong. ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-16049434",
            "date": "2017-06-14T17:54:25+0000",
            "content": "A new patch that passes all the tests ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-16049587",
            "date": "2017-06-14T19:52:44+0000",
            "content": "Hi Jim,\nI confirm is it fixed. Thanks for that extremely fast bug resolution \nIt would be great if this patch could be applied also to 6.5 / 6.6 branches. ",
            "author": "Emmanuel Keller"
        },
        {
            "id": "comment-16051587",
            "date": "2017-06-16T08:29:08+0000",
            "content": "test1 looks like a leftover. Otherwise +1! ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16051843",
            "date": "2017-06-16T12:43:06+0000",
            "content": "Commit 0c683305a4aae59869b4b0524d10a4cdf48ec036 in lucene-solr's branch refs/heads/master from Jim Ferenczi\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0c68330 ]\n\nLUCENE-7878: Fix query builder to keep the SHOULD clause that wraps multi-word synonyms ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16051941",
            "date": "2017-06-16T14:03:38+0000",
            "content": "Commit 6b9e10159121477887ef77d3522095e0368c8577 in lucene-solr's branch refs/heads/branch_6x from Jim Ferenczi\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6b9e101 ]\n\nLUCENE-7878: Fix query builder to keep the SHOULD clause that wraps multi-word synonyms ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16051948",
            "date": "2017-06-16T14:10:51+0000",
            "content": "Commit 9f89811e6524ba21777a256f478744dc4a40a685 in lucene-solr's branch refs/heads/branch_6_6 from Jim Ferenczi\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9f89811 ]\n\nLUCENE-7878: Fix query builder to keep the SHOULD clause that wraps multi-word synonyms ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16051952",
            "date": "2017-06-16T14:12:18+0000",
            "content": "Thanks @jpountz and Emmanuel for finding this nasty bug!\n\nIt is merged in 6.6 so if we do a 6.6.1 release it will be part of it, otherwise it will be available in 6.7. ",
            "author": "Jim Ferenczi"
        }
    ]
}