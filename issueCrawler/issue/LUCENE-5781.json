{
    "id": "LUCENE-5781",
    "title": "don't create unused states in LevenshteinAutomata",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.10",
            "6.0"
        ]
    },
    "description": "While working on LUCENE-5752 I discovered that LevenshteinAutomata creates unused states with cycles.  I think they are basically harmless but we still shouldn't create them?",
    "attachments": {
        "LUCENE-5781.patch": "https://issues.apache.org/jira/secure/attachment/12651751/LUCENE-5781.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14039448",
            "author": "Michael McCandless",
            "content": "Simple patch that just creates each state lazily when we \"really\" need to add transitions to/from it. ",
            "date": "2014-06-20T22:15:09+0000"
        },
        {
            "id": "comment-14039772",
            "author": "Robert Muir",
            "content": "If this is committed, then the comments should be fixed to.\n\nWhat are the concrete benefits? I think the laziness makes the code significantly harder to read: this is probably already our most complex code. Can we do it in a simpler way? If we must do it this way, can the method have proper docs (like all other methods in this class)? ",
            "date": "2014-06-21T11:15:02+0000"
        },
        {
            "id": "comment-14039788",
            "author": "Michael McCandless",
            "content": "Actually I thought this approach was clear?  I.e. it doesn't really\nmake the code complex.\n\nIf you can think of a simpler way I'm all for it ... really I'd like\nto understand why the ParametricDescription is creating these dead\nstates in the first place.  That doesn't seem right; maybe a fix there\nwould be simpler.\n\nI'll add more comments and remove the TODO. ",
            "date": "2014-06-21T12:00:13+0000"
        },
        {
            "id": "comment-14039795",
            "author": "Robert Muir",
            "content": "Exactly: I am just very suspicious that the bug is in the python code. ",
            "date": "2014-06-21T12:37:56+0000"
        },
        {
            "id": "comment-14039907",
            "author": "Michael McCandless",
            "content": "Exactly: I am just very suspicious that the bug is in the python code.\n\nI am too.\n\nI measured the dead states for the N=2 case and length 6 string: 80 of 210 states are dead, and 640 out of 1336 transitions.\n\nAlso, those are just the \"obviously dead\" states (they cycle to themselves).  There are further non-obvious dead states: once I remove those the automaton has 73 states (down from 130) and 279 transitions (down from 499, after reducing the 696 transitions created by LevA).\n\nWe never noticed this before because the previous automaton impl couldn't \"see\" states created that are unreachable from the initial node. ",
            "date": "2014-06-21T17:59:42+0000"
        },
        {
            "id": "comment-14039924",
            "author": "Robert Muir",
            "content": "Well, they were never part of the automaton before  ",
            "date": "2014-06-21T19:13:19+0000"
        },
        {
            "id": "comment-14039971",
            "author": "Michael McCandless",
            "content": "Well, they were never part of the automaton before \n\nRight, ignorance was bliss \n\nI mean, we can continue to ignore this... I was just surprised to discover it.\n\nI think it's crazy ~65% of the states and ~79% of the transitions in this case are \"born dead\". ",
            "date": "2014-06-21T22:25:32+0000"
        }
    ]
}