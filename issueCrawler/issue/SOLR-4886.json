{
    "id": "SOLR-4886",
    "title": "configure, test, and document PDF export process of SOLR CWIKI",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "documentation"
        ],
        "type": "Sub-task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "add the ASL as a page in the wiki such that it appears early in the exported PDF\n\ttest that exporting the PDF works ok with the large space\n\treview the exported PDF for problems\n\tconfirm/tweak-configs so that PDF exporting can done really easily, ideally automatically\n\tdocument/script steps to create PDF on each solr release.\n\n\n\nLots of tips here: https://confluence.atlassian.com/display/DOC/Providing+PDF+Versions+of+your+Technical+Documentation",
    "attachments": {
        "tmp.html": "https://issues.apache.org/jira/secure/attachment/12591759/tmp.html",
        "solr-110713-0027-9170__using_freefonts_withencoding.pdf": "https://issues.apache.org/jira/secure/attachment/12591776/solr-110713-0027-9170__using_freefonts_withencoding.pdf",
        "solr-090713-2308-8288.pdf": "https://issues.apache.org/jira/secure/attachment/12591554/solr-090713-2308-8288.pdf",
        "solr-100713-2311-9042__using_freefonts.pdf": "https://issues.apache.org/jira/secure/attachment/12591758/solr-100713-2311-9042__using_freefonts.pdf"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13692382",
            "date": "2013-06-24T21:08:41+0000",
            "content": "I'm going to hold off on trying to move forward with this until the CWIKI confluence upgrade is finalized, since it seems likely that may affect hte PDF export feature and it doesn't seem worth while to think too hard about tweaking the Styling of the PDF and looking into auto generating until we are actually running Confluence 5.x and can see how it behaves. "
        },
        {
            "author": "Cassandra Targett",
            "id": "comment-13703660",
            "date": "2013-07-09T19:08:17+0000",
            "content": "A couple things to note about customizing the PDF export:\n\n\n\tThe default CSS is attached to this page of Atlassian documentation: https://confluence.atlassian.com/display/CONF35/Editing+the+PDF+Stylesheet.\n\tConfluence first exports the requested pages to HTML, then converts the HTML to PDF. The divs you need to modify are found in the HTML, which can only be grabbed off the server. That's probably not an option here. However, the PDF does have good coverage of the various divs that are used, it's just you won't really know if you're changing what you hope you're changing without a lot of trial & error. (Since I have the same version of Confluence, I could probably get you a copy of pre-PDF HTML output if you wanted.)\n\tGood news, though, is that this doesn't look much changed between 3.x and 5.x, so whatever changes you do should survive the rest of the Confluence upgrade process.\n\n\n\nAt LucidWorks we stopped using the default PDF export tool in 2011 because of a few limitations I decided were too much of a pain in my ass (we license a commercial tool instead):\n\n\n\tChanging the font was difficult. Unless you want Times New Roman, Helvetica or Courier, you have to upload the font file to the server and reference it's location in an @font-face call in the CSS. (It does seem that Confluence 5 has made this uploading fonts business easier: https://confluence.atlassian.com/display/DOC/Creating+PDF+in+Another+Language discusses a way to upload fonts.)\n\tI could never figure out how to get the Table of Contents page to have a header that said \"Table of Contents\", or any other text (others who are better with CSS might know this, but I didn't).\n\tBookmarks are created during PDF creation, but they link to the end of the previous section, not the start of the new section that should be bookmarked. This might not be a bad thing, depending on if you want to make page breaks at the start of specific header levels (I did).\n\n\n\nThere were other reasons for using a commercial tool, but they don't really impact this issue. "
        },
        {
            "author": "Cassandra Targett",
            "id": "comment-13703688",
            "date": "2013-07-09T19:28:43+0000",
            "content": "Header levels are also problematic and it warrants a separate comment to explain what's going to happen.\n\nThe PDF export uses the page hierarchy to compress all the pages into one (pretty massive) HTML file. Each page is then given a heading level in the HTML that corresponds to it's location in the hierarchy. The rest of the heading levels on all the pages are then compressed under those heading levels.\n\nSo, to use the Schema API page as an example (https://cwiki.apache.org/confluence/display/solr/Schema+API), here is where it's located in the hierarchy: \n\nApache Solr Reference Guide -> Documents, Fields, and Schema Design -> Schema API\n\nIn the HTML file, the header for the page \"Apache Solr Reference Guide\" will be h1, \"Documents, Fields, and Schema Design\" will be h2, \"Schema API\" will be h3. \n\nTaking another example of a page deeper in the hierarchy, \"DataDir and DirectoryFactory in SolrConfig\" (https://cwiki.apache.org/confluence/display/solr/DataDir+and+DirectoryFactory+in+SolrConfig), will be h4.\n\nSo, after all the pages have been assigned heading levels appropriate for their level in the page hierarchy, all the defined headers within the pages will start to get numbers. I believe the highest heading level of content (not a page title) will be h5. The levels then go down from that point, depending on how they were defined on the page. An h4 will likely end up as an h8.\n\nThis is important if you want page titles to appear a certain way - changing h1 will pretty much only change one title. You'll have to modify at h2, h3, and h4 also, depending on how you want to entire document to flow.\n\nI also wanted page breaks on certain pages, so had to define those to happen on h2 and h3 levels. See also my previous comment about problems with bookmarks within the PDF - the page breaks were not without their own problems. "
        },
        {
            "author": "Cassandra Targett",
            "id": "comment-13703729",
            "date": "2013-07-09T20:14:49+0000",
            "content": "See also this comment in SOLR-4957(https://issues.apache.org/jira/browse/SOLR-4957#comment-13693221):\n\n\nMissing {unicode-text} macro\n\nThis is another User Macro that is only used on the Language Analysis page. It sets the font in the PDF export to a unicode font to properly render some of the more complex language examples on that page. At LucidWorks, our PDF font is Verdana, which does not properly render Arabic, Chinese, Japanese, Hindi, Persian and Thai. This macro sets a CSS class for those snippets of text that didn't render right, and the CSS for the PDF uses that class to set the font as Arial Unicode. If you use a Unicode font as the body for the whole PDF, you can remove the references to this macro. If you use an even less-unicode-compatible font than Verdana, you may need to expand the use of the macro.\n\nThis macro had problems in my test conversion to Confluence 4, but I have not yet had a chance to look at what the problems were or if they are easy to fix.\n\nWe discovered this problem while using the commercial PDF tool; however, it is a font problem so I am assuming it would also appear in Confluence's PDF tool if the font used does not render those languages properly. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13704013",
            "date": "2013-07-09T23:44:19+0000",
            "content": "Thanks for all the info Cassandra,\n\nfor now I'm mainly just worried about making sure the PDF is \"not terrible\" \u2013 i'm happy to iterate on \"looks good\" later.\n\nThings i've done so far...\n\n\n\tknowledge gained\n\t\n\t\ttrying to script/automate this isn't going to be easy \u2013 there is a SOAP API call but it's very limited (ie: can't exclude pages like the meta-docs we have about hte doc) and is changing between confluence 3.x, 4x, and 5.x ... so trying to count on it is a bad idea.  fortunately, manually exporting is trivial.\n\t\n\t\n\tlayout & style customizations\n\t\n\t\tadded a title page with the solr logo and ASL\n\t\tadded a simple footer\n\t\tsupressed display of hte table of contents (the PDF structure already includes ToC metdata that the PDF viewer can display to the user if they want it \u2013 no need to waste 4 pages of the doc with the same info)\n\t\tforced each major section to start on a new page (via h2 page-break-before)\n\t\n\t\n\n\n\nAttached is am example of the PDF export as things stand right now.\n\nstill to do...\n\n\n\tdocument how to \"release\" (ie: export, vote, publish) the PDF\n\tdocument basic things that need done after publishing (ie: where does \"4.x\" need changed to \"4.y\"\n\tdeal with the unicode problems in the Langauge Analysis sub-secion...\n\n\n\n\nI added the \"unicode-text\" macro and CSS as cassandra suggested in SOLR-4957 , which made the macro errors go away, butthe text still isn't appearing in the PDF \u2013 my PDF viewer says \"Arial\" isn't even a font used in the PDF, which makes me think that it's not a font available on the CWIKI instance of Confluence, so it isn't getting used during hte HTML->PDF translation.  (this seems to be verified by the list of fonts in the doc below)\n\nI did find some docs on how to use custom fonts in the exported PDFs (even before Confluence 5.x), and from the looks of it:\n\n\twe might be able to refer to a font via a public url, ie \"http://lucene.apache.org/...\" instead of needing to copy it to cwiki.apache.org\n\t\n\t\thttps://confluence.atlassian.com/display/CONF35/Advanced+PDF+Stylesheet+Customisations#AdvancedPDFStylesheetCustomisations-IncorporatingOtherFonts\n\t\n\t\n\twe should be able to use the \"Free UCS Outline Fonts\" in the PDF, which seem to have good coverage of all the Unicode blocks we might want to have examples o\n\t\n\t\thttps://en.wikipedia.org/wiki/Free_UCS_Outline_Fonts\n\t\n\t\n\n "
        },
        {
            "author": "Cassandra Targett",
            "id": "comment-13704588",
            "date": "2013-07-10T13:59:40+0000",
            "content": "I skimmed through the PDF looking for problems I've seen in the past (the biggest being tables and code examples that run off the right side of the page) and didn't see any. As for it being \"not terrible\", I think you've got that. It's not all that bad, really.\n\nI added the \"unicode-text\" macro and CSS as cassandra suggested in SOLR-4957 , which made the macro errors go away, butthe text still isn't appearing in the PDF\n\nI had meant to mention that the fonts supposedly can be imported with a URL in the CSS pre-Confluence 5.x. I've never tried that with the PDF export specifically, but it should work if you can find a place to host the font file.\n\nThe only thing that's weird-ish in the PDF is that the \"Back to Top\" text from the {topofpage} macros are getting into the PDF. They look like links, but they don't go anywhere. I don't think that's terrible, but you could probably easily suppress those by adding a CSS class name to the HTML of the user macro, then setting that class to not display in your CSS (display: none). Again, since it's not misleading or missing information, that's really a nice-to-fix at a later time. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13705235",
            "date": "2013-07-10T23:39:54+0000",
            "content": "The only thing that's weird-ish in the PDF is that the \"Back to Top\"\n\ngood catch, i fixed that in the PDF CSS\n\nI had meant to mention that the fonts supposedly can be imported with a URL in the CSS pre-Confluence 5.x. I've never tried that with the PDF export specifically, but it should work if you can find a place to host the font file.\n\nI beat my head against this a lot today, and came to two main conclusions...\n\n1) The PDF Export will in fact let you pull in remote fonts.\n\n\n\tIt seems to be picky about the CSS syntax, if i try to specify a font-family name in the @font-face it freaks out, but if i use the exact syntax from the confluence doc example, it seems to work\n\t\n@font-face {  \n  src: url(http://people.apache.org/~hossman/tmp/freefont-20120503/FreeSans.ttf);   \n  -fs-pdf-font-embed: embed;   \n}   \n@font-face {  \n  src: url(http://people.apache.org/~hossman/tmp/freefont-20120503/FreeSerif.ttf);   \n  -fs-pdf-font-embed: embed;   \n}   \n@font-face {  \n  src: url(http://people.apache.org/~hossman/tmp/freefont-20120503/FreeMono.ttf);   \n  -fs-pdf-font-embed: embed;   \n}   \nbody {  \n  font-family: FreeSans;  \n  font-weight: normal;  \n  font-style: normal;  \n}  \npre, tt, kbd, code, samp {   \n  font-family: FreeMono;   \n  font-weight: normal;  \n  font-style: normal;  \n}  \n.unicode-text {  \n  /* FreeSerif reportedly has better unicode code block coverage then FreeSans */  \n  \n  font-family: FreeSerif;  \n  font-weight: normal;  \n  font-style: normal;  \n}  \n\n\n\ti had a typo in the remote URL the first time i tried using an \"http://...\" font-face src url, and got a horrible error from the PDF export, which was a good sign (once i fixed it)\n\tlooking at the \"properties\" of the generated PDF, i can see that (a subset of) the FreeSans, FreeSerif, and FreeMono fonts are embedded in the final PDF\n\tin general, the text of the PDF looks visible different using the \"FreeFonts\" then using the default fonts\n\n\n\n2) for some reason, even using the FreeFonts, the non-latin characters in the PDF still don't show up.\n\n\n\tthe various in/out examples in languages like Arabic, Chinese, and (some) Greek don't display at all in the PDF\n\tA simple HTML file containing same unicode characters and pulling in the same FreeFont files via CSS, looks just find in firefox (and looks visibly different then if those css fonts are disabled)\n\n\n\n\n\nAt this point i'm kind of stumped as to how to proceed ... if it were just a matter of the exporter not being able to get the fonts i could talk to infra about installing them on the machine \u2013 but all evidence indicates that the fonts are being embedded into the PDF just fine ... thye just don't seem to be rendering these non-latin1 characters.\n\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13705239",
            "date": "2013-07-10T23:43:52+0000",
            "content": "here's the tmp.html file showing the basics what we're doing pulling in the remote fonts via CSS, and the solr-100713-2311-9042__using_freefonts.pdf showing that even with this CSS in place, the resulting PDF doesn't render the non-latin characters (look at the In/Out examples for various langauges starting on page 114) even though the PDF file properties indicate that the fonts are embedded in the doc. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13705353",
            "date": "2013-07-11T01:16:30+0000",
            "content": "Woot!\n\nProgress!!!!\n\ndoing a little supposing and speculating and reading between the lines, i think i've pretty much got this solved...\n\ni started with the knowledge that that PDFs generated by confluence say they are produced by \"iText\" and did some googling and reading about iText and then noticed a project named \"Flying Saucer\" uses the iText java library to convert XHTML+CSS -> PDF, and then remembered that the Confluence PDF conversion pages are named things \"flyingpdf/doflyingpdf.action\".  reading up on flying saucer i found this page which had a note that jumped out at me...\n\n\nIn the style section of your xhtml document (or in a separate style sheet), register any special fonts you will be using and indicate where the font files are located. For example, to register Arial Unicode MS:\n\n\n@font-face {  \n  src: url(file:///Absolute/path/to/font/directory/ARIALUNI.TTF);  \n  -fs-pdf-font-embed: embed;  \n  -fs-pdf-font-encoding: Identity-H;\n}  \n\n\n\nThe attached solr-110713-0027-9170__using_freefonts_withencoding.pdf shows the results of generating the PDF with this new \"-fs-pdf-font-encoding: Identity-H\" specified in the stylesheet.\n\nHappy! Happy! Joy! Joy! ... Arabic, Greek, Hindi all look great \u2013 the only problem is the asian langauges, which i realize now should be expected based on the documented coverage from the freefonts...\n\n\n\thttps://www.gnu.org/software/freefont/coverage.html\n\thttps://www.gnu.org/software/freefont/FAQ.html\n\n\n\nSo on the plus side: I've figured out how to use any font we want to display these examples properly i nthe PDF\nNegative side: still need to find a good font.\n\nI'm currently thinking that the Ubuntu font would be good, since it seems to handly just about everything i can throw at it...\n\nhttp://font.ubuntu.com/\n\n...i'm just not 100% certain that i understand what we need to do to comply with the licensing rules ... my reading of hte ubuntu font license seems to suggest that embedding the font in documents doens't require anything special, but ASF Legal has put it in \"category b\" (see LEGAL-163).  i think that means that as long as we only distribute the PDF with the font embedded, but do not publicly distribute the fonts themselves we're fine ... but i think that probably means we need to have infra copy the fonts onto the confluence box instead of pulling them from an http://lucene.apache.org/... URL like i was planning on. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13705373",
            "date": "2013-07-11T01:37:16+0000",
            "content": "Well crap,\n\nrmuir just pointed out to me on IRC that things i thought looked correct (like Arabic and Hindi) are not actually correct because the RTL direction and character->glyph mapping isn't quite right.\n\nso i think the best solution is to punt on this, and change the examples to use images \u2013 spun off into SOLR-5031 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13705379",
            "date": "2013-07-11T01:42:30+0000",
            "content": "+1 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13706496",
            "date": "2013-07-12T00:10:20+0000",
            "content": "Since we're punting on the issue of unicode and fonts, the PDF stylesheet is fairly trivial now, and i went ahead and removed the \"unicode-text\" macro...\n\n\n/* hide the incredibly verbose Table of Contents  \n   (the exported PDF already uses the ToC feature inherent  \n   in PDFs, no need for it to also take up 4 pages)  \n */  \ndiv.toc {  \n   display: none;  \n}  \n  \n/* Every major section should start a new page */  \nh2 {  \n   page-break-before:always;  \n}  \n  \n/* hide the \"Back to Top\" links in the PDF */  \n.topofpagelink {  \n   display: none;  \n}\n\n\n\nExporting the PDF isn't scriptable at the moment, but it is trivial to do from a browser (by anyone) with a few clicks..\n\n\n\tLoad https://cwiki.apache.org/confluence/spaces/flyingpdf/flyingpdf.action?key=solr\n\tuncheck the box next to \"** Internal MetaDocs\" to supress it and it's children form the PDF\n\tClick the \"Export\" button\n\tWait for a \"Download here\" link to appear.\n\n\n\n...i'll include these details in the docs that need written for SOLR-5030. "
        }
    ]
}