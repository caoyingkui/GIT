{
    "id": "SOLR-12963",
    "title": "change default for 'uninvertible' to 'false' (dependent on new schema 'version')",
    "details": {
        "type": "Sub-task",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "We should consider changing the default behavior of the uninvertible field option to be dependnt on the schema version property, such that moving forward the fields/fieldtypes will default to uninvertible == false unless an explicit uninvertible=true is specified by the user.\n\nThere are a lot of considerations regarding the existing behavior of functionality (like faceting) when the (effective) value of uninvertible is false because we move forward with changing this in a way that could suprise/confuse new users or existing users w/ long heald expectations that certain behavior would just \"work\" w/o understanding that was because of FieldCache/uninversion.\n\nSee parent issue for more background/discussion.",
    "attachments": {
        "SOLR-12963.patch": "https://issues.apache.org/jira/secure/attachment/12946994/SOLR-12963.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16675939",
            "content": "\nAttaching a very tiny patch (currently dependent on the patch in SOLR-12962) showing the bare bones change needed to do this \u2013 but there is a LOT of additional discussion/updates that would be needed before we can persue this however.\n\nTODO list...\n\n\n\tupdate _default and sample_techproduct schema's to use version=1.7\n\t\n\t\tthis will likely mean changing a lot of field/types to use docValues=true\n\t\tthe comment at the top of these files (listing the versions and theyr diffs) also needs updated\n\t\n\t\n\tdiscuss/decide if/how we want to change the behavior of faceting when the automatic/user-specificed faceting method doesn't match field props\n\t\n\t\tshould we explicitly \"fail\" if a user requested method doesn't match the field props?\n\t\tshould we change the implicit method selection when the user doesn't specify one to pay more attention to the field props?\n\t\ttoday, faceting on docValues=false indexed=false returns empty list of buckets\n\t\t\n\t\t\tis that what we should do if  stored=true docValues=false indexed=true uninvertible=false ?\n\t\t\n\t\t\n\t\tfor facet.field we could maybe default to facet.method=enum unless (docValues|uninvertible)=true ?\n\t\t\n\t\t\tsee SimpleFacets.selectFacetMethod\n\t\t\tNOTE: can't just changed the if (method == null) block ... need to also check & fail in the TrieField.getMainValuePrefix if not docValues || uninvertible\n\t\t\n\t\t\n\t\tfor JSON faceting things are trickier..\n\t\t\n\t\t\tmay not be able to just assume 'method: enum' if uninvertible==false\n\t\t\t\n\t\t\t\tnot clear at a glance if FacetFieldProcessorByEnumTermsStream works with sorts besides 'index asc' ? ... i don't think it does?\n\t\t\t\tin current impl, FacetField.createFacetProcessor won't consider FacetFieldProcessorByEnumTermsStream (even if explicit method:enum ) unless 'index asc'\n\t\t\t\n\t\t\t\n\t\t\tReminder: review all code paths involving FieldUtil.get*DocValues methods.\n\t\t\n\t\t\n\t\n\t\n\tOther docValue heavy features like collapsing & streaming expressions may need similar discussions/decisions if they don't already \"fail hard\" when docValues=false indexed=false\n\tnew/updated tests...\n\t\n\t\tupdated schema_latest.xml to use version=\"1.7\"\n\t\t\n\t\t\tsee what breaks .... going to be a lot\n\t\t\t\n\t\t\t\tprobably need to change a lot of fieldtypes (or tests) to explicitly use docValues...\n\t\t\t\t...and/or add new permutations of fieldtypes/fields and randomize docValues=true vs uninvertible=true ?\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\tmake sure we add a new test explicitly confirming that we can sort on a field w/explicit uninvertible=true (when version=1.7)\n\t\tsilly: some DIH tests will fail because the DIH configs foolishly declare schema version=\"4.0\"\n\t\n\t\n\tref guide updates\n\t\n\t\tupdate docs on uninvertible to mention new default\n\t\taudit all sections on sorting/faceting ... should probably now mention that docValues is mandary\n\t\t\n\t\t\tshould probably never \"recommend\" using uninvertible=true, perhaps focus on only discussing it on the page explaining DocValues, as an ram expensive alternative that doesn't require re-indexing but hsould otherwise be avoided?\n\t\t\n\t\t\n\t\ta lot of aspects of the doc need audited/updated to see if/where existing examples assume something will be uninvertible\n\t\t\n\t\t\tie: faceting & sorting examples compared to how the fields used are defined in _default and sample_techproduct\n\t\t\n\t\t\n\t\n\t\n\n\n ",
            "author": "Hoss Man",
            "date": "2018-11-06T00:47:31+0000"
        },
        {
            "id": "comment-16675941",
            "content": "marking this issue dependent on SOLR-12962 since obviously it makes no sense to change the default of an option unless/until the option is added. ",
            "author": "Hoss Man",
            "date": "2018-11-06T00:48:28+0000"
        },
        {
            "id": "comment-16676193",
            "content": "\n\tshould we explicitly \"fail\" if a user requested\u00a0method\u00a0doesn't match the field props?\n\n\nYes please.\u00a0 I find it very confusing/frustrating when I explicitly request a faceting method that then does not get used for whatever reason.\u00a0 The JSON facets (FacetField.createFacetProcessor) seem especially picky about how it chooses its faceting method.\u00a0 I think a Point field with docValues=true can only use\u00a0FacetFieldProcessorByHashDV.\u00a0 However Solr will let me request any faceting method I want and silently ignore it.\u00a0 (Shameless plug for SOLR-12880 which will at least tell you which facet processor was used).\n\n\u00a0 ",
            "author": "Tim Underwood",
            "date": "2018-11-06T05:48:21+0000"
        }
    ]
}