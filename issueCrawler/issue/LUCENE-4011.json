{
    "id": "LUCENE-4011",
    "title": "Check for broken documentation links in hudson",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/javadocs"
        ],
        "type": "Task",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Mike added a cool script to dev-tools (checkJavadocLinks.py) that checks \nall local links in our documentation.\n\nI think we really need to check this in hudson and fail on any errors, for these reasons:\n\n\tjavadocs external linking is really broken, so 'ant javadocs' doesnt find all errors.\n  for example you can do this:\n  \n  {@link java.lang.JavaDocsSucks}\n  \n\n  and nothing will ever give you any warning: just a broken link. thats because javadocs\n  external linking is fundamentally package-driven, broken by design for compile-time\n  verification of correctness.\n\tsome documentation files have internal href links which should be checked to be correct.\n\tthis checker finds broken html links like unescaped slashes that we currently don't catch.\n\tthis checker finds real API bugs that javadocs won't warn about, such as protected methods\n  returning package-private classes and so on.\n\n\n\nOnce we fix the broken links we should be able to enforce all of this stuff in hudson, helping\nto prevent our documentation from growing wildly out of date.",
    "attachments": {
        "LUCENE-4011-solr-links.patch": "https://issues.apache.org/jira/secure/attachment/12523737/LUCENE-4011-solr-links.patch",
        "LUCENE-4011-core-links.patch": "https://issues.apache.org/jira/secure/attachment/12523728/LUCENE-4011-core-links.patch",
        "LUCENE-4011.patch": "https://issues.apache.org/jira/secure/attachment/12523741/LUCENE-4011.patch",
        "LUCENE-4011-lucene-links.patch": "https://issues.apache.org/jira/secure/attachment/12523735/LUCENE-4011-lucene-links.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-22T23:57:30+0000",
            "content": "IntelliJ can also identify what it deems to be broken links, primarily when a class or method do not exist, or when a class is used in a link but not imported.\n\nI'm attaching a patch which fixes these for lucene-core.  Tell me what you think. ",
            "author": "Chris Male",
            "id": "comment-13259309"
        },
        {
            "date": "2012-04-23T00:02:08+0000",
            "content": "patch looks like it fixes a bunch of bogus stuff \n\nI just glanced thru it, but looks good. ",
            "author": "Robert Muir",
            "id": "comment-13259311"
        },
        {
            "date": "2012-04-23T00:27:00+0000",
            "content": "took another look, +1 ",
            "author": "Robert Muir",
            "id": "comment-13259319"
        },
        {
            "date": "2012-04-23T01:13:01+0000",
            "content": "Another patch fixing the remaining intellij reported problems in all of lucene (primarily the facet module). ",
            "author": "Chris Male",
            "id": "comment-13259328"
        },
        {
            "date": "2012-04-23T01:15:26+0000",
            "content": "+1 ",
            "author": "Robert Muir",
            "id": "comment-13259329"
        },
        {
            "date": "2012-04-23T01:26:12+0000",
            "content": "And for completion, solr.  Will commit this now. ",
            "author": "Chris Male",
            "id": "comment-13259332"
        },
        {
            "date": "2012-04-23T03:46:22+0000",
            "content": "here's the ant task (for running locally or on hudson). the links are fixed for lucene, we can actually turn this on right now if we want in hudson jobs.\n\nfor solr we have to go thru the same process (starting with html escaping etc) before we can enable it, but the task is here. ",
            "author": "Robert Muir",
            "id": "comment-13259350"
        },
        {
            "date": "2012-04-23T04:39:16+0000",
            "content": "I committed the script... tomorrow will test on hudson before adding to nightly tasks,\nand then tackle the solr pieces. ",
            "author": "Robert Muir",
            "id": "comment-13259375"
        },
        {
            "date": "2012-04-23T13:31:35+0000",
            "content": "Thanks Robert!  So nice to have an \"ant javadocs-lint\" target now... ",
            "author": "Michael McCandless",
            "id": "comment-13259599"
        },
        {
            "date": "2012-04-23T13:54:53+0000",
            "content": "Two broken links left and we can kick this one on for Solr.\n\nOne is caused by lucene package organization (LUCENE-4015)\n\nThe other i have no clue yet about (need to investigate). Maybe another javadocs generification bug. ",
            "author": "Robert Muir",
            "id": "comment-13259607"
        },
        {
            "date": "2012-04-23T14:50:49+0000",
            "content": "The last solr broken link (on java7, on java6, there are more)\nseems to be a bug in javadocs?\n\n\n     [exec] build/docs/api/constant-values.html\n     [exec]   BROKEN ANCHOR: build/docs/api/org/apache/solr/client/solrj/beans/Field.html#DEFAULT\n     [exec] \n     [exec] build/docs/api/solrj/constant-values.html\n     [exec]   BROKEN ANCHOR: build/docs/api/solrj/org/apache/solr/client/solrj/beans/Field.html#DEFAULT\n\n\n\nThe problem is that this Field is an annotation with a 'public static final String DEFAULT',\nand javadocs doesn't generate any documentation for this constant in Field.html itself,\nbut refers to it elsewhere.\n\nI think we can exclude this one in the checker since its not our fault... unless I am missing something? ",
            "author": "Robert Muir",
            "id": "comment-13259639"
        },
        {
            "date": "2012-04-23T15:09:04+0000",
            "content": "I added an exclusion for this one, and enabled link checking for solr too. ",
            "author": "Robert Muir",
            "id": "comment-13259644"
        }
    ]
}