{
    "id": "LUCENE-4479",
    "title": "TokenSources.getTokenStream() doesn't return correctly for termvectors with positions but no offsets",
    "details": {
        "components": [
            "modules/highlighter"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "4.0",
        "priority": "Minor",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The javadocs for TokenSources.getTokenStream(Terms, boolean) state:\n\n\"Low level api. Returns a token stream or null if no offset info available\nin index. This can be used to feed the highlighter with a pre-parsed token\nstream\"\n\nHowever, if the Terms instance passed in has positions but no offsets stored, a TokenStream is incorrectly returned, rather than null.\n\nThis has the effect of incorrectly highlighting fields with term vectors and positions, but no offsets.  All highlighting markup is prepended to the beginning of the field.",
    "attachments": {
        "LUCENE-4479.patch": "https://issues.apache.org/jira/secure/attachment/12548892/LUCENE-4479.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-10-12T14:33:29+0000",
            "content": "Patch with a test illustrating the problem ",
            "author": "Alan Woodward",
            "id": "comment-13475020"
        },
        {
            "date": "2012-10-12T14:49:09+0000",
            "content": "\nHowever, if the Terms instance passed in has positions but no offsets stored, a TokenStream is incorrectly returned, rather than null.\n\nActually thats not true: you will get an IllegalArgumentException because OffsetAttribute won't allow offsets to be set to negative values (and the DocsAndPositionsEnum will return -1). \n\nSo something else is going on here! ",
            "author": "Robert Muir",
            "id": "comment-13475037"
        },
        {
            "date": "2012-10-12T14:51:20+0000",
            "content": "but the behavior of throwing IAE is still bogus, as it disagrees with the javadocs... I just feel like there is another bug involved too.\n\nThe javadocs are also wrong, because looking at the code logic it really needs positions AND offsets. ",
            "author": "Robert Muir",
            "id": "comment-13475039"
        },
        {
            "date": "2012-10-12T14:54:19+0000",
            "content": "Ah, but TokenStreamFromTermPositionVector checks if offsets are there, and works round it if they're not.  Which is presumably also a bug? ",
            "author": "Alan Woodward",
            "id": "comment-13475041"
        },
        {
            "date": "2012-10-12T14:56:33+0000",
            "content": "So this snippet:\n\n    if (!tokenPositionsGuaranteedContiguous && hasPositions(tpv)) \n{\n      return new TokenStreamFromTermPositionVector(tpv);\n    }\n\nshould presumably also check for offsets, and then the extra hasOffsets check in TSFTPV can be removed. ",
            "author": "Alan Woodward",
            "id": "comment-13475043"
        },
        {
            "date": "2012-10-12T14:58:24+0000",
            "content": "I'm not sure whats going on here  If you can sort it out it would be fantastic.\n\nIn general if the method requires that the Terms object has offsets or positions the checks should just look like:\nif (tpv.hasOffsets())\n...\nif (tpv.hasPositions())\n...\n\nBut I'm really confused what the contracts of these methods should be. definitely bugs  ",
            "author": "Robert Muir",
            "id": "comment-13475045"
        },
        {
            "date": "2012-10-12T15:07:01+0000",
            "content": "It looks as though these classes are only used by the DefaultSolrHighlighter, which is broken under these circumstances.  I'll make those changes, and see if any tests fail... ",
            "author": "Alan Woodward",
            "id": "comment-13475055"
        },
        {
            "date": "2012-10-12T16:41:38+0000",
            "content": "Patch, changing the API slightly:\n\n\n\tgetTokenStream(Terms, bool) now throws IllegalArgumentException if the Terms does not have offsets.\n\n\n\n\n\trenames getTokenStream(IndexReader, int, String) to getTokenStreamWithOffsets.  Not sure I like the name...  Also added some javadocs here.  Instead of throwing IllegalArgumentExceptions, this just returns null if it can't build a tokenstream for whatever reason (no termvector, no offsets or positions).\n\n\n\nThe only API consumer here is DefaultSolrHighlighter, which I've edited accordingly.  I also added a test to Solr to ensure that fields with termvectors and positions but no offsets are correctly highlighted.\n\nAll tests pass ",
            "author": "Alan Woodward",
            "id": "comment-13475138"
        },
        {
            "date": "2012-10-12T16:49:34+0000",
            "content": "Alan this patch looks good. Thanks for tackling this.\n\nDo you know off-hand if we have a test anywhere for the case of offsets but NO positions (which there is logic to handle, and looks correct, I'm just curious). ",
            "author": "Robert Muir",
            "id": "comment-13475148"
        },
        {
            "date": "2012-10-12T16:58:14+0000",
            "content": "TokenSourcesTest.testOverlapWithOffset() tests it implicitly, although it would be nice to set the FieldType explicitly to document it I suppose. ",
            "author": "Alan Woodward",
            "id": "comment-13475155"
        },
        {
            "date": "2012-10-12T17:13:24+0000",
            "content": "you're right: thanks! ",
            "author": "Robert Muir",
            "id": "comment-13475171"
        },
        {
            "date": "2012-10-17T09:30:07+0000",
            "content": "New patch, with CHANGES entry.  Could someone cast a quick eye over it, and I'll commit. ",
            "author": "Alan Woodward",
            "id": "comment-13477733"
        },
        {
            "date": "2012-10-17T16:14:27+0000",
            "content": "with the current patch, 'ant precommit' fails:\n\n...\n-ecj-javadoc-lint-src:\n [ecj-lint] Compiling 45 source files\n [ecj-lint] ----------\n [ecj-lint] 1. ERROR in /Users/rmuir/workspace/lucene-trunk/lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources.java (at line 275)\n [ecj-lint] \t* @throws IOException\n [ecj-lint] \t          ^^^^^^^^^^^\n [ecj-lint] Javadoc: Description expected after this reference\n [ecj-lint] ----------\n [ecj-lint] 1 problem (1 error)\n\nBUILD FAILED\n\n ",
            "author": "Robert Muir",
            "id": "comment-13477990"
        },
        {
            "date": "2012-10-19T21:49:33+0000",
            "content": "Patch, fixing javadocs errors.  Ant precommit runs successfully. ",
            "author": "Alan Woodward",
            "id": "comment-13480423"
        },
        {
            "date": "2012-10-20T19:39:16+0000",
            "content": "trunk: 1400504\nbranch_4x: 1400505 ",
            "author": "Alan Woodward",
            "id": "comment-13480812"
        },
        {
            "date": "2013-03-22T16:24:46+0000",
            "content": "[branch_4x commit] Alan Woodward\nhttp://svn.apache.org/viewvc?view=revision&revision=1400505\n\nLUCENE-4479: Fix highlighter on index w/ positions but no offsets ",
            "author": "Commit Tag Bot",
            "id": "comment-13610657"
        }
    ]
}