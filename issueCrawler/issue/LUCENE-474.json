{
    "id": "LUCENE-474",
    "title": "High Frequency Terms/Phrases at the Index level",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/other"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "1.4",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "We should be able to find the all the high frequency terms/phrases ( where frequency  is the search criteria / benchmark)",
    "attachments": {
        "collocations.zip": "https://issues.apache.org/jira/secure/attachment/12452742/collocations.zip",
        "colloc.zip": "https://issues.apache.org/jira/secure/attachment/12321015/colloc.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2005-11-28T18:50:25+0000",
            "content": "Look for the HighFreqTerms package in contib area:\nhttp://svn.apache.org/viewcvs.cgi/lucene/java/trunk/contrib/miscellaneous/src/java/org/apache/lucene/misc/HighFreqTerms.java?rev=164963&view=log ",
            "author": "Pasha Bizhan",
            "id": "comment-12358629"
        },
        {
            "date": "2005-11-28T19:05:13+0000",
            "content": "HighFreqTerms.java available in misc package is about terms that have high document frequency.\nActually whats my requirement is\n\nI have set of documents which are indexed\nI need to find out the high frequency terms as well phrases at the index level, not document level\n\nI am able to find out the high frequency terms by iterating through the termDocs.\n\nBut how to find out the  high frequency phrased that are occurring in the index ",
            "author": "Suri Babu B",
            "id": "comment-12358631"
        },
        {
            "date": "2005-11-28T21:02:47+0000",
            "content": "I understand what is high freq terms. But what is high freq phrases?\nCould you please explain your index structure? ",
            "author": "Pasha Bizhan",
            "id": "comment-12358643"
        },
        {
            "date": "2005-11-28T21:33:50+0000",
            "content": "High Frequency phrases are like high frequency terms but they will have multiple terms repeated in the index\n\nLets say\n the X document has  the phrase \"Session Bean\" 12 times \nthe Y document has  the phrase \"Session Bean\" 2 times \nthe Y document has  the phrase Bean 3 times \nthe Z document has  the phrase \"Bean\" 5 times \n\nso I should get a output like below\n\nPhrase/Term                                       Frequency\n------------------                                       ---------------\nSession Bean                                          14\nBean                                                             8 ",
            "author": "Suri Babu B",
            "id": "comment-12358648"
        },
        {
            "date": "2005-11-29T00:06:50+0000",
            "content": "Using JIRA for discussion?  Why, when you can use java-user@lucene mailing list for that?\nYou can figure out common/frequent phrases using the existing Lucene API by keeping track of terms and their positions.  The naive way may be slow and memory intensive. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12358659"
        },
        {
            "date": "2005-11-29T04:59:39+0000",
            "content": "Here's some code that I've used before to find phrases in an index - see CollocationFinder.java.\nIf your index has termvector support enabled you can run it to mine the collocated terms. This is typically a long operation that you dont want to do too often.\nThe CollocationIndexer can be used to store the mined collocations in an index.\n\nPossible uses for collocations are:\n\n\tautomatically identifying candidate terms in a query that can be turned into a phrase query\n\tbetter spelling correction by using all terms in query as context to pick the most likely spelling variation\n\n\n\nHaven't done too much with this code but I've added it here because it sounds like it could be relevant\n\nCheers\nMark\n ",
            "author": "Mark Harwood",
            "id": "comment-12358701"
        },
        {
            "date": "2005-11-29T20:30:15+0000",
            "content": "Hi Mark,\n\n\nI have tried executing your classes but I failed to see the output\ncoz it gave me class cast exception  at the following line\n\n            //get TermPositions for matching doc\n            TermPositionVector tpv = (TermPositionVector) reader.getTermFreqVector(docId, fieldName);\n\nand while indexing , I have added the contents field like below\n\nField.Text(\"contents\", fileInfo.getReader(),true); // isStoreTermVector to true\n\nand also found some mismatches in the Field class that I have and Field class that you are referring in the CollocationIndexer class\n\nI am using lucene 1.4.3 version and also observed 1.4.3 doesnot have implementation for TermPositionVector\n\nPls let me know if I am using old ver or i have to update some patches in my env\n\n\nThanks \nSuri ",
            "author": "Suri Babu B",
            "id": "comment-12358778"
        },
        {
            "date": "2005-11-29T21:53:55+0000",
            "content": "It looks like you will need a later version. Try check out the latest code from Subversion\n\nMark ",
            "author": "Mark Harwood",
            "id": "comment-12358786"
        },
        {
            "date": "2008-01-18T14:24:51+0000",
            "content": "Hi Mark,\n\nI looked at this zip, and it seems useful, but are you intending to donate it?  If so, can we get a patch? ",
            "author": "Grant Ingersoll",
            "id": "comment-12560398"
        },
        {
            "date": "2008-05-17T03:27:41+0000",
            "content": "Mark,\nCan we:\n\n\tchange package names to o.a.l.index.collocations\n\tslap ASL to all source code\n\treformat to fit Lucene\n\tadd contrib-style build.xml\n\tsvn add + svn diff to get a patch\n\tpray for unit tests but commit to contrib/collcations even if you don't have time for them\n\tanything else?\n\n ",
            "author": "Otis Gospodnetic",
            "id": "comment-12597697"
        },
        {
            "date": "2010-08-22T03:29:31+0000",
            "content": "I saw some activity on the term collocations in the lucene user forum recently and decided to make a few changes to the colloc.zip package which Mark worked on.  I used it before and it worked well for my project.  \n\nI ended up doing some fixes and refactoring and adding couple of unit tests, as well as a new class which will search the collocated terms if provided with a term.  This version works with Lucene 3.0.2.  Also, I changed package names, added the license verbage, as well as added maven and ant for contrib packaging.  \n\nIf Mark is OK with these changes, it could be published as a contrib. ",
            "author": "Ivan Provalov",
            "id": "comment-12901128"
        },
        {
            "date": "2010-08-22T13:50:40+0000",
            "content": "Included the scoring in the CollocationsSearcher which now will return the LinkedHashMap of Collocated Terms and their scores relative to the query term.  Did some minor refactoring and changed the test. ",
            "author": "Ivan Provalov",
            "id": "comment-12901164"
        },
        {
            "date": "2013-03-03T17:46:34+0000",
            "content": "It's been about 2-1/2 years since anyone touched this, and I suspect that much of the underlying terms data is now available so I'll close this. We can re-open if there's interest. SPRING_CLEANING_2013 ",
            "author": "Erick Erickson",
            "id": "comment-13591799"
        }
    ]
}