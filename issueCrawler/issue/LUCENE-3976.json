{
    "id": "LUCENE-3976",
    "title": "Improve error messages for unsupported Hunspell formats",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/analysis"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "Our hunspell implementation is never going to be able to support the huge variety of formats that are out there, especially since our impl is based on papers written on the topic rather than being a pure port.\n\nRecently we ran into the following suffix rule:\n\n\nSFX CA 0 /CaCp\n\n\nDue to the missing regex conditional, an AOE was being thrown, which made it difficult to diagnose the problem.\n\nWe should instead try to provide better error messages showing what we were unable to parse.",
    "attachments": {
        "LUCENE-3976.patch": "https://issues.apache.org/jira/secure/attachment/12523967/LUCENE-3976.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-24T12:47:59+0000",
            "content": "First draft patch: I added a check for that specific problem with an understandable error. In fact, since we are going to read the first 5 elements from an array, better to check if there are at least 5 elements.\nNot sure how we can improve generic errors handling. Let me know your thoughts. ",
            "author": "Luca Cavanna",
            "id": "comment-13260487"
        },
        {
            "date": "2012-04-24T12:50:37+0000",
            "content": "We found out that some recent dutch dictionaries contain rule like the one mentioned (Starting from version 2.00 if I'm correct). I'm going to look at that specific problem and see how we can parse those affix rules. ",
            "author": "Luca Cavanna",
            "id": "comment-13260490"
        },
        {
            "date": "2012-05-07T11:03:22+0000",
            "content": "The specific case of affix rule with less than 5 elements has been addressed in LUCENE-4019. Please ignore my first patch here since it's related to that specific case which is now handled in a different way in LUCENE-4019.\nI'm looking into improving error messages anyway, possibly in a generic way. ",
            "author": "Luca Cavanna",
            "id": "comment-13269520"
        },
        {
            "date": "2012-05-07T12:08:42+0000",
            "content": "The patch tries to address unexpected errors while parsing affix files and dictionaries. I just added an external try catch with a generic \"Error while parsing the affix/dictionary file\", in my opinion better than just eventually throwing some unchecked exception. Let me know if there's something else we can improve meanwhile. ",
            "author": "Luca Cavanna",
            "id": "comment-13269560"
        },
        {
            "date": "2012-06-01T08:10:29+0000",
            "content": "Hi Luca,\n\nI'm unsure about this approach.  What other kind of Exceptions can be thrown other than IOExceptions? I think we should explore what those possible errors are and fix them at their source, to provide targeted Exceptions.  If there is a problem parsing, then we should thrown a ParseException with the line number causing the problem. ",
            "author": "Chris Male",
            "id": "comment-13287255"
        },
        {
            "date": "2012-06-01T08:20:48+0000",
            "content": "Hi Chris, \nI agree with you. On the other hand with the affix rule mentioned, before LUCENE-4019 we had an AOE, so the additional catch would have been useful just to throw a nicer error message like \"Error while parsing the affix file\". That one has been solved at its source, for now I don't see any other possible errors but I'm sure there are some, maybe plenty since we support only a subset of the formats and features.\nIt was just a way to introduce a generic error message but I totally agree that the right apporach would be fixing everything at the source. ",
            "author": "Luca Cavanna",
            "id": "comment-13287260"
        },
        {
            "date": "2012-06-01T09:22:09+0000",
            "content": "Hi Luca,\n\nI think I'm going to close this and instead we can tackle this on a per-error basis. ",
            "author": "Chris Male",
            "id": "comment-13287286"
        },
        {
            "date": "2012-06-01T09:24:27+0000",
            "content": "Ok, that's fine! ",
            "author": "Luca Cavanna",
            "id": "comment-13287290"
        },
        {
            "date": "2012-06-01T09:27:11+0000",
            "content": "We will tackle error messages on a per-error basis, thanks for your help none the less Luca. ",
            "author": "Chris Male",
            "id": "comment-13287292"
        }
    ]
}