{
    "id": "LUCENE-4221",
    "title": "CheckIndex is overeager for term vector offsets bounds checks",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In some situations (like running shingles twice), you end out with a case where startOffset > endOffset.\n\nWe prevent this in IndexWriter for postings offsets, but we never do any validation here for term vectors (at some point, maybe we should make a plan to address this?)\n\nAnyway, currently CheckIndex will wrongly fail in this situation, which some of our own analyzers even do (e.g. LUCENE-3920)...\n\nThis is an overly-eager validation in checkindex (for vectors, we cannot safely do these assertions as it was/is never enforced by IndexWriter, only for postings offsets).",
    "attachments": {
        "LUCENE-4221.patch": "https://issues.apache.org/jira/secure/attachment/12536532/LUCENE-4221.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-15T02:53:22+0000",
            "content": "This patch disables all the offsets checks for term vectors.\n\nI'd like a plan to start enforcing this stuff in IndexWriter for term vectors as well so we can actually have these checks on at some point in the future. Sure maybe its annoying that things like ngrams violate all these rules and will fail if term vectors are on, but these are broken analyzers that need to be fixed and we shouldn't allow bogus data in the index.\n\nThe problem with the current situation (besides checkindex), is if someone has such bogus offsets in an older index\nand they try to use something like Highlighter they will just trip errors from OffsetAttribute, etc. So they won't really work.\n\nBest idea i have so far:\n\n\tFix LUCENE-4180 so that we can differentiate between 4.0-alpha and 4.0-beta indexes\n\tChange default term vectors merge impl to buffer one doc in RAM, if it has invalid offsets, clear the offsets bit and dont write them.\n\tOnly enable bulk merge for 4.x codec, when the segment was written by 4.0-beta+, otherwise just call super.merge\n\n\n\nOne downside is that we must keep the one-doc buffering (part 2) even in trunk until 6.x to support 4.0-alpha indexes, but its too late now. ",
            "author": "Robert Muir",
            "id": "comment-13414566"
        },
        {
            "date": "2012-07-15T12:03:39+0000",
            "content": "+1 to disabling the checks (the patch): CheckIndex should never fail just because analyzer was buggy.\n\n+1 also for that plan to remove bad offsets on merge. ",
            "author": "Michael McCandless",
            "id": "comment-13414618"
        },
        {
            "date": "2012-07-15T12:08:53+0000",
            "content": "same patch with a standalone test ",
            "author": "Robert Muir",
            "id": "comment-13414620"
        },
        {
            "date": "2012-08-03T13:20:42+0000",
            "content": "The fix is already committed ",
            "author": "Robert Muir",
            "id": "comment-13428070"
        }
    ]
}