{
    "id": "LUCENE-4024",
    "title": "FuzzyQuery should never do edit distance > 2",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Edit distance 1 and 2 are now very very fast compared to 3.x (100X-200X faster) ... but edit distance 3 will fallback to the super-slow scan all terms in 3.x, which is not graceful degradation.\n\nNot sure how to fix it ... mabye we have a SlowFuzzyQuery?  And FuzzyQuery throws exc if you try to ask it to be slow?  Or, we add boolean (off by default) that you must turn on to allow slow one..?",
    "attachments": {
        "LUCENE-4024.patch": "https://issues.apache.org/jira/secure/attachment/12525335/LUCENE-4024.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-05-02T18:48:04+0000",
            "content": "I agree: this crazy floating point specification of distance is hairy to be compatible with 3.x\n\nBut i think this is all a huge trap, attached is a patch that:\n\n\tremoves slow capability from FuzzyTermsEnum\n\tCleans up FuzzyQuery: removes float-ctors, allows transpositions as primitive edits, etc.\n\tadds a deprecated SlowFuzzyQuery to sandbox/ that has the old ctors\n\tadds a deprecated SlowFuzzyTermsEnum that it uses, which extends FuzzyTermsEnum and adds slowness.\n\n\n\nI added a helper static method (deprecated) to FuzzyQuery that converts from the old float sim stuff to number of edits, but ceilinged at what automata support (this is used to easily cut over queryparsers).\n\nAll tests pass but patch needs javadocs. Especially I think we should adjust the query syntax and mark the old ~0.xxx stuff as deprecated, since qps can already do do ~1 ~2 now. Then we can really cleanup for 5.0\n\nP.S. patch is huge since i didnt use SVN adds/removes, but makes it easy to apply. ",
            "author": "Robert Muir",
            "id": "comment-13266807"
        },
        {
            "date": "2012-05-02T19:08:58+0000",
            "content": "+1\n\nNice to see LinearFuzzyTE moved out of core! ",
            "author": "Michael McCandless",
            "id": "comment-13266829"
        },
        {
            "date": "2012-05-07T17:54:05+0000",
            "content": "I'm not sure that the floating point spec should be deprecated. I'd like to have the option of distance 1 for short terms and distance 2 for longer ones. Distance two is necessary to handle transpositions, but gets a very broad match from short terms. Doing that through the float spec might be clumsy, but it would work. ",
            "author": "Walter Underwood",
            "id": "comment-13269819"
        },
        {
            "date": "2012-05-07T18:14:06+0000",
            "content": "\nDistance two is necessary to handle transpositions\n\nThats not true. The levenshtein distance has changed to include transposition as a primitive edit. ",
            "author": "Robert Muir",
            "id": "comment-13269833"
        },
        {
            "date": "2012-05-07T19:20:01+0000",
            "content": "The levenshtein distance has changed to include transposition as a primitive edit\n\nIs there any user-visible doc about that change? I don't see any mention in CHANGES.txt or the Javadoc for FuzzyQuery.\n\nAt least according to the Wikipedia, the addition of transposition as a primitive would be referred to as the \"Damerau\u2013Levenshtein distance\".\nhttp://en.wikipedia.org/wiki/Levenshtein_distance\nhttp://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance\n\nAt least the Javadoc for FuzzyQuery should have a link to whatever the technically correct specification is.\n\nA few examples would be nice as well.\n ",
            "author": "Jack Krupansky",
            "id": "comment-13269913"
        },
        {
            "date": "2012-05-07T19:25:47+0000",
            "content": "You have to look at the commit, not the patch (which was missing javadocs). See subversion commits tab. ",
            "author": "Robert Muir",
            "id": "comment-13269922"
        },
        {
            "date": "2012-05-07T19:45:16+0000",
            "content": "Looking at the commit, the Javadoc does not give the default for transpositions. Reading the code, it defaults to true, which is a behavior change. That's fine, but it should be documented.\n\nLike Jack, I think it would be a good idea to specifically say Damerau-Levenshtein. ",
            "author": "Walter Underwood",
            "id": "comment-13269936"
        },
        {
            "date": "2012-05-07T19:51:26+0000",
            "content": "Did you look at mmmm say the changes to FuzzyQuery.java? package.html?\n\n /** Implements the fuzzy search query. The similarity measurement\n- * is based on the Levenshtein (edit distance) algorithm.\n+ * is based on the Damerau-Levenshtein (optimal string alignment) algorithm.\n  * \n\n\n\n\n+   * @param transpositions true if transpositions should be treated as a primitive\n+   *        edit operation. If this is false, comparisons will implement the classic\n+   *        Levenshtein algorithm.\n\n\n\n\n-<p>Lucene supports fuzzy searches based on the Levenshtein Distance, or Edit Distance algorithm. \n+<p>Lucene supports fuzzy searches based on Damerau-Levenshtein Distance. \n\n\n\n ",
            "author": "Robert Muir",
            "id": "comment-13269941"
        },
        {
            "date": "2012-05-07T20:04:08+0000",
            "content": "I updated svn and see the Javadoc now. A notation in CHANGES.txt would be nice too since this is a user-visiable issue. Should there be a separate issue to update doc for the query parser(s) beyond Lucene (I see that Lucene Query Parser is updated)? ",
            "author": "Jack Krupansky",
            "id": "comment-13269951"
        },
        {
            "date": "2012-05-07T20:05:08+0000",
            "content": "Yes, that is exactly where I looked, and I missed it, sorry. Up late with a barfing child and a barfing Solr server in prod.\n ",
            "author": "Walter Underwood",
            "id": "comment-13269953"
        },
        {
            "date": "2012-05-07T20:07:44+0000",
            "content": "I updated svn and see the Javadoc now.\n\nJack, do you know about the commit notifications mailing list?  If not, see http://lucene.apache.org/core/discussion.html for details. ",
            "author": "Steve Rowe",
            "id": "comment-13269958"
        },
        {
            "date": "2012-05-07T20:40:48+0000",
            "content": "\nShould there be a separate issue to update doc for the query parser(s) beyond Lucene (I see that Lucene Query Parser is updated)?\n\nAll queryparsers were updated. But ClassicQueryParser (the lucene one) is the only one that really \ndocuments its syntax though, so thats where the doc update occurred.\n\nThe rest of the QPs mostly re-use ClassicQueryParser's syntax and don't document any different syntax.\n\nSeriously (unrelated) if you have javadocs for that queryparser module, in general (especially classes with no javadocs at all!!!!) just throw them up whereever, email list, this issue, some new issue, I dont care. Ill commit them. ",
            "author": "Robert Muir",
            "id": "comment-13269981"
        },
        {
            "date": "2012-05-08T02:03:45+0000",
            "content": "I've opened LUCENE-4040 to try to improve the documentation for QPs. ",
            "author": "Chris Male",
            "id": "comment-13270133"
        }
    ]
}