{
    "id": "LUCENE-1650",
    "title": "Small fix in CustomScoreQuery JavaDoc",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/javadocs"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I have fixed the javadoc for  \"Modified Score\" formular in CustomScoreQuery. - Patch attached: customScoreQuery_JavaDoc.patch \n\nI'm quite curious why the method:\n public float customScore(int doc, float subQueryScore, float valSrcScores[]) \n\ncalls public float customScore(int doc, float subQueryScore, float valSrcScore])  only in 2 of the 3 cases which makes the choice to override either one of the customScore methods dependent on the number of ValueSourceQuery passed to the constructor. I figure it would be more consistent if it would call the latter in all 3 cases.\n\nI also attached a patch which proposes a fix for that issue. The patch does also include the JavaDoc issue mentioned above.\n\n\tcustomScoreQuery_CodeChange+JavaDoc.patch",
    "attachments": {
        "LUCENE-1650.patch": "https://issues.apache.org/jira/secure/attachment/12410828/LUCENE-1650.patch",
        "customScoreQuery_JavaDoc.patch": "https://issues.apache.org/jira/secure/attachment/12408649/customScoreQuery_JavaDoc.patch",
        "customScoreQuery_CodeChange+JavaDoc.patch": "https://issues.apache.org/jira/secure/attachment/12408650/customScoreQuery_CodeChange%2BJavaDoc.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-06-11T03:16:09+0000",
            "content": "This looks like it makes sense to me. Unless anyone objects, I'd like to commit it for 2.9. ",
            "author": "Mark Miller",
            "id": "comment-12718286"
        },
        {
            "date": "2009-06-24T14:55:38+0000",
            "content": "Im going to commit this soon, both changes. ",
            "author": "Mark Miller",
            "id": "comment-12723589"
        },
        {
            "date": "2009-07-06T16:30:16+0000",
            "content": "No I'm not  Yonik, could you take a peak at this?\n\nWhy the javadoc change? It used to refer to the method parameter - that makes sense to me ? Where is valSrcScore bound?\n\nAs far as the second change, its a logical change, but it is a back compat change. I'm thinking it could be considered a bug fix, but the old weirdness worked if\nyou followed the javadoc no?\n\nI'm pro the change, and it prob doesnt make sense to add a static or property to allow the old behaviour, but another opinion... ",
            "author": "Mark Miller",
            "id": "comment-12727612"
        },
        {
            "date": "2009-07-06T16:34:19+0000",
            "content": "updated to trunk in any case. ",
            "author": "Mark Miller",
            "id": "comment-12727613"
        },
        {
            "date": "2009-07-06T18:25:50+0000",
            "content": "Not sure why you wanted me to take a peek - this isn't part of the original Solr function query stuff, so I won't know any more than anyone else.\nAnyway the current code looks like it's working as designed?  Perhaps it wasn't the best interface, but not worth breaking compatibility over, and not necessary to improve for 2.9 IMO. ",
            "author": "Yonik Seeley",
            "id": "comment-12727675"
        },
        {
            "date": "2009-07-06T18:38:44+0000",
            "content": "Not sure why you wanted me to take a peek - this isn't part of the original Solr function query stuff, so I won't know any more than anyone else.\n\nBecause you knew that, and I didnt  And because your pretty smart about these things. And your usually happy to ignore when you are not interested, so I figured you always had that out here  I think there are usually okay odds that you might know more than someone else.\n\nAnyway the current code looks like it's working as designed? Perhaps it wasn't the best interface, but not worth breaking compatibility over, and not necessary to improve for 2.9 IMO.\n\nThat's  kind of what I started thinking, and I just wanted someone smarter than me to confirm or deny. It also just seemed like it was very unlikely that it would affect anyone if the change was made, so why not just make it consistent. I could go either way, but technically it is a backcompat break, and it would be easier to just leave it.\n\nI'll just push it off 2.9 for now.\n\nI'm just trying to resolve/push 2.9 issues - didnt mean to single you out for any specific work  ",
            "author": "Mark Miller",
            "id": "comment-12727688"
        },
        {
            "date": "2013-07-23T18:44:43+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717039"
        },
        {
            "date": "2014-04-16T12:54:29+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970773"
        }
    ]
}