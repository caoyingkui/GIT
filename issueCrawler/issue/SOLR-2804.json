{
    "id": "SOLR-2804",
    "title": "Logging error causes entire DIH process to fail",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "SEVERE: Full Import failed:java.lang.ClassCastException:\njava.util.ArrayList cannot be cast to java.lang.String\n       at org.apache.solr.common.util.NamedList.getName(NamedList.java:127)\n       at org.apache.solr.common.util.NamedList.toString(NamedList.java:263)\n       at java.lang.String.valueOf(String.java:2826)\n       at java.lang.StringBuilder.append(StringBuilder.java:115)\n       at org.apache.solr.update.processor.LogUpdateProcessor.finish(LogUpdateProcessorFactory.java:188)\n       at org.apache.solr.handler.dataimport.SolrWriter.close(SolrWriter.java:57)\n       at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:265)\n       at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:372)\n       at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:440)\n       at org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:421)",
    "attachments": {
        "SOLR-2804.patch": "https://issues.apache.org/jira/secure/attachment/12510425/SOLR-2804.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Pulkit Singhal",
            "id": "comment-13118959",
            "date": "2011-10-02T04:13:42+0000",
            "content": "Its rather strange stacktrace. An entire 10000+ dataset finishes up only to end up crashing & burning\ndue to a log statement \n\nBased on what I can tell from the stacktrace and the 4.x trunk source\ncode, it seems that the follwoign log statement dies:\n   //LogUpdateProcessorFactory.java:188\n   log.info( \"\"+toLog + \" 0 \" + (elapsed) );\n\nEventually at the strict cast:\n   //NamedList.java:127\n   return (String)nvPairs.get(idx << 1);\n\nI was wondering what kind of mistaken data would I have to be crunching in order to have it end up getting misplaced into:\n   //LogUpdateProcessorFactory.java:76\n   private final NamedList<Object> toLog;\nto cause the java.util.ArrayList cannot be cast to java.lang.String issue?\n\nCould it be due to the multivalued fields that I'm trying to index?\nIs this a bug or just a mistake in how I use DIH, please let me know\nyour thoughts! "
        },
        {
            "author": "Adam Neal",
            "id": "comment-13134141",
            "date": "2011-10-24T15:27:20+0000",
            "content": "Are you using the multithreading in the DIH? I have the same problem but when I remove the maxthreads attribute the indexing completes successfully. "
        },
        {
            "author": "Adam Neal",
            "id": "comment-13134800",
            "date": "2011-10-25T07:15:00+0000",
            "content": "Just re-read my comment, I mean the threads attribute not maxthreads.... "
        },
        {
            "author": "Michael Haeusler",
            "id": "comment-13174156",
            "date": "2011-12-21T15:46:47+0000",
            "content": "This problem also occurs with Solr 3.5.0. The stacktrace is almost identical:\n\nDec 20, 2011 11:22:36 AM org.apache.solr.common.SolrException log\nSEVERE: Full Import failed:java.lang.ClassCastException: java.util.ArrayList cannot be cast to java.lang.String\n        at org.apache.solr.common.util.NamedList.getName(NamedList.java:127)\n        at org.apache.solr.common.util.NamedList.toString(NamedList.java:253)\n        at java.lang.String.valueOf(String.java:2826)\n        at java.lang.StringBuilder.append(StringBuilder.java:115)\n        at org.apache.solr.update.processor.LogUpdateProcessor.finish(LogUpdateProcessorFactory.java:188)\n        at org.apache.solr.handler.dataimport.SolrWriter.finish(SolrWriter.java:133)\n        at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:213)\n        at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:359)\n        at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:427)\n        at org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:408) "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13177517",
            "date": "2011-12-30T02:38:55+0000",
            "content": "We are having this issue as well\n\nNFO: Wrote last indexed time to C:\\solr\\jetty\\example\\solr\\provider\\conf\\dataimport.properties\nDec 29, 2011 3:42:58 PM org.apache.solr.common.SolrException log\nSEVERE: Full Import failed:java.lang.ClassCastException: java.util.ArrayList cannot be cast to java.lang.String\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.common.util.NamedList.getName(NamedList.java:127)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.common.util.NamedList.toString(NamedList.java:253)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at java.lang.String.valueOf(Unknown Source)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at java.lang.StringBuilder.append(Unknown Source)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.LogUpdateProcessor.finish(LogUpdateProcessorFactory.java:188)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.SolrWriter.finish(SolrWriter.java:133)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:213)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:359)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:427)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:408)\n\u00a0\nAll environments are using the same db and config files are the same \u2013 so it appears to be problem with SOLR.\u00a0 This happens right at the end of indexing. \u00a0The fix on Test the other day was to just re-run the index.\u00a0 "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13177731",
            "date": "2011-12-30T19:28:18+0000",
            "content": "In according to LogUpdateProcessorFactory javadoc you can disable it by setting org.apache.solr.update.processor.LogUpdateProcessor logger level below INFO "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13178244",
            "date": "2012-01-01T22:26:36+0000",
            "content": "You are right. The root cause is the NamedList, which is not thread-safe. I moved it onto ConcurrentLinkedQueue, and excessively covered it by the test.\n\nCommiters, please have a look to the patch. It's even more related to the core functionality than the well known DIH issues like SOLR-2947.   "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13178887",
            "date": "2012-01-03T18:13:07+0000",
            "content": "Here is the patch migrated for 3.x branch. Please consider it before 3.6 release. It blocks all users who indexe in multiple threads whether via SolrJ or DIH. Though it can be easy worked around by amending logging level.  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13179174",
            "date": "2012-01-04T00:42:20+0000",
            "content": "I've only skimmed the patch, but it seems like overkill for the bug as i understand it \u2013 but maybe i'm just missing something...\n\nHas anyone actually seen this bug reproduce in any situation where they weren't using DIH multithreaded mode?\n\nIt blocks all users who index in multiple threads whether via SolrJ or DIH\n\nThat should not be the case at all for SOlrJ users and people using DIH in single threaded mode \u2013 every UpdateProcessorFactory (including the LogUpdateprocessorFactory) creates new UpdateProcessor instances for every update request \u2013 so no concurrency protection should be required for multiple threads processing concurrent requests individually.  A simple NamedList to collect the results to be logged for each request should be completely sufficient.\n\nBased on the comments so far, it sounds like the bug is multiple threads in DIH attempting to update the same NamedList concurrently \u2013 which is most certainly not safe for DIH to do (NamedList has never been, nor been documented to suggest it might be, thread safe)\n\nChanging LogUpdateprocessorFactory to add concurrency boundaries to something that is already suppose to only be single thread access seems like it will only slow down all the use cases that are already doing the right thing and working fine \u2013 let's fix the concurrency issue in the place where there is concurrency code: figure out when/why/where DIH is letting multiple threads manipulate the toLog NamedList and fix that. "
        },
        {
            "author": "Antony Stubbs",
            "id": "comment-13179181",
            "date": "2012-01-04T00:49:24+0000",
            "content": "Hi. I keep forgetting to change the logging level in the admin tool when I restart. Is there an easy way to permanently change this setting? perhaps -D param? "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13179424",
            "date": "2012-01-04T11:43:09+0000",
            "content": "@Hoss\n\ncreates new UpdateProcessor instances for every update request \u2013 so no concurrency protection should be required for multiple threads processing concurrent requests individually.\n\nThanks. That's what I've missed. There is no sense in my patch. Looks like DIH should instantiate separate DocWriter per  thread. But before do that, we need to move SOLR-2933, SOLR-2947 forward. Can't you help with them?\n\n@Antony\nCould you please refer to your underlying logging implementation manual whether it java.util.logging, log4j or logback.  "
        },
        {
            "author": "Antony Stubbs",
            "id": "comment-13179941",
            "date": "2012-01-04T22:26:40+0000",
            "content": "Seems this causes SOLR-3003 :/\n\n@Mikhail, what does solr use by default? Can't see anything.. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13180305",
            "date": "2012-01-05T12:09:28+0000",
            "content": "@Antony,\n\nAFAIK it's java.util.logging and you have to learn http://docs.oracle.com/javase/1.4.2/docs/api/java/util/logging/LogManager.html by heart\nfor more details see https://issues.apache.org/jira/browse/SOLR-2487\n\nexact answer can be gotten by searching slf4j-*.jar in .war and /lib folders. \n "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13185240",
            "date": "2012-01-12T21:13:57+0000",
            "content": "Hello, \nSecond attempt is attached. I try to allocate separate DIHWriter (update processor chain) per  ThreadEnityProcessorWrapper to use it from the single thread only. \n\nUnfortunately I based it on my SOLR-3011 patch. You can take the patched code from this branch https://github.com/m-khl/solr-patches/tree/solr2804  "
        },
        {
            "author": "James Dyer",
            "id": "comment-13240618",
            "date": "2012-03-28T18:45:02+0000",
            "content": "The \"threads\" feature was removed from DIH in Trunk/4.x (see SOLR-3262). Some \"threads\" bugs were fixed in version 3.6, the last release in which \"threads\" is available. (see SOLR-3011).\n\nTo work around this issue with Solr 3.6, set the LogUpdateProcessorFactory level below \"INFO\".  (See comments on this issue for more information.) "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13290375",
            "date": "2012-06-06T20:34:39+0000",
            "content": "misguiding attachments 1th 3rd Jan has been removed   "
        }
    ]
}