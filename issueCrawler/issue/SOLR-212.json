{
    "id": "SOLR-212",
    "title": "Embeddable class to call solr directly",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "For some embedded applications, it is useful to call solr without running an HTTP server.  This class mimics the behavior you would get if you sent the request through an HTTP connection.  It is designed to work nicely (ie simple) with JNI\n\nthe main function is:\n\npublic class DirectSolrConnection \n{\n  String request( String pathAndParams, String body ) throws Exception\n  {\n    ...\n  }\n}",
    "attachments": {
        "DirectSolrConnection.java": "https://issues.apache.org/jira/secure/attachment/12362985/DirectSolrConnection.java",
        "embeddedSolr.zip": "https://issues.apache.org/jira/secure/attachment/12356680/embeddedSolr.zip",
        "SOLR-212-DirectSolrConnection.patch": "https://issues.apache.org/jira/secure/attachment/12356096/SOLR-212-DirectSolrConnection.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12491100",
            "date": "2007-04-23T23:23:32+0000",
            "content": "This class now sits in: o.a.s.servlet because it uses package protected request parsing functions.\n\nIt has a really simple test that should be extended.\n\nExample usage:\n\n DirectSolrConnection solr = new DirectSolrConnection();\n String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n String xml = solr.request( \"/update\", \"<add><doc><field ...\" ); "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12492372",
            "date": "2007-04-27T19:02:46+0000",
            "content": "Mucho cool.  I see the DirectSolrConnection.coffee doesn't have ASL v2 in it.\nHow does this relate to the code I see on http://wiki.apache.org/solr/EmbeddedSolr  ?\nTypo: initalized -> initialized (in javadoc + code) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492383",
            "date": "2007-04-27T20:22:42+0000",
            "content": "Added header and fixed \"Initialized\" typo\n(fixed the typo in Config r533207)\n\nThis approach differs from the one outlined in http://wiki.apache.org/solr/EmbeddedSolr in that it is strictly a text interface that mimics the request and response stream.  The other approach gives you direct access to the lucene Document class.  The text approach is nice because it means the same code would work if it needed to run across a network.\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492517",
            "date": "2007-04-28T20:41:25+0000",
            "content": "Adding dataDir to an optional constructor. "
        },
        {
            "author": "Brian Whitman",
            "id": "comment-12492518",
            "date": "2007-04-28T21:19:00+0000",
            "content": "Much love from user land on this one. I just successfully put solr in a C app without any webserver running using JNI.\n\nAfter I clean up my JNI calling code I can post an example app here to show how it's done on the client side if anyone is interested?\n\n\n\n\n\n\n "
        },
        {
            "author": "Brian Whitman",
            "id": "comment-12492522",
            "date": "2007-04-28T22:44:33+0000",
            "content": "Since the main use case of SOLR-212 is to embed it in client applications, we should be careful about logging. As of now SOLR-212 will spit stuff all over stderr.\n\nI suggest putting this\n\nSystem.setProperty(\"java.util.logging.config.file\", instanceDir+\"/conf/logging.properties\");\n\nnear line 79 of DirectSolrConnection.java. That way, if a developer/user chooses, they can put a logging.prop file in conf and set direct logging of Solr requests either to their own application logs or a file. If the conf/logging.properties file does not exist, I believe the default logging.properties will be used (which is what happens now.)\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492526",
            "date": "2007-04-28T23:45:31+0000",
            "content": "Updated to take an (optional) logging path "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12492534",
            "date": "2007-04-29T01:48:22+0000",
            "content": "Brian: interested! "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492587",
            "date": "2007-04-29T18:03:35+0000",
            "content": "Added some real tests (it adds/delete/searches for documents) and fixed the things that broke  "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492590",
            "date": "2007-04-29T18:33:45+0000",
            "content": "added in rev 533538\n\nYes Brian, we'd love to see the JNI code!\n "
        },
        {
            "author": "Brian Whitman",
            "id": "comment-12492591",
            "date": "2007-04-29T18:46:48+0000",
            "content": "Am working on extracting it from Cocoa as we speak... watch this space!\n "
        },
        {
            "author": "Brian Whitman",
            "id": "comment-12493255",
            "date": "2007-05-03T00:52:11+0000",
            "content": "I didn't have time to extract it from Cocoa/ObjC. Here is the xcode project with everything anyway \u2013 so right now you'll need OSX to try this out. This is a very simple test of Ryan's SOLR-212 patch, it queries, adds a document and commits, all without a web server! Let me know if you have any questions. --brian "
        },
        {
            "author": "J.J. Larrea",
            "id": "comment-12493466",
            "date": "2007-05-03T19:12:02+0000",
            "content": "One issue which comes up both DirectSolrConnection.java and the http://wiki.apache.org/solr/EmbeddedSolr technique (which I have started using for a custom indexer)  is that the SolrCore constructor will always create an initial searcher, and doing so will execute any warming SolrEventListeners defined in the config, whether or not the application needs it. Besides delaying startup and wasting cycles, it can cause the allocation of significant amounts of memory for sort FieldCaches, Solr caches, and the like, none of which will be used for a non-search application.  And\n\nOther than maintaining 2 sets of config files differening only in whether warmup queries are defined, does anyone have any ideas for how warmup can be selectively enabled based on the calling context? "
        },
        {
            "author": "damu liu",
            "id": "comment-12517011",
            "date": "2007-08-01T16:49:28+0000",
            "content": "The DirectSolrConnection  class should have an additional method added:\n\npublic void clearup() \n{\n\t  core.close();\n  }\n\notherwise, the program cannot stop, there are searcher and listeners running in other thread. Use this method to clear the resources. "
        },
        {
            "author": "damu liu",
            "id": "comment-12517012",
            "date": "2007-08-01T16:51:06+0000",
            "content": "My version of  DirectSolrConnection  with clearup method added. "
        },
        {
            "author": "damu liu",
            "id": "comment-12517013",
            "date": "2007-08-01T16:54:49+0000",
            "content": "With clear up method added to clear up used resources "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12517049",
            "date": "2007-08-01T19:14:26+0000",
            "content": "I added a \"close()\" method in rev 561922 "
        },
        {
            "author": "damu liu",
            "id": "comment-12517346",
            "date": "2007-08-02T19:20:57+0000",
            "content": "That is great! "
        },
        {
            "author": "zhang.zuxin",
            "id": "comment-12523177",
            "date": "2007-08-28T07:25:35+0000",
            "content": "Expect standard C/C++ versions with a solr plgu-in! "
        }
    ]
}