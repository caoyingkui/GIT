{
    "id": "SOLR-3916",
    "title": "fl parsing is sensitive to newlines at the end of field names",
    "details": {
        "affect_versions": "4.0-BETA",
        "status": "Closed",
        "fix_versions": [
            "4.0",
            "4.1",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "As reported by giovanni.bricconi on the user list, there is a bug in \"fl\" parsing that causes solr to get confused when a field name is followed by a newline character \u2013 eg: in a requestHandler default like...\n\n\n<!-- newlines showing using \"$\" -->$\n<str name=\"fl\">$\n   sku,store_slug$  \n</str>$\n\n\n\n...this results in solr assuming it should use function parsing to evaluate the field name, which can cause missleading errors if the field name can't be used in a function (eg: \"can not use FieldCache on multivalued field: store_slug\")",
    "attachments": {
        "SOLR-3916.patch": "https://issues.apache.org/jira/secure/attachment/12548034/SOLR-3916.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13470559",
            "date": "2012-10-05T18:54:40+0000",
            "content": "A lot of things could be confused by this - I don't consider this as much a bug in \"fl\" parsing as I do a bug in default handling configured via XML. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13470618",
            "date": "2012-10-05T20:14:50+0000",
            "content": "blaming this on xml parsing doesn't really seem productive, espeicially since you can trivially reproduce the problem from a remote client (or even with the solr admin UI) if you accidentally cut/paste tab characters or newlines mixed in your list of fields.\n\nThe fix is trivial: in some places the fl parser was naivly only checking character equality with ' ' instead of using Character.isWhitespace().  \n\npatch with tests attached, running all tests and precommit on my computer now for further vetting. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13470652",
            "date": "2012-10-05T20:56:27+0000",
            "content": "blaming this on xml parsing doesn't really seem productive\n\n?\n\nI'm suggesting this could be a much wider problem than just \"fl\", which would seem to be a very productive line of conversation.\n\nIn the context of grabbing defaults from XML, we should consider trimming whitespace in the process of generating those defaults (rather than later).\nThe only downside is if certain parameters could reasonably expect to want leading/trailing whitespace.  If we want to support that, we could introduce a new type called <verbatim> or something. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13470703",
            "date": "2012-10-05T21:56:20+0000",
            "content": "In the context of grabbing defaults from XML, we should consider trimming whitespace in the process of generating those defaults (rather than later).\n\n...which can be pursued in another issue if you wish to do so.\n\nas i've already said: this current bug is not specific to getting defaults from the xml file, nor is it specific to leading/trailing whitespace that could be easily trimmed in a generic way.  Having a tab or newline or any whitespace character other then a simple ' ' between the names of fields in an \"fl\" string causes this annoying little bug \u2013 regardless of whether it comes from xml config, or a remote client.\n\nIf you look at the patch, you can see my point quite easily: when parsing the fl, ReturnFields is naively only treating the ' ' character as whitespace and not recognizing any other whitespace characters that might exist between field names. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13470732",
            "date": "2012-10-05T22:27:18+0000",
            "content": "Committed revision 1394836. - trunk\nCommitted revision 1394843. - 4x\nCommitted revision 1394844. - 4.0 "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13471116",
            "date": "2012-10-06T23:58:44+0000",
            "content": "If you look at the patch, you can see my point quite easily: when parsing the fl, ReturnFields is naively only treating the ' ' character as whitespace and not recognizing any other whitespace characters that might exist between field names.\n\nI had looked at the patch, and still didn't consider not checking for other types of whitespace between fieldnames a bug since we never promised to support that.  If you look at the code that was used before ReturnFields, it also used a pattern that only split on comma or space.  The previous code did handle leading/trailing whitespace via using String.trim() first though. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610703",
            "date": "2013-03-22T16:28:10+0000",
            "content": "[branch_4x commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1394843\n\nSOLR-3916: Fixed whitespace bug in parsing the fl param (merge r1394836) "
        },
        {
            "author": "Scott Stults",
            "id": "comment-15381283",
            "date": "2016-07-17T11:14:29+0000",
            "content": "Should there be a @Test annotation on testWhitespace()? I think some test runners might do introspection, but all of the other tests in that class use the annotation and was wondering if that was just an oversight or had specific meaning. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-15381397",
            "date": "2016-07-17T15:43:14+0000",
            "content": "Scott:\n\nWhether or not the @Test annotation is used is pretty arbitrary, JUnit picks up any method that starts with 'test' so this test gets run. Personally I prefer the annotation, but there's no standard.... "
        }
    ]
}