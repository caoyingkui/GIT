{
    "id": "LUCENE-5463",
    "title": "Make RamUsageEstimator.(human)sizeOf(Object) a forbidden API",
    "details": {
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.8"
        ]
    },
    "description": "We have had a few issues with RamUsageEstimator recently so I think we should consider making the sizeOf(Object) and humanSizeOf(Object) methods forbidden under src/java (however still allowed for tests as it is handy to check the size computations which are done \"manually\"). However, sizeOf(byte[]), shallowSizeOf(Class), etc. remain useful so I think we should keep them allowed.",
    "attachments": {
        "LUCENE-5463.patch": "https://issues.apache.org/jira/secure/attachment/12630076/LUCENE-5463.patch",
        "LUCENE-5463-2.patch": "https://issues.apache.org/jira/secure/attachment/12630803/LUCENE-5463-2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13907091",
            "author": "Simon Willnauer",
            "content": "+1 ",
            "date": "2014-02-20T15:48:17+0000"
        },
        {
            "id": "comment-13907104",
            "author": "Robert Muir",
            "content": "quick patch: I tried to clean things up so its clear which rules apply to:\n1) both source and test code\n2) just source code\n3) just test code\n\nsome things fail that we must deal with:\n\n[forbidden-apis] Reading bundled API signatures: jdk-system-out\n[forbidden-apis] Reading API signatures: /home/rmuir/workspace/lucene-trunk/lucene/tools/forbiddenApis/rue.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] Forbidden method invocation: org.apache.lucene.util.RamUsageEstimator#sizeOf(java.lang.Object) [slow]\n[forbidden-apis]   in org.apache.lucene.util.RamUsageEstimator (RamUsageEstimator.java:586)\n[forbidden-apis] Forbidden method invocation: org.apache.lucene.util.RamUsageEstimator#sizeOf(java.lang.Object) [slow]\n[forbidden-apis]   in org.apache.lucene.search.CachingWrapperFilter (CachingWrapperFilter.java:163)\n[forbidden-apis] Forbidden method invocation: org.apache.lucene.util.RamUsageEstimator#sizeOf(java.lang.Object) [slow]\n[forbidden-apis]   in org.apache.lucene.search.FieldCache$CacheEntry (FieldCache.java:496)\n[forbidden-apis] Scanned 1411 (and 173 related) class file(s) for forbidden API invocations (in 0.16s), 3 error(s).\n\n ",
            "date": "2014-02-20T15:54:22+0000"
        },
        {
            "id": "comment-13907108",
            "author": "Robert Muir",
            "content": "Personally i dont like whats going on in CachingWrapperFilter. Maybe Filter should have an explicit method for this?\n\nas far as FieldCache... whatever goes  ",
            "date": "2014-02-20T15:58:52+0000"
        },
        {
            "id": "comment-13907112",
            "author": "Adrien Grand",
            "content": "I think it would be great to have a ramBytesUsed method on filters. That is needed anyway if you want to take the memory size into account for evictions. ",
            "date": "2014-02-20T16:01:00+0000"
        },
        {
            "id": "comment-13907167",
            "author": "Hoss Man",
            "content": "as far as FieldCache... whatever goes\n\nProbably safe to white list that usage right? It's use is only if the caller explicitly asked for the estimated size of the cache entries to be computed (and then cached in the entry)\n\nPerhaps...\n\n\n\twhitelist that usage in 4x\n\tmark those FieldCache methods as deprecated in 4x, with pointers telling callers how to go use RamUsageEstimator on the cache entries directly if they want that info.\n\tremove those methods (and their whitelisted use of RamUsageEstimator) in 5.x\n\n\n\n? ",
            "date": "2014-02-20T16:51:21+0000"
        },
        {
            "id": "comment-13910459",
            "author": "Adrien Grand",
            "content": "Here is a new patch iterating on Robert's:\n\n\tRamUsageEstimator, FieldCache.CacheEntry, CachingWrapperFilter and MemoryIndex (lucene/memory) are excluded from the forbidden checks on RamUsageEstimator\n\tCachedOrdinalsReader (lucene/facets) and the suggesters (lucene/suggest) have been fixed to use less costly memory estimations.\n\n\n\nI think it would be nice to have memory usage estimations on filters in order to be able to remove CachingWrapperFilter from the exclusions but since this would be a large change, I'd rather do it as a separate issue. ",
            "date": "2014-02-24T16:35:12+0000"
        },
        {
            "id": "comment-13910469",
            "author": "Robert Muir",
            "content": "+1, looks good.  ",
            "date": "2014-02-24T16:44:39+0000"
        },
        {
            "id": "comment-13910482",
            "author": "Simon Willnauer",
            "content": "Thanks so much adrien! +1 to commit ",
            "date": "2014-02-24T16:54:55+0000"
        },
        {
            "id": "comment-13910613",
            "author": "ASF subversion and git services",
            "content": "Commit 1571384 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1571384 ]\n\nLUCENE-5463: RUE.(human)sizeOf(Object) is now a forbidden API. ",
            "date": "2014-02-24T18:28:28+0000"
        },
        {
            "id": "comment-13910622",
            "author": "ASF subversion and git services",
            "content": "Commit 1571386 from Adrien Grand in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1571386 ]\n\nLUCENE-5463: RUE.(human)sizeOf(Object) is now a forbidden API. ",
            "date": "2014-02-24T18:35:34+0000"
        },
        {
            "id": "comment-13910664",
            "author": "Uwe Schindler",
            "content": "There is a problem with this commit: You renamed \"-check-forbidden-base\" to \"-check-forbidden-all\", but missed to also rename the \"overwrite\" target in solr's common-build. The one there should also be renamed, otherwise its never executed!\n\nBy this commit we lost the common-io checks in Solr.\n\nAlso can we add a more verbose \"defaultMessage\" to rue.txt. This is too short and is not a real \"error-like message\". Something like: \"This method is slow at runtime.\" ",
            "date": "2014-02-24T19:05:07+0000"
        },
        {
            "id": "comment-13910665",
            "author": "Uwe Schindler",
            "content": "We should also change the Maven build to reflect the new checks. ",
            "date": "2014-02-24T19:06:16+0000"
        },
        {
            "id": "comment-13910668",
            "author": "Adrien Grand",
            "content": "Thanks for the review Uwe, I'll fix. ",
            "date": "2014-02-24T19:08:13+0000"
        },
        {
            "id": "comment-13910670",
            "author": "Uwe Schindler",
            "content": "As you see in Solr this one is no longer executed:\n\n\n-check-forbidden-all:\n[forbidden-apis] Reading bundled API signatures: jdk-unsafe-1.7\n[forbidden-apis] Reading bundled API signatures: jdk-deprecated-1.7\n[forbidden-apis] Reading API signatures: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr2\\lucene\\tools\\forbiddenApis\\base.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] Scanned 2065 (and 1353 related) class file(s) for forbidden API invocations (in 1.59s), 0 error(s).\n\n-check-forbidden-tests:\n[forbidden-apis] Reading API signatures: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr2\\lucene\\tools\\forbiddenApis\\tests.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] Scanned 627 (and 890 related) class file(s) for forbidden API invocations (in 0.46s), 0 error(s).\n\n-check-forbidden-sysout:\n\n-check-forbidden-rue:\n[forbidden-apis] Reading API signatures: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr2\\lucene\\tools\\forbiddenApis\\rue.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] Scanned 1438 (and 1043 related) class file(s) for forbidden API invocations (in 0.55s), 0 error(s).\n\n-check-forbidden-sources:\n\n\n\nvs before:\n\n\n-check-forbidden-base:\n[forbidden-apis] Reading bundled API signatures: jdk-unsafe-1.7\n[forbidden-apis] Reading bundled API signatures: jdk-deprecated-1.7\n[forbidden-apis] Reading bundled API signatures: commons-io-unsafe-2.1\n[forbidden-apis] Reading API signatures: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\tools\\forbiddenApis\\base.txt\n[forbidden-apis] Reading API signatures: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\tools\\forbiddenApis\\servlet-api\n.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] Scanned 2063 (and 1356 related) class file(s) for forbidden API invocations (in 1.33s), 0 error(s).\n\n-check-forbidden-tests:\n[forbidden-apis] Reading API signatures: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\tools\\forbiddenApis\\tests.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] Scanned 625 (and 889 related) class file(s) for forbidden API invocations (in 0.47s), 0 error(s).\n\n-check-forbidden-sysout:\n\n ",
            "date": "2014-02-24T19:09:34+0000"
        },
        {
            "id": "comment-13910676",
            "author": "Uwe Schindler",
            "content": "In my opinion, the target should be named \"-check-forbidden-core\" instead of \"-check-forbidden-sources\". This would be more in line with \"compile-core\" targets and so on. We generally speak of \"core\" and \"test\" in our build files. ",
            "date": "2014-02-24T19:12:51+0000"
        },
        {
            "id": "comment-13910813",
            "author": "Uwe Schindler",
            "content": "There is an additional bug in the commit:\nThe static overload for String size is just wrong, see the recent failure:\n\n\nREGRESSION:  org.apache.lucene.util.TestRamUsageEstimator.testStaticOverloads\n\nError Message:\nexpected:<48> but was:<56>\n\nStack Trace:\njava.lang.AssertionError: expected:<48> but was:<56>\n\tat __randomizedtesting.SeedInfo.seed([E123F914DF5BE037:BA7853CB2A89A039]:0)\n\tat org.junit.Assert.fail(Assert.java:93)\n\tat org.junit.Assert.failNotEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:128)\n\tat org.junit.Assert.assertEquals(Assert.java:472)\n\tat org.junit.Assert.assertEquals(Assert.java:456)\n\tat org.apache.lucene.util.TestRamUsageEstimator.testStaticOverloads(TestRamUsageEstimator.java:91)\n\n\n\nThe code uses an internal assumption on how a string is built internally. This assumption may not be correct for all JVMs. There is nothing in the JDK spec that specifies how a String should look like internally. Especially if it is a substring of another string: in that case the array is larger than string.length(). So the code is just wrong (in addition to this failure).\n\nThe static overload is just incorrect then, so please remove it or make it use correct sizes, e.g. when the measured string is a substring of another one. Or if the JDK uses another internal String representation. The latter can be checked out before by inspecting string internals on the RUE startup. ",
            "date": "2014-02-24T21:09:49+0000"
        },
        {
            "id": "comment-13910840",
            "author": "Adrien Grand",
            "content": "Uwe Schindler I tried to fix the issues that you raised, let me know if these fixes are not good. I have very little experience with our Maven build so the way I added the rue.txt APIs to the set of forbidden APIs may not be the right one. ",
            "date": "2014-02-24T21:30:02+0000"
        },
        {
            "id": "comment-13910886",
            "author": "Uwe Schindler",
            "content": "Thanks for a first quick fix... I will merge your patch into my current work. The Maven fixes were just more a hint for Use account \"steve_rowe\" instead, I have not much more insight on the maven build like you!\n\nJust removing the test is a bad idea -> RUE#sizeOf(String) has more problems! I would prefer to first revert the commit and let's start with more close review! ",
            "date": "2014-02-24T22:19:21+0000"
        },
        {
            "id": "comment-13910899",
            "author": "Adrien Grand",
            "content": "just removing the test\n\nMy bad, the patch was also supposed to remove the impl. See updated patch. ",
            "date": "2014-02-24T22:30:26+0000"
        },
        {
            "id": "comment-13910900",
            "author": "Uwe Schindler",
            "content": "For the changed default message:\n\n\n@defaultMessage This method is useful for testing but is slow at runtime\n\n\n\nYou message was applied to both signatures, but the message did not fit for the second signature. If you want a separate message per signature, you can use:\n\n\nClass#method(params) @ Any method specific message\n\n\n\nIn that case, the default message is ignored. ",
            "date": "2014-02-24T22:30:41+0000"
        },
        {
            "id": "comment-13910904",
            "author": "Adrien Grand",
            "content": "I would prefer to first revert the commit and let's start with more close review!\n\nWhatever works for you works for me as well! I'll revert and upload a merged patch. ",
            "date": "2014-02-24T22:32:30+0000"
        },
        {
            "id": "comment-13910905",
            "author": "Uwe Schindler",
            "content": "My bad, the patch was also supposed to remove the impl. See updated patch.\n\nOk. Thanks. See also my signature file comment, otherwise looks fine - no new patch needed. I have no idea if maven now works correct. Mabye Steve takes a look. ",
            "date": "2014-02-24T22:32:57+0000"
        },
        {
            "id": "comment-13910906",
            "author": "Uwe Schindler",
            "content": "If you remove the incorrect String size method, I am fine! So no need to revert. ",
            "date": "2014-02-24T22:33:44+0000"
        },
        {
            "id": "comment-13910908",
            "author": "Adrien Grand",
            "content": "no new patch needed\n\nJust to be sure, are you saying there is no need to revert and I can just commit this second patch? ",
            "date": "2014-02-24T22:34:34+0000"
        },
        {
            "id": "comment-13910910",
            "author": "Adrien Grand",
            "content": "OK, I got it, thanks! ",
            "date": "2014-02-24T22:34:52+0000"
        },
        {
            "id": "comment-13910923",
            "author": "Uwe Schindler",
            "content": "Yes. Sorry for consufeness.\n\nMy problem was the String size method which was not correct:\n\n\tIn Java 6, substrings share the same array like the original. It just allocates a new String object with a different offset and size, but the same underlying array. This may cause problems like we have seen in the test\n\tIn Java 7+, substrings are copied, so this is no longer an issue. But we still cannot be sure about memory requirements, because Strings may have a different internal layout.\n\n ",
            "date": "2014-02-24T22:45:45+0000"
        },
        {
            "id": "comment-13910995",
            "author": "ASF subversion and git services",
            "content": "Commit 1571493 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1571493 ]\n\nLUCENE-5463: Unbreak forbidden APIs for Solr, remove broken RUE.sizeOf(String) and add new forbidden APIs to the Maven build. ",
            "date": "2014-02-24T23:44:15+0000"
        },
        {
            "id": "comment-13911011",
            "author": "ASF subversion and git services",
            "content": "Commit 1571494 from Adrien Grand in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1571494 ]\n\nLUCENE-5463: Unbreak forbidden APIs for Solr, remove broken RUE.sizeOf(String) and add new forbidden APIs to the Maven build. ",
            "date": "2014-02-24T23:55:05+0000"
        },
        {
            "id": "comment-13911023",
            "author": "Uwe Schindler",
            "content": "Thanks Adrien. After looking one more time on the Solr task, I think this one should be \"-check-forbidden-all\", because it applies to core and tests.\n\nI will fix this in a moment, sorry. ",
            "date": "2014-02-25T00:03:36+0000"
        },
        {
            "id": "comment-13911027",
            "author": "ASF subversion and git services",
            "content": "Commit 1571495 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1571495 ]\n\nLUCENE-5463: Correct Solr forbidden checks ",
            "date": "2014-02-25T00:07:44+0000"
        },
        {
            "id": "comment-13911028",
            "author": "ASF subversion and git services",
            "content": "Commit 1571496 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1571496 ]\n\nMerged revision(s) 1571495 from lucene/dev/trunk:\nLUCENE-5463: Correct Solr forbidden checks ",
            "date": "2014-02-25T00:08:43+0000"
        },
        {
            "id": "comment-13915075",
            "author": "Adrien Grand",
            "content": "Marking as resolved... Thanks Uwe for your scrutiny! ",
            "date": "2014-02-27T21:36:48+0000"
        },
        {
            "id": "comment-13982506",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:25:33+0000"
        }
    ]
}