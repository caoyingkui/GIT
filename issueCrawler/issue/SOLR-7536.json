{
    "id": "SOLR-7536",
    "title": "adding fields to newly created managed-schema could sometimes cause error",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "When using managed schema in SolrCloud, adding fields into schema would SOMETIMES end up prompting \"Can't find resource 'schema.xml' in classpath or '/configs/collectionName', cwd=/export/solr/solr-5.1.0/server\", there is of course no schema.xml in configs, but 'schema.xml.bak' and 'managed-schema'\n\nCode to upload configs and create collection:\n\n Path tempPath = getConfigPath();\n\t\t\tclient.uploadConfig(tempPath, name); //customized configs with solrconfig.xml using ManagedIndexSchemaFactory\n\n\t\t\tif(numShards==0)\n{\n\t\t\t\tnumShards = getNumNodes(client);\n\t\t\t}\n\n\t\t\tCreate request = new CollectionAdminRequest.Create();\n\t\t\trequest.setCollectionName(name);\n\t\t\trequest.setNumShards(numShards);\n\t\t\treplicationFactor = (replicationFactor==0?DEFAULT_REPLICA_FACTOR:replicationFactor);\n\t\t\trequest.setReplicationFactor(replicationFactor);\n\t\t\trequest.setMaxShardsPerNode(maxShardsPerNode==0?replicationFactor:maxShardsPerNode);\n\t\t\tCollectionAdminResponse response = request.process(client);\n\n adding fields to schema, either by curl or by httpclient,  would sometimes yield the following error, but the error can be fixed by RELOADING the newly created collection once or several times:\n\nINFO  - [{  \"responseHeader\":\n{    \"status\":500,    \"QTime\":5}\n,  \"errors\":[\"Error reading input String Can't find resource 'schema.xml' in classpath or '/configs/collectionName', cwd=/export/solr/solr-5.1.0/server\"],  \"error\":{    \"msg\":\"Can't find resource 'schema.xml' in classpath or '/configs/collectionName', cwd=/export/solr/solr-5.1.0/server\",    \"trace\":\"java.io.IOException: Can't find resource 'schema.xml' in classpath or '/configs/collectionName', cwd=/export/solr/solr-5.1.0/server\n\n\tat org.apache.solr.cloud.ZkSolrResourceLoader.openResource(ZkSolrResourceLoader.java:98)\n\tat org.apache.solr.schema.SchemaManager.getFreshManagedSchema(SchemaManager.java:421)\n\tat org.apache.solr.schema.SchemaManager.doOperations(SchemaManager.java:104)\n\tat org.apache.solr.schema.SchemaManager.performOperations(SchemaManager.java:94)\n\tat org.apache.solr.handler.SchemaHandler.handleRequestBody(SchemaHandler.java:57)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1984)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:829)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:446)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:220)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:368)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:953)\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1014)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:861)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)\n\tat org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n\tat java.lang.Thread.run(Thread.java:745)\\n\",    \"code\":500}}]",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-25T11:56:54+0000",
            "author": "neeti yadav",
            "content": "there should be a way to point the manage schema file to the location instead of schema.xml. ",
            "id": "comment-14711133"
        },
        {
            "date": "2016-01-28T15:09:32+0000",
            "author": "Steve Rowe",
            "content": "kiran had this problem with Solr 5.3.1 and showed me the logs.\n\nHere's what I think is happening:\n\nIn multi-replica managed schema SolrCloud setups that have a configset with a schema resource named \"schema.xml\", each replica will try to rename the \"schema.xml\" znode to \"schema.xml.bak\", but only one of them will succeed.  The others log the failure but ignore the exception.  \n\nBut the code to change the schema's resourceName from \"schema.xml\" to \"managed-schema\" (or whatever the configured managed schema resource name is) is in the try block in ManagedIndexSchemaFactory.zkUgradeToManagedSchema() after the znode renaming attempt[1], so in those replica(s) that lose the race to rename the znode, the schema's resourceName stays at \"schema.xml\".\n\nAs of Solr 5.0 (and SOLR-6913), the shipped managed schema configsets have their schema file named \"managed-resource\", so the znode never has to be renamed, and this bug isn't being triggered.\n\nI think the fix is to change the schema's resourceName before attempting to rename the \"schema.xml\" znode to \"schema.xml.bak\".\n\n[1] https://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory.java#L352 ",
            "id": "comment-15121649"
        },
        {
            "date": "2018-06-08T19:11:19+0000",
            "author": "Christopher Jackson",
            "content": "I have also just encountered this issue on version 5.5.2 when using solrCloud and a\u00a0ManagedIndexSchemaFactory. The configset included a schema.xml which was used to produce a managed-schema file in the config folder on zk, however the modify to the schema failed as it was still looking for schema.xml.\n\nTo workaround the issue I took the managed-schema that was introduced and placed it in my initial configset, dropped the collection, recreated it, and tried the update to schema again which worked without issue. ",
            "id": "comment-16506461"
        }
    ]
}