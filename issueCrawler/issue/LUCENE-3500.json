{
    "id": "LUCENE-3500",
    "title": "improve getLiveDocs() performance",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "On segmentReader, liveDocs is volatile because they used to be loaded on demand.\nThis no longer appears to be the case... liveDocs are always loaded up front.\nThis also means that getLiveDocs() can never fail (even after close), and we can remove the ensureOpen call.\nMinor optimizations, but volatile reads still do prevent optimizations across that boundary.",
    "attachments": {
        "LUCENE-3500.patch": "https://issues.apache.org/jira/secure/attachment/12498313/LUCENE-3500.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-10-08T15:03:52+0000",
            "content": "Where is getLiveDocs called in a tight loop?\n\nI can see this making sense for the old IR.isDeleted, but we shouldnt be calling getLiveDocs over and over again! ",
            "author": "Robert Muir",
            "id": "comment-13123511"
        },
        {
            "date": "2011-10-08T15:19:59+0000",
            "content": "Not a tight loop perhaps, but I've regularly seen fast changing indexes build up to 100 segments.\nAnd if Solr's DocSet filter implementations need to call it again to avoid useless wrapping, that's 200 times per query (and 400 volatile reads) that aren't really needed.\nSure, it would be hard to measure the improvement (hence the \"minor\"), but it's more about the chipping away at inefficiencies.  I guess I'd turn it around and say \"why is this volatile?\"... there's no reason for it to be. ",
            "author": "Yonik Seeley",
            "id": "comment-13123517"
        },
        {
            "date": "2011-10-08T15:29:06+0000",
            "content": "\nNot a tight loop perhaps, but I've regularly seen fast changing indexes build up to 100 segments.\n\nSo in this fast changing case doesn't it make more sense for solr to cache the filters without deleted docs and not do the extra liveDocs check?\n\n\nbut it's more about the chipping away at inefficiencies. \n\nwell i think it makes some assumptions dependent upon the current implementation?\n\nDeleted docs are written to the index and like other things ideally codec could customize the impl in the future.\n\nthats the only problem i have with it.\n\nseparately: we call this a lot less since LUCENE-3474 patch. Previously if you had a BQ of 100 terms, it would call it 100 times per segment.\nnow we call it once per segment in that case. ",
            "author": "Robert Muir",
            "id": "comment-13123521"
        },
        {
            "date": "2011-10-08T15:38:48+0000",
            "content": "well i think it makes some assumptions dependent upon the current implementation?\n\nBut I am talking about the implementation.\n\"volatile\" is part of the SegmentReader implementation - a now unnecessary part since it's no longer loaded on demand as it was in the past.\n ",
            "author": "Yonik Seeley",
            "id": "comment-13123523"
        },
        {
            "date": "2011-10-08T18:14:35+0000",
            "content": "I am not sure if we can simply remove the ensureOpen() call here. If we close the reader and I use it afterwards to get del docs I could see a null value which doesn't reflect the actual del docs. Maybe we shouldn't null this out on close? I actually wonder if we can make this somehow final together with other members? ",
            "author": "Simon Willnauer",
            "id": "comment-13123543"
        }
    ]
}