{
    "id": "LUCENE-72",
    "title": "[PATCH] Query parser inconsistency when using terms to exclude.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/queryparser"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.2",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "Hi.\nThe problem I am having occurs when using queryparser and also when building the\nquery using the API.\nAssume that we want to look for documents about fruits or vegetables but \nexcluding tomatoes and bananas. I suppose the right query sould be:\n\n+(fruits vegetables) AND (-tomatoes -bananas)\n\nwich I think is equivalent to (if tou parse it and then print the query.toString\n(\"\") result that is what you get)\n\n+(fruits vegetables) +(-tomatoes -bananas)\n\nbut the query doesn't work as expected, in fact the query that works is\n\n+(fruits vegetables) -(-tomatoes -bananas)\n\nwhich doesn\u00b4t really make much sense, because the second part seems to say:\nAll documents where the condition \"tomatoes is not present and bananas is not \npresent \" is false, which means the opposite.\n\nIn fact, second query works as (even if they look quite opposite):\n+(fruits vegetables) -tomatoes -bananas\n\nHope someone could help, thanks",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--patch7.txt": "https://issues.apache.org/jira/secure/attachment/12312205/ASF.LICENSE.NOT.GRANTED--patch7.txt",
        "TestRegressionLucene72.java": "https://issues.apache.org/jira/secure/attachment/12339743/TestRegressionLucene72.java",
        "ASF.LICENSE.NOT.GRANTED--patch6.txt": "https://issues.apache.org/jira/secure/attachment/12312204/ASF.LICENSE.NOT.GRANTED--patch6.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2004-02-09T20:10:57+0000",
            "content": "Created an attachment (id=10275)\nA patch to queryparser to properly handle escaping char in field ",
            "author": "Jean-Fran\u00e7ois Halleux",
            "id": "comment-12321164"
        },
        {
            "date": "2004-02-09T20:14:29+0000",
            "content": "Created an attachment (id=10276)\nSome more unit tests in the \"escaped\" department ",
            "author": "Jean-Fran\u00e7ois Halleux",
            "id": "comment-12321165"
        },
        {
            "date": "2006-08-29T05:58:33+0000",
            "content": "This issue was so old that I wanted to verify thatit still exists.\nThe attached test is specific to the issue and indeed shows that\n\n+(fruits vegetables) AND (-tomatoes -bananas)\n\ndoes not perform as expected.\n\nI use \"QueryParser.setDefaultOperator(QueryParser.OR_OPERATOR)\"\nand I setup 4 documents:\n\nDoc1 = fruits vegetables tomatoes bananas\nDoc2 = fruits vegetables tomatoes kiwis\nDoc3 = fruits vegetables peppers kiwis\nDoc4 = fruits vegetables peppers bananas\n\nMy expectations is to get docs 2,3,4 - instead the query returns no hits.\n\nSomebody please check that this makes sense.\n\nI have not run this test with the attached patches applied, however - I decided to not spend the time applying 2 year old patches to the current release  ",
            "author": "Dejan Nenov",
            "id": "comment-12431145"
        },
        {
            "date": "2006-08-29T17:08:54+0000",
            "content": "Please ignore the previos version - it was very sloppy. \nI added one more test, which yields a strange (for me) result:\n\nfruits OR -tomatoes\n\nreturns only:\n\nfruits vegetables peppers kiwis\nfruits vegetables peppers bananas\n\nbut does not return:\n\nfruits vegetables tomatoes bananas\nfruits vegetables tomatoes kiwis\n\nI would expected all four docs to match? ",
            "author": "Dejan Nenov",
            "id": "comment-12431295"
        },
        {
            "date": "2006-08-30T17:53:25+0000",
            "content": "I think the general issue here is that mixing syntax (ie: using AND, OR or NOT along with \"+\" and \"-\") is not something that works very well in the QueryParser.\n\nAt the lowest level the \"+\" and \"-\" syntax most closely models the way Lucene BooleanQueries work \u2013 most specificly, they are not truely BooleanQueries \u2013 they are agregation queries, in which each sub query can be required, optional or prohibited \u2013 but at least one most always \"match\" and positively select some documents.  (it is invalide to have a BooleanQuery containing all \"prohibited\" clauses)\n\nSetting the default operator onthe QueryParser to be \"OR\" or \"AND\" really just tells the QueryParser whether you want the default property of the sub-queries to be \"optional\" or \"required\" in the absense of other information.\n\nwhen specifying a query like:   +(fruits vegetables) AND (-tomatoes -bananas)\n...this is really just a varient expression of:   +(fruits vegetables) +(-tomatoes -bananas)\n...which is not a valid query becuse the second clause doesn't match anything\n\nwhen specifing a query like:     fruits OR -tomatoes\n...this is really just a varient expression of:   fruits -tomatoes\n...which (since there is only one \"optional\" clause and no \"required\" clauses) will only match documents containing the word \"fruits\" as long as they do not match the word \"tomatoes\"\n\nin short ... things are behaving as expected.  The only question is wether documentation might be improved to make the behavior more clear to people.\n\nas for the (now very old) patches to this bug ... they don't acctually seem to be related at all as far as i can tell. ",
            "author": "Hoss Man",
            "id": "comment-12431635"
        },
        {
            "date": "2006-08-31T02:07:24+0000",
            "content": "This makes sense. Iconcur that docs can be better - maybe we shoud lopen a separate JIRA issue on that?\n\nI propose this to be closed as \"will not fix\". ",
            "author": "Dejan Nenov",
            "id": "comment-12431760"
        },
        {
            "date": "2011-01-25T15:43:37+0000",
            "content": "As per the discussion, this should have been closed long time ago. ",
            "author": "Shai Erera",
            "id": "comment-12986446"
        }
    ]
}