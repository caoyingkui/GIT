{
    "id": "SOLR-10418",
    "title": "metrics should return JVM system properties",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "metrics"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "We need to stop using the custom solution used in rules and start using metrics for everything",
    "attachments": {
        "SOLR-10418.patch": "https://issues.apache.org/jira/secure/attachment/12862997/SOLR-10418.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-12T09:17:25+0000",
            "content": "Patch that exposes system properties using a dynamic bean MetricsMap. Properties are available in \"solr.jvm\" registry under \"system.properties\".\n\nI used this method instead of registering individual properties as separate metrics because properties may be added / cleared during runtime and we have no way to track these changes in order to sync the registered metrics. The downside is that /admin/metrics handler returns all properties in a single list, because from its point of view they are a single metric. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15965595"
        },
        {
            "date": "2017-04-12T10:36:08+0000",
            "content": "Can you please ensure that we don't expose sensitive information such as the SSL keystore/truststore through this API? It'd be nice to add an optional blacklist of system properties to the metric handler that should never be exposed. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15965650"
        },
        {
            "date": "2017-04-12T16:15:44+0000",
            "content": "an optional blacklist of system properties\nSo what are the properties that we should add by default to that list? Should this list be retrieved from a system property too? ",
            "author": "Andrzej Bialecki",
            "id": "comment-15966141"
        },
        {
            "date": "2017-04-12T22:04:58+0000",
            "content": "Updated patch that allows to select one of properties of MetricsMap-s. This significantly complicates the code in MetricUtils, and it adds confusing behavior to metric filters:\n\n\n\tit sort of breaks the contract of PrefixFilter because now it needs to match also possible matches on MetricsMap property names that we don't know yet at the time of filter evaluation. This can be worked around by creating a separate implementation of MetricFilter just for the use in MetricsHandler.\n\n\n\n\n\tRegexFilter doesn't work this way at all, ie. it's not possible to select fully-qualified nested properties using \"regex\" param. The reason is that in order to evaluate regexes against full property names the actual values from MetricsMap.getValue() need to be retrieved in order to build the full names. This may be costly, eg. if we iterate a cache, and in some cases this may also have side-effects (eg. HDFS Metrics resets incremental stats on each call).\n\n\n\nThis patch doesn't support yet the property exclusion list. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15966718"
        },
        {
            "date": "2017-04-13T12:24:36+0000",
            "content": "My observations\n\n\n\tThe patch does not close close the solrclient in testMetricsMapProperties()\n\tThe output for the query http://localhost:8983/solr/admin/metrics?wt=json&json.nl=map&prefix=system.properties.user.home has more information that I asked for\n\n{\n  \"metrics\":{\n    \"solr.jetty\":{},\n    \"solr.core.gettingstarted.shard1.replica2\":{},\n    \"solr.jvm\":{\n      \"system.properties\":{\"value\":{\"user.home\":\"/Users/noble\"}}},\n    \"solr.node\":{},\n    \"solr.core.gettingstarted.shard2.replica2\":{}}}\n\n\n\n\n\nYou can simplify the testcase \n\n nl = (NamedList)nl.get(\"metrics\");\n    assertNotNull(\"metrics\", nl);\n    nl = (NamedList)nl.get(\"solr.jvm\");\n    assertNotNull(\"solr.jvm\", nl);\n    map = (Map)nl.get(\"system.properties\");\n    assertNotNull(\"system.properties\", map);\n    map = (Map)map.get(\"value\");\n    assertNotNull(\"value\", map);\n    userHome = (String)map.get(\"user.home\");\n    assertNotNull(\"user.home\", userHome);\n    assertEquals(System.getProperty(\"user.home\"), userHome);\n\n\nthe above can be replaced with\n\nassertEquals(userHome, Utils.getObjectByPath(nl.asMap(5),true, \"metrics/solr.jvm/system.properties/value/user.home\"));\n\n\n ",
            "author": "Noble Paul",
            "id": "comment-15967510"
        },
        {
            "date": "2017-04-13T14:20:27+0000",
            "content": "So what are the properties that we should add by default to that list? Should this list be retrieved from a system property too?\nA list like that doesn't exist but here are the ones I came up with:\n\n\tjavax.net.ssl.keyStorePassword\n\tjavax.net.ssl.trustStorePassword\n\tbasicauth - used in PreemptiveBasicAuthClientBuilderFactory\n\tzkDigestPassword\n\tzkDigestReadonlyPassword\n\n\n\nI don't like the idea of retrieving this from a system property. The problem is that if you want to ban a property, you likely want to ban it from all nodes in the cluster. Setting up system properties is a messy way to do it. It is better to configure the metrics handler itself in solr.xml ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15967638"
        },
        {
            "date": "2017-04-13T17:53:58+0000",
            "content": "Updated patch that adds \"property\" filtering in order to select only some of the properties of complex metrics (eg. CACHE, system.properties, etc). Multiple \"property\" parameters can be supplied.\n\nThis is a much cleaner approach that the previous patch, even though it requires that user knows that selected metrics have multiple properties.\n\nThis patch also implements the \"hiddenSysProps\" configuration to prevent from returning sensitive system properties.\n\nHere's an example request and output:\n\nhttp://localhost:8983/solr/admin/metrics?group=core&prefix=CACHE.searcher&property=inserts&property=size&compact=true&wt=json\n\n{\n  \"responseHeader\": {\n    \"status\": 0,\n    \"QTime\": 1\n  },\n  \"metrics\": {\n    \"solr.core.techproducts\": {\n      \"CACHE.searcher.QUERY_DOC_FV\": {\n        \"size\": 0,\n        \"inserts\": 0\n      },\n      \"CACHE.searcher.documentCache\": {\n        \"size\": 0,\n        \"inserts\": 0\n      },\n      \"CACHE.searcher.fieldValueCache\": {\n        \"size\": 0,\n        \"inserts\": 0\n      },\n      \"CACHE.searcher.filterCache\": {\n        \"size\": 0,\n        \"inserts\": 0\n      },\n      \"CACHE.searcher.perSegFilter\": {\n        \"size\": 0,\n        \"inserts\": 0\n      },\n      \"CACHE.searcher.queryResultCache\": {\n        \"size\": 0,\n        \"inserts\": 0\n      }\n    }\n  }\n}\n\n\n\nhttp://localhost:8983/solr/admin/metrics?group=jvm&prefix=system&property=os.name&property=os.arch&compact=true&wt=json\n\n{\n  \"responseHeader\": {\n    \"status\": 0,\n    \"QTime\": 0\n  },\n  \"metrics\": {\n    \"solr.jvm\": {\n      \"system.properties\": {\n        \"os.arch\": \"x86_64\",\n        \"os.name\": \"Mac OS X\"\n      }\n    }\n  }\n}\n\n ",
            "author": "Andrzej Bialecki",
            "id": "comment-15967961"
        },
        {
            "date": "2017-04-14T09:40:57+0000",
            "content": "This is cool.  ",
            "author": "Noble Paul",
            "id": "comment-15968848"
        },
        {
            "date": "2017-04-18T10:48:54+0000",
            "content": "Commit bb69c02e575caac12c8735a0f6b96ed5808f94e2 in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bb69c02 ]\n\nSOLR-10418: Metrics API should return JVM system properties. ",
            "author": "ASF subversion and git services",
            "id": "comment-15972489"
        }
    ]
}