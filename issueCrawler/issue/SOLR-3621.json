{
    "id": "SOLR-3621",
    "title": "Fix concurrency race around newIndexWriter",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "components": [
            "update"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When I did the first big refactor on update handler, I was trying to never close the index writer - I had to give in on this goal due to the replication handler - it requires rebooting the indexwriter. At the time, I settled for allowing a little race that didn't show up as an issue in tests - this IW reboot was always a bit of a hack in the past anyhow.\n\nNow that the dust has settled, we should make this air tight though. I'd like to make opening a new indexwriter a full class citizen rather than a hacky method only used minimally for replication to reboot things. It should be a solid API that is valid for any uses down the road.\n\nFor some IW config changes, we may want to do it in 'some' cases on reload.\n\nTo do this, we have to start ref counting iw use - so that we only actually open a new one and close the old one when it's not in use at all.",
    "attachments": {
        "SOLR--3621.patch": "https://issues.apache.org/jira/secure/attachment/12536528/SOLR--3621.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13414548",
            "date": "2012-07-14T23:40:08+0000",
            "content": "A first patch. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13415965",
            "date": "2012-07-17T07:27:22+0000",
            "content": "Hi, this seems to have caused a hang in DIH:\n\n\n[junit4:junit4] \"TEST-TestScope-org.apache.solr.handler.dataimport.TestSqlEntityProcessorDelta2.testCompositePk_DeltaImport_delete-seed#[8C1D20BFF6E9C021]\" prio=10 tid=0x00007f1cb4560800 nid=0x1227 in Object.wait() [0x00007f1c92c02000]\n[junit4:junit4]    java.lang.Thread.State: WAITING (on object monitor)\n[junit4:junit4] \tat java.lang.Object.wait(Native Method)\n[junit4:junit4] \t- waiting on <0x00000000fb258658> (a org.apache.solr.update.DefaultSolrCoreState)\n[junit4:junit4] \tat java.lang.Object.wait(Object.java:485)\n[junit4:junit4] \tat org.apache.solr.update.DefaultSolrCoreState.getIndexWriter(DefaultSolrCoreState.java:59)\n[junit4:junit4] \t- locked <0x00000000fb258658> (a org.apache.solr.update.DefaultSolrCoreState)\n[junit4:junit4] \tat org.apache.solr.update.DirectUpdateHandler2.deleteAll(DirectUpdateHandler2.java:140)\n[junit4:junit4] \tat org.apache.solr.update.DirectUpdateHandler2.deleteByQuery(DirectUpdateHandler2.java:361)\n[junit4:junit4] \t- locked <0x00000000fb2584d8> (a org.apache.solr.update.DirectUpdateHandler2)\n[junit4:junit4] \tat org.apache.solr.update.processor.RunUpdateProcessor.processDelete(RunUpdateProcessorFactory.java:67)\n[junit4:junit4] \tat org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:55)\n[junit4:junit4] \tat org.apache.solr.update.processor.DistributedUpdateProcessor.doDeleteByQuery(DistributedUpdateProcessor.java:728)\n[junit4:junit4] \tat org.apache.solr.update.processor.DistributedUpdateProcessor.processDelete(DistributedUpdateProcessor.java:601)\n[junit4:junit4] \tat org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:55)\n[junit4:junit4] \tat org.apache.solr.handler.dataimport.AbstractDataImportHandlerTestCase$TestUpdateRequestProcessor.processDelete(AbstractDataImportHandlerTestCase.java:364)\n\n\n\nSee this build for a complete stack trace: http://jenkins.sd-datasolutions.de/job/Lucene-Solr-trunk-Linux-Java6-64/1291/console "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13416162",
            "date": "2012-07-17T13:17:57+0000",
            "content": "Looking... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13416208",
            "date": "2012-07-17T14:02:47+0000",
            "content": "I think this is related to the fail that kept happening in DIH tests previously (I was actually hoping this would help fix that test and is why I started looking at this the other day again).\n\nPart of the problem with that test may be that it uses RAMDir though - I don't think that in Solr that is compatible with booting a new IndexWriter - which happens during rollback, which happens in some error situations with DIH. I think that's the \"no segments file found issue\" that sometimes fails.\n\nAnyhow, my best current guess for this case is that opening a new writer fails, causes an exception, the getWriter lock is never released, someone tries to get a writer, they wait forever. I'm changing to release that lock in a finally so hopefully the true error is more visible and there is no hang.\n\nThe other fix may be to hard code fsdir for these tests that might rollback - but I'll wait on that. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429739",
            "date": "2012-08-07T03:42:36+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13452212",
            "date": "2012-09-10T17:41:58+0000",
            "content": "moving all 4.0 issues not touched in a month to 4.1 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13485006",
            "date": "2012-10-26T15:37:41+0000",
            "content": "Have no seen any reports of problems here in a while, and all this had hardened a fair amount by now. "
        }
    ]
}