{
    "id": "LUCENE-7078",
    "title": "Make remaining mutable Queries immutable",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [
            "core/search"
        ],
        "labels": "",
        "fix_versions": [
            "6.7",
            "7.0"
        ],
        "priority": "Minor",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "See LUCENE-6531\nMutable queries are an issue for automatic filter caching since modifying a query after it has been put into the cache will corrupt the cache. We should make all queries immutable (up to the boost) to avoid this issue.\n\nSince they are part of the public API I would suggest splitting them in an immutable class and a builder like was done for most other Queries before releasing an official 6.x version\n\nI did a quick scan through all derived classes of Query and I compiled the following list (ignoring sources in test or contrib folders)\nSome of them are already marked as experimental (but should perhaps receive the \"official\" @lucene.experimental tag ?)\nFor some it's possibly not an issue since they should never end up in a filter cache (like MoreLikeThisQuery ?), but then a comment specifying the exception to the rule should perhaps be added.\n\n\n\tlucene/queries:\n\t\n\t\torg.apache.lucene.queries.CommonTermsQuery\n\t\torg.apache.lucene.queries.CustomScoreQuery (marked as @lucene.experimental)\n\t\torg.apache.lucene.queries.mlt.MoreLikeThisQuery\n\t\n\t\n\tlucene/suggest:\n\t\n\t\torg.apache.lucene.search.suggest.document.ContextQuery (marked as @lucene.experimental)\n\t\n\t\n\tlucene/facet:\n\t\n\t\torg.apache.lucene.facet.DrillDownQuery (marked as @lucene.experimental)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15439092",
            "author": "Michael McCandless",
            "date": "2016-08-26T14:06:27+0000",
            "content": "Bulk move of still open issues from 6.2 to 6.3. "
        }
    ]
}