{
    "id": "LUCENE-1048",
    "title": "Lock.obtain(timeout) behaves incorrectly for large timeouts",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/store"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "2.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Because timeout is a long, but internal values derived from timeout\nare ints, its possible to overflow those internal values into negative\nnumbers and cause incorrect behavior.\n\nSpinoff from this thread:\n\n  http://www.gossamer-threads.com/lists/lucene/java-user/54376",
    "attachments": {
        "LUCENE-1048.patch": "https://issues.apache.org/jira/secure/attachment/12369166/LUCENE-1048.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-11-08T11:31:12+0000",
            "content": "Simple patch that fixes the bug.  I also added static constant\nLock.LOCK_OBTAIN_WAIT_FOREVER which if passed as the timeout causes\nobtain to keep trying forever.  Will commit in a day or two. ",
            "author": "Michael McCandless",
            "id": "comment-12541028"
        },
        {
            "date": "2007-11-10T13:43:47+0000",
            "content": "I just committed this.  Thanks Nikolay! ",
            "author": "Michael McCandless",
            "id": "comment-12541543"
        }
    ]
}