{
    "id": "LUCENE-6597",
    "title": "Geo3d circle creation that covers whole globe throws an IllegalArgumentException",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "modules/spatial"
        ],
        "labels": "",
        "fix_versions": [
            "5.3"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "The following GeoCircle construction:\n\n\nnew GeoCircle(PlanetModel.SPHERE, -20.0 * RADIANS_PER_DEGREE, -20.0 * RADIANS_PER_DEGREE, Math.PI);\n\n\n\n... fails as follows:\n\n\nDegenerate/parallel vector constructed\n\n\n\nThe reason is that the plane normal vector cannot be computed in that case.  A special case is warranted for circles that cover the whole globe.",
    "attachments": {
        "LUCENE-6597.patch": "https://issues.apache.org/jira/secure/attachment/12741443/LUCENE-6597.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14595844",
            "author": "Karl Wright",
            "date": "2015-06-22T12:26:37+0000",
            "content": "Patch for this issue. "
        },
        {
            "id": "comment-14595890",
            "author": "Karl Wright",
            "date": "2015-06-22T13:11:51+0000",
            "content": "David Smiley: Patch looks like it solves the IllegalArgumentException in the place I was seeing it, and doesn't break anything, so other than adding an explicit test I am good with it. "
        },
        {
            "id": "comment-14598796",
            "author": "David Smiley",
            "date": "2015-06-24T03:10:53+0000",
            "content": "I just took a quick look.\n\nWhy does the intersects() method return false when the circle is the world; shouldn't it return true?  Or maybe I'm misunderstanding the semantics.\n\nDo you think it may be worth constructing a special Circle subclass or special Plane subclass instead, thereby reducing the conditions you added to the methods?  It's certainly no big deal to me; I have no strong opinion; I mostly wonder what you think.  Given how you handled the numerous special cases of rectangles that are adjacent to poles & what'not as sub-classes, I'm surprised you didn't take a similar type of approach here.\n\nCan you add a test please?  Perhaps make the random test sometimes in a rare while pick a world circle. "
        },
        {
            "id": "comment-14598814",
            "author": "Karl Wright",
            "date": "2015-06-24T03:36:04+0000",
            "content": "Why does the intersects() method return false when the circle is the world; shouldn't it return true? Or maybe I'm misunderstanding the semantics.\n\nYou're misunderstanding the semantics.  \"intersects()\" is whether the boundary intersects.  There is no boundary, hence no intersection.\n\nDo you think it may be worth constructing a special Circle subclass or special Plane subclass instead, thereby reducing the conditions you added to the methods?\n\nI did think of that.  If you introduced a GeoCircleFactory class, which you used to construct circles, that might make sense.  Not sure this is worth it however.  It really is only a single minor special case for a circle.  The GeoBBox case is obviously rather different, because there really are a myriad of 3d shapes described by a bounding-box-style rectangle, each of which has significantly different logic.\nIn the longer run, there are some shapes that get constructed via a factory, and others via a constructor.  Regularizing usage to always rely on factories may make for a prettier API.  But I still don't think I'd change the GeoCircle implementation.\n\nCan you add a test please? Perhaps make the random test sometimes in a rare while pick a world circle.\n\nIt will.  Before it would have gotten an illegal argument exception, though, and continued.  But I will add an explicit test case. "
        },
        {
            "id": "comment-14598836",
            "author": "Karl Wright",
            "date": "2015-06-24T03:58:48+0000",
            "content": "Test insures that full-world circles can be constructed, and basically function.  Randomized tests can therefore exhaustively exercise relationships etc. "
        },
        {
            "id": "comment-14600656",
            "author": "David Smiley",
            "date": "2015-06-25T04:12:06+0000",
            "content": "Test looks good.\n\n\n\tWhat do you think about adding support for zero radius?  Might as well; right?  I started to do this to see what happens.  First I needed to relax the arg check in the GeoCircle constructor.  But then I found the SidedPlane.constructNormalizedPerpendicularSidedPlane returned null.\n\tI noticed GeoCircle computes the cosign of the cutoffAngle but doesn't use it.\n\tThe IllegalArgumentException loop in Geo3dShapeRectRelationTestCase.testGeoCircleRect can now be removed, it appears.\n\n "
        },
        {
            "id": "comment-14600823",
            "author": "Karl Wright",
            "date": "2015-06-25T07:39:35+0000",
            "content": "What do you think about adding support for zero radius? Might as well; right? I started to do this to see what happens. First I needed to relax the arg check in the GeoCircle constructor. But then I found the SidedPlane.constructNormalizedPerpendicularSidedPlane returned null.\n\nYes, exactly.\n\nWhile the whole-globe degenerate case is in fact useful and might be realistically encountered, and used to work before the WGS84 implementation, I've basically shied away from the none-of-the-globe or single-point side of things.  GeoPath, GeoConvexPolygon, and GeoCircle all have potential single point solutions.  I did add a degenerate point object for GeoBBoxes but only because I did not trust spatial4j to not generate such a thing algorithmically.  But otherwise I would have resisted.\n\nIf you believe it is critical to address this omission, you can either add a \"tangent plane to a point\" sided plane constructor, or a boolean that would be true for the special case.  But, as I said, many other shapes would then probably  need to be looked at too.  Really a lot of work for zero benefit.\n\nI noticed GeoCircle computes the cosign of the cutoffAngle but doesn't use it.\n\nIf unused then we shouldn't compute it.  Feel free to get rid of it, or if you prefer, I will.\n\nThe IllegalArgumentException loop in Geo3dShapeRectRelationTestCase.testGeoCircleRect can now be removed, it appears.\n\nOnly if you take the correct steps to allow degenerate single-point circles.  Just accepting a null circlePlane is not that step, since that currently would represent a whole-world circle, not a zero-world circle.\n "
        },
        {
            "id": "comment-14600824",
            "author": "Karl Wright",
            "date": "2015-06-25T07:41:43+0000",
            "content": "Also, David, this particular patch is not rocket science IMHO.  It just corrects a case I broke with WGS84, which a test suite a work caught.  If you want to extend the functionality, really we should be talking about another ticket. "
        },
        {
            "id": "comment-14601126",
            "author": "ASF subversion and git services",
            "date": "2015-06-25T13:06:41+0000",
            "content": "Commit 1687499 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1687499 ]\n\nLUCENE-6597: Geo3D's GeoCircle now supports a world-globe diameter. "
        },
        {
            "id": "comment-14601132",
            "author": "ASF subversion and git services",
            "date": "2015-06-25T13:10:33+0000",
            "content": "Commit 1687502 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1687502 ]\n\nLUCENE-6597: Geo3D's GeoCircle now supports a world-globe diameter. "
        },
        {
            "id": "comment-14601135",
            "author": "David Smiley",
            "date": "2015-06-25T13:12:36+0000",
            "content": "Thanks Karl.\n\n0-diameter circle was definitely not needed; was just seeing if it'd be particularly easy. "
        },
        {
            "id": "comment-14713205",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:06:04+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}