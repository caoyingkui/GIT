{
    "id": "SOLR-8347",
    "title": "Asynchronous searcher for custom component",
    "details": {
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Not A Problem",
        "priority": "Critical"
    },
    "description": "I'm trying to write a custom component for fuzzy searches. \nAfter solr calls my component, I create a Thread and give it the SolrIndexSearcher and some params.\n\nProblem is after a few seconds I get an Exception that the indexreader was closed \n\norg.apache.lucene.store.AlreadyClosedException: this IndexReader cannot be used anymore as one of its child readers was closed\n        at org.apache.lucene.index.IndexReader.ensureOpen(IndexReader.java:279)\n        at org.apache.lucene.index.FilterLeafReader.getLiveDocs(FilterLeafReader.java:374)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:768)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:485)\n        at org.apache.solr.search.SolrIndexSearcher.buildAndRunCollectorChain(SolrIndexSearcher.java:202)\n        at org.apache.solr.search.SolrIndexSearcher.getDocListNC(SolrIndexSearcher.java:1666)\n        at org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1485)\n        at org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:561)\n        at org.apache.solr.search.SolrIndexSearcher.getDocList(SolrIndexSearcher.java:1350)\n        at awinta.mdm.solr.components.FuzzyLikeThisComponent$FLTHelper.getLikeThis(FuzzyLikeThisComponent.java:336)\n        at awinta.mdm.solr.components.FLTWorker.getLikeThese(FLTWorker.java:161)\n        at awinta.mdm.solr.components.FLTWorker.call(FLTWorker.java:94)\n        at awinta.mdm.solr.components.FLTWorker.call(FLTWorker.java:35)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n\n\n\n\nIs there a way of locking the IndexReader so it doesn't get closed by other threads?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-03T13:38:37+0000",
            "author": "Bogdan Marinescu",
            "content": "Would be cool if someone answered... ",
            "id": "comment-15037783"
        },
        {
            "date": "2015-12-03T14:01:45+0000",
            "author": "Upayavira",
            "content": "Bogdan Marinescu I'd suggest you ask this question on the Solr user list. This does not strike me, at present, as a bug in Solr. It most certainly isn't a blocker for the project. If, after discussion on the Solr user list, you find an enhancement to Solr that would help, or find a specific bug, that would be the time to open a ticket here. ",
            "id": "comment-15037809"
        },
        {
            "date": "2015-12-03T14:31:53+0000",
            "author": "Bogdan Marinescu",
            "content": "I made it a blocker because nobody was answering. It's not a blocker but it is I believe an issue because if I want to do some asynchronous work in a custom component I cannot access the SolrIndexSearcher anymore.. mainly because after the solr call is over someone/something closes the searcher (probably due to a commit). I was wondering if what I was trying to do was possible (to lock the searcher somehow until my component releases it) but I'll take your advice and ask in the solr user list ",
            "id": "comment-15037840"
        },
        {
            "date": "2015-12-03T15:03:00+0000",
            "author": "Upayavira",
            "content": "As I said, please ask this question on the Solr user mailing list, where hopefully you will find the help you are looking for. I am not aware of any conscious attempt to support threading within a single search request, thus this is not an issue for Solr, so it cannot be considered a bug. Please discuss it on the user list, and only bring it here if the discussion concludes some development is needed. Marking this issue as resolved, for now. ",
            "id": "comment-15037883"
        }
    ]
}