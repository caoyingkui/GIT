{
    "id": "LUCENE-55",
    "title": "Delete failed after new Term is indexed",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Deleting documents from a reader has no permanent effect if the reader is \nopened before a writer is used to index new documents.  This is similar to bug \n6140 (http://nagoya.apache.org/bugzilla/show_bug.cgi?id=6140) reported before, \nalthough I don\u2019t think it is a multi-thread issue.  The following pseudo-code \ncaused the problem:\n\nreader.open()      \n\nwriter.open()            \nwriter.add(documentB) \nwriter.close()      \n\nreader.delete(documentA) \nreader.close()          \n\nsearcher.open()\nsearcher.search(\"term_common_to_docA_and_docB\") \n// This returns both docA and docB\n\nPlease see my attached test class, which is single threaded.  I believe the \noption (a) and (b) suggested in BUG 6140 are valid, but not necessary (C).",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--TestDelete.java": "https://issues.apache.org/jira/secure/attachment/12312200/ASF.LICENSE.NOT.GRANTED--TestDelete.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2002-09-13T01:49:20+0000",
            "content": "Created an attachment (id=3032)\nTest class ",
            "author": "Tony Lai",
            "id": "comment-12321129"
        },
        {
            "date": "2002-09-13T02:31:12+0000",
            "content": "Second thought.  The option (a) is not valid either.  What happen if:\n\nreader1.open()\nreader2.open()\n\nreader1.delete(documentA) \nreader2.delete(documentB) \n\nDocument A will be restored by the second, since reader2 does not know document \nA has been deleted by reader1.  Maybe a better solution is to create an \nIndexDeleter that is a subclass of IndexReader.  It should obtain the write \nlock in the constructor as IndexWriter does, and write the delete file and \nrelease the write lock in the close method as IndexReader does.  \n\nThe makeLock(String name) should also take a maximum wait time argument.  It \nshould try to obtain the lock during that period of time, and return false only \nafter the time is expired.   ",
            "author": "Tony Lai",
            "id": "comment-12321130"
        },
        {
            "date": "2003-09-19T04:40:03+0000",
            "content": "I believe this has been fixed last week, when one of Christoph Goller's patches\nwas applied. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321131"
        }
    ]
}