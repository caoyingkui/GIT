{
    "id": "SOLR-5827",
    "title": "Add boosting functionality to MoreLikeThisHandler",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "MoreLikeThis"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The MoreLikeThisHandler facilitates the creation of a very simple yet powerful recommendation engine. \n\nIt is possible to constrain the result set using filter queries. However, it isn't possible to influence the scoring using function queries. Adding function query boosting would allow for including such things as recency in the relevancy calculations.\n\nUnfortunately, the boost= parameter is already in use, meaning we cannot replicate the edismax boost/bf for additive/multiplicative boostings.\n\nMy patch only touches the MoreLikeThisHandler, so the only really contentious thing is to decide the parameters to configure it.\n\nI have a prototype working, and will upload a patch shortly.",
    "attachments": {
        "SOLR-5827.1.patch": "https://issues.apache.org/jira/secure/attachment/12633884/SOLR-5827.1.patch",
        "SOLR-5827.patch": "https://issues.apache.org/jira/secure/attachment/12633360/SOLR-5827.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Upayavira",
            "id": "comment-13923803",
            "date": "2014-03-07T11:37:22+0000",
            "content": "First pass. Supports additive boosting with the mlt.bf parameter. No support for multiplicative boost, pending a choice of parameter name! "
        },
        {
            "author": "Upayavira",
            "id": "comment-13923807",
            "date": "2014-03-07T11:43:36+0000",
            "content": "Updated version with a minor tweak to get rid of compile error "
        },
        {
            "author": "Upayavira",
            "id": "comment-13923808",
            "date": "2014-03-07T11:44:21+0000",
            "content": "It is perhaps worth noting that these are made against the 4x branch. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13925883",
            "date": "2014-03-10T16:46:06+0000",
            "content": "Having had a look at the patch and it generally looks good.\nOne concern about backward compatibility: the patch changes the constructor of MoreLikeThisHelper from MoreLikeThisHelper(SolrParams, SolrIndexSearcher) to MoreLikeThisHelper(SolrParams, SolrIndexSearcher, SolrQueryRequest); while that's an helper class it's public (it's used by MoreLikeThisComponent and so cannot be made package local / protected) and therefore could be used externally so that this change may break existing client code using that. "
        },
        {
            "author": "Upayavira",
            "id": "comment-13926345",
            "date": "2014-03-10T22:27:34+0000",
            "content": "We could add a new method that takes a SolrQueryRequest, and leave the old one behind. If we added a null check on req, then the existing method would work, but just wouldn't be able to use function queries in parsing queries (as is the case now). In that case, it could just throw an exception, saying that the request must be passed in in that use case "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13930199",
            "date": "2014-03-11T10:37:37+0000",
            "content": "attached a new patch (based on trunk) which slightly improves the first one from Upayavira by moving the parameter to MoreLikeThisParams, using this feature in the MoreLikeThisHandlerTest and introduces a new constructor instead of changing the current one (which gets deprecated). "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971045",
            "date": "2014-04-16T12:57:00+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}