{
    "id": "SOLR-797",
    "title": "Construct EmbeddedSolrServer response without serializing/parsing",
    "details": {
        "affect_versions": "1.3",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Currently, the EmbeddedSolrServer serializes the response and reparses in order to create the final NamedList response.  From the comment in EmbeddedSolrServer.java, the goal is to:\n\n\tconvert the response directly into a named list",
    "attachments": {
        "SOLR-797.patch": "https://issues.apache.org/jira/secure/attachment/12391363/SOLR-797.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jonathan Lee",
            "id": "comment-12636394",
            "date": "2008-10-02T16:46:52+0000",
            "content": "This patch contains a first stab at transforming the NamedList without serializing it then parsing it from the serialized form.\n\nFrom what I can tell, all the fields (headers, facets, spelling, etc) returned from the handler in the response is valid for output except that references to actual documents need to be resolved.  This patch borrows code from NamedListCodec.java and BinaryResponseWriter.java to resolve the documents. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12713900",
            "date": "2009-05-28T07:41:24+0000",
            "content": "Marking for 1.5 "
        },
        {
            "author": "Andrey Klochkov",
            "id": "comment-12773521",
            "date": "2009-11-04T15:28:50+0000",
            "content": "Sometime ago I made such an improvement  and now decided to share it. Looks like this is the right issue. Attaching my patch, please use it if it looks better. We use our patched version without problems for several months, so it's tested in at some level. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872435",
            "date": "2010-05-27T22:05:12+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043810",
            "date": "2011-06-03T16:47:11+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106246",
            "date": "2011-09-16T14:50:13+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234651",
            "date": "2012-03-21T18:08:44+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717227",
            "date": "2013-07-23T18:47:32+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Gregg Donovan",
            "id": "comment-13882944",
            "date": "2014-01-27T16:35:46+0000",
            "content": "I'm interested in this as well. We had an custom API that was similar to the attached patch. When we switched to EmbeddedSolrServer we noticed an increase in time spent deserializing the Solr response, memory allocated, and GC spikiness.\n\nOne issue with the current EmbeddedSolrServer code is that it starts with ByteArrayOutputStream of 32 bytes and resizes repeatedly it to fit the results. We have large responses and we notice the GC hit. We experimented with a ThreadLocal<ByteBuffer>, but avoiding serializing and parsing altogether for EmbeddedSolrServer seems like an even better idea.\n\nIf there's interest, we'd be happy to revive/update/test this patch. "
        },
        {
            "author": "Gregg Donovan",
            "id": "comment-13888170",
            "date": "2014-01-31T21:06:44+0000",
            "content": "After some experimentation, it seems that reproducing exactly what happens when BinaryResponseWriter serializes and deserializes the graph without actually doing either is quite a bit of work.\n\nAttached is a less ambitious patch that just attempts to reduce the amount of allocation of byte[] involved in [de]serializing.   "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13970960",
            "date": "2014-04-16T12:56:44+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-15286755",
            "date": "2016-05-17T14:47:03+0000",
            "content": "Colleagues, what about flipping Commons IO to 2.5 and using a really expandable buffer "
        },
        {
            "author": "David Smiley",
            "id": "comment-15289095",
            "date": "2016-05-18T14:50:30+0000",
            "content": "Colleagues, what about flipping Commons IO to 2.5 and using a really expandable buffer\n\n+1 "
        },
        {
            "author": "David Smiley",
            "id": "comment-15289113",
            "date": "2016-05-18T15:02:38+0000",
            "content": "Also, FWIW, I've also used EmbeddedSolrServer and ameliorated the serialization impact by using QueryRequest.setStreamingResponseCallback so that at least the document data doesn't go through serialization.  It would be nice if EmbeddedSolrServer could be configured to do no serialization at all. I suspect for some use-cases that can't be done but I be it usually can. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-15295224",
            "date": "2016-05-21T19:34:39+0000",
            "content": "attaching SOLR-797.patch which just avoids cost array resize, but keep doing marshalling. I really want to commit it, despite it's doesn't comply with the issue summary.   "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-15295717",
            "date": "2016-05-22T20:29:10+0000",
            "content": "spawned SOLR-9147 "
        }
    ]
}