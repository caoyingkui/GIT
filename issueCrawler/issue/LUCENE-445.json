{
    "id": "LUCENE-445",
    "title": "Contrib.: Thread-safe DelayCloseIndexSearcher.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "1.4",
        "resolution": "Not A Problem",
        "status": "Closed"
    },
    "description": "Implements search over a single IndexReader, but remains open even if close() is called. This way it can be shared by \nmultiple objects that need to search the index without being aware of the keep-the-index-open-until-it-changes logic.\n\nUsage is described in the javadoc.",
    "attachments": {
        "DelayCloseIndexSearcher.java": "https://issues.apache.org/jira/secure/attachment/12314717/DelayCloseIndexSearcher.java",
        "DelayCloseIndexSearcherTest.java": "https://issues.apache.org/jira/secure/attachment/12314718/DelayCloseIndexSearcherTest.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2005-10-05T03:08:47+0000",
            "content": "The DelayCloseIndexSearcher class itself. ",
            "author": "Luc Vanlerberghe",
            "id": "comment-12331298"
        },
        {
            "date": "2005-10-05T03:10:07+0000",
            "content": "The junit test case for DelayCloseIndexSearcher. ",
            "author": "Luc Vanlerberghe",
            "id": "comment-12331299"
        },
        {
            "date": "2005-10-05T07:06:27+0000",
            "content": "Shall we add this to contrib? ",
            "author": "Otis Gospodnetic",
            "id": "comment-12331326"
        },
        {
            "date": "2011-01-26T13:57:19+0000",
            "content": "Long inactivity. Plus, Lucene in Action 2nd Edition includes an example of SearcherManager which achieves exactly what's proposed here, in a safer way. If we want to commit something like that to Lucene, we should commit SearcherManager or something similar. ",
            "author": "Shai Erera",
            "id": "comment-12987008"
        }
    ]
}