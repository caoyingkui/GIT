{
    "id": "LUCENE-6188",
    "title": "Remove HTML verification from checkJavaDocs.py",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "general/javadocs"
        ],
        "labels": "",
        "fix_versions": [
            "5.0",
            "5.1",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Currently, the broken HTML verification in checkJavaDocs.py has issues in some cases (see SOLR-6902).\n\nOn looking further to fix it with the html.parser package instead, noticed that there is broken HTML verification already present (using html.parser!)in checkJavadocLinks.py anyway which takes care of validation, and probably jTidy does it as well, going by the output (haven't verified it).\n\nGiven this, the validation in checkJavaDocs.py doesn't seem to add any further value, so here's a patch to just nuke it instead.",
    "attachments": {
        "LUCENE-6188.patch": "https://issues.apache.org/jira/secure/attachment/12693072/LUCENE-6188.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14282026",
            "author": "Ramkumar Aiyengar",
            "date": "2015-01-18T23:41:32+0000",
            "content": "https://github.com/apache/lucene-solr/pull/125\n\nCan post this as a patch instead if it helps, let me know.. "
        },
        {
            "id": "comment-14282041",
            "author": "Erick Erickson",
            "date": "2015-01-19T00:36:28+0000",
            "content": "Michael McCandless Do you have any input on this? If you think it's reasonable I can take care of committing it. "
        },
        {
            "id": "comment-14282278",
            "author": "Michael McCandless",
            "date": "2015-01-19T08:57:22+0000",
            "content": "If it's not adding value anymore (e.g. we recently turned on faster javadocs checking via javac's doclint options), I agree we should remove it: it's slow and hackity and un-understandable. "
        },
        {
            "id": "comment-14282403",
            "author": "Ramkumar Aiyengar",
            "date": "2015-01-19T11:15:26+0000",
            "content": "Here's a patch for you Erick.. "
        },
        {
            "id": "comment-14286282",
            "author": "Erick Erickson",
            "date": "2015-01-21T21:13:15+0000",
            "content": "Thanks! Back from 2 days onsite so I can pay some attention now. "
        },
        {
            "id": "comment-14286294",
            "author": "Robert Muir",
            "date": "2015-01-21T21:23:23+0000",
            "content": "\nIf it's not adding value anymore (e.g. we recently turned on faster javadocs checking via javac's doclint options), I agree we should remove it: it's slow and hackity and un-understandable.\n\nThe doclint stuff added (TRUNK ONLY) is blazing fast and nice, but there is a good amount of work before its checking html, i see these steps:\n\n\tactually turn on html verification in doclint. this can't be done until a lot of problems are fixed. When they are fixed we can enable \"html\":\n  \n-Xdoclint:all/protected -Xdoclint:-html -Xdoclint:-missing\n\n\tfigure out how to check overview.html and package.html. I suspect they are currently not being checked (but maybe im wrong). Maybe we can ask the openjdk developers about it.\n\n\n\nThen jtidy could be removed completely. python linting is still needed until we can properly enable \"missing\" and cutover build logic to that. Then i think its check-missing could be removed. As far as the python broken links checker, im not sure if there is a replacement. Ideally we are just using doclint for all checks in the future. "
        },
        {
            "id": "comment-14286498",
            "author": "Erick Erickson",
            "date": "2015-01-21T23:06:57+0000",
            "content": "Hmmm, thanks of pointing this out, but it makes things... complicated.\n\nProblem is that until this is done, SOLR-6902 is blocked as that patch fails precommit. For no good reason I can find. If I'm reading things right, doclint is only in Java 8, so is simply not an option for 5x even if the problems you point out are fixed up.\n\nIf I'm reading this right, Ramkumar's claim is that the html checking in this patch that is being removed is unnecessary anyway, so removing it doesn't lose us anything. And it's incorrectly failing this doc for some reason. I checked the generated doc file and it looks fine, I think I even ran it through an XML validator. I could always have missed something of course.\n\nThat said, the proposed changes in this JIRA to take a lot of code out of checkJavaDocs.py, and I'll very much admit I haven't gone through the changes in much detail, but they do appear to just be doing HTML validation.\n\nI can treat this somewhat as a black box and do something like apply this patch locally and:\n\n1> create some invalid JavaDoc links and insure that they're flagged if this patch is applied (any suggestions for a candidate list)? If that works (or, more accurately fails the invalid javadocs), commit this patch  to trunk and 5x and then commit SOLR-6902\nor\n2> just remove the javadocs from SOLR-6902 or possibly munge them until that code succeeds precommit.\nor\n3> try to figure out what the false failure is here and fix checkJavaDocs.py\n\nI think <1> is my first choice, and <3> is a very distant third. Spending time debugging code that it sounds like we're going to remove on trunk seems like a waste. I may do <2> anyway, remove the javaDocs and put them if one of the other approaches works. SOLR-6902 is hard to keep up to date since it touches so much, Alan's checkin is already going to be a headache to reconcile. So keeping it our of the code line just because of a bad (and possibly redundant) bit of non-standard HTML checking seems like a poor tradeoff.\n\nThis last can be argued of course....\n\nAnyway, I'll do some poking around and report back before committing anything. "
        },
        {
            "id": "comment-14286584",
            "author": "Ramkumar Aiyengar",
            "date": "2015-01-21T23:53:37+0000",
            "content": "Rob, the logic I have nuked is actually not as a duplicate of doclint (i just didnt check that, and as you mention there might be differences) but the checkJavadocLinks.py script which is run prior to this script in the documentation-lint. That does the exact same check in Python, except it uses a real parser rather than regex hacks.. "
        },
        {
            "id": "comment-14286949",
            "author": "Robert Muir",
            "date": "2015-01-22T04:38:30+0000",
            "content": "Ramkumar: maybe it is the case. I just was responding to mike mccandless's comment.\n\nthe sad facts are:\n1. doclint only happens on trunk, as we need java8 to use it.\n2. doclint currently does not validate html, i disabled that check, else builds would fail. it was TooMuchToFixOverHolidayException.\n3. doclint may not check all docs: package.html, overview.html, any other .html we make via xslt\n\nCurrently the python code checks everything and is complete. it may be slow and have some bugs but i think its not correct to remove it unless the replacement is really a replacement. "
        },
        {
            "id": "comment-14287085",
            "author": "Ramkumar Aiyengar",
            "date": "2015-01-22T08:00:57+0000",
            "content": "Thanks for the clarification Rob..\n\nErick, you should then be able to try option 1. Let me know if you don't notice unbalanced tags (the current check pretty much looks for more ending tags than beginning tags) when this patch is applied, and I can take a look.. "
        },
        {
            "id": "comment-14287193",
            "author": "Michael McCandless",
            "date": "2015-01-22T10:12:41+0000",
            "content": "I'll dig into why the linter is angered by SOLR-6902. "
        },
        {
            "id": "comment-14288006",
            "author": "Michael McCandless",
            "date": "2015-01-22T19:06:59+0000",
            "content": "I committed a fix to the linter... "
        },
        {
            "id": "comment-14290788",
            "author": "Ramkumar Aiyengar",
            "date": "2015-01-24T19:27:29+0000",
            "content": "Thanks for the fix Michael McCandless, this certainly stops the related issue from being blocked (and is now committed). But can someone comment still on if this verification has any use? As I mention, this check is already done by checkJavadocLinks.py which runs on all the files being covered by this script (and more), so this code can still be removed to make precommits slightly faster, unless I am missing something here.. "
        },
        {
            "id": "comment-14290792",
            "author": "Anshum Gupta",
            "date": "2015-01-24T19:38:01+0000",
            "content": "It doesn't seem like this was committed for 5.0 but is marked as resolved for 5.0. Erick Erickson can you confirm? "
        },
        {
            "id": "comment-14290806",
            "author": "Erick Erickson",
            "date": "2015-01-24T20:12:12+0000",
            "content": "Anshum Gupta\nbq: Can you confirm?\n\n Michael McCandless committed it, but I just looked at trunk, 5.x and 5.0 and the change appears to be in all three.\n\nShouldn't matter too much anyway, the problem was only tripped by code that is not (and will not be) in 5.0, so as long as it's in 5x and trunk we're good.\n\nThe patches above are not what Mike checked in, see \n5.0: r1654012\n5.x: r1654008\ntrunk: r1654004 "
        },
        {
            "id": "comment-14332856",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:02:17+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}