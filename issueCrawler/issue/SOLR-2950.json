{
    "id": "SOLR-2950",
    "title": "QueryElevationComponent needlessly looks up document ids",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The QueryElevationComponent needlessly instantiates a FieldCache and does look ups in it for every document.  If we flipped things around a bit and got Lucene internal doc ids on inform() we could then simply do a much smaller and faster lookup during the sort.",
    "attachments": {
        "SOLR-2950.patch": "https://issues.apache.org/jira/secure/attachment/12507344/SOLR-2950.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13163661",
            "date": "2011-12-06T15:51:22+0000",
            "content": "Instead of doing everything on inform (which isn't great for NRT), we should just do it on-demand in the comparator in setNextReader() for only those uniqueKeys that were boosted)\n\nWe could cache the uniqueKey -> docid across queries, but not sure it's worth it at this point (assuming at most a handful of docs are boosted per-query).  And if we did want some sort of uniqueKey -> docid cache it would make most sense to be an internal cache in SolrIndexSearcher, not private to the QEC. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13168900",
            "date": "2011-12-14T00:01:20+0000",
            "content": "It would probably be most performant to do the lookup perSegment (i.e. in setNextReader) and remove documents as they are found (i.e. if the doc exists in segment1, don't bother looking it up in further segments).  This will also mean that we only do hash lookups in the SentinelIntSet when there actually exists a boosted doc in the segment. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13169307",
            "date": "2011-12-14T12:53:08+0000",
            "content": "First draft.  This just does the mapping in the constructor to the comparator.  We could do setNextReader, but I can't imagine it will really make much difference given the small number of items that we typically would expect to be elevated. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13169360",
            "date": "2011-12-14T13:53:46+0000",
            "content": "Note, I'm going to try the way Yonik suggested too, but wanted to put this up as a first draft. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13169377",
            "date": "2011-12-14T14:08:32+0000",
            "content": "Also, I need to double check my comparator understanding b/c perhaps the doc ids are off due to getting a top level reader. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13169670",
            "date": "2011-12-14T20:37:48+0000",
            "content": "I can't imagine it will really make much difference given the small number of items that we typically would expect to be elevated.\n\nThe fact that it will be a small number of elevated docs is entirely my point - that means that if we do it per segment, that there will normally be no documents elevated in a specific segment and the hash lookup can be skipped (and that would be a sizeable gain for something simple like a term query).  You're right about small sets - it doesn't matter if the set size is 1 or 10 if you do need to do the lookup. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13169765",
            "date": "2011-12-14T22:39:45+0000",
            "content": "This patch moves the work to setNextReader "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13170160",
            "date": "2011-12-15T12:40:35+0000",
            "content": "Minor cleanup.  I think this is ready to go and will likely commit later today or tomorrow. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13174230",
            "date": "2011-12-21T17:15:38+0000",
            "content": "OK, just had a chance to view the comparator part of this patch.\n\nHere's a patch that fixes\n\n\tminor check-for-null for fields() and terms() which can return null\n\teven though docsEnum returns something, it may be deleted (i.e. need to check for NO_MORE_DOCS)\n\tuse liveDocs when requesting the docsEnum so we won't use a deleted (overwritten) doc.\n\n\n\nThe last two issues would both cause us to miss elevated documents if they have been updated and an old deleted version still exists in the index. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13174258",
            "date": "2011-12-21T17:59:49+0000",
            "content": "+1, go ahead and commit. "
        }
    ]
}