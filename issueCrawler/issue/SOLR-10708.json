{
    "id": "SOLR-10708",
    "title": "Cannot find certain long values when docValues=true,indexed=false",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.7",
        "resolution": "Invalid",
        "status": "Resolved"
    },
    "description": "I define a field like this:\n  <field indexed=\"false\" name=\"facet_d\" stored=\"false\" type=\"tlong\" docValues=\"true\"/>\n\nWhen I index these with a program assigning random longs to the fields searching on facet_d fails to find some values, but only when there are multiple documents. For instance, the value \"6850281131226296000\" was in this field, but searching on facet_d:6850281131226296000 does not find the document.\n\nSearching on facet_d:[6850281131226290000 TO 6850281131226297000]  works if the range is \"wide enough\", but I don't have a good sense of how wide that is. Note that the values in that clause are not identical!\n\nNOTE: this problem does not occur if there's only one document in the corpus. I'll try to make a failing test.\n\nAdrien Grand suggested that I look at the actual indexed values, but since the document is found in the single-doc case I'll assume that the stored compatibly between the index and query at least.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-18T16:12:15+0000",
            "content": "OK, here's a patch that fails for me every time from IntelliJ. It may not fail all the time, but it hasn't run successfully for me yet.\n\nIt does find a few of the values but then barfs pretty early in the process. ",
            "author": "Erick Erickson",
            "id": "comment-16016004"
        },
        {
            "date": "2017-05-19T12:39:55+0000",
            "content": "Ouch!\n\nYou put \"Affects Version\" for 6.7.  Can you check if this affects 6.6?  If it does, this is a release blocker. ",
            "author": "David Smiley",
            "id": "comment-16017337"
        },
        {
            "date": "2017-05-19T16:00:25+0000",
            "content": "David:\n\nStupid test. Yes, it fails. With a query parsing error on a negative number. The test is completely invalid so I removed it. Let me dig some more.\n\nBut do note that the original problem did not involve negative numbers, so I think there's still an issue here. ",
            "author": "Erick Erickson",
            "id": "comment-16017590"
        },
        {
            "date": "2017-05-19T19:03:17+0000",
            "content": "Blast, got fooled again by Chrome attempting to prettify XML or JSON. I vaguely remember someone saying something about this a while ago being a javascript  issue. Sure wish I'd remembered this a few hours earlier.\n\nAnyway, I issue a query q=id:some_id and Chrome displays:\n\nfacet_d: 7542527836020716000\n\nDo the same thing via curl or Safari (which doesn't have a prettify plugin installed) and I get:\n\nfacet_d:7542527836020715275\n\nOf course I cut/pasted the Chrome value in when I was trying to find documents with specific values for facet_d and failed. \n\nWhich explains why every time I thought I had a failing test I eventually found out it was a test problem, not a Solr/Lucene problem. And why having a range \"wide enough\" would work.\n\nDavid SmileyAdrien Grand you can relax now. ",
            "author": "Erick Erickson",
            "id": "comment-16017851"
        },
        {
            "date": "2017-05-19T19:31:40+0000",
            "content": "Wow! I don't normally use Chrome (I prefer Safari).  If a Chrome user looks at JSON results from Solr, then you're saying Chrome converts 7542527836020715275 from the service to 7542527836020716000?  If so that's terrible! ",
            "author": "David Smiley",
            "id": "comment-16017896"
        },
        {
            "date": "2017-05-19T19:42:07+0000",
            "content": "Not Chrome, Javascript.\n\nI did a better search and my memory is not playing tricks. It appears to be a Javascript issue according to: http://stackoverflow.com/questions/17320706/javascript-long-integer\n\nSo anything using Javascript to produce the output would presumably have the same problem no matter the browser. I'm assuming my beautifiers are using js.\n ",
            "author": "Erick Erickson",
            "id": "comment-16017911"
        }
    ]
}