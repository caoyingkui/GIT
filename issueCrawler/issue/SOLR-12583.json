{
    "id": "SOLR-12583",
    "title": "Add basic authentication option for [subquery] document transformer",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "Authentication",
            "security"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "7.4",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Add the ability to use a document transformer [subquery] on a multi-node SolrCloud cluster with the basic authentication plugin enabled (https://lucene.apache.org/solr/guide/7_4/transforming-result-documents.html).\u00a0 Currently the subquery request will return an org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException Error 401 require authentication as the [subquery] request is not made using the logged in users basic authentication credentials.",
    "attachments": {
        "jira_subquery_email.txt": "https://issues.apache.org/jira/secure/attachment/12932790/jira_subquery_email.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-30T15:06:20+0000",
            "content": "Or perhaps the subquery\u00a0transformer should simply forward the original credentials?\n\nAnd what if another Auth plugin than BasicAuth is in use? Such as Kerberos or Hadoop or a 3rd party? Can we find a more generic way to forward auth credentials in this and other use cases? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16562002"
        },
        {
            "date": "2018-07-30T20:35:18+0000",
            "content": "Thanks Jan a generic approach to passing the original security configuration details to the [subquery] request\u00a0would definitely be the\u00a0ideal outcome.\u00a0 ",
            "author": "Dwane Hall",
            "id": "comment-16562466"
        }
    ]
}