{
    "id": "LUCENE-8496",
    "title": "Explore selective dimension indexing in BKDReader/Writer",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Implemented",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "affect_versions": "7.6,                                            master (8.0)",
        "labels": "",
        "priority": "Major",
        "type": "New Feature"
    },
    "description": "This issue explores adding a new feature to BKDReader/Writer that enables users to select a fewer number of dimensions to be used for creating the BKD index than the total number of dimensions specified for field encoding. This is useful for encoding dimensional data that is used for interpreting the encoded field data but unnecessary (or not efficient) for creating the index structure. One such example is LatLonShape encoding. The first 4 dimensions may be used to to efficiently search/index the triangle using its precomputed bounding box as a 4D point, and the remaining dimensions can be used to encode the vertices of the tessellated triangle. This causes BKD to act much like an R-Tree for shape data where search is distilled into a 4D point (instead of a more expensive 6D point) and the triangle is encoded using a portion of the remaining (non-indexed) dimensions. Fields that use the full data range for indexing are not impacted and behave as they normally would.",
    "attachments": {
        "LUCENE-8496.patch": "https://issues.apache.org/jira/secure/attachment/12939478/LUCENE-8496.patch",
        "LatLonShape_SelectiveEncoding.patch": "https://issues.apache.org/jira/secure/attachment/12941711/LatLonShape_SelectiveEncoding.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16612826",
            "author": "Nicholas Knize",
            "content": "Initial patch provided:\n\nThe lionshare of the changes are made to FieldType, BKDWriter, and BKDReader.\n\n\n\tFieldType - split pointDimensionCount into two new integers that define pointDataDimensionCount and pointIndexDimensionCount. pointIndexDimensionCount must be <= pointDataDimensionCount and defines the first n dimensions that will be used to build the index. The remaining pointDataDimensionCount - pointIndexDimensionCount dimensions are ignored while building (e.g., split/merge) the index. Getter and Setter utility methods are added.\n\n\n\n\n\tBKDWriter - change writeIndex to encode and write numIndexDims in the 2 most significant bytes of the integer that formerly stored numDims this provides simple backwards compatability without requiring a change to FieldInfoFormat. Indexing methods are updated to only use the first numIndexDims while building the tree. Leaf nodes still use numDataDims for efficiently packing and compressing the leaf level data (data nodes).\n\n\n\n\n\tBKDReader - add version checking in the constructor to decode numIndexDims and numDataDims from the packed dimension integer. Update index reading methods to only look at the first numIndexDims while traversing the tree. numDataDims are still used for decoding leaf level data.\n\n\n\n\n\tAPI Changes - all instances of pointDimensionCount have been updated to pointDataDimensionCount and pointIndexDimensionCount to reflect total number of dimensions, and number of dimensions used for creating the index, respectively.\n\n\n\n\n\tAll POINT Tests and POINT based Fields have been updated to use the API changes.\n\n\n\nBenchmarking\n\u2014\n\nTo benchmark the changes I update LatLonShape (not included in this patch) and ran benchmark tests both with and without selective indexing. The results are below: \n\n6 dimension encoded LatLonShape w/o selective indexing\n------\nINDEX SIZE: 1.2795778876170516 GB\nREADER MB: 1.7928361892700195\nBEST M hits/sec: 11.67378231920028\nBEST QPS: 6.8635445274291715 for 225 queries, totHits=382688713\n\n7 dimension LatLonShape encoding w/ 4 dimension selective indexing\n-------\nINDEX SIZE: 2.1509012933820486 GB\nREADER MB: 1.8154268264770508\nBEST M hits/sec: 17.018094815004627\nBEST QPS: 10.005707519719927 for 225 queries, totHits=382688713\n\nThe gains are a little better than the differences between searching a 4d range vs a 6d range. The index size increased due to using 7 dimensions instead of 6, but I also switched over to a bit bigger encoding size. ",
            "date": "2018-09-12T22:39:25+0000"
        },
        {
            "id": "comment-16614910",
            "author": "Adrien Grand",
            "content": "It is a pity that the patch is so large given that the change is actually simple. I like the idea and the patch looks very clean overall, I see you added validation for corner-cases like rejecting dataDimensionCount>0 but indexDimensionCount==0. Out of curiosity, did your working copy already have LUCENE-7862 when you ran the benchmark? I have some minor comments on the patch, could you maybe set up a pull request or use Apache reviewboard to make it easier to comment on your changes and iterate? ",
            "date": "2018-09-14T14:14:54+0000"
        },
        {
            "id": "comment-16615249",
            "author": "Nicholas Knize",
            "content": "It is a pity that the patch is so large\n\nYeah. Refactoring pointDimensionCount touched a lot of files so the patch is rather busy. I could change it to leave pointDimensionCount as is and just add a new indexDimensionCount?\n\nOut of curiosity, did your working copy already have LUCENE-7862 when you ran the benchmark?\n\nYes. My benchmark numbers include the latest change to store min/max packed values. The only difference is using LatLonShape without and with the selective indexing approach.\n\n...could you maybe set up a pull request or use Apache reviewboard\n\n Sure thing! I went ahead and opened a PR here ",
            "date": "2018-09-14T18:59:00+0000"
        },
        {
            "id": "comment-16632129",
            "author": "Nicholas Knize",
            "content": "I've attached an updated patch that is consistent with the latest PR updates. Additionally, I've attached a WIP patch that modifies LatLonShape encoding to take advantage of the selective indexing changes to boost QPS per the table listed above. I'll ultimately create a separate issue but wanted to provide it now for anyone that wants it to review the application of this feature or benchmark performance.\n\n ",
            "date": "2018-09-28T16:54:59+0000"
        },
        {
            "id": "comment-16634501",
            "author": "Nicholas Knize",
            "content": "Attaching latest patch consistent with recent PR updates. I think this is about ready.\n\nI ran two new benchmarks using 20M documents from the PlanetOSM corpus of data. The first is without selective indexing and using LatLonShape currently in master, the second is with selective indexing and using 7 dimension long encoding for LatLonShape. The first 4 index dimensions are the bounding box of the triangle (compressed to Integer size) and the remaining 3 data dimensions are the three vertices of the triangle. What's nice about this is we can arrange the three triangle vertices so that the first two represent the edge of the shape. I think this will provide a path forward for implementing the CONTAINS query.\n\nNevertheless, this is a great benchmark because it uses real world shape data. (LineStrings, MultiLineStrings, Polygons, and MultiPolygons - with and without holes). The geometries are quite complex and the results are looking good.\n\n6 dimension LatLonShape w/o selective indexing:\n\u2014\nINDEX SIZE: 4.944349942728877 GB\nREADER MB: 2.7018051147460938\nmaxDoc=20000000\nBEST M hits/sec: 0.9616386761834046\nBEST QPS: 5.816462716249435\n\n\n7 dimension LatLonShape w/ selective indexing:\n\u2014\nINDEX SIZE: 8.462444095872343 GB\nREADER MB: 2.5924673080444336\nmaxDoc=20000000\nBEST M hits/sec: 1.5636273064182318\nBEST QPS: 9.457585426978618\n ",
            "date": "2018-10-01T19:16:38+0000"
        },
        {
            "id": "comment-16637281",
            "author": "Nicholas Knize",
            "content": "Updated patch that's consistent with the PR changes and feedback. Will commit this to master and 7.x pending a final QA check. ",
            "date": "2018-10-03T17:42:58+0000"
        },
        {
            "id": "comment-16637680",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 10 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   5m 57s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   6m 31s \n  the patch passed  \n\n\n +1 \n  javac  \n   6m 31s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 44s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 17s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 17s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n   7m 11s \n  codecs in the patch failed.  \n\n\n +1 \n  unit  \n  31m 26s \n  core in the patch passed.  \n\n\n +1 \n  unit  \n   2m 16s \n  highlighter in the patch passed.  \n\n\n +1 \n  unit  \n   1m 15s \n  join in the patch passed.  \n\n\n +1 \n  unit  \n   0m 17s \n  memory in the patch passed.  \n\n\n +1 \n  unit  \n   4m 56s \n  sandbox in the patch passed.  \n\n\n +1 \n  unit  \n   2m 45s \n  spatial-extras in the patch passed.  \n\n\n +1 \n  unit  \n   5m 53s \n  test-framework in the patch passed.  \n\n\n -1 \n  unit  \n  87m 35s \n  core in the patch failed.  \n\n\n  \n   \n 163m 16s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n lucene.codecs.simpletext.TestSimpleTextPointsFormat \n\n\n\u00a0\n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestSimTriggerIntegration \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8496 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12942299/LUCENE-8496.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 46f753d \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-LUCENE-Build/99/artifact/out/patch-unit-lucene_codecs.txt \n\n\n unit \n https://builds.apache.org/job/PreCommit-LUCENE-Build/99/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/99/testReport/ \n\n\n modules \n C: lucene lucene/codecs lucene/core lucene/highlighter lucene/join lucene/memory lucene/sandbox lucene/spatial-extras lucene/test-framework solr/core U: . \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/99/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-10-04T01:22:07+0000"
        },
        {
            "id": "comment-16640312",
            "author": "Nicholas Knize",
            "content": "Updated patch to make SimpleTextBKDWriter consistent w/ BKDWriter. Will commit pending QA ",
            "date": "2018-10-05T20:24:24+0000"
        },
        {
            "id": "comment-16640579",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n -1 \n  patch  \n   0m  6s \n  LUCENE-8496 does not apply to master. Rebase required? Wrong Branch? See https://wiki.apache.org/lucene-java/HowToContribute#Contributing_your_work for help.  \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8496 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12942614/LUCENE-8496.patch \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/102/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-10-06T06:17:11+0000"
        },
        {
            "id": "comment-16640863",
            "author": "Nicholas Knize",
            "content": "Posted bad patch. Correct patch provided for QA ",
            "date": "2018-10-06T20:13:23+0000"
        },
        {
            "id": "comment-16641236",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 10 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   7m  5s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   5m 39s \n  the patch passed  \n\n\n +1 \n  javac  \n   5m 39s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 59s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 30s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 30s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   9m  5s \n  codecs in the patch passed.  \n\n\n +1 \n  unit  \n  30m 31s \n  core in the patch passed.  \n\n\n +1 \n  unit  \n   1m 18s \n  highlighter in the patch passed.  \n\n\n +1 \n  unit  \n   1m 58s \n  join in the patch passed.  \n\n\n +1 \n  unit  \n   1m 11s \n  memory in the patch passed.  \n\n\n +1 \n  unit  \n   4m 35s \n  sandbox in the patch passed.  \n\n\n +1 \n  unit  \n   1m 18s \n  spatial-extras in the patch passed.  \n\n\n +1 \n  unit  \n   4m 44s \n  test-framework in the patch passed.  \n\n\n -1 \n  unit  \n  90m 55s \n  core in the patch failed.  \n\n\n  \n   \n 165m  2s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.sim.TestSimPolicyCloud \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8496 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12942690/LUCENE-8496.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 367bdf7 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-LUCENE-Build/103/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/103/testReport/ \n\n\n modules \n C: lucene lucene/codecs lucene/core lucene/highlighter lucene/join lucene/memory lucene/sandbox lucene/spatial-extras lucene/test-framework solr/core U: . \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/103/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-10-07T22:56:41+0000"
        },
        {
            "id": "comment-16645246",
            "author": "Nicholas Knize",
            "content": "Failure on branch_7x: \nant test  -Dtestcase=TestBKD -Dtests.seed=3A807E1398CE4499 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=sr-Latn-BA -Dtests.timezone=Africa/Malabo -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n\nMuting test until fix is pushed. ",
            "date": "2018-10-10T16:49:34+0000"
        },
        {
            "id": "comment-16645266",
            "author": "Nicholas Knize",
            "content": "I went ahead and reverted this feature from branch_7x until the backport can be cleaned up. Sorry for the noise. ",
            "date": "2018-10-10T17:03:12+0000"
        },
        {
            "id": "comment-16645761",
            "author": "Steve Rowe",
            "content": "FYI two other failing tests on branch_7x from https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/2891/ (before the commit was reverted):\n\n\nant test -Dtestcase=TestLucene60PointsFormat -Dtests.seed=B5A28E6677965A99 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=fr-CA -Dtests.timezone=Asia/Irkutsk -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\n\n\n\nant test -Dtestcase=TestAssertingPointsFormat -Dtests.seed=F280908F18AE1657 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=dz -Dtests.timezone=Etc/GMT-10 -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n\n ",
            "date": "2018-10-11T00:27:09+0000"
        },
        {
            "id": "comment-16655557",
            "author": "ASF subversion and git services",
            "content": "Commit 804afbfd47cc8d86ceda6ea66f0afe304af1ad1b in lucene-solr's branch refs/heads/branch_7x from Nicholas Knize\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=804afbf ]\n\nLUCENE-8496: Selective indexing - modify BKDReader/BKDWriter to allow users to select a fewer number of dimensions to be used for creating the index than the total number of dimensions used for field encoding. i.e., dimensions 0 to N may be used to determine how to split the inner nodes, and dimensions N+1 to D are ignored and stored as data dimensions at the leaves. ",
            "date": "2018-10-18T16:41:15+0000"
        },
        {
            "id": "comment-16655563",
            "author": "Nicholas Knize",
            "content": "Closing; pushed to master and branch_7x ",
            "date": "2018-10-18T16:44:49+0000"
        }
    ]
}