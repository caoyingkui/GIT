{
    "id": "SOLR-11803",
    "title": "Remove all traces of \"optimize\" from Solr and replice with \"forceMerge\"",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Umbrella issue for removing optimize from Solr.\n\nThis has been kicked around for quite some time. It turns out that there are a number of places all this is baked in to code. Here are the places hinted at by just looking at the reference guide:\n\nsuggester has \"buildOnOptimize\".\nDIH has optimize.\npostOptimize hook\nIgnoreCommitOptimizeUpdateProcessorFactory\nignoreOptimizeOnly\nbuildOnOptimize\nAnd what about JMX stats? UPDATE.updateHandler.optimizes\n\nThen there are about a zillion places in the code that use optimize, I'm not sure how many of those would need to change. Lots of tests for instance have: \"assertU(optimize());\"\n\nThe first step would be to deprecate public static String OPTIMIZE = \"optimize\" in  UpdateParams, add FORCEMERGE and proceed from there.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}