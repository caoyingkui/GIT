{
    "id": "SOLR-633",
    "title": "QParser for use with user-entered query which recognizes subphrases as well as allowing some other customizations on per field basis",
    "details": {
        "affect_versions": "1.4",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Create a request handler (actually a QParser) for use with user entered queries with following features-\na) Take a user query string and try to match it against multiple fields, while recognizing sub-phrase matches.\nb) For each field give the below parameters:\n   1) phraseBoost - the factor which decides how good a n token sub phrase match is compared to n-1 token sub-phrase match.\n   2) maxScoreOnly - If there are multiple sub-phrase matches pick, only the highest\n   3) ignoreDuplicates - If the same sub-phrase query matches multiple times, pick only one.\n   4) disableOtherScoreFactors - Ignore tf, query norm, idf and any other parameters which are not relevant.\nc) Try to provide all the parameters similar to dismax. Reuse or extend dismax.  \n\nOther suggestions and feedback appreciated",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Preetam Rao",
            "id": "comment-12613849",
            "date": "2008-07-16T06:22:55+0000",
            "content": "Changed Request handler to QParser in the title... "
        },
        {
            "author": "Preetam Rao",
            "id": "comment-12613858",
            "date": "2008-07-16T07:07:18+0000",
            "content": "Removed 1.3 as fix version "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12670772",
            "date": "2009-02-05T15:10:09+0000",
            "content": "Marking for 1.5 "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12700422",
            "date": "2009-04-18T05:36:03+0000",
            "content": "This description could sure use an example!   I read it 3 times and still don't have a good picture of what this is really about. "
        },
        {
            "author": "Preetam Rao",
            "id": "comment-12744117",
            "date": "2009-08-17T16:05:00+0000",
            "content": "Hi, Sorry for such a delay. \n\nlet me take an example of a real estate site that I tried to implement free text search on, using dis max query. \n\nAlso, when I say sub phrase, I mean adjacent terms appearing in a bigger phrase,\n\nThe index has the below fields and below example record. \nlets say there are about 4 million records.\n\ncity - New York\nstate - NY\nbeds (Multi valued or synonyms)- 3 beds, beds 3\nbaths (Multi valued or synonyms) - 4 baths, baths 4\ndescription - newly built with swimming pool, new furniture, car parking etc\nsales type - new home\n\nLets say the user enters a query like \"homes in new york for price 400k with 3 beds 4 baths with swimming pool car parking\"\n\nI played with dismax for few days trying out various boosts and factors.The phrase options of dismax are not very useful because they consider all terms of the phrase to appear in a given field. (Thats what it appeared like). Word like \"new\" appearing in description field multiple times, or cities like \"york\" seemed to cause some variations.\n\nThe nature of the problem here is that, sub phrases like \"new york\", \"3 beds\" \"price 400k\", \"car parking\" become very important and must be matched in different fields without overlapping across fields.\n\nThis can be best solved by a SubPhraseQuery which is used by a DisMax-like query to combine multiple fields.\n\nhence this is what I proposed:\n\nSubPhraseQuery:\n\n\tscores based on longest sub phrases matched. Also gives a factor to boost based on match length. For example 4 word matches gets 16 score vs a 3 word match getting 9\n\tgives an option to score only one match per field. For example, a term \"new home\" gets scored only once even if it occurs N times in the description field.\n\tOption to score only longest match. For example, an occurrence of \"swimming pool\" and some other \"pool\" scores only \"swimming pool\".\n\tAs usual, ability to ignore IDF, norms and any other factors, but just use phrase match.\n\n\n\nAnd a DisMax-like query that uses the above:\n\n\tEach field can be configured with above query.\n\tOptions to ignore matches in other fields when some match.\n\n\n\nI feel this kind of use cases will be encountered when form searches are migrated to free text search, since we are trying to use solr's free text search on some kind of structured data where different fields have different meaning.\n\nProbably dismax is meant for that use case. I spent few days fine tuning dismax for the above use case. Just that, I felt like I had play a lot with various factors and it looked like lot of trial and error and still I was not sure what would the end results look like. I felt that I needed some more control over individual fields and how a match would be scored in those fields on sub phrases.\n\nLet me know your thoughts or alternatives and I will be glad to look at them.\n\n\n\n\n\n\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872411",
            "date": "2010-05-27T22:04:45+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043634",
            "date": "2011-06-03T16:46:13+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106418",
            "date": "2011-09-16T14:50:59+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234742",
            "date": "2012-03-21T18:09:08+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717394",
            "date": "2013-07-23T18:48:06+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13970963",
            "date": "2014-04-16T12:56:45+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}