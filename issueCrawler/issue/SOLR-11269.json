{
    "id": "SOLR-11269",
    "title": "Node gone after reconnecting to ZK",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I have seen some failures, related to ZkController.OnReconnect that made the node \"gone\" ( it is not present in \"/live_nodes\" ). In fact any exception during OnReconnect.command() execution will made the node \"gone\". Some of them are\n\n\tZkController.createEphemeralLiveNode() can throw NodeExistsException\n\tOutOfMemoryError : unable to create new native Thread during adding core to executorService for recovering",
    "attachments": {
        "SOLR-11269.patch": "https://issues.apache.org/jira/secure/attachment/12882834/SOLR-11269.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-08-21T07:51:55+0000",
            "content": "The patch that fix 2 exceptions that mentioned :\n\n\tZkController.createEphemeralLiveNode() should catch for NodeExistsException\n\tZkController.coreZkRegister should use fixedThreadPool strategy ( numThread = coreContainer.getConfig().getCoreLoadThreadCount() ), instead of cachedThreadPool.\n\n ",
            "author": "Cao Manh Dat",
            "id": "comment-16134825"
        },
        {
            "date": "2017-08-22T10:30:17+0000",
            "content": "Updated patch, in some test, CoreContainer.load() never being called, therefore ZkContainer.coreZkRegister never being initialized. This patch add a null check inside ZkContainer.close() ",
            "author": "Cao Manh Dat",
            "id": "comment-16136611"
        },
        {
            "date": "2017-09-01T03:37:19+0000",
            "content": "Shalin Shekhar Mangar Please take a look! ",
            "author": "Cao Manh Dat",
            "id": "comment-16149990"
        }
    ]
}