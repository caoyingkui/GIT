{
    "id": "SOLR-3316",
    "title": "Distributed Grouping fails in some scenarios.",
    "details": {
        "affect_versions": "3.4,                                            3.5",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "During a distributed grouping request, if rows is set to 0 a 500 error is returned.\n\nIf groups are unique to a shard and the row count is set to 1, then the matches number is only the matches from one shard.\n\nI've put together a failing test.",
    "attachments": {
        "TestDistributedGrouping.java.patch": "https://issues.apache.org/jira/secure/attachment/12521392/TestDistributedGrouping.java.patch",
        "SOLR-3316.patch": "https://issues.apache.org/jira/secure/attachment/12521589/SOLR-3316.patch",
        "SOLR-3316-3x.patch": "https://issues.apache.org/jira/secure/attachment/12521665/SOLR-3316-3x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Martijn van Groningen",
            "id": "comment-13247740",
            "date": "2012-04-05T21:53:42+0000",
            "content": "Thanks for creating the test case! \n\nI dived into the issue and I figured out why the matches is wrong when the top groups aren't retrieved from all shards. The total hit count (matches) is now computed in the first phase instead of in the second phase. The test passes now.\n\nWhat is odd is that the grouping request where stats is being used even fails when grouping is disabled...\n\nI think this issue also occur in all 3.x versions. "
        },
        {
            "author": "Cody Young",
            "id": "comment-13247755",
            "date": "2012-04-05T22:09:49+0000",
            "content": "That did it! All working now.\n\nThanks for you help and I'm glad I could contribute.  "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13248236",
            "date": "2012-04-06T11:25:49+0000",
            "content": "This issue also occurs in previous 3x releases. Attached a patch that fixes that. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13248252",
            "date": "2012-04-06T12:01:18+0000",
            "content": "Some parts of the patch make it difficult to review:\n\n\twhy does SimpleEndResultTransformer.transform lose its @Override?\n\twhy does GroupedEndResultTransformer/SimpleEndResultTransformer.transform gain an \n{@inheritDoc}\n? I'm not sure this will really do what you expect, because it extends a package-private method (EndResultTransformer.inheritDoc), which we don't generate javadocs for (only public, protected).\n\n\n "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13248258",
            "date": "2012-04-06T12:12:07+0000",
            "content": "Changed priority to blocker to include this bug fix into the 3.6 release. I think the changes are safe. I ran the build several times (with java 5). The javadocs task doesn't throw any errors. I also ran the distributed grouping test with multiplier of 3:\nant test-core -Dtests.multiplier=3 -Dtestcase=TestDistributedGrouping\n\nIf others think the changes aren't safe then the block priority can be removed. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13248259",
            "date": "2012-04-06T12:17:50+0000",
            "content": "why does SimpleEndResultTransformer.transform lose its @Override?\nI can change that back. My personal preference is to use @inheritDoc instead of @Override for method that implements from an interface.\n\n\nwhy does GroupedEndResultTransformer/SimpleEndResultTransformer.transform gain an \nUnknown macro: {@inheritDoc} \n? I'm not sure this will really do what you expect, because it extends a package-private method (EndResultTransformer.inheritDoc), which we don't generate javadocs for (only public, protected).\nEndResultTransformer is an interface. The default is visibility public for methods, so we want to keep the javadoc, right? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13248262",
            "date": "2012-04-06T12:21:47+0000",
            "content": "\nI can change that back. My personal preference is to use @inheritDoc instead of @Override for method that implements from an interface.\n\nThats ok: for 3.6 we cannot have this @Override here anyway.\n\n\nEndResultTransformer is an interface. The default is visibility public for methods, so we want to keep the javadoc, right?\n\nI think i recommend just doing 'ant javadocs' and inspecting build/docs/... and ensuring the javadocs read as you would like.\n\nIf you are satisfied, please commit to trunk only first and others can review while hudson chews on it in trunk: or does this somehow not affect 4.0?! "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13248266",
            "date": "2012-04-06T12:27:05+0000",
            "content": "If you are satisfied, please commit to trunk only first and others can review while hudson chews on it in trunk: or does this somehow not affect 4.0?!\nIt does affect trunk. I only did use 4.0 as affect version, since it isn't released. I'll commit to trunk first and see if Hudson likes this change. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13248286",
            "date": "2012-04-06T12:47:44+0000",
            "content": "Committed to trunk. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13248293",
            "date": "2012-04-06T12:59:38+0000",
            "content": "Updated patch. "
        },
        {
            "author": "Michael McCandless",
            "id": "comment-13248343",
            "date": "2012-04-06T13:52:40+0000",
            "content": "Patch looks good!\n\nI guess it's OK to make the hard change to the EndResultTransformer interface... (it's marked @experimental). "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13248442",
            "date": "2012-04-06T16:02:17+0000",
            "content": "Given mike's review, i think this should be committed to 3.x "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13248462",
            "date": "2012-04-06T16:14:23+0000",
            "content": "I'll take the backport. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13248469",
            "date": "2012-04-06T16:25:04+0000",
            "content": "Thanks Cody! "
        }
    ]
}