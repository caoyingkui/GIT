{
    "id": "LUCENE-7290",
    "title": "geo3d test failure",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "modules/spatial3d"
        ],
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Error Message:\ninvalid hits for shape=GeoNorthRectangle: {planetmodel=PlanetModel.WGS84, bottomlat=0.35451471030934045(20.312196676028226), leftlon=9.908337057950734E-15(5.677058954136481E-13), rightlon=2.891004593509811E-11(1.6564236176104631E-9)}\n\nStack Trace:\njava.lang.AssertionError: invalid hits for shape=GeoNorthRectangle: {planetmodel=PlanetModel.WGS84, bottomlat=0.35451471030934045(20.312196676028226), leftlon=9.908337057950734E-15(5.677058954136481E-13), rightlon=2.891004593509811E-11(1.6564236176104631E-9)}\n        at __randomizedtesting.SeedInfo.seed([1D5C0D197B0122B4:AD23708DF44C8C28]:0)\n        at org.junit.Assert.fail(Assert.java:93)\n        at org.apache.lucene.spatial3d.TestGeo3DPoint.testGeo3DRelations(TestGeo3DPoint.java:440)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\n...\n\n\n\nand\n\n\nBuild Log:\n[...truncated 8902 lines...]\n   [junit4] Suite: org.apache.lucene.spatial3d.TestGeo3DPoint\n   [junit4]   1> doc=3174 should match but did not\n   [junit4]   1>   point=[X=-0.01741337087280333, Y=-2.3309114714909325E-10, Z=0.9976113452615002]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestGeo3DPoint -Dtests.method=testGeo3DRelations -Dtests.seed=1D5C0D197B0122B4 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=lt -Dtests.timezone=Europe/Kiev -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 7.13s J1 | TestGeo3DPoint.testGeo3DRelations <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: invalid hits for shape=GeoNorthRectangle: {planetmodel=PlanetModel.WGS84, bottomlat=0.35451471030934045(20.312196676028226), leftlon=9.908337057950734E-15(5.677058954136481E-13), rightlon=2.891004593509811E-11(1.6564236176104631E-9)}\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([1D5C0D197B0122B4:AD23708DF44C8C28]:0)\n   [junit4]    >        at org.apache.lucene.spatial3d.TestGeo3DPoint.testGeo3DRelations(TestGeo3DPoint.java:440)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n   [junit4] IGNOR/A 0.01s J1 | TestGeo3DPoint.testRandomBig\n   [junit4]    > Assumption #1: 'nightly' test group is disabled (@Nightly())\n   [junit4]   2> NOTE: test params are: codec=Lucene62, sim=RandomSimilarity(queryNorm=false,coord=crazy): {}, locale=lt, timezone=Europe/Kiev\n   [junit4]   2> NOTE: Linux 4.4.0-21-generic i386/Oracle Corporation 1.8.0_92 (32-bit)/cpus=12,threads=1,free=43619256,total=64946176\n   [junit4]   2> NOTE: All tests run in this JVM: [TestGeo3DPoint]\n   [junit4] Completed [10/11 (1!)] on J1 in 74.75s, 13 tests, 1 failure, 1 skipped <<< FAILURES!",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15289940",
            "author": "Karl Wright",
            "date": "2016-05-18T22:01:17+0000",
            "content": "Failure analysis:\n\n\n   [junit4]   1>   root cell: cell=43116 x: -2 TO 2013125215, y: -2 TO 1, z: 745164843 TO 2140283542, splits: 0\n   [junit4]   1>   cycle: cell=43116 x: -2 TO 2013125215, y: -2 TO 1, z: 745164843 TO 2140283542, splits: 0 queue.size()=0\n   [junit4]   1>     minx=-9.32364588596373E-10 maxx=0.9384833319044121 miny=-9.32364588596373E-10 maxy=9.323645885963728E-10 minz=0.34738265614008795 maxz=0.9977622925243912\n   [junit4]   1>     GeoArea.OVERLAPS: keep splitting\n   [junit4]   1>     now split on x=283727372\n   [junit4]   1>     split cell1: cell=43117 parentCellID=43116 x: -2 TO 283727372, y: -2 TO 1, z: 745164843 TO 2140283542, splits: 1\n   [junit4]   1>     split cell2: cell=43118 parentCellID=43116 x: 283727372 TO 2013125215, y: -2 TO 1, z: 745164843 TO 2140283542, splits: 1\n\n\n\n\n   [junit4]   1> doc=3174 should match but did not\n   [junit4]   1>   point=[X=-0.01741337087280333, Y=-2.3309114714909325E-10, Z=0.9976113452615002]\n\n\n\nLooks like doc=3174 is not within the root cell.\nX=-0.01741337087280333\nbut\nminx=-9.32364588596373E-10 maxx=0.9384833319044121\n\nSo, maybe bounds are wrong?  But I can't see how this point should be considered within the shape at all...  The shape:\n\n\n   [junit4]    > Throwable #1: java.lang.AssertionError: invalid hits for shape=GeoNorthRectangle: {planetmodel=PlanetModel.WGS84, bottomlat=0.35451471030934045(20.312196676028226), leftlon=9.908337057950734E-15(5.677058954136481E-13), rightlon=2.891004593509811E-11(1.6564236176104631E-9)}\n\n\n\nThis is an extremely thin slice from the north pole down to latitude 20.312.  Both left longitude and right longitude are positive, though small \u2013 essentially almost 0.0.  This would lead to points being in-set only if they have positive X.  How, then, can it be thinking that any point with X=-0.01741337087280333 can be in-set?\n\nThe only answer I have is that this slice is just barely non-degenerate.  The point in question must be within the MINIMUM_RESOLUTION distance of both planes, even though it is clearly in negative territory.  Gotta think about the right solution.\n "
        },
        {
            "id": "comment-15290178",
            "author": "ASF subversion and git services",
            "date": "2016-05-19T00:35:22+0000",
            "content": "Commit 56bae72a45429679efa0d7855da4c23f73af2002 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=56bae72 ]\n\nLUCENE-7290: Decrease MINIMUM_RESOLUTION, since it's too big for at least one test case. "
        },
        {
            "id": "comment-15290189",
            "author": "ASF subversion and git services",
            "date": "2016-05-19T00:37:32+0000",
            "content": "Commit f4f1d8adc50b486187ff9ca3040b1d1115f33f22 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f4f1d8a ]\n\nLUCENE-7290: Decrease MINIMUM_RESOLUTION, since it's too big for at least one test case. "
        },
        {
            "id": "comment-15290744",
            "author": "Karl Wright",
            "date": "2016-05-19T09:04:55+0000",
            "content": "The reduction in MINIMUM_RESOLUTION did not go well, so I am rolling that back.  I'll add a couple of unit tests which help bound it to 1e-12 or so. "
        },
        {
            "id": "comment-15290752",
            "author": "ASF subversion and git services",
            "date": "2016-05-19T09:09:21+0000",
            "content": "Commit 829030266793ec432f76e168def5c906dc886613 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8290302 ]\n\nLUCENE-7290: Roll back resolution increase. "
        },
        {
            "id": "comment-15290754",
            "author": "ASF subversion and git services",
            "date": "2016-05-19T09:10:27+0000",
            "content": "Commit 7c3095eef074d82b552aaf5a4f233d540e52bdce in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7c3095e ]\n\nLUCENE-7290: Roll back resolution increase. "
        },
        {
            "id": "comment-15290777",
            "author": "Karl Wright",
            "date": "2016-05-19T09:28:15+0000",
            "content": "A simple test shows that Geo3D is working just fine.  This passes:\n\n\n  @Test\n  public void testFailureCase1() {\n    final GeoPoint point = new GeoPoint(-0.01741337087280333, 2.3309114714909325E-10, 0.9976113452615002);\n    final GeoBBox box = new GeoNorthRectangle(PlanetModel.WGS84, 0.35451471030934045, 9.908337057950734E-15, 2.891004593509811E-11);\n    final XYZBounds bounds = new XYZBounds();\n    box.getBounds(bounds);\n    final XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(), bounds.getMinimumY(), bounds.getMaximumY(), bounds.getMinimumZ(), bounds.getMaximumZ());\n    \n    assertTrue(!solid.isWithin(point));\n    assertTrue(!box.isWithin(point));\n  }\n\n\n\nAnd yet when shape.isWithin() is called in the relations test for the same point, it says \"yes, this point is within the shape\".  Not quite sure how to resolve the discrepancy; looking deeper.\n "
        },
        {
            "id": "comment-15290798",
            "author": "Karl Wright",
            "date": "2016-05-19T09:36:57+0000",
            "content": "Ah, the test was not reporting the mapped point.  It is that point that demonstrates the behavior.  This test fails on the last line:\n\n\n  @Test\n  public void testFailureCase1() {\n    final GeoPoint point = new GeoPoint(-0.017413370801260174, -2.132522881412925E-18, 0.9976113450663769);\n    final GeoBBox box = new GeoNorthRectangle(PlanetModel.WGS84, 0.35451471030934045, 9.908337057950734E-15, 2.891004593509811E-11);\n    final XYZBounds bounds = new XYZBounds();\n    box.getBounds(bounds);\n    final XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(), bounds.getMinimumY(), bounds.getMaximumY(), bounds.getMinimumZ(), bounds.getMaximumZ());\n    \n    assertTrue(!solid.isWithin(point));\n    assertTrue(!box.isWithin(point));\n  }\n\n "
        },
        {
            "id": "comment-15290849",
            "author": "Karl Wright",
            "date": "2016-05-19T10:20:23+0000",
            "content": "We have two possibilities. (1) Add another plane in these cases, or (2) increase bounds.  It should be possible to calculate how much we need to increase bounds.\n\nCalculating it out, if the angular difference between the two planes is MINIMUM_RESOLUTION, then there is no solution, which basically means that this approach cannot be used.  Even if we limit the angular difference to twice the minimum resolution, we still get the need to extend the bounds so much we include the entire world.\n\nTherefore I conclude that a fixed bounds extension of this kind is unfeasible.\n\nThe possibilities that remain include:\n\n\n\tDynamic bounds adjustment, but not sure how this would work\n\tAdditional cutoff planes when angles are very small\n\tAn alternate or special implementation for any situation where there's a tight angle between two planes\n\tStopgap increase in XYZ bounds adjustment to cover the specific failure, essentially hoping that this would make failures rare enough that we'd not expect to encounter them (this is LatLonPoint's approach, BTW)\n\n\n\n\nMore thought is needed, clearly.  \n\n "
        },
        {
            "id": "comment-15293839",
            "author": "ASF subversion and git services",
            "date": "2016-05-20T17:50:16+0000",
            "content": "Commit 908225d1749a9c0b61d92fbc940c9031cd30e361 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=908225d ]\n\nLUCENE-7290: Add support for calculating bounds for intersections. "
        },
        {
            "id": "comment-15293842",
            "author": "ASF subversion and git services",
            "date": "2016-05-20T17:51:57+0000",
            "content": "Commit abfc24bfa7694f88a73f6614b118224b5bcb825b in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=abfc24b ]\n\nLUCENE-7290: Add support for calculating bounds for intersections. "
        },
        {
            "id": "comment-15293846",
            "author": "ASF subversion and git services",
            "date": "2016-05-20T17:54:18+0000",
            "content": "Commit c0784d29bda84ad1a0a97bf3f0f44dc87ea7e266 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c0784d2 ]\n\nLUCENE-7290: Restore XYZBounds fudge factor to its previous value. "
        },
        {
            "id": "comment-15293847",
            "author": "ASF subversion and git services",
            "date": "2016-05-20T17:54:57+0000",
            "content": "Commit 4eee3b4ed4d532d25938a5c627cb37a960e8f02c in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4eee3b4 ]\n\nLUCENE-7290: Restore XYZBounds fudge factor to its previous value. "
        },
        {
            "id": "comment-15294274",
            "author": "Karl Wright",
            "date": "2016-05-20T21:32:11+0000",
            "content": "I added code to calculate bounds for intersections of planes including MINIMUM_RESOLUTION displacement on either side.\n\nThis should get rid of the problem.  It's still not clear whether we want to add additional plane cutoffs, though, with the purpose in mind of not violating user ideas of what the shape actually should contain. "
        }
    ]
}