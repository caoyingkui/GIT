{
    "id": "LUCENE-2663",
    "title": "wrong exception from NativeFSLockFactory (LIA2 test case)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "As part of integrating Lucene In Action 2 test cases (LUCENE-2661), I found one of the test cases fail\n\nthe test is pretty simple, and passes on 3.0. The exception you get instead (LockReleaseFailedException) is \npretty confusing and I think we should fix it.",
    "attachments": {
        "LUCENE-2663_test.patch": "https://issues.apache.org/jira/secure/attachment/12455396/LUCENE-2663_test.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-09-23T18:19:56+0000",
            "content": "for trunk, just change the test to use MockAnalyzer instead of simple... i made the patch from 3x. ",
            "author": "Robert Muir",
            "id": "comment-12914139"
        },
        {
            "date": "2010-09-23T18:25:12+0000",
            "content": "May there be a randomization issue. If both index writers use a different LockFacory, it can easy fail! So at least for one test run, the LockFactory should be identical, else the locking can produce wrong failures/messages, as SimpleFSLock and NativeFSLock can interact very limited, but there are only some security checks, so locking will fail if you mix the implementations. ",
            "author": "Uwe Schindler",
            "id": "comment-12914141"
        },
        {
            "date": "2010-09-23T18:27:08+0000",
            "content": "The test isnt random. it uses FSDirectory.open ",
            "author": "Robert Muir",
            "id": "comment-12914144"
        },
        {
            "date": "2010-09-23T18:31:18+0000",
            "content": "Sorry, you are right. The exception throws is clearly wrong  Maybe its related to Shai's changes in NativeFSLockFactory (which is the default)? ",
            "author": "Uwe Schindler",
            "id": "comment-12914146"
        },
        {
            "date": "2010-09-23T18:53:30+0000",
            "content": "I think it is the recent changes to NativeFSLockFactory...\n\nIW tries to first clear the lock, if create=true, and that attempt is causing the exception.  Really this is a holdover from SimpleFSLockFactory, which can leave orphan'd locks... so maybe somehow we shouldn't do this for other lock factories? ",
            "author": "Michael McCandless",
            "id": "comment-12914160"
        },
        {
            "date": "2010-10-02T12:49:11+0000",
            "content": "I think we should remove the call inside IW to dir.clearLock?  This is a holdover from when SimpleFSLockFactory was the default.  And, I think it's devious/dangerous w/ that lock factory since that lock factory lets you simply erase the lock out from under another open IW.  Ie that call masks bugs.\n\nAll tests pass when I remove it, and, the LIA lock test also passes. ",
            "author": "Michael McCandless",
            "id": "comment-12917190"
        },
        {
            "date": "2011-03-30T15:50:14+0000",
            "content": "Bulk close for 3.1 ",
            "author": "Grant Ingersoll",
            "id": "comment-13013411"
        }
    ]
}