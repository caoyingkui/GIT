{
    "id": "LUCENE-4284",
    "title": "RFE: stopword filter without lowercase side-effect",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "It would appear that accept()-time lowercasing of Tokens is not favourable anymore, due to the @Deprecation of the only constructor in StopFilter that allows this.\n\nPlease support some way to allow stop-word removal without lowercasing the output:\n\n  http://stackoverflow.com/questions/11777785",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-08-02T13:20:18+0000",
            "content": "The constructor is deprecated because you should set the ignoreCase\nproperty on the CharArraySet (the stopwords list itself) that you pass in.\n\nThis is described in the javadocs, basically stopfilter does not have any case sensitivity options.\nthis is instead controlled in the set (see makeStopSet etc, you can construct a case-sensitive ones)\n\n\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   * @deprecated Use {@link #StopFilter(Version, TokenStream, Set)} instead\n\n ",
            "author": "Robert Muir",
            "id": "comment-13427301"
        },
        {
            "date": "2012-08-02T14:04:13+0000",
            "content": "ok, but wouldn't it then be a good idea to have a StopAnalyzer that didn't enforce lowercase? It seems bizarre that the StopAnalyzer would be tied to the character and case filters. ",
            "author": "Sam Halliday",
            "id": "comment-13427329"
        },
        {
            "date": "2012-08-02T14:37:15+0000",
            "content": "Really all these analyzers are just simple examples and not intended to solve all use cases. \nYou can just make your own that doesnt lowercase at all with hardly any code, and \nif you want to control case sensitivity of the stopword set, again do this on your stopset itself\n(pass the boolean to StopFilter.makeStopSet etc).\n\n\n    Analyzer a = new ReusableAnalyzerBase() {\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer source = new LetterTokenizer(matchVersion, reader);\n        return new TokenStreamComponents(source, new StopFilter(matchVersion, source, stopwords));\n      }\n    };\n\n\n\nOtherwise we have to implement options to all Analyzers for everyones possible usecases,\nwhich is too many (we will never make everyone happy). ",
            "author": "Robert Muir",
            "id": "comment-13427350"
        },
        {
            "date": "2012-08-02T14:41:56+0000",
            "content": "OK, thanks. Actually all I needed was to remove stop words from a String, so the following did the trick\n\n\n            Set<Object> stops = StopFilter.makeStopSet(Version.LUCENE_36, Lists.newArrayList(StopAnalyzer.ENGLISH_STOP_WORDS_SET), true);\n            Tokenizer tokeniser = new ClassicTokenizer(Version.LUCENE_36, new StringReader(text));\n            StopFilter stopFilter = new StopFilter(Version.LUCENE_36, tokeniser, stops);\n\n            List<String> words = Lists.newArrayList();\n            try {\n                while (stopFilter.incrementToken()) {\n                    String token = stopFilter.getAttribute(CharTermAttribute.class).toString();\n                    words.add(token);\n                }\n            } catch (IOException ex) {\n                throw new GuruMeditationFailure();\n            }\n\n\n\nThe API is a bit of a labyrinth - it'll take me some time to understand many of the design decisions. ",
            "author": "Sam Halliday",
            "id": "comment-13427353"
        }
    ]
}