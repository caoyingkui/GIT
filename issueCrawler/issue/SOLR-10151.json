{
    "id": "SOLR-10151",
    "title": "TestRecovery.java - use monotonic increasing version number among all the tests to avoid unintentional reordering",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Test",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "TestRecovery has several tests inserting updates and deletes into a shared core. The tests are using fixed version number which can overlap and can cause issues depending on the order of the tests.\n\nProposing using a monotonically incrementing counter for each test and changing tests that they would allocate the used versions would ensure that later running tests would send updates with higher version only. That would prevent any unintentional reordering.\n\nExample:\nBefore:\n\n...\nupdateJ(jsonAdd(sdoc(\"id\", \"RDBQ1_1\", \"_version_\", \"1010\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\nupdateJ(jsonDelQ(\"id:RDBQ1_2\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1017\")); // This should've arrived after the 1015th update\nupdateJ(jsonAdd(sdoc(\"id\", \"RDBQ1_2\", \"_version_\", \"1015\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\nupdateJ(jsonAdd(sdoc(\"id\", \"RDBQ1_3\", \"_version_\", \"1020\")), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n...\n\n\nAfter:\n\n...\nString insVer1 = getNextVersion();\nString insVer2 = getNextVersion();\nString deleteVer = getNextVersion();\nString insVer3 = getNextVersion();\nupdateJ(jsonAdd(sdoc(\"id\", \"RDBQ1_1\", \"_version_\",insVer1)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\nupdateJ(jsonDelQ(\"id:RDBQ1_2\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-\"+deleteVer)); // This should've arrived after the 1015th update\nupdateJ(jsonAdd(sdoc(\"id\", \"RDBQ1_2\", \"_version_\", insVer2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\nupdateJ(jsonAdd(sdoc(\"id\", \"RDBQ1_3\", \"_version_\", insVer3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n...\n\n\n\nIt might increase readability as the generation of the versions happen in the preferred replay order.",
    "attachments": {
        "SOLR-10151.patch": "https://issues.apache.org/jira/secure/attachment/12863268/SOLR-10151.patch",
        "SOLR_10151.patch": "https://issues.apache.org/jira/secure/attachment/12862043/SOLR_10151.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-13T12:52:33+0000",
            "content": "Thanks Peter Szantai-Kis for taking the effort.\n\nI see you are named the version generator method getVersionString. Would it make sense for you to somehow imply that it actually changes the version between invocations? Maybe incrementAndGetVersion or similar? ",
            "author": "Mano Kovacs",
            "id": "comment-15967541"
        },
        {
            "date": "2017-04-13T13:16:06+0000",
            "content": "Updated patch with method name of \"getNextVersion\" ",
            "author": "Peter Szantai-Kis",
            "id": "comment-15967570"
        },
        {
            "date": "2017-04-14T05:17:27+0000",
            "content": "Commit 4dc367414fbaa6451a6ef0c5786adebf108c7608 in lucene-solr's branch refs/heads/master from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4dc3674 ]\n\nSOLR-10151: Use monotonically incrementing counter for doc ids in TestRecovery. ",
            "author": "ASF subversion and git services",
            "id": "comment-15968635"
        },
        {
            "date": "2017-04-14T05:18:06+0000",
            "content": "Commit 8681dafd521e72e5834765cdc216f7588a8b927c in lucene-solr's branch refs/heads/branch_6x from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8681daf ]\n\nSOLR-10151: Use monotonically incrementing counter for doc ids in TestRecovery. ",
            "author": "ASF subversion and git services",
            "id": "comment-15968637"
        },
        {
            "date": "2017-04-14T05:18:41+0000",
            "content": "Thanks guys! ",
            "author": "Mark Miller",
            "id": "comment-15968638"
        }
    ]
}