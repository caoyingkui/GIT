{
    "id": "SOLR-7230",
    "title": "An API to plugin security into Solr",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Implemented",
        "priority": "Major"
    },
    "description": "The objective is to define a API that a plugin can implement to protect various operations performed on Solr. It may have various implementations . Some built in and some external.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-11T20:09:58+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I just became aware of Apache Shiro http://shiro.apache.org/\nInstrumenting our code using a standard framework has several benefits: We don't need to maintain the core security enforcing components within Solr. Solr users can hook in their custom credentials sources; AD, LDAP, JDBC and more are supported by Shiro already. It is also not tied to Servlet containers, so we should be future proof not matter what we decide to do. ",
            "id": "comment-14357496"
        },
        {
            "date": "2015-03-11T21:13:43+0000",
            "author": "Noble Paul",
            "content": "This ticket is for an API alone, So if someone else would like Apache Sentry or something else someone should be able to implement one.\n\nIt would have been nice if we were a single app. In a dynamic cluster with 100s of nodes  , how do you manage sessions? \n\nIsn't SOLR-7207 a better place for this specific implementation? ",
            "id": "comment-14357622"
        },
        {
            "date": "2015-03-11T21:46:47+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Is it important to have a Solr-specific security API, and not a standardized one? ",
            "id": "comment-14357676"
        },
        {
            "date": "2015-03-11T22:35:58+0000",
            "author": "Ryan McKinley",
            "content": "but +1 for using Shiro \u2013 or at least making sure whatever happens plays nicely with it.  \n\nwith the shiro API, we would just need to wrap things with:\n\nif(!currentUser.isPermitted( \"solr:commit\" ))...\n\n\nor\n\nSecurityUtils.getSubject().isPermitted(...)\n\n\n\nIf we find ourselves implementing anything that looks like this... lets use someone else's API!\n ",
            "id": "comment-14357735"
        },
        {
            "date": "2015-03-11T22:41:42+0000",
            "author": "Ryan McKinley",
            "content": "Isn't SOLR-7207 a better place for this specific implementation?\n\num... i'm a bit scared why we would add PKI directly, and not punt the auth/authz implementations in something more flexible.\n\nWe may just be guessing what you have in mind with this ticket... so maybe we should wait to see.  The advantage of Shiro is that it can be backed out-of-the-box with something simple.  But has support for crazy multi-node distributed sessions etc.   ",
            "id": "comment-14357740"
        },
        {
            "date": "2015-03-12T04:14:40+0000",
            "author": "Noble Paul",
            "content": "Is shiro an api ? I think it's a specific implementation.  maintaining\nmultinode sessions for a cluster of 100s or 1000s of nodes may not be a a\nvery good idea for scaling for all users. Users may alrready have other\nidentity/access management systems. Our apis will not need to worry about\nusers per se. All we need to know is , it's this operation allowed in that\ncall. Shiro can be a specific impl but an identity based api may not be\nrequired.\n ",
            "id": "comment-14358073"
        },
        {
            "date": "2015-03-12T04:50:10+0000",
            "author": "Ryan McKinley",
            "content": "again \u2013 i don't really know what you are proposing here so perhaps you should just go ahead with a patch and then we can see...  from your description, it seems like something we want to leverage existing well tested, extendable infrastructure rather that write our own.\n\nShiro has a basic security API with reasonable defaults \u2013 then you can extend/configure it to do all kinds of things:\nhttp://shiro.apache.org/features.html\n ",
            "id": "comment-14358097"
        },
        {
            "date": "2015-03-12T06:29:19+0000",
            "author": "Noble Paul",
            "content": "This will define  a new pluggable component for Solr. It could be initialized at the corecontainer level. \ncomponent would be initialized at the node startup and destroyed at corecontainer shutdown\nThe scope of this ticket is how/where to configure that plugin  (in cloud as well as standalone mode) and the interface that the component must implement . The component will be consulted at each external API call coming in to a Solr node. \n\nUser management/ACLs are not in the scope of this API. That should be the responsibility of the plugin . Solr will just consult the component and ask it whether the request must go through or not. if no, what should be the Exception/error message . The component would also be allowed to manipulate the request and inject parameters so that it can control the data (fields or docs ) that is retrieved by the request\n\nLet's keep this as simple as that and Shiro or kerberos or PKI or whatever can be done by the component. This way we are not tying down the semantics of the security to any one kind of solution.\n ",
            "id": "comment-14358161"
        },
        {
            "date": "2015-03-12T09:10:19+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "This issue lacks a lot of context and high level end user focus. The area of security has been something we have avoided in our code base until now - for a reason - and this Jira seems to want to rush something home-cooked in without a bigger plan. Sort of starting in the wrong end.\n\nI think time may be ripe for adding security and user login to stock Solr. It will further solidify Solr as the choice for the enterprise.\n\nThe area of security is big and with many external integration needs. I think we should create an umbrella Jira outlining a master plan for what it takes to secure Solr and what our user's most urgent needs are. Then sub-tasks will follow.\n\nWhat is your concrete use case that triggered this Jira, Noble? ",
            "id": "comment-14358348"
        },
        {
            "date": "2015-03-12T09:29:32+0000",
            "author": "Noble Paul",
            "content": "This issue lacks a lot of context and high level end user focus. \n\nYes, you are right and it is done on purpose. This issue is targeted at developers of actual security implementations\n\nI think time may be ripe for adding security and user login to stock Solr\n\nI'm not sure if we should dilute our efforts by littering Solr source code with users and credentials . It can be a heavy distraction . I believe that security can be orthogonal to what we do other wise. Trying to provide a fast, super scalable , reliable search system. \n\n\nWhat is your concrete use case that triggered this Jira, Noble?\n\nWe have customers asking for integrating with their preferred authentication/authorization mechanism. At the same time, I don't want it to preempt any alternate implementations which some other customers want. Believe me, enterprise is a crazy heterogenous place with numerous different security practices. We may not be able to satisfy everyone and at the same time. Hence, there is a need for a implementation agnostic approach . \n\n\n\n ",
            "id": "comment-14358367"
        },
        {
            "date": "2015-03-12T09:41:05+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Created SOLR-7236 as an umbrella. ",
            "id": "comment-14358382"
        },
        {
            "date": "2015-08-07T11:19:29+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Guess SOLR-7207 can be solved as \"Won't solve\" and this issue can be resolved as \"Fixed\"? ",
            "id": "comment-14661670"
        },
        {
            "date": "2015-12-14T10:44:05+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Resolving as implemented since both sub tasks are completed. ",
            "id": "comment-15055808"
        }
    ]
}