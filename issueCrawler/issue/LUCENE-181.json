{
    "id": "LUCENE-181",
    "title": "TooManyClause when having large number of hits",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "Lucene version 1.3 final release\n\nI have an index with 356554 documents. I've indexed files of an average size of\n10kb.The documents in lucene have 4 field. One used as primary key, one as the\nname of the file, the third the content and the last the date of the file.\n\nBuilding a RangeQuery I tried to search in the content of the file (field\nname=\"content\") and before a specific date (each file is older than the\nspecified date so all document should have been returned) I got the following\nexception:\n\norg.apache.lucene.search.BooleanQuery$TooManyClauses\n\tat org.apache.lucene.search.BooleanQuery.add(BooleanQuery.java:109)\n\tat org.apache.lucene.search.BooleanQuery.add(BooleanQuery.java:101)\n\tat org.apache.lucene.search.RangeQuery.rewrite(RangeQuery.java:137)\n\tat org.apache.lucene.search.BooleanQuery.rewrite(BooleanQuery.java:244)\n\tat org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:188)\n\nThe string representation of the Query is:\n+(+content:reuters) +date:[ TO 0dovxpz40]\n\nwhere \"content\" is the field where the file content is indexed\nand \"date\" the field containing the date, stored via DateField.dateToString(Date)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2004-02-12T19:36:18+0000",
            "content": "This is not relaly a bug, more of a known behaviour, and something that you can\nfind out more about in lucene-user mailing list archives.\nHint: round the time stamps to a larger unit of time, like minutes.  This way\nthe RangeQuery will not expand to so many BooleanQueries.\n\nThis will be explained in the upcoming Lucene book, too. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321561"
        }
    ]
}