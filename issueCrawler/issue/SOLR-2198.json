{
    "id": "SOLR-2198",
    "title": "Grouping treats null values as equivalent to 0 or an empty string",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Sub-task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The grouping function does not distinguish between missing values and their null type equivalents (0 for numeric types and an empty string for string types).",
    "attachments": {
        "SOLR-2198.patch": "https://issues.apache.org/jira/secure/attachment/12458071/SOLR-2198.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Harish Agarwal",
            "id": "comment-12924982",
            "date": "2010-10-26T15:02:06+0000",
            "content": "Attaching a patch for grouping tests which illustrates the problem. "
        },
        {
            "author": "Harish Agarwal",
            "id": "comment-12924988",
            "date": "2010-10-26T15:12:39+0000",
            "content": "A related and relevant issue is figuring out how to denote null values in the 'groupValue' field.  Its still useful to group missing values together. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12925122",
            "date": "2010-10-26T20:31:00+0000",
            "content": "Yep, this is currently expected.\n\nNow that all fields can tell if there was a value or not for a given doc, we should update function query, and mutable value to reflect this.\n\nA related and relevant issue is figuring out how to denote null values in the 'groupValue' field. Its still useful to group missing values together. \n\ngroupValue=null "
        },
        {
            "author": "Harish Agarwal",
            "id": "comment-12925510",
            "date": "2010-10-27T19:03:17+0000",
            "content": "I attached a patch which seems to fix the problem for fields using [Int, Long, Double, Float]FieldSource's.   I made the 'exists' property on MutableValue's public and am using it to denote null values, all the non-grouping tests still pass.\n\nI'm still having trouble figuring out how to distinguish between a null string and \"\" - is this even possible?\n\nIt would be good to get some feedback on the patch before I try to extend this to other field types (like SortableFields). "
        },
        {
            "author": "Harish Agarwal",
            "id": "comment-12933575",
            "date": "2010-11-18T21:34:47+0000",
            "content": "Wanted to check in on this issue, have any commiters had a chance to look at the patch?  What do I need to do to move this forward?  Thanks! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12934914",
            "date": "2010-11-23T17:32:13+0000",
            "content": "Here's an updated patch based on Harish's patch, with support for additional field types, with some additional changes.\n\n\talways set the value, regardless of the value of exists - this simplifies hashCode\n\tmove the comparison of \"exists\" into subclasses so equalsSameTypecan be directly used by comparators\n\tadd support in compareTo\n\n\n\nThis is untested - I don't know if it works yet.  There are other issues with random testing and sorting null values that I need to iron out first. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12934999",
            "date": "2010-11-23T19:36:19+0000",
            "content": "OK, I added random testing support and committed. "
        }
    ]
}