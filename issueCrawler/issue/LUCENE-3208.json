{
    "id": "LUCENE-3208",
    "title": "Move Query.weight() to IndexSearcher as protected method",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.3",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "We had this issue several times, latest in LUCENE-3207.\n\nThe method Query.weight() was left in Query for backwards reasons in Lucene 2.9 when we changed Weight class. This method is only to be called on top-level queries - and this is done by IndexSearcher. This method is just a utility method, that has nothing to do with the query itsself (it just combines the createWeight method and calls the normalization afterwards). \n\nThe problem we have is that any query that wraps other queries (like CustomScore, ConstantScore, Boolean) calls Query.weight() instead of Query.createWeight(), it will do normalization two times, leading to strange bugs.\n\nFor 3.3 I will make Query.weight() simply delegate to IndexSearcher's replacement method with a big deprecation warning, so user sees this. In IndexSearcher itsself the method will be protected to only be called by itsself or subclasses of IndexSearcher. Delegation for backwards is no problem, as protected is accessible by classes in same package.\n\nI would suggest the method name to be IndexSearcher.createNormalizedWeight(Query q)",
    "attachments": {
        "LUCENE-3208.patch": "https://issues.apache.org/jira/secure/attachment/12482776/LUCENE-3208.patch",
        "LUCENE-3208-3x.patch": "https://issues.apache.org/jira/secure/attachment/12482866/LUCENE-3208-3x.patch",
        "LUCENE-3208-LTC.patch": "https://issues.apache.org/jira/secure/attachment/12482809/LUCENE-3208-LTC.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-16T08:42:08+0000",
            "content": "+1 ",
            "author": "Robert Muir",
            "id": "comment-13050296"
        },
        {
            "date": "2011-06-16T09:03:10+0000",
            "content": "+1 ",
            "author": "Simon Willnauer",
            "id": "comment-13050301"
        },
        {
            "date": "2011-06-16T09:41:35+0000",
            "content": "I started to rewrite some stuff, very straightforward.\n\n\n\tBufferedDeletesStream has to be changed as it was also calling Query.weight, but I replaced the usage here by QueryWrapperFilter and getting the DocIdSet. Code gets much easier here.\n\tQueryWrapperFilter's hack was rewritten, easy\n\tin TestFrameWork, QueryUtils were also rewritten, they often use weight, but thats internal only.\n\n\n\nThe main issue:\nIn IndexSearcher is already a method called createWeight(Query) (which currently delegates to the Query). I moved the code over here. I have to still complain about the name, it creates a Weight yes, but it should also note that it rewrites and normalizes the weight. So I would like to rename that method, too and deprecate the old one.\n\nFor now I leave the name unchanged. Patch comes soon (core only). ",
            "author": "Uwe Schindler",
            "id": "comment-13050316"
        },
        {
            "date": "2011-06-16T11:12:49+0000",
            "content": "First patch with some minor hacks and 2 disabled tests.\n\nThe problems:\n\n\t2 tests are in Span Package and call the IndexSearcher.createWeight method, which is protected. I commented them out for now\n\tQueryValueSource is still to be investigated, I dont completely understand how it works, it looks fine for now (tests pass) but I have to follow how it works. Maybe Yonik can help. There was also a bug in fcontext preventing caching the weight. There is a reflection hack in it for now (nocommit)\n\n\n\nThis patch also fixes:\n\n\tSolr's BoostedQuery was fixed, too\n\n\n\nI still dont like the name of the protected method in IndexSearcher createWeight(), as it does more than that. It rewrites, creates the weight and then normalizes the query. I would like to rename it and make it maybe public, but expert only.\n\nFor 3.x I would do the rename, too, and use VirtualMethod to fix invocations by 3rd party code if overridden. ",
            "author": "Uwe Schindler",
            "id": "comment-13050350"
        },
        {
            "date": "2011-06-16T12:29:13+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13050382"
        },
        {
            "date": "2011-06-16T12:32:27+0000",
            "content": "Here the patch with IndexSearcher.createWeigth renamed to createNormalizedWeight() and public/expert, so Solr can access it and custom search code.\n\nI am currently thinking about a possibility to check that each Weight is only normaliized one time, possibly using setOnce(). Its not easy to do, maybe wrap the Weight returned by the IndexSearcher method using a WrappedWeight that throws UOE on normalize, ",
            "author": "Uwe Schindler",
            "id": "comment-13050384"
        },
        {
            "date": "2011-06-16T14:55:44+0000",
            "content": "+1, looks good!  \nDoesn't seem like it's worth the trouble to catch Weight being normalized more than once.  I'd say just commit this as is. ",
            "author": "Yonik Seeley",
            "id": "comment-13050473"
        },
        {
            "date": "2011-06-16T15:04:04+0000",
            "content": "i think its worth the trouble, if we can do it.\n\nwe shouldnt rely upon the fact that getting sumOfSquaredWeights in some of these weights currently has side effects and sometimes is just wasted computation.\n\nother times it creates wrong scores. ",
            "author": "Robert Muir",
            "id": "comment-13050477"
        },
        {
            "date": "2011-06-16T15:10:27+0000",
            "content": "I think it's worth to do it in tests... but not as part of the public API (weighting yourself is expert level only and most people don't do it).  Wrapping every weight just makes things uglier, esp if you want to do something with the produced weight. ",
            "author": "Yonik Seeley",
            "id": "comment-13050481"
        },
        {
            "date": "2011-06-16T15:19:06+0000",
            "content": "A second idea would be that LuceneTestCase.newSearcher() returns such a Searcher, that wraps and disallows this. We have other helper classes like MockDirectory asserting similar things.\n\nI am currently thinking about coding this, its just a few lines. ",
            "author": "Uwe Schindler",
            "id": "comment-13050488"
        },
        {
            "date": "2011-06-16T15:32:14+0000",
            "content": "Wrapping every weight just makes things uglier, esp if you want to do something with the produced weight.\n\nIt doesn't have to be done this way necessarily. Personally i would be happy if TermWeight had a boolean 'normalized' (used only for asserting) and an assert.\n\nit doesn't have to be totally perfect, but, I refuse to debug this issue again.\n\nIf its not done here, I will open a blocker issue! ",
            "author": "Robert Muir",
            "id": "comment-13050498"
        },
        {
            "date": "2011-06-16T15:45:04+0000",
            "content": "Here is my idea to enforce one-time normalizing and prevent side-effects during tests. ",
            "author": "Uwe Schindler",
            "id": "comment-13050503"
        },
        {
            "date": "2011-06-16T15:47:55+0000",
            "content": "Great, Uwe, I'm satisfied.\n\nSorry for being so vocal about this, but i wasted many hours on this stupid bug (I know you did before, too), and the bug is not very friendly to people that debug with System.out.println, you don't catch it until you pull out enough of your hair to start using Thread.dumpStack... ",
            "author": "Robert Muir",
            "id": "comment-13050506"
        },
        {
            "date": "2011-06-16T17:31:21+0000",
            "content": "New patch:\n\n\tAdded AssertingIndexReader in test-framework, this one ensures that weights are only normalized once when this is done by IndexSearcher. This class can be extended to add further checks\n\tAs suggested by Yonik, changes the key used for fContext in the QueryValueSource to be the valuesource itsself. The backup code cannot be removed, there is somewhere a bug (new issue)\n\n\n\nAll tests pass. I would like to commit this to trunk soon and then add sophisticated backwards for 3.x  ",
            "author": "Uwe Schindler",
            "id": "comment-13050578"
        },
        {
            "date": "2011-06-16T17:55:35+0000",
            "content": "Committed trunk revision: 1136568\n\nNow backporting and adding sophisticated backwards... ",
            "author": "Uwe Schindler",
            "id": "comment-13050603"
        },
        {
            "date": "2011-06-16T19:04:03+0000",
            "content": "Missed a change in the new grouping module: Trunk revision: 1136605 ",
            "author": "Uwe Schindler",
            "id": "comment-13050654"
        },
        {
            "date": "2011-06-16T21:37:41+0000",
            "content": "Patch for 3.x branch. To apply, copy the trunk's AssertingIndexSearcher first to its target dir and then apply patch. ",
            "author": "Uwe Schindler",
            "id": "comment-13050749"
        },
        {
            "date": "2011-06-16T21:59:29+0000",
            "content": "Thanks to Robert for helping me to find the bug in TestSimilaroity. It was caused by a copypaste error when nuking Searcher. Searcher.java and also IndexSearcher.java had a private similarity field and separate setters. Methods implemented by Searcher would therefore not see changes on Similarity done on the IndexSearcher. ",
            "author": "Uwe Schindler",
            "id": "comment-13050760"
        },
        {
            "date": "2011-06-16T22:03:26+0000",
            "content": "Committed 3.x revision: 1136702 ",
            "author": "Uwe Schindler",
            "id": "comment-13050763"
        },
        {
            "date": "2011-06-16T22:03:44+0000",
            "content": "the backport looks good, and important/scary to also fix this IndexSearcher/Searcher bug. ",
            "author": "Robert Muir",
            "id": "comment-13050764"
        },
        {
            "date": "2011-07-02T02:40:13+0000",
            "content": "bulk close for 3.3 ",
            "author": "Robert Muir",
            "id": "comment-13058915"
        }
    ]
}