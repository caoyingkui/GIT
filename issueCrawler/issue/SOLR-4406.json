{
    "id": "SOLR-4406",
    "title": "RawResponseWriter - doesn't use the configured \"base\" writer.",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [
            "Response Writers"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The RawResponseWriter accepts a configuration value for a \"base\" ResponseWriter if no ContentStream can be detected. The line of code is commented out that would allow this secondary response writer to work. It would be great to uncomment the line and provide an OutputStreamWriter as the writer argument.",
    "attachments": {
        "SOLR-4406.patch": "https://issues.apache.org/jira/secure/attachment/12662680/SOLR-4406.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Steve Davids",
            "id": "comment-14101785",
            "date": "2014-08-19T03:24:06+0000",
            "content": "Attached a patch which allows the RawResponseWriter to honor it's contract:\n\n-snip-\n..if no such ContentStream has been added, then a \"base\" QueryResponseWriter will be used to write the response according to the usual contract...\n-snip-\n\nPerformed some minor refactoring to provide a single method to write query responses to an output stream. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14101790",
            "date": "2014-08-19T03:28:16+0000",
            "content": "Oops, didn't add the new utility class to SVN - patch updated. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14101852",
            "date": "2014-08-19T04:59:12+0000",
            "content": "Interesting ... looks like this bit of the contract was broken by SOLR-2263 \u2013 i'm guessing it didn't occur to folks at the time that making the RawResponeWriter implement BinaryQueryResponseWriter would essentially cause the Writer based method to be effectively dead code (and since they couldn't assume the \"base\" writer would support BinaryResponseWriter, throwing an exception probably seemed appropriate)\n\nSteve: at first glance, your patch looks fine and straight forward to me ... but i'm hesitant to commit it w/o some tests to verify it works and help ensure we don't break this again in the future.  I don't suppose you'd be interested in writing some unit tests to help excercise this feature with both code-paths of base writers (bin and non-bin?)\n\nsomething along the lines of...\n\n\t2 mock writers, one extending BinaryQueryResponseWriter, both throwing UnSupOp for the method that shouldn't be used\n\t3 instances of RawResponseWriter, one each with the base and one w/o any base\n\t2 mock QueryResponses, one with a CONTENT stream of a spcial Content-Type and one with simple data\n\tassert expected Content-Type returned, and expected input recieved by the methods on the mock writers, for all 3*2 permutations of RawResponesWriter instances and QueryResponses\n\n\n\nwhat do you think? "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14101858",
            "date": "2014-08-19T05:08:31+0000",
            "content": "Yea, this is a somewhat obscure bug I came across since I wanted to send back a raw stream but if an exception occurred I wanted to apply a velocity template to the response instead. I will throw some tests together in the next day or two. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14106403",
            "date": "2014-08-22T03:21:48+0000",
            "content": "Added tests which provides complete code coverage of the RawResponseWriter. I didn't go the mocking route, instead it is an integration test by spinning up a core to assert 3 different cases:\n\n1) If a content stream is provided send that back in the writer & output stream\n2) If no content stream is provided and no base writer is specified verify the response is serialized with the default writer (XML)\n3) If no content stream is provided and a base writer is specified serialize with the specified writer "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14106411",
            "date": "2014-08-22T03:31:58+0000",
            "content": "Made a small tweak to use the Java 7 auto-closeable for the Writer/Output streams. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14114631",
            "date": "2014-08-29T00:03:49+0000",
            "content": "Hoss Man Does the supplied tests fit the bill? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14119358",
            "date": "2014-09-03T05:15:56+0000",
            "content": "...I didn't go the mocking route, instead it is an integration test by spinning up a core to assert 3 different cases:\n\nYou're reasoning makes sense, but it was hard to really see that that's what your tests was doing the way you had it organized \u2013 and none of your existing tests really dealt with the situation where the base writer was also implemented BinaryQueryResponseWriter.  There was also a bit of a code smell for me in the way you constructed the RawResponseWriter in one place, but called init() on it (sometimes) in another.\n\nSo i took a stab at refactoring it to have test methods that more directly modeled the list of situations you identified, in addition to adding more comments spelling out exactly what each method is doing.\n\nI also made a few trivial tweaks to QueryResponseWriterUtil...\n\n\tlicense at top of file - not class doc\n\tbrief class doc\n\tswitch class to final w/private constructor\n\tbeef up method javadocs\n\n\n\nWhat do you think? "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14119803",
            "date": "2014-09-03T12:21:18+0000",
            "content": "So i took a stab at refactoring it to have test methods that more directly modeled the list of situations you identified\n\nPersonally I prefer having small, self describing test method names instead of having 3 methods that do everything and making you really dig in there if any one of the tests actually fail. That's why I went the route of building 3 test methods per case I described above:\n\n\n\tIf a content stream is provided send that back in the writer & output stream\n\t\n\t\ttestGetContentType\n\t\ttestWriteContentStreamViaWriter\n\t\ttestWriteContentStreamViaOutputStream\n\t\n\t\n\tIf no content stream is provided and no base writer is specified verify the response is serialized with the default writer (XML)\n\t\n\t\ttestDefaultBaseWriterGetContentType\n\t\ttestDefaultBaseWriterViaWriter\n\t\ttestDefaultBaseWriterViaOutputStream\n\t\n\t\n\tIf no content stream is provided and a base writer is specified serialize with the specified writer\n\t\n\t\ttestJsonBaseWriterGetContentType\n\t\ttestJsonBaseWriterViaWriter\n\t\ttestJsonBaseWriterViaOutputStream\n\t\n\t\n\n\n\nPersonally I think this is one of those \"beauty is in the eye of the beholder\", I kind of prefer the original test but cleanliness and clarity can sometimes be subjective (though \"initRawResponseWriter\" was a poor naming choice, perhaps \"setBaseWriter\" would have been better). \n\nYou are testing a couple more cases that I wasn't looking for before, which is always a good thing. All the other changes look good, I'm not hung up on any of the test changes. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14120290",
            "date": "2014-09-03T19:18:21+0000",
            "content": "Commit 1622321 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1622321 ]\n\nSOLR-4406: Fix RawResponseWriter to respect 'base' writer "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14120299",
            "date": "2014-09-03T19:28:33+0000",
            "content": "Commit 1622326 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622326 ]\n\nSOLR-4406: Fix RawResponseWriter to respect 'base' writer (merge r1622321) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14120302",
            "date": "2014-09-03T19:33:11+0000",
            "content": "Personally I prefer having small, self describing test method names...\n\nWell, to me the tests as you had them were too small to really have any context as to what was going on - i'd rather the individual tests be readable as a \"story\" (you start with x, you do y, you expect a, b, and c) ... but yeah, it's largely subjective.\n\nin any case, thank you very much for the patch and the tests! "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332884",
            "date": "2015-02-23T05:02:25+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}