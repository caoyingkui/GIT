{
    "id": "SOLR-8169",
    "title": "Need LockFactory impl that uses ZooKeeper as replacement for HdfsLockFactory",
    "details": {
        "components": [
            "Hadoop Integration"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "It would be good to have an option to use a ZooKeeper backed LockFactory implementation as a replacement for the HdfsLockFactory. FWIW - I've seen instances in Solr on YARN environments where the lock file doesn't get cleaned up correctly, which prevents using the index w/o some manual intervention.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-19T17:15:03+0000",
            "author": "Timothy Potter",
            "content": "Hi Mark Miller ... here's the JIRA for the ZK based lock impl we discussed at rev. Feel free to assign to me if you'd like. ",
            "id": "comment-14963629"
        },
        {
            "date": "2015-10-26T14:32:26+0000",
            "author": "Mark Miller",
            "content": "Thanks Tim, let me look - I may still have some starter code on this somewhere. ",
            "id": "comment-14974294"
        },
        {
            "date": "2015-11-05T16:02:18+0000",
            "author": "Mark Miller",
            "content": "I've got a simple impl. Sadly, ZK is a little problematic to store these locks I think though.\n\nIt would be nice to be able to use ephemeral nodes - so we prevent stale locks on a crash or something. That doesn't really tie well into the lifecycle of the IndexWriter though. It may help that we don't allow updates when not connected to ZK, but it's all a little tricky.\n\nSo I have a little test impl with no ephem nodes I can toss up when it's cleaned up a littlle. Which may not seem like much, but I don't think the HDFS filesystem actually works properly for a file shared lock the way it's being used in our HdfsLockFactory. This is something that at least works correctly. ",
            "id": "comment-14991874"
        },
        {
            "date": "2015-12-04T07:26:03+0000",
            "author": "Varun Thacker",
            "content": "This lock factory will also be useful for NFS users who use the simple lock factory since that also suffers from the same limitation currently. ",
            "id": "comment-15041204"
        }
    ]
}