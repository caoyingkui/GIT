{
    "id": "SOLR-2667",
    "title": "Finish Solr Admin UI",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In SOLR-2399, we added a new admin UI. The issue has gotten too long to follow, so this is a new issue to track remaining tasks.",
    "attachments": {
        "SOLR-2667-120223-file-structure.patch": "https://issues.apache.org/jira/secure/attachment/12515776/SOLR-2667-120223-file-structure.patch",
        "SOLR-2667-110722.patch": "https://issues.apache.org/jira/secure/attachment/12487403/SOLR-2667-110722.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-13069002",
            "date": "2011-07-21T14:37:56+0000",
            "content": "Found a minor issue:  From the analysis page, pick a numeric field and put text into it.  This will return a 500 with: java.lang.NumberFormatException: For input string: \"asdgasg\"\n\nBUT the UI says \"This Functionality requires the /analysis/field\"\n\nLooks like the error handling should catch 404 vs 500 (or maybe just non 200) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13069010",
            "date": "2011-07-21T14:50:32+0000",
            "content": "On the plugins page, I like the default accordian behavior \u2013 what do you think about adding a button at the bottom that would 'show all details'  or something.  It is nice to be able to see all the cache values at once and just scroll though to see if anythign looks funny, rather then having to open each one. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13069015",
            "date": "2011-07-21T15:09:32+0000",
            "content": "On the query page...   I like that it keeps the query options next to the results, and that it shows the raw URL \u2013 it would also be nice if the URL it displays was a direct link to that query.\n\nWhat about including wt as a drop down?  xml/json/python/ruby/php/csv Maybe also a checkbox for &indent=true/false\n\n "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13069423",
            "date": "2011-07-22T07:23:22+0000",
            "content": "Replace the old patch with this new one (based on Rev 1149484), which includes the fix for the analysis-page \u2013 as well as the 'expand' link on plugins and the changes to the query-form "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13069425",
            "date": "2011-07-22T07:27:12+0000",
            "content": "And just to mention it .. it's related to the regex-matching-solution (Line 3596 & 3605) i'm using to catch the analysis-error-message \u2013 that would be much easer & more solid if we have SOLR-141! "
        },
        {
            "author": "Simon Rosenthal",
            "id": "comment-13071897",
            "date": "2011-07-27T18:29:04+0000",
            "content": "The status displayed for DIH indexing is not as detailed as that on the old page- I prefer the elapsed time in more precision, rather than  'n minutes ago'\n\nSince you're doing a status request every few seconds, would it be possible to add metrics such as 'documents processed per second' ?' (either for the last few seconds, or since the start of the import, or both) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13072558",
            "date": "2011-07-28T22:10:11+0000",
            "content": "Stefan: looking at the example on trunk today i realized one oddity i've never noticed before.  The left nav lists \"singlecore\" as the lable for getting collection specific information, even though the example configs do infact have a solr.xml containing info about the one core, and it's name is \"collection1\"\n\nI understand that you have special logic for the \"single core\" case because of legacy installs that might not have any solr.xml, so there can never be more then one core because no adminPath is defined \u2013 but in the case the core does in fact have a name, and new cores can be added with new names (i tested, it works and new cores show up in the admin bueatifully) \u2013 so i don't understand why \"collection1\" show up as \"singlecore\" (even after adding additional cores) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13078892",
            "date": "2011-08-03T18:12:15+0000",
            "content": "I finally tested this on a bigger index... and the use of /luke makes it unusable.  On a large index, collecting the top terms for every field can take a LONG time \u2013 in this case >30 secs.\n\nWhat about skipping the term list by default and just quickly get the basic info:\n\n/admin/luke?numTerms=0\n\n\n\nFrom the 'schema-browser' page, then we could load the field stats for that one field:\n\n/admin/luke?numTerms=100&fl=field\n\n\n\n\nthoughts?\n\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-13079006",
            "date": "2011-08-03T20:48:42+0000",
            "content": "Ryan, I agree with your observation and suggestion. The same basic situation happens with the current/old UI for my large index when I go to the schema browser \u2013 it seems to lock up for minutes. Eventually I figured out what was going on and I edited my solrconfig.xml to put numTerms=0 by default. Ideally I would be able to request this statistic on-demand instead of by default, and with some sort of ajax-loading icon so I know its thinking. Even more ideal would be to somehow have the UI know that the statistic isn't expensive for certain fields and calculate it there.  Its too bad Lucene's index format doesn't contain this metadata in a quick to lookup format. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13079410",
            "date": "2011-08-04T14:55:39+0000",
            "content": "shouldn't QUERYHANLER instead be REQUESTHANDLER? "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13082526",
            "date": "2011-08-10T18:23:02+0000",
            "content": "Hi all, sorry for the break .. just had not really the time to work on it :/ will check the comments tomorrow and see what has to be done  "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13083223",
            "date": "2011-08-11T16:52:50+0000",
            "content": "Simon,\n\nThe status displayed for DIH indexing is not as detailed as that on the old page- I prefer the elapsed time in more precision, rather than 'n minutes ago'\n\nme too - but the only information we have is \"started at\", including a full date w/ seconds. how long the import is already running, isn't stated anywhere. at the beginning my idea was to calculate the difference manually .. but the main problem will be, that there is no information about timezones - so you could request stats from a solr-server w/ a different timezone and the calculation is no longer valid.\n\nthe 'n minutes ago' information is generated through the used jquery.timeago plugin, which could be disabled of course - afterwards the full date/time will be visible.\n\nSince you're doing a status request every few seconds, would it be possible to add metrics such as 'documents processed per second' ?' (either for the last few seconds, or since the start of the import, or both)\n\nin general, both i'd say - but i don't know if it would make sense? because the imports that i know of, are working the following way: starting to fetch entities, their subentities and afterwards start to index the document .. so i could not calculate the documents per seconds or things like that :/\n\nperhaps we should consider to extend the dih-status w/ these informations? calculate the difference on the server-side should be easy .. and adding stats about docs/sec would be more detailed and also more reliable.\n\nStefan "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13084152",
            "date": "2011-08-12T14:27:21+0000",
            "content": "Hoss,\n\nThe left nav lists \"singlecore\" as the lable for getting collection specific information, even though the example configs do infact have a solr.xml containing info about the one core, and it's name is \"collection1\"\n\nPerhaps the issue SOLR-2605 is not correctly named, but it's already there \n\nStefan "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13084166",
            "date": "2011-08-12T14:55:56+0000",
            "content": "Mark,\n\nshouldn't QUERYHANLER instead be REQUESTHANDLER?\n\nYou're looking at the output of /admin/mbeans which is using the List from \nSolrInfoMBean.java:\n\n\npublic enum Category { CORE, QUERYHANDLER, UPDATEHANDLER, CACHE, HIGHLIGHTING, OTHER };\n\n\nSo if you think the Names should be changed? \n\nStefan "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13084186",
            "date": "2011-08-12T15:26:45+0000",
            "content": "Ryan & David,\n\nWhat about skipping the term list by default and just quickly get the basic info\nThat's a quick fix.\n\nFrom the 'schema-browser' page, then we could load the field stats for that one field.\nYes, we could .. should that be done\n\n\tautomatically after loading the basic information\n\tor manually on button click?\n\n\n\ni actually don't know, how important that information will be? i guess, it's the information that people will have, when the use the schema-browser?\n\nJust to mention it, 'basic information' on Schema-Page is: Field-Type, Schema & Tokenizer/Filter \u2013 everything else (Index, Docs, Distinct, Terms & Histogram) is only available after requesting luke w/ numTerms.\n\nStefan "
        },
        {
            "author": "McClain Looney",
            "id": "comment-13116516",
            "date": "2011-09-28T14:36:19+0000",
            "content": "on both chrome and safari os/x, the results iframe is rendered in a useless way (i.e. the way xml is displayed when the content-type isn't set). The only way I can make sense of results is via the browser dev tools, which is sub-optimal.\n\nAm i missing a component to render pretty xml? "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13116661",
            "date": "2011-09-28T18:17:27+0000",
            "content": "Am i missing a component to render pretty xml?\nNot really .. actually it's just not completely working as expected. iirc Erick suggested an tab-navigation for all the xml-views, choosing \"raw\" or \"rendered\" for exactly these cases you've mentioned. "
        },
        {
            "author": "Tom Hill",
            "id": "comment-13118476",
            "date": "2011-09-30T21:34:49+0000",
            "content": "I think the files admin-extra.html and admin-extra.menu-top.html are intended to be optional. If that's the case, it might be nicer to not log a stack trace when they are not present. Especially at a \"SEVERE\" priority. \n\nSEVERE: org.apache.solr.common.SolrException: Can not find: admin-extra.html [/Users/tom/code/lucene_trunk/solr/example/multicore/core0/conf/admin-extra.html]\n\tat org.apache.solr.handler.admin.ShowFileRequestHandler.handleRequestBody(ShowFileRequestHandler.java:145)...\n\nAnother minor note: the link to the old admin UI doesn't work in multi-core mode, as it goes to solr/admin. I don't know that it's worth fixing, but thought I'd mention it. "
        },
        {
            "author": "Joan Codina",
            "id": "comment-13124069",
            "date": "2011-10-10T13:13:25+0000",
            "content": "some issues when using it.\n\n\tIt is a pity that one cannot indicate the number of terms to view, and only do more... more... and not modify the number (to ask for example for the top 2000 terms), we do that sometimes, to check if there are many misspelled terms.\n\tA stupid issue: there is no place where the name of the current field is in plain text, so, you can cut&paste, to be sure you get the current spelling \n\tfinally, maybe the graphic could be done using an html5 charting tool?\n\n "
        },
        {
            "author": "elisabeth benoit",
            "id": "comment-13146312",
            "date": "2011-11-08T14:01:17+0000",
            "content": "On Admin Analysis interface, when I analyze some field type including NGramFilterFactory, the columns for every word are very large and no horizontal scroll bar, so I can't see. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13154268",
            "date": "2011-11-21T16:09:23+0000",
            "content": "I think the files admin-extra.html and admin-extra.menu-top.html are intended to be optional. If that's the case, it might be nicer to not log a stack trace when they are not present. Especially at a \"SEVERE\" priority.\n\nWe should look at this in another JIRA issue. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13157535",
            "date": "2011-11-26T16:20:59+0000",
            "content": "Another note: if you don't have the sys admin handlers in solrconfig, the old admin pages work fine, but the new page will simply show a spinner. Seems like at the very least we should display an appropriate error message if we want to require the sys admin handlers for the UI to work. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13182146",
            "date": "2012-01-07T23:12:05+0000",
            "content": "On the solrcloud branch I'm running into a strange problem...I cannot view the cloud panel because its claiming that it cannot parse the json from http://192.168.1.200:8983/solr/admin/cores?wt=json\n\nThe json is valid though, so I am scratching my head. It produces 'JSON.parse bad escaped character'.\n\n\n{\"responseHeader\":{\"status\":0,\"QTime\":237},\"status\":{\"\":{\"name\":\"\",\"instanceDir\":\"solr/./\",\"dataDir\":\"solr/./data/\",\"startTime\":\"2012-01-07T21:44:09.427Z\",\"uptime\":4449652,\"index\":{\"numDocs\":40226,\"maxDoc\":49839,\"version\":1325969262665,\"segmentCount\":17,\"current\":true,\"hasDeletions\":true,\"directory\":\"org.apache.lucene.store.MMapDirectory:org.apache.lucene.store.MMapDirectory@/media/ext3space/workspace/SolrCloud/solr/example/solr/data/index lockFactory=org.apache.lucene.store.NativeFSLockFactory@7e123c26\",\"lastModified\":\"2012-01-07T21:52:20Z\",\"sizeInBytes\":990880948,\"size\":\"944.98 MB\"}}}}\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13184173",
            "date": "2012-01-11T16:20:32+0000",
            "content": "One thing missing from the old UI for the ZooKeeper view - you can no longer see the data at each node (or at least I have not figured out how) - just the node listing. "
        },
        {
            "author": "Antony Stubbs",
            "id": "comment-13184471",
            "date": "2012-01-11T22:45:56+0000",
            "content": "It seems the ui for dataimporthandler doesn't pass through the clean, optimize or commit commands when clicking execute. No mater what I select, it only passes through the \"command\". "
        },
        {
            "author": "Robert Reynolds",
            "id": "comment-13187944",
            "date": "2012-01-17T19:51:23+0000",
            "content": "I haven't seen any discussion of the luke problem since back in August (comments by Ryan and David, with one follow-up by Stefan).  I've run into this recently and wanted to add some data about just how horrible this problem is.  I timed how long it took to complete loading of the \"Statistics\" panel, which evidently requires results from luke, which seems to read the entire index to provide them.  I also looked a bit at the CPU and I/O behavior of the nodes while this operation was going on.  \n\nAt the time, my nodes had from 13 million to 23.5 million documents each.  The operation took from 28 minutes to 46 minutes.  During this time, significant CPU was consumed on the node; I wasn't careful in collecting this data but my recollection is 25%-50% utilization.  There was significant I/O the entire time, apparently due to reading the whole index.  Furthermore, navigating away from the page does not halt the operation.\n\nAs things stand, if someone navigates to this web page they kick off an operation that will signficantly affect performance on my nodes for half an hour to an hour.  Are there plans to implement any of the triage ideas floated by Ryan/David? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13198943",
            "date": "2012-02-02T16:52:04+0000",
            "content": "Hey Robert - perhaps we should open up a new bug for this issue? It sounds pretty nasty. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13199852",
            "date": "2012-02-03T16:54:45+0000",
            "content": "I can reproduce this locally, and have raised a JIRA (SOLR-3094) "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13200809",
            "date": "2012-02-05T17:14:23+0000",
            "content": "re: SOLR-3094. If someone with javascript skills has the time/energy to help out with SOLR-3094, it would be awesome. I'm flying blind here. I can handle the LukeRequestHandler stuff, but it'll take a long time for me to figure out the javascript side.\n\nEssentially, this problem makes the new UI unusable for any large index. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13204545",
            "date": "2012-02-09T14:23:47+0000",
            "content": "How, in general, do we want to carry the new Admin UI forward? It needs some love if it's ever going to replace the old UI, meanwhile we're stuck with having to either maintain both or have features in one but not the other. My javascript skills are rudimentary, but I'd be happy to help if someone who does have js expertise wants to handle the UI side. Perhaps I can be useful on the Solr/Lucene side in terms of getting info back from Solr and committing the results...\n\nI'm not sure how many people can work on it simultaneously, it looks like there are just a few files so it may be pretty easy to step on each other.\n\nAny suggestions/volunteers? "
        },
        {
            "author": "David Smiley",
            "id": "comment-13204592",
            "date": "2012-02-09T15:43:15+0000",
            "content": "I'm competent with JavaScript and the popular jQuery library but I'm unfamiliar with the others used here like Sammy.  Sammy appears to be key part of this UI.  I don't like to do front-end development, honestly, but I do it when needed.\n\nI modified script.js in order to address some other issue and I was shocked to see that the javascript for this new UI is in one massive javascript file with 4632 lines!  IMO that is simply unacceptable; it must be broken up to be more maintainable. Perhaps it would be broken up by navigation tabs/pages.\n\nCan someone (Ryan? Stefan?) articulate the overall approach to the design of the UI from an implementation perspective (not the visual)? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13205855",
            "date": "2012-02-10T23:21:09+0000",
            "content": "I added SOLR-3121 to tackle the specific issues around speed... "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13214463",
            "date": "2012-02-23T08:45:34+0000",
            "content": "One thing missing from the old UI for the ZooKeeper view - you can no longer see the data at each node (or at least I have not figured out how) - just the node listing.\nMark, Would you mind to have a look at SOLR-3116? Erick created an Issue for that, and i've attached a quick draft. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13214465",
            "date": "2012-02-23T08:48:23+0000",
            "content": "I modified script.js in order to address some other issue and I was shocked to see that the javascript for this new UI is in one massive javascript file with 4632 lines! IMO that is simply unacceptable; it must be broken up to be more maintainable. Perhaps it would be broken up by navigation tabs/pages.\n\nDavid, you're completed right. Initially there were no thoughts about 'how will it ever work' .. i just started to hack around to push things forward. Actually i'm trying to integrated to current svn-changes into my local version and go ahead with http://requirejs.org/ to split the files. I'll push this version to my github repo, so we could have a look at it and decide if that will be okay for the future.  "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13214674",
            "date": "2012-02-23T14:23:30+0000",
            "content": "So, there we go: https://github.com/steffkes/solr-admin/commit/67e9807c2ed6a19064fb0a0a3ad941a3b0e10852 Thoughts about this structure? more usable for people who would contribute stuff? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13214802",
            "date": "2012-02-23T15:26:38+0000",
            "content": "Stefan:\n\nWarning, I'm both Git and Javascript challenged...\n\nBut even so, just browsing the way you've broken it up makes me much less frightened about jumping in and trying to change things. \n\nIs there any way you could make a SVN patch and attach it to this JIRA? I'd be happy to apply it locally and put it through some paces, especially if I could try out SOLR-3116 too. Or just point me at the right Git instructions, is there a good way to just overlay a set of Git changes on an SVN checkout? "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13214861",
            "date": "2012-02-23T17:14:29+0000",
            "content": "Erick, the github repo was only used to expose the new structure .. will create an patch later on, ofc  SOLR-3116 is already including, will require SOLR-3155 to be comitted first - otherwise the Cloud Tab will not work. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13214876",
            "date": "2012-02-23T17:39:50+0000",
            "content": "Stefan \u2013 this looks much better! "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13214934",
            "date": "2012-02-23T18:55:44+0000",
            "content": "So, there we go. Based on SVN Rev 1292870, mainly changing the File-Structure - hopefully no Change is missing. Otherwise please tell me \n\nI'll try to add an additional ant-build target for applying an r.js Step - so we'll have only one css/js File to load, for the \"endusers\" .. and my idea was to include a licene-paragraph in these files, would this be enough or should i just add it to every single file which ships with solr (and has no other licene yet)? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13214955",
            "date": "2012-02-23T19:25:37+0000",
            "content": "I added this in #1292908\n\nthanks stefan! "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13214991",
            "date": "2012-02-23T19:57:43+0000",
            "content": "We'll need the following external Tools/Libs:\n\n\tr.js\n\tclosure/compiler.jar\n\trhino/js.jar\n\n\n\nThe attached ant-target (Patch also based on Rev 1292870) is just a sample, but it's already working if the files exist.\n\nCould i get some help there? Especially how to package the generated files into the war's and so one?  "
        },
        {
            "author": "David Smiley",
            "id": "comment-13214994",
            "date": "2012-02-23T20:02:16+0000",
            "content": "Much better Stefan.  I'd like to see further refactorings:\n\n\tI see that the code is using 4-space indentation levels whereas Lucene's standard is 2.\n\tAlthough the code is now broken down into logically organized files, there are rather extreme levels of indentation that makes the code hard to read.  cloud.js goes 14 indentation levels deep, for example.  That is simply too many, see if you can keep it within 10 at most.\n\n\n\nr.js would be nice but I think it's low priority given this is an admin UI. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13215005",
            "date": "2012-02-23T20:12:38+0000",
            "content": "on the r.js stuff... what is the advantage?  Is it just optimize the load times?\n\nFor the admin UI, I think we should optimize readability/maintainability over load time.   "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13215037",
            "date": "2012-02-23T20:50:30+0000",
            "content": "I'm reluctant to introduce more jars unless they're absolutely necessary, and given that the admin UI is running locally, if the new jars are only optimizing load times, I think we should skip them.\n\nSo echoing Ryan, is there a major advantage here?\n\nRyan & Stefan:\nI'm getting \"Loading of zookeeper failed with \"parsererror\" (Unexpected token )\" when I try to go into the cloud section of the admin UI, but only when I start it up with numshards=<more than 1>. Is this the problem referred to in SOLR-3155? It looks like Ryan checked all this in yesterday, so I'm assuming that an update/build today has all the patches necessary for the servlet to do it's tricks, it's just a matter of getting the JSON right...\n "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13215060",
            "date": "2012-02-23T21:17:31+0000",
            "content": "David, will use the 2-space-rule from now on and replace the existing code, preparing a patch for it. regarding the indentation: i'll see what is possible \n\nRyan, mainly performance yes .. but additionally it resolves the css-import statements which are (afaik) not completely supported on all internet explorer versions. if performance does not matter, we could solve that through a real <link href=\"file.css\" /> for each needed stylesheet. for the js-part, the current loading is fine and do not need a replacement.\n\n\u2013 Edit\n\nOkay, we skip the r.js thingy, i'll update the loading of css-files. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13215067",
            "date": "2012-02-23T21:27:26+0000",
            "content": "Erick, yes that is (or at least, should be) SOLR-3155 .. i don't know what noggit exactly does, perhaps it's not enough to get valid json responses in every case. if it's no private stuff inside, could you capture the json-responses and attach them as file to this ticket? \n\nI'll build another time tomorrow and check the output for every file in the zookeeper-tree. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13215087",
            "date": "2012-02-23T21:43:37+0000",
            "content": "with r.js, I think <link href=\"file.css\" /> is a better solution for this community.  \n\n\n\t- - -\n\n\n\nErick, the zookeeper problems you see are likely based on the fact that SOLR-3155 is not yet committed.  \n\nI have not yet built a zookeeper setup... so i have been unable to test it  "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13215268",
            "date": "2012-02-24T00:33:30+0000",
            "content": "SOLR-3155 is committed now, and it looks to have fixed the issue I was having, so you should get that with an update. The patch I put up has a minor change to alphabetize stuff. One line.\n\nRyan:\nPutting up a rudimentary cluster is surprisingly easy, Mark Miller's instructions here: http://wiki.apache.org/solr/SolrCloud will get you up and running in 10 minutes. I was pleasantly surprised, I expected there to be more configuration... Basically copy example to example2 and copy/paste the startup commands he's provided. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13215858",
            "date": "2012-02-24T19:51:16+0000",
            "content": "Moving the rest of the new UI development to SOLR-3162 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13216274",
            "date": "2012-02-25T03:18:45+0000",
            "content": "There are actually shell scripts in solr/cloud-dev that will auto start a small cluster.  "
        }
    ]
}