{
    "id": "SOLR-138",
    "title": "queries can stack up",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "A burst of \"expensive\" queries can cause contention within lucene, greatly reducing effective throughput and causing more and more queries to stack up.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12469905",
            "date": "2007-02-02T23:22:22+0000",
            "content": "One method to \"fix\" this would be to limit the number of queries that may be executing at any one time (queueing).\nhttp://www.nabble.com/TermInfosReader-lazy-term-index-reading-tf3162657.html#a8776274\n\nOne could do this in the servlet container by limiting the number of threads in the thread pool, but would that lock out the admin pages?\n\nA more flexible way might be to put the queueing in the SolrCore.exec() method.\nAdmin pages could bypass the exec() method by calling a handler directly, or could set a priority on the request that avoided queueing. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12469907",
            "date": "2007-02-02T23:31:00+0000",
            "content": "I'm starting to like this idea...\nBefore, if some queries were taking a long time, you couldn't tell which ones because they don't get logged until after completion.\n\nBut if you are queuing in a manner that lets you keep track of currently executing requests, you could export that info to the admin page, along with how long each query has been running.\n "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12579094",
            "date": "2008-03-15T22:30:20+0000",
            "content": "Our use case is the classic battle between interactive use and running reports: reports use long queries that shut out interactive use.\n\nOne option is to have two search servlets instead of one, where each can have a separate queueing depth. One servlet is reserved for long queries and may only have one or two queries active at one time, while the other servlet is for smaller interactive queries and might allow 5 concurrent queries. "
        },
        {
            "author": "Ian Holsman",
            "id": "comment-12579165",
            "date": "2008-03-16T05:15:51+0000",
            "content": "the 2nd option is to use a query timeout like the one in #SOLR-502 so that \"interactive\" queries can have a fixed end time which kill the badly behaved queries "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13580215",
            "date": "2013-02-17T17:00:13+0000",
            "content": "Cleaning up old JIRAs, re-open if necessary. "
        }
    ]
}