{
    "id": "SOLR-2632",
    "title": "Highlighting does not work for embedded boost query that boosts a dismax query",
    "details": {
        "affect_versions": "1.4.1,                                            3.2,                                            3.3",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "highlighter"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I need to issue a dismax query, with date boost (I'd like to use the multiplicative boost provided by boost queries) and also filtering for other fields with too many possible distinct values to fit in a filter query. To achieve this, I use the boost query as a nested query using the pseudofield query. I also need highlighting for the fields used in the dismax query, but highlighting does not work. If I just use the boosted dismax query without embedding it inside another query, it works correctly. If I use bf instead of a boost query, and embed directly the dismax query, it works too, but hl.fl needs to be specified.\n\nIt's a bit complicated to explain, so, I'll give examples using the example data that comes with solr (the problem is reproducible in the example solr distribution, not only in my concrete project).\n\nhttp://localhost:8983/solr/select?q=%2binStock:true%20%2b_query_:%22\n{!boost%20b=$dateboost%20v=$qq%20defType=dismax}%22&qq=test&qf=name&dateboost=recip%28ms%28NOW,last_modified%29,3.16e-11,1,1%29&hl=true&hl.fl=name\nFor this query, highlighting does not work. Specifying hl.fl or not, does not influence the result. The result is:\n<lst name=\"highlighting\">\n  <lst name=\"GB18030TEST\"/>\n  <lst name=\"UTF8TEST\"/>\n</lst>\n\nhttp://localhost:8983/solr/select?q=_query_:%22{!boost%20b=$dateboost%20v=$qq%20defType=dismax}\n%22&qq=test&qf=name&dateboost=recip%28ms%28NOW,last_modified%29,3.16e-11,1,1%29&hl=true&hl.fl=name\n\nThis doesn't work either. Same result.\n\nhttp://localhost:8983/solr/select?q=\n{!boost b=$dateboost v=$qq defType=dismax}\n&qq=test&qf=name&dateboost=recip(ms(NOW,last_modified),3.16e-11,1,1)&hl=true\n\nIn this case, hightlighting works correctly:\n\n<lst name=\"highlighting\">\n  <lst name=\"GB18030TEST\">\n    <arr name=\"name\">\n      <str><em>Test</em> with some GB18030 encoded characters</str>\n    </arr>\n  </lst>\n  <lst name=\"UTF8TEST\">\n    <arr name=\"name\">\n      <str><em>Test</em> with some UTF-8 encoded characters</str>\n    </arr>\n  </lst>\n</lst>\n\nhttp://localhost:8983/solr/select?q=%2BinStock:true%20%2B_query_:%22\n{!dismax%20v=$qq}\n%22&qq=test&qf=name&bf=recip%28ms%28NOW,last_modified%29,3.16e-11,1,1%29&hl=true&hl.fl=name\n\nThis also works. Same result as before. But in this case hl.fl is needed. Without it, highlighting does not work, either.\n\nThanks.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Juan Antonio Farr\u00e9 Basurte",
            "id": "comment-13059243",
            "date": "2011-07-03T17:46:05+0000",
            "content": "I've done some more testing. For the following query, using edismax, highlighting also fails in the same way:\n\nhttp://localhost:8983/solr/select?q=%2binStock:true%20%2b_query_:%22\n{!edismax%20boost=$dateboost%20v=$qq}%22&qq=test&qf=name&q.alt=:&tie=0.1&dateboost=recip%28ms%28NOW,last_modified%29,3.16e-11,1,1%29&hl=true&hl.fl=name\n\nWhile it works well for the following two queries:\n\nhttp://localhost:8983/solr/select?q=%2binStock:true%20%2b_query_:%22{!edismax%20v=$qq}%22&qq=test&qf=name&q.alt=*:*&tie=0.1&dateboost=recip%28ms%28NOW,last_modified%29,3.16e-11,1,1%29&hl=true&hl.fl=name\nhttp://localhost:8983/solr/select?q={!edismax%20boost=$dateboost%20v=$qq}\n%22&qq=test&qf=name&q.alt=:&tie=0.1&dateboost=recip%28ms%28NOW,last_modified%29,3.16e-11,1,1%29&hl=true&hl.fl=name\n\nAlso tested in solr 3.3 with the same results. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13059371",
            "date": "2011-07-04T09:49:04+0000",
            "content": "\nhttp://localhost:8983/solr/select?q=%2binStock:true%20%2b_query_:%22\nUnknown macro: {!boost%20b=$dateboost%20v=$qq%20defType=dismax} \n%22&qq=test&qf=name&dateboost=recip%28ms%28NOW,last_modified%29,3.16e-11,1,1%29&hl=true&hl.fl=name\nFor this query, highlighting does not work. Specifying hl.fl or not, does not influence the result. The result is:\n<lst name=\"highlighting\">\n<lst name=\"GB18030TEST\"/>\n<lst name=\"UTF8TEST\"/>\n</lst>\n\nThis request creates a BooleanQuery that is composed of TermQuery(\"inStock\", true) and BoostedQuery. Lucene's Highlighter knows TermQuery but doesn't know how to deal with Solr's BoostedQuery. The BoostedQuery should include TermQuery(\"name\",\"test\") that you want to hihglight, but Lucene doesn't care BoostedQuery, so Highlighter ignores entire BoostedQuery. "
        },
        {
            "author": "Juan Antonio Farr\u00e9 Basurte",
            "id": "comment-13059375",
            "date": "2011-07-04T10:02:34+0000",
            "content": "Sounds logical, but... if highlighter doesn't know how to deal with BoostedQuery, then why does it work when I issue the boosted query alone, without embedding it in the boolean query?\nMay be I'm wrong, but it looks to me more like a problem of embedding the boosted query into the boolean query than a problem with boosted query itself. In fact, as you can see in my examples, if I directly embed the dismax query (without boost query) in the boolean query, it works, but it requires specifying hl.fl, when I believe it should just use the qf.\nMy feeling is that the highlighter has problems dealing with embedded queries. The problems go worse if you embed boosted queries. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13059432",
            "date": "2011-07-04T13:34:09+0000",
            "content": "Ok, I checked HighlightComponent and QParser impls. HighlightComponent calls QParser.getHighlightQuery() to get Query to be highlighted. When you set +inStock:true +query:\"\n{!boost b=$dateboost v=$qq defType=dismax}\" to q parameter, QParser is LuceneQParser, and its getHighlightQuery() is:\n\n\npublic Query getHighlightQuery() throws ParseException {\n  return getQuery();\n}\n\n\n\nand it returns BooleanQuery. If you set {!boost b=$dateboost v=$qq defType=dismax}\n to q parameter, QParser's getHighlightQuery() is:\n\n\npublic Query getHighlightQuery() throws ParseException {\n  return baseParser.getHighlightQuery();\n}\n\n\n\nand where baseParser is DisMaxQParser then it returns DisjunctionMaxQuery. "
        },
        {
            "author": "Juan Antonio Farr\u00e9 Basurte",
            "id": "comment-13059441",
            "date": "2011-07-04T13:54:51+0000",
            "content": "Ok, now I get much better what is going on, thanks for the explanation.\nWhat I'm not sure is about the conclusion. Is this a bug that should be corrected?\nSounds like that to me, and in fact I don't see any workaround, except using bf instead of boost, but then you get an additive boost instead of a multiplicative one. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13059462",
            "date": "2011-07-04T14:50:01+0000",
            "content": "What I'm not sure is about the conclusion. Is this a bug that should be corrected?\n\nI'm not sure. If getHighlightQuery() is for providing basic query so that Lucene's highlighter can understand what kind of query it is, it looks bug to me.\n\nBTW, how do you think the idea of SOLR-1926. If it can be used, does it solve your problem? "
        },
        {
            "author": "Juan Antonio Farr\u00e9 Basurte",
            "id": "comment-13059471",
            "date": "2011-07-04T15:06:18+0000",
            "content": "Interesting idea.\nFor my concrete problem, it would probably provide a workaround, yes.\nThe comment by Hoss Man sounds also quite reasonable. I can't think of a situation where having hl.q provides a clear advantage over the hl.text suggested by Hoss Man, though may be I just haven't come up with the use case. "
        },
        {
            "author": "Juan Antonio Farr\u00e9 Basurte",
            "id": "comment-13070436",
            "date": "2011-07-25T11:29:53+0000",
            "content": "I chose minor for priority because of the \"workaround\" of using bf instead of boost.\nBut that's not a real workaround, as you don't get the multiplicative boost you need.\nThe more I test it, the more I realize how far using bf is from what I need for a suitable date boosting.\nSo, I change priority to major. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13070459",
            "date": "2011-07-25T12:27:25+0000",
            "content": "This will vary depending on what highlighter impl you choose.\n\nFor the span highlighter, it doesn't yet know about BoostedQuery - it would need to identify it and pull the query out of it with getQuery. However, this would add a dependency on modules/queries that I don't think exists yet - that is the only hitch.\n "
        },
        {
            "author": "Juan Antonio Farr\u00e9 Basurte",
            "id": "comment-13070476",
            "date": "2011-07-25T12:55:31+0000",
            "content": "That is good to know. So, what currently stable highlighter implementation/s would work correctly in the indicated use cases? "
        },
        {
            "author": "lukes shaw",
            "id": "comment-13623957",
            "date": "2013-04-05T19:09:05+0000",
            "content": "Hi everyone, recently i was trying to have the boost in the query and highlighting on in parallel. But if have the boost, highlighting doesn't works, but the moment i remove the boost highlighting start working again. \n\nBelow is the request i am sending.\n\nhttp://localhost:8983/solr/collection1/select?q=%2B_query_%3A%22\n{!type%3Dedismax+qf%3D%27body^1.0+title^10.0%27+pf%3D%27body^2%27+ps%3D36+pf2%3D%27body^2%27+pf3%3D%27body^2%27+v%3D%27apple%27+mm%3D100}%22&group=true&group.field=content_group_id_k&group.ngroups=true&group.limit=3&fl=id%2Clanguage_k%2Clast_modified_date_dt%2Ctitle&rows=20&hl.snippets=1&hl.fragsize=200&hl.fl=body&hl.fl=title&hl=true&hl.q=%2B_query_%3A%22{!type%3Dedismax+qf%3D%27body^1.0+title^10.0%27+pf%3D%27body^2%27+ps%3D36+pf2%3D%27body^2%27+pf3%3D%27body^2%27+v%3D%27apple%27+mm%3D100}\n%22&debugQuery=true&wt=json&indent=true&hl.snippets=1&hl.fragsize=200&hl.fl=bosy&hl.fl=title&hl=true&boost=boost_weight\n\nOR\n\nhttp://localhost:8983/solr/collection1/select?q=%2B_query_%3A%22\n{!type%3Dedismax+qf%3D%27body^1.0+title^10.0%27+pf%3D%27body^2%27+ps%3D36+pf2%3D%27body^2%27+pf3%3D%27body^2%27+v%3D%27apple%27+mm%3D100}\n%22&group=true&group.field=content_group_id_k&group.ngroups=true&group.limit=3&fl=id%2Clanguage_k%2Clast_modified_date_dt%2Ctitle&rows=20&hl.snippets=1&hl.fragsize=200&hl.fl=body&hl.fl=title&hl=true&debugQuery=true&wt=json&indent=true&hl.snippets=1&hl.fragsize=200&hl.fl=bosy&hl.fl=title&hl=true&boost=boost_weight\n\nBut if i do above two without the boost or use bf(additive) instead of boost(multiplicative), things works but i don't get the boost(multiplicative). \n\nI am using SOLR4.1.0\n\n Any help in this is really appreciated.\n\nRegards,\nLokesh "
        }
    ]
}