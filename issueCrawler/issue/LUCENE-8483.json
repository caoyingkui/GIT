{
    "id": "LUCENE-8483",
    "title": "Enforce that Scorer cannot have a null Weight",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "New Feature"
    },
    "description": "Follow up to LUCENE-6228.\u00a0 All Scorers that were passing null as their parent Weights can be replaced by Scorables, so we can now enforce that Scorer must not have a null Weight.",
    "attachments": {
        "LUCENE-8483.patch": "https://issues.apache.org/jira/secure/attachment/12938247/LUCENE-8483.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16602992",
            "author": "Alan Woodward",
            "content": "Patch.\u00a0 Several FakeScorer implementations have been removed as they were unused. ",
            "date": "2018-09-04T12:30:10+0000"
        },
        {
            "id": "comment-16603002",
            "author": "Adrien Grand",
            "content": "Can we somehow avoid the FakeWeight in ValuesSourceScorer? They look created via a FunctionScoreQuery most of the time, so we should have a weight object available?\n\nI'm also wondering whether we should consider another name: FakeScorer used to be a hack since it didn't really implement the Scorer API, while FakeScorable is now a pefectly legitimate implementation of Scorable? ",
            "date": "2018-09-04T12:48:09+0000"
        },
        {
            "id": "comment-16604110",
            "author": "Alan Woodward",
            "content": "ValueSource.getRangeScorer() now takes a Weight as well, which is simple in most cases but requires a small amount of ceremony in Solr for range filters - David Smiley\u00a0or Hoss Man\u00a0might want to take a look here?\n\nI renamed FakeScorable to ScoreAndDoc ",
            "date": "2018-09-05T08:26:45+0000"
        },
        {
            "id": "comment-16604118",
            "author": "Adrien Grand",
            "content": "I renamed FakeScorable to ScoreAndDoc\n\n+1 let's also rename in other modules? ",
            "date": "2018-09-05T08:31:47+0000"
        },
        {
            "id": "comment-16604131",
            "author": "Alan Woodward",
            "content": "Good point!\u00a0 Renamed everywhere except for tests where it genuinely is a FakeScorer, not a Scorable.\n\nOh for a Java struct... ",
            "date": "2018-09-05T08:43:54+0000"
        },
        {
            "id": "comment-16604369",
            "author": "David Smiley",
            "content": "+1 looks good Alan. \u00a0If you want to standardize on the name ScoreAndDoc as a common stereotype of Scorable, then DummyScorer in CollapsingQParserPlugin ought to be named this as well. \u00a0It's curious to see so many of these impls. \u00a0I wonder if the name \"ScoreAndDoc\" is best; perhaps \"BasicScorable\"? \u00a0\"ScoreAndDoc\" doesn't incorporate Scorable which is suggestive one fo those two names should be different so that it aligns better. ",
            "date": "2018-09-05T13:00:15+0000"
        },
        {
            "id": "comment-16606936",
            "author": "Alan Woodward",
            "content": "ScoreAndDoc is always an implementation detail, so I'm not too worried about the name there.\u00a0 Will rename in CollapsingQParserPlugin and commit. ",
            "date": "2018-09-07T10:17:28+0000"
        },
        {
            "id": "comment-16606965",
            "author": "ASF subversion and git services",
            "content": "Commit 66c671ea80f81596dad6d2e7745328f31f530cb8 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=66c671e ]\n\nLUCENE-8483: Scorer cannot have a null Weight ",
            "date": "2018-09-07T10:42:05+0000"
        },
        {
            "id": "comment-16606966",
            "author": "Alan Woodward",
            "content": "Thanks all. ",
            "date": "2018-09-07T10:42:22+0000"
        }
    ]
}