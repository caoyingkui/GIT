{
    "id": "SOLR-8221",
    "title": "Some improvements to MiniSolrCloudCluster API",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Spin-off from discussion on SOLR-8196.\n\nMiniSolrCloudCluster should create subdirectories for all its child nodes.",
    "attachments": {
        "SOLR-8221.patch": "https://issues.apache.org/jira/secure/attachment/12769261/SOLR-8221.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-28T11:13:41+0000",
            "author": "Alan Woodward",
            "content": "Patch.\n\nMiniSolrCloudCluster now takes a Path to a base directory in its constructor, gives names to its child JettySolrRunners, and creates subdirectories for them using those names.\n\nThis also changes the API to take solr.xml as a String rather than a File, and adds default solr.xml and jetty configs.  There was only a single test that was using a non-standard solr.xml here.\n\nYou can now spin up a cluster as easily as:\n\nMiniSolrCloudCluster cluster = new MiniSolrCloudCluster(4, createTempDir());\n\n\n\nGiving the cluster control of its own directories has meant tweaks to a couple of tests in TestMiniSolrCloudCluster.  We now always test that a collection can be deleted and then re-created, as the 'run this function twice sometimes' logic relied on some weird behaviour to do with re-use of existing directories.  The test for async core loading was also not actually testing what it should have been - it passed because a newly started jetty was failing due to it trying to open up cores that were owned by other nodes, rather than because of any kind of async status.  There are other tests for async loading, so I've just removed this.\n\nOne other issue that this has turned up is that creating collections is quite slow, due to non-leader nodes going into recovery and then waiting for 7 seconds (SOLR-7141).  I think this may be slowing down the entire test suite by several minutes (lots of tests create and delete collections, and 7 seconds per test adds up quickly).  I'll open another ticket to investigate speeding that up. ",
            "id": "comment-14978254"
        },
        {
            "date": "2015-10-28T13:34:50+0000",
            "author": "Mark Miller",
            "content": "That 7 seconds can simply be lowered back down to 2 for non chaosmonkey tests via sys property config most likely.\n\nIt's a bummer wait in general, but we have to be kind of conservative unless something more active is used to solve the issue. ",
            "id": "comment-14978421"
        },
        {
            "date": "2015-10-28T13:37:24+0000",
            "author": "Mark Miller",
            "content": "I think this may be slowing down the entire test suite by several minutes \n\nDepends on if you running a lot tests in parallel or not I think. You can take out half the SolrCloud tests on my machine (I run 8 jvms for tests) and get almost the same times for test runs. ",
            "id": "comment-14978429"
        },
        {
            "date": "2015-10-28T13:46:26+0000",
            "author": "Alan Woodward",
            "content": "Maybe we could add a 'newcollection' parameter to the core create requests, which mean that the core can skip recovery entirely?  And change the collection-complete check to wait until all cores are up before it returns, to ensure that no docs are added until the collection is fully up. ",
            "id": "comment-14978445"
        },
        {
            "date": "2015-10-28T13:47:32+0000",
            "author": "Alan Woodward",
            "content": "Patch changing the solrj tests as well.  All tests pass. ",
            "id": "comment-14978447"
        },
        {
            "date": "2015-10-28T15:02:35+0000",
            "author": "Mark Miller",
            "content": "And change the collection-complete check to wait until all cores are up before it returns, to ensure that no docs are added until the collection is fully up.\n\nI still think it's tricky - you have to time out at some point, and what if a create call is held up in some buffer and released after the timeout .. it skips recovery? Just seems tricky to nail that. Would be better to spend that effort on making the wait itself active and not passive.\n\nOn my setup I just ran with that wait at 7 seconds and lowered it down to 2 seconds - the total test time was about 40 seconds faster - which is almost within normal variation. Probably a bit faster though.  ",
            "id": "comment-14978559"
        },
        {
            "date": "2015-10-28T15:17:50+0000",
            "author": "Alan Woodward",
            "content": "Would be better to spend that effort on making the wait itself active and not passive.\n\nYeah, I think you're right.  Ah well, on to the next suspect  ",
            "id": "comment-14978584"
        },
        {
            "date": "2015-10-28T15:43:52+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1711041 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1711041 ]\n\nSOLR-8221: MiniSolrCloudCluster creates subdirectories for its child nodes ",
            "id": "comment-14978613"
        },
        {
            "date": "2015-10-28T17:28:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1711073 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1711073 ]\n\nSOLR-8221: MiniSolrCloudCluster creates subdirectories for its child nodes ",
            "id": "comment-14978822"
        },
        {
            "date": "2015-10-28T19:15:58+0000",
            "author": "Steve Rowe",
            "content": "Alan Woodward, my Jenkins (and also Policeman Jenkins) has been seeing Error Message: java.lang.IllegalStateException: Scheme 'http' not registered. for several tests since you committed this - is it possible that your changes caused it?:\n\nhttp://jenkins.sarowe.net/job/Lucene-Solr-tests-trunk/3318/\nhttp://jenkins.sarowe.net/job/Lucene-Solr-tests-5.x-Java7/3228/\nhttp://jenkins.sarowe.net/job/Lucene-Solr-tests-5.x-Java8/2995/\nhttp://jenkins.sarowe.net/job/Lucene-Solr-tests-trunk/3321/\nhttp://jenkins.thetaphi.de/job/Lucene-Solr-5.x-Linux/14412/ ",
            "id": "comment-14979066"
        },
        {
            "date": "2015-10-28T19:30:00+0000",
            "author": "Alan Woodward",
            "content": "Yes, looks like SSL config is not getting propagated through the cluster settings any more, am looking now... ",
            "id": "comment-14979082"
        },
        {
            "date": "2015-10-28T19:57:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1711112 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1711112 ]\n\nSOLR-8221: Ensure that SSL config is passed to MiniSolrCloudCluster ",
            "id": "comment-14979132"
        },
        {
            "date": "2015-10-28T19:58:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1711113 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1711113 ]\n\nSOLR-8221: Ensure that SSL config is passed to MiniSolrCloudCluster ",
            "id": "comment-14979134"
        }
    ]
}