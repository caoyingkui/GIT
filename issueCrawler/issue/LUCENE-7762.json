{
    "id": "LUCENE-7762",
    "title": "Add EnglishAnalyzer.setMaxTokenLength",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Won't Fix",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "6.6",
            "7.0"
        ]
    },
    "description": "I think EnglishAnalyzer should also let you change the default (255) max token length of the StandardTokenizer its invoking.\n\nI will also fold the javadoc fixes from LUCENE-7760 here.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15950677",
            "date": "2017-03-31T10:57:14+0000",
            "content": "We did a lot of work to remove analyzer customizations and options. Really they should be \"examples\" and you should use CustomAnalyzer if you want to tweak behavior.\n\nOtherwise we run into lots of backwards-compatibility issues. Or cases like this one, why should EnglishAnalyzer's api be bound to StandardTokenizer at all? It should not show its cards, these things make it hard/impossible to improve it later. And why just EnglishAnalyzer? If its gonna show its cards, why shouldnt all the other StandardTokenizer-using analyzers show their cards too? I think consistency is important.\n\nthese analyzers are still defined with java code (versus configuration), but this is also not good. Such options make it hard to improve them from that perspective too. \n\nAnd really the only reason a setter is wanted is because they are defined with java code today. If they weren't, be honest, you'd just tweak the configuration.\n\nI'm not sure we should do this for all these reasons. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-15950680",
            "date": "2017-03-31T11:00:07+0000",
            "content": "OK, thanks Robert Muir, that makes sense ... I won't add this.\n\nI'll post a patch just to fix the existing javadocs on LUCENE-7760. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15950690",
            "date": "2017-03-31T11:08:14+0000",
            "content": "I agree with Robert. When implementing CustomAnalyzer my \"larger plan\" was already to remove all hardcoded Analyzer \"examples\" from source code. This would also reduce the size of the analysis jars and number of classes confusing users. My idea would be to just have the current Analyzers as static final \"constants\" in some \"utility\" class, one for each language (e.g., lazy initialized in Analyzers.get(Locale.ENGLISH) with a Java 8 function lambda that returns a CustomAnalyzer, Locale was just an idea, could also be an enum).\n\nUsers who want analyzers with custom stopwords and so on, can use the builder pattern of CustomAnalyzer. Then it looks like configuring an analyzer in Solr or Elasticsearch. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15950696",
            "date": "2017-03-31T11:10:46+0000",
            "content": "Maybe we should open a followup issue. I think for now, most of these analyzers should be implemented via CustomAnalyzer? This is just a small step, but would help the situation. Then users can look at the source code and know how to do this stuff. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-15950699",
            "date": "2017-03-31T11:14:49+0000",
            "content": "+1. The worst is still the immense amount of boilerplate code, so I would be happy to start with that! ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15950796",
            "date": "2017-03-31T12:45:04+0000",
            "content": "+1 for both Robert Muir's idea and Uwe Schindler's ... but I won't have the near-term bandwidth to work on them ... ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15951150",
            "date": "2017-03-31T15:38:06+0000",
            "content": "+1 to rebuild all those analyzers with CustomAnalyzer ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15951172",
            "date": "2017-03-31T15:49:34+0000",
            "content": "+1 nice plan! ",
            "author": "David Smiley"
        }
    ]
}