{
    "id": "SOLR-2990",
    "title": "solr OOM issues",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Cannot Reproduce"
    },
    "description": "We see intermittent issues with OutOfMemory caused by tika failing to process content. Here is an example:\n\nDec 29, 2011 7:12:05 AM org.apache.solr.common.SolrException log\nSEVERE: java.lang.OutOfMemoryError: Java heap space\n        at org.apache.poi.hmef.attribute.TNEFAttribute.<init>(TNEFAttribute.java:50)\n        at org.apache.poi.hmef.attribute.TNEFAttribute.create(TNEFAttribute.java:76)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:74)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.<init>(HMEFMessage.java:63)\n        at org.apache.tika.parser.microsoft.TNEFParser.parse(TNEFParser.java:79)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:129)\n        at org.apache.solr.handler.extraction.ExtractingDocumentLoader.load(ExtractingDocumentLoader.java:195)\n        at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:58)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:244)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1478)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:353)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:248)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Martijn van Groningen",
            "id": "comment-13177181",
            "date": "2011-12-29T13:54:52+0000",
            "content": "What is the average size of the files you're sending to Solr? How many files are you sending concurrently to Solr?\n\nI believe that Solr Cell internally saves the parsed content in a String before it adds it to the index. In other words the parsed content is kept in ram and this can cause OOM issues. "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177192",
            "date": "2011-12-29T14:25:40+0000",
            "content": "In this particular test, we are using 2 threads to feed a single solr instance. We batch documents according to these parameters:\n\n1. Max bytes: 5M\n2. Max docs: 200\n\nThese are thresholds. So, it is possible for a large document of size greater than 5M to get fed to Solr by itself. However, consider this. What I observe is that it is content type rather than size that is causing issues. I have seen 2 particular behaviors of concern. The first is slow/sluggish behavior. I have some outputs from our load generator that show that Solr/Tika sometimes takes over 10 minutes to injest some content. I have one test set where I feed 4 documents in a single batch and it takes over 13 minutes for these 4 documents to get indexed. This was run against an empty solr index. The other behavior is OOM.\n\nI cannot share the content as the content is proprietary. I am happy to provide more details from Solr and/or Tika if you can tell me what to look for or what debug I should enable to capture helpful information. "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177199",
            "date": "2011-12-29T14:32:01+0000",
            "content": "Here is an example of a batch containing 1 document that took 49 seconds to process. This is typical for the slow/sluggish behavior we see. The content in particular here is a PDF document.\n\n\nThu Dec 29 07:19:41 2011 feedBatch out: solr2Col2 # docs 1 bytes 6348940 # err 0 # millis 49018\nThu Dec 29 07:19:41 2011 Long running batch (t= 49018 ) doc 1493434104::2 mime = application/octet-stream\n\n\n\nI will see if I can isolate a document that causes an OOM. The most recent OOM I captured was a batch containing more than 1 document and I amm not sure which document may have been the root cause of the OOM. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13177207",
            "date": "2011-12-29T14:39:47+0000",
            "content": "I have had cases where large files where being extracted with Solr cell and eventually Solr crashed due to a lot of parsed content was in memory.\nJust an idea to see if this is a Solr or a Tika issue. Can you try to use the Tika command line utility and parse the document(s) that cause OOM?  "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177209",
            "date": "2011-12-29T14:43:53+0000",
            "content": "I will attempt to isolate some content that causes OOM and feed them one at a time. If I can reproduce an OOM via this mechanism, I will try the CLI. I have never used the tika CLI. I will take a look at the project page to see how to invoke that. "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177215",
            "date": "2011-12-29T15:00:52+0000",
            "content": "I successfully isolated one document that causes an OOM. Note the input size is small (only 40K).\n\n\nThu Dec 29 08:53:57 2011 feedBatch out: solCol2 # docs 1 bytes 40265 # err 1 # millis 3549\nThu Dec 29 08:53:57 2011 ContentError: 1466911872::1 ContentError [m_contentID=1466911872::1, m_module=SolrContentManager, m_error=Java heap space  java.lang.OutOfMemoryError: Java heap space         at]\n\n\n\nStack trace from solr looks the same as originally reported:\n\n\nDec 29, 2011 8:53:57 AM org.apache.solr.common.SolrException log\nSEVERE: java.lang.OutOfMemoryError: Java heap space\n        at org.apache.poi.hmef.attribute.TNEFAttribute.<init>(TNEFAttribute.java:50)\n        at org.apache.poi.hmef.attribute.TNEFAttribute.create(TNEFAttribute.java:76)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:74)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.<init>(HMEFMessage.java:63)\n        at org.apache.tika.parser.microsoft.TNEFParser.parse(TNEFParser.java:79)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:129)\n        at org.apache.solr.handler.extraction.ExtractingDocumentLoader.load(ExtractingDocumentLoader.java:195)\n        at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:58)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:244)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1478)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:353)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:248)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n\n\n\n\nThe document in question here appears to be of type application/ms-tnef. I will add more information to the ticket as I drill down and learn more. "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177258",
            "date": "2011-12-29T16:41:30+0000",
            "content": "I have another document that causes OOM in a batch, but when I submit it by itself, it produces this Tika error. Maybe this is helpful?\n\n\nDec 29, 2011 10:37:21 AM org.apache.solr.common.SolrException log\nSEVERE: org.apache.solr.common.SolrException: org.apache.tika.exception.TikaException: TIKA-198: Illegal IOException from org.apache.tika.parser.microsoft.T\nNEFParser@19ed00d1\n        at org.apache.solr.handler.extraction.ExtractingDocumentLoader.load(ExtractingDocumentLoader.java:201)\n        at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:58)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:244)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1478)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:353)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:248)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n        at org.mortbay.jetty.Server.handle(Server.java:326)\n        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:945)\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n        at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)\n        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n       ... 23 more\nCaused by: org.apache.poi.util.LittleEndian$BufferUnderrunException: buffer underrun\n        at org.apache.poi.util.LittleEndian.readUShort(LittleEndian.java:302)\n        at org.apache.poi.hmef.attribute.TNEFAttribute.<init>(TNEFAttribute.java:53)\n        at org.apache.poi.hmef.attribute.TNEFAttribute.create(TNEFAttribute.java:76)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:74)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.<init>(HMEFMessage.java:63)\n        at org.apache.tika.parser.microsoft.TNEFParser.parse(TNEFParser.java:79)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        ... 26 more\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13177290",
            "date": "2011-12-29T17:58:08+0000",
            "content": "have you tried parsing these docs using tika on the command line?\n\nhttps://tika.apache.org/1.0/gettingstarted.html#Using_Tika_as_a_command_line_utility\n\n...nothing in these stack traces seems to suggests a problem specifically in Solr\n\n(It's completely possible that Solr is doing something inefficient (memory wise) when using Tika that is contributing the the OOM, but if you're getting errors on these docs even when you don't get OOM that suggests a more fundamental underlying problem) "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177297",
            "date": "2011-12-29T18:08:45+0000",
            "content": "Looks reproducible when I downloaded tika-app-1.0.jar. \n\n\n[rtulloh@chiemsim-500 oom2]$ java -Xmx2G -jar ../tika-app-1.0.jar XXXX\nException in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n        at org.apache.poi.hmef.attribute.TNEFAttribute.<init>(TNEFAttribute.java:50)\n        at org.apache.poi.hmef.attribute.TNEFAttribute.create(TNEFAttribute.java:76)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:74)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.process(HMEFMessage.java:98)\n        at org.apache.poi.hmef.HMEFMessage.<init>(HMEFMessage.java:63)\n        at org.apache.tika.parser.microsoft.TNEFParser.parse(TNEFParser.java:79)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:120)\n        at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:136)\n        at org.apache.tika.parser.mail.MailContentHandler.body(MailContentHandler.java:82)\n        at org.apache.james.mime4j.parser.MimeStreamParser.parse(MimeStreamParser.java:133)\n        at org.apache.tika.parser.mail.RFC822Parser.parse(RFC822Parser.java:76)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n        at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:120)\n        at org.apache.tika.cli.TikaCLI$OutputType.process(TikaCLI.java:128)\n        at org.apache.tika.cli.TikaCLI.process(TikaCLI.java:392)\n        at org.apache.tika.cli.TikaCLI.main(TikaCLI.java:99)\n\n\n\nI have seen that some documents get processed correctly the first time I submit to solr, but fail w/ OOM when submitted again during retry. "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177301",
            "date": "2011-12-29T18:14:59+0000",
            "content": "I'll open a ticket against tika for this issue. I'll also try to document a case when the first try of a document fails with an error and the second attempt fails with OOM. That might be a solr issue as I would expect a retry to fail with the same error as the first try. "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177304",
            "date": "2011-12-29T18:23:09+0000",
            "content": "Opened tika ticket https://issues.apache.org/jira/browse/TIKA-835 "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13177345",
            "date": "2011-12-29T19:40:32+0000",
            "content": "To me this seems like an apache poi issue. I don't think this is a Solr Cell issue like Hoss is suggesting. \n\nThe only few times a saw Solr cell having OOM issues was when very large files were being uploaded (a few hundred megabytes per file). In such cases it is better to do parsing outside of Solr by using plain Tika in the application in front of Solr. "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177626",
            "date": "2011-12-30T12:42:29+0000",
            "content": "Opened POI ticket: https://issues.apache.org/bugzilla/show_bug.cgi?id=52400 "
        },
        {
            "author": "Eric Pugh",
            "id": "comment-13177642",
            "date": "2011-12-30T13:22:22+0000",
            "content": "I have found that Solr CELL is great for small numbers of documents, or quick prototyping.  But as you scale up in either # or complexity of documents, it becomes a bottle neck.  The Tika CLI is very easy to use, and you can throw more resources at doing Tika extraction if you do it outside of Solr and then just send the text in, versus doing it inside of Solr.  And it's less risk that you bring down Solr!   I wonder if we should put something in the wiki that recommends that if you start having problems with Solr CELL, then move to running Tika outside, and maybe include some sample code?\n\nSolr Cell is an awesome feature, but it can also cut you! "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13177659",
            "date": "2011-12-30T13:57:58+0000",
            "content": "Agreed. It is our plan to move content extraction out of band. However, during our prototyping and testing, we want to be sure that tika will meet all our requirements. So, even if we move content handling out of band, we still need it to work reliably and correctly. \n\nThanks for the note. It confirms what we thought and that is helpful. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539591",
            "date": "2016-10-02T02:46:38+0000",
            "content": "Ancient bug report that may have actually been against ancient Tika. No next action here based on information available.\n\nIf this problem happens again with more recent component versions, a new issue can be created. "
        }
    ]
}