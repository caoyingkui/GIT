{
    "id": "SOLR-2102",
    "title": "JdbcDataSource convertType attribute is not working with implicit fields",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "JdbcDataSource convertType attribute doesn't take any effect on implicit fields ( fields that are not listed in field declaration section ). \n\nFor example you might have the following configuration:\n\ndataconfig\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<dataConfig>\n  <dataSource batchSize=\"-1\" convertType=\"true\" driver=\"com.mysql.jdbc.Driver\"\n    password=\"pass\" url=\"jdbc:mysql://localhost/test\" user=\"root\"/>\n  <document name=\"items\">\n    <entity query=\"SELECT title, body, tm FROM articles order by title desc\">\n    </entity>\n  </document>\n\n\n\nwhere \n\n\ttm is timestamp in mysql database\n\ttm is date in schema.xml\n\n\n\nBecause field tm is not explicitly stated in fields declaration convertType attribute doesn't take any effect and as a result you would get the following exception:\n\nconvertType exception\nSep 6, 2010 2:22:09 AM org.apache.solr.handler.dataimport.SolrWriter upload\nWARNING: Error creating document : SolrInputDocument[{body=body(1.0)={Apache Lucene is a free/open source information retrieval software library, originally created in Java by Doug Cutting.}, tm=tm(1.0)={2010-09-06 02:06:25.0}, title=title(1.0)={Lucene}}]\norg.apache.solr.common.SolrException: Error while creating field 'tm{type=date,default=NOW,properties=indexed,stored,omitNorms,sortMissingLast}' from value '2010-09-06 02:06:25.0'\n        at org.apache.solr.schema.FieldType.createField(FieldType.java:242)\n        at org.apache.solr.schema.SchemaField.createField(SchemaField.java:94)\n        at org.apache.solr.update.DocumentBuilder.addField(DocumentBuilder.java:204)\n        at org.apache.solr.update.DocumentBuilder.toDocument(DocumentBuilder.java:277)\n        at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:60)\n        at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:75)\n        at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:292)\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:618)\n        at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:260)\n        at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:184)\n        at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:334)\n        at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:392)\n        at org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:373)\nCaused by: org.apache.solr.common.SolrException: Invalid Date String:'2010-09-06 02:06:25.0'\n        at org.apache.solr.schema.DateField.parseMath(DateField.java:166)\n        at org.apache.solr.schema.DateField.toInternal(DateField.java:136)\n        at org.apache.solr.schema.FieldType.createField(FieldType.java:240)\n        ... 12 more",
    "attachments": {
        "SOLR-2102.patch": "https://issues.apache.org/jira/secure/attachment/12453908/SOLR-2102.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Lance Norskog",
            "id": "comment-12906405",
            "date": "2010-09-06T00:14:33+0000",
            "content": "The (equals 'int or sint') etc. code dates from 1.3. You might wish to update these clauses to include the 1.4 'pint/tint' etc. versions. Also date/sdate/ pdate/tdate.\n\nThis code does not support wildcarded field names, which is OK. \n\nLance "
        },
        {
            "author": "Alexey Serba",
            "id": "comment-12906445",
            "date": "2010-09-06T08:05:02+0000",
            "content": "\nThe (equals 'int or sint') etc. code dates from 1.3. You might wish to update these clauses to include the 1.4 'pint/tint' etc. versions. Also date/sdate/ pdate/tdate.\nI've updated patch with these clauses. Another problem is that Solr type names are customizable by user and might be different from default values. It makes sense to switch from type names to actual class names, but it would be more invasive fix...\n\nAlso I found that resultSet.getTimestamp is more appropriate for Solr date type than resultSet.getDate.\n\nThis code does not support wildcarded field names, which is OK.\nThis is not true. IndexSchema.getFieldOrNull  supports dynamic field matching also.\n\nThanks Lance! "
        },
        {
            "author": "Alexey Serba",
            "id": "comment-12907126",
            "date": "2010-09-08T07:48:20+0000",
            "content": "Another problem is that Solr type names are customizable by user and might be different from default values. It makes sense to switch from type names to actual class names.\nDone in this patch "
        }
    ]
}