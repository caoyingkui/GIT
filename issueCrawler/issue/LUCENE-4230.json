{
    "id": "LUCENE-4230",
    "title": "When pulling DocsAndPositionsEnum you should state whether you need payloads",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Payloads are extra-costly today because when pulling a\nDocsAndPositionsEnum, the codec has no way to know if you need access\nto the payloads.  Tracking the payloads, even if the app never\nretrieves them, is often costly...",
    "attachments": {
        "LUCENE-4230.patch": "https://issues.apache.org/jira/secure/attachment/12536834/LUCENE-4230.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-17T15:43:18+0000",
            "content": "Initial patch, just with a rote cutover of the current boolean\nneedsOffsets to bit wise flags instead; next I'll at a flag for\npayloads and (carefully) fix all places that pull D&PEnum to state\nwhether they need payloads... ",
            "author": "Michael McCandless",
            "id": "comment-13416306"
        },
        {
            "date": "2012-07-17T16:12:32+0000",
            "content": "I don't like POS_NONE.\n\nCan we just have a final method: d&pEnum(LiveDocs, Reuse) that calls d&pEnum(LiveDocs, Reuse, 0) ?\n ",
            "author": "Robert Muir",
            "id": "comment-13416327"
        },
        {
            "date": "2012-07-17T16:19:41+0000",
            "content": "Also I think the flags belong on DocsAndPositionsEnum, not TermsEnum. ",
            "author": "Robert Muir",
            "id": "comment-13416334"
        },
        {
            "date": "2012-07-17T16:23:55+0000",
            "content": "Can we just have a final method: d&pEnum(LiveDocs, Reuse) that calls d&pEnum(LiveDocs, Reuse, 0) ?\n\n+1\n\nAlso I think the flags belong on DocsAndPositionsEnum, not TermsEnum.\n\n+1 ",
            "author": "Michael McCandless",
            "id": "comment-13416337"
        },
        {
            "date": "2012-07-17T16:32:21+0000",
            "content": "I'll take a stab at updating the patch. This is a good change. ",
            "author": "Robert Muir",
            "id": "comment-13416342"
        },
        {
            "date": "2012-07-17T17:47:16+0000",
            "content": "updated patch (needs testing) ",
            "author": "Robert Muir",
            "id": "comment-13416397"
        },
        {
            "date": "2012-07-17T18:17:32+0000",
            "content": "+1 looks great!  Maybe improve the javadocs for the flags to link to TermsEnum#docsAndPositionsEnum?  (Hmm and IR's sugar too). ",
            "author": "Michael McCandless",
            "id": "comment-13416419"
        },
        {
            "date": "2012-07-29T21:44:08+0000",
            "content": "New patch, making the default docsAndPositions return payloads and\noffsets, and then caller can \"optimize\" if they don't need either or\nboth (I optimized MultiPhraseQuery/PhraseQuery/SloppyPhraseQuery).\n\nAlso, we no longer return null if the caller wants offsets but they\nwere not indexed (caller can consult FieldInfo if they need to know),\nand instead return -1 (offsets) and null (payloads) if they weren't\nindexed.\n\nSeparately we can optimize other places that don't need payloads. ",
            "author": "Michael McCandless",
            "id": "comment-13424630"
        },
        {
            "date": "2012-07-30T15:04:29+0000",
            "content": "updated patch: I simplified tests to just call dpEnum(Bits, reuse) instead of passing flags.\n\nBasically I think tests should just work on 'whats there', and we should fix newField such that we sometimes 'add extra stuff in addition to what the test needs'.\n\nThis not only simplifies our code but will maximize test coverage. I'm resisting the urge to beef up TestDuelingCodecs... another issue for that \n\nSeparately I added some nocommits while reviewing the code: places where we are still conditionalizing the code based on a null result (which wont happen).  ",
            "author": "Robert Muir",
            "id": "comment-13424901"
        },
        {
            "date": "2012-07-30T15:27:00+0000",
            "content": "cleared some nocommits, 4 left. ",
            "author": "Robert Muir",
            "id": "comment-13424911"
        },
        {
            "date": "2012-07-30T15:40:01+0000",
            "content": "one nocommit left: checkindex. I'll review it and see if i can clear it up ",
            "author": "Robert Muir",
            "id": "comment-13424922"
        },
        {
            "date": "2012-07-30T15:53:21+0000",
            "content": "all nocommits gone  ",
            "author": "Robert Muir",
            "id": "comment-13424937"
        },
        {
            "date": "2012-07-30T16:16:02+0000",
            "content": "beasting found a bug in the porting of TermVectorComponent... I fixed this. ",
            "author": "Robert Muir",
            "id": "comment-13424959"
        },
        {
            "date": "2012-07-30T16:44:55+0000",
            "content": "+1 looks great!  Thanks Robert. ",
            "author": "Michael McCandless",
            "id": "comment-13424992"
        }
    ]
}