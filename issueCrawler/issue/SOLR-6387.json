{
    "id": "SOLR-6387",
    "title": "Solr specific work around for JDK bug #8047340: posix_spawn error with turkish locale",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Various versions of the Sun/Oracle/OpenJDK JVM have issues executing new processes if the default langauge of the JVM is \"Turkish\".\n\nThe root bug reports of this affecting Runtime.exec() are here...\n\n\n\thttps://bugs.openjdk.java.net/browse/JDK-8047340\n\thttps://bugs.openjdk.java.net/browse/JDK-8055301\n\n\n\nOn systems runining the affected JVMs, with a default langauge of \"Turkish\", this problem has historically manifested itself in Solr in a few ways:\n\n\tSystemInfoHandler would throw nasty exceptions on these systems due to an attempt at conditionally executing some native process to check system stats\n\tRunExecutableListener would fail cryptically\n\tsome solr tests involving either the SystemInfoHandler or the Hadoop MapReduce code would fail if the test framework randomly selected a turkish language based locale.\n\n\n\nStarting with Solr 4.10, We have worked around this jvm bug in Solr in 3 ways:\n\n\tRunExecutableListener makes it more clear in the logs why it can't be used\n\tSystemInfoHandler traps and ignores any Error related to \"posix_span\" in the same way it traps and ignores other errors related to it's conditional attempts at exec'ing (ie: permission problems, executable not found ,etc...)\n\tour map reduce based tests that depend on exec'ing external processes now skip themselves automatically if a turkish local is randomly selected.\n\n\n\nUsers affected by this issue who, for whatever reasons, can not upgrade to Solr 4.10, may wish to consider setting the \"jdk.lang.Process.launchMechanism\" system property explicitly (see below)\n\noriginal issue report\nJenkin's tests occasionally fail with the following cryptic error...\n\n\njava.lang.Error: posix_spawn is not a supported process launch mechanism on this platform.\n        at __randomizedtesting.SeedInfo.seed([9219CAA3BCAA7365:7F07719937A772E1]:0)\n        at java.lang.UNIXProcess$1.run(UNIXProcess.java:104)\n        at java.lang.UNIXProcess$1.run(UNIXProcess.java:93)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.lang.UNIXProcess.<clinit>(UNIXProcess.java:91)\n        at java.lang.ProcessImpl.start(ProcessImpl.java:130)\n        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1028)\n        at java.lang.Runtime.exec(Runtime.java:617)\n\n\n\nA commonality of most of these failures is that the turkish locale has been randomly selected, and apparently the Runtime.exec is busted whtn you use turkish...\n\nhttp://bugs.java.com/bugdatabase/view_bug.do?bug_id=8047340\nhttp://java.thedizzyheights.com/2014/07/java-error-posix_spawn-is-not-a-supported-process-launch-mechanism-on-this-platform-when-trying-to-spawn-a-process/\n\nWe should consider hardcoding the \"jdk.lang.Process.launchMechanism\" sys property mentioned as a workarround in the jdk bug report",
    "attachments": {
        "SOLR-6387.patch": "https://issues.apache.org/jira/secure/attachment/12662397/SOLR-6387.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-14100058",
            "date": "2014-08-17T19:04:40+0000",
            "content": "It looks like the JDK itsself should use forbiddenapis. \n\nthe JDK bug report is about Java 8, so does this affect Java 7, too?. In addition, what happens on Windows? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14100067",
            "date": "2014-08-17T19:12:02+0000",
            "content": "I'm not sure why that issue says it's a regression in 1.8 \u2013 we've seen it reproduce plenty of times in java7 jenkins builds.\n\nThe blog seems to suggest the problem is specific to the BSD based impls of the JRE (ie: FreeBSD & MacOSX) \n\nI don't know what exactly the effects are of hardcoding \"jdk.lang.Process.launchMechanism\" are on other OSes (or for that matter: which of the 2 suggested values make the most sense for hardcoding it too: \"POSIX_SPAWN\" vs \"fork\" "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100070",
            "date": "2014-08-17T19:15:33+0000",
            "content": "I think, we should dig into OpenJDK source code to find out why why fails. To use a workaround, you have to understand, why the workaround is effective. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100081",
            "date": "2014-08-17T19:41:55+0000",
            "content": "Hi,\nafter thinking more about it:\n\nThis seems to only apply to tests, so the simpliest approach should to disable random locales for the affected tests - we have other tests already doing this (add something like assumeFalse(\"Test disabled with turkish default locale, see bug http://...\", Locale.getDefault().equals(Turkish)) to these tests). As we have a good direct line to Oracle we should better ask them to fix this bug, too. Setting this system property may have unwanted effects on specific platforms or implementation of different JVM vendors, so I strongly discourage doing this. It also does not help users of Solr, it just hides a real bug.\n\nThe issue will also affect users on the turkish locale, if they use for example TIKA's ForkParser when parsing files in the extraction module. So it is better to document this as a known issue in specific JVMs and let the end-user upgrade or work around it. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100105",
            "date": "2014-08-17T20:53:56+0000",
            "content": "Hi Hoss,\nthe bug is already fixed in OpenJDK, to be released in 8u40: https://bugs.openjdk.java.net/browse/JDK-8047340\n\nSo I think we should wait for the fix and until that just disable the test on Turkish locale with assumeTrue(). Which tests are affected by this (I have no idea where Solr spawns threads - I think only to get system information like free space or number of inodes?) "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100110",
            "date": "2014-08-17T21:09:51+0000",
            "content": "I sent a note to Rory. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14100121",
            "date": "2014-08-17T21:21:05+0000",
            "content": "This seems to only apply to tests,...\n\nwhy does it only apply to tests?\n\nAny user running on a BSD machine with turkish configured as the default would also have this same type of problem in Solr wouldn't they?\n\nSetting this system property may have unwanted effects on specific platforms or implementation of different JVM vendors, so I strongly discourage doing this\n\nfair enough.\n\nWhich tests are affected by this (I have no idea where Solr spawns threads - I think only to get system information like free space or number of inodes?)\n\nSystemInfoHandler uses exec for the reason you mentioned, but we've also seen this error pop up in LineRandomizerMapperReducerTest because some of the map reduce code execs other processes.\n\nSystemInfoHandler is general enough that lots of tests might trigger it (anyone with a mac or BSD machine should be able to generate a definitive list of all current test triggering this via \"ant test -Dtests.locale=tr_TR\")\n\n\n\nfor the mapreduce tests, assumeNotTurkish() seems like an adequate work arround for this bug - but i feel like we should try to do something better in the case of SystemInfoHandler ... if not explicitly set jdk.lang.Process.launchMechanism, then what about catching the \"Error\" and if it matches the \"posix_spawn\" string, swallow & ignore it (we already have similar logic to account for other Exceptions that might occur when exec'ing a process that might not be available due to permissions/etc .. this seems like it would fall in that boat) "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100124",
            "date": "2014-08-17T21:24:53+0000",
            "content": "if not explicitly set jdk.lang.Process.launchMechanism, then what about catching the \"Error\" and if it matches the \"posix_spawn\" string, swallow & ignore it (we already have similar logic to account for other Exceptions that might occur when exec'ing a process that might not be available due to permissions/etc .. this seems like it would fall in that boat)\n\nThis looks like a good solution! "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100128",
            "date": "2014-08-17T21:33:47+0000",
            "content": "Hi,\n\nfrom OpenJDK source code this shows all platforms where the bug occurs:\n\n\nLINUX(LaunchMechanism.VFORK, LaunchMechanism.FORK),\nBSD(LaunchMechanism.POSIX_SPAWN, LaunchMechanism.FORK),\nSOLARIS(LaunchMechanism.POSIX_SPAWN, LaunchMechanism.FORK),\nAIX(LaunchMechanism.POSIX_SPAWN, LaunchMechanism.FORK);\n\n\n\nAs you see, the capital \"i\" is included in the enum constant properties of BSD (Mac & FreeBSD) and SOLARIS, so the bug applies there (POSIX_SPAWN). Linux is not affected because it uses VFORK.\n\nBecause of that complexity, which is very JVM specific, I tend to not hack those constants into the source code as Sysprops. So I would go with the \"swallow\" Exception in SystemInfoHandler and exclude turkish in mapreduce (I think there is already code that is disabled on some platforms like Windows). "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100145",
            "date": "2014-08-17T22:14:31+0000",
            "content": "Here the patch. I checked the whole source code of Lucene/Solr for Runtime#exec(...).\n\nI also added an assume to morphlines and hadoop. I have to disable all test, because Hadoop always calls Runtime#exec() on startup to analyze system env. So users with hadoop should already know the problem  "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100775",
            "date": "2014-08-18T16:10:04+0000",
            "content": "The bug for JDK7 is here: https://bugs.openjdk.java.net/browse/JDK-8055301 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14100857",
            "date": "2014-08-18T17:01:50+0000",
            "content": "patch looks pretty good, here's some coments (already discussed with Uwe on IRC but recording here for posterity)...\n\n\n\tinstead of ever refering directly to the java.net bug URL anywhere in our code, we should always direct users here for the full context (and a place we can update with more info)\n\tSystemInfoHandler shouldn't rethrow the Error if it matches \"posix_spawn\" - it should just update the return String value to explain why there was an error executing the command, and then swallow the error\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100877",
            "date": "2014-08-18T17:16:24+0000",
            "content": "Updated patch with better error messages. SystemInfoHandler already swallowed the error in previous patch. It was only rethrown, if it was a different error (see return statement in the if block). "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100882",
            "date": "2014-08-18T17:22:31+0000",
            "content": "Changed assumes, too. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14100897",
            "date": "2014-08-18T17:33:52+0000",
            "content": "Commit 1618672 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1618672 ]\n\nSOLR-6387: Add better error messages throughout Solr and supply a work around for Java bug #8047340 to SystemInfoHandler: On Turkish default locale, some JVMs fail to fork on MacOSX, BSD, AIX, and Solaris platforms. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14100941",
            "date": "2014-08-18T17:52:47+0000",
            "content": "Commit 1618676 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1618676 ]\n\nMerged revision(s) 1618672 from lucene/dev/trunk:\nSOLR-6387: Add better error messages throughout Solr and supply a work around for Java bug #8047340 to SystemInfoHandler: On Turkish default locale, some JVMs fail to fork on MacOSX, BSD, AIX, and Solaris platforms. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14101017",
            "date": "2014-08-18T18:28:30+0000",
            "content": "updated issue summary & description to be more helpful to people who follow the links in the new error/assume messages "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14102638",
            "date": "2014-08-19T18:55:18+0000",
            "content": "The problem is not completely fixed:\nOn the first time, this correctly prints the warning, but as the Error occurs in the static initializer of UNIXProcess, the class cannot be loaded. Later references to this class then lead to NoClassDefFoundError. So we should catch both errors and log them.\n\nSee http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-MacOSX/1777/:\n\n   [junit4]   2> 2082174 T4935 oasha.SystemInfoHandler.execute WARN Error forking command due to JVM locale bug (see https://issues.apache.org/jira/browse/SOLR-6387): posix_spawn is not a supported process launch mechanism on this platform.\n   [junit4]   2> 2082176 T4935 oas.SolrTestCaseJ4.tearDown ###Ending testOverriddenHandlers\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=InfoHandlerTest -Dtests.method=testOverriddenHandlers -Dtests.seed=9F30A6DF04D6D3E8 -Dtests.slow=true -Dtests.locale=tr -Dtests.timezone=America/Danmarkshavn -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.10s | InfoHandlerTest.testOverriddenHandlers <<<\n   [junit4]    > Throwable #1: java.lang.NoClassDefFoundError: Could not initialize class java.lang.UNIXProcess\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([9F30A6DF04D6D3E8:796BAAF8FD9F1C5C]:0)\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14102667",
            "date": "2014-08-19T19:11:08+0000",
            "content": "Commit 1618938 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1618938 ]\n\nSOLR-6387: Try to fix this a second time... "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14102670",
            "date": "2014-08-19T19:11:55+0000",
            "content": "Commit 1618939 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1618939 ]\n\nMerged revision(s) 1618938 from lucene/dev/trunk:\nSOLR-6387: Try to fix this a second time... "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14102671",
            "date": "2014-08-19T19:12:31+0000",
            "content": "Next try, hopefully its fixed this time...  "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14111188",
            "date": "2014-08-26T19:39:17+0000",
            "content": "Commit 1620707 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1620707 ]\n\nSOLR-6387: additional map-reduce test that does forking and needs 'tr' check "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14111193",
            "date": "2014-08-26T19:41:31+0000",
            "content": "Commit 1620709 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1620709 ]\n\nSOLR-6387: additional map-reduce test that does forking and needs 'tr' check (merge r1620707) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14111199",
            "date": "2014-08-26T19:43:36+0000",
            "content": "Commit 1620712 from hossman@apache.org in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1620712 ]\n\nSOLR-6387: additional map-reduce test that does forking and needs 'tr' check (merge r1620707) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14286566",
            "date": "2015-01-21T23:47:23+0000",
            "content": "Commit 1653704 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1653704 ]\n\nSOLR-6991,SOLR-6387: Under Turkish locale, don't run solr-cell and dataimporthandler-extras tests that use Tika "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14286569",
            "date": "2015-01-21T23:48:16+0000",
            "content": "Commit 1653706 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653706 ]\n\nSOLR-6991,SOLR-6387: Under Turkish locale, don't run solr-cell and dataimporthandler-extras tests that use Tika (merged trunk r1653704) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14286573",
            "date": "2015-01-21T23:49:15+0000",
            "content": "Commit 1653708 from Use account \"steve_rowe\" instead in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1653708 ]\n\nSOLR-6991,SOLR-6387: Under Turkish locale, don't run solr-cell and dataimporthandler-extras tests that use Tika (merged trunk r1653704) "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14287038",
            "date": "2015-01-22T07:05:57+0000",
            "content": "contrib/extraction is also affected by this.\n\nNews about this: According to Oracle, this should be fixed in Java 8u40 and Java 7u80. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-16609396",
            "date": "2018-09-10T15:33:26+0000",
            "content": "Commit a537aa20c104234e19407087202bec9e6c5c1a21 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a537aa2 ]\n\nSOLR-6387: Remove/revert dated assertFalse in ExtractingRequestHandlerTest\nSince this problem does not appear anymore in the latest JVMs. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-16609398",
            "date": "2018-09-10T15:34:34+0000",
            "content": "Commit 77300d29b1d9d7e8b040140bdcb7165b17b5505a in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=77300d2 ]\n\nSOLR-6387: Remove/revert dated assertFalse in ExtractingRequestHandlerTest\nSince this problem does not appear anymore in the latest JVMs.\n\n(cherry picked from commit a537aa20c104234e19407087202bec9e6c5c1a21) "
        }
    ]
}