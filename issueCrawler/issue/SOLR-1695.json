{
    "id": "SOLR-1695",
    "title": "Missleading error message when adding docs with missing/multiple value(s) for uniqueKey field",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.5",
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Sometimes users don't seem to notice/understand the <uniqueKey/> declaration in the example schema, and the error message they get if their documents don't include that field is confusing...\n\n\norg.apache.solr.common.SolrException: Document [null] missing required field: id\n\n\n\n...because they get an almost identical error even if they remove required=true from <field name=\"id\" /> in their schema.xml file.\n\nWe should improve the error message so it's clear when a Document is missing the \"uniqueKeyField\" (not just a \"required\" field) so they know the terminology to look for in diagnosing the problem.\n\nhttp://old.nabble.com/solr-1.4-csv-import-----Document-missing-required-field%3A-id-to26990048.html#a26990779",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12835059",
            "date": "2010-02-18T00:04:47+0000",
            "content": "Committed revision 911228.\nCommitted revision 911232.\n\nI added an explicit checks for the number of uniqueKey values being != 1 early on in DocumentBuilder.toDocument.  Prior to this, multiple values weren't checked for until the doc made it all the way to the UpdateHandler. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12835060",
            "date": "2010-02-18T00:05:26+0000",
            "content": "revising summary "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12835279",
            "date": "2010-02-18T16:31:25+0000",
            "content": "reopening - this broke the build. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12835334",
            "date": "2010-02-18T19:02:41+0000",
            "content": "Doh!\n\nNote to self: don't just run the tests, remember to look at the results as well.\n\nThe DocumentBuilderTest failures make sense: they use a schema with uniqueKey defined, but add docs w/o that field to test other behaviors of toDocument.  They passed prior to this change because the only tested to toDocument method in isolation, andthe test for a missing uniqueKey was missing from that method.  I think it's safe to consider these tests broken as written, since toDocument does do schema validation \u2013 it just wasn't doing the uniqueKey validation before.  So i'll modify those tests to include a value for the uniqueKey field\n\nthe ConvertedLegacyTest failure confuses me though ... it also adds docs w/o a uniqueKey field even though the schema requires one, but they do full adds so it's not obvious from the surface why it was ever passing before ... i want to think about that a little more before just \"fixing' the test \u2013 it may be masking another bug. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12835343",
            "date": "2010-02-18T19:16:24+0000",
            "content": "the ConvertedLegacyTest failure confuses me though\n\nschema.xml does not require the \"id\" field, and the failing add explicitly says \"allowDups=false\" (legacy speak for overwrite=false) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12835364",
            "date": "2010-02-18T19:48:37+0000",
            "content": "Hmmm.... ok so the reason the legacy test passed prior to this change is that DirectUpdateHandler2 (and DirectUpdateHandler from what i can tell) don't bother checking for a uniqueKey (or for multiple uniqueKeys) if allowDups=\"true\" (which it is in the line of ConvertedLEgacyTest that's failing).\n\nSo the question becomes: Is it a bug that DUH(2) allow docs w/o a uniqueKey field just because allowDups=true?\n\nIf it's not a bug, then this entire patch should probably be rolled back \u2013 but personally It feels like it really is a bug: if a schema declares a uniqueKey field, then just because a particular add command says allowDups=true doesn't mean that docs w/o an id (or with multiple ids) should be allowed in to the index \u2013 those docs will need meaningful ids if/when a later commit does want to override them (consider the case of doing an initial build w/ allowDups=true for speed, and then incremental updates w/ allowDups=false ... the index needs to be internally consistent.\n\nActually: I'm just going to roll this entire patch back either way \u2013 we can improve the error messages generated by DirectUpdateHandler2 and eliminate the redundant uniqueKey check in DocumentBuilder.toDocument.  As a separate issue we can consider whether DUH2 is buggy. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12835373",
            "date": "2010-02-18T19:58:48+0000",
            "content": "schema.xml does not require the \"id\" field, and the failing add explicitly says \"allowDups=false\" (legacy speak for overwrite=false)\n\n...it doesn't require \"id\" but it does declare \"id\" as the uniqueKey field ... even if it's allowing dups shouldn't it ensure that the docs has 1 and only one value for the uniqueKey field? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12835381",
            "date": "2010-02-18T20:17:32+0000",
            "content": "...it doesn't require \"id\" but it does declare \"id\" as the uniqueKey field ... even if it's allowing dups shouldn't it ensure that the docs has 1 and only one value for the uniqueKey field?\n\nThat depends... it makes sense for \"normal\" documents, but I've seen people that add a few auxillary documents to their index that used different fields, including the id field.  But it's not like you gain greater power by allowing that - those usecases could be covered by forcing the user to come up with a uniqueKey value too... it would just be a little more work.\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12835412",
            "date": "2010-02-18T21:30:49+0000",
            "content": "Committed revision 911595.\n\nrolledback the changes to DocumentBuilder and improved the existing error messages in UpdateHandler instead. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872785",
            "date": "2010-05-28T03:00:12+0000",
            "content": "\n\nCorrecting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013248",
            "date": "2011-03-30T15:45:59+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}