{
    "id": "SOLR-9308",
    "title": "SolrCloud RTG doesn't forward any params to shards, causes fqs & non-default fl params to be ignored",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "While working on a robust randomized test for SOLR-9285, I can't seem to get filter queries on RTG to work at all \u2013 even when the docs are fully committed.\n\nsteps to reproduce to follow in comment...",
    "attachments": {
        "SOLR-9308.patch": "https://issues.apache.org/jira/secure/attachment/12818726/SOLR-9308.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-07-15T00:05:11+0000",
            "author": "Hoss Man",
            "content": "\n\nSteps to reproduce with a clean checkout of master...\n\n\n\tstartup the cloud example: \n\nbin/solr -e cloud -noprompt\n...\n\n\n\texplicitly disable auto commit so we can test RTG with filters against the update log: \n\ncurl -H 'Content-Type: application/json' http://localhost:8983/solr/gettingstarted/config --data-binary '{\"set-property\":{\"updateHandler.autoSoftCommit.maxTime\":\"-1\"}}'\n...\n\n\n\tadd 2 docs, which we do not explicitly commit: \n\ncurl -H 'Content-Type: application/json' http://localhost:8983/solr/gettingstarted/update --data-binary '[{\"id\":\"xxx\",\"aaa_i\":1532757419},{\"id\":\"yyy\",\"aaa_i\":-459637688}]'\n...\n\n\n\n\n\n\n\tsimple RTG (against ulog) should return both docs: \n\ncurl 'http://localhost:8983/solr/gettingstarted/get?ids=xxx,yyy'\n  \"response\":{\"numFound\":2,\"start\":0,\"docs\":[\n      {\n        \"id\":\"yyy\",\n        \"aaa_i\":-459637688,\n        \"_version_\":1539875027865829376},\n      {\n        \"id\":\"xxx\",\n        \"aaa_i\":1532757419,\n        \"_version_\":1539875027875266560}]\n  }}\n\n\n\tRTG w/fq (against ulog/realtimeSearcher) should only return doc yyy, not doc xxx: \n\ncurl 'http://localhost:8983/solr/gettingstarted/get?ids=xxx,yyy&fq=aaa_i:%5B*+TO+-459637688%5D'\n{\n  \"response\":{\"numFound\":2,\"start\":0,\"docs\":[\n      {\n        \"id\":\"yyy\",\n        \"aaa_i\":-459637688,\n        \"_version_\":1539875027865829376},\n      {\n        \"id\":\"xxx\",\n        \"aaa_i\":1532757419,\n        \"_version_\":1539875027875266560}]\n  }}\n\n\n ...UNEXPECTED RTG RESULT!\n\teven a single id=xxx RTG w/fq (against ulog/realtimeSearcher) seems to be broken: \n\ncurl 'http://localhost:8983/solr/gettingstarted/get?id=xxx&fq=aaa_i:%5B*+TO+-459637688%5D'\n{\n  \"response\":{\"numFound\":1,\"start\":0,\"docs\":[\n      {\n        \"id\":\"xxx\",\n        \"aaa_i\":1532757419,\n        \"_version_\":1539876151162306560}]\n  }}\n\n\n ...UNEXPECTED RTG RESULT!\n\tsanity check that it's not just some sort of univerted field / numerics problem: \n\ncurl 'http://localhost:8983/solr/gettingstarted/get?id=xxx&fq=bogus_s:ddd'\n{\n  \"doc\":\n  {\n    \"id\":\"xxx\",\n    \"aaa_i\":1532757419,\n    \"_version_\":1539876677341937664}}\n\n\n ...UNEXPECTED RTG RESULT!\n\tCommit both docs: \n\ncurl 'http://localhost:8983/solr/gettingstarted/update?commit=true'\n...\n\n\n\tdo a basic search for all docs with same numeric fq to confirm doc xxx doesn't match: \n\ncurl 'http://localhost:8983/solr/gettingstarted/query?q=*:*&fq=aaa_i:%5B*+TO+-459637688%5D'\n{\n  \"responseHeader\":{\n    \"zkConnected\":true,\n    \"status\":0,\n    \"QTime\":65,\n    \"params\":{\n      \"q\":\"*:*\",\n      \"fq\":\"aaa_i:[* TO -459637688]\"}},\n  \"response\":{\"numFound\":1,\"start\":0,\"maxScore\":1.0,\"docs\":[\n      {\n        \"id\":\"yyy\",\n        \"aaa_i\":-459637688,\n        \"_version_\":1539875027865829376}]\n  }}\n\n\n\tAlso check the same RTG w/fq again now that docs are committed: \n\ncurl 'http://localhost:8983/solr/gettingstarted/get?ids=xxx,yyy&fq=aaa_i:%5B*+TO+-459637688%5D'\n{\n  \"response\":{\"numFound\":2,\"start\":0,\"docs\":[\n      {\n        \"id\":\"yyy\",\n        \"aaa_i\":-459637688,\n        \"_version_\":1539875027865829376},\n      {\n        \"id\":\"xxx\",\n        \"aaa_i\":1532757419,\n        \"_version_\":1539875027875266560}]\n  }}\n\n\n ... RTG STILL UNEXPECTEDLY RETURNING DOC NOT MATCHING FQ!\n\n\n\n\nI've seen the code in RealtimeGetComponent that re-opens the realtime searcher and uses that if fq params are included \u2013 I've read it a couple of times and it looks fine to me, so really have no idea why these trivial little examples fail so badly\n\nYonik Seeley: any idea WTF is going on here? ",
            "id": "comment-15378639"
        },
        {
            "date": "2016-07-15T00:22:39+0000",
            "author": "Yonik Seeley",
            "content": "Hmmm, there are definitely tests for \"fq\" in TestRealTimeGet.java\nSo given how badly broken your test run looks, I'd say that the \"fq\" params aren't being received/processed.\nGiven that you're starting with a solrcloud setup, I'd guess that request forwarding is being done and that \"fq\" params aren't being passed along. ",
            "id": "comment-15378658"
        },
        {
            "date": "2016-07-15T00:34:59+0000",
            "author": "Hoss Man",
            "content": "\nI'd guess that request forwarding is being done and that \"fq\" params aren't being passed along.\n\nHmmm... that seems like a good candidate, but -e cloud -noprompt spins up only 2 nodes w/2 shards, and 2 replicas.   And even if i try sending the RTG requests to both nodes \u2013 or even directly to the individual cores \u2013 the filter is ignored in all cases...\n\n\n$ curl 'http://localhost:8983/solr/gettingstarted_shard1_replica2/get?id=xxx&fq=bogus_s:ddd'\n{\n  \"doc\":\n  {\n    \"id\":\"xxx\",\n    \"aaa_i\":1532757419,\n    \"_version_\":1539876677341937664}}\n$ curl 'http://localhost:8983/solr/gettingstarted_shard2_replica2/get?id=xxx&fq=bogus_s:ddd'\n{\n  \"doc\":\n  {\n    \"id\":\"xxx\",\n    \"aaa_i\":1532757419,\n    \"_version_\":1539876677341937664}}\n$ curl 'http://localhost:7574/solr/gettingstarted_shard1_replica1/get?id=xxx&fq=bogus_s:ddd'\n{\n  \"doc\":\n  {\n    \"id\":\"xxx\",\n    \"aaa_i\":1532757419,\n    \"_version_\":1539876677341937664}}\n$ curl 'http://localhost:7574/solr/gettingstarted_shard2_replica1/get?id=xxx&fq=bogus_s:ddd'\n{\n  \"doc\":\n  {\n    \"id\":\"xxx\",\n    \"aaa_i\":1532757419,\n    \"_version_\":1539876677341937664}}\n\n\n\n(at the time i ran those queries, the UI said the 2 cores on 8983 were my 2 leaders) ",
            "id": "comment-15378667"
        },
        {
            "date": "2016-07-15T00:40:38+0000",
            "author": "Hoss Man",
            "content": "definitely doesn't reproduce with -e techproducts so something cloud specific is definitely the root cause. ",
            "id": "comment-15378675"
        },
        {
            "date": "2016-07-15T00:49:20+0000",
            "author": "Yonik Seeley",
            "content": "And even if i try sending the RTG requests to both nodes \u2013 or even directly to the individual cores \u2013 the filter is ignored in all cases...\n\nPerhaps sub-requests are being unnecessarily used even when the current core could handle it?  That would be consistent with everything we've seen so far. ",
            "id": "comment-15378677"
        },
        {
            "date": "2016-07-15T01:27:56+0000",
            "author": "Hoss Man",
            "content": "I suspect RealTimeGetComponent.createSubRequests is broken?\n\nIt's used by RealTimeGetComponent.distributedProcess to create ShardRequests and copies/parses params but at a skim i don't see anything about fq ",
            "id": "comment-15378707"
        },
        {
            "date": "2016-07-19T02:01:05+0000",
            "author": "Hoss Man",
            "content": "Suggested patch:\n\n\n\trefactors some redundant ShardRequest init logic into a new helper method\n\tupdates the ShardRequest init logic to copy the params from the original request, explicitly removing a few we definitely don't want before adding the new (shard specific) \"ids\" param.\n\tupdates tests to use filter queries in some RTG requests, against both committed & uncommitted docs\n\tensures that the filter Query objects are rewritten before trying to call createWeight on them (unrelated bug that seems like it would also affect some single node RTG requests depending on the type of fq used ... discovered during testing)\n\n\n\nThis fix also seems to resolve all of the issues noted in SOLR-9286 (which makes sense: since no params were being copied for the shard requests, any non-default fl transformers would never be generated by the shards).  So this patch also enables all of the test logic that was blocked on SOLR-9286.\n\nYonik Seeley - what do you think? ",
            "id": "comment-15383474"
        },
        {
            "date": "2016-07-19T22:25:45+0000",
            "author": "Hoss Man",
            "content": "Updated patch:\n\n\n\tUpdated to apply clean on master\n\tI realized this issue is the same root cause as SOLR-9289 (as well as SOLR-9286) so i've enabled those tests as well.\n\n ",
            "id": "comment-15384986"
        },
        {
            "date": "2016-07-20T00:33:04+0000",
            "author": "Hoss Man",
            "content": "\nUgh...\n\n\n\tTestStressCloudBlindAtomicUpdates has been using RTG + filter queries to assert that atomic updates work \u2013 but because of this issue the filter queries were getting silently ignored and the tests wasn't as strong as i thought when i wrote it.\n\tTestStressCloudBlindAtomicUpdates evidently had a bug in how it formatted the fq params when trying to filter on negative numbers \u2013 but again: because of SOLR-9308 those filter queries were never getting parsed, and the test bug when unnoticed until now.\n\n\n\nLatest patch updated to also fix the bug in TestStressCloudBlindAtomicUpdates now that the filter queries are getting parsed & used correctly.\n ",
            "id": "comment-15385124"
        },
        {
            "date": "2016-08-02T19:32:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 72750167a20558789d07a1ff5eca35ea8eec3c6e in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7275016 ]\n\nSOLR-9308: Fix distributed RTG to forward request params, fixes fq and non-default fl params\n\n(cherry picked from commit b3505298a5bef76ff83b269bf87a179d027da849)\n\nConflicts:\n\tsolr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java ",
            "id": "comment-15404642"
        },
        {
            "date": "2016-08-02T19:32:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b3505298a5bef76ff83b269bf87a179d027da849 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b350529 ]\n\nSOLR-9308: Fix distributed RTG to forward request params, fixes fq and non-default fl params ",
            "id": "comment-15404643"
        },
        {
            "date": "2016-08-26T13:59:11+0000",
            "author": "Michael McCandless",
            "content": "Bulk close resolved issues after 6.2.0 release. ",
            "id": "comment-15438976"
        }
    ]
}