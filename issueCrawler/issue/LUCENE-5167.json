{
    "id": "LUCENE-5167",
    "title": "SimilarityBase does not pass docId in the score method for use of FieldCache or DocValues",
    "details": {
        "components": [
            "core/query/scoring"
        ],
        "fix_versions": [],
        "affect_versions": "4.0,                                            4.1,                                            4.2,                                            4.4,                                            4.3.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "SimilarityBase does not pass docId in the score method for use of FieldCache or DocValues.\n\nIf the intent of extending SimilarityBase is to use a FieldCache or NumericDocValuesField as part of the scoring, this is not possible because SimilarityBase does not pass on the docId as one of the parameters of the score method.  This parameter should be added to the score method so that fieldCache or NumericDocValues can be used when extending SimilarityBase.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-08-12T16:52:46+0000",
            "content": "Thanks for opening the issue Ross,\n\nI looked, the trickier part seems to be how to allow the users of this to get AtomicReader on each segment transition.\n\nCurrently, the idea is SimilarityBase hides a lot of this complexity (presents a simple stateless API over the more advanced stateful api): but in addition to passing docid, users will need a way to grab things like DocValues from each segment to make it useful...  ",
            "author": "Robert Muir",
            "id": "comment-13737026"
        },
        {
            "date": "2013-08-14T11:42:47+0000",
            "content": "Here is what I tried and it seems to work, but I am only testing on a small set of data, and I don't fully understand the whole workings of the AtomicReader process.  Please let me know if what I did is valid or not, but I figured since the AtomicReader is passed to the ExactSimScorer method that I could set things up there for use in the score method.  \n\nI modified SimilarityBase (and other necessary classes) to pass the docId and rebuilt Lucene.\n\nThen in my class that extends Similarity base I do the following.\nMySimilarity.java\npublic class MySimilarity extends SimilarityBase{\n    private NumericDocValues values;\n    ...\n\n    @Override\n    public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n    \tthis.values =  context.reader().getNumericDocValues(\"Scoring\");\n        ...\n    }\n\n    @Override\n    protected float score(BasicStats bs, float f, float f1, int docId) {\n        long myScore = values.get(docId);\n        ...\n    }\n}\n\n ",
            "author": "Ross Woolf",
            "id": "comment-13739555"
        },
        {
            "date": "2013-08-14T13:46:29+0000",
            "content": "The problem is: that is not thread-safe...\n\nThats the biggest challenge to overcome here: that SimilarityBase was just intended to be a simple stateless API that doesn't even know about segments and such. ",
            "author": "Robert Muir",
            "id": "comment-13739672"
        }
    ]
}