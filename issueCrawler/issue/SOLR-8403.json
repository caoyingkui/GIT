{
    "id": "SOLR-8403",
    "title": "EmbeddedSolrServer has broken sorting with functions and non-alphanumeric symbols in field names",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3.1",
        "status": "Closed",
        "resolution": "Not A Problem",
        "priority": "Major"
    },
    "description": "We are trying to use EmbeddedSolrServer to test our Java code, that sends queries to Solr server.\n\nWe have a number of non-alphanumeric characters in field names in our schema, and such field names work fine for searching and sorting on both real Solr server (via HttpSolrClient) and on EmbeddedSolrServer.\n\nBut when we make search query that has functions in sort clause, real server handles these queries correctly while EmbeddedSolrServer throws exception.\n\nSuppose, we have a field with name foo:bar. The following query works fine with both real server and EmbeddedSolrServer:\n\nsolrClient.query(new SolrQuery(\"*:*\").addSort(\"foo:bar\", SolrQuery.ORDER.desc));\n\n\n\nBut when we try to use functions in sort clause, exception is thrown by EmbeddedSolrServer (real server works correctly). For the following code:\n\nsolrClient.query(new SolrQuery(\"*:*\").addSort(\"def(foo:bar,0)\", SolrQuery.ORDER.desc));\n\n\nwe get the following exception:\n\norg.apache.solr.common.SolrException: sort param could not be parsed as a query, and is not a field that exists in the index: def(foo:bar,0)\n\tat org.apache.solr.search.QueryParsing.parseSortSpec(QueryParsing.java:348)\n\tat org.apache.solr.search.QParser.getSort(QParser.java:247)\n\tat org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:185)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:251)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2068)\n\tat org.apache.solr.client.solrj.embedded.EmbeddedSolrServer.request(EmbeddedSolrServer.java:179)\n\tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:135)\n\tat org.apache.solr.client.solrj.SolrClient.query(SolrClient.java:943)\n\tat org.apache.solr.client.solrj.SolrClient.query(SolrClient.java:958)\n\t...\n\n\n\nIf we have a space character between function arguments:\n\nsolrClient.query(new SolrQuery(\"*:*\").addSort(\"def(foo:bar, 0)\", SolrQuery.ORDER.desc));\n\n\nwe get different exception:\n\norg.apache.solr.common.SolrException: Can't determine a Sort Order (asc or desc) in sort spec 'def(foo:bar, 0) desc', pos=12\n\tat org.apache.solr.search.QueryParsing.parseSortSpec(QueryParsing.java:329)\n\tat org.apache.solr.search.QParser.getSort(QParser.java:247)\n\tat org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:185)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:251)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2068)\n\tat org.apache.solr.client.solrj.embedded.EmbeddedSolrServer.request(EmbeddedSolrServer.java:179)\n\tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:135)\n\tat org.apache.solr.client.solrj.SolrClient.query(SolrClient.java:943)\n\tat org.apache.solr.client.solrj.SolrClient.query(SolrClient.java:958)\n\t...\n\n\n\nAnyway, we have our tests failing with correctly written code that works on real server. Please, make EmbeddedSolrServer to behave the same way as the real Solr server.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-11T14:41:44+0000",
            "author": "Shawn Heisey",
            "content": "This is not considered a bug.  We see your schema as badly configured.  I am closing this issue.  The following has been the official recommendation regarding field names for quite some time:\n\nfield names should consist of alphanumeric or underscore characters only and not start with a digit. This is not currently strictly enforced, but other field names will not have first class support from all components and back compatibility is not guaranteed.\n\nFuture plans for Solr include enforcing these restrictions, which will cause Solr to fail when it tries to load your schema configuration.  See SOLR-8110. ",
            "id": "comment-15052843"
        }
    ]
}