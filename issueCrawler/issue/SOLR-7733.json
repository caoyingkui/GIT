{
    "id": "SOLR-7733",
    "title": "remove \"optimize\" from the UI.",
    "details": {
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "7.3"
        ],
        "affect_versions": "5.3,                                            6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Since optimizing indexes is kind of a special circumstance thing, what do we think about removing (or renaming) optimize-related stuff on the core admin and core overview pages? The \"optimize\" button is already gone from the core admin screen (was this intentional?).\n\nMy personal feeling is that we should remove this entirely as it's too easy to think \"Of course I want my index optimized\" and \"look, this screen says my index isn't optimized, that must mean I should optimize it\".\n\nThe core admin screen and the core overview page both have an \"optimized\" checkmark, I propose just removing it from the \"overview\" page and on the \"core admin\" page changing it to \"Segment Count #\". NOTE: the \"overview\" page already has a \"Segment Count\" entry.",
    "attachments": {
        "SOLR-7733.patch": "https://issues.apache.org/jira/secure/attachment/12742400/SOLR-7733.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-06-28T16:29:43+0000",
            "author": "Shawn Heisey",
            "content": "+1.  I also think that the red color when it's not optimized tends to reinforce the notion that the index is in a \"bad\" state that the user must correct.\n\nI still optimize my indexes on a relatively infrequent basis, and would hate to lose the ability to do that, but it doesn't belong in the admin UI.  Sometimes the performance consequences from clicking that optimize button are severe.  With a large enough SolrCloud installation, the performance impact from a seemingly innocent button click could last for hours. ",
            "id": "comment-14604762"
        },
        {
            "date": "2015-06-28T16:41:57+0000",
            "author": "Erick Erickson",
            "content": "Here's a patch. Given how novice-like I am here, it's simply patterning on other elements in the two files, no clue whether this is correct but it looks OK. ",
            "id": "comment-14604770"
        },
        {
            "date": "2015-06-28T20:05:33+0000",
            "author": "Upayavira",
            "content": "Patch looks good to me, go for it!! ",
            "id": "comment-14604872"
        },
        {
            "date": "2015-06-28T20:06:12+0000",
            "author": "Upayavira",
            "content": "If you were gonna go a little further, you could look in the controller and see if there's any logic preparing data for the view that isn't needed anymore. ",
            "id": "comment-14604873"
        },
        {
            "date": "2015-06-29T12:16:33+0000",
            "author": "Erick Erickson",
            "content": "Yeah, this just removes the admin UI checkmarks, you can still optimize via the regular APIs.\n\nAnd the segment count is in both places now, so people who know what optimize is really doing still have the information available. It's just not as tempting. I mean who wouldn't want an optimized index .\n\nIf we bring the button back, we should name it something else. Force Merge comes to mind. At least that way people might scratch their heads before pressing the button. Maybe with a confirmation box saying \"do you really want to do this? It may take a long time and is rarely necessary\"... ",
            "id": "comment-14605531"
        },
        {
            "date": "2015-06-29T13:12:49+0000",
            "author": "Yonik Seeley",
            "content": "This could just cause confusion about \"where did optimize go?\"\nThe issue seems largely one of education.   Optimize (or forceMerge) is a valid operation and one that can be called for in certain circumstances.  Users need to understand the cost, so they can make the call.\n\nI agree we should get rid of any notion/mention of \"unoptimized\" though, including the colors Shawn mentions.\n\nOne alternative to straight out removal is to educate the user right next to the button: \n\"This optional operation is very expensive and not normally necessary.  It will rewrite the entire index into a single segment\"\n\nOR if we have the index size available:\n\n\"This optional operation is very expensive and not normally necessary.  It will rewrite all NNN MB of the index into a single segment\" ",
            "id": "comment-14605589"
        },
        {
            "date": "2015-06-29T13:32:06+0000",
            "author": "Shawn Heisey",
            "content": "I like Yonik's idea.\n\nThe best idea I can think of for the button text is \"Force Merge (Optimize)\" ... but I worry that this is too long and will make the button enormous and run contrary to the notion of making it less conspicuous.  Making it just \"Force Merge\" is appealing, but in that case, the note text must mention that this is the new name for optimize.  I'm not opposed to simply keeping \"Optimize\", but I do like the idea of taking Lucene's approach and using some variant of \"forceMerge\" everywhere, including the admin UI, the update handler, and SolrJ.\n\nThe idea of including the index size is awesome.  I've been wanting a good reason to get SOLR-3990 back in the spotlight.  ",
            "id": "comment-14605608"
        },
        {
            "date": "2015-06-29T13:52:24+0000",
            "author": "Yonik Seeley",
            "content": "I've never seen the need to rename optimize to forceMerge myself - people will just google and find \"yeah, optimize was changed to forceMerge\".  The key is understanding that it's optional, and understanding the cost. ",
            "id": "comment-14605628"
        },
        {
            "date": "2015-06-29T18:59:03+0000",
            "author": "Upayavira",
            "content": "We can have the \"optimize\" button pop up a window which has a statement of the kind Yonik mentions, followed by an \"optimize\" and a \"cancel\" button. ",
            "id": "comment-14606155"
        },
        {
            "date": "2015-06-30T17:02:41+0000",
            "author": "Hoss Man",
            "content": "Linking related SOLR-3141 where there was much discussion about terminology and backcompat and educating users and sensible default behavior.\n\n(i have no comment or opinion about anything expressed in this issue so far \u2013 i have not read most details in this issue so far, i'm just linking the issues so all the relevant details are connected for folks who do have opinions and are willing to follow through on them) ",
            "id": "comment-14608661"
        },
        {
            "date": "2015-08-06T17:01:44+0000",
            "author": "Erick Erickson",
            "content": "About educating users....\n\nI'm just really tired of doing it again and again and again. I suppose putting lots of explanatory text and making it less tempting is really kind of an automated way of doing that education though...... ",
            "id": "comment-14660341"
        },
        {
            "date": "2015-08-07T05:31:02+0000",
            "author": "Aaron Greenspan",
            "content": "I would suggest keeping the button but renaming it \"Consolidate\" or \"Defragment\".\n\nWhether or not it technically is, this sounds a lot like the way people used to think about disk defragmentation on MS-DOS/Windows 3.1/9x systems. Many people had heard about it almost as a rumor and believed it would serve as a panacea for all of their deeply-rooted registry problems, when it really only needed to be done rarely, had minimal benefits for most, and took a long time.\n\nWith that context I think the best way to handle it is to keep the button in, give it a descriptive name, and provide accurate information: something like \"Expected processing time: 30h27m. Expected efficiency gain: 0.05%.\" No one will waste their time on such a tradeoff unless they have a really good reason, or unless the numbers look reasonable. ",
            "id": "comment-14661357"
        },
        {
            "date": "2015-08-07T12:50:55+0000",
            "author": "Walter Underwood",
            "content": "\"Force Merge\" made sense to the Ultraseek customers. We had the same kind of automatic segment merging.\n\nI worked on Ultraseek for ten years and force merge was never a big issue for support. We did have people doing it unnecessarily, same as \"Optimize\", but at least we didn't have to explain it. ",
            "id": "comment-14661785"
        },
        {
            "date": "2016-01-05T13:22:29+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "The current UI (both classic and Angular) still has a green \"Optimized\" checkmark, which seems to always stay green (both on overview page and on core admin page). Should we get rid of them?\n\nAlso, the Angular UI removes the \"Optimize\" button from the Core Admin page. I vote for bringing the button back, but with an educational popup\n\nAre you sure?\nThis will read and write the entire index, merging all documents into one segment, and can be very expensive\n\n\nRelated: I have many times missed a Commit button in the core admin and collections tabs. What do you think? ",
            "id": "comment-15083041"
        },
        {
            "date": "2016-01-05T20:40:37+0000",
            "author": "Shawn Heisey",
            "content": "I vote for bringing the button back, but with an educational popup\n\nSounds good to me.  If the server is in cloud mode and the button is pressed on a core, the dialog might want to mention that it will in fact optimize the entire collection.  There is no way to disable this \u2013 distrib=false is not honored.  I thought we had an issue to have optimize on SolrCloud honor distrib=false, but I can't find one.\n\nI have many times missed a Commit button in the core admin and collections tabs\n\nThat would be interesting.  Since I am reasonably sure that mechanisms are in place to ignore a commit operation when the index hasn't actually changed, this is probably a safe thing to add, and would be helpful for troubleshooting. ",
            "id": "comment-15083736"
        },
        {
            "date": "2016-03-07T22:48:40+0000",
            "author": "Tomasz Oliwa",
            "content": "The proposed renaming into \"Force Merge\" or similar sounds good. A red circle with a diagonal line through for the status \"Optimized\" looks quite inviting to click on from an user interface design point of view, without really communicating what this entails. ",
            "id": "comment-15183927"
        },
        {
            "date": "2017-10-03T19:37:45+0000",
            "author": "Erick Erickson",
            "content": "It turns out that optimize is actually worse than I thought. See the extended discussion at LUCENE-7976, but the short form is once you start optimizing, you better always optimize or live with lots of deleted docs.\n\nTieredMergePolicy has a 5G default max merged segment size. Now say you optimize into a single 100G segment. That 100G segment won't be eligible for merging until it has < 2.5G \"live\" docs.\n\nWhich makes  me favor the pop-up box with lots of warnings in it about how you better understand the consequences before using this option. ",
            "id": "comment-16190203"
        },
        {
            "date": "2017-10-06T18:04:11+0000",
            "author": "David Smiley",
            "content": "I vote for getting rid of this button altogether, though I don't object to it staying with the proposed warnings.  I've seen the optimize button in a SolrCloud sharded environment cause some failure; I forget the details. ",
            "id": "comment-16194969"
        },
        {
            "date": "2017-10-20T18:39:30+0000",
            "author": "Erick Erickson",
            "content": "I think we should couple these together as the Lucene JIRA makes it much more palatable to remove this from the UI and de-emphasize it in the reference guide.\n\nSuggestion: change the discussion in the ref guide for optimize to something like \"controlling deleted docs percentage\" (yuck, but you get the idea) 'cause that's what's really at issue here. ",
            "id": "comment-16213025"
        },
        {
            "date": "2017-10-20T18:47:53+0000",
            "author": "Yonik Seeley",
            "content": "Coupling with the Lucene JIRA would seem to only make things more confusing... and my previous points in this JIRA stand.\nedit: Actually, my opinion is shifting.  While a warning on the GUI for the rewrite-entire-index cost seemed sufficient, it's harder to succinctly explain that it will make it harder for deletes to be automatically merged away in the future.\n\nSuggestion: change the discussion in the ref guide for optimize to something like \"controlling deleted docs percentage\"\n\nNot sure I understand... that's not the only thing optimize is for.  Some operations happen much more quickly on an optimized index. ",
            "id": "comment-16213048"
        },
        {
            "date": "2017-10-23T00:48:08+0000",
            "author": "Erick Erickson",
            "content": "Here's a patch that removes the optimize info from the UI and adds some warnings to the ref guide.\n\nYonik:\n\n\"Coupling\" here means that I think de-emphasizing the optimize in the admin UI makes more sense if we do it for the same release that addresses TMP since (I hope) much of the reason to forceMerge will go away..\n\nAs far as the ref guide, I agree that optimize had other uses than controlling deletes. I'm looking for some way to convey that the most reasonable circumstance to consider optimizing is when the index is static, i.e. you can run optimize every time you build your index (ok, that's overstating the case, but you get the idea).\n\nOne problem is at present we give lots of guidance on how to optimize but very little on when it's a bad idea, or the consequences. How bad an idea will depend in part on how the Lucene issue gets resolved.\n\nIf we respect the max segment size for forceMerge and change forceMerge to consider merging max sized docs with small segments even when they have > 50% live docs then optimizing has a much smaller downside.\n\nOTOH, if the resolution is to continue to create 1 segment and rewrite segments with > X% deleted docs even if the result is > max segment size, optimize is still pretty bad thing to do unless it can be done whenever the index changes. Or at least regularly.\n\nOn the other other hand, it isn't clear to me that respecting the max segment size on forceMerge results in as efficient on index as a single large segment...\n\nI suppose that what we put in the ref guide will depend on how LUCENE-7976 eventually gets resolved. ",
            "id": "comment-16214499"
        },
        {
            "date": "2017-10-23T14:32:57+0000",
            "author": "Erick Erickson",
            "content": "Just had another realization: Before committing this, I'll change the ref guide and change all the \"optimize\" to \"forceMerge\". I really want this operation to be less tempting. ",
            "id": "comment-16215217"
        },
        {
            "date": "2017-10-23T14:57:26+0000",
            "author": "Yonik Seeley",
            "content": "Just had another realization: Before committing this, I'll change the ref guide and change all the \"optimize\" to \"forceMerge\". \n\nGeneric mentions perhaps?  The API itself should continue to be documented.\nI added warnings in the past to the old wiki about expensive rewriting of the entire index, so we should also add something about lack of natural merging away of deletes. ",
            "id": "comment-16215253"
        },
        {
            "date": "2017-10-23T15:57:24+0000",
            "author": "Cassandra Targett",
            "content": "The doc changes are mostly fine in the patch, but there are a couple places where it's said something along the lines of \"because optimize is a heavy-weight operation...\". Since we're working on improving this, can we change one of those (or add something new) to describe in what ways it is heavy-weight (i.e., it requires disk space, etc.)? Then other places could point to that one in case the reader needs more information about what they're getting into with optimize. ",
            "id": "comment-16215338"
        },
        {
            "date": "2017-10-23T16:12:43+0000",
            "author": "Erick Erickson",
            "content": "Thanks Cassandra!\n\nI'm targeting a section like that to be part of the resolution to LUCENE-7976. Once we resolve how we're going to change TieredMergePolicy, I was planning on a section about how to tune it and mentioning the considerations about why optimize is bad there.\n\nI'm also planning on changing some/all references to optimize to forceMerge to make it less attractive.\n\nWDYT? ",
            "id": "comment-16215363"
        },
        {
            "date": "2017-10-23T16:19:33+0000",
            "author": "Cassandra Targett",
            "content": "I'm targeting a section like that to be part of the resolution to LUCENE-7976\n\nThat sounds fine to me.\n\nI'm also planning on changing some/all references to optimize to forceMerge to make it less attractive.\n\nAlso fine, but if there are any cases where the parameter is actually named \"optimize\" the docs need to refer to it as that. We can't have the docs say it's called \"forceMerge\" and it's really \"optimize\". So the docs change can only occur if and when the terminology change is baked into the application and only where it's applicable if optimize is not changed globally. ",
            "id": "comment-16215378"
        },
        {
            "date": "2017-10-23T17:01:04+0000",
            "author": "Erick Erickson",
            "content": "bq: parameter is actually named \"optimize\" the docs need to refer to it as that...\n\nYeah, unfortunately I'm afraid we'll have to support \"optimize\" through 8.x, even if we deprecate it now. I was thinking that we could deprecate \"optimize\" in favor of \"forceMerge\" in which case I could change the docs to use forceMerge (but still support optimize), but I'm not sure how ambitious I'll be here. ",
            "id": "comment-16215455"
        },
        {
            "date": "2017-10-27T15:09:03+0000",
            "author": "David Smiley",
            "content": "Looking at your patch, +1 except one small mistake:\n\nTIP: Do not elect to optimize your index unless and until you have hard evidence that it will significantly improve your indexing performance.\n\nI think you mean, \"significantly improve your search performance.\"   It will hurt indexing performance  ",
            "id": "comment-16222524"
        },
        {
            "date": "2017-10-27T15:24:34+0000",
            "author": "Erick Erickson",
            "content": "Thanks David, you're absolutely correct.\n\nDepending on how LUCENE-7976 falls out this may or may not go forward. If that JIRA causes forceMerge to respect max segment sizes, then much of my angst goes away so I'm holding this up until we get that resolved. I think both of these JIRAS should be in the same release. ",
            "id": "comment-16222545"
        },
        {
            "date": "2017-10-27T15:25:38+0000",
            "author": "Erick Erickson",
            "content": "Corrected typo indexing <- search ",
            "id": "comment-16222546"
        },
        {
            "date": "2017-12-29T02:33:10+0000",
            "author": "Erick Erickson",
            "content": "Cassandra Targett Ugh. I started actually looking at all the places there's any parameter \"optimize\" and it's.... ugly. See SOLR-11803. Even using forceMerge rather than optimize on the URL is more than I want to put into this JIRA which is just about removing the temptation from the UI.\n\nActually I don't see any urgency in changing optimize to forceMerge as far as any of the parameters and the like are concerned, now that it's not so tempting and anyone looking at the docs will see warnings if they go digging. ",
            "id": "comment-16305918"
        },
        {
            "date": "2017-12-29T04:40:49+0000",
            "author": "Erick Erickson",
            "content": "Final patch with CHANGES.txt ",
            "id": "comment-16305982"
        },
        {
            "date": "2017-12-29T04:41:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8e439a0a5c37a95ae632719b8901b225462b80bf in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8e439a0 ]\n\nSOLR-7733: remove optimize from the UI. ",
            "id": "comment-16305984"
        },
        {
            "date": "2017-12-29T04:45:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e2a26a42e66351d80b170569aa1a712eed0156da in lucene-solr's branch refs/heads/branch_7x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e2a26a4 ]\n\nSOLR-7733: remove optimize from the UI. ",
            "id": "comment-16305985"
        }
    ]
}