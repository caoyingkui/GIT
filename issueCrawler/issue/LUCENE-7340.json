{
    "id": "LUCENE-7340",
    "title": "MemoryIndex.toString is broken if you enable payloads",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.4.1,                                            6.0.1,                                            7.0",
        "components": [
            "modules/highlighter"
        ],
        "labels": "",
        "fix_versions": [
            "6.2"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Noticed this as we use Luwak which creates a MemoryIndex(true, true) storing both offsets and payloads (though in reality we never put any payloads in it).\n\nWe used to use MemoryIndex.toString() for debugging and noticed it broke in Lucene 5.x  and beyond.  I think LUCENE-6155 broke it when it added support for payloads?\n\nCreating default memoryindex (as all the tests currently do) works fine, as does one with just offsets, it is just the payload version which is broken.",
    "attachments": {
        "LUCENE-7340.diff": "https://issues.apache.org/jira/secure/attachment/12811062/LUCENE-7340.diff",
        "LUCENE-7340.patch": "https://issues.apache.org/jira/secure/attachment/12814176/LUCENE-7340.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15333564",
            "author": "Daniel Collins",
            "date": "2016-06-16T10:55:12+0000",
            "content": "This patches toString() so that it works and adds some tests to verify that.\nWhat it doesn't do is actually add a field with payloads into the MI to validate the resulting format....  Still trying to work out how to do that. "
        },
        {
            "id": "comment-15333959",
            "author": "Alan Woodward",
            "date": "2016-06-16T15:03:32+0000",
            "content": "The payload query tests in the queries module should give you an idea of how to add payloads to a TokenStream for tests. "
        },
        {
            "id": "comment-15335783",
            "author": "Daniel Collins",
            "date": "2016-06-17T09:33:17+0000",
            "content": "Updated patch, this extends an existing test instead of adding new ones "
        },
        {
            "id": "comment-15335786",
            "author": "Daniel Collins",
            "date": "2016-06-17T09:34:39+0000",
            "content": "Thanks Alan, there was an existing test that did actually check the payload API, so I've put the toString() checks in that existing test "
        },
        {
            "id": "comment-15352794",
            "author": "Daniel Collins",
            "date": "2016-06-28T11:04:31+0000",
            "content": "Alan Woodward and David Smiley, any more thoughts on this? "
        },
        {
            "id": "comment-15353622",
            "author": "David Smiley",
            "date": "2016-06-28T20:03:53+0000",
            "content": "I tweaked your patch a bit, including modifying the output a little.  I think it's no value to count the number of payloads so I removed that; do you disagree?  I added a dedicated toString() test.\n\nWhat I really don't like about MemoryIndex.toString() is that it isn't generic when it so obviously could be.  Why have MemoryIndex specific logic that needs to be maintained (it broke here causing this bug) when there might be a Terms.toString() or at least a utility method on Terms (or Fields?) that a better MemoryIndex might call?  I'm filing a separate issue for that. "
        },
        {
            "id": "comment-15353689",
            "author": "Daniel Collins",
            "date": "2016-06-28T20:48:27+0000",
            "content": "The only potential issue I see with the output as it stands with your patch, is that the bracketing suggests that the payload is part of the position information (at least that's how I would interpret it), when really its something separate?  But payloads aren't an area I know well, we came upon this bug by accident, so I don't feel that strongly about it.\n\nAgreed, there is no real value in the number of payloads, I only added it as both terms and positions had counts, so it was purely for consistency with them. "
        },
        {
            "id": "comment-15354196",
            "author": "David Smiley",
            "date": "2016-06-29T01:49:06+0000",
            "content": "the bracketing suggests that the payload is part of the position information (at least that's how I would interpret it), when really its something separate?\n\nPayloads are associated with the position just as much as the offsets are, and the offsets are enclosed in parenthesis here too.\n\nI'll commit this when I next get a chance; could be a couple days (I'm on vacation). "
        },
        {
            "id": "comment-15356311",
            "author": "David Smiley",
            "date": "2016-06-30T01:43:50+0000",
            "content": "I think it's dangerous that MemoryIndex.toString() can potentially generate a massive string.  The functionality is useful but specifically overriding toString() is bad (IMO).  If LUCENE-7361 results in a utility in misc/ then this code can simply be removed resulting in a default toString() since someone can simply use the proposed utility there to get this feature.  If it results in nothing then this code can move to a new different method like toStringDebug that takes an Appendable (FYI StringBuilder & Writer implement that). "
        },
        {
            "id": "comment-15363281",
            "author": "David Smiley",
            "date": "2016-07-05T21:23:12+0000",
            "content": "Updated patch renaming toString to toStringDebug and marking with lucene.experimental.  I plan to commit this tomorrow.\n\nLUCENE-7340: MemoryIndex.toString() could throw NPE; fixed. Renamed to toStringDebug().  (Daniel Collins, David Smiley) "
        },
        {
            "id": "comment-15364456",
            "author": "ASF subversion and git services",
            "date": "2016-07-06T15:24:14+0000",
            "content": "Commit 3ca4fea5786430130f25d180440f765e96ac9c74 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3ca4fea ]\n\nLUCENE-7340: MemoryIndex.toString renamed to toStringDebug; fix NPE "
        },
        {
            "id": "comment-15364467",
            "author": "ASF subversion and git services",
            "date": "2016-07-06T15:30:16+0000",
            "content": "Commit 4a1b78af715a33d1d17aadc09b82003a3d11d157 in lucene-solr's branch refs/heads/branch_6x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4a1b78a ]\n\nLUCENE-7340: MemoryIndex.toString renamed to toStringDebug; fix NPE\n(cherry picked from commit 3ca4fea) "
        },
        {
            "id": "comment-15364471",
            "author": "David Smiley",
            "date": "2016-07-06T15:32:13+0000",
            "content": "Committed.  Thanks Dan! "
        },
        {
            "id": "comment-15439011",
            "author": "Michael McCandless",
            "date": "2016-08-26T13:59:55+0000",
            "content": "Bulk close resolved issues after 6.2.0 release. "
        }
    ]
}