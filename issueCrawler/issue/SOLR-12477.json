{
    "id": "SOLR-12477",
    "title": "Return server error(500) for AlreadyClosedException instead of client Errors(400)",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "update"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In some cases(for example: corrupt index),\u00a0addDoc0\u00a0throws\u00a0AlreadyClosedException, but solr server returns client error 400 to client\n\nThis will confuse customers and especially monitoring tool.\n\nPatch:\u00a0https://github.com/apache/lucene-solr/pull/402",
    "attachments": {
        "SOLR-12477.patch": "https://issues.apache.org/jira/secure/attachment/12933529/SOLR-12477.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-20T18:25:16+0000",
            "content": "Hi Jeffery,\n\nPatch looks good to me!\n\nPerhaps we could also assert that the exception thrown at https://github.com/apache/lucene-solr/blob/master/solr/core/src/test/org/apache/solr/cloud/LeaderTragicEventTest.java#L135\u00a0is also an AlreadyClosedException . We could use SolrException.getRootCause to check if it's AlreadyClosedException ?\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16551101"
        },
        {
            "date": "2018-07-21T00:46:45+0000",
            "content": "Thanks,\u00a0Varun Thacker\n\nMade the change as you suggested. Please check.\n\nJust one exception:\n\n-\u00a0corruptLeader may throw\u00a0RemoteSolrException when called by test method. so the test code changes accordingly. ",
            "author": "jefferyyuan",
            "id": "comment-16551474"
        },
        {
            "date": "2018-07-25T06:12:50+0000",
            "content": "-\u00a0corruptLeader may throw\u00a0RemoteSolrException when called by test method\nWhen a\u00a0RemoteSolrException is thrown the stack trace from the logs indicate that it was a commit operation on a\u00a0corrupted index\n\n10895 ERROR (qtp791778936-41) [n:127.0.0.1:54262_solr c:collection2 s:shard1 r:core_node4 x:collection2_shard1_replica_n2] o.a.s.s.HttpSolrCall null:org.apache.lucene.store.AlreadyClosedException: this IndexWriter is closed\nat org.apache.lucene.index.IndexWriter.ensureOpen(IndexWriter.java:671)\nat org.apache.lucene.index.IndexWriter.ensureOpen(IndexWriter.java:685)\nat org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:3412)\nat org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.java:678)\nat org.apache.solr.update.processor.RunUpdateProcessor.processCommit(RunUpdateProcessorFactory.java:93)\nat org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(UpdateRequestProcessor.java:68)\nat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalCommit(DistributedUpdateProcessor.java:1940)\nat org.apache.solr.update.processor.DistributedUpdateProcessor.processCommit(DistributedUpdateProcessor.java:1916)\nat org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processCommit(LogUpdateProcessorFactory.java:160)\nat org.apache.solr.handler.RequestHandlerUtils.handleCommit(RequestHandlerUtils.java:69)\nat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:62)\nat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:199)\nat org.apache.solr.core.SolrCore.execute(SolrCore.java:2541)\nat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:709)\nat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:515)\n\n\n\u00a0\n\nSo the exception is thrown from IndexWriter.java:671\u00a0\n\nRequestHandlerBase has this piece of code today\u00a0\n\nif (req.getCore() != null) {\n  req.getCore().getCoreContainer().checkTragicException(req.getCore());\n}\n\nIf checkTragicException returned a boolean when there was a tragic exception . Then we could make sure that the user always gets a server error as the code.\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16555191"
        },
        {
            "date": "2018-07-28T00:27:54+0000",
            "content": "thanks Varun Thacker\n\nChanged\u00a0CoreContainer.checkTragicException(SolrCore) to return true\u00a0when there was a tragic exception.\n\nPlease check the pr: https://github.com/apache/lucene-solr/pull/402/files\n\nThanks. ",
            "author": "jefferyyuan",
            "id": "comment-16560517"
        },
        {
            "date": "2018-07-28T02:10:14+0000",
            "content": "Hi Jeffery,\n\nI've left one comment on the PR. Otherwise patch is looking good.\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16560555"
        },
        {
            "date": "2018-07-28T04:19:31+0000",
            "content": "Thanks Varun Thacker\n\nAddressed the comments in github and changed the code as you suggested : ) ",
            "author": "jefferyyuan",
            "id": "comment-16560599"
        },
        {
            "date": "2018-07-29T22:02:50+0000",
            "content": "Thanks Jeffery!\u00a0\n\nI've attached your PR as a patch here for reference! Looks good to me.\u00a0\n\nI'll commit it later today ",
            "author": "Varun Thacker",
            "id": "comment-16561279"
        },
        {
            "date": "2018-07-30T03:12:00+0000",
            "content": "I ran into\u00a0SOLR-11606 when I ran precommit.\u00a0\n\nShould we just get rid of the\u00a0 DirectUpdateHandlerTest#testAddDocThrowAlreadyClosedException\u00a0?\n\nThe assert added to\u00a0LeaderTragicEventTest that would fail without the patch so it should be enough?\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16561383"
        },
        {
            "date": "2018-07-30T03:20:13+0000",
            "content": "Varun Thacker\n\nIt makes sense(as Mockito doesn't work with newer java) , and I have\u00a0reverted the change at\u00a0DirectUpdateHandlerTest#testAddDocThrowAlreadyClosedException.\n\nPlease check and thanks. ",
            "author": "jefferyyuan",
            "id": "comment-16561385"
        },
        {
            "date": "2018-07-31T01:12:58+0000",
            "content": "Commit 8d28bbc905a1d79503c40314f1223de787937c32 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8d28bbc ]\n\nSOLR-12477: Return server error(500) for AlreadyClosedException instead of client Errors(400) . This closes PR #402 ",
            "author": "ASF subversion and git services",
            "id": "comment-16562731"
        },
        {
            "date": "2018-07-31T01:26:23+0000",
            "content": "Commit d448921b3e6b6ef36e35fb8a1111cf6c12f75dc5 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d448921 ]\n\nSOLR-12477: Return server error(500) for AlreadyClosedException instead of client Errors(400) . This closes PR #402\n\n(cherry picked from commit 8d28bbc) ",
            "author": "ASF subversion and git services",
            "id": "comment-16562746"
        },
        {
            "date": "2018-07-31T01:27:18+0000",
            "content": "Thanks Jeffery! ",
            "author": "Varun Thacker",
            "id": "comment-16562747"
        },
        {
            "date": "2018-07-31T02:33:21+0000",
            "content": "Commit 8d28bbc905a1d79503c40314f1223de787937c32 in lucene-solr's branch refs/heads/jira/http2 from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8d28bbc ]\n\nSOLR-12477: Return server error(500) for AlreadyClosedException instead of client Errors(400) . This closes PR #402 ",
            "author": "ASF subversion and git services",
            "id": "comment-16563044"
        }
    ]
}