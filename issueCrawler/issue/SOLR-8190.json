{
    "id": "SOLR-8190",
    "title": "Implement Closeable on TupleStream",
    "details": {
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "affect_versions": "6.0",
        "status": "Resolved",
        "resolution": "Implemented",
        "priority": "Minor"
    },
    "description": "Implementing Closeable on TupleStream provides the ability to use try-with-resources (https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html) in tests and in practice. This prevents TupleStreams from being left open when there is an error in the tests.",
    "attachments": {
        "SOLR-8190.patch": "https://issues.apache.org/jira/secure/attachment/12768303/SOLR-8190.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-23T14:26:01+0000",
            "author": "Kevin Risden",
            "content": "Found that CloudSolrStream yields two NullPointerExceptions when being closed during tests for solrStreams and cloudSolrClient being null. Filed SOLR-8191 to address it. ",
            "id": "comment-14971072"
        },
        {
            "date": "2015-10-23T14:29:59+0000",
            "author": "Kevin Risden",
            "content": "Fixed stream tests to use assertEquals methods instead of assertTrue(boolean condition) since most of the conditions were for equals.  ",
            "id": "comment-14971077"
        },
        {
            "date": "2015-12-16T00:22:21+0000",
            "author": "Jason Gerlowski",
            "content": "Would be nice to get this rolling again.  To keep it up to date, I've updated the patch to apply cleanly off of trunk.\n\nTests still fail due to the NPE addressed in the (unresolved) SOLR-8091. ",
            "id": "comment-15059187"
        },
        {
            "date": "2015-12-16T14:13:08+0000",
            "author": "Kevin Risden",
            "content": "Jason Gerlowski Thanks for taking a look. I think the above JIRA should have been SOLR-8191. ",
            "id": "comment-15060019"
        },
        {
            "date": "2015-12-16T21:55:41+0000",
            "author": "Joel Bernstein",
            "content": "Gave this a quick review. I like the idea of implementing closable, but in this case close() would get called twice for each test.\n\nMaybe the better approach is to call close() in the finally block of the methods that call open().  ",
            "id": "comment-15060966"
        },
        {
            "date": "2015-12-16T23:02:32+0000",
            "author": "Kevin Risden",
            "content": "The getTuples method was added recently which is the only place that open/close is called. This is where the try w/ resources should go instead of wrapping each test. I'll update the patch with changes. This should make the patch a lot simpler. While investigating this I found that there are now two new NPE issues w/ FacetStream and StatsStream with the same type cause as in SOLR-8191.  ",
            "id": "comment-15061076"
        },
        {
            "date": "2015-12-17T02:40:58+0000",
            "author": "Jason Gerlowski",
            "content": "+1 for pushing the try-with-resources into the getTuples method.  I was considering this when I updated the patch, but I didn't want to step on any toes (especially since I'm not super familiar the code) so I just left as-is.\n\nShould really shrink the patch too, which is a nice plus. ",
            "id": "comment-15061362"
        },
        {
            "date": "2015-12-17T14:58:23+0000",
            "author": "Kevin Risden",
            "content": "So I put more thought into this last night and since TupleStream has an open method it makes try-with-resources not really applicable. In the case here, it will call close twice as implemented. try-with-resources can't be pushed into getTuples since try-with-resources doesn't work with a open method.\n\nThinking about this brought up the following thoughts:\n\n\tWhat should happen when open is called twice?\n\tWhat should happen when close is called twice?\n\tWhat should happen when close is called without open being called?\n\tAre there places in the code where open/close is called without a try/finally? Will that cause issues?\n\tAre there places in the code where TupleStream.open is called without a related close call?\n\n\n\nThere are no checks currently to see if a stream has already been opened or closed. This is what is causing the different NPE exceptions like in SOLR-8191.\n\nFor this ticket, I think just implementing Closeable on TupleStream and not changing the tests is appropriate. The above items should be addressed though. This will make the patch smaller and the tests can be improved in followup JIRAS.\n\nJoel Bernstein/Jason Gerlowski - Thoughts on the above? ",
            "id": "comment-15062152"
        },
        {
            "date": "2015-12-17T17:23:43+0000",
            "author": "Joel Bernstein",
            "content": "The /stream and /sql handler should be calling open() and close() in the majority of situations. There are also situations where the Streams themselves may open() and close() internal streams. For example the hashJoin stream may open a stream read it into a hashtable and then close the stream. \n\nBut if people want to work directly with the Streaming API, rather the sending a Streaming Expression to the /stream handler, it would be nice to add some robustness to how open and close are handled. Probably we should through exceptions in the first three cases you mention. ",
            "id": "comment-15062376"
        },
        {
            "date": "2015-12-17T21:07:23+0000",
            "author": "Jason Gerlowski",
            "content": "Yeah, I guess it doesn't make a ton of sense to push try-with-finally when it doesn't really work with {{TupleStream}}s API.\n\nI agree with you and Joel, it makes sense to catch these special cases and throw an IllegalStateException or something similar. ",
            "id": "comment-15062818"
        },
        {
            "date": "2016-01-07T18:23:16+0000",
            "author": "Kevin Risden",
            "content": "Added simple patch for just implementing Closeable on TupleStream. ",
            "id": "comment-15087816"
        },
        {
            "date": "2016-02-08T21:50:58+0000",
            "author": "Kevin Risden",
            "content": "Joel Bernstein - Can the latest simple patch be reviewed? ",
            "id": "comment-15137766"
        },
        {
            "date": "2016-02-11T17:41:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 739b81063eb9045b4686ce8ad702c61451503306 in lucene-solr's branch refs/heads/master from jbernste\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=739b810 ]\n\nSOLR-8190: Implement Closeable on TupleStream ",
            "id": "comment-15143128"
        }
    ]
}