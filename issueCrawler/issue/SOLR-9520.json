{
    "id": "SOLR-9520",
    "title": "Kerberos delegation support with CloudSolrClient",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "HSC support is available, but we need to add support to CSC.",
    "attachments": {
        "SOLR-9520.patch": "https://issues.apache.org/jira/secure/attachment/12830292/SOLR-9520.patch",
        "SOLR-9520-6x.patch": "https://issues.apache.org/jira/secure/attachment/12831321/SOLR-9520-6x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-26T12:22:31+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Attached a patch that adds support for delegation tokens for CSC. As of this patch, if a delegation token has changed, a new CSC instance must be created. Gregory Chanan, can you please review? ",
            "id": "comment-15522895"
        },
        {
            "date": "2016-09-26T14:55:14+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Had an offline discussion with Noble, and he just pointed out to me that the CSC should take in an LBHSC builder, and the LBHSC should take in the HSC builder. This will ensure that the CSC and LBHSC can remain oblivious of the delegation token, only the builders will have that information. I'm working on that change. ",
            "id": "comment-15523297"
        },
        {
            "date": "2016-10-03T04:34:11+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Updated patch that adds the capability to pass in a HSC builder during the construction of an LBHSC. This will enable the users to pass on an HSC builder with delegation tokens to create an LBHSC, which can be used within a CSC. This is also more generic than my previous patch, since any future additions to HSC builder can easily be used by CSC users, without any modification to CSC or LBHSC code.\nAlso, separated out the DelegationTokensHttpSolrClient inner class from HttpSolrClient.\n Noble Paul, Gregory Chanan, please review. ",
            "id": "comment-15541512"
        },
        {
            "date": "2016-10-03T13:44:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8e31e501384c47b88072590257d1a0345da94fa4 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8e31e50 ]\n\nSOLR-9520: Kerberos delegation support in SolrJ ",
            "id": "comment-15542453"
        },
        {
            "date": "2016-10-03T17:32:04+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Here's a patch for master. ",
            "id": "comment-15542930"
        },
        {
            "date": "2016-10-03T17:41:53+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "And the corresponding patch for 6x (to be applied on top of the previous one for 6x / current branch_6x's HEAD). ",
            "id": "comment-15542954"
        },
        {
            "date": "2016-10-03T19:02:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 50abf9571c2d641f2216a5f9a00662b1474edea3 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=50abf95 ]\n\nSOLR-9520: Kerberos delegation support in SolrJ ",
            "id": "comment-15543145"
        },
        {
            "date": "2016-10-04T08:09:24+0000",
            "author": "Alan Woodward",
            "content": "I think this may be causing test failures on master?  eg https://jenkins.thetaphi.de/job/Lucene-Solr-master-Windows/6156/ ",
            "id": "comment-15544692"
        },
        {
            "date": "2016-10-04T11:31:39+0000",
            "author": "Mikhail Khludnev",
            "content": "Can it be to CloudSolrClientBuilderTest failures \"Connection evictor\" leakage failures, since https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/17963/ ?\nHere's a side note: SolrTestCaseJ4.teardownTestCases(SolrTestCaseJ4.java:261) awaits for 30 sec, but HttpClientBuilder waits for 50 sec, although waiting might be pointless.  ",
            "id": "comment-15545117"
        },
        {
            "date": "2016-10-04T13:52:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit fb33980f24078f64cb68d9489cdd89203c432bdb in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fb33980 ]\n\nSOLR-9520: Kerberos delegation support in SolrJ ",
            "id": "comment-15545398"
        },
        {
            "date": "2016-11-09T08:38:05+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650262"
        },
        {
            "date": "2016-11-09T20:00:38+0000",
            "author": "Hrishikesh Gadre",
            "content": "Ishan Chattopadhyaya While working on SOLR-9513, I found that we have deprecated following method in HttpSolrClient,\n\npublic Builder withDelegationToken(String delegationToken) \n\nThe suggestion seems to be to use following method instead,\n\npublic Builder withKerberosDelegationToken(String delegationToken) {\n\nThis is unfortunate since the delegation token mechanism is not really tied to kerberos as such although the primary motivation is to overcome the scalability limit of KDC. Is there any chance to \"un-deprecate\" the original method ?  ",
            "id": "comment-15651891"
        },
        {
            "date": "2016-11-10T12:11:18+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Noble suggested that we rename it to include \"Kerberos\" in the method name in order to avoid confusion. Since the delegation tokens are used together with Kerberos (i.e. DelegationTokenKerberosFilter), it made sense to me at the time.\nHowever, I just reviewed the delegation token functionality and realized that it is possible to use it even without Kerberos as a standalone authentication mechanism. In that light, I agree that the method be called \"withDelegationToken\". Hrishikesh, can you please open another issue for this, for undeprecating withDelegationToken and deprecating withKerberosDelegationToken? We can take the discussion, if any is required, to that issue. Also, apologies that I didn't mark this deprecation anywhere in the description/comments for this issue. Thanks for the catch. ",
            "id": "comment-15653896"
        }
    ]
}