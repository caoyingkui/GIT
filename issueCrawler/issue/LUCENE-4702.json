{
    "id": "LUCENE-4702",
    "title": "Terms dictionary compression",
    "details": {
        "components": [],
        "fix_versions": [],
        "affect_versions": "None",
        "priority": "Trivial",
        "labels": "",
        "type": "Wish",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I've done a quick test with the block tree terms dictionary by replacing a call to IndexOutput.writeBytes to write suffix bytes with a call to LZ4.compressHC to test the peformance hit. Interestingly, search performance was very good (see comparison table below) and the tim files were 14% smaller (from 150432 bytes overall to 129516).\n\n\n                    TaskQPS baseline      StdDevQPS compressed      StdDev                Pct diff\n                  Fuzzy1      111.50      (2.0%)       78.78      (1.5%)  -29.4% ( -32% -  -26%)\n                  Fuzzy2       36.99      (2.7%)       28.59      (1.5%)  -22.7% ( -26% -  -18%)\n                 Respell      122.86      (2.1%)      103.89      (1.7%)  -15.4% ( -18% -  -11%)\n                Wildcard      100.58      (4.3%)       94.42      (3.2%)   -6.1% ( -13% -    1%)\n                 Prefix3      124.90      (5.7%)      122.67      (4.7%)   -1.8% ( -11% -    9%)\n               OrHighLow      169.87      (6.8%)      167.77      (8.0%)   -1.2% ( -15% -   14%)\n                 LowTerm     1949.85      (4.5%)     1929.02      (3.4%)   -1.1% (  -8% -    7%)\n              AndHighLow     2011.95      (3.5%)     1991.85      (3.3%)   -1.0% (  -7% -    5%)\n              OrHighHigh      155.63      (6.7%)      154.12      (7.9%)   -1.0% ( -14% -   14%)\n             AndHighHigh      341.82      (1.2%)      339.49      (1.7%)   -0.7% (  -3% -    2%)\n               OrHighMed      217.55      (6.3%)      216.16      (7.1%)   -0.6% ( -13% -   13%)\n                  IntNRQ       53.10     (10.9%)       52.90      (8.6%)   -0.4% ( -17% -   21%)\n                 MedTerm      998.11      (3.8%)      994.82      (5.6%)   -0.3% (  -9% -    9%)\n             MedSpanNear       60.50      (3.7%)       60.36      (4.8%)   -0.2% (  -8% -    8%)\n            HighSpanNear       19.74      (4.5%)       19.72      (5.1%)   -0.1% (  -9% -    9%)\n             LowSpanNear      101.93      (3.2%)      101.82      (4.4%)   -0.1% (  -7% -    7%)\n              AndHighMed      366.18      (1.7%)      366.93      (1.7%)    0.2% (  -3% -    3%)\n                PKLookup      237.28      (4.0%)      237.96      (4.2%)    0.3% (  -7% -    8%)\n               MedPhrase      173.17      (4.7%)      174.69      (4.7%)    0.9% (  -8% -   10%)\n         LowSloppyPhrase      180.91      (2.6%)      182.79      (2.7%)    1.0% (  -4% -    6%)\n               LowPhrase      374.64      (5.5%)      379.11      (5.8%)    1.2% (  -9% -   13%)\n                HighTerm      253.14      (7.9%)      256.97     (11.4%)    1.5% ( -16% -   22%)\n              HighPhrase       19.52     (10.6%)       19.83     (11.0%)    1.6% ( -18% -   25%)\n         MedSloppyPhrase      141.90      (2.6%)      144.11      (2.5%)    1.6% (  -3% -    6%)\n        HighSloppyPhrase       25.26      (4.8%)       25.97      (5.0%)    2.8% (  -6% -   13%)\n\n\n\nOnly queries which are very terms-dictionary-intensive got a performance hit (Fuzzy, Fuzzy2, Respell, Wildcard), other queries including Prefix3 behaved (surprisingly) well.\n\nDo you think of it as something worth exploring?",
    "attachments": {
        "LUCENE-4702.patch": "https://issues.apache.org/jira/secure/attachment/12565781/LUCENE-4702.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-21T13:29:25+0000",
            "content": "Here is the patch I used (very ugly, for testing only). ",
            "author": "Adrien Grand",
            "id": "comment-13558754"
        },
        {
            "date": "2013-01-21T13:43:18+0000",
            "content": "maybe for fun try varying the blocksize params (25,48) to get bigger blocks... ",
            "author": "Robert Muir",
            "id": "comment-13558767"
        },
        {
            "date": "2013-01-21T14:29:48+0000",
            "content": "Nice!  Was this the 1M wiki index? ",
            "author": "Michael McCandless",
            "id": "comment-13558793"
        },
        {
            "date": "2013-01-21T14:31:40+0000",
            "content": "Was this the 1M wiki index?\n\nYes, it was WIKI_MEDIUM_1M. ",
            "author": "Adrien Grand",
            "id": "comment-13558796"
        },
        {
            "date": "2013-01-21T15:03:33+0000",
            "content": "maybe for fun try varying the blocksize params (25,48) to get bigger blocks...\n\nIt's weird, I tried very different min/max block sizes (including (40, 78), (50, 98) and (2500,4800)) and got the same size for the .tim files (within 100 bytes). I must be missing something...  ",
            "author": "Adrien Grand",
            "id": "comment-13558816"
        },
        {
            "date": "2013-01-28T13:51:46+0000",
            "content": "maybe for fun try varying the blocksize params (25,48) to get bigger blocks...\n\nWith minBlockSize=50 (instead of 25) and maxBlockSize=98 (instead of 48), there were 126420 bytes of .tim files (16% reduction compared to Lucene trunk, 2% reduction compared to min/maxBlockSize=(25,48)) but performance was worse, especially for fuzzy queries (baseline is Lucene trunk with the default values for min/maxBlockSize):\n\n\n                    TaskQPS baseline      StdDevQPS compressed      StdDev                Pct diff\n                  Fuzzy1      100.78      (3.0%)       57.61      (2.7%)  -42.8% ( -47% -  -38%)\n                  Fuzzy2       76.72      (3.8%)       46.24      (2.9%)  -39.7% ( -44% -  -34%)\n                 Respell       93.17      (3.5%)       65.20      (2.8%)  -30.0% ( -35% -  -24%)\n                Wildcard      222.57      (2.8%)      186.22      (3.6%)  -16.3% ( -22% -  -10%)\n              AndHighLow     1731.64      (3.7%)     1605.87      (4.7%)   -7.3% ( -15% -    1%)\n                 LowTerm     1860.60      (3.1%)     1743.77      (4.1%)   -6.3% ( -13% -    0%)\n              AndHighMed      816.71      (1.8%)      785.71      (2.3%)   -3.8% (  -7% -    0%)\n                 MedTerm      923.83      (3.3%)      896.61      (3.3%)   -2.9% (  -9% -    3%)\n               MedPhrase       49.85      (7.4%)       48.72      (7.7%)   -2.3% ( -16% -   13%)\n        HighSloppyPhrase       92.85      (4.6%)       90.92      (6.2%)   -2.1% ( -12% -    9%)\n               LowPhrase      183.01      (3.1%)      179.72      (4.1%)   -1.8% (  -8% -    5%)\n             LowSpanNear      115.03      (4.6%)      113.17      (3.9%)   -1.6% (  -9% -    7%)\n                HighTerm      352.00      (3.4%)      346.67      (3.6%)   -1.5% (  -8% -    5%)\n             MedSpanNear      193.22      (4.4%)      190.46      (4.1%)   -1.4% (  -9% -    7%)\n         MedSloppyPhrase      160.66      (4.2%)      158.38      (4.6%)   -1.4% (  -9% -    7%)\n               OrHighMed      177.29      (6.4%)      174.81      (6.7%)   -1.4% ( -13% -   12%)\n            HighSpanNear       42.47      (4.4%)       41.90      (4.4%)   -1.3% (  -9% -    7%)\n         LowSloppyPhrase      203.18      (2.5%)      200.57      (3.5%)   -1.3% (  -7% -    4%)\n               OrHighLow      149.20      (7.5%)      147.33      (7.7%)   -1.3% ( -15% -   15%)\n             AndHighHigh      216.43      (1.6%)      213.73      (1.9%)   -1.2% (  -4% -    2%)\n              HighPhrase       35.43      (8.6%)       35.06      (8.4%)   -1.0% ( -16% -   17%)\n                 Prefix3      455.95      (4.2%)      451.71      (4.0%)   -0.9% (  -8% -    7%)\n              OrHighHigh      100.72      (7.8%)      100.51      (7.6%)   -0.2% ( -14% -   16%)\n                  IntNRQ       62.50      (7.7%)       62.75      (8.2%)    0.4% ( -14% -   17%)\n                PKLookup      238.55      (4.9%)      241.72      (4.3%)    1.3% (  -7% -   11%)\n\n ",
            "author": "Adrien Grand",
            "id": "comment-13564286"
        },
        {
            "date": "2013-01-29T12:02:54+0000",
            "content": "Updated patch (because of changes introduced in LUCENE-4708). ",
            "author": "Adrien Grand",
            "id": "comment-13565299"
        },
        {
            "date": "2016-05-13T12:53:11+0000",
            "content": "I've had interest in this patch again for compression of uid fields. For instance if you are using flake ids (https://github.com/boundary/flake 16 bytes: 8 bytes for the timestamp, 6 for the mac address and 2 for a counter), there is a lot of redundancy in the suffixes due to the mac address component. It is possible to help compression by moving the mac address closer to the beginning of the id (so that the prefix compression that the terms dict performs helps, and since Lucene does not need ids to be sortable) but then this makes lookups slower since we need to walk more bytes of the id before realizing it does not belong to a segment. \n\nFor instance I simulated a 100 docs/s indexing rate with 4 unique mac addresses, and the size of the terms dictionary decreased from 16.4 bytes per id to ~13 bytes per id (-20%) with the patch. Maybe we could fold it into the block tree terms dict but only enable it on unique fields and/or if the codec is configured with BEST_COMPRESSION. ",
            "author": "Adrien Grand",
            "id": "comment-15282672"
        }
    ]
}