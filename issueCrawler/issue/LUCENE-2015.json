{
    "id": "LUCENE-2015",
    "title": "ASCIIFoldingFilter: expose folding logic + small improvements to ISOLatin1AccentFilter",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This patch adds a couple of non-ascii chars to ISOLatin1AccentFilter (namely: left & right single quotation marks, en dash, em dash) which we very frequently encounter in our projects. I know that this class is now deprecated; this improvement is for legacy code that hasn't migrated yet.\n\nIt also enables easy access to the ascii folding technique use in ASCIIFoldingFilter for potential re-use in non-Lucene-related code.",
    "attachments": {
        "LUCENE-2015.patch": "https://issues.apache.org/jira/secure/attachment/12438407/LUCENE-2015.patch",
        "Filters.patch": "https://issues.apache.org/jira/secure/attachment/12423592/Filters.patch",
        "ASCIIFoldingFilter-no_formatting.patch": "https://issues.apache.org/jira/secure/attachment/12423602/ASCIIFoldingFilter-no_formatting.patch",
        "ISOLatin1AccentFilter.patch": "https://issues.apache.org/jira/secure/attachment/12423601/ISOLatin1AccentFilter.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-10-29T17:03:05+0000",
            "content": "(UTF-8 encoding) ",
            "author": "C\u00e9drik LIME",
            "id": "comment-12771479"
        },
        {
            "date": "2009-10-29T17:07:01+0000",
            "content": "C\u00e9drik, is it possible to provide a patch without the formatting changes?\n\nI am having trouble seeing the changes you made to ASCIIFoldingFilter.\n\nbtw, I think ISOLatin1AccentFilter only stays around for back compat to support old indexes, in my opinion we should not modify it for this reason. ",
            "author": "Robert Muir",
            "id": "comment-12771481"
        },
        {
            "date": "2009-10-29T17:36:17+0000",
            "content": "Robert,\n\nAll I did is refactor the big switch(c) into its own method:\n  public static final int foldToASCII(char c, char[] output, int outputPos)\nand change the caller (public void foldToASCII(char[] input, int length)) accordingly.\n\nI can submit a patch without formatting changes, but that means the source won't be nicely indented...\nPlease advise.\n\nAs for the ISOLatin1AccentFilter patch, it really is to enable us to remove a workaround for an issue we had with some special (yet frequent) chars. Feel free to ignore it should you think this part is not relevant. ",
            "author": "C\u00e9drik LIME",
            "id": "comment-12771496"
        },
        {
            "date": "2009-10-29T18:02:35+0000",
            "content": "C\u00e9drik, in my opinion, it would be easier to see the patch without the formatting changes if possible.\n\nEven if there is bad indentation currently, I think this should be corrected in a separate patch. ",
            "author": "Robert Muir",
            "id": "comment-12771524"
        },
        {
            "date": "2009-10-29T18:34:06+0000",
            "content": "Here are the patches (UTF-8 encoding), 1 per filter.\nI have removed the formatting on the switch(c) in ASCIIFoldingFilter for easier review. ",
            "author": "C\u00e9drik LIME",
            "id": "comment-12771538"
        },
        {
            "date": "2009-10-29T18:43:17+0000",
            "content": "C\u00e9drik,\n\nI think adding the idea of adding a public static method for folding is OK. but I think it should essentially do what foldToAscii does, not operate on a single 'char'.\n\nwe should avoid single 'char' as parameter arguments, instead it should work on the entire char[] I think ? ",
            "author": "Robert Muir",
            "id": "comment-12771546"
        },
        {
            "date": "2009-10-29T18:55:16+0000",
            "content": "Indeed, and that was my primary (internal) patch.\nBut then you loose the shared \"output\" buffer between incrementToken() calls, and you end up creating char[]'s like there is no tomorrow, which may be a performance regression.\n\nWhat I can do is /add/ a static method that operates on a char[], for convenient external use.\nWhat do you think? ",
            "author": "C\u00e9drik LIME",
            "id": "comment-12771557"
        },
        {
            "date": "2009-10-29T19:07:10+0000",
            "content": "C\u00e9drik, why would you create char[]'s like there is no tomorrow if you add a static method that operates on char[], for external use, but also use this within the incrementToken(), passing the tokenBuffer as an argument? ",
            "author": "Robert Muir",
            "id": "comment-12771564"
        },
        {
            "date": "2009-10-29T19:13:02+0000",
            "content": "We cannot apply the patch to ISOLatin1Filter, as it would break indexes already using it. Because of that we migrated to ASCIIFoldingFilter and kept ISOLatin1Filter alive. So we should leave it as it is.\n\nTo the buffer problem: For easy external use we could also provide a expert API that works like the current public foldToASCII method, which is memory efficient. But may also provide String/StringBuilder converters for external use. Internal it cannot be better as it currently is  ",
            "author": "Uwe Schindler",
            "id": "comment-12771568"
        },
        {
            "date": "2009-10-29T19:40:25+0000",
            "content": "Uwe,\n\nISOLatin1AccentFilter was already modified in Lucene 2.4: see LUCENE-1351\n\nAs for ASCIIFoldingFilter, I will take a second shot at an expert API next week. Stay tuned! ",
            "author": "C\u00e9drik LIME",
            "id": "comment-12771576"
        },
        {
            "date": "2009-10-29T19:49:33+0000",
            "content": "ISOLatin1AccentFilter was already modified in Lucene 2.4: see LUCENE-1351\n\nthat's interesting, so if someone has a < Lucene 2.4 index built with this filter, its currently not compatible... \nI guess no one has complained but there could be some conditional logic based on Version to support those indexes... ",
            "author": "Robert Muir",
            "id": "comment-12771578"
        },
        {
            "date": "2009-10-29T20:24:05+0000",
            "content": "I would leave ISOLatin1AccentFilter as it is. No version logic for already deprecated classes, they are deprecated, so no support any more. Normally we would have removed it in 3.0, it is really only be there to support old indexes, so no new features. If until now, nobody complained, we do not need to care. Maybe the modifications were so special, that only some of the term in such indexes were affected and nobody realized that difference. ",
            "author": "Uwe Schindler",
            "id": "comment-12771592"
        },
        {
            "date": "2009-10-29T20:27:43+0000",
            "content": "I think those changes to ISOLatin1AccentFilter predated our Version logic... I agree that had Version been around we probably should have used it. ",
            "author": "Michael McCandless",
            "id": "comment-12771593"
        },
        {
            "date": "2009-11-03T09:53:36+0000",
            "content": "As suggested by Robert, here is a new version of the ASCIIFoldingFilter patch which exposes the folding logic.\nI have added 2 convenience methods that can operate on a char[] and on a CharSequence. ",
            "author": "C\u00e9drik LIME",
            "id": "comment-12772985"
        },
        {
            "date": "2009-11-03T11:03:23+0000",
            "content": "C\u00e9drik, thanks!\n\nat a glance this looks good to me... can look at it more thoroughly later, i am heading out of town. ",
            "author": "Robert Muir",
            "id": "comment-12773014"
        },
        {
            "date": "2009-12-06T21:36:02+0000",
            "content": "For this type of stuff \"no one has complained\" doesn't mean much - thats why these changes are so insidious - they are easy not to notice - docs just disappear, and users likely don't know they ever existed. For some apps this is absolutely disastrous.\n\nWe prob should have been more careful with 1351 and more careful in the future. ",
            "author": "Mark Miller",
            "id": "comment-12786710"
        },
        {
            "date": "2010-03-10T11:53:07+0000",
            "content": "Robert, any news on this patch? Can we get it applied for Lucene 3.1? ",
            "author": "C\u00e9drik LIME",
            "id": "comment-12843539"
        },
        {
            "date": "2010-03-10T12:55:14+0000",
            "content": "C\u00e9drik: i brought the patch up to date, but modified it slightly.\n\nThe reasoning is, I would prefer if we just expose one method in this case. ",
            "author": "Robert Muir",
            "id": "comment-12843552"
        },
        {
            "date": "2010-03-10T15:19:26+0000",
            "content": "Robert: I liked the dual approach (fold 1 char / a char[]) as it offered maximum flexibility (folding a String didn't incur a systematic copy of the input as toCharArray() does, I could use charAt() in a loop).\nNevertheless, I will be happy with a single method if this is your preferred approach.\n\nI have updated your patch slightly to model the API after System.arraycopy(), which makes it a bit more flexible and easier to use:\n\n\tadded offset for output\n\tshuffled the arguments order to mimic System.arraycopy()\n\tupdated JavaDoc\n\n ",
            "author": "C\u00e9drik LIME",
            "id": "comment-12843589"
        },
        {
            "date": "2010-03-10T15:29:43+0000",
            "content": "Thanks C\u00e9drik, I like your latest change.\n\nMy primary reasoning for minimizing the API is because each exposed \nmethod has some cost to us (backwards compatibility).\n\nI think if someone wants to fold a String they can still work with this API,\ne.g. use a char[1] container, and not even bother if charAt() < 0x7F, etc.\n\nIn general I guess i am less concerned about this as the Lucene API \ndoesn't use String.\n\nI will commit in a day or two if no one objects. ",
            "author": "Robert Muir",
            "id": "comment-12843593"
        },
        {
            "date": "2010-03-12T14:35:09+0000",
            "content": "Committed revision 922277.\n\nThanks C\u00e9drik! ",
            "author": "Robert Muir",
            "id": "comment-12844519"
        }
    ]
}