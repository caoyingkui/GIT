{
    "id": "SOLR-994",
    "title": "EnumeratedEntityTransformer",
    "details": {
        "affect_versions": "1.4",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "An EnumeratedEntityTransformer gives the Nth entity an accessible ${<entity>.n} == N. In addition, the entity may specify a chunkSize attribute, which will cause the chunkSize'th entity to gain the attribute $hasMore=true. A template for a nextUrl may also be specified on the entity, that is different from the url template.\n\nConsider an API:\n\nhttp://host:port/path/to/resource?maximum_number_returned=50&return_start_index=0\n\nan entity could specify:\n\n<entity name=\"myEntity\" processor=\"XPathEntityProcessor\" transformer=\"EnumeratedEntityTransformer\" url=\"http://host:port/path/to/resource?maximum_number_returned=50&return_start_index=${myEntity.n}\" chunkSize=50>...</entity>\n\nThis allows for fetching entities in chunks until there are < chunkSize returned.",
    "attachments": {
        "SOLR-994.patch": "https://issues.apache.org/jira/secure/attachment/12398971/SOLR-994.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12668348",
            "date": "2009-01-29T04:58:08+0000",
            "content": "I guess this is already possible w/ any change.\n\n\n<entity name=\"myEntity\" processor=\"XPathEntityProcessor\" transformer=\"MyTrans\" url=\"http://host:port/path/to/resource?maximum_number_returned=50&return_start_index=${myEntity.somename}\" chunkSize=50></entity>\n\n\n\n\nThe MyTransformer can put in a variable called 'somename' into the row and one extra variable called '$hasMore' with a value \"true\" . XPathEntityprocessor automatically takes up this value 'somename' and make a request after all your current set of rows are done with. \n\none extra addition which I can think of is put an implicit variable 'rowsFetchedCount ' into the variableresolver so that it can be directly used . "
        },
        {
            "author": "Jared Flatow",
            "id": "comment-12668350",
            "date": "2009-01-29T05:16:03+0000",
            "content": "The transformer must know somehow when $hasMore should be true. If the transformer always give $hasMore a value \"true\", will there be infinite requests made or will it stop on the first empty request? Using the EnumeratedEntityTransformer, a user can specify from the config xml when $hasMore should be true using the chunkSize attribute. This solves a general case of \"request N rows at a time until no more are available\". I agree, a combination of 'rowsFetchedCount' and a HasMoreUntilEmptyTransformer would also make this doable from the configuration. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12705318",
            "date": "2009-05-02T18:59:42+0000",
            "content": "one extra addition which I can think of is put an implicit variable 'rowsFetchedCount ' into the variableresolver so that it can be directly used .\n\nWith SOLR-989 Context exposes the statistics map so rowCount is already available. Should we close this issue? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12723941",
            "date": "2009-06-25T08:19:13+0000",
            "content": "it is currently possible to add this Transformer explicitly. A more elegant solution would be to make it happen automatically w/o a Transformer. It can be a bigger initiative and i am pushing this to 1.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872503",
            "date": "2010-05-27T22:06:42+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043834",
            "date": "2011-06-03T16:47:18+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106360",
            "date": "2011-09-16T14:50:44+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234733",
            "date": "2012-03-21T18:09:04+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717188",
            "date": "2013-07-23T18:47:24+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971126",
            "date": "2014-04-16T12:57:14+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}