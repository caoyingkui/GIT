{
    "id": "LUCENE-4741",
    "title": "Weak references cause extreme GC churn",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [],
        "affect_versions": "3.6.1",
        "priority": "Critical",
        "labels": "",
        "type": "Bug",
        "resolution": "Duplicate",
        "status": "Closed"
    },
    "description": "We are running a set of independent search machines, running our custom software using lucene as a search library. We recently upgraded from lucene 3.0.3 to 3.6.1 and noticed a severe degradation of performance.\n\nAfter doing some heap dump digging, it turns out the process is stalling because it's spending so much time in GC. We noticed about 212 million WeakReference, originating from WeakIdentityMap, originating from MMapIndexInput.\n\nOur problem completely went away after removing the clones weakhashmap from MMapIndexInput, and as a side-effect, disabling support for explictly unmapping the mmapped data.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}