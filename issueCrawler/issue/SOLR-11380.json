{
    "id": "SOLR-11380",
    "title": "SolrJ must stream docs to server instead of writing to a byte[] first",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "",
    "attachments": {
        "SOLR-11380.patch": "https://issues.apache.org/jira/secure/attachment/12894732/SOLR-11380.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-09-20T15:25:35+0000",
            "content": "It just buffers all the docs in memory and upload it in one single request ",
            "author": "Noble Paul",
            "id": "comment-16173336"
        },
        {
            "date": "2017-10-31T02:46:45+0000",
            "content": "Commit 706b6c91718a1d5e4e7fd8d677798bb7ee3cb2ad in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=706b6c9 ]\n\nSOLR-11380: SolrJ must stream docs to server instead of writing to a buffer first ",
            "author": "ASF subversion and git services",
            "id": "comment-16226151"
        },
        {
            "date": "2017-10-31T03:59:53+0000",
            "content": "Noble, why does HttpSolrClient check if (contentStream[0] instanceof RequestWriter.LazyContentStream) and do the same dozen lines of code for both true & false?  This looks like something you had in-progress. ",
            "author": "David Smiley",
            "id": "comment-16226209"
        },
        {
            "date": "2017-10-31T04:08:27+0000",
            "content": "The if (contentStream[0] instanceof RequestWriter.LazyContentStream) check is done because the payload size cannot be determined ahead of time. The ContentStream interface is not suitable to generate and write content just-in-time. The new ContentWriter interface is similar to our QueryResponseWriter interface.   ",
            "author": "Noble Paul",
            "id": "comment-16226216"
        },
        {
            "date": "2017-10-31T04:16:42+0000",
            "content": "Commit 4b316ec1397431525e25f4c7ceba23c636e71209 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4b316ec ]\n\nSOLR-11380: SolrJ must stream docs to server instead of writing to a buffer first ",
            "author": "ASF subversion and git services",
            "id": "comment-16226223"
        },
        {
            "date": "2017-10-31T04:47:53+0000",
            "content": "Ok but the code is identical on both sides of the else which can't be intended? ",
            "author": "David Smiley",
            "id": "comment-16226245"
        },
        {
            "date": "2017-10-31T05:06:23+0000",
            "content": "Correct. The code is identical AND useless. \n\nThe point is even if we make it better, it is extremely difficult to do a Streaming WRITE to an InputStream . ",
            "author": "Noble Paul",
            "id": "comment-16226261"
        },
        {
            "date": "2017-10-31T06:03:21+0000",
            "content": "Commit dd56f5ca845bb06c2621188fe9a1e20bdec5e25d in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dd56f5c ]\n\nSOLR-11380: use the inNull() method to check for empty UpdateRequest ",
            "author": "ASF subversion and git services",
            "id": "comment-16226305"
        },
        {
            "date": "2017-10-31T06:04:21+0000",
            "content": "Commit cb3ed762fb418ff2af43b520cbe233cf74bccdd1 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cb3ed76 ]\n\nSOLR-11380: use the inNull() method to check for empty UpdateRequest ",
            "author": "ASF subversion and git services",
            "id": "comment-16226306"
        },
        {
            "date": "2017-10-31T14:19:35+0000",
            "content": "Sorry I'm still confused.  Is there an actual point to the \"if\" condition with code duplication?  I don't see how what you're saying explains how the code needs to be the way it is \u2013 how it can't be simplified.  I can't imagine how in any circumstance that it has a semantic difference with the simplified replacement.  If it does, man you have stumped me badly and I want to learn!  Perhaps chat with me on IRC \"dsmiley\"; I want to understand this.  If it can be replaced and tests pass / semantically equivalent, then I think we should do so.  Otherwise, it needs comments on how this code needs to be this way.\n\nBTW thanks for doing this issue \u2013 I love it when we can stream data more instead of wasteful buffering! ",
            "author": "David Smiley",
            "id": "comment-16226867"
        },
        {
            "date": "2017-10-31T16:33:09+0000",
            "content": "I don't see how what you're saying explains how the code needs to be the way it is \u2013 how it can't be simplified.\nthe code can be simplified. I just wasn't focussing on this part. I was tackling the low hanging fruit. We can open a ticket to clean up this ",
            "author": "Noble Paul",
            "id": "comment-16227067"
        },
        {
            "date": "2017-10-31T17:54:45+0000",
            "content": "IMO a separate issue isn't needed since the paint is still wet, so to speak.  Either way, please fix this duplication. ",
            "author": "David Smiley",
            "id": "comment-16227207"
        },
        {
            "date": "2017-11-01T08:55:48+0000",
            "content": "Commit 9192e7e6887f08beea3f61e2c574c1e2232b0c38 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9192e7e ]\n\nSOLR-11380: XML request writer also stream request ",
            "author": "ASF subversion and git services",
            "id": "comment-16233798"
        },
        {
            "date": "2017-11-01T08:56:43+0000",
            "content": "Commit 1b8747ec4f3dfd0c1572c8e34857a8d12a71b7b4 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1b8747e ]\n\nSOLR-11380: XML request writer also stream request ",
            "author": "ASF subversion and git services",
            "id": "comment-16233799"
        },
        {
            "date": "2017-11-02T07:10:00+0000",
            "content": "Commit 0e738a0369fe3ece62b74ae10d7fd843ce5df91a in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0e738a0 ]\n\nSOLR-11380: V2request also converted to do streaming write ",
            "author": "ASF subversion and git services",
            "id": "comment-16235299"
        },
        {
            "date": "2017-11-02T07:17:01+0000",
            "content": "Commit c4b033b7f76e63da7b7c3193ab137efdebdd8533 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c4b033b ]\n\nSOLR-11380: V2request also converted to do streaming write ",
            "author": "ASF subversion and git services",
            "id": "comment-16235305"
        },
        {
            "date": "2017-11-02T08:51:41+0000",
            "content": "Commit 3f0a012d92b2d3f4138f87ed48ca5a0e59ddb76d in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3f0a012 ]\n\nSOLR-11380: Test failure ",
            "author": "ASF subversion and git services",
            "id": "comment-16235413"
        },
        {
            "date": "2017-11-02T08:53:16+0000",
            "content": "Commit f564f9ca4b7766d1bcad18f2f18f8b64929cdef2 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f564f9c ]\n\nSOLR-11380: Test failure ",
            "author": "ASF subversion and git services",
            "id": "comment-16235416"
        },
        {
            "date": "2017-11-07T05:00:32+0000",
            "content": "Noble Paul it's confusing to me that SolrRequest now has a getContentWriter method which now seems to compete with getContentStreams. I think it will be confusing to our users too \u2013 SolrRequest is a visible part of SolrJ. Perhaps you could add some documentation to these methods to deconflict when they are used, and what the \"expectedType\" param is?\n\nBTW the CHANGES.txt entry appears in \"Other\" yet isn't \"Optimizations\" fitting? ",
            "author": "David Smiley",
            "id": "comment-16241486"
        },
        {
            "date": "2017-11-07T07:27:06+0000",
            "content": "Commit a03d6bc8c27d3d97011bc5bdc2aeb94c4820628c in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a03d6bc ]\n\nSOLR-11380: deprecated getContentStreams() ",
            "author": "ASF subversion and git services",
            "id": "comment-16241613"
        },
        {
            "date": "2017-11-07T07:47:39+0000",
            "content": "Commit b48d87cde07c94e28e3940d52cbd7491ca1427b2 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b48d87c ]\n\nSOLR-11380: deprecated getContentStreams() ",
            "author": "ASF subversion and git services",
            "id": "comment-16241638"
        },
        {
            "date": "2017-11-07T17:19:19+0000",
            "content": "Ah; much clearer!\n\n\tI suppose org.apache.solr.client.solrj.request.RequestWriter#getContentStreams should also be deprecated?\n\tDid you try to implement RequestWriter.getContentWriter in terms of a getContentStreams if the latter was provided?  It'd be great if that were possible as it would greatly simplify org.apache.solr.client.solrj.impl.HttpSolrClient#createMethod which calls both. That said, perhaps it's not easy and needs to be punted until 8.0.\n\tYou removed the getter of content streams from GenericSolrRequest but I think it should stay for this class?  There's certainly something wrong if the setter stays without the getter.\n\n ",
            "author": "David Smiley",
            "id": "comment-16242439"
        },
        {
            "date": "2017-11-07T17:40:56+0000",
            "content": "I suppose org.apache.solr.client.solrj.request.RequestWriter#getContentStreams should also be deprecated?\n+1\nYou removed the getter of content streams from GenericSolrRequest but I think it should stay for this class? There's certainly something wrong if the setter stays without the getter.\nNo , it's not removed. But, we can add setter/getter for contentWriter ",
            "author": "Noble Paul",
            "id": "comment-16242492"
        },
        {
            "date": "2017-11-14T16:07:20+0000",
            "content": "RE GenericSolrRequest: I think you may misunderstand what I'm getting at.  GSR had a getter & setter for a field.  You removed the getter from this class, letting it use a new default implementation at the SolrRequest level that returns null.  This is clearly broken; if someone uses this class, calling the setter, they expect the getter will return it!   RE your suggestion of a getter & setter for ContentWriter is good.\n\nI think you should mark every public reference to a method referencing ContentStream as deprecated in SolrJ so that by 8.0 users know not to use it anymore.  To enhance visibility in the community of this fact, perhaps file as a separate issue.\n\nBTW I looked at the viability of my 2nd bullet question on implementing RequestWriter.getContentWriter in terms of a getContentStreams but its impossible.  So that's some technical debt to be cleaned up in 8.0. ",
            "author": "David Smiley",
            "id": "comment-16251614"
        },
        {
            "date": "2017-11-14T17:24:37+0000",
            "content": "Commit 4fbc6efd5d71fbf23656a7e63107ea3315f1b1ae in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4fbc6ef ]\n\nSOLR-11380:removed GenericRequest.setContentStreams() ",
            "author": "ASF subversion and git services",
            "id": "comment-16251773"
        },
        {
            "date": "2017-11-14T17:25:36+0000",
            "content": "Commit 79283834bcbf4bd802e9ce146a441838047d4c90 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7928383 ]\n\nSOLR-11380:removed GenericRequest.setContentStreams() ",
            "author": "ASF subversion and git services",
            "id": "comment-16251775"
        },
        {
            "date": "2017-11-14T17:26:36+0000",
            "content": "RE GenericSolrRequest: I think you may misunderstand what I'm getting at. \n\nright. \n\nI think you should mark every public reference to a method referencing ContentStream as deprecated in SolrJ so that by 8.0 users know not to use it anymore. \n\nright. we should make it more obvious  ",
            "author": "Noble Paul",
            "id": "comment-16251779"
        },
        {
            "date": "2018-09-29T16:00:33+0000",
            "content": "In scope of SOLR-12798 I'd like to note that deprecating SolrRequest.getContentStreams() enforces passing parameters via url at contrast to content streams which can be put along side with params as separate parts of mulipart requests. And therefore, it may hit too long url. Beside of it, I truly support the issue summary.   ",
            "author": "Mikhail Khludnev",
            "id": "comment-16633047"
        }
    ]
}