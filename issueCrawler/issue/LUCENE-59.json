{
    "id": "LUCENE-59",
    "title": "IndexReader.unlock() won't clear commit.lock if write.lock not present",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/store"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "IndexReader.unlock() calls Directory.deleteFile() for write.lock and \ncommit.lock in succession, presumably to clear both locks.  However, if \nwrite.lock doesn't exist, FSDirectory will throw an IOException, preventing the \nsecond deletefile from getting called and potentially leaving the commit.lock.\n\n    public static void unlock(Directory directory) throws IOException {\n\tdirectory.deleteFile(\"write.lock\");\n\tdirectory.deleteFile(\"commit.lock\");\n\nAdded note:\nSince IndexReader.isLocked() only checks for the write.lock, there's no way \nprogrammatically to assure that the commit.lock is not set without breaking the \nAPI abstraction and looking for it in the Directory object by name.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2002-12-17T17:28:28+0000",
            "content": "Also IndexReader.unlock() throws an IOException if commit.lock not present.\n(Version 1.3dev1/Solaris) ",
            "author": "Nick Smith",
            "id": "comment-12321139"
        },
        {
            "date": "2003-05-02T02:55:04+0000",
            "content": "This has been fixed.  IndexReader.unlock() is no longer based on\nDirectory.deleteFile, and no longer fails when the lock file does not exist. ",
            "author": "cutting@apache.org",
            "id": "comment-12321140"
        }
    ]
}