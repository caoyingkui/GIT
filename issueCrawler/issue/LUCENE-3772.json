{
    "id": "LUCENE-3772",
    "title": "Highlighter needs the whole text in memory to work",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/highlighter"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "3.5",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Highlighter methods getBestFragment(s) and getBestTextFragments only accept a String object representing the whole text to highlight. When dealing with very large docs simultaneously, it can lead to heap consumption problems. It would be better if the API could accept a Reader objetct additionally, like Lucene Document Fields do.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-10-14T23:55:56+0000",
            "content": "I think this improvement is still important. ",
            "author": "Luis Filipe Nassif",
            "id": "comment-13475924"
        },
        {
            "date": "2012-10-15T09:04:12+0000",
            "content": "For bigger-than-memory docs is it not possible to use nested documents to represent subsections (e.g. a child doc for each of the chapters in a book) and then use BlockJoinQuery to select the best child docs?\nHighlighting can then be used on a more-manageable subset of the original content and Lucene's ranking algos are being used to select the best \"fragment\" rather than the highlighter's own attempts to reproduce this logic.\n\nObviously depends on the shape of your content/queries but books-and-chapters is probably a good fit for this approach. ",
            "author": "Mark Harwood",
            "id": "comment-13476044"
        }
    ]
}