{
    "id": "LUCENE-6165",
    "title": "Change merging APIs to work on CodecReader instead of LeafReader",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Patch factors out \"reader based on codec apis\" and changes all merge policy/addIndexes apis to use this. \n\nIf you want to do slow wrapping, you can still do it, just use SlowCodecReaderWrapper.wrap(LeafReader) yourself (versus SegmentMerger doing it always if its not a SegmentReader).\n\nAlso adds FilterCodecReader, to make it easier to start efficiently filtering on merge. I cutover all the index splitters to this. This means they should be much much faster with this patch, they just change the deletes as you expect, and the merge is as optimal as a normal one.\n\nIn other places, for now I think we should just do a rote conversion with SlowCodecReaderWrapper.wrap. Its no slower than today, just explicit, and we can incrementally fix them to do the right thing in the future rather than all at once.",
    "attachments": {
        "LUCENE-6165.patch": "https://issues.apache.org/jira/secure/attachment/12690519/LUCENE-6165.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14267416",
            "author": "Robert Muir",
            "date": "2015-01-07T08:41:47+0000",
            "content": "patch. all tests pass. "
        },
        {
            "id": "comment-14267447",
            "author": "Adrien Grand",
            "date": "2015-01-07T09:16:58+0000",
            "content": "+1 I like the patch "
        },
        {
            "id": "comment-14267449",
            "author": "Michael McCandless",
            "date": "2015-01-07T09:19:13+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14269174",
            "author": "Uwe Schindler",
            "date": "2015-01-08T10:41:41+0000",
            "content": "Hi, I think this is a clean approach. People can still reuse their old & slow code with conventional filterReaders, but people who take care of speed can use CodecReader.\n\nI just wonder why - in contrast to SlowCompositeReaderWrapper - the SlowCodecReaderWrapper extends Object and does not implement CodecReader directly. Instead the impl is anonymous subclass in wrap(). I think we should make the wrapper itsself implement CodecReader, but still with private ctor. This would also prevent the synthetic access$XX methods to work around the private methods. In addition this would allow to check if a CodecReader is slow via instanceof. "
        },
        {
            "id": "comment-14269329",
            "author": "Robert Muir",
            "date": "2015-01-08T14:05:58+0000",
            "content": "\n just wonder why - in contrast to SlowCompositeReaderWrapper - the SlowCodecReaderWrapper extends Object and does not implement CodecReader directly. Instead the impl is anonymous subclass in wrap(). I think we should make the wrapper itsself implement CodecReader, but still with private ctor. This would also prevent the synthetic access$XX methods to work around the private methods. In addition this would allow to check if a CodecReader is slow via instanceof.\n\nBecause it is not here to stay. We need to remove it, but I cannot do this shit all in one patch. I don't think we need to put such investments into the slow wrapper for that reason. "
        },
        {
            "id": "comment-14269330",
            "author": "Robert Muir",
            "date": "2015-01-08T14:06:45+0000",
            "content": "It also has no state (unlike slowwrapper). No need for overengineering here. "
        },
        {
            "id": "comment-14269336",
            "author": "Robert Muir",
            "date": "2015-01-08T14:12:27+0000",
            "content": "I'm committing this as-is. Uwe if you want to refactor that reader, i have no problem with it.\n\nThe current code is simply moved out of SegmentMerger and is the safe approach. "
        },
        {
            "id": "comment-14269342",
            "author": "Uwe Schindler",
            "date": "2015-01-08T14:17:19+0000",
            "content": "No problem i will refactor this with a small patch afterwards. I have to fix Jenkins first, I broke it today.... arg  "
        },
        {
            "id": "comment-14269398",
            "author": "ASF subversion and git services",
            "date": "2015-01-08T14:53:05+0000",
            "content": "Commit 1650301 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1650301 ]\n\nLUCENE-6165: Change merging APIs from LeafReader to CodecReader "
        },
        {
            "id": "comment-14269425",
            "author": "ASF subversion and git services",
            "date": "2015-01-08T15:21:18+0000",
            "content": "Commit 1650308 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1650308 ]\n\nLUCENE-6165: Change merging APIs from LeafReader to CodecReader "
        },
        {
            "id": "comment-14332668",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:01:14+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}