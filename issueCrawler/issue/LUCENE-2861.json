{
    "id": "LUCENE-2861",
    "title": "Search doesn't return document via query",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.9.1,                                            2.9.4,                                            3.0.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The query doesn't return document that contain all words from query in correct order.\n\nThe issue might be within mechanism how do SpanQuerys actually match results (http://www.lucidimagination.com/blog/2009/07/18/the-spanquery/)\n\nPlease refer for details below. The example text wasn't passed through snowball analyzer, however the issue exists after analyzing too\n\nQuery:\n(intend within 3 of message) within 5 of message within 3 of addressed.  \n\nText within document:\nThe contents of this e-mail message and\nany attachments are intended solely for the\naddressee(s) and may contain confidential\nand/or legally privileged information. If you\nare not the intended recipient of this message\nor if this message has been addressed to you\nin error, please immediately alert the sender\n by reply e-mail and then delete this message\nand any attachments\n\nResult query:\n\n        SpanNearQuery spanNear = new SpanNearQuery(new SpanQuery[] \n{\n                new SpanTermQuery(new Term(BODY, \"intended\")),\n                new SpanTermQuery(new Term(BODY, \"message\"))}\n,\n                4,\n                false);\n        SpanNearQuery spanNear2 = new SpanNearQuery(new SpanQuery[] \n{spanNear, new SpanTermQuery(new Term(BODY, \"message\"))}\n, 5, false);\n        SpanNearQuery spanNear3 = new SpanNearQuery(new SpanQuery[] \n{spanNear2, new SpanTermQuery(new Term(BODY, \"addressed\"))}\n, 3, false);",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-05T09:40:36+0000",
            "content": "The problem is caused by overlapping matches within spanNear2. The first match for spanNear2 matches \"intended message\" and the second \"message\" to the same \"message\" in the text so that the match for \"addressed\" ist to far away. One possible fix would forbid overlapping matches or add aspecial very compley treatment like in SloppyPhraseScore. I think it would be better to give up lazy backtracking and implement a correct backtracking (see LUCENE-7398). ",
            "author": "Christoph Goller",
            "id": "comment-15464613"
        }
    ]
}