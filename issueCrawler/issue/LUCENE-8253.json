{
    "id": "LUCENE-8253",
    "title": "ForceMergeDeletes does not merge soft-deleted segments",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "7.4,                                            master (8.0)",
        "status": "Resolved",
        "type": "Bug",
        "components": [],
        "fix_versions": []
    },
    "description": "IndexWriter#forceMergeDeletes should merge segments having soft-deleted documents as hard-deleted documents if we configured \"softDeletesField\" in an IndexWriterConfig.\n\nAttached is a failed test.",
    "attachments": {
        "LUCENE-8253.patch": "https://issues.apache.org/jira/secure/attachment/12919180/LUCENE-8253.patch",
        "test-merge.patch": "https://issues.apache.org/jira/secure/attachment/12919122/test-merge.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16438823",
            "date": "2018-04-15T19:58:35+0000",
            "content": "FYI Simon Willnauer ",
            "author": "Nhat Nguyen"
        },
        {
            "id": "comment-16439135",
            "date": "2018-04-16T08:47:30+0000",
            "content": "thanks Nhat Nguyen good catch! I have attached a patch. Michael McCandless can you take a look. I also optimized a couple of things along the way that were necessary due to test changes. Here is my commit message:\n\n\n\n LUCENE-8253: Account for soft-deletes before they are flushed to disk\n    \n    Inside the IndexWriter buffers are only written to disk if it's needed\n    or \"worth it\" which doesn't guarantee soft deletes to be accounted\n    in time. This is not necessarily a problem since they are eventually\n    collected and segments that have soft-deletes will me merged eventually\n    but for tests and on par behavior compared to hard deletes this behavior\n    is tricky.\n    This change cuts over to accouting in-place just like hard-deletes. This\n    results in accurate delete numbers for soft deltes at any give point in time\n    once the reader is loaded or a pending soft delte occurs.\n    \n    This change also fixes an issue where all updates to a DV field are allowed\n    event if the field is unknown. Now this only works if the field is equal\n    to the soft deletes field. This behavior was never released.\n\n ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16439141",
            "date": "2018-04-16T08:51:29+0000",
            "content": "here is a review link\u00a0https://github.com/s1monw/lucene-solr/pull/11/ ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16439279",
            "date": "2018-04-16T10:50:52+0000",
            "content": "+1, I left some small comments on GH. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16439495",
            "date": "2018-04-16T14:17:32+0000",
            "content": "Commit c70cceaee56cecf35875cd2b5c8d5700f2b3cedb in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c70ccea ]\n\nLUCENE-8253: Account for soft-deletes before they are flushed to disk\n\nInside the IndexWriter buffers are only written to disk if it's needed\nor \"worth it\" which doesn't guarantee soft deletes to be accounted\nin time. This is not necessarily a problem since they are eventually\ncollected and segments that have soft-deletes will me merged eventually\nbut for tests and on par behavior compared to hard deletes this behavior\nis tricky.\nThis change cuts over to accounting in-place just like hard-deletes. This\nresults in accurate delete numbers for soft deletes at any give point in time\nonce the reader is loaded or a pending soft delete occurs.\n\nThis change also fixes an issue where all updates to a DV field are allowed\nevent if the field is unknown. Now this only works if the field is equal\nto the soft deletes field. This behavior was never released. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16439517",
            "date": "2018-04-16T14:35:32+0000",
            "content": "Commit aeac55a602980c92ffee25602c6450e40eab6e6f in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=aeac55a ]\n\nLUCENE-8253: Account for soft-deletes before they are flushed to disk\n\nInside the IndexWriter buffers are only written to disk if it's needed\nor \"worth it\" which doesn't guarantee soft deletes to be accounted\nin time. This is not necessarily a problem since they are eventually\ncollected and segments that have soft-deletes will me merged eventually\nbut for tests and on par behavior compared to hard deletes this behavior\nis tricky.\nThis change cuts over to accounting in-place just like hard-deletes. This\nresults in accurate delete numbers for soft deletes at any give point in time\nonce the reader is loaded or a pending soft delete occurs.\n\nThis change also fixes an issue where all updates to a DV field are allowed\nevent if the field is unknown. Now this only works if the field is equal\nto the soft deletes field. This behavior was never released. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16439570",
            "date": "2018-04-16T15:17:14+0000",
            "content": "Simon:\n\nI'm deep in the guts of TieredMergePolicy for LUCENE-7976 so wanted to check something. I took a very quick scan through the patch and it doesn't look like this affects TieredMergePolicy at all. do you agree? All the work in TMP is just around creating a list of segments to merge and returning them to the serious merging code... ",
            "author": "Erick Erickson"
        },
        {
            "id": "comment-16439579",
            "date": "2018-04-16T15:24:45+0000",
            "content": "Erick Erickson I agree this doesn't affect your work. ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16440073",
            "date": "2018-04-16T21:49:48+0000",
            "content": "git bisect blames commit c70ccea on this issue for reproducing Solr SegmentsInfoRequestHandlerTest failures, e.g. from https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/21840/:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=SegmentsInfoRequestHandlerTest -Dtests.method=testSegmentInfosData -Dtests.seed=D8FA27F4CB25E126 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=it -Dtests.timezone=Europe/Kaliningrad -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.00s J2 | SegmentsInfoRequestHandlerTest.testSegmentInfosData <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([D8FA27F4CB25E126:A45305AF7DCD56B9]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter$ReaderPool.noDups(IndexWriter.java:867)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter$ReaderPool.get(IndexWriter.java:857)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.numDeletesToMerge(IndexWriter.java:5233)\n   [junit4]    > \tat org.apache.lucene.index.LogMergePolicy.sizeDocs(LogMergePolicy.java:153)\n   [junit4]    > \tat org.apache.lucene.index.LogDocMergePolicy.size(LogDocMergePolicy.java:44)\n   [junit4]    > \tat org.apache.lucene.index.LogMergePolicy.findMerges(LogMergePolicy.java:469)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.getMergeCandidatesNames(SegmentsInfoRequestHandler.java:100)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.getSegmentsInfo(SegmentsInfoRequestHandler.java:59)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.handleRequestBody(SegmentsInfoRequestHandler.java:48)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:199)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2508)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:337)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:319)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:890)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandlerTest.testSegmentInfosData(SegmentsInfoRequestHandlerTest.java:75)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=SegmentsInfoRequestHandlerTest -Dtests.method=testSegmentInfos -Dtests.seed=D8FA27F4CB25E126 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=it -Dtests.timezone=Europe/Kaliningrad -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.00s J2 | SegmentsInfoRequestHandlerTest.testSegmentInfos <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([D8FA27F4CB25E126:94ADB04B01293976]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter$ReaderPool.noDups(IndexWriter.java:867)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter$ReaderPool.get(IndexWriter.java:857)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.numDeletesToMerge(IndexWriter.java:5233)\n   [junit4]    > \tat org.apache.lucene.index.LogMergePolicy.sizeDocs(LogMergePolicy.java:153)\n   [junit4]    > \tat org.apache.lucene.index.LogDocMergePolicy.size(LogDocMergePolicy.java:44)\n   [junit4]    > \tat org.apache.lucene.index.LogMergePolicy.findMerges(LogMergePolicy.java:469)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.getMergeCandidatesNames(SegmentsInfoRequestHandler.java:100)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.getSegmentsInfo(SegmentsInfoRequestHandler.java:59)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.handleRequestBody(SegmentsInfoRequestHandler.java:48)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:199)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2508)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:337)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:319)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:890)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandlerTest.testSegmentInfos(SegmentsInfoRequestHandlerTest.java:61)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=SegmentsInfoRequestHandlerTest -Dtests.method=testSegmentInfosVersion -Dtests.seed=D8FA27F4CB25E126 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=it -Dtests.timezone=Europe/Kaliningrad -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.00s J2 | SegmentsInfoRequestHandlerTest.testSegmentInfosVersion <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([D8FA27F4CB25E126:2024B21CB3493075]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter$ReaderPool.noDups(IndexWriter.java:867)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter$ReaderPool.get(IndexWriter.java:857)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.numDeletesToMerge(IndexWriter.java:5233)\n   [junit4]    > \tat org.apache.lucene.index.LogMergePolicy.sizeDocs(LogMergePolicy.java:153)\n   [junit4]    > \tat org.apache.lucene.index.LogDocMergePolicy.size(LogDocMergePolicy.java:44)\n   [junit4]    > \tat org.apache.lucene.index.LogMergePolicy.findMerges(LogMergePolicy.java:469)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.getMergeCandidatesNames(SegmentsInfoRequestHandler.java:100)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.getSegmentsInfo(SegmentsInfoRequestHandler.java:59)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandler.handleRequestBody(SegmentsInfoRequestHandler.java:48)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:199)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2508)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:337)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:319)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:890)\n   [junit4]    > \tat org.apache.solr.handler.admin.SegmentsInfoRequestHandlerTest.testSegmentInfosVersion(SegmentsInfoRequestHandlerTest.java:68)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n[...]\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {name=PostingsFormat(name=Memory), id=PostingsFormat(name=Memory)}, docValues:{}, maxPointsInLeafNode=375, maxMBSortInHeap=6.1720643265572495, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@50ce333a), locale=it, timezone=Europe/Kaliningrad\n   [junit4]   2> NOTE: Linux 4.13.0-37-generic amd64/Oracle Corporation 9.0.4 (64-bit)/cpus=8,threads=1,free=136326496,total=536870912\n\n\n\nIndexWriter.ReaderPool.noDups() is:\n\n\n862:    // Make sure that every segment appears only once in the\n863:    // pool:\n864:    private boolean noDups() {\n865:      Set<String> seen = new HashSet<>();\n866:      for(SegmentCommitInfo info : readerMap.keySet()) {\n867:        assert !seen.contains(info.info.name);\n868:        seen.add(info.info.name);\n869:      }\n870:      return true;\n871:    }\n872:  }\n\n ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-16440745",
            "date": "2018-04-17T10:59:43+0000",
            "content": "Commit 94adf9d2ff42cc4133354f7ab09ed32c496250b9 in lucene-solr's branch refs/heads/branch_7x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=94adf9d ]\n\nLUCENE-8253: Mute test while a fix is worked on ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16440746",
            "date": "2018-04-17T10:59:45+0000",
            "content": "Commit f7f12a51f313bf406f0fa3d48e74864268338c6d in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f7f12a5 ]\n\nLUCENE-8253: Mute test while a fix is worked on ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16440943",
            "date": "2018-04-17T14:47:32+0000",
            "content": "Commit d904112428184ce9c1726313add5d184f4014a72 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d904112 ]\n\nLUCENE-8253: Don't create ReadersAndUpdates for foreign segments\n\nIndexWriter#numDeletesToMerge was creating a ReadersAndUpdates\nfor all incoming SegmentCommitInfo even if that info wasn't private\nto the IndexWriter. This is an illegal use of this API but since it's\ntransitively public via MergePolicy#findMerges we have to be conservative\nwith regestiering ReadersAndUpdates. In IndexWriter#numDeletesToMerge we\ncan only use existing ones. This means for soft-deletes we need to react\nearlier in order to produce accurate numbers.\n\nThis change partially rolls back the changes in LUCENE-8253. Instead of\nregistering the readers once they are pulled via IndexWriter#numDeletesToMerge\nwe now check if segments are fully deleted on flush which is very unlikely and\ncan be done in a lazy fashion ie. it's only paying the extra cost of opening a\nreader and checking all soft-deletes if soft deletes are used and present\nin the flushed segment.\n\nThis has the side-effect that flushed segments that are 100% hard deleted are also\ncleaned up right after they are flushed, previously these segments were sticking\naround for a while until they got picked for a merge or received another delete.\n\nThis also closes LUCENE-8256 ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16440944",
            "date": "2018-04-17T14:47:34+0000",
            "content": "Commit d904112428184ce9c1726313add5d184f4014a72 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d904112 ]\n\nLUCENE-8253: Don't create ReadersAndUpdates for foreign segments\n\nIndexWriter#numDeletesToMerge was creating a ReadersAndUpdates\nfor all incoming SegmentCommitInfo even if that info wasn't private\nto the IndexWriter. This is an illegal use of this API but since it's\ntransitively public via MergePolicy#findMerges we have to be conservative\nwith regestiering ReadersAndUpdates. In IndexWriter#numDeletesToMerge we\ncan only use existing ones. This means for soft-deletes we need to react\nearlier in order to produce accurate numbers.\n\nThis change partially rolls back the changes in LUCENE-8253. Instead of\nregistering the readers once they are pulled via IndexWriter#numDeletesToMerge\nwe now check if segments are fully deleted on flush which is very unlikely and\ncan be done in a lazy fashion ie. it's only paying the extra cost of opening a\nreader and checking all soft-deletes if soft deletes are used and present\nin the flushed segment.\n\nThis has the side-effect that flushed segments that are 100% hard deleted are also\ncleaned up right after they are flushed, previously these segments were sticking\naround for a while until they got picked for a merge or received another delete.\n\nThis also closes LUCENE-8256 ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16440951",
            "date": "2018-04-17T14:50:14+0000",
            "content": "Steve Rowe I fixed the issue and reenabled the test. sorry for the noise ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16440954",
            "date": "2018-04-17T14:51:55+0000",
            "content": "Thanks Simon Willnauer! ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-16440956",
            "date": "2018-04-17T14:53:30+0000",
            "content": "Commit 330fd18f200dae0892b3aa0882668435730c4319 in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=330fd18 ]\n\nLUCENE-8253: Don't create ReadersAndUpdates for foreign segments\n\nIndexWriter#numDeletesToMerge was creating a ReadersAndUpdates\nfor all incoming SegmentCommitInfo even if that info wasn't private\nto the IndexWriter. This is an illegal use of this API but since it's\ntransitively public via MergePolicy#findMerges we have to be conservative\nwith regestiering ReadersAndUpdates. In IndexWriter#numDeletesToMerge we\ncan only use existing ones. This means for soft-deletes we need to react\nearlier in order to produce accurate numbers.\n\nThis change partially rolls back the changes in LUCENE-8253. Instead of\nregistering the readers once they are pulled via IndexWriter#numDeletesToMerge\nwe now check if segments are fully deleted on flush which is very unlikely and\ncan be done in a lazy fashion ie. it's only paying the extra cost of opening a\nreader and checking all soft-deletes if soft deletes are used and present\nin the flushed segment.\n\nThis has the side-effect that flushed segments that are 100% hard deleted are also\ncleaned up right after they are flushed, previously these segments were sticking\naround for a while until they got picked for a merge or received another delete.\n\nThis also closes LUCENE-8256 ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16440957",
            "date": "2018-04-17T14:53:32+0000",
            "content": "Commit 330fd18f200dae0892b3aa0882668435730c4319 in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=330fd18 ]\n\nLUCENE-8253: Don't create ReadersAndUpdates for foreign segments\n\nIndexWriter#numDeletesToMerge was creating a ReadersAndUpdates\nfor all incoming SegmentCommitInfo even if that info wasn't private\nto the IndexWriter. This is an illegal use of this API but since it's\ntransitively public via MergePolicy#findMerges we have to be conservative\nwith regestiering ReadersAndUpdates. In IndexWriter#numDeletesToMerge we\ncan only use existing ones. This means for soft-deletes we need to react\nearlier in order to produce accurate numbers.\n\nThis change partially rolls back the changes in LUCENE-8253. Instead of\nregistering the readers once they are pulled via IndexWriter#numDeletesToMerge\nwe now check if segments are fully deleted on flush which is very unlikely and\ncan be done in a lazy fashion ie. it's only paying the extra cost of opening a\nreader and checking all soft-deletes if soft deletes are used and present\nin the flushed segment.\n\nThis has the side-effect that flushed segments that are 100% hard deleted are also\ncleaned up right after they are flushed, previously these segments were sticking\naround for a while until they got picked for a merge or received another delete.\n\nThis also closes LUCENE-8256 ",
            "author": "ASF subversion and git services"
        }
    ]
}