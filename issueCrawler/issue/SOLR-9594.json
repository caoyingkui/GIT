{
    "id": "SOLR-9594",
    "title": "Query requests to one shard collections can switch to two-phase distributed search if they hit a node in recovery",
    "details": {
        "components": [
            "search",
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.7",
            "7.0"
        ],
        "affect_versions": "4.10.4,                                            5.5.3,                                            6.2.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "All search requests in SolrCloud are distributed two-phase requests by default but Solr short-circuits it to the local replica/core if the collection has numShards=1 and the local replica/core is active.\n\nBut if the request happens to land on a replica which isn't active, the short-circuiting doesn't happen and the local replica/core which isn't active becomes the aggregator for a proper two-phase distributed request. If the search components involved in the request do not support distributed search then you can have weird results in such cases. This behavior is very surprising because most of the times queries are short circuited and behave as if they were non-distrib queries.\n\nWe could either:\n\n\tForward the request to some other node entirely or\n\tMake a call with distrib=false to another node",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-13T16:45:03+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Moving to 6.5, since 6.4 has already been released. ",
            "id": "comment-15907808"
        }
    ]
}