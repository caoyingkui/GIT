{
    "id": "SOLR-10307",
    "title": "Provide SSL/TLS keystore password a more secure way",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "security"
        ],
        "type": "Improvement",
        "fix_versions": [
            "6.7",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Currently the only way to pass server and client side SSL keytstore and truststore passwords is to set specific environment variables that will be passed as system properties, through command line parameter.\n\nFirst option is to pass passwords through environment variables which gives a better level of protection. Second option would be to use hadoop credential provider interface to access credential store.",
    "attachments": {
        "SOLR-10307.patch": "https://issues.apache.org/jira/secure/attachment/12863077/SOLR-10307.patch",
        "SOLR-10307.2.patch": "https://issues.apache.org/jira/secure/attachment/12873839/SOLR-10307.2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-12T16:10:32+0000",
            "content": "Uploading first patch. I went with the environment variable.\n\n\tRemoved password sysprops from start scripts\n\tAdded env variable usage to jetty-ssl.xml\n\tCreated a Configurations object to handle javax.net.ssl.* passwords\n\n\n\nThe change was tested on both linux and windows. ",
            "author": "Mano Kovacs",
            "id": "comment-15966133"
        },
        {
            "date": "2017-04-13T12:44:21+0000",
            "content": "LGTM ",
            "author": "Peter Szantai-Kis",
            "id": "comment-15967532"
        },
        {
            "date": "2017-04-14T05:06:48+0000",
            "content": "This is great Mano Kovacs, looks good.\n\nOnly suggestion I have is that it might be nice to add a sentence comment to Configurations init and setupSSLStorePasswords so that you can quickly tell what these methods do and how they should be called.\nMight use something less generic than Configurations as well, even if it's EnvVarConfigurations or something. ",
            "author": "Mark Miller",
            "id": "comment-15968614"
        },
        {
            "date": "2017-04-18T11:35:32+0000",
            "content": "Thank you for the review, Mark Miller. Uploading second patch.\n\nOnly suggestion I have is that it might be nice to add a sentence comment to Configurations init and setupSSLStorePasswords so that you can quickly tell what these methods do and how they should be called.\n\nI added brief documentation for init and setupSSLStorePasswords. \n\nMight use something less generic than Configurations as well, even if it's EnvVarConfigurations or something.\n\nI was planning to add further configuration options to this class later (probably something with Hadoop Credential Provider Interface), which would suggest a more generic name. If you agree, I would use a more generic name. ",
            "author": "Mano Kovacs",
            "id": "comment-15972524"
        },
        {
            "date": "2017-04-18T11:45:58+0000",
            "content": "There is a non-backward compatible change in the patch. If solr is not started through the batch files (solr.sh or solr.bat), but rather by running the start.jar directly with -Dsolr.jetty.truststore.password, Jetty will not pick up the keystore and truststore passwords. The patch changes jetty-ssl.xml so that is not using the system properties anymore. I did not find a way to use both there. Should this go to the upgrade notes? ",
            "author": "Mano Kovacs",
            "id": "comment-15972531"
        },
        {
            "date": "2017-04-18T15:04:52+0000",
            "content": "which would suggest a more generic name. \n\nYour call, just suggestions. My feedback would be, Configuration is very generic and very similar to generic names for config objects we have elsewhere. A lot of times when you make a util class like this, it just sucks up all kinds of random stuff. Personally, if its a config around pulling things from env variables, I'd name towards that, and if it's a config class that can just absorb anything, might become a kitchen sink class. But you have the ideas about what might end up there and are doing the work so your call end of the day. ",
            "author": "Mark Miller",
            "id": "comment-15972870"
        },
        {
            "date": "2017-04-24T09:28:07+0000",
            "content": "Uploading patch #3. \n\nMark Miller, I get your point, it is in fact too generic name. I renamed Configurations (and related factory and test) to SSLConfigurations. This way it can be used if the SSL credentials are taken from different source. ",
            "author": "Mano Kovacs",
            "id": "comment-15980925"
        },
        {
            "date": "2017-05-02T13:37:23+0000",
            "content": "Mark Miller, any comment on the latest patch? ",
            "author": "Mano Kovacs",
            "id": "comment-15992905"
        },
        {
            "date": "2017-05-02T14:10:05+0000",
            "content": "Looks okay to me. If there are no objections I'll commit this shortly after I verify the tests. ",
            "author": "Mark Miller",
            "id": "comment-15992968"
        },
        {
            "date": "2017-05-02T17:34:33+0000",
            "content": "I've only skimmed the patch but I don't see how this works e.g. we use SSLConnectionSocketFactory.getSystemSocketFactory() to build http clients for inter-solr requests and it uses system properties only for the keystore/truststore passwords as per http://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html#CustomizingStores\n\nWhat am I missing? ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15993360"
        },
        {
            "date": "2017-05-03T08:41:51+0000",
            "content": "Thank you for your feedback, Shalin Shekhar Mangar. You are absolutely correct, SSLConnectionSocketFactory uses sysprops only. The patch is a bridge between envvar->sysprop, so the passwords will not show up in the command. ",
            "author": "Mano Kovacs",
            "id": "comment-15994478"
        },
        {
            "date": "2017-05-03T12:15:11+0000",
            "content": "Ah ok, I see the disconnect. I didn't register on the first read that SSLConfigurations.init() puts the relevant environment variables into system properties for other classes to use. Thanks Mano.\n\n+1 to commit. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15994742"
        },
        {
            "date": "2017-05-12T14:09:15+0000",
            "content": "Mark Miller, is there anything I can help to get this jira resolved? ",
            "author": "Mano Kovacs",
            "id": "comment-16008186"
        },
        {
            "date": "2017-05-12T17:23:43+0000",
            "content": "I have it ready locally but am on vacation and prefer to commit after as I won't pay attention to any Jenkins issues if I'm lucky.  ",
            "author": "Mark Miller",
            "id": "comment-16008423"
        },
        {
            "date": "2017-05-16T16:54:50+0000",
            "content": "This looks good Mano Kovacs. Only issue I see is that precommit is complaining about some missing javadoc in configuration package, but I'll address that. ",
            "author": "Mark Miller",
            "id": "comment-16012718"
        },
        {
            "date": "2017-05-16T17:19:30+0000",
            "content": "Commit 0fb89f17e1312523a768163db88730b5a0c9191c in lucene-solr's branch refs/heads/master from Mark Miller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0fb89f1 ]\n\nSOLR-10307: Allow Passing SSL passwords through environment variables. ",
            "author": "ASF subversion and git services",
            "id": "comment-16012758"
        },
        {
            "date": "2017-05-16T17:41:34+0000",
            "content": "Commit 3ac88d65768fa5d3780caa12bcba8c83fef623ac in lucene-solr's branch refs/heads/branch_6x from Mark Miller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3ac88d6 ]\n\nSOLR-10307: Allow Passing SSL passwords through environment variables. ",
            "author": "ASF subversion and git services",
            "id": "comment-16012793"
        },
        {
            "date": "2017-05-16T17:42:41+0000",
            "content": "Hopefully thats it - thanks Mano Kovacs! ",
            "author": "Mark Miller",
            "id": "comment-16012796"
        },
        {
            "date": "2017-05-17T15:56:49+0000",
            "content": "Thanks, Mark Miller.\nI see you backported to 6x too. I mentioned above:\nThere is a non-backward compatible change in the patch. If solr is not started through the batch files (solr.sh or solr.bat), but rather by running the start.jar directly with -Dsolr.jetty.truststore.password, Jetty will not pick up the keystore and truststore passwords. The patch changes jetty-ssl.xml so that is not using the system properties anymore. I did not find a way to use both there. Should this go to the upgrade notes?\n\nIs that a concern? ",
            "author": "Mano Kovacs",
            "id": "comment-16014295"
        },
        {
            "date": "2017-05-17T16:25:39+0000",
            "content": "Ah, sorry, missed that after the break. Yeah, probably at least the upgrade notes, but let me consider it for a minute first. ",
            "author": "Mark Miller",
            "id": "comment-16014345"
        },
        {
            "date": "2017-05-17T16:43:28+0000",
            "content": "Yeah, these days, the startup scripts are the legit way to start and stop Solr, so you are more on your own if you use jetty directly. We do want to mention it in the upgrade notes though, I'll make an entry. ",
            "author": "Mark Miller",
            "id": "comment-16014372"
        },
        {
            "date": "2017-05-23T15:50:24+0000",
            "content": "Commit 73aa53b0630bfe69e5798747da57bbe114b19959 in lucene-solr's branch refs/heads/master from Mark Miller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=73aa53b ]\n\nSOLR-10307: Add upgrade notes for back compat change. ",
            "author": "ASF subversion and git services",
            "id": "comment-16021367"
        },
        {
            "date": "2017-05-23T15:50:47+0000",
            "content": "Commit 06b6a7f376e573ce3a9ae65c3606222ae1cf626c in lucene-solr's branch refs/heads/branch_6x from Mark Miller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=06b6a7f ]\n\nSOLR-10307: Add upgrade notes for back compat change. ",
            "author": "ASF subversion and git services",
            "id": "comment-16021369"
        },
        {
            "date": "2017-06-19T20:21:05+0000",
            "content": "Mano Kovacs I have upgraded and tried this feature on solr 7 and 6.x and found an issue... I am unable to make this work unless the password is \"secret\".\nAny attempt to set a new password for my keystrore or truststore is ignored, after reviewing the code and comments I understand why you excluded the option to pass it as a system param.\n\nThe only way to get this to work is by setting the environment as follow:\n\nexport SOLR_SSL_TRUST_STORE_PASSWORD=bob\n\n\nPlease note that upon runtime the value entered is ignored and instead it will take the value set in solr.ini.sh.\nThis seems to be a bit counter intuitive, making ssl setup more complicated and confusing. Is this the intended behaviour or are we missing this export line in solr.sh. Again thanks for adding this much needed feature! ",
            "author": "Michael Suzuki",
            "id": "comment-16054676"
        },
        {
            "date": "2017-06-19T22:10:44+0000",
            "content": "Hi Michael Suzuki, thanks for the followup. I am trying to reproduce the issue but I might be missing something.\n\nThe only way to get this to work is by setting the environment as follow:\nWhat way would you prefer to use instead? Could you send an example?\n\nHere is how I run:\n\nexport KEYSTORE=$PWD/keystore.jks\nexport TRUSTSTORE=$PWD/truststore.jks\nrm $KEYSTORE\nrm $TRUSTSTORE\nkeytool -genkey -noprompt \\\n -alias alias1 \\\n -dname \"CN=mydomain.com, OU=ID, O=ABC, L=John, S=Doe, C=GB\" \\\n -ext \"SAN=dns:localhost\" \\\n -keystore $KEYSTORE \\\n -storepass abc123 \\\n -keypass abc123 \\\n -keyalg RSA\n\nkeytool -genkey -noprompt \\\n -alias alias1 \\\n -dname \"CN=mydomain.com, OU=ID, O=ABC, L=John, S=Doe, C=GB\" \\\n -ext \"SAN=dns:localhost\" \\\n -keystore $TRUSTSTORE \\\n -storepass abc456 \\\n -keypass abc456 \\\n -keyalg RSA\n\nexport SOLR_SSL_ENABLED=true\nexport SOLR_SSL_KEY_STORE=$KEYSTORE\nexport SOLR_SSL_KEY_STORE_PASSWORD=abc123\nexport SOLR_SSL_TRUST_STORE=$TRUSTSTORE\nexport SOLR_SSL_TRUST_STORE_PASSWORD=abc456\n\nbin/solr start -c -s ./example/cloud/node1/solr -f\n\n\n\nPriorly, I downloaded the master branch, ran ant server and cloud example. It is working for me. Note that I did not uncomment anything from solr.in.sh.\n\n\nAlso, SOLR-10783 will restore sysprop option as the configuration handling is moved out from jetty-ssl.xml.\n ",
            "author": "Mano Kovacs",
            "id": "comment-16054833"
        },
        {
            "date": "2017-06-20T09:34:00+0000",
            "content": "Yes the above example works for me, it is worth updating the documentation on how to setup ssl as above.\nI was setting all the details in solr.ini.sh as per the documentation. To recreate my issue start a new terminal and insure none of the values are set, verify by using echo.\n\necho $SOLR_SSL_ENABLED\necho $SOLR_SSL_KEY_STORE\necho $SOLR_SSL_KEY_STORE_PASSWORD\necho $SOLR_SSL_TRUST_STORE\necho $SOLR_SSL_TRUST_STORE_PASSWORD\n\n \nThen uncomment and set the values in solr.ini.sh and start solr, expected to work instead an error is thrown \"Keystore was tampered with, or password was incorrect\".  ",
            "author": "Michael Suzuki",
            "id": "comment-16055445"
        },
        {
            "date": "2017-06-20T12:04:44+0000",
            "content": "Michael Suzuki, thank you for the clarification. Yes, indeed it is not working anymore according the documentation. SOLR_SSL_KEY_STORE_PASSWORD and SOLR_SSL_TRUST_STORE_PASSWORD is being used by JVM and for that it needs to be exported. I will upload a patch for the solr.in.sh and also an update for the documentation. Thank you for catching this! ",
            "author": "Mano Kovacs",
            "id": "comment-16055638"
        },
        {
            "date": "2017-06-21T09:19:36+0000",
            "content": "Reopening as the parameters in solr.in.sh are not passed properly. ",
            "author": "Mano Kovacs",
            "id": "comment-16057228"
        },
        {
            "date": "2017-06-21T09:20:28+0000",
            "content": "Attaching fix patch. Fix is on solr by exporting the environment variables. ",
            "author": "Mano Kovacs",
            "id": "comment-16057229"
        },
        {
            "date": "2017-06-22T17:34:36+0000",
            "content": "Mark Miller, could you please take a look at the fix patch? The issue what Michael Suzuki pointed out probably will affect others. ",
            "author": "Mano Kovacs",
            "id": "comment-16059721"
        },
        {
            "date": "2017-06-26T16:20:34+0000",
            "content": "I'll work on this today. ",
            "author": "Mark Miller",
            "id": "comment-16063343"
        },
        {
            "date": "2017-06-27T06:37:29+0000",
            "content": "Commit 54fc1ee44d32ad6149aaa0d13cfc6246b5a7f06d in lucene-solr's branch refs/heads/master from Mark Miller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=54fc1ee ]\n\nSOLR-10307: Export variables so that solr.in.sh works correctly. ",
            "author": "ASF subversion and git services",
            "id": "comment-16064356"
        },
        {
            "date": "2017-06-27T06:38:01+0000",
            "content": "Commit cdf923fbaf7349f331d976cca28f58b0aae9adf5 in lucene-solr's branch refs/heads/branch_6x from Mark Miller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cdf923f ]\n\nSOLR-10307: Export variables so that solr.in.sh works correctly. ",
            "author": "ASF subversion and git services",
            "id": "comment-16064357"
        },
        {
            "date": "2017-11-01T18:57:25+0000",
            "content": "Hi Mano,\n\nWe need to update the ref guide for this change as well right? ",
            "author": "Varun Thacker",
            "id": "comment-16234576"
        },
        {
            "date": "2017-11-02T11:47:59+0000",
            "content": "Varun Thacker, thanks for the followup. I think we did not change any \"api\". Only the internals, how the password passed by solr.sh to the JVM that is changed. ",
            "author": "Mano Kovacs",
            "id": "comment-16235602"
        },
        {
            "date": "2018-01-26T15:56:27+0000",
            "content": "Mano Kovacs I noticed the following line of code in SSLConfigurations.java:\n\nif (isEmpty(System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD))\n    && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n\nWhy do we check for SysProps.SSL_TRUST_STORE_PASSWORD, when that is populated the SSL fails to start correctly.\nTo recreate the issue start solr with ssl and pass the following:\n\n -Djavax.net.ssl.keyStorePassword=yourpassword. \n\nAs the System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD is not empty it will skip the block of code and as a result it is unaware of the password and defaults to secret as per the jetty-ssl.xml ",
            "author": "Michael Suzuki",
            "id": "comment-16341189"
        },
        {
            "date": "2018-06-26T15:22:36+0000",
            "content": "Is this documented in the ref guide? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16523857"
        }
    ]
}