{
    "id": "LUCENE-6518",
    "title": "\"classcache reaper\" needs exemption from thread leaks",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "This happens on IBM JDK (some system thread or what have you).\n\nits 100% reproducible if you just cd lucene/analysis/smartcn and run 'ant test': we time out waiting for the thread to die and fail like this:\n\n   [junit4] Suite: org.apache.lucene.analysis.cn.smart.TestHMMChineseTokenizerFactory\n   [junit4]   2> Jun 03, 2015 12:30:39 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\n   [junit4]   2> WARNING: Will linger awaiting termination of 1 leaked thread(s).\n   [junit4]   2> Jun 03, 2015 12:30:59 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\n   [junit4]   2> SEVERE: 1 thread leaked from SUITE scope at org.apache.lucene.analysis.cn.smart.TestHMMChineseTokenizerFactory: \n   [junit4]   2>    1) Thread[id=27, name=ClassCache Reaper, state=WAITING, group=TGRP-TestHMMChineseTokenizerFactory]\n   [junit4]   2>         at java.lang.Object.wait(Native Method)\n   [junit4]   2>         at java.lang.Object.wait(Object.java:201)\n   [junit4]   2>         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:119)\n   [junit4]   2>         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:91)\n   [junit4]   2>         at java.io.ClassCache$Reaper.run(ClassCache.java:222)\n   [junit4]   2> Jun 03, 2015 12:30:59 PM com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\n   [junit4]   2> INFO: Starting to interrupt leaked threads:\n   [junit4]   2>    1) Thread[id=27, name=ClassCache Reaper, state=WAITING, group=TGRP-TestHMMChineseTokenizerFactory]\n   [junit4]   2> Jun 03, 2015 12:31:02 PM com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\n   [junit4]   2> SEVERE: There are still zombie threads that couldn't be terminated:\n   [junit4]   2>    1) Thread[id=27, name=ClassCache Reaper, state=WAITING, group=TGRP-TestHMMChineseTokenizerFactory]\n   [junit4]   2>         at java.lang.Object.wait(Native Method)\n   [junit4]   2>         at java.lang.Object.wait(Object.java:201)\n   [junit4]   2>         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:119)\n   [junit4]   2>         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:91)\n   [junit4]   2>         at java.io.ClassCache$Reaper.run(ClassCache.java:222)\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene50): {}, docValues:{}, sim=RandomSimilarityProvider(queryNorm=true,coord=no): {}, locale=ar_JO, timezone=Europe/Andorra\n   [junit4]   2> NOTE: Linux 3.13.0-49-generic amd64/IBM Corporation 1.8.0 (64-bit)/cpus=8,threads=2,free=1204464,total=20643840\n   [junit4]   2> NOTE: All tests run in this JVM: [TestHMMChineseTokenizerFactory]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestHMMChineseTokenizerFactory -Dtests.seed=4546D15E2A47A285 -Dtests.locale=ar_JO -Dtests.timezone=Europe/Andorra -Dtests.asserts=true -Dtests.file.encoding=UTF-8",
    "attachments": {
        "LUCENE-6518.patch": "https://issues.apache.org/jira/secure/attachment/12737373/LUCENE-6518.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14571291",
            "author": "Robert Muir",
            "date": "2015-06-03T16:33:55+0000",
            "content": "fyi Dawid Weiss as I don't know if this is something we should fix in randomizedtesting or in lucene test infra. I know there is a \"list\" somewhere for stuff like this. "
        },
        {
            "id": "comment-14571645",
            "author": "Dawid Weiss",
            "date": "2015-06-03T21:07:31+0000",
            "content": "This class is used to exclude system/ known/ odd threads. "
        },
        {
            "id": "comment-14571646",
            "author": "Dawid Weiss",
            "date": "2015-06-03T21:07:40+0000",
            "content": "This class's source is even provided in IBM's jdk. Interesting. The QuickPatchThreadsFilter has a list of ignored threads. This is by large hard to predict, so I'd just include it there. "
        },
        {
            "id": "comment-14571664",
            "author": "Robert Muir",
            "date": "2015-06-03T21:16:41+0000",
            "content": "+1 Dawid, thank you for looking at this. "
        },
        {
            "id": "comment-14572033",
            "author": "Robert Muir",
            "date": "2015-06-04T03:13:59+0000",
            "content": "Dawid, I had to tweak your J9 detection, this is the logic i've used in tests before. \n\nI will commit this and iterate on the other silly issues, thanks for the patch! "
        },
        {
            "id": "comment-14572035",
            "author": "ASF subversion and git services",
            "date": "2015-06-04T03:15:24+0000",
            "content": "Commit 1683451 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1683451 ]\n\nLUCENE-6518: classcache reaper needs exemption from thread leaks (J9) "
        },
        {
            "id": "comment-14572038",
            "author": "ASF subversion and git services",
            "date": "2015-06-04T03:16:33+0000",
            "content": "Commit 1683452 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1683452 ]\n\nLUCENE-6518: classcache reaper needs exemption from thread leaks (J9) "
        },
        {
            "id": "comment-14713219",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:06:07+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}