{
    "id": "LUCENE-1679",
    "title": "Make WildcardTermEnum#difference() non-final",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The method WildcardTermEnum#difference() is declared final. I found it very useful to subclass WildcardTermEnum to implement different scoring for exact vs. partial matches. The change is rather trivial (attached)  but I guess it could make life easier for a couple of users.\n\nI attached two patches:\n\n\tone which contains the single change to make difference() non-final (WildcardTermEnum.patch)\n\tone which does also contain some minor cleanup of WildcardTermEnum. I removed unnecessary member initialization and made those final. ( WildcardTermEnum_cleanup.patch)\n\n\n\nThanks simon",
    "attachments": {
        "WildcardTermEnum_cleanup_2nd.patch": "https://issues.apache.org/jira/secure/attachment/12410306/WildcardTermEnum_cleanup_2nd.patch",
        "WildcardTermEnum_cleanup.patch": "https://issues.apache.org/jira/secure/attachment/12410290/WildcardTermEnum_cleanup.patch",
        "WildcardTermEnum.patch": "https://issues.apache.org/jira/secure/attachment/12410289/WildcardTermEnum.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-06-10T11:01:52+0000",
            "content": "I like the cleanup patch, but, I think we should not remove close()?  Even though it's basically a no-op, removing it breaks back-compat.\n\nTechnically, changing the members to final is also a break to back-compat, but I think it's acceptable because WildcardTermEnum basically requires that these are final (ie, you can't up and change say \"pre\" after creation, because the enum has already been set). ",
            "author": "Michael McCandless",
            "id": "comment-12718029"
        },
        {
            "date": "2009-06-10T11:44:00+0000",
            "content": "I created a new patch containing the #close() method. \nI 100% believe you about your comment but I have a hard time to understand why it breaks back-compat. Could you give me a quick explanation please I might miss something.\n\nThanks, Simon ",
            "author": "Simon Willnauer",
            "id": "comment-12718039"
        },
        {
            "date": "2009-06-10T12:44:11+0000",
            "content": "I created a new patch containing the #close() method. \n\nWoops, sorry, I was wrong: removing close is fine, since super.close is still there, and since we will no longer assign nulls to the members. ",
            "author": "Michael McCandless",
            "id": "comment-12718051"
        },
        {
            "date": "2009-06-10T13:13:29+0000",
            "content": "I see. I could not thing of anything which would break the backwards compat. when removing the close method. The only thing I could have thought of was some convention I did not know about. So I assume the WildcardTermEnum_cleanup.patch is fine.\n\nsimon ",
            "author": "Simon Willnauer",
            "id": "comment-12718069"
        },
        {
            "date": "2009-06-10T14:40:32+0000",
            "content": "Thanks Simon! ",
            "author": "Michael McCandless",
            "id": "comment-12718097"
        }
    ]
}