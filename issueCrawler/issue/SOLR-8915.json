{
    "id": "SOLR-8915",
    "title": "Issue with CJK and mm being ignored when searching with white space",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.5",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "I am using edismax and I have set mm=100\n\nI have the following in the request\nhandler:\n\n       <str name=\"defType\">edismax</str>\n       <str name=\"mm\">100</str>\n\nI am not using q.op or <solrQueryParser \n> defaultOperator=\"AND\"/>\n\nMy search terms are \u30af\u30a4\u30c3\u30af\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\nTerm 1 - \u30af\u30a4\u30c3\u30af\nTerm 2- \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\n\nIf I search for\u30af\u30a4\u30c3\u30af\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 (no spaces) I get no results.  This expected.\n\nIf I search for \u30af\u30a4\u30c3\u30af \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 (space between \u30af \u30ea) I get 1 result.  This\nis bad.  I am expecting mm=100 to still apply.\n\nIf I search for \u30af\u30a4\u30c3\u30afOR \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 I get 1 result.  This expected.  The OR\nis overriding the mm=100.\n\nIf I search for \u30af\u30a4\u30c3\u30af AND \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 I get 1 result.  This is bad.  I am expecting\nmm=100 to still apply.\n\nIn CJK searches spaces should not matter.  In the Analysis tool I can see the correct tokens\nbeing generated.  The parser is doing different things based on space or no space in the query.\n\nWith space (not expected result):\n\nWhen the query is space delimited to two terms, I see each term analyzed separately, per the\nfollowing debugQuery output:\n\u30af\u30a4\u30c3\u30af is treated in one section:\n\ntitle_ja:\u30af\u30a4\u30c3\u30af^1.2 | primary_header_ja:\u30af\u30a4\u30c3\u30af^1.2 | file_name:\u30af\u30a4\u30c3\u30af^1.2\n\n\n\n meta_description_ja:\u30af\u30a4\u30c3\u30af^0.5 \n secondary_header_ja:\u30af\u30a4\u30c3\u30af^0.5 \n body_ja:\u30af\u30a4\u30c3\u30af^0.5\n\n\n inlink_text_ja:\u30af\u30a4\u30c3\u30af^1.2)~0.17\n\n\n\n\n\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 is treated in one section:\n\ntitle_ja:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9^1.2 | primary_header_ja:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9^1.2 | file_name:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9^1.2\n\n\n\n meta_description_ja:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9^0.5 \n secondary_header_ja:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9^0.5\n\n\n body_ja:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9^0.5 \n inlink_text_ja:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9^1.2)~0.17\n\n\n\n\n\nWithout space (expected result):\n\nWhen the query is one term I see that Solr analyzes it once and Japanese tokenizer does tokenize\nit to two terms:\n(title_ja:\u30af\u30a4\u30c3\u30af title_ja:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9)\n\nGiven that \u30af\u30a4\u30c3\u30af and \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 do not appear together in any of the fields\nlisted in the query filter,\nbody_en^0.5 title_en^1.2 url_path^1.2 file_name^1.2 primary_header_en^1.2 secondary_header_en^0.5\nmeta_description_en^0.5 inlink_text_en^1.2 body_ja^0.5 title_ja^1.2 primary_header_ja^1.2\nsecondary_header_ja^0.5 meta_description_ja^0.5 inlink_text_ja^1.2\n\nand I have specified mm=100\n\nnothing will be matched. i.e. (title_ja:\u30af\u30a4\u30c3\u30af title_ja:\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9)",
    "attachments": {},
    "issue_links": {},
    "comments": []
}