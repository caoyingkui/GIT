{
    "id": "LUCENE-835",
    "title": "An IndexReader with run-time support for synonyms",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "2.1",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "These classes provide support for enabling the use of synonyms for terms in an existing index.\n\nWhile Analyzers can be used at Query-parse time or Index-time to inject synonyms these are not always satisfactory means of providing support for synonyms:\n\n\n\tIndex-time injection of synonyms is less flexible because changing the lists of synonyms requires an index rebuild.\n\tQuery-parse-time injection is awkward because special support is required in the parser/query logic  to recognise and cater for the tokens that appear in the same position. Additionally, any statistical analysis of the index content via TermEnum/TermDocs etc does not consider the synonyms unless specific code is added.\n\n\n\nWhat is perhaps more useful is a transparent wrapper for the IndexReader that provides a synonym-ized view of the index without requiring specialised support in the calling code. All of the TermEnum/TermDocs interfaces remain the same but behind the scenes synonyms are being considered/applied silently.\n\nThe classes supplied here provide this \"virtual\" view of the index and all queries or other code that examines this index using the special reader benefit from this view without requiring specialized code. A Junit test illustrates this code in action.",
    "attachments": {
        "Synonym.java": "https://issues.apache.org/jira/secure/attachment/12353587/Synonym.java",
        "SynonymIndexReader.java": "https://issues.apache.org/jira/secure/attachment/12353588/SynonymIndexReader.java",
        "TestSynonymIndexReader.java": "https://issues.apache.org/jira/secure/attachment/12353590/TestSynonymIndexReader.java",
        "SynonymSet.java": "https://issues.apache.org/jira/secure/attachment/12353589/SynonymSet.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-03-26T15:38:34+0000",
            "content": "Hi Mark,\nThank you for your work. You said: \"Query-parse-time injection is awkward because special support is required in the parser/query logic to recognise and cater for the tokens that appear in the same position.\" Is there an implementation of the \"special support\"? I have a similar problem with dutch word decomposition: at query time i would decompound words like \"hulparbeider\" in \"hulparbeider\" OR \"hulp\" OR \"arbeider\" but the parsed query contains only one word group:  \"hulparbeider hulp arbeider\".\nCan you give me some tip?\nThank you\nBenjamin ",
            "author": "Benjamin Henriet",
            "id": "comment-12484139"
        },
        {
            "date": "2011-01-26T15:47:24+0000",
            "content": "Thos issue is very old and got never any response. Also the supplied class files are now longer fitting the recent IndexReader APIs, so I close this unless somebody gives an update for Lucene trunk. ",
            "author": "Uwe Schindler",
            "id": "comment-12987063"
        }
    ]
}