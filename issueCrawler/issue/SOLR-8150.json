{
    "id": "SOLR-8150",
    "title": "Fix build failure due to too much printout from QueryResponseTest",
    "details": {
        "components": [
            "Tests"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "5.3,                                            6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Jenkins failure:\n\n9. okt. 2015 kl. 08.19 skrev Apache Jenkins Server <jenkins@builds.apache.org>:\n\nBuild: https://builds.apache.org/job/Lucene-Solr-Tests-trunk-Java8/463/\n\n1 tests failed.\nFAILED:  junit.framework.TestSuite.org.apache.solr.client.solrj.response.QueryResponseTest\n\nError Message:\nThe test or suite printed 8730 bytes to stdout and stderr, even though the limit was set to 8192 bytes. Increase the limit with @Limit, ignore it completely with @SuppressSysoutChecks or run with -Dtests.verbose=true\n\nStack Trace:\njava.lang.AssertionError: The test or suite printed 8730 bytes to stdout and stderr, even though the limit was set to 8192 bytes. Increase the limit with @Limit, ignore it completely with @SuppressSysoutChecks or run with -Dtests.verbose=true\n\tat __randomizedtesting.SeedInfo.seed([96A3A8B2A4180026]:0)\n\tat org.apache.lucene.util.TestRuleLimitSysouts.afterIfSuccessful(TestRuleLimitSysouts.java:212)\n\tat com.carrotsearch.randomizedtesting.rules.TestRuleAdapter$1.afterIfSuccessful(TestRuleAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:37)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\n\nFix by adding @Limit(bytes=20000) to class QueryResponseTest\n\nThis applies to both Trunk and 5.x, and is easily reproducible on OSX.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-09T20:52:40+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1707813 from janhoy@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1707813 ]\n\nSOLR-8150: Fix build failure due to too much output from QueryResponseTest ",
            "id": "comment-14951172"
        },
        {
            "date": "2015-10-09T20:53:08+0000",
            "author": "Joel Bernstein",
            "content": "Probably would be good to commit this so we can get things passing again. \n\nI was looking for a change that caused this test to start failing but I don't see one. ",
            "id": "comment-14951176"
        },
        {
            "date": "2015-10-09T20:53:32+0000",
            "author": "Joel Bernstein",
            "content": "Ah, just saw the commit. Thanks! ",
            "id": "comment-14951177"
        },
        {
            "date": "2015-10-09T21:19:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1707817 from janhoy@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1707817 ]\n\nSOLR-8150: Fix build failure due to too much output from QueryResponseTest (backport) ",
            "id": "comment-14951215"
        },
        {
            "date": "2015-10-10T18:47:28+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Could be that we should dig to see if there is some unwanted logging going on?\nBut since the failed test merely exceeded the 8192 bytes limit I figured a small limit increase was the way to go as a first step. ",
            "id": "comment-14951989"
        }
    ]
}