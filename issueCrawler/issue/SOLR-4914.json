{
    "id": "SOLR-4914",
    "title": "Factor out core discovery and persistence logic",
    "details": {
        "affect_versions": "6.0",
        "status": "Resolved",
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Alan Woodward has done some work to refactor how core persistence works that we should work on going forward that I want to separate from a shorter-term tactical problem (See SOLR-4910).\n\nI'm attaching Alan's patch to this JIRA and we'll carry it forward separately from 4910.",
    "attachments": {
        "SOLR-4914.patch": "https://issues.apache.org/jira/secure/attachment/12587079/SOLR-4914.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Alan Woodward",
            "id": "comment-13683363",
            "date": "2013-06-14T14:00:59+0000",
            "content": "Thanks for opening this, Erick.\n\nI think it makes sense to combine persistence and discovery, as they're basically two sides of the same coin.  So pre Solr 4.3, we loaded cores from solr.xml and persisted them back there.  Now we allow Solr to crawl the filesystem looking for core definition files and we persist these.\n\nI'm thinking the combined interface should look something like this:\n\n\npublic interface CoreDiscoverer {\n\n    public List<CoreDescriptor> discover();\n\n    public void persist(CoreDescriptor cd);\n    public void delete(CoreDescriptor cd);\n\n}\n\n\n\nThis also allows us to make discovery and persistence completely pluggable.  If I want to store my core definitions in an external DB, or a plain text file, or whatever, I implement a PlainTextCoreDiscoverer and drop it onto the classpath, and refer to it from solr.xml. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13684725",
            "date": "2013-06-16T18:31:11+0000",
            "content": "Patch with my latest status.  It won't compile yet, as I haven't updated all tests to reflect the new API.  Will work on that next.\n\nThis combines core discovery and persistence into the CoresListPersistor interface.  All persistence logic is removed from CoreContainer and ConfigSolr and put into the two implementing classes of CorePropertiesPersistor and SolrXMLPersistor.\n\nCoreDescriptor is tidied up a bit, and made effectively immutable (would be nicer to make it really immutable, maybe with an ImmutableProperties class).  The original pre-substitution parameters are stored as well as the values after substitution, which makes persistence a lot easier (you just read from the original values).\n\nSolr.xml persistence is also made a lot simpler, by just storing everything around the <cores/> tag as a flat string, and only updating the <core> tags.  So you don't need to remember to add new solr.xml parameters to core persistence logic any more, and things like comments will be preserved.\n\nThis is a pretty big patch, and there's still a fair amount to do, but I'd be grateful for some preliminary reviews.  I think it simplifies the whole core discovery/persistence logic a lot. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13685540",
            "date": "2013-06-17T13:15:28+0000",
            "content": "Same patch as before, updated to trunk to include all the SOLR-4910 changes.  Most of which I'm nuking  "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13685708",
            "date": "2013-06-17T16:56:35+0000",
            "content": "Just make sure all the tests continue to pass  "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13701417",
            "date": "2013-07-06T21:35:55+0000",
            "content": "Latest status.  There are still some failing tests, and I need to add some new generic persistence tests. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13703491",
            "date": "2013-07-09T16:54:04+0000",
            "content": "Nearly there.  ShardSplitTest is failing consistently, and I still need to work out what's going on there.  There's also a nocommit in there concerning what to do when unloading a core discovered via a core.properties file - should we delete the file, or rename it?  I think renaming it is probably the most user-friendly thing to do, as then you just have to rename it back again to make the core available next time you start up. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13703501",
            "date": "2013-07-09T17:04:21+0000",
            "content": "bq: I think renaming it is probably the most user-friendly thing to do\n\n+1 unless deleteIndex=true in which case nuke it all? "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13703547",
            "date": "2013-07-09T17:43:09+0000",
            "content": "I think if deleteIndex=true then it will already have been nuked. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13704582",
            "date": "2013-07-10T13:51:37+0000",
            "content": "Final patch.  All tests pass.\n\nThere are a couple of bits here which could do with following up:\n1) CoreAdminHandler.handleCreateAction is doing a bunch of stuff that really ought to be moved inside CoreContainer.\n2) I'm a bit concerned by what will happen if somebody creates two cores using the same instance dir when in core discovery mode - the second core's core.properties file will overwrite the first.  This is only an issue in core discovery mode, though, as storing core definitions in solr.xml can deal with this fine.   "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13704706",
            "date": "2013-07-10T16:17:47+0000",
            "content": "A massive patch, so I haven't looked in great detail, but few comments:\n\n1> CoreAdminCreateDiscoverTest, there has been a change from testing that specific properties are preserved to just checking the number of properties. That test was written that way specifically because instanceDir was being preserved in the core.properties file. The way it is if we inadvertently preserved instanceDir but left out, say dataDir the test would pass. Can you put that back?\n\n2> TestCoreContainer.testPersist is removed, what replaces it?\n\n\nNext step: Removing persistence in 5.x!\n\nAbout your point 2, creating two cores with same instance dir. Last I knew there was a check at startup time to report this, but I agree it's a bit of a trap.\n "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13704739",
            "date": "2013-07-10T16:45:25+0000",
            "content": "re CoreAdminCreateDiscoverTest, the lines immediately prior to the size check are checks for the four properties in question, so that's covered.\n\nre testPersist, that's covered by TestSolrXMLPersistence and TestCoreDiscovery.  But some more tests here would be good, I agree...\n\nre cores sharing instance dir, startup time will be too late to detect the problem here.  Creating a new core via the CoreAdminHandler will overwrite any existing core.properties file.  Maybe the way to deal with this is to call locator.persist() before we call create(), and throw an exception from CorePropertiesLocator.  Will try and work something up.\n\nI also think that this may remove the need to deprecate persistence - it's a lot more maintainable now. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13704749",
            "date": "2013-07-10T17:00:27+0000",
            "content": "bq: I also think that this may remove the need to deprecate persistence - it's a lot more maintainable now.\n\nI sure hope so, it was pretty ugly for a long time.\n\nBut the deprecation also has another goal, moving all the core definitions out to discovery mode rather than this current hybrid. It's not clear to me if we need to continue persisting solr.xml if you never have to define cores there. But that's a discussion for another day I think.\n\nThans for the effort here!\n\nErick "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13705003",
            "date": "2013-07-10T20:14:00+0000",
            "content": "Adds a test that you can't add two cores that share an instanceDir if you're using the CorePropertiesLocator.\n\nre solr.xml persistence, the cores list is the only thing that changes, everything else is immutable.  Which is why this JIRA doesn't bother trying to reconstruct complicated XML from the config, it just keeps a copy of the existing XML and replaces the cores list on persistence.  Much easier  "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13705008",
            "date": "2013-07-10T20:15:21+0000",
            "content": "I'm going to commit this tomorrow unless anybody objects, to trunk and 4.x.  It's kind of a big change to get into 4.4 though. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13705027",
            "date": "2013-07-10T20:29:29+0000",
            "content": "-1 on trying to put it into 4.4 "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13705080",
            "date": "2013-07-10T21:21:54+0000",
            "content": "Actually I think SOLR-5029 needs to be fixed before I commit this. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13705938",
            "date": "2013-07-11T15:55:38+0000",
            "content": "New patch, taking into account SOLR-5029 as well.  All tests pass, committing to trunk and 4x (but not 4.4!) shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13705960",
            "date": "2013-07-11T16:35:02+0000",
            "content": "Commit 1502276 from Alan Woodward\n[ https://svn.apache.org/r1502276 ]\n\nSOLR-4914: Factor out core discovery and persistence logic "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13705967",
            "date": "2013-07-11T16:38:54+0000",
            "content": "Commit 1502280 from Alan Woodward\n[ https://svn.apache.org/r1502280 ]\n\nSOLR-4914: Factor out core discovery and persistence logic "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13706788",
            "date": "2013-07-12T08:25:37+0000",
            "content": "Commit 1502468 from Alan Woodward\n[ https://svn.apache.org/r1502468 ]\n\nSOLR-4914: Close OutputStreamWriter properly, use System.getProperty(\"line.separator\") instead of \\n\n\nFixes Windows test failures. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13706789",
            "date": "2013-07-12T08:26:50+0000",
            "content": "Commit 1502469 from Alan Woodward\n[ https://svn.apache.org/r1502469 ]\n\nSOLR-4914: Close OutputStreamWriter, use platform-independent newlines in tests "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13706798",
            "date": "2013-07-12T08:55:05+0000",
            "content": "Commit 1502481 from Alan Woodward\n[ https://svn.apache.org/r1502481 ]\n\nSOLR-4914: Use Properties.store(OutputStream, String) for back compatibility "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13706799",
            "date": "2013-07-12T08:56:03+0000",
            "content": "Commit 1502483 from Alan Woodward\n[ https://svn.apache.org/r1502483 ]\n\nSOLR-4914: Use Properties.store(OutputStream, String) for back compatibility "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13706845",
            "date": "2013-07-12T10:50:32+0000",
            "content": "Commit 1502507 from Alan Woodward\n[ https://svn.apache.org/r1502507 ]\n\nSOLR-4914: Close input streams as well "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13706847",
            "date": "2013-07-12T10:51:24+0000",
            "content": "Commit 1502508 from Alan Woodward\n[ https://svn.apache.org/r1502508 ]\n\nSOLR-4914: Close input streams as well "
        }
    ]
}