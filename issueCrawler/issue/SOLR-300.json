{
    "id": "SOLR-300",
    "title": "create subclass of SingleInstanceLockFactory which warns loadly in the event of concurrent lock attempts",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "Wish",
        "priority": "Minor",
        "labels": "",
        "resolution": "Incomplete"
    },
    "description": "as noted by yonik in SOLR-240...\n\n\nHow about SingleInstanceLockFactory to aid in catching concurrency bugs?\n  ...\nor even better, a subclass or other implementation: SingleInstanceWarnLockFactory or SingleInstanceCoordinatedLockFactory that log a failure if obtain() is called for a lock that is already locked.\n\n\nwe should create a new subclass like Yonik describes and change SolrIndexWriter to use this subclass if/when \"single\" is specified as the lockType.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13579822",
            "date": "2013-02-16T16:20:05+0000",
            "content": "Cleaning up old JIRAs, re-open if necessary. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13579828",
            "date": "2013-02-16T16:29:27+0000",
            "content": "Why close this? "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15551769",
            "date": "2016-10-06T12:10:37+0000",
            "content": "Is this still relevant with simple type being no longer the default? Also, I thought there was a lot of lock-related work done in 6.x. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15582118",
            "date": "2016-10-17T12:34:36+0000",
            "content": "There is no way to go forward on this unless somebody really takes it on to even validate this. "
        }
    ]
}