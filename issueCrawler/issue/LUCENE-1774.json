{
    "id": "LUCENE-1774",
    "title": "In a benchmark alg, if you use a log.step thats higher than the number of docs you add, whacky high numbers are logged for doc adds",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "modules/benchmark"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Invalid",
        "status": "Resolved"
    },
    "description": "",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-08-02T10:06:44+0000",
            "content": "Mark - can you perhaps paste here an .alg file and the output? I executed readContentSource.alg like this, but didn't see anything \"whacky\" printed. Perhaps I'm not running the exact algorithm? Does it have to do w/ indexing?\n\n\ncontent.source=org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\ndocs.file=temp/enwiki-20070527-pages-articles.xml.bz2\n\n# Stop after processing the document feed once:\ncontent.source.forever=false\n\n# Log messages every:\nlog.step=100000\n\n# -------------------------------------------------------------------------------------\n\n{ ConsumeContentSource } : 10\n\nRepSumByPref ConsumeContentSource\n\n\n\nI also tried indexLineFile.alg, but again I didn't see anything weird. ",
            "author": "Shai Erera",
            "id": "comment-12738033"
        },
        {
            "date": "2009-08-02T13:22:47+0000",
            "content": "Yeah, I'll post some further info when I get a moment - it may have been some aberration or something? I was seeing it while working with some enwiki benchmark stuff yesterday - if I put a step of 10,000 and then added 500 docs, it would output, 10,000, 20,000, 30,000 - 50,000 for every 100. I'll try and duplicate it again when I get a chance. ",
            "author": "Mark Miller",
            "id": "comment-12738077"
        },
        {
            "date": "2009-08-02T15:45:07+0000",
            "content": "strange. I've tried to reproduce but failed, so if you succeed, I'd like to take a look too. ",
            "author": "Shai Erera",
            "id": "comment-12738090"
        },
        {
            "date": "2009-08-02T17:23:35+0000",
            "content": "My fault - had 50k search task that was doing the logging. I don't know if thats new or not, but I was used to just seeing that with adding docs - so when it still jumped by 10,000 when i added 500 docs it appeared a bit weird - when I lowered the step to 100, I saw what I expected - but I didn't realize that the odd numbers I was seeing was the searching task logging by log.step.\n ",
            "author": "Mark Miller",
            "id": "comment-12738097"
        },
        {
            "date": "2009-08-02T18:26:12+0000",
            "content": "That is indeed new (I added it in LUCENE-1595 as part of the general refactoring). Now PerfTask includes logging logic, determined by log.step. It means that one log.step controls all tasks, which I'm not sure if it's good or not (doc.delete.log.step controls just deletes because it seemed to be used by several algs).\n\nMaybe, as part of this issue or another issue, we can have PerfTask support a parameter, which will be the log.step? That way you can choose to AddDocTask(100), and SearchTask(-1) to enable logging for adding docs and disable for search. Though that will conflict w/ the other parameter AddDocTask supports (document size). So perhaps we can enhance the parameters to accept a list? Just a thought. ",
            "author": "Shai Erera",
            "id": "comment-12738109"
        },
        {
            "date": "2009-08-03T13:14:04+0000",
            "content": "Good idea!\n\nI'm not so keen on adding it as a param though.\n\nWhat about using log.step as a default that works for all tasks, and also having log.step.PerfTask that can control by task?\n\nThen delete would be log.step.DeleteDocTask=100 and you could individually set any of the others if you choose.\n\nOr Something along those lines? I almost think the setting should stay out of the alg logic though - but it would be nice to have finer control - to do things like match the old behavior:\n\nlog.step.AddDocTask=1000\n\nDef deserves a new issue if we do something here I think. ",
            "author": "Mark Miller",
            "id": "comment-12738332"
        },
        {
            "date": "2009-08-03T13:55:35+0000",
            "content": "I like that idea. DeleteDocTask today defines a \"delete.log.step\", but it's defined only for that task. There is no \"search.log.step\" for example. \n\nHaving a pattern like log.step.<Task Class name> will allow us to support it in PerfTask by doing something like:\n\n    logStep = config.get(\"log.step\", DEFAULT_LOG_STEP);\n    if (logStep <= 0) {\n      logStep = Integer.MAX_VALUE;\n    }\n\n    // Check if a log step for the current task is defined\n    logStep = config.get(\"log.step.\" + getClass().getSimpleName(), DEFAULT_LOG_STEP);\n    if (logStep <= 0) {\n      logStep = Integer.MAX_VALUE;\n    }\n\n\n\n\nAnd so we can support a log.step for any task, irregardless of whether that task included support for it or not. And we can remove the delete.log.step param (new in 2.9 so no problem). Note that the above code is 1.5 dependent, but I can make it 1.4 compliant w/ a TODO to switch to getSimpleName() in 1.5.\n\nWhat do you think? Shall I open an issue for that? Or can you reopen that issue and I'll prepare a patch? ",
            "author": "Shai Erera",
            "id": "comment-12738346"
        },
        {
            "date": "2009-08-03T14:02:43+0000",
            "content": "What do you think? Shall I open an issue for that? Or can you reopen that issue and I'll prepare a patch?\n\n+1 - I vote new issue for it. If you make the patch, I'll commit it for 2.9. ",
            "author": "Mark Miller",
            "id": "comment-12738349"
        }
    ]
}