{
    "id": "SOLR-2123",
    "title": "Search Grouping: Group by query (like facet.query)",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Sub-task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "",
    "attachments": {
        "SOLR-2123.patch": "https://issues.apache.org/jira/secure/attachment/12454980/SOLR-2123.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12911011",
            "date": "2010-09-18T12:57:37+0000",
            "content": "OK, so I'm thinking to treat this just like faceting... group.query=foo:bar will give you the top docs that match that query.\n\nThis is the current format for group.field:\n\n  \"grouped\":{\n    \"popularity\":{\n      \"matches\":19,\n      \"groups\":[{\n          \"groupValue\":6,\n          \"doclist\":{\"numFound\":5,\"start\":0,\"docs\":[\n\n\n\nAnd this is what I propose for group.query (which basically just drops the \"groups\" list and goes straight to a doclist.\n\n  \"grouped\":{\n    \"foo:bar\":{\n       \"matches\":19,\n       \"doclist\":{\"numFound\":5,\"start\":0,\"docs\":[\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12912259",
            "date": "2010-09-19T17:16:48+0000",
            "content": "Here's the patch for filter.query\nThe number of docs returned in that group is still governed by group.limit.\nIn the tests, I also changed the separator between path and expected json from : to ==, which will lead to a lot fewer false hits, and allowed be to easily use something with a : in the path.  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12912266",
            "date": "2010-09-19T17:59:46+0000",
            "content": "committed. "
        }
    ]
}