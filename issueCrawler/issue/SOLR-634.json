{
    "id": "SOLR-634",
    "title": "Solr user interface",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "Admin UI"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Provide an example user interface for Solr (web application) for people to try out Solr's capabilities.",
    "attachments": {
        "solr-ui.tar.gz": "https://issues.apache.org/jira/secure/attachment/12386272/solr-ui.tar.gz",
        "SOLR-634.patch": "https://issues.apache.org/jira/secure/attachment/12386265/SOLR-634.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Lars Kotthoff",
            "id": "comment-12613909",
            "date": "2008-07-16T11:11:17+0000",
            "content": "User interface as described and discussed at http://www.nabble.com/Solr-user-interface-td18235277.html. The contents of the tarball is everything in the svn repository. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12613920",
            "date": "2008-07-16T11:42:38+0000",
            "content": "Lars \u2013 Can this be modeled after the DataImportHandler (SOLR-469, SOLR-563) contrib builds? The existing solr build file is already capable of building contrib projects though it may still need some modifications to accommodate your contribution. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12613925",
            "date": "2008-07-16T11:52:42+0000",
            "content": "To some extent, yes. I don't think it should be included in the Solr war file though, as it's a separate application. Also there's a dependency on the solr.war for the integration tests. The included build.xml is really just a skeleton. For example we need to decide what \"package\" should do. Compiled files only? Source, too? What about documentation \u2013 manual, source of manual, javadoc. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12613930",
            "date": "2008-07-16T12:19:35+0000",
            "content": "To some extent, yes. I don't think it should be included in the Solr war file though, as it's a separate application.\nThat's great. We can start by modifying the existing directory structure in the attached archive to the contrib structure following by DIH.\n\nAlso there's a dependency on the solr.war for the integration tests.\nCan we use the AbstractSolrTestCase or embedded Jetty (see JettyWebappTest) for integration tests instead of relying on solr.war directly? That will simplify the builds.\n\nFor example we need to decide what \"package\" should do. Compiled files only? Source, too? What about documentation - manual, source of manual, javadoc.\nThese targets should do exactly as (or close to) what is done by Solr's build file. We should be able to create and deploy the war file for this contrib deployed alongside Solr in the example/webapps folder so that no manual steps may be needed to see the interface. Let's get the basic compile, package, test working after which we can focus on javadoc, dist, documentation etc. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12613935",
            "date": "2008-07-16T12:36:45+0000",
            "content": "I'll look into AbstractSolrTestCase. Currently the integration tests use Solr with an embedded Jetty to verify that we're able to communicate with Solr. I'm inclined to leave it that way, since it's the only way of testing in an environment similar to the target environment.\n\nThe build file already provides targets for building, running the tests, etc. I'll take a closer look at integrating it with the main build script. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12613964",
            "date": "2008-07-16T14:03:25+0000",
            "content": "Making this issue depend on SOLR-540 as the current implementation uses wildcard highlighting. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12614240",
            "date": "2008-07-17T06:25:47+0000",
            "content": "I'm attaching a patch which creates the directory structure and text files in contrib/. The build file was changed to incorporate Solr jars and create a Solr war for the integration tests.\n\nThe binary files (pdf, images, jars) need to be copied manually \u2013 the names of the files are included in the patch. Because Solr jar files are incorporated, not all the jars present in the tarball are required.\n\nNote that the integration tests fail because they depend on SOLR-540. The build will succeed nevertheless though. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12614248",
            "date": "2008-07-17T06:53:40+0000",
            "content": "Regarding testing, we can't use AbstractSolrTestCase for that since it communicates with Solr directly instead over HTTP, thus the servlet code wouldn't be executed. Doing something like JettyWebappTest seems more feasible, although that depends on assembling all the Solr parts required to run it as a webapp to test against. Currently the easiest way to do that is to build the distribution war file. I'm not that familiar with the current build/testing process though, so do correct me if I'm wrong!\n\nI agree that it'd be better not to have to create and copy the war file for integration testing, but changing the current way will likely require some bigger changes. Let's tackle that as a different issue after this one if the need arises. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12614263",
            "date": "2008-07-17T07:27:38+0000",
            "content": "Attaching a new tarball with the monolithic spring jar replaced with the module jars required for the application. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12695093",
            "date": "2009-04-02T19:02:13+0000",
            "content": "Lars, how come you opted to use HTTPClient directly instead of using SolrJ? (I see no mention of solrj in the manual either).  Or perhaps you have a SolrAdapter version that uses SolrJ by now?  Thanks.  "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12695101",
            "date": "2009-04-02T19:24:08+0000",
            "content": "I basically chose not to use SolrJ because the UI was meant to be separate and not depend on Solr \u2013 this is only part of a bigger project (not all of it was open sourced). I think there might have been a specific issue (something that didn't work properly or wasn't supported at that time in SolrJ), but I can't remember now.\n\nI don't have a version of SolrAdapter which uses SolrJ, but I think that it would be quite straightforward to implement it. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-13289026",
            "date": "2012-06-05T00:47:00+0000",
            "content": "Please close this. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13289307",
            "date": "2012-06-05T10:17:15+0000",
            "content": "Velocity & etc do this I think. "
        }
    ]
}