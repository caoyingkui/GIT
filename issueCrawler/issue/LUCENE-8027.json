{
    "id": "LUCENE-8027",
    "title": "Do not cache clauses if they might make the query more than X times slower",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Improvement",
        "components": [],
        "fix_versions": []
    },
    "description": "Query caching can have a negative impact on tail latencies as the clause that is cached needs to be entirely consumed. Maybe we could leverage the fact that we can know the lead cost from any scorer now (LUCENE-7897) in order to implement heuristics that would look  like \"do not cache clause X if its cost is 10x greater than the cost of the entire query\". This would make sure that a fast query can not become absurdly slow just because it had to cache a costly filter. The filter will need to wait for a more costly query to be cached, or might never be cached at all.",
    "attachments": {
        "LUCENE-8027.patch": "https://issues.apache.org/jira/secure/attachment/12895613/LUCENE-8027.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16237466",
            "date": "2017-11-03T11:14:42+0000",
            "content": "Here is a patch that demonstrates the idea. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16268860",
            "date": "2017-11-28T15:00:13+0000",
            "content": "I'll commit it shortly if there are no objections. ",
            "author": "Adrien Grand"
        }
    ]
}