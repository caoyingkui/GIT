{
    "id": "SOLR-4278",
    "title": "Spellchecker correctlySpelled flag is improperly false in many cases",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "I issued a request to the /spell request handler with no misspellings, but the response still have a value of \"false\" for the \"correctlySpelled\" flag.\n\nUsing the Solr 4.0 example, I added some mini documents:\n\n\ncurl http://localhost:8983/solr/update?commit=true -H 'Content-type:application/csv' -d '\nid,name\nspel-1,aardvark abacus ball bill cat cello\nspel-2,abate accord band bell cattle check\nspel-3,adorn border clean clock'\n\n\n\nThen I issued this request to the /spell handler:\n\n\ncurl \"http://localhost:8983/solr/spell/?q=abate&indent=true\"\n\n\n\nThe response indicates that no corrections were needed, but the \"correctlySpelled\" flag is \"false\" when it should be \"true\".\n\n\n<lst name=\"spellcheck\">\n  <lst name=\"suggestions\">\n    <bool name=\"correctlySpelled\">false</bool>\n  </lst>\n</lst>",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "James Dyer",
            "id": "comment-13545982",
            "date": "2013-01-07T15:56:31+0000",
            "content": "The semantics of the \"correctlySpelled\" flag, depend on whether or not \"maxResultsForSuggest\" is specified.  If this is omitted entirely, then the legacy behavior (pre-4.0) prevails.  Generally, this means if at least 1 word was not in the dictionary, then it is \"false\", otherwise \"true\".  This is regardless of the # of hits you receive.  If \"maxResultsForSuggest=n\" is specified, then when receiving n or more hits, it is set to \"true\", otherwise \"false\".  (See http://wiki.apache.org/solr/SpellCheckComponent#spellcheck.maxResultsForSuggest and SOLR-2585).\n\nWhen you take in account that some users are doing straight Boolean queries with mm=100% while others have low mm values and expect that some user keywords will not match anything, then the whole idea of declaring a query \"correctlySpelled\" or not black-and-white.\n\nI could see a possible enhancement being to be able to specify a percentage for \"maxResultsForSuggest\".  \"This query is correctly spelled if the hit count total at least 1/1000% or the documents in the index\", or something like that. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13545986",
            "date": "2013-01-07T16:02:10+0000",
            "content": "\nI could see a possible enhancement being to be able to specify a percentage for \"maxResultsForSuggest\". \"This query is correctly spelled if the hit count total at least 1/1000% or the documents in the index\", or something like that.\n\nThat would be an improvement indeed but i think it would be even better to calculate the ratio on the number of docs returned for the filter query. Then it would also work for end-users searching subsections of an index. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13546024",
            "date": "2013-01-07T16:47:45+0000",
            "content": "I'll retest my scenario - I think that I did not have the query component configured at the time, so hits for each collationQuery were zero even though the terms were in the dictionary field. If that's the case, maybe we just have a doc deficiency in that we need to clearly document what options require the query component to be configured. And the example /spell handler should either have the query component configured, or at least have comments about what is needed for certain features to work properly. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13546032",
            "date": "2013-01-07T16:52:06+0000",
            "content": "James, I take your comments, but still... if there are no mispellings detected and no suggestions reported (the example I gave), it seems silly that correctlySpelled is still false! "
        },
        {
            "author": "James Dyer",
            "id": "comment-13546067",
            "date": "2013-01-07T17:29:25+0000",
            "content": "Jack, In your example, did you have maxResultsForSuggest specified?  If so, maybe we can change how this functions in regard to the \"correctlySpelled\" flag.  We can say that if all of the terms are in the index and no words are suggested, then it is always \"true\", even if the hits were below the threshold?  (Could you write a failing unit test for this, if not supply a full patch?)\n\nPersonally, I wouldn't mind just getting rid of \"correctlySpelled\" because to me its meaningless.  Really clients should be making this call for themselves, based on the # of hits and what comes back in for spelling suggestions / collations.  "
        },
        {
            "author": "James Dyer",
            "id": "comment-13546072",
            "date": "2013-01-07T17:32:02+0000",
            "content": "\nit would be even better to calculate the ratio on the number of docs returned for the filter query.\nAgreed, but this would probably mean issuing an additional query (internally) each time a low hit-count result is encountered, just to calculate the ratio?  Or cache the \"hit-count-with-this-combination-of-fqs\" somewhere?  It just seems expensive and maybe not adding all that much more value? "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13546306",
            "date": "2013-01-07T21:46:06+0000",
            "content": "Yes, something like that. It would be helpful if we can take the number of hits for a single filter from the filterCache itself.\n\nAt least in our case this would certainly add a lot of value. >99% of our end-users search within one or more filters of which one is always unique. The number of documents for each of those unique filter varies significantly ranging from 300 to 3.000.000 documents in which they search. The maxResultsForSuggest is set to a reasonable low value so it kind of works fine but sometimes leads to undesired suggestions for a large subcorpus that has more misspellings. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13546322",
            "date": "2013-01-07T22:03:55+0000",
            "content": "Markus,  Put that way, this does seem like a desirable feature to have.  Can you put your explanation into a \"new feature\" jira and maybe someone will work on it someday?  Of course if you include a patch with a unit test... "
        },
        {
            "author": "James Dyer",
            "id": "comment-13546325",
            "date": "2013-01-07T22:11:52+0000",
            "content": "Markus,  You could work around your situation also, if when someone logs into your application and queries for the first time you first find out how big that user's subcorpus is. Then you can override \"maxResultsForSuggest\" when issuing queries if whatever you have set for default is unreasonable for that user.  So your application would have to issue issue 1 extra query for each user's session and store it somewhere.  It would be better of course for it to be automatic but developing the feature you want might not be trivial. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13546334",
            "date": "2013-01-07T22:17:58+0000",
            "content": "Thanks James. We can indeed work around the issue but haven't had the time to do so and also desire the automatic approach. I've created SOLR-4280 to track the issue. Hopefully i might be able to provide a patch that makes sense but the spellchecker is not my cup of tea but i hope to give it a try at  least. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13546423",
            "date": "2013-01-07T23:57:40+0000",
            "content": "For reference, as I said, I was using the Solr 4.0 example. Here is the /spell handler from there:\n\n\n <requestHandler name=\"/spell\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <!-- Solr will use suggestions from both the 'default' spellchecker\n           and from the 'wordbreak' spellchecker and combine them.\n           collations (re-written queries) can include a combination of\n           corrections from both spellcheckers -->\n      <str name=\"spellcheck.dictionary\">default</str>\n      <str name=\"spellcheck.dictionary\">wordbreak</str>\n      <str name=\"spellcheck\">on</str>\n      <str name=\"spellcheck.extendedResults\">true</str>       \n      <str name=\"spellcheck.count\">10</str>\n      <str name=\"spellcheck.alternativeTermCount\">5</str>\n      <str name=\"spellcheck.maxResultsForSuggest\">5</str>       \n      <str name=\"spellcheck.collate\">true</str>\n      <str name=\"spellcheck.collateExtendedResults\">true</str>  \n      <str name=\"spellcheck.maxCollationTries\">10</str>\n      <str name=\"spellcheck.maxCollations\">5</str>         \n    </lst>\n    <arr name=\"last-components\">\n      <str>spellcheck</str>\n    </arr>\n  </requestHandler>\n\n\n\nSo, spellcheck.maxResultsForSuggest was 5 when I ran the original example. "
        },
        {
            "author": "scott hobson",
            "id": "comment-13759276",
            "date": "2013-09-05T18:09:29+0000",
            "content": "i disagree with this statement: Personally, I wouldn't mind just getting rid of \"correctlySpelled\" because to me its meaningless. Really clients should be making this call for themselves, based on the # of hits and what comes back in for spelling suggestions / collations.\n\nin my case there are tons of similar words and i get suggested words for almost everything that gets submitted. i absolutely need a way to tell the difference between a correctly spelled word with suggestions and an incorrectly spelled word that has corrections/suggestions.  "
        },
        {
            "author": "James Dyer",
            "id": "comment-13759297",
            "date": "2013-09-05T18:34:29+0000",
            "content": "Scott,\n\nYou can tell if the user's keywords exist in the index on a term-by-term basis by specifying \"spellcheck.extendedResults=true\".  Then look under each <lst name=\"ORIG_KEYWORD\"> for <int name=\"origFreq\">0</int>.  If \"origFreq\" is 0, then it is not in the dictionary.  Of course, this doesn't really tell you if the keyword is correctly spelled!  Perhaps it is correct but the user is looking for something you don't have.  Or maybe it is incorrect in context but occurs in the dictionary.  In your case, you may wish to turn off \"alternateTermCount\" or set it to a very low value.  This will reduce junk suggestions. "
        },
        {
            "author": "scott hobson",
            "id": "comment-13759535",
            "date": "2013-09-05T22:16:22+0000",
            "content": "James, I think I can work with that. Thanks for the tip.  "
        },
        {
            "author": "CharlesReitzel",
            "id": "comment-14320574",
            "date": "2015-02-13T19:02:21+0000",
            "content": "I'm finding it extremely difficult to get frequency information in the results. \n\nFirst, SpellCheckComponent.toNamedList() will always mark the overall result correctly spelled if any results are returned (or > maxResultsForSuggest).   There is logic to detect if there are any missing tokens, but it nothing is done with the information.\n\nSecond, the Suggester does not provide original token frequency information.  In fact, I haven't been able to get any spell checker to set this information correctly.\n\nThird, regardless of the setting for exactMatchFirst, SpellCheckComponent removes suggestions that match the search term.\n\nErgo, there is no way to get the term frequency information necessary to make a good decision about which terms to keep and which to throw away.\n\nWhy bother? In our case, it is because the spellcheck component will not honor any filter queries, etc.  To get these types of suggestions, the valid/existing terms from the initial query can be passed to a subsequent phase that uses ngrams and facets to produce more useful suggestions. "
        },
        {
            "author": "James Dyer",
            "id": "comment-15045212",
            "date": "2015-12-07T16:37:33+0000",
            "content": "The 4.0 /spell handler had \"maxResultsForSuggest\" set to 5, meaning that we need 5 hits to set \"correctlySpelled\" to true.  Had \"maxResultsForSuggest\" not been specified, the expected behavior would have occurred.\n\nThe behavior of the \"correctlySpelled\" flag is given here: https://wiki.apache.org/solr/SpellCheckComponent#spellcheck.maxResultsForSuggest . "
        }
    ]
}