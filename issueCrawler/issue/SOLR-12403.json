{
    "id": "SOLR-12403",
    "title": "CSVLoader cannot split fields that contain new lines",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "update"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "7.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "It is possible to import CSV that contains newlines in the field content, it just needs to be escaped.\n\nHowever, if that field is split, any content from lines after the first is lost. It does not matter if the split character is new line or anything else, existing or not.\n\nExample\n\nid,text1,text2\n1,\"t1.line1\nt1.line2\nt1.line3\",t2\n2,t1.oneline,t2.oneline\n\n\n\n// bin/solr create -c splittest\n// bin/post -c splittest test.csv (creates \"text1\":[\"t1.line1\\nt1.line2\\nt1.line3\"])\n// bin/post -c splittest -params \"f.text1.split=true&f.text1.separator=^\" test.csv (creates \"text1\":[\"t1.line1\"])",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-26T02:42:25+0000",
            "content": "I believe the problem is caused by CSVLoaderBase.FieldSplitter calling parser.getLine().\n\nThat call is used in the outer code but the encapsulator character in the parser triggers the branch that consumes the newline as part of the field. However, when we call the parser again recursively on that field (with new lines), the parser does not know it was encapsulated and just reads the first line of the value, ignoring the rest. ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-16491474"
        }
    ]
}