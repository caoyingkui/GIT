{
    "id": "SOLR-2633",
    "title": "Make SolrDispatchFilter testable and add tests",
    "details": {
        "affect_versions": "3.1,                                            3.2,                                            3.3",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I have ideas for possible extensions/enhancements to the SolrDispatchFilter. However, as it doesn't have any tests, making safe enhancements is difficult. Given its monolithic nature, it is hard to test. Therefore, I am proposing to refactor it to make it testable, and to provide tests for it.",
    "attachments": {
        "SOLR-2633-tests-only.patch": "https://issues.apache.org/jira/secure/attachment/12485297/SOLR-2633-tests-only.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Edoardo Tosca",
            "id": "comment-13059833",
            "date": "2011-07-05T10:55:25+0000",
            "content": "As a first step i'm going to write some tests to cover the current code. In particular i'm trying to test the behaviour of doFilter method which is quite long and complex.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13059877",
            "date": "2011-07-05T12:54:04+0000",
            "content": "Therefore, I am proposing to refactor it to make it testable, and to provide tests for it.\n\n+1 "
        },
        {
            "author": "Edoardo Tosca",
            "id": "comment-13059976",
            "date": "2011-07-05T16:03:41+0000",
            "content": "This is a first cut. The patch contains a new test class: SolrDispatchFilterTest.\nAt the moment there are 4 tests which covers some behaviour of the public method doFilter "
        },
        {
            "author": "Edoardo Tosca",
            "id": "comment-13061912",
            "date": "2011-07-08T11:47:00+0000",
            "content": "This second cut contains more tests which are convering about 80% of the code of the class under test. "
        },
        {
            "author": "Edoardo Tosca",
            "id": "comment-13061915",
            "date": "2011-07-08T11:56:58+0000",
            "content": "I'm still struggling in trying to understand some bits of code in the doFilter method.\nDoes anyone have an example of real usage of the management path?\nI'd like to cover that before refactoring.\nthe \"incriminated\" piece of code is in SolrDispatchFilter, line 164-168 (pasted below):\n\n \n// check for management path\nString alternate = cores.getManagementPath();\nif (alternate != null && path.startsWith(alternate)) {\n   path = path.substring(0, alternate.length());\n}\n\n \n\nThanks "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13062012",
            "date": "2011-07-08T15:25:15+0000",
            "content": "The heck if I know.\n\nThe comment says:\n\n\n  /**\n   * Sets the alternate path for multicore handling:\n   * This is used in case there is a registered unnamed core (aka name is \"\") to\n   * declare an alternate way of accessing named cores.\n   * This can also be used in a pseudo single-core environment so admins can prepare\n   * a new version before swapping.\n   * @param path\n   */\n\n\n\nBut the code is:\n\n\n        // check for management path\n        String alternate = cores.getManagementPath();\n        if (alternate != null && path.startsWith(alternate)) {\n          path = path.substring(0, alternate.length());\n        }\n\n\n\nThis simply checks if the path starts with your management path (say /manage), and then sets the path to the management path - I don't see how this triggers or does anything later though...\n\nDoes anyone out there use this or know what if it does/did work? Perhaps it should just go away. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13062033",
            "date": "2011-07-08T15:48:16+0000",
            "content": "I think it's great that this issue is going to make it more testable. But why is SolrDispatchFilter a filter in the first place instead of a Servlet? This is somewhat off-topic, but if perhaps it should be a servlet then this issue is majorly disrupted by such a change. "
        },
        {
            "author": "Edoardo Tosca",
            "id": "comment-13062034",
            "date": "2011-07-08T15:52:14+0000",
            "content": "\nThis simply checks if the path starts with your management path (say /manage), and then sets the path to the management path - I don't see how this triggers or does anything later though...\n\nexactly right. I saw the comment (i forgot to paste it previously), i tried to add a managementPath=\"/manage\" attribute to solr.xml and see what it could trigger but i haven't discovered anything \nthanks "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13062037",
            "date": "2011-07-08T15:55:46+0000",
            "content": "But why is SolrDispatchFilter a filter in the first place instead of a Servlet?\n\nIt used to be a Servlet once. I cannot remember the history of the change - hossman probably does. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13062222",
            "date": "2011-07-08T22:10:16+0000",
            "content": "the change to a filter was in SOLR-104\n\nsome of the history may be spelled out there, or on the mailing list arround the same time, but i believe the crux of hte issue was wanting to ensure we could support dispatching to request handlers using path basd names (ie: http://host:8983/solr/admin/foo -> <requestHandler name=\"/admin/foo\"/>) and still allow fallthrough to other jsps / servlets if a requestHandler with teh specified name couldn't be found.\n\nusing a Filter made this a little saner as i recall, and when multicore support was added, gave us the added bonus of being able to ensure that jsps could be used even when the base path was the core name. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13062261",
            "date": "2011-07-09T00:19:14+0000",
            "content": "Oh man... SOLR-104!\n\nThe key reason was backwards compatibility.  At the time there was a servlet mapping /select  \u2013  Changing to a filter let us map /* and optionally override the leggacy servlet if that was configured in solrconfg (handleSelect=true)\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13062264",
            "date": "2011-07-09T00:23:50+0000",
            "content": "ensure we could support dispatching to request handlers using path basd names\n\nFYI, either servlets or filters would allow us to do this (assuming we map /solr/*) but a filter allows things to fall though to other servlets/filters if we don't match something with the path based request handlers.  As an asside, this is how Apache Wicket works. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106342",
            "date": "2011-09-16T14:50:40+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13149144",
            "date": "2011-11-12T20:42:14+0000",
            "content": "More coming here? "
        },
        {
            "author": "Edoardo Tosca",
            "id": "comment-13155827",
            "date": "2011-11-23T11:57:22+0000",
            "content": "Hey, sorry for the silence, i've been very busy in the past few months.\nI'm working on it, and i hope to submit something asap.\nI'll keep you posted "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13177264",
            "date": "2011-12-29T16:48:03+0000",
            "content": "Cool - thanks Edoardo - look forward to it. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13407644",
            "date": "2012-07-06T01:21:12+0000",
            "content": "Ping? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412184",
            "date": "2012-07-11T22:26:16+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429731",
            "date": "2012-08-07T03:42:32+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13445546",
            "date": "2012-08-31T01:16:55+0000",
            "content": "There is no indication that anyone is actively working on this issue, so removing 4.0 from the fixVersion. "
        }
    ]
}