{
    "id": "SOLR-9448",
    "title": "[subquery] calls another collection fails with \"undefined field\" or NPE from mergeIds",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.4",
            "7.0"
        ],
        "affect_versions": "6.1,                                            6.2",
        "status": "Closed",
        "resolution": "Workaround",
        "priority": "Major"
    },
    "description": "If subquery collection has a different unique key field name (let's say foo_id is different to id in primary collection), you've got NullPoniterException from QueryComponent.mergeIds(). To accommodate the difference between uniqueKey field names between collections, add the following parameters foo.fl=id:foo_id&foo.distrib.singlePass=true. The former one renames uniqueKey field, the later switches to single pass search. There is no way to rename field in default processing. \nIn a rare case when a collection under subquery has no unqueKey at all, it leads to something like \"undefined field\", but it's not going to work anyway.",
    "attachments": {
        "SOLR-9448.patch": "https://issues.apache.org/jira/secure/attachment/12827165/SOLR-9448.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-06T10:37:11+0000",
            "author": "Mikhail Khludnev",
            "content": "ok. reproduced it with attached test case. The synopsis is: \n\nif we request one collection from another /people/select?q=department_text:foo&collection=departments the query is unnecessary parsed in people collection where it can hit a wall if schemas are different. \n\n  @Test\n  public void testJustCrossCollectionRequest() throws SolrServerException, IOException { \n    cluster.getSolrClient().request(new QueryRequest(\n        params( \"q\",\"departments_text:foo\",\n                     \"collection\",\"departments\")\n    ), \"people\");\n  }\n\n\n\n\norg.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://127.0.0.1:52548/solr/people_shard1_replica1: undefined field departments_text\n\tat __randomizedtesting.SeedInfo.seed([1E3C35306C9B6800:E9590C1B5403419]:0)\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:608)\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:261)\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:250)\n\tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.doRequest(LBHttpSolrClient.java:415)\n\tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(LBHttpSolrClient.java:367)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.sendRequest(CloudSolrClient.java:1280)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:1050)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:992)\n\tat org.apache.solr.response.transform.TestSubQueryTransformerDistrib.testJustCrossCollectionRequest(TestSubQueryTransformerDistrib.java:200)\n\nSo, suggested workaround is just to declare fields from the secondary collection or wildcard just to pass unnecessary query parsing.\n\nQuestion to developers\nDon't we need to bypass query parsing in QueryComponent.prepare() when it's followed by distributed processing? If we do, I can come up with the patch. ",
            "id": "comment-15467083"
        },
        {
            "date": "2016-09-06T11:06:21+0000",
            "author": "Mikhail Khludnev",
            "content": "\n  @Test\n  public void testJustCrossCollectionRequest() throws SolrServerException, IOException { \n    cluster.getSolrClient().request(new QueryRequest(\n        params( \"q\",\"*:*\",\n                     \"collection\",\"departments\")\n    ), \"people\");\n  }\n\n\n\nif we bypassing query parsing stage, we hit NPE in reduce phase because primary collection ID field name is used for reducing shards results.\n\n\n [departments_shard1_replica1]  webapp=/solr path=/select params=\nUnknown macro: {distrib=false&_stateVer_=people} \n hits=8 status=0 QTime=45\n43234 ERROR (qtp2060379030-30) [n:127.0.0.1:53331_solr c:people s:shard1 r:core_node1 x:people_shard1_replica2] o.a.s.h.RequestHandlerBase java.lang.NullPointerException\n\tat org.apache.solr.handler.component.QueryComponent.mergeIds(QueryComponent.java:1113)\n\tat org.apache.solr.handler.component.QueryComponent.handleRegularResponses(QueryComponent.java:757)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:736)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:422)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:154)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2107)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:653)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:460)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:257)\n\nShouldn't it be fixed?  ",
            "id": "comment-15467140"
        },
        {
            "date": "2016-09-06T11:22:50+0000",
            "author": "Mikhail Khludnev",
            "content": "There reason is that we set caller collection uniqKey even it's different in another (calee) collection.  \nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java#L914 ",
            "id": "comment-15467176"
        },
        {
            "date": "2016-12-23T20:30:34+0000",
            "author": "Mikhail Khludnev",
            "content": "attaching simpler approach to reproduce:\n\n\n15551 ERROR (qtp1315527986-39) [n:127.0.0.1:56344_solr c:people s:shard2 r:core_node1 x:people_shard2_replica1] o.a.s.h.RequestHandlerBase java.lang.NullPointerException\n\tat org.apache.solr.handler.component.QueryComponent.mergeIds(QueryComponent.java:1118)\n\tat org.apache.solr.handler.component.QueryComponent.handleRegularResponses(QueryComponent.java:763)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:742)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:422)\n\n ",
            "id": "comment-15773633"
        },
        {
            "date": "2016-12-24T20:32:29+0000",
            "author": "Mikhail Khludnev",
            "content": "SOLR-9448.patch proposes a workaround (when a collection for subquery has a different uniqueKey):\n\n\tadd field alias for expected uniqueKey: subq.fl=id:subq_coll_id\n\tadd subq.distrib.singlePass=true\n\n\n ",
            "id": "comment-15775395"
        },
        {
            "date": "2016-12-25T07:37:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 54d8574f9662f89598a06fbb47de9a376ef5d2bc in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=54d8574 ]\n\nSOLR-9448: providing a test for workaround of a differently named uniqueKey field ",
            "id": "comment-15776104"
        },
        {
            "date": "2016-12-25T08:20:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6cf1f0f51f5f11750b4d9d9ebe157453550b76eb in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6cf1f0f ]\n\nSOLR-9448: providing a test for workaround of a differently named uniqueKey field ",
            "id": "comment-15776149"
        }
    ]
}