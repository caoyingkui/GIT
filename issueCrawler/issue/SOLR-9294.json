{
    "id": "SOLR-9294",
    "title": "DateMathParser Milliseconds separator",
    "details": {
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.1",
        "status": "Closed",
        "resolution": "Not A Problem",
        "priority": "Minor"
    },
    "description": "DateMathParser is no longer accepting the format xxxx-xx-xxTxx:xx:xx:xxxZ whereas it did in the past (5.3 works).  Changing the milliseconds separator to \".\" fixes the issue, but this is a time consuming change for organizations that use many data consumers.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-07-11T16:11:17+0000",
            "author": "Erick Erickson",
            "content": "That might be true of comma too, i.e.\nxxxx-xx-xxTxx:xx:xx,xxxZ\n\nAt least a program I'm pretty sure I used to use to populate test indexes suddenly threw a parsing error, I kind of assumed I'd inadvertently changed ti but this JIRA makes me wonder.\n\nJust FYI, I don't really have a strong opinion either way. ",
            "id": "comment-15371077"
        },
        {
            "date": "2016-07-11T16:31:21+0000",
            "author": "Hoss Man",
            "content": "That (ie: \":\" between seconds and milliseconds) was never an officially supported format .. it was certainly never documented to be valid.\n\n6.0 changed a lot of internal date parsing/formatting code as part of SOLR-8904 to fix numerious bugs, fixing this sloppy parsing logic was evidently a side effect of that issue. ",
            "id": "comment-15371108"
        },
        {
            "date": "2016-07-11T18:07:43+0000",
            "author": "Curtis Fehr",
            "content": "Hoss Man's answer is satisfactory and makes perfect sense, however, would it be beneficial to add additional format support? ",
            "id": "comment-15371308"
        },
        {
            "date": "2016-07-11T18:21:56+0000",
            "author": "Hoss Man",
            "content": "For updates it's already possible to configure your update processor chain to accept a wide variety of date formats...\n\nhttps://lucene.apache.org/solr/6_1_0/solr-core/org/apache/solr/update/processor/ParseDateFieldUpdateProcessorFactory.html\n\n...as a general purpose feature of date parsing/formatting in all aspects of request handling (ie: query parsing, DateRangeField, xml/json response writting, etc...) the scope of the problem gets much bigger.  \n\nI personally think it adds a lot of complexity (both internally and for clients) and would prefer to stick to one canonical date representation. ",
            "id": "comment-15371352"
        }
    ]
}