{
    "id": "LUCENE-4678",
    "title": "FST should use paged byte[] instead of single contiguous byte[]",
    "details": {
        "components": [
            "core/FSTs"
        ],
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The single byte[] we use today has several limitations, eg it limits us to < 2.1 GB FSTs (and suggesters in the wild are getting close to this limit), and it causes big RAM spikes during building when a the array has to grow.\n\nI took basically the same approach as LUCENE-3298, but I want to break out this patch separately from changing all int -> long for > 2.1 GB support.",
    "attachments": {
        "LUCENE-4678.patch": "https://issues.apache.org/jira/secure/attachment/12564244/LUCENE-4678.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-10T20:10:51+0000",
            "content": "Patch, I think it's close to ready (no format change for the FST so no back compat). ",
            "author": "Michael McCandless",
            "id": "comment-13550357"
        },
        {
            "date": "2013-01-10T20:11:29+0000",
            "content": "Duh, wrong patch ... this one should be right. ",
            "author": "Michael McCandless",
            "id": "comment-13550358"
        },
        {
            "date": "2013-01-10T22:07:24+0000",
            "content": "This looks very cool! I looked at the patch briefly but I need to apply it to make sense of the whole picture.  \n\n+              while(skip > 0) {\n+                buffer.writeByte((byte) 0);\n+                skip--;\n+              }\n\n\n\nthis doesn't look particularly efficient but I didn't get the context where it's actually used from the patch so maybe it's all right. ",
            "author": "Dawid Weiss",
            "id": "comment-13550488"
        },
        {
            "date": "2013-01-11T20:59:52+0000",
            "content": "this doesn't look particularly efficient\n\nI agree ... I have a new patch shortly that fixes this (goes back to writing directly into the BytesStore instead of buffering first in RAMOutputStream)...  ",
            "author": "Michael McCandless",
            "id": "comment-13551512"
        },
        {
            "date": "2013-01-11T21:23:12+0000",
            "content": "New patch, fixing the double-buffering the old patch had added, and adding a test for the new BytesStore ...\n\nI think it's ready!\n\nI'll commit only to trunk for now ... and backport to 4.2 once 4.1 branches and once this has baked some in trunk ... ",
            "author": "Michael McCandless",
            "id": "comment-13551533"
        },
        {
            "date": "2013-01-12T13:53:08+0000",
            "content": "\nI'll commit only to trunk for now ... and backport to 4.2 once 4.1 branches and once this has baked some in trunk ...\n\n+1... the copyBytes is frightening though!\n\nWhat do you think of the FST.BytesReader -> FSTBytesReader? I'm just thinking it causes a lot of \"api noise\" (you can see it in the patch).\nUnfortunately lots of users have to create this thing to pass to methods on FST (e.g. findTargetArc).\n\nSo if we kept it as FST.BytesReader they would be largely unaffected? ",
            "author": "Robert Muir",
            "id": "comment-13551929"
        },
        {
            "date": "2013-01-12T15:18:12+0000",
            "content": "the copyBytes is frightening though!\n\nI know!  But hopefully the random test catches any problems w/ it ... jenkins will tell us.\n\nSo if we kept it as FST.BytesReader they would be largely unaffected?\n\n+1, I moved back to that ... no more noise ... I'll attach new patch shortly. ",
            "author": "Michael McCandless",
            "id": "comment-13551941"
        },
        {
            "date": "2013-01-12T15:25:59+0000",
            "content": "New patch, move BytesReader back under FST.  I think it's ready. ",
            "author": "Michael McCandless",
            "id": "comment-13551943"
        },
        {
            "date": "2013-01-12T15:58:27+0000",
            "content": "[trunk commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1432459\n\nLUCENE-4678: use paged byte[] under the hood for FST ",
            "author": "Commit Tag Bot",
            "id": "comment-13551947"
        },
        {
            "date": "2013-01-12T21:34:48+0000",
            "content": "Patch, fixing FST.pack to not double-buffer again, using the new BytesStore.truncate method to roll back the last N bytes ... ",
            "author": "Michael McCandless",
            "id": "comment-13552073"
        },
        {
            "date": "2013-01-13T15:52:11+0000",
            "content": "[trunk commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1432646\n\nLUCENE-4678: add BytesStore.truncate and use it to not double-buffer during pack ",
            "author": "Commit Tag Bot",
            "id": "comment-13552224"
        },
        {
            "date": "2013-01-18T14:12:14+0000",
            "content": "[branch_4x commit] Robert Muir\nhttp://svn.apache.org/viewvc?view=revision&revision=1435141\n\nLUCENE-4677, LUCENE-4682, LUCENE-4678, LUCENE-3298: Merged /lucene/dev/trunk:r1432459,1432466,1432472,1432474,1432522,1432646,1433026,1433109 ",
            "author": "Commit Tag Bot",
            "id": "comment-13557230"
        },
        {
            "date": "2013-02-08T16:01:03+0000",
            "content": "Looks like this can be resolved? ",
            "author": "Steve Rowe",
            "id": "comment-13574567"
        },
        {
            "date": "2013-05-10T10:32:59+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653784"
        }
    ]
}