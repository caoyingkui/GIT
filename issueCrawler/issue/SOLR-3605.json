{
    "id": "SOLR-3605",
    "title": "Problem with group paging (or JavaBinCodec conversion error for the request)",
    "details": {
        "affect_versions": "3.5,                                            3.6",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "clients - java",
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "With Solr 3.6 the following Solr request fails:\n(using the example configuration)\n\nSolrQuery solrQuery = new SolrQuery();\nsolrQuery.setQuery(\"tshirt\");\nsolrQuery.setQueryType(\"search\");\nsolrQuery.add(GroupParams.GROUP, \"true\");\nsolrQuery.add(GroupParams.GROUP_FORMAT, \"grouped\");\nsolrQuery.add(GroupParams.GROUP_MAIN, \"true\");\nsolrQuery.add(GroupParams.GROUP_FIELD, \"manu_exact\");\nsolrQuery.setStart(30);\nsolrQuery.setRows(30);\n\norg.apache.solr.client.solrj.SolrServerException: Error executing query\n\tat org.apache.solr.client.solrj.request.QueryRequest.process(QueryRequest.java:95) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.SolrServer.query(SolrServer.java:311) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n//\tat com.core.util.integration.solr.dao.SolrUtil.executeQuery(SolrUtil.java:204) ~[classes/:na]\n//\tat com.blapit.integration.v1.deals.restendpoints.endpoints.test.DealsByKeywordSearchEndpointFuncTest.test(DealsByKeywordSearchEndpointFuncTest.java:40) [classes/:na]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_147-icedtea]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_147-icedtea]\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_147-icedtea]\n\tat java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_147-icedtea]\n\tat junit.framework.TestCase.runTest(TestCase.java:168) [junit-4.10.jar:na]\n\tat junit.framework.TestCase.runBare(TestCase.java:134) [junit-4.10.jar:na]\n\tat junit.framework.TestResult$1.protect(TestResult.java:110) [junit-4.10.jar:na]\n\tat junit.framework.TestResult.runProtected(TestResult.java:128) [junit-4.10.jar:na]\n\tat junit.framework.TestResult.run(TestResult.java:113) [junit-4.10.jar:na]\n\tat junit.framework.TestCase.run(TestCase.java:124) [junit-4.10.jar:na]\n\tat junit.framework.TestSuite.runTest(TestSuite.java:243) [junit-4.10.jar:na]\n\tat junit.framework.TestSuite.run(TestSuite.java:238) [junit-4.10.jar:na]\n\tat org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) [junit-4.10.jar:na]\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) [.cp/:na]\nCaused by: java.lang.ClassCastException: java.lang.String cannot be cast to java.util.List\n\tat org.apache.solr.common.util.JavaBinCodec.readSolrDocumentList(JavaBinCodec.java:340) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:207) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.readOrderedMap(JavaBinCodec.java:111) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:174) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.unmarshal(JavaBinCodec.java:102) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.impl.BinaryResponseParser.processResponse(BinaryResponseParser.java:41) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.impl.CommonsHttpSolrServer.request(CommonsHttpSolrServer.java:469) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.impl.CommonsHttpSolrServer.request(CommonsHttpSolrServer.java:249) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.request.QueryRequest.process(QueryRequest.java:89) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\t... 22 common frames omitted\n\nIf I change the start parameter to something else:\n\norg.apache.solr.client.solrj.SolrServerException: Error executing query\n\tat org.apache.solr.client.solrj.request.QueryRequest.process(QueryRequest.java:95) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.SolrServer.query(SolrServer.java:311) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n//\tat com.core.util.integration.solr.dao.SolrUtil.executeQuery(SolrUtil.java:204) ~[classes/:na]\n//\tat com.blapit.integration.v1.deals.restendpoints.endpoints.test.DealsByKeywordSearchEndpointFuncTest.test(DealsByKeywordSearchEndpointFuncTest.java:40) [classes/:na]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_147-icedtea]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_147-icedtea]\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_147-icedtea]\n\tat java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_147-icedtea]\n\tat junit.framework.TestCase.runTest(TestCase.java:168) [junit-4.10.jar:na]\n\tat junit.framework.TestCase.runBare(TestCase.java:134) [junit-4.10.jar:na]\n\tat junit.framework.TestResult$1.protect(TestResult.java:110) [junit-4.10.jar:na]\n\tat junit.framework.TestResult.runProtected(TestResult.java:128) [junit-4.10.jar:na]\n\tat junit.framework.TestResult.run(TestResult.java:113) [junit-4.10.jar:na]\n\tat junit.framework.TestCase.run(TestCase.java:124) [junit-4.10.jar:na]\n\tat junit.framework.TestSuite.runTest(TestSuite.java:243) [junit-4.10.jar:na]\n\tat junit.framework.TestSuite.run(TestSuite.java:238) [junit-4.10.jar:na]\n\tat org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) [junit-4.10.jar:na]\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) [.cp/:na]\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) [.cp/:na]\nCaused by: java.lang.IndexOutOfBoundsException: Index: 16, Size: 14\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:604) ~[na:1.7.0_147-icedtea]\n\tat java.util.ArrayList.get(ArrayList.java:382) ~[na:1.7.0_147-icedtea]\n\tat org.apache.solr.common.util.JavaBinCodec.readExternString(JavaBinCodec.java:708) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:178) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.readSolrDocumentList(JavaBinCodec.java:340) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:207) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.readOrderedMap(JavaBinCodec.java:111) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:174) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.common.util.JavaBinCodec.unmarshal(JavaBinCodec.java:102) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.impl.BinaryResponseParser.processResponse(BinaryResponseParser.java:41) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.impl.CommonsHttpSolrServer.request(CommonsHttpSolrServer.java:469) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.impl.CommonsHttpSolrServer.request(CommonsHttpSolrServer.java:249) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\tat org.apache.solr.client.solrj.request.QueryRequest.process(QueryRequest.java:89) ~[apache-solr-solrj-3.6.0.jar:3.6.0 1310449 - rmuir - 2012-04-06 11:34:08]\n\t... 22 common frames omitted\n\nThe following observations might help finding the problem:\n1) The query works when not using SolrJ (remember Solr will append &wt=javabin&version=2 to the query sent to Solr) - thereby indicating that this is possibly not a problem with the group functionality itself but with the JavaBinCodec.\n2) The responses I get from the server using the JavaBinCodec differs between the requests (even though they all should return zero results) - so there is a difference in the response from a server which can't be parsed. Maybe these differences in the responses received from the server is correct and the error is in the clients JavaBinCodec?\n3) Still searching for a keyword but setting the start parameter to zero - the query succeeds.\n4) Not searching for a keyword all paging parameters work.\n\nHope that helps...  So iets either in the client's JavaBinCodec, the server's JavaBinCodec, or something in the group functionality itself.  And the issue only appears (as indicated in 3 and 4 above) when doing keyword searches for pages that don't start at zero.\n\nThank you very much for any help.  Please let me know if I can assist with anything.",
    "attachments": {
        "TestBinaryResponseWriterError2.txt": "https://issues.apache.org/jira/secure/attachment/12538249/TestBinaryResponseWriterError2.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Serdyn du Toit",
            "id": "comment-13424374",
            "date": "2012-07-28T16:37:09+0000",
            "content": "Test that catches the bug "
        },
        {
            "author": "Serdyn du Toit",
            "id": "comment-13424377",
            "date": "2012-07-28T16:45:06+0000",
            "content": "For Solr 3.6 (not sure if this bug is present in Solr 4+)\n\nI have added a test that catches the bug to this ticket.  The error is thrown by the JavaBinCodec but I think its because bad data is sent to it.\n\nFor my usecase the Grouping class constructs a DocSlice as follows:\norg.apache.solr.search.DocSlice@c792d4[offset=10,len=-10,docs={},scores={},matches=0,maxScore=-Infinity]\n\nWhen I compared this to non-grouped operations the negative 'len' variable seemed spurious - as did the 'maxScore' value.  It is this negative 'len' value which causes the JavaBinCodec to fail.\n\nIn the Grouping class I replaced\n      int len = docsGathered - offset;\nwith\n      int len = docsGathered - offset;\n      // quick hack to fix the bug:\n      if (len < 0)\n          len = 0;\n\nI would appreciate if a Solr committer familiar with the Grouping functionality can turn my hack into a fix and commit it.\n\nMuch appreciated "
        }
    ]
}