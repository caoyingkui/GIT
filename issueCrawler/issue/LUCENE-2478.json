{
    "id": "LUCENE-2478",
    "title": "CachingWrapperFilter throws NPE when Filter.getDocIdSet() returns null",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "2.9.3",
            "3.0.2",
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "2.9.1,                                            2.9.2,                                            3.0,                                            3.0.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Followup for http://www.lucidimagination.com/search/document/1014ea92f15677bd/filter_getdocidset_returning_null_and_what_this_means_for_cachingwrapperfilter:\n\nDaniel Noll is seeing an exception like this:\n\n\njava.lang.NullPointerException\n    at org.apache.lucene.search.CachingWrapperFilter.docIdSetToCache(CachingWrapperFilter.java:84)\n    at org.apache.lucene.search.CachingWrapperFilter.getDocIdSet(CachingWrapperFilter.java:112)\n    at com.nuix.storage.search.LazyConstantScoreQuery$LazyFilterWrapper.getDocIdSet(SourceFile:91)\n    at org.apache.lucene.search.ConstantScoreQuery$ConstantScorer.<init>(ConstantScoreQuery.java:116)\n    at org.apache.lucene.search.ConstantScoreQuery$ConstantWeight.scorer(ConstantScoreQuery.java:81)\n    at org.apache.lucene.search.BooleanQuery$BooleanWeight.scorer(BooleanQuery.java:297)\n    at org.apache.lucene.search.BooleanQuery$BooleanWeight.scorer(BooleanQuery.java:297)\n    at org.apache.lucene.search.QueryWrapperFilter$2.iterator(QueryWrapperFilter.java:75)\n\n\n\nThe class of our own is just an intermediary which delays creating the Filter object...\n\n\n@Override\npublic DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n            if (delegate == null) {\n                delegate = factory.createFilter();\n            }\n            return delegate.getDocIdSet(reader);\n}\n\n\n\nTracing through the code in CachingWrapperFilter, I can see that this NPE would occur if getDocIdSet() were to return null.\n\nThe Javadoc on Filter says that null will be returned if no documents will be accepted by the filter, but it doesn't seem that Lucene itself is handling null return values correctly, so which is correct?  The code or the Javadoc?  Supposing that null really is OK, does this cause any problems with how CachingWrapperFilter is implementing the caching?  I notice it's calling get() and then comparing against null so it wouldn't appear that it can distinguish \"the entry isn't in the cache\" from \"the entry is in the cache but it's null\".",
    "attachments": {
        "LUCENE-2478.patch": "https://issues.apache.org/jira/secure/attachment/12445548/LUCENE-2478.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-05-26T13:32:11+0000",
            "content": "This fixes this bug, will commit soon.\n\nThe behaviour is now identical and null is handled equally to DocIdSet.EMPTY_DOCIDSET. DocIdSet.EMPTY_DOCIDSET is used in both cases to denote the empty set even when the filter returned null. By this also the null value is correctly cached without additional containsKey() checks. ",
            "author": "Uwe Schindler",
            "id": "comment-12871741"
        },
        {
            "date": "2010-05-26T14:27:19+0000",
            "content": "Patch with additional tests from trunk. ",
            "author": "Uwe Schindler",
            "id": "comment-12871751"
        },
        {
            "date": "2010-05-26T14:27:46+0000",
            "content": "Committed revisions: 948429 (trunk), 948430 (3.x), 948432 (3.0), 948450 (2.9) ",
            "author": "Uwe Schindler",
            "id": "comment-12871752"
        }
    ]
}