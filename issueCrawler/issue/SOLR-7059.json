{
    "id": "SOLR-7059",
    "title": "Using paramset with multi-valued keys leads to a 500",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.0",
            "5.1",
            "6.0"
        ],
        "affect_versions": "5.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Here's my use case:\nI wanted to use param-sets to have facet.field=field1&facet.field=field2\nFor the same, here is what I updated:\n\ncurl http://localhost:8983/solr/bike/config/params -H 'Content-type:application/json' -d \n'{\n  \"set\" : { \n    \"facets\" : {\n      \"facet.field\":[\"start_station_name\",\"end_station_name\"]\n    }\n  }\n}'\n\n\n\nWhen I tried to use the same, I got a 500.\n\nAfter looking at the code, seems like, RequestParams uses MapSolrParams, which banks on Map<String,String> map.\n\nThis would need to change to support the multi-values.\n\nI also tried sending:\n\nsolr-5.0.0-SNAPSHOT > curl http://localhost:8983/solr/bike/config/params -H 'Content-type:application/json' -d '{\"update\" : { \"facets\" : {\"facet.field\":\"start_station_name\",\"facet.field\":\"end_station_name\"}}}'\n\n\n\nThis overwrote the value of facet.field with the last seen/parsed value i.e. there was only one value in the end. This is expected as that's noggit's behavior i.e.  doesn't complain and just overwrites the previous value with the same key.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-29T06:17:03+0000",
            "author": "Anshum Gupta",
            "content": "If this doesn't really affect anything other than paramSets, which is a new feature, we should fix this (if we're able to, before 6640 is resolved). ",
            "id": "comment-14296440"
        },
        {
            "date": "2015-01-29T07:40:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1655541 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1655541 ]\n\nSOLR-7059: Using paramset with multi-valued keys leads to a 500. SolrParams need an aray instead of a list ",
            "id": "comment-14296526"
        },
        {
            "date": "2015-01-29T07:44:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1655542 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1655542 ]\n\nSOLR-7059: Using paramset with multi-valued keys leads to a 500. SolrParams need an aray instead of a list ",
            "id": "comment-14296532"
        },
        {
            "date": "2015-01-29T08:19:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1655547 from Noble Paul in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1655547 ]\n\nSOLR-7059: Using paramset with multi-valued keys leads to a 500. SolrParams need an aray instead of a list ",
            "id": "comment-14296564"
        },
        {
            "date": "2015-01-29T21:58:18+0000",
            "author": "jefferyyuan",
            "content": "The change works well, but it's kind of weird now:\nthe value type of map in MapSolrParams is declared as String, but now the value can actually be string or string[].\nprotected final Map<String,String> map;\n\nThe following code would be kind of weird and difficult to maintain: \nin get method: as the map is Map<String,String> , so map.get should return string - but not in this case, as the value can be string or string[]..\nObject  o = map.get(name); /////\nif (o instanceof String) return  (String) o;\nif (o instanceof String[]) { }\n\nin toString: the val is declared as object - not as string(the entry is Entry<String,String>), because the value can be string or string[].\nfor (Map.Entry<String,String> entry : map.entrySet()) {\n  String key = entry.getKey();\n  Object val = entry.getValue(); ////\n}\n\nThis breaks java generic and compiler check, make it harder to maintain.\nWe should open one new JIRA to refactor MapSolrParams: Maybe change Map<String,String> to Map<String,String[]> just as ModifiableSolrParams.\n\nThis will require a lot of code change: but it's worth.\nAlso in Lucene/Solr, we still use raw collectio - not parameterized, we should consider refactor it a bit to make the code cleaner. ",
            "id": "comment-14297777"
        },
        {
            "date": "2015-01-31T07:44:55+0000",
            "author": "Noble Paul",
            "content": "I guess we should just make it a Map<String,Object> . ",
            "id": "comment-14299713"
        },
        {
            "date": "2015-02-23T05:01:00+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332620"
        }
    ]
}