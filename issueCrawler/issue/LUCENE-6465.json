{
    "id": "LUCENE-6465",
    "title": "Add protectiondomain to expressions compiler",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "Today the classloader is somewhat hidden, you don't have a way to pass this. But since we are generating classes on the fly, we should allow it to be optionally specified.",
    "attachments": {
        "LUCENE-6465.patch": "https://issues.apache.org/jira/secure/attachment/12730733/LUCENE-6465.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14530010",
            "author": "Robert Muir",
            "date": "2015-05-06T06:24:07+0000",
            "content": "patch with a simple test. "
        },
        {
            "id": "comment-14530102",
            "author": "Ryan Ernst",
            "date": "2015-05-06T07:44:10+0000",
            "content": "+1\n\nDo we really need to have so many variants of compile? Could we stick with a simple one (just takes the expression text) and one full featured one? It is simple for advanced users who need to set protectiond omain to use the more advanced one with JavascriptComipiler.DEFAULT_FUNCTIONS and JavascriptCompiler.class.getClassLoader()? "
        }
    ]
}