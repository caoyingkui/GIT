{
    "id": "LUCENE-5315",
    "title": "Some subclasses of Scorer do not honor the contract of DocsEnum.freq()",
    "details": {
        "components": [
            "core/query/scoring"
        ],
        "fix_versions": [],
        "affect_versions": "4.5.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The behavior of Scorer.freq() is inconsistent across its subclasses:\n\n\tFor TermScorer, the freq() method behaves just as DocsEnum.freq() specifies, i.e. the method returns the \"term frequency in the current document\".\n\tFor BooleanScorer2, ConjunctionScorer, DisjunctionMaxScorer, DisjunctionSumScorer, and possibly other classes, the freq() method returns the number of clauses (in BooleanQuery or DisjunctionMaxQuery) that match the current document.\n\n\n\nThis difference makes the meaning of Scorer.freq()'s return value uncertain. To add to the uncertainty, given a Query, there seems to be no way of knowing which behavior takes effect (as that is not specified in the API reference) except by reading or running the code.\n\nThis issue might be related to LUCENE-4514.",
    "attachments": {
        "DisjunctionMaxQueryTest.java": "https://issues.apache.org/jira/secure/attachment/12610942/DisjunctionMaxQueryTest.java",
        "DisjunctionMaxQueryTest.java.output": "https://issues.apache.org/jira/secure/attachment/12610943/DisjunctionMaxQueryTest.java.output"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-10-29T23:03:52+0000",
            "content": "This is a very simple program that illustrates the problem. I am attaching the output in a separate file. ",
            "author": "Kai Chan",
            "id": "comment-13808572"
        },
        {
            "date": "2013-10-29T23:07:05+0000",
            "content": "Here is the output of DisjunctionMaxQueryTest. For the freq() method, the return values (3, 4, 5) from TermScorer are term frequencies, while the return values (1, 2) from ConjunctionScorer and others are clause counts. ",
            "author": "Kai Chan",
            "id": "comment-13808574"
        },
        {
            "date": "2013-10-29T23:38:13+0000",
            "content": "I dont see the bug, as it said in  LUCENE-4514, its the number of matches in the document for that scorer.\n\nSo if its a Termscorer its the number of occurrences of that term. if its a phrasescorer its the number of occurrences of that phrase. If its a booleanscorer, its the number of occurrences of that boolean conjunct.\n\nIt does not try to 'sum' or anything. if you want to that, you can easily do it since you can navigate subscorers with getChildren. ",
            "author": "Robert Muir",
            "id": "comment-13808586"
        },
        {
            "date": "2013-10-30T00:09:54+0000",
            "content": "This is how I see it. I could be wrong though, and please feel free to point out if it is the case.\n\n\n\tThe API reference of DocsEnum.freq() states that its return value is \"term frequency in the current document, or 1 if the field was indexed with FieldInfo.IndexOptions.DOCS_ONLY\". (I do not think the second part applies here though, just the first part.)\n\tScorer and its subclasses extend DocEnum, and therefore their freq() methods override DocsEnum.freq().\n\tBecause of (1) and (2), I thought the freq() method of Scorer and its subclasses should also return \"term frequency in the current document\", to honor the contract set by DocsEnum.freq().\n\tHowever, for some of Scorer's subclasses, (3) is not how the classes are currently implemented.\n\n ",
            "author": "Kai Chan",
            "id": "comment-13808607"
        },
        {
            "date": "2013-10-30T00:12:56+0000",
            "content": "i think DocsEnum.freq() should be changed to say \"matches\".\n\nAccording to your strict definition, PhraseScorer is broken too, because it doesnt return term frequencies  ",
            "author": "Robert Muir",
            "id": "comment-13808615"
        }
    ]
}