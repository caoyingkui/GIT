{
    "id": "LUCENE-4283",
    "title": "Support more frequent skip with Block Postings Format",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Later",
        "status": "Closed"
    },
    "description": "This change works on the new bulk branch.\n\nCurrently, our BlockPostingsFormat only supports skipInterval==blockSize. Every time the skipper reaches the last level 0 skip point, we'll have to decode a whole block to read doc/freq data. Also,  a higher level skip list will be created only for those df>blockSize^k, which means for most terms, skipping will just be a linear scan. If we increase current blockSize for better bulk i/o performance, current skip setting will be a bottleneck. \n\nFor ForPF, the encoded block can be easily splitted if we set skipInterval=32*k.",
    "attachments": {
        "LUCENE-4283-small-interval-fully.patch": "https://issues.apache.org/jira/secure/attachment/12539154/LUCENE-4283-small-interval-fully.patch",
        "LUCENE-4283-record-skip&inlining-scanning.patch": "https://issues.apache.org/jira/secure/attachment/12539781/LUCENE-4283-record-skip%26inlining-scanning.patch",
        "LUCENE-4283-slow.patch": "https://issues.apache.org/jira/secure/attachment/12539085/LUCENE-4283-slow.patch",
        "LUCENE-4283-codes-cleanup.patch": "https://issues.apache.org/jira/secure/attachment/12539210/LUCENE-4283-codes-cleanup.patch",
        "LUCENE-4283-small-interval-partially.patch": "https://issues.apache.org/jira/secure/attachment/12539155/LUCENE-4283-small-interval-partially.patch",
        "LUCENE-4283-buggy.patch": "https://issues.apache.org/jira/secure/attachment/12538894/LUCENE-4283-buggy.patch",
        "LUCENE-4283-record-next-skip.patch": "https://issues.apache.org/jira/secure/attachment/12539683/LUCENE-4283-record-next-skip.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-08-02T10:39:52+0000",
            "content": "An initial try to support partial decode & skipInterval == 32. Details about the skip format is mentioned in BlockSkipWriter. This patch works against pfor-3892 branch, with revision 1365112.\n\nIt passes TestPostingsFormat, but still fail to pass CheckIndex. Mike, these test seed should fail the patch.\n\nant test-core -Dtestcase=TestLongPostings -Dtests.method=testLongPostingsNoPositions -Dtests.seed=EC8F49E9088B926C -Dtests.postingsformat=Block\n\nant test-core  -Dtestcase=TestCustomSearcherSort -Dtests.method=testFieldSortSingleSearcher -Dtests.seed=EC8F49E9088B926C -Dtests.postingsformat=Block \n\n\n ",
            "author": "Han Jiang",
            "id": "comment-13427238"
        },
        {
            "date": "2012-08-02T10:54:07+0000",
            "content": "oh, forgot to revert TestPF ",
            "author": "Han Jiang",
            "id": "comment-13427242"
        },
        {
            "date": "2012-08-02T20:14:54+0000",
            "content": "Billy, it looks like this patch is a bit stale (it doesn't apply on the current branch)?  Can you please update it?  Thanks. ",
            "author": "Michael McCandless",
            "id": "comment-13427573"
        },
        {
            "date": "2012-08-02T22:09:37+0000",
            "content": "I think we shouldn't have to do our own buffering up of the skip points within one block?\n\nCan't we call skipWriter.bufferSkip every skipInterval docs (and pass it lastDocID, etc.)?  Then it can write the skip point immediately.\n\nAlso, in BlockPostingsReader, why do we need a separate docBufferOffset?  Can't we just set docBufferUpto to wherever (36, 64, 96) we had skipped to within the block? ",
            "author": "Michael McCandless",
            "id": "comment-13427667"
        },
        {
            "date": "2012-08-03T19:23:45+0000",
            "content": "Can't we call skipWriter.bufferSkip every skipInterval docs (and pass it lastDocID, etc.)? Then it can write the skip point immediately.\nHmm, actually, no. We can't predict the df when buffering skip data, therefore, we may save extra skip data inside the vInt block. For example, df=128+33 and interval=32.\n\nAlso, in BlockPostingsReader, why do we need a separate docBufferOffset? Can't we just set docBufferUpto to wherever (36, 64, 96) we had skipped to within the block?\nYes, you're right! I'll clean up those codes. ",
            "author": "Han Jiang",
            "id": "comment-13428311"
        },
        {
            "date": "2012-08-03T19:28:49+0000",
            "content": "Previous buggy patch will fail when df=128*k(k=2,3...), since skip reader silly reads the skip point just after the last doc...\n\nThis patch should pass all the tests. I haven't test performance, but tests on previous buggy patch shows a net loss, I'll try to optimize on the interval&blocksize later... ",
            "author": "Han Jiang",
            "id": "comment-13428314"
        },
        {
            "date": "2012-08-04T18:19:52+0000",
            "content": "Two patches: tidied some codes, and removed the partially decoding out to see how we improved only with smaller interval. *-fully.patch will refill a whole block of docs when docBuffer is used up, *-partially.patch will only decode an interval of block when necessary. ",
            "author": "Han Jiang",
            "id": "comment-13428657"
        },
        {
            "date": "2012-08-04T21:36:58+0000",
            "content": "I added some new tasks to luceneutil (AndHighLow, OrHighLow), and also\nseparated tasks for Low/Med/HighTerm (and same for SpanNear/Phrase\nqueries) so that we can see the impact on the different queries, and\nso that we actually test skipping (AndHighLow).\n\nThen I ran a test w/ the 2nd (non-buggy, partial decode, 32\nskipInterval patch):\n\n\n                Task    QPS base StdDev base    QPS comp StdDev comp      Pct diff\n          AndHighLow      631.54       10.72      101.44        0.70  -84% -  -83%\n          AndHighMed       44.85        0.94       39.31        0.36  -14% -   -9%\n         AndHighHigh       18.39        0.27       16.16        0.08  -13% -  -10%\n     MedSloppyPhrase       12.15        0.14       11.27        0.30  -10% -   -3%\n         MedSpanNear        9.11        0.10        8.58        0.10   -7% -   -3%\n         LowSpanNear        5.05        0.03        4.78        0.03   -6% -   -4%\n           MedPhrase        5.09        0.10        4.81        0.10   -9% -   -1%\n           LowPhrase        7.80        0.08        7.43        0.07   -6% -   -2%\n    HighSloppyPhrase        2.13        0.06        2.04        0.06  -10% -    1%\n     LowSloppyPhrase        5.28        0.11        5.09        0.15   -8% -    1%\n            HighTerm       22.85        0.11       22.08        0.56   -6% -    0%\n             LowTerm      526.19        3.56      510.53        9.14   -5% -    0%\n             MedTerm      138.34        0.51      134.66        3.58   -5% -    0%\n          HighPhrase        3.55        0.11        3.46        0.11   -8% -    3%\n        HighSpanNear        1.64        0.00        1.60        0.02   -3% -    0%\n              Fuzzy1       99.11        3.49       98.91        2.71   -6% -    6%\n              Fuzzy2       88.31        3.05       88.19        2.32   -6% -    6%\n             Respell       77.97        1.75       78.24        1.86   -4% -    5%\n            PKLookup      192.61        1.47      193.47        1.53   -1% -    2%\n           OrHighMed       25.14        1.23       25.28        1.16   -8% -   10%\n          OrHighHigh        9.22        0.47        9.30        0.45   -8% -   11%\n           OrHighLow       37.28        1.79       37.60        1.75   -8% -   10%\n            Wildcard       67.88        0.33       69.19        2.70   -2% -    6%\n             Prefix3       25.67        0.35       26.25        1.22   -3% -    8%\n              IntNRQ        8.85        0.02        9.27        0.98   -6% -   15%\n\n\n\nI'm confused why AndHighLow got slower... this patch should have\nlowered the per-skip cost. ",
            "author": "Michael McCandless",
            "id": "comment-13428682"
        },
        {
            "date": "2012-08-04T23:04:49+0000",
            "content": "I tested the -fully patch:\n\n                Task    QPS base StdDev base    QPS comp StdDev comp      Pct diff\n          AndHighLow      628.46        8.28      155.04        1.42  -75% -  -74%\n         LowSpanNear        5.07        0.02        4.85        0.10   -6% -   -2%\n         MedSpanNear        9.12        0.07        8.86        0.22   -5% -    0%\n           OrHighMed       26.16        1.15       25.53        2.65  -16% -   12%\n          AndHighMed       44.92        0.88       43.94        0.30   -4% -    0%\n           OrHighLow       38.76        1.70       37.97        4.03  -16% -   13%\n          OrHighHigh        9.57        0.45        9.40        1.02  -16% -   14%\n            HighTerm       22.88        0.13       22.83        0.95   -4% -    4%\n    HighSloppyPhrase        2.14        0.10        2.14        0.11   -9% -   10%\n     LowSloppyPhrase        5.31        0.22        5.32        0.22   -7% -    8%\n           LowPhrase        7.85        0.09        7.87        0.21   -3% -    3%\n        HighSpanNear        1.65        0.01        1.66        0.04   -2% -    3%\n             Respell       77.70        1.24       78.14        2.12   -3% -    4%\n             MedTerm      138.26        0.52      139.07        5.52   -3% -    4%\n            PKLookup      193.63        2.06      195.98        2.84   -1% -    3%\n     MedSloppyPhrase       12.15        0.34       12.33        0.48   -5% -    8%\n             LowTerm      525.12        4.89      534.89       14.12   -1% -    5%\n              Fuzzy2       87.20        2.05       89.05        3.27   -3% -    8%\n              Fuzzy1       97.81        2.33       99.94        3.99   -4% -    8%\n         AndHighHigh       18.39        0.27       19.62        0.06    4% -    8%\n           MedPhrase        5.09        0.11        5.52        0.33    0% -   17%\n            Wildcard       67.59        0.58       73.76        3.37    3% -   15%\n             Prefix3       25.51        0.39       29.54        1.60    7% -   23%\n          HighPhrase        3.55        0.12        4.13        0.33    3% -   30%\n              IntNRQ        8.79        0.08       10.67        1.52    3% -   40%\n\n\n\nIt seems like we are getting some gains for Med/HighPhrase, but AndHighLow is still way off. ",
            "author": "Michael McCandless",
            "id": "comment-13428698"
        },
        {
            "date": "2012-08-05T16:37:23+0000",
            "content": "Remove small interval codes, which will be digged later... Mike, this patch should be ready to commit! ",
            "author": "Han Jiang",
            "id": "comment-13428875"
        },
        {
            "date": "2012-08-05T22:41:22+0000",
            "content": "Thanks Billy, I tweaked the cleanup patch some (removed blockInts, restored lost DEBUGs, added some nocommits, etc.) and committed. ",
            "author": "Michael McCandless",
            "id": "comment-13428926"
        },
        {
            "date": "2012-08-07T17:51:23+0000",
            "content": "now we record next skip point, and try not to use skipper when target is still within current buffer. ",
            "author": "Han Jiang",
            "id": "comment-13430475"
        },
        {
            "date": "2012-08-07T21:25:41+0000",
            "content": "Thanks Billy, that's a nice optimization!  I think other postings formats should do the same thing...\n\nIt seems to give a small gain to the skip-heavy queries:\n\n                Task    QPS base StdDev baseQPS nextskipStdDev nextskip      Pct diff\n         AndHighHigh       23.87        0.09       23.56        0.19   -2% -    0%\n              Fuzzy2       63.37        1.07       62.59        0.86   -4% -    1%\n          OrHighHigh       11.67        0.08       11.53        0.35   -4% -    2%\n              Fuzzy1       75.44        1.02       74.59        0.74   -3% -    1%\n           OrHighMed       24.14        0.18       23.89        0.72   -4% -    2%\n             Respell       62.66        0.65       62.04        1.37   -4% -    2%\n           OrHighLow       27.86        0.23       27.60        0.85   -4% -    2%\n    HighSloppyPhrase        2.00        0.04        1.99        0.05   -5% -    3%\n        HighSpanNear        1.70        0.02        1.69        0.01   -2% -    1%\n             LowTerm      517.40        1.67      514.32        2.68   -1% -    0%\n     LowSloppyPhrase        7.61        0.07        7.58        0.16   -3% -    2%\n     MedSloppyPhrase        6.90        0.09        6.88        0.13   -3% -    2%\n            PKLookup      192.23        1.99      191.81        3.80   -3% -    2%\n             Prefix3       82.35        0.63       82.36        1.06   -2% -    2%\n            Wildcard       52.49        0.44       52.54        0.41   -1% -    1%\n            HighTerm       36.03        0.11       36.09        0.03    0% -    0%\n              IntNRQ       11.56        0.07       11.58        0.03    0% -    1%\n             MedTerm      197.94        0.88      198.87        0.36    0% -    1%\n         MedSpanNear        4.84        0.07        4.86        0.03   -1% -    2%\n         LowSpanNear        9.49        0.26        9.64        0.01   -1% -    4%\n           LowPhrase       21.95        0.38       22.39        0.08    0% -    4%\n          AndHighLow      641.56       10.38      657.49        5.64    0% -    5%\n           MedPhrase       13.04        0.30       13.37        0.05    0% -    5%\n          AndHighMed       67.13        0.57       69.30        0.80    1% -    5%\n          HighPhrase        1.81        0.10        1.87        0.03   -3% -   11%\n\n ",
            "author": "Michael McCandless",
            "id": "comment-13430636"
        },
        {
            "date": "2012-08-08T06:28:34+0000",
            "content": "This patch should also inline scanning for EverythingEnum, and remove some condition statements(refillDocs etc.) out from the while loop. ",
            "author": "Han Jiang",
            "id": "comment-13430900"
        },
        {
            "date": "2012-08-08T08:58:39+0000",
            "content": "Hmm, the improvement isn't that noisy\n\n                Task    QPS base StdDev base    QPS comp StdDev comp      Pct diff\n         AndHighHigh       83.84        5.07       88.64        2.41   -3% -   15%\n          AndHighLow     1716.87       62.53     1891.91       20.85    5% -   15%\n          AndHighMed      348.15       37.20      441.49       10.78   11% -   45%\n              Fuzzy1       87.67        0.92       84.80        2.36   -6% -    0%\n              Fuzzy2       32.84        0.37       31.41        1.06   -8% -    0%\n          HighPhrase       18.45        0.93       18.88        0.53   -5% -   10%\n    HighSloppyPhrase       22.16        0.76       21.55        0.57   -8% -    3%\n        HighSpanNear        3.07        0.11        3.09        0.04   -3% -    5%\n            HighTerm      181.58       18.26      171.10        6.44  -17% -    8%\n              IntNRQ       48.39        1.47       49.28        0.88   -2% -    6%\n           LowPhrase       80.49        3.34       87.04        2.63    0% -   16%\n     LowSloppyPhrase       28.53        1.09       27.31        0.71  -10% -    2%\n         LowSpanNear       46.86        1.63       49.34        1.15    0% -   11%\n             LowTerm     1637.37       19.39     1608.23       16.93   -3% -    0%\n           MedPhrase       22.48        1.03       23.27        0.52   -3% -   10%\n     MedSloppyPhrase       15.46        0.52       15.00        0.37   -8% -    2%\n         MedSpanNear       37.09        1.21       37.80        0.69   -3% -    7%\n             MedTerm      587.20       44.40      560.78       19.09  -14% -    6%\n          OrHighHigh       62.10        0.88       62.95        1.05   -1% -    4%\n           OrHighLow      126.89        1.48      128.30        1.53   -1% -    3%\n           OrHighMed      124.20        1.18      125.34        1.23   -1% -    2%\n            PKLookup      213.54        3.75      211.98        0.37   -2% -    1%\n             Prefix3      106.76        2.31      107.79        0.84   -1% -    3%\n             Respell      100.12        1.00       96.48        2.58   -7% -    0%\n            Wildcard      149.61        3.53      150.29        0.88   -2% -    3%\n\n ",
            "author": "Han Jiang",
            "id": "comment-13430958"
        },
        {
            "date": "2012-08-08T22:59:59+0000",
            "content": "Thanks Billy, patch looks good... I also see some improvements in the skip\nheavy queries:\n\n\n                Task    QPS base StdDev base     QPS for  StdDev for      Pct diff\n        HighSpanNear        1.70        0.05        1.66        0.02   -6% -    2%\n            PKLookup      192.84        3.29      190.09        2.97   -4% -    1%\n     MedSloppyPhrase        6.86        0.09        6.79        0.13   -4% -    2%\n    HighSloppyPhrase        1.97        0.04        1.96        0.08   -6% -    5%\n         MedSpanNear        4.88        0.12        4.85        0.06   -4% -    3%\n           OrHighMed       23.40        0.74       23.31        0.73   -6% -    6%\n     LowSloppyPhrase        7.58        0.12        7.56        0.18   -4% -    3%\n           OrHighLow       27.00        0.92       26.93        0.86   -6% -    6%\n            Wildcard       52.66        0.43       52.54        0.32   -1% -    1%\n             Prefix3       82.44        0.90       82.36        0.87   -2% -    2%\n              IntNRQ       11.61        0.02       11.60        0.02    0% -    0%\n             LowTerm      513.72        0.95      513.40        2.77    0% -    0%\n          OrHighHigh       11.27        0.35       11.27        0.35   -6% -    6%\n            HighTerm       36.10        0.07       36.10        0.03    0% -    0%\n             MedTerm      198.76        0.26      198.85        0.23    0% -    0%\n             Respell       61.52        1.12       61.88        0.36   -1% -    3%\n              Fuzzy1       74.60        1.37       75.07        0.58   -1% -    3%\n              Fuzzy2       62.36        1.33       63.09        0.33   -1% -    3%\n         AndHighHigh       23.62        0.08       24.07        0.21    0% -    3%\n         LowSpanNear        9.65        0.22        9.88        0.06    0% -    5%\n           LowPhrase       22.08        0.37       22.63        0.31    0% -    5%\n          HighPhrase        1.77        0.10        1.83        0.09   -6% -   14%\n           MedPhrase       13.09        0.29       13.54        0.25    0% -    7%\n          AndHighLow      662.00        1.45      700.98       24.76    1% -    9%\n          AndHighMed       69.58        0.18       75.15        1.28    5% -   10%\n\n ",
            "author": "Michael McCandless",
            "id": "comment-13431486"
        },
        {
            "date": "2012-08-21T12:22:49+0000",
            "content": "We didn't get overall improvement with partial decode, and some patches here are more related to \"avoid skipper\" rather than \"more frequent skip\", so this issue is closed for now  ",
            "author": "Han Jiang",
            "id": "comment-13438647"
        }
    ]
}