{
    "id": "SOLR-11620",
    "title": "Occasional NullPointerException in CloudSolrClient",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "6.6.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When sending document updates to Solr, we occasionally see the following error:\n\njava.lang.NullPointerException\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:1182)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:1073)\n\tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:160)\n\tat org.apache.solr.client.solrj.SolrClient.add(SolrClient.java:173)\n\tat org.apache.solr.client.solrj.SolrClient.add(SolrClient.java:138)\n\tat org.apache.solr.client.solrj.SolrClient.add(SolrClient.java:152)\n\n\nLooking at the code, there is a lack of null check on requestedCollections around the for loop\nfor (DocCollection ext : requestedCollections) \nwhich causes the error. Wrapping this loop with if(requestedCollections != null) would solve the problem.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-08T14:40:55+0000",
            "content": "Are you saying this occurs when you try to send documents to a collection that doesn't exist? If so, what is the expected response? Just avoiding the NPE would silently swallow what is arguably a programming error. Perhaps throw a more informative exception? ",
            "author": "Erick Erickson",
            "id": "comment-16244053"
        },
        {
            "date": "2017-11-08T16:04:05+0000",
            "content": "We're not trying to send documents to a non-existent collection, no. We see small batches of this error, in a system that sends millions of updates, so it's hard to pinpoint the cause. It maybe that the null collection is actually a consequence of a different bug, and so this particular NullPointerException is a red herring. Upon inspecting the method mentioned in the stack trace, I noticed that all references to this variable are null-safe, bar this one, so assumed that was the issue, but I may well be wrong. ",
            "author": "Rob Trickey",
            "id": "comment-16244217"
        },
        {
            "date": "2017-11-08T18:16:22+0000",
            "content": "I have seen this before too. I'm not entirely sure the root cause (maybe SOLR-9440? Although maybe I'm attributing too many things to that Jira  ), but the null check is also necessary for when the user requests non-existing collections.\nWrapping this loop with if(requestedCollections != null) would solve the problem\nI wouldn't just skip the null collection silently, we should throw a bad request.  ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16244464"
        },
        {
            "date": "2017-11-08T18:20:21+0000",
            "content": "No wonder this sounded so familiar: See SOLR-10190. Note that this is not a duplicate, it's a different but very similar NPE  ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16244470"
        },
        {
            "date": "2017-11-09T09:26:08+0000",
            "content": "That issue does look similiar. If it helps at all, I have managed to get the log message from the CloudSolrClient just above where this nullpointer occurs, to hopefully shed some more light on the circumstances that lead to this:\n\nRequest to collection myCollectionName failed due to (0) java.net.SocketException: Connection reset, retry? 0\n\nThe collection mentioned definitely exists in the cluster, we have a v small number of unchanging collections, and one dedicated instance of CloudSolrClient for each one, so we shouldn't ever be in the position where we're trying to send updates to a non-existent collection.\n\nThis error suggests to me that there was some kind of network issue connecting to Solr, and the client is not handling it gracefully. IMO the existing retry logic is probably the desired behaviour in this scenario, but the nullPointer is preventing this from being executed. ",
            "author": "Rob Trickey",
            "id": "comment-16245410"
        },
        {
            "date": "2017-11-09T10:46:52+0000",
            "content": "Just seen this error again, with a different partner error:\n\nRequest to collection myCollectionName failed due to (0) org.apache.http.NoHttpResponseException: IP_ADDRESS:8080 failed to respond, retry? 0\n\n(I have replaced the IP address with a placeholder)\n\nThe trigger is when the LBHttpSolrClient throws an IOException, rather than a SolrException, and the execution enters the wasCommError conditional statement. ",
            "author": "Rob Trickey",
            "id": "comment-16245483"
        },
        {
            "date": "2017-11-09T14:38:58+0000",
            "content": "Great info Rob, thanks! I'm not quite sure what the right fix here is, but this is great info for someone who is. ",
            "author": "Erick Erickson",
            "id": "comment-16245745"
        },
        {
            "date": "2017-12-21T00:18:50+0000",
            "content": "Github user tflobbe commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/264\n\n    I believe this is the same as reported in SOLR-11620 ",
            "author": "ASF GitHub Bot",
            "id": "comment-16299301"
        },
        {
            "date": "2017-12-21T00:50:08+0000",
            "content": "It looks like this issue was resolved as part of SOLR-11484 (see https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cf75e14 ).\nThanks Rob for reporting, and Sergey for the PR ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16299339"
        }
    ]
}