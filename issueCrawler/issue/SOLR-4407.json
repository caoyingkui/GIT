{
    "id": "SOLR-4407",
    "title": "SSL Certificate based authentication for SolrCloud",
    "details": {
        "affect_versions": "4.1",
        "status": "Resolved",
        "fix_versions": [
            "4.7",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I need to be able to secure sensitive information in solrnodes running in a SolrCloud with either SSL client/server certificates or http basic auth..",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Christian Moen",
            "id": "comment-13572507",
            "date": "2013-02-06T15:37:45+0000",
            "content": "I don't think this is a Solr issue, but it might be helpful to provide general information on how to secure Solr's interfaces.  However, how to set this up is Servlet container specific.  Could you clarify what you had in mind for this?  Thanks. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13572509",
            "date": "2013-02-06T15:41:19+0000",
            "content": "Once we have SOLR-3854 covered, it should be a matter of configuring the servlet container to require client certificate authentication, as well as telling the SolrJ instances used by SolrCloud to use these certificates. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13572510",
            "date": "2013-02-06T15:43:18+0000",
            "content": "Christian Moen It is a Solr issue as long as there is not way of telling SolrCloud to use the proper client certificates when communicating internally in the cluster. "
        },
        {
            "author": "Christian Moen",
            "id": "comment-13572524",
            "date": "2013-02-06T15:58:18+0000",
            "content": "Thanks a lot for clarifying, Jan.  I wasn't aware of this limitation. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13581714",
            "date": "2013-02-19T22:48:04+0000",
            "content": "See SOLR-4470 "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13593947",
            "date": "2013-03-05T21:45:06+0000",
            "content": "Reopening this as it seems SOLR-4470 aims at much more than just SSL for Cloud and thus may take considerable time to complete.\n\nSo if anyone feels like cooking up a small clean patch for this specific issue then please go ahead! "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717111",
            "date": "2013-07-23T18:47:09+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13901745",
            "date": "2014-02-14T18:29:35+0000",
            "content": "You are able to specify your own certificates via the javax.net system properties (javax.net.ssl.keyStore, javax.net.ssl.keyStorePassword, javax.net.ssl.trustStore, javax.net.ssl.trustStorePassword). These are honored by the SystemDefaultHttpClient and configures the SSL context with the given configuration. Alternatively, you can create your own \"HttpClientConfigurer\" used by the HttpClientUtil class to modify Solr's HttpClient instance. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13910907",
            "date": "2014-02-24T22:34:34+0000",
            "content": "Renamed this issue to focus on ssl-cert based auth only as 4470 deals with basic auth.\n\nNow that SolrCloud supports https (from 4.7), let's make sure we can setup a SolrCloud cluster with both encryption and certificate based auth for inter-node communication.\n\nOne solution is SystemDefaultHttpClient with javax.net.ssl.* config. Will this work OOTH with 4.7? Another is to add cert support for the generic AuthCredentials provided by SOLR-4470. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13911409",
            "date": "2014-02-25T09:06:56+0000",
            "content": "One solution is SystemDefaultHttpClient with javax.net.ssl.* config.\n\nOnly one caveat there - you'll find that SystemDefaultHttpClient and many other things are deprecated since I upgraded us to HttpClient 4.3.1.  SOLR-5604 chronicles my efforts at removing all the deprecations.  I'm deficient in two areas as I work on this \u2013 free time and HttpClient experience. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13911591",
            "date": "2014-02-25T14:00:39+0000",
            "content": "Only one caveat there - you'll find that SystemDefaultHttpClient and many other things are deprecated since I upgraded us to HttpClient 4.3.1\n\nUnfortunately HttpClient seems to enjoy deprecating a lot of their classes, even classes that were brand new as of the previous version. Though, I do like the builder pattern that they have implemented with the HttpClientBuilder. That builder pattern allows the same functionality by the use of the \"useSystemProperties\" method (http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/HttpClientBuilder.html#useSystemProperties()). It is important to note when configuring SSL clients need the flexibility to get in there and configure the HttpClient in their own unique way (in the case of using self-signed certs or a base certificate that doesn't match the host name). In those cases it is imperative that some form of the HttpClientConfigurer remain, perhaps a method signature along the lines of:\n\n\nprotected HttpClient configure(HttpClientBuilder httpClientBuilder, SolrParams config)\n\n\n\nThis would give the benefit of flexibility to clients by overriding the method and allowing them to use convenience methods on the HttpClientBuilder and return the httpClientBuilder.build() response, or allow them to return their own HttpClient customized completely to meet their needs. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971336",
            "date": "2014-04-16T12:57:48+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14293826",
            "date": "2015-01-27T17:10:35+0000",
            "content": "Client authentication works for me in SolrCloud mode following the instructions on the reference guide's Enabling SSL page: https://cwiki.apache.org/confluence/display/solr/Enabling+SSL\n\nAre there still problems that need to be solved here Sindre Fiskaa, Jan H\u00f8ydahl, Steve Davids?  Or can this issue be resolved? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14305505",
            "date": "2015-02-04T16:59:19+0000",
            "content": "Since it's been a week and nobody has mentioned any remaining outstanding problems, I'll resolve this as fixed.  Please open new issues for any further problems. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14305553",
            "date": "2015-02-04T17:29:28+0000",
            "content": "SOLR-3854 added SolrCloud client auth in Solr 4.7. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14306490",
            "date": "2015-02-05T02:05:10+0000",
            "content": "Sorry for not replying back earlier. Yes, you can perform certificate based authentication through either built in servlet container mechanisms or custom servlet filters applied via Jetty's webdefault.xml file. So, for the time being it works, but if we move Solr away from users being able to customize their servlet containers (standalone app mode) then Solr will need to make this capability configurable somehow. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14307968",
            "date": "2015-02-05T20:53:56+0000",
            "content": "So, for the time being it works, but if we move Solr away from users being able to customize their servlet containers (standalone app mode) then Solr will need to make this capability configurable somehow.\n\nI don't understand this comment at all.\n\nhave you looked at the \"Enabling SSL\" ref guide page that steve mentioned?  \n\nFor Solr 5.0 it has been brought up to date with all the necessary details on running Solr with SSL (notably SOLR_SSL_OPTS) w/o the user needing/having any special information about if/when there is a servlet container being used under the covers by Solr.  \n\nWhat aspect of SSL do you think isn't already configurable? "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14308429",
            "date": "2015-02-06T01:41:17+0000",
            "content": "Sorry for not being more specific. Yes, the instructions does allow for specifying your own self-signed certificate and importing that specific certificate in a new trust store that will be loaded by the container - this will lock it down to the specific certificate. The modification that I have done is to create a custom servlet container to openly accept client certificates within an organization, perform an LDAP lookup (via cert DN) to pull groups then grant access if they are apart of a specific group. With this capability we are able to grant access via LDAP groups which is a preferred route of client authentication for our specific use-case. \n\nSo, to answer your question:\n\nWhat aspect of SSL do you think isn't already configurable?\n\nSSL is configurable via trust stores but mechanisms for a customizable certificate based authentication system isn't in place, such as the case above (get cert DN + user lookup via LDAP to authorize). "
        }
    ]
}