{
    "id": "SOLR-8209",
    "title": "Admin UI documents tab improvements",
    "details": {
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "A newbie, when clicking on the 'documents' tab might expect to, well, see documents. Instead, they see a UI that very low level allows them to post JSON/XML to add documents, etc. This presumes knowledge of Solr APIs in order to make good use of it, which goes against the intention of the UI - to make it easier for people.\n\nIn its place, I propose to show a data-grid. This grid will contain maybe the first 100 documents in the index. It could have infinite scroll (to a certain point) to show further documents. It will have \"filter\" options alongside the field headings, allowing the filtering of fields (exact term match filtering, or wildcarded). \n\nThe left-most column will contain pencils. Clicking on this will bring up a form that allows a user to edit the document (We could be clever hear - if the index contains indexed fields that have content, we could warn people that content from those fields would be lost if documents containing those fields is re-indexed).\n\nAt the top is a button which, when clicked, brings up a form that allows us to insert a new document. This will be a tabular view - the left column is field names (a dropdown) and the right a free text box for content.\n\nWe could add an advanced button that brings up a q= box, allowing you to enter arbitrary queries. In time, this could expand to include a query builder - a bit like the query tab.\n\nWe could add delete by query functionality here, too.\n\nWe should probably have two buttons at the top - one that brings up a modal allowing the user to enter arbitrary JSON or XML for posting to Solr, and the other that brings up a modal allowing the user to upload a file from their filesystem - this means we retain the essential functionality that is currently present in the documents tab.\n\nBasically, we give a very straightforward view of the content of an index, much like one would in a relational database tool.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-28T01:20:31+0000",
            "author": "Gus Heck",
            "content": "I don't really see myself editing things in solr very often. Grid UI's are a very slippery slope in my experience, very soon you'll be getting requests for column filters and clickable sorts, in cell editing, drag and drop column reordering, Saving view configurations, some flavor of master/detail when child records are present, etc.. etc... Make a table and you will instantly be compared with either a BI tool or Excel.\n\nAlso, for fields bearing significant amounts of text a grid cell will be the worst possible UI.\n\n/browse already has a search UI (though it seems not very robust... try pointing it at an index that doesn't have the \"cat\" field) maybe it would be better to improve/replace /browse with something that can handle arbitrary schema changes gracefully and just link there, or embed that in the page.\n\nWe already have 2 ways to find data in the system (3 if you count the URL in the browser with &wt=json&indent=true  ). Maybe we should make one of those better. \n\nI have thought delete by query would be quite useful to have in the admin ui, though I would want it in the existing admin shard query ui (with a did you mean that prompt that could not be confirmed by accident!).\n\nA data entry form builder might make more sense than a grid ui (to me)... \n\nAs far as the CREATE part of CRUD goes, as you said the UI you mention is not very friendly, and has a steep learning curve. I don't think data entry via the admin UI is a real-world use case for any thing beyond a toy install. It's really a tool for new users to learn with, and experienced users to debug with. To that end, a form builder that provided a preview of the json/xml to be sent and even a preview the resulting index document if possible would be particularly good for learning the system, and help with understanding of indexed vs stored, field copying, testing out update handler configurations etc.\n\nI agree that the \"Documents\" name for that tab is misleading. Perhaps rename it \"Add Docs\". (or whatever)\n\nMy $0.02... YMMV  ",
            "id": "comment-14977528"
        },
        {
            "date": "2015-10-28T11:20:23+0000",
            "author": "Upayavira",
            "content": "Thx for your comments/perspective, Gus Heck. \n\nYour suggestion that presenting a grid could lead to expectations of new features that could be hard/complex to implement.\n\nWhat I've been finding recently is that the UI is a great way to test out theories. \"Admin\" UI isn't the right name really - \"exploration UI\" would be better.\n\n  \"Form a theory / create a collection / add fields via schema tab / add sample documents to needed to prove the theory / run query via query tab\"\n\nReally, the biggest thing needed (and the default option for the UI) should be a form that allows you to add multiple fields, picking the field name from a dropdown (can be overridden for dynamic field names) and field values. This would improve CREATE. Is that what you meant by \"data entry form builder\"?\n\nI've also been thinking of a visual way to display query results. This might get us to a similar place - rather than show results as a grid, show them in a view that is closer to search results \"a la /browse\". That view could be shared between documents and query tabs. Hmmm. ",
            "id": "comment-14978257"
        },
        {
            "date": "2015-10-28T13:30:42+0000",
            "author": "Mark Miller",
            "content": "Ah, the \"give a mouse a cookie' theory to feature development. Next thing you know he will demand a glass of milk. ",
            "id": "comment-14978415"
        },
        {
            "date": "2015-10-28T16:23:52+0000",
            "author": "Erik Hatcher",
            "content": "/browse already has a search UI (... try pointing it at an index that doesn't have the \"cat\" field)\n\nTry the Solr 5 data driven /browse.  techproducts kitchen sink is the issue on that.  The data driven one is entirely field/data agnostic.  Facets appear if you've configured them, otherwise do not.  \n\n/browse really ought to be considered to be one of the ways this \"documents\" view thing should work.  For one thing, it's highly customizable by the end user so any debate about how things should render can be made pluggable straightforwardly.  Mmm cookies and milk!!\n\nAs someone who has written and been involved in a boatload of \"general purpose\" browse/documents/search UI efforts - there's no one right answer and you end up building a general purpose thing that has a zillion switches and options.  Fun times indeed.\n\nVelocityResponseWriter has more power and flexibility than folks give it credit for, and it's my fault for not educating and demonstrating it well enough (I've got a blog draft on it that is overdue to publish, consider me nagged to get that done ASAP).  It'd be a shame (and disservice/injustice  for it not to be factored in. It can be used to generate a grid, or a list view, toggleable by a switch... straightforwardly (and fairly cleanly I'd even assert, relative to any other technique that would be used here). ",
            "id": "comment-14978689"
        },
        {
            "date": "2015-10-28T17:06:41+0000",
            "author": "Gus Heck",
            "content": "\"Form a theory / create a collection / add fields via schema tab / add sample documents to needed to prove the theory / run query via query tab\"\n\nYup we are more or less on the same page there.\n\nReally, the biggest thing needed (and the default option for the UI) should be a form that allows you to add multiple fields, picking the field name from a dropdown (can be overridden for dynamic field names) and field values. This would improve CREATE. Is that what you meant by \"data entry form builder\"?\n\nYup, though thinking about this after I made my comment I realized that it's going to imply a need for some form of persistence. (As would complex grid/table ui configurations). Any time you let the user configure heavily you have to let them store it somewhere or it's not useful. We could use browser storage, since this is not supposed to be a end user facing page, though even admins/explorers might get irritated at not having the configured form available from home etc... ",
            "id": "comment-14978773"
        },
        {
            "date": "2015-10-28T17:27:43+0000",
            "author": "Erik Hatcher",
            "content": "Any time you let the user configure heavily you have to let them store it somewhere or it's not useful\n\nSolr's paramsets make for a pretty handy/interesting way to maybe do this.  \n ",
            "id": "comment-14978821"
        }
    ]
}