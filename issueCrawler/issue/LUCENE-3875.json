{
    "id": "LUCENE-3875",
    "title": "ValueSourceFilter",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "A ValueSourceFilter is a filter that takes a ValueSource and a threshold value, filtering out documents for which their value returned by the ValueSource is below the threshold.\n\nWe use the ValueSourceFilter for filtering documents based on their value in an ExternalFileField.",
    "attachments": {
        "LUCENE-3875.patch": "https://issues.apache.org/jira/secure/attachment/12518535/LUCENE-3875.patch",
        "LUCENE-3875-1.patch": "https://issues.apache.org/jira/secure/attachment/12521208/LUCENE-3875-1.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-03T20:34:08+0000",
            "content": "Patch updated to use OpenBitSet and implement better hashCode and equals methods.  ",
            "author": "Gregg Donovan",
            "id": "comment-13245701"
        },
        {
            "date": "2012-04-04T02:46:59+0000",
            "content": "Hey Gregg,\n\nDid a quick review and it looks great.  I'm happy to commit this when its ready.\n\nThe general trend is to use FixedBitSet instead of OpenBitSet in situations like this where we know the maximum size.  Could you make the change?  Also in the tests, could we move the createIndex and destroyIndex into setUp() and tearDown() respectively? ",
            "author": "Chris Male",
            "id": "comment-13245980"
        },
        {
            "date": "2012-04-04T14:24:16+0000",
            "content": "Thanks, Chris.\n\nThe latest patch uses a FixedBitSet and cleans up the tests a bit. ",
            "author": "Andrew Morrison",
            "id": "comment-13246292"
        },
        {
            "date": "2012-04-05T05:06:05+0000",
            "content": "Hey Andrew,\n\nI was actually thinking about this a little more, wondering about adding full range support when I realised that Solr already supports this through org.apache.solr.search.function.ValueSourceRangeFilter.  Does that meet your needs or is there a usecase it doesn't fulfil that the patch here does? ",
            "author": "Chris Male",
            "id": "comment-13247025"
        },
        {
            "date": "2012-04-05T13:44:26+0000",
            "content": "Ha! ValueSourceRangeFilter does the job. This patch shouldn't be committed. Thanks! ",
            "author": "Andrew Morrison",
            "id": "comment-13247214"
        },
        {
            "date": "2012-04-05T13:45:12+0000",
            "content": "Closing because this patch duplicates a subset of the behavior of ValueSourceRangeFilter. ",
            "author": "Andrew Morrison",
            "id": "comment-13247215"
        }
    ]
}