{
    "id": "SOLR-5095",
    "title": "SolrCore.infoRegistry needs overhauled with some form of \"namespacing\"",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "While investigating SOLR-3616 / SOLR-2715, I realized the failure i was seeing didn't seem to be related to the initial report of that bug, and instead seemed to be due to an obvious and fundemental limitation in the way SolrCore keeps track of \"plugins\" using the infoRegistry: It's just a Map<String, SolrInfoMBean> keyed off of the name of the plugin, but there is not \"namespacing\" used in the infoRegistry, so two completley different types of plugins with the same name will overwrite each other.\n\nWhen looking at data using something like /admin/mbeans, this manifests itself solely as missing objects: last one .put() into the infoRegistry \"wins\" \u2013 using JMX, both objects are actually visible because of how JMX ObjectNames are built arround a set of key=val pairs, and a bug in how JmxMonitorMap unregisters existing MBeans when .put() is called on a key it already knows about (the unregister call is made using an ObjectName built using the infoBean passed to the put() call \u2013 if infoBean.getName() is not exactly the same as the previous infoBean put() with the same key, then the MbeanServer will continue to know about both of them)",
    "attachments": {
        "SOLR-5095_bug_demo.patch": "https://issues.apache.org/jira/secure/attachment/12595087/SOLR-5095_bug_demo.patch",
        "SOLR-5095.patch": "https://issues.apache.org/jira/secure/attachment/12653046/SOLR-5095.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13724661",
            "date": "2013-07-31T00:28:05+0000",
            "content": "\nFor 5.0, I think we should completley overhaul the way the infoRegistery works...\n\n\n\tReplace the simple Map<String, SolrInfoMBean> with something utilizing the \"type\" of plugin as a namespace or parent hierarchy (ie: RequestHandler, SearchComponent, QParserPlugin, etc...)\n\treplace all of hte existing JMX ObjectName's used to register MBeans so the JMX hierarchy matches the new hierarchical orgainized by plugin \"type\".\n\tupdate /admin/mbeans so that in addition to the current \"cat\" and \"key\" lookups you can also browser MBeans by their plugin \"type\"\n\tupdate the UI to show the list of Mbeans organized by \"type\" instead of by \"cat\"\n\talong the way, make sure we cleanup things like SOLR-3774\n\n\n\n\nFor 4.x, i think we should leave this alone \u2013 any kind of meaningful fix I can imagine would require changing the names used to register things in JMX, and that seems like something too significant to change in a minor release give how it will affect existing users who monitor with JMX.  For consistency, we could concievably just fix the bug in JmxMonitordMap.put() so that JMX accurately reflects only the items in the infoRegistry \u2013 but that wouldn't relaly help anyone, it ould just take potentially useful data away from JMX users. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13724663",
            "date": "2013-07-31T00:29:29+0000",
            "content": "SOLR-5095_bug_demo.patch is a trivial test patch demonstrating the discrepency between the infoRegistry contents and the JMX contents ... the off by 2 error is because...\n\n\n\tout of hte box defaults defin a \"query\" QParser (NestedQParserPlugin) and a \"query\" SearchComponent (QueryComponent).\n\tin the configs used by the test: there a \"dismax\" SearchHandler instance declared, in addition to the out of the box default \"dismax\" QParser\n\n\n\n\n  [junit4] FAILURE 0.04s | TestJmxIntegration.testInfoRegistryVsMbeanServer <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: regSize != numMbeans expected:<79> but was:<81>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([CF457CF6E471C68:3997F649BAD78365]:0)\n   [junit4]    > \tat org.apache.solr.core.TestJmxIntegration.testInfoRegistryVsMbeanServer(TestJmxIntegration.java:86)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:724)\n\n "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13725020",
            "date": "2013-07-31T08:28:06+0000",
            "content": "Possibly related: https://issues.apache.org/jira/browse/SOLR-4735 "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-14047065",
            "date": "2014-06-29T06:57:25+0000",
            "content": "1. Made map key as JMX canonical name that correspond to registered mbean and unique\n2. Overriden Map.get in order to translate existing key to JMX canonical name\n3. Changed unregister method: removed unused InfoMBean parameter, changed unregister to work on canonical name \n4. JMX names reminded unchanged and backward compatible "
        }
    ]
}