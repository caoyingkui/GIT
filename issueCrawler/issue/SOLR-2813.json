{
    "id": "SOLR-2813",
    "title": "TrieTokenizerFactory should catch NumberFormatException, return 400 (not 500)",
    "details": {
        "affect_versions": "3.4,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "TrieTokenizerFactory is allowing bad user input to result in a 500 error rather than a 400.  For a long-valued field, for example, this code in TrieTokenizerFactory.reset() will throw a NumberFormatException:\n\n> case LONG:\n>          ts.setLongValue(Long.parseLong(v));\n>          break;\n\nThe NFE gets all the way out to RequestHandlerBase.handleRequest():\n\n> catch (Exception e) {\n>      SolrException.log(SolrCore.log,e);\n>      if (e instanceof ParseException) \n{\n>        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n>      }\n\nbut is not caught here, and ends up coming out of SolrDispatchFilter.sendError as a 500.\n\nSimply catching NFE and turning it into a SolrException does the trick:\n\n==== solr/core/src/java/org/apache/solr/analysis/TrieTokenizerFactory.java#1 - /4.0-trunk-09082011/solr/core/src/java/org/apache/solr/analysis/TrieTokenizerFactory.java ====\n110a111,112\n>     } catch (NumberFormatException e) {\n>         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unable to parse input\", e);",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13150953",
            "date": "2011-11-16T01:32:12+0000",
            "content": "Jeff: thanks for reporting this.\n\nI've committed a match similar to what you proposed (except with slightly different scoping so we can include the value in the error message) to trunk...\n\nCommitted revision 1202499.\n\n...and i'm currently testing the backport to 3x "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13150982",
            "date": "2011-11-16T02:51:56+0000",
            "content": "Ok .. backporting has lead me into some confusion.\n\nThe new tests were failing, which lead me to an investigation where i discovered that TrieTokenizerFactory isn't used as much as I thought \u2013 some of the things I was testing for were actually dependent on SOLR-2402, so I backported that to 3x.\n\nOnce that was done, backporting this patch caused queries and updates with malformed numbers to both return 400 errors instead of 500 errors in ad-hoc testing, but it still didn't fix the failures in BasicFunctionalityTest.  Digging in a little more the problem seems to be that on trunk, the TestHarness.update method uses DirectSolrConnection which propgates any errors into the test framework, while on the 3x branch it's still using XmlUpdateRequestHandler.doLegacyUpdate so the exception is hidden from the test.\n\nI need to look at this again tomorrow when i have some more time \u2013 the functionality of this patch is good to go on 3x, it's just the damn test case that is anoying.\n\n(Looks like the TestHarness changes are from r1054124 as part of SOLR-1930 ... maybe just backport the test changes from that commit w/o removing the deprecated method?) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13151674",
            "date": "2011-11-17T00:22:37+0000",
            "content": "Sorry ... I've given up on trying to backport this to 3x.\n\nAfter beating my head against a wall trying to merge r1054124, I just manually hacked the cahnges in, got all existing tests to pass, and then backported r1202499 only to discover that on the 3x branch TrieTokenizerFactory evidently isn't used in all the same places, so the NFE was propagating all the way up.\n\nI'm moving on to other things, so resolving this for now.  Can be re-opened as needed if someone decides to tackle the backport. "
        }
    ]
}