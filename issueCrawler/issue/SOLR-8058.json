{
    "id": "SOLR-8058",
    "title": "Collections that start with css*, js*, img*, and tpl* can't be accessed as they match the exclusion filter",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.3.1",
            "5.4"
        ],
        "affect_versions": "5.2,                                            5.2.1,                                            5.3,                                            5.3.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "Collections that match css*, js*, img*, and tpl* can't be reached as the SDF short circuits paths that match those regular expressions.\n\nIt should have only short circuited exact matches for those directories i.e.\n\\css/,/js/,/img/,/tpl/ but that doesn't seem to be the case.\n\nNeed to fix this regular expression so that the collection can be reached.",
    "attachments": {
        "SOLR-8058.patch": "https://issues.apache.org/jira/secure/attachment/12756072/SOLR-8058.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-15T18:40:55+0000",
            "author": "Upayavira",
            "content": "I'm not quite sure what that code is trying to do. The Angular UI adds /partials to the list of directories, and it works just fine. Looking at the regexp entries, they are broken anyway: \n\n\n    <init-param>\n      <param-name>excludePatterns</param-name>\n      <param-value>/css/*,/js/*,/img/*,/tpl/*</param-value>\n    </init-param>\n\n\nThat says any value that starts with /css, then is followed by a sequence of zero or more forward slashes. I think what is intended is /css/.*, no?\n\nWhy do we need these excluded patterns? ",
            "id": "comment-14745911"
        },
        {
            "date": "2015-09-15T18:53:56+0000",
            "author": "Anshum Gupta",
            "content": "You are right, we need .+ or .* there.\n\nThe reason why we added these was to bypass the SolrDispatchFilter logic and creation of the HttpSolrCall object for static files. This is also required so you don't have to setup authentication rules for static admin UI content. ",
            "id": "comment-14745929"
        },
        {
            "date": "2015-09-15T19:09:09+0000",
            "author": "Upayavira",
            "content": "if we need to mark such files as \"static\" then perhaps we should serve them all from a specific directory - e.g. we could have refer to all but the index.html (or admin.html) files from /_admin/css/*.\n\nOr why not make the regexp .*\\.css$, i.e. ends with .css. No queries should end with .css. I guess people could, however, add a .html request handler. Hmm. ",
            "id": "comment-14745946"
        },
        {
            "date": "2015-09-15T19:28:05+0000",
            "author": "Anshum Gupta",
            "content": "I agree, and while working on this, I did think about moving things to a single static root, but that was reasonably invasive so decided against it at that point.\nAbout things ending in .css, it's better I think to just document the exact static directory names to be reserved keywords for Solr. I'm open to suggestions though. ",
            "id": "comment-14745985"
        },
        {
            "date": "2015-09-15T20:37:58+0000",
            "author": "Anshum Gupta",
            "content": "Here's the fix. Strangely, the test passes even without the patch, so I'm certainly missing something from the test framework somewhere.\n\nThe test is fairly straight, it creates a collection called \"css33\", adds a document to it and tries to query and assert on numFound. ",
            "id": "comment-14746122"
        },
        {
            "date": "2015-09-15T21:04:12+0000",
            "author": "Anshum Gupta",
            "content": "Working on the changes so that JettyConfig for the tests include the exclusion filter. ",
            "id": "comment-14746192"
        },
        {
            "date": "2015-09-16T07:01:09+0000",
            "author": "Upayavira",
            "content": "How about this for an approach:\n\nCheck against a regexp, such as ^.*\\.css$. Then, if it matches, check the file system for a file. If a file exists, serve the file, otherwise let it through. ",
            "id": "comment-14747012"
        },
        {
            "date": "2015-09-16T07:09:09+0000",
            "author": "Hoss Man",
            "content": "i think the patch prefix check is a safer bet: 1) it's simpler; 2) it doesn't risk false negatives if someone uses something like the ShowFileRequestHandler to serve a .html file from the config set.\n\nif we can consolidate all of the admin UI resources into a single root dir then great, but as long as they are confined to a fixed set of dirs it shouldn't matter (and moving them around now is just an added complexity / risk to try and get into a bug fix) ",
            "id": "comment-14747032"
        },
        {
            "date": "2015-09-16T07:16:09+0000",
            "author": "Upayavira",
            "content": "I'm absolutely behind moving all the UI into, say, _admin. I guess then, we can have /solr/ as the UI, and /solr/_admin/original.html as, in time, the old UI. The only URL not inside _admin is /solr/. For 5.3.1, index.html would also be outside of _admin. ",
            "id": "comment-14747056"
        },
        {
            "date": "2015-09-16T10:36:51+0000",
            "author": "Noble Paul",
            "content": "we should move all the UI related stuff to another path. Consider that each incoming call has to apply all this regexp and that is unnecessary price to pay. +1 to move all these under _admin/ or _ui/ ",
            "id": "comment-14747277"
        },
        {
            "date": "2015-09-16T10:45:28+0000",
            "author": "Upayavira",
            "content": "My only concern is that it is a rather large change for a point release. Can we do something small for 5.3.1, and fix it properly in 5.4? ",
            "id": "comment-14747287"
        },
        {
            "date": "2015-09-16T11:07:56+0000",
            "author": "Noble Paul",
            "content": "for this point release we can do a small fix. But having a list of regexp to check in every incoming request is a bad idea. We should fix it properly in 5.4 ",
            "id": "comment-14747307"
        },
        {
            "date": "2015-09-16T12:32:51+0000",
            "author": "Noble Paul",
            "content": "please commit this ASAP\nI need to spin a build ",
            "id": "comment-14768849"
        },
        {
            "date": "2015-09-16T13:32:32+0000",
            "author": "Anshum Gupta",
            "content": "I'm at it. Just trying to get the JettySolrRunner to have this conf. for the test. ",
            "id": "comment-14768927"
        },
        {
            "date": "2015-09-16T13:56:34+0000",
            "author": "Anshum Gupta",
            "content": "Here's an updated patch but I still can't get this test to fail without the fix.\n\nI spoke with Steve Rowe and figured he mentioned that in SDF, request.getServletPath() always returns the empty string, maybe because it's not an HTTP request?  ((Request)request).getPathInfo() seems to return the correct thing. \n\nbut the problem there is that it doesn't seem to be working with non-embedded jetty.\n\nAny help/suggestions here would be good. ",
            "id": "comment-14768970"
        },
        {
            "date": "2015-09-16T15:13:12+0000",
            "author": "Noble Paul",
            "content": "I have done manual test and this fix has solved the problem. W/o the fix it fails\nI dunno why the test setup is not working ",
            "id": "comment-14790527"
        },
        {
            "date": "2015-09-16T17:31:06+0000",
            "author": "Steve Rowe",
            "content": "Patch that fails without the exclude pattern fix.  All Solr tests pass on trunk, and manual testing works, including the old and new admin UIs.\n\nThe testing issue AFAICT is that HTTPServletRequest.getServletPath() returns depends on the pattern used:\n\n\n Returns the part of this request's URL that calls the servlet. This path starts with a \"/\" character and includes either the servlet name or a path to the servlet, but does not include any extra path information or a query string. Same as the value of the CGI variable SCRIPT_NAME.\n\nThis method will return an empty string (\"\") if the servlet used to process this request was matched using the \"/*\" pattern.\n\nSo in JettySolrRunner, the servlet path is returned as the empty string, but in manual testing, it's not.\n\nThe attached patch matches exclude patterns against the concatenation of the servlet path and all following path segments.\n\nAnshum Gupta pointed me to http://stackoverflow.com/a/21046620, which explains the situation well, with an example. ",
            "id": "comment-14790774"
        },
        {
            "date": "2015-09-16T17:45:26+0000",
            "author": "Noble Paul",
            "content": "Let's commit this and move on ",
            "id": "comment-14790789"
        },
        {
            "date": "2015-09-16T17:50:37+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for the patch Steve Rowe and thanks Noble Paul for the patience.\n\nI just need 5 minutes to test this out and I'll commit it right after.\n\nP.S: Will check if Steve already ran precommit and test, else it'd take a bit longer than 5 min. ",
            "id": "comment-14790795"
        },
        {
            "date": "2015-09-16T18:17:00+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1703441 from Anshum Gupta in branch 'dev/trunk'\n[ https://svn.apache.org/r1703441 ]\n\nSOLR-8058: Fix the exclusion filter so that collections that start with js, css, img, tpl can be accessed. ",
            "id": "comment-14790848"
        },
        {
            "date": "2015-09-16T19:00:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1703445 from Anshum Gupta in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1703445 ]\n\nSOLR-8058: Fix the exclusion filter so that collections that start with js, css, img, tpl can be accessed.(merge from trunk) ",
            "id": "comment-14790942"
        },
        {
            "date": "2015-09-16T19:05:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1703447 from Anshum Gupta in branch 'dev/branches/lucene_solr_5_3'\n[ https://svn.apache.org/r1703447 ]\n\nSOLR-8058: Fix the exclusion filter so that collections that start with js, css, img, tpl can be accessed.(merge from branch_5x) ",
            "id": "comment-14790957"
        },
        {
            "date": "2015-09-16T19:13:35+0000",
            "author": "Anshum Gupta",
            "content": "Thanks everyone! ",
            "id": "comment-14790972"
        },
        {
            "date": "2016-01-12T15:53:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1724263 from Adrien Grand in branch 'dev/branches/lucene_solr_5_4'\n[ https://svn.apache.org/r1724263 ]\n\nSOLR-8058, SOLR-8059: Fix CHANGES entries. ",
            "id": "comment-15094123"
        },
        {
            "date": "2016-02-08T22:35:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d83223a564f0c4e2b09af22f8dcf139cc415ce5c in lucene-solr's branch refs/heads/branch_5_4 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d83223a ]\n\nSOLR-8058, SOLR-8059: Fix CHANGES entries.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/branches/lucene_solr_5_4@1724263 13f79535-47bb-0310-9956-ffa450edef68 ",
            "id": "comment-15137881"
        }
    ]
}