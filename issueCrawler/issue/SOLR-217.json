{
    "id": "SOLR-217",
    "title": "schema option to ignore unused fields",
    "details": {
        "affect_versions": "1.2",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [
            "update"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "One thing that causes problems for me (and i assume others) is that Solr is schema-strict in that unknown fields cause solr to throw exceptions and there is no way to relax this constraint.  this can cause all sorts of serious problems if you have automated feeding applications that do things like SELECT * FROM table1 or where you want to add other fields to the document for processing purposes before sending them to solr but don't want to deal with 'cleanup'",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--ignoreNonIndexedNonStoredField.patch": "https://issues.apache.org/jira/secure/attachment/12356429/ASF.LICENSE.NOT.GRANTED--ignoreNonIndexedNonStoredField.patch",
        "ignoreUnnamedFields_v3.patch": "https://issues.apache.org/jira/secure/attachment/12356507/ignoreUnnamedFields_v3.patch",
        "ignoreUnnamedFields.patch": "https://issues.apache.org/jira/secure/attachment/12356411/ignoreUnnamedFields.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Will Johnson",
            "id": "comment-12492306",
            "date": "2007-04-27T14:20:50+0000",
            "content": "the attached patch solve this problme by adding a new option to schema.xml to allow unnamed fields including those that don't match dynamic fields to be ignored.  the default is false if the attribute is missing which is consistent with existing SOLR functionality.  if you want to enable this feature the schema.xml would look like:\n\n....  blah blah blah ...\n<fields ignoreUnnamedFields=\"true\">\n....  blah blah blah ... "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12492324",
            "date": "2007-04-27T15:41:59+0000",
            "content": "This is a unique enough of a requirement, I'm not sure an additional configuration switch is warranted.\n\nHowever, another solution might be to allow fields to be unstored and unindexed (essentially doing nothing).  That would allow you to map a dynamic field of \"*\" to an unstored + unindexed field.\nIt would also allow people to transition schemas + older clients.  They could change the old field to unstored + unindexed and use a copyField to move it to the new field. "
        },
        {
            "author": "Will Johnson",
            "id": "comment-12492326",
            "date": "2007-04-27T15:50:16+0000",
            "content": "i was actually taking this requirement from the other enterprise search\nengines that i've worked with that do this by default.  ie, solr is\ndifferent in this case.  your *->nothing method sounds good as well but it\ndoesn't seem as obvious to someone reading the schema or trying to feed\ndata.  you might also run into problems later on when there are other\nproperties for 'things to do' for fields other than indexing and searching.\n\n\n\twill\n\n\n\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12492332",
            "date": "2007-04-27T16:11:00+0000",
            "content": "I like Yonik's suggestion of allowing unstored+unindexed fields to be no-op. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12492357",
            "date": "2007-04-27T18:15:11+0000",
            "content": "whatever mechanism we may add for supporting something like this, the default if unspecified should definitely be an error ... if Solr is asked to index data it doesn't know what to do with it should complain, rather then silently ignoring it ... this will help people with typos in their schema or indexing code find their problems faster.\n\nAs for the proposed solutions: my initial reaction to reading the comments so far was to agree with Will: having an explicit true/false option makes it much cleraer to people reading the schema what's going on ... but in thinking about the possible use cases I prefer yonik's approach: leveraging the existing field/dynamcField syntax will allow people to not only say \"any unknown field should be ignored\" but also \"field XXXX should be ignored\" and \"any unknown field that starts with S_* should be ignored\"\n\n(there's also the question as to hwat should happen if i did have a stored=\"true\" dynamicField of \"*\" and i set ignoreUnnamedFields=\"true\")\n\n\nFor the example config, we might want to do something like this to make it more obvious what's going on, and to serve as a recommended config style...\n\n   <!-- since fields of this type are by default not stored or indexed, any data added to \n         them will be ignored outright\n     -->\n   <fieldtype name=\"ignored\" stored=\"false\" indexed=\"false\" class=\"solr.StrField\" />\n   ...\n   <!-- ignore any fields that don't already match an existing field name or dynamic field -->\n   <dynamicField name=\"*\" type=\"ignored\" />\n "
        },
        {
            "author": "Will Johnson",
            "id": "comment-12492367",
            "date": "2007-04-27T18:50:16+0000",
            "content": "I like that solution and I can definitely see the advantages of having\ndumb_*=ignored and so on.  How does this patch sound instead of the\nprevious:\n\n\npublic Field createField(SchemaField field, String externalVal, float\nboost) {\n    String val;\n    try \n{\n      val = toInternal(externalVal);\n    }\n catch (NumberFormatException e) \n{\n      throw new SolrException(500, \"Error while creating field '\" +\nfield + \"' from value '\" + externalVal + \"'\", e, false);\n    }\n    if (val==null) return null;\n    if (!field.indexed() && !field.stored()) \n{\n        log.finest(\"Ignoring unindexed/unstored field: \" + field);\n        return null;\n    }\n\n    ... blah blah blah....\n\n\n\n\twill\n\n\n\n\n\n "
        },
        {
            "author": "J.J. Larrea",
            "id": "comment-12492369",
            "date": "2007-04-27T18:52:34+0000",
            "content": "+1 to Hoss' elaboration of Yonik's suggested approach, except for reverse-compatibility (where we DO want an error for unknown fields) schema.xml should probably read something like:\n\n   <!-- since fields of this type are by default not stored or indexed, any data added to\n         them will be ignored outright\n     -->\n   <fieldtype name=\"ignored\" stored=\"false\" indexed=\"false\" class=\"solr.StrField\" />\n   ...\n   <!-- uncomment the following to ignore any fields that don't already match an existing\n          field name or dynamic field, rather than reporting them as an error.\n          alternately, change the type=\"ignored\" to some other type e.g. \"text\" if you want\n          unknown fields indexed and/or stored by default -->\n   <!-dynamicField name=\"*\" type=\"ignored\" /-> "
        },
        {
            "author": "Will Johnson",
            "id": "comment-12492664",
            "date": "2007-04-30T12:54:37+0000",
            "content": "since we now have required fields (http://issues.apache.org/jira/browse/SOLR-181) any chance we can have ignored fields as well?  let me know if something else needs to be done to the patch but as far as i can tell the code works and people seem to agree that it's the correct approach.\n\n\n\twill\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12492665",
            "date": "2007-04-30T13:03:32+0000",
            "content": "Will, could you please add the last patch again, and click \"Grant License to ASF\"?\n "
        },
        {
            "author": "Will Johnson",
            "id": "comment-12492672",
            "date": "2007-04-30T14:08:07+0000",
            "content": "v3 patch included.  this version of the patch also takes into account the suggested example/solr/conf/schema.xml changes.   "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12492986",
            "date": "2007-05-01T23:40:23+0000",
            "content": "added a simple test to the existing patch.\n\none thing to note is that this will result in the field being \"ignored\" if you try to query on it as well ... but this is a more general problem of qhat to do when people try to query on an unindexed field (see SOLR-223)\n\nwill commit in a day or so barring objections "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12494359",
            "date": "2007-05-08T18:07:41+0000",
            "content": "commited r536278 "
        }
    ]
}