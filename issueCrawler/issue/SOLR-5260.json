{
    "id": "SOLR-5260",
    "title": "Faceting on a field in SolrCloud with docValues=true and indexed=false fails",
    "details": {
        "affect_versions": "4.4",
        "status": "Resolved",
        "fix_versions": [
            "6.4",
            "7.0"
        ],
        "components": [
            "search",
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I have a problem doing facet search on a doc value field in a multi shard collection.\n\nMy Solr schema specifies fieldA as a docvalue type and I have created a two shard collection using Solr 4.4.0 (and the unreleased 4.5 branch).\nWhen I do a facet search on fieldA with a \"large\" facet.limit then the query fails with the below exception\nA \"large\" facet.limit seems to be when (10 + (facet.limit * 1,5)) * number of shards > rows matching my query\n\nThe exception does not occur when I run with a single shard collection.\nIt can easily be reproduced by indexing a single row and querying it, as the default facet.limit is 100.\n\nThe facet query received by Solr looks as follows:\n\n    576793 [qtp170860084-18] INFO  org.apache.solr.core.SolrCore  \u00a6 [trym_shard2_replica1] webapp=/solr path=/select \n     params={facet=true&start=0&q=*:*&distrib=true&collection=trym&facet.field=fieldA&wt=javabin&version=2&rows=0} \n     status=500 QTime=20\n\n\nOne of the \"internal query\" send by Solr to its shard looks like\n\n    576783 [qtp170860084-19] INFO  org.apache.solr.core.SolrCore  \u00a6 [trym_shard1_replica1] webapp=/solr path=/select \n     params={facet=true&distrib=false&collection=trym&wt=javabin&version=2&rows=0&NOW=1379855011787    \n       &shard.url=192.168.56.1:8501/solr/trym_shard1_replica1/&df=text&fl=id,score&f.fieldA.facet.limit=160\n       &start=0&q=*:*&facet.field=fieldA&isShard=true&fsv=true} \n     hits=1 status=500 QTime=2\n\n\n\nThe exception thrown by Solr is as follows\n\n576784 [qtp170860084-17] ERROR org.apache.solr.servlet.SolrDispatchFilter  \u00a6 null:java.lang.IllegalStateException: \n     Cannot use facet.mincount=0 on a field which is not indexed\n        at org.apache.solr.request.NumericFacets.getCounts(NumericFacets.java:257)\n        at org.apache.solr.request.SimpleFacets.getTermCounts(SimpleFacets.java:423)\n        at org.apache.solr.request.SimpleFacets.getFacetFieldCounts(SimpleFacets.java:530)\n        at org.apache.solr.request.SimpleFacets.getFacetCounts(SimpleFacets.java:259)\n        at org.apache.solr.handler.component.FacetComponent.process(FacetComponent.java:78)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:208)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1904)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:659)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:362)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:158)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n        at org.eclipse.jetty.server.Server.handle(Server.java:368)\n        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n        at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)\n        at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:953)\n        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1014)\n        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:861)\n        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n        at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)\n        at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n        at java.lang.Thread.run(Thread.java:724)\n\n\n\nMy schema.xml contains the following lines (among others )\n\n    <dynamicField name=\"*A\" type=\"dlong\" indexed=\"false\" stored=\"true\" docValues=\"true\" required=\"true\"/>\n    ...\n    <fieldType name=\"dlong\" class=\"solr.TrieLongField\" docValuesFormat=\"Disk\" precisionStep=\"0\" positionIncrementGap=\"0\"/>",
    "attachments": {
        "SOLR-5260.patch": "https://issues.apache.org/jira/secure/attachment/12840572/SOLR-5260.patch",
        "SOLR-5260-testfix.patch": "https://issues.apache.org/jira/secure/attachment/12840587/SOLR-5260-testfix.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Trym M\u00f8ller",
            "id": "comment-13774602",
            "date": "2013-09-23T14:57:36+0000",
            "content": "This only seems to be the case when faceting on a numeric field. Why SimpleFacets.java wants it in that way is not clear:\n\n if (ft.getNumericType() != null && sf.hasDocValues()) {\n      // only fcs is able to leverage the numeric field caches\n      method = FacetMethod.FCS;\n    }\n\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-15616772",
            "date": "2016-10-28T22:20:46+0000",
            "content": "This is on trunk, fresh pull.\n\nI was looking at this today and it's a problem indeed. Since we're advocating using docValues for faceting failing sometimes and succeeding others is disconcerting.\n\nI have a field indexed=\"false\" docValues=\"true\". Sometimes it works and sometimes it doesn't, it depends as Trym says, on how many docs are in the result set and the number of shards. The error is reported as Trym indicated, even on a current trunk.\n\nCaused by: java.lang.IllegalStateException: Cannot use facet.mincount=0 on field eoe which is not indexed\n\tat org.apache.solr.request.NumericFacets.getCounts(NumericFacets.java:256)\n\tat org.apache.solr.request.SimpleFacets.getTermCounts(SimpleFacets.java:465)\n\njson facets work with mincount>0. If mincount=0 it fails with an error message (on the client and the server) something like:\n\"Numeric fields do not support facet mincount=0; try indexing as terms\".\n\nAnyway, I'm surely not going to get to this in the near  future, so un-assigning it to myself. Not something for 6.3 as it's been around for a long time.\n\nI guess there are two work-arounds at present:\n1> use json facets\nor\n2> set index=true\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-15648063",
            "date": "2016-11-08T16:45:41+0000",
            "content": "Assigning to myself to not lose track of it. I certainly won't get to it promptly so anyone please feel free. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-15698569",
            "date": "2016-11-26T21:59:12+0000",
            "content": "Patch. The actual code change is one line, the rest is testing.\n\nTried a new approach to getting custom schemas. Rather than create yet another schema file I used the managed schema api to create what I needed in @BeforeClass. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15698570",
            "date": "2016-11-26T21:59:30+0000",
            "content": "Commit ca6626604b968eeb11630b0fdf64178a71f3999b in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ca66266 ]\n\nSOLR-5260: Faceting on a field in SolrCloud with docValues=true and indexed=false fails "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15698587",
            "date": "2016-11-26T22:11:49+0000",
            "content": "Commit af904f8dd2a5e3001fbd764c474c745b7b34147c in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=af904f8 ]\n\nSOLR-5260: Faceting on a field in SolrCloud with docValues=true and indexed=false fails\n(cherry picked from commit ca66266) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15699143",
            "date": "2016-11-27T06:11:39+0000",
            "content": "Commit e4733f696eba31e6903da140ae411bccff996b6e in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e4733f6 ]\n\nSOLR-5260: Faceting on a field in SolrCloud with docValues=true and indexed=false fails, test fix "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15699145",
            "date": "2016-11-27T06:12:23+0000",
            "content": "Commit 500c2befe98cce2a2619d1022054d7e75c68716d in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=500c2be ]\n\nSOLR-5260: Faceting on a field in SolrCloud with docValues=true and indexed=false fails, test fix "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15699156",
            "date": "2016-11-27T06:22:26+0000",
            "content": "Commit 523b6b1b9f199b854642714e7b3d23e9457115d7 in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=523b6b1 ]\n\nSOLR-5260: Faceting on a field in SolrCloud with docValues=true and indexed=false fails, test fix\n(cherry picked from commit e4733f6) "
        },
        {
            "author": "David Smiley",
            "id": "comment-15699761",
            "date": "2016-11-27T14:19:09+0000",
            "content": "Nice testing technique to not create yet another test schema, Erick.  I think I may approach this similarly in future tests.  I wonder how succinct it could be made if there's just a few fields needed.  Clearly this tests requires a lot and I see why there is so much code devoted to defining the schema for this test.\n\nOne little quibble.  Instead of Stream.of(...).collect(Collectors.toList(), I think it's much more common (and thus clear) to simply use Arrays.asList(...). Also, using SimpleDateFormat for the ISO-8601 format we use in Solr is much more wordy way of doing it than Java 8 Instant... in particular the one line where you reference the format would then look like this:\nreturn Instant.ofEpochMilli(985_847_645 + (long) base + counter).toString(); "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-15699870",
            "date": "2016-11-27T15:45:20+0000",
            "content": "David:\n\nYeah, still not up to the Java8 Instant stuff, I'll put that in my bag of tricks.\n\nAbout defining fields on the fly. One of my questions is whether this could be abstracted into a more consumable form and, maybe, put in SolrCloudTestCase? Or even static methods in a utility class? There was a lot of code there as you say just to get my fields defined. Some of the bloat is because I needed a way to predict what the sort order would be but still wanted some randomness, and partly I thought it a PoC....\n\nAnd did I really check in code with //nocommit in it? Yes I did. Git and I are not friends, a merge problem 'cause trunk is OK.. Fixing shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15699875",
            "date": "2016-11-27T15:48:40+0000",
            "content": "Commit 736c9ff8e33019ba5f29f464629ad501f915b383 in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=736c9ff ]\n\nSOLR-5260 merge error "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-15699877",
            "date": "2016-11-27T15:50:23+0000",
            "content": "Attached a testfix patch. Does NOT have the //nocommit I managed to put in 6x.\n\nSorry for the noise. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-15838305",
            "date": "2017-01-25T18:25:04+0000",
            "content": "The issue here is that a numeric field indexed=false and docValues=true doesn't really work with facet.mincount=0 (distributed request or not). Values with count=0 are not returned.  "
        }
    ]
}