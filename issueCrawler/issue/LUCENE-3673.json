{
    "id": "LUCENE-3673",
    "title": "NativeFSLockFactory Race Condition",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "core/store"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.4,                                            3.5",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "When the NativeFSLock releases, it deletes the lock file after lock release.\nIn a concurrent situation, it is possible for another thread or process to acquire the lock before the delete happens. Any other third thread or process will then be able to recreate the lock file and acquire the lock while a lock is already held on the deleted file.",
    "attachments": {
        "BreakIt.java": "https://issues.apache.org/jira/secure/attachment/12509364/BreakIt.java",
        "LUCENE-3673.patch": "https://issues.apache.org/jira/secure/attachment/12509365/LUCENE-3673.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-01-04T00:58:54+0000",
            "content": "This example demonstrate how the locking mechanism in NativeFSLock has a race condition.  ",
            "author": "Yaokai Jiang",
            "id": "comment-13179187"
        },
        {
            "date": "2012-01-04T01:00:23+0000",
            "content": "Suggested patch ",
            "author": "Yaokai Jiang",
            "id": "comment-13179190"
        },
        {
            "date": "2016-06-09T14:50:46+0000",
            "content": "This seems to have been fixed by other changes. Testing also improved via LUCENE-5624. ",
            "author": "Adrien Grand",
            "id": "comment-15322642"
        }
    ]
}