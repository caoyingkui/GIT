{
    "id": "SOLR-885",
    "title": "Generify NamedListCodec",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "make NamedListCodec a generic class which may be able to write any of the supported object\n\tDeprecate NamedList and use only SimpleOrderedMap. (Yes it is backward compatible)\n\tIdeally I wish to call this JavabinCodec because it should be able to be used to write any kind of supported objects",
    "attachments": {
        "SOLR-885.patch": "https://issues.apache.org/jira/secure/attachment/12394807/SOLR-885.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12651241",
            "date": "2008-11-27T04:19:56+0000",
            "content": "this also throws an exception for invalid version "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12651368",
            "date": "2008-11-27T15:10:43+0000",
            "content": "NamedList and SimpleOrderedMap have different semantics for JSON output (that's why there were two).  It seems useful to be able to preserve that extra info in javabin since the final client request may be in JSON. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12651470",
            "date": "2008-11-28T06:11:42+0000",
            "content": "Patch w/o deprecating NamedList . \n\nBut , before javabin we used to use  xml which has same Semantics for namedList and SimpleOrderedMap it is right?\n\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12651678",
            "date": "2008-11-28T23:00:41+0000",
            "content": "But , before javabin we used to use xml which has same Semantics for namedList and SimpleOrderedMap it is right?\n\nYou are talking about solrj, correct?  Yes - by default we used a syntax that keeps order.  But that does not mean the difference between the classes is not useful for other cases\n\nIdeally the javabin implementation would know if the result was originally SimpleOrderedMap or not.  This would only really be important in the case where you use javabin to pass on a result to a client (distributed?)\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12651740",
            "date": "2008-11-29T18:32:50+0000",
            "content": "by default we used a syntax that keeps order. But that does not mean the difference between the classes is not useful for other cases\n\nI do not see any difference between NamedList and SimpleOrderedMap . Both has same semantics . So, having different representation in serialized formats look odd "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12651743",
            "date": "2008-11-29T19:03:41+0000",
            "content": "I do not see any difference between NamedList and SimpleOrderedMap . Both has same semantics.\n\nSee the javadoc for SimpleOrderedMap:\n\n\n/** <code>SimpleOrderedMap</code> is a {@link NamedList} where access by key is more\n * important than maintaining order when it comes to representing the\n * held data in other forms, as ResponseWriters normally do.\n * It's normally not a good idea to repeat keys or use null keys, but this\n * is not enforced.  If key uniqueness enforcement is desired, use a regular {@link Map}.\n * <p>\n * For example, a JSON response writer may choose to write a SimpleOrderedMap\n * as {\"foo\":10,\"bar\":20} and may choose to write a NamedList as\n * [\"foo\",10,\"bar\",20].  An XML response writer may choose to render both\n * the same way.\n * </p>\n\n\n\nThe problem is that some clients don't maintain order (for example, doing eval() of JSON/python/ruby output).  It wouldn't be an issue if we had control over all clients, but we don't. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12653177",
            "date": "2008-12-04T05:21:46+0000",
            "content": "OK. let us not make the change and stick to the original description of the bug make NamedListCodec generic\nthe latest patch just does that "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12654745",
            "date": "2008-12-09T09:15:33+0000",
            "content": "I think we can make this one change. No need to deprecate NamedList and use only SimpleOrderedMap.\n\nAre there any concerns? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12654840",
            "date": "2008-12-09T16:15:40+0000",
            "content": "Noble, did you attach the latest patch? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12654876",
            "date": "2008-12-09T18:18:36+0000",
            "content": "after Ryan moved the packages around the patch became invalid\n\nnew patch to sync with trunk\n\nsome fields/methods are changed from private to public/protected so that this can be used extend the format "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12657381",
            "date": "2008-12-17T13:28:14+0000",
            "content": "NamedListCodec is renamed as JavabinCodec over and above the previous patch\n\nNamedListCodec now extends JavabinCodec and it is also marked as deprected "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12657383",
            "date": "2008-12-17T13:34:24+0000",
            "content": "This looks good Noble. Let us do the rename as another patch/commit. It is difficult to figure out the changes with the renamed source file. We also need to update the Javadocs. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12657384",
            "date": "2008-12-17T13:35:49+0000",
            "content": "My second last patch and the latest patch has only this one difference (the rename) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12657487",
            "date": "2008-12-17T19:01:48+0000",
            "content": "What is gained by making NamedListCodec a generic? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12657667",
            "date": "2008-12-18T04:28:43+0000",
            "content": "NamedListCodec dictates the root Object to be a NamedList . It is useful if we can write other supported types as the root object. say Map, List\n\nWhy give a special status to NamedList when the implementation has no such constraints? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12657681",
            "date": "2008-12-18T05:51:27+0000",
            "content": "NamedListCodec dictates the root Object to be a NamedList \n\nAgreed, but theType parameter is only used to cast the final root Object to the Type.\n\nSo instead of this big patch, simply change the signature of the method:\n    public NamedList unmarshal(InputStream is)\nTo\n   public Object unmarshal(InputStream is) "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12657691",
            "date": "2008-12-18T06:03:23+0000",
            "content": "So instead of this big patch, simply change the signature of the method:\npublic NamedList unmarshal(InputStream is)\nTo\npublic Object unmarshal(InputStream is)\n\nThis is fine .No need to make it generic\n\nBut renaming the class to JavabinCodec makes sense right?  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12657903",
            "date": "2008-12-18T21:04:59+0000",
            "content": "But renaming the class to JavabinCodec makes sense right? \n\nYep.\n\nOf course, I was never quite sure why it was \"javabin\" and not just \"bin\" or \"binary\". "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12657999",
            "date": "2008-12-19T04:08:10+0000",
            "content": "Of course, I was never quite sure why it was \"javabin\" and not just \"bin\" or \"binary\".\n\nFrankly, I don't have an answer. It just happened.  \nMy thought process was that there would be other binary formats coming up later protobuf/thrift etc. \n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12658063",
            "date": "2008-12-19T11:06:55+0000",
            "content": "With this patch NamedListCodec returns Object instead. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12658064",
            "date": "2008-12-19T11:10:01+0000",
            "content": "Forgot to change TestBinaryResponseWriter for the change in NamedListCodec "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12658084",
            "date": "2008-12-19T13:25:27+0000",
            "content": "Committed revision 728017.\n\nI'll give a patch now to rename NamedListCodec to JavaBinCodec. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12658457",
            "date": "2008-12-22T06:46:43+0000",
            "content": "Committed revision 728622. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775591",
            "date": "2009-11-10T15:51:51+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}