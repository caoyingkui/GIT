{
    "id": "LUCENE-3696",
    "title": "building a kuromoji dictionary is very slow and eventually fails if you use java 5",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "affect_versions": "3.6",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Note: This only affects you if you use java 5 on 3.x, and it only affects you if you want to download/rebuild the dictionary. \nthe analyzer itself works fine on 3.x with java 5.\n\nWith java 6, building a kuromoji dictionary is quite fast:\n\n     [java] building tokeninfo dict...\n     [java]   parse...\n     [java]   sort...\n     [java]   encode...\n     [java]   53645 nodes, 253185 arcs, 1954817 bytes...   done\n     [java] done\n     [java] building unknown word dict...done\n     [java] building connection costs...done\n\nBUILD SUCCESSFUL\nTotal time: 6 seconds\n\n\n\nHowever, if you use java 5, it takes forever and eventually runs out of memory in the CSV parsing phase.\nSo we might need to optimize the CSV parser (like precompile its patterns).\n\n\n     [java] building tokeninfo dict...\n     [java]   parse...\n     [java] Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n     [java] \tat java.util.regex.Pattern.newSlice(Pattern.java:2909)\n     [java] \tat java.util.regex.Pattern.atom(Pattern.java:1898)\n     [java] \tat java.util.regex.Pattern.sequence(Pattern.java:1794)\n     [java] \tat java.util.regex.Pattern.expr(Pattern.java:1687)\n     [java] \tat java.util.regex.Pattern.compile(Pattern.java:1397)\n     [java] \tat java.util.regex.Pattern.<init>(Pattern.java:1124)\n     [java] \tat java.util.regex.Pattern.compile(Pattern.java:817)\n     [java] \tat java.lang.String.replaceAll(String.java:2000)\n     [java] \tat org.apache.lucene.analysis.kuromoji.util.CSVUtil.unQuoteUnEscape(CSVUtil.java:84)\n     [java] \tat org.apache.lucene.analysis.kuromoji.util.CSVUtil.parse(CSVUtil.java:55)\n     [java] \tat org.apache.lucene.analysis.kuromoji.util.TokenInfoDictionaryBuilder.buildDictionary(TokenInfoDictionaryBuilder.java:96)\n     [java] \tat org.apache.lucene.analysis.kuromoji.util.TokenInfoDictionaryBuilder.build(TokenInfoDictionaryBuilder.java:76)\n     [java] \tat org.apache.lucene.analysis.kuromoji.util.DictionaryBuilder.build(DictionaryBuilder.java:37)\n     [java] \tat org.apache.lucene.analysis.kuromoji.util.DictionaryBuilder.main(DictionaryBuilder.java:82)\n\nBUILD FAILED\n/home/rmuir/workspace/lucene-branch3x2/lucene/contrib/analyzers/kuromoji/build.xml:75: Java returned: 1\n\nTotal time: 2 minutes 4 seconds",
    "attachments": {
        "LUCENE-3696.patch": "https://issues.apache.org/jira/secure/attachment/12510590/LUCENE-3696.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-01-14T17:50:45+0000",
            "content": "Here's a quick fix: just using replace() instead of replaceAll() and using 1GB -Xmx instead of 512MB.\n\nnow it builds correctly on java 5. Using 1GB is not ideal but I think necessary if you are using a 64 bit java 5 like me?\n\nWe could later try to optimize the dictionary construction to use less RAM so we can lower this (I have some ideas) ",
            "author": "Robert Muir",
            "id": "comment-13186281"
        },
        {
            "date": "2012-01-14T17:51:21+0000",
            "content": "With the patch:\n\n     [java] building tokeninfo dict...\n     [java]   parse...\n     [java]   sort...\n     [java]   encode...\n     [java]   53645 nodes, 253185 arcs, 1954817 bytes...   done\n     [java] done\n     [java] building unknown word dict...done\n     [java] building connection costs...done\n\nBUILD SUCCESSFUL\nTotal time: 10 seconds\n\n ",
            "author": "Robert Muir",
            "id": "comment-13186282"
        },
        {
            "date": "2012-01-16T14:39:55+0000",
            "content": "updated patch, just optimizing the CSV stuff to make less garbage.\n\nI will commit this soon (bumping to Xmx756m in case someone uses java5) ",
            "author": "Robert Muir",
            "id": "comment-13186946"
        }
    ]
}