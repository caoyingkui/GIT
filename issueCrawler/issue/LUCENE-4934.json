{
    "id": "LUCENE-4934",
    "title": "AssertingIndexSearcher should do basic QueryUtils/etc checks on every query",
    "details": {
        "components": [],
        "fix_versions": [],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Test",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "We can start with QueryUtils.check(query): which does some basic hashcode/equals checks.\n\nIdeally we'd strengthen the checks as we fix problems: e.g. add explanations verifications (checkExplanations) and then finally the more intense check() that does more verifications with deleted docs/next/advance.",
    "attachments": {
        "LUCENE-4934.patch": "https://issues.apache.org/jira/secure/attachment/12578738/LUCENE-4934.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-04-15T16:21:39+0000",
            "content": "+1 ",
            "author": "Adrien Grand",
            "id": "comment-13631824"
        },
        {
            "date": "2013-04-15T16:26:24+0000",
            "content": "Here's a start just doing the simplest check. I am currently running tests fixing the bugs this one found... I'm gonna see if we can do the explanations test though (at some point we will hit bugs in spans/payloads like LUCENE-4219) ",
            "author": "Robert Muir",
            "id": "comment-13631829"
        },
        {
            "date": "2013-04-15T16:31:10+0000",
            "content": "There are hashcode/equals bugs in DrillDownQuery  ",
            "author": "Robert Muir",
            "id": "comment-13631833"
        },
        {
            "date": "2013-04-15T16:43:00+0000",
            "content": "updated patch: now the next bug to fix is hashcode/equals in DrillSidewaysQuery.\n\nI don't know why it throws UOE today... we can't do stuff like this. ",
            "author": "Robert Muir",
            "id": "comment-13631842"
        },
        {
            "date": "2013-04-15T17:09:20+0000",
            "content": "updated patch: fixes some more equals/hashcode bugs.\n\nI also implemented the assert differently: we check both before rewrite() and after. ",
            "author": "Robert Muir",
            "id": "comment-13631875"
        },
        {
            "date": "2013-04-15T17:11:14+0000",
            "content": "3 more queries with bugs i still havent fixed:\n\n[junit4:junit4] Tests with failures:\n[junit4:junit4]   - org.apache.lucene.queryparser.xml.TestParser.testLikeThisQueryXML\n[junit4:junit4]   - org.apache.lucene.queryparser.xml.TestParser.testBoostingQueryXML\n[junit4:junit4]   - org.apache.lucene.queryparser.xml.TestParser.testFuzzyLikeThisQueryXML\n\nIts a little disturbing that tests in lucene/queries arent finding these problems, only a queryparser test. \n\nMaybe they arent using newSearcher. ",
            "author": "Robert Muir",
            "id": "comment-13631884"
        },
        {
            "date": "2013-04-15T17:32:29+0000",
            "content": "+1, I also like the Term.toString() method  We may use a similar approach in Solr's AnalysisRequestHandler when completely binary terms are generated (currently it prints the raw binary term and the string rep next to each other). If the latter fails, it should only return the binary term in the N\u00e4medList. ",
            "author": "Uwe Schindler",
            "id": "comment-13631908"
        },
        {
            "date": "2013-04-15T17:52:51+0000",
            "content": "OK updated patch. I think i fixed the big issues in all these equals/hashcodes.\n\nBlockJoin should be revisited (in another issue: please). Its doing complicated stuff like equals based on unrewritten-query, I think this is wrong (e.g. in the case of a MTQ query rewritten from anotehr reader). But i dont want to fix this here.\n\nI want to commit this to make some progress and then look at trying to improve the check (e.g. explains would be a nice step) ",
            "author": "Robert Muir",
            "id": "comment-13631928"
        },
        {
            "date": "2013-04-15T18:08:00+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13631953"
        },
        {
            "date": "2013-04-15T18:09:39+0000",
            "content": "I also implemented the assert differently: we check both before rewrite() and after.\n\nHey, that was my idea to move that into IS.rewrite()  ",
            "author": "Uwe Schindler",
            "id": "comment-13631955"
        }
    ]
}