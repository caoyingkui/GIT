{
    "id": "SOLR-8745",
    "title": "Deprecate ZkStateReader.updateClusterState(), remove uses",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "affect_versions": "5.4.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Forcing a full ZK cluster state update creates a lot of unnecessary work and load at scale.  We need to deprecate and remove existing callers.\n\n\n\tThe one at the start of ClusterStateUpdater thread is fine, it's a one-time thing.\n\tThe one in OverseerCollectionMessageHandler is getting removed in SOLR-8722\n\tThe rest of them can be replaced with a version that only updates a single collection; not everything!\n\n\n\nPatch will be forthcoming.",
    "attachments": {
        "SOLR-8745.patch": "https://issues.apache.org/jira/secure/attachment/12790828/SOLR-8745.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-02T01:23:47+0000",
            "author": "Scott Blum",
            "content": "Patch! ",
            "id": "comment-15174783"
        },
        {
            "date": "2016-03-02T01:24:03+0000",
            "author": "Scott Blum",
            "content": "Shalin Shekhar Mangar ",
            "id": "comment-15174784"
        },
        {
            "date": "2016-03-02T02:11:36+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Instead of zkStateReader.forceUpdateCollection(collection), can we overload the updateClusterState method itself with the collection name as a parameter, e.g. zkStateReader.updateClusterState(collection)? My thought is that forceUpdateCollection gives a sense of a forceful update happening to a collection, which is not the case here. ",
            "id": "comment-15174880"
        },
        {
            "date": "2016-03-02T02:47:40+0000",
            "author": "Scott Blum",
            "content": "I specifically added \"force\" with the intent of disincentivizing callers.  The correct pattern is to loop until cluster state reflects the state you expect to see. ",
            "id": "comment-15174926"
        },
        {
            "date": "2016-03-02T02:59:47+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "In such a case, do you think forceUpdateClusterState(collection) is a better choice than forceUpdateCollection(collection)?\nMaybe, we could rename the existing method, updateClusterState(), to forceUpdateClusterState() as well? ",
            "id": "comment-15174938"
        },
        {
            "date": "2016-03-02T05:52:19+0000",
            "author": "Scott Blum",
            "content": "Good call, I like forceUpdateCollection().  I don't see a strong need to rename the original method since we want to get rid of it. ",
            "id": "comment-15175091"
        },
        {
            "date": "2016-03-02T13:55:41+0000",
            "author": "Alan Woodward",
            "content": "This ties in nicely with SOLR-8323 as well.  In fact, we can probably replace the vast majority of calls to updateClusterState() with calls to waitForState(), and maybe make the method private. ",
            "id": "comment-15175621"
        },
        {
            "date": "2016-03-02T19:53:54+0000",
            "author": "Scott Blum",
            "content": "BTW: it's on my TODO list to take a look at SOLR-8323! ",
            "id": "comment-15176351"
        },
        {
            "date": "2016-03-04T15:45:56+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "ZkStateReader.forceUpdateCollection has the following:\n\nelse if (ref.isLazilyLoaded()) {\n        if (ref.get() != null) {\n          return;\n        }\n        // Edge case: if there's no external collection, try refreshing legacy cluster state in case it's there.\n        refreshLegacyClusterState(null);\n      }\n\n\n\nScott, can you please explain when this edge case may be triggered? ",
            "id": "comment-15180036"
        },
        {
            "date": "2016-03-04T19:00:53+0000",
            "author": "Scott Blum",
            "content": "Sure!  This was necessary to get tests to pass.  Lazy collection refs get created based on the children of /solr/collections, regardless of whether a state.json exists for that collection.  So e.g. an empty /solr/collections/FOO will cause a lazy FOO collection to be created.  If there's no state.json, ref.get() will return null.  However, as an edge case, someone could have just added FOO to clusterstate.json as a stateformat 1 collection, and so we can refresh the legacy state to check. ",
            "id": "comment-15180380"
        },
        {
            "date": "2016-03-07T09:15:58+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks for explaining.\n\nThis patch fixes a test failure in TestMiniSolrCloudCluster which was creating a ZkStateReader and attempting to get cluster state without either calling createClusterStateWatchers or updateClusterState. This test doesn't need to create a new ZkStateReader. I fixed it to use the ZkStateReader from the CloudSolrClient.\n\nAll tests and precommit checks pass. This is ready. ",
            "id": "comment-15182784"
        },
        {
            "date": "2016-03-07T09:33:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 093a8ce57c06f1bf2f71ddde52dcc7b40cbd6197 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=093a8ce ]\n\nSOLR-8745: Deprecate costly ZkStateReader.updateClusterState(), replace with a narrow forceUpdateCollection(collection) ",
            "id": "comment-15182794"
        },
        {
            "date": "2016-03-07T13:11:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit dd04b6173955d55348b3abaec4c2a3e875e12487 in lucene-solr's branch refs/heads/branch_6x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dd04b61 ]\n\nSOLR-8745: Deprecate costly ZkStateReader.updateClusterState(), replace with a narrow forceUpdateCollection(collection)\n(cherry picked from commit 093a8ce) ",
            "id": "comment-15182981"
        },
        {
            "date": "2016-03-07T13:14:41+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Scott!\n\nSOLR-8323 is very interesting and I intend to take a deeper look into it, thanks for the ping Alan. ",
            "id": "comment-15182984"
        },
        {
            "date": "2016-03-07T19:43:22+0000",
            "author": "Scott Blum",
            "content": "woot! ",
            "id": "comment-15183548"
        },
        {
            "date": "2016-03-17T14:48:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4fbfeb01230429b073039b4d16b8871c1854f413 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4fbfeb0 ]\n\nSOLR-8745: Move CHANGES.txt entry to 6.1 ",
            "id": "comment-15199643"
        },
        {
            "date": "2016-03-17T14:52:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d968575b8b6035c58de3c0f204dde27611c535b2 in lucene-solr's branch refs/heads/branch_6x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d968575 ]\n\nSOLR-8745: Move CHANGES.txt entry to 6.1\n(cherry picked from commit 4fbfeb0) ",
            "id": "comment-15199650"
        },
        {
            "date": "2016-03-18T08:29:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4fbfeb01230429b073039b4d16b8871c1854f413 in lucene-solr's branch refs/heads/apiv2 from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4fbfeb0 ]\n\nSOLR-8745: Move CHANGES.txt entry to 6.1 ",
            "id": "comment-15201168"
        },
        {
            "date": "2016-03-21T00:43:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4fbfeb01230429b073039b4d16b8871c1854f413 in lucene-solr's branch refs/heads/jira/SOLR-445 from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4fbfeb0 ]\n\nSOLR-8745: Move CHANGES.txt entry to 6.1 ",
            "id": "comment-15203590"
        },
        {
            "date": "2016-05-10T22:24:23+0000",
            "author": "Hoss Man",
            "content": "\nManually correcting fixVersion per Step #S5 of LUCENE-7271 ",
            "id": "comment-15279119"
        },
        {
            "date": "2016-05-19T17:33:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b663e5bcad9974f2d80c16b85c862407a38290e0 in lucene-solr's branch refs/heads/branch_6_0 from Scott Blum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b663e5b ]\n\nSOLR-8973: Zookeeper frenzy when a core is first created.\n\nFor branch_6_0: Modified ZkStateReaderTest to use ZkStateReader.updateClusterState() instead of .forceUpdateCollection(), since SOLR-8745 will land in 6.1. ",
            "id": "comment-15291600"
        }
    ]
}