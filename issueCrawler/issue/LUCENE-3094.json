{
    "id": "LUCENE-3094",
    "title": "optimize lev automata construction",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "in our lev automata algorithm, we compute an upperbound of the maximum possible states (not the true number), and\ncreate some \"useless\" unconnected states \"floating around\".\n\nthis isn't harmful, in the original impl we did the Automaton is simply a pointer to the initial state, and all algorithms\ntraverse this list, so effectively the useless states were dropped immediately. But recently we changed automaton to\ncache its numberedStates, and we set them here, so these useless states are being kept around.\n\nit has no impact on performance, but can be really confusing if you are debugging (e.g. toString). Thanks to Dawid Weiss\nfor noticing this. \n\nat the same time, forcing an extra traversal is a bit scary, so i did some benchmarking with really long strings and found\nthat actually its helpful to reduce() the number of transitions (typically cuts them in half) for these long strings, as it\nspeeds up some later algorithms. \n\nwon't see any speedup for short terms, but I think its easier to work with these simpler automata anyway, and it eliminates\nthe confusion of seeing the redundant states without slowing anything down.",
    "attachments": {
        "after.png": "https://issues.apache.org/jira/secure/attachment/12479110/after.png",
        "LUCENE-3094.patch": "https://issues.apache.org/jira/secure/attachment/12479105/LUCENE-3094.patch",
        "before.png": "https://issues.apache.org/jira/secure/attachment/12479109/before.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-05-13T15:17:45+0000",
            "content": "Display the attached images\n\nbefore:\n\n\n\nafter:\n\n ",
            "author": "Simon Willnauer",
            "id": "comment-13033072"
        },
        {
            "date": "2011-05-13T18:53:39+0000",
            "content": "This looks good to me. And even if it doesn't affect performance it definitely should help those poor souls wishing to actually understand this algorithm  ",
            "author": "Dawid Weiss",
            "id": "comment-13033209"
        },
        {
            "date": "2011-05-13T18:54:06+0000",
            "content": "+1 \u2013 we shouldn't create these scary states. ",
            "author": "Michael McCandless",
            "id": "comment-13033210"
        },
        {
            "date": "2011-05-13T19:16:46+0000",
            "content": "Thanks guys, I'll add a test for this and commit. ",
            "author": "Robert Muir",
            "id": "comment-13033229"
        },
        {
            "date": "2011-05-13T19:20:03+0000",
            "content": "Committed revision 1102875. ",
            "author": "Robert Muir",
            "id": "comment-13033234"
        }
    ]
}