{
    "id": "LUCENE-3310",
    "title": "FuzzyAttribute ignores min similarity when generating at hashcode(), toString() and equals() methods",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/queryparser"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.9,                                            2.9.1,                                            2.9.2,                                            2.9.3,                                            2.9.4,                                            3.0,                                            3.0.1,                                            3.0.2,                                            (4)3.0.3,                                            3.1,                                            3.2,                                            3.3",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "FuzzyAttribute ignores min similarity when generating at hashcode(), toString() and equals() methods",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-07-19T10:30:53+0000",
            "content": "Note that in trunk (4.0) the flexible QueryParser has moved away from using Attributes for configuration.\n\nHmm, also: why do these Attr impls implement hashCode/equals?  It seems dangerous for attrs in general to claim to implement equals/hashCode since they are mutable state by design... ",
            "author": "Michael McCandless",
            "id": "comment-13067608"
        },
        {
            "date": "2011-07-30T18:41:50+0000",
            "content": "Good point Michael! At least they shouldn't use mutable values in their hashcode. The only reason I remember to implement hashcode in qp attributes was because Lucene attributes (CharTermAttributeImpl, OffsetAttributeImpl etc) do the same.\n\nIt sounds like all attribute impls shouldn't be doing that and we should fix. Luckily, today, nowhere in Lucene code we use Attribute instances as key or in sets, that is why we probably never hit any problems. However, users may be hitting problems because of that. I think we should fix it as soon as possible as it seems very critical.\n\nPlease, let me know if I am missing something. ",
            "author": "Adriano Crestani",
            "id": "comment-13073228"
        },
        {
            "date": "2011-07-30T21:24:25+0000",
            "content": "Initially equals and hashcode in AttributeImpl were abstract and therefore required. I removed that requirement in 3.1 as its useless and unneeded in Lucene.\n\nI have no idea what the reason behind this was, maybe Michael Busch knows.\n\nIn Lucene 3.x we still have equals and hashcode implemented for most internal attributes for backwards compatibility, in trunk i already removed them mostly (I think). ",
            "author": "Uwe Schindler",
            "id": "comment-13073244"
        },
        {
            "date": "2011-07-30T21:32:32+0000",
            "content": "I can still see hashcode method in https://svn.apache.org/repos/asf/lucene/dev/trunk/lucene/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl.java ",
            "author": "Adriano Crestani",
            "id": "comment-13073246"
        },
        {
            "date": "2011-07-30T21:50:39+0000",
            "content": "New attributes have no longer one. At least its no longer required. I dont know if I had really time to remove them all. ",
            "author": "Uwe Schindler",
            "id": "comment-13073248"
        },
        {
            "date": "2011-07-30T21:57:30+0000",
            "content": "I see. So, just to make sure I got it correctly, from 4.0 no Attribute impl should implement hashcode, is that correct?!\n\nAnyway, I will close this issue, since there is no fix required here. ",
            "author": "Adriano Crestani",
            "id": "comment-13073254"
        },
        {
            "date": "2011-07-30T22:01:03+0000",
            "content": "Yes, look e.g. into o.a.l.search.BoostAttributeImpl, there is not hashCode and equals anymore. ",
            "author": "Uwe Schindler",
            "id": "comment-13073255"
        }
    ]
}