{
    "id": "SOLR-2186",
    "title": "DataImportHandler multi-threaded option throws exception",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.4",
            "4.0-ALPHA"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The multi-threaded option for the DataImportHandler throws an exception and the entire operation fails. This is true even if only 1 thread is configured via threads='1'",
    "attachments": {
        "Solr-2186.patch": "https://issues.apache.org/jira/secure/attachment/12480960/Solr-2186.patch",
        "SOLR-2186.patch": "https://issues.apache.org/jira/secure/attachment/12480996/SOLR-2186.patch",
        "TikaResolver.patch": "https://issues.apache.org/jira/secure/attachment/12458038/TikaResolver.patch",
        "TestTikaEntityProcessor.patch": "https://issues.apache.org/jira/secure/attachment/12482808/TestTikaEntityProcessor.patch",
        "TestDocBuilderThreaded.java": "https://issues.apache.org/jira/secure/attachment/12481387/TestDocBuilderThreaded.java"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Lance Norskog",
            "id": "comment-12923764",
            "date": "2010-10-22T05:43:31+0000",
            "content": "This is the stack trace. The operation configures 4 threads and then does a full-import:\n\nOct 21, 2010 10:21:16 PM org.apache.solr.handler.dataimport.DocBuilder doFullDump\nINFO: running multithreaded full-import\nOct 21, 2010 10:21:16 PM org.apache.solr.handler.dataimport.ThreadedEntityProcessorWrapper nextRow\nINFO: arow : \n{fileSize=18837, fileLastModified=Wed Nov 21 08:15:23 PST 2007, fileAbsolutePath=/lucid/private_pdfs/10.pdfs/10.1.1.10.1.pdf, fileDir=/lucid/private_pdfs/10.pdfs, file=10.1.1.10.1.pdf}\nOct 21, 2010 10:21:16 PM org.apache.solr.handler.dataimport.ThreadedEntityProcessorWrapper nextRow\nINFO: arow : \n{fileSize=289898, fileLastModified=Wed Nov 21 08:15:25 PST 2007, fileAbsolutePath=/lucid/private_pdfs/10.pdfs/10.1.1.10.10.pdf, fileDir=/lucid/private_pdfs/10.pdfs, file=10.1.1.10.10.pdf}\nOct 21, 2010 10:21:16 PM org.apache.solr.handler.dataimport.ThreadedEntityProcessorWrapper nextRow\nINFO: arow : \n{fileSize=121847, fileLastModified=Wed Nov 21 08:15:43 PST 2007, fileAbsolutePath=/lucid/private_pdfs/10.pdfs/10.1.1.10.100.pdf, fileDir=/lucid/private_pdfs/10.pdfs, file=10.1.1.10.100.pdf}\nOct 21, 2010 10:21:16 PM org.apache.solr.handler.dataimport.ThreadedEntityProcessorWrapper nextRow\nINFO: arow : \n{fileSize=59844, fileLastModified=Wed Nov 21 08:18:49 PST 2007, fileAbsolutePath=/lucid/private_pdfs/10.pdfs/10.1.1.10.1000.pdf, fileDir=/lucid/private_pdfs/10.pdfs, file=10.1.1.10.1000.pdf}\nOct 21, 2010 10:21:16 PM org.apache.solr.handler.dataimport.DocBuilder doFullDump\nSEVERE: error in import\njava.lang.NullPointerException\n at org.apache.solr.handler.dataimport.ContextImpl.getResolvedEntityAttribute(ContextImpl.java:79)\n at org.apache.solr.handler.dataimport.ThreadedContext.getResolvedEntityAttribute(ThreadedContext.java:78)\n at org.apache.solr.handler.dataimport.TikaEntityProcessor.firstInit(TikaEntityProcessor.java:67)\n at org.apache.solr.handler.dataimport.EntityProcessorBase.init(EntityProcessorBase.java:56)\n at org.apache.solr.handler.dataimport.DocBuilder$EntityRunner.initEntity(DocBuilder.java:507)\n at org.apache.solr.handler.dataimport.DocBuilder$EntityRunner.runAThread(DocBuilder.java:425)\n at org.apache.solr.handler.dataimport.DocBuilder$EntityRunner.run(DocBuilder.java:386)\n at org.apache.solr.handler.dataimport.DocBuilder$EntityRunner.runAThread(DocBuilder.java:453)\n at org.apache.solr.handler.dataimport.DocBuilder$EntityRunner.access$000(DocBuilder.java:340)\n at org.apache.solr.handler.dataimport.DocBuilder$EntityRunner$1.run(DocBuilder.java:393)\n at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n at java.lang.Thread.run(Thread.java:619)\nOct 21, 2010 10:21:16 PM org.apache.solr.handler.dataimport.DocBuilder finish\nINFO: Import completed successfully\nOct 21, 2010 10:21:16 PM org.apache.solr.update.DirectUpdateHandler2 commit\nINFO: start commit(optimize=true,waitFlush=false,waitSearcher=true,expungeDeletes=false) "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12923765",
            "date": "2010-10-22T05:46:07+0000",
            "content": "This is the dataConfig.xml. It is very simple: it walks a directory and indexes every PDF file it finds.\nIf you change threads='4' to threads='1', it will still fail. If you remove the threads directive, it runs.\n\n\n<dataConfig>\n   <dataSource type=\"BinFileDataSource\"/>\n   <document>\n     <entity name=\"jc\" dataSource=\"null\"\n             pk=\"id\"\n             processor=\"FileListEntityProcessor\"\n             fileName=\"^.*\\.pdf$\" recursive=\"false\"\n             baseDir=\"/lucid/private_pdfs/10.pdfs\"\n             transformer=\"TemplateTransformer\"\n             threads='4'\n             >\n\n        <field column=\"id\" template=\"${jc.fileAbsolutePath}\"/>\n\n        <entity name=\"tika-test\" processor=\"TikaEntityProcessor\"\n                url=\"${jc.fileAbsolutePath}\"\n                parser=\"org.apache.tika.parser.pdf.PDFParser\"\n                onError=\"skip\"\n                >\n                <field column=\"Author\" name=\"author\" meta=\"true\"/>\n                <field column=\"title\" name=\"title\" meta=\"true\"/>\n                <field column=\"text\" name=\"text\"/>\n        </entity>\n      </entity>\n    </document>\n</dataConfig>\n\n "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12924284",
            "date": "2010-10-24T04:58:33+0000",
            "content": "I've tracked it down. The ThreadedContext object is built without a resolver. There is a notation that the resolver will be set dynamicall but it is not.\n\nThe ThreadedContext resolver is called in the \"firstInit\" methods TikaEntityProcessor, LineEntityProcessor, and XPathEntityProcessor. TikaEntityProcessor also calls it in nextRow.\n\npublic class ThreadedContext extends ContextImpl{\n  private DocBuilder.EntityRunner entityRunner;\n  private boolean limitedContext = false;\n\n  public ThreadedContext(DocBuilder.EntityRunner entityRunner, DocBuilder docBuilder) \n{\n    super(entityRunner.entity,\n            null,//to be fethed realtime\n            null,\n            null,\n            docBuilder.session,\n            null,\n            docBuilder);\n    this.entityRunner = entityRunner;\n  }\n\nI hacked DocBuilder.java to throw in a resolver and that allowed the TikaEP to function during firstInit. Then, the entity attribute resolver failed in the nextRow method.\n\nTikaEP is the only class that calls the entity attribute resolver outside of the firstInit() call. Is it possible to change TikeEP to only use the resolver in firstInit? "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12924838",
            "date": "2010-10-26T05:05:29+0000",
            "content": "This patch file fixes up the DataImportHandler so that the TikaEntityProcessor works under threads.\n\nThe technique is to pass in a resolver when creating a ThreadedContext (wrapper). This allows TikaEP.firstInit() to work. However, TikaEP.nextRow is called with a context without a functioning resolver, so: TikeEP caches the resolver given in firstInit() and uses it during nextRow() instead of using the one it should use. Even so, the parsed text is spewed to the logger in addition to being indexed.\n\nThis is not intended as fix patch;  it merely demonstrates the problem.\n\nThe patch is made with 'git diff' and I still haven't mastered it; some 'patch' programs may not like it.\n\n\n "
        },
        {
            "author": "Fuad Efendi",
            "id": "comment-12931043",
            "date": "2010-11-11T15:25:58+0000",
            "content": "I can't find any usage of resolver in TikaEP.nextRow(); am I missing something?\nThanks "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12931236",
            "date": "2010-11-11T22:19:44+0000",
            "content": "\n\nTwo answers:\n1) try it and see. you'll find the usage soon enough \n2) TikaEntityProcessor, branch 3.x, line 96:\n\n\n  public Map<String, Object> nextRow() {\n    if(done) return null;\n    Map<String, Object> row = new HashMap<String, Object>();\n    DataSource<InputStream> dataSource = context.getDataSource();\n    InputStream is = dataSource.getData(context.getResolvedEntityAttribute(URL));       <-----\n    ContentHandler contentHandler = null;\n    Metadata metadata = new Metadata();\n\n "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12968439",
            "date": "2010-12-06T22:06:21+0000",
            "content": "Lance, can you update this patch and add a unit test? "
        },
        {
            "author": "Fuad Efendi",
            "id": "comment-12968890",
            "date": "2010-12-07T19:07:59+0000",
            "content": "I resolved this issue for SQL, SOLR-2233; it was related to 'thread A closes connection needed by thread B' "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12997656",
            "date": "2011-02-22T06:41:09+0000",
            "content": "Lance, can you update this patch and add a unit test?\nSorry Grant, this wasn't on my watch list. This patch is not a patch to fix it, it is a patch to demonstrate the problem. I don't know the right way to solve this.  "
        },
        {
            "author": "Frank Wesemann",
            "id": "comment-13041652",
            "date": "2011-05-31T16:23:43+0000",
            "content": "The added patch addresses the problem that EntityProcessors do not have a usable VariableResolver in their init() Method.\nThis is done in the EntityRunner's runAThread() Method by first initing the EntityProcessorWrapper and after that initing the Entityprocessor.\nBy changing the order as described the according namespaces a created on the variableResolver before it can be used by the EntityProcessor.\n\nAdditionally I changed the loglevel for the \"adding a row\" messages to \"debug\".\n\nThis patch does don't solve the problem described in SOLR-2544.\nAs a workaround EntityProcessors may call context.getVariableResolver().replaceTokens()\n\n "
        },
        {
            "author": "Frank Wesemann",
            "id": "comment-13041654",
            "date": "2011-05-31T16:24:51+0000",
            "content": "see comment before "
        },
        {
            "author": "Frank Wesemann",
            "id": "comment-13041852",
            "date": "2011-05-31T21:44:37+0000",
            "content": "This improved patch addresses the issue that Evaluators ( classes inheriting from o.a.s.dih.Evaluator )used on an arbitrary entityAttribute  may hit an empty Context in \"threaded\" mode.\n\nThis is done by setting  Context.CURRENT_CONTEXT.set(context); before initEntity() is called.\n\nThis patch may also adress SOLR-2463 (or at least give a hint that somewhere else CURRENT_CONTEXT is set lately).\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13041855",
            "date": "2011-05-31T21:51:47+0000",
            "content": "Hi Lance/Frank,\n\nThanks for working on this issue.\n\nAny ideas on how we could make a junit test to show the problem?\nThis would make it easier to evaluate the patch and possible to prevent regressions. "
        },
        {
            "author": "Frank Wesemann",
            "id": "comment-13043935",
            "date": "2011-06-03T18:20:25+0000",
            "content": "a testcase and an improved Patch.\nThe patch also patches VariableResolverImpl to avoid that defaults may be null. "
        },
        {
            "author": "Frank Wesemann",
            "id": "comment-13043944",
            "date": "2011-06-03T18:24:26+0000",
            "content": "was wrong file extension "
        },
        {
            "author": "Frank Wesemann",
            "id": "comment-13050487",
            "date": "2011-06-16T15:18:16+0000",
            "content": "Adds a test for <entity threads=\"1\" ...> "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13065186",
            "date": "2011-07-14T11:15:30+0000",
            "content": "A patch which fixes the NPE with multi-threaded mode.\n\nThe problem was that the resolver is supposed to be looked up just-in-time for the current entity but ThreadedContext delegated the getResolvedEntityAttribute method to super class which did not have one. The fix was to override getResolvedEntityAttribute correctly.\n\nI added the TestTikaEntityProcessor patch by Frank in the patch.\n\nThis does not solve the problem with the evaluators - I'll add a patch in SOLR-2463 to fix it. "
        },
        {
            "author": "Frank Wesemann",
            "id": "comment-13065363",
            "date": "2011-07-14T16:19:41+0000",
            "content": "Thanks for taking this issue Shalin.\nYou might close SOLR-2544 along with this "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13065778",
            "date": "2011-07-15T08:52:52+0000",
            "content": "Committed revision 1147023 on trunk and 1147033 on branch_3x.\n\nThanks! "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13065833",
            "date": "2011-07-15T10:18:36+0000",
            "content": "Frank, I've opened SOLR-2655 for related issues. I may not have time to go into these soon so I'd advise people not to use multi threaded mode for the time being. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106220",
            "date": "2011-09-16T14:48:53+0000",
            "content": "bulk close for 3.4 "
        }
    ]
}