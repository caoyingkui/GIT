{
    "id": "LUCENE-425",
    "title": "\"Cannot rename segments.new to segments\"",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.4",
        "resolution": "Duplicate",
        "status": "Closed"
    },
    "description": "AddDocument periodically fails with \"Cannot rename segments.new to segments\". \nSometimes it happens after 10,000 documents, sometimes after 200,000 documents.\n\nMy index is placed on a FAT partition. My Lucene version is 1.4.3. I am using \na single IndexWriter object and doing all AddDocuments calls serially from a \nsingle thread.\n\nI saw some discussion about this problem in the mailing lists, but looks like \nthe problem wasn't completely eliminated yet.\n\nMy suggested solutions are as follows:\n\n\n\tIf renameTo() fails, wait some time and retry. After this, apply the other\nmethods that are now in FSDirectory.java. Retry them as well after waiting for \nsome time.\n\n\n\n\n\tIn the IndexWriter constructor, check for 'segments.new' if 'segments'\ncannot be found. This would allow recovery if FSDirectory failed on a previous \nrun. Now I have to write the recovery code myself outside of Lucene.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2006-08-09T13:00:11+0000",
            "content": "\nThere was a recent thread on java-user that looks very similar to this issue:\n\n  http://www.gossamer-threads.com/lists/lucene/java-user/38669\n\nWhen Lucene writes a new \"segments\" or new \"deletable\" file it first\nwrites to X.new and then renames X.new --> X.  Apparently that\nrenameTo can sometimes fail, even though both the X.new and the X file\nare \"closed\" from Java.\n\nThe \"best guess\" from that discussion is that there is a JVM bug on\ncertain JVMs on Windows, whereby a file handle (at the Windows OS\nlevel) is held open even after from Java it has been \"closed\".\n\nAnt has a workaround for this issue: force a GC, wait, and then retry.\nI don't really like that workaround for Lucene because we should not\nsuddenly / unexpectedly do a system level action like forcing GC \u2013\nit's a \"leaky abstraction\"\n(http://www.joelonsoftware.com/articles/LeakyAbstractions.html).\n\nWhich JVM are you using?  I couldn't reproduce this; I made a small\nchange to the IndexFiles demo command-line tool and then refreshed the\nview from Windows Explorer.  On Sun JDK 1.4.2_10 and Sun JDK 1.5.0_07\nI couldn't get the IOException.\n\nIssue LUCNE-554 also proposes more robust logic around opening the\n.NEW file if it exists.  I think that makes alot of sense.\n ",
            "author": "Michael McCandless",
            "id": "comment-12426910"
        },
        {
            "date": "2006-11-10T11:24:30+0000",
            "content": "\nI think this one is a dup of LUCENE-665\n\nThe intermittant errors on WIN32 came down to 3rd party software that can open files shortly after they were created, thus preventing rename from succeeding.  The combination of native LockFactor implementation (LUCENE-678 ) and Lockless commits (LUCENE-701 ) should resolve these issues. ",
            "author": "Michael McCandless",
            "id": "comment-12448706"
        },
        {
            "date": "2007-11-16T14:09:51+0000",
            "content": "We have been using Lucene 1.9.1 for the past 2 years and this issue occurs on a regular basis. Always on Windows and more often on machines with slower hard disks, i.e. Laptops. A colleague of mine downloaded the source and patched it to retry the rename and delete operations several times before giving up. This works well on our environments so we would like to get the change into Trunk code.\n\nI will prepare a patch against trunk shortly which will solve the problem. ",
            "author": "Chris Bowditch",
            "id": "comment-12543081"
        },
        {
            "date": "2007-11-16T14:44:18+0000",
            "content": "I believe the root cause of this issue was resolved with LUCENE-701: we no longer rename files when writing a Lucene index.\n\nAre you able to get this issue to happen with Lucene 2.2? ",
            "author": "Michael McCandless",
            "id": "comment-12543092"
        }
    ]
}