{
    "id": "SOLR-4480",
    "title": "EDisMax parser blows up with query containing single plus or minus",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We are running solr with sunspot and when we set up a query containing a single plus, Solr blows up with the following error:\nSOLR Request (5.0ms)  [ path=#<RSolr::Client:0x4c7464ac> parameters={data: fq=type%3A%28Attachment+OR+User+OR+GpdbDataSource+OR+HadoopInstance+OR+GnipInstance+OR+Workspace+OR+Workfile+OR+Tag+OR+Dataset+OR+HdfsEntry%29&fq=type_name_s%3A%28Attachment+OR+User+OR+Instance+OR+Workspace+OR+Workfile+OR+Tag+OR+Dataset+OR+HdfsEntry%29&fq=%28security_type_name_sm%3A%28Dataset%29+AND+-instance_account_ids_im%3A%282+OR+1%29%29&fq=%28security_type_name_sm%3AChorusView+AND+member_ids_im%3A1+AND+-public_b%3Atrue%29&fq=%28security_type_name_sm%3A%28Dataset%29+AND+instance_account_ids_im%3A%282+OR+1%29%29&fq=%28security_type_name_sm%3AChorusView+AND+-member_ids_im%3A1+AND+-public_b%3Atrue%29&q=%2B&fl=%2A+score&qf=name_texts+first_name_texts+last_name_texts+file_name_texts&defType=edismax&hl=on&hl.simple.pre=%40%40%40hl%40%40%40&hl.simple.post=%40%40%40endhl%40%40%40&start=0&rows=3, method: post, params: {:wt=>:ruby}, query: wt=ruby, headers: \n{\"Content-Type\"=>\"application/x-www-form-urlencoded; charset=UTF-8\"}\n, path: select, uri: http://localhost:8982/solr/select?wt=ruby, open_timeout: , read_timeout: } ]\n\nRSolr::Error::Http (RSolr::Error::Http - 400 Bad Request\nError:     org.apache.lucene.queryParser.ParseException: Cannot parse '': Encountered \"<EOF>\" at line 1, column 0.\nWas expecting one of:\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    \"(\" ...\n    \"*\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...",
    "attachments": {
        "SOLR-4480.patch": "https://issues.apache.org/jira/secure/attachment/12570551/SOLR-4480.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13582725",
            "date": "2013-02-21T00:33:36+0000",
            "content": "Thanks for reporting this. As EDismax is all about being robust and never crash, this must be fixed. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13583014",
            "date": "2013-02-21T08:46:09+0000",
            "content": "What should be the logical behavior of a single \"+\" or \"-\"? If eDisMax discovers it as one of many words, it is treated as whitespace (I think by mistake since it is caught by the MUST[+]/NOT[-] logic).\n\nSo the least surprising behavior would perhaps be to interpret it the same way - leadning to an empty \"q\" and fallback to \"q.alt\".\n\nAnother option would be to detect and escape with \"\\\" to match literally. However for most eDisMax uses you would not expect or want this. It would also be inconsistent with behavior with multi term search. If you like literal match you can always escape yourself. "
        },
        {
            "author": "Fiona Tay",
            "id": "comment-13584478",
            "date": "2013-02-22T17:46:03+0000",
            "content": "> So the least surprising behavior would perhaps be to interpret it the same way - leadning to an empty \"q\" and fallback to \"q.alt\".\nThis seems like a reasonable solution. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13584781",
            "date": "2013-02-22T22:44:13+0000",
            "content": "Patch against trunk which treats single + and single - as empty q "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13586227",
            "date": "2013-02-25T20:02:29+0000",
            "content": "Updated patch, also catching exceptions in the case where the +/- comes after a leading whitespace.\n\nWhat do people think about the solution? Plan to commit soon. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13586345",
            "date": "2013-02-25T21:57:35+0000",
            "content": "What should be the logical behavior of a single \"+\" or \"-\"? If eDisMax discovers it as one of many words, it is treated as whitespace\n\nIt shouldn't be, and a quick test shows that it is treated as a literal.\nAre you forgetting to URL-encode the \"+\" when trying it from a browser, or perhaps the analysis of the default field is removing the character because it's not alphanumeric?\n\nTry this:\nhttp://localhost:8983/solr/select?debug=query&defType=edismax&df=foo_s&q=hello+%2b+there "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13586368",
            "date": "2013-02-25T22:16:57+0000",
            "content": "So let's take the String field example. A single %2B crashes the Lucene query parser, and since we just pass it straight through it crashes eDisMax too.\n\nFor the Lucene parser, it crashes for all query strings ending in a single \"+\"\nhttp://localhost:8983/solr/select?debug=query&q=foo%20%2B\nbut not for queries where there is a whitespace after the \"+\"\nhttp://localhost:8983/solr/select?debug=query&q=%2B%20foo\n\neDismax is a bit different. It does not crash on ending \"+\" but it swallows it:\nhttp://localhost:8983/solr/select?debug=query&defType=edismax&df=foo_s&q=%2B%20hello%20%2B\n\nThis is probably due to line 700-703 being too quick at guessing that the + or - means MUST or NOT\n\n      if (ch=='+' || ch=='-') {\n        clause.must = ch;\n        pos++;\n      }\n\n\n\nI'm ok with saying that a single plus or minus should mean literal matching (given that field type supports it), and thus we add escaping. But then we should do the same at the end of a query string. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13586380",
            "date": "2013-02-25T22:30:58+0000",
            "content": "I'm ok with saying that a single plus or minus should mean literal matching (given that field type supports it), and thus we add escaping. But then we should do the same at the end of a query string.\n\nCorrect. "
        },
        {
            "author": "Fiona Tay",
            "id": "comment-13586698",
            "date": "2013-02-26T03:43:24+0000",
            "content": "I'm the person who originally reported the bug, and I just want to commend y'all for the speedy response! You guys are amazing! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13587415",
            "date": "2013-02-26T19:13:44+0000",
            "content": "I started off trying to modify the parser grammar, but it quickly went down a rat hole...\n\nInstead, here's a patch that lets the JavaCC parser fail, and makes the escaping better for edismax. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13587444",
            "date": "2013-02-26T19:42:12+0000",
            "content": "[trunk commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1450369\n\nSOLR-4480: edismax - fix trailing +- "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13587459",
            "date": "2013-02-26T19:54:12+0000",
            "content": "[branch_4x commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1450371\n\nSOLR-4480: edismax - fix trailing +- "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653805",
            "date": "2013-05-10T10:33:02+0000",
            "content": "Closed after release. "
        }
    ]
}