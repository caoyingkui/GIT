{
    "id": "SOLR-10826",
    "title": "CloudSolrClient using unsplit collection list when expanding aliases",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "6.4,                                            6.5.1,                                            6.6",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Some recent refactoring seems to have introduced a bug in SolrJ's CloudSolrClient, when it's expanding a collection list and resolving aliases, it's using the wrong local variable for the alias lookup. This leads to an exception because the value is not an alias.\n\nE.g. suppose you made a request with &collection=x,y where either or both of x and y are not real collection names but valid aliases. This will fail, incorrectly, because the lookup is using x,y as a potential alias name lookup.\n\nPatch to fix this attached, which was tested locally and fixed the issue.",
    "attachments": {
        "SOLR-10826.patch": "https://issues.apache.org/jira/secure/attachment/12871607/SOLR-10826.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-23T14:57:33+0000",
            "content": "Hi Tim,\n\ngood catch! seems like a bug introduced by SOLR-9784 . \n\nI think we should add a test case for this as well? We could write some additional tests in AliasIntegrationTest ? ",
            "author": "Varun Thacker",
            "id": "comment-16061074"
        },
        {
            "date": "2017-06-23T15:05:29+0000",
            "content": "Hi Varun, yes good point I will add some more tests for this code, next week.\n\nDo you think it doesn't affect the master branch, as you've removed that from the Affects field? The code is the same in master too, still. ",
            "author": "Tim Owen",
            "id": "comment-16061084"
        },
        {
            "date": "2017-06-23T15:21:39+0000",
            "content": "Do you think it doesn't affect the master branch, as you've removed that from the Affects field?\n\nI try not to put master(7.0) there as it's not released yet. It makes it easier for someone looking at the Jira to know which versions of Solr that have been shipped that has this bug.\n\nThe Fix Version/s should have master\n\nAtleast that's my reasoning  ",
            "author": "Varun Thacker",
            "id": "comment-16061111"
        },
        {
            "date": "2017-06-28T15:46:20+0000",
            "content": "Updated patch with some extra assertions. Without the code fix, those extra lines fail the test as expected, but pass with the fix.\n\nI had a look at the AliasIntegrationTest but it essential does the same kind of thing the CloudSolrClientTest is doing. ",
            "author": "Tim Owen",
            "id": "comment-16066740"
        },
        {
            "date": "2017-06-28T16:00:15+0000",
            "content": "Hi Tim,\n\nPatch looks good to me and CloudSolrClient#testAliasHandling seems like a good place for the test.\n\n\n\nE.g. suppose you made a request with &collection=x,y where either or both of x and y are not real collection names but valid aliases.\n\nCan we add another collection ( the test case already creates a 3 node cluster so creating another collection and indexing a couple of docs should be cheap ) and test this specific thing as well. Should be a few more asserts.\n\nWhat do you think? I'd be more happy to have that test and get it committed soon ",
            "author": "Varun Thacker",
            "id": "comment-16066772"
        },
        {
            "date": "2017-06-29T15:03:04+0000",
            "content": "OK I've expanded the test a bit, it now creates a second collection, and alias for it, and a combined alias spanning both. Then it tests the various combinations of collection=... values work as expected. Again, these tests do fail without the code fix. ",
            "author": "Tim Owen",
            "id": "comment-16068446"
        },
        {
            "date": "2017-07-06T20:30:35+0000",
            "content": "Commit 74b609cf884d8a545b90d2e0293182a86e5b778d in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=74b609c ]\n\nSOLR-10826: Fix CloudSolrClient to expand the collection parameter correctly ",
            "author": "ASF subversion and git services",
            "id": "comment-16077159"
        },
        {
            "date": "2017-07-06T20:31:32+0000",
            "content": "Commit b0f7087f8443f3ce588e31fbeb5fcdd2a803daec in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b0f7087 ]\n\nSOLR-10826: Fix CloudSolrClient to expand the collection parameter correctly ",
            "author": "ASF subversion and git services",
            "id": "comment-16077161"
        },
        {
            "date": "2017-07-06T20:32:10+0000",
            "content": "Commit c976664916d74f838349f93a9411cf9ad6a9e47a in lucene-solr's branch refs/heads/branch_7_0 from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c976664 ]\n\nSOLR-10826: Fix CloudSolrClient to expand the collection parameter correctly ",
            "author": "ASF subversion and git services",
            "id": "comment-16077162"
        },
        {
            "date": "2017-07-06T20:33:04+0000",
            "content": "Thanks Tim ! ",
            "author": "Varun Thacker",
            "id": "comment-16077164"
        },
        {
            "date": "2017-09-15T16:37:45+0000",
            "content": "Hi - can this be backported to the 6.x branch? We're using it built locally on top of 6.6 in the meantime. I thought it might be included in 6.6.1 but didn't notice it. ",
            "author": "Tim Owen",
            "id": "comment-16168150"
        },
        {
            "date": "2017-09-15T19:16:56+0000",
            "content": "Hi Tim,\n\nLooks like we didn't end up backporting this to 6.6.1 \n\nI could backport it to the branch but I haven't seen anyone raising a request for a 6.6.2  ",
            "author": "Varun Thacker",
            "id": "comment-16168383"
        }
    ]
}