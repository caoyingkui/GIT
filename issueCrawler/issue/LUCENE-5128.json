{
    "id": "LUCENE-5128",
    "title": "Calling IndexSearcher.searchAfter beyond the number of stored documents causes ArrayIndexOutOfBoundsException",
    "details": {
        "components": [
            "core/search"
        ],
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "affect_versions": "4.2",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "ArrayIndexOutOfBoundsException makes it harder to reason about the cause.\n\nIs there a better way to notify programmers of the cause?",
    "attachments": {
        "LUCENE-5128.patch": "https://issues.apache.org/jira/secure/attachment/12593390/LUCENE-5128.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-07-21T06:04:42+0000",
            "content": "I made this trivial change and added a test. However, TestShardSearching.testSimple fails if run with -Dtests.seed=3626FF5A675BE28. What happens is that the shard sets after=Integer.MAX_VALUE to denote no more docs should be collected from that shard.\n\nNow, this is just test code and I'm sure there's a better way to handle it (i.e. why run search at all against that shard if no docs should be collected?), but I checked TopScoreDocCollector and TopFieldCollector to understand where would they throw AIOOBE and I couldn't find the place. Looks like they just ignore any doc passed to collect(). Could you please paste the stacktrace? Perhaps it's a different collector that we need to fix?\n\nI will also check if it's possible to fix test shards to not search this shard if no docs should be collected ",
            "author": "Shai Erera",
            "id": "comment-13714651"
        },
        {
            "date": "2013-07-21T06:29:53+0000",
            "content": "So, while not sending a query to a shard which will return no results is logically ok, there is an issue with it. TopDocs.merge merges TopDocs[] and part of the process is to compute a totalHitsCount, so that the merged TopDocs.totalHits is the sum of all shards' totalHits. Now, imagine that we didn't submit a query to a shard with no more results, then what would happen is that the previous search would return mergedTotalHits=N and the follow-on search (e.g. clicking 'next') would return mergedTotalHits=N-K, where K is the totalHits from the shard that we omitted.\n\nFixing the test is not easy unless we cache somewhere the totalHits from the previous round. And I assume an app will need to do that too if it wants to omit a shard from a search. But this looks unrelated to this issue, i.e. it's some sort of optimization that we need to put somewhere, maybe searchAfter should also record totalHits for that shard, I'm not sure. But it's unrelated to this issue.\n\nSo I think at this point it would be better to fix whatever collector that is sensitive to searchAfter exceeding maxDoc, than to fix IndexSearcher to fail fast. ",
            "author": "Shai Erera",
            "id": "comment-13714653"
        },
        {
            "date": "2013-07-22T11:35:39+0000",
            "content": "I think the core change makes sense.  If you pass a too-big doc to searchAfter, something is buggy with the app.\n\nAnd we should fix TestShardSearching to not abuse the API like that ... it should do its own tracking.\n\nBut, it'd be good to see the actual stacktrace here first ... ",
            "author": "Michael McCandless",
            "id": "comment-13715127"
        },
        {
            "date": "2013-07-22T13:42:45+0000",
            "content": "it should do its own tracking\n\nThat's the part that bothers me. If we don't allow passing such searchAfter, we're basically telling apps that they should keep track of their shards, which means they need to maintain state (not that it's hard to maintain in this case). I'd rather first see the exception because from what I checked both TopScoreDocsCollector and TopFieldsCollector should be fine with searchAfter >= reader.maxDoc(), and IndexSearch.searchAfter returns a TopDocs so there aren't many collectors which can be affected. Except maybe if crocket uses DrillSideways...\n\nOn one hand the core fix makes sense, on the other hand it may unnecessarily complicate apps life. Especially if they need to obtain totalHits ... I wonder if in that case they can run with TotalHitCountCollector instead and construct an empty TopDocs? That's what happens when you currently pass searchAfter=Integer.MAX_VALUE. I'll try to fix the test like that to see if it helps. ",
            "author": "Shai Erera",
            "id": "comment-13715203"
        },
        {
            "date": "2013-07-22T21:07:04+0000",
            "content": "I had a chat w/ Mike about what's going on in the test and turns out the test is fine, comments needed some improvements. So I fixed IndexSearcher to throw IllegalArgEx if searchAfter.doc >= maxDoc + fixed test comments (I think they better explain what's going on there \u2013 Mike, appreciate your review!) and set after.doc to maxDoc-1.\n\nI think it's ready. This all makes sense now (to me). Core tests pass. I'd appreciate some review, but I intend to commit this tomorrow. ",
            "author": "Shai Erera",
            "id": "comment-13715663"
        },
        {
            "date": "2013-07-22T21:10:46+0000",
            "content": "+1, patch looks great.  Thanks Shai! ",
            "author": "Michael McCandless",
            "id": "comment-13715669"
        },
        {
            "date": "2013-07-23T06:25:39+0000",
            "content": "Commit 1505909 from Shai Erera in branch 'dev/trunk'\n[ https://svn.apache.org/r1505909 ]\n\nLUCENE-5128: IndexSearcher.searchAfter should throw IllegalArgumentException if after.doc >= reader.maxDoc() ",
            "author": "ASF subversion and git services",
            "id": "comment-13716142"
        },
        {
            "date": "2013-07-23T06:34:28+0000",
            "content": "Commit 1505910 from Shai Erera in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1505910 ]\n\nLUCENE-5128: IndexSearcher.searchAfter should throw IllegalArgumentException if after.doc >= reader.maxDoc() ",
            "author": "ASF subversion and git services",
            "id": "comment-13716147"
        },
        {
            "date": "2013-07-23T06:37:53+0000",
            "content": "Committed to trunk and 4x. Closing it now, crocket - still it would be good if you can paste the full stacktrace, so we can check if there are collectors that are sensitive to that. ",
            "author": "Shai Erera",
            "id": "comment-13716154"
        },
        {
            "date": "2013-07-23T21:05:10+0000",
            "content": "Wait until this weekend. I'm going to check the stacktrace this saturday. ",
            "author": "crocket",
            "id": "comment-13717621"
        },
        {
            "date": "2013-07-27T23:41:23+0000",
            "content": "Man, I was so foolish.\n\nIt was my mistake.\n\n\nTopDocs searchResult=searcher.search(query, hitsPerPage, sort);\nfor(Integer p=1; p<page; ++p) {\n    searchResult=searcher.searchAfter(\n            searchResult.scoreDocs[searchResult.scoreDocs.length-1],\n            query, hitsPerPage, sort);\n    System.out.println(searchResult.scoreDocs.length);\n}\n\n\nIn the above code snippet, searchResult.scoreDocs.length becomes 0 when I search beyond the number of documents.\nBut my code executes searchResult.scoreDocs[searchResult.scoreDocs.length-1] even after searchResult.scoreDocs.length becomes 0.\n\nThat's why I faced that exception.\n\nSorry for that.\n\nif I reported a false issue, what issue did you solve, then? ",
            "author": "crocket",
            "id": "comment-13721801"
        },
        {
            "date": "2013-07-28T04:40:54+0000",
            "content": "Hehe, no problem. Your report uncovered a potential misuse of the searchAfter API. You should always pass the last ScoreDoc that you obtained from the last search. Your code above uses it correctly, although you should check for scoreDocs.length == 0, as you noted.\n\nAfter enforcing that limitation in IndexSearcher, one test misused the API and had to be fixed as well.\n\nSo your report, while a false alarm, led to an improvement of the API . Thank you for that! ",
            "author": "Shai Erera",
            "id": "comment-13721857"
        },
        {
            "date": "2013-10-05T10:19:05+0000",
            "content": "4.5 release -> bulk close ",
            "author": "Adrien Grand",
            "id": "comment-13787076"
        }
    ]
}