{
    "id": "LUCENE-3680",
    "title": "exception consistency in o.a.l.store",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [],
        "type": "Task",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "just some minor improvements:\n\n\talways use EOFException when its eof\n\talways include the inputstream too so we know filename etc\n\tuse FileNotFoundException consistently in CFS when a sub-file is not found",
    "attachments": {
        "LUCENE-3680.patch": "https://issues.apache.org/jira/secure/attachment/12509796/LUCENE-3680.patch",
        "LUCENE-3680_more.patch": "https://issues.apache.org/jira/secure/attachment/12509801/LUCENE-3680_more.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-01-07T17:46:49+0000",
            "content": "+1 Thanks for taking care! ",
            "author": "Uwe Schindler",
            "id": "comment-13182042"
        },
        {
            "date": "2012-01-07T17:55:21+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13182044"
        },
        {
            "date": "2012-01-07T21:07:01+0000",
            "content": "I committed the patch (backporting), but i found a few more problems relating to\ninconsistent use of exceptions when accessing a closed resource.\n\nhere are some from 3.x's compoundfiledirectory:\n\n  public synchronized void close() throws IOException {\n    if (stream == null)\n      throw new IOException(\"Already closed\");\n  ...\n  public synchronized IndexInput openInput(String id, int readBufferSize) throws IOException {\n    if (stream == null)\n      throw new IOException(\"Stream closed\");\n\n\n\nI think the close() one is wrong since it impls closeable, but in the other case we should use AlreadyClosedException (like other directories).\nIll look around for more of these and create another patch. ",
            "author": "Robert Muir",
            "id": "comment-13182096"
        },
        {
            "date": "2012-01-07T21:22:12+0000",
            "content": "I agree, Closeable.close() is allowed to be closed multiple times, while additional calls must have no effect. So the first throws is wrong, should be simple return. ",
            "author": "Uwe Schindler",
            "id": "comment-13182098"
        },
        {
            "date": "2012-01-07T21:26:46+0000",
            "content": "patch with more consistency fixes.\n\nI put TODO's in the lockfactory exceptions where a directory is a regular file (not sure if we should be using NoSuchDirectoryException here?) ",
            "author": "Robert Muir",
            "id": "comment-13182099"
        },
        {
            "date": "2012-01-07T21:54:11+0000",
            "content": "Cool +1\n\nWe should better check all Closeables... ",
            "author": "Uwe Schindler",
            "id": "comment-13182110"
        },
        {
            "date": "2012-03-06T02:40:14+0000",
            "content": "I think this patch is safe, I'll bring it up to speed and commit it tomorrow. ",
            "author": "Robert Muir",
            "id": "comment-13222945"
        }
    ]
}