{
    "id": "SOLR-8429",
    "title": "add a flag blockUnknown to BasicAutPlugin",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "If authentication is setup with BasicAuthPlugin, it let's all requests go through if no credentials are passed. This was done to have minimal impact for users who only wishes to protect a few end points (say , collection admin and core admin only)\n\nWe can add a flag to BasicAuthPlugin to allow only authenticated requests to go in \n\nthe users can create the first security.json with that flag\n\nserver/scripts/cloud-scripts/zkcli.sh -z localhost:9983 -cmd put /security.json '{\"authentication\": {\"class\": \"solr.BasicAuthPlugin\", \n\"blockUnknown\": true,\n\"credentials\": {\"solr\": \"orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw=\"}}}'\n\n\nor add the flag later\nusing the command\n\n\ncurl  http://localhost:8983/solr/admin/authentication -H 'Content-type:application/json' -d  '{ \n{set-property:{blockUnknown:true}\n}'",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-17T00:25:32+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Let's make it default to true from 5.5, aligning with what people expect after enabling auth in any piece of software. We can fix back-compat using luceneMatchVersion, or I'm also OK with treating this as a Bug, documenting the change in CHANGES, since the refGuide does not even mention the current behavior.\n\nIs it at all possible with 5.4 to make BasicAuth work without also specifying authorization? ",
            "id": "comment-15061208"
        },
        {
            "date": "2015-12-17T02:40:25+0000",
            "author": "Noble Paul",
            "content": "I don't think we need to change the default and change the default behavior. All we need to do is change the example and add this flag there. So everyone who use this feature will see the flag. If we put in the default nobody will know this. \n\nThe point about security is that there are a lot of users who have solr without security and they would just want to have minimal security. This would be to just avoid certain operations being performed inadvertently. So, security is a mechanism to protect their solr from themselves ",
            "id": "comment-15061360"
        },
        {
            "date": "2015-12-17T10:54:25+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "All we need to do is change the example and add this flag there.\n\nWe have a tradition of letting example configs and defaults be the same, and reflect what majority of users want/need/expect.\n\nIf we put in the default nobody will know this.\n\nBy controlling the default in luceneMatchVersion, people upgrading solr without upgrading their config will get what they had, and still be able to add the flag if they wish. Those bumping their config version will get the new default, and they will be aware of it since it will be highlighted in the Upgrading from Solr 5.4 section of CHANGES.\n\n...a lot of users who have solr without security and they would just want to have minimal security. \n\nWith \"a lot of\" \u2013 do you mean \"the majority\"? The defaults should reflect what most people would want when securing their Solr in production for the first time. The simplest possible requirement is typically to require user/pass across the board. This should work, without also having to configure an authorization plugin. Those that also want to add users, groups and roles will add a authorization section, and those that want to open up for unauthenticated users/clients would add the new flag.\n\nThis one command should be enough to secure all of Solr with username solr and password solr:\n\nserver/scripts/cloud-scripts/zkcli.sh -z localhost:9983 -cmd put /security.json '{\"authentication\": {\"class\": \"solr.BasicAuthPlugin\",\"credentials\": {\"solr\": \"i9buKe/RhJV5bF/46EI9xmVVYyrnbg9zXf+2FrFwcy0= OTg3\"}}}'\n\n\nWhat to do if only class and no credentials are given? A) Temporarily allow all traffic until at least 1 user is created, or B) Enable default credentials admin/admin with a big fat warning in the ADMIN UI that it must be changed? ",
            "id": "comment-15061887"
        },
        {
            "date": "2015-12-17T11:11:36+0000",
            "author": "Noble Paul",
            "content": "By controlling the default in luceneMatchVersion, people upgrading solr without upgrading their config will get what they had, and still be able to add the flag if they wish.\n\nI don't wish to tie this to luceneMatchVersion . This is just adding complexity and making it harder to debug\n\nWith \"a lot of\" \u2013 do you mean \"the majority\"? \n\nI have no numbers to justify either way. Solr users haven't had any authentication in the past. So the assumption was that most of them did not need any security (or they had alternate solutions).\n\nLets say what my proposal look like\n\nserver/scripts/cloud-scripts/zkcli.sh -z localhost:9983 -cmd put /security.json '{\"authentication\": {\"class\": \"solr.BasicAuthPlugin\", \n\"blockUnauthenticated\":true ,\n\"credentials\": {\"solr\": \"i9buKe/RhJV5bF/46EI9xmVVYyrnbg9zXf+2FrFwcy0= OTg3\"}}}'\n\n\n\nI'm eager to hear what others think about this.\n ",
            "id": "comment-15061910"
        },
        {
            "date": "2015-12-17T11:39:25+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I don't wish to tie this to luceneMatchVersion\nThinking a bit more, luceneMatchVersion wouldn't work here anyway, since we're talking node-level config and not collection-level? Still I ghink a new default setting can be introduced with proper release note documentation.\n\nSo the assumption was that most of them did not need any security (or they had alternate solutions).\nMy clients mostly use Container managed security in Jetty/Tomcat, and some use SSL client certificate authentication - both solutions lock down the entire /solr namespace. Guess there are plenty of these out there on older versions looking to switch to Solr managed security.\n\nSo, with this new flag enabled, what if you want to add rulesBasedAuthorization and explicitly open up a certain path, say /solr/foo/select to unauthenticated users. Would that be possible, or would the enforcing of auth happen before the authz plugin can decide? ",
            "id": "comment-15061937"
        },
        {
            "date": "2015-12-17T13:18:31+0000",
            "author": "Noble Paul",
            "content": "If \"blockUnauthenticated\":true is set , you don't have the choice of allowing any path without authentication\n\nHowever you can do the following . create a permission called all ( SOLR-8428 ) and then explicitly open up the path /solr/foo/select using a wild card role role:\"*\" ( SOLR-8434 ). The rules would look like the follows \n\n\n{\n\"authorization\" :{\n\"permissions\":[\n{\"name\": \"foo-read\",\n\"collection\": \"foo\",\n\"path\": \"/select\",\n\"role\": null},\n{\"name\":\"all\" ,\n\"role\": \"*\"}]}}\n\n ",
            "id": "comment-15062022"
        },
        {
            "date": "2015-12-17T13:43:52+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Cool. This workaround would require blockUnauthenticated to be false, right?\n\nJust a thought: If the new flag blockUnauthenticated is not explicitly defined in config, could the default be smart and depend on whether an Authorization plugin is active or not? There is no use in BasicAuthPlugin alone without this enabled... Pseudo:\n\n\n// Default to true if no authz configured\nboolean blockUnauthenticated = config.get(\"blockUnauthenticated\", !hasAuthorizationPlugin());\n\n\n\nThen we would continue to omit the flag in example configs, and document it for those who rather want to block using the flag instead of an all permission. That way we'd get back compat as well, not? ",
            "id": "comment-15062042"
        },
        {
            "date": "2015-12-17T18:56:57+0000",
            "author": "Noble Paul",
            "content": "Cool. This workaround would require blockUnauthenticated to be false, right?\n\nyes\n\n\nJust a thought: If the new flag blockUnauthenticated is not explicitly defined in config, could the default be smart and depend on whether an Authorization plugin is active or not?\n\nI'm kinda against any rule which requires a user to read documentation to understand. The rule of thumb is if a user looks at the security.json he should have enough idea on what could happen.  ",
            "id": "comment-15062556"
        },
        {
            "date": "2015-12-18T09:13:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1720732 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1720732 ]\n\nSOLR-8429 precommit error ",
            "id": "comment-15063735"
        },
        {
            "date": "2015-12-18T10:31:17+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I'm kinda against any rule which requires a user to read documentation to understand. The rule of thumb is if a user looks at the security.json he should have enough idea on what could happen.\n\nAgree, but how can a user reading this security.json \n\n{\"authentication\": {\"class\": \"solr.BasicAuthPlugin\",  \"credentials\": {\"solr\": \"i9buKe/RhJV5bF/46EI9xmVVYyrnbg9zXf+2FrFwcy0= OTg3\"}}}\n\n\n...have any clue that absolutely nothing will be protected \u2013 unless that was the default? On the other hand, if he saw \"blockUnknown\":false in there, he'd be explicitly warned that it is necessary to cover every single path in AutorizationPlugin\n\nRelated: Should we protect the user against locking herself out, i.e. throw exception if blockUnknown is set through API before there are any registered users? ",
            "id": "comment-15063800"
        },
        {
            "date": "2015-12-18T12:50:06+0000",
            "author": "Noble Paul",
            "content": "have any clue that absolutely nothing will be protected \u2013 unless that was the default? \n\nA person configuring security will follow our documentation. Our documentation will have blockUnknown=true in the sample. So his setup is protected automatically.\n\nRelated: Should we protect the user against locking herself out, \n\nNice to have. Anyway he has the option of overwriting the security.json if he screws up badly ",
            "id": "comment-15063918"
        },
        {
            "date": "2015-12-18T13:02:00+0000",
            "author": "Noble Paul",
            "content": "Commit 1720729 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1720729 ]\n\nSOLR-8429: Add a flag 'blockUnknown' to BasicAuthPlugin to block unauthenticated requests ",
            "id": "comment-15063927"
        },
        {
            "date": "2015-12-18T13:07:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1720777 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1720777 ]\n\nSOLR-8429: Add a flag 'blockUnknown' to BasicAuthPlugin to block unauthenticated requests ",
            "id": "comment-15063930"
        }
    ]
}