{
    "id": "SOLR-372",
    "title": "Sort on text fields does not work when there are capital alphabets and/or spaces",
    "details": {
        "affect_versions": "1.2",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "Given a text field say 'author_t', solr does not sort it properly.\nE.g.\nwhen there are following 3 authors in index, \nAyn Rand\nCapra\nDan Brown\n\non giving http://localhost:8982/solr/select?indent=on&version=2.2&q=type_t%3ABook+AND+%28a*+OR+c*+OR+d*%29&start=0&rows=10&fl=*%2Cscore&qt=standard&wt=standard&debugQuery=on&explainOther=&hl.fl=&sort=author_t%20asc\n\nthe following output is returned\n\n<response>\n\u2212\n\t<lst name=\"responseHeader\">\n<int name=\"status\">0</int>\n<int name=\"QTime\">5</int>\n\u2212\n\t<lst name=\"params\">\n<str name=\"wt\">standard</str>\n<str name=\"rows\">10</str>\n<str name=\"start\">0</str>\n<str name=\"sort\">author_t asc</str>\n<str name=\"q\">type_t:Book AND (a* OR c* OR d*)</str>\n<str name=\"fl\">*,score</str>\n<str name=\"qt\">standard</str>\n<str name=\"version\">2.2</str>\n<str name=\"explainOther\"/>\n<str name=\"hl.fl\"/>\n<str name=\"indent\">on</str>\n<str name=\"debugQuery\">on</str>\n</lst>\n</lst>\n\u2212\n\t<result name=\"response\" numFound=\"3\" start=\"0\" maxScore=\"2.6540346\">\n\u2212\n\t<doc>\n<float name=\"score\">2.3394115</float>\n\u2212\n\t<arr name=\"author_t\">\n<str>Capra</str>\n</arr>\n\u2212\n\t<arr name=\"combined_t\">\n<str>Fountainhead #combined# Capra</str>\n</arr>\n\u2212\n\t<arr name=\"id\">\n<str>Book:2</str>\n</arr>\n\u2212\n\t<arr name=\"pk_i\">\n<int>2</int>\n</arr>\n\u2212\n\t<arr name=\"title_t\">\n<str>Fountainhead</str>\n</arr>\n\u2212\n\t<arr name=\"type_t\">\n<str>Book</str>\n</arr>\n</doc>\n\u2212\n\t<doc>\n<float name=\"score\">2.6540346</float>\n\u2212\n\t<arr name=\"author_t\">\n<str>Dan Brown</str>\n</arr>\n\u2212\n\t<arr name=\"combined_t\">\n<str>The Da Vinci Code #combined# Dan Brown</str>\n</arr>\n\u2212\n\t<arr name=\"id\">\n<str>Book:3</str>\n</arr>\n\u2212\n\t<arr name=\"pk_i\">\n<int>3</int>\n</arr>\n\u2212\n\t<arr name=\"title_t\">\n<str>The Da Vinci Code</str>\n</arr>\n\u2212\n\t<arr name=\"type_t\">\n<str>Book</str>\n</arr>\n</doc>\n\u2212\n\t<doc>\n<float name=\"score\">2.6540346</float>\n\u2212\n\t<arr name=\"author_t\">\n<str>Ayn Rand</str>\n</arr>\n\u2212\n\t<arr name=\"combined_t\">\n<str>Tao of Physics #combined# Ayn Rand</str>\n</arr>\n\u2212\n\t<arr name=\"id\">\n<str>Book:1</str>\n</arr>\n\u2212\n\t<arr name=\"pk_i\">\n<int>1</int>\n</arr>\n\u2212\n\t<arr name=\"title_t\">\n<str>Tao of Physics</str>\n</arr>\n\u2212\n\t<arr name=\"type_t\">\n<str>Book</str>\n</arr>\n</doc>\n</result>\n\u2212\n\t<lst name=\"debug\">\n<str name=\"rawquerystring\">type_t:Book AND (a* OR c* OR d*)</str>\n<str name=\"querystring\">type_t:Book AND (a* OR c* OR d*)</str>\n<str name=\"parsedquery\">+type_t:book +(text:a* text:c* text:d*)</str>\n<str name=\"parsedquery_toString\">+type_t:book +(text:a* text:c* text:d*)</str>\n\u2212\n\t<lst name=\"explain\">\n\u2212\n\t<str name=\"id=Book:2,internal_docid=35\">\n\n2.3394115 = (MATCH) sum of:\n  2.2345371 = (MATCH) weight(type_t:book in 35), product of:\n    0.83847296 = queryWeight(type_t:book), product of:\n      2.6650078 = idf(docFreq=6)\n      0.3146231 = queryNorm\n    2.6650078 = (MATCH) fieldWeight(type_t:book in 35), product of:\n      1.0 = tf(termFreq(type_t:book)=1)\n      2.6650078 = idf(docFreq=6)\n      1.0 = fieldNorm(field=type_t, doc=35)\n  0.104874365 = (MATCH) product of:\n    0.3146231 = (MATCH) sum of:\n      0.3146231 = (MATCH) ConstantScoreQuery(org.apache.solr.search.PrefixFilter@238016), product of:\n        1.0 = boost\n        0.3146231 = queryNorm\n    0.33333334 = coord(1/3)\n</str>\n\u2212\n\t<str name=\"id=Book:3,internal_docid=36\">\n\n2.6540346 = (MATCH) sum of:\n  2.2345371 = (MATCH) weight(type_t:book in 36), product of:\n    0.83847296 = queryWeight(type_t:book), product of:\n      2.6650078 = idf(docFreq=6)\n      0.3146231 = queryNorm\n    2.6650078 = (MATCH) fieldWeight(type_t:book in 36), product of:\n      1.0 = tf(termFreq(type_t:book)=1)\n      2.6650078 = idf(docFreq=6)\n      1.0 = fieldNorm(field=type_t, doc=36)\n  0.41949746 = (MATCH) product of:\n    0.6292462 = (MATCH) sum of:\n      0.3146231 = (MATCH) ConstantScoreQuery(org.apache.solr.search.PrefixFilter@1d9e2c7), product of:\n        1.0 = boost\n        0.3146231 = queryNorm\n      0.3146231 = (MATCH) ConstantScoreQuery(org.apache.solr.search.PrefixFilter@1b7ae22), product of:\n        1.0 = boost\n        0.3146231 = queryNorm\n    0.6666667 = coord(2/3)\n</str>\n\u2212\n\t<str name=\"id=Book:1,internal_docid=34\">\n\n2.6540346 = (MATCH) sum of:\n  2.2345371 = (MATCH) weight(type_t:book in 34), product of:\n    0.83847296 = queryWeight(type_t:book), product of:\n      2.6650078 = idf(docFreq=6)\n      0.3146231 = queryNorm\n    2.6650078 = (MATCH) fieldWeight(type_t:book in 34), product of:\n      1.0 = tf(termFreq(type_t:book)=1)\n      2.6650078 = idf(docFreq=6)\n      1.0 = fieldNorm(field=type_t, doc=34)\n  0.41949746 = (MATCH) product of:\n    0.6292462 = (MATCH) sum of:\n      0.3146231 = (MATCH) ConstantScoreQuery(org.apache.solr.search.PrefixFilter@951a0), product of:\n        1.0 = boost\n        0.3146231 = queryNorm\n      0.3146231 = (MATCH) ConstantScoreQuery(org.apache.solr.search.PrefixFilter@1ce1bea), product of:\n        1.0 = boost\n        0.3146231 = queryNorm\n    0.6666667 = coord(2/3)\n</str>\n</lst>\n</lst>\n</response>\n\nAs can be seen above the authors are not sorted properly.\n\nHowever, if the authors names are changed to the following, sort happens properly\n\naynrand\ncapra\ndanbrown\n\nThis is a severe break in the functionality and I would recommend fixing it on a high priority basis.\n\nPlease let me know if you have any questions.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12532354",
            "date": "2007-10-04T07:47:29+0000",
            "content": "when you encounter unexpected behavior, please consult the FAQ first, and then email the solr-user mailing list with a description of your problem before opening a Bug report...\n\n> http://wiki.apache.org/solr/FAQ#head-70151d91483b82b9a461f50daa23c83056df5281\n> \"Why Isn't Sorting Working on my Text Fields?\"\n> \n> Lucene Sorting requires that the field you want to sort on be indexed, but it cannot\n> contain more then one \"token\" per document. Most Analyzers used on Text fields result\n> in more then one token, so the simplest thing to do is to use copyField to index a second\n> version of your field using the StrField class.\n> \n> If you need to do some processing on the field value using TokenFilters, you can also use\n> the KeywordTokenizer, see the Solr example schema for more information. "
        }
    ]
}