{
    "id": "SOLR-4920",
    "title": "DIH JdbcDataSource exception handling",
    "details": {
        "affect_versions": "4.3,                                            6.0",
        "status": "Closed",
        "fix_versions": [
            "4.4"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "JdbcDataSource will incorrectly suppress exceptions when retrieving a connection from a JNDI context and fall back to trying to use DriverManager to obtain a connection. This makes it impossible to troubleshoot misconfigured JNDI DataSource.\n\nAdditionally, when a SQLException is thrown while initializing a connection, such as in setAutoCommit(), the connection will not be closed. This can cause a resource leak.\n\nA patch will be attached with unit tests that addresses both issues.",
    "attachments": {
        "patch.diff": "https://issues.apache.org/jira/secure/attachment/12587498/patch.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Chris Eldredge",
            "id": "comment-13681576",
            "date": "2013-06-12T20:07:37+0000",
            "content": "Patch against r1492257. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13681960",
            "date": "2013-06-13T06:47:47+0000",
            "content": "[trunk commit] shalin\nhttp://svn.apache.org/viewvc?view=revision&revision=1492537\n\nSOLR-4920: JdbcDataSource incorrectly suppresses exceptions when retrieving a connection from  a JNDI context and falls back to trying to use DriverManager to obtain a connection. Additionally,  if a SQLException is thrown while initializing a connection, such as in setAutoCommit(), the  connection will not be closed. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13681963",
            "date": "2013-06-13T06:50:22+0000",
            "content": "[branch_4x commit] shalin\nhttp://svn.apache.org/viewvc?view=revision&revision=1492538\n\nSOLR-4920: JdbcDataSource incorrectly suppresses exceptions when retrieving a connection from  a JNDI context and falls back to trying to use DriverManager to obtain a connection. Additionally,  if a SQLException is thrown while initializing a connection, such as in setAutoCommit(), the  connection will not be closed. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13681982",
            "date": "2013-06-13T07:15:24+0000",
            "content": "Fixed.\n\nThanks Chris! "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13716791",
            "date": "2013-07-23T18:38:36+0000",
            "content": "Bulk close resolved 4.4 issues "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-14188359",
            "date": "2014-10-29T14:00:19+0000",
            "content": "I face usability issue with  \n\nJdbcDataSource.java\n141 \ttry {\n142 \tc = DriverManager.getConnection(url, initProps);\n143 \t} catch (SQLException e) {\n144 \t// DriverManager does not allow you to use a driver which is not loaded through\n145 \t// the class loader of the class which is trying to make the connection.\n146 \t// This is a workaround for cases where the user puts the driver jar in the\n147 \t// solr.home/lib or solr.home/core/lib directories.\n148 \tDriver d = (Driver) DocBuilder.loadClass(driver, context.getSolrCore()).newInstance();\n149 \tc = d.connect(url, initProps);\n150 \t}\n\n\n\nif I supply weird url, I've got SQLException, it's caught, then it calls c = d.connect(url, initProps); which returns null (which is pretty valid giving the javadoc). Then I have NPE where the connection is hit. There is no anything about SQLException reasons in the log. Isn't it worth to raise an issue?  "
        }
    ]
}