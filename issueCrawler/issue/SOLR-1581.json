{
    "id": "SOLR-1581",
    "title": "Facet by Function",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "It would be really great if we could execute a function and quantize it into buckets that could then be returned as facets.",
    "attachments": {
        "SOLR-1581.patch": "https://issues.apache.org/jira/secure/attachment/12471296/SOLR-1581.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12781699",
            "date": "2009-11-23T23:25:05+0000",
            "content": "seems like this would relate to SOLR-1240 (since we currently don't have any way to facet by buckets of field values, let alone buckets of function values) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872590",
            "date": "2010-05-27T22:08:24+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12994774",
            "date": "2011-02-15T12:50:59+0000",
            "content": "I would agree it relates to SOLR-1240.  In fact, API wise, I think we could just add facet.range.function= (or some abbreviation like facet.range.fn).  The key here is that we don't want to have to run the query multiple times like one has to do w/ frange "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12994828",
            "date": "2011-02-15T15:04:09+0000",
            "content": "actually, in looking at this, we don't need facet.range.function, we just need facet.range to take functions "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12995594",
            "date": "2011-02-17T00:03:19+0000",
            "content": "could probably reuse the sort parsing code for this ... it does a pretty good job of doing a \"quick\" test for field names, then looking for a matching function, then falling back to an assumption of esoteric field names "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12995846",
            "date": "2011-02-17T15:19:38+0000",
            "content": "could probably reuse the sort parsing code for this\n\nYeah, I was thinking the same thing, only problem is it is fairly tightly coupled (QueryParsing.parseSort) and I don't see an great way to separate the two just yet. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12995894",
            "date": "2011-02-17T16:39:33+0000",
            "content": "Here's a cool side effect of this, I think.  We will be faceting on a ValueSource.  We have a QueryValueSource which returns the scores of a Query.  This means one can see the distribution of scores as facets. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12995915",
            "date": "2011-02-17T16:56:51+0000",
            "content": "I've been digging into this a bit more and I've got an idea that I want to throw out there about this and how it relates to Numeric Range faceting (and possibly date faceting)\n\nCurrently, the numeric range faceting produces a series of range queries from which it retrieves the number of documents that satisfy that query.  For facet by function, I'm thinking that I would parse the facet.range value and get back a ValueSource, from which I would get the DocValues and then I would iterate over the DocValues for the base docset and keep counts for each bucket.  It then occurred to me that wouldn't this be a faster way then doing the range queries (at the cost of it being a ValueSource and thus in memory) for each gap?  Otherwise, what I will do is simply put in an if/else clause, if it is a function do the ValueSource, otherwise do the current way. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12995924",
            "date": "2011-02-17T17:08:01+0000",
            "content": "It then occurred to me that wouldn't this be a faster way then doing the range queries\n\nSometimes yes, sometimes no.  This is sort of analogous to range vs frange.  It depends on the number of ranges, the number of documents in the base set, etc.  Using ValueSource will currently only work for single-valued fields. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12995927",
            "date": "2011-02-17T17:10:41+0000",
            "content": "Totally non function, mostly just putting it up to take it off my drive.  Don't bother applying yet, other than I put in some test cases. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12995928",
            "date": "2011-02-17T17:11:48+0000",
            "content": "I like it!\n\nDepending on the size of the index, it seem like keeping the range query option would be good \u2013 the Trie* fields do remarkably well.\n\nUsing ValueSource would also make it easier/faster to get min/max values if we want to support open ranges and percentages "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12995994",
            "date": "2011-02-17T19:27:37+0000",
            "content": "This is sort of analogous to range vs frange.\n\nDo you think it is worthwhile to explore reusing the ValueSourceRangeFilter here and just do range queries then?  Or should I pursue keeping my own buckets and just going through the doc set once?  Or, I suppose, we could plan for a facet.range.method that allowed you to use different approaches. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12996032",
            "date": "2011-02-17T20:15:05+0000",
            "content": "Another concern on this one is how to handle per \"field\" options, since we don't really have fields for functions, but still it would be useful to have multiple facet by function options. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12996068",
            "date": "2011-02-17T20:59:24+0000",
            "content": "i am not a huge fan of the \n{!tag=xxx}\n syntax, but perhaps we could use somethign like that to define a function once and then use it multiple times?\n\nPerhaps the field parameter stuff could first try fields then look for the function names?  Seems like this keeps coming up...\n\nhttp://wiki.apache.org/solr/FieldAliasesAndGlobsInParams\nhttps://issues.apache.org/jira/browse/SOLR-1205\n\nI like the idea of being able to define something like: \n\n ?alias=dist(2, x, y, 0, 0) AS dist&fl=name,id,dist&facet.range=dist&f.dist.facet.range.gap=10&...&sort=dist asc\n\n\n\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12996157",
            "date": "2011-02-18T00:05:40+0000",
            "content": "haven't looked at the patch, barely skimmed the comments, but in regards to the \"how to handle per \"field\" options, since we don't really have fields\" question i think the right solution (to be consistent with the how everything else works) is to just implement SOLR-2251 \u2013 i thought it was a good idea when we were just talking about simple fields, i think it's a crucial idea when we're talking about arbitrary functions. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12996365",
            "date": "2011-02-18T12:06:42+0000",
            "content": "Ryan, I like that very much!\n\nWe already have a \"variable\" syntax in HTTP don't we?\n\n?distfunc=dist(2,x,y,0,0)&fl=name,id,distfunc...\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043668",
            "date": "2011-06-03T16:46:25+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106256",
            "date": "2011-09-16T14:50:16+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234631",
            "date": "2012-03-21T18:08:39+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Antoine Le Floc'h",
            "id": "comment-13449008",
            "date": "2012-09-05T18:59:44+0000",
            "content": "Do you confirm that as of Sep 2012, there is no other way to run a function on facet results, using the standard Solr4 ? (I am not talking of doing a custom facet processing in a patch). Thank you. "
        },
        {
            "author": "Ted Strauss",
            "id": "comment-13510230",
            "date": "2012-12-05T02:38:00+0000",
            "content": "I'd like to offer to co-sponsor work on this issue if anyone here knows where to go with it.\nThis relates to my issue https://issues.apache.org/jira/browse/SOLR-3742\nThanks "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13697446",
            "date": "2013-07-02T03:03:28+0000",
            "content": "Grant Ingersoll you still want/need this or has a solution for this emerged in the 4 years since the issue was opened? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717419",
            "date": "2013-07-23T18:48:11+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971205",
            "date": "2014-04-16T12:57:27+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Stanislav",
            "id": "comment-14366880",
            "date": "2015-03-18T09:36:39+0000",
            "content": "Am I right that this feature is already implemented as combination of stats and pivot facets in Solr 5? https://issues.apache.org/jira/browse/SOLR-6351 "
        }
    ]
}