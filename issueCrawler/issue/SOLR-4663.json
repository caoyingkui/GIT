{
    "id": "SOLR-4663",
    "title": "Log an error if more than one core points to the same data dir.",
    "details": {
        "affect_versions": "4.3,                                            6.0",
        "status": "Closed",
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In large multi-core setups, having mistakes whereby two or more cores point to the same data dir seems quite possible. We should at least complain very loudly in the logs if this is detected.\n\nShould be a very straightforward check at core discovery time.\n\nIs this serious enough to keep Solr from coming up at all?",
    "attachments": {
        "SOLR-4663.patch": "https://issues.apache.org/jira/secure/attachment/12576984/SOLR-4663.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan Ernst",
            "id": "comment-13620485",
            "date": "2013-04-03T01:25:36+0000",
            "content": "+1 to failing to startup in this serious misconfiguration. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13622361",
            "date": "2013-04-04T14:14:18+0000",
            "content": "Here's a patch. It fixes another issue I saw with persisting (I'll be soooo glad when that's obsoleted!).\n\nIt fails hard when either a core with a duplicate name is found or with a duplicate data dir, both with old and new style solr.xml. It's still possible for more than one core to share the same instance dir. I'd guess there are other checks that could be done, but this is a start.\n\nMy real question is whether it's appropriate to fail hard on startup or just log a very loud warning. Ryan's the only person who's weighed in on this so far. My preference is to fail hard but I'm not particularly invested either way.\n\nI'll be checking this in tomorrow at the latest unless there are objections. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13622367",
            "date": "2013-04-04T14:22:09+0000",
            "content": "Think about creating a core via API... pointing at another core's data directory should only only cause the create of that new core to fail.\nLikewise, if someone messes with a core's configuration such that it fails on startup, it doesn't seem like this should stop the other correctly configured cores from loading. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13622396",
            "date": "2013-04-04T15:07:15+0000",
            "content": "bq: creating a core via API\n\nThis patch doesn't address this, at least not yet. Good point though, I'll see about adding that in.\n\nbq: If someone messes with a core's configuration such that it fails on startup...\n\nYou always make my life more complicated <G>.... I can argue that either way, is this a fail-fast situation or is the robustness of driving on as well as possible worth the added difficulty in tracking down? The fast fix to the current patch would be just to remove the offending cores from the lists of cores (both lazily loaded and load-on-startup) and log an error.\n\nThis would imply that when someone tried to actually do something with the offending cores, they'd get a \"core not found\" message, which would be slightly misleading, but there'd be a big fat error (not info, not warn) in the log files so I'm not too worried. That would avoid the complexity of checking every time we tried to open a core. The important bit is to fail without screwing up the index files for the offending cores (two cores pointing to the same dataDir). I expect that the current behavior for, say two cores with the same name is that we use one or the other, perhaps not consistently. It's Not Right to do anything at all IMO.\n\nI think in the discovery case, though, the chance of copying the same core.properties file to multiple places, thus having cores with the same name or data dir is much more likely....\n\nSo do you actively object to failing fast? Or are you ok with failing fast but your comments are intended to make sure we're considering all the angles? Initially I didn't want to make things more complicated, but by just not putting the offending cores in the relevant lists I think the complexity argument goes away and preserving index integrity is maintained so I'm +/-0.\n\nLet me know... "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13622504",
            "date": "2013-04-04T16:50:47+0000",
            "content": "... The fast fix to the current patch would be just to remove the offending cores from the lists of cores (both lazily loaded and load-on-startup) and log an error.\n\nThis would imply that when someone tried to actually do something with the offending cores, they'd get a \"core not found\" message, which would be slightly misleading, but there'd be a big fat error (not info, not warn) in the log files so I'm not too worried. ...\n\nDon't forget that CoreContainer now has the ability to track and report (as part of \"STATUS\" requests) that cores failed to initialize (either on startup or via API calls) and why.  (see SOLR-3591 and child tasks)\n\nThis type of dataDir error should be no different: if coreA loads fine, and then coreB fails to load because it points at the same data dir as coreA that doesn't need to prevent the server from functioning, coreA should still be usable, and as long as the error is properly recorded in the CoreContainer the UI and the CoreAdminHandler will report back why coreB isn't available. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13622542",
            "date": "2013-04-04T17:18:43+0000",
            "content": "~hossman Didn't know that, that sounds like it pretty much solves the issue. I'll look over the patch, but any tips on what \"properly recorded\" means (I have to run out now, so I'm being lazy, but I can look later.\n\nErick "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13622545",
            "date": "2013-04-04T17:19:00+0000",
            "content": "Minor Tangent...\n\n...This would imply that when someone tried to actually do something with the offending cores, they'd get a \"core not found\" message,...\n\nAfter posting my last comment, it occured to me that even though we are tracking core init failures and reporting them in STATUS requests, we are still returning 404s when people attempt to use those cores ... i've opened SOLR-4672 to consier returning a 500 wraped around the init error. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13622916",
            "date": "2013-04-04T22:47:28+0000",
            "content": "All tests run with this patch, putting up for comment.\n\nStill have to deal with Yonik's and Hoss's suggestions about recording core creation errors rather than hard-failing.\n\nBut the major change here is that creating cores via core-admin should correctly persist to solr.xml.\n\nPersisting is an incredible pain. I'll be Sooooooo happy when we obsolete that nonsense. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13626661",
            "date": "2013-04-09T14:38:16+0000",
            "content": "I'll commit this later today unless there are objections, and assuming all the tests pass (running nightly now). "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13627280",
            "date": "2013-04-09T23:48:38+0000",
            "content": "Last version, nothing really changed just cleanup.\n\nMark Miller\n\nIn CoreAdminHandler, there's a bit of code specific to reporting same-named cores iff zkAware is set. I took out the ZK-specific parts and wanted to ping you in case that was a bad move. I also changed the error returned as per the discussion with Hoss.\n\ntrunk r: 1466291 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13627288",
            "date": "2013-04-10T00:00:59+0000",
            "content": "I'm okay with preventing that in non solrcloud mode as well. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13627414",
            "date": "2013-04-10T03:03:42+0000",
            "content": "4x: r - 1466319 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654116",
            "date": "2013-05-10T10:34:05+0000",
            "content": "Closed after release. "
        }
    ]
}