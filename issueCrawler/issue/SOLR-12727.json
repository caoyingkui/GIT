{
    "id": "SOLR-12727",
    "title": "Upgrade ZooKeeper dependency to 3.4.13",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "fix_versions": [
            "master (8.0)",
            "7.7"
        ],
        "affect_versions": "7.4",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Upgrade ZK dependency to 3.4.13.  This fixes ZOOKEEPER-2184 which will make the ZK client re-resolve the server hostnames when a connection fails.  This will fix issues where a failed ZK container is replaced with a new one that has a different IP address and DNS gets updated with the new address.\n\nTypically these upgrades do not require code changes, but that should be verified.",
    "attachments": {
        "SOLR-12727.patch": "https://issues.apache.org/jira/secure/attachment/12938660/SOLR-12727.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-09-01T22:31:55+0000",
            "content": "I'm giving it a quick test now, I'll report sometime tonight.\n\nIf precommit and all tests (well, with the usual caveats) pass, I'll check it in this weekend. ",
            "author": "Erick Erickson",
            "id": "comment-16599821"
        },
        {
            "date": "2018-09-06T15:31:30+0000",
            "content": "Here's what I have so far. I'll be out today so putting up this preliminary patch in case someone who, you know, like, understands ZK wants to take a glance.\n\nThere are two always-failing tests:\n\nSaslZkACLProviderTest\nTestConfigSetsAPIZkFailure\n\nI \"fixed\" TestConfigSetsAPIZkFailure by the change to ZkTestServer, \n\n\tzooKeeperServer.shutdown();\n+      zooKeeperServer.shutdown(true);\n\n\n\nWhy did I do that? Well, I looked at the ZooKeeper code for shutdown and saw that the entire code path that was erroring out with an NPE could be avoided by passing \"true\". IOW I made a random change that stopped the error without having a clue what the consequences are. I don't consider it a fix until I understand why the old code did not error out here, but at least it points to where to start looking.\n\nIf you think the above is a hint that I'd be grateful if someone who understands more about ZooKeeper and the ZkTestServer would chime in, you're right .\n\nMark MillerGregory Chanan Tom\u00e1s Fern\u00e1ndez L\u00f6bbeAnshum Gupta you've touched this file in the past, any wisdom?\n\nI'll look more tonight when I get back home. ",
            "author": "Erick Erickson",
            "id": "comment-16605932"
        },
        {
            "date": "2018-09-13T05:18:55+0000",
            "content": "I'm having two failures and have no idea where to start, so flying blind. Any clues?\n\n\tSSLMigrationTest\n\tSaslZkACLProvider\n\n\n\nOf the two, only SaslZkACLProvider fails reliably, but here's a failing seed just in case:\n\n\u00a0-Dtests.seed=64BB8764D5BC1EC3\n\nAnd the stack trace is below. Pretty clearly auth isn't happening as it should, but I have no clue why. One thing I can say is that line 516 in SolrZkClient fails with this patch, and succeeds without it.\n\nObject exists = exists(currentPath, watcher, retryOnConnLoss);\n\nNo call is made to\n\nSaslZkACLProvider\n\nmethods with the patch, but methods there are called without the patch.\u00a0\u00a0SaslZkACLProvider is created in both cases. It's late and things are going fuzzy so I'm giving up for the night.\n\nNOTE: reproduce with: ant test  -Dtestcase=SaslZkACLProviderTest -Dtests.method=testSaslZkACLProvider -Dtests.seed=64BB8764D5BC1EC3 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=ca-ES -Dtests.timezone=US/Mountain -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\norg.apache.zookeeper.KeeperException$AuthFailedException: KeeperErrorCode = AuthFailed for /solr\n\n\tat __randomizedtesting.SeedInfo.seed([64BB8764D5BC1EC3:604FD1BC4CF8BDCD]:0)\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:126)\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:54)\n\tat org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1111)\n\tat org.apache.solr.common.cloud.SolrZkClient.lambda$exists$2(SolrZkClient.java:305)\n\tat org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:60)\n\tat org.apache.solr.common.cloud.SolrZkClient.exists(SolrZkClient.java:305)\n\tat org.apache.solr.common.cloud.SolrZkClient.makePath(SolrZkClient.java:516)\n\tat org.apache.solr.common.cloud.SolrZkClient.makePath(SolrZkClient.java:419)\n\tat org.apache.solr.cloud.SaslZkACLProviderTest.setUp(SaslZkACLProviderTest.java:82)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1742)\n\tat com.car\n\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0 ",
            "author": "Erick Erickson",
            "id": "comment-16613034"
        },
        {
            "date": "2018-09-13T12:44:34+0000",
            "content": "Erick Erickson - Do you see either of the following messages in the output for SaslZkACLProviderTest?\n\njava.security.AccessControlException: access denied (\"javax.security.auth.kerberos.ServicePermission\" \"zookeeper/localhost@EXAMPLE.COM\" \"initiate\")\n\n\n\nNo server entry found for kerberos principal name zookeeper/localhost@EXAMPLE.COM \u00a0\u00a0 [junit4] \u00a0 2> 24313 WARN\u00a0 (NioProcessor-3) [\u00a0 \u00a0 ] o.a.d.s.KERBEROS_LOG No server entry found for kerberos principal name zookeeper/localhost@EXAMPLE.COM\n\n\nIt looks like 127.0.0.1 is being replaced with localhost causing the Kerberos ticket to not match correctly. I checked the same seed on master and didn't see this problem. I applied the patch to upgrade to 3.4.13 and see this failure.\n\n\u00a0\n\nNot sure if we should \"fix\" this the way I did but here is how I got the test to pass:\n1)\u00a0Add the following to\u00a0\n\npermission javax.security.auth.kerberos.ServicePermission \"zookeeper/localhost@EXAMPLE.COM\", \"initiate\";\npermission javax.security.auth.kerberos.ServicePermission \"zookeeper/localhost@EXAMPLE.COM\", \"accept\";\n\n\n2) In SaslZkACLProviderTest change zookeeper/127.0.0.1 to zookeeper/localhost ",
            "author": "Kevin Risden",
            "id": "comment-16613423"
        },
        {
            "date": "2018-09-13T12:49:13+0000",
            "content": "Looks like ZOOKEEPER-3100\u00a0could be related here since it is new from Zookeeper 3.4.13. Kafka looks like it had the same problem of localhost vs 127.0.0.1. ",
            "author": "Kevin Risden",
            "id": "comment-16613425"
        },
        {
            "date": "2018-09-13T13:35:24+0000",
            "content": "So the change in Zookeeper 3.4.13 definitely caused the change from 127.0.0.1 -> localhost. Since 127.0.0.1 resolves to localhost, the new InetSocketAddress created internally to the ZK client populates localhost for the\u00a0getHostName() call. Previously the InetSocketAddress kept the existing 127.0.0.1 and getHostName() would return 127.0.0.1.\u00a0ZOOKEEPER-1467 is related to the hostname part.\n\nI would guess that Zookeeper 3.4.13 would break almost all things using SASL/Kerberos that use ip addresses (like 127.0.0.1) instead of hostnames. For almost all the Kerberos stuff I've done, we have relied on hostnames instead of IP addresses. I am looking to see if there is a way to avoid the DNS lookup for 127.0.0.1.\n\nIs there a reason that this was setup with 127.0.0.1 originally? Any reason not to use localhost? ",
            "author": "Kevin Risden",
            "id": "comment-16613507"
        },
        {
            "date": "2018-09-13T13:46:37+0000",
            "content": "Doesn't look like there is a way to avoid the 127.0.0.1 -> localhost resolution currently. ZOOKEEPER-1467 will keep using the hostname for the SASL part of the connection. Switching to localhost instead of 127.0.01 is probably the best solution currently. (This assumes that all test machines have 127.0.0.1 resolving to localhost) ",
            "author": "Kevin Risden",
            "id": "comment-16613524"
        },
        {
            "date": "2018-09-13T17:52:38+0000",
            "content": "Kevin Risden Thanks a million for looking at this, it'd have taken me, well, quite a while to try to figure out.\n\nI think many uses of 127.0.0.1 are just accidental. At least not conscious choices. And once it's in the code base it gets repeated.\n\nAnd I'm sooooo glad I didn't try to shoehorn this into Solr 7.5. For instance, 'bin/solr zk -e cloud' doesn't work any more, we get \"Could not connect to ZooKeeper localhost:2181 within 30000 ms\". Who knows what else?\n\nWhat worked for me for the one test was just changing 127.0.0.1\u00a0to localhost in both SaslZkACLProviderTest and ZkTestServer. \n\nI haven't run the rest of the test suite yet and I'll beast SSLMigrationTest to see what falls out.\n\nAll that said, this really calls into question how to proceed. I don't particularly care about changing the tests, but have concerns about how this affects people who upgrade. I'll solicit opinions on the dev list.\n\nAgain, many many thanks for helping out here, I wouldn't have known where to start looking. ",
            "author": "Erick Erickson",
            "id": "comment-16613842"
        },
        {
            "date": "2018-09-13T17:55:42+0000",
            "content": "Some additional info:\n On a quick scan, only two non-test files use 127.0.0.1, ZkController and embedded/JettySolrRunner.\n\nThere are over 200 uses of 127.0.0.1 in test files.\n\nOn a quick scan of *.xml files, the DIH example uses 127.0.0.1, but no other non-test xml configs do. A dozen or so test configuration configuration files use 127.0.0.1. ",
            "author": "Erick Erickson",
            "id": "comment-16613850"
        },
        {
            "date": "2018-09-13T17:56:44+0000",
            "content": "I thought about how this could affect end users. I would bet there are very few people who are using ip addresses with embedded zookeeper with SASL/Kerberos. That would be a trifecta for sure and not best practice. Most of the time Kerberos requires DNS lookups (forward and reverse) to be setup correctly. Using IP addresses just doesn't work in many cases. So I think we should be ok with the ZK upgrade with SASL being small who should be affected by this change.\n\nI'm surprised that \"bin/solr zk -e cloud\" is broken. That shouldn't be using SASL/Kerberos?\u00a0 ",
            "author": "Kevin Risden",
            "id": "comment-16613853"
        },
        {
            "date": "2018-09-13T18:06:38+0000",
            "content": "\u00a0I'm surprised that \"bin/solr zk -e cloud\" is broken\n\nI haven't even started looking into why, I'll be AFK for a while now, will look later. The other bit of the message is: Error occurred while loading solr.xml from zookeeper... ",
            "author": "Erick Erickson",
            "id": "comment-16613862"
        },
        {
            "date": "2018-11-22T03:50:55+0000",
            "content": "Kevin Risden I'm back looking at this. I'm not sure where to add\n\npermission javax.security.auth.kerberos.ServicePermission \"zookeeper/localhost@EXAMPLE.COM\", \"initiate\";\npermission javax.security.auth.kerberos.ServicePermission \"zookeeper/localhost@EXAMPLE.COM\", \"accept\";\n\n\n\nUnderstand I'm a total and complete Kerberos novice. I've @Ignored that test for now so I can get through the rest of the tests. I had a million lines or so of: \n\n1963190 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.NIOServerCnxnFactory Ignoring unexpected runtime exception\n   [junit4]   2> java.lang.NullPointerException: null\n   [junit4]   2> 1963190 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.NIOServerCnxnFactory Ignoring unexpected runtime exception\n   [junit4]   2> java.lang.NullPointerException: null ",
            "author": "Erick Erickson",
            "id": "comment-16695530"
        },
        {
            "date": "2018-11-23T03:09:00+0000",
            "content": "Here's what I have so far. There were about\u00a039 test failures to start, all but two required minimal effort so they pass. The result is in the patch I just attached. I haven't run the full test suite with the patch attached yet.\n\nTwo tests fail:\n\n1> SaslZkACLProviderTest. I @Ignored it temporarily,\u00a0I'll remove it momentarily locally.\n\n2> TestMiniSolrCloudClusterSSLtestSslWithCheckPeerName fails\n\n3> I'm taking the approach of only changing the minimal number of things to make tests pass. This still leaves quite a number of references to 127.0.0.1 in the code. I'm reluctant to just change everything, and there are a bunch. Comments?\n\nI'll be looking at this over the next few days as I have some time to kill (it's finally raining here in the bay area), but\u00a0I'll be flying pretty blind, anyone with any advice, please speak up . ",
            "author": "Erick Erickson",
            "id": "comment-16696339"
        },
        {
            "date": "2018-11-26T13:36:41+0000",
            "content": "Erick Erickson - I can take a look this week on this. I think if you run the following it should point you where to add the two additional lines:\n\ngit grep -F \"permission javax.security.auth.kerberos.ServicePermission\"\u00a0\n\n\nChanging the minimal number of things to makes tests pass sounds good to me. Only in some of the kerberos code should the localhost vs 127.0.0.1 distinction matter. ",
            "author": "Kevin Risden",
            "id": "comment-16698930"
        },
        {
            "date": "2018-11-26T15:29:37+0000",
            "content": "Kevin Risden Thanks, there even exists a solr-tests.policy file? I learn something new every day \n\nI've been playing whack-a-mole over the weekend, change things one place, run the full test suite and see what pops out the other.\n\nthe \n\nbin/solr -e cloud\n\n works now, I didn't do anything specifically to fix it. Maybe pilot error.\n ",
            "author": "Erick Erickson",
            "id": "comment-16699149"
        },
        {
            "date": "2018-11-27T05:46:22+0000",
            "content": "More tests passing with suggestions from Kevin Risden. Patch attached. The two that are of most interest now are:\nTestSolrCloudWithHadoopAuthPlugin\n TestSolrCloudWithKerberosAlt\n\u00a0\n\nI'll run a bunch of iterations over the full test suite overnight to see what else pops out. I'm playing a bit of \"whack a mole\" as when some tests get fixed, others seem to pop out....\n\nBasicDistributedZkTest is still a problem too, but I'm not sure it's this change or the general flakiness of that test, likely the latter. ",
            "author": "Erick Erickson",
            "id": "comment-16699943"
        },
        {
            "date": "2018-12-05T17:34:12+0000",
            "content": "Kevin Risden I'm getting back to this now, do you have any insights on the\u00a0 two problem tests mentioned above? Anyone else for that matter....\u00a0\nTestSolrCloudWithHadoopAuthPlugin\n TestSolrCloudWithKerberosAlt\n\u00a0\n\n\u00a0 ",
            "author": "Erick Erickson",
            "id": "comment-16710386"
        },
        {
            "date": "2018-12-05T19:53:09+0000",
            "content": "Sorry I haven't had a chance to look. $DayJob \u00a0I'll try to look when I get a few minutes. ",
            "author": "Kevin Risden",
            "id": "comment-16710563"
        },
        {
            "date": "2018-12-07T15:52:39+0000",
            "content": "Taking a look and they don't seem to fail in my IDE but the failures reproduce from the command line. It looks like there might be some unrelated changes added to the patch that cause this. I am looking into it a bit further. ",
            "author": "Kevin Risden",
            "id": "comment-16713013"
        },
        {
            "date": "2018-12-07T16:51:21+0000",
            "content": "Erick Erickson - I just uploaded a patch that passed all Solr tests. \n\n\nant clean clean-jars jar-checksums compile\ncd solr\nant test\n\n ",
            "author": "Kevin Risden",
            "id": "comment-16713078"
        },
        {
            "date": "2018-12-07T16:51:40+0000",
            "content": "It reverts some of the HTTP/localhost changes since those aren't necessary for this.  ",
            "author": "Kevin Risden",
            "id": "comment-16713079"
        },
        {
            "date": "2018-12-07T20:56:50+0000",
            "content": "Great thanks! I'll be able to look at this over the weekend....\n\n\u00a0\n\n\u00a0 ",
            "author": "Erick Erickson",
            "id": "comment-16713279"
        },
        {
            "date": "2018-12-09T16:51:01+0000",
            "content": "Commit f690302e052f2fcad3117ef287296c7b740c1636 in lucene-solr's branch refs/heads/master from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f690302 ]\n\nSOLR-12727: Upgrade ZooKeeper dependency to 3.4.13 ",
            "author": "ASF subversion and git services",
            "id": "comment-16714019"
        },
        {
            "date": "2018-12-09T17:15:53+0000",
            "content": "Commit 54ca26abe92e17a1d56dbc53c9e98844f1994579 in lucene-solr's branch refs/heads/master from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=54ca26a ]\n\nSOLR-12727: CHANGES.txt, updated ZooKeeper dependency ",
            "author": "ASF subversion and git services",
            "id": "comment-16714025"
        },
        {
            "date": "2018-12-09T17:23:03+0000",
            "content": "Commit a1793750e140bb8abfb901d933ac2c0ea628bdd4 in lucene-solr's branch refs/heads/branch_7x from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a179375 ]\n\nSOLR-12727: Upgrade ZooKeeper dependency to 3.4.13\n\n(cherry picked from commit f690302e052f2fcad3117ef287296c7b740c1636) ",
            "author": "ASF subversion and git services",
            "id": "comment-16714029"
        },
        {
            "date": "2018-12-09T17:23:04+0000",
            "content": "Commit 90c841ced237eb6da9e040de150fa1aaaecf8550 in lucene-solr's branch refs/heads/branch_7x from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=90c841c ]\n\nSOLR-12727: CHANGES.txt, updated ZooKeeper dependency ",
            "author": "ASF subversion and git services",
            "id": "comment-16714030"
        },
        {
            "date": "2018-12-09T17:23:51+0000",
            "content": "Kevin did the heavy lifting, thanks! ",
            "author": "Erick Erickson",
            "id": "comment-16714031"
        }
    ]
}