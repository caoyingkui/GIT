{
    "id": "SOLR-12697",
    "title": "pure DocValues support for FieldValueFeature",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "contrib - LTR"
        ],
        "type": "Sub-task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Patch Available"
    },
    "description": "Stanislav Livotov wrote in SOLR-12688:\n\n... FieldValueFeature doesn't support pure DocValues fields (Stored false). Please also note that for fields which are both stored and DocValues it is working not optimal because it is extracting just one field from the stored document. DocValues are obviously faster for such usecases. ...\n\n(Please see SOLR-12688 description for overall context and analysis results.)",
    "attachments": {
        "SOLR-12697.patch": "https://issues.apache.org/jira/secure/attachment/12937794/SOLR-12697.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-08-24T16:47:38+0000",
            "content": "I'll aim to take a proper look at the changes towards the middle or end of next week hopefully.\n\nSo far from only a very quick look (at the DocValuesSupportForFieldValueFeature.patch on the SOLR-12688 parent of this sub-task) and since you mentioned \"Solr 6.6 codebase\" what jumped out is Trie*Field use since that is deprecated from 7.0 and replaced by *PointField \u2013 no big deal, it shouldn't be too difficult to change hopefully, but just mentioning it since noticed it. ",
            "author": "Christine Poerschke",
            "id": "comment-16591899"
        },
        {
            "date": "2018-08-30T18:26:34+0000",
            "content": "Christine Poerschke I have\u00a0supported both numeric values representations (Point* and Trie*). And as I understand both of them are tested with different\u00a0values of properties like\u00a0solr.tests.IntegerFieldType. If it is not enough I can explicitly test both types. Or if you think that support of deprecated Trie*Fields is not required I can cut this piece of code.\u00a0\n\n\u00a0\n\nTalking about codebase - in Solr 7.0 as I see DocValues interface was changed, previously there was just method get by id, now it is iterator with convenient method advanceExact. However I'm not sure that this realization will work optimal in all cases, but I've tested that at least for DenseDocValues both\u00a0previous and new one method is working exactly the same as before. For\u00a0SparseDocValues it is not so but, anyway, I don't see a better way to read from DocValues.\n\nAnd I'm not sure,\u00a0do I need to create a patch for Solr 6? The attached patch will work for Solr 7 and 8.\u00a0\n\n\u00a0 ",
            "author": "Stanislav Livotov",
            "id": "comment-16597757"
        },
        {
            "date": "2018-08-31T20:20:09+0000",
            "content": "... I have supported both numeric values representations (Point* and Trie*). ...\n\nAh, sorry, I missed that detail, thanks for drawing my attention to that. (Haven't yet taken a closer look at this part of your changes.)\n\n... And I'm not sure, do I need to create a patch for Solr 6? The attached patch will work for Solr 7 and 8.\n\nFair question. Development usually happens on the master git branch and then typically (but not always) is backported to the major release branch (currently branch_7x). The prior branches e.g. branch_6x would receive (selected) bug fixes only. https://lucene.apache.org/solr/community#about-versions has some more info. So in short, if the patch works for Solr 7 and 8 that's great and there is no need for a patch for Solr 6 for this performance optimisation/new feature change. ",
            "author": "Christine Poerschke",
            "id": "comment-16599239"
        },
        {
            "date": "2018-11-08T17:57:05+0000",
            "content": "Can\u00a0SOLR-12625 be used in this case or, perhaps, reworked to make it usable here? I'd hate to have yet another place where we decode DV fields and yet another place we can miss on the next change to DV.... ",
            "author": "Erick Erickson",
            "id": "comment-16680099"
        },
        {
            "date": "2018-12-04T12:16:14+0000",
            "content": "Hi all,\u00a0\n\nI've created a new patch where I had migrated the FieldValueFeature on using\u00a0SolrDocumentFetcher#solrDoc introduced in patch SOLR-12625. Erick Erickson can you please take a look at it?\n\nI had also done a couple of additional code changes:\n\n\tfixed small issue with defaultValue(previously it was impossible to set it from feature.json, and the tests were written where Feature was created manually, and not by parsing json). Tests are added which are validating defaultValue from schema field configuration and from a\u00a0feature default value.\u00a0\n\tadded functionality of parsing numbers persisted as StrFields(tests added). Please note that I first try to check that it is boolean String(T/F) in order to support the previous behavior. Please note that there is a difference in behavior - previously in case\u00a0if we were getting some not supported field we were silently returning defaultValue. Now FeatureException is thrown.\u00a0\n\n\n\nAs we had migrated code on using\u00a0SolrDocumentFetcher to retrieve fieldValues, it is now impossible to test\u00a0FieldValueFeature with\u00a0LuceneTestCase, so I had to migrate test\u00a0TestLTRReRankingPipeline on\u00a0SolrTestCaseJ4(I tried to do minimum changes there)\n\nChristine Poerschke please take a look at the patch and described changes. WDYT? ",
            "author": "Stanislav Livotov",
            "id": "comment-16708618"
        },
        {
            "date": "2018-12-06T01:28:31+0000",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 3 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 10s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 11s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 11s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 11s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 11s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 11s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   1m 15s \n  ltr in the patch passed.  \n\n\n  \n   \n   6m 16s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12697 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12950561/SOLR-12697.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-137-generic #163~14.04.1-Ubuntu SMP Mon Sep 24 17:14:57 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / b0e6a92 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_191 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/240/testReport/ \n\n\n modules \n C: solr/contrib/ltr U: solr/contrib/ltr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/240/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16710852"
        },
        {
            "date": "2018-12-07T22:26:52+0000",
            "content": "... a new patch where I had migrated the FieldValueFeature on using SolrDocumentFetcher#solrDoc introduced in patch SOLR-12625. Erick Erickson can you please take a look at it? ... a couple of additional code changes ... Christine Poerschke please take a look at the patch and described changes. WDYT?\n\nThanks for creating a new patch Stanislav Livotov!\n\nI've so far only looked at the first additional change w.r.t. the default value (and moved it to SOLR-13049 as a new feature).\n\nErick Erickson if you could perhaps look at the SolrDocumentFetcher side of the patch that would be great. ",
            "author": "Christine Poerschke",
            "id": "comment-16713365"
        },
        {
            "date": "2018-12-09T04:12:07+0000",
            "content": "+1. And the tests pass .\n\n\u00a0 ",
            "author": "Erick Erickson",
            "id": "comment-16713856"
        }
    ]
}