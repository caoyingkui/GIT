{
    "id": "SOLR-8548",
    "title": "CorePropertiesLocator does NOT follow symlinks anymore",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5"
        ],
        "affect_versions": "5.4",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "Looks like CorePropertiesLocator was switched over to use the new java.nio stuff... and the simplified version of the walkFileTree method does NOT follow symlinks by default.  This is a critical feature that needs to be supported for anyone who has their solr core(s) defined elsewhere, and set up their solr home directory to point to those cores via symlinks.  It's important to realize that this is the behavior that has always existed pre-5.4.0 by the nature of using the java.io package to listFiles.\n\nI'm attaching a PATCH with the appropriate fix.",
    "attachments": {
        "SOLR-8548.patch": "https://issues.apache.org/jira/secure/attachment/12782290/SOLR-8548.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-14T15:13:01+0000",
            "author": "Aaron LaBella",
            "content": "patch to fix issue, please accept asap. ",
            "id": "comment-15098234"
        },
        {
            "date": "2016-01-14T15:46:20+0000",
            "author": "Alan Woodward",
            "content": "ack, thanks for picking this up Aaron. ",
            "id": "comment-15098274"
        },
        {
            "date": "2016-01-14T15:51:46+0000",
            "author": "Alan Woodward",
            "content": "Is there any reason to set maxDepth to 2?  It was Integer.MAX_VALUE before. ",
            "id": "comment-15098286"
        },
        {
            "date": "2016-01-15T14:19:07+0000",
            "author": "Aaron LaBella",
            "content": "Alan, no particular reason other than I think it's silly to have the code check an unlimited number of directories/depth for the core.properties file.  I think 2 or 3 at most would be a reasonable limit, not sure why anyone would want to bury their solr cores anymore beyond that.  Feel free to change that particular setting to whatever you feel is right.\n\nThanks. ",
            "id": "comment-15101819"
        },
        {
            "date": "2016-01-18T09:05:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1725196 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1725196 ]\n\nSOLR-8548: Core Discovery was not following symlinks ",
            "id": "comment-15104969"
        },
        {
            "date": "2016-01-18T09:20:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1725203 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1725203 ]\n\nSOLR-8548: Core Discovery was not following symlinks ",
            "id": "comment-15104991"
        },
        {
            "date": "2016-01-18T09:23:23+0000",
            "author": "Alan Woodward",
            "content": "Thanks Aaron.  I set the search depth to 256, which seemed like a reasonable compromise.\n\nUnfortunately I think this is probably a bit late for the 5.4.1 release (unless there's another respin), but if there's a 5.4.2 then I'll make sure it gets included. ",
            "id": "comment-15104994"
        },
        {
            "date": "2016-02-05T14:01:38+0000",
            "author": "Shawn Heisey",
            "content": "We could bikeshed about the default depth limit forever. \n\nI think the default depth limit for software in Linux is 9.  256 seems rather high.  The number I thought of was 16.  Ultimately it's not up to me, as I'm not the one working on it, but there's my two cents. ",
            "id": "comment-15134214"
        }
    ]
}