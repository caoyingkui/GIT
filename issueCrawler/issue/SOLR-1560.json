{
    "id": "SOLR-1560",
    "title": "make \"optimize\" do partial optimizes under the covers",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "In Lucene, an optimize() call iteratively merges segments until only one is left - and while it's merging it (ultimately) needs to make a copy of the entire index, because readers attempting to open the index \"mid-optimize\" need to see a consistent copy of the index.\n\nIn Solr, we have control over when new readers/searchers get opened, so what if when we recieved an <optimize/> command, we under the covers we made iterative partial optimize calls and only opened a new searcher when we were finished with all of them?  In theory this seems like  it would help reduce the disk space used during optimize, without really affecting the time it takes to \"optimize\"\n\nThese are the threads that prompted this idea...\n\nhttp://old.nabble.com/eternal-optimize-interrupted-to24805680.html#a24805680\nhttp://old.nabble.com/Re%3A-eternal-optimize-interrupted-to24928754.html#a24928754\nhttp://old.nabble.com/Optimization-of-large-shard-succeeded-to25809281.html#a25809281",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-14661693",
            "date": "2015-08-07T11:38:11+0000",
            "content": "Still relevant? "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15582251",
            "date": "2016-10-17T13:23:12+0000",
            "content": "Nobody confirmed if this still relevant in more than a year. I suspect it is not with a lot of changes since this issue was opened. "
        }
    ]
}