{
    "id": "LUCENE-2548",
    "title": "Remove all interning of field names from flex API",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In previous versions of Lucene, interning of fields was important to minimize string comparison cost when iterating TermEnums, to detect changes in field name. As we separated field names from terms in flex, no query compares field names anymore, so the whole performance problematic interning can be removed. I will start with doing this, but we need to carefully review some places e.g. in preflex codec.\n\nMaybe before this issue we should remove the Term class completely.  Robert?",
    "attachments": {
        "LUCENE-2548.patch": "https://issues.apache.org/jira/secure/attachment/12483161/LUCENE-2548.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-07-18T11:31:01+0000",
            "content": "Maybe before this issue we should remove the Term class completely.\n\nSounds great... but there is a lot of code (eg in contrib, Solr) to fix if you want to do this.\nI guess when i considered this option, i thought it was gonna be a ton of work. ",
            "author": "Robert Muir",
            "id": "comment-12889607"
        },
        {
            "date": "2010-07-18T11:38:07+0000",
            "content": "Why remove Term? I think it's a nice API, and for most cases, a term will still be a Term and not a BytesRef + Field. Isn't it a convenient class? Is there an alternative one? ",
            "author": "Shai Erera",
            "id": "comment-12889609"
        },
        {
            "date": "2010-07-18T11:57:51+0000",
            "content": "I think it's a nice API, and for most cases, a term will still be a Term and not a BytesRef + Field\n\nEven if a term is a Term, a Term now is always a BytesRef + field behind the scenes anyway.\n\nIsn't it a convenient class?\n\nBasically, this is why i didnt go this route of removing it (instead modifying Term class to work with bytesref).\nThe problem I saw was: if we have to modify tons of code to get rid of it, so would users too on upgrading. ",
            "author": "Robert Muir",
            "id": "comment-12889610"
        },
        {
            "date": "2010-07-18T12:12:25+0000",
            "content": "I think the discussion about Term removal is not really related to this issue. Removing Term would only have the big advantage that we don't suddenly change Term to no longer intern() the field name and so maybe code outside Lucene using Terms and relying on the fact that the term field name is interned, may break. Removal of intern() must then be clearly noted in migration. ",
            "author": "Uwe Schindler",
            "id": "comment-12889611"
        },
        {
            "date": "2010-07-18T12:27:47+0000",
            "content": "Uwe, but removing intern() from Term is almost just as bad as removing Term, because we at least have to review all uses (e.g. Solr) and see if it would cause incorrect code (e.g. == comparison that is suddenly wrong) or performance problems in containers sorting terms or anything of the like?\n\nAgain, I don't personally have an opinion either way, I just mentioned why I didn't remove it, its like Token, still lots of code using it   ",
            "author": "Robert Muir",
            "id": "comment-12889612"
        },
        {
            "date": "2010-07-18T17:11:46+0000",
            "content": "I agree. Term is frequently used (at least in our apps) and the wrapping around BytesRef is nice too. One can still call text() or the like and get the string rep. of it which in most cases is what you put there in the first place.\n\nAnd I also agree about stopping interning field suddenly. What is the reason for stop doing that? ",
            "author": "Shai Erera",
            "id": "comment-12889637"
        },
        {
            "date": "2010-07-18T18:01:00+0000",
            "content": "And I also agree about stopping interning field suddenly. What is the reason for stop doing that?\n\nI don't understand the question.\n\nThe reason for removing interning is to remove the cost of doing this without need in trunk. The interning was solely done for speeding up typical TermEnum iteration where each term's field need to be compared to detect a change. As fields are now no longer coupled to terms and Term*s*Enums (TermEnum was removed) only iterate over one field, this is useless and the cost for creating terms does no retify to keep it. ",
            "author": "Uwe Schindler",
            "id": "comment-12889642"
        },
        {
            "date": "2010-07-19T04:55:55+0000",
            "content": "Ohh, I see. I don't remember if I ever relied on interning for other purposes, but if that's the only reason, then I agree there's no point in interning anymore. But perhaps we should allow that through another API, in case someone relies on it elsewhere? ",
            "author": "Shai Erera",
            "id": "comment-12889755"
        },
        {
            "date": "2011-05-16T22:39:55+0000",
            "content": "after seeing LUCENE-3105, i think we should take steps to remove this interning.\n\nit looks like this can probably be done safely, according to http://www.cs.umd.edu/~jfoster/papers/issre04.pdf , findbugs, PMD, and JLint all support looking for string equality with == or !=, so we should be able to review all occurrences. ",
            "author": "Robert Muir",
            "id": "comment-13034393"
        },
        {
            "date": "2011-06-20T15:01:17+0000",
            "content": "Initial patch.\n\nTests are passing, at least a few iterations (I'll beast it).  There are still a few nocommits...\n\nI used PMD and findbugs to find == and Unable to render embedded object: File (= on strings, but surprisingly there are cases that these tools seem to miss.  I also did various greps to try to find cases... but I'm sure I've missed some) not found. ",
            "author": "Michael McCandless",
            "id": "comment-13052000"
        },
        {
            "date": "2011-06-20T16:00:01+0000",
            "content": "is there any reason to keep Term.createTerm() after we do this? seems useless after interning is removed. ",
            "author": "Robert Muir",
            "id": "comment-13052024"
        },
        {
            "date": "2011-06-20T19:27:39+0000",
            "content": "I agree \u2013 I removed createTerm!\n\nAnd fixed the nocommits....\n\nBeast chewed on this for a while and didn't hit any failures except various Solr tests that still intermittently fail... I think it's ready! ",
            "author": "Michael McCandless",
            "id": "comment-13052182"
        },
        {
            "date": "2011-06-20T19:36:50+0000",
            "content": "Yupee Juhee. I was on business trip whole day. Insane! Will review soon! ",
            "author": "Uwe Schindler",
            "id": "comment-13052184"
        },
        {
            "date": "2011-06-20T20:56:49+0000",
            "content": "Hi Mike,\n\npatch looks great, thanks for doing this hard work  PreFlexCodec looks fine, see no problems there. Lucene code iterating TermsEnums was successfully cleaned up (the lovely MTQs) from T.createTerm and equals added at some places.\n\nI cannot check if there are comparisons missing, I wonder why PMD/Findbugs has bugs that it does not find all occurences, maybe because some SuppressWarnings also hiding those occurences? Can you explain shortly what \"Unable to render embedded object: File\" has to do with interning?\n\nSolr code is fine, I expected more to change. Some places in Solr still seems to use some \"placeholder\" terms (called idTerm and other names). We should maybe check if they are only field names in reality?\n\nGREAT WORK! I AM SO HAPPY, dumdidumm...! ",
            "author": "Uwe Schindler",
            "id": "comment-13052215"
        },
        {
            "date": "2011-06-20T21:41:31+0000",
            "content": "Can you explain shortly what \"Unable to render embedded object: File\" has to do with interning?\n\nThat was just a JIRA formatting issue in Mike's comment I was referring to. ",
            "author": "Uwe Schindler",
            "id": "comment-13052236"
        },
        {
            "date": "2011-06-20T21:44:50+0000",
            "content": "Woops \u2013 my comment was just saying that both == and ! = cases weren't always caught by PMD/findbugs.  But maybe I somehow messed up running them! ",
            "author": "Michael McCandless",
            "id": "comment-13052237"
        },
        {
            "date": "2011-06-21T15:43:19+0000",
            "content": "Committed!  Uwe, I think I fixed all the places where we were making a placeholder term just to hold a field... ",
            "author": "Michael McCandless",
            "id": "comment-13052626"
        }
    ]
}