{
    "id": "SOLR-6377",
    "title": "Admin UI Logging tab doesn't work with different loggers",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "When I use Logback instead of log4j as my logger I am unable to see logs in the UI's logging tab. \n\nThese are the jars in by lib directory - \n\n\n~/solr-4.9.0/example $ ls lib/ext/\njcl-over-slf4j-1.7.6.jar\tjul-to-slf4j-1.7.6.jar\t\tlogback-classic-1.0.13.jar\tlogback-core-1.0.13.jar\t\tslf4j-api-1.7.6.jar\n\n\n\nAnd this is what the configuration file looks like - \n\n\n~/solr-4.9.0/example $ cat resources/logback-test.xml \n<configuration>\n<appender name=\"file\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n<!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->\n<File>${solr.log}/solr.log</File>\n<encoder>\n<pattern>%-5p - %d{yyyy-MM-dd HH:mm:ss.SSS}; %C; %m</pattern>\n</encoder>\n<rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n<maxIndex>9</maxIndex>\n<FileNamePattern>${solr.log}/solr.log.%i</FileNamePattern>\n</rollingPolicy>\n<triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n<MaxFileSize>4MB</MaxFileSize>\n</triggeringPolicy>\n</appender>\n<appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n<encoder>\n<pattern>%-4r [%t] %-5p %c %x \u00e2\u20ac\u201c %m%n</pattern>\n</encoder>\n</appender>\n<logger name=\"org.apache.zookeeper\" level=\"WARN\"/>\n<logger name=\"org.apache.hadoop\" level=\"WARN\"/>\n<logger name=\"org.apache.solr.update.LoggingInfoStream\" level=\"OFF\"/>\n<root level=\"INFO\">\n<appender-ref ref=\"file\"/>\n<appender-ref ref=\"CONSOLE\"/>\n</root>\n</configuration>\n\n\n\nLooking into the LogWatcher class to see whats wrong",
    "attachments": {
        "SOLR-6377.patch": "https://issues.apache.org/jira/secure/attachment/12666228/SOLR-6377.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-14097732",
            "date": "2014-08-14T21:47:02+0000",
            "content": "One or more new classes specific to Logback (including a log watcher) must be implemented and the code updated to identify when Logback is the slf4j binding.  I started to look into writing this a month or so ago but found myself in WAY over my head. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14098465",
            "date": "2014-08-15T11:21:16+0000",
            "content": "Looking at the Javadocs here ( http://lucene.apache.org/solr/4_9_0/solr-core/org/apache/solr/logging/LogWatcher.html#newRegisteredLogWatcher(org.apache.solr.logging.LogWatcherConfig, org.apache.solr.core.SolrResourceLoader) it looks like we would need to write a LogbackWatcher and load it up as a plugin. I'm going to look at Log4jWatcher and try replicating it. "
        },
        {
            "author": "Ravikanth Gangarapu",
            "id": "comment-14119221",
            "date": "2014-09-03T02:46:21+0000",
            "content": "Shawn Heisey Varun Thacker\nhi, I needed the same thing, so ended up writing it. I am attaching it as a patch. I have tested it on my local and it works afaik. Please take a look and let me know if you need more out of it. I hope you can add it to next Solr release.\n\nThanks\nRavi "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14119245",
            "date": "2014-09-03T03:25:39+0000",
            "content": "What branch and revision of the source code did you modify to get your patch? "
        },
        {
            "author": "Ravikanth Gangarapu",
            "id": "comment-14119755",
            "date": "2014-09-03T11:05:54+0000",
            "content": "Hi, I have checked out trunk (/lucene/dev/trunk) and made the changes. Modified one existing file org.apache.solr.core.logging.LogWatcher.java that is at revision 1620904. Created a new java package (org.apache.solr.core.logging.logback) and classes for logback related changes.\n\nThanks\nRavi "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14119843",
            "date": "2014-09-03T13:12:48+0000",
            "content": "Thank you.  I got the patch applied, added svn:eol-style native to the new files.  The precommit build target found one missing apache license header, so I fixed that.  The precommit target then failed because the logback classes are not aviailable in a standard code checkout, things like ch.qos.logback.classic.spi.ILoggingEvent.\n\nA question for fellow committers: is it difficult to add a compile-time dependency for logback?  We don't want it in the completed jars/war, of course.  My understanding of ivy and the build system is not quite enough. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14119853",
            "date": "2014-09-03T13:36:29+0000",
            "content": "I think I figured out how to add the dependency to ivy.  I'll need to check the final product to make sure it didn't include the logback jars.  I built the jar-checksums target.\n\nThe jar checksums now fail precommit, complaining that the source checkout is dirty.\n\nBUILD FAILED\n/home/elyograg/lucene-solr/trunk/build.xml:430: The following error occurred while executing this line:\n/home/elyograg/lucene-solr/trunk/extra-targets.xml:88: The following error occurred while executing this line:\n/home/elyograg/lucene-solr/trunk/extra-targets.xml:191: Source checkout is dirty after running tests!!! Offending files:\n\n\t./solr/licenses/logback-classic-1.1.2.jar.sha1\n\t./solr/licenses/logback-core-1.1.2.jar.sha1\n\n\n\nHow do I fix that?  Never seen that happen before. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14119856",
            "date": "2014-09-03T13:38:43+0000",
            "content": "Attaching current patch state.  Aside from the precommit problems, also still needs CHANGES.txt. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14119860",
            "date": "2014-09-03T13:42:58+0000",
            "content": "Once more, the solution became obvious.  I hadn't added the checksums to svn.  Added them and included svn:eol-style native.  New patch attached, running precommit now.  Still need CHANGES. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14119866",
            "date": "2014-09-03T13:47:24+0000",
            "content": "Precommit still fails.  I need to start my workday now.  I've done what the message asks with no change.  I'll look at it later, but if anyone knows what I did wrong, please let me know.\n\nBUILD FAILED\n/home/elyograg/lucene-solr/trunk/build.xml:85: The following error occurred while executing this line:\n/home/elyograg/lucene-solr/trunk/solr/build.xml:254: The following error occurred while executing this line:\n/home/elyograg/lucene-solr/trunk/lucene/tools/custom-tasks.xml:62: License check failed. Check the logs.\nIf you recently modified ivy-versions.properties or any module's ivy.xml,\nmake sure you run \"ant clean-jars jar-checksums\" before running precommit. "
        },
        {
            "author": "Ravikanth Gangarapu",
            "id": "comment-14119943",
            "date": "2014-09-03T15:13:43+0000",
            "content": "hi Shawn, sorry about the patch fail issues. I have fixed the logback compile dependency and attaching it. Please try this one.\n\nRavi "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14120173",
            "date": "2014-09-03T18:04:07+0000",
            "content": "Did you do anything in there other than add the ivy changes?  The last patch I attached includes ivy updates.\n\nThe precommit is still failing, says it's a license check failure.  Also says to check the logs, but fails to indicate where those logs are. \n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14120224",
            "date": "2014-09-03T18:34:33+0000",
            "content": "Finally figured out the license problem.  This is the first time I've added new jars, so I was not aware that I needed to actually include the text of the license.   I copied the EPL license file that was already there, because Eclipse licensing is one of the options, found a NOTICE on their website to use.\n\nNow I have a new precommit failure.  The latest patch (will attach momentarily) looks correct to me, and I can't see any errors in the libversions output before the build failed.\n\n\n[libversions] Checked that ivy-versions.properties and ivy-ignore-conflicts.properties have lexically sorted '/org/name' keys and no duplicates or orphans.\n[libversions] Scanned 45 ivy.xml files for rev=\"${/org/name}\" format.\n[libversions] Found 0 indirect dependency version conflicts.\n[libversions] Completed in 145.89s., 1 error(s).\n\nBUILD FAILED\n/home/elyograg/lucene-solr/trunk/build.xml:89: The following error occurred while executing this line:\n/home/elyograg/lucene-solr/trunk/lucene/build.xml:96: The following error occurred while executing this line:\n/home/elyograg/lucene-solr/trunk/lucene/tools/custom-tasks.xml:104: Lib versions check failed. Check the logs.\n\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14120229",
            "date": "2014-09-03T18:35:46+0000",
            "content": "New patch with licenses added.  Still failing precommit, can't see the problem this time. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14120311",
            "date": "2014-09-03T19:41:28+0000",
            "content": "I'll try your patch and see what it says for me. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14120334",
            "date": "2014-09-03T19:57:32+0000",
            "content": "Shawn Heisey, I see the same behavior - check out the message above:\n\n\ncheck-lib-versions:\n     [echo] Lib versions check under: /Users/sarowe/svn/lucene/dev/trunk/lucene/..\n[libversions] :: loading settings :: file = /Users/sarowe/svn/lucene/dev/trunk/lucene/ivy-settings.xml\n[libversions] OUT-OF-ORDER coordinate key '/ch.qos.logback/logback-classic' in ivy-versions.properties\n\n\n\nSo it just needs to be re-ordered.  You have:\n\n\n/ch.qos.logback/logback-core = ${ch.qos.logback.version}\n/ch.qos.logback/logback-classic = ${ch.qos.logback.version}\n\n\n\nand it should instead be:\n\n\n/ch.qos.logback/logback-classic = ${ch.qos.logback.version}\n/ch.qos.logback/logback-core = ${ch.qos.logback.version}\n\n "
        },
        {
            "author": "Ravikanth Gangarapu",
            "id": "comment-14120412",
            "date": "2014-09-03T20:43:30+0000",
            "content": "Shawn Heisey\nhi Shawn, I have also added text for Changes.txt file about the ticket as you mentioned. In the latest patch I had submitted, i have the ivy-revision.properties file in the same order as the previous comment.\n\nThanks\nRavi "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14120436",
            "date": "2014-09-03T20:55:49+0000",
            "content": "Thanks for the assist.  I think it might be one step closer to passing precommit.\n\nSteve Rowe or anyone else who's paying attention ... does the license addition look right?  Some might view it as a minor point, but recent legal actions have made it exceedingly clear that licenses matter more than people realize. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14120464",
            "date": "2014-09-03T21:12:00+0000",
            "content": "I did think about tests, but I noticed that none of the implementations have dedicated tests.  I can't think of any specific way to actually test LogWatcher implementations, so I'm open to ideas, and if any come, hopefully they're detailed enough that I can implement them.\n\nTestLogWatcher does have one test that it says is for log4j, but I don't see anything in it that explicitly sets up the binding, so I'm assuming that the binding comes from the slf4j jars available to the test.  Do we want/need better test coverage?  I can create another issue for that. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14120518",
            "date": "2014-09-03T21:42:45+0000",
            "content": "New patch.  Passes precommit.  Includes CHANGES.txt with credit. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15529169",
            "date": "2016-09-28T10:11:19+0000",
            "content": "What happened to this new logWatcher? "
        }
    ]
}