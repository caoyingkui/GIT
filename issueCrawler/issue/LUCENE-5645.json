{
    "id": "LUCENE-5645",
    "title": "StringHelper should check for empty string of \"tests.seed\" system property",
    "details": {
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved",
        "components": [],
        "affect_versions": "4.8,                                            6.0",
        "status": "Open",
        "fix_versions": [
            "4.8.1",
            "6.0"
        ]
    },
    "description": "As of LUCENE-5604 (committed to v4.8), StringHelper will initialize GOOD_FAST_HASH_SEED based on the system property \"tests.seed\" if it is set.  Unfortunately it doesn't do an empty-string check, and it's common at least in my setup that copies Lucene's maven pom.xml that the string will be empty unless I set it on the command line.  FWIW Randomized Testing does do an empty-string check.",
    "attachments": {
        "LUCENE-5645_StringHelper_empty_tests_seed_condition.patch": "https://issues.apache.org/jira/secure/attachment/12647450/LUCENE-5645_StringHelper_empty_tests_seed_condition.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13990224",
            "author": "David Smiley",
            "content": "The change is obviously trivial; I won't provide a patch.  Change line 158 from:\n\nif (prop != null) {\n\n\nto\n\nif (prop != null && prop.length() > 0) {\n\n\n\nI'll commit it in 24 hours or upon the first +1 I see. ",
            "date": "2014-05-06T03:08:33+0000"
        },
        {
            "id": "comment-13990244",
            "author": "Robert Muir",
            "content": "Wait, please take a step back before rushing in a change to the hashing function of the indexer into a bugfix release.\n\nWhy isn't this hitting lucene's tests? solr? elasticsearch? these all support maven and are working perfectly well... ",
            "date": "2014-05-06T03:34:43+0000"
        },
        {
            "id": "comment-13990256",
            "author": "David Smiley",
            "content": "I wonder the same; I'll try and see why. Bure surely my suggestion is innocent enough? ",
            "date": "2014-05-06T03:58:41+0000"
        },
        {
            "id": "comment-13990267",
            "author": "Robert Muir",
            "content": "I'm not sure. If tests.seed is empty, then things won't reproduce right? Because it will initialize itsself with System.currentTimeMillis().\n\nSo perhaps the exception is actually warranted. Is there really a better exception we can give than the current one (i assume NumberFormatException as it tries to parse the empty string)? I think thats appropriate. ",
            "date": "2014-05-06T04:38:30+0000"
        },
        {
            "id": "comment-13990282",
            "author": "David Smiley",
            "content": "So it turns out this has to do with IntelliJ.  When IntelliJ configures itself off of a maven pom.xml, it apparently takes a close look at what system properties are being passed to the Surefire plugin, which runs tests.  If you tell IntelliJ to run a test class, it automatically passes along all System properties it saw that Surefire is configured to use (in addition to any you explicitly configure in a run configuration).  IntelliJ passes along the empty string if the System property is empty.  Apparently, an actual Maven Surefire invoked test skips over empty-value properties and doesn't set those.\n\nWell that was interesting, and I'll file a bug with Jetbrains, but nonetheless I think my proposal in this issue remains sound \u2013 don't try to parse tests.seed if it's \"\" because we already know it won't parse and because  RandomizedTesting skips \"\" as well. ",
            "date": "2014-05-06T05:06:12+0000"
        },
        {
            "id": "comment-13990301",
            "author": "David Smiley",
            "content": "IntelliJ bug report: http://youtrack.jetbrains.com/issue/IDEA-124784 ",
            "date": "2014-05-06T05:22:45+0000"
        },
        {
            "id": "comment-13991570",
            "author": "David Smiley",
            "content": "In case you have more to add, I'll commit this tomorrow instead of now. ",
            "date": "2014-05-07T05:52:45+0000"
        },
        {
            "id": "comment-13991665",
            "author": "Michael McCandless",
            "content": "I don't think being lenient is a good option here?  Why is randomized testing lenient? ",
            "date": "2014-05-07T08:32:16+0000"
        },
        {
            "id": "comment-13992042",
            "author": "David Smiley",
            "content": "Most option/setting parsing code I seen in all my experience treat null and an empty string as the same thing.  Hasn't that been the same experience for you?  I realize there can be a meaningful distinction but usually there isn't.  If tests.seed has zero length, there is no seed. ",
            "date": "2014-05-07T17:53:52+0000"
        },
        {
            "id": "comment-13992165",
            "author": "Robert Muir",
            "content": "If tests.seed is set as a sysprop here, but not parseable, tests are not going to reproduce. I think an exception is good. ",
            "date": "2014-05-07T20:08:45+0000"
        },
        {
            "id": "comment-13998077",
            "author": "David Smiley",
            "content": "How about this:  if the non-null tests.seed fails to parse, then simply take the hash code of whatever string it is, initialize a new Random() with that as the seed, and grab a long from the random. ",
            "date": "2014-05-14T21:22:07+0000"
        },
        {
            "id": "comment-14012909",
            "author": "David Smiley",
            "content": "The following patch addresses my concern (throwing an exception) as well as Rob's (reproducible test, even when tests.seed is the empty string).\n\nI also noticed oddly that the string length condition was checking if the string was greater than characters to then parse all but the last 8 characters (which hypothetically might be more than 8 characters).  I changed this to only grab the first 8 characters, and to use Integer.parseInt since an int is needed instead of using a Long then casting. ",
            "date": "2014-05-29T21:10:36+0000"
        },
        {
            "id": "comment-14013418",
            "author": "Michael McCandless",
            "content": "Maybe we could simply use prop.hashCode() entirely, instead of trying to parseInt base 16? It's not important that the value we use here \"matches\" the value that randomized testing extracted from the seed, just that it's the same for the same seed.... ",
            "date": "2014-05-30T08:33:59+0000"
        },
        {
            "id": "comment-14013428",
            "author": "Robert Muir",
            "content": "I'm still confused: since when was the empty string a supported value for 'tests.seed'? I don't think it should be: its unnecessary and just makes the test framework complicated. I'm not sure it will even really \"work\".\n\n its sad that StringHelper gets the blame here, LuceneTestCase should have thrown an exception earlier.\n ",
            "date": "2014-05-30T08:47:40+0000"
        },
        {
            "id": "comment-14013429",
            "author": "Dawid Weiss",
            "content": "> Why is randomized testing lenient?\n\nIt parses an empty value of the property because it's more convenient sometimes to pass it from ant as empty (rather then not defining it at all).\n\nThe start = (prop == null ? 0 : prop.hashCode()) seems like a neat trick for seeding the hash random though. ",
            "date": "2014-05-30T08:49:04+0000"
        },
        {
            "id": "comment-14013433",
            "author": "Dawid Weiss",
            "content": "> I'm still confused: since when was the empty string a supported value for 'tests.seed'?\n\nIt's been \"supported\" since the very beginning. A non-existent tests.seed or an empty string are equivalent to the testing framework (and default to a randomly picked seed).\n\nYou can override this in Lucene of course, but then you'll have to change common-build to pass a propertyref instead of a property and it'll be more complicated. Try it. ",
            "date": "2014-05-30T08:57:05+0000"
        },
        {
            "id": "comment-14013441",
            "author": "Robert Muir",
            "content": "\nIt's been \"supported\" since the very beginning. A non-existent tests.seed or an empty string are equivalent to the testing framework (and default to a randomly picked seed).\n\nBut thats not a general system property thing, its just something special that the test-framework is doing, and only for this specific case of tests.seed?\n\nSorry, I have to try to stop the empty string  Once it becomes \"supported\" nobody will ever remove support for it. Time to make my stand. ",
            "date": "2014-05-30T09:05:44+0000"
        },
        {
            "id": "comment-14013452",
            "author": "Dawid Weiss",
            "content": "I'll keep the previous behaviour in randomizedtesting but you can easily forbid it at LTC level. I think it's not worth complicating the ant file though... you'll see if you start modifying it. ",
            "date": "2014-05-30T09:21:06+0000"
        }
    ]
}