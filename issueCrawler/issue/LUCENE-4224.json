{
    "id": "LUCENE-4224",
    "title": "Simplify MultiValuedCase in TermsIncludingScoreQuery",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [
            "4.0"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "While looking at LUCENE-4214, i was trying to wrap my head around what this is doing... \n\nI think the code specialization in the multivalued scorer doesn't buy us any additional speed? At least according to my benchmarks?",
    "attachments": {
        "LUCENE-4224.patch": "https://issues.apache.org/jira/secure/attachment/12536621/LUCENE-4224.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-16T11:54:08+0000",
            "content": "Here's the patch.\n\nNote that, both these scorers return docids out of order i think? I don't think the single-valued one should implement advance(), it should throw UOE? ",
            "author": "Robert Muir",
            "id": "comment-13415038"
        },
        {
            "date": "2012-07-16T19:42:59+0000",
            "content": "The code specialization should give a performance improvement when from terms are scattered across the terms enum of the to field (in other words when there gaps between the terms). In the case the matching terms are all next to each other this code specialization shouldn't buy any additional speed. At least this is what I'm thinking now.\n\nNote that, both these scorers return docids out of order i think? I don't think the single-valued one should implement advance(), it should throw UOE?\nHmmm... I think so as well, since it iterates over the terms and per term emits doc ids. So it can never be in order. ",
            "author": "Martijn van Groningen",
            "id": "comment-13415572"
        },
        {
            "date": "2012-07-16T19:55:00+0000",
            "content": "\nHmmm... I think so as well, since it iterates over the terms and per term emits doc ids. So it can never be in order.\n\nRight, we should also ensure we throw a UOE in its Weight.scorer() if scoreDocsInOrder == false.\n\nOtherwise, if someone takes the Query from JoinUtil and tries to search also with a Filter, they get a UOE rather\nthan something sneakier. ",
            "author": "Robert Muir",
            "id": "comment-13415577"
        },
        {
            "date": "2012-07-20T12:55:30+0000",
            "content": "Attached a new patch.\n\n\tAdded a Scorer that scores in order.\n\tExisting scorer throws an UOE in the advance() method.\n\n ",
            "author": "Martijn van Groningen",
            "id": "comment-13419101"
        },
        {
            "date": "2012-08-07T03:41:26+0000",
            "content": "rmuir20120906-bulk-40-change ",
            "author": "Robert Muir",
            "id": "comment-13429708"
        },
        {
            "date": "2012-08-21T12:42:24+0000",
            "content": "Updated patch. Tests pass now. Will commit shortly. ",
            "author": "Martijn van Groningen",
            "id": "comment-13438667"
        },
        {
            "date": "2012-08-27T14:25:45+0000",
            "content": "Committed to trunk and branch_4x ",
            "author": "Martijn van Groningen",
            "id": "comment-13442435"
        }
    ]
}