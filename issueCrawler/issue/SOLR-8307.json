{
    "id": "SOLR-8307",
    "title": "XXE Vulnerability",
    "details": {
        "components": [
            "Admin UI"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "5.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "Use the drop-down in the left menu to select a core. Use the \u201cWatch Changes\u201d feature under the \u201cPlugins / Stats\u201d option. When submitting the changes, XML is passed in the \u201cstream.body\u201d parameter and is vulnerable to XXE.",
    "attachments": {
        "SOLR-8307.patch": "https://issues.apache.org/jira/secure/attachment/12772891/SOLR-8307.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-18T01:34:06+0000",
            "author": "Shawn Heisey",
            "content": "I looked up how to fix this.  I think this patch might do it. ",
            "id": "comment-15010002"
        },
        {
            "date": "2015-11-18T01:55:04+0000",
            "author": "Shawn Heisey",
            "content": "I'm wondering whether my patch might disable xinclude in Solr's config files.  My solrconfig.xml file uses xinclude extensively. ",
            "id": "comment-15010014"
        },
        {
            "date": "2015-11-18T03:12:36+0000",
            "author": "Shawn Heisey",
            "content": "I patched the 5.3.2 snapshot I'm trying out, and my solr install is still handling my config with no problem, so it appears that this doesn't break the xlmns for xinclude. ",
            "id": "comment-15010122"
        },
        {
            "date": "2015-11-18T04:37:32+0000",
            "author": "Shawn Heisey",
            "content": "I found more instances of XMLInputFactory in the codebase.  Here are the classes:\n\norg.apache.solr.handler.DocumentAnalysisRequestHandler\norg.apache.solr.handler.XmlUpdateRequestHandlerTest\norg.apache.solr.handler.dataimport.XPathRecordReader\norg.apache.solr.handler.loader.XMLLoader\norg.apache.solr.update.AddBlockUpdateTest\norg.apache.solr.util.EmptyEntityResolver\n\nI do not know if all of these need attention or if some could be left alone.\n\nIt also appear that other XML parsers are in use.  I found SAXParserFactory and DocumentBuilderFactory with grep.  The xerces library is in the ivy config.  My little patch isn't going to be enough.  This is the document I'm using for information:\n\nhttps://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing ",
            "id": "comment-15010210"
        },
        {
            "date": "2015-11-18T13:52:49+0000",
            "author": "Erik Hatcher",
            "content": "At a quick glance, it looks like XMLResponseParser ought to \n\n\nEmptyEntityResolver.configureXMLInputFactory(factory);\n\n\n\nThat's something that Uwe Schindler probably put in to prevent this issue in other places.   ",
            "id": "comment-15011010"
        },
        {
            "date": "2015-11-18T14:22:07+0000",
            "author": "Uwe Schindler",
            "content": "Hi,\nit should use the code pattern as Erik told. Disabling DTDs completly is not a good idea.\n\nIn general all XML parsing of resources coming from network should follow the same pattern. The EmptyEntityResolver has methods for all types of XML parsers to disable external entities, so use it's methods to configure. Grep on EmptyEntityResolver and you will see that all of the above listed parsers are fine (unless somebody broke them again).\n\nPlease note: This only affects XML coming from the network. Please don't disable xinclude or external entities in Solr's config files. Those should not be accessible through internet anyways, if they are you have bigger problems. It is a officially documented feature that you can ue xinclude and external entities to split your solr config files (I generally place the field types and fields each in a separate XML file and include them into the schema). ",
            "id": "comment-15011065"
        },
        {
            "date": "2015-11-18T14:23:59+0000",
            "author": "Uwe Schindler",
            "content": "The patch attached here just modifies SolrJ. How is this related to config file parsing? ",
            "id": "comment-15011071"
        },
        {
            "date": "2015-11-18T14:30:27+0000",
            "author": "Uwe Schindler",
            "content": "I checked the code: Where is the XXE risk? The stream.body is going through a safe parser. So do you have a testcase? How did you find out that there is an XXE issue? I spent a whole week 2 years ago on fixing all this problems, so how could they reappear? There are also tests that check to prevent XXE at some places!\n\nThe attached patch only fixes SolrJ, but this is not really a security issue, because it is used to connect to Solr and not arbitrary web sites. ",
            "id": "comment-15011084"
        },
        {
            "date": "2015-11-18T15:20:09+0000",
            "author": "Shawn Heisey",
            "content": "The patch attached here just modifies SolrJ. How is this related to config file parsing?\n\nI'm flailing in the dark here, and obviously do not really understand the implications of the code examples I found.  The mbeans handler is what was mentioned in the bug report, so I followed that, and it uses XMLResponseParser, so that's what I modified.  I'm not at all surprised that there's a better way. ",
            "id": "comment-15011174"
        },
        {
            "date": "2015-11-18T15:22:11+0000",
            "author": "Erik Hatcher",
            "content": "Uwe Schindler looks like the diff feature of the admin UI sends XML (it got from Solr) to SolrInfoMBeanHandler with diff=true.  And then that XML is parsed by XMLResponseParser.  Looks like a legit vector. ",
            "id": "comment-15011180"
        },
        {
            "date": "2015-11-18T15:23:24+0000",
            "author": "Shawn Heisey",
            "content": "Thank you for taking a look and rescuing me from my lack of knowledge.  I appreciate the things I learn from my colleagues here. ",
            "id": "comment-15011185"
        },
        {
            "date": "2015-11-18T15:43:34+0000",
            "author": "Uwe Schindler",
            "content": "OK. So a misuse of response parser. This is why it is a Problem. Thanks. I would fix this with the entity resolver. Nothing more to do. ",
            "id": "comment-15011225"
        },
        {
            "date": "2015-11-19T03:13:32+0000",
            "author": "Erik Hatcher",
            "content": "Here's a patch that does `EmptyEntityResolver.configureXMLInputFactory` for the SolrInfoMBeanHandler diff feature, including test case that fails without the fix.\n\nMy patch includes a move of EmptyEntityResolver from solr-core to solrj too ",
            "id": "comment-15012694"
        },
        {
            "date": "2015-11-19T03:25:52+0000",
            "author": "Erik Hatcher",
            "content": "Addressing Shawn Heisey's list above:\n\n\n\torg.apache.solr.handler.DocumentAnalysisRequestHandler: uses EmptyEntityResolver appropriately\n\torg.apache.solr.handler.XmlUpdateRequestHandlerTest: this is a test, so no concern (but it does not use EmptyEntityResolver)\n\torg.apache.solr.handler.dataimport.XPathRecordReader: uses EmptyEntityResolver\n\torg.apache.solr.handler.loader.XMLLoader: uses EmptyEntityResolver\n\torg.apache.solr.update.AddBlockUpdateTest:another test, so no concern, but it also does not use EmptyEntityResolver\n\torg.apache.solr.util.EmptyEntityResolver: this is the fix to potentially evil external entity references\n\n\n\nSo all those look fine. ",
            "id": "comment-15012705"
        },
        {
            "date": "2015-11-19T03:49:07+0000",
            "author": "Erik Hatcher",
            "content": "Solr's \"ant test\" passed locally.  I'll commit to trunk and branch_5x in the next day or two, barring any objections. ",
            "id": "comment-15012731"
        },
        {
            "date": "2015-11-23T16:20:45+0000",
            "author": "Erik Hatcher",
            "content": "Forgot to mention JIRA ticket on commit message.  Committed:\n\n\ttrunk r1715863:  http://svn.apache.org/viewvc?rev=1715863&view=rev\n\tbranch_5x r1715864: http://svn.apache.org/viewvc?rev=1715864&view=rev\n\n ",
            "id": "comment-15022382"
        },
        {
            "date": "2015-11-24T01:00:44+0000",
            "author": "Hoss Man",
            "content": "the commits made for this issue have broken trunk and 5x builds due to causing the javadocs to produce broken links.\n\nsome of the affected classes have fundamental problems that can/should be fixed in SOLR-8333, but independent of that this commit \u2013 and the creation of solr/solrj/src/java/org/apache/solr/util/ which competes with solr/core/src/java/org/apache/solr/util/ \u2013 are breaking the build.\n\nerik: can you please revert this until a better solution is found?(i thought you mentioned earlier today that you would do this \u2013 but that was ~8 hours ago and i've seen you make several other commits & jira comments since then w/o actually addressing the immediate problem, so i'm asking you now explicitly: please revert until this issue can be fixed in a way that does not break the build. ",
            "id": "comment-15023514"
        },
        {
            "date": "2015-11-24T01:25:00+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1716007 from Erik Hatcher in branch 'dev/trunk'\n[ https://svn.apache.org/r1716007 ]\n\nSOLR-8307: move EmptyEntityResolver to another package to avoid conflict with solr-core and javadoc generation ",
            "id": "comment-15023546"
        },
        {
            "date": "2015-11-24T01:26:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1716008 from Erik Hatcher in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1716008 ]\n\nSOLR-8307: move EmptyEntityResolver to another package to avoid conflict with solr-core and javadoc generation (merged from trunk r1716007) ",
            "id": "comment-15023548"
        },
        {
            "date": "2015-11-24T01:31:33+0000",
            "author": "Erik Hatcher",
            "content": "Chris Hostetter (Unused) - should be fixed now.  I moved EmptyEntityResolver to the common package to as to not overlap.\n\nDo we need to create a solr-core version of this class (in the util) package to keep the same fully qualified classname for this public class?   I'm ok with it changing, and documenting it in CHANGES.  Objections or suggestions? ",
            "id": "comment-15023554"
        },
        {
            "date": "2015-11-24T14:37:34+0000",
            "author": "Erik Hatcher",
            "content": "Uwe Schindler - what do you think about the public EmptyEntityResolver moving to another package?   Do you think we should create a back compatible deprecated one in the same place?   I can't imagine it is being used externally.   I'll re-open this issue and document the change at least, and add a copy of it back if desired. ",
            "id": "comment-15024608"
        },
        {
            "date": "2015-11-24T15:09:23+0000",
            "author": "Uwe Schindler",
            "content": "I am fine with that. I don't think we need backwards compatibility. ",
            "id": "comment-15024649"
        },
        {
            "date": "2015-11-24T15:25:40+0000",
            "author": "Erik Hatcher",
            "content": "Thanks Uwe Schindler.  Documented in CHANGES and committed:\n\n\tbranch_5x: r1716161 https://svn.apache.org/r1716161\n\ttrunk: r1716160 https://svn.apache.org/r1716160\n\n ",
            "id": "comment-15024669"
        }
    ]
}