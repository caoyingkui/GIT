{
    "id": "SOLR-7977",
    "title": "SOLR_HOST in solr.in.sh doesn't apply to Jetty's host property",
    "details": {
        "components": [
            "security",
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Steve Davids pointed out that the SOLR_HOST config option in solr.in.sh doesn't set Jetty's host property (solr.jetty.host) so it still binds to all net interfaces. Perhaps it should apply to jetty as well because the user explicitly wants us to bind to specific IP?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-26T18:00:36+0000",
            "author": "Shawn Heisey",
            "content": "I don't think that property was initially intended to be applicable to Jetty.  It's how the hostname gets overridden for SolrCloud.\n\nI can envision situations where the host that the user wants to include in zookeeper is entirely different from the host they want to use for network binding. ",
            "id": "comment-14715243"
        },
        {
            "date": "2015-08-26T19:46:27+0000",
            "author": "Shawn Heisey",
            "content": "I can envision situations where the host that the user wants to include in zookeeper is entirely different\n\nIn any sanely set up network, those two will of course always be identical ... but users have a way of inventing strange networking setups with address translation where not everything matches up the way it would in a straightforward network.  Also, a user may want to specify the hostname to SolrCloud, but still listen on all interfaces, not just the one specified by the hostname. ",
            "id": "comment-14715395"
        },
        {
            "date": "2015-08-29T04:58:07+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Shawn. Yeah, earlier we had no control of the application server and how/where it listens. But now that we have got rid of the war and want to view Solr as one black box application, do we really want users to have two different ways in which to set hostnames? One to bind to and another way to send requests to (for inter-shard requests)?\n\nI propose that we get rid of such funny business and have one way of configuring host names which are applicable throughout. If SOLR_HOST is not specified, we can continue to listen on all addresses (the default right now) and select one for inter-shard requests as we do today. ",
            "id": "comment-14720973"
        },
        {
            "date": "2015-08-29T12:26:16+0000",
            "author": "Shawn Heisey",
            "content": "do we really want users to have two different ways in which to set hostnames\n\nI agree with your general philosophy of a simple configuration where the user doesn't have to think too hard about what they are getting, but I do think we need separate options available for the hostname in SolrCloud and the listen interface(s).\n\nI believe that the principle of least surprise for most people says \"unless I specifically say otherwise, I want Solr to listen on all interfaces\" and that this expectation will co-exist with \"I want to specify the hostname in my clusterstate.\"  It's what I expect out of software.  I admit that I am not most people, but I do think that's a majority opinion.  An example from our own backyard: Apache httpd has separate config options for Listen, ServerName, and ServerAlias.  The IP address in the Listen parameter (which may be 0.0.0.0) frequently has no direct connection to the ServerName or its aliases \u2013 those may exist on a firewall NAT rule or a load balancer.\n\nListening only on the IP address for the hostname provided, which is the only reasonable thing to do if one option controls both settings, will disable access on localhost.  The URL for the admin UI that is given by the solr script and our getting started documentation will not work. ",
            "id": "comment-14721101"
        },
        {
            "date": "2015-09-03T20:47:11+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Sorry for the delay in responding, Shawn. I think you're right that separate configuration options are necessary. Perhaps it makes sense to add the jetty host property into solr.in.sh as well so that it is more apparent as to how to change such detail. Right now it is inside jetty xml (which we don't want people to edit) and not documented elsewhere afaik. ",
            "id": "comment-14729752"
        },
        {
            "date": "2015-12-07T18:13:44+0000",
            "author": "Xavier",
            "content": "Shawn Heisey, I'd agree that two different option variables are a good idea. For instance, in my (small) deployment, I have a single solr server, thus I don't really care how SolrCloud addresses the server; but I care which IP is used to listen for requests. Right now, following Shalin Shekhar Mangar's recommendation, I'm directly passing the jetty.host parameter using $SOLR_OPTS. However, that's a temporary workaround, especially since the fact that the solr black box uses jetty is an implementation detail.\n\nAdding a $SOLR_LISTEN or $SOLR_BIND_IP variable to the solr.in.sh file, which then gets translated to the appropriate parameter, would, in my opinion, be the best way of solving the problem, and if the internal implementation changes (solr moves off an embedded jetty), the configuration files will need little to no editing. ",
            "id": "comment-15045385"
        }
    ]
}