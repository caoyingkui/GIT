{
    "id": "SOLR-6542",
    "title": "Method setConnectionTimeout throws Exception when using HttpSolrServer with a proxy",
    "details": {
        "affect_versions": "4.9,                                            4.10",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "I try to get a HttpSolrServer object with the following non-standard functionalities:\n\n\ta proxy is used for the connection\n\tthe connection timeout is set\n\n\n\nA HttpClient object is required for setting proxy (see code listing 1).\n\nThe timeout can either be defined on the internal httpClient object (see option a) or later on the created httpSolrServer object (see option b)\n\nQuestion one:\nIs there a difference in behaviour of the HttpSolrServer instance when I set the connection timeout directly in my own HttpClient object in comparison to using the method HttpSolrServer#setConnectionTimeout() ?\nI would expect that there is no difference.\n\nMoving from Solr 4.6 to Solr 4.9, I also upgraded HttpClient to the same Version Solr is using (httpclient-4.2.6 was used in solr-4.6, now httpclient-4.3.1 is used in solr-4.9).\n\nThe newer version of HttpSolr deprecates a number of methods used in my code, therefore I was looking for a way to modify it according to the new API (see code listing 2).\n\nI now get an java.lang.UnsupportedOperationException when using the method HttpSolrServer#setConnectionTimeout() \n\n\njava.lang.UnsupportedOperationException\n\tat org.apache.http.impl.client.InternalHttpClient.getParams(InternalHttpClient.java:204)\n\tat org.apache.solr.client.solrj.impl.HttpClientUtil.setConnectionTimeout(HttpClientUtil.java:249)\n\tat org.apache.solr.client.solrj.impl.HttpSolrServer.setConnectionTimeout(HttpSolrServer.java:634)\n\tat test.HttpSolrServerTest.newStyle_httpclient_4_3_1(HttpSolrServerTest.java:89)\n\n\n\nIt seems that since the switch of the library HttpClient something internally clashes in the HttpSolrServer object.\n\nQuestion two:\nIs this something that has been overlooked when the library within SolrJ was changed to the newer version, or am trying something that must not be done?\nI would expect that the method HttpSolrServer#setConnectionTimeout() can be used, independent of the way I chose to create that object.\n\nBonus question:\nAm I using an acceptable way of accessing Solr over a proxy or are there better methods?\n\ncode listing 1\n\t/**\n\t * requires the following libraries to run\n\t *     httpclient-4.2.6.jar\n\t *     httpcore-4.2.5.jar\n\t *     solr-solrj-4.6.0.jar\n\t *\n\t *     --> shows lots of deprecated methods when using httpclient-4.3.1.jar\n\t */\n\t@Test\n\tpublic void oldStyle_httpclient_4_2_6() throws Exception {\n\t\tString solrUrlForPing = \"http://localhost:8983/solr/collection1\";\n\t\tString proxyHost = \"127.0.0.1\";\n\t\tint proxyPort = 8888; // Using \"Fiddler\" as dummy proxy\n\t\tint maxTimeout = 10000; // 10 seconds\n\n\t\tfinal HttpParams httpParams = new BasicHttpParams();\n\n\t\t// option a) timeout can be set as a parameter of the httpClient\n\t\tHttpConnectionParams.setConnectionTimeout(httpParams, maxTimeout);\n\t\tHttpConnectionParams.setSoTimeout(httpParams, maxTimeout);\n\t\tClientConnectionManager connMgr = new PoolingClientConnectionManager();\n\t\tHttpClient httpClient = new DefaultHttpClient(connMgr, httpParams);\n\n\t\tHttpHost httpProxy = new HttpHost(proxyHost, proxyPort);\n\t\thttpClient.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, httpProxy);\n\t\tHttpSolrServer httpSolrServer = new HttpSolrServer(solrUrlForPing, httpClient);\n\n\t\t// option b) timeout can be set on the httpSolrServer object\n\t\thttpSolrServer.setConnectionTimeout(maxTimeout);\n\t\thttpSolrServer.setSoTimeout(maxTimeout);\n\n\t\thttpSolrServer.ping();\n\t}\n\n\n\ncode listing 2\n\t/**\n\t * requires the following libraries to run\n\t *     httpclient-4.3.1.jar\n\t *     httpcore-4.3.jar\n\t *     solr-solrj-4.9.0.jar\n\t */\n\t@Test\n\tpublic void newStyle_httpclient_4_3_1() throws Exception {\n\t\tString solrUrlForPing = \"http://localhost:8983/solr/collection1\";\n\t\tString proxyHost = \"127.0.0.1\";\n\t\tint proxyPort = 8888; // Using \"Fiddler\" as dummy proxy\n\t\tint maxTimeout = 10000; // 10 seconds\n\n\t\tHttpClientBuilder hcBuilder = HttpClients.custom();\n\n\t\t// setting the maximum allowed timeout\n\t\tRequestConfig config = RequestConfig.custom()\n\t\t\t\t\t.setSocketTimeout(maxTimeout)\n\t\t\t\t\t.setConnectTimeout(maxTimeout)\n\t\t\t\t\t.build();\n\t\thcBuilder.setDefaultRequestConfig(config);\n\n\t\tHttpHost httpProxy = new HttpHost(proxyHost, proxyPort);\n\t\tDefaultProxyRoutePlanner routePlanner = new DefaultProxyRoutePlanner(httpProxy);\n\t\thcBuilder.setRoutePlanner(routePlanner);\n\t\tHttpClient httpClient = hcBuilder.build();\n\n\t\tHttpSolrServer httpSolrServer = new HttpSolrServer(solrUrlForPing, httpClient);\n\n\t\t// option b) timeout can be set on the httpSolrServer object\n\t\thttpSolrServer.setConnectionTimeout(maxTimeout);   // --> THROWS java.lang.UnsupportedOperationException\n\t\thttpSolrServer.setSoTimeout(maxTimeout);           // --> THROWS java.lang.UnsupportedOperationException\n\n\t\thttpSolrServer.ping();\n\t}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-15981118",
            "date": "2017-04-24T12:54:04+0000",
            "content": "Someone mentioned this issue in relation to a more recent problem, which is why I am commenting now, over two years after the issue was created.\n\nI believe the reason this problem is encountered is because you have created the HttpClient object external to the Solr client, then you are trying to modify settings on the HttpClient from within the Solr client.\n\nThe methods on the Solr client that set timeouts are designed to work with the HttpClient object that the HttpSolrServer object can create internally.  When you create the HttpClient object yourself and use it to create HttpSolrServer (HttpSolrClient in 5.0 and later), all connection parameters like timeouts should be set on the HttpClient before that client is passed to the Solr client.  The two methods you are using should NOT be used with an external HttpClient.\n\nIn the second code example, the timeouts are being set on the HttpClient exactly like I described ... so there is no need to call the timeout methods on the Solr client.  I am closing this issue as invalid.  If you find that there is still a problem even when not setting the timeouts with SolrJ code, then we can reopen and investigate. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-15981119",
            "date": "2017-04-24T12:55:24+0000",
            "content": "The exception encountered is exactly what I believe should happen with the code as it is written.  The correct method of setting timeouts has been mentioned in a comment. "
        }
    ]
}