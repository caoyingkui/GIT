{
    "id": "LUCENE-4743",
    "title": "ComplexPhraseQuery highlight problem after rewriting using ComplexPhraseQuery.rewrite(IndexReader)",
    "details": {
        "components": [
            "core/search",
            "modules/highlighter",
            "modules/queryparser"
        ],
        "fix_versions": [],
        "affect_versions": "3.6",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Just want to ask an assistance using ComplexPhraseQuery. I mean, when it comes to highlighting the hits are not correct. I also started using ComplexPhraseQueryParser to support complex proximity searches.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-02-02T23:23:23+0000",
            "content": "Can you provide a simple testcase that shows the problem? ",
            "author": "Simon Willnauer",
            "id": "comment-13569665"
        },
        {
            "date": "2013-02-03T21:42:01+0000",
            "content": "ComplexPhraseQuery rewrites complex proximity searches into SpanQuerys. FastVectorHighlighter currently just ignores SpanQuery, I'm not sure how Highlighter behaves. I use ComplexPhraseQuery in production so I'd be happy to help trace this issue if you can provide some sample queries or some test cases.  ",
            "author": "Ryan Lauck",
            "id": "comment-13569903"
        },
        {
            "date": "2013-02-03T22:43:50+0000",
            "content": "The std Highlighter can highlight span querys when in postion aware mode. It uses a memory index and decomposes the original query to find the matches. ",
            "author": "Mark Miller",
            "id": "comment-13569919"
        },
        {
            "date": "2013-02-04T00:13:46+0000",
            "content": "Thanks all for the quick response. I can provide you some sample query:\n\nLet's say we have the following line: Make Sure Our Emails Reach Your Inbox\n\nthe query is: \"(Make Sur*) Inbox\"~10\n\nafter searching, the hits are correct. but somehow \"Make\" is not being highlighted. Am I missing something here? here is my code.\n\nDocHighlighter.java\n...\nQuery rewrite_result = phrase.rewrite(IndexReader.open(INDEX_DIR));\nQueryScorer qs_phrases = new QueryScorer(rewrite_result);\nqs_phrases.setExpandMultiTermQuery(true);\nhighlighter = new Highlighter(htmlFormatter, qs_phrases);\nhighlighter.setTextFragmenter(new NullFragmenter());\nhighlighter.setMaxDocCharsToAnalyze(Integer.MAX_VALUE);\n//get the temp text\nif(text == null){\ntext = highlighter.getBestFragment(analyzer, \"\", pText);\n}else{\ntext_temp = highlighter.getBestFragment(analyzer, \"\", text);\ntext = text_temp;\n}\n...\n\n\n\nI'll start to create a test case for more info. ",
            "author": "Jason Nacional",
            "id": "comment-13569935"
        },
        {
            "date": "2013-02-04T01:39:34+0000",
            "content": "Just an addition, I also used ComplexPhraseQueryParser as a default parser. ",
            "author": "Jason Nacional",
            "id": "comment-13569947"
        },
        {
            "date": "2013-02-04T06:35:31+0000",
            "content": "I also have a question about rewriting ComplexPhraseQuery. Do I really need to always open an IndexReader? I mean, in our system, searching and viewing the hit document is a separate page. So what I'm doing to highlight terms (since I used ComplexPhraseQuery and it needs to be \"rewritten\") is to open an IndexReader.\n\nI hope you understand my concerns. And I apologize for so many questions.\n\nThanks.\n ",
            "author": "Jason Nacional",
            "id": "comment-13570020"
        },
        {
            "date": "2013-02-04T15:27:51+0000",
            "content": "Given your above example queries yes, the IndexReader is used during rewrite to enumerate all the possible terms in a wildcard query. If your query only consisted of basic TermQuery and PhraseQuery I think you could provide a static, empty IndexReader like PostingsHighlighter does. The docs recommend reusing a single IndexSearcher to avoid some of the overhead of opening new IndexReaders every time. ",
            "author": "Ryan Lauck",
            "id": "comment-13570327"
        },
        {
            "date": "2013-02-05T01:20:42+0000",
            "content": "I tried to generate the translated query. Here it is:\n\nspanNear([spanOr([content:make, spanOr([content:sur, content:sure, content:surely, content:surely.\u00e2, content:surer, content:surest, content:surety, content:surf, content:surface, content:surfaced, content:surfaces, content:surge, content:surged, content:surgeon, content:surgeon\u00e2, content:surgery, content:surges, content:surgical, content:surging, content:surlier, content:surly, content:surmise, content:surmised, content:surmises, content:surmount, content:surmounted, content:surmounting, content:surname, content:surnames, content:surovsky, content:surpass, content:surpassed, content:surpassing, content:surplice, content:surplices, content:surplus, content:surprise, content:surprised, content:surprises, content:surprising, content:surprisingly, content:surrender, content:surrendered, content:surrendering, content:surrenders, content:surreptitiously, content:surround, content:surrounded, content:surrounding, content:surroundings, content:surrounds, content:suruchi, content:survey, content:surveyed, content:surveying, content:surveys, content:survival, content:survive, content:survived, content:surviving, content:sury])]), content:inbox], 10, true)\n\ncould it be possible that the problem is on the first spanOr?? ",
            "author": "Jason Nacional",
            "id": "comment-13570829"
        },
        {
            "date": "2013-02-06T02:45:59+0000",
            "content": "May be highlighter works without re-write after https://issues.apache.org/jira/browse/LUCENE-4728? ",
            "author": "Ahmet Arslan",
            "id": "comment-13572098"
        },
        {
            "date": "2013-03-01T05:59:33+0000",
            "content": "Hi Ahmet Arslan, What do you mean?  ",
            "author": "Jason Nacional",
            "id": "comment-13590266"
        },
        {
            "date": "2013-04-01T07:33:48+0000",
            "content": "I decided to run my script using SurroundQuery and create a custom Interpreter to convert the queries into a surround query language. But how can I enable leading wildcard query searching?? ",
            "author": "Jason Nacional",
            "id": "comment-13618673"
        },
        {
            "date": "2015-10-09T04:53:02+0000",
            "content": "Looking at the query structure, this could be related to LUCENE-2287 (problems highlighting nested span queries). ",
            "author": "Scott Stults",
            "id": "comment-14949892"
        }
    ]
}