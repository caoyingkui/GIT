{
    "id": "SOLR-10264",
    "title": "ManagedSynonymFilterFactory does not parse multi-term synonyms",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "6.4.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The parser that the ManagedSynonymFilterFactory uses to parse the JSON resource into a synonym map does not parse multi-term synonyms in the expected way.\n\nIf the synonym \n{\"foo bar\":\"baz\"}\n is added to the managed resource, the expected behavior is that the multi-term synonym \"foo bar\" will be mapped to the synonym \"baz\".\n\nIn the analyze method of SynonymMap.Parser, multiple origin terms are concatenated with a separating SynonymMap.WORD_SEPARATOR, but the analyze method is not used by the parser in the ManagedSynonymFilterFactory.\n\nAs a workaround, multi-term synonyms can be uploaded separated by a null character, i.e., uploading \n{\"foo\\u0000bar\":\"baz\"}\n works.",
    "attachments": {
        "SOLR-10264-test.patch": "https://issues.apache.org/jira/secure/attachment/12859136/SOLR-10264-test.patch",
        "SOLR-10264.patch": "https://issues.apache.org/jira/secure/attachment/12857337/SOLR-10264.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-10T15:27:03+0000",
            "content": "I've attached a patch that modifies the ManagedSynonymParser to call the parent class's analyze method on the mapped terms. ",
            "author": "J\u00f6rg Rathlev",
            "id": "comment-15905256"
        },
        {
            "date": "2017-03-13T08:00:21+0000",
            "content": "+1 on this one. To be a little more open for extension, it would be great if the inner classes of the `ManagedSynonymFilterFactory` would be `protected` instead of `private`. Then, a caching implementation would be straight forward and we'd contribute that one as well. ",
            "author": "Torsten B\u00f8gh K\u00f6ster",
            "id": "comment-15906976"
        },
        {
            "date": "2017-03-13T09:01:31+0000",
            "content": "I'm sorry, but the patch lacks a test.   ",
            "author": "Mikhail Khludnev",
            "id": "comment-15907037"
        },
        {
            "date": "2017-03-13T10:25:48+0000",
            "content": "Yeah well, that's a way to cut down contributions. We'll contribute a test later ... ",
            "author": "Torsten B\u00f8gh K\u00f6ster",
            "id": "comment-15907132"
        },
        {
            "date": "2017-03-13T10:41:56+0000",
            "content": "Hi J\u00f6rg Rathlev - thanks for opening this ticket with initial patch. It's totally fine for an initial patch to have no test.\n\nFrom a quick look TestManagedSynonymFilterFactory might be a good home for the test. ",
            "author": "Christine Poerschke",
            "id": "comment-15907153"
        },
        {
            "date": "2017-03-16T17:16:36+0000",
            "content": "Attaching partial (not yet multi-term) test changes. ",
            "author": "Christine Poerschke",
            "id": "comment-15928455"
        },
        {
            "date": "2017-03-20T16:38:07+0000",
            "content": "Thank you, Christine, that almost-complete test case was very helpful!\n\nI've attached an updated patch with a working test case for multi-term origins.\n\nCompared to Christine's test, I've changed it so that the multi-term origin is in the indexed document, and the single-term synonym in the query, because multi-term origins in the query are problematic for unrelated reasons. ",
            "author": "J\u00f6rg Rathlev",
            "id": "comment-15933001"
        },
        {
            "date": "2017-03-20T16:47:48+0000",
            "content": "multi-term origins in the query are problematic for unrelated reasons.\n\nFYI I committed SOLR-9185 last week. It adds the sow (split-on-whitespace) param to the edismax and standard/\"Lucene\" query parsers, which when set to false will allow query-time multi-term origins. ",
            "author": "Steve Rowe",
            "id": "comment-15933023"
        },
        {
            "date": "2017-03-21T11:25:16+0000",
            "content": "Attaching patch with slightly revised test, key differences compared to J\u00f6rg's patch:\n\n\tthe document is not re-added after the core reload\n\tmulti-term or single-term origin or synonym is randomly decided\n\tsow (split-on-whitespace) is set to false as Steve suggested\n\n\n\nHowever, for some reason this error is being hit\n\no.a.s.h.RequestHandlerBase org.apache.solr.search.QueryParserConfigurationException: Field 'text': autoGeneratePhraseQueries == true is disallowed when sow/splitOnWhitespace == false\n\n\nwhich is quite unexpected since firstly schema-rest.xml was changed to\n\n<fieldType name=\"managed_en\" class=\"solr.TextField\" autoGeneratePhraseQueries=\"false\">\n\n\nand secondly the test itself doesn't actually search on the text field? ",
            "author": "Christine Poerschke",
            "id": "comment-15934501"
        },
        {
            "date": "2017-03-22T18:44:59+0000",
            "content": "Dug a little further re: the sow (split-on-whitespace) error encountered as per above and found at schema-rest.xml#L623 <defaultSearchField>text</defaultSearchField> which would partly explain the consideration of the text field though not fully since the search is asking for the managed_en_field field, hmm. ",
            "author": "Christine Poerschke",
            "id": "comment-15936906"
        },
        {
            "date": "2017-03-24T09:34:47+0000",
            "content": "from Steve Rowe in SOLR-10348:\nThe query managed_en_field:happy test, with default field = text, is interpreted by the standard query parser (and Lucene classic query parser) as managed_en_field:happy text:test. If you want test to also be against managed_en_field, you have to enclose both words in parens: managed_en_field:(happy test). ",
            "author": "Christine Poerschke",
            "id": "comment-15940052"
        },
        {
            "date": "2017-03-30T17:44:06+0000",
            "content": "Attaching final(?) patch, will commit early next week or so if no further comments or concerns. ",
            "author": "Christine Poerschke",
            "id": "comment-15949488"
        },
        {
            "date": "2017-04-07T12:29:29+0000",
            "content": "Commit adabfdd9c2a50b4141f485655df0d048df21bd23 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=adabfdd ]\n\nSOLR-10264: Fixes multi-term synonym parsing in ManagedSynonymFilterFactory.\n(J\u00f6rg Rathlev, Steve Rowe, Christine Poerschke) ",
            "author": "ASF subversion and git services",
            "id": "comment-15960689"
        },
        {
            "date": "2017-04-07T14:19:33+0000",
            "content": "Commit 3ac32eea3509495256c4b74a695e798f783d7434 in lucene-solr's branch refs/heads/branch_6x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3ac32ee ]\n\nSOLR-10264: Fixes multi-term synonym parsing in ManagedSynonymFilterFactory.\n(J\u00f6rg Rathlev, Steve Rowe, Christine Poerschke) ",
            "author": "ASF subversion and git services",
            "id": "comment-15960867"
        },
        {
            "date": "2017-04-07T15:18:33+0000",
            "content": "Thanks J\u00f6rg and Steve! ",
            "author": "Christine Poerschke",
            "id": "comment-15960950"
        }
    ]
}