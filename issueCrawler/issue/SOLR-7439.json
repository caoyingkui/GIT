{
    "id": "SOLR-7439",
    "title": "Large spatial query with irregular polygon yields incorrect results",
    "details": {
        "components": [
            "spatial"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10.3",
        "status": "Closed",
        "resolution": "Invalid",
        "priority": "Major"
    },
    "description": "I've noticed that queries with polygons that span more than 180 degrees can be interpreted as going the opposite way around the earth when the points have \"many\" decimal places.\n\nHere are the relevant schema details. Note I am using ccwRect for datelineRule.\n\n<field name=\"geo\" type=\"location_rpt\" indexed=\"true\" stored=\"false\"/>\n\n<fieldType name=\"location_rpt\" class=\"solr.SpatialRecursivePrefixTreeFieldType\"\nspatialContextFactory=\"com.spatial4j.core.context.jts.JtsSpatialContextFactory\"\ngeo=\"true\" distErrPct=\"0.1\" maxDistErr=\"0.000009\" units=\"degrees\"\ndatelineRule=\"ccwRect\" normWrapLongitude=\"true\" autoIndex=\"true\"/>\n\nJTS v1.10 jar has been added to the classpath.\nA simple test case that shows the problem:\nI have 3 documents indexed each with one of the following polygon values set for the \"geo\" field.\n\nPOLYGON ((-0.70312499989791 8.0592296260867, 13.359374998139 8.0592296260867, 13.359374998139 21.616579333871, -0.70312499989791 21.616579333871, -0.70312499989791 8.0592296260867))\nPOLYGON ((120.58593748322 13.923403895824, 132.53906248155 13.923403895824, 132.53906248155 25.165173365383, 120.58593748322 25.165173365383, 120.58593748322 13.923403895824))\nPOLYGON ((-133.24218748145 0.35156029394437, -121.99218748302 0.35156029394437, -121.99218748302 11.523087505283, -133.24218748145 11.523087505283, -133.24218748145 0.35156029394437))\n\nWhen I execute this query, I get only 1 hit:\n\ngeo:\"Intersects(POLYGON((-136.40624998100992 -41.50857729267501,129.02343748203592 -41.50857729267501,129.02343748203583 58.4477327986157,-136.40624998100992 58.4477327986157,-136.40624998100992 -41.50857729267501))) distErrPct=0.0\"\n\nNow if I run this query where a took off a couple decimal places from each point, I get 3 hits (this is what I would expect):\n\ngeo:\"Intersects(POLYGON((-136.406249981009 -41.508577292675,129.023437482035 -41.508577292675,129.023437482035 58.44773279861,-136.406249981009 58.44773279861,-136.406249981009 -41.508577292675))) distErrPct=0.0\"\n\nIt looks like the first query is actually doing the opposite of what I intend - it's being interpreted as the smaller area going the opposite way around the earth. I may be able alter my queries slightly so that I get the desired behavior but it seems like these queries should give the same results, correct?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-21T19:12:25+0000",
            "author": "Jon H",
            "content": "I now realize what I've done by truncating the points a couple decimal places for the second query is make a polygon that is a north oriented rectangle. I'm guessing that has something to do with the problem. ",
            "id": "comment-14505542"
        },
        {
            "date": "2015-09-28T02:29:30+0000",
            "author": "David Smiley",
            "content": "Hello.  Your first query polygon isn't a perfect rectangle and therefore isn't processed with the datelineRule.  The X value at about 129 degrees (the intended \"right side\"?) isn't the same at the upper & lower point.   ",
            "id": "comment-14909983"
        }
    ]
}