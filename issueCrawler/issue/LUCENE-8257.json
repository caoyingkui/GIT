{
    "id": "LUCENE-8257",
    "title": "GeoComplexPolygon fails when points are near identical",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [
            "modules/spatial3d"
        ],
        "fix_versions": [
            "6.7",
            "7.4",
            "master (8.0)"
        ]
    },
    "description": "When a polygon have two consecutive points very close to each other but not numerically identical, we can get wrong results because planes defining that edge intersects somewhere else on the world. At that point the following check is evaluated to true:\n\nif (edge.plane.evaluateIsZero(thePointX, thePointY, thePointZ) && edge.startPlane.isWithin(thePointX, thePointY, thePointZ) && edge.endPlane.isWithin(thePointX, thePointY, thePointZ)) {\n  return false;\n}",
    "attachments": {
        "LUCENE-8257.patch": "https://issues.apache.org/jira/secure/attachment/12919345/LUCENE-8257.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16440442",
            "date": "2018-04-17T06:03:34+0000",
            "content": "For standard polygons, we wound up accepting the fact that points on the opposite sides of the world would be within the shape when there was a very tight angle between edge points, and even modified the bounds computation to allow it and compensate for it.\n\nThe \"fix\" involves having a backing sided plane for every edge that is perpendicular to both the edge end planes and goes through the center of the world.  But you don't want to have one unless the angle is very tiny, because it's expense you don't need and also because at larger angles it interferes with things.\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16440467",
            "date": "2018-04-17T06:23:37+0000",
            "content": "One thing I notice is that the start and end plane for that edge are functionally identical. Maybe that condition can be used to check the need for a backing side. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16440486",
            "date": "2018-04-17T06:46:04+0000",
            "content": "Commit 4ee92c22a4b731d3ec2f93409f3fe57ae348cea1 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4ee92c2 ]\n\nLUCENE-8257: All edges have a backing plane, so edge membership doesn't bleed through to the opposite side of the world. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16440487",
            "date": "2018-04-17T06:46:53+0000",
            "content": "Commit ad6b173a6356b648e817b3146f2d78a4b959ab6c in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ad6b173 ]\n\nLUCENE-8257: All edges have a backing plane, so edge membership doesn't bleed through to the opposite side of the world. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16440488",
            "date": "2018-04-17T06:47:21+0000",
            "content": "Commit 8b0ac122e652a48c77fab81ba17d3923db16a968 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8b0ac12 ]\n\nLUCENE-8257: All edges have a backing plane, so edge membership doesn't bleed through to the opposite side of the world. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16440505",
            "date": "2018-04-17T07:15:33+0000",
            "content": "Ignacio Vera, using the backing plane all the time seemed OK with the way I set it up.  But computing the interpolation point is expensive, so as a performance improvement, you might want to use the \"functionally identical\" test and change the code in the Edge class to make it cheaper to construct most Edge objects. ",
            "author": "Karl Wright"
        }
    ]
}