{
    "id": "LUCENE-3377",
    "title": "TermOrdsIterator#lookup throws ArrayIndexOutOfBoundsException",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "TermOrdsIterator's lookup method can throw an ArrayIndexOutOfBoundsException if reuse argument is reused acros segments. \n\nExample collector:\n\nprivate DocTermOrds.TermOrdsIterator reuse = null;\n\npublic void collect(int doc) throws IOException {\n    ...\n    reuse = docTermOrds.lookup(doc, reuse);\n    ...\n}\n\npublic void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n    docTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader, field);\n    ....\n}\n\n\nIf reuse argument is always null exception doesn't occur.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-08-17T12:21:56+0000",
            "content": "I think we should record which IR instance the DTO.TermOrdsIterator was created on, and then don't reuse the passed instance if it came from a different IR?\n\nActually we should probably just hold onto & compare the IR.getCoreCacheKey(). ",
            "author": "Michael McCandless",
            "id": "comment-13086259"
        },
        {
            "date": "2011-08-17T12:39:16+0000",
            "content": "Actually we should probably just hold onto & compare the IR.getCoreCacheKey().\nSeems like a good idea to me. ",
            "author": "Martijn van Groningen",
            "id": "comment-13086269"
        }
    ]
}