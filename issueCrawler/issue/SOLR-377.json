{
    "id": "SOLR-377",
    "title": "speed increase for writers",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When solr is writing the response of large cached documents, the bottleneck is string encoding.\na buffered writer implementation that doesn't do any synchronization could offer some good speedups.",
    "attachments": {
        "fastwriter.patch": "https://issues.apache.org/jira/secure/attachment/12367510/fastwriter.patch",
        "SOLR-377-phpresponsewriter.patch": "https://issues.apache.org/jira/secure/attachment/12367917/SOLR-377-phpresponsewriter.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12533827",
            "date": "2007-10-10T18:22:53+0000",
            "content": "attaching patch... adds an optimized unsynchronized buffered writer, changes some ResponseWriters use of strings to characters, removes buffering of string in JSON, etc.\n\nSpeed differences with very large documents:\njson: 24% faster\nruby: 500% faster (ruby didn't buffer in a StringBuilder like JSON did)\npython: 0% (bottleneck for these huge fields is buffering in the StringBuilder to see if we should prepend a 'u'... always prepending a 'u' and not buffering resulted in a ~20% improvement)\nxml: 8% faster\n\nWith smaller documents, the speedups are likely to be greater because small writes like value separators would matter more.\n\nIf there are no objections, I'll commit in a few days. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12534655",
            "date": "2007-10-14T18:39:37+0000",
            "content": "committed. "
        },
        {
            "author": "Pieter Berkel",
            "id": "comment-12535793",
            "date": "2007-10-18T00:16:24+0000",
            "content": "Sorry I've been a bit slow catching up with this issue.  Please find attached a trival patch to PHPResponseWriter.java that takes advantage of the new FastWriter code, it should provide speed improvements similar to the JSON writer (perhaps slightly less).\n\nNo fastwriter optimisation is necessary for PHPSerializedResponseWriter as there is no need to escape strings before they are written. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12535805",
            "date": "2007-10-18T01:42:26+0000",
            "content": " Thanks Pieter, I just committed the PHP changes. "
        },
        {
            "author": "Dave Lewis",
            "id": "comment-12536332",
            "date": "2007-10-19T20:04:35+0000",
            "content": "After this patch, using PHPSerializedResponseWriter returns output that is unreadable by my PHP application.  I know that doesn't make any sense, but I'm looking into it now. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12536339",
            "date": "2007-10-19T20:46:30+0000",
            "content": "What container are you using?\nJetty used to have a bug where the Writer they return to the servlet had issues with chars > 127 if you used writer.write(string,off,len) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12536343",
            "date": "2007-10-19T21:04:48+0000",
            "content": "FYI, I haven't been able to reproduce any problems along these lines using the Jetty version that's bundled (and I set the FastWriter buffer size artificially low to exercise the boundary handling). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12536347",
            "date": "2007-10-19T21:28:36+0000",
            "content": "OK, I think it was a lack of flushing the buffer in the FastWriter.\nI've checked in a patch... can you try with the trunk version? "
        },
        {
            "author": "Dave Lewis",
            "id": "comment-12536350",
            "date": "2007-10-19T21:35:08+0000",
            "content": "That appears to have been it, trunk works great!  Thanks! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12579137",
            "date": "2008-03-16T03:23:51+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked \"Resolved\" and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.3 as of today 2008-03-15\n\n\n\nThe Fix Version for all 29 issues found was set to 1.3, email notification was suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this (hopefully) unique string: batch20070315hossman1\n "
        }
    ]
}