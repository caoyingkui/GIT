{
    "id": "SOLR-52",
    "title": "Lazy Field loading",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.1.0"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Add lazy field loading to solr.\n\nCurrently solr reads all stored fields and filters the undesired fields based on the field list.  This is usually not a performance concern, but when using solr to store large numbers of fields, or just one large field (doc contents, eg. for highlighting), it is perceptible.\n\nNow, there is a concern with the doc cache of SolrIndexSearcher, which assumes it has the whole document in the cache.  To maintain this invariant, it is still the case that all the fields in a document are loaded in a searcher.doc call.  However, if a field set is given to teh method, only the given fields are loaded directly, while the rest are loaded lazily.\n\nSome concerns about lazy field loading\n  1. Lazy field are only valid while the IndexReader is open.  I believe this is fine since the IndexReader is kept alive by the SolrIndexSearcher, so all docs in the cache have the reader available.  \n  2. It is slower to read a field lazily and retrieve its value later than retrieve it directory to begin with (though I don't know how much--depends on i/o factors).  We certainly don't want this to be the common case.  I added an optional call which accumulates all the field likely to be used in the request (highlighting, reponse writing), and populates the IndexSearcher cache a priori.  This has the added advantage of concentrating doc retrieval in a single place, which is nice from a performance testing perspective.\n 3. LazyFields are incompatible with the sundry Field declarations scattered about Solr.  I believe I've changed all the necessary locations to Fieldable.\n\nComments appreciated",
    "attachments": {
        "lazyfields_patch.diff": "https://issues.apache.org/jira/secure/attachment/12342491/lazyfields_patch.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12440682",
            "date": "2006-10-07T15:59:34+0000",
            "content": "+1, looks good.\n\nThere are some small backward incompatabilities (any place that returns a Fieldable, like getUniqueKeyField), but it can't be helped, and it's fairly expert level anyway.\n\nMy only concern was about a memory increase for lazy-loaded short fields.  I reviewed some of the LazyField code just now, and it looks like this shouldn't be the case:\n\n\tLazyField is an inner class that contains an extra 3 members.   It's outer class that it will retain a reference to is FieldsReader.    The fieldsReader instance is a member of SegmentReader, and has the same lifetime as the SegmentReader.  Hence the LazyField won't extend the lifetime of any other objects.\n\n\n\nOne thing I did see is the internal char[] buffer used to read the string in LazyField is a member for some reason (hence the data will be stored in the field twice for some reason).  I think this is probably a bug, and I'll bring it up on the Lucene list.\n\nIdeas for future optimizations:\n\n\tif there is no document cache, change lazy to no-load\n\tspecial cases: if only a single field (like the ID field) is selected out of many documents to be return, consider bypassing doc cache and use LOAD_AND_BREAK if we know there is only a single value.\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12440683",
            "date": "2006-10-07T16:17:21+0000",
            "content": "The one other memory increase I can see from using lazy fields is due to the thread local... a cloned IndexInput (containing a 1K byte buffer + other object overhead).  That shouldn't be a big deal since it's related to the number of different threads used to access lazy loaded fields, and not directly to the number of lazy fields themselves.\n\nIn any case, your optimization of retrieving all the fields needed for the request probably prevents many lazy field invocations. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12440945",
            "date": "2006-10-09T17:56:08+0000",
            "content": "> hence the data will be stored in the field twice for some reason\n\nFYI, I just checked in a Lucene fix for this. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12440972",
            "date": "2006-10-09T20:47:54+0000",
            "content": "updated version of patch.  Addresses some of Hoss' (minor) comments.  Also, the .doc() method of SolrIndexSearcher will added the unique key field unconditionally if it is present in the schema.  IT is used randomly in several places and including checks for it in other places decreases readability.  "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12440974",
            "date": "2006-10-09T20:50:31+0000",
            "content": "Note the above patch does not address the issue of lazy field use mismatch between two handlers (see solr-dev) "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12442099",
            "date": "2006-10-13T21:39:08+0000",
            "content": "Moved id field selection out of SolrIndexSearcher.doc()\n\nChris: What would you like to see vis-a-vis the many field issues before committing?  Should we put in a global lazy-field-disable option? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12442432",
            "date": "2006-10-15T22:39:25+0000",
            "content": "FYI, we need a lucene refresh before we use lazy fields because of this:\nhttp://issues.apache.org/jira/browse/LUCENE-683 "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12450179",
            "date": "2006-11-15T20:01:26+0000",
            "content": "This version adds a solrconfig parameter which allows lazy fields to be enabled or disabled (disabled by default).\n\nStill needs testing after syncing with lucene changes "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12456164",
            "date": "2006-12-06T19:05:06+0000",
            "content": "Mike, how do you feel about these changes so far?\n\nFWIW: if you still aren't comfortable resolving, you should probably mark this isssue as \"In Progress\" so it stays on the radar. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12456173",
            "date": "2006-12-06T19:29:11+0000",
            "content": "Thanks for reminding me, Hoss.\n\nChanges committed in r479793.  I will reopen if I discover problems. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12456174",
            "date": "2006-12-06T19:29:33+0000",
            "content": "committed in r479793 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589336",
            "date": "2008-04-15T23:56:43+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.1\n\n\n\nThe Fix Version for all 38 issues found was set to 1.1, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman3 "
        }
    ]
}