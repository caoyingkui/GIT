{
    "id": "LUCENE-6367",
    "title": "Can PrefixQuery subclass AutomatonQuery?",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Spinoff/blocker for LUCENE-5879.\n\nIt seems like PrefixQuery should \"simply\" be an AutomatonQuery rather than specializing its own TermsEnum ... with maybe some performance improvements to ByteRunAutomaton.run to short-circuit once it's in a \"sink state\", AutomatonTermsEnum could be just as fast as PrefixTermsEnum.\n\nIf we can do this it will make LUCENE-5879 simpler.",
    "attachments": {
        "LUCENE-6367.patch": "https://issues.apache.org/jira/secure/attachment/12706471/LUCENE-6367.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14375510",
            "author": "Michael McCandless",
            "date": "2015-03-23T08:02:40+0000",
            "content": "Patch, cutting over PrefixQuery to AutomatonQuery and removing\nPrefixTermsEnum.\n\nI explored the optimization of having Byte/CharRunAutomaton.run\noptimize (short-circuit) when you're in a sink state but it became\nquite difficult/invasive fixing all callers of .step to handle this.\nWith LUCENE-5879 we also need to know the sink state under-the-hood,\nbut that's separate from fixing .run to make use of it.\n\nSo I backed out that opto and tried just doing the PrefixQuery cutover\nwithout optimizing for sink states.  I'm running a perf test w/\nluceneutil and it looks like the impact is trivial (well within\nnoise).  Net/net I think it's fine to \"just cutover\" without the\ninvasive opto?\n\nI also changed PrefixQuery's semantics to apply to full binary space\nterms, not just UTF-8 space.  While this is technically a change in\nbehavior, it won't impact users who index only unicode terms.  It's\nalso necessary for LUCENE-5879, because if prefixing is done only in\nunicode space (like today), then the resulting binary space automaton\nwill not have a sink state and auto-prefix can't apply.\n\nIf this part is somehow controversial I can revert and try to do it\nonly with LUCENE-5879 instead... if it's OK, I'll add some tests\nshowing that PrefixQuery on binary terms works. "
        },
        {
            "id": "comment-14375556",
            "author": "Robert Muir",
            "date": "2015-03-23T08:12:35+0000",
            "content": "i think the boolean is fine. For the other subclasses, they are taking \"patterns\" and inspecting characters for that reason, so thats different. "
        },
        {
            "id": "comment-14376988",
            "author": "Michael McCandless",
            "date": "2015-03-24T00:25:29+0000",
            "content": "New patch, adding tests for binary terms to PrefixQuery.\n\nI also added a new Operations.getSingleton, to work for both unicode\nand binary automata, and fixed CompiledAutomaton to use that when it's\ntrying to \"simplify\" the incoming automaton. "
        },
        {
            "id": "comment-14383512",
            "author": "ASF subversion and git services",
            "date": "2015-03-27T08:22:57+0000",
            "content": "Commit 1669522 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1669522 ]\n\nLUCENE-6367: PrefixQuery now subclasses AutomatonQuery "
        },
        {
            "id": "comment-14383528",
            "author": "ASF subversion and git services",
            "date": "2015-03-27T08:43:51+0000",
            "content": "Commit 1669526 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1669526 ]\n\nLUCENE-6367: PrefixQuery now subclasses AutomatonQuery "
        },
        {
            "id": "comment-14383797",
            "author": "ASF subversion and git services",
            "date": "2015-03-27T13:17:16+0000",
            "content": "Commit 1669577 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1669577 ]\n\nLUCENE-6367: correct CHANGES entry: PrefixQuery already operated in binary term space "
        },
        {
            "id": "comment-14383799",
            "author": "ASF subversion and git services",
            "date": "2015-03-27T13:17:42+0000",
            "content": "Commit 1669578 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1669578 ]\n\nLUCENE-6367: correct CHANGES entry: PrefixQuery already operated in binary term space "
        },
        {
            "id": "comment-14495244",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:14+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}