{
    "id": "LUCENE-8311",
    "title": "Leverage impacts for phrase queries",
    "details": {
        "components": [],
        "status": "Open",
        "resolution": "Unresolved",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Minor",
        "type": "Improvement"
    },
    "description": "Now that we expose raw impacts, we could leverage them for phrase queries.\n\nFor instance for exact phrases, we could take the minimum term frequency for each unique norm value in order to get upper bounds of the score for the phrase.",
    "attachments": {
        "LUCENE-8311.patch": "https://issues.apache.org/jira/secure/attachment/12924509/LUCENE-8311.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16483737",
            "author": "Adrien Grand",
            "content": "Here is a patch that builds on LUCENE-8312 and the output of a luceneutil run:\n\n\n               LowPhrase       23.35      (2.1%)       16.05      (1.1%)  -31.3% ( -33% -  -28%)\n        HighSloppyPhrase       26.90      (5.1%)       23.84      (3.8%)  -11.4% ( -19% -   -2%)\n       HighTermMonthSort      155.27     (13.1%)      138.14     (11.0%)  -11.0% ( -31% -   15%)\n         MedSloppyPhrase       18.12      (4.6%)       16.20      (3.2%)  -10.6% ( -17% -   -2%)\n         LowSloppyPhrase      236.36      (5.4%)      218.12      (4.5%)   -7.7% ( -16% -    2%)\n   HighTermDayOfYearSort       89.47     (11.5%)       84.16     (10.1%)   -5.9% ( -24% -   17%)\n                HighTerm     1463.31      (3.9%)     1402.12      (3.4%)   -4.2% ( -11% -    3%)\n                  IntNRQ       29.88      (6.8%)       28.65      (6.8%)   -4.1% ( -16% -   10%)\n                 MedTerm     1721.26      (3.8%)     1672.73      (3.2%)   -2.8% (  -9% -    4%)\n                  Fuzzy2      112.51      (5.1%)      109.41      (4.9%)   -2.8% ( -12% -    7%)\n                 LowTerm     2469.28      (3.8%)     2414.68      (3.5%)   -2.2% (  -9% -    5%)\n             MedSpanNear       85.48      (4.1%)       84.02      (3.9%)   -1.7% (  -9% -    6%)\n            HighSpanNear       10.03      (4.4%)        9.86      (4.1%)   -1.7% (  -9% -    7%)\n                  Fuzzy1      153.76      (4.9%)      151.56      (4.0%)   -1.4% (  -9% -    7%)\n              OrHighHigh       20.38      (3.2%)       20.18      (3.0%)   -1.0% (  -6% -    5%)\n               OrHighMed       72.71      (2.5%)       72.05      (2.4%)   -0.9% (  -5% -    4%)\n                 Respell      163.99      (2.1%)      162.75      (2.3%)   -0.8% (  -5% -    3%)\n                Wildcard       39.17      (5.7%)       38.90      (5.0%)   -0.7% ( -10% -   10%)\n                 Prefix3       45.93      (7.2%)       45.72      (6.6%)   -0.5% ( -13% -   14%)\n              AndHighMed      147.08      (2.0%)      146.55      (3.1%)   -0.4% (  -5% -    4%)\n             AndHighHigh       52.33      (2.0%)       52.25      (3.6%)   -0.2% (  -5% -    5%)\n               OrHighLow      331.39      (3.4%)      334.43      (2.5%)    0.9% (  -4% -    7%)\n              AndHighLow      603.54      (3.6%)      611.77      (3.8%)    1.4% (  -5% -    9%)\n             LowSpanNear        7.87     (11.1%)        8.04      (6.9%)    2.2% ( -14% -   22%)\n               MedPhrase       94.59      (1.6%)      108.41      (1.9%)   14.6% (  10% -   18%)\n              HighPhrase       11.74      (2.8%)      109.04     (24.6%)  828.7% ( 779% -  880%)\n\n\n\nIt helps HighPhrase a lot, but hurts LowPhrase a bit. More generally, this change helps most when at least one of the searched terms mostly occurs within the phrase. For instance \"york\" mostly appears in the \"new york\" phrase in the wikipedia corpus that we use, so the \"new york\" phrase gets a huge speedup. This is not the case for LowPhrase entries like \"median age\" or \"his family\", which get worse latencies because they need to read impacts from the index and compute score upper bounds.\n\nI tried to implement impacts on sloppy phrases by summing up frequencies but it didn't help since the score upper bounds were way higher than the scores that were actually computed. The reason why they are slower according to luceneutil is that the refactoring made them use the impacts enums rather than simple postings enums to iterate doc ids. ",
            "date": "2018-05-22T09:57:22+0000"
        },
        {
            "id": "comment-16483764",
            "author": "Robert Muir",
            "content": "I wonder if its difficult to test with another similarity such as a DFR model? I'm only asking because I'm a little concerned that the bogus way we compute \"phrase IDF\" for BM25Similarity & ClassicSimilarity is getting in your way. \n\nAll the other models use a more sane approach (scores like a disjunction internally). BM25 carried along the brain damage of ClassicSimilarity just because it was trying to minimize differences, but not for any particular good reason. ",
            "date": "2018-05-22T10:29:51+0000"
        },
        {
            "id": "comment-16483899",
            "author": "Adrien Grand",
            "content": "Unfortunately I don't think this is due to this scoring issue, but rather to the fact that a single position of a given term is allowed to be part of several matches in sloppy phrases. For instance if the query is \"the fox\"~4, and the and fox have respective term frequencies of 5 and 1. Then we can assume that the maximum frequency is 1 for an exact phrase (the min of both freqs). But if the query is a sloppy phrase query, we could have a frequency of 4 if a document has 5 occurrences of the at position N (as synonyms of each other) and 1 occurrence of fox at position N+1. Yet such documents that trigger the maximum frequency do not exist in practice, which causes the score upper bounds that we compute to be significantly higher than the scores that are computed in practice, so no blocks of documents are ever skipped because their score is not competitive. ",
            "date": "2018-05-22T12:52:24+0000"
        },
        {
            "id": "comment-16483907",
            "author": "Robert Muir",
            "content": "Yeah, I was thinking more along the lines of LowPhrase (still exact scoring). Sloppy is a whole nother beast  ",
            "date": "2018-05-22T13:03:55+0000"
        },
        {
            "id": "comment-16484120",
            "author": "Adrien Grand",
            "content": "Here is a run with DFR I(ne)L1:\n\n\n               LowPhrase       19.89      (1.2%)       16.59      (1.0%)  -16.6% ( -18% -  -14%)\n               MedPhrase       15.94      (1.2%)       13.36      (1.1%)  -16.1% ( -18% -  -14%)\n       HighTermMonthSort       90.26     (10.9%)       81.72     (11.6%)   -9.5% ( -28% -   14%)\n        HighSloppyPhrase        1.84      (1.9%)        1.69      (2.2%)   -7.9% ( -11% -   -3%)\n         LowSloppyPhrase        7.87      (2.0%)        7.28      (2.5%)   -7.4% ( -11% -   -3%)\n         MedSloppyPhrase       10.17      (1.6%)        9.43      (2.0%)   -7.3% ( -10% -   -3%)\n   HighTermDayOfYearSort       64.33     (11.6%)       60.25     (10.4%)   -6.3% ( -25% -   17%)\n                HighTerm      476.13      (2.5%)      452.30      (1.8%)   -5.0% (  -9% -    0%)\n                  Fuzzy1      211.47      (4.1%)      203.28      (3.3%)   -3.9% ( -10% -    3%)\n                  IntNRQ       31.99      (2.5%)       30.96      (7.6%)   -3.2% ( -12% -    6%)\n                 MedTerm      653.93      (2.4%)      634.02      (1.8%)   -3.0% (  -7% -    1%)\n                  Fuzzy2      218.64      (5.9%)      212.25      (5.4%)   -2.9% ( -13% -    8%)\n              OrHighHigh       17.28      (1.6%)       16.93      (1.7%)   -2.0% (  -5% -    1%)\n                 LowTerm     1405.19      (2.9%)     1380.15      (2.3%)   -1.8% (  -6% -    3%)\n             AndHighHigh       21.96      (2.1%)       21.62      (2.5%)   -1.5% (  -5% -    3%)\n               OrHighMed       59.73      (1.5%)       58.89      (1.7%)   -1.4% (  -4% -    1%)\n                 Prefix3       73.07      (4.8%)       72.07      (5.8%)   -1.4% ( -11% -    9%)\n                Wildcard       64.42      (3.6%)       63.72      (4.5%)   -1.1% (  -8% -    7%)\n                 Respell      181.31      (2.4%)      180.69      (2.3%)   -0.3% (  -4% -    4%)\n              AndHighLow      982.32      (2.5%)      981.63      (3.1%)   -0.1% (  -5% -    5%)\n              AndHighMed       47.62      (2.0%)       47.60      (2.5%)   -0.0% (  -4% -    4%)\n             LowSpanNear       49.59      (3.4%)       49.65      (3.0%)    0.1% (  -6% -    6%)\n               OrHighLow      314.16      (2.2%)      314.60      (1.7%)    0.1% (  -3% -    4%)\n            HighSpanNear        5.92      (4.6%)        5.98      (4.1%)    1.0% (  -7% -   10%)\n             MedSpanNear        5.53      (6.7%)        5.66      (5.5%)    2.2% (  -9% -   15%)\n              HighPhrase        3.87      (1.5%)        4.36      (1.6%)   12.6% (   9% -   15%)\n\n ",
            "date": "2018-05-22T15:12:29+0000"
        }
    ]
}