{
    "id": "LUCENE-889",
    "title": "Standard tokenizer with punctuation output",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "2.1",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "This patch adds punctuation (comma, period, question mark and exclamation point)  tokens as output from the StandardTokenizer, and filters them out in the StandardFilter.\n\n(I needed them for text classification reasons.)",
    "attachments": {
        "standard.patch": "https://issues.apache.org/jira/secure/attachment/12358216/standard.patch",
        "test.patch": "https://issues.apache.org/jira/secure/attachment/12358217/test.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-05-25T10:39:51+0000",
            "content": "standard.patch is root src/java/org/apache/lucene/analysis\ntest.patch is root src/test/org/apache/lucene/analysis\n\nI'm sorry about the non-trunk patch. My local copy of Lucene is a bit messed up. ",
            "author": "Karl Wettin",
            "id": "comment-12499029"
        },
        {
            "date": "2007-05-25T13:57:08+0000",
            "content": "This patch concerns me.  This changes default behavior in a very basic and commonly used piece of Lucene.  At the very least this should be made entirely optional and off by default.  \n\nThoughts? ",
            "author": "Erik Hatcher",
            "id": "comment-12499085"
        },
        {
            "date": "2007-05-25T15:30:15+0000",
            "content": "Erik Hatcher [25/May/07 06:57 AM]\n> This patch concerns me. This changes default behavior\n> in a very basic and commonly used piece of Lucene. At \n> the very least this should be made entirely optional and\n> off by default.\n>\n> Thoughts? \n\nIt is off by default. The punctuation comes out from the tokenizer, but the StandardAnalyzer uses a StandardFilter, and the StandardFilter will filter out the punctuation tokens. In order to get the punctuation, one needs to use a plain StandardTokenizer. ",
            "author": "Karl Wettin",
            "id": "comment-12499117"
        },
        {
            "date": "2007-05-25T18:14:00+0000",
            "content": "> In order to get the punctuation, one needs to use a plain StandardTokenizer.\n\nI believe that is Erik's point. StandardTokenizer is a public class that many people use directly (specifically: every one who has ever posted a question about changing the behavior of StandardAnalyzer and been given the stock answer \"write your own Analyzer that uses the same Tokenizer and change/adds the list of TokenFilters. ",
            "author": "Hoss Man",
            "id": "comment-12499193"
        },
        {
            "date": "2007-05-25T19:50:21+0000",
            "content": "Hoss Man [25/May/07 11:14 AM]\n> > In order to get the punctuation, one needs to use a plain StandardTokenizer.\n>\n> I believe that is Erik's point. StandardTokenizer is a public class that many\n> people use directly (specifically: every one who has ever posted a question\n> about changing the behavior of StandardAnalyzer and been given the stock\n> answer \"write your own Analyzer that uses the same Tokenizer and\n> change/adds the list of TokenFilters.\n\nAha. My JavaCC-skills aren't that great. I'll look in to it.\n\nI presume something like \n\n    isTokenizingPuctuation() && token = <PUNCTUATION> |\n\nis possible. ",
            "author": "Karl Wettin",
            "id": "comment-12499210"
        },
        {
            "date": "2008-04-12T18:17:46+0000",
            "content": "artifact ",
            "author": "Karl Wettin",
            "id": "comment-12588297"
        }
    ]
}