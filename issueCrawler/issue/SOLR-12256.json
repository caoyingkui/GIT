{
    "id": "SOLR-12256",
    "title": "Aliases and eventual consistency (should use sync())",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.3.1"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "ZkStateReader.AliasesManager.update() reads alias info from ZK into the ZkStateReader. \u00a0This method is called in ~5 places\u00a0(+2 for tests). \u00a0In at least some of these places, the caller assumes that the alias\u00a0info is subsequently up to date when in fact this might not be so since ZK is allowed to return a stale value. \u00a0ZooKeeper.sync() can be called to force an up to date value. \u00a0As with sync(), AliasManager.update() ought not to be called\u00a0aggressively/commonly, only in certain circumstances (e.g. after\u00a0failing to resolve stuff that would otherwise return an error).\n\nAnd related to this eventual consistency issue, SetAliasPropCmd will throw an exception if the alias doesn't exist. \u00a0Fair enough, but sometimes (as seen in some tests), the node receiving the command to update Alias properties is simply \"behind\"; it does not yet know about an alias that other nodes know about. \u00a0I believe this is the cause of some failures in\u00a0AliasIntegrationTest; perhaps others.",
    "attachments": {
        "SOLR-12256.patch": "https://issues.apache.org/jira/secure/attachment/12920072/SOLR-12256.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-20T20:14:47+0000",
            "content": "Patch notes:\n\n\tZkStateReader: AliasesManager.update() add call to ZooKeeper.sync()\n\tSetAliasPropCmd:\n\t\n\t\teagerly call\u00a0AliasesManager.update(). \u00a0Setting alias props won't be called in high frequency so I think this is ok.\n\t\tImprove efficiency by using the the overloaded method of .applyModificationAndExportToZk that takes a Map instead of making modifications one at a time.\n\t\n\t\n\tAliasIntegrationTest:\n\t\n\t\tcomment away BadApple annotations. \u00a0I'm looking at these things.\n\t\tMinor inlining of needless UnaryOperator local vars\n\t\n\t\n\tCreateRoutedAliasTest:\u00a0comment away BadApple annotations. \u00a0I'm looking at these things.\n\tTimeRoutedAliasUpdateProcessorTest: added more diagnostic logging and cleaned up some indentation and other minor stuff.\n\n\n\nI'm going to commit this right away and keep the issue open a bit to see the effects (hopefully no Jenkins failures).\n\nFurthermore, I looked at two separate\u00a0TimeRoutedAliasUpdateProcessorTest failures by Jenkins. \u00a0These failures I'm certain have (almost) nothing to do with the above.\n\n(1)\u00a0Timed out creating the collection alias + \"_2017-10-23\" which is at a point before any actual TRA stuff is happening. \u00a0I looked at the logs carefully and I have no idea why it timed out. \u00a0It seems the collection was created (shards were being made) then a long pause of ~165 seconds and then the timeout failure. \u00a0I'll keep an eye on this... I'm keeping the logs to compare.\n\n(2) After\u00a0the comment \"manipulate the config\" we configure the collection created before this step. \u00a0We use the V2 API. \u00a0But when it got to Solr, the node receiving it didn't know about this collection and so it failed. \u00a0Note that the V1 API will not immediately fail, it will\u00a0internally call AliasesManager.update() and then do a retry. \u00a0Wether or not an alias is actually being referenced, this has the effect of giving the V1 API a little bit more time to see the collection or alias. \u00a0I'll file a separate issue about this. ",
            "author": "David Smiley",
            "id": "comment-16446299"
        },
        {
            "date": "2018-04-20T20:22:22+0000",
            "content": "Commit 8f296d0ccf82174f9c612920ce25b928196a1fa8 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8f296d0 ]\n\nSOLR-12256: AliasesManager.update() should call ZooKeeper.sync()\n\n\tSetAliasPropCmd now calls AliasesManager.update() first.\n\tSetAliasPropCmd now more efficiently updates multiple values.\n\tTests: Commented out BadApple annotations on alias related stuff.\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16446305"
        },
        {
            "date": "2018-04-20T20:24:14+0000",
            "content": "Commit b16b380b2cec1614597df6a045599307628988c2 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b16b380 ]\n\nSOLR-12256: AliasesManager.update() should call ZooKeeper.sync()\n\n\tSetAliasPropCmd now calls AliasesManager.update() first.\n\tSetAliasPropCmd now more efficiently updates multiple values.\n\tTests: Commented out BadApple annotations on alias related stuff.\n\n\n\n(cherry picked from commit 8f296d0) ",
            "author": "ASF subversion and git services",
            "id": "comment-16446307"
        },
        {
            "date": "2018-04-20T20:29:17+0000",
            "content": "Commit 566c07f7de3ada3a537d34ec10a38565f5094398 in lucene-solr's branch refs/heads/branch_7_3 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=566c07f ]\n\nSOLR-12256: AliasesManager.update() should call ZooKeeper.sync()\n\n\tSetAliasPropCmd now calls AliasesManager.update() first.\n\tSetAliasPropCmd now more efficiently updates multiple values.\n\tTests: Commented out BadApple annotations on alias related stuff.\n\n\n\n(cherry picked from commit b16b380) ",
            "author": "ASF subversion and git services",
            "id": "comment-16446314"
        }
    ]
}