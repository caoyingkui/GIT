{
    "id": "LUCENE-5501",
    "title": "Out-of-order collection testing",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.8"
        ]
    },
    "description": "Collectors have the ability to declare whether or not they support out-of-order collection, but since most scorers score in order this is not well tested.",
    "attachments": {
        "LUCENE-5501-2.patch": "https://issues.apache.org/jira/secure/attachment/12633761/LUCENE-5501-2.patch",
        "LUCENE-5501.patch": "https://issues.apache.org/jira/secure/attachment/12633392/LUCENE-5501.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13924008",
            "author": "Adrien Grand",
            "content": "Here is a simple patch I've been playing with:\n\n\tAssertingWeight.scoresDocsOutOfOrder randomly returns true in order to trigger the use of our top docs collectors that tie-break on doc id,\n\tAssertingScorer randomly scores in random order when the collector says it supports it\n\n\n\nIt found a bug in the grouping collector whose acceptDocsOutOfOrder method returns true although the collect method has a comment that explicitely says that the comparison works because doc IDs come in order. ",
            "date": "2014-03-07T16:19:23+0000"
        },
        {
            "id": "comment-13924011",
            "author": "Robert Muir",
            "content": "Are you sure? I think its ok overall, but of course could be better:\n\nFrom a line coverage perspective, most of these are at or very close to 100%\n\nLooking at test contributions against each, all the collectors in TopScore* look like they get beat up pretty well.\nTopField* is not so great, but with several tests trying to explicitly iterate over all of them (TestSearchAfter, TestExpressionSorts, etc). More tests for these sorting ones might be good, but I don't think the situation is so bad?\n\nhttps://builds.apache.org/job/Lucene-Solr-Clover-trunk/clover/org/apache/lucene/search/TopScoreDocCollector.html#TopScoreDocCollector\nhttps://builds.apache.org/job/Lucene-Solr-Clover-trunk/clover/org/apache/lucene/search/TopFieldCollector.html#TopFieldCollector ",
            "date": "2014-03-07T16:21:29+0000"
        },
        {
            "id": "comment-13924032",
            "author": "Adrien Grand",
            "content": "I was not thinking about these collectors at all, I think they are very-well tested indeed! I was more thinking about more exotic collectors, like those that are used for grouping or joins that won't get out-of-order testing unless they use a boolean query. ",
            "date": "2014-03-07T16:37:07+0000"
        },
        {
            "id": "comment-13924088",
            "author": "Michael McCandless",
            "content": "+1, I love this patch.  You shuffle the docIDs from the scorer before delivering to the collector, if the collector claims it can accept out-of-order hits.\n\nLUCENE-4950 is related: I tried to fix AssertingIndexSearcher to use AssertingCollector but hit strange exceptions with ConstantScoreQuery that I never explained.  AssertingCollector would verify that if the collector said it could not accept docs out of order, then the scorer does not in fact deliver docs out of order.\n\nAlso, LUCENE-5487 will increase how often out-of-order scoring is \"allowed\", because BooleanScorer will now allow the sub-scorers to score out of order. ",
            "date": "2014-03-07T17:33:56+0000"
        },
        {
            "id": "comment-13925569",
            "author": "ASF subversion and git services",
            "content": "Commit 1575873 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1575873 ]\n\nLUCENE-5501: AssertingScorer now randomly collects documents in random order when the collector says it supports it. ",
            "date": "2014-03-10T09:02:01+0000"
        },
        {
            "id": "comment-13925582",
            "author": "ASF subversion and git services",
            "content": "Commit 1575874 from Adrien Grand in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1575874 ]\n\nLUCENE-5501: AssertingScorer now randomly collects documents in random order when the collector says it supports it. ",
            "date": "2014-03-10T09:17:04+0000"
        },
        {
            "id": "comment-13925671",
            "author": "Adrien Grand",
            "content": "Thanks for reviewing, Mike! ",
            "date": "2014-03-10T11:27:14+0000"
        },
        {
            "id": "comment-13926118",
            "author": "Adrien Grand",
            "content": "Thinking about it again, I realized it would be possible to make it better by wrapping the collector. This way out-of-order scoring can be tested against a larger variety of scorers such as ConstantQuery's scorer (which is currently untested because it overrides score(Collector)). ",
            "date": "2014-03-10T19:52:51+0000"
        },
        {
            "id": "comment-13943119",
            "author": "Adrien Grand",
            "content": "Updated patch following the BulkScorer refactoring. ",
            "date": "2014-03-21T14:58:45+0000"
        },
        {
            "id": "comment-13960134",
            "author": "ASF subversion and git services",
            "content": "Commit 1584829 from jpountz@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1584829 ]\n\nLUCENE-5501: Improved out-of-order collection testing. ",
            "date": "2014-04-04T17:08:03+0000"
        },
        {
            "id": "comment-13960214",
            "author": "ASF subversion and git services",
            "content": "Commit 1584844 from jpountz@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1584844 ]\n\nLUCENE-5501: Improved out-of-order collection testing. ",
            "date": "2014-04-04T18:12:29+0000"
        },
        {
            "id": "comment-13982649",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:26:05+0000"
        }
    ]
}