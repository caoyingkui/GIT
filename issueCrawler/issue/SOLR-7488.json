{
    "id": "SOLR-7488",
    "title": "suspicious FVH init code in DefaultSolrHighlighter even when FVH should not be used",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "4.10",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Rich Hume reported gettting errors from FastVectorHighlighter, evidently while using the the surround query parser, even though he was not trying to  \"useFastVectorHighlighter\"\n\nmy naive reading of the code leads me to believe that DefaultSolrHighlighter is incorrectly attempting to initialize a FVH instance even when it shouldn't be \u2013 which appears to cause failures in cases where the query in use is not something that can be handled by the FVH.\n\nNot sure how to reproduce at the moment \u2013 but the code smells fishy.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-29T17:05:38+0000",
            "author": "Hoss Man",
            "content": "Details from initial user report...\n\n\nAfter we upgraded Solr from 4.5.1 to 4.10.4, we started seeing the following UnsupportedOperationException logged\nrepeatedly.  We do not have highlighting configured to useFastVectorHighlighter.  The logged stack trace has given\nme little to go on.  I was hoping this is a problem others have seen (but my searching has yielded nothing).\n\nThanks\nRich\n\nnull:java.lang.UnsupportedOperationException\n        at org.apache.lucene.queryparser.surround.query.RewriteQuery.clone(RewriteQuery.java:80)\n        at org.apache.lucene.queryparser.surround.query.RewriteQuery.clone(RewriteQuery.java:23)\n        at org.apache.lucene.search.vectorhighlight.FieldQuery.applyParentBoost(FieldQuery.java:156)\n        at org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(FieldQuery.java:96)\n        at org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(FieldQuery.java:96)\n        at org.apache.lucene.search.vectorhighlight.FieldQuery.<init>(FieldQuery.java:67)\n        at org.apache.lucene.search.vectorhighlight.FastVectorHighlighter.getFieldQuery(FastVectorHighlighter.java:98)\n        at org.apache.solr.highlight.DefaultSolrHighlighter.doHighlighting(DefaultSolrHighlighter.java:401)\n        at org.apache.solr.handler.component.HighlightComponent.process(HighlightComponent.java:144)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:218)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1976)\n\n ",
            "id": "comment-14519733"
        },
        {
            "date": "2015-04-29T17:13:42+0000",
            "author": "Hoss Man",
            "content": "Here's the code in question...\n\n\n897383       koji     // get FastVectorHighlighter instance out of the processing loop\n897383       koji     FastVectorHighlighter fvh = new FastVectorHighlighter(\n897383       koji         // FVH cannot process hl.usePhraseHighlighter parameter per-field basis\n897383       koji         params.getBool( HighlightParams.USE_PHRASE_HIGHLIGHTER, true ),\n897383       koji         // FVH cannot process hl.requireFieldMatch parameter per-field basis\n990301       koji         params.getBool( HighlightParams.FIELD_MATCH, false ) );\n1555369      rmuir     fvh.setPhraseLimit(params.getInt(HighlightParams.PHRASE_LIMIT, SolrHighlighter.DEFAULT_PHRASE_LIMIT));\n1167008      rmuir     FieldQuery fieldQuery = fvh.getFieldQuery( query, searcher.getIndexReader() );\n639490      klaas \n639490      klaas     // Highlight each document\n639490      klaas     DocIterator iterator = docs.iterator();\n639490      klaas     for (int i = 0; i < docs.size(); i++) {\n897383       koji       int docId = iterator.nextDoc();\n897383       koji       Document doc = searcher.doc(docId, fset);\n897383       koji       NamedList docSummaries = new SimpleOrderedMap();\n897383       koji       for (String fieldName : fieldNames) {\n897383       koji         fieldName = fieldName.trim();\n897383       koji         if( useFastVectorHighlighter( params, schema, fieldName ) )\n990301       koji           doHighlightingByFastVectorHighlighter( fvh, fieldQuery, req, docSummaries, docId, doc, fieldName );\n897383       koji         else\n897383       koji           doHighlightingByHighlighter( query, req, docSummaries, docId, doc, fieldName );\n897383       koji       }\n897383       koji       String printId = schema.printableUniqueKey(doc);\n897383       koji       fragments.add(printId == null ? null : printId, docSummaries);\n897383       koji     }\n\n\n\nIt looks like the bug may have been introduced by r1167008 for LUCENE-1889: \"pass the reader to FVH so it can rewrite multitermqueries\" ... because DefaultSolrHighlighter had previously \"optimized\" the FVH call out of the loop, this caused the rewriting to happen even if the user had said they didn't want FVH.\n\nKoji Sekiguchi & David Smiley - can one of you sanity check me here?  (I don't understand the surround parser and/or highlighter well enough to try and write a test case for this) ",
            "id": "comment-14519752"
        },
        {
            "date": "2015-04-29T17:25:57+0000",
            "author": "David Smiley",
            "content": "Chris Hostetter (Unused) I fixed this in SOLR-6692 (for v5.2) along with various other refactorings.  It's now lazy initialized.  This will save performance on wildcard queries too since FVH will expand it even if you will never use the FVH. ",
            "id": "comment-14519771"
        },
        {
            "date": "2015-04-29T17:28:42+0000",
            "author": "Hoss Man",
            "content": "Doh! .. thanks David.  i must have been looking at the 5_1 branch not 5x.\n ",
            "id": "comment-14519777"
        },
        {
            "date": "2015-04-30T03:13:45+0000",
            "author": "Koji Sekiguchi",
            "content": "Thanks David and Hoss! ",
            "id": "comment-14520776"
        },
        {
            "date": "2015-06-15T21:42:23+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close for 5.2.0. ",
            "id": "comment-14586775"
        }
    ]
}