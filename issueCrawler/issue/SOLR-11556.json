{
    "id": "SOLR-11556",
    "title": "Backup/Restore with multiple BackupRepository objects defined results in the wrong repo being used.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Backup/Restore"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I defined two repos for backup/restore, one local and one remote on GCS, e.g.\n\n<backup>\n    <repository name=\"hdfs\" class=\"org.apache.solr.core.backup.repository.HdfsBackupRepository\" default=\"false\">\n     ...\n    </repository>\n    <repository name=\"local\" class=\"org.apache.solr.core.backup.repository.LocalFileSystemRepository\" default=\"false\">\n          <str name=\"location\">/tmp/solr-backups</str>\n    </repository>\n </backup>\n\n\nSince the CollectionHandler does not pass the \"repository\" param along, once the BackupCmd gets the ZkNodeProps, it selects the wrong repo! \n\nThe error I'm seeing is:\n\n2017-10-26 17:07:27.326 ERROR (OverseerThreadFactory-19-thread-1-processing-n:host:8983_solr) [   ] o.a.s.c.OverseerCollectionMessageHandler Collection: product operation: backup failed:java.nio.file.FileSystemNotFoundException: Provider \"gs\" not installed\n        at java.nio.file.Paths.get(Paths.java:147)\n        at org.apache.solr.core.backup.repository.LocalFileSystemRepository.resolve(LocalFileSystemRepository.java:82)\n        at org.apache.solr.cloud.BackupCmd.call(BackupCmd.java:99)\n        at org.apache.solr.cloud.OverseerCollectionMessageHandler.processMessage(OverseerCollectionMessageHandler.java:224)\n        at org.apache.solr.cloud.OverseerTaskProcessor$Runner.run(OverseerTaskProcessor.java:463)\n        at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:229)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:748)\n\n\nNotice the Local backup repo is being selected in the BackupCmd even though I passed repository=hdfs in my backup command, e.g.\n\ncurl \"http://localhost:8983/solr/admin/collections?action=BACKUP&name=foo&collection=foo&location=gs://tjp-solr-test/backups&repository=hdfs\"\n\n \nI think the fix here is to include the repository param, see patch. I'll fix for the next 7.x release and those on 6 can just apply the patch here.",
    "attachments": {
        "SOLR-11556.patch": "https://issues.apache.org/jira/secure/attachment/12894235/SOLR-11556.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-26T22:33:00+0000",
            "content": "patch -p1 -i SOLR-11556.patch ",
            "author": "Timothy Potter",
            "id": "comment-16221361"
        },
        {
            "date": "2017-10-26T22:48:19+0000",
            "content": "Fix is easy enough, but why not just copy all incoming params into the Map in the CollectionsHandler? I don't get the selective copying being done here. ",
            "author": "Timothy Potter",
            "id": "comment-16221384"
        },
        {
            "date": "2017-10-27T01:56:47+0000",
            "content": "Looks good. Core admin APIs may have similar issue? ",
            "author": "Hrishikesh Gadre",
            "id": "comment-16221582"
        },
        {
            "date": "2017-10-27T06:14:28+0000",
            "content": "Hi Tim,\n\nPatch looks good to me.\n\nTestBackupRepositoryFactory tests if the repository gets read properly but no AbstractCloudBackupRestoreTestCase actually defined two repositories to trigger it.\n\nToday TestHdfsCloudBackupRestore defines a custom solr.xml. I think we can do something similar in TestLocalFSCloudBackupRestore - define two repositories in the solr.xml string and getBackupRepoName could return the \"local\" repo name. ",
            "author": "Varun Thacker",
            "id": "comment-16221770"
        },
        {
            "date": "2018-09-27T18:01:29+0000",
            "content": "It looks like this patch has not be integrated into the 7.x branch yet.\u00a0 Any way to submit a request? ",
            "author": "Ryan Rockenbaugh",
            "id": "comment-16630832"
        },
        {
            "date": "2018-09-27T18:06:31+0000",
            "content": "Hi Ryan,\n\nNo promises but I'll plan on tackling this within the next couple of weeks. ",
            "author": "Varun Thacker",
            "id": "comment-16630835"
        },
        {
            "date": "2018-09-27T18:32:03+0000",
            "content": "Thanks\u00a0Varun! ",
            "author": "Ryan Rockenbaugh",
            "id": "comment-16630869"
        }
    ]
}