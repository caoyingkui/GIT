{
    "id": "LUCENE-7113",
    "title": "OfflineSorter and BKD should verify checksums in their temp files",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.0",
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "I am trying to index all 3.2 B points from the latest OpenStreetMaps export.\n\nMy SSDs were not up to this, so I added a spinning magnets disk to beast2.\n\nBut then I was hitting scary bug-like exceptions (ArrayIndexOutOfBoundsException) when indexing the first 2B points, and I finally checked dmesg and saw that my hard drive is dying.\n\nI think it's important that our temp file usages also validate checksums (like we do for all our index files, either at reader open or at merge or CheckIndex), so we can hopefully easily differentiate a bit-flipping IO system from a possible Lucene bug, in the future.",
    "attachments": {
        "LUCENE-7113.patch": "https://issues.apache.org/jira/secure/attachment/12794175/LUCENE-7113.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15201297",
            "author": "Michael McCandless",
            "date": "2016-03-18T10:39:35+0000",
            "content": "Patch.\n\nThis change forces anyone using OfflineSorter to write the\nchecksum at the end of the input, and then pass a\nChecksumIndexInput when creating the ByteSequencesReader.\n\nOfflineSorter then fully validates checksums for its input source,\nand all of its temporary sorted partitions, since it always fully\nconsumes every file.\n\nI also validate if we hit an unexpected exception, adding the\ncorruption as a suppressed exception, like we do for index files, and\nalso validate even if we don't hit an unexpected exception, since the\ncorruption could easily be otherwise un-noticed during the sorting.\n\nBKDWriter also does some validation, but unfortunately it's far\nfrom perfect because it doesn't always fully consume its temp files in\none sweep: it often reads only a slice at a time, at each step of its\nrecursion.\n\nThe slices over the full recursion will in fact add up to a single\nsweep over a given temporary file, however the code is not currently\norganized correctly to \"take advantage\" of this: on each recursion it\nopens a new IndexInput to scan just that one slice, then closes\nit.  I think re-organizing this recursive writer to actually \"be\" a\nsingle sweep is a little too risky at this point (and I'm not yet sure it's\neven possible!).\n\nI did go and upgrade some asserts to real checks, and on unexpected\nexception I check the checksum of the current file we are working on,\nbut even this is not perfect because corruption in an earlier\n(different) temp file might not be noticed until later on.\n\nSo net/net the BKDWriter corruption checks are only best effort,\nbut they still do something (see the crazy added tests!).  We can\nimprove this with time, but I think this is an OK compromise for 6.0. "
        },
        {
            "id": "comment-15201509",
            "author": "Michael McCandless",
            "date": "2016-03-18T14:11:26+0000",
            "content": "New patch ... Rob noticed a couple places where close was not idempotent. "
        },
        {
            "id": "comment-15202673",
            "author": "ASF subversion and git services",
            "date": "2016-03-19T09:17:09+0000",
            "content": "Commit ef7a0125133597cea9e15ec011922f6d70a81b97 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ef7a012 ]\n\nLUCENE-7113: add best-effort checksum verification to temp files written by OfflineSorter and BKDWriter "
        },
        {
            "id": "comment-15202676",
            "author": "ASF subversion and git services",
            "date": "2016-03-19T09:20:09+0000",
            "content": "Commit 70290e8947623199b87600f4f985e72e16f66cf8 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=70290e8 ]\n\nLUCENE-7113: add best-effort checksum verification to temp files written by OfflineSorter and BKDWriter "
        },
        {
            "id": "comment-15202684",
            "author": "ASF subversion and git services",
            "date": "2016-03-19T09:37:59+0000",
            "content": "Commit e458385b5e94d146853fabe5a94f2c9b0af31800 in lucene-solr's branch refs/heads/branch_6_0 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e458385 ]\n\nLUCENE-7113: add best-effort checksum verification to temp files written by OfflineSorter and BKDWriter\n\nConflicts:\n\tlucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java\n\tlucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter.java\n\tlucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointReader.java\n\tlucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter.java "
        },
        {
            "id": "comment-15279262",
            "author": "Hoss Man",
            "date": "2016-05-10T23:57:57+0000",
            "content": "\nManually correcting fixVersion per Step #S6 of LUCENE-7271 "
        }
    ]
}