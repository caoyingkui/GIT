{
    "id": "SOLR-629",
    "title": "Fuzzy search with eDisMax request handler",
    "details": {
        "affect_versions": "7.4",
        "status": "Reopened",
        "fix_versions": [],
        "components": [
            "query parsers"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The DisMax search handler doesn't support fuzzy queries which would be quite useful for our usage of Solr and from what I've seen on the list, it's something several people would like to have.\n\nFollowing this discussion http://markmail.org/message/tx6kqr7ga6ponefa#query:solr%20dismax%20fuzzy+page:1+mid:c4pciq6rlr4dwtgm+state:results , I added the ability to add fuzzy query field in the qf parameter. I kept the patch as conservative as possible.\n\nThe syntax supported is: fieldOne^2.3 fieldTwo~0.3 fieldThree~0.2^-0.4 fieldFour as discussed in the above thread.\n\nThe recursive query aliasing should work even with fuzzy query fields using a very simple rule: the aliased fields inherit the minSimilarity of their parent, combined with their own one if they have one.\n\nOnly the qf parameter support this syntax atm. I suppose we should make it usable in pf too. Any opinion?\n\nComments are very welcome, I'll spend the time needed to put this patch in good shape.\n\nThanks.",
    "attachments": {
        "SOLR-629.patch": "https://issues.apache.org/jira/secure/attachment/12677416/SOLR-629.patch",
        "dismax_fuzzy_query_field.v0.1.diff": "https://issues.apache.org/jira/secure/attachment/12385976/dismax_fuzzy_query_field.v0.1.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Guillaume Smet",
            "id": "comment-12683411",
            "date": "2009-03-19T10:22:35+0000",
            "content": "Here is the same patch updated to trunk to resolve a few conflicts.\n\nIt would be nice to have some feedback as it could be a nice enhancement for DisMax in Solr 1.4. I can rework it if needed.\n\nWe run several instances of Solr with this patch for more than 8 months now as we really needed fuzzy search with DisMax.\n\nThanks. "
        },
        {
            "author": "Mikelis Zalais",
            "id": "comment-12688693",
            "date": "2009-03-24T14:18:02+0000",
            "content": "Hi, is there any progress with this? "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12688775",
            "date": "2009-03-24T18:08:03+0000",
            "content": "Mikelis: have you tried it?  Does it work well and as described?  Please do and leave your feedback here (or fixes in form of another patch).\n\n\nI haven't looked at the patch, but I like the example syntax.\n\nQuestion about \"fieldThree~0.2^-0.4\" \u2013 is that a negative boost?  huh? "
        },
        {
            "author": "Guillaume Smet",
            "id": "comment-12688784",
            "date": "2009-03-24T18:41:18+0000",
            "content": "Hi Otis,\n\nThe proposed syntax is taken from the unit test which is based on the existing one ( see testParseFieldBoosts() in http://svn.apache.org/viewvc/lucene/solr/trunk/src/test/org/apache/solr/util/SolrPluginUtilsTest.java?revision=701485&view=markup ). The existing one contains a negative boost. So does the new one. I didn't change the way Solr parses the values.\nPerhaps we need to be more strict about it?\n\nThere is still an unanswered question from my initial proposal:\n\"Only the qf parameter supports this syntax atm. I suppose we should make it usable in pf too. Any opinion?\"\n\nThat said, it's probably better to validate the general approach of the patch before thinking about generalizing it.\n\n\u2013 \nGuillaume "
        },
        {
            "author": "Chris Williams",
            "id": "comment-12704450",
            "date": "2009-04-30T02:50:04+0000",
            "content": "Hi,\nFYI: the patch didn't seem to apply cleanly on 1.3, but worked fine on 1.4\n\nAnyways, I'm having some trouble with this patch.  It doesn't seem to respect any of my query filters.\n\nFor example, I have a dismax query \nwhere q=the game\nwhere qf = 'title_words~.06'\n\nwhere my 'title_words' field is:\n    <fieldType name=\"textExactWSTokenized\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n      <analyzer>\n        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n        <filter class=\"solr.LowerCaseFilterFactory\"/>\n\t<filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\"/>\n        <filter class=\"solr.ISOLatin1AccentFilterFactory\"/>\n\t<filter class=\"solr.StandardFilterFactory\"/>\n\t<filter class=\"solr.TrimFilterFactory\" />\n        <filter class=\"solr.RemoveDuplicatesTokenFilterFactory\"/>\n      </analyzer>\n    </fieldType>\n\nI get this as the parsed query:\n\"parsedquery_toString\"=>\"+(((title_words:the~0.6)~0.01 (title_words:game~0.6)~0.01)~2) ()\"\n(I don't want it running anything on the word 'the' because its a stop word)\n\nYet if I change qf to just 'title_words' and remove the fuzziness, same query text, I get this:\n\"parsedquery_toString\"=>\"+(((title_words:game)~0.01)~1) ()\"\n(which is what I want) "
        },
        {
            "author": "Guillaume Smet",
            "id": "comment-12704491",
            "date": "2009-04-30T06:13:21+0000",
            "content": "FYI: the patch didn't seem to apply cleanly on 1.3, but worked fine on 1.4\n\nThe old version of the patch which is still attached should work with 1.3. At least, I use it on a pre 1.3 version.\n\nThe new one is rebased on 1.4 but is the exact same patch.\n\n\nI get this as the parsed query:\n\"parsedquery_toString\"=>\"+(((title_words:the~0.6)~0.01 (title_words:game~0.6)~0.01)~2) ()\"\n(I don't want it running anything on the word 'the' because its a stop word)\n\nAFAIK, it's the standard behaviour for fuzziness (and for wildcard queries). The stop word isn't removed because the~0.06 != the, it might be another word.\n\nCould any Solr guy confirm?\n\nNote that 0.06 is really too low IMHO. I usually use 0.8 or 0.7 for fuzziness.\n\n\u2013 \nGuillaume "
        },
        {
            "author": "Chris Williams",
            "id": "comment-12704525",
            "date": "2009-04-30T08:16:59+0000",
            "content": "sorry, it was a typo. I was using 0.6 for the fuzziness, not 0.06.\n\n(I have about a week and half experience with solr right now, so bare with me)\nAssuming you're right about it being the default behavior, is there any alternative way to get it to work? Any fuzzy search with my example above that has a stop word in it doesn't return any results.  What kind of field type do you run fuzzy search on? Do you basically just run it on a field that has no filters on it?\n\nthanks,\nChris "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-13188044",
            "date": "2012-01-17T21:44:13+0000",
            "content": "I've updated this to work with Solr 3.3.0, the version we're using locally. Is there interest in getting this back into trunk? "
        },
        {
            "author": "David Smiley",
            "id": "comment-13188212",
            "date": "2012-01-18T02:27:09+0000",
            "content": "By \"we're using locally\" do you mean that MarkLogic is using Solr instead of their(your) own product? "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-13188221",
            "date": "2012-01-18T02:47:03+0000",
            "content": "I'm at Chegg now. MarkLogic uses MarkLogic. "
        },
        {
            "author": "Mikelis Zalais",
            "id": "comment-13196011",
            "date": "2012-01-30T09:49:07+0000",
            "content": "Walter, could you post the patch? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13835724",
            "date": "2013-11-30T13:26:57+0000",
            "content": "2013 Old JIRA cleanup "
        },
        {
            "author": "Fumiaki Yamaoka",
            "id": "comment-14185880",
            "date": "2014-10-27T21:48:39+0000",
            "content": "I'm working with Walter at Chegg. I have attempted to port the work Walter has done to make fuzzy match work on qf field on Solr 3.3 to Solr 4.7 branch. Please see the attachment for the changes. Would appreciate some feedback. "
        },
        {
            "author": "Fumiaki Yamaoka",
            "id": "comment-14197239",
            "date": "2014-11-05T00:48:00+0000",
            "content": "Fixed to work with alias. Added a few test cases. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-14356518",
            "date": "2015-03-11T09:18:03+0000",
            "content": "For pf, pf2 anf pf3 the ~ is already supported, but has the meaning of slop, not fuzzy. E.g. pf=body~15^5 is equivalent to pf=body^5&ps=15 "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-14533128",
            "date": "2015-05-07T18:19:28+0000",
            "content": "We could still use ~ for fuzzy in qf, or we could choose a different character.\n\nSlop is meaningless for single term matching, like qf. "
        },
        {
            "author": "Stephan Lagraulet",
            "id": "comment-14559413",
            "date": "2015-05-26T17:11:39+0000",
            "content": "We would also need this feature that would allow instead of passing it in the query to specify on which field it would be applied. "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-15638073",
            "date": "2016-11-04T23:43:39+0000",
            "content": "We need to rename this issue to say \"eDisMax\" instead of \"DisMax\". The last patch for dismax was for Solr 1.3. The 3.x and 4.x patches are for edismax. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-15662035",
            "date": "2016-11-13T20:26:22+0000",
            "content": "It would be great to support full query syntax for qf clauses, eg when parent child fields are searched it needs to support {!parent}, {!child}. Any ideas?   "
        },
        {
            "author": "Sidharth Negi",
            "id": "comment-16625412",
            "date": "2018-09-24T06:14:03+0000",
            "content": "The patch doesn't seem to work with Solr 4.x, 5.x, 6.x and above. Which version is this patch compatible with and has there been any progress on this for 6.x and above? "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-16625868",
            "date": "2018-09-24T14:09:43+0000",
            "content": "The patch was for 4.10. Before that, I did it for 3.x and 1.3.\n\nIt is on my list to re-port this to 7.x, but I'm getting a little tired of re-porting the same code. Someone else has been doing some work on it, I'll check with them. "
        }
    ]
}