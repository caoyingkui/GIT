{
    "id": "LUCENE-73",
    "title": "QueryParser throws ParseException with fuzzy search",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/queryparser"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.2",
        "resolution": "Incomplete",
        "status": "Closed"
    },
    "description": "The QueryParser sometimes throws an exception when using fuzzy search. This \nappears to happen whenever it can't find any matches. For example, in my \napplication it works fine for \"super~\" but not \"supernova~\", and works for \n\"etc~\" and \"etcs~\" but not \"et~\" or \"etcss~\":\n\norg.apache.lucene.queryParser.ParseException: Lexical error at line 1, column 7.\n  Encountered: <EOF> after : \"\"",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2003-01-13T23:52:13+0000",
            "content": "Could you please provide (attach to this bug report) a simple standalone class\nthe demonstrates this problem?\nJust have the class create RAMDirectory, add a few Documents to it, and then\nquery the index the way you do, so we can see the exception you are getting.\nThanks. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321166"
        },
        {
            "date": "2003-01-14T17:35:29+0000",
            "content": "OK, false alarm - worked fine with simple example. The problem was another piece \nof code silently altering the search string. If no hits were found with a simple \nterm search, a wildcard was being added to automatically widen the search. But \nif the user had already used a fuzzy search, the search string would end up as \n\"term~*\" which of course is invalid. Thanks. ",
            "author": "David Allsopp",
            "id": "comment-12321167"
        }
    ]
}