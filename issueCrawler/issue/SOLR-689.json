{
    "id": "SOLR-689",
    "title": "rename multicore.xml solr.xml",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Per mailing list discussion (see link below) it seems prudent to rename multicore.xml to solr.xml prior to the 1.3 release.\n\nshort summary of the main motivations for doing this...\n\n\n   1) The name of the file corresponds with one specific way it can be\n      used, but may not be applicable to all usages (namely: you can\n      have a multicore.xml file but only use one core)\n   2) The \"first\" config file checked to determine the application's\n      behavior, and what paths will be checked for other config files\n      is named after one specific feature of the application. \n\n\n\n\nGeneral consensus of the thread so far seems to be that this is a good idea, and gives us more options for the future.\n\nhttp://www.nabble.com/Rename-multicore.xml---to18877268.html",
    "attachments": {
        "SOLR-689.patch": "https://issues.apache.org/jira/secure/attachment/12387913/SOLR-689.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12621322",
            "date": "2008-08-10T23:51:36+0000",
            "content": "Patch represents the minimal things needed to accomplish the following:\n\n\texample \"Multi Core\" config is renamed solr.xml\n\texample solr.xml has root tag of <solr> containing <multicore>\n\tMultiCore.java accepts root tag of <solr>, but does not require it .. only cares that <multicore> exists somewhere\n\tMultiCore.java config persistence writes info out to solr.xml and includes <solr> root tag\n\treferences to multicore.xml in CHANGES.txt changed to solr.xml\n\tall tests pass\n\n\n\nThings not attempted in this patch:\n\n\trenaming or refactoring existing methods or classes\n\trenaming config files used by tests from multicore*.xml to solr*.xml\n\tadding root <solr> tag to config files used by tests\n\n\n\n(those things can still be done, but are less crucial in my opinion)\n\nComments?  Objections to this being committed?\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12621326",
            "date": "2008-08-10T23:58:44+0000",
            "content": "PS: the usual caveats about committing patches that involve file renaming apply to this patch.  care should be taken when applying it to ensure that the subsequent commit includes both the file history of \"example/multicore/multicore.xml\" as well as the changes that were made to it after it was renamed. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12621328",
            "date": "2008-08-11T00:46:02+0000",
            "content": "+1\n\nwhats up with the // bit in:\n\n-      persistent = cfg.getBool( \"multicore/@persistent\", false );\n-      adminPath  = cfg.get(     \"multicore/@adminPath\", null );\n-      libDir     = cfg.get(     \"multicore/@sharedLib\", null);\n+      persistent = cfg.getBool( \"//multicore/@persistent\", false );\n+      adminPath  = cfg.get(     \"//multicore/@adminPath\", null );\n+      libDir     = cfg.get(     \"//multicore/@sharedLib\", null);\n\n\n\nis that just safer since we may not be at the root? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12621330",
            "date": "2008-08-11T01:14:04+0000",
            "content": "it's not just safer, the old xpath expressions won't work with <solr> as the root node ... they are evaluated at the document level so \"multicore/@persistent\" requires that the root be <multicore>\n\ni could have changed them to \"solr/multicore/...\" but this way if someone already has a multicore.xml file all they need to do is rename it and it will still work.\n\n (i suppose we could output a warning if it's not rooted with <solr> but for now i wanted to keep the patch as simple as possible to meet the immediate goals) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12621334",
            "date": "2008-08-11T01:37:05+0000",
            "content": "Since we are already throwing a wrench at anyone who has an existing multicore.xml file, I think we should go ahead and make the other name changes:\n\n<multicore adminPath=\"/admin/multicore\" persistent=\"true\" >\n  <core name=\"core0\" instanceDir=\"core0\" />\n  <core name=\"core1\" instanceDir=\"core1\" />\n</multicore>\n\n\n\nto \n\n\n<solr coreAdminHandler=\"/admin/multicore\" persistent=\"true\" >\n  <core name=\"core0\" instanceDir=\"core0\" />\n  <core name=\"core1\" instanceDir=\"core1\" />\n</solr>\n\n\n\nI agree that internal class refactoring can change later (or sooner), but if we muck with the external configs, we should do everything at once. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12621338",
            "date": "2008-08-11T02:01:15+0000",
            "content": "to be clear: with this patch as it stands, the current syntax, with all supported options, is...\n\n<solr>\n  <multicore adminPath=\"/admin/multicore\" persistent=\"true\" sharedLib=\"/shared/lib\">\n    <core name=\"core0\" instanceDir=\"core0\" />\n    <core name=\"core1\" instanceDir=\"core1\" />\n  </multicore>\n</solr>\n\n\n\nmoving \"persistent\" to the <solr> tag makes sense, it's impossible for it to be specific only to the <multicore> block. \n\nrenaming \"adminPath\" to \"coreAdminHandler\" makes sense ... i guess ... but i would think \"coreAdminPath\" or \"coreAdmin\" or \"adminPath\" would still be better vernacular - we're not asking people to specify a handler, we're asking them to specify a path.  The fact that it's a handler isn't something they even need to know about, all they need to know is that this is the relative URL for administer cores.\n\nremoving <multicore> gives me pause ... as a bit of future proofing it seems like it would make sense to collect the list of cores into a common parent (so if, for some reason, we add other stuff unrelated to the list of cores there is a clear delineation.  <cores> perhaps?\n\nHow about...\n\n\n<solr persistent=\"true\" sharedLib=\"/shared/lib\">\n  <cores adminPath=\"/admin/multicore\" >\n    <core name=\"core0\" instanceDir=\"core0\" />\n    <core name=\"core1\" instanceDir=\"core1\" />\n  </cores>\n</solr>\n\n\n\n?\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12621345",
            "date": "2008-08-11T02:20:47+0000",
            "content": "There you go... always looking towards the future \n\nYes, i like that \u2013 keeping adminPath with <cores> makes sense too "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12621389",
            "date": "2008-08-11T09:32:29+0000",
            "content": "MultiCore.java config persistence writes info out to solr.xml and includes <solr> root tag\n\n\nwriter.write(\"</solr>\\n\");\nwriter.write(\"</multicore>\\n\");\n\n\n\nshould be:\n\n\nwriter.write(\"</multicore>\\n\");\nwriter.write(\"</solr>\\n\");\n\n\n\n "
        },
        {
            "author": "Henri Biestro",
            "id": "comment-12621511",
            "date": "2008-08-11T17:28:28+0000",
            "content": "Regarding this issue wrt solr-646, what would be the preferred syntax to declare properties:\nShoud we have a <properties>...</properties> tag to declare them in solr & in core or only in solr ?\nHow about the following example:\n\n\n<solr persistent=\"true\" sharedLib=\"/shared/lib\">\n  <properties>\n    <property name=\"even\">core-122</property>\n    <property name=\"odd\">core-123</property>\n  </properties>\n  <cores adminPath=\"/admin/multicore\" >\n    <core name=\"prod\" instanceDir=\"${even}\" >\n      <property name='updateHandler'>solr.DirectUpdateHandler2</property>\n    </core>\n    <core name=\"tmp\" instanceDir=\"${odd}\">\n      <property name='updateHandler'>solr.DirectUpdateHandler2</property>\n    </core>\n  </cores>\n</solr>\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12621539",
            "date": "2008-08-11T18:30:53+0000",
            "content": "Patch updated to reflect recent discussion and fix bug Henri (Koji) noticed about generating completely invalid XML in the persist method.  \u2013 we clearly don't have anything testing that.\n\nI'd like to commit this tonight (in about 8 or 9 hours).\n\nBefore i do: would someone who knows more about the \"multicore persistence\" mind writing a test for that?  It can be, and probably should be, independent from this patch, but if you attach it here i'll commit as well\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12621541",
            "date": "2008-08-11T18:33:08+0000",
            "content": "Regarding this issue wrt solr-646, what would be the preferred syntax to declare properties:\n\nHenri: I don't think anything in this issue really impacts the semantics of SOLR-646, it's a question of intent: if the intent is to declare properties that are valid anywhere in the file, then they should be children of the <solr> tag. if the intent is to create properties that apply to all cores, but can't be used elsewhere in the solr.xml, they should be in the <cores> tag.  we could have both, or just one depending on the use cases people have identified. "
        },
        {
            "author": "Henri Biestro",
            "id": "comment-12621570",
            "date": "2008-08-11T19:54:11+0000",
            "content": "HossMan; I understand, my question was just syntactical.\nThe patch today does accomodate properties created at the solr (aka multicore) & core levels (which allows a core to override \"global\" defaults) .\nI just wanted to know if there were preferences regarding \"grouping\" them under a \"properties\" tag or not. (Much like having <cores> or not to group cores) so I could prepare a new version of the solr-646 patch (and add a persist test  including properties).\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12621633",
            "date": "2008-08-11T22:33:14+0000",
            "content": "I just wanted to know if there were preferences regarding \"grouping\" them under a \"properties\" tag or not. (Much like having <cores> or not to group cores)\n\ni don't really have an opinion on that ... to my mind: <properties> isn't needed ... grouping multiple<core> tags into <cores> makes sense to segregate their configuration from anything else that might go in the file (particularly since the adminPath is specific to the <cores>) ... the <property> declarations would be applicable to whatever context they are in right? so introducing a new <properties> context would be ... odd.\n\nI could prepare a new version of the solr-646 patch (and add a persist test including properties).  \n\nI'm not sure what the time frame is for SOLR-646, but i ment it would be nice to have a persistence test that worked against the trunk as it is right now, to prove that the behavior doesn't break when the SOLR-689.patch is applied. (ie: commit a persistence test first, then commit SOLR-689.patch; worry about SOLR-646 and any changes it makes separately) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12621907",
            "date": "2008-08-12T17:59:48+0000",
            "content": "\nCommitted revision 685244. "
        }
    ]
}