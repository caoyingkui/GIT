{
    "id": "SOLR-1854",
    "title": "wrong calc of numFound in DistributedSearch",
    "details": {
        "affect_versions": "1.4",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "When I search two indices with shard param in a distributed search, the numFound parameter in the result is incorrect when the count of the found rows in the second index is smaller than the &rows parameter in the query string and there are many identical hits in both index.\nSimple example: use the same index for both shards. try a distributed search with a query that will find lets say 100 hits in each index. numFound will be 190,  if default for rows is 10. It should be 100. If you add &rows=200 to the query string, numFound is correct.\nI think the error is in QueryComponent.mergeIds:\n for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get;\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            // duplicate detected\n            numFound--;\n\nbecause the comparison for identical ids is only done for doc.size() documents.\n\nthanks\n lutz",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13439482",
            "date": "2012-08-22T13:29:52+0000",
            "content": "Distributed search removes some duplicates (only those in the top N it retrieves from each shard).\nDuplicate docs are actually an error condition and Solr is just trying to degrade gracefully. "
        }
    ]
}