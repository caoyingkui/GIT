{
    "id": "LUCENE-6796",
    "title": "Some terms incorrectly highlighted in complex SpanQuery",
    "details": {
        "resolution": "Duplicate",
        "affect_versions": "5.3",
        "components": [
            "modules/highlighter"
        ],
        "labels": "",
        "fix_versions": [
            "7.3"
        ],
        "priority": "Trivial",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Modassar Ather initially raised this on LUCENE-5205.  I'm opening this as a separate issue.\n\nIf a SpanNear is within a SpanOr, it looks like the child terms within the SpanNear query are getting highlighted even if there is no match on that SpanNear query...in some special cases.  Specifically, in the format of the parser in LUCENE-5205 \"(b [c z]) d\\\"~2\", which is equivalent to: find \"b\" or the phrase \"c z\" within two words of \"d\" either direction\n\nThis affects trunk.",
    "attachments": {
        "LUCENE-6796-testcase.patch": "https://issues.apache.org/jira/secure/attachment/12755175/LUCENE-6796-testcase.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14739135",
            "author": "Tim Allison",
            "date": "2015-09-10T17:06:29+0000",
            "content": "Test case showing the issue. "
        },
        {
            "id": "comment-14739479",
            "author": "David Smiley",
            "date": "2015-09-10T19:56:20+0000",
            "content": "This is a fundamental limitation in how WeightedSpanTermExtractor maps positions of SpanQueries to terms.  It takes any SpanQuery tree and considers all terms it has to be valid within an entire position span match.  The API doesn't expose which underlying SpanTermQuery instances were found at the position range.  There's even more to it than that since a term might be active for a given span position range but not necessarily at every position.  For example imagine a SpanQuery representing this, roughly: \"foo bar\" NEAR20 \"foo baz\".  WSTE would highlight all occurrences of foo, bar, and baz, even those standing alone not next to each other in the phrases as shown in a matching span of the requisite length.\n\nI was thinking of this problem a year ago.  I believe Lucene trunk may finally have the API needed with the new SpanCollector API thanks to Alan Woodward \u2013 we've conversed on the implications of this on highlighting.  I anticipate leveraging this somewhat soon (month or two?); stay tuned. "
        },
        {
            "id": "comment-14739894",
            "author": "Tim Allison",
            "date": "2015-09-11T00:10:47+0000",
            "content": "Great. There's no rush on this from my perspective. Thank you. "
        },
        {
            "id": "comment-15028171",
            "author": "Modassar Ather",
            "date": "2015-11-26T05:01:30+0000",
            "content": "Hi David,\n\nPlease let me know your plan for the fix of this issue.\n\nThanks,\nModassar "
        },
        {
            "id": "comment-15028888",
            "author": "Erick Erickson",
            "date": "2015-11-26T14:30:31+0000",
            "content": "Are you willing to help put together a patch? Perhaps David has some pointers on how to go about it. "
        },
        {
            "id": "comment-15029251",
            "author": "David Smiley",
            "date": "2015-11-26T21:16:10+0000",
            "content": "Sorry; I said \"stay tuned\" too soon.  If you want to push things forward, I suggest taking a look at what Luwak does:\nhttps://github.com/flaxsearch/luwak/blob/master/luwak/src/main/java/uk/co/flax/luwak/matchers/HighlightingMatcher.java "
        }
    ]
}