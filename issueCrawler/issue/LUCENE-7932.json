{
    "id": "LUCENE-7932",
    "title": "Search record with field value='a' or 'A' returns all records along with one more field value",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Not A Problem",
        "affect_versions": "5.3,                                            6.6",
        "status": "Resolved",
        "type": "Bug",
        "components": [
            "core/search"
        ],
        "fix_versions": []
    },
    "description": "Hi Lucene Team,\n\nHere I explained more about issue facing after querying using org.apache.lucene.search.IndexSearcher API.\n\nHere I am just giving examples of our project with field names (Not related with Lucene):\nIn our document which needs to be archived having key fields and non-key fields.\nA> Key fields: \n1. LocationCode (DataType=long)\n2. CollectionObjectID (DataType=long)\nB> Non-key fields\nCategory (DataType=string)\n\nSteps we followed:\n1. Step 1: We stored multiple document records with category values as below in index files.\n     LocationCode = 1  Category =b\n     LocationCode = 2\u00a0 Category =BC\n     LocationCode =3\u00a0 Category =bcd\n2. In Step 2: we query for records and we pass query parameters as below.\n    a) LocationCode=1 and  Category =a  \n         Result= all records displayed\n    b) LocationCode=1 and\u00a0 Category =A\u00a0 \n       \u00a0Result= all records displayed\n\nI faced above issue in Lucene 5.3.\nLater I found even Lucene 6.6 is also having same issue.",
    "attachments": {
        "LUCENE-7932 Search record with field value 'a' or 'A' returns all records along with one more field value.msg": "https://issues.apache.org/jira/secure/attachment/12883072/LUCENE-7932%20Search%20record%20with%20field%20value%20%27a%27%20or%20%27A%27%20returns%20all%20records%20along%20with%20one%20more%20field%20value.msg",
        "LuceneQueryTest.java": "https://issues.apache.org/jira/secure/attachment/12883073/LuceneQueryTest.java"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16131951",
            "date": "2017-08-18T09:14:41+0000",
            "content": "Created new ticket LUCENE-7932 today.\n\nComponent to fix: lucene-queryparser-6.6.0.jar ",
            "author": "Rohit Balekundri"
        },
        {
            "id": "comment-16133406",
            "date": "2017-08-18T18:24:28+0000",
            "content": "Rohit, there is nowhere near enough information here to figure out what the problem is.  And it looks like you're talking about configuration and/or code that isn't part of Lucene (LocationCode, Category, CollectionObjectID).  What the developers need is a simple way to reproduce the problem, i.e. data and code. \n\nYou should start by asking questions on java-user mailing list: http://lucene.apache.org/core/discussion.html. ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-16134699",
            "date": "2017-08-21T04:55:29+0000",
            "content": "Hi Steve,\nI updated exact relevant steps in description on how we are getting issue after making query from org.apache.lucene.search.IndexSearcher. This class is found in lucene-core-5.3.jar\n\nDo you still suggest me to use: http://lucene.apache.org/core/discussion.html ",
            "author": "Rohit Balekundri"
        },
        {
            "id": "comment-16135175",
            "date": "2017-08-21T13:32:46+0000",
            "content": "Do you still suggest me to use: http://lucene.apache.org/core/discussion.html\n\nYes.  You should always start there, and if you don't get a response in a day or two, or if someone requests you to do so, only then create a JIRA issue.\n\nIt's still the case that you haven't provided enough information.  You haven't provided any code, and you haven't shown what your actual queries are.  Are you using Lucene directly, or are you using some other project that depends on Lucene? ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-16136463",
            "date": "2017-08-22T07:40:26+0000",
            "content": "Please find attached mail and also test scenarios and queries I used to test scenarios.\nI am directly using Lucene code. I am not using any third party tool/software.\nIssue found only with character 'a' and 'A' other character works fine.\nIf any information required please let me know.\nNote: LuceneQueryTest.java  attached and Scenarios are explained in mail attached. ",
            "author": "Rohit Balekundri"
        },
        {
            "id": "comment-16146578",
            "date": "2017-08-30T04:21:41+0000",
            "content": "Hi Steve Rowe,\n\nI still didn't get any response to my query. Hence kindly look at this issue.\nKindly suggest what else we can do to fix this issue. ",
            "author": "Rohit Balekundri"
        },
        {
            "id": "comment-16150046",
            "date": "2017-09-01T05:00:51+0000",
            "content": "The default StandardAnalyzer constructor uses a default English stop word set, which includes \"a\". So once the stopword is removed from the query, \nLocationCode:1 AND Category:a\njust becomes\nLocationCode:1\n\nYou can see this yourself by simply dumping the parsed query with:\nSystem.out.println(\"parsed query is ' \" + q.toString() + \"'\");\n\nThe third query behaves differently because the asterisk makes a* not a stopword.\n\nUse this constructor to not have stop words:\nStandardAnalyzer analyzer = new StandardAnalyzer(CharArraySet.EMPTY_SET); ",
            "author": "Erick Erickson"
        }
    ]
}