{
    "id": "SOLR-12107",
    "title": "[child] doc transformer used w/o uniqueKey in 'fl' fails with NPE unless documentCache is enabled",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "discovered this while working on SOLR-11891...\n\nThe ChildDocumentTransformer implicitly assumes the uniqueKey field will allways be available when transforming the doc, w/o explicitly requesting it via getExtraRequestFields()\n\nBecause of the existing sloppy code in SOLR-11891, that means this bug in ChildDocumentTransformer only impacts current users if the documentCache is disabled\n\n\n\nExample steps to reproduce w/techproducts config assuming solrconfig.xml is edited to disable documentCache...\n\n\n$ curl 'http://localhost:8983/solr/techproducts/update?commit=true' -H 'Content-Type: application/json' --data-binary '[\n>   {\n>     \"id\": \"1\",\n>     \"title\": \"Solr adds block join support\",\n>     \"content_type\": \"parentDocument\",\n>     \"_childDocuments_\": [\n>       {\n>         \"id\": \"2\",\n>         \"comments\": \"SolrCloud supports it too!\"\n>       }\n>     ]\n>   },\n>   {\n>     \"id\": \"3\",\n>     \"title\": \"New Lucene and Solr release is out\",\n>     \"content_type\": \"parentDocument\",\n>     \"_childDocuments_\": [\n>       {\n>         \"id\": \"4\",\n>         \"comments\": \"Lots of new features\"\n>       }\n>     ]\n>   }\n> ]'\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":69}}\n$ curl 'http://localhost:8983/solr/techproducts/query?q=id:1'\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":5,\n    \"params\":{\n      \"q\":\"id:1\"}},\n  \"response\":{\"numFound\":1,\"start\":0,\"docs\":[\n      {\n        \"id\":\"1\",\n        \"title\":[\"Solr adds block join support\"],\n        \"content_type\":[\"parentDocument\"],\n        \"_version_\":1595047178033692672}]\n  }}\n$ curl 'http://localhost:8983/solr/techproducts/query?q=id:1&fl=id,%5Bchild+parentFilter=\"content_type:parentDocument\"%5D'\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":0,\n    \"params\":{\n      \"q\":\"id:1\",\n      \"fl\":\"id,[child parentFilter=\\\"content_type:parentDocument\\\"]\"}},\n  \"response\":{\"numFound\":1,\"start\":0,\"docs\":[\n      {\n        \"id\":\"1\",\n        \"_childDocuments_\":[\n        {\n          \"id\":\"2\",\n          \"comments\":\"SolrCloud supports it too!\",\n          \"_version_\":1595047178033692672}]}]\n  }}\n$ curl 'http://localhost:8983/solr/techproducts/query?q=id:1&fl=%5Bchild+parentFilter=\"content_type:parentDocument\"%5D'\n{\n  \"error\":{\n    \"trace\":\"java.lang.NullPointerException\\n\\tat org.apache.solr.response.transform.ChildDocTransformer.transform(ChildDocTransformerFactory.java:133)\\n\\tat org.apache.solr.response.DocsStreamer.next(DocsStreamer.java:120)\\n\\tat org.apache.solr.response.DocsStreamer.next(DocsStreamer.java:57)\\n\\tat org.apache.solr.response.TextResponseWriter.writeDocuments(TextResponseWriter.java:275)\\n\\tat org.apache.solr.response.TextResponseWriter.writeVal(TextResponseWriter.java:161)\\n\\tat org.apache.solr.response.JSONWriter.writeNamedListAsMapWithDups(JSONResponseWriter.java:209)\\n\\tat org.apache.solr.response.JSONWriter.writeNamedList(JSONResponseWriter.java:325)\\n\\tat org.apache.solr.response.JSONWriter.writeResponse(JSONResponseWriter.java:120)\\n\\tat org.apache.solr.response.JSONResponseWriter.write(JSONResponseWriter.java:71)\\n\\tat org.apache.solr.response.QueryResponseWriterUtil.writeQueryResponse(QueryResponseWriterUtil.java:65)\\n\\tat org.apache.solr.servlet.HttpSolrCall.writeResponse(HttpSolrCall.java:789)\\n\\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:526)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:384)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:330)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\\n\\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:219)\\n\\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\\n\\tat org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:530)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:347)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:256)\\n\\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)\\n\\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\\n\\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)\\n\\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)\\n\\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)\\n\\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)\\n\\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\",\n    \"code\":500}}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-03-15T23:39:22+0000",
            "content": "The patch in SOLR-11891 to make DocStreamer more efficient exposes this bug in pre-existing tests, and includes the necessary fix ",
            "author": "Hoss Man",
            "id": "comment-16401264"
        },
        {
            "date": "2018-03-19T19:29:09+0000",
            "content": "Commit 8bd7e5c9d254c1d629a784e0b601885adea2f57b in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8bd7e5c ]\n\nSOLR-11891: DocStreamer now respects the ReturnFields when populating a SolrDocument\nThis is an optimization that reduces the number of unneccessary fields a ResponseWriter will see if documentCache is used\n\nThis commit also includes fixes for SOLR-12107 & SOLR-12108 \u2013 two bugs that were previously dependent on the\nun-optimized behavior of DocStreamer in order to function properly.\n\n\n\tSOLR-12107: Fixed a error in [child] transformer that could ocur if documentCache was not used\n\tSOLR-12108: Fixed the fallback behavior of [raw] and [xml] transformers when an incompatble 'wt' was specified,\n  the field value was lost if documentCache was not used.\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16405314"
        },
        {
            "date": "2018-03-19T19:29:12+0000",
            "content": "Commit 8bd7e5c9d254c1d629a784e0b601885adea2f57b in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8bd7e5c ]\n\nSOLR-11891: DocStreamer now respects the ReturnFields when populating a SolrDocument\nThis is an optimization that reduces the number of unneccessary fields a ResponseWriter will see if documentCache is used\n\nThis commit also includes fixes for SOLR-12107 & SOLR-12108 \u2013 two bugs that were previously dependent on the\nun-optimized behavior of DocStreamer in order to function properly.\n\n\n\tSOLR-12107: Fixed a error in [child] transformer that could ocur if documentCache was not used\n\tSOLR-12108: Fixed the fallback behavior of [raw] and [xml] transformers when an incompatble 'wt' was specified,\n  the field value was lost if documentCache was not used.\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16405316"
        },
        {
            "date": "2018-03-19T21:31:17+0000",
            "content": "Commit 11af2144b66717f41e2fcb5c73c7059cf009a00a in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=11af214 ]\n\nSOLR-11891: DocStreamer now respects the ReturnFields when populating a SolrDocument\nThis is an optimization that reduces the number of unneccessary fields a ResponseWriter will see if documentCache is used\n\nThis commit also includes fixes for SOLR-12107 & SOLR-12108 \u2013 two bugs that were previously dependent on the\nun-optimized behavior of DocStreamer in order to function properly.\n\n\n\tSOLR-12107: Fixed a error in [child] transformer that could ocur if documentCache was not used\n\tSOLR-12108: Fixed the fallback behavior of [raw] and [xml] transformers when an incompatble 'wt' was specified,\n  the field value was lost if documentCache was not used.\n\n\n\n(cherry picked from commit 8bd7e5c9d254c1d629a784e0b601885adea2f57b) ",
            "author": "ASF subversion and git services",
            "id": "comment-16405485"
        },
        {
            "date": "2018-03-19T21:31:20+0000",
            "content": "Commit 11af2144b66717f41e2fcb5c73c7059cf009a00a in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=11af214 ]\n\nSOLR-11891: DocStreamer now respects the ReturnFields when populating a SolrDocument\nThis is an optimization that reduces the number of unneccessary fields a ResponseWriter will see if documentCache is used\n\nThis commit also includes fixes for SOLR-12107 & SOLR-12108 \u2013 two bugs that were previously dependent on the\nun-optimized behavior of DocStreamer in order to function properly.\n\n\n\tSOLR-12107: Fixed a error in [child] transformer that could ocur if documentCache was not used\n\tSOLR-12108: Fixed the fallback behavior of [raw] and [xml] transformers when an incompatble 'wt' was specified,\n  the field value was lost if documentCache was not used.\n\n\n\n(cherry picked from commit 8bd7e5c9d254c1d629a784e0b601885adea2f57b) ",
            "author": "ASF subversion and git services",
            "id": "comment-16405487"
        }
    ]
}