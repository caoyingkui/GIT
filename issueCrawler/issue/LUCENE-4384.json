{
    "id": "LUCENE-4384",
    "title": "add top-level 'ant precommit'",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/build"
        ],
        "type": "Task",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "We have a lot more checks in the build:\n\nIf we added 'ant precommit' it would make it easier to run all the (reasonably fast) checks beforehand... and save some typing.\n\nSo I think we can just add precommit which is:\n\n\tcheck-svn-working-copy (looks for un-added files, wrong eol-style)\n\tvalidate (nocommit/author checks, license headers, 3rd party licenses, forbidden apis)\n\tjavadocs-lint (javadocs + missing/broken links checks)\n\ttest",
    "attachments": {
        "LUCENE-4384.patch": "https://issues.apache.org/jira/secure/attachment/12545032/LUCENE-4384.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-09-13T19:49:08+0000",
            "content": "The reasoning behind the strange dependency ordering is to try to put the fastest checks first:\nso you dont have to wait for a full test run to know something minor is borked (like a javadocs typo or whatever) ",
            "author": "Robert Muir",
            "id": "comment-13455179"
        },
        {
            "date": "2012-09-13T20:03:28+0000",
            "content": "I like it.\n\nrat-sources is complaining about my (svn:ignore'd) *.iml IntelliJ IDEA module configuration files sprinkled throughout the source.\n\nI got rat-sources to shut up by adding **/*.iml to the rat.excludes definition in lucene/common-build.xml.\n\ncheck-forbidden-apis fails miserably though:\n\n\n-check-system-out:\n[forbidden-apis] Reading API signatures: C:\\svn\\lucene\\dev\\trunk\\lucene\\tools\\forbiddenApis\\system-out.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:76)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:77)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:78)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:79)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:80)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:88)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:91)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:108)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:110)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros (GenerateJFlexSupplementaryMacros.java:112)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:62)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:63)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:64)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:65)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:66)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:74)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:77)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:104)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:106)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateHTMLStripCharFilterSupplementaryMacros (GenerateHTMLStripCharFilterSupplementaryMacros.java:108)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.egothor.stemmer.DiffIt (DiffIt.java:105)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.egothor.stemmer.DiffIt (DiffIt.java:109)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:87)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:132)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:134)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:155)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:171)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:173)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:174)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:176)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:178)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:220)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.GenerateUTR30DataFiles (GenerateUTR30DataFiles.java:269)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.standard.GenerateJflexTLDMacros (GenerateJflexTLDMacros.java:51)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.standard.GenerateJflexTLDMacros (GenerateJflexTLDMacros.java:52)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.standard.GenerateJflexTLDMacros (GenerateJflexTLDMacros.java:103)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.egothor.stemmer.Compile (Compile.java:125)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.egothor.stemmer.Compile (Compile.java:181)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.TokenInfoDictionaryBuilder (TokenInfoDictionaryBuilder.java:84)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.TokenInfoDictionaryBuilder (TokenInfoDictionaryBuilder.java:100)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.TokenInfoDictionaryBuilder (TokenInfoDictionaryBuilder.java:123)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.TokenInfoDictionaryBuilder (TokenInfoDictionaryBuilder.java:132)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.TokenInfoDictionaryBuilder (TokenInfoDictionaryBuilder.java:145)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.TokenInfoDictionaryBuilder (TokenInfoDictionaryBuilder.java:167)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.TokenInfoDictionaryBuilder (TokenInfoDictionaryBuilder.java:169)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:35)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:41)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:43)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:49)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:51)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:55)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:65)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:74)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:75)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:76)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:77)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:78)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:79)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:80)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.analysis.ja.util.DictionaryBuilder (DictionaryBuilder.java:81)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.RBBIRuleCompiler (RBBIRuleCompiler.java:63)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.RBBIRuleCompiler (RBBIRuleCompiler.java:77)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.RBBIRuleCompiler (RBBIRuleCompiler.java:83)\n[forbidden-apis] Forbidden field access: java.lang.System#err\n[forbidden-apis]   in org.apache.lucene.analysis.icu.RBBIRuleCompiler (RBBIRuleCompiler.java:89)\n[forbidden-apis] Forbidden field access: java.lang.System#out\n[forbidden-apis]   in org.apache.lucene.facet.example.ExampleUtils (ExampleUtils.java:34)\n[forbidden-apis] Scanned 3034 (and 227 related) class file(s) for forbidden API invocations (in 1.55s), 65 error(s).\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13455189"
        },
        {
            "date": "2012-09-13T20:09:27+0000",
            "content": "\nrat-sources is complaining about my (svn:ignore'd) *.iml IntelliJ IDEA module configuration files sprinkled throughout the source.\n\nI got rat-sources to shut up by adding */.iml to the rat.excludes definition in lucene/common-build.xml.\n\nHmm I think i've never hit this because of using eclipse: not having .iml files. Can you commit this exclusion?\n\n\ncheck-forbidden-apis fails miserably though:\n\nI don't know why this is happening: I thought I fixed that on LUCENE-4357 (if you had previously compiled tools/, which is usually rarely,\nthen they would be checked, but normally they are not compiled). I'll see if i can figure some way to reproduce this. ",
            "author": "Robert Muir",
            "id": "comment-13455203"
        },
        {
            "date": "2012-09-13T20:10:02+0000",
            "content": "It would be nice to have a precommit-no-test variant that excludes ant test, e.g. for doc-only commits. ",
            "author": "Steve Rowe",
            "id": "comment-13455205"
        },
        {
            "date": "2012-09-13T20:17:34+0000",
            "content": "Steve can you tell me the location of GenerateJFlexSupplementaryMacros.class in your build directory?\n\nI'm wondering if IntelliJ is compiling this and putting it under build/ in the wrong place?\n\nBecause this check is defined as:\n\n      <fileset dir=\"${basedir}/build\">\n        <include name=\"**/classes/java/**/*.class\"/>\n\n\n\nSo on my computer this .class file is:\n\nrmuir@beast:~/workspace/lucene-trunk$ find . -name GenerateJFlexSupplementaryMacros.class\n./lucene/build/analysis/icu/classes/tools/org/apache/lucene/analysis/icu/GenerateJFlexSupplementaryMacros.class\n\n\n\nEclipse is configured not to mess with the build/ directory at all, it uses a private bin/ directory.\n\n ",
            "author": "Robert Muir",
            "id": "comment-13455212"
        },
        {
            "date": "2012-09-13T20:19:05+0000",
            "content": "\nIt would be nice to have a precommit-no-test variant that excludes ant test, e.g. for doc-only commits.\n\nGood idea, lets just make precommit depend on precommit-no-test,test ",
            "author": "Robert Muir",
            "id": "comment-13455215"
        },
        {
            "date": "2012-09-13T20:19:26+0000",
            "content": "It would be nice to have a precommit-no-test variant that excludes ant test, e.g. for doc-only commits.\n\n+1\n\ni would go so far as to suggest that \"precommit\" shouldn't depend on tests, and people can just run \"ant precommit test\" as needed \u2013 remembering to run tests is trivial, remembering all of the other misc \"checker\" type tasks is where it's easy to forget things. ",
            "author": "Hoss Man",
            "id": "comment-13455219"
        },
        {
            "date": "2012-09-13T20:26:03+0000",
            "content": "+1 for ant commit without tests. The number of keystrokes is not rely different between precommit-no-test and running full \"ant precommit test\" ",
            "author": "Uwe Schindler",
            "id": "comment-13455229"
        },
        {
            "date": "2012-09-13T20:26:33+0000",
            "content": "\nI got rat-sources to shut up by adding */.iml to the rat.excludes definition in lucene/common-build.xml.\n\nHmm I think i've never hit this because of using eclipse: not having .iml files. Can you commit this exclusion?\n\nDone: r1384502 (trunk), r1384513 (branch_4x) ",
            "author": "Steve Rowe",
            "id": "comment-13455232"
        },
        {
            "date": "2012-09-13T20:29:14+0000",
            "content": "It seems to me the problems you have are related to IDEA using build/ ?\n\nI looked at the config and it seems its output directories are in fact lucene/build ?\n\n    <output url=\"file://$MODULE_DIR$/../../../build/core/classes/java\" />\n    <output-test url=\"file://$MODULE_DIR$/../../../build/core/classes/test\" />\n\n\n\nI think this is a significant risk: if someone with this IDE were to build a release it could\nbe completely different than what we expect (include extra stuff or missing some stuff), or\neven just act strange because bytecode was compiled by something like the ecj compiler unexpectedly? ",
            "author": "Robert Muir",
            "id": "comment-13455238"
        },
        {
            "date": "2012-09-13T20:30:21+0000",
            "content": "Steve can you tell me the location of GenerateJFlexSupplementaryMacros.class in your build directory?\n\nHmm, I see it in two places:\n\nlucene/build/analysis/icu/classes/tools/org/apache/lucene/analysis/icu/GenerateJFlexSupplementaryMacros.class\n\nLooks the same as yours, I think?\n\nbut I also have: \n\nlucene/build/analysis/analyzers-icu/classes/java/org/apache/lucene/analysis/icu/GenerateJFlexSupplementaryMacros.class\n\nThis second one is where IntelliJ builds, maybe a relic from an older build output structure or something.\n\nIt would definitely be a good idea to put IntelliJ build output somewhere different from Ant's (similarly to Eclipse and Maven now), I've just never gotten around to it. ",
            "author": "Steve Rowe",
            "id": "comment-13455242"
        },
        {
            "date": "2012-09-13T20:37:43+0000",
            "content": "\n+1 for ant commit without tests. The number of keystrokes is not rely different between precommit-no-test and running full \"ant precommit test\"\n\nthats fine for me too. I just want to make it easier, today its\n'ant check-svn-working-copy validate javadocs-lint test' if you want to be fairly thorough, and thats too much. ",
            "author": "Robert Muir",
            "id": "comment-13455251"
        },
        {
            "date": "2012-09-13T20:40:15+0000",
            "content": "\nI looked at the config and it seems its output directories are in fact lucene/build ?\n\nI think this is a significant risk: if someone with this IDE were to build a release it could be completely different than what we expect (include extra stuff or missing some stuff), or even just act strange because bytecode was compiled by something like the ecj compiler unexpectedly?\n\nIt would definitely be a good idea to put IntelliJ build output somewhere different from Ant's (similarly to Eclipse and Maven now), I've just never gotten around to it.\n\nSee LUCENE-4385 ",
            "author": "Steve Rowe",
            "id": "comment-13455253"
        },
        {
            "date": "2012-09-14T00:45:38+0000",
            "content": "\nI got rat-sources to shut up by adding */.iml to the rat.excludes definition in lucene/common-build.xml.\n\nHmm I think i've never hit this because of using eclipse: not having .iml files. Can you commit this exclusion?\n\nDone: r1384502 (trunk), r1384513 (branch_4x)\n\nI also had to add **/*.iml to the rat.excludes definition in solr/core/build.xml: r1384608 (trunk) and r1384615 (branch_4x). ",
            "author": "Steve Rowe",
            "id": "comment-13455497"
        },
        {
            "date": "2012-09-14T01:00:53+0000",
            "content": "Now that LUCENE-4385 is committed and I've added the rat-sources exclusions required to get rat to ignore my IntelliJ *.iml files, all three ant targets under discussion here ran successfully for me.\n\nI did hit a snag with javadocs-lint that I've resolved.  I was getting errors complaining about permission being denied when creating a process.  \n\nThe property named python32.exe is used by javadocs-lint.  Under Cygwin, because the default python32.exe property value (python3.2) is the same as a Cygwin symlink (to python3.2m.exe), and because native Java (Cygwin doesn't provide Java binaries) doesn't understand Cygwin symlinks, I had to add -Dpython32.exe=python3.2m.exe to my $ANT_OPTS to get ant javadocs-lint to work. ",
            "author": "Steve Rowe",
            "id": "comment-13455504"
        },
        {
            "date": "2012-09-14T14:06:14+0000",
            "content": "updated patch with 'test' removed.\n\nShould we keep this name 'ant precommit' or another idea is 'ant check' ?\n\nSteve, thanks for the IDEA cleanup. as far as the symlink'd python for javadocs-lint, i think you can just add your definition to your ~/build.properties (for any symlinked executables where you have this issue) and you wont have any issues or have to pass them with -D ",
            "author": "Robert Muir",
            "id": "comment-13455807"
        },
        {
            "date": "2012-09-14T15:38:05+0000",
            "content": "Should we keep this name 'ant precommit' or another idea is 'ant check' ?\n\nI like 'ant precommit' better than 'ant check'.  Even for non-committers producing patches this makes sense, I think, since their patch will be committed.\n\n'ant check' is also very vague, where 'ant precommit' is not, since it ties the action to a specific part of the workflow.\n\nas far as the symlink'd python for javadocs-lint, i think you can just add your definition to your ~/build.properties (for any symlinked executables where you have this issue) and you wont have any issues or have to pass them with -D\n\nRight, but for me these are roughly interchangeable, since I set $ANT_OPTS in my .bashrc. ",
            "author": "Steve Rowe",
            "id": "comment-13455872"
        },
        {
            "date": "2012-09-14T20:05:46+0000",
            "content": "So is everyone ok with the latest patch? precommit doesn't do 'test', it does the other (fairly quick) checks. ",
            "author": "Robert Muir",
            "id": "comment-13456080"
        },
        {
            "date": "2012-09-14T22:46:07+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13456209"
        },
        {
            "date": "2012-09-15T17:19:19+0000",
            "content": "Awesome; thanks guys!  This should reduce some failures in my commits lately :-P ",
            "author": "David Smiley",
            "id": "comment-13456449"
        },
        {
            "date": "2012-09-26T20:06:53+0000",
            "content": "I added a note about ant precommit to the Solr and Lucene HowToContribute wiki pages. ",
            "author": "Steve Rowe",
            "id": "comment-13464130"
        },
        {
            "date": "2013-03-22T16:38:57+0000",
            "content": "[branch_4x commit] Robert Muir\nhttp://svn.apache.org/viewvc?view=revision&revision=1385054\n\nLUCENE-4384: add precommit task ",
            "author": "Commit Tag Bot",
            "id": "comment-13610837"
        },
        {
            "date": "2013-03-22T16:40:07+0000",
            "content": "[branch_4x commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1384615\n\nLUCENE-4384: rat-sources should ignore IntelliJ IDEA module configuration files: *.iml (merged trunk r1384608) ",
            "author": "Commit Tag Bot",
            "id": "comment-13610856"
        },
        {
            "date": "2013-03-22T16:40:47+0000",
            "content": "[branch_4x commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1384513\n\nLUCENE-4384: rat-sources should ignore IntelliJ IDEA module configuration files: *.iml ",
            "author": "Commit Tag Bot",
            "id": "comment-13610862"
        },
        {
            "date": "2013-05-10T10:34:34+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13654261"
        }
    ]
}