{
    "id": "SOLR-1665",
    "title": "Add &debugTimings param so that timings for components can be retrieved without having to do explains(), as in &debugQuery",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "As the title says, it would be great if we could just get back component timings w/o having to do the full boat of explains and other stuff.",
    "attachments": {
        "SOLR-1665.patch": "https://issues.apache.org/jira/secure/attachment/12453136/SOLR-1665.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erik Hatcher",
            "id": "comment-12792044",
            "date": "2009-12-17T18:22:21+0000",
            "content": "Just an idea, how about refactoring how the debug parameter works altogether, so instead of just adding more debugFoo parameters, we can have debug=explain,query,timing sort of thing?\n\nAnyway, it's a syntactic debate, not sure which I prefer (though I do kinda dislike camelCased query string parameters).\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12792050",
            "date": "2009-12-17T18:27:40+0000",
            "content": "bq? As the title says, it would be great if we could just get back component timings w/o having to do the full boat of explains and other stuff.\n\nIf it's just for debugging, why does it matter?  Or are you considering running in production?\n\nJust an idea, how about refactoring how the debug parameter works altogether, so instead of just adding more debugFoo parameters, we can have debug=explain,query,timing sort of thing? \n\nThat might be a good idea - fewer hash lookups on every request for paramters that don't matter most of the time. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12792079",
            "date": "2009-12-17T19:11:15+0000",
            "content": "+1 to Erik's idea.\n\nIf it's just for debugging, why does it matter? Or are you considering running in production?\n\nI'd say it's pseudo-production, if that makes any sense.  I may want to collect timings of components under some load (either production or in a test environment), or, simply for long running queries where I only care about the timings, I don't want to spend the time on explains.  It's not a huge issue, but have thought it would be helpful on occasion. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12793395",
            "date": "2009-12-21T22:38:24+0000",
            "content": "please, please, please...\n\n\"debug=explain&debug=query&debug=timing\" ... if \"true\" is in the list, then all known types are used.  if \"false\" is in the list, then all other items in the list are ignored.\n\n...and yes, this seems like a good idea in general "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12793474",
            "date": "2009-12-22T02:43:37+0000",
            "content": "Plus one, visibility into the components would be good.  This'll work for distributed processes (i.e. time taken on each node per component)? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872532",
            "date": "2010-05-27T22:07:18+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12902896",
            "date": "2010-08-26T15:24:11+0000",
            "content": "Here's a patch for this.  Adds support for debug=timing, debug=results (explains for now, but could be other things in the future) and debug=query.  Still supports debugQuery=true (back compat) and also now supports debug=true (same as debugQuery).\n\nShould also be extensible so that people could add in their own custom values as well for their components. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12902909",
            "date": "2010-08-26T16:02:56+0000",
            "content": "I intend to commit in a day or two. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12902936",
            "date": "2010-08-26T17:13:56+0000",
            "content": "This seems a bit over-engineered?\nWhat's the point of having a \"Set<String> debugInterests\" and doing a lookup on that rather than just doing a lookup on the params?\n\nAnd changing addDebugInfo(String interest, String name, Object val )\nso that it checks debugInterest to see if the info should be added?  One of the main points is to not generate debug info if it's not asked for.\n\nI'd almost prefer taking a step back and implementing only what the original issue talked about:  add a debugTimings param that did timings only - that's the special case and the only one we've identified that makes sense. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12903010",
            "date": "2010-08-26T19:52:56+0000",
            "content": "I was just going to do a enum type, but then figured why not let others extend.  FWIW, we did identify three cases: timings, results/explains and queries, and that is what I did.  \n\nAnd changing addDebugInfo(String interest, String name, Object val )\nso that it checks debugInterest to see if the info should be added? One of the main points is to not generate debug info if it's not asked for.\n\nResponseBuilder.addDebugInfo() w/o the interest being passed in has no context as to whether it should be called or not.  Moving the if clause to be around the call to addDebugInfo instead of in it then requires the caller to have knowledge of the debug interests.  That being said, I suppose if we just do param lookup each time, it's not a big deal. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12903016",
            "date": "2010-08-26T20:02:44+0000",
            "content": "ResponseBuilder.addDebugInfo() w/o the interest being passed in has no context as to whether it should be called or not.\n\nI'm not sure I understand.  It seems to me like addDebugInfo() should just add the debug info?  It's up to the caller not to call it if debugging isn't enabled.\n\nSo how about just adding an additional \"boolean debugTiming\" to the response builder?\nThen places that are timing related can just be switched from checking debug to checking debugTiming? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12903616",
            "date": "2010-08-27T20:47:35+0000",
            "content": "Here's a simpler version w/o the expandability "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12903968",
            "date": "2010-08-29T13:26:29+0000",
            "content": "Committed revision 990577. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12905529",
            "date": "2010-09-02T14:54:50+0000",
            "content": "TODO: this doesn't work with distributed search.\nIt's not critical or anything since distributed search appears to still work as it always has, but the new debug params are ignored.\n\nThe following request demonstrates:\nhttp://localhost:8983/solr/select?q=solr&debug=timing&shards=localhost:8983/solr\n\nI've reopened this issue to track since it's hopefully easy enough that it doesn't warrant it's own issue. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12905531",
            "date": "2010-09-02T15:01:24+0000",
            "content": "Argh, I always forget the distributed stuff.  I'll take a crack at fixing it. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12905653",
            "date": "2010-09-02T19:44:00+0000",
            "content": "Adds distributed support. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12905688",
            "date": "2010-09-02T21:58:56+0000",
            "content": "patch for distributed, plust test "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12905689",
            "date": "2010-09-02T22:00:57+0000",
            "content": "I added in distributed support, plus a test. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12906951",
            "date": "2010-09-07T20:06:41+0000",
            "content": "FYI, this broke the MLT handler.\nI just committed a fix, and will commit a test in conjunction with SOLR-2107 "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12907080",
            "date": "2010-09-08T04:17:00+0000",
            "content": "Due to the cost of distributed search tests, I removed DistributedDebugComponentTest and moved the debug tests to TestDistributedSearch. "
        }
    ]
}