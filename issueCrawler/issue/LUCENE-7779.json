{
    "id": "LUCENE-7779",
    "title": "OfflineSorter should not call ByteSequencesReader.next again after it returns null",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "6.6",
            "7.0"
        ]
    },
    "description": "OfflineSorter uses a simple iterator class, ByteSequencesReader, to step through all byte[] that need sorting.\n\nWhen its next method returns null the iteration is done.\n\nBut OfflineSorter then calls next again after that null return ...",
    "attachments": {
        "LUCENE-7779.patch": "https://issues.apache.org/jira/secure/attachment/12862912/LUCENE-7779.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15964871",
            "date": "2017-04-11T19:44:53+0000",
            "content": "Simple patch w/ test case and fix. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15965453",
            "date": "2017-04-12T06:32:31+0000",
            "content": "I think the patch should try to treat the ByteSequencesReader and readerDone more similarly. For instance if you look at readPartition out of context, it feels wrong to set readerDone to false for a ByteSequencesReader that has been passed as a method argument: what if it is called for two different ByteSequencesReader in a row? Maybe we should make readerDone a boolean[1] that we pass to readPartition next to the ByteSequencesReader, or alternatively also store the ByteSequencesReader as a member of the OfflineSorter. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15965899",
            "date": "2017-04-12T13:51:41+0000",
            "content": "Thanks Adrien Grand, I agree it's inconsistent now.  I'll use the boolean[1] approach ... I wish I could simply return multiple values in Java like I can from Python. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15966266",
            "date": "2017-04-12T17:41:28+0000",
            "content": "New patch, passing an boolean[] isExhausted instead. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15966440",
            "date": "2017-04-12T19:17:56+0000",
            "content": "+1 ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15966642",
            "date": "2017-04-12T21:17:42+0000",
            "content": "Commit b954f220e0321a31b9dc3d6a7e19a552dd58e0b1 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b954f22 ]\n\nLUCENE-7779: don't call BytesSequencesReader.next again after it already returned null ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15966645",
            "date": "2017-04-12T21:18:20+0000",
            "content": "Commit 6b8d9fbba0efd8b59caa213dd954b779012d7112 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6b8d9fb ]\n\nLUCENE-7779: don't call BytesSequencesReader.next again after it already returned null ",
            "author": "ASF subversion and git services"
        }
    ]
}