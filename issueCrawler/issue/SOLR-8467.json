{
    "id": "SOLR-8467",
    "title": "CloudSolrStream and FacetStream should take a SolrParams object rather than a Map<String, String> to allow more complex Solr queries to be specified",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Currently, it's impossible to, say, specify multiple \"fq\" clauses when using Streaming Aggregation due to the fact that the c'tors take a Map of params.\n\nOpening to discuss whether we should\n1> deprecate the current c'tor\nand/or\n2> add a c'tor that takes a SolrParams object instead.\nand/or\n3> ???\n\nI don't see a clean way to go from a Map<String, String> to a (Modifiable)SolrParams, so existing code would need a significant change. I hacked together a PoC, just to see if I could make CloudSolrStream take a ModifiableSolrParams object instead and it passes tests, but it's so bad that I'm not going to even post it. There's got to be a better way to do this, but at least it's possible....",
    "attachments": {
        "SOLR-8647.patch": "https://issues.apache.org/jira/secure/attachment/12779613/SOLR-8647.patch",
        "SOLR-8467.patch": "https://issues.apache.org/jira/secure/attachment/12780035/SOLR-8467.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-28T06:10:01+0000",
            "author": "Erick Erickson",
            "content": "Here's the patch I've worked up so far. \n\nDennis GoveJoel Bernstein I'm particularly interested in any comments you have.\n\nI did one gratuitous thing, in StreamingTest moved all of the del :/commits to the beginning of the methods, I think it's fragile to depend on old tests cleaning themselves up, I vastly prefer the test that needs things to be in some state to insure that state.\n\nI also noticed that the tests here rarely close their CloudSolrStreams, is that intentional? Or harmless?\n\nAnyway, there are still some nocommits in there, and I'm pretty hazy on whether the changes I made to streaming expressions were the right things. All the tests pass so at least that's a Good Thing.\n\nIs there any good reason we don't have access to commons.lang? In particular StringUtils.join would be useful in one instance. It's easy enough to write a function, but I bet the one in commons is more efficient.\n\nSo I did comment out the c'tors that take a Map completely and chased down all the places I found that referenced that format. I then un-commented them for back-compat, but I'm pretty sure I found all the places in Solr code that uses those c'tors and then replaced them.\n\nYou'll note that tests in StreamingTest randomly chooses one c'tor or the other just to exercise both. Of course if we really deprecate the old version that'll have to be changed, but that's trivial.\n\nLet me know what you think. I'll be away for a couple of days so if I'm kind of silent you'll know why. ",
            "id": "comment-15072464"
        },
        {
            "date": "2015-12-28T13:09:16+0000",
            "author": "Dennis Gove",
            "content": "I can't think of any reason why accepting a [Modifiable]SolrParams object instead of a Map<String,String> would be a bad idea. I like this change. ",
            "id": "comment-15072706"
        },
        {
            "date": "2015-12-28T16:03:50+0000",
            "author": "Joel Bernstein",
            "content": "We'll want to do this for the FacetStream as well. I'll update the ticket to reflect this. ",
            "id": "comment-15072849"
        },
        {
            "date": "2015-12-30T06:20:37+0000",
            "author": "Erick Erickson",
            "content": "Same patch with FacetStream changes, still some nocommits. ",
            "id": "comment-15074673"
        },
        {
            "date": "2015-12-30T19:16:10+0000",
            "author": "Erick Erickson",
            "content": "Patch that uses commons StringUtils. NOTE: This adds the dependency to SolrJ for commons.lang for the first time, any objections?\n\nAnd this one uses the correct name, I transposed a the 4 and 6 in the first two patches. So this one supercedes SOLR-8674 from the 29th ",
            "id": "comment-15075328"
        },
        {
            "date": "2015-12-30T19:21:04+0000",
            "author": "Yonik Seeley",
            "content": "Patch that uses commons StringUtils. NOTE: This adds the dependency to SolrJ for commons.lang for the first time, any objections?\nYou could just use StrUtils.join instead? ",
            "id": "comment-15075333"
        },
        {
            "date": "2015-12-30T22:05:34+0000",
            "author": "Erick Erickson",
            "content": "Didn't even know it existed. It compiles at least, running a test now.\n\nThanks! That's better than including a new dependency. ",
            "id": "comment-15075462"
        },
        {
            "date": "2016-04-24T21:08:15+0000",
            "author": "Erick Erickson",
            "content": "Joel BernsteinDennis Gove This is getting reasonably close to being committable, but I ran into something I wanted to run past you.\n\nin GatherNodeStream.JoinRunner (starting line 386 in current trunk) there's some manipulation of the params. Starting at line 412 there's this bit:\n\n      if(queryParams.containsKey(\"fl\")) {\n        String flString = (String)queryParams.get(\"fl\");\n        String[] flArray = flString.split(\",\");\n        for(String f : flArray) \n{\n          flSet.add(f.trim());\n        }\n      }\n\nSince flSet is a HashSet, doesn't this fold all of the \"fl\" parameters into a single entry so if you have fl=a,b,c the result would only be 'c'? \n\nAnd what's right here anyway? Does it make sense to concatenate the \"fl\" parameters from the queryParams to the joinParams and add the \"special\" fl params ('gather' and 'traverseTo' and metrics)? Or should the joinParams just contain the \"special\" params?\n\nI don't really see how to return more fls in the tuple that GatherNodesStream returns, if it should please enlighten me \n ",
            "id": "comment-15255721"
        },
        {
            "date": "2016-04-25T04:19:47+0000",
            "author": "Erick Erickson",
            "content": "OK, I was able to beast the code for GraphExpressionTest and StreamExpressionTest and they seem OK. Well, I am getting a lot of \n\n\"Unable to build keystore from file: null\" errors, but I'm ignoring them so far.\n\nI'm running full tests now, but I've attached a patch for what I currently have, nocommits and all. You'll see a lot of commented-out code in GatherNodeStream pending the resolution of my note from earlier today.\n\nMeanwhile, are there objections to the approach? As I mentioned, I need to clean some things up before committing, and I think SOLR-8925 needs to be applied to 6x before this patch can go in....\n\nI'd like to keep from getting too far out of date, last time I let it languish I caused myself a lot of extra work as the underlying code is changing pretty rapidly, so comments appreciated. ",
            "id": "comment-15255867"
        },
        {
            "date": "2016-04-25T04:21:47+0000",
            "author": "Erick Erickson",
            "content": "Updated for current trunk, still have cleanup to do. ",
            "id": "comment-15255869"
        },
        {
            "date": "2016-04-25T13:31:45+0000",
            "author": "Joel Bernstein",
            "content": "I think this ticket makes sense but I was shying away from it because it ends up touching such a large amount of code.\n\nA couple things to consider before committing:\n\n1) We need some tests for Streaming Expressions with multi-params. It may be that the expression parser needs to be changed to support this. If that's the case we should hold off until we get that working.\n\n2) Let's shoot for getting this into trunk following the 6.1 release. The reason behind this is that it touches enough stuff that it's likely to cause some headaches finishing some fairly big features in trunk which are still getting shaped up for the 6.1\n\n3) Lastly I'd like to spend a little more time reviewing before this it gets committed and I'm pretty focused on getting the current 6.1 streaming features together.\n\nIf this patch falls behind again I can spend the time catching it up following the 6.1 release. ",
            "id": "comment-15256338"
        },
        {
            "date": "2016-04-25T13:33:10+0000",
            "author": "Joel Bernstein",
            "content": "The fl handling you mention seems to be wrong. I'll give this a closer review. ",
            "id": "comment-15256342"
        },
        {
            "date": "2016-04-25T14:33:26+0000",
            "author": "Erick Erickson",
            "content": "I'll try to keep this up to date more often now that I've learned the 'git stash' and 'git stash pop' trick.\n\nI'll also clean up the nocommits and the like sometime Real Soon Now.\n\nDo note that there's some nonsense in the test cases to randomly switch back and forth between the Map and SolrParams c'tors in the classes. Mostly that's there to make sure the translation I made in the c'tors from Map to Solrparams gets exercised. That said, since there are no more uses of the Map c'tor I could easily argue that it's not required that we keep exercising the deprecated (in this patch) Map c'tors, WDYT? ",
            "id": "comment-15256407"
        },
        {
            "date": "2016-04-25T22:30:57+0000",
            "author": "Dennis Gove",
            "content": "1) We need some tests for Streaming Expressions with multi-params. It may be that the expression parser needs to be changed to support this. If that's the case we should hold off until we get that working.\n\nI don't think there'll need to be any change here. For the source streams we pull out all known named parameters and then all other parameters are just passed along to Solr as standard params. For those which are just passed along there shouldn't be any consideration of the parameter names and if I recall correctly duplicate names are allowable. ",
            "id": "comment-15257173"
        },
        {
            "date": "2016-04-25T23:58:53+0000",
            "author": "Erick Erickson",
            "content": "In fact I had a few down minutes and put in a couple of multi-parameter tests and they seemed to work just fine. I'll add them to the patch.\n\nThey're fairly trivial, but at least start to exercise the option. ",
            "id": "comment-15257288"
        },
        {
            "date": "2016-04-26T01:17:44+0000",
            "author": "Joel Bernstein",
            "content": "I think just a few basic tests is all that's needed. ",
            "id": "comment-15257382"
        },
        {
            "date": "2016-04-26T14:37:25+0000",
            "author": "Joel Bernstein",
            "content": "OK, I reviewed the fl handling in gather nodes and it is correct for how params are currently being handled. What it's doing is deriving the field list from the metrics and uniquing them. We'll have to adjust how this is working as part of this ticket. ",
            "id": "comment-15258182"
        },
        {
            "date": "2016-04-26T21:03:35+0000",
            "author": "Erick Erickson",
            "content": "This is what I was wondering when I asked \"What's right here anyway?\". If I'm reading your response correctly, we can simply throw away the original \"fl\" params because we don't care about them anyway right? And uniquify the rest with a set. ",
            "id": "comment-15258915"
        },
        {
            "date": "2016-04-27T02:26:34+0000",
            "author": "Erick Erickson",
            "content": "Same thing (Unable to build keystore....) happens on unmodified trunk, so I'm pretty confident that's not a result of this patch. ",
            "id": "comment-15259413"
        },
        {
            "date": "2016-04-27T02:44:55+0000",
            "author": "Erick Erickson",
            "content": "Cleaned up patch. There are still a couple of nocommits that I'd especially like another set of eyes on, I'm not entirely comfortable with those bits of code.\n\nThis patch removes a bunch of nocommits and old code I commented out. It also tries to regularize the member variables as SolrParams rather than ModifiableSolrParams. While doing that I notices a couple of places where the member variable was actually being modified, things like adding &distrib=false. That seems like A Bad Thing.\n\nThere's some junk in here where I deprecated c'tors that take a Map<String, String> and added a new (preferred) one that takes a SolrParams object. What do y'all think about taking out the c'tor that takes a Map? Is all this code new enough that we don't need to carry that baggage along? I took out the bits in the tests where it randomly chooses the old or new c'tor as they were in there just for preliminary testing....\n\nAn embarrassingly large amount of this patch is the re-formatted schema.xml file. I took out the long-deprecated <types> and <fields> tags and re-indented (just a quick keystroke in IntelliJ). I did have to add one field type though *_dvs for new tests so there's at least one substantive change (not really sure it's necessary though)...\n\nSo, getting close to committing. Do we really want to wait for 6.1? If we take the c'tors that take a Map out the sooner the better.\n\nPerhaps mark those c'tors as \"experimental\"? I doubt we'd be inconveniencing too many people at this point since this is so new. ",
            "id": "comment-15259433"
        },
        {
            "date": "2016-04-27T13:42:22+0000",
            "author": "Joel Bernstein",
            "content": "I think I'd to take some time to review before it's committed. If I can get the review done before 6.1 let's go for it. The major 6.1 streaming work is all in trunk now anyway, so it won't cause issues with that work. ",
            "id": "comment-15260164"
        },
        {
            "date": "2016-04-28T15:16:42+0000",
            "author": "Erick Erickson",
            "content": "Updated to latest trunk ",
            "id": "comment-15262316"
        },
        {
            "date": "2016-05-05T19:56:48+0000",
            "author": "Joel Bernstein",
            "content": "So, the tests are going have to be reworked. I said I'd take this on if this ticket fell far behind master. At the time I didn't realize how far behind it would get so quickly. I should have time to review and rework the tests for this ticket over the next week. ",
            "id": "comment-15272955"
        },
        {
            "date": "2016-05-05T23:52:18+0000",
            "author": "Erick Erickson",
            "content": "Every day or two I pull the latest master and re-apply this set of changes. Today was the first day that was at all difficult.\n\nPlease ping me before you start working on it, it may by that I just haven't put up my most recent patch. ",
            "id": "comment-15273334"
        },
        {
            "date": "2016-05-07T15:27:57+0000",
            "author": "Erick Erickson",
            "content": "precommit passes, all tests pass. I'll be beasting the Streaming Aggregation tests today and commit soon unless there are objections. ",
            "id": "comment-15275273"
        },
        {
            "date": "2016-05-08T18:28:25+0000",
            "author": "Erick Erickson",
            "content": "I added a new test incorrectly, this corrects the test.\n\nExcept for the test I messed up, beasting is fine. This test correction is half way through a 100 iteration trial with no problems.\n\nSo I think it's ready. Probably Monday or Tuesday I'll commit it. ",
            "id": "comment-15275661"
        },
        {
            "date": "2016-05-09T13:17:02+0000",
            "author": "Joel Bernstein",
            "content": "Ok, sounds good. ",
            "id": "comment-15276341"
        },
        {
            "date": "2016-05-09T19:42:22+0000",
            "author": "Erick Erickson",
            "content": "No functional changes over last patch, just added solr/CHANGES.txt entry ",
            "id": "comment-15276890"
        },
        {
            "date": "2016-05-09T19:42:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f4359ff8ffd96253ba610865c5e29172307c3c7a in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f4359ff ]\n\nSOLR-8467: CloudSolrStream and FacetStream should take a SolrParams object rather than a Map<String, String> to allow more complex Solr queries to be specified ",
            "id": "comment-15276892"
        },
        {
            "date": "2016-05-09T20:37:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 73b4defc0751bd0cd2ad999e3a4e6c593fd0fb1c in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=73b4def ]\n\nSOLR-8467: CloudSolrStream and FacetStream should take a SolrParams object rather than a Map<String, String> to allow more complex Solr queries to be specified ",
            "id": "comment-15276987"
        }
    ]
}