{
    "id": "LUCENE-6499",
    "title": "WindowsFS misses to remove open file handle if file is concurrently deleted",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.1",
        "components": [
            "modules/test-framework"
        ],
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "WindowsFs has some race conditions when files are concurrently opened and deleted. A file might be successfully opened while concurrently deleted which should be prevented by the WindowsFS with an IOException / access denied. The problem is that we try to remove the leaked file handle form the internal map on close which fails since we fail to read the key from the filesystem since it has already been deleted. This manifests in subsequent `access denied` exceptions even though all streams on the file are closed.",
    "attachments": {
        "LUCENE-6499.patch": "https://issues.apache.org/jira/secure/attachment/12735208/LUCENE-6499.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14558488",
            "author": "Simon Willnauer",
            "date": "2015-05-25T19:52:00+0000",
            "content": "here is a test and a fix for the problem. I am not super happy since we now sync on top of an IO operation but I don't think there is a much easier solution unless we wanna use like an array of locks and the hash of the path to lock on two stages. "
        },
        {
            "id": "comment-14558493",
            "author": "Simon Willnauer",
            "date": "2015-05-25T19:59:13+0000",
            "content": "another patch that reproduces much faster without any sleeps "
        },
        {
            "id": "comment-14558788",
            "author": "Uwe Schindler",
            "date": "2015-05-26T07:33:55+0000",
            "content": "I am not super happy since we now sync on top of an IO operation but I don't think there is a much easier solution unless we wanna use like an array of locks and the hash of the path to lock on two stages\n\nWindowsFS is for tests only, so I think this limitation is fine. With the synchronization the \"atomic\" operation are really atomic (for the Lucene tests) and that is all what counts. I am sure, you and Robert now can be hired by M$ to implement their filesystems! \n\nJust one question about the test: You are using a CyclicBarrier(2) here. Is this just your own preference or is there a specific reason? Most tests like this use a CountDownLatch(1) that is decremented by the child thread once its ready so the main thread starts to fire it with some load. It's not some critique, I never used CyclicBarrier, so it is just my own interest... "
        },
        {
            "id": "comment-14558820",
            "author": "Uwe Schindler",
            "date": "2015-05-26T07:54:59+0000",
            "content": "In any case +1, looks file to me. "
        },
        {
            "id": "comment-14558834",
            "author": "Dawid Weiss",
            "date": "2015-05-26T08:10:19+0000",
            "content": "Typo in \"regeistered\".  Wrt. cyclicbarrier or countdownlatch -> the first one keeps an even starting line for all the threads involved; with countdownlatch you could have the countDown() thread proceed long before any other threads reach await. In practice I don't think this makes any difference. "
        },
        {
            "id": "comment-14558940",
            "author": "Uwe Schindler",
            "date": "2015-05-26T10:08:17+0000",
            "content": "he first one keeps an even starting line for all the threads involved; with countdownlatch you could have the countDown() thread proceed long before any other threads reach await.\n\nI agree, if you would have multiple threads starting - you don't know which one comes first. But the main thread here is already running; the \"assumption\" for the shotgun approach used in other tests is that spawning a thread takes some time, while a already running thread just runs so always comes earlier to the barrier point. I am fine with both solutions \n\nIn any case, neither the cyclic barrier nor the latch guarantee that all threads really start at same time  It is just like with horses waiting for the starting gun to be fired. If one of the horses breaks its leg while starting or wants to drink something... "
        },
        {
            "id": "comment-14558957",
            "author": "Dawid Weiss",
            "date": "2015-05-26T10:29:17+0000",
            "content": "That's why I said it didn't make any practical difference  "
        },
        {
            "id": "comment-14559789",
            "author": "Simon Willnauer",
            "date": "2015-05-26T20:18:53+0000",
            "content": "uwe learned a new API - I knew that day will come....  "
        },
        {
            "id": "comment-14559798",
            "author": "ASF subversion and git services",
            "date": "2015-05-26T20:25:23+0000",
            "content": "Commit 1681846 from Simon Willnauer in branch 'dev/trunk'\n[ https://svn.apache.org/r1681846 ]\n\nLUCENE-6499: WindowsFS misses to remove open file handle if file is concurrently deleted "
        },
        {
            "id": "comment-14559802",
            "author": "Dawid Weiss",
            "date": "2015-05-26T20:28:49+0000",
            "content": "Sorry if this was somehow lost in the noise of other things \u2013 there's a typo in \"regeistered\", it should be \"registered\" (and I think you've committed in the version that will drive any any OCD person, including me, nuts).  "
        },
        {
            "id": "comment-14559815",
            "author": "ASF subversion and git services",
            "date": "2015-05-26T20:36:03+0000",
            "content": "Commit 1681851 from Simon Willnauer in branch 'dev/trunk'\n[ https://svn.apache.org/r1681851 ]\n\nLUCENE-6499: Fix typo and make vars final "
        },
        {
            "id": "comment-14559817",
            "author": "ASF subversion and git services",
            "date": "2015-05-26T20:39:31+0000",
            "content": "Commit 1681852 from Simon Willnauer in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1681852 ]\n\nLUCENE-6499: WindowsFS misses to remove open file handle if file is concurrently deleted "
        },
        {
            "id": "comment-14559824",
            "author": "Simon Willnauer",
            "date": "2015-05-26T20:41:53+0000",
            "content": "Dawid Weiss I committed a fix - sorry it really go lots in uwes horse story  "
        },
        {
            "id": "comment-14559832",
            "author": "ASF subversion and git services",
            "date": "2015-05-26T20:43:52+0000",
            "content": "Commit 1681856 from Simon Willnauer in branch 'dev/branches/lucene_solr_5_2'\n[ https://svn.apache.org/r1681856 ]\n\nLUCENE-6499: WindowsFS misses to remove open file handle if file is concurrently deleted "
        },
        {
            "id": "comment-14586894",
            "author": "Anshum Gupta",
            "date": "2015-06-15T21:44:06+0000",
            "content": "Bulk close for 5.2.0. "
        }
    ]
}