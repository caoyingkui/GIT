{
    "id": "SOLR-2719",
    "title": "REGRESSION ReturnFields incorrect parse fields with hyphen - breaks existing \"fl=my-field-name\" type usecases",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "fl=my-hyphen-field in query params parsed as \"my\" instead of \"my-hyphen-field\".\n\nOAS.search.ReturnFields use method getId() from OAS.search.QueryParsing\nin which check chars \"if (!Character.isJavaIdentifierPart(ch) && ch != '.')\"\nHyphen is not JavaIdentifierPart and this check break when first \"-\" is found.\n\nThis problem solve by passing '-' to check:\nif (!Character.isJavaIdentifierPart(ch) && ch != '.' && ch != '-') break;\n\nBut I don't know how it can affect on whole project.",
    "attachments": {
        "SOLR-2719.patch": "https://issues.apache.org/jira/secure/attachment/12516605/SOLR-2719.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13124364",
            "date": "2011-10-10T18:25:57+0000",
            "content": "setting this as a blocker for 4.0 since it is a fairly serious regression for anyone using field names with \"-\" in them "
        },
        {
            "author": "Nik V. Babichev",
            "id": "comment-13128223",
            "date": "2011-10-15T15:45:51+0000",
            "content": "Is it so hard to fix it? \nHow can I help in fixing? "
        },
        {
            "author": "Luca Cavanna",
            "id": "comment-13219545",
            "date": "2012-02-29T21:02:16+0000",
            "content": "My patch isn't a fix but just a starting point: it adds a ReturnFieldsTest class which tests some of the new fl features. Some tests are of course failing. The biggest problem is the hyphen within the field name, which I guess is widely used. This could be corrected as suggested by Nik, but we have problems with other characters, even if less used within field names.\n\nSolr doesn't validate field names, but now a lot of potential field names can't actually be used within the fl parameter, or even worse they break the query. Some of my test methods are intentionally weird, like the ~idtest or id$test, but those field names are both allowed by Solr. I'm afraid we might have the same problem with sorting since the QueryParsing#parseSort uses the same StrParser#getId method.\n\nThe main rule to identify the end of a field name in StrParser#getId seems to be the following:\n\nif (!Character.isJavaIdentifierPart(ch) && ch != '.')\n\tbreak;\n\n\nI guess it should be extended, not just with the hyphen, but in my opinion the point here is not just correct the hyphen regression. I think we should introduce consistency between fl and decide which characters Solr should accept within a field name. I mean, if Solr accepts everything, we'll always have this fl problem. What are your thoughts guys? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13221234",
            "date": "2012-03-02T20:17:42+0000",
            "content": "I added the tests with @Ignore in revision: 1296434 "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13222379",
            "date": "2012-03-05T14:49:04+0000",
            "content": "I've been saying for a while that using roughly java identifiers for field names was best practice, but we should document it somewhere.\n\nI don't think we should change StrParser.getId to be more permissive though - that will just cause more problems in the future (say when we want to start adding infix and want a-b to be a minus b.  There's not a regression in that specific code since the function parser has never accepted \"-\" as part of a field name. "
        },
        {
            "author": "Luca Cavanna",
            "id": "comment-13222394",
            "date": "2012-03-05T15:21:51+0000",
            "content": "Yonik, I see your point. On the other hand, the dash is a widely used character within field names. The regression is on the Solr behaviour, and I think it's pretty annoying from a user perspective.\n\nAnyway, if that's the direction of the project, no problem. What matters more than anything else is consistency. We should document it somewhere as you wrote, but I'd also propose a field names validation at Solr startup, using the StrParser rules, so that Solr accepts only allowed field names and can guarantee the proper behaviour with all allowed field names.\n\nWhat do you think? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13222401",
            "date": "2012-03-05T15:35:31+0000",
            "content": "but I'd also propose a field names validation at Solr startup,\n\n+1 - rather than playing loosey goosey on what's a valid field name, we should doc and validate for it explicitly. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13222408",
            "date": "2012-03-05T15:41:58+0000",
            "content": "Yonik, I see your point. On the other hand, the dash is a widely used character within field names. The regression is on the Solr behaviour, and I think it's pretty annoying from a user perspective.\n\nThe easiest way to handle this would be this code in ReturnFields:\n\n        // short circuit test for a really simple field name\n        String key = null;\n        String field = sp.getId(null);\n        char ch = sp.ch();\n\n\n\nInstead of using getId, we should hand-roll something that also accepts \"-\" as part of the field name.  That would leave function parser (and other users of getId) alone, but allow fieldnames with dashes in the fl param.\n\nWhat matters more than anything else is consistency.\n\nIf we really want to go for consistency, then we should not accept \"-\" anywhere (rather than attempting to expand it to everywhere). "
        },
        {
            "author": "Luca Cavanna",
            "id": "comment-13222443",
            "date": "2012-03-05T16:44:43+0000",
            "content": "How about trying to achieve both? I mean, are there many other places where we should do the same (adding the dash support)? QueryParsing#parseSort has the same problem. Anything else? I'm probably missing something.\n\nDepending on where we need to add support for dash to add consistency, I would try to add support for the trailing dash here for backward compatibility (I'd have a patch almost ready), and work on validation as well. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13222449",
            "date": "2012-03-05T17:00:25+0000",
            "content": "How about trying to achieve both? I mean, are there many other places where we should do the same (adding the dash support)?\n\nI think this \"regression\" is limited to \"fl\" since that code was changed to support pseudo-fields.\n\nQueryParsing#parseSort has the same problem.\n\nI just tried trunk with \"sort=a-b_s desc\" and it seemed to work fine. "
        },
        {
            "author": "Luca Cavanna",
            "id": "comment-13223261",
            "date": "2012-03-06T13:58:29+0000",
            "content": "Right Yonik, I've been misled by the \n\nString field = sp.getId(null);\n\n\nat the beginning of QueryParsing#parseSort, while the method to look at was getSimpleName. Sorting is ok (but I don't completely understand the sp.getId at the beginning).\n\nI attached a new patch: I added to StrParser a getFieldName method and added to getId the possibility to pass a vararg parameter of allowed trailing chars.\nI made also some changes to ReturnFields to make the code a little bit more readable to me, hope is the same for you guys. Tests work.\nI removed the weird tests about trailing tilde and so on, kept just the trailing dash test which now works (removed @Ignore).\n\nLet me know what you think.\n\nI'm going to open a new issue to add field names validation. "
        },
        {
            "author": "Luca Cavanna",
            "id": "comment-13227608",
            "date": "2012-03-12T15:28:28+0000",
            "content": "Since this issue is blocker for 4.0, it would great to close it soon. Let me know if there's something more I can do to help! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13228131",
            "date": "2012-03-13T01:47:19+0000",
            "content": "Here's a simpler patch that tries to change less (only that first getId call).\n\nI didn't go with the varargs version because it creates objects on every call. "
        },
        {
            "author": "Luca Cavanna",
            "id": "comment-13228302",
            "date": "2012-03-13T09:53:22+0000",
            "content": "Thanks Yonik. I'm of course ok with your patch! \nI agree with your varargs comment, my code was also more generic than it should. But maybe some other changes could be useful to make the code a little more readable here. Furthermore, if we can avoid copy & pasting the same code it's better I guess.\nAnyway, the most important thing is closing this issue, up to you. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13228655",
            "date": "2012-03-13T20:08:26+0000",
            "content": "committed.  I also added a note about recommended field naming to the schema. "
        }
    ]
}