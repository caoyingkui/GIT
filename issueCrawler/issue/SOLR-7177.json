{
    "id": "SOLR-7177",
    "title": "ConcurrentUpdateSolrClient should log connection information on http failures",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10.3,                                            5.0",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "I notice when there is an http connection failure, we simply log the error but not the connection information. It would be good to log this info to make debugging easier.\n\ne.g:\n\n1.\n\n2015-02-27 08:56:51,503 ERROR org.apache.solr.update.StreamingSolrServers: error\njava.net.SocketException: Connection reset\n\tat java.net.SocketInputStream.read(SocketInputStream.java:196)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:122)\n\tat org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:166)\n\tat org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:90)\n\tat org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:281)\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:92)\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:62)\n\tat org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:254)\n\tat org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:289)\n\tat org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:252)\n\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:191)\n\tat org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:300)\n\tat org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:127)\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:715)\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:520)\n\tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)\n\tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:805)\n\tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:784)\n\tat org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner.run(ConcurrentUpdateSolrServer.java:235)\n\n\n\n2.\n\n2015-02-27 10:26:12,363 ERROR org.apache.solr.update.StreamingSolrServers: error\norg.apache.http.NoHttpResponseException: The target server failed to respond\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:95)\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:62)\n\tat org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:254)\n\tat org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:289)\n\tat org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:252)\n\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:191)\n\tat org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:300)\n\tat org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:127)\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:715)\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:520)\n\tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)\n\tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:805)\n\tat org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:784)\n\tat org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner.run(ConcurrentUpdateSolrServer.java:235)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\n\nAs we can notice, we can see the exception but we don't have any information around which server is the end point.",
    "attachments": {
        "SOLR-7177.patch": "https://issues.apache.org/jira/secure/attachment/12701544/SOLR-7177.patch",
        "SOLR-7177v2.patch": "https://issues.apache.org/jira/secure/attachment/12702035/SOLR-7177v2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-02-28T04:02:07+0000",
            "author": "Vamsee Yarlagadda",
            "content": "It might be costly to always log this connection info before every request.\nhttps://github.com/apache/lucene-solr/blob/trunk/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java#L234\n\nI will try to make sure we only log if there is an exception from the above line. ",
            "id": "comment-14341311"
        },
        {
            "date": "2015-02-28T04:35:18+0000",
            "author": "Vamsee Yarlagadda",
            "content": "Here is the first revision of the patch. \nI tried to preserve the original behavior by catching the exception, logging the required details, and then throwing the same exception again. ",
            "id": "comment-14341328"
        },
        {
            "date": "2015-02-28T22:28:50+0000",
            "author": "Alan Woodward",
            "content": "Hi Vamsee,\n\nRather than logging the error and re-throwing, I think it makes more sense to wrap the whole Exception in another IOException with a message including the URL?  Then logging etc is dealt with by handleError automatically. ",
            "id": "comment-14341810"
        },
        {
            "date": "2015-03-01T04:53:09+0000",
            "author": "Mark Miller",
            "content": "Why not just add this info where the exception is first thrown in solr cmd distributor? I ",
            "id": "comment-14341933"
        },
        {
            "date": "2015-03-03T00:36:31+0000",
            "author": "Vamsee Yarlagadda",
            "content": "I think it makes more sense to wrap the whole Exception in another IOException with a message including the URL?\n+1. This looks much cleaner. I am planning to use SolrServerException (as this captures more of communication related errors).\n\nWhy not just add this info where the exception is first thrown in solr cmd distributor? \n1. ConcurrentUpdateSolrClient is part of SolrJ right. Adding this info at this class will also benefit all the end users who are directly using solrj api to talk with Solr service. Adding this at SolrCmdDistributor will only expose this to internal solr server log. \n2. Moreover, ConcurrentUpdateSolrClient already does something similar to the above proposed idea. We are just trying to extend the same idea.\nhttps://github.com/apache/lucene-solr/blob/trunk/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java#L242 ",
            "id": "comment-14344152"
        },
        {
            "date": "2015-03-03T00:48:09+0000",
            "author": "Vamsee Yarlagadda",
            "content": "Here is another revision of the patch.\nWe are now wrapping up the original exception in SolrServerException with additional information. ",
            "id": "comment-14344176"
        },
        {
            "date": "2015-03-03T17:03:24+0000",
            "author": "Mark Miller",
            "content": "Adding this info at this class will also benefit all the end users who are directly using solrj api to talk with Solr service.\n\nIn that case you know the URL - you had to init the class with it and this is part of your client code. You can log whatever you want if the call fails on the client side. ",
            "id": "comment-14345340"
        },
        {
            "date": "2015-03-03T17:07:28+0000",
            "author": "Mark Miller",
            "content": "Just to be clear by the way, just discussing, not pushing back on the current patch. ",
            "id": "comment-14345347"
        },
        {
            "date": "2015-03-03T23:56:45+0000",
            "author": "Vamsee Yarlagadda",
            "content": "In that case you know the URL - you had to init the class with it and this is part of your client code. You can log whatever you want if the call fails on the client side.\nTrue. But at the same time we would have to add this logic of adding url information at multiple places right (one at the server, one at the solrj client)? If this is considered as the most basic info to be attached to the exception we can do it at the ConcurrentUpdateSolrClient. If we need to add some extra information on top of adding url info then this extra work can be done at the place where we are init'ing the class. Thoughts? ",
            "id": "comment-14346028"
        },
        {
            "date": "2015-03-04T00:27:17+0000",
            "author": "Mark Miller",
            "content": "Yeah, I think thats fine. ",
            "id": "comment-14346092"
        },
        {
            "date": "2015-04-17T13:42:35+0000",
            "author": "Mark Miller",
            "content": "I just came back to this this morning.\n\n\n+            try {\n               response = client.getHttpClient().execute(method);\n+            } catch (Exception ex) {\n+              SolrServerException solrExc = new SolrServerException(\"Error during http connection. Request: \" + method.getURI(), ex);\n+              throw solrExc;\n+            }\n+\n\n\n\nI'm not sure if it's a good idea to wrap any exception from execute as a SolrServerException. That seems like it can be a little tricky.\n\nLooking at the code though, isn't this already handled? If the status is not 200, there should be a log of 'error' and the exception, including a message that includes the method.getURI() info. Was that added after this issue perhaps? Or is that not working as intended? ",
            "id": "comment-14499842"
        }
    ]
}