{
    "id": "SOLR-3534",
    "title": "dismax and edismax should default to \"df\" when \"qf\" is absent.",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "query parsers"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The dismax and edismax query parsers should default to \"df\" when the \"qf\" parameter is absent.  They only use the defaultSearchField in schema.xml as a fallback now.",
    "attachments": {
        "SOLR-3534_dismax_and_edismax_should_default_to_df_if_qf_is_absent.patch": "https://issues.apache.org/jira/secure/attachment/12531832/SOLR-3534_dismax_and_edismax_should_default_to_df_if_qf_is_absent.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jack Krupansky",
            "id": "comment-13293073",
            "date": "2012-06-11T20:56:05+0000",
            "content": "I would also suggest that the default if neither qf or df is present should be \"text\" preferably as a symbolic constant. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13293074",
            "date": "2012-06-11T20:57:40+0000",
            "content": "RE \"text\" default \u2013 that would be yet another default and worse, IMO, is it would be too hidden of a default.  Being explicit by specifying a parameter on the request is best, IMO. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13293111",
            "date": "2012-06-11T21:38:39+0000",
            "content": "Okay, but if df does not have a default value, then at least have it throw an exception at an early stage, like core/handler load, rather than result in queries with an empty field name that returns zero results as it does today.\n\nAlthough, I suppose it is possible that a particular application may intend to set df explicitly on each request and not need/want a default. But, even in that case, I think an exception should be thrown rather than accept an empty field name and silently provide zero search results.\n\nI am still in favor of \"text\" as the hardwired default. Isn't \"text\" the traditional default search field? Including in the Solr example schema.\n\nBut, that said, I will certainly defer to the rest of the Solr community. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13293120",
            "date": "2012-06-11T21:52:37+0000",
            "content": "Isn't \"text\" the traditional default search field? Including in the Solr example schema.\n\nYes, it's in the example schema.... but we should not hardcode field names anywhere.  The configuration should determine any \"default\" field names, and thus why \"text\" is wired into the example schema and solrconfig files liberally. "
        },
        {
            "author": "Bernd Fehling",
            "id": "comment-13293400",
            "date": "2012-06-12T07:07:51+0000",
            "content": "I think that there shouldn't be any hardwired config, but the fallback should report/log its action so that the user has the chance to find his config problem and correct it.\nAnd instead of silently providing zero search results I would recommend an exception. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13293641",
            "date": "2012-06-12T14:06:05+0000",
            "content": "Attached is a patch, with a test.  I pulled out this logic into a static method so that both dismax and edismax could use it, just as it was done for parsing MM.  I'll apply this patch tomorrow. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13293647",
            "date": "2012-06-12T14:10:26+0000",
            "content": "Bernd:\nIn my patch I did throw an exception if neither 'qf', 'df' nor the default search field were present.\n\nIt's tempting to log warnings if a default is relied upon that is inadvisable (like defaultSearchField), but that could flood logs.  A one-time flag could be set to prevent this I guess. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13293651",
            "date": "2012-06-12T14:17:27+0000",
            "content": "Looks like a reasonable compromise. I would edit the exception so that it reads like you just said: \"neither 'qf', 'df' nor the default search field are present\" or at least add \"Neither\" in front of what you currently have.\n\nAny idea what happens for the classic/Solr or flex query parsers if default search field is not present? "
        },
        {
            "author": "David Smiley",
            "id": "comment-13294121",
            "date": "2012-06-13T03:45:42+0000",
            "content": "Jack: I'll improve the exception wording as you suggest.\n\nAny idea what happens for the classic/Solr or flex query parsers if default search field is not present?\n\nThe lucene query parser (which is the default) doesn't technically require a default field, but if there is ambiguity in the query (i.e. a simple search word) then you get an exception. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13294811",
            "date": "2012-06-14T05:19:04+0000",
            "content": "I ran all tests before committing and found the MinimalSchemaTest failed related to the \"dismaxNoDefaults\" request handler in the test solrconfig.xml which was added in SOLR-1776.  The problem is throwing an exception if there's no 'qf', 'df', or default search field.  I disagree with that test \u2013 it is erroneous/misleading to use dismax without setting specifying via any of those 3 mechanisms.  I am inclined to delete the \"dismaxNoDefaults\" test request handler (assuming there are no other ramifications).  I want to get input from Hoss who put it there so I'll wait. "
        },
        {
            "author": "Bernd Fehling",
            "id": "comment-13294818",
            "date": "2012-06-14T05:56:37+0000",
            "content": "Because of defaultSearchField that's why I stated in SOLR-2724 that 3.6.x (and obviously 4.x also) is now broken.\nThere are many places where getDefaultSearchFieldName() is called and noone looked through the code after setting defaultSearchField to deprecated in schema.xml. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13295019",
            "date": "2012-06-14T13:22:04+0000",
            "content": "defaultSearchField may be referenced in a bunch of places but it is always a default for something else that you should be specifying (typically 'df').  I've commented out my defaultSearchField long before it was deprecated. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13295025",
            "date": "2012-06-14T13:35:12+0000",
            "content": "Just to keep these concerns separated, this issue, SOLR-3534 is about two things:\n\n\tdismax&edismax should look at 'df' before falling back to defaultSearchField\n\tdismax&edismax should throw an exception if neither 'qf', 'df', nor defaultSearchField are specified, because these two query parsers are fairly useless without them.\n\n\n\nSOLR-2724 is about the deprecation of defaultSearchField "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13295268",
            "date": "2012-06-14T19:48:46+0000",
            "content": "dismax&edismax should look at 'df' before falling back to defaultSearchField\n\n+1 ... i thought it already did that, but i guess not.  If we are \"deprecating/discouraging\" <defaultSearchField/> and instructing people to use \"df\" instead, then we should absolutely make 100% certain any code path we ship that currently consults <defaultSearchField/> checks \"df\" first.  (if/when the code paths that consult <defaultSearchField/> are removed, they should still consult \"df\")\n\ndismax&edismax should throw an exception if neither 'qf', 'df', nor defaultSearchField are specified, because these two query parsers are fairly useless without them.\n\n+1 ..  (although i suppose edismax could still be usable if every clause is fully qualified with a fieldname/alias and fail only when a clause that requires a default is encountered ... just like the LuceneQParser)\n\nI ran all tests before committing and found the MinimalSchemaTest failed related to the \"dismaxNoDefaults\" request handler in the test solrconfig.xml which was added in SOLR-1776. The problem is throwing an exception if there's no 'qf', 'df', or default search field. I disagree with that test \u2013 it is erroneous/misleading to use dismax without setting specifying via any of those 3 mechanisms. I am inclined to delete the \"dismaxNoDefaults\" test request handler (assuming there are no other ramifications). I want to get input from Hoss who put it there so I'll wait.\n\nAs Bernd noted, that test was written at a time when the schema.xml used by the test had a <defaultSearchField/> declared \u2013 that was/is the entire point of the test: that the Dismax(Handler|QParser) could work with a \"<defaultSearchField/>\" and a \"q\" and no other params specified.  As long as \"<defaultSearchField/>\" is legal (even if it's deprecated and not mentioned in the example schema.xml) a test like that should exist somewhere shouldn't it?  (if/when \"<defaultSearchField/>\" is no longer legal, then certainly change the test to add a \"df\" param and assert that it fails if one isn't specified)\n\n\u2013\n\nThe current patch looks like a great start to me ... but i would suggest refactoring this core little bit into it's own method in SolrPluginTools and replacing every use of getDefaultSearchFieldName in the code base with it (and add a link to it from getDefaultSearchFieldName javadocs encouraging people to use it instead)...\n\n\n/**\n * returns the effective default field based on the params or \n * hardcoded schema default.  may be null if either exists specified.\n * @see CommonParams#DF\n * @see IndexSchema#getDefaultSearchFieldName\n */\npublic static String getDefaultField(final IndexSchema s, final SolrParams p) {\n  String df = p.get(CommonParams.DF);\n  if (df == null) {\n    df = s.getDefaultSearchFieldName();\n  }\n  return df;\n}\n\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-13295296",
            "date": "2012-06-14T20:28:08+0000",
            "content": "Hoss, I like your suggestion of refactoring this to SolrPluginUtils (not *Tools which doesn't exist).  And also I realized that SolrParams.get() takes a 2nd arg for the default which can be s.getDefaultSearchFieldName(), simplifying this even more.\n\nAs Bernd noted, that test was written at a time when the schema.xml used by the test had a <defaultSearchField/> declared \u2013 that was/is the entire point of the test: that the Dismax(Handler|QParser) could work with a \"<defaultSearchField/>\" and a \"q\" and no other params specified. As long as \"<defaultSearchField/>\" is legal (even if it's deprecated and not mentioned in the example schema.xml) a test like that should exist somewhere shouldn't it? (if/when \"<defaultSearchField/>\" is no longer legal, then certainly change the test to add a \"df\" param and assert that it fails if one isn't specified)\n\nI'm confused by this, especially since you \"+1\"'ed on throwing an exception.  I'll presume that you don't mean \"<defaultSearchField/>\" literally, you mean \"<defaultSearchField>text</defaultSearchField/>\".  So are you effectively saying that schema-minimal.xml should add a defaultSearchField to it? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13295303",
            "date": "2012-06-14T20:40:00+0000",
            "content": "I'll presume that you don't mean \"<defaultSearchField/>\" literally, you mean \"<defaultSearchField>text</defaultSearchField/>\".\n\nyes, sorry .. i was using \"<defaultSearchField/>\" as shorthand for <defaultSearchField>...something...</defaultSearchField/>, that was bad on my part and totally confusing.\n\nSo are you effectively saying that schema-minimal.xml should add a defaultSearchField to it?\n\nNo, i'm saying that as long as \"<defaultSearchField>...</defaultSearchField/>\" is legal and supported configuration, then this specific test (of \"dismaxNoDefaults\") should use a schema that has a \"<defaultSearchField>...</defaultSearchField/>\" in it since that's the point of the test.\n\nschema-minimal.xml should certainly not have a \"<defaultSearchField>...\" added, since that would no longer truely be a minimal schema.xml "
        },
        {
            "author": "David Smiley",
            "id": "comment-13295306",
            "date": "2012-06-14T20:45:15+0000",
            "content": "TestExtendedDismaxParser line 126 already tests that defaultSearchField is consulted.  In this patch I added another test above it to ensure that \"df\" is consulted. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13295310",
            "date": "2012-06-14T20:53:59+0000",
            "content": "\nThe point of the test is to assert that DismaxQParser can function correctly with nothing but a \"q\" param and a schema specifying a defaultSearchField.  If that's covered by another test you're adding (or that already exists) then great, we don't need it. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13295471",
            "date": "2012-06-15T06:10:06+0000",
            "content": "This is an updated patch. Instead of SolrPluginUtils, I chose QueryParsing which already has a similar method for q.op.  And like q.op I had the 2nd arg be the string that the caller resolves. Some callers don't have a convenient params to provide.  The fact that some don't led me to start doing more refactorings to QParser that I decided to withdraw from as to not make this issue do too much at once.\n\nI already committed test modifications so that this patch will pass. (I jumped the gun perhaps but no matter.)  You should see this change in the subversion tab in JIRA. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13295473",
            "date": "2012-06-15T06:12:56+0000",
            "content": "Whoops \u2013 that commit (#1350466) was mis-commented to SOLR-3304. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13295900",
            "date": "2012-06-15T20:26:43+0000",
            "content": "I think it would be helpful to users and ease the support burden if we added a warning to the comment for <defaultSchemaField> (whether deprecated or not) that says \"WARNING: The \"df\" request parameter, including the default in any query request handlers, overide this default. So, be sure to review how \"df\" may be used for relevant request handlers before specifying a last-resort default search field here.\"\n\nSimilar wording should be included in SOLR-2724. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13393431",
            "date": "2012-06-17T03:46:41+0000",
            "content": "Committed to 4x & trunk. "
        }
    ]
}