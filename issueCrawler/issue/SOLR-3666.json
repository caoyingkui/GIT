{
    "id": "SOLR-3666",
    "title": "DataImportHandler status command in SolrCloud does not work properly",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler",
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The dataimport?command=status command does not work correctly when invoked on the node not running the DIH in a SolrCloud configuration.\nThe expectation is that no matter which node is importing any other node should be able get the import status information.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-16279001",
            "date": "2017-12-05T18:27:13+0000",
            "content": "This problem still comes up on the mailing list, five years after the issue was created.\n\nFixing this problem would require that when an import is started, that the handler name is written somewhere in zookeeper under the znode for the collection, along with the host/port/context of the core where the import was started.  That way, when a status request comes in, Solr will know where the import is actually happening, and can direct the status command to the same place.\n\nOne potential problem I thought of: What should Solr do if the host/port/context that has been written into ZK stops responding?  If we remove the info we wrote to ZK when that happens, but the problem is transitory in nature and the import didn't actually stop, then further status requests after the transitory problem fixes itself might not go to the core that is actually running the import, so the user may see an idle status for an import that actually still is running.\n\nAnother wrinkle: If there is no info in ZK for the handler name, should a \"status\" command write the info to ZK, or should that be reserved to commands that start imports?\n\nSomething else to think about: Should the info pointing further requests to the same core have an expiration?  Some imports can take days, and there might even be some that take longer. If there is an expiration after which the znode is removed, it would be absolutely mandatory for the time interval to be configurable, in several time units. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-16283704",
            "date": "2017-12-08T15:12:04+0000",
            "content": "I'm going to outline some ideas.  I'm coming up with these from a place where I do not know much about DIH code at all, and I've never actually used DIH in a server running in cloud mode, so I have never seen what people describe on the mailing list first-hand.\n\nDoes anyone know whether the dataimport handler can be aware of whether the \"original\" request was sent directly to a core or to the collection? "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-16284043",
            "date": "2017-12-08T19:04:42+0000",
            "content": "One of the first things that may require bikeshedding is where exactly to store the sticky information for DIH in zookeeper, what exactly needs to be recorded, and how it should be written.  If it weren't for the fact that handler names usually have forward slashes, I'd prefer znodes, but since I don't think znodes can have that character, I'm betting that a json state file will be the right way to go.  Would URL encoding the handler name make sense, so we can use a znode structure?\n\nLooking at the Cloud->Tree info in Solr's admin UI, I notice that znodes have timestamps, so I wonder if the \"mtime\" data could be used for expiration purposes if we use pure znodes and something like URL encoding for the handler name.\n\nI will need to defer to others about the overseer, watches, and other such details. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-16284048",
            "date": "2017-12-08T19:07:49+0000",
            "content": "While looking into how to do a few things, I have discovered that the bin/solr script itself seems to have bashisms, so I'm not going to worry about bourne shell compatibility. "
        }
    ]
}