{
    "id": "SOLR-480",
    "title": "Use RAMDirectory instead of FSDirectory when searching",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Allow one to configure SOLR to use RAMDirectory instead of FSDirectory when searching.",
    "attachments": {
        "useRAMDirectory.patch": "https://issues.apache.org/jira/secure/attachment/12375735/useRAMDirectory.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Murtaza Sonaseth",
            "id": "comment-12569469",
            "date": "2008-02-16T00:45:15+0000",
            "content": "I needed this for a project. I've created this JIRA so that I can contribute a patch for this.\n\nAbout the contributed patch (affects SolrCore.java and solrconfig.xml example):\nI've modified SolrCore such that it picks up a new configuration option called \"useRAMDirectory\" from solrconfig.xml. If it is set to true, the lucene searcher uses the RAMDirectory created from the index - if false or missing, it uses the FSDirectory as usual. \n\nSo far I have been using builds using this patch for 1 month and has worked quite fine.\n\nIf someone can have a look to see if it is right and worth including into the source, I would appreciate it. Thanks! "
        },
        {
            "author": "Murtaza Sonaseth",
            "id": "comment-12569473",
            "date": "2008-02-16T00:57:33+0000",
            "content": "SVN patch for using RAMDirectory for searcher "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12571225",
            "date": "2008-02-21T23:10:36+0000",
            "content": "Murtaza: this seems to be a duplicate issue to SOLR-465.\n\nI'm not super familiar with the current patch in SOLR-465, but i believe it is a bit more general purpose then your solution, allowing support for any arbitrary type of \"Directory\" implementation.\n\nPlease take a look at that issue, and chime in with any comments you have on the approach being taken there. "
        }
    ]
}