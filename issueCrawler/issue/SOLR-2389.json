{
    "id": "SOLR-2389",
    "title": "Default HTTP caching hurts developer experience.",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The default configuration in example/solr/solrconfig.xml for HTTP caching can easily result cached responses (304) to a change configuration that would result in a different response.  This results in a bad user (developer) experience, especially for the novice Solr user. It bit me several times when I was getting started.  Hopefully I don't need to further convince committers that the default configuration is a problem.  So as a consequence, I've always added never304=\"true\" when starting new work with Solr and I recommend that readers of my book do the same. I'd like to see this rectified.\n\nThe lastModifiedFrom=\"openTime\" attribute should not be a problem. The openTime is \"safe\" and should not introduce bad cached responses, except when the query response uses \"NOW\"; but there's little that can be done about that.\n\nThe etagSeed is a problem because it uses IndexReader.getVersion() which is the commit version and does not take into consideration the possibility of a configuration change. I hoped that not specifying etagSeed would result in no ETag but that did not occur \u2013 I consider that a bug.  Similarly, I would expect not specifying lastModifiedFrom would not result in a Last-Modified header but I haven't checked what happens.\n\nI'm not an expert in caching headers but it seems a little redundant to use both Last-Modified & ETag (& potentially Expires) when just one of these would suffice.  Would it not?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13000018",
            "date": "2011-02-27T18:05:52+0000",
            "content": "This results in a bad user (developer) experience\n\nI think I agree - I was bit by this a lot when the HTTP caching feature was added, until I trained myself to hold shift whenever I sent test queries to Solr. "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13000101",
            "date": "2011-02-28T04:12:23+0000",
            "content": "If we totally turn it off, I would add a comment on how to turn it back on, and add a note to the WIKI.\n\nI am not really sure how to totally turn it off. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13000530",
            "date": "2011-02-28T21:32:48+0000",
            "content": "i'v made some related changes in my patch to SOLR-2397 so the example config there won't use HTTP Caching by default (but still has good commented out examples of how to enable it) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13000535",
            "date": "2011-02-28T21:38:14+0000",
            "content": "I hoped that not specifying etagSeed would result in no ETag but that did not occur \u2013 I consider that a bug. Similarly, I would expect not specifying lastModifiedFrom would not result in a Last-Modified header but I haven't checked what happens.\n\nwhen http cache headers are enabled, and solr is checking for validation requests (to response with a 304 if applicable) then solr will always output Last-Modified and ETag (per the specs) using sensible defaults \u2013 those params just let you override those defaults.\n\nI'm not an expert in caching headers but it seems a little redundant to use both Last-Modified & ETag (& potentially Expires) when just one of these would suffice. Would it not?\n\nIt's intentional redundancy and part of the spec for HTTP Caching.  naive caches can use only the Last-Modified, while more sophisticated caches can use the ETag to recognize when the content has changed i na way that doesn't actually invalidate the cache.\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13001022",
            "date": "2011-03-01T18:59:52+0000",
            "content": "dealt with in SOLR-2397, example solrconfig.xml no longer has HTTP cache headers/validation configured. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013144",
            "date": "2011-03-30T15:45:41+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}