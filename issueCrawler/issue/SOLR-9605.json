{
    "id": "SOLR-9605",
    "title": "Add field literal support to /update/json/docs",
    "details": {
        "components": [
            "update"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Won't Fix",
        "priority": "Minor"
    },
    "description": "Noble Paul suggests f=x:'literal string'",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-05T16:48:15+0000",
            "author": "Noble Paul",
            "content": "one potential issue with syntax I see is with child docs. what does it mean when I specify split=/|/child-doc-path do we put the literal on both root and child docs?  what if we want to add different literal fields for parent, child1 and child2 ? ",
            "id": "comment-15549282"
        },
        {
            "date": "2016-10-05T16:54:43+0000",
            "author": "Yonik Seeley",
            "content": "High-level idea: reuse the \"Smart merging of multiple JSON parameters\"\nhttp://yonik.com/solr-json-request-api/\n\n\njson.mystrfield=\"literal\"\njson.myintfield=42\njson.my_multivalued_field=[1,2,5]\njson.child_doc_path.child_field=\"hi\"\njson.child_doc_path={\"field1\":10, \"field2\":\"setting multiple fields at once\"}\n\n ",
            "id": "comment-15549308"
        },
        {
            "date": "2016-10-05T17:26:27+0000",
            "author": "Noble Paul",
            "content": "it's not that simple Yonik Seeley\n\nwe have a lot of flexibility in our syntax .  I can specify child=/|/child1|child2 . what if wish to add literal 'A' to the parent doc and literal 'B' to docs found under /child1 and literal 'C' to docs found under /child2. \n\n\nI suggest the following \n\n\nf=x:'literal string' // this will add field 'x' as 'literal string' to root doc. The most common usecase equivalent to f=x@/:'literal string'\nf=y@/child1:'literal string 2' // will add field 'y' to docs found under /child1 as 'literal srtring 2'\nf=z@/child2:'literal string 3'  // will add field 'z' to docs found under /child2 as 'literal srtring 3'\n\n ",
            "id": "comment-15549417"
        },
        {
            "date": "2016-10-05T18:07:49+0000",
            "author": "Yonik Seeley",
            "content": "Ah, so what's missing from the smart json merging is adding for every child (and array handling... they go hand-in-hand).\n\nHopefully the 'literal string' in the examples can still be full JSON though... in order to handle multi-valued fields and fields with types other than string.\n\nf=y@/child1:[5,7,11]\n\n ",
            "id": "comment-15549525"
        },
        {
            "date": "2016-10-05T18:52:57+0000",
            "author": "Noble Paul",
            "content": "Hopefully the 'literal string' in the examples can still be full JSON though.\n\nyes, it could be a single value or an array of values. it should not accept objects like \n\nf=y@/child1:{x:y, p:q}\n\n\n\nso the possible values are \n\n\ta string literal specified in single quotes\n\tan array of primitive values specified in json array format\n\n ",
            "id": "comment-15549637"
        },
        {
            "date": "2016-10-18T10:08:53+0000",
            "author": "Noble Paul",
            "content": "this can be achieved with SOLR-9657, which is a more generic solution ",
            "id": "comment-15585080"
        }
    ]
}