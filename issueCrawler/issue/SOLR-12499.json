{
    "id": "SOLR-12499",
    "title": "Add reduce operation to merge field values",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "streaming expressions"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "7.3.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "It would be nice to have a reduce operation that lets you collect the values of a field from the group of tuples into an array.\n\nSomething that transforms\n\n{\n\u00a0\"k1\": \"1\",\n\u00a0\"k2\": [\"a\", \"b\"]\n},\n{\n\u00a0\"k1\": \"2\",\n\u00a0\"k2\": [\"c\", \"d\"]\n},\n{\n\u00a0\"k1\": \"2\",\n\u00a0\"k2\": [\"e\", \"f\"]\n}\n\ninto\n\n{\n\u00a0\"k1\": \"1\",\n\u00a0\"k2\": [\"a\", \"b\"]\n},\n{\n\u00a0\"k1\": \"2\",\n\u00a0\"k2\": [\"c\", \"d\", \"e\", \"f\"]\n}\n\n\nand\n\n{\n\u00a0\"k1\": \"1\",\n\u00a0\"k2\": \"a\"\n},\n{\n\u00a0\"k1\": \"2\",\n\u00a0\"k2\": \"b\"\n},\n{\n\u00a0\"k1\": \"2\",\n\u00a0\"k2\": \"c\"\n}\n\ninto\n\n{\n\u00a0\"k1\": \"1\",\n\u00a0\"k2\": [\"a\"]\n},\n{\n\u00a0\"k1\": \"2\",\n\u00a0\"k2\": [\"b\", \"c\"]\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-19T13:43:30+0000",
            "content": "I created a draft version of what I had in mind here:\n\nhttps://github.com/cspitzlay/lucene-solr/compare/branch_7x...cspitzlay:branch_7x_field_value_merge?expand=1\n\n\u00a0(as Joel Bernstein suggested on solr-user, I had taken a look at the GroupOperation and went from there) ",
            "author": "Christian Spitzlay",
            "id": "comment-16517086"
        },
        {
            "date": "2018-06-19T13:51:15+0000",
            "content": "Is there a way to add the added operation to an installed released version of Solr? So I can test the new function in the real setup of my application instead of the development version I just compiled?\u00a0\n\nIn the branch I added the function to the Lang class but I read that there was a way to register the name in the solr config. I haven't found an example or docs yet though. ",
            "author": "Christian Spitzlay",
            "id": "comment-16517096"
        },
        {
            "date": "2018-06-19T14:21:28+0000",
            "content": "Using the proposed patch, this example produces the expected result.\n\nExpression:\n\n\u00a0\n\nreduce(\n merge(\n   sort(cartesianProduct(tuple(k1=\"1\", k2=array(a)), k2, productSort=\"k1 asc\"), by=\"k1 asc\"),\n   sort(cartesianProduct(tuple(k1=\"2\", k2=array(b,c)), k2, productSort=\"k1 asc\"), by=\"k1 asc\"),\n   on=\"k1 asc\"\n ),\n by=\"k1\",\n fieldValueMerge(sort=\"k1 asc\", n=\"10\", mergeField=k2)\n)\n\nResult:\n\n{\n  \"result-set\": {\n    \"docs\": [\n      {\n        \"k1\": \"1\",\n        \"k2\": [\n          \"a\"\n        ]\n      },\n      {\n        \"k1\": \"2\",\n        \"k2\": [\n          \"b\",\n          \"c\"\n        ]\n      },\n      {\n        \"EOF\": true,\n        \"RESPONSE_TIME\": 0\n      }\n    ]\n  }\n}\n\n\n\u00a0 ",
            "author": "Markus Kalkbrenner",
            "id": "comment-16517154"
        },
        {
            "date": "2018-06-20T02:08:49+0000",
            "content": "What do you think of calling the operation \"flatten\"?\n\nAlso what should be done with the fields that are not listed to be merged? Maybe we should merge all fields? ",
            "author": "Joel Bernstein",
            "id": "comment-16517703"
        },
        {
            "date": "2018-06-22T07:39:26+0000",
            "content": "Sorry, the flu has knocked me out for some days.\n\nAnd now I will be away for a couple of weeks. Markus Kalkbrenner may take over and go forward with this. He has write access to my github repository.\n\n\tThe current implementation just copies the values from the first document in the group (The sort order may still be something to check, it seems to be backwards w.r.t. what I would have expected). I kept that behaviour the way it was in GroupOperation.\n\tI can imagine a case where the different documents share some values but not others.\u00a0 For the shared values the user would end up with an array of identical values, one from each document which would make handling the result harder. Maybe one could provide a list of fields to be merged instead of a single one?\n\tThe name \"flatten\" makes sense if one thinks of a group of documents being reduced to a single one but I think that is already expressed by the \"reduce\". It think the name of the group operation should specifically express what is special about the way it treats the values. One could imagine operations that calculate min, max, sum, ... of a given field, for example (although that can already be done with rollup, if I understand correctly). The new operation merges values from the single documents (arrays or scalars) into an array under the same name. So mergeFieldValue seemed straightforward to me. Maybe there's a better name of course but I think flatten does not explain what the function does at least not how I understand the word flatten.\n\n\n\n\u00a0 ",
            "author": "Christian Spitzlay",
            "id": "comment-16520085"
        },
        {
            "date": "2018-06-27T10:51:47+0000",
            "content": "FYI as an intermediate step I created a jar providing FieldValueMergeOperation and added it to our regular Solr Cloud instances using\n\n<expressible name=\"fieldValueMerge\" class=\"org.apache.solr.client.solrj.io.ops.FieldValueMergeOperation\" />\n\nOur developers now use it within their code and it looks very good so far. ",
            "author": "Markus Kalkbrenner",
            "id": "comment-16524900"
        }
    ]
}