{
    "id": "LUCENE-3506",
    "title": "tests for verifying that assertions are enabled do nothing since they ignore AssertionError",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/test"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Follow-up from LUCENE-3501",
    "attachments": {
        "LUCENE-3506.patch": "https://issues.apache.org/jira/secure/attachment/12500665/LUCENE-3506.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-10-25T12:33:56+0000",
            "content": "Attached fix for this:\n\n\n\tassertionsEnabled() method added to LTC.\n\n\n\n\n\ttests that were no op were fixed to actually test that the assertion failed.\n\n\n\n\n\tafter the fix, in trunk, analyzer's final'ness assertion tests failed because being final (class or method) is no longer needed in trunk. So these tests were removed in TestAssertions.\n\t\n\t\tnote: should not remove these tests when merging to 3x.\n\t\n\t\n\n\n\n\n\tTestSegmentMerger also failed with this fix - because it used the stale IW's SegmentInfos to create a compound segment. Fixed by reading a fresh SIS.\n\n\n\n\n\tonly one test (TestAssertions.testbasics()) fails if assertions are not enabled. The other tests do not fail (though they do execute). I think that this was intended in the code, thought since it did not work it is hard to tell...\n\n\n\nThis is ready to commit. ",
            "author": "Doron Cohen",
            "id": "comment-13134980"
        },
        {
            "date": "2011-10-25T12:39:38+0000",
            "content": "Thanks for catching the Analyzer final assertion test issue. ",
            "author": "Chris Male",
            "id": "comment-13134987"
        },
        {
            "date": "2011-10-25T12:51:23+0000",
            "content": "+1 to commit! ",
            "author": "Uwe Schindler",
            "id": "comment-13134997"
        },
        {
            "date": "2011-10-25T12:55:44+0000",
            "content": "I'm confused here \u2013 the changes to TestSegmentMerger look like they'll allow the test to pass when assertions are disabled?\n\n(Whereas today if you run that test w/o assertions you get a failure, albeit a confusing one). ",
            "author": "Michael McCandless",
            "id": "comment-13135002"
        },
        {
            "date": "2011-10-25T12:59:54+0000",
            "content": "maybe make assertionsEnabled() static in LuceneTestCase, and add assertTrue(assertionsEnabled()) in LuceneTestCase's beforeClass?\n\nThis way all tests will fail if assertions are not enabled.\n\nThe other day I committed an accidental change to common-build that disabled assertions, and it was a little confusing to track down. ",
            "author": "Robert Muir",
            "id": "comment-13135004"
        },
        {
            "date": "2011-10-25T14:22:57+0000",
            "content": "(Whereas today if you run that test w/o assertions you get a failure, albeit a confusing one).\n\nActually today when you run the tests - with assertions, without assertions, - you get no failures at all - which is what I was trying to fix here (unless I missed something seriously) - because:\n\n\tthe original tests, after deciding to fail, invoked fail()\n\tthis threw AssertionError\n\tbut it was ignored as part of their wrong logic.\n\n\n\nI'm confused here \u2013 the changes to TestSegmentMerger look like they'll allow the test to pass when assertions are disabled?\n\nRight, I fixed it such that only if assertions are enabled, they verify that the expected assertion errors are not thrown, so they allow you to run tests also without enabling assertions. See my comment above \"only one test...\". I take it that this kind of flexibility is not required. So will change it so that these tests will fail if assertions are not enabled.\n\nThe other day I committed an accidental change to common-build that disabled assertions, and it was a little confusing to track down.\n\nI see, so we make the entire test framework to fail if assertions are not enabled.\nI'll update the patch. ",
            "author": "Doron Cohen",
            "id": "comment-13135086"
        },
        {
            "date": "2011-10-25T15:14:48+0000",
            "content": "Updated patch as suggested, thanks guys for reviewing and your helpful comments. ",
            "author": "Doron Cohen",
            "id": "comment-13135136"
        },
        {
            "date": "2011-10-25T16:01:14+0000",
            "content": "\nActually today when you run the tests - with assertions, without assertions, - you get no failures at all - which is what I was trying to fix here (unless I missed something seriously) - because:\n\n\n\tthe original tests, after deciding to fail, invoked fail()\n\tthis threw AssertionError\n\tbut it was ignored as part of their wrong logic.\n\n\n\nAhh, OK, I missed that fail() throws AssertionError which this then caught & ignored.  OK.  Patch looks good! ",
            "author": "Michael McCandless",
            "id": "comment-13135179"
        },
        {
            "date": "2011-10-25T17:13:01+0000",
            "content": "Fixed: \n\n\tr1188777 - trunk\n\tr1188801 - 3x\n\n\n\nMike, Uwe, Robert, thanks for reviewing! ",
            "author": "Doron Cohen",
            "id": "comment-13135241"
        },
        {
            "date": "2011-10-25T17:19:28+0000",
            "content": "Err... how is this different:\n\nassert Boolean.FALSE.booleanValue();\n\n\nfrom \n\nassert false;\n\n\n\nIs there any compile-time code elimination? I ask specifically because I've implemented a dedicated validator for this purpose in RandomizedRunner here:\n\nhttps://github.com/carrotsearch/randomizedtesting/blob/master/runner/src/main/java/com/carrotsearch/randomizedtesting/validators/EnsureAssertionsEnabled.java\n\nand this seems to work just fine (checked with and without -ea). ",
            "author": "Dawid Weiss",
            "id": "comment-13135247"
        },
        {
            "date": "2011-10-25T17:27:09+0000",
            "content": "It may no longer apply to Java 6 javac, but when I implemented this test for the first time (was Java 4 or Java 5) the \"assert false;\" made javac angry - it simply refused to compile this (some error like unreachable statement blabla). This was the only way to get this running, copied from some code example on the net (I think it was the assertion guide shipped with Java 1.4). ",
            "author": "Uwe Schindler",
            "id": "comment-13135256"
        },
        {
            "date": "2011-10-26T13:03:15+0000",
            "content": "Tests run from intellij now fail saying that assertions are not enabled.  Anyone know the right way to change \"ant idea\" so that assertions are enabled by default?\n\nAlso, we've often done performance tests as unit tests in the past.  Is there an easy way to disable this \"assertions enabled\" test? ",
            "author": "Yonik Seeley",
            "id": "comment-13135928"
        },
        {
            "date": "2011-10-26T13:09:01+0000",
            "content": "Tests run from intellij now fail saying that assertions are not enabled. Anyone know the right way to change \"ant idea\" so that assertions are enabled by default?\n\nAll of the pre-defined run configurations (one for each module) enable assertions via the \"-ea\" cmdline param.  Not sure how to globally enable assertions in IntelliJ. ",
            "author": "Steve Rowe",
            "id": "comment-13135930"
        },
        {
            "date": "2011-10-26T13:18:25+0000",
            "content": "IJ has a default setup for \"JUnit\" execution, and putting in VM arg of \"-ea\" should do the trick. ",
            "author": "Erik Hatcher",
            "id": "comment-13135932"
        },
        {
            "date": "2011-10-26T13:26:29+0000",
            "content": "You can also enable assertions just for the class/package which checks if assertions are enabled, Yonik. This should make the check pass and disable all other assertions (for benchmarking). I don't remember the syntax off the top of my head though. ",
            "author": "Dawid Weiss",
            "id": "comment-13135963"
        },
        {
            "date": "2011-10-26T23:11:20+0000",
            "content": "IJ has a default setup for \"JUnit\" execution, and putting in VM arg of \"-ea\" should do the trick.\n\nThanks, Erik - I just committed this change to the IntelliJ IDEA configuration under dev-tools/:\n\n\n\tr1189527: trunk\n\tr1189529: branch_3x\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13136573"
        },
        {
            "date": "2011-10-27T06:23:28+0000",
            "content": "I just committed this change to the IntelliJ IDEA configuration\n\nThanks for fixing for IntelliJ! ",
            "author": "Doron Cohen",
            "id": "comment-13136823"
        },
        {
            "date": "2011-10-27T06:29:23+0000",
            "content": "\nAlso, we've often done performance tests as unit tests in the past. Is there an easy way to disable this \"assertions enabled\" test?\n\nYou can also enable assertions just for the class/package which checks if assertions are enabled, Yonik. This should make the check pass and disable all other assertions (for benchmarking). I don't remember the syntax off the top of my head though.\n\nYonik, is this sufficient for running the perf tests? \nOtherwise I can add a -D flag for disabling testing this in LTC. ",
            "author": "Doron Cohen",
            "id": "comment-13136826"
        },
        {
            "date": "2011-10-27T08:48:29+0000",
            "content": "For easier perf testing I added a -D flag to tell LTC not to fail each and every test if Java assertions are not enabled:\n\n\n-Dtests.asserts.gracious=true\n\n\n\n(Tests requiring Java assertions - e.g. TestAssertions - will still fail, on purpose.)\n\n\n\tr1189655 - trunk\n\tr1189663 - 3x\n\n ",
            "author": "Doron Cohen",
            "id": "comment-13136915"
        },
        {
            "date": "2011-10-27T10:37:27+0000",
            "content": "Thanks Doron, that works! ",
            "author": "Yonik Seeley",
            "id": "comment-13136953"
        }
    ]
}