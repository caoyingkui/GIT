{
    "id": "SOLR-2796",
    "title": "AddUpdateCommand.getIndexedId doesn't work with schema configured defaults/copyField - UUIDField/copyField can not be used as uniqueKey field",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "update"
        ],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "in Solr 1.4, and the HEAD of the 3x branch, the UUIDField can be used as the uniqueKey field even if documents do not specify a value by taking advantage of the default=\"NEW\" feature of UUIDField.\n\nSimilarly, a copyField can be used to populate the uniqueKey field with data from some field with another name \u2013 multiple copyFields can even be used if there is no overlap (ie: if you have two differnet types of documents with no overlap in their id space, you can copy from companyId->id and from productId->id and use \"id\" as your uniqueKey field in solr)\n\nNeither of these approaches work in Solr trunk because of how AddUpdateCommand.getIndexedId is currently used by the DirectUpdateHander2 (see r1152500).",
    "attachments": {
        "SOLR-2796.patch": "https://issues.apache.org/jira/secure/attachment/12496598/SOLR-2796.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13115053",
            "date": "2011-09-27T00:02:40+0000",
            "content": "Example config...\n\n\n<fieldType name=\"uuid\" class=\"solr.UUIDField\" indexed=\"true\" />\n...\n<field name=\"uuid\" type=\"uuid\" indexed=\"true\" stored=\"true\" required=\"true\" default=\"NEW\" /> \n...\n<uniqueKey>uuid</uniqueKey>\n\n\n\nResulting error when posting example docs...\n\n\nSEVERE: org.apache.solr.common.SolrException: Document is missing mandatory uniqueKey field: uuid\n\tat org.apache.solr.update.AddUpdateCommand.getIndexedId(AddUpdateCommand.java:80)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:151)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:60)\n\tat org.apache.solr.update.processor.LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:115)\n\tat org.apache.solr.handler.XMLLoader.processUpdate(XMLLoader.java:133)\n\tat org.apache.solr.handler.XMLLoader.load(XMLLoader.java:78)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:58)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1451)\n\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13115078",
            "date": "2011-09-27T00:35:18+0000",
            "content": "test only patch demonstrating problem \u2013 passes on 3x, fails on trunk "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13182257",
            "date": "2012-01-08T17:57:32+0000",
            "content": "We should fix this. Looks like it was introduced with extra error checking in in SOLR-2685. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13251642",
            "date": "2012-04-11T14:50:29+0000",
            "content": "as noted in SOLR-3349 the problem also exists if you use copyField to populate the uniqueKey. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13281332",
            "date": "2012-05-23T00:31:52+0000",
            "content": "Updating descriptiong after looking into it a bit more.\n\nEven if we reverted some of the logic in AddUpdateCommand.getIndexedId to work the way DirectUpdateHandler.getIndexedId(Document) did in the 3x branch, this defered/delayed creating of the uniqueKey field just fundamentally can't work in SolrCloud because we have to be able to determine the value for the uniqueKey field well before any schema defaults/copyFields so that the distrib processor knows which shard to forward to.\n\nI think we should bite the bullet and say \"Starting with Solr 4, schema defaults and copyFields can not be used to populate the uniqueKey field\" (we can even enforce this when parsing the schema - error if the uniqueKey field has a declared default or is the dest of a copyField) and provide UpdateProcessor alternatives for the behaviors that were previously possible with schema options...\n\n\n\tFielCopyUpdateProcessor - SOLR-2599\n\tUUIDFieldUpdateProcessor - generates a new UUID for a configured field name if it doesn't already have a value in it\n\tTimestampUpdateProcessor - generates a new Date for a configured field name if it doesn't already have a value in it (unlikely anyone is useing a DateField as their uniqueKey, but it's possible and fairly easy to offer this just in case)\n\n\n\nthoughts? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13285237",
            "date": "2012-05-29T23:01:02+0000",
            "content": "linking dependent issues.\n\nin addition to these, we'll also need new error checking for the copyField/defaultValue cases that are not going to be supported and a test that thye work properly "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13287741",
            "date": "2012-06-01T22:25:05+0000",
            "content": "Committed revision 1345376. - trunk\nCommitted revision 1345378. - 4x\n\nCommitted checking for these situations in IndexSchema along with explicit error messages.   Commit also includes a CHANGES.txt upgrading not about using UUIDUpdateProcessorFactory to have uniqueKey values generated automatically, note will need to be updated once copy-field-esque update processor is available (tracked in SOLR-2599) "
        }
    ]
}