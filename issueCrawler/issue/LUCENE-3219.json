{
    "id": "LUCENE-3219",
    "title": "Change SortField types to an Enum",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When updating my SOLR-2533 patch, one issue was that the int value I had given my new type had been used by another change in the mean time.  Since we don't use these fields in a bitset kind of way, we can convert them to an enum.",
    "attachments": {
        "LUCENE-3219.patch": "https://issues.apache.org/jira/secure/attachment/12483127/LUCENE-3219.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-20T08:54:18+0000",
            "content": "+1 ",
            "author": "Simon Willnauer",
            "id": "comment-13051856"
        },
        {
            "date": "2011-06-20T09:18:52+0000",
            "content": "First up patch which makes the majority of changes.\n\nI intend to commit SOLR-2533 first and then update this patch to incorporate the changes.\n\nAlso intend to change CachedArrayCreator.getSortTypeID() to CachedArrayCreator.getSortType() ",
            "author": "Chris Male",
            "id": "comment-13051870"
        },
        {
            "date": "2011-06-20T17:14:46+0000",
            "content": "Patch updated to trunk.  Compiles and tests pass.  \n\nI intend to commit in the next day or so. ",
            "author": "Chris Male",
            "id": "comment-13052081"
        },
        {
            "date": "2011-06-20T17:17:34+0000",
            "content": "Even better patch which CHANGES entry correct. ",
            "author": "Chris Male",
            "id": "comment-13052084"
        },
        {
            "date": "2011-06-20T18:33:52+0000",
            "content": "chris, patch looks good...\n\nsome minor comments:\n\n\n\tI wonder if a parser could hold a Type so we could get rid of the if (parser instanceof FieldCache.$Parser) ?\n\tin SearchWithSortTask I wonder if you could simply call Type.valueOf(typeString.toUpperCase()); - the less code the better \n\n\n\noverall looks good\n\nsimon ",
            "author": "Simon Willnauer",
            "id": "comment-13052137"
        },
        {
            "date": "2011-06-21T02:37:47+0000",
            "content": "Updated patch to incorporate Simon's suggestions:\n\n\n\tSearchWithSortTask now uses SortField.Type.valueOf().  This changes the exception thrown to an IllegalArgumentException.\n\tI haven't added Type to FieldCache.Parser since the constructor in SortField that accepts Parsers is deprecated and you can pull the Type from the CachedArrayCreator which is the preferred way of creating a SortField.  I did exploit this to reduce the code in the instanceof comparisons.\n\n ",
            "author": "Chris Male",
            "id": "comment-13052327"
        },
        {
            "date": "2011-06-21T06:32:35+0000",
            "content": "looks good to me. BTW. should we backport those changes? ",
            "author": "Simon Willnauer",
            "id": "comment-13052368"
        },
        {
            "date": "2011-06-21T06:51:14+0000",
            "content": "You'll have to guide me on the backwards compat issue since this is a break due to the fields being public and some methods changing from returning int to returning SortField.Type. ",
            "author": "Chris Male",
            "id": "comment-13052377"
        },
        {
            "date": "2011-06-21T07:05:11+0000",
            "content": "This issue relates to LUCENE-3192, where I already proposed SortField.Type.\n\nIf we want to backport to 3.x this functionality, we should add deprecated references to the SortField.Type instances directly below SortField. This would make the code not binary backwards compatible, but in most cases a simple recompile should work (most usages are new SortField(\"priceInCent\", SortField.INT). ",
            "author": "Uwe Schindler",
            "id": "comment-13052387"
        },
        {
            "date": "2011-06-21T07:10:03+0000",
            "content": "At the end of the day, I am sure I will vote to leave it as it is in 3.x!\n\nSortField is heavy-used in Lucene client code and the backwards breaks without very sophisticated backwards layers are horrible to handle. It can be done, but I dont think its worth the work just for code beauty. ",
            "author": "Uwe Schindler",
            "id": "comment-13052390"
        },
        {
            "date": "2011-06-21T07:34:32+0000",
            "content": "For the reasons described above, I think its best we don't backport this change.  \n\nUwe, is the work here compatible with what you had planned in LUCENE-3192?  If so, I'll go ahead and commit this. ",
            "author": "Chris Male",
            "id": "comment-13052402"
        },
        {
            "date": "2011-06-21T07:39:26+0000",
            "content": "Just commit this, the other issue is quite unrelated, I just had same idea. ",
            "author": "Uwe Schindler",
            "id": "comment-13052404"
        },
        {
            "date": "2011-06-22T01:49:05+0000",
            "content": "Committed revision 1138276. ",
            "author": "Chris Male",
            "id": "comment-13052991"
        }
    ]
}