{
    "id": "LUCENE-6544",
    "title": "Geo3d cleanup: Regularize path and polygon construction, plus consider adding ellipsoid surface distance method",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "modules/spatial"
        ],
        "labels": "",
        "fix_versions": [
            "5.3"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Geo3d's way of constructing polygons and paths differs in that in one case you construct points and the other you feed lat/lon values directly to the builder.  Probably both should be supported for both kinds of entity.\n\nAlso it may be useful to have an accurate point-point ellipsoidal distance function.  This is expensive and would be an addition to the arc distance we currently compute.  It would probably be called \"surface distance\".",
    "attachments": {
        "LUCENE-6544.patch": "https://issues.apache.org/jira/secure/attachment/12739646/LUCENE-6544.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14580545",
            "author": "Karl Wright",
            "date": "2015-06-10T13:56:56+0000",
            "content": "First bit of cleanup; locally cache lat and lon in geopoints so we don't need to recompute it, and add an ellipsoid distance computation method. "
        },
        {
            "id": "comment-14580956",
            "author": "Karl Wright",
            "date": "2015-06-10T19:03:15+0000",
            "content": "Finish the patch. "
        },
        {
            "id": "comment-14580959",
            "author": "Karl Wright",
            "date": "2015-06-10T19:05:42+0000",
            "content": "David Smiley Is this a ticket you'd be willing to own? "
        },
        {
            "id": "comment-14580960",
            "author": "David Smiley",
            "date": "2015-06-10T19:07:39+0000",
            "content": "Yes.  Just give me a couple days to catch up with things I'm busy with. "
        },
        {
            "id": "comment-14585547",
            "author": "Karl Wright",
            "date": "2015-06-15T07:48:54+0000",
            "content": "I have another cleanup item I want to add to this: specifically, a fix so that a \"circle\" is in fact centered on the center point given.  Hopefully adding this soon. "
        },
        {
            "id": "comment-14585658",
            "author": "Karl Wright",
            "date": "2015-06-15T08:54:57+0000",
            "content": "New patch including better math for \"circles\".  Circles are now always centered on their center point, no matter how significantly ellipsoid the planet is. "
        },
        {
            "id": "comment-14585812",
            "author": "Karl Wright",
            "date": "2015-06-15T11:36:59+0000",
            "content": "David Smiley: I'm done with this now; anytime you are ready... "
        },
        {
            "id": "comment-14586081",
            "author": "David Smiley",
            "date": "2015-06-15T14:09:25+0000",
            "content": "I like the changes Karl.\n\nSome feedback:\n\n\tGeoPath: I think the done() methods should throw an IllegalStateException if it is called after it has already been called (edgePoints is already defined)?  And likewise, addPoint could throw if edgePoints is already defined.\n\tPlanetModel: I think the surfaceDistance() method should include javadocs to mention that it's intended for non-spherical PlanetModel; for sphere use GeoPoint.arcDistance.  And for that matter, GeoPoint.arcDistance could mention it's computation is surface of a sphere, and that for accurate ellipsoidal, use PlanetModel.surfaceDistance().\n\n\n\nThe issue of thread-safety came to mind as I saw the lazy-evaluation of the latitude & longitude.  There should be some docs/language somewhere so that people can understand that Geo3D generally isn't necessarily threadsafe, and GeoPoint in particular isn't.  Lazy BBox calculation of Geo3dShape is another reason.  This isn't necessarily a big deal but at least should be documented for these two classes, indicating how to construct them such that they are thread-safe.  Come to think of it, even if an app knows to call getLatitude/Longitude on GeoPoint so that it's fully constructed, it has no way to do so on any use of GeoPoint embedded within other Geo3d shapes (such as GeoDegenerateHorizontalLine).  What do you think? "
        },
        {
            "id": "comment-14586120",
            "author": "Karl Wright",
            "date": "2015-06-15T14:37:32+0000",
            "content": "I'm fine with the GeoPath and PlanetModel suggestions.\n\nThread safety is easier than you think, because all classes with lazy members are in fact immutable except for those lazy members, and they are based only other (immutable) characteristics of the classes in question.  So the worst that can happen if more than one thread attempts to fill in one of these values is that it will be computed twice \u2013 one time unnecessarily.  I suspect that therefore the only thing we really need to do is mention this in the javadoc for the lazy variable(s), and maybe (could be wrong about this) declare those variables to be volatile.  Thoughts? "
        },
        {
            "id": "comment-14586178",
            "author": "Karl Wright",
            "date": "2015-06-15T15:17:55+0000",
            "content": "Michael McCandless: Do I have the Java contract right?  For a situation as described above, is \"volatile\" necessary? "
        },
        {
            "id": "comment-14586329",
            "author": "Karl Wright",
            "date": "2015-06-15T17:14:53+0000",
            "content": "Actually, I think I answered my own question.  According to this:\n\nhttp://stackoverflow.com/questions/4756536/what-operations-in-java-are-considered-atomic\n\n... I need \"volatile\" to make updates to doubles or longs be atomic. "
        },
        {
            "id": "comment-14586333",
            "author": "Karl Wright",
            "date": "2015-06-15T17:18:57+0000",
            "content": "David Smiley: this should meet all your needs... "
        },
        {
            "id": "comment-14587432",
            "author": "David Smiley",
            "date": "2015-06-16T04:18:18+0000",
            "content": "FYI I did further edits and am now using ReviewBoard to share / collaborate:\nhttps://reviews.apache.org/r/35487/ "
        },
        {
            "id": "comment-14587607",
            "author": "Karl Wright",
            "date": "2015-06-16T07:35:06+0000",
            "content": "Responded on reviewboard. "
        },
        {
            "id": "comment-14591759",
            "author": "David Smiley",
            "date": "2015-06-18T13:14:20+0000",
            "content": "Final patch is here, with CHANGES.txt as follows:\n\n* LUCENE-6544: Geo3D: (1) Regularize path & polygon construction, (2) add\n  PlanetModel.surfaceDistance() (ellipsoidal calculation), (3) cache lat & lon\n  in GeoPoint, (4) add thread-safety where missing -- Geo3dShape. (Karl Wright,\n  David Smiley)\n\n\n\nI'll commit later at lunch. "
        },
        {
            "id": "comment-14592182",
            "author": "ASF subversion and git services",
            "date": "2015-06-18T17:42:52+0000",
            "content": "Commit 1686285 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1686285 ]\n\nLUCENE-6544: Geo3D: Regularize path & polygon construction, add PlanetModel.surfaceDistance(), cache lat & lon in GeoPoint, add thread-safety where missing \u2013 Geo3dShape. "
        },
        {
            "id": "comment-14592190",
            "author": "ASF subversion and git services",
            "date": "2015-06-18T17:47:47+0000",
            "content": "Commit 1686286 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1686286 ]\n\nLUCENE-6544: Geo3D: Regularize path & polygon construction, add PlanetModel.surfaceDistance(), cache lat & lon in GeoPoint, add thread-safety where missing \u2013 Geo3dShape. "
        },
        {
            "id": "comment-14592194",
            "author": "David Smiley",
            "date": "2015-06-18T17:49:31+0000",
            "content": "Committed. Thanks Karl. "
        },
        {
            "id": "comment-14713142",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:05:53+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}