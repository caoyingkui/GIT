{
    "id": "SOLR-6145",
    "title": "Concurrent Schema API field additions can result in endless loop",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The optimistic concurrency loop in ManagedIndexSchema.addFields() is the likely culprit.",
    "attachments": {
        "concurrent_updates_and_schema_api.patch": "https://issues.apache.org/jira/secure/attachment/12648570/concurrent_updates_and_schema_api.patch",
        "SOLR-6145-tests.patch": "https://issues.apache.org/jira/secure/attachment/12648787/SOLR-6145-tests.patch",
        "SOLR-6145.patch": "https://issues.apache.org/jira/secure/attachment/12648726/SOLR-6145.patch",
        "SOLR-6145v2.patch": "https://issues.apache.org/jira/secure/attachment/12648788/SOLR-6145v2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Steve Rowe",
            "id": "comment-14019431",
            "date": "2014-06-05T23:58:36+0000",
            "content": "Alexey Serba gave me the attached patch, to TestCloudManagedSchemaAddField, that triggers the problem. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-14020380",
            "date": "2014-06-06T21:09:32+0000",
            "content": "Here's a patch that fixes the test.\n\nThe basic idea is that retrying on a BadVersionException won't help the ManagedIndexSchema, since the version will always be past our version.  Instead, we just throw an exception that can be caught by the callers and retried.  I only put the retry logic in FieldResource for now, but there's a few more places where it should go if we like this approach.\n\nI originally thought of doing the retry logic inside of ManagedIndexSchema, so we wouldn't need to put it in as many places, but that seemed not as clean, since the older schema would be getting the newer schema (presumably from the core), which seems wrong since a schema should exist independently of a core. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-14020648",
            "date": "2014-06-07T02:08:47+0000",
            "content": "Two patches:\n\nThe tests patch is just taking the existing test as a template and testing copyFields and adding fields via POST.  I verified that these tests fail consistently without the patch.\n\nThe v2 patch handles the copyfields and adding fields via POST cases.  The POST case has a bit of extra logic for making the optimistic concurrency control failure look like what would happen if the concurrent schema changes were actually serialized. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14025864",
            "date": "2014-06-09T22:35:33+0000",
            "content": "+1, looks good Gregory Chanan.\n\nThis patch includes your tests patch and your non-test patch.  I removed some commented out test code, and added a verification step to TestCloudManagedSchemaCopyFields.\n\nI noticed that adding the same copy field directive multiple times results in multiple identical copies of the same directive in the schema.  This is wrong.  I'll open a separate issue.\n\nI'll commit this in a day or so. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14025874",
            "date": "2014-06-09T22:44:48+0000",
            "content": "I noticed that adding the same copy field directive multiple times results in multiple identical copies of the same directive in the schema. This is wrong. I'll open a separate issue.\n\nSOLR-6155 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14026887",
            "date": "2014-06-10T19:38:51+0000",
            "content": "Patch, removes the useless optimistic concurrency loops from ManagedIndexSchema.add(Copy)Fields(), and also modifies the consumers of those methods to handle failures that won't benefit from retrying.\n\nCommitting shortly.  "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14026994",
            "date": "2014-06-10T20:56:25+0000",
            "content": "Final patch, added no-op catch clause for SchemaChangedInZkException to the optimistic concurrency loop in AddSchemaFieldsUpdateProcessor.processAdd().\n\nCommitting now. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14026995",
            "date": "2014-06-10T20:57:01+0000",
            "content": "Commit 1601770 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1601770 ]\n\nSOLR-6145: Fix Schema API optimistic concurrency by moving it out of ManagedIndexSchema.add(Copy)Fields() into the consumers of those methods: CopyFieldCollectionResource, FieldCollectionResource, FieldResource, and AddSchemaFieldsUpdateProcessorFactory. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14027056",
            "date": "2014-06-10T21:23:10+0000",
            "content": "Commit 1601775 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1601775 ]\n\nSOLR-6145: In AddSchemaFieldsUpdateProcessor.processAdd(), handle ManagedIndexSchema.addFields() failures that won't benefit from retrying. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14027063",
            "date": "2014-06-10T21:27:47+0000",
            "content": "Commit 1601776 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1601776 ]\n\nSOLR-6145: Fix Schema API optimistic concurrency by moving it out of ManagedIndexSchema.add(Copy)Fields() into the consumers of those methods: CopyFieldCollectionResource, FieldCollectionResource, FieldResource, and AddSchemaFieldsUpdateProcessorFactory. (merged trunk r1601770 and r1601775) "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14027067",
            "date": "2014-06-10T21:28:38+0000",
            "content": "Committed to trunk and branch_4x.\n\nThanks Gregory and Alexey! "
        }
    ]
}