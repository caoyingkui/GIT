{
    "id": "LUCENE-1894",
    "title": "Spatial checks for a string in an int,double map",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/spatial"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "private Map<Integer,Double> distances;\n\n\n\n\n    if (precise != null) {\n      double xLat = getPrecision(lat, precise);\n      double xLng = getPrecision(lng, precise);\n      \n      String k = new Double(xLat).toString() +\",\"+ new Double(xLng).toString();\n    \n      Double d = (distances.get(k));\n      if (d != null){\n        return d.doubleValue();\n      }\n    }\n\n\n\nSomething is off here eh?",
    "attachments": {
        "LUCENE-1894.patch": "https://issues.apache.org/jira/secure/attachment/12419117/LUCENE-1894.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-09-07T16:06:36+0000",
            "content": "This is from DistanceHandler by the way.\n\nwell I give up on this one - apparently, distances holds docIds to distance - not sure why the heck there is an attempt here to use it in this manner.\n\nNot confident in changing it to anything either - the distance test class asserts nothing and just does System outs. And I don't know how the heck distances acts as a cache - no code inserts anything into it. It looks like it can just be used as a user override for pre chosen docs? They fill it and pass it?\n\nSome of this spatial code is kind of hairy - and the tests/javadoc are very sparse. Many methods,constructors are not called anywhere (tests or not). Some are just called from random main methods. ",
            "author": "Mark Miller",
            "id": "comment-12752199"
        },
        {
            "date": "2009-09-07T16:13:23+0000",
            "content": "And whats this class? Spatial does not live up to the standard of quality that Lucene generally delivers - contrib or not.\n\n\n\n \n/**\n *\n */\npublic class PolyShape {\n\n  private static double lat = 38.969398; \n  private static double lng= -77.386398;\n  private static int miles = 1000;\n  /**\n   * @param args\n   */\n  public static void main(String[] args) {\n  \n    CartesianPolyFilterBuilder cpf = new CartesianPolyFilterBuilder( \"_localTier\" );\n    cpf.getBoxShape(lat, lng, miles);\n    \n  }\n\n}\n\n\n ",
            "author": "Mark Miller",
            "id": "comment-12752201"
        },
        {
            "date": "2009-09-07T16:26:14+0000",
            "content": "Okay - a little insight finally - it looks like the lookup should actually be on what is called elsewhere, distanceLookupCache - a weakhashmap mapping string to double. Thats on the DistanceFilter though, and I don't see how its usable here yet ... ",
            "author": "Mark Miller",
            "id": "comment-12752203"
        },
        {
            "date": "2009-09-10T01:01:17+0000",
            "content": "I guess I'll fix this one ",
            "author": "Mark Miller",
            "id": "comment-12753353"
        }
    ]
}