{
    "id": "LUCENE-1938",
    "title": "Precedence query parser using the contrib/queryparser framework",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/other"
        ],
        "type": "New Feature",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Extend the current StandardQueryParser on contrib so it supports boolean precedence",
    "attachments": {
        "LUCENE-1938.patch": "https://issues.apache.org/jira/secure/attachment/12421081/LUCENE-1938.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-10-01T23:14:39+0000",
            "content": "This patch contains a Precedence query parser. It's basically an extension of the current Standard query parser, but enables the boolean precedence.\n\nThe patch also contains the test cases from the current PrecedenceQueryParser, currently located under contrib/misc. Everything passes fine, except a test that tests if the query <A B C> is the same as <A OR B C>, when the default operator is OR. The problem is that this new PQP does not flat/optimize the boolean tree when the boolean operator is the same. It can be performed later, but for now it does not implement this kind of optimization.\n\nAnother issue is that I created a class under contrib/queryparser called PrecedenceQueryParser within the same package declaration the PQP from contrib/misc is right now. Is that a big issue? Couldn't the old PQP be removed and we start using this one, so we have no class conflict.\n\nThe greatest advantage of this implementation is that it basically reuses all the StandardQueryParser functiontalities and syntax, and any modification on the StandardQP will be automatically applied to the PrecedenceQP. No need to maintain 2 different implementations with the same code, as the old PQP does today. ",
            "author": "Adriano Crestani",
            "id": "comment-12761393"
        },
        {
            "date": "2009-10-01T23:17:59+0000",
            "content": "The patch uses some code from LUCENE-1937, so LUCENE-1937 needs to be applied before. ",
            "author": "Adriano Crestani",
            "id": "comment-12761396"
        },
        {
            "date": "2009-10-01T23:37:28+0000",
            "content": "Yes, let's just remove the old PrecedenceQueryParser (which was just an experiment by me - is anyone actually using it?) ",
            "author": "Erik Hatcher",
            "id": "comment-12761405"
        },
        {
            "date": "2009-10-07T18:44:57+0000",
            "content": "Hi,\n\nI looked at the pipeline PrecedenceQueryNodeProcessorPipeline, it contains some complex logic off removing a processor from the StandardQueryNodeProcessorPipeline.\n\nI think it would be better to have a common ancestor, CommonQueryNodeProcessorPipeline, that both StandardQueryNodeProcessorPipeline and PrecedenceQueryNodeProcessorPipeline can extend.\nIt should make it easier for people reading the code.\nWhat do you think? ",
            "author": "Luis Alves",
            "id": "comment-12763180"
        },
        {
            "date": "2009-10-07T18:46:54+0000",
            "content": "Hi Erik, \n\nShould we remove the PrecedenceQueryParser on 3.0, or wait untill 3.1? ",
            "author": "Luis Alves",
            "id": "comment-12763185"
        },
        {
            "date": "2009-10-08T05:07:10+0000",
            "content": "\nI looked at the pipeline PrecedenceQueryNodeProcessorPipeline, it contains some complex logic off removing a processor from the StandardQueryNodeProcessorPipeline.\n\nI think it would be better to have a common ancestor, CommonQueryNodeProcessorPipeline, that both StandardQueryNodeProcessorPipeline and PrecedenceQueryNodeProcessorPipeline can extend.\n\nI don't think it's so complex, it just removes GroupQueryNodeProcessor and adds ModifierQueryNodeProcessor (I think this is the class name). I also added this description to the javadocs.\n\nAnyway, I would prefer to leave it like that, extending StandardQPP, instead of creating a common pipeline. The common pipeline would not make much sense right now, there is not QueryBuilder impl that would produce a correct Query instance from a query tree processed by it, so no one could just use it.\n\nIn future, we could have a third QP implementation, that instead of replacing GroupQueryNodeProcessor by ModifierQueryNodeProcessor, it would replace another processor, or switch the processors position, etc... the CommonQueryNodeProcessorPipeline would not make sense anymore, it only make sense right now for PrecedenceQP and StandardQP, because we know what both have in common, but doesn't mean a third QP would have the same in common.\n\nSo, +1 to leave it the way it's. ",
            "author": "Adriano Crestani",
            "id": "comment-12763365"
        },
        {
            "date": "2010-09-01T01:59:40+0000",
            "content": "This patch could also be applied to branch_3x ",
            "author": "Adriano Crestani",
            "id": "comment-12904871"
        },
        {
            "date": "2010-10-19T21:29:58+0000",
            "content": "attached is a patch that replaces the PrecedenceQueryParser with this implementation \nI didnt change any functionality, just brought it up to trunk and cleared javadocs errors and other minor things\n\nI think this is much easier to maintain... the patch is large because it will remove over 4000 lines of code. ",
            "author": "Robert Muir",
            "id": "comment-12922730"
        },
        {
            "date": "2010-10-19T22:31:11+0000",
            "content": "Thanks Robert! The patch looks good to me. ",
            "author": "Adriano Crestani",
            "id": "comment-12922758"
        },
        {
            "date": "2010-10-20T00:53:45+0000",
            "content": "Thanks for reviewing Adriano.\n\nI'll commit tomorrow unless anyone objects. ",
            "author": "Robert Muir",
            "id": "comment-12922805"
        },
        {
            "date": "2010-10-20T14:52:56+0000",
            "content": "Committed revision 1025597, 1025606 (3x)\n\nThanks Adriano! ",
            "author": "Robert Muir",
            "id": "comment-12922988"
        },
        {
            "date": "2010-10-20T15:31:21+0000",
            "content": "Thank you for committing the code Robert. ",
            "author": "Adriano Crestani",
            "id": "comment-12923011"
        },
        {
            "date": "2011-03-30T15:49:51+0000",
            "content": "Bulk close for 3.1 ",
            "author": "Grant Ingersoll",
            "id": "comment-13013279"
        }
    ]
}