{
    "id": "SOLR-7146",
    "title": "MiniSolrCloudCluster based tests can fail with ZooKeeperException NoNode for /live_nodes",
    "details": {
        "components": [
            "SolrCloud",
            "Tests"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "MiniSolrCloudCluster based tests can fail with the following exception:\n\norg.apache.solr.common.cloud.ZooKeeperException: \n\tat __randomizedtesting.SeedInfo.seed([3F3D838A8ADC9385:F153ADFBF163EC6D]:0)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.connect(CloudSolrClient.java:463)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:763)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:752)\n\tat org.apache.solr.cloud.MiniSolrCloudCluster.createCollection(MiniSolrCloudCluster.java:193)\n\tat org.apache.solr.handler.component.TestTwoPhaseDistributedQuery.testNoExtraFieldsRequestedFromShardsInPhaseOne(TestTwoPhaseDistributedQuery.java:79)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1618)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:827)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:863)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:877)\n\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:53)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:798)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:458)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:836)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:738)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:772)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:783)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:53)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /live_nodes\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:111)\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n\tat org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1472)\n\tat org.apache.solr.common.cloud.SolrZkClient$6.execute(SolrZkClient.java:326)\n\tat org.apache.solr.common.cloud.SolrZkClient$6.execute(SolrZkClient.java:323)\n\tat org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:61)\n\tat org.apache.solr.common.cloud.SolrZkClient.getChildren(SolrZkClient.java:323)\n\tat org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate(ZkStateReader.java:346)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.connect(CloudSolrClient.java:455)\n\t... 44 more\n\n\n\nThe reason is that the cluster constructor can return before any of the nodes are initialized. In such a case, no /live_nodes are present and hence this error.",
    "attachments": {
        "SOLR-7146v2.patch": "https://issues.apache.org/jira/secure/attachment/12701273/SOLR-7146v2.patch",
        "SOLR-7146.patch": "https://issues.apache.org/jira/secure/attachment/12701270/SOLR-7146.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-02-23T23:23:46+0000",
            "author": "Mark Miller",
            "content": "Looks like probably a problem that has come in user land before as well (I think Grant pinged me about it once). I think the cluster is not yet ready for the client. We talked about having it way around a bit in this case, it can make some scripting difficult, but I don't think any work was ever done. ",
            "id": "comment-14334073"
        },
        {
            "date": "2015-02-27T03:27:53+0000",
            "author": "Vamsee Yarlagadda",
            "content": "May be we can add a check at this line to wait for # of znodes under /solr/live_nodes to match up the number of servers being started?\nhttps://github.com/apache/lucene-solr/blob/trunk/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java#L116\n\nOf course, we need to have a timeout though rather than waiting indefinitely. I can work on it if the above approach sounds good?\n ",
            "id": "comment-14339675"
        },
        {
            "date": "2015-02-27T03:56:11+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Looks like probably a problem that has come in user land before as well (I think Grant pinged me about it once).\n\nYup, I found SOLR-4044 which describes the same problem.\n\nMay be we can add a check at this line to wait for # of znodes under /solr/live_nodes to match up the number of servers being started?\n\nWe should do that to solve this particular problem because this is a test-framework class and it should work regardless of whether you use CloudSolrClient or HttpSolrClient but IMO, we should also find a way to solve it inside CloudSolrServer. ",
            "id": "comment-14339689"
        },
        {
            "date": "2015-02-27T04:54:16+0000",
            "author": "Vamsee Yarlagadda",
            "content": "Here is the first revision of the patch. I added logic to wait for maximum of 10 seconds before giving up. ",
            "id": "comment-14339721"
        },
        {
            "date": "2015-02-27T04:59:22+0000",
            "author": "Vamsee Yarlagadda",
            "content": "oops. I didn't handle the case to check if live_nodes exists in the first place. Let me update the patch. ",
            "id": "comment-14339726"
        },
        {
            "date": "2015-02-27T05:21:50+0000",
            "author": "Vamsee Yarlagadda",
            "content": "Added check to see if /solr/live_nodes exist before getting the list of live solr servers. ",
            "id": "comment-14339743"
        },
        {
            "date": "2015-02-27T09:13:26+0000",
            "author": "Alan Woodward",
            "content": "For CloudSolrClient, does it make sense to create the znode if it doesn't exist in ZkStateReader.createClusterStateWatchersAndUpdate()? ",
            "id": "comment-14339914"
        },
        {
            "date": "2015-02-27T09:16:38+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "For CloudSolrClient, does it make sense to create the znode if it doesn't exist in ZkStateReader.createClusterStateWatchersAndUpdate()?\n\nThis was discussed in SOLR-4044 but I agree with Yonik that our clients should be read-only w.r.t ZooKeeper. Let's keep the CloudSolrClient related discussions in SOLR-4044 and just fix MiniSolrCloudCluster here. ",
            "id": "comment-14339919"
        },
        {
            "date": "2015-02-28T22:19:03+0000",
            "author": "Alan Woodward",
            "content": "Shalin Shekhar Mangar I think my proposed patch on SOLR-4044 will fix this too? ",
            "id": "comment-14341806"
        },
        {
            "date": "2015-05-27T12:48:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1682002 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1682002 ]\n\nSOLR-7146: MiniSolrCloudCluster based tests can fail with ZooKeeperException NoNode for /live_nodes ",
            "id": "comment-14560903"
        },
        {
            "date": "2015-05-27T12:49:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1682003 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1682003 ]\n\nSOLR-7146: MiniSolrCloudCluster based tests can fail with ZooKeeperException NoNode for /live_nodes ",
            "id": "comment-14560906"
        },
        {
            "date": "2015-05-27T12:50:04+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I increased the timeout to a minute and changed the logic to break immediately if numservers is reached.\n\nThanks Vamsee! ",
            "id": "comment-14560907"
        },
        {
            "date": "2015-08-26T13:06:18+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Bulk close for 5.3.0 release ",
            "id": "comment-14713281"
        }
    ]
}