{
    "id": "SOLR-2415",
    "title": "Change XMLWriter version parameter to \"wt.xml.version\"",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The XMLWriter has a parameter called 'version'.  This controls some specifics about how the XMLWriter works.  Using the parameter name 'version' made sense back when the XMLWriter was the only option, but with all the various writers and different places where 'version' makes sense, I think we should change this parameter name to \"wt.xml.version\" so that it specifically refers to the XMLWriter.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13004834",
            "date": "2011-03-09T22:16:59+0000",
            "content": "\"version\" doesn't have to just apply to the XML response format - it could apply to any response formats that change.\n\nIf we were starting off fresh, something like \"xml.version\" might make sense... but for people using \"version\" right now, it would be nice if the XML format didn't change out from under them next time we upgrade the format? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13007688",
            "date": "2011-03-16T21:03:12+0000",
            "content": "i'm with ryan.\n\nif it had always been \"respversion\" or something i wouldn't mind, and would encourage other response writers to use it for their own versioning purposes (ie: the json writer could have change the default for json.nl based on version).  but \"version\" is just so damn generic, it's really hard to have any idea what it's taking about.  (even xml.version is ambiguious: is it the format coming in, or going out?\n\nI'd suggest either adding \"wt.version\" or \"wt.xml.version\" (depending on how people feel about the idea that it should/can be reused by all response writers in their own way) to 3.x with a fallback to using version if it's specified and mark \"version\" deprecated ... then remove it completley at a much later date (maybe 4.0, depends on when it comes out and how many 3.x releases come first)\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13007695",
            "date": "2011-03-16T21:13:48+0000",
            "content": "On a highly related question, how should we handle the desire to change the faceting format (to make it easier to add metadata like total number of constraints, etc)?  \"version\" would be one way.  \"facet.format\" would be another way. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13007805",
            "date": "2011-03-17T04:40:09+0000",
            "content": "I see two approaches to the general problem:\n1. each component gets its own version (wt.xml.version, facet.version, hl.version, etc)\n2. a single 'version' param that multiple components use.\n\nI think option #2 makes more sense, perhaps we should add a getVersion() parameter on SolrQueryRequest and have that used across all components.\n\nFor facet format (SOLR-2242) this should work, but I also hope that major versions (4.0 etc) can drop old formats since maintaining these for a long time can be a PIA.\n "
        },
        {
            "author": "Chris A. Mattmann",
            "id": "comment-13007814",
            "date": "2011-03-17T05:08:59+0000",
            "content": "At the rate of release cycles on this project, I'd seriously recommend against actually specifying versions, and fallbacks, etc., specifically for response writers other than the existing Solr version. Look at how long the existing response writers have hung around in their current format, independent of the version # changes (1.2, 1.3, 1.4, and now 3.1). In all of these cases, you simply could keep docs that say 1.2 is compatible (forwards) with 1.x, etc., and 3.x is compatible (backwards) with 1.x, etc. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13010308",
            "date": "2011-03-23T19:25:04+0000",
            "content": "how should we handle the desire to change the faceting format (to make it easier to add metadata like total number of constraints, etc)? \"version\" would be one way. \"facet.format\" would be another way.\n\ni don't think the structure of the response (ie: the facet response section) should be driven by the same param as the format of the response, which is what \"version\" currently is.  Something like facet.format seems more appropriate when dealing with a specific component like that ... but i don't think it should be a numeric \"version\" equse property, i think it should be descriptive (ie: \"flat\", vs \"nested\" or something)\n\n\nperhaps we should add a getVersion() parameter on SolrQueryRequest and have that used across all components.\n\nwhen i suggested we have a common wt.version param that all of the response writers could use, i didn't mean to suggest that it should have a singular id space. my suggestion was that the specific values specified for \"version\" or \"wt.version\" or whatever would only be meaningful to the specific response writer used \u2013 just as the current values of the version param that the XMLResponseWriter uses are meaninless to the JSONResponseWriter.  the overlap would only be in reusing the param name (in the same way that \"q\" is the common param name for the main query, regardless of what query parser is specified by \"defType\")\n\n\nLook at how long the existing response writers have hung around in their current format, independent of the version # changes (1.2, 1.3, 1.4, and now 3.1)\n\nthe version param of the XML response writer has never been in sync with the solr version, it was never intended to be.  it's always been the version number of the xml format. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13011390",
            "date": "2011-03-25T19:45:23+0000",
            "content": "Looks like most of the tests send params=\n{wt=javabin&version=2}\n this does not do anything...\n\nHoss, I now agree that wt.version should apply to whatever WT we are talking to.\n\nThe discussion about structure changes should be elsewhere "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717235",
            "date": "2013-07-23T18:47:34+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13970954",
            "date": "2014-04-16T12:56:43+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}