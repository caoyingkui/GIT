{
    "id": "SOLR-6776",
    "title": "Data lost when use SoftCommit and TLog",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "4.10.3"
        ],
        "affect_versions": "4.10",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "We enabled update log and change autoCommit to some bigger value 10 mins.\n\nAfter restart, we push one doc with softCommit=true\nhttp://localhost:8983/solr/update?stream.body=<add><doc><field name=\"id\">id1</field></doc></add>&softCommit=true\n\nThen we kill the java process after a min. \n\nAfter restart, Tlog failed to replay with following exception, and there is no data in solr.\n6245 [coreLoadExecutor-5-thread-1] ERROR org.apache.solr.update.UpdateLog  \u00fb Failure to open existing log file (non fatal) E:\\jeffery\\src\\apache\\solr\\4.10.2\\solr-4.10.2\\example\\solr\\collection1\\data\\t\nlog\\tlog.0000000000000000000:org.apache.solr.common.SolrException: java.io.EOFException\n        at org.apache.solr.update.TransactionLog.<init>(TransactionLog.java:181)\n        at org.apache.solr.update.UpdateLog.init(UpdateLog.java:261)\n        at org.apache.solr.update.UpdateHandler.<init>(UpdateHandler.java:134)\n        at org.apache.solr.update.UpdateHandler.<init>(UpdateHandler.java:94)\n        at org.apache.solr.update.DirectUpdateHandler2.<init>(DirectUpdateHandler2.java:100)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n        at java.lang.reflect.Constructor.newInstance(Unknown Source)\n        at org.apache.solr.core.SolrCore.createInstance(SolrCore.java:550)\n        at org.apache.solr.core.SolrCore.createUpdateHandler(SolrCore.java:620)\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:835)\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:646)\n        at org.apache.solr.core.CoreContainer.create(CoreContainer.java:491)\n        at org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:255)\n        at org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:249)\n        at java.util.concurrent.FutureTask.run(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Unknown Source)\nCaused by: java.io.EOFException\n        at org.apache.solr.common.util.FastInputStream.readUnsignedByte(FastInputStream.java:73)\n        at org.apache.solr.common.util.FastInputStream.readInt(FastInputStream.java:216)\n        at org.apache.solr.update.TransactionLog.readHeader(TransactionLog.java:268)\n        at org.apache.solr.update.TransactionLog.<init>(TransactionLog.java:159)\n        ... 19 more\n\nCheck the code: seems this is related with: org.apache.solr.update.processor.RunUpdateProcessor, in processCommit, it sets changesSinceCommit=false(even we are using softCommit)\n\nSo in finish, updateLog.finish will not be called.\n  public void finish() throws IOException {\n    if (changesSinceCommit && updateHandler.getUpdateLog() != null) \n{\n      updateHandler.getUpdateLog().finish(null);\n    }\n    super.finish();\n  }\n\nTo fix this issue: I have to change RunUpdateProcessor.processCommit like below:\n    if (!cmd.softCommit) \n{\n      changesSinceCommit = false;\n    }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-26T00:10:01+0000",
            "author": "Xu Zhang",
            "content": "Probably this is not a bug. Finish() is about flush tlog into hard disk and soft-commit is just about visibility.  ",
            "id": "comment-14225445"
        },
        {
            "date": "2014-11-27T00:47:31+0000",
            "author": "Mark Miller",
            "content": "By default, the tlog doesnt fsync, it just flushes and leans on replicas. You can configure the sync level in solrconfig.xml. ",
            "id": "comment-14227062"
        },
        {
            "date": "2014-12-01T17:13:38+0000",
            "author": "jefferyyuan",
            "content": "The finish of UpdateProcessoris is always called in org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(SolrQueryRequest, SolrQueryResponse).\n\nWhen we add a doc without softcommit or commit,  the org.apache.solr.update.processor.RunUpdateProcessor.finish() will call getUpdateLog().finish() to fsync the tlog.\n\nBut if add a doc with softcommit=true, RunUpdateProcessor.finish() will not call getUpdateLog().finish(), and will not fsync the tlog.\n\nThis is kind of not right.\n\nUser enables transaction log for data durability, to make sure there is no data lost.\nSo I think it should always fsync the tlog after add this doc to solr and before the hard commit. ",
            "id": "comment-14230053"
        },
        {
            "date": "2014-12-01T17:20:55+0000",
            "author": "Yonik Seeley",
            "content": "If this is reproducible by someone, it represents a bug.\n\n\nTo fix this issue: I have to change RunUpdateProcessor.processCommit like below:\nif (!cmd.softCommit)\nUnknown macro: { changesSinceCommit = false; } \n\nIt's not clear what this change is trying to fix (or why it changes anything for the reporter), but one should not have to softCommit (or commit) in order to not lose data.\n\nedit: I understand now (mis-read the patch the first time, missing the \"!\").  You are correct, this is a bug and the fix looks correct. ",
            "id": "comment-14230063"
        },
        {
            "date": "2014-12-01T17:26:38+0000",
            "author": "jefferyyuan",
            "content": "Hi, Yonik:\n\nThe problem here is that if we add a doc with softcommit=true(user wants the data to be immediately searchable), processCommit  will set changesSinceCommit=false,\nthen in finish method, it will not call updateHandler.getUpdateLog().finish(null) to fsync the tlog.\n\nIf we kill the java after that, then data will be lost. ",
            "id": "comment-14230071"
        },
        {
            "date": "2014-12-02T16:46:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1642946 from Yonik Seeley in branch 'dev/trunk'\n[ https://svn.apache.org/r1642946 ]\n\nSOLR-6776: only clear changesSinceCommit on a hard commit so tlog will still be flushed on a softCommit ",
            "id": "comment-14231728"
        },
        {
            "date": "2014-12-02T16:48:11+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1642950 from Yonik Seeley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1642950 ]\n\nSOLR-6776: only clear changesSinceCommit on a hard commit so tlog will still be flushed on a softCommit ",
            "id": "comment-14231732"
        },
        {
            "date": "2014-12-02T16:48:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1642951 from Yonik Seeley in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1642951 ]\n\nSOLR-6776: only clear changesSinceCommit on a hard commit so tlog will still be flushed on a softCommit ",
            "id": "comment-14231733"
        },
        {
            "date": "2014-12-02T16:49:36+0000",
            "author": "Yonik Seeley",
            "content": "Committed.  Thanks! ",
            "id": "comment-14231736"
        }
    ]
}