{
    "id": "LUCENE-2187",
    "title": "improve lucene's similarity algorithm defaults",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/query/scoring"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "First things first: I am not an IR guy. The goal of this issue is to make 'surgical' tweaks to lucene's formula to bring its performance up to that of more modern algorithms such as BM25.\n\nIn my opinion, the concept of having some 'flexible' scoring with good speed across the board is an interesting goal, but not practical in the short term.\n\nInstead here I propose incorporating some work similar to lnu.ltc and friends, but slightly different. I noticed this seems to be in line with that paper published before about the trec million queries track... \n\nHere is what I propose in pseudocode (overriding DefaultSimilarity):\n\n\n  @Override\n  public float tf(float freq) {\n    return 1 + (float) Math.log(freq);\n  }\n  \n  @Override\n  public float lengthNorm(String fieldName, int numTerms) {\n    return (float) (1 / ((1 - slope) * pivot + slope * numTerms));\n  }\n\n\n\nWhere slope is a constant (I used 0.25 for all relevance evaluations: the goal is to have a better default), and pivot is the average field length. Obviously we shouldnt make the user provide this but instead have the system provide it.\n\nThese two pieces do not improve lucene much independently, but together they are competitive with BM25 scoring with the test collections I have run so far. \n\nThe idea here is that this logarithmic tf normalization is independent of the tf / mean TF that you see in some of these algorithms, in fact I implemented lnu.ltc with cosine pivoted length normalization and log(tf)/log(mean TF) stuff and it did not fare as well as this method, and this is simpler, we do not need to calculate this mean TF at all.\n\nThe BM25-like \"binary\" pivot here works better on the test collections I have run, but of course only with the tf modification.\n\nI am uploading a document with results from 3 test collections (Persian, Hindi, and Indonesian). I will test at least 3 more languages... yes including English... across more collections and upload those results also, but i need to process these corpora to run the tests with the benchmark package, so this will take some time (maybe weeks)\n\nso, please rip it apart with scoring theory etc, but keep in mind 2 of these 3 test collections are in the openrelevance svn, so if you think you have a great idea, don't hesitate to test it and upload results, this is what it is for. \n\nalso keep in mind again I am not a scoring or IR guy, the only thing i can really bring to the table here is the willingness to do a lot of relevance testing!",
    "attachments": {
        "LUCENE-2187.patch": "https://issues.apache.org/jira/secure/attachment/12429413/LUCENE-2187.patch",
        "scoring.pdf": "https://issues.apache.org/jira/secure/attachment/12429282/scoring.pdf"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-01-02T20:17:31+0000",
            "content": "document with some simple results from the 3 collections i tested thus far.\n\ni chose to display simple graphs with descriptions of the collections and some of their peculiarities. \n\nif you want submission.txt dumps or verbose output from trec_eval, I can do that too, but I think its less useful to start with. ",
            "author": "Robert Muir",
            "id": "comment-12795909"
        },
        {
            "date": "2010-01-04T21:28:02+0000",
            "content": "attaching updated document with results for a 4th test collection, on english. for this one BM25 did not fare so well.\n\nFor the lazy, here are the MAP values:\n\nStandardAnalyzer\nDefault Scoring: 0.3837\nBM25 Scoring:  0.3580\nImproved Scoring: 0.3994\n\nStandardAnalyzer + Porter\nDefault Scoring: 0.4333\nBM25 Scoring: 0.4131\nImproved Scoring: 0.4515\n\nStandardAnalyzer + Porter + MoreLikeThis (top 5 docs)\nDefault Scoring: 0.5234\nBM25 Scoring: 0.5087\nImproved Scoring: 0.5474\n\nNote that 0.5572 was the highest performing MAP on this corpus (Microsoft Research) in FIRE 2008: http://www.isical.ac.in/~fire/paper/Udupa-mls-fire2008.pdf\n ",
            "author": "Robert Muir",
            "id": "comment-12796364"
        },
        {
            "date": "2010-01-04T21:37:03+0000",
            "content": "sorry, correct some transposition of axes labels and some grammatical mistakes  ",
            "author": "Robert Muir",
            "id": "comment-12796366"
        },
        {
            "date": "2010-01-05T03:43:23+0000",
            "content": "attached is a patch with the Similarity impl. of course you have to manually supply this pivot value (avg doc. length), for now. ",
            "author": "Robert Muir",
            "id": "comment-12796514"
        },
        {
            "date": "2013-01-04T16:18:00+0000",
            "content": "Hi Robert,\n\nIs this implementation made moot by the new GSOC work, or would it still be worth testing this as well as BM25, DFR and INF?    \n\nI can't seem to find a link to the ORP collections.  Can you point me to it?\n(I plan to test with our long docs, but thought I would try out some of the ORP collections as well)\n\n\nTom ",
            "author": "Tom Burton-West",
            "id": "comment-13543985"
        },
        {
            "date": "2013-07-23T18:44:51+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717080"
        },
        {
            "date": "2014-04-16T12:54:29+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970774"
        }
    ]
}