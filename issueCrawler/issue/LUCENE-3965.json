{
    "id": "LUCENE-3965",
    "title": "consolidate all api modules in one place and un!@$# packaging for 4.0",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/build"
        ],
        "type": "Task",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I think users get confused about how svn/source is structured,\nwhen in fact we are just producing a modular build.\n\nI think it would be more clear if the lucene stuff was underneath\nmodules/, thats where our modular API is.\n\nwe could still package this up as lucene.tar.gz if we want, and even name\nmodules/core lucene-core.jar, but i think this would be a lot better\norganized than the current:\n\n\tlucene\n\tlucene/contrib\n\tmodules\n\n\n\nconfusion.",
    "attachments": {
        "LUCENE-3965_module_build.patch": "https://issues.apache.org/jira/secure/attachment/12522684/LUCENE-3965_module_build.patch",
        "LUCENE-3965_module_build_pname.patch": "https://issues.apache.org/jira/secure/attachment/12522700/LUCENE-3965_module_build_pname.patch",
        "LUCENE-3965.patch": "https://issues.apache.org/jira/secure/attachment/12522704/LUCENE-3965.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-06T19:55:01+0000",
            "content": "i think from release artifacts perspective, this would make a lot of sense: you would unzip and see:\n\n\tcore\n\tanalyzers\n\tgrouping\n\tdemo\n...\n\n\n\nSo people wouldnt be confused about where to go find stuff. ",
            "author": "Robert Muir",
            "id": "comment-13248661"
        },
        {
            "date": "2012-04-06T19:59:44+0000",
            "content": "So top-level lucene/ directory would vanish?\n\nSolr would not be affected? ",
            "author": "Steve Rowe",
            "id": "comment-13248668"
        },
        {
            "date": "2012-04-06T20:03:53+0000",
            "content": "\nSo top-level lucene/ directory would vanish?\n\nIn my opinion, yes. and contrib/highlighter would sit under there too.\n\nso instead of what you have today (which we dont even know how to package!), when you unzip lucene.zip\nyou would see:\n\n\tanalysis\n\tbenchmark\n\tcore\n\tdemo\n\tfacet\n\tgrouping\n\thighlighter\n\tjoin\n\tqueries\n\tqueryparser\n\tmemory\n\tmisc\n\tsandbox\n\tspatial\n\tsuggest\n\ttest-framework\n\ttools\n\n\n\n(i just combined the modules across lucene/, lucene/contrib, modules, and alpha-sorted so you have an idea of what it looks like) ",
            "author": "Robert Muir",
            "id": "comment-13248672"
        },
        {
            "date": "2012-04-06T20:04:14+0000",
            "content": "and what about lucene contribs?  all promoted to be modules? ",
            "author": "Steve Rowe",
            "id": "comment-13248673"
        },
        {
            "date": "2012-04-06T20:04:57+0000",
            "content": "Right, i guess if there is something funky about them and we don't think they belong as a top-level\nmodule, then stuff can always go in the sandbox? ",
            "author": "Robert Muir",
            "id": "comment-13248674"
        },
        {
            "date": "2012-04-06T20:07:13+0000",
            "content": "btw: I'm just bringing this up as an idea to go towards addressing the 4.0 packaging,\nin my opinion it makes sense and is simple. There might be other solutions too though.\n\nBut truth be told, now is a GREAT time to figure this out as we look at putting 3.x in bugfix mode.\nbecause we can fix this layout to be organized the way we want and not pay the price of difficult\nsvn merging. ",
            "author": "Robert Muir",
            "id": "comment-13248677"
        },
        {
            "date": "2012-04-06T20:09:52+0000",
            "content": "some inspiration from ICU: http://source.icu-project.org/repos/icu/icu4j/trunk/main/classes/\n\nThey actually combine these all into one mega-jar still as they work towards modularization,\nbut internally this is a similar thing there. ",
            "author": "Robert Muir",
            "id": "comment-13248680"
        },
        {
            "date": "2012-04-06T20:11:11+0000",
            "content": "btw: I'm just bringing this up as an idea to go towards addressing the 4.0 packaging, in my opinion it makes sense and is simple. There might be other solutions too though.\n\nI guess it's simpler because instead lucene/ and its denizens (which we already know and love), as well as modules/ (no packaging clue, thank you very much), the problem is reduced to the one single great unknown.\n\nBut truth be told, now is a GREAT time to figure this out as we look at putting 3.x in bugfix mode. because we can fix this layout to be organized the way we want and not pay the price of difficult svn merging.\n\nYes, if we are going to restructure, we should do it now. ",
            "author": "Steve Rowe",
            "id": "comment-13248681"
        },
        {
            "date": "2012-04-06T20:12:18+0000",
            "content": "an alternative thats still the same basic proposal is to move the current modules/\nunderneath lucene/ (maybe thats less confusing? as then you see our two \"products\"\nlucene/ and solr/ from the svn-tree). ",
            "author": "Robert Muir",
            "id": "comment-13248683"
        },
        {
            "date": "2012-04-06T20:14:24+0000",
            "content": "\nI guess it's simpler because instead lucene/ and its denizens (which we already know and love), as well as modules/ (no packaging clue, thank you very much), the problem is reduced to the one single great unknown.\n\nWell I started thinking about this when you restructured the lucene/ to have \"modules\" underneath it\nlike \"core\", \"test-framework\", \"tools\"... it starts making it painfully obvious we should combine\nthis stuff in some simple flattened structure that makes sense.\n\nas far as SVN call it modules/, call it lucene/, I don't care. its our search API product. ",
            "author": "Robert Muir",
            "id": "comment-13248686"
        },
        {
            "date": "2012-04-06T20:15:02+0000",
            "content": "an alternative thats still the same basic proposal is to move the current modules/ underneath lucene/ (maybe thats less confusing? as then you see our two \"products\" lucene/ and solr/ from the svn-tree).\n\nLike this? (i.e. everything under modules/, but modules/ under lucene/:\n\n\n\tlucene/\n\t\n\t\tmodules/\n\t\t\n\t\t\tcore/\n\t\t\tsandbox/\n\t\t\ttest-framework\n\t\t\t...\n\t\t\n\t\t\n\t\n\t\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13248688"
        },
        {
            "date": "2012-04-06T20:16:46+0000",
            "content": "another idea: instead of having analysis/ with \"submodules\" underneath it,\nwe could flatten that too (like solr-dataimporthandler and dataimporthandler-extras)\n\nso we would have analysis-common, analysis-kuromoji, analysis-phonetic, etc.\n\nNot sure if this really makes things simpler, but its flat. We don't have to do it,\nbut maybe it could simplify the build and such to have this easy flat structure. ",
            "author": "Robert Muir",
            "id": "comment-13248696"
        },
        {
            "date": "2012-04-06T20:18:38+0000",
            "content": "\nLike this? (i.e. everything under modules/, but modules/ under lucene/:\n\nIf we put it under lucene/ I would propose we wouldnt move core at all.\n\n\n\tlucene/\n\t\n\t\tcore/\n\t\tdemo/\n\t\thighlighter/\n\t\tanalyzers/\n\t\tgrouping/\n\t\ttest-framework\n...\n\t\n\t\n\n ",
            "author": "Robert Muir",
            "id": "comment-13248704"
        },
        {
            "date": "2012-04-06T20:22:47+0000",
            "content": "\nLike this? (i.e. everything under modules/, but modules/ under lucene/:\n\nIf we put it under lucene/ I would propose we wouldnt move core at all.\n\n\n\tlucene/\n\t\n\t\tcore/\n\t\tdemo/\n\t\thighlighter/\n\t\tanalyzers/\n\t\tgrouping/\n\t\ttest-framework\n...\n\t\n\t\n\n\n\n+1 ",
            "author": "Steve Rowe",
            "id": "comment-13248720"
        },
        {
            "date": "2012-04-06T20:26:50+0000",
            "content": "i like this better too... quick iteration \n\nAs far as the analyzers being 'nested' or 'flat' we could address that separately,\ni could go either way. But i think its much simpler to have at least our high\nlevel modules all in one place... thats really the point of this issue (title is misleading now) ",
            "author": "Robert Muir",
            "id": "comment-13248741"
        },
        {
            "date": "2012-04-06T20:29:10+0000",
            "content": "So here's the current iteration:\n\n\tlucene/\n\t\n\t\tanalysis/\n\t\tbenchmark/\n\t\tcore/\n\t\tdemo/\n\t\tfacet/\n\t\tgrouping/\n\t\thighlighter/\n\t\tjoin/\n\t\tqueries/\n\t\tqueryparser/\n\t\tmemory/\n\t\tmisc/\n\t\tsandbox/\n\t\tspatial/\n\t\tsuggest/\n\t\ttest-framework/\n\t\ttools/\n\t\n\t\n\n ",
            "author": "Robert Muir",
            "id": "comment-13248747"
        },
        {
            "date": "2012-04-06T20:31:30+0000",
            "content": "\nanother idea: instead of having analysis/ with \"submodules\" underneath it,\nwe could flatten that too (like solr-dataimporthandler and dataimporthandler-extras)\n\nso we would have analysis-common, analysis-kuromoji, analysis-phonetic, etc.\n\nNot sure if this really makes things simpler, but its flat. We don't have to do it,\nbut maybe it could simplify the build and such to have this easy flat structure.\n\n+0 - while the current analysis sub-module structure only serves to conceptually group them, rather than provide any technical benefit, I think we may want sub-modules in the future, perhaps for technical reasons, but also to get a handle on the human chunking limit: more than 5-9 or so \"things\" in one \"place\" and people's eyes glaze over... ",
            "author": "Steve Rowe",
            "id": "comment-13248750"
        },
        {
            "date": "2012-04-06T20:34:57+0000",
            "content": "That was my concern too. Currently I'm not sure this harms anything, and its well organized.\n\nAdditionally we have quite a few modules underneath analysis now, growing fast actually. \nSo it could cause a mess in the future and i'm not sure any simplicity to the build would\nactually be worth it. ",
            "author": "Robert Muir",
            "id": "comment-13248752"
        },
        {
            "date": "2012-04-06T20:38:33+0000",
            "content": "Do you think we should keep one build/ directory per new-style module?  I rather like the current ant clean under lucene/ - boom, one directory, done. ",
            "author": "Steve Rowe",
            "id": "comment-13248758"
        },
        {
            "date": "2012-04-06T20:40:08+0000",
            "content": "well we never had one build/ directory right?\n\nAt least contrib modules build underneath lucene/'s build.\n\nThe only reasons modules have their own build/'s is because they go out of their way to do this!\nSo I agree with you, lets just nuke that and have one! ",
            "author": "Robert Muir",
            "id": "comment-13248759"
        },
        {
            "date": "2012-04-06T20:43:41+0000",
            "content": "That would also simplify packaging, as modules' currently go out of their way to make their\nown dist/ directories too: e.g. under analyzers/common:\n\n\n  <property name=\"build.dir\" location=\"../build/common\" />\n  <property name=\"dist.dir\" location=\"../dist/common\" />\n\n\n\nSame goes with licensing (they have their own LICENSE.txt/NOTICE.txt's). If the products\nare still going to be lucene/ and solr/ (and i think for simplicity for 4.0, that's really\nwhat it should be) then we don't need this. ",
            "author": "Robert Muir",
            "id": "comment-13248761"
        },
        {
            "date": "2012-04-06T20:50:42+0000",
            "content": "If the products are still going to be lucene/ and solr/ (and i think for simplicity for 4.0, that's really what it should be)\n\n+1 ",
            "author": "Steve Rowe",
            "id": "comment-13248763"
        },
        {
            "date": "2012-04-06T20:55:28+0000",
            "content": "editing title to be more general... ",
            "author": "Robert Muir",
            "id": "comment-13248767"
        },
        {
            "date": "2012-04-06T21:07:19+0000",
            "content": "I don't like the separation between Solr and Lucene, in my opinion, Solr should also be a module and the lucene dir vanished. Solr contribs should also be modules.\n\nBut, the current solution is also fine, so +1 ",
            "author": "Uwe Schindler",
            "id": "comment-13248774"
        },
        {
            "date": "2012-04-06T21:09:14+0000",
            "content": "I don't like the separation between Solr and Lucene, in my opinion, Solr should also be a module and the lucene dir vanished. Solr contribs should also be modules.\n\nI agree with Robert: one top-level dir per \"product\" makes sense to me. ",
            "author": "Steve Rowe",
            "id": "comment-13248775"
        },
        {
            "date": "2012-04-06T21:14:29+0000",
            "content": "I would be more happy, if e.g. the Solr Tokenizer Factories would be part of the analysis modules... So a equalness between lucene-core and solr would be fine.\n\nBut on the other hand, factoring out the factories completely from Solr might be a good idea on the way to compoletely dynamic analyzer definitions like in Solr (see Hibernate Search, where you can define your Analyzer using Java Annotations \u2013 that internally usre Solr's factories and import the solr.jar uselessly). Thats just a comment on the side, I just wanted to mention it. So the current solution is fine, given that we remove Factories from Solr and move them to the analysis modules (and add the abstract interface to Lucene core). ",
            "author": "Uwe Schindler",
            "id": "comment-13248780"
        },
        {
            "date": "2012-04-06T21:31:50+0000",
            "content": "\nI would be more happy, if e.g. the Solr Tokenizer Factories would be part of the analysis modules...\n\nBut how is that related to this proposal? \n\nhere I am just talking about consolidating what we currently have on the filesystem so its less confusing.\n\nSeparately, I happen to agree with you, but I can assure you nothing will happen with regards to that\non this issue, why don't you assign or work on LUCENE-2510? ",
            "author": "Robert Muir",
            "id": "comment-13248887"
        },
        {
            "date": "2012-04-06T23:33:48+0000",
            "content": "+1 to this consolidation effort. I like the latest iteration layout.\n\nI also agree with Steve that we should continue to support sub-modules.  The new layout already has a lot of modules under lucene/ so I think its good to continue to keep the analysis submodules under analysis/.\n\nThis whole process means we can improve the demo module more, so that it actually demos all the other modules in some way.\n\n\nRight, i guess if there is something funky about them and we don't think they belong as a top-level\nmodule, then stuff can always go in the sandbox?\n\n+1.  We should go over the remaining contribs as we did in the past and make decisions about whether they're module worthy. ",
            "author": "Chris Male",
            "id": "comment-13249046"
        },
        {
            "date": "2012-04-07T15:31:50+0000",
            "content": "+1, to moving/merging modules/* and lucene/contrib/* under lucene.  This is much cleaner. ",
            "author": "Michael McCandless",
            "id": "comment-13249284"
        },
        {
            "date": "2012-04-13T17:55:40+0000",
            "content": "A good first step would be to bring all Lucene contribs down to the same level as core/ and test-framework/; make a new module-build.xml that's basically a copy of contrib-build.xml, and then make all the \"internal\" modules switch to module-build.xml.\n\nMoving modules/* and getting rid of contrib-build.xml could come later. ",
            "author": "Steve Rowe",
            "id": "comment-13253582"
        },
        {
            "date": "2012-04-14T19:11:14+0000",
            "content": "we could also just rename contrib-build to that, but keep its 'project name' the same so that its just a filesystem\nthing but all tasks still work.  ",
            "author": "Robert Muir",
            "id": "comment-13254176"
        },
        {
            "date": "2012-04-14T19:20:39+0000",
            "content": "here's the patch.\n\nfirst you must 'svn move lucene/contrib/contrib-build.xml lucene/module-build.xml' ",
            "author": "Robert Muir",
            "id": "comment-13254182"
        },
        {
            "date": "2012-04-14T23:21:06+0000",
            "content": "\nwe could also just rename contrib-build to that, but keep its 'project name' the same so that its just a filesystem\nthing but all tasks still work.\n\nhere's the patch.\n\nfirst you must 'svn move lucene/contrib/contrib-build.xml lucene/module-build.xml'\n\n+1 - ant test from the top level works, as does ant dist from both lucene and solr. ",
            "author": "Steve Rowe",
            "id": "comment-13254225"
        },
        {
            "date": "2012-04-15T13:20:00+0000",
            "content": "just to clean up: this renames the project name to 'module-build' to match and fixes references. ",
            "author": "Robert Muir",
            "id": "comment-13254322"
        },
        {
            "date": "2012-04-15T13:33:53+0000",
            "content": "I'm gonna work on an svn move + script today.\n\nWe need to get this issue resolved soon so that packaging works: then i think\nwe have a lot of options as far as improving the nightly builds and things like\nthat. ",
            "author": "Robert Muir",
            "id": "comment-13254328"
        },
        {
            "date": "2012-04-15T15:38:17+0000",
            "content": "first take at a patch (works with r1326364).\n\ndon't fear the size of the patch, its mostly noise from svn moves (even though i used --no-diff-deleted, it still lists every file that was moved)\n\nfirst you run this:\n\nsvn move lucene/contrib/demo lucene/demo\nsvn move lucene/contrib/highlighter lucene/highlighter\nsvn move lucene/contrib/memory lucene/memory\nsvn move lucene/contrib/misc lucene/misc\nsvn move lucene/contrib/sandbox lucene/sandbox\nsvn move modules/analysis lucene/analysis\nsvn move modules/benchmark lucene/benchmark\nsvn move modules/facet lucene/facet\nsvn move modules/grouping lucene/grouping\nsvn move modules/join lucene/join\nsvn move modules/queries lucene/queries\nsvn move modules/queryparser lucene/queryparser\nsvn move modules/spatial lucene/spatial\nsvn move modules/suggest lucene/suggest\nsvn delete modules\n\n\n\n'ant test' and 'ant javadocs' and such works, but prepare-release etc need some help. Though: they didnt work before either \n\nThere are also some nocommits.\n\nStill I'd like to get us in releasable shape with this issue... so I'm going to keep iterating. but its a fairly easy change... ",
            "author": "Robert Muir",
            "id": "comment-13254351"
        },
        {
            "date": "2012-04-15T15:46:15+0000",
            "content": "basically the overall design here was to rename 'contrib-crawl' to 'modules-crawl'.\nThis just excludes the 'core' modules so the build works the same as before:\n\n\n<fileset dir=\".\" includes=\"*/build.xml\" excludes=\"build/**,core/**,test-framework/**,tools/**\"/>\n\n\n\nThen after fixing the jar-XXX/contrib-uptodate stuff it was up and going fast.\n\nOther things to fix still:\n\n\tmodules still bogusly have their \"own\" build directories, but everything should be under lucene/build\n\tmodules still have their own LICENSE.txt/NOTICE.txt/CHANGES.txt, this should all be merged. I think we should merge contrib/CHANGES.txt too (thats the only reason I didn't nuke that directory yet). In general i think we should have\none CHANGES.txt for each product (lucene, solr) and not tons of them littered everywhere.\n\tintellij/maven need fixing, especially so dist-maven works so we can test other packaging stuff.\n\tdist-patterns etc need fixing (basically: need to build some fake 4.0 releases and review packaging is REALLY working).\n\tother nocommits i noted ...\n\n ",
            "author": "Robert Muir",
            "id": "comment-13254353"
        },
        {
            "date": "2012-04-15T17:05:45+0000",
            "content": "updated patch for r1326380 cleaning up the javadocs-all task (the package assigning stuff), and removing some nocommits: nuking contrib-uptodate and using module-uptodate everywhere.\n\nnext up: nuke the custom build directories so everything is organized under lucene/build/<XYZ>\n ",
            "author": "Robert Muir",
            "id": "comment-13254373"
        },
        {
            "date": "2012-04-15T23:56:58+0000",
            "content": "updated patch for r1326433:\n\n\n\tfixed build directories and other general cleanup: all the lucene modules build under lucene/build/XXX\n\tpackage-all-binary makes binary releases that actually make sense!!!! (NOTE: still havent tackled any maven yet)\n\tlots of cleanups and simplifications.\n\n\n\nAnother TODO: \n\n\tsrc/site needs to be updated for all javadocs modules to link to their names (in general the name 'contrib' is removed here and many are missing). But i would do this after committing I think because it would make the patch harder to manage.\n\n\n\nThere is now a new script, since its important to nuke the svn:ignores for the previous bogus build directories:\n\n# svn moves\nsvn move lucene/contrib/demo lucene/demo\nsvn move lucene/contrib/highlighter lucene/highlighter\nsvn move lucene/contrib/memory lucene/memory\nsvn move lucene/contrib/misc lucene/misc\nsvn move lucene/contrib/sandbox lucene/sandbox\nsvn move modules/analysis lucene/analysis\nsvn move modules/benchmark lucene/benchmark\nsvn move modules/facet lucene/facet\nsvn move modules/grouping lucene/grouping\nsvn move modules/join lucene/join\nsvn move modules/queries lucene/queries\nsvn move modules/queryparser lucene/queryparser\nsvn move modules/spatial lucene/spatial\nsvn move modules/suggest lucene/suggest\n# nuke modules dir\nsvn delete modules\n# clean up svn:ignore's, all modules should be consistent \n# under lucene/build now... so nuke this\nsvn pset svn:ignore pom.xml lucene/analysis\nsvn pset svn:ignore -F - \\\nlucene/facet \\\nlucene/grouping \\\nlucene/join \\\nlucene/queries \\\nlucene/queryparser \\\nlucene/spatial \\\nlucene/suggest << EOF\n*.iml\npom.xml\nEOF\nsvn pset svn:ignore -F - lucene/benchmark << EOF\ntemp\nwork\n*.iml\npom.xml\nEOF\n# now apply patch\npatch -p0 < LUCENE-3965.patch\n\n ",
            "author": "Robert Muir",
            "id": "comment-13254467"
        },
        {
            "date": "2012-04-16T00:39:37+0000",
            "content": "attached patch fixing maven too (still r1326433) \n\nI can now do a full 'ant -Dversion=4.0.0 -Dgpg.key=322D7ECA prepare-release' which produces reasonable artifacts.\n\nI think this is ready to commit, it makes our trunk theoretically releasable where it wasn't before. \n\nI would keep the issue open to address more of the TODOs:\n\n\tmerging all CHANGES/LICENSE/NOTICE\n\tfixing src/site and regenerating so the documentation links work\n\tfixing README's etc (e.g. notes about the demo).\n\n\n\nHere is the script you need:\n\n# svn moves\nsvn move lucene/contrib/demo lucene/demo\nsvn move lucene/contrib/highlighter lucene/highlighter\nsvn move lucene/contrib/memory lucene/memory\nsvn move lucene/contrib/misc lucene/misc\nsvn move lucene/contrib/sandbox lucene/sandbox\nsvn move modules/analysis lucene/analysis\nsvn move modules/benchmark lucene/benchmark\nsvn move modules/facet lucene/facet\nsvn move modules/grouping lucene/grouping\nsvn move modules/join lucene/join\nsvn move modules/queries lucene/queries\nsvn move modules/queryparser lucene/queryparser\nsvn move modules/spatial lucene/spatial\nsvn move modules/suggest lucene/suggest\n# nuke modules dir\nsvn delete modules\n# clean up svn:ignore's, all modules should be consistent \n# under lucene/build now... so nuke this\nsvn pset svn:ignore pom.xml lucene/analysis\nsvn pset svn:ignore -F - \\\nlucene/facet \\\nlucene/grouping \\\nlucene/join \\\nlucene/queries \\\nlucene/queryparser \\\nlucene/spatial \\\nlucene/suggest << EOF\n*.iml\npom.xml\nEOF\nsvn pset svn:ignore -F - lucene/benchmark << EOF\ntemp\nwork\n*.iml\npom.xml\nEOF\n# maven configurations\nsvn move dev-tools/maven/modules/analysis dev-tools/maven/lucene\nsvn move dev-tools/maven/modules/benchmark dev-tools/maven/lucene\nsvn move dev-tools/maven/modules/facet dev-tools/maven/lucene\nsvn move dev-tools/maven/modules/grouping dev-tools/maven/lucene\nsvn move dev-tools/maven/modules/join dev-tools/maven/lucene\nsvn move dev-tools/maven/modules/queries dev-tools/maven/lucene\nsvn move dev-tools/maven/modules/queryparser dev-tools/maven/lucene\nsvn move dev-tools/maven/modules/spatial dev-tools/maven/lucene\nsvn move dev-tools/maven/modules/suggest dev-tools/maven/lucene\nsvn delete dev-tools/maven/modules\nsvn move dev-tools/maven/lucene/contrib/demo dev-tools/maven/lucene\nsvn move dev-tools/maven/lucene/contrib/highlighter dev-tools/maven/lucene\nsvn move dev-tools/maven/lucene/contrib/memory dev-tools/maven/lucene\nsvn move dev-tools/maven/lucene/contrib/misc dev-tools/maven/lucene\nsvn move dev-tools/maven/lucene/contrib/sandbox dev-tools/maven/lucene\nsvn delete dev-tools/maven/lucene/contrib\n\n# now apply patch\npatch -p0 < LUCENE-3965.patch\n\n ",
            "author": "Robert Muir",
            "id": "comment-13254472"
        },
        {
            "date": "2012-04-17T11:43:42+0000",
            "content": "I plan to commit this later today. ",
            "author": "Robert Muir",
            "id": "comment-13255489"
        },
        {
            "date": "2012-04-17T12:52:49+0000",
            "content": "+1 to commit - good progress!\n\nTests work from the top level, and I tried ant test in a couple of modules' directories, which also worked.  Build output all seems to be going to the right place (under lucene/build/).\n\nI scanned the changed build files, and I didn't see any problems.\n\nI searched *build.xml for \"modules/\" and \"contrib\".  \"modules/\" seems to be gone, but there are several names that still have \"contrib\" in them (e.g. test-contrib) in lucene/build.xml and lucene/common-build.xml.  These names can be fixed later.\n\nI didn't look at javadocs or packaging - I assume anything you've done there will be better than it was . ",
            "author": "Steve Rowe",
            "id": "comment-13255520"
        },
        {
            "date": "2012-04-17T13:05:59+0000",
            "content": "\nI searched *build.xml for \"modules/\" and \"contrib\". \"modules/\" seems to be gone, but there are several names that still have \"contrib\" in them (e.g. test-contrib) in lucene/build.xml and lucene/common-build.xml. These names can be fixed later.\n\nYeah I can rename these (at least temporarily) to something more appropriate after committing.\n\nseparately another TODO: its slightly confusing that core and friends aren't just another module,\nand its confusing common-build.xml with its \"module tasks\" is included by lucene/build.xml, when\nits no module at all. \n(try ant -projecthelp from lucene/ and experiment with some of the common.XXXX tasks that show up here).\n\nBut, this is the way trunk is today  The tradeoff of this approach is that we keep all the same logic\nand its really not a drastic change...\n\nI resisted doing these kind of cleanups because they have a chance of breaking something and i think should\nbe cleaned up separately... but we should still look at it afterwards. ",
            "author": "Robert Muir",
            "id": "comment-13255543"
        },
        {
            "date": "2012-04-17T13:30:58+0000",
            "content": "running a final test first. I committed the fixes to nightly/\n\nHowever, we could encounter a failed build from the svn check, due to the removal\nof the bogus build directories and their svn:ignores (would just be leftover relics).\n\nOnce i commit I will ask Uwe to clean the workspaces to (hopefully) prevent that,\nbut its possible one build could slip through... (and of course the possibility\ni have some other bugs) ",
            "author": "Robert Muir",
            "id": "comment-13255559"
        },
        {
            "date": "2012-04-19T06:10:56+0000",
            "content": "I think this issue is ok!\n\nWe can build real releases now, so trunk is back in shape. ",
            "author": "Robert Muir",
            "id": "comment-13257282"
        }
    ]
}