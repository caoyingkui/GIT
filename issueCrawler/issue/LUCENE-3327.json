{
    "id": "LUCENE-3327",
    "title": "TestFSTs.testRandomWords throws AIOBE when \"verbose\"=true",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "core/FSTs"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.4",
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Seems like invalid utf-8 sometimes gets passed to Bytesref.utf8ToString() in the verbose \"println\"s.",
    "attachments": {
        "LUCENE-3327.patch": "https://issues.apache.org/jira/secure/attachment/12486882/LUCENE-3327.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-07-18T15:43:06+0000",
            "content": "this just calls UnicodeUtil.newString(..) instead of BytesRef.utf8ToString() in all cases. ",
            "author": "James Dyer",
            "id": "comment-13067094"
        },
        {
            "date": "2011-07-18T17:06:56+0000",
            "content": "Hmm, I don't think this is quite right: in the BYTE1 case, these are the bytes from the term, and we shouldn't pretend they are unicode code points (which is what UnicodeUtil.newString is given).\n\nIe, we really do need the inputMode to be passed to inputToString.\n\nReally, this test pretends a term is always a utf8 byte sequence, which in general is not the case (terms are arbitrary byte[]), it's just that this test only ever operates on terms that are in fact utf8 byte sequences (I think?).\n\nIndeed I'm also hitting AIOOBE (ant test-core -Dtestcase=TestFSTs -Dtestmethod=testRandomWords -Dtests.seed=-3451527662631579719:-3355372777860187201):\n\n\nThere was 1 failure:\n1) testRandomWords(org.apache.lucene.util.fst.TestFSTs)\njava.lang.ArrayIndexOutOfBoundsException: 44\n\tat org.apache.lucene.util.UnicodeUtil.UTF8toUTF16(UnicodeUtil.java:586)\n\tat org.apache.lucene.util.BytesRef.utf8ToString(BytesRef.java:203)\n\tat org.apache.lucene.util.fst.TestFSTs.inputToString(TestFSTs.java:989)\n\tat org.apache.lucene.util.fst.TestFSTs.access$000(TestFSTs.java:53)\n\tat org.apache.lucene.util.fst.TestFSTs$FSTTester.verifyPruned(TestFSTs.java:833)\n\tat org.apache.lucene.util.fst.TestFSTs$FSTTester.doTest(TestFSTs.java:507)\n\tat org.apache.lucene.util.fst.TestFSTs$FSTTester.doTest(TestFSTs.java:366)\n\tat org.apache.lucene.util.fst.TestFSTs.doTest(TestFSTs.java:214)\n\tat org.apache.lucene.util.fst.TestFSTs.testRandomWords(TestFSTs.java:963)\n\tat org.apache.lucene.util.fst.TestFSTs.testRandomWords(TestFSTs.java:938)\n\n\n\nSpooky because this test supposedly creates random valid unicode strings (_TestUtil.randomRealisticUnicodeString)... hmmm. ",
            "author": "Michael McCandless",
            "id": "comment-13067144"
        },
        {
            "date": "2011-07-20T20:02:11+0000",
            "content": "\nSpooky because this test supposedly creates random valid unicode strings (_TestUtil.randomRealisticUnicodeString)... hmmm.\n\nbut then it breaks them down into prefixes and those aren't always valid utf-8... ",
            "author": "James Dyer",
            "id": "comment-13068588"
        },
        {
            "date": "2011-07-20T21:04:34+0000",
            "content": "Ahhh that's what makes the invalid UTF8.  OK.  Can we just change that one place (that cuts a potentially invalid UTF8 prefix) to just use BytesRef.toString? ",
            "author": "Michael McCandless",
            "id": "comment-13068638"
        },
        {
            "date": "2011-07-20T22:52:34+0000",
            "content": "Wherever the test is printing out a term prefix, it just calls IntsRef.toString() rather than try to convert this to something more human-readable. ",
            "author": "James Dyer",
            "id": "comment-13068689"
        },
        {
            "date": "2011-07-20T23:07:13+0000",
            "content": "Looks great James, thanks!  I confirmed this fixes the above exc when I run w/ verbose.  I'll commit shortly \u2013 I just changed the new arg's name to \"isValidUnicode\", and fixed up the whitespace. ",
            "author": "Michael McCandless",
            "id": "comment-13068697"
        },
        {
            "date": "2011-07-20T23:09:41+0000",
            "content": "Thanks James! ",
            "author": "Michael McCandless",
            "id": "comment-13068701"
        }
    ]
}