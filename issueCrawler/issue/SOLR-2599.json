{
    "id": "SOLR-2599",
    "title": "CloneFieldUpdateProcessor (copyField-equse equivilent)",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Need an UpdateProcessor which can copy and move fields",
    "attachments": {
        "SOLR-2599.patch": "https://issues.apache.org/jira/secure/attachment/12497725/SOLR-2599.patch",
        "SOLR-2599-hoss.patch": "https://issues.apache.org/jira/secure/attachment/12531063/SOLR-2599-hoss.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13120564",
            "date": "2011-10-04T23:00:21+0000",
            "content": "Here's the processor. It's been in production for some time at a customer.\n\nSample config as follows:\n\n<processor class=\"solr.FieldCopyProcessorFactory\">\n  <str name=\"source\">category</str>\n  <str name=\"dest\">category_s</str>\n</processor>\n\n\n\nTo move (rename) a field:\n\n<processor class=\"solr.FieldCopyProcessorFactory\">\n  <str name=\"source\">LastModified</str>\n  <str name=\"dest\">last_modified</str>\n  <bool name=\"move\">true</bool>\n</processor>\n\n\n\nTo append to existing field:\n\n<processor class=\"solr.FieldCopyProcessorFactory\">\n  <str name=\"source\">lastname firstname</str>\n  <str name=\"dest\">fullname</str>\n  <bool name=\"append\">true</bool>\n  <str name=\"append.delim\">, </str>\n</processor>\n\n\n\nTo append as values to multivalued field, with optional size cap:\n\n<processor class=\"solr.FieldCopyProcessorFactory\">\n  <str name=\"source\">title body</str>\n  <str name=\"dest\">text</str>\n  <bool name=\"multival\">true</bool>\n  <int name=\"maxChars\">100</int>\n</processor>\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13121327",
            "date": "2011-10-05T18:24:32+0000",
            "content": "Perhaps multival should be renamed multiValued to comply with schema lingo?\n\nAlso, if I make it (optionally) schema aware, I can set multiValued behavior as default if dest field is multivalued. Also, perhaps it makes sense to allow append for multiValued as well, and let it append all source fields to a string, and then adding this concatenated string as one single field value instead of each source as its own value?\n\nThe reason I want to be able to disable strict schema checking is in the case where a processor creates intermediate fields only, which we know will be removed from SolrInputDocument before indexing, so that we can be free to name it whatever we like without causing an error. Unfortunately, ExtractingRequestHandler is too strict here and would benefit from a enforceSchema=false option. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13186960",
            "date": "2012-01-16T15:11:10+0000",
            "content": "New patch. Renamed multival -> multiValued\n\nAny comments on functionality, naming or conventions before I prepare for commit? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13228347",
            "date": "2012-03-13T12:07:46+0000",
            "content": "@Hoss, you have not incorporated this in your SOLR-2802, have you? I'd like to get this in, but have not had time to fully investigate your base classes yet. Can we put this in as is and refactor later? If so, what parameter names should change in order to have the same external API after refactoring? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13281347",
            "date": "2012-05-23T01:35:10+0000",
            "content": "Jan:\n\nI did not incorporate any sort of copy field equivalent in the SOLR-2802 work, but i did implement the \"append\" logic as a processor (see below)\n\nComments on your patch...\n\n\n\tmy personal pref would be to use a slight diff name... (maybe \"CloneFieldUpdateProcessor\" ?) to help differentiate slightly from <copyField/> and reduce the likelihood of confusion during casual discussion in email/irc (ie: \"I'm copying field A to B...\"; \"wait, are you FieldCopy-ing or CopyField-ing?\")\n\tas mentioned in SOLR-2825 + SOLR-3095, you shouldn't need to explicitly handle \"enabled\" in the individual processors\n\ti would eliminate the append, append.delim, and multiValued options and only support the multiValued=true behavior - if they want the append logic they can combine this processor with the ConcatFieldUpdateProcessorFactory\n\tinstead of a \"move=true\" boolean config, i think it would be more clear what the behavior/alternatives are if we used an \"action=clone|rename\" config, with the default being \"clone\"\n\tinstead of the simple whitespace seperated \"source\" field name config, it would be nice if we could reuse the field name selector syntax options from FieldMutatingUpdateProcessorFactory (multiple fieldName, fieldRegex, typeName, and typeClass as well as excludes of any/all of those)\n\tneed to think carefully about how maxChars should work:\n\t\n\t\twhat if the source values aren't Strings? they could easily be numbers or dates, so it seems like a bad idea to convert them to strings just because they are copied/renamed.\n\t\teven if all we worry about is strings, should it be maxChars per value, maxChars per source field, or total maxChars in dest?\n\t\t\n\t\t\tspecifics need documented\n\t\t\n\t\t\n\t\tpersonally: i would suggest ripping out the maxChars option and making it a distinct processor that can be configured later in the chain.  if we leave it in, then i think it's really important that it should be ignored or throw and error unless the value implements CharSequence, and not forcably toString() every copied value. (so this processor will still be useful with numeric values)\n\t\n\t\n\tneed to think carefully about field boosts:\n\t\n\t\teither we should try to preserve/combine them on move/copy, or we should make sure we explicitly blow them away\n\t\teither way we need to document it\n\t\tif i'm reading the patch correctly it currently obliterates the boost on the dest field in all cases, even if there is not source value(s) to copy, and ignores any boost on any source field, but we should double check that.\n\t\n\t\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13289937",
            "date": "2012-06-06T04:20:36+0000",
            "content": "Jan: inspired by your patch and tests, i hacked up a new version that incorporates all my previous comments...\n\n\n\tCloneFieldUpdateProcessorFactory\n\t\n\t\thandles just the core field cloning\n\t\tsource can be simple filed name, or the various \"selector\" style args from FieldMutatingUpdateProcessorFactory\n\t\n\t\n\tTruncateFieldUpdateProcessorFactory\n\t\n\t\tFieldMutatingUpdateProcessorFactory\n\t\timplements the 'max chars' style logic\n\t\n\t\n\tIgnoreFieldUpdateProcessorFactory\n\t\n\t\tFieldMutatingUpdateProcessorFactory\n\t\tremoves fields from the document\n\t\n\t\n\n\n\n...take a look at the javadocs and test case and lemme know what you think.  I'm pretty sure combinations of these three processors cover all of the examples from your test case. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13294708",
            "date": "2012-06-13T23:02:47+0000",
            "content": "I went ahead and committed my patch.\n\n(one of the beauties of adding more UpdateProcessors like this is that they can be mixed and matched, so if folks have ideas about alternative configuration/behavior we can always add more processors with different names)\n\nCommitted revision 1350050. - trunk\nCommitted revision 1350051. - 4x "
        },
        {
            "author": "Kai G\u00fclzau",
            "id": "comment-13574466",
            "date": "2013-02-08T13:22:11+0000",
            "content": "Exactly what i was looking for.\nWould be nice if this is documented in http://wiki.apache.org/solr/UpdateRequestProcessor "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13575579",
            "date": "2013-02-11T00:03:20+0000",
            "content": "Anyone can edit the Wiki by creating a logon, could you go ahead and do this?\n\nThanks,\nErick "
        },
        {
            "author": "Eric Bus",
            "id": "comment-13921011",
            "date": "2014-03-05T16:22:24+0000",
            "content": "Is there a specific reason why dest has to be a fixed fieldname? I would like to migrate our copyField settings to this 'new' processor, but that would require wildcards for both source and destination.  For example:\n\n<copyField source=\"text_\" dest=\"singlestring_\" />\n\nAs far as I can see, this processor does not support this behaviour? "
        }
    ]
}