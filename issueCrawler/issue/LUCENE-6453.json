{
    "id": "LUCENE-6453",
    "title": "Specialize SpanPositionQueue similar to DisiPriorityQueue",
    "details": {
        "resolution": "Won't Fix",
        "affect_versions": "None",
        "components": [
            "core/search"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Inline the position comparison function",
    "attachments": {
        "LUCENE-6453.patch": "https://issues.apache.org/jira/secure/attachment/12728007/LUCENE-6453.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14511642",
            "author": "Paul Elschot",
            "date": "2015-04-24T20:04:41+0000",
            "content": "This time with upHeap void instead of boolean, return value is not used. "
        },
        {
            "id": "comment-14519620",
            "author": "Paul Elschot",
            "date": "2015-04-29T16:00:34+0000",
            "content": "This should also be used in NearSpansUnordered, but the current patch does not do that. "
        },
        {
            "id": "comment-14519984",
            "author": "Paul Elschot",
            "date": "2015-04-29T19:14:16+0000",
            "content": "Patch of 29 April 2015.\nUse generic SpanPositionQueue in SpanOr and in NearSpansUnordered. "
        },
        {
            "id": "comment-14610717",
            "author": "Paul Elschot",
            "date": "2015-07-01T17:51:31+0000",
            "content": "Would this be a good moment to discuss this? "
        },
        {
            "id": "comment-14713359",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:13:15+0000",
            "content": "Bulk move to 5.4 after 5.3 release. "
        },
        {
            "id": "comment-15090553",
            "author": "Paul Elschot",
            "date": "2016-01-09T11:02:56+0000",
            "content": "Patch of 9 Jan 2016.\n\nUpdated to trunk.\n\nThis uses SpansT as a type name, following this style guide:\n\nhttps://google.github.io/styleguide/javaguide.html#s5.2.8-type-variable-names "
        },
        {
            "id": "comment-15170567",
            "author": "Paul Elschot",
            "date": "2016-02-27T12:13:02+0000",
            "content": "It would probably be best to support this with a performance benchmark, but I don't have the time to do that now. "
        },
        {
            "id": "comment-16134541",
            "author": "Paul Elschot",
            "date": "2017-08-20T19:04:25+0000",
            "content": "Closing, not enough interest. "
        }
    ]
}