{
    "id": "LUCENE-5795",
    "title": "More Like This: ensures selection of best terms is indeed O(n)",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ]
    },
    "description": "",
    "attachments": {
        "LUCENE-5795": "https://issues.apache.org/jira/secure/attachment/12653204/LUCENE-5795"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14049701",
            "author": "Simon Willnauer",
            "content": "I think making the priority queue bounded makes perfect sense. Yet, I think when we touch this queue we should also make sure we get rid of the crazy Object[] that is holds. We should really add a struct like object that holds the individual values rather than an Object array that requires Float rather than float (we should prefer the latter). \nFurther I think if we really want to make this more efficient we (not sure about the O( n ) though but that's a different story) we should not use \n\n\n      res.insertWithOverflow(new Object[]{word, // the word\n          topField, // the top field\n          score,// overall score\n          idf, // idf\n          docFreq, // freq in all docs\n          tf\n      });\n\n\n\nit will add the element no matter if we exceed the size of the queue or not.\n\nwe should rather do something like:\n\n\nfinal int limit = Math.min(maxQueryTerms, words.size());\n//...\n\nif (queue.size() < limit) {\n  // there is still space in the queue\n  queue.add(new ScoreTerm(word, topField, score, ...))\n} else {\n  ScoreTerm term = queue.top();\n  if (term.score() < score) { // update the smallest in the queue in place and update the queue.\n    term.update(word, topField, score, ...);\n    queue.updateTop();\n  }\n} \n\n\n\nI hope that makes sense? ",
            "date": "2014-07-02T07:37:11+0000"
        },
        {
            "id": "comment-14049777",
            "author": "Alex Ksikes",
            "content": "Thanks, I've updated the patch as per your suggestions. ",
            "date": "2014-07-02T09:32:38+0000"
        },
        {
            "id": "comment-14049805",
            "author": "Simon Willnauer",
            "content": "look pretty good though. can you make all the members and methods in ScoreTerm package private or private? I also think we should make retrieveTerms() private or package private, it seem not used elsewhere no? ",
            "date": "2014-07-02T10:22:07+0000"
        },
        {
            "id": "comment-14051735",
            "author": "Alex Ksikes",
            "content": "Added test to check for top N. ",
            "date": "2014-07-03T17:28:56+0000"
        },
        {
            "id": "comment-14052818",
            "author": "Simon Willnauer",
            "content": "thanks alex, your test uses internal sun APIs ie. import com.sun.deploy.util.StringUtils; I don't think there is a string utils in java can you fix that, the test doesn't compile for me. ",
            "date": "2014-07-05T08:04:49+0000"
        },
        {
            "id": "comment-14057463",
            "author": "Alex Ksikes",
            "content": "Thanks for the comment Simon. I've just updated the patch. ",
            "date": "2014-07-10T13:33:12+0000"
        },
        {
            "id": "comment-14057563",
            "author": "ASF subversion and git services",
            "content": "Commit 1609474 from Simon Willnauer in branch 'dev/trunk'\n[ https://svn.apache.org/r1609474 ]\n\nLUCENE-5795:  MoreLikeThisQuery now only collects the top N terms ",
            "date": "2014-07-10T15:15:44+0000"
        },
        {
            "id": "comment-14057634",
            "author": "ASF subversion and git services",
            "content": "Commit 1609493 from Simon Willnauer in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1609493 ]\n\nLUCENE-5795:  MoreLikeThisQuery now only collects the top N terms ",
            "date": "2014-07-10T16:21:44+0000"
        },
        {
            "id": "comment-14057635",
            "author": "Simon Willnauer",
            "content": "committed thanks Alex ",
            "date": "2014-07-10T16:21:55+0000"
        }
    ]
}