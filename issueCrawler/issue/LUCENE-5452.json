{
    "id": "LUCENE-5452",
    "title": "Combine matches from multiple fields into one with the postings highlighter",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "core/search"
        ],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "Like you can do with the FVH, it'd be nice to be able combine matches from multiple fields with the postings highlighter.\n\nNote that the postings highlighter doesn't do phrase matching and doesn't use term boosts so some of the FVH's field combining features won't work.  It'd be nice to get some of them, though.",
    "attachments": {
        "LUCENE-5452.patch": "https://issues.apache.org/jira/secure/attachment/12629616/LUCENE-5452.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13904539",
            "author": "Nik Everett",
            "content": "Basic implementation that doesn't properly handle multi-term queries. ",
            "date": "2014-02-18T20:23:19+0000"
        },
        {
            "id": "comment-13904559",
            "author": "Robert Muir",
            "content": "Hi Nik, is there an advantage with the current patch over doing this \"a level above\" (e.g. combining after-the-fact?)\n\nA custom passage formatter has access to the score, so an alternative would be do this with a formatter+highlightFieldsAsObject? ",
            "date": "2014-02-18T20:41:50+0000"
        },
        {
            "id": "comment-13904610",
            "author": "Nik Everett",
            "content": "I hadn't really thought of doing it a level above.  I like the idea.  The only thing that jumps out at me about doing it this way is that there is only a single priority queue rather than multiple that have to be maintained and merged.  I'm not sure if that outweighs the extra api complexity this adds.  I'm also pretty sure the higher level approach is more likely to keep the careful linear reads that the PostingsHighlighter does.    ",
            "date": "2014-02-18T21:17:00+0000"
        },
        {
            "id": "comment-13904675",
            "author": "Robert Muir",
            "content": "Cool, maybe we can actually optimize the existing PQ stuff anyway (its not super-huper-duper optimized). But in general its bounded towards the number of matching sentences per doc, which is presumably quite small (there is some paper suggesting more than 5 is not that useful, so I assumed that). I'll take a look.\n\nThe other thing that concerned me (and it may be just fine in your patch), is i couldn't tell if there was a little O(n^2) as far as fields go (fieldsIn * fieldsToMatchedFields), and the termsenum/docsenum/etc reuse across same segment became even more hairier than it is now (and its definitely ugly now).\n\nThe final advantage of the \"level above\" would be, the multi-term highlighting etc would work for free.\n\nI'm gonna open a separate issue to try to improve some of this existing code, it was confusing to me just looking at it. ",
            "date": "2014-02-18T22:00:55+0000"
        }
    ]
}