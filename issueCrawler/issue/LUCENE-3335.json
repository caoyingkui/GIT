{
    "id": "LUCENE-3335",
    "title": "jrebug causes porter stemmer to sigsegv",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.9,                                            1.9.1,                                            2.0.0,                                            2.1,                                            2.2,                                            2.3,                                            2.3.1,                                            2.3.2,                                            2.4,                                            (15)2.4.1,                                            2.9,                                            2.9.1,                                            2.9.2,                                            2.9.3,                                            2.9.4,                                            3.0,                                            3.0.1,                                            3.0.2,                                            3.0.3,                                            3.1,                                            3.2,                                            3.3,                                            3.4,                                            4.0-ALPHA",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "happens easily on java7: ant test -Dtestcase=TestPorterStemFilter -Dtests.iter=100\n\nmight happen on 1.6.0_u26 too, a user reported something that looks like the same bug already:\nhttp://www.lucidimagination.com/search/document/3beaa082c4d2fdd4/porterstemfilter_kills_jvm",
    "attachments": {
        "LUCENE-3335.patch": "https://issues.apache.org/jira/secure/attachment/12487598/LUCENE-3335.patch",
        "LUCENE-3335_slow.patch": "https://issues.apache.org/jira/secure/attachment/12487586/LUCENE-3335_slow.patch",
        "patch-0uwe.patch": "https://issues.apache.org/jira/secure/attachment/12487824/patch-0uwe.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-07-23T12:56:53+0000",
            "content": "Passes with -Xint (but takes very long) ",
            "author": "Uwe Schindler",
            "id": "comment-13069951"
        },
        {
            "date": "2011-07-23T12:59:43+0000",
            "content": "\n[junit] Testsuite: org.apache.lucene.analysis.en.TestPorterStemFilter\n[junit] #\n[junit] # A fatal error has been detected by the Java Runtime Environment:\n[junit] #\n[junit] #  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000002348faf, pid=11080, tid=10288\n[junit] #\n[junit] # JRE version: 7.0-b147\n[junit] # Java VM: Java HotSpot(TM) 64-Bit Server VM (21.0-b17 mixed mode windows-amd64 compressed oops)\n[junit] # Problematic frame:\n[junit] # J  org.apache.lucene.analysis.en.PorterStemFilter.incrementToken()Z\n[junit] #\n[junit] # Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\n[junit] #\n[junit] # An error report file with more information is saved as:\n[junit] # C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr3\\modules\\analysis\\build\\common\\test\\1\\hs_err_pid11080.log\n[junit] #\n[junit] # If you would like to submit a bug report, please visit:\n[junit] #   http://bugreport.sun.com/bugreport/crash.jsp\n[junit] #\n[junit] Test org.apache.lucene.analysis.en.TestPorterStemFilter FAILED (crashed)\n\n\n\nOn each run, the problematic frame is different, sometimes incrementToken, sometimes BaseTokenStreamTestcase.assertTokenStreamContents, sometimes PorterStemmer.stem().\n\nSomehow hotspot corrupts itsself. ",
            "author": "Uwe Schindler",
            "id": "comment-13069952"
        },
        {
            "date": "2011-07-23T13:10:39+0000",
            "content": "i traced this down to the step4 method... maybe we can code it differently and dodge the bug.\ne.g. this passes:\nant test -Dtestcase=TestPorterStemFilter -Dtests.iter=100 -Dargs=\"-XX:CompileCommand=exclude,org/apache/lucene/analysis/en/PorterStemmer,step4\"\n ",
            "author": "Robert Muir",
            "id": "comment-13069953"
        },
        {
            "date": "2011-07-23T13:30:42+0000",
            "content": "heres a simple workaround, probably slows the filter down some. ",
            "author": "Robert Muir",
            "id": "comment-13069955"
        },
        {
            "date": "2011-07-23T13:39:11+0000",
            "content": "Solr tests never pass with Java7 because of that  ",
            "author": "Uwe Schindler",
            "id": "comment-13069956"
        },
        {
            "date": "2011-07-23T14:06:56+0000",
            "content": "yeah i think its a bad bug, obviously even casually using this stemmer will cause it to crash (this is no crazy random test but just stemming a file of a few thousand english words)\n\nhow do we vote -1 to release Java7  ",
            "author": "Robert Muir",
            "id": "comment-13069960"
        },
        {
            "date": "2011-07-23T14:31:15+0000",
            "content": "I opened a bug at sun, here are my 'steps to reproduce':\n\n\ncurl http://tartarus.org/~martin/PorterStemmer/java.txt > Stemmer.java\njavac Stemmer.java\njava Stemmer /usr/share/dict/words\n\n ",
            "author": "Robert Muir",
            "id": "comment-13069963"
        },
        {
            "date": "2011-07-23T14:32:03+0000",
            "content": "http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7070134 ",
            "author": "Robert Muir",
            "id": "comment-13069964"
        },
        {
            "date": "2011-07-23T14:40:33+0000",
            "content": "http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7070134\n\nThis link does not work for me. ",
            "author": "Mark Miller",
            "id": "comment-13069965"
        },
        {
            "date": "2011-07-23T14:43:56+0000",
            "content": "\nYou can monitor this bug on the Java Bug Database at\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7070134.\n\nIt may take a day or two before your bug shows up in this external database. \n\n ",
            "author": "Robert Muir",
            "id": "comment-13069968"
        },
        {
            "date": "2011-07-23T14:50:38+0000",
            "content": "Yuck. Welcome to 1980  ",
            "author": "Mark Miller",
            "id": "comment-13069973"
        },
        {
            "date": "2011-07-23T17:28:19+0000",
            "content": "TestPorterStemmer -> TestPorterStemFilter ",
            "author": "Robert Muir",
            "id": "comment-13070003"
        },
        {
            "date": "2011-07-23T17:48:12+0000",
            "content": "here's a better workaround, adds a redundant 'ch == 0' check.  ",
            "author": "Robert Muir",
            "id": "comment-13070008"
        },
        {
            "date": "2011-07-23T18:20:13+0000",
            "content": "I like the first patch more, as the code is much easier to understand. I assume its not slower. ",
            "author": "Uwe Schindler",
            "id": "comment-13070016"
        },
        {
            "date": "2011-07-23T19:22:23+0000",
            "content": "When applying your patch, Lucene core and modules build correctly, but solr fails on random tests with unreproducible error messages.\n\nIt seems that hotspot is totally broken in Java 7. ",
            "author": "Uwe Schindler",
            "id": "comment-13070027"
        },
        {
            "date": "2011-07-23T20:28:25+0000",
            "content": "wait, how do you know? Do all Solr tests pass with -Xint?\n\nMaybe there is some other issue affecting Solr, perhaps something XML related.\nPlease open up a separate JIRA issue for that: I don't want to confuse that stuff with this one. ",
            "author": "Robert Muir",
            "id": "comment-13070047"
        },
        {
            "date": "2011-07-23T21:19:03+0000",
            "content": "maybe my bug is a duplicate of this one: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7068051 ",
            "author": "Robert Muir",
            "id": "comment-13070055"
        },
        {
            "date": "2011-07-23T21:35:24+0000",
            "content": "wait, how do you know? Do all Solr tests pass with -Xint?\n\nSolr tests also do not pass with -Xint. It seems to be a concurrency bug in Solr's caching. With caching disabled (in SolrIndexSearcher), tests pass except those which directly check cache contents. This affects TestFiltering, RequiredFieldsTest and more tests (fail randomly depending on load).\n\nAnother test randomly fails without reason: TestEchoParams (this test looks like chinese to me, I dont understand any single line and what is tested at all). ",
            "author": "Uwe Schindler",
            "id": "comment-13070057"
        },
        {
            "date": "2011-07-23T21:36:45+0000",
            "content": "I can confirm, Roberts fixes fix all bugs in Lucene & Modules (I used the \"slow\" one which is not slow  ). Solr tests no longer segfault when they use PorterStemFilter, but the above test failures are real and not hotspot related. ",
            "author": "Uwe Schindler",
            "id": "comment-13070061"
        },
        {
            "date": "2011-07-24T12:15:50+0000",
            "content": "I opened SOLR-2672 and SOLR-2673 for the Solr test failures. ",
            "author": "Uwe Schindler",
            "id": "comment-13070153"
        },
        {
            "date": "2011-07-25T16:44:48+0000",
            "content": "The bug is now visible at http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7070134\n\nIf anyone has a few minutes, it would be cool if they voted on it (the oracle site is horrendously slow, and i know thats discouraging).\n\nI think there will be a lot of confusion if java 7 is released with this bug, for instance simple things like the solr example will not really work at all.\nyou don't need some crazy random test to trigger this, once this method passes the compile threshold, (e.g. 10k invocations) then boom. ",
            "author": "Robert Muir",
            "id": "comment-13070603"
        },
        {
            "date": "2011-07-25T17:06:44+0000",
            "content": "fyi: I asked the gods of jit on hotspot-dev mailing list what's the cause of this. ",
            "author": "Dawid Weiss",
            "id": "comment-13070615"
        },
        {
            "date": "2011-07-25T18:20:59+0000",
            "content": "Thread: http://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2011-July/005962.html\n\nSuggested workarround: -XX:-UseLoopPredicate ",
            "author": "Hoss Man",
            "id": "comment-13070661"
        },
        {
            "date": "2011-07-26T13:05:02+0000",
            "content": "Hi,\nwe had some success with direct communication to the hotspot developers.\n\nThe whole story:\n\n\tJava 7 contains a fix to the readVInt issue since 1.6.0_21 (approx, LUCENE-2975), this fix was fortunately not included in 1.6.0_26\n\tThis fix causes the SIGSEGV on Porter code, but also breaks other loops (e.g. a strange CheckIndex failure in org.apache.lucene.facet.search.SamplingWrapperTest)\n\tWe had contact to the hotspot-compiler-dev list and Vladimir sent me the patches, that should fix the bug. The attached patch is a combination of all patches received, in a format suitable for the FreeBSD ports build framework. Place the file in your port's \"files/\" folder and rebuild the package. In Debian/Ubuntu you should be able to do the same thing by placing the file in the debian/patches folder somehow.\n\tI have now disabled all jenkins builds and queued the Java 7 builds for 3.x and trunk quarter-hourly. The machine now stress tests.\n\tWe will report the resuls back to Oracle, but it seems that the attached patch fixes the issues.\n\n\n\nIf they would have added their original broken fix to the 1.6.0_26 release it would have been catastrophic... ",
            "author": "Uwe Schindler",
            "id": "comment-13071077"
        },
        {
            "date": "2011-07-26T13:14:14+0000",
            "content": "Patch again, without Apache License ",
            "author": "Uwe Schindler",
            "id": "comment-13071080"
        },
        {
            "date": "2011-07-26T20:02:29+0000",
            "content": "Response from the Hotspot mailing list about their release plans:\n\n\nThank you, Uwe\n\nI will send the patch for reviews shortly.\n\nAbout java 7 release. We are late to do any bugs fixes in GA which should happen soon. All loop optimization fixes will go definitely into jdk7 update 2. We will try to push them into update 1 (which is targeted only for security fixes) but we can't promise.\n\nThere is going discussion about using current Hotspot VM in future jdk6 updates but there is no decision yet. Note: current Hotspot VM sources are targeted for\nJDK8 and jdk7 updates only.\n\nRegards,\nVladimir\n\nThis means, Java 7 will come out with heavy broken loops (so almost for any for or while loop you cannot make sure that it is still working correct when executed 10thousand times.\n\nWhat do others mean. Should we place a warning on the \"Download\" and \"News\" page on Solr and Lucene website? The risk is high that you corrupt your index, if you index using these JDK versions. Also the default configuration of Solr will SIGSEGV.\nWe should also inform the user mailing lists.\n\nI can prepare something and we can discuss? Oracle JDK 1.7.0 GA will be released on July 28th, according to Oracle's press releases. At least on that day we should have something available to present to the users. ",
            "author": "Uwe Schindler",
            "id": "comment-13071324"
        },
        {
            "date": "2011-07-26T20:08:14+0000",
            "content": "Link to the message: http://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2011-July/005971.html ",
            "author": "Uwe Schindler",
            "id": "comment-13071326"
        },
        {
            "date": "2011-07-26T20:44:02+0000",
            "content": "Here the final patch for OpenJDK including Porter.java as testcase:\n\n\n\thttp://cr.openjdk.java.net/~kvn/7070134/webrev/7070134.patch (see also http://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2011-July/005972.html, http://cr.openjdk.java.net/~kvn/7070134/webrev/)\n\n\n\nFor the full bugfix, also the following fixes are needed:\n\n\n\thttp://cr.openjdk.java.net/~kvn/7044738/webrev/7044738.patch\n\thttp://cr.openjdk.java.net/~kvn/7068051/webrev/7068051.patch\n\n\n\nAll three were applied to Jenkins' OpenJDK7 (excluding the testcases). ",
            "author": "Uwe Schindler",
            "id": "comment-13071348"
        },
        {
            "date": "2011-07-27T02:50:30+0000",
            "content": "\nShould we place a warning on the \"Download\" and \"News\" page on Solr and Lucene website? The risk is high that you corrupt your index, if you index using these JDK versions.\n\nNot totally sure, the issue is not so different from LUCENE-2975: if we can we make a easy workaround I think (there are 2 possible ones on this issue for the Porter bug), we give it our best try, and we get it out in a release. this way if someone has to support jdk 7, we can at least say, upgrade to this version of lucene rather than \"won't fix\". No matter how much we scream, users will be confused because it seems these bugs only affect loops of a very specific form.\n\nOn the other hand if it makes our code messy or confusing or slows things down, we should not do this.\n\nI will look into this new negative vint bug, it might only affect pulsing, and see if i can make a test case+workaround for it. ",
            "author": "Robert Muir",
            "id": "comment-13071494"
        },
        {
            "date": "2011-07-27T05:33:06+0000",
            "content": "Frankly i'm amazed that the jdk7 guys are saying \"yes this is a bug that can cause a sigsegv in code that worked fine using Java 1.6, but we're going to go ahead and release 1.7 with this bug in place anyway, it should make it in by 1.7_u2\"\n\nmakes me scared shitless of what other known bugs will be in Java 1.7.0.\n\nEven if we found a work around for all the affected issues in Lucene that didn't hurt performance in older JVMs, and spun up a 3.3.1 RC in the next 5 minutes, we still don't have enough time to vote for that release and get it out to the mirrors by the time Java 7 comes out \u2013 let alone have any confidence that all our users will upgrade Lucene/Solr before they upgrade their JVM.\n\nI think the most important thing we can do is publicize the shit out of this hotspot bug, and warn everybody on the fucking planet not to use Java1.7.0 because of it.\n\nif we also find clean workarounds we can commit and release in our own code, so be it \u2013 but that seems like priority #2 ",
            "author": "Hoss Man",
            "id": "comment-13071519"
        },
        {
            "date": "2011-07-27T05:34:17+0000",
            "content": "I just wrote a test (Test10KPulsings) designed to seek out the corrupt index bug.\n\nit didnt work, but it separately sometimes creates a corrupt index with java6 \n\nAdding         lucene/src/test/org/apache/lucene/index/codecs/pulsing\nAdding         lucene/src/test/org/apache/lucene/index/codecs/pulsing/Test10KPulsings.java\nTransmitting file data .\nCommitted revision 1151335. ",
            "author": "Robert Muir",
            "id": "comment-13071520"
        },
        {
            "date": "2011-07-27T06:36:20+0000",
            "content": "\nEven if we found a work around for all the affected issues in Lucene that didn't hurt performance in older JVMs, and spun up a 3.3.1 RC in the next 5 minutes, we still don't have enough time to vote for that release and get it out to the mirrors by the time Java 7 comes out \u2013 let alone have any confidence that all our users will upgrade Lucene/Solr before they upgrade their JVM.\n\nI agree, I'm not implying we should rush anything. But I guess I'm saying its worth it to understand the scope of what's affected, because if its just:\n\n\tPorterStemmer jrecrash <- workarounds already posted here\n\tPulsing negative readVint <-- no workaround yet.\n\n\n\nwell, thats manageable, only one of these affects any released code. ",
            "author": "Robert Muir",
            "id": "comment-13071555"
        },
        {
            "date": "2011-07-27T06:54:55+0000",
            "content": "@Hoss Yeah, it's scary, isn't it? But then: there is no piece of software that is 100% bug free and anybody running a production server will be running migration tests first before running on a new infrastructure. Hey, that's also part of the reason we still have folks running 1.5 \n\nI think I'm for releasing 1.7 and getting the road paved for bugfix releases rather than delaying it indefinitely... I mean: it'll be motivational for Oracle if people start screaming! ",
            "author": "Dawid Weiss",
            "id": "comment-13071562"
        },
        {
            "date": "2011-07-27T07:02:15+0000",
            "content": "I got new information from Vladimir about the Porter bug in Java 1.6: \"The code in memnode.cpp was there for long time (before 6u26). But before my changes it was guarded by OptimizeStringConcat flag. So if you use -XX:+OptimizeStringConcat or -XX:+AggressiveOpts  flags you will hit the same problem (I reproduced it even with 1.6.0_23)\"\n\nThis might be the reason behind http://www.lucidimagination.com/search/document/3beaa082c4d2fdd4/porterstemfilter_kills_jvm, but we never got a response. If he used aggressive opts he has the same problem. ",
            "author": "Uwe Schindler",
            "id": "comment-13071567"
        },
        {
            "date": "2011-07-27T07:20:21+0000",
            "content": "I verified the above:\n\nmodules\\analysis\\common>ant test -Dargs=\"-XX:+OptimizeStringConcat\" -Dtestcase=TestPorterStemFilter -Dtests.iter=100\n\nmodules\\analysis\\common>ant test -Dargs=\"-XX:+AggressiveOpts\" -Dtestcase=TestPorterStemFilter -Dtests.iter=100\n\n\n\nBoth crash with the same error:\n\n\nTestsuite: org.apache.lucene.analysis.en.TestPorterStemFilter\n#\n# A fatal error has been detected by the Java Runtime Environment:\n#\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00000000022171e9, pid=8816, tid=10952\n#\n# JRE version: 6.0_24-b07\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (19.1-b02 mixed mode windows-amd64 compressed oops)\n# Problematic frame:\n# J  org.apache.lucene.analysis.en.PorterStemmer.stem(I)Z\n#\n# An error report file with more information is saved as:\n# C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\modules\\analysis\\build\\common\\test\\1\\hs_err_pid8816.log\n#\n# If you would like to submit a bug report, please visit:\n#   http://java.sun.com/webapps/bugreport/crash.jsp\n#\nTest org.apache.lucene.analysis.en.TestPorterStemFilter FAILED (crashed)\n\n\n\nThis may explain Bernd Fehlings problems, as Solr users often use strange JVM options because they want to get all speed out of their system (because solr is slower than native Lucene code...). ",
            "author": "Uwe Schindler",
            "id": "comment-13071575"
        },
        {
            "date": "2011-07-27T09:06:09+0000",
            "content": "I opened a separate issue for the checkindex problem: LUCENE-3346\n\nit only affects pulsing, and only unreleased trunk. ",
            "author": "Robert Muir",
            "id": "comment-13071610"
        },
        {
            "date": "2011-07-29T11:51:48+0000",
            "content": "> I got new information from Vladimir about the Porter bug in Java 1.6: \"The code in memnode.cpp was there \n> for long time (before 6u26). But before my changes it was guarded by OptimizeStringConcat flag. So if you\n> use -XX:+OptimizeStringConcat or -XX:+AggressiveOpts flags you will hit the same problem (I reproduced it\n> even with 1.6.0_23)\"\n> \n> This might be the reason behind http://www.lucidimagination.com/search/document/3beaa082c4d2fdd4/porterstemfilter_kills_jvm, \n> but we never got a response. If he used aggressive opts he has the same problem.\n\n@Uwe, sorry for not answering that one or creating an issue as Robert said, but while switching from FAST Search to Lucene/Solr I had (and still have) several problems to solve. One was the UTF-8 jetty problem, then this PorterStemFilter came up and right after that Solr/Lucene crashes with OOM due to FieldCache problems. And there is still my plan to get FST for synonyms running. Dang, my day only has 24 hours.\nYes, I used -XX:+AggressiveOpts and as we know now thats the cause why JVM chrashed.\njava version \"1.6.0_22\"\nJava(TM) SE Runtime Environment (build 1.6.0_22-b04)\nJava HotSpot(TM) 64-Bit Server VM (build 17.1-b03, mixed mode)\nAfter the crashes with PorterStemFilter I removed AggressiveOpts from my JAVA_OPTS.\nNow I'm watching what Lucenes FieldCache is doing and if its still doubling its size until OOM.\nSo I'm deep inside \n\nWell interesting idea to know that if I had filed an issue and that that one had been traced down a month ago that this might have been prevented a buggy release of java 1.7  ",
            "author": "Bernd Fehling",
            "id": "comment-13072783"
        },
        {
            "date": "2011-08-01T22:06:07+0000",
            "content": "The SIGSEGV bug was already reported on the Elastic Search mailing list in January: http://elasticsearch-users.115913.n3.nabble.com/Java-6u23-and-ES-0-14-2-crashing-on-signal-6-SIGABT-td2289578.html\n\nIt would have been nice, if Shay Bannon contacted us! ",
            "author": "Uwe Schindler",
            "id": "comment-13073818"
        },
        {
            "date": "2011-08-02T05:55:15+0000",
            "content": "@Uwe I actually forgot about this, and did not think it was because of the porter stemmer at the time, especially since I did try and reproduce it and never managed to (I thought it was coincidence it crashed there). From my experience, you get very little help from sun/oracle when using unorthodox flags like agressive opts without proper recreation. Well, you get very little help there even when you do produce recreation... (see this issue that I opened for example: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7066129) . I am the reason behind Lucene 1.9.1 release with the major bug in buffering introduced in 1.9 way back in the days, do you really think I would not contact if I thought there really was a problem associated with Lucene? ",
            "author": "Shay Banon",
            "id": "comment-13076053"
        },
        {
            "date": "2011-08-02T09:48:25+0000",
            "content": "Uwe has an Italian temper  Btw. I really like the recent Yoda-discussion on concurrency-interest, Shay... ",
            "author": "Dawid Weiss",
            "id": "comment-13076114"
        },
        {
            "date": "2011-08-02T11:09:51+0000",
            "content": "@Shay: Sorry I did not want to be too italian  I just wanted to ensure that such configurations, leading to bugs in JVMs, would be reported to us. It would help us to also respond quicker on such bug reports, like the one we already got 2 months ago (which nobody was able to reproduce, as we did not know that the user used aggressive opts). ",
            "author": "Uwe Schindler",
            "id": "comment-13076132"
        },
        {
            "date": "2011-08-02T12:17:24+0000",
            "content": "I don't think there is any sense in this, who cares?\n\nWe reported this crash to Oracle in plenty of time, and the worse wrong-results bug has been open since May 13: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7044738, but Oracle decided not to fix that, too. ",
            "author": "Robert Muir",
            "id": "comment-13076156"
        },
        {
            "date": "2011-10-31T02:14:05+0000",
            "content": "The Java 7u1 release notes report that this issue is fixed in that release:\n\n\nJIT and Loop Bugs\n\nThree bugs reported by various parties, including Apache Lucene developers, have been fixed in JDK 7 Update 1, in addition to a fourth related bug found by Oracle (7070134, 7068051, 7044738, 7077439).\n\nI haven't yet been able to verify this. ",
            "author": "Matt Ryall",
            "id": "comment-13139863"
        },
        {
            "date": "2011-10-31T07:26:44+0000",
            "content": "See LUCENE-3537 and also the Lucene/Solr web homepage.\n\nA complete report is here:\n\n\tMain article\n\tExplanation of the string concat issues, this explains why StringConcat optimizations trigger this\n\tDiscussion about the update release\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13139980"
        },
        {
            "date": "2011-12-15T14:04:42+0000",
            "content": "Seems like finally done in 7u2:\nhttp://www.oracle.com/technetwork/java/javase/2col/7u2bugfixes-1394661.html ",
            "author": "Krystian Nowak",
            "id": "comment-13170210"
        }
    ]
}