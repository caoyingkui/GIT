{
    "id": "SOLR-11601",
    "title": "geodist fails for some fields when field is in parenthesis instead of sfield param",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "spatial"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "6.6",
        "resolution": "Unresolved",
        "status": "Patch Available"
    },
    "description": "Im switching my schemas from derprecated solr.LatLonType to solr.LatLonPointSpatialField.\n\nNow my sortquery (which used to work with solr.LatLonType):\n\nsort=geodist(b4_location__geo_si,47.36667,8.55) asc\n\nraises the error\n\n\"sort param could not be parsed as a query, and is not a field that exists in the index: geodist(b4_location__geo_si,47.36667,8.55)\"\n\nInvoking sort using syntax \n\nsfield=b4_location__geo_si&pt=47.36667,8.55&sort=geodist() asc\n\nworks as expected though...",
    "attachments": {
        "SOLR-11601.patch": "https://issues.apache.org/jira/secure/attachment/12914920/SOLR-11601.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-16T19:58:26+0000",
            "content": "Hi Clemens,\n\nIt doesn't fails it is intended behavior. I replicated your scenario on my system and it threw this stack trace:\n\n\nCaused by: org.apache.solr.common.SolrException: A ValueSource isn't directly available from this field. Instead try a query using the distance as the score.\n\tat org.apache.solr.schema.AbstractSpatialFieldType.getValueSource(AbstractSpatialFieldType.java:334)\n\tat org.apache.solr.search.FunctionQParser.parseValueSource(FunctionQParser.java:384)\n\tat org.apache.solr.search.FunctionQParser.parseValueSourceList(FunctionQParser.java:227)\n\tat org.apache.solr.search.function.distance.GeoDistValueSourceParser.parse(GeoDistValueSourceParser.java:54)\n\tat org.apache.solr.search.FunctionQParser.parseValueSource(FunctionQParser.java:370)\n\tat org.apache.solr.search.FunctionQParser.parse(FunctionQParser.java:82)\n\tat org.apache.solr.search.QParser.getQuery(QParser.java:168)\n\tat org.apache.solr.search.SortSpecParsing.parseSortSpecImpl(SortSpecParsing.java:120)\n\t... 37 more\n\n\n\nWhen I looked at: \tat org.apache.solr.schema.AbstractSpatialFieldType.getValueSource(AbstractSpatialFieldType.java:334)\n\n\n  @Override\n  public ValueSource getValueSource(SchemaField field, QParser parser) {\n    //This is different from Solr 3 LatLonType's approach which uses the MultiValueSource concept to directly expose\n    // the x & y pair of FieldCache value sources.\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n        \"A ValueSource isn't directly available from this field. Instead try a query using the distance as the score.\");\n  }\n\n\n\nThis function only implements this particular use-case and throws that particular exception.\n\nYou should keep using sfield=b4_location__geo_si&pt=47.36667,8.55&sort=geodist() asc as it is neat too, as comparison to geodist(...,...,...). ",
            "author": "Amrit Sarkar",
            "id": "comment-16255877"
        },
        {
            "date": "2017-11-22T09:25:21+0000",
            "content": "I am using solrClient and with LatLonType could coveniently use \n\nSolrQuery#addSort(String field, ORDER order)\n\nE.g:\n\nsolrQuery.addSort( 'geodist(b4_location__geo_si,47.36667,8.55)', 'asc' )\n\n\nWhat is the best way to apply \n\nsfield=b4_location__geo_si&pt=47.36667,8.55&sort=geodist() asc\n\n to the SolrQuery ",
            "author": "Clemens Wyss",
            "id": "comment-16262201"
        },
        {
            "date": "2017-11-22T13:06:34+0000",
            "content": "I am using SolrJ 6.6:\n\nHow about this:\n\n        query.set(\"sfield\",\"b4_location_geo_si\");\n        query.set(\"pt\",\"47.36667,8.55\");\n        query.setSort( \"geodist()\", SolrQuery.ORDER.asc);\n\n\n\nI don't any other way, to be honest. ",
            "author": "Amrit Sarkar",
            "id": "comment-16262493"
        },
        {
            "date": "2017-11-24T11:14:43+0000",
            "content": "thx! \nI guess we can close this issue -> feature-not-a-bug  ",
            "author": "Clemens Wyss",
            "id": "comment-16265170"
        },
        {
            "date": "2017-11-29T04:58:17+0000",
            "content": "I edited this issue to be an \"Improvement\" of priority \"minor\", and adjusted the title.  We could improve the error message further to note that geodist() does not support most spatial fields when their names are listed in its arguments (requires sfield param instead).  Or perhaps improve GeoDistValueSourceParser to actually support this.  Unfortunately it's a bit tricky based on it's use of fp.parseValueSourceList() which will ask field references for their value sources, leading to an exception here.  Perhaps it could manually parse the first and insist the use of a spatial field be in this position.  But it'd be awkward to support it in the 3rd position which is possible with a couple older spatial fields.\n\nnote: you don't need to use \"pt\" if you'd rather keep the latitude,longitude order points within geodist().  It's up to you. ",
            "author": "David Smiley",
            "id": "comment-16270138"
        },
        {
            "date": "2018-01-10T16:32:26+0000",
            "content": "David Smiley, Sorry I missed your update. I would like to get your consensus on should we go after supporting spatial field in geodist() or just improving the error message is sufficient for now. I can work on either. ",
            "author": "Amrit Sarkar",
            "id": "comment-16320555"
        },
        {
            "date": "2018-01-10T22:06:10+0000",
            "content": "Really either.  I'd be happy to review but I don't have time.  \n\nIf you improve the error message the user sees, then this would probably involve the addition of a new try-catch where GeoDistValueSourceParser calls fp.parseValueSourceList to detect this situation and then advice specifically on what to do. ",
            "author": "David Smiley",
            "id": "comment-16321200"
        },
        {
            "date": "2018-03-16T20:03:35+0000",
            "content": "Thanks David, added improved error in patch and uploaded. Need to write tests still.  ",
            "author": "Amrit Sarkar",
            "id": "comment-16402417"
        },
        {
            "date": "2018-03-16T21:27:35+0000",
            "content": "Tests attached. The actual error: \n\"sort param could not be parsed as a query, and is not a field that exists in the index: geodist(b4_location__geo_si,47.36667,8.55)\" \n\nis coming from SortSpecParsing and I would not like to make any changes there as other components are dependent. Tests validates the same error being received and solr logs will point out what needs to be done.\n\nDavid Smiley really appreciate if you review. ",
            "author": "Amrit Sarkar",
            "id": "comment-16402558"
        },
        {
            "date": "2018-03-21T06:39:13+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 29s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 15s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 15s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 15s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 15s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 15s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  25m  1s \n  core in the patch failed.  \n\n\n  \n   \n  30m  8s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11601 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12914932/SOLR-11601.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / d2ef38d \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_144 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/8/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/8/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/8/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16407520"
        },
        {
            "date": "2018-03-21T14:53:54+0000",
            "content": "BTW Steve Rowe Thanks for working on patch validation   Some work to do still: \"core in the patch failed.\" is confusing and has a typo. \u00a0Core->code. \u00a0Even then, the failing test here is not\u00a0one modified by this patch;\u00a0it's some other test.  \n\nAmrit Sarkar please update the test to use assertQEx or if you prefer some similar test infrastructure facility for testing exceptions ",
            "author": "David Smiley",
            "id": "comment-16408038"
        },
        {
            "date": "2018-03-21T15:18:20+0000",
            "content": "BTW Steve Rowe Thanks for working on patch validation  Some work to do still: \"core in the patch failed.\" is confusing and has a typo.  Core->code.\n\nThis is not a typo: \"core\" is the (short) name of the module.  Unfortunately Yetus reduces module paths like (solr/core, lucene/analysis/icu) to (core, icu).\n\nEven then, the failing test here is not one modified by this patch; it's some other test.\n\nAgreed, though fortunately this is getting better as the project makes inroads on reducing test flakiness. ",
            "author": "Steve Rowe",
            "id": "comment-16408073"
        },
        {
            "date": "2018-03-21T16:15:26+0000",
            "content": "David Smiley, thank you for your feedback, always. I see. Now I think I may have written number of tests using that flawed technique when assertQEx being available , thank you for pointing that, will take care in future.\n\nUpdated tests, please note: the error which still gets emitted is:\n\"sort param could not be parsed as a query, and is not a field that exists in the index: geodist(b4_location__geo_si,47.36667,8.55)\"\nand solr logs will point to the actual problem. ",
            "author": "Amrit Sarkar",
            "id": "comment-16408160"
        },
        {
            "date": "2018-03-22T06:22:00+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 24s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 24s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 24s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 24s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 24s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 24s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  49m 38s \n  core in the patch failed.  \n\n\n  \n   \n  54m 54s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.update.processor.AtomicUpdateProcessorFactoryTest \n\n\n\u00a0\n solr.handler.admin.AutoscalingHistoryHandlerTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11601 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12915515/SOLR-11601.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 2c4b78c \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_144 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/9/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/9/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/9/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16409114"
        }
    ]
}