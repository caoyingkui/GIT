{
    "id": "LUCENE-5842",
    "title": "Validate checksum footers for postings lists, docvalues, storedfields, termvectors on init",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ]
    },
    "description": "For small files (e.g. where we read in all the bytes anyway), we currently validate the checksum on reader init. \n\nBut for larger files like .doc/.frq/.pos/.dvd/.fdt/.tvd we currently do nothing at all on init, as it would be too expensive.\n\nWe should at least do this:\n\n// NOTE: data file is too costly to verify checksum against all the bytes on \n// open, but for now we at least verify proper structure of the checksum \n// footer: which looks for FOOTER_MAGIC + algorithmID. This is cheap \n// and can detect some forms of corruption such as file truncation.\nCodecUtil.retrieveChecksum(data);",
    "attachments": {
        "LUCENE-5842.patch": "https://issues.apache.org/jira/secure/attachment/12657344/LUCENE-5842.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14071642",
            "author": "Adrien Grand",
            "content": "+1 ",
            "date": "2014-07-23T12:05:34+0000"
        },
        {
            "id": "comment-14071680",
            "author": "Michael McCandless",
            "content": "+1 ",
            "date": "2014-07-23T13:01:11+0000"
        },
        {
            "id": "comment-14071682",
            "author": "Adrien Grand",
            "content": "+1 to the patch ",
            "date": "2014-07-23T13:03:17+0000"
        },
        {
            "id": "comment-14071686",
            "author": "Robert Muir",
            "content": "By the way, as a followup, we can do even better and iterate a bit more:\n\nToday each file by itself can be 'correct' but you still have a corrupt index because the files are mismatched somehow (network replication, or some other bug).\n\nit might be worth thinking about reviving segmentinfo.attributes (thats cleanest i think), or put in files map directly (would be harder as it enforces files have checksums). We could store each files checksum there, and when we retrieve it here, validate against that attribute. This would detect mismatching. \n\nIdeally though we'd do this for the commit too (for deletes and dv updates). \n\nAnyway just something to explore on another issue if we can do it without creating a mess. I don't like how we cant detect such mismatching today (except via very rudimentary checks like livedocs.length = maxdoc etc). ",
            "date": "2014-07-23T13:06:43+0000"
        },
        {
            "id": "comment-14071695",
            "author": "Robert Muir",
            "content": "Updated patch, i missed to do the check before for the IDPostingsFormat terms dict in sandbox/ ",
            "date": "2014-07-23T13:16:28+0000"
        },
        {
            "id": "comment-14071813",
            "author": "ASF subversion and git services",
            "content": "Commit 1612845 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1612845 ]\n\nLUCENE-5842: Validate checksum footers for postings lists/docvalues/storedfields/vectors on init ",
            "date": "2014-07-23T14:56:55+0000"
        },
        {
            "id": "comment-14071862",
            "author": "ASF subversion and git services",
            "content": "Commit 1612852 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1612852 ]\n\nLUCENE-5842: Validate checksum footers for postings lists/docvalues/storedfields/vectors on init ",
            "date": "2014-07-23T15:31:04+0000"
        }
    ]
}