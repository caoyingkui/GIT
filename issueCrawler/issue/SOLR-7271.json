{
    "id": "SOLR-7271",
    "title": "4.4 client to 4.5+ server compatibility Issue due to DocRouter format",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "4.10.5"
        ],
        "affect_versions": "4.5",
        "status": "Resolved",
        "resolution": "Won't Fix",
        "priority": "Major"
    },
    "description": "SOLR-4221 changed the router format from e.g.:\n\n...\n\"router\":\"compositeId\u201d,\n...\n\n\nto:\n\n...\n\"router\":{\"name\":\"compositeId\"},\n...\n\n\n\nThis later commit: https://github.com/apache/lucene-solr/commit/54a94eedfd5651bb088e8cbd132393b771f5f5c2 added backwards compatibility in the sense that the server can read the old router format.   But the old 4.4 client can't read the new format, e.g. you get:\n\norg.apache.solr.common.SolrException: Unknown document router '{name=compositeId}'\n\tat org.apache.solr.common.cloud.DocRouter.getDocRouter(DocRouter.java:46)\n\tat org.apache.solr.common.cloud.ClusterState.collectionFromObjects(ClusterState.java:289)\n\tat org.apache.solr.common.cloud.ClusterState.load(ClusterState.java:257)\n\tat org.apache.solr.common.cloud.ClusterState.load(ClusterState.java:233)\n\tat org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate(ZkStateReader.java:357)\n\tat com.cloudera.itest.search.util.ZkExecutor.<init>(ZkExecutor.java:39)\n\tat com.cloudera.itest.search.util.SearchTestBase.getZkExecutor(SearchTestBase.java:648)\n\tat com.cloudera.itest.search.util.SearchTestBase.setupSolrURL(SearchTestBase.java:584)\n\tat com.cloudera.itest.search.util.SearchTestBase.setupEnvironment(SearchTestBase.java:371)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)",
    "attachments": {
        "SOLR-7271.patch": "https://issues.apache.org/jira/secure/attachment/12705501/SOLR-7271.patch",
        "SOLR-7271ClusterState.patch": "https://issues.apache.org/jira/secure/attachment/12708226/SOLR-7271ClusterState.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-19T02:57:49+0000",
            "author": "Gregory Chanan",
            "content": "Here's a patch that writes out two fields in the clusterstate:\n\n\t#1 the new format\n\t#2 the old format if possible (otherwise the new format \u2013 in which case the old client will throw the above exception b/c of the format change, but that seems okay because a new feature is being used).\n\n\n\nBy default #1 is \"router\" and #2 is \"routerOld\" so there is no behavior change by applying this patch, besides writing out some additional info.  If upgrading from a Solr-4.4 cluster, you can set system properties to rename these to e.g.\n#1 \"routerSpec\" and #2 \"router\" so that old clients can read the old format and new clients can read the new format.  I've tested this on a cluster with 4.4 clients and haven't experienced any issues.\n\nI'm undecided if this should be committed since the class of users upgrading from 4.4 to 4.10.5 is probably pretty small, but I thought I'd at least put this up here for completeness (we are using this at Cloudera because we have versions of the software that support upgrading from 4.4 to 4.10).  I'm open to hear opinions on committing this vs not. ",
            "id": "comment-14368419"
        },
        {
            "date": "2015-03-19T03:39:00+0000",
            "author": "Shawn Heisey",
            "content": "My own experience and view is that SolrCloud has been changing so fast that it's surprising you can get ANY different client/server versions to work properly together, and if the client is older than the server, it might be impossible.\n\nAt this point I don't think we should worry about committing anything like this to an old 4.x branch, but for users who may be stuck in a situation where they cannot upgrade, it's awesome to have this issue to describe the problem and a patch that will allow them to stay functional until they can upgrade. ",
            "id": "comment-14368451"
        },
        {
            "date": "2015-03-30T20:19:04+0000",
            "author": "Gregory Chanan",
            "content": "My own experience and view is that SolrCloud has been changing so fast that it's surprising you can get ANY different client/server versions to work properly together, and if the client is older than the server, it might be impossible.\n\nWell, looks like I found another issue .  Going to upload another patch.\n\nAt this point I don't think we should worry about committing anything like this to an old 4.x branch, but for users who may be stuck in a situation where they cannot upgrade, it's awesome to have this issue to describe the problem and a patch that will allow them to stay functional until they can upgrade.\n\nSounds reasonable.  I'll mark this as Won't Fix.  Anyone can use the patch here or reopen the jira if they think otherwise. ",
            "id": "comment-14387325"
        }
    ]
}