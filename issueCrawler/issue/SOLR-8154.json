{
    "id": "SOLR-8154",
    "title": "Bulk Schema API incorrectly accepts a dynamic field creation request with required=true and/or a default value",
    "details": {
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3",
        "status": "Resolved",
        "resolution": "Duplicate",
        "priority": "Minor"
    },
    "description": "The schema API refuses to create a dynamic field with required=true, but accepts one that has a default value. This creates a schema that cannot be loaded.",
    "attachments": {
        "SOLR-8154.patch": "https://issues.apache.org/jira/secure/attachment/12766348/SOLR-8154.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-13T15:36:06+0000",
            "author": "Steve Rowe",
            "content": "Patch with tests against both the to-be-deprecated-and-removed REST Schema API and the new bulk Schema API.\n\nThe REST API tests succeed - dynamic field creation calls to the /schema/dynamicfields endpoint fail when given 'required':true or 'default':whatever.\n\nBut the bulk Schema API fails for me under both conditions.  Upayavira, what exactly is the request that properly fails for you when you specify 'required':true?\n\nThe bulk Schema API issue appears to be that the add-dynamic-field command uses SchemaField.create() to create the new dynamic field, rather than ManagedIndexSchema.newDynamicField(), which includes quality checks, including calling IndexSchema.isValidDynamicField(), which tests for required=true and default values.  The patch switches field creation to ManagedIndexSchema.newDynamicField().\n\nThe bulk Schema API add-field command has a similar issue: SchemaField.create() is used rather than ManagedIndexSchema.newField(), which also has quality checks.  The patch switches this call as well.\n\nRunning all Solr tests now. ",
            "id": "comment-14955136"
        },
        {
            "date": "2015-10-13T16:15:32+0000",
            "author": "Steve Rowe",
            "content": "Updated patch, including CHANGES.txt entry, and changing the expected error message in TestBulkSchemaAPI.testMultipleAddFieldWithErrors() which was affected by the add-field command switch from SchemaField.create() -> ManagedIndexSchema.newField().\n\nWith this patch, all Solr tests pass.  I think it's ready. ",
            "id": "comment-14955205"
        },
        {
            "date": "2015-10-13T18:09:22+0000",
            "author": "Upayavira",
            "content": "I was just posting to /solr/$collection/schema to create the dynamic field. Is this what you are calling the bulk API? ",
            "id": "comment-14955383"
        },
        {
            "date": "2015-10-13T18:25:41+0000",
            "author": "Steve Rowe",
            "content": "I was just posting to /solr/$collection/schema to create the dynamic field.\n\nHmm, looks like the behavior is different in cloud mode - the tests I added are in standalone mode.  I'll investigate.\n\nIs this what you are calling the bulk API?\n\nYes.  \"Bulk\" is a reference to the new Schema API's ability to perform multiple commands in a single request, as opposed to the old REST-style API, which only allowed creation of a single resource type at a time (field(s), dynamic field(s), field type(s), or copy field(s)).  More info over on SOLR-6476 and SOLR-6594. ",
            "id": "comment-14955415"
        },
        {
            "date": "2016-10-12T21:16:22+0000",
            "author": "Steve Rowe",
            "content": "The same changes in my latest patch were committed (a year later) under SOLR-9411. ",
            "id": "comment-15569897"
        }
    ]
}