{
    "id": "SOLR-8782",
    "title": "Improve SolrJ Collections async API",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.1"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The async collections API is a bit difficult to use at the moment:\n\n\tyou need to create your own async ID and add it to the request\n\tyou then need to create a different request and poll to find out when you get a response\n\tthe implementation requires some complex generics just to allow a chained .setAsync() method\n\n\n\nI think we can improve this.",
    "attachments": {
        "SOLR-8782.patch": "https://issues.apache.org/jira/secure/attachment/12791142/SOLR-8782.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-03T10:15:14+0000",
            "author": "Alan Woodward",
            "content": "Patch with a suggested implementation.\n\n\n\tinstead of .setAsync(), we add a processAsync() method, that returns a generated async id (you can optionally pass in your own if you have pre-generated ids for somer reason)\n\twe also add a processAndWait() method that handles polling for completion or failure states\n\n\n\nThis patch applies on top of the patch for SOLR-8765.  It needs javadocs, but all tests are passing, and you can see how much simpler the API is from the test changes - lots of lines removed. ",
            "id": "comment-15177608"
        },
        {
            "date": "2016-03-03T10:39:22+0000",
            "author": "Varun Thacker",
            "content": "Hi Alan,\n\n+1 for this change. Seems like a good usability improvement.\n\nJust thinking aloud, would processAsyncAndWait be a better name for processAndWait ? Maybe adding Javadocs and keeping it processAndWait is good enough? ",
            "id": "comment-15177645"
        },
        {
            "date": "2016-03-07T15:16:14+0000",
            "author": "Alan Woodward",
            "content": "SOLR-8765 has missed the 6.0 cutoff, so here's an updated patch for 6.1.  Includes javadocs this time.  I've also moved CollectionsAPIAsyncDistributedZkTest.java to extend SolrCloudTestBase, which has sped it up by 20s. ",
            "id": "comment-15183122"
        },
        {
            "date": "2016-03-08T10:54:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5b7be9d16abf72052910a63e6d79debd8af5a7c1 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5b7be9d ]\n\nSOLR-8782: Improve async collections API ",
            "id": "comment-15184768"
        },
        {
            "date": "2016-03-08T10:54:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 406a1635c11919cbd167eb5ea87461472dbc8d53 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=406a163 ]\n\nMerge branch 'SOLR-8782' ",
            "id": "comment-15184769"
        },
        {
            "date": "2016-03-08T11:07:52+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 761618727d7604b09ec4ecc68d65689c888311f1 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7616187 ]\n\nSOLR-8782: Improve async collections API ",
            "id": "comment-15184792"
        },
        {
            "date": "2016-03-08T11:08:23+0000",
            "author": "Alan Woodward",
            "content": "Thanks for the review Varun! ",
            "id": "comment-15184793"
        },
        {
            "date": "2016-03-17T17:39:54+0000",
            "author": "David Smiley",
            "content": "I see that setAsyncId is deprecated, yet it is also abstract and most (all?) of the implementations have an identical (and obvious) implementation.  What is the wisdom in that?  I'd prefer to see it not abstract. ",
            "id": "comment-15200005"
        },
        {
            "date": "2016-03-17T22:06:37+0000",
            "author": "Alan Woodward",
            "content": "Yes, it's a bit of a pain.  It's because the return type of all the .setAsyncId methods are different.  In trunk, once .setAsyncId is removed and all async calls are made via processAndWait(), we can move the identical methods into the Async base class.  For now they're left as abstract to ensure that they get implemented properly. ",
            "id": "comment-15200482"
        },
        {
            "date": "2016-03-29T14:22:07+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I'm curious if you explored just returning a Future instead of implementing processAndWait methods? ",
            "id": "comment-15216074"
        },
        {
            "date": "2016-04-19T16:43:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7be7e8beb965714dd1fb1b85f711e9c8a882d088 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7be7e8b ]\n\nCHANGES.txt corrections - new features go in the New Features section (SOLR-8782, SOLR-8765, SOLR-8842) ",
            "id": "comment-15248141"
        },
        {
            "date": "2016-04-19T16:44:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 423ec098504836ccd9b6e742a5b93c7b40cb0aa3 in lucene-solr's branch refs/heads/master from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=423ec09 ]\n\nCHANGES.txt corrections - new features go in the New Features section (SOLR-8782, SOLR-8765, SOLR-8842) ",
            "id": "comment-15248145"
        },
        {
            "date": "2016-05-20T11:11:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5856dcf5082b2016f94c63cf697fa9f5a44ab303 in lucene-solr's branch refs/heads/branch_6_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5856dcf ]\n\nSOLR-8983: backport to branch_6_0 the required new cloud-minimal configset, originally committed on branch_6x under SOLR-8782 ",
            "id": "comment-15293193"
        }
    ]
}