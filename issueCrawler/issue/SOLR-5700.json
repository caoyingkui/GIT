{
    "id": "SOLR-5700",
    "title": "Improve error handling of remote queries (proxied requests)",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The current remoteQuery code in SolrDispatchFilter yields error messages like the following:\n\norg.apache.solr.servlet.SolrDispatchFilter: null:org.apache.solr.common.SolrException: Error trying to proxy request for url: http://localhost:8983/solr/myCollection/update\n\tat org.apache.solr.servlet.SolrDispatchFilter.remoteQuery(SolrDispatchFilter.java:580)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:288)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:169)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.solr.servlet.ProxyUserFilter.doFilter(ProxyUserFilter.java:241)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.solr.servlet.SolrHadoopAuthenticationFilter$2.doFilter(SolrHadoopAuthenticationFilter.java:140)\n\tat org.apache.hadoop.security.authentication.server.AuthenticationFilter.doFilter(AuthenticationFilter.java:384)\n\tat org.apache.solr.servlet.SolrHadoopAuthenticationFilter.doFilter(SolrHadoopAuthenticationFilter.java:145)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.solr.servlet.HostnameFilter.doFilter(HostnameFilter.java:86)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:861)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:606)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n\tat java.lang.Thread.run(Thread.java:724)\nCaused by: java.io.IOException: Server returned HTTP response code: 401 for URL: http://search-testing-c4-secure-4.ent.cloudera.com:8983/solr/sentryCollection/update?stream.body=%3Cadd%3E%3Cdoc%3E%3Cfield+name%3D%22id%22%3E1383855038349doc1%3C%2Ffield%3E%3Cfield+name%3D%22description%22%3Efirst+test+document+1383855038349%3C%2Ffield%3E%3C%2Fdoc%3E%3C%2Fadd%3E&doAs=user1\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:526)\n\tat sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1674)\n\tat sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1672)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1670)\n\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1243)\n\tat org.apache.solr.servlet.SolrDispatchFilter.remoteQuery(SolrDispatchFilter.java:567)\n\t... 25 more\nCaused by: java.io.IOException: Server returned HTTP response code: 401 for URL: http://localhost:8983/solr/myCollection/update?stream.body=%3Cadd%3E%3Cdoc%3E%3Cfield+name%3D%22id%22%3E1383855038349doc1%3C%2Ffield%3E%3Cfield+name%3D%22description%22%3Efirst+test+document+1383855038349%3C%2Ffield%3E%3C%2Fdoc%3E%3C%2Fadd%3E&doAs=user1\n\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1625)\n\tat java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:468)\n\tat org.apache.solr.servlet.SolrDispatchFilter.remoteQuery(SolrDispatchFilter.java:550)\n\t... 25 more\n\nIn this case, the request handler threw an exception, and all the user got back was an error code, no message.  They would actually have to dig through the logs on the remote machine to the see the error.\n\nI tried for a bit to get the error message with HttpURLConnection, but wasn't successful.  Instead, I used httpclient, like SolrServer uses.  This works, as SolrServer already gives reasonable error messages.\n\nThis approach of using httpclient has another advantage as well: because the httpclient is created via the HttpClientUtil in the same way as the other http clients, any configuration settings are automatically picked up.  For example, I have an HttpClientConfigurer that I wrote to handle kerberos connections; with this approach, the forwarded requests just work with kerberos.  With the old approach, I would have to modify the remoteQuery code to do kerberos-specific things.",
    "attachments": {
        "SOLR-5700v2.patch": "https://issues.apache.org/jira/secure/attachment/12627506/SOLR-5700v2.patch",
        "SOLR-5700.patch": "https://issues.apache.org/jira/secure/attachment/12627261/SOLR-5700.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Gregory Chanan",
            "id": "comment-13892847",
            "date": "2014-02-06T00:44:00+0000",
            "content": "Here's a patch against trunk, as well as a test case that checks that reasonable exceptions are returned. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13893065",
            "date": "2014-02-06T05:36:39+0000",
            "content": "Hmm...I'm running into an issue with BasicDistributedZk2Test#testNodeWithoutCollectionForwarding - consistent fail.\n\nI also think you want to use method.abort for any case the streams won't actually be fully read. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13893093",
            "date": "2014-02-06T06:13:42+0000",
            "content": "Thanks Mark, I'll look into the test failure and method.abort.  I haven't run the tests in a few days. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13893989",
            "date": "2014-02-06T23:41:21+0000",
            "content": "Here's another rev at this patch.\n\nThis fixes the test failure and calls abort if the remote query is not successful. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13894136",
            "date": "2014-02-07T02:43:04+0000",
            "content": "Hmm...I've seen some weird test fails while testing this out. I don't know that its not just bad luck or this patch, so I'll spend some more time later running the tests. Need to see if I see the same things with a clean check out or what. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13894293",
            "date": "2014-02-07T08:17:34+0000",
            "content": "Interesting.  FWIW I put a divide by zero in the remoteQuery code and ran the tests and the following tests failed:\n    org.apache.solr.cloud.AliasIntegrationTest.testDistribSearch\n    org.apache.solr.cloud.BasicDistributedZk2Test.testDistribSearch\n    org.apache.solr.cloud.hdfs.StressHdfsTest.testDistribSearch\n\nSo if you are seeing these tests fail, it could be due to this patch, otherwise probably not. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13895713",
            "date": "2014-02-08T20:08:51+0000",
            "content": "Created a new patch that always consumes the response's HttpEntity and cleaned up the test a little.\n\nAfter applying the patch to the trunk there was only one error that occurred for me:\n\n\n   [junit4] Tests with failures:\n   [junit4]   - org.apache.solr.cloud.OverseerRolesTest.testDistribSearch\n   [junit4] \n   [junit4] \n   [junit4] JVM J0:     2.43 ..   720.78 =   718.34s\n   [junit4] JVM J1:     2.43 ..   720.87 =   718.44s\n   [junit4] JVM J2:     1.94 ..   718.97 =   717.03s\n   [junit4] JVM J3:     2.18 ..   721.04 =   718.86s\n   [junit4] JVM J4:     2.43 ..   720.07 =   717.64s\n   [junit4] JVM J5:     2.43 ..   723.96 =   721.53s\n   [junit4] JVM J6:     2.43 ..   719.30 =   716.88s\n   [junit4] JVM J7:     2.43 ..   730.55 =   728.12s\n   [junit4] Execution time total: 12 minutes 10 seconds\n   [junit4] Tests summary: 369 suites, 1596 tests, 1 error, 26 ignored (13 assumptions)\n\n\n\nI believe the the OverseerRolesTest is a known flakey test associated with SOLR-5476. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895778",
            "date": "2014-02-08T23:56:07+0000",
            "content": "I've had some freaky luck with that patch applied - but I've convinced myself it's some wicked coincidence. I'll commit and if there is indeed some crazy interaction, the jenkins cluster will ferret it out pretty quickly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13895784",
            "date": "2014-02-09T00:31:23+0000",
            "content": "Commit 1566174 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1566174 ]\n\nSOLR-5700: Improve error handling of remote queries (proxied requests). "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895786",
            "date": "2014-02-09T00:47:40+0000",
            "content": "Steve Davids - whoops - didn't see your comment - I was on an old page. Thanks! I'll merge in your work.\n\nOverseerRolesTest is a known flakey test \n\nYeah, we should probably ignore it until something is done. It's failing on jenkins regularly and on my machine over the 50% of the time. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13895787",
            "date": "2014-02-09T00:49:33+0000",
            "content": "Commit 1566176 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1566176 ]\n\nSOLR-5700: Improve error handling of remote queries (proxied requests). "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13895789",
            "date": "2014-02-09T01:07:34+0000",
            "content": "Commit 1566179 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1566179 ]\n\nSOLR-5700: Always consumes the response's HttpEntity and cleaned up the test a little. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13895790",
            "date": "2014-02-09T01:09:18+0000",
            "content": "Commit 1566180 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1566180 ]\n\nSOLR-5700: Always consumes the response's HttpEntity and cleaned up the test a little. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895798",
            "date": "2014-02-09T01:32:21+0000",
            "content": "Thanks guys, much appreciated! "
        }
    ]
}