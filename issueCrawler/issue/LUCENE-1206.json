{
    "id": "LUCENE-1206",
    "title": "Ability to store Reader / InputStream fields",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "In some situations we would like to store the whole text, but the whole text won't always fit in memory so we can't create a String.  Likewise for storing binary, it would sometimes be better if we didn't have to read into a byte[] up-front (even when it doesn't use much memory, it increases the number of copies made and adds burden to GC.)\n\nFieldsWriter currently writes the length at the start of the chunks though, so I don't know whether it would be possible to seek back and write the length after writing the data.\n\nIt would also be useful to use this in conjunction with compression, both for Reader and InputStream types.  And when retrieving the field, it should be possible to create a Reader without reading the entire String into memory up-front.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-02-28T13:03:55+0000",
            "content": "This issue has been inactive for more than 4 years. Please close if it's no longer relevant/needed, or bring it up to date if you intend to work on it. SPRING_CLEANING_2013 ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13589510"
        },
        {
            "date": "2013-03-02T06:49:36+0000",
            "content": "I think this would still be useful. The workaround of using a separate database to store larger text and binary stuff has never really sat with me terribly well. ",
            "author": "Trejkaz",
            "id": "comment-13591331"
        }
    ]
}