{
    "id": "LUCENE-3862",
    "title": "DocValues getInt() returns long, getFloat() returns double",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I think this is a bit confusing: especially for the case of something like norms\nwhere its really an 8 bit byte, a long is confusing.\n\ni think we should have the usual getFloat/getDouble/getInt/getShort/getByte instead?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-11T16:54:36+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13227094"
        },
        {
            "date": "2012-03-11T17:55:54+0000",
            "content": "actually I really don't want this! this increases the complexity. The interface says it can provide Bytes, Integers and Floats independent of their internal encoding or max size. With those methods in place we just gonna cast around which should be done by the user of the API. ",
            "author": "Simon Willnauer",
            "id": "comment-13227117"
        },
        {
            "date": "2012-03-11T18:07:36+0000",
            "content": "Let me try to explain my line of reasoning... i dont know if it will work but...\n\nIts been mentioned before on previous issues that it would be nice if people could have norms impls that arent a huge byte[] or whatever.\nCurrently, all of our provided Similarities will not work if hasArray() is false. So if you want to have an alternative norms data structure,\nperhaps some space tradeoff, or based on something you know about your data, it currently requires you to write a custom Similarity too \n\nI've been curious to test: if the norms impl is really just a byte[], would scoring via the docvalues apis (rather than hasArray) really\nslow things down?\n\nBecause if we just had a getByte(int doc), I think its feasible it would cost nothing over getArray() and byte[doc]... Then people could\nmake alternative implementations without also making custom Similarities.\n\nBut i'm nervous about all the casting of bytes to longs and such, I also feel the api is a little confusing...\n\n\nWith those methods in place we just gonna cast around which should be done by the user of the API.\n\nBut how are we not casting to long now (e.g. single-byte norms case) ? ",
            "author": "Robert Muir",
            "id": "comment-13227121"
        },
        {
            "date": "2012-03-11T18:41:38+0000",
            "content": "I should have been more specific. The reason why I did it that way is that you always have to explicitly downcast if you are sure you are not loosing any precision. If you offer a getShort somebody could accidentally downcast its 64 bit values into a 16 bit values without realizing. However, if it allows us to make similarities generic we need to rething that maybe. \n\nI kind of like the semantics we have right now ie. you get full 64 bit values no matter what you have encoded.\n\n ",
            "author": "Simon Willnauer",
            "id": "comment-13227193"
        },
        {
            "date": "2012-03-11T19:13:46+0000",
            "content": "I already oprened an issue about that! ",
            "author": "Uwe Schindler",
            "id": "comment-13227207"
        },
        {
            "date": "2012-03-11T22:21:59+0000",
            "content": "In looking at replacing FieldCache with DocValues, I came to this same question.  \n\nI also wonder how/if there should be any relationship with the FunctionValues.java class.\n ",
            "author": "Ryan McKinley",
            "id": "comment-13227251"
        }
    ]
}