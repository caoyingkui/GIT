{
    "id": "LUCENE-7699",
    "title": "Apply graph articulation points optimization to phrase graph queries",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "6.5"
        ]
    },
    "description": "Follow-up to LUCENE-7638 that applies the same articulation point logic to graph phrases using span queries.",
    "attachments": {
        "LUCENE-7699.patch": "https://issues.apache.org/jira/secure/attachment/12853650/LUCENE-7699.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15875324",
            "date": "2017-02-21T03:50:08+0000",
            "content": "WIP ",
            "author": "Matt Weber"
        },
        {
            "id": "comment-15875325",
            "date": "2017-02-21T03:50:53+0000",
            "content": "Jim Ferenczi Michael McCandless What do you think? ",
            "author": "Matt Weber"
        },
        {
            "id": "comment-15875705",
            "date": "2017-02-21T09:54:26+0000",
            "content": "It looks good Matt Weber\nIn analyzeGraphPhrase you check getAutoGenerateMultiTermSynonymsPhraseQuery when a side path is built. Is it intended ? I don't understand what the non-quoted query built by createSpanQuery is supposed to represent. \nOn a different note I also wonder if we should keep the specialized GraphQuery. IMO it's not useful anymore especially if we use span queries for quoted query. \n ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15875734",
            "date": "2017-02-21T10:12:06+0000",
            "content": "+1, thanks Matt Weber; this also fixes an adversarial combinatoric explosion case.\n\nOn a different note I also wonder if we should keep the specialized GraphQuery. IMO it's not useful anymore especially if we use span queries for quoted query.\n\n+1 to phase out GraphQuery, I think: really, the \"graph-ness\" of the situation should only be a transient thing, that happened during query parsing, and was quickly translated into the equivalent query structure? ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15876101",
            "date": "2017-02-21T14:53:58+0000",
            "content": "Jim Ferenczi That check was intended, but as you said, it is essentially pointless.  I will remove it.  Yes, I think GraphQuery should go as well.  It was only needed when we needed to detect the graph to apply minimum should match and phrase slop which is no longer the case.  Should that be separate issue? ",
            "author": "Matt Weber"
        },
        {
            "id": "comment-15876440",
            "date": "2017-02-21T18:31:18+0000",
            "content": "Updated patch with fixed tests. ",
            "author": "Matt Weber"
        },
        {
            "id": "comment-15876559",
            "date": "2017-02-21T19:35:36+0000",
            "content": "Remove GraphQuery in LUCENE-7702. ",
            "author": "Matt Weber"
        },
        {
            "id": "comment-15877731",
            "date": "2017-02-22T08:04:56+0000",
            "content": "Thanks Matt Weber\nThe new patch looks great.\nI'll merge shortly ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15877879",
            "date": "2017-02-22T09:52:26+0000",
            "content": "? ",
            "author": "Luke"
        },
        {
            "id": "comment-15878151",
            "date": "2017-02-22T13:05:36+0000",
            "content": "Commit 96e8f0a0afeb68e2d07ec1dda362894f0b94333d in lucene-solr's branch refs/heads/master from Jim Ferenczi\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=96e8f0a ]\n\nLUCENE-7699: Query parsers now use span queries to produce more efficient phrase queries for multi-token synonyms. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15878199",
            "date": "2017-02-22T13:26:29+0000",
            "content": "Commit 43317a33f5d782d982d562df23ffbcdfb8820204 in lucene-solr's branch refs/heads/branch_6x from Jim Ferenczi\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=43317a3 ]\n\nLUCENE-7699: Query parsers now use span queries to produce more efficient phrase queries for multi-token synonyms. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15878200",
            "date": "2017-02-22T13:27:00+0000",
            "content": "Thanks Matt Weber ! ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15878280",
            "date": "2017-02-22T14:17:04+0000",
            "content": "Thanks Jim Ferenczi.  I this going to make it into 6.4.2 or wait until 6.5? ",
            "author": "Matt Weber"
        },
        {
            "id": "comment-15878289",
            "date": "2017-02-22T14:22:44+0000",
            "content": "Only 6.5 since the articulation points parsing is a breaking change (at least for boolean queries). ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15878422",
            "date": "2017-02-22T15:08:27+0000",
            "content": "Thanks Jim Ferenczi! ",
            "author": "Matt Weber"
        },
        {
            "id": "comment-16021382",
            "date": "2017-05-23T15:56:08+0000",
            "content": "re-opening to add fix version ",
            "author": "Erik Hatcher"
        }
    ]
}