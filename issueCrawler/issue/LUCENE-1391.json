{
    "id": "LUCENE-1391",
    "title": "Token type and flags values get lost when using ShingleMatrixFilter",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/analysis"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "2.4,                                            2.9,                                            3.0",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "While using the new ShingleMatrixFilter I noticed that a token's type and flags get lost while using this filter. ShingleFilter does respect these values like the other filters I know.",
    "attachments": {
        "LUCENE-1391.patch": "https://issues.apache.org/jira/secure/attachment/12470266/LUCENE-1391.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-09-18T12:16:38+0000",
            "content": "Hi Wouter,\n\nare you refering to unigram tokens? They should of course keep the original values, I'll take a look at that.\n\nI'm not sure how one would/could retain the token type or flags in an output token that is a combination of multiple input tokens as their values might differ.\n ",
            "author": "Karl Wettin",
            "id": "comment-12632188"
        },
        {
            "date": "2008-09-18T12:32:11+0000",
            "content": "Hi Karl,\nYes the unigram tokens is what i'm referring to. The output tokens can have 'Shingle', or something I can define, even concattenated types could be handy in some cases!\nNow that I come to it, I'm also missing setTokenType like ShingleFilter has. ",
            "author": "Wouter Heijke",
            "id": "comment-12632191"
        },
        {
            "date": "2011-01-25T14:33:19+0000",
            "content": "This issue is still valid, ShingleMatrixFilter still sets its class name as type attribute for all tokens and resets flags to 0.\n\nFurthermore, ShingleMatrixFilter does not respect custom/new attributes at all (like KeywordAttribute). ",
            "author": "Uwe Schindler",
            "id": "comment-12986401"
        },
        {
            "date": "2011-02-01T01:57:21+0000",
            "content": "Uwe, do you think we will have time to fix this for 3.1?\n\nThe issue has been around for a while, also a similar issue exists in contrib/compounds.\nIn both cases we have documentation:\n\n * <b>NOTE:</b> This filter might not behave correctly if used with custom Attributes, i.e. Attributes other than\n * the ones located in org.apache.lucene.analysis.tokenattributes.\n\n ",
            "author": "Robert Muir",
            "id": "comment-12989003"
        },
        {
            "date": "2011-02-02T10:53:54+0000",
            "content": "I wanted to look into this this week! ",
            "author": "Uwe Schindler",
            "id": "comment-12989592"
        },
        {
            "date": "2011-02-04T18:17:05+0000",
            "content": "Here is just a funny rewrite of this filter, not 100% working (but tests pass). Problems occur, when you define your own matrix, but the AttributeSources representing the Tokens are not compatible with copyTo() on the actual TokenStream (e.g. use different AttributeFactory, have additional attributes,...).\n\nAlso the filter was not yet optimized. Currently it always adds all 6 basic attributes.\n\nTo get around the TokenType problem, we can add the setter method to explicitely set the type for shingles (currently its the class name).\n\nThe FlagsAttribute is itsself used by the Filter to manage internal Token state. It should be replaced by a filter-internal ShingleMatrixStateAttribute containing an enum. ",
            "author": "Uwe Schindler",
            "id": "comment-12990663"
        },
        {
            "date": "2011-02-13T10:52:38+0000",
            "content": "Any update on this Uwe? what are your thoughts? ",
            "author": "Robert Muir",
            "id": "comment-12994069"
        },
        {
            "date": "2011-02-13T13:40:29+0000",
            "content": "I would like to deprecate ShingleMatrix as there is nobody that maintains or even understand it. In trunk we should remove it. In my opinion, it's too special-case: Look e.g. at the payload stuff in it, it does not even use the payload's packages PayloadEncoders.\n\nAny comments? I want to keep this open to possibly deprecate it. ",
            "author": "Uwe Schindler",
            "id": "comment-12994099"
        },
        {
            "date": "2011-02-15T08:54:50+0000",
            "content": "As nobody seems to be interested in or understands this Filter and wants to maintain it, I will deprecate it in 3.x branch and remove in trunk. It's only deprecated, so we can easily un-deprecate it after the release of 3.1 ifsomebody rewrites it to be more generic and works with attributes. ",
            "author": "Uwe Schindler",
            "id": "comment-12994700"
        },
        {
            "date": "2011-02-15T09:12:58+0000",
            "content": "See LUCENE-2920. ",
            "author": "Uwe Schindler",
            "id": "comment-12994711"
        }
    ]
}