{
    "id": "SOLR-11959",
    "title": "CDCR unauthorized to replicate to a target collection that is update protected in security.json",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Authentication",
            "CDCR"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "7.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Steps to reproduce:\u00a0\n\n\tCreate a source and a target collection in their respective clusters.\u00a0\n\tUpdate security.json to require a non-admin role to read and write.\u00a0\n\tIndex to source collection\u00a0\n\n\n\nExpected:\u00a0\n\nThe target collection should receive the update\n\nActual:\n\norg.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://redacted/solr/redacted: Expected mime type application/octet-stream but got text/html. <html>\n <head>\n <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n <title>Error 401 Unauthorized request, Response code: 401</title>\n </head>\n <body><h2>HTTP ERROR 401</h2>\n <p>Problem accessing /solr/redacted/update. Reason:\n <pre> Unauthorized request, Response code: 401</pre></p>\n </body>\n </html>at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:607)\n at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:255)\n at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:244)\n at org.apache.solr.client.solrj.impl.LBHttpSolrClient.doRequest(LBHttpSolrClient.java:483)\n at org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(LBHttpSolrClient.java:413)\n at org.apache.solr.client.solrj.impl.CloudSolrClient.sendRequest(CloudSolrClient.java:1103)\n at org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:883)\n at org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:816)\n at org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:194)\n at org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:211)\n at org.apache.solr.handler.CdcrReplicator.sendRequest(CdcrReplicator.java:140)\n at org.apache.solr.handler.CdcrReplicator.run(CdcrReplicator.java:104)\n at org.apache.solr.handler.CdcrReplicatorScheduler.lambda$null$0(CdcrReplicatorScheduler.java:81)\n at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:188)\n at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n at java.lang.Thread.run(Thread.java:748)",
    "attachments": {
        "SOLR-11959.patch": "https://issues.apache.org/jira/secure/attachment/12911346/SOLR-11959.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-02-14T19:47:50+0000",
            "content": "I figured and faced the same issue and obviously we need to improve CDCR to support Basic Authentication and Authorization across clusters.\n\nDesign model I see it happening: please checkout: SOLR-8389, we are introducing cdcr.json (cdcr configuration) in the zookeeper unlike solrconfig.xml. Is providing username:password as a property value for each target configuration in cdcr.json will be safe way to do this? As we can direct to multiple clusters and multiple collections, the basic auth property will be target specific.\n\nLooking forward to feedback and recommendations, I can start with this once we agree on design. ",
            "author": "Amrit Sarkar",
            "id": "comment-16364672"
        },
        {
            "date": "2018-02-21T06:21:18+0000",
            "content": "Uploaded patch will documentation changes reporting limitation of CDCR with Authentication plugins. ",
            "author": "Amrit Sarkar",
            "id": "comment-16371002"
        }
    ]
}