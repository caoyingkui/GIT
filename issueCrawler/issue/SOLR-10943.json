{
    "id": "SOLR-10943",
    "title": "SolrJ ClientUtils.escapeQueryChars should escape '$' to avoid Solr macro expansion",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "5.1",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "Since Solr 5.1, parameters containing \n\n  foo${bar}baz\n\n\n syntax will have parameter substitution performed, and will lead to an error if the parameter fails to resolve.  ClientUtils.escapeQueryChars should escape the dollar sign.  Heck, perhaps it should simply escape any char that isn't a letter, digit, or whitespace?\n\nI think this would be good but it admittedly isn't a cure-all for unanticipated macro expansions. For example if a client app sends 'q' to be processed by edismax, then ClientUtils.escapeQueryChars shouldn't be used (user may want quoting, for example; this shouldn't be escaped).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-23T13:46:45+0000",
            "content": "and will lead to an error if the parameter fails to resolve\nIt actually works like shell in that respect:\n\n~$ echo \"foo${bar}baz\"\nfoobaz\n\n ",
            "author": "Yonik Seeley",
            "id": "comment-16060917"
        },
        {
            "date": "2017-06-23T13:56:46+0000",
            "content": "And actually, looking at escapeQueryChars, it doesn't look like we really need to do anything here... it already escapes \n{ and }\n\n\nhttp://localhost:8983/solr/techproducts/select?q=foo$\\{bar\\}baz&debug=true\n\n<lst name=\"params\">\n<str name=\"q\">foo$\\{bar\\}baz</str>\n<str name=\"debug\">true</str>\n</lst>\n</lst>\n<result name=\"response\" numFound=\"0\" start=\"0\"/>\n<lst name=\"debug\">\n<str name=\"rawquerystring\">foo$\\{bar\\}baz</str>\n<str name=\"querystring\">foo$\\{bar\\}baz</str>\n<str name=\"parsedquery\">text:foo text:bar text:baz</str>\n<str name=\"parsedquery_toString\">text:foo text:bar text:baz</str>\n<lst name=\"explain\"/>\n<str name=\"QParser\">LuceneQParser</str>\n\n ",
            "author": "Yonik Seeley",
            "id": "comment-16060934"
        },
        {
            "date": "2017-06-23T15:42:36+0000",
            "content": "Woops; you're right Yonik; no more escaping needed here. ",
            "author": "David Smiley",
            "id": "comment-16061134"
        }
    ]
}