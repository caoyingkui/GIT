{
    "id": "LUCENE-1296",
    "title": "Allow use of compact DocIdSet in CachingWrapperFilter",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "New Feature",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Extends CachingWrapperFilter with a protected method to determine the DocIdSet to be cached.",
    "attachments": {
        "LUCENE-1296b.patch": "https://issues.apache.org/jira/secure/attachment/12394486/LUCENE-1296b.patch",
        "LUCENE-1296.patch": "https://issues.apache.org/jira/secure/attachment/12394466/LUCENE-1296.patch",
        "cachedFilter20080529.patch": "https://issues.apache.org/jira/secure/attachment/12383048/cachedFilter20080529.patch",
        "cachedFilter20080605.patch": "https://issues.apache.org/jira/secure/attachment/12383438/cachedFilter20080605.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-05-29T20:18:26+0000",
            "content": "The 20080529 patch patches CachingWrapperFilter and its test to add a choice of a compact filter to be cached, as well as some recently patched  ( LUCENE-1187 ) contrib filter classes to remove the corresponding functionality there. ",
            "author": "Paul Elschot",
            "id": "comment-12600907"
        },
        {
            "date": "2008-05-29T20:20:19+0000",
            "content": "Once more, with licence and copyright assigned to ASF. ",
            "author": "Paul Elschot",
            "id": "comment-12600911"
        },
        {
            "date": "2008-06-01T22:51:05+0000",
            "content": "I tried to come up with a sensible performance test to determine a good criterium to choose between OpenBitSet and SortedVIntList as the DocIdSet supporting data structure to be cached.\nThere is a criterium for this in the patch in docIdSetToCache() method of CachingWrapperFilter, but it's only based on byte size, and it favours SortedVIntList when it is defenitely more compact than OpenBitSet.\n\nThe current criterium is to use (cardinality (=nr bits set in OpenBitSet) < maxDocs/9) as a test to prefer SortedVIntList over OpenBitSet for caching. The constant 9 might be replaced by a configuration parameter to allow easy performance experiments there. It could be that a larger value than 9 is  turns out to be \"optimal\" in runtime.\n\nIn some cases OpenBitSet can be faster on skipTo(int docNum) than SortedVIntList, even when SortedVIntList is more compact. As Filters can be expected to use skipTo() heavily, this could be important for performance.\n\nEven even though it might be possible to measure the skipTo() performance directly, the effect of the more compact cached data structure of SortedVIntList on garbage collection is (pretty close to) impossible to measure in a simple test case.\n\nEks Dev had some interesting results there in the very early stages of LUCENE-584 (September 2006), so I wonder whether these results could be confirmed somehow using the patch here and the current trunk.\n\nComments?\n\n ",
            "author": "Paul Elschot",
            "id": "comment-12601504"
        },
        {
            "date": "2008-06-02T18:21:41+0000",
            "content": "For the record: the patch of 20080529 leaves some imports of SortedVIntList unused. ",
            "author": "Paul Elschot",
            "id": "comment-12601699"
        },
        {
            "date": "2008-06-05T07:25:11+0000",
            "content": "In the 20080605 patch the docIdSetToCache method simply returns its argument, which would normally be an OpenBitSet when using a Filter from the core. Anyone who wants to have another filter data structure cached can override this method. ",
            "author": "Paul Elschot",
            "id": "comment-12602565"
        },
        {
            "date": "2008-06-05T07:26:30+0000",
            "content": "Once more, with licence granted to ASF. ",
            "author": "Paul Elschot",
            "id": "comment-12602566"
        },
        {
            "date": "2008-08-22T11:47:57+0000",
            "content": "I think this is ready to commit.\nEven so, I'd like to repeat that it also removes the choice of another DocIdSet in the contrib search/BooleanFilter and misc/ChainedFilter.\nIn the latest patch, the actual choice of another DocIdSet is left to subclasses of CachingWrapperFilter that are not implemented.\n\nOne detail: for maximum flexibility, the 2nd argument to the protected method docIdSetToCache might be replaced by the indexreader. At the moment the 2nd arg is maxDoc of the indexreader, which is the only info I have needed so far to chose another DocIdSet. ",
            "author": "Paul Elschot",
            "id": "comment-12624658"
        },
        {
            "date": "2008-10-19T10:51:02+0000",
            "content": "This didn't make it into 2.4.\n\nA side effect of that is that SortedVIntList will sometimes be used instead of an OpenBitSet in contrib search/BooleanFilter and misc/ChainedFilter. So far no problems have surfaced there, which is good news. I wonder if there was any performance improvement in practice because of this. ",
            "author": "Paul Elschot",
            "id": "comment-12640832"
        },
        {
            "date": "2008-10-22T20:56:05+0000",
            "content": "Sigh.  Should have marked it as 2.4 fix version \n\nOne detail: for maximum flexibility, the 2nd argument to the protected method docIdSetToCache might be replaced by the indexreader.\n\n+1 ",
            "author": "Michael McCandless",
            "id": "comment-12641968"
        },
        {
            "date": "2008-10-22T21:17:19+0000",
            "content": "I guess we should deprecate the finalResult methods in BooleanFilter & ChainedFilter, and suggest using CachingWrapperFilter instead?\n\nAlso, why not put your logic to sometimes choose a SortedVIntList impl into CachingWrapperFilter.docIdSetToCache by default? ",
            "author": "Michael McCandless",
            "id": "comment-12641973"
        },
        {
            "date": "2008-11-12T17:10:35+0000",
            "content": "Also, why not put your logic to sometimes choose a SortedVIntList impl intoCachingWrapperFilter.docIdSetToCache by default?\n\nThe main reason is that there are circumstances under which skipTo() is faster on an OpenBitSet than on a SortedVIntList. OpenBitSet allows random access, so it can start the skip from any point, but SortedVIntList can only start the skip from its current position.\nOTOH SortedVIntList does have the advantage of being smaller when the set is sparse, and this may bring garbage collection advantages.\nIn all, not completely convincing either way.\n ",
            "author": "Paul Elschot",
            "id": "comment-12646954"
        },
        {
            "date": "2008-11-21T21:52:37+0000",
            "content": "Paul are you going to pull together another patch here? ",
            "author": "Michael McCandless",
            "id": "comment-12649816"
        },
        {
            "date": "2008-11-21T23:40:08+0000",
            "content": "Adds a docIdSetToCache method to CachingWrapperFilter.\nRemoves the choice of a compact underlying data structure from contrib filters. ",
            "author": "Paul Elschot",
            "id": "comment-12649851"
        },
        {
            "date": "2008-11-22T10:07:10+0000",
            "content": "It looks like the patch removed finalResult from contrib's ChainedFilter but not from contrib's BooleanFilter? ",
            "author": "Michael McCandless",
            "id": "comment-12649908"
        },
        {
            "date": "2008-11-22T13:47:00+0000",
            "content": "This time with finalResult() also removed from BooleanFilter. ",
            "author": "Paul Elschot",
            "id": "comment-12649923"
        },
        {
            "date": "2008-12-01T12:24:35+0000",
            "content": "Paul, I reverted the changes to ChainedFilter & BooleanFilter, and instead deprecated the new finalResult method.  It's dangerous to just remove protected methods since on upgrading there will be no errors but, silently, the finalResult method will no longer be called.  I think in 3.0 when we remove these methods, rather than simply removing them we should actually mark them final such that any subclasses still using them will see hard compilation errors.\n\nCan you look over the new patch? ",
            "author": "Michael McCandless",
            "id": "comment-12651983"
        },
        {
            "date": "2008-12-01T18:16:45+0000",
            "content": "Indeed it is better to be conservative about released things as in today's patch. ",
            "author": "Paul Elschot",
            "id": "comment-12652081"
        },
        {
            "date": "2008-12-01T18:51:46+0000",
            "content": "Committed revision 722174.\n\nThanks Paul! ",
            "author": "Michael McCandless",
            "id": "comment-12652092"
        }
    ]
}