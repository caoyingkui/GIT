{
    "id": "SOLR-4852",
    "title": "If sharedLib is set to lib, classloader fails to find classes in lib",
    "details": {
        "affect_versions": "4.4",
        "status": "Reopened",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I have some jars in the lib directory under solr.solr.home - DIH, ICU, and MySQL.  If I set sharedLib in solr.xml to \"lib\" then the ICUTokenizer class is not found, even though the jar is loaded (twice) during Solr startup.  If I set sharedLib to another location that doesn't exist, the jars are only loaded once and there is no problem.\n\nI'm using the old-style solr.xml on branch_4x revision 1485566.",
    "attachments": {
        "SOLR-4852-test-failhard.txt": "https://issues.apache.org/jira/secure/attachment/12584872/SOLR-4852-test-failhard.txt",
        "SOLR-4852.patch": "https://issues.apache.org/jira/secure/attachment/12584782/SOLR-4852.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-13664859",
            "date": "2013-05-23T04:50:39+0000",
            "content": "If sharedLib is \"lib\" then this is the log, and it fails to load ICUTokenizer.\n\n\nINFO  - 2013-05-22 22:41:15.932; org.apache.solr.core.SolrResourceLoader; using system property solr.solr.home: /index/solr4\nINFO  - 2013-05-22 22:41:15.941; org.apache.solr.core.CoreContainer$Initializer; looking for solr config file: /index/solr4/solr.xml\nINFO  - 2013-05-22 22:41:15.947; org.apache.solr.core.CoreContainer; New CoreContainer 1473971679\nINFO  - 2013-05-22 22:41:15.947; org.apache.solr.core.CoreContainer; Loading CoreContainer using Solr Home: '/index/solr4/'\nINFO  - 2013-05-22 22:41:15.947; org.apache.solr.core.SolrResourceLoader; new SolrResourceLoader for directory: '/index/solr4/'\nINFO  - 2013-05-22 22:41:15.949; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/icu4j-49.1.jar' to classloader\nINFO  - 2013-05-22 22:41:15.949; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/mysql-connector-java-5.1.22-bin.jar' to classloader\nINFO  - 2013-05-22 22:41:15.951; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/solr-dataimporthandler-4.4-SNAPSHOT.jar' to classloader\nINFO  - 2013-05-22 22:41:15.952; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/lucene-analyzers-icu-4.4-SNAPSHOT.jar' to classloader\nINFO  - 2013-05-22 22:41:16.250; org.apache.solr.core.CoreContainer; loading shared library: /index/solr4/lib\nINFO  - 2013-05-22 22:41:16.251; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/icu4j-49.1.jar' to classloader\nINFO  - 2013-05-22 22:41:16.251; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/mysql-connector-java-5.1.22-bin.jar' to classloader\nINFO  - 2013-05-22 22:41:16.251; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/solr-dataimporthandler-4.4-SNAPSHOT.jar' to classloader\nINFO  - 2013-05-22 22:41:16.251; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/lucene-analyzers-icu-4.4-SNAPSHOT.jar' to classloader\n<snip>\nERROR - 2013-05-22 22:41:16.939; org.apache.solr.common.SolrException; null:java.lang.NoClassDefFoundError: org/apache/lucene/analysis/icu/segmentation/ICUTokenizer\n        at java.lang.Class.getDeclaredConstructors0(Native Method)\n        at java.lang.Class.privateGetDeclaredConstructors(Class.java:2413)\n        at java.lang.Class.getConstructor0(Class.java:2723)\n        at java.lang.Class.getConstructor(Class.java:1676)\n        at org.apache.solr.core.SolrResourceLoader.newInstance(SolrResourceLoader.java:550)\n        at org.apache.solr.schema.FieldTypePluginLoader$2.create(FieldTypePluginLoader.java:342)\n        at org.apache.solr.schema.FieldTypePluginLoader$2.create(FieldTypePluginLoader.java:335)\n        at org.apache.solr.util.plugin.AbstractPluginLoader.load(AbstractPluginLoader.java:151)\n        at org.apache.solr.schema.FieldTypePluginLoader.readAnalyzer(FieldTypePluginLoader.java:362)\n        at org.apache.solr.schema.FieldTypePluginLoader.create(FieldTypePluginLoader.java:86)\n        at org.apache.solr.schema.FieldTypePluginLoader.create(FieldTypePluginLoader.java:43)\n        at org.apache.solr.util.plugin.AbstractPluginLoader.load(AbstractPluginLoader.java:151)\n        at org.apache.solr.schema.IndexSchema.readSchema(IndexSchema.java:467)\n        at org.apache.solr.schema.IndexSchema.<init>(IndexSchema.java:164)\n        at org.apache.solr.schema.IndexSchemaFactory.create(IndexSchemaFactory.java:55)\n        at org.apache.solr.schema.IndexSchemaFactory.buildIndexSchema(IndexSchemaFactory.java:69)\n        at org.apache.solr.core.CoreContainer.createFromLocal(CoreContainer.java:727)\n        at org.apache.solr.core.CoreContainer.create(CoreContainer.java:765)\n        at org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:426)\n        at org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:421)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:722)\nCaused by: java.lang.ClassNotFoundException: org.apache.lucene.analysis.icu.segmentation.ICUTokenizer\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:366)\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:423)\n        at java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:789)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:356)\n        ... 28 more\n\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13664861",
            "date": "2013-05-23T04:51:33+0000",
            "content": "If sharedLib is \"foo\" (which doesn't exist) then this is the log, and everything works.  The jars are only loaded once.\n\n\nINFO  - 2013-05-22 22:35:56.404; org.apache.solr.core.SolrResourceLoader; using system property solr.solr.home: /index/solr4\nINFO  - 2013-05-22 22:35:56.413; org.apache.solr.core.CoreContainer$Initializer; looking for solr config file: /index/solr4/solr.xml\nINFO  - 2013-05-22 22:35:56.419; org.apache.solr.core.CoreContainer; New CoreContainer 1473971679\nINFO  - 2013-05-22 22:35:56.419; org.apache.solr.core.CoreContainer; Loading CoreContainer using Solr Home: '/index/solr4/'\nINFO  - 2013-05-22 22:35:56.419; org.apache.solr.core.SolrResourceLoader; new SolrResourceLoader for directory: '/index/solr4/'\nINFO  - 2013-05-22 22:35:56.421; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/icu4j-49.1.jar' to classloader\nINFO  - 2013-05-22 22:35:56.421; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/mysql-connector-java-5.1.22-bin.jar' to classloader\nINFO  - 2013-05-22 22:35:56.424; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/solr-dataimporthandler-4.4-SNAPSHOT.jar' to classloader\nINFO  - 2013-05-22 22:35:56.424; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/lucene-analyzers-icu-4.4-SNAPSHOT.jar' to classloader\nINFO  - 2013-05-22 22:35:56.718; org.apache.solr.core.CoreContainer; loading shared library: /index/solr4/foo\nWARN  - 2013-05-22 22:35:56.718; org.apache.solr.core.SolrResourceLoader; Can't find (or read) directory to add to classloader: foo (resolved as: /index/solr4/foo).\n\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13664869",
            "date": "2013-05-23T05:15:29+0000",
            "content": "This setup has worked perfectly with all 3.x and 4.x versions up through 4.3.0. I suspect that the sharedLib bugfix that went into 4.3.1 is behind this problem. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13665104",
            "date": "2013-05-23T12:24:09+0000",
            "content": "Im not sure there is a problem: I think its correct now and was broken before. Your setup just relies upon broken behavior... don't use the same directory as both a top-level lib/ and a per-core lib/ "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13665170",
            "date": "2013-05-23T13:35:01+0000",
            "content": "Robert Muir - thanks.  I did wonder if it might have been buggy before.  Having this issue here for others to find may help someone, even if it's decided that this isn't a bug.\n\nI am a little mystified by the fact that it can't find a class just because it has loaded the jar twice, though.  I am not well-versed in classloader behavior ...  is that expected? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13665272",
            "date": "2013-05-23T15:36:07+0000",
            "content": "I'm not mystified. you just didnt give the full exception. ICU has a lot more than classes in its jars, lots of resources, SPI modules, etc. Its fairly complex. I wouldnt load it twice. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13665308",
            "date": "2013-05-23T16:17:36+0000",
            "content": "Would there be any value in trying to detect when the sharedLib value resolves to the same path as the lib under solr.solr.home, or detecting when a jar is loaded twice?  If SOLR-4495 is implemented, such checking could become even more important, because someone might list the same path as relative and absolute and not realize they've made a mistake. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13665314",
            "date": "2013-05-23T16:24:40+0000",
            "content": "I think if it could be correctly implemented, it might be useful. But i'm not sure its as simple as checking the parent URLClassloader's list of URLS, because you are suggesting a more complex equality such as relative vs absolute paths.\n\nAnd besides that still wouldn't detect a lot of problems:\n\n\tjar has different version (ICU-4.0 vs 4.0.1)\n\tjar is the same but physically somewhere else on the file system\n\tjar is different but has same class/resource names (i'm looking at you logging jars)\n\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13665348",
            "date": "2013-05-23T16:51:51+0000",
            "content": "\nAnd besides that still wouldn't detect a lot of problems:\n\n\tjar has different version (ICU-4.0 vs 4.0.1)\n\tjar is the same but physically somewhere else on the file system\n\tjar is different but has same class/resource names (i'm looking at you logging jars)\n\n\n\nIt's true that we can't detect all possible problems.  In cases where File objects are being used, doing a getCanonicalPath() comparison each time a lib folder is added would catch many misconfigs, including the mistake that I made.  If it's possible, comparing getCanonicalPath() on each jar would catch more. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13666822",
            "date": "2013-05-24T23:09:42+0000",
            "content": "First crack at a patch.  It doesn't work - it results in a test failure as well as similar exceptions when I have sharedLib=\"lib\" in my solr.xml.  I will investigate why it doesn't work, but if anyone else has any ideas, feel free to share. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13667022",
            "date": "2013-05-25T08:25:23+0000",
            "content": "Updated patch.  Tests now pass, using sharedLib=\"lib\" now works because it skips loading the duplicates.  Doesn't yet have CHANGES.txt. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13667025",
            "date": "2013-05-25T08:50:49+0000",
            "content": "While testing the latest patch, I came across another situation that appears to be a separate bug.  This problem happens with a vanilla branch_4x, but also happens with my patch.\n\nWhat I did was set sharedLib to foo, then moved icu4j-49.1.jar from lib to foo, both under solr.solr.home.  Some of my jars were in the automatically added lib, and one of them was in the explicitly stated foo.\n\nSplitting the libs in this way resulted in the following log output, followed by the same exception mentioned in a comment above - it was unable to find ICUTokenizer.\n\n\nINFO  - 2013-05-25 02:25:09.890; org.apache.solr.core.CoreContainer; New CoreContainer 1473971679\nINFO  - 2013-05-25 02:25:09.891; org.apache.solr.core.CoreContainer; Loading CoreContainer using Solr Home: '/index/solr4/'\nINFO  - 2013-05-25 02:25:09.891; org.apache.solr.core.SolrResourceLoader; new SolrResourceLoader for directory: '/index/solr4/'\nINFO  - 2013-05-25 02:25:09.893; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/mysql-connector-java-5.1.22-bin.jar' to classloader\nINFO  - 2013-05-25 02:25:09.893; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/solr-dataimporthandler-4.4-SNAPSHOT.jar' to classloader\nINFO  - 2013-05-25 02:25:09.895; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/lib/lucene-analyzers-icu-4.4-SNAPSHOT.jar' to classloader\nINFO  - 2013-05-25 02:25:10.306; org.apache.solr.core.CoreContainer; loading shared library: /index/solr4/foo\nINFO  - 2013-05-25 02:25:10.306; org.apache.solr.core.SolrResourceLoader; Adding 'file:/index/solr4/foo/icu4j-49.1.jar' to classloader\n\n\n\nAt first I was thinking it might be an object visibility problem, so I tried making replaceClassLoader synchronized and then tried making classLoader volatile, neither change made it work.  If all of the jars are in either lib or foo, then everything works. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13667245",
            "date": "2013-05-26T09:23:02+0000",
            "content": "-1 to this lenient patch. If someone has a .configuration error, fail hard.  "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13667342",
            "date": "2013-05-26T15:42:58+0000",
            "content": "When I use RuntimeException to fail hard because of a duplicate URL, two existing Solr tests fail.\n\nI'm beginning to think that this is a problem specific to the ICU analysis components, something subtle that happens when the classloader is replaced. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13684897",
            "date": "2013-06-17T01:41:50+0000",
            "content": "Sorry, got the wrong one when closing JIRAs related to SOLR-4910 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717119",
            "date": "2013-07-23T18:47:10+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13820197",
            "date": "2013-11-12T15:37:50+0000",
            "content": "There may be some confusion about what's going on with this issue.\n\nThis issue affects 4.3 and later.  Summary: If you are putting jars in solrhome/lib then you must remove any sharedLib setting that points at this directory, either with \"lib\" or an explicit path.  Also, you cannot put some jars in solrhome/lib and others in a location specified by sharedLib - they must all be in the same location.\n\nThe same config won't work on 4.2.1 and earlier if you are putting jars in solrhome/lib.  The sharedLib attribute must exist and point at that location, or you will see that the classloader loads the jars, but the classes in those jars are not found when the config or schema tries to use them.  This part is something I learned today while trying to work with the older version.\n\nI've been told that the behavior documented in this issue is not actually a problem.  I personally disagree with that assessment, but there is a workaround available.  We probably need some minor documentation changes. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971068",
            "date": "2014-04-16T12:57:04+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-14039276",
            "date": "2014-06-20T20:22:55+0000",
            "content": "This is not all about loading same jar twice. Here is an interesting finding.\n\nI remove all lib directives in example solrconfig.xml and put icu4j-53.1.jar and lucene-analyzers-icu-4.8.1.jar into collection1/lib folder.\n\nsolr.ICUFoldingFilterFactory works file.\n\nJust add following line to solrconfig.xml \n\n  <lib dir=\"../../../dist/\" regex=\"solr-velocity-\\d.*\\.jar\" />\n\n\n\nbum it fails.   I have a feeling that this is nothing to do with twice loading. It looks line order of processed lib directives causing something.  "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-14039312",
            "date": "2014-06-20T20:30:22+0000",
            "content": "In above setting no duplicate jars loaded. Only one explicit lib directive is defined in solrconfig.xml along with implicit one. core/lib. following lines printed during startup.\n\n\n1751 [coreLoadExecutor-4-thread-1] INFO  org.apache.solr.core.SolrResourceLoader  \u2013 new SolrResourceLoader for directory: '/Users/iorixxx/Desktop/solr-4.8.1/example/solr/collection1/'\n1752 [coreLoadExecutor-4-thread-1] INFO  org.apache.solr.core.SolrResourceLoader  \u2013 Adding 'file:/Users/iorixxx/Desktop/solr-4.8.1/example/solr/collection1/lib/.DS_Store' to classloader\n1752 [coreLoadExecutor-4-thread-1] INFO  org.apache.solr.core.SolrResourceLoader  \u2013 Adding 'file:/Users/iorixxx/Desktop/solr-4.8.1/example/solr/collection1/lib/icu4j-53.1.jar' to classloader\n1752 [coreLoadExecutor-4-thread-1] INFO  org.apache.solr.core.SolrResourceLoader  \u2013 Adding 'file:/Users/iorixxx/Desktop/solr-4.8.1/example/solr/collection1/lib/lucene-analyzers-icu-4.8.1.jar' to classloader\n1833 [coreLoadExecutor-4-thread-1] INFO  org.apache.solr.core.SolrConfig  \u2013 Adding specified lib dirs to ClassLoader\n1835 [coreLoadExecutor-4-thread-1] INFO  org.apache.solr.core.SolrResourceLoader  \u2013 Adding 'file:/Users/iorixxx/Desktop/solr-4.8.1/dist/solr-velocity-4.8.1.jar' to classloader\n\n\n\n\nThis fails for no reason.  By the way why does this load non - jar hidden .DS file : \n4.8.1/example/solr/collection1/lib/.DS_Store' to classloader "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14039331",
            "date": "2014-06-20T20:47:39+0000",
            "content": "Another theory I've considered is that the problem is caused by the resource loader object being replaced, which from my research apparently has to be done anytime you need to add another directory or list of jars.  This theory would be disproved by a setup that has more than one <lib> directive and uses classes in jars from both locations ... and there are probably some of those out there.\n\nI willingly admit that I do not understand what causes the problems that I documented here.  I looked into the Solr code and poked around the Java 7 API javadocs, but I wasn't able to make sense of it. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14039336",
            "date": "2014-06-20T20:50:59+0000",
            "content": "Hi Shawn, this is the issue here: I explain the problem in the linked issue: SOLR-6188 "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14605696",
            "date": "2015-06-29T14:32:57+0000",
            "content": "Interesting situation observed today.  A user on IRC couldn't get the ICUTransformFilterFactory to load, but ICUFoldingFilterFactory was working just fine.\n\nIt turns out that the user was using the full classname for the folding filter \u2013 org.apache.lucene.analysis.icu.ICUFoldingFilterFactory \u2013 but was using the abbreviated notation \u2013 solr.ICUTransformFilterFactory \u2013 for the other one.  I guess some of the problems may be caused by the hoops that Solr jumps through to make the solr prefix work. "
        }
    ]
}