{
    "id": "SOLR-8392",
    "title": "SolrParam.get(String) returns String and shouldn't be used in other instanceof checks",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Reopened",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "There's a couple of places where we declare the return type of solrParams.get() as an Object and then do instanceof checks for other types. Since we know it will be a String, we can simplify this logic in several places.",
    "attachments": {
        "SOLR-8392.patch": "https://issues.apache.org/jira/secure/attachment/12776361/SOLR-8392.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-08T18:15:59+0000",
            "author": "Mike Drob",
            "content": "patch -p0 attached against trunk. ",
            "id": "comment-15047179"
        },
        {
            "date": "2015-12-09T06:34:36+0000",
            "author": "Varun Thacker",
            "content": "Hi Mike,\n\nInstead of this in your patch - \n\n\n-            Object updateTimeoutSecsParam = getSolrRequest().getParams().get(UPDATE_TIMEOUT_SECS);\n+            String updateTimeoutSecsParam = getSolrRequest().getParams().get(UPDATE_TIMEOUT_SECS);\n             if (updateTimeoutSecsParam != null)\n-              updateTimeoutSecs = (updateTimeoutSecsParam instanceof Number)\n-                  ? ((Number) updateTimeoutSecsParam).intValue()\n-                  : Integer.parseInt(updateTimeoutSecsParam.toString());\n+              updateTimeoutSecs = Integer.parseInt(updateTimeoutSecsParam);\n\n\n\nIt's okay if we just do updateTimeoutSecs = getSolrRequest().getParams().getInt(UPDATE_TIMEOUT_SECS); right? SchemaManager#doOperations deals with the case of updateTimeoutSecs being null .\n\nOn a side note, Why should MapSolrParams support the getParams method. We have MultiMapSolrParams if someone wants to have multiple values for a key. I tried playing around and have MapSolrParams#getParams throw a UnsupportedOperationException but looks like it will involve a fair amount of refactoring to get that working. ",
            "id": "comment-15048141"
        },
        {
            "date": "2015-12-09T07:25:20+0000",
            "author": "Mike Drob",
            "content": "I'm not sure we can do that since updateTimeoutSecs is a class field. One request could set it, and the next request could not specify it and current behaviour would be to continue to use the first value. Indiscriminately overwriting it would be a change. However, I do think we can use getInt on the change in SchemaHandler.\n\nRegarding MapSolrParams, I suspect this class was created before Java introduced generics, so it might have some rough edges with type safety. I'm not sure what to do about getParams but it looks like get can be simplified quite a bit. Some cursory analysis makes me think that returning a single-element array for getParams is totally fine, and it meets the API contract to return an array with all (one) elements. ",
            "id": "comment-15048203"
        },
        {
            "date": "2015-12-09T08:44:09+0000",
            "author": "Varun Thacker",
            "content": "Hi Mike,\n\nI'm not sure we can do that since updateTimeoutSecs is a class field. One request could set it, and the next request could not specify it and current behaviour would be to continue to use the first value. Indiscriminately overwriting it would be a change. However, I do think we can use getInt on the change in SchemaHandler.\n\nTrue\n\nNew patch looks good! ",
            "id": "comment-15048306"
        },
        {
            "date": "2017-06-05T18:13:41+0000",
            "author": "Varun Thacker",
            "content": "Hi Mike Drob,\n\nDo you want to assign this to yourself now and commit it? ",
            "id": "comment-16037307"
        },
        {
            "date": "2017-06-12T22:10:21+0000",
            "author": "Mike Drob",
            "content": "Yea, I'll take care of it. ",
            "id": "comment-16047134"
        },
        {
            "date": "2017-06-12T22:32:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 94220a01e14f53e0632bfbc1678661ad9c67320a in lucene-solr's branch refs/heads/master from Mike Drob\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=94220a0 ]\n\nSOLR-8392: Remove instanceof checks on return value of SolrParam::get ",
            "id": "comment-16047152"
        },
        {
            "date": "2017-06-13T11:08:09+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I'm seeing test failures (specifically TestSolrConfigHandlerCloud) related to this change with the following in the logs:\n\n25770 ERROR (qtp45094468-154) [n:127.0.0.1:39181_ c:collection1 s:shard1 r:core_node4 x:collection1] o.a.s.s.HttpSolrCall null:java.lang.ClassCastException: [Ljava.lang.String; cannot be cast to java.lang.String\n\tat org.apache.solr.common.params.MapSolrParams.getParams(MapSolrParams.java:39)\n\tat org.apache.solr.common.params.MultiMapSolrParams.asMultiMap(MultiMapSolrParams.java:103)\n\tat org.apache.solr.common.params.MultiMapSolrParams.asMultiMap(MultiMapSolrParams.java:81)\n\tat org.apache.solr.request.json.RequestUtil.processParams(RequestUtil.java:119)\n\tat org.apache.solr.util.SolrPluginUtils.setDefaults(SolrPluginUtils.java:177)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:175)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2487)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:722)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:528)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:374)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:318)\n\n\n ",
            "id": "comment-16047738"
        },
        {
            "date": "2017-06-13T14:07:23+0000",
            "author": "Noble Paul",
            "content": "Reopened because of test failures ",
            "id": "comment-16047941"
        },
        {
            "date": "2017-06-13T15:41:40+0000",
            "author": "Mike Drob",
            "content": "Sigh. Sorry about that, guys. I'll take care of this today. ",
            "id": "comment-16048046"
        },
        {
            "date": "2017-06-13T21:18:26+0000",
            "author": "Mike Drob",
            "content": "It looks like we use raw types somewhere to shove a String[] value into a map that we later claim is String, String. I'm not able to actually find the place where it happens to fix that, so I'll revert to make tests happier and come back to it later. ",
            "id": "comment-16048414"
        },
        {
            "date": "2017-06-13T21:19:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d1db5f7af9edb2125583c6c63fa322380ee57cf7 in lucene-solr's branch refs/heads/master from Mike Drob\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d1db5f7 ]\n\nRevert \"SOLR-8392: Remove instanceof checks on return value of SolrParam::get\"\n\nThis reverts commit 94220a01e14f53e0632bfbc1678661ad9c67320a. ",
            "id": "comment-16048415"
        },
        {
            "date": "2017-06-14T02:02:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d1db5f7af9edb2125583c6c63fa322380ee57cf7 in lucene-solr's branch refs/heads/jira/SOLR-10834 from Mike Drob\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d1db5f7 ]\n\nRevert \"SOLR-8392: Remove instanceof checks on return value of SolrParam::get\"\n\nThis reverts commit 94220a01e14f53e0632bfbc1678661ad9c67320a. ",
            "id": "comment-16048598"
        }
    ]
}