{
    "id": "SOLR-1799",
    "title": "enable matching of \"CamelCase\" with \"camelcase\" in WordDelimiterFilter",
    "details": {
        "affect_versions": "1.3,                                            1.4",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "At the bottom of the WordDelimiterFilter.java code there's the following comment:\n\n// downsides:  if source text is \"powershot\" then a query of \"PowerShot\" won't match!\n\nAnother serious example for us might be something like an indexed document containing the word \"Tribeca\" or \"Soho\", and then a user trying to search for \"TriBeCa\" or \"SoHo\".\n\nThis issue has turned up in a couple of recent mailing list threads:\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-solr-user/200908.mbox/%3cfe4f94830908201429j3ffbcdd3s3cb7d80542b31e48@mail.gmail.com%3e\nhttp://mail-archives.apache.org/mod_mbox/lucene-solr-user/200905.mbox/%3c72d9e9500905121619p68c27099ibc7079e52cb0e48e@mail.gmail.com%3e\n\nIn the first thread I found the best explication of what my own misunderstanding was, and it's something I'm sure must trip up other people as well:\n\n\nI've misunderstood WordDelimiterFilter.  You might think that catenateAll=\"1\" would append the full phrase (sans delimiters) as an OR against the query.  So \"jOkersWild\" would produce:\n\n\"j (okers wild)\" OR \"jokerswild\"\n\nBut you thought wrong.  Its actually:\n\n\"j (okers wild jokerswild)\"\n\nWhich is confusing and won't match...\n\nIn the second thread, Yonik Seeley gives a good explanation of why this occurs, and provides a suggested workaround where you duplicate your data fields and then query on one using generateWordParts=\"1\" and on the other using catenateWords=\"1\".  That works, but obviously requires data duplication.  In our case, we are also following what I believe is recommended practice and duplicating our data already into stemmed and unstemmed indexes.  To my mind, to further duplicate both of these fields a second time, with no difference in the indexed data of the additional copy, seems needlessly wasteful when the problem lies entirely in the query side of things.\n\nAt any rate, I'm attaching a patch against Solr 1.3 which is rather hacky, but seems to work for us.  In WordDelimiterFilter, if generateWordParts=\"1\" and catenateWords=\"2\", then we move the concatenated word to overlap its position with the first generated token instead of the last (which is the behaviour with catenateWords=\"1\").  We further insert a preceding dummy flag token with the special type \"CATENATE_FIRST\".\n\nIn SolrPluginUtils in the DisjunctionMaxQueryParser class we just copy in the entirety of the getFieldQuery() code from Lucene's QueryParser.  This is ugly, I know.  This code is then tweaked so that in the case where the dummy flag token is seen, it creates a BooleanQuery with the following token (the concatenated word) as a conditional TermQuery clause, and then adds the generated terms in their usual MultiPhraseQuery as a second conditional clause.\n\nNow I realize this patch is (a) not likely acceptable on style and elegance grounds, and (b) only against Solr 1.3, not trunk.  My apologies for both; after I'd spent most of what time I had available tracking down the source of the problem, I just needed to get something working quickly.  Perhaps this patch will inspire others to greatness, though, or at a minimum provide a starting point for those who stumble over this same issue.\n\nThanks for a great application!  Cheers.",
    "attachments": {
        "SOLR-1799.patch": "https://issues.apache.org/jira/secure/attachment/12437357/SOLR-1799.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12839419",
            "date": "2010-02-28T13:41:17+0000",
            "content": "Thanks Chris - this actually is sort of like an approach I was thinking about recently (use a new analysis attribute to somehow represent equivalent runs of tokens that currently can't currently be represented by the linear tokenstream, and then modify getFieldQuery to \"do the right thing\").\n\nSame sort of thing is needed for synonyms - of course that doesn't solve the full problem since the QP feeds the analyzer a word at a time unless it's a quoted  phrase. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872542",
            "date": "2010-05-27T22:07:30+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043665",
            "date": "2011-06-03T16:46:24+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106308",
            "date": "2011-09-16T14:50:29+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234717",
            "date": "2012-03-21T18:08:59+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717330",
            "date": "2013-07-23T18:47:53+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971295",
            "date": "2014-04-16T12:57:41+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}