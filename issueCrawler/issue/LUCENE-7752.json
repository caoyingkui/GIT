{
    "id": "LUCENE-7752",
    "title": "Findbugs: Array.equals is equivalent to comparing references",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Sub-task",
        "components": [],
        "fix_versions": []
    },
    "description": "",
    "attachments": {
        "failing_graph.png": "https://issues.apache.org/jira/secure/attachment/12873167/failing_graph.png",
        "LUCENE-7752.patch": "https://issues.apache.org/jira/secure/attachment/12860527/LUCENE-7752.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15941711",
            "date": "2017-03-25T12:26:09+0000",
            "content": "Michael McCandless could you take a look at TestSynonymGraphFilter? The original version was certainly wrong (syn1 and syn2 were referring to the same object), but I'm not sure if the new one is correct. ",
            "author": "Daniel Jelinski"
        },
        {
            "id": "comment-15942472",
            "date": "2017-03-26T22:23:34+0000",
            "content": "Thanks Daniel Jelinski, that's a great catch!  Your patch looks correct; does the test now fail?  The way it is in trunk now (buggy) would make the assert rarely have a chance to trigger, but with your (correct) fix, it's actually meaningful. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15943890",
            "date": "2017-03-27T19:21:48+0000",
            "content": "Michael McCandless I run the test a few times and it succeeded. I don't understand enough of the automaton generation to be able to produce a failing test case, if any exists. ",
            "author": "Daniel Jelinski"
        },
        {
            "id": "comment-16039177",
            "date": "2017-06-06T16:11:26+0000",
            "content": "\n# apply patch to local working copy\ncd lucene/analysis/common\nant beast -Dbeast.iters=100 -Dtestcase=TestSynonymGraphFilter\n\n\nThis for me produced a failing test case in a minute or two. ",
            "author": "Christine Poerschke"
        },
        {
            "id": "comment-16050950",
            "date": "2017-06-15T19:12:11+0000",
            "content": "Thanks Christine Poerschke for introducing me to ant beast, wasn't familiar with it.\n\nI was able to produce a fairly small failing case. 2 synonyms:\naaa=>xxx (keepOriginal=true)\naaa=>yyy (keepOriginal=true)\nDocument:\naaaaaa\nFails with flatten maxLookaheadUsed=13. This looks suspicious to me given that the entire flattened graph has only 15 nodes (including start and stop):\n\nI'm still trying to figure this out. ",
            "author": "Daniel Jelinski"
        },
        {
            "id": "comment-16051061",
            "date": "2017-06-15T21:01:07+0000",
            "content": "Okay, I think I got to the bottom of this.\nThe FlattenGraphFilter is a bit lazy when it comes to freeing visited graph nodes. When it's done processing nodes 1,3,5, it frees nodes <1 (=0). When it's done processing nodes 2,4,6 it frees nodes <2 (=1). In order to process node 7 it loads the entire graph up to node 14, pushing the number of concurrently buffered nodes up to 13, which triggers test failure.\nI modified the code to free nodes eagerly, so that releasing unneeded nodes happens before processing, not after. This made the beast happy. Anyway, this problem probably deserves a separate bug. ",
            "author": "Daniel Jelinski"
        }
    ]
}