{
    "id": "SOLR-1367",
    "title": "Provide Callback mechanism for SolrPluginUtils.docListToSolrDocumentList",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Sometimes SearchComponents need to modify the DocList.  Often times this requires two loops over the (Solr)DocList: once to convert the DocList to SolrDocList and then once to iterate the SolrDocList for the Search Component.  This can be seen in SOLR-773, for example.",
    "attachments": {
        "SOLR-1367.patch": "https://issues.apache.org/jira/secure/attachment/12416871/SOLR-1367.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Grant Ingersoll",
            "id": "comment-12744493",
            "date": "2009-08-18T13:16:01+0000",
            "content": "Simple fix for this.  Marked the interface as changeable pending some other fixes later. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12744636",
            "date": "2009-08-18T18:29:30+0000",
            "content": "Committed revision 805528. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12744748",
            "date": "2009-08-18T22:02:47+0000",
            "content": "I'm puzzled wondering why this is an improvement.\n\nNew:\n\nSolrDocumentList sdocs = docListToSolrDocumentList(dlist,..., \n  new SolrDocumentModifier() {\n    void process(SolrDocument doc) {\n      doc.add(\"foo\",1);\n    }\n  }, \n...);\n\n\n\nOld:\n\nSolrDocumentList sdocs = docListToSolrDocumentList(dlist,...,...);\nfor (SolrDocument doc : sdocs) {\n  d.add(\"foo\",1);\n}\n\n "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12744784",
            "date": "2009-08-18T23:48:43+0000",
            "content": "B/c docListToSolrDocList also requires looping over the DocList.  So, in the old case, you've iterated the DocList twice.  In the new way, you only iterated it once. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12744788",
            "date": "2009-08-18T23:59:55+0000",
            "content": "It seems in this case that iteration is more straight-forward and easier to understand, and offers the same performance. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12744818",
            "date": "2009-08-19T00:59:40+0000",
            "content": "What's hard to understand about a callback mechanism?  It's akin to FileFilter for File.listFiles or similar things.\n\nAlso, why would two loops over the same list be the same performance as one?  I suppose in the rows=10 or so case, it is in the noise, but, but if someone were getting deeper results than say 10,  the Modifier approach would be faster.  Now multiply the need to do this for every query and I think it would add up.\n\nThe whole use case is very much a special case.  Most people in most situations don't need to do this.  But when you do need to do it, you do it all the time and you want it to be fast.  That being said, people can implement it themselves.  I just figured since the docListToSolrDocList method was already there, it would be a time saver. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12744826",
            "date": "2009-08-19T01:17:40+0000",
            "content": "What's hard to understand about a callback mechanism?\n\nCallbacks are useful when you need to execute your own snippet of code in a different context - that's not the case here.\n\nAlso, why would two loops over the same list be the same performance as one?\n\nBecause the iteration part is irrelevant compared to what else is done during the iteration.  Iteration can be as simple as a pointer dereference.  The callback approach has null pointer check whether to invoke the modifier or not... and that gets done even if no modifier will be used (but that will also be in the noise).\n\nNow multiply the need to do this for every query and I think it would add up.\n\nIt won't - it won't even be measurable.\n\nThe whole use case is very much a special case. Most people in most situations don't need to do this. \n\nWhich would seem to argue against adding code to try and do it.\n\nThat said, docListToSolrDocList isn't even used in Solr anywhere, so I don't care too much - it can be deprecated/removed later.  Solr itself shouldn't use this method since it's not streamable.  Allowing custom modifications while preserving streamability does call for callbacks... but not in 1.4 "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12745013",
            "date": "2009-08-19T11:51:56+0000",
            "content": "That said, docListToSolrDocList isn't even used in Solr anywhere, so I don't care too much - it can be deprecated/removed later. Solr itself shouldn't use this method since it's not streamable. Allowing custom modifications while preserving streamability does call for callbacks... but not in 1.4\n\nRight, it is likely used by a very small subset of people who:  write their own SearchComp and modify the doclist.  LocalSolr is one such case.  If you look at PJ's patch on SOLR-773, you will see it in use.  I think Ryan put it in, so he may have use case for it too.  It is definitely not needed by Solr itself.  The modifier thing is also likely a temp fix until pseudo-fields and pluggable doc stores are in place. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12745019",
            "date": "2009-08-19T12:01:48+0000",
            "content": "My opinion on this... this code should not be included in Solr yet.  It can easily be added as custom utility or just a couple of lines of code into custom components.  Until the components that need such utilities are added to Solr and until we agree on a cleaner way to add metadata to a document, I vote we revert this and not include it in Solr 1.4. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12745020",
            "date": "2009-08-19T12:02:32+0000",
            "content": "Reopened to consider reverting. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12745024",
            "date": "2009-08-19T12:07:58+0000",
            "content": "Just because something isn't used internally by Solr, doesn't mean it isn't useful to Solr users.  Why have Solr users write the same thing over and over again?  It is perfectly reasonable for Solr to provide end user APIs. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12745029",
            "date": "2009-08-19T12:16:07+0000",
            "content": "Just because it is useful in one situation does not mean it should be something the Solr committers must maintain either.  I'm not convinced that adding fields to a document (in this way) is the right way to add metadata to the response, personally.  I'm only one opinion out there though, but I'm -0.5 on this being in Solr 1.4.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12745032",
            "date": "2009-08-19T12:29:56+0000",
            "content": "IMHO  the performance improvement is almost none with this enhancement. And it is cleaner the old way. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12745091",
            "date": "2009-08-19T15:54:05+0000",
            "content": "OK, I will revert. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12745104",
            "date": "2009-08-19T16:23:56+0000",
            "content": "Reverted "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775844",
            "date": "2009-11-10T15:52:13+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}