{
    "id": "SOLR-4647",
    "title": "Grouping is broken on docvalues-only fields",
    "details": {
        "affect_versions": "4.2",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "There are a few places where grouping uses FieldType.toObject(SchemaField.createField(String, float)) to translate a String field value to an Object. The problem is that createField returns null when the field is neither stored nor indexed, even if it has doc values.\n\nAn option to fix it could be to use the ValueSource instead to resolve the Object value (similarily to NumericFacets).",
    "attachments": {
        "SOLR-4647.patch": "https://issues.apache.org/jira/secure/attachment/12765730/SOLR-4647.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "David Arthur",
            "id": "comment-13615967",
            "date": "2013-03-28T01:43:38+0000",
            "content": "I ran into this as well. For me, grouping was working for int fields, but not string fields. \n\nHere is the exception I got: https://gist.github.com/mumrah/7d87999e59cfa716f045 "
        },
        {
            "author": "David Smiley",
            "id": "comment-13623667",
            "date": "2013-04-05T14:29:09+0000",
            "content": "There seems to be a need for a String-to-value method on FieldType.  Based on the current method names, its signature should be Object toObject(String str).  By default it could return str directly. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13623761",
            "date": "2013-04-05T16:28:49+0000",
            "content": "Also i think there is a need for at least trivial tests of grouping against docvalues fields! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13623965",
            "date": "2013-04-05T19:14:06+0000",
            "content": "It should be really easy to add docvalues based fields to\nTestGroupingSearch.testRandomGrouping "
        },
        {
            "author": "Subashini Soundararajan",
            "id": "comment-13692007",
            "date": "2013-06-24T14:19:13+0000",
            "content": "hi I'm a newbie, can someone please provide additional context about the issue/ways to reproduce it?\n\nThanks! "
        },
        {
            "author": "Sebastian M\u00fcller",
            "id": "comment-13692831",
            "date": "2013-06-25T08:16:15+0000",
            "content": "think I hit that problem. Create a schema with normal fields (e.g. id)\nand an DocValues field (e.g. feature). If you want to get the DocValues\nfield value (/select?q=id:123&fl=feature) no value is returned.\n\nSetting the DocValues field stored=true or false doesn't change\nanything. The value is not returned.\n\nWe worked around that by using an own Field implementation that\nprogrammatically set the stored flag true:\n\npublic class OwnDocValuesField extends Field {\n      public static final FieldType TYPE = new FieldType();\n      static \n{\n        TYPE.setDocValueType(FieldInfo.DocValuesType.BINARY);\n        //set to true, so we are able to retrieve the docvalues via fl\nparameter\n        TYPE.setStored(true);\n        TYPE.freeze();\n      }\n\n    public OwnDocValuesField(String name, BytesRef value) \n{\n        super(name, TYPE);\n        fieldsData = value;\n    }\n}\n\nWe use this class in an own FieldType implementation. I guess our\nproblem is caused by the issue described in SOLR-4647.\n\nI cannot estimate if this is a bug or if DocValues works as designed,\nand simply should not be used this way. Does anyone know that?\n\nlg\nSebastian "
        },
        {
            "author": "Iker Huerga",
            "id": "comment-13867009",
            "date": "2014-01-09T20:24:17+0000",
            "content": "Hi,\n\nI've been able to replicate the issue which I think happens when stored=false in schema.xml for the DocValue field type. I could start working on a patch for it if nobody else is already working on it.\n\nThanks\nIker "
        },
        {
            "author": "Modassar Ather",
            "id": "comment-14061877",
            "date": "2014-07-15T09:29:51+0000",
            "content": "Hi,\n\nI am also seeing this issue while doing grouping on docValues enabled field. I checked createField(...) method of FieldType which returns null if the field is not indexed and stored. \nAnd when the returned field (which is null) gets passed to the fieldType.toObject(...) method from finish() method of Grouping.java it causes the NullPointerException.\nKindly provide inputs if any of the indexe/stored needs to be set to true while creating a docValue field or this is an issue.\n\nThanks,\nModassar "
        },
        {
            "author": "Scott Stults",
            "id": "comment-14949833",
            "date": "2015-10-09T03:28:57+0000",
            "content": "FieldType can interpret BytesRef correctly if you pass it SchemaField in the toObject call. Subclasses override that like in StrField, where toObject returns term.utf8ToString.\n\nThe attached patch takes that approach. There's also a unit test on string fields that aren't stored or indexed, but have docValues. The test groups and sorts by that docValues-only field. "
        }
    ]
}