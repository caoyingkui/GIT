{
    "id": "LUCENE-6964",
    "title": "Small changes in expressions module",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.4",
        "components": [
            "modules/expressions"
        ],
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "This patch is not really worth an issue, but it has 2 small changes in expression's JavaScriptCompiler:\n\n\n\tOn the OpenJDK mailinglists from time to time people want to have \"nice stack traces\" (this got worse with Lambda expressions). Since Java 8u60 they now hide some stack frames automatically. Under discussion was to use the \"synthetic\" bytecode attribute for that. They did not do that; instead they have a new annotation (@LambdaForm.Hidden). In any case, I will remove the synthetic annotation from the generated class file, because it is not really applicable (and also brings nothing): \"A class member that does not appear in the source code must be marked using a Synthetic attribute, or else it must have its ACC_SYNTHETIC flag set. The only exceptions to this requirement are compiler-generated methods which are not considered implementation artifacts, namely the instance initialization method representing a default constructor of the Java programming language (\u00a72.9), the class initialization method (\u00a72.9), and the Enum.values() and Enum.valueOf() methods.\". In our case the expressions class has source code (just not Java), so we should not make it synthetic. So there is also no risk that the stack frames get hidden in future (if OpenJDK thinks different).\n\tThe code has currently some string-based method signatures. They tend to get broken because we have no compile-time checks. I replaced those with compile-time class constants using Java 7's MethodType to create the descriptor. For me the code is more readable. The change is a no-op as its constants only.",
    "attachments": {
        "LUCENE-6964.patch": "https://issues.apache.org/jira/secure/attachment/12780851/LUCENE-6964.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15086446",
            "author": "Uwe Schindler",
            "date": "2016-01-06T22:59:14+0000",
            "content": "Patch. "
        },
        {
            "id": "comment-15088078",
            "author": "Ryan Ernst",
            "date": "2016-01-07T20:49:01+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15088249",
            "author": "ASF subversion and git services",
            "date": "2016-01-07T22:24:07+0000",
            "content": "Commit 1723636 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1723636 ]\n\nLUCENE-6964: String-based signatures in JavascriptCompiler replaced with better compile-time-checked MethodType; generated class files are no longer marked as synthetic "
        },
        {
            "id": "comment-15088255",
            "author": "ASF subversion and git services",
            "date": "2016-01-07T22:26:04+0000",
            "content": "Commit 1723637 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1723637 ]\n\nMerged revision(s) 1723636 from lucene/dev/trunk:\nLUCENE-6964: String-based signatures in JavascriptCompiler replaced with better compile-time-checked MethodType; generated class files are no longer marked as synthetic "
        }
    ]
}