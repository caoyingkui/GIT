{
    "id": "SOLR-10304",
    "title": "Refactor Document/Stored-field handling out of SolrIndexSearcher",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [
            "6.6"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "SolrIndexSearcher is nearly 3 thousand lines of code.  A sizable part of it pertains to Document handling, including various stored-field concerns and docValue substitutions (docValueAsStored related).  There are already comments marking the start and end of this part of SolrIndexSearcher, plus there some fields and their initialization that are only in support of those methods.  I propose that all of this go to a new companion class SolrDocumentFetcher. SolrIndexSearcher can add a getter for it, and where applicable existing callers can call to this instead.  \"Override\"'s will need to stay of course.\n( Originally proposed in SOLR-10286 )",
    "attachments": {
        "SOLR_10304_SolrDocumentFetcher.patch": "https://issues.apache.org/jira/secure/attachment/12859753/SOLR_10304_SolrDocumentFetcher.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-21T16:11:26+0000",
            "content": "Here's a patch.\nMisc notes:\n\n\tSolrIndexSearcher now has getters for the SolrDocumentFetcher, for FieldInfos, and for the LeafContexts. The latter 2 were needed by SDF.\n\tMarked SolrPluginUtils.docListToSolrDocumentList deprecated. It's only called by ClusteringComponent, and I think the \"ids\" param aspect is a bit ugly and not worth supporting. If someone wants a similar method they can speak up and we can add a method to SolrDocumentFetcher.\n\tRemoved convenience method readDocs and it's overloaded version. Nobody was calling them.  I looked around to see if, IMO, somewhere we should be calling them.  I think not as the method promotes holding all the given Lucene docs in memory at once rather than letting each caller grab the parts of them they want, potentially in a more streaming way.\n\tclass DocsStreamer:\n\t\n\t\tThe \"dvFieldsToReturn\" calculation was moved to a static method on this class. I considered moving it to SolrDocumentFetcher but opted not to for now; it's debatable.  ReturnFields might be the ideal target.  Annoyingly ReturnFields is an interface with just one implementation so I didn't do this; not to mention it might be a bit out of scope.\n\t\tRenamed static DocsStreamer.getDoc(doc) to  convertLuceneDocToSolrDoc.  I considered moving it to SolrDocumentFetcher but it's not 100% clear it should.  Maybe?  If so maybe it could then be made non-static and joined with calling decorateDocValueFields; it's debatable.\n\t\n\t\n\tthere are several methods in RealtimeGetComponent affected... it suggests to me future refactorings might merge/move some of this logic, perhaps with DocsStreamer.  I dunno.\n\n ",
            "author": "David Smiley",
            "id": "comment-15934811"
        },
        {
            "date": "2017-03-21T16:25:20+0000",
            "content": "+1 to the refactoring! The SolrIndexSearcher looks much cleaner now.\n\nRenamed static DocsStreamer.getDoc(doc) to convertLuceneDocToSolrDoc. I considered moving it to SolrDocumentFetcher but it's not 100% clear it should. Maybe?\nThere's also RTGC.toSolrDoc(), RTGC.toSolrInputDocument() that are very similar to DocsStreamer.getDoc(). There maybe one or two more of these methods. I think those should all be co-located in some utility class. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15934831"
        },
        {
            "date": "2017-03-21T21:11:00+0000",
            "content": "I'm glad you like it Ishan \n\nI have no convictions about where to put these things... but one option is SolrDocumentFetcher.  Fetching & conversion / decoration could be its scope.  If it's not SDF, then perhaps SDF's scope should be more narrow as to not include decorateDocValueFields.  I'm kind of inclined to put all this stuff in SDF. ",
            "author": "David Smiley",
            "id": "comment-15935341"
        },
        {
            "date": "2017-03-24T17:03:57+0000",
            "content": "Update patch with small changes pertaining to the move of SolrPluginUtils.docListToSolrDocumentList to the ClusteringComponent.  The test needed to move to which in turn required some additions to the CC's schema.xml.\n\nAll tests pass and ant precommit.  I'll commit this later today.\n\nFurther consolidation/moving around relative to RealTimeGetComponent can happen in another issue. ",
            "author": "David Smiley",
            "id": "comment-15940743"
        },
        {
            "date": "2017-03-25T03:01:54+0000",
            "content": "Commit f1aef3d12be1300a93a57570e576d94c59ac969e in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f1aef3d ]\n\nSOLR-10304: Refactor new SolrDocumentFetcher out of SolrIndexSearcher ",
            "author": "ASF subversion and git services",
            "id": "comment-15941541"
        },
        {
            "date": "2017-03-25T03:47:24+0000",
            "content": "Commit 9c423a61a4ab5d88103cb26c190864454c5c1cb0 in lucene-solr's branch refs/heads/branch_6x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9c423a6 ]\n\nSOLR-10304: Refactor new SolrDocumentFetcher out of SolrIndexSearcher\n\n(cherry picked from commit f1aef3d) ",
            "author": "ASF subversion and git services",
            "id": "comment-15941549"
        }
    ]
}