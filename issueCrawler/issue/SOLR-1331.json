{
    "id": "SOLR-1331",
    "title": "Support merging multiple cores",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.3",
            "4.0-ALPHA"
        ],
        "components": [
            "multicore"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There should be a provision to merge one core with another. It should be possible to create a core, add documents to it and then just merge it into the main core which is serving requests. This way, the user will not need to know the filesystem as it is needed for SOLR-1051",
    "attachments": {
        "SOLR-1331.patch": "https://issues.apache.org/jira/secure/attachment/12482778/SOLR-1331.patch",
        "SOLR-1331-branch3x.patch": "https://issues.apache.org/jira/secure/attachment/12483126/SOLR-1331-branch3x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12742178",
            "date": "2009-08-12T01:57:22+0000",
            "content": "Is the thinking here that we just expose SOLR-1051 type functionality at the core level w/o using file paths \u2013 in which case the caller is responsible for knowing whether or not the index merging makes logical sense; or are we talking about a more user friendly concept of core merging where we sanity check that the schemas are the same \u2013 or even more complex: merge the schemas if they don't have any conflicts (ie: all field/type names in common have identical declarations?)\n\nthe first seems easy and essentially syntactic sugar on top of what was already implemented in SOLR-1051 (get core by name; get index dir from core; merge) but since Shalin opened a new issue for this, i suspect he's got something bigger in mind. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12742328",
            "date": "2009-08-12T12:50:19+0000",
            "content": "Is the thinking here that we just expose SOLR-1051 type functionality at the core level w/o using file paths - in which case the caller is responsible for knowing whether or not the index merging makes logical sense\n\nYes, that is the motivation. However, I was thinking about more safe-guards like acquiring locks on source cores to make sure a writer is not opened on them until the merge completes.\n\nare we talking about a more user friendly concept of core merging where we sanity check that the schemas are the same - or even more complex: merge the schemas if they don't have any conflicts (ie: all field/type names in common have identical declarations?) \n\nThat'd be cool but also more complex. We can do that if users ask for it. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12742330",
            "date": "2009-08-12T13:01:42+0000",
            "content": "However, I was thinking about more safe-guards like acquiring locks on source cores to make sure a writer is not opened on them until the merge completes.\n\nIndexWriter.addIndexes() doesn't require this does it? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12742355",
            "date": "2009-08-12T13:50:06+0000",
            "content": "IndexWriter.addIndexes() doesn't require this does it?\n\nIt does. The javadocs for IndexWriter.addIndexesNoOptimize say:\n\n\nThe index in each Directory must not be changed (opened by a writer) while this method is running.  This method does not acquire a write lock in each input Directory, so it is up to the caller to enforce this.\n\nWe can choose to leave this upto the user of the API or we can try to prevent it ourselves. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12742581",
            "date": "2009-08-12T21:26:27+0000",
            "content": "I was thinking about more safe-guards like acquiring locks on source cores to make sure a writer is not opened on them until the merge completes.\n\nAh... gotcha.  yeah, it makes sense that the existing merge API (that requires you to have an index path) can get away with not worrying about this (making it the callers responsibility) but a more user-freindly api for merging by core name should probably hide this from the user.\n\nanother option might just be to require that the (src) core is UNLOADed first. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872469",
            "date": "2010-05-27T22:05:58+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043702",
            "date": "2011-06-03T16:46:38+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13050355",
            "date": "2011-06-16T11:26:13+0000",
            "content": "Adds a srcCore (multi-valued) parameter through which one or more source core names can be given.\n\nWe use the IW.addIndexes(IndexReader...) method to merge the source core's indexes to the target core's index. Even if an IW is open on the source indexes, using a reader protects against corruption.\n\nNote - although the indexDir param also ends up calling the IW.addIndexes(IndexReader...) method, we cannot protect against open IWs on the directory so the caveat of calling commit before using mergeindexes with indexDir param still applies.\n\nA commit needs to be called after a merge action to see the changes. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13051831",
            "date": "2011-06-20T07:23:17+0000",
            "content": "Added a null check before calling core.close or searcher.decref "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13051864",
            "date": "2011-06-20T09:10:46+0000",
            "content": "Patch ported to branch 3x "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13051868",
            "date": "2011-06-20T09:18:16+0000",
            "content": "Committed revision 1137533 on trunk and 1137555 on branch_3x "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13058962",
            "date": "2011-07-02T02:43:14+0000",
            "content": "Bulk close for 3.3 "
        }
    ]
}