{
    "id": "SOLR-12561",
    "title": "Port ExtractionDateUtil to java.time API",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Improvement",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "The ExtractionDateUtil class in the extraction contrib uses SimpleDateFormatter. \u00a0The Java 8 java.time API is superior; you can find articles out there why. \u00a0One thing that comes to mind is less timezone bugginess \u2013 SOLR-10243. \u00a0Although the API may be a bit baroque IMO (over-engineered). \u00a0Here I'd like to switch over the API and furthermore have the patterns be pre-parsed so that at runtime we don't need to re-parse the patterns.",
    "attachments": {
        "SOLR-12561.patch": "https://issues.apache.org/jira/secure/attachment/12932099/SOLR-12561.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-18T17:06:28+0000",
            "content": "Patch:\n\n\tUse java.time thoroughly; no java.text remnants nor use of Date.  Always Instant.\n\tEnhanced TestExtractionDateUtil a lot to be more thorough to test more of the supported patterns and their idiosyncrasies.  I want to ensure we don't break back-compat here!  These better tests helped uncovered some issues during development of this switch.\n\tTwo of the default patterns had a lowercase \"hh\" for hour of AM/PM instead of \"HH\" for hour of day.  SimpleDateFormat seemed to deal with this but I think they are fundamentally invalid without an AM/PM qualifier.  I switched them to HH.  If someone custom configures the patterns in their solr config, they'll need to use the correct designator.\n\tUse parsed DateTimeFormatter instances instead of Strings in SolrContentHandler and it's factory.  Since order might be significant or might be used for performance reasons, I also switched to LinkedHashSet from HashSet for the impl in ExtractingRequestHandler's config parser.\n\n\n\nThis seems safe for 7.x; any break would seem to be very obscure IMO.  On the other hand, 8.0 will be out this fall or so. ",
            "author": "David Smiley",
            "id": "comment-16548094"
        },
        {
            "date": "2018-07-19T16:54:46+0000",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m  8s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m 39s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m 39s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 39s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m 39s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m 39s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   1m 58s \n  extraction in the patch passed.  \n\n\n  \n   \n  11m 29s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12561 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12932109/SOLR-12561.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / d443ed0 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/145/testReport/ \n\n\n modules \n C: solr/contrib/extraction U: solr/contrib/extraction \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/145/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16549544"
        },
        {
            "date": "2018-07-20T02:01:07+0000",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 32s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 27s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 27s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 27s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 27s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 27s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   0m 49s \n  extraction in the patch passed.  \n\n\n  \n   \n   6m 52s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12561 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12932109/SOLR-12561.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 9d3cc1e \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/147/testReport/ \n\n\n modules \n C: solr/contrib/extraction U: solr/contrib/extraction \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/147/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16550116"
        },
        {
            "date": "2018-07-24T04:24:51+0000",
            "content": "Updated patch:\n\n\tupdated the ref guide\n\toptimized away one of the formats by putting the timezone in an optional element.  Added a test for this.\n\tadded a test for missing 'T' case in ISO-8601 (ish) format\n\tenhanced missing time check when formatting, which will find the \"hh\" likely user config error\n\tEagerly checks the patterns when the formats are built (throwing an exception), thus the user configuring \"date.formats\" eagerly gets notified of the config error instead of silently ignoring the pattern or date at runtime.\n\n\n\nJust to be safe I'll put this stuff in 8.0/master.  I added CHANGES.txt stuff in the patch including upgrade info. ",
            "author": "David Smiley",
            "id": "comment-16553789"
        },
        {
            "date": "2018-07-24T19:33:33+0000",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m 38s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 59s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 59s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m  3s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 59s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 59s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   1m 59s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   2m  3s \n  extraction in the patch passed.  \n\n\n  \n   \n  12m 55s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12561 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12932832/SOLR-12561.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 98d463a \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/150/testReport/ \n\n\n modules \n C: solr solr/contrib/extraction solr/solr-ref-guide U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/150/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16554707"
        },
        {
            "date": "2018-07-25T14:49:53+0000",
            "content": "Actually; hold on...\n\nI think this functionality within ExtractingRequestHandler\u00a0should be dropped altogether in 8.0. \u00a0I argue it's entirely redundant with\u00a0ParseDateFieldUpdateProcessorFactory which was introduced after. \u00a0I think we should clearly document (and even test) how to configure\u00a0 ParseDateFieldUpdateProcessorFactory in a way that is functionally equivalent. \u00a0If needed, we'll enhance\u00a0ParseDateFieldUpdateProcessorFactory to allow for this (I think it may be needed for patterns without a time portion).\n\nLess code to maintain and document. ",
            "author": "David Smiley",
            "id": "comment-16555789"
        }
    ]
}