{
    "id": "SOLR-12357",
    "title": "TRA: Pre-emptively create next collection",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.5"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When adding data to a Time Routed Alias (TRA), we sometimes need to create new collections. \u00a0Today we only do this synchronously \u2013 on-demand when a document is coming in. \u00a0But this can add delays as the documents inbound are held up for a collection to be created. \u00a0And, there may be a problem like a lack of resources (e.g. ample SolrCloud nodes with space)\u00a0that the\u00a0policy framework defines. \u00a0Such problems could be rectified sooner rather than later assume there is log alerting in place (definitely out of scope here).\n\nPre-emptive TRA collection needs a time window configuration parameter, perhaps named something like \"preemptiveCreateWindowMs\". \u00a0If a document's timestamp is within this time window from the end time of the head/lead collection then the collection can be created pre-eptively. \u00a0If no data is being sent to the TRA, no collections will be auto created, nor will it happen if older data is being added. \u00a0It may be convenient to effectively limit this time setting to the smaller of this value and the TRA interval window, which I think is a fine limitation.",
    "attachments": {
        "SOLR-12357.patch": "https://issues.apache.org/jira/secure/attachment/12938599/SOLR-12357.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-26T18:19:40+0000",
            "content": "This is going require some rework of MaintainRoutedAliasCmd. Presently the code there can never delete a collection unless it's creating a collection. With this feature it would then delay deletion for\u00a0timePartionSize - premptiveCreateInterval... which would be significant for long partitions and confusing in general. Also, delete time frames that are not even multiples of partition size probably behave somewhat strangely as it is, with old partitions living somewhat longer than they should. I think the maintain command needs to delete if delete is appropriate and create if create is appropriate independently.\n\nAlso,\u00a0it uses Instant.now() to check if it should create a collection and it will now need to know the triggering date from the document or be sent an implicit \"force create\" attribute. The latter option doesn't sound good because I believe we are relying on this command to be idempotent. If more than one client is updating, several documents might be processed (one by each client) before the results of the command take effect so we can get several\u00a0instances of the maintain command given to the overseer. Synchronization in the overseer should ensure that subsequent instances see the results of the first and then return as a no-op. So I think we need to pass in a \"docDate\" or maybe \"referenceDate\" ",
            "author": "Gus Heck",
            "id": "comment-16524083"
        },
        {
            "date": "2018-06-26T19:40:07+0000",
            "content": "If we do SOLR-12521 first then MaintainRoutedAliasCmd won't need to know a doc's reference date at all?  It'll only be told to explicitly delete or given collection (assuming it exists and is last), or to create a collection after the lead collection assuming the lead collection is a given input. ",
            "author": "David Smiley",
            "id": "comment-16524144"
        },
        {
            "date": "2018-07-10T20:53:47+0000",
            "content": "I think we don't need to tie this issue to SOLR-12521.  Lets just proceed with improving TimeRoutedAliasUpdateProcessor to pre-emptively/asynchronously submit the command.  It's true that SOLR-12521 would be especially nice once this issue, SOLR-12357, is done but not strictly required/dependent.  Until we address SOLR-12521, we'll end up creating a gotcha here wherein the router.autoDeleteAge will be evaluated with a reference point that is further in the future than the current time.  \n\nHere are some suggested docs on preemptive creation:\n\"preemptiveCreateWindowMs\":  If a document arrives with a timestamp that is within this configured number of milliseconds before the end time of the most recent collection, then the next collection will be created asynchronously.  This is said to be preemptive collection creation as it is created ahead of time.  Without this setting, collections are created synchronously and thus block the flow of documents until the collection is created.  Preemptive creation reduces these hiccups.  If set to enough time (perhaps an hour or more) then if there are problems creating a collection, this window of time might be enough to take corrective action.  However during this window of time, the collection is consuming resources without being used, and new documents will tend to be routed through it only to be routed elsewhere.  Also, note that router.autoDeleteAge is currently evaluated relative to the date of a newly created collection, and so you may want to increase the delete age by the preemptive window amount so that the oldest collection isn't deleted too soon. ",
            "author": "David Smiley",
            "id": "comment-16539223"
        },
        {
            "date": "2018-07-19T03:55:59+0000",
            "content": "Ok well the github bot was just a minute or two slower than I expected, sorry for the pull request spam. ",
            "author": "Gus Heck",
            "id": "comment-16548763"
        },
        {
            "date": "2018-07-23T12:57:07+0000",
            "content": "Hmm the bot never did pick\u00a0 up the 2nd pull request it looks like. Here's the link...\u00a0https://github.com/apache/lucene-solr/pull/423 ",
            "author": "Gus Heck",
            "id": "comment-16552801"
        },
        {
            "date": "2018-08-08T03:08:40+0000",
            "content": "Latest changes remove the static fields holding structures that were attempting to guard against the case where multiple clients are sending documents that trigger (redundant) requests to the overseer for extension of the TRA with new collections. The rational is:\n\n\tThe overseer command being invoked is idempotent, it locks on the alias and will ignore excess invocations.\n\tThe frequency of occurrence for this command is normally once per time slice in the TRA (i.e. hourly/daily/monthly) which is very infrequent.\n\tThe window for contention is the time it takes to create a collection (a small number of seconds)\n\tCreating many clients (more than the processors on the receiving machine) and sending many batches simultaneously is an anti-pattern already. So in \"normal\" usage even on very large machines the order of magnitude of excess overseer task is in the \"dozens\" and not the hundreds or thousands that are likely to clog the overseer.\n\n\n\nConceivably, someone feeding many independent (update) requests to many machines with large numbers of CPU's per machine could cause a serious flood, but code to handle that can be added and subsequently maintained if someone demonstrates a need for it. Till then this simplifies things.\n\nI unlinked the first PR, abandoned the royally confused second PR, created a clean 3rd PR and this time the bot picked it up quickly . So now the PR linked in this issue is the right one and has no spurious commits or merge problems. ",
            "author": "Gus Heck",
            "id": "comment-16572603"
        },
        {
            "date": "2018-08-31T03:14:16+0000",
            "content": "PR is looking great!  I'll commit this tomorrow morning after some test runs. ",
            "author": "David Smiley",
            "id": "comment-16598174"
        },
        {
            "date": "2018-09-04T04:05:58+0000",
            "content": "The patch looks good.  As discussed in chat:  I beasted the individual test and it passed (yay).  But there appears to now be a regression with org.apache.solr.update.processor.TimeRoutedAliasUpdateProcessorTest#testSliceRouting   Any idea yet why?  7.5 is expected later this week; it'd be great to finish in time. ",
            "author": "David Smiley",
            "id": "comment-16602585"
        },
        {
            "date": "2018-09-06T05:12:30+0000",
            "content": "I'm busy trying to enhance the TrackingUpdateProcessorFactory used by testSliceRouting to see why there seems to be test cross-talk, and solve it. \u00a0Not sure why this appears to be an issue now and not before but could be circumstantial/luck. ",
            "author": "David Smiley",
            "id": "comment-16605277"
        },
        {
            "date": "2018-09-06T06:11:35+0000",
            "content": "It sort of appears that the\u00a0TrackingUpdateProcessorFactory test utility was buggy in some way, though I'm not sure how exactly. \u00a0It seemed more complex than how I reasoned in my mind it needs to be to do its job, so I wound up simplifying it, as seen in the attached patch. \u00a0This passes so far; in the morning my beasting will be done but I need to sleep as I write this. ",
            "author": "David Smiley",
            "id": "comment-16605315"
        },
        {
            "date": "2018-09-07T03:38:56+0000",
            "content": "Commit 21d130c3edf8bfb21a3428fc95e5b67d6be757e7 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=21d130c ]\n\nSOLR-12357: TRA preemptiveCreateMath option.\nSimplified test utility TrackingUpdateProcessorFactory.\nReverted some attempts the TRA used to make in avoiding overseer communication (too complicated).\nCloses #433 ",
            "author": "ASF subversion and git services",
            "id": "comment-16606671"
        },
        {
            "date": "2018-09-07T03:46:15+0000",
            "content": "Commit bfafeb7cd64e34940eca7a688596f63c14b192fc in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bfafeb7 ]\n\nSOLR-12357: TRA preemptiveCreateMath option.\nSimplified test utility TrackingUpdateProcessorFactory.\nReverted some attempts the TRA used to make in avoiding overseer communication (too complicated).\nCloses #433\n\n(cherry picked from commit 21d130c3edf8bfb21a3428fc95e5b67d6be757e7) ",
            "author": "ASF subversion and git services",
            "id": "comment-16606678"
        },
        {
            "date": "2018-09-07T03:49:24+0000",
            "content": "What I committed is evolved a little; just simplifying the\u00a0TrackingUpdateProcessorFactory a bit further. \u00a0And I fixed a stupid temporary\u00a0change I had on the group name in the test so that we name the group after the running test and not a constant. \u00a0Beasting yielded no problems so I'm feeling pretty good about it. ",
            "author": "David Smiley",
            "id": "comment-16606680"
        },
        {
            "date": "2018-09-07T07:49:23+0000",
            "content": "Commit 21d130c3edf8bfb21a3428fc95e5b67d6be757e7 in lucene-solr's branch refs/heads/jira/http2 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=21d130c ]\n\nSOLR-12357: TRA preemptiveCreateMath option.\nSimplified test utility TrackingUpdateProcessorFactory.\nReverted some attempts the TRA used to make in avoiding overseer communication (too complicated).\nCloses #433 ",
            "author": "ASF subversion and git services",
            "id": "comment-16606809"
        },
        {
            "date": "2018-10-15T08:07:24+0000",
            "content": "With this issue committed, shouldn't\u00a0the bullet below\u00a0be removed from the ref guide's TRA page?:\n\nImprovement Possibilities\n\n[...]\n\n\tNew collections ought to be created preemptively, as an option, to avoid delaying a document that does not yet have a collection to go to.\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16649870"
        },
        {
            "date": "2018-10-16T01:00:28+0000",
            "content": "Good catch \u2013 yes! \u00a0I should just commit this simple change. ",
            "author": "David Smiley",
            "id": "comment-16651013"
        }
    ]
}