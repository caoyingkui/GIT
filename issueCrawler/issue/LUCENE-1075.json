{
    "id": "LUCENE-1075",
    "title": "Possible thread hazard in IndexWriter.close(false)",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "2.3",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Spinoff from this thread:\n\n  http://www.gossamer-threads.com/lists/lucene/java-dev/55391\n\nOn reviewing the code I found one case where an aborted merge (from\ncalling close(false)) could write to files that a newly opened\nIndexWriter would also try to write to.\n\nI strengthened an existing test case in TestConcurrentMergeScheduler\nto tickle this case, and also modified MockRAMDirectory to throw an\nIOException if ever a file besides segments.gen is overwritten.\n\nHowever, strangely, I can't get an unhandled exception to occur during\nthe test and I'm not sure why.  Still I think this is a good defensive\ncheck so we should commit it.",
    "attachments": {
        "LUCENE-1075.patch": "https://issues.apache.org/jira/secure/attachment/12370843/LUCENE-1075.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-12-03T15:35:12+0000",
            "content": "Attached patch.  I'll commit in 1 or 2 days. ",
            "author": "Michael McCandless",
            "id": "comment-12547873"
        },
        {
            "date": "2007-12-04T22:19:44+0000",
            "content": "I just committed this! ",
            "author": "Michael McCandless",
            "id": "comment-12548438"
        }
    ]
}