{
    "id": "LUCENE-4236",
    "title": "clean up booleanquery conjunction optimizations a bit",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "After LUCENE-3505, I want to do a slight cleanup:\n\n\tcompute the term conjunctions optimization in scorer(), so its applied even if we have optional and prohibited clauses that dont exist in the segment (e.g. return null)\n\tuse the term conjunctions optimization when optional.size() == minShouldMatch, as that means they are all mandatory, too.\n\tdon't return booleanscorer1 when optional.size() == minShouldMatch, because it means we have required clauses and in general BS2 should do a much better job (e.g. use advance).",
    "attachments": {
        "LUCENE-4236.patch": "https://issues.apache.org/jira/secure/attachment/12537115/LUCENE-4236.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-19T02:01:43+0000",
            "content": "updated patch with a code comment ",
            "author": "Robert Muir",
            "id": "comment-13417978"
        },
        {
            "date": "2012-07-19T02:01:53+0000",
            "content": "cool nice little optimization! looks good to me while you could add that minShouldMatch only applies to optional scorers so nobody needs to hunt that down again ",
            "author": "Simon Willnauer",
            "id": "comment-13417980"
        },
        {
            "date": "2012-07-19T02:02:57+0000",
            "content": "I removed reference to the SOLR issue, i thought for some reason it was a performance problem, but that was just faulty brain cells (its just some unrelated parsing bug).\n\nStill it seems like apps like Solr might be generating these disjunctions with minShouldmatch = optional.size() and we should handle them as conjunctions always. ",
            "author": "Robert Muir",
            "id": "comment-13417982"
        },
        {
            "date": "2012-07-19T06:18:39+0000",
            "content": "The previous patch had a bug: coord was computed for the conjunction as scorers.length/scorers.length but it should be scorers.length/maxCoord (in the case of optional clauses that happened to not exist in the segment). \n\nRandom testing is great.\n\nThis patch removes the specialized TermConjunctionScorer, making the TermConjunctionScorer algorithm ConjunctionScorer. I added a method to Scorer so that any scorer can return an estimated cost of how many postings it will read:\n\n\tterm: docFreq()\n\tdisjunction: sum(cost)\n\tconjunction/phrase: min(cost) * numSubs\n\n\n\nand so on, which ConjunctionScorer uses.\n\nNo perf degradation... refactoring continues ",
            "author": "Robert Muir",
            "id": "comment-13418102"
        },
        {
            "date": "2012-07-19T06:29:36+0000",
            "content": "Current benchmarks with the generalized conjunction scorer:\n\n                Task   QPS trunkStdDev trunk   QPS patchStdDev patch      Pct diff\n              Phrase       15.69        0.51       15.29        0.30   -7% -    2%\n          AndHighMed       44.35        0.55       43.34        0.63   -4% -    0%\n              Fuzzy1       83.95        2.84       83.05        3.35   -8% -    6%\n             Respell       75.00        3.43       74.30        3.79  -10% -    9%\n        SloppyPhrase        7.05        0.44        7.00        0.17   -8% -    8%\n      TermBGroup1M1P       58.41        1.15       58.17        0.96   -3% -    3%\n         TermGroup1M       30.72        0.14       30.73        0.32   -1% -    1%\n              Fuzzy2       33.81        1.67       33.87        1.26   -8% -    9%\n        TermBGroup1M       48.73        0.34       48.89        0.27    0% -    1%\n         AndHighHigh        8.04        0.16        8.09        0.10   -2% -    3%\n            PKLookup      296.11        2.98      298.19        3.29   -1% -    2%\n                Term      109.66        3.70      110.69        2.76   -4% -    7%\n            Wildcard       61.99        0.80       63.00        2.53   -3% -    7%\n             Prefix3       70.64        1.63       72.07        3.21   -4% -    9%\n           OrHighMed       21.48        1.29       21.94        1.05   -8% -   13%\n          OrHighHigh        8.48        0.47        8.68        0.40   -7% -   13%\n            SpanNear        7.70        0.37        7.96        0.41   -6% -   14%\n              IntNRQ        8.89        0.52        9.40        0.96  -10% -   23%\n\n\n\nLuceneutil doesnt yet benchmark more complicated BQs (e.g. nested ones, or minShouldMatch, or whatever).\nSo we don't see any benefit in these benchmarks. ",
            "author": "Robert Muir",
            "id": "comment-13418107"
        },
        {
            "date": "2012-07-19T10:20:44+0000",
            "content": "Updated patch... I tried to speed up BS2 some more here in this patch:\n\n               Task   QPS trunkStdDev trunk   QPS patchStdDev patch      Pct diff\n             Respell       76.69        1.75       74.06        1.36   -7% -    0%\n          AndHighMed       89.69        1.85       86.70        2.83   -8% -    1%\n            SpanNear        2.75        0.09        2.70        0.07   -7% -    4%\n              Fuzzy2       34.94        0.66       34.46        0.54   -4% -    2%\n              Fuzzy1      115.28        2.24      113.81        1.59   -4% -    2%\n         AndHighHigh       12.97        0.27       12.84        0.34   -5% -    3%\n        TermBGroup1M       47.87        0.27       47.42        0.51   -2% -    0%\n      TermBGroup1M1P       53.84        1.08       53.35        0.81   -4% -    2%\n         TermGroup1M       42.55        0.51       42.36        0.56   -2% -    2%\n            PKLookup      298.51        0.80      297.81        2.68   -1% -    0%\n            Wildcard       20.66        1.13       20.75        1.09   -9% -   11%\n              Phrase        6.64        0.26        6.67        0.31   -7% -    9%\n             Prefix3       32.82        1.69       33.07        1.72   -9% -   11%\n        SloppyPhrase       26.12        0.38       26.46        0.42   -1% -    4%\n              IntNRQ       11.24        1.55       11.39        1.38  -21% -   31%\n                Term      138.34        0.93      141.27        8.71   -4% -    9%\n          OrHighHigh        7.28        0.38        7.71        0.50   -5% -   19%\n           OrHighMed       20.29        1.21       21.81        1.61   -6% -   22%\n\n\n\nIt could use some code comments and cleanup but its time for a break  ",
            "author": "Robert Muir",
            "id": "comment-13418202"
        },
        {
            "date": "2012-08-07T03:41:33+0000",
            "content": "rmuir20120906-bulk-40-change ",
            "author": "Robert Muir",
            "id": "comment-13429720"
        },
        {
            "date": "2012-11-27T18:36:38+0000",
            "content": "+1\n\nThis patch looks great!\n\nIt cleans up BS2 and specialized term conjunction scorer, and makes more accurate decisions about which sub-scorer to enumerate first (no more first docID heuristic).\n\nWe could also use the cost estimate to sometimes let BooleanScorer take MUST clauses. ",
            "author": "Michael McCandless",
            "id": "comment-13504825"
        },
        {
            "date": "2012-11-27T18:39:02+0000",
            "content": "Maybe we should make it .estimateHitCount instead of estimateCost, so it's more explicit? ",
            "author": "Michael McCandless",
            "id": "comment-13504827"
        },
        {
            "date": "2012-11-27T19:17:00+0000",
            "content": "There's a lot of things i'm not happy with in the patch, i think it was more of an exploration of ideas.\n\nI think we could split out the cost/hitcount/conjunctionscorer idea into a separate issue as a start?\n\nThis would keep things contained. ",
            "author": "Robert Muir",
            "id": "comment-13504854"
        },
        {
            "date": "2012-12-10T15:08:22+0000",
            "content": "Parts of this issue are contained in LUCENE-4607. \n\nMaybe we should make it .estimateHitCount instead of estimateCost, so it's more explicit?\n\nI changed this to estimateDocCount since its now on DISI ",
            "author": "Simon Willnauer",
            "id": "comment-13527989"
        },
        {
            "date": "2013-07-23T18:44:52+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717081"
        },
        {
            "date": "2014-04-16T12:54:52+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970910"
        },
        {
            "date": "2014-05-20T18:07:58+0000",
            "content": "Patch just synced to trunk. Some of the previous stuff in it has been committed.\n\nIts still not ready to be committed: there is a lot of messy/bogus stuff I did. Will maybe make a branch and try to clean it up more. ",
            "author": "Robert Muir",
            "id": "comment-14003752"
        },
        {
            "date": "2014-05-20T19:24:28+0000",
            "content": "Commit 1596372 from Robert Muir in branch 'dev/branches/lucene4236'\n[ https://svn.apache.org/r1596372 ]\n\nLUCENE-4236: create branch to try to cleanup ",
            "author": "ASF subversion and git services",
            "id": "comment-14003858"
        },
        {
            "date": "2014-05-20T19:24:56+0000",
            "content": "Commit 1596373 from Robert Muir in branch 'dev/branches/lucene4236'\n[ https://svn.apache.org/r1596373 ]\n\nLUCENE-4236: commit current state ",
            "author": "ASF subversion and git services",
            "id": "comment-14003860"
        },
        {
            "date": "2014-05-21T02:15:16+0000",
            "content": "Commit 1596440 from Robert Muir in branch 'dev/branches/lucene4236'\n[ https://svn.apache.org/r1596440 ]\n\nLUCENE-4236: try to make more palatable ",
            "author": "ASF subversion and git services",
            "id": "comment-14004229"
        },
        {
            "date": "2014-05-21T02:37:26+0000",
            "content": "Commit 1596442 from Robert Muir in branch 'dev/branches/lucene4236'\n[ https://svn.apache.org/r1596442 ]\n\nLUCENE-4236: move all crazies into one place ",
            "author": "ASF subversion and git services",
            "id": "comment-14004240"
        },
        {
            "date": "2014-05-21T03:46:10+0000",
            "content": "I tried to clean this up as much as I can...\n\nOR tasks look fine (with BS1 disabled on both checkouts):\n\n\n                    Task   QPS trunk      StdDev   QPS patch      StdDev                Pct diff\n            OrNotHighLow      958.58      (2.1%)      988.37      (2.7%)    3.1% (  -1% -    8%)\n              OrHighHigh       18.76      (8.2%)       19.83     (15.1%)    5.7% ( -16% -   31%)\n               OrHighMed       43.12      (8.3%)       45.64     (15.3%)    5.9% ( -16% -   32%)\n               OrHighLow       44.76      (9.1%)       47.92     (16.9%)    7.1% ( -17% -   36%)\n            OrNotHighMed      168.34      (3.4%)      189.12      (4.3%)   12.3% (   4% -   20%)\n           OrNotHighHigh       45.16      (3.5%)       60.43     (12.2%)   33.8% (  17% -   51%)\n           OrHighNotHigh       27.07      (3.4%)       36.27     (12.6%)   34.0% (  17% -   51%)\n            OrHighNotMed       79.81      (3.7%)      111.10     (15.3%)   39.2% (  19% -   60%)\n            OrHighNotLow       96.78      (4.0%)      137.49     (17.1%)   42.1% (  20% -   65%)\n\n\n\nIt would also be nice to run the \"eg.filter.tasks\" but these are currently broken in luceneutil. ",
            "author": "Robert Muir",
            "id": "comment-14004300"
        },
        {
            "date": "2014-05-21T16:00:07+0000",
            "content": "Commit 1596606 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1596606 ]\n\nLUCENE-4236: add a new test for crazy corner cases of coord() handling ",
            "author": "ASF subversion and git services",
            "id": "comment-14004826"
        },
        {
            "date": "2014-05-21T16:01:57+0000",
            "content": "Commit 1596607 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1596607 ]\n\nLUCENE-4236: add a new test for crazy corner cases of coord() handling ",
            "author": "ASF subversion and git services",
            "id": "comment-14004828"
        },
        {
            "date": "2014-05-21T16:08:34+0000",
            "content": "Here's the patch. I think its ready.\n\nI committed the new test already to trunk/4.x. ",
            "author": "Robert Muir",
            "id": "comment-14004839"
        },
        {
            "date": "2014-05-21T16:46:29+0000",
            "content": "+1, this is a great cleanup: more understandable than what we have today.\n\nMaybe we should leave FilterScorer package private until there's a need for public? ",
            "author": "Michael McCandless",
            "id": "comment-14004889"
        },
        {
            "date": "2014-05-21T16:49:13+0000",
            "content": "Good idea. If we have a need somewhere else we can open it up. ",
            "author": "Robert Muir",
            "id": "comment-14004890"
        },
        {
            "date": "2014-05-21T18:24:41+0000",
            "content": "Commit 1596640 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1596640 ]\n\nLUCENE-4236: cleanup/optimize BooleanScorer in-order creation ",
            "author": "ASF subversion and git services",
            "id": "comment-14005037"
        },
        {
            "date": "2014-05-21T18:40:06+0000",
            "content": "Commit 1596646 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1596646 ]\n\nLUCENE-4236: cleanup/optimize BooleanScorer in-order creation ",
            "author": "ASF subversion and git services",
            "id": "comment-14005070"
        },
        {
            "date": "2014-05-21T18:56:12+0000",
            "content": "Robert Muir great job!\n\nbtw, i wonder if Solr is allowed to search with BooleanScorer (term-at-time)? ",
            "author": "Mikhail Khludnev",
            "id": "comment-14005094"
        }
    ]
}