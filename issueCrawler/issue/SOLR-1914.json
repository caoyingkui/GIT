{
    "id": "SOLR-1914",
    "title": "phps and json outputs illegal numeric values for NaN and +/- Infinity",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [
            "clients - php"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "(first of all Solr Rocks!)\niam runnig an e-comerce application with dynamic filteset, depend on selected categories.\neverything works fine and stable but today i found out that ther is a strange case:\n\ni guess around 5000 strings in my app used as facet filter. There is one String \"transluzentes Acryl\" and even the english  translation \"Translucent acrylics\" are not working.\n\nQUERY:\nhttp://ff01:8983/solr/core1/select/?q=*:*&fq=shop_id:10 AND language:2 AND category_1:\"Badewannen\" AND material:\"transluzentes Acryl\"&facet=on&facet.limit=400&facet.field=category_1&facet.field=category_2&facet.field=manu&facet.field=length&facet.field=width&facet.field=height&facet.field=color&facet.field=material&facet.field=delivery&facet.field=attributes&facet.mincount=1&facet.sort=lex&facet.method=fc&stats=true&stats.field=price&start=0&rows=50&sort=sort+desc&fl=name,model_nr,image,url,manu,delivery,in_stock,serie,price,uvp,nav_id,template,option,name,model_nr,image,url,manu,delivery,in_stock,serie,price,uvp,nav_id,template,option&wt=phps&V=1.0&version=2.2\n\nRESPONSE: as xml and php works fine! but json , phps ends up like this.\n.....s:2:\"fq\";s:79:\"shop_id:10 AND language:2 AND category_1:\"Badewannen\" AND material:\"transluzentes Acryl\"\";......\nsee that double qoutes at the end.\n\nThat happens only on this strings or Docs because even the english Docs fails. I though its may be a matter of encoding, so i added a transformer in the DIH which  replaced these strings with \"Hello World\".\nFaces on \"Hello Wolrd\" fails. Other Facet Strings with white spaces, special chars and so on never fail. \n\nif i add brackets on the fq \n...q=:&fq=shop_id:10 AND language:2 AND category_1:\"Badewannen\" AND material:\"transluzentes Acryl\"&facet=on&...\nit ends up with a double }}\ns:2:\"fq\";s:79:\"shop_id:20 AND language:2 AND category_1:\"Badewannen\" AND material:\"Hallo Welt\"\";}}",
    "attachments": {
        "ff01.xml": "https://issues.apache.org/jira/secure/attachment/12444647/ff01.xml",
        "SOLR-1949.patch": "https://issues.apache.org/jira/secure/attachment/12446150/SOLR-1949.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12867522",
            "date": "2010-05-14T15:12:53+0000",
            "content": "It's not clear if this is a Solr bug, or just some bug in the e-commerce app.\n\nThe double quote at the end looks fine... one quote is literally part of the string, the other quote is from the phps encoding.  The first string with length (s:79) doesn't look like it matches that actual string value, but I assume maybe you edited the example by hand. "
        },
        {
            "author": "Sascha Jovanoski",
            "id": "comment-12868128",
            "date": "2010-05-17T08:24:57+0000",
            "content": "thx so far,\n\ni did some tests. i will  attach the full request/response at the end.\n\ni guess if i do a request and get an response including 3 hits its fine so far.\n\n\t&wt=phps php(5) unserialize it's FALSE\n\t&wt=json  php(5) json_decode it's FALSE\n\t&wt=xml  php(5) simplexml_load_string it's TRUE\n\n\n\ni cant imagine  an app bug, so i did a standalone test.\nthe doccontents should be valid UTF-8, database is complete UTF-8, indexing is by DIH mysql direct.\nalso tried some characters encodings before\n\ni also can choose wt=xml but the facet-names in the result of  simplexml_load_string ar gone only a numeric key and the count will left from the facets.\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12868270",
            "date": "2010-05-17T16:25:43+0000",
            "content": "One issue I see is an NaN in the JSON response... unfortunately the JSON standard has no way of representing Nan, +/-Inf.  We should encode this as a string instead.\nAnyone know if PHPS has a numeric representation for these values?\n\nSascha, is this the only incorrect part of the JSON / PHPS output or do you see any other issues? "
        },
        {
            "author": "Sascha Jovanoski",
            "id": "comment-12868439",
            "date": "2010-05-17T23:13:53+0000",
            "content": "hi Yonik, \n\nyes you are right! if i replace or escape this NaN, erverthing works fine and Solr still rocks.\ni was so focused on that strings and maybe wrong app encodings that it took me until today to see that unescaped NaN.\n\ni played around with that  stats but i cant get this error simulate on other queries, i mean my problem case include three items with the same price.\nI did other request which response with items with the same price but i got  a stddev of 0.0. that looks strange from outside the code.\n\nso i dont see any other issues in my app, thanks a lot !!!!!\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12874575",
            "date": "2010-06-02T13:34:08+0000",
            "content": "Looks like this was sort of fixed for Python & Ruby back in SOLR-449.\nI haven't had much luck finding a way to express them in PHP... I guess the default for all JSON subclasses should just write as a String. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12874635",
            "date": "2010-06-02T16:15:23+0000",
            "content": "Here's a patch w/ test that writes the special values as a String, in the format the Java uses.\n\"NaN\",\"-Infinity\",\"Infinity\".  I plan on committing shortly to 4.0 and 3.1 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12979002",
            "date": "2011-01-07T22:50:26+0000",
            "content": "Updating summary to clarify root of problem (and fix already committed) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12979003",
            "date": "2011-01-07T22:51:31+0000",
            "content": "Sascha: as Yonik already noted, he fixed this in teh 3x (and trunk) branches \u2013 the fix does not exist in Solr 1.4.1, or on the (now abandoned) 1.5 branch.\n\nif you have other questions - please send them to the solr-user mailing list "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013244",
            "date": "2011-03-30T15:45:58+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}