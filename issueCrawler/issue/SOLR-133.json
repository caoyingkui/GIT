{
    "id": "SOLR-133",
    "title": "change XmlUpdateRequestHandler to use StAX instead of XPP",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "there has been discussion of using StAX for XML parsing of updates instead of XPP ... opening an issue to track it as a possible improvement  (orriginally mentioned in SOLR-61, but that task was more specificly about refactoring the existing code)",
    "attachments": {
        "SOLR-133-XmlUpdateRequestHandler-StAX-139.patch": "https://issues.apache.org/jira/secure/attachment/12350888/SOLR-133-XmlUpdateRequestHandler-StAX-139.patch",
        "SOLR-133.diff": "https://issues.apache.org/jira/secure/attachment/12350280/SOLR-133.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "J.J. Larrea",
            "id": "comment-12469603",
            "date": "2007-02-01T22:43:05+0000",
            "content": "It would be useful if there first were some consensus as to what the goals are for making a change to the XML Update Handler; some possibilities I can think of include:\n\n1) To use standards-based rather than non-standards-based technologies as much as possible\n2) To use as few different XML technologies (and coding styles related to the technology) as possible\n3) To reduce as much as possible the complexity of code needed for interpreting XML command and/or configuration streams\n4) To lower resource consumption and limitations for XML handling, e.g. stream-based rather than random-access\n\nBy all means add to that list, prioritize, and remove goals which are not seen as important.\n\nThen it seems to me the question would be how many of those goals are addressed by changing XML Update Handler to stAX, vs. other technologies.  One might at the same time also want to look at other places where SOLR decodes XML such as config files, to see if there can be more commonality rather than continued isolation. "
        },
        {
            "author": "Thorsten Scherler",
            "id": "comment-12469968",
            "date": "2007-02-03T18:06:27+0000",
            "content": "Refactoring the XmlUpdateRequestHandler to use constant variables that can be reused by the Stax implementation. Adding a stax implementation for the XmlUpdateRequestHandler. Till now I get an error about missing content stream.\n\nNOTE:\nTo make the version compile you need to download the JSR 173 API from \nhttp://www.ibiblio.org/maven2/stax/stax-api/1.0/stax-api-1.0.jar \nand copy it to $SOLR_HOME/lib/. "
        },
        {
            "author": "Thorsten Scherler",
            "id": "comment-12469971",
            "date": "2007-02-03T18:11:45+0000",
            "content": "It seems the diff does not show the other libs you need to compile. \n\nYou can download them from:\nhttps://svn.apache.org/repos/asf/forrest/trunk/whiteboard/dispatcher/lib/ "
        },
        {
            "author": "Thorsten Scherler",
            "id": "comment-12469999",
            "date": "2007-02-03T21:55:08+0000",
            "content": "Fixing bugs from first version.\n\nAdding workaround for problem with direct use of the handler (never gets a stream).\nhttp://www.mail-archive.com/solr-dev@lucene.apache.org/msg02759.html\nby patching the SolrUpdateServlet\n\nPlease test, it works fine for me. "
        },
        {
            "author": "Thorsten Scherler",
            "id": "comment-12470001",
            "date": "2007-02-03T22:05:48+0000",
            "content": "@Larrea\n1) standards-based\n2) agree\n3) agree\n4) agree\n\nStAX is become a standard. Not as fast as SAX but nearly. IMO the StAX implementation is as easy to follow as the xpp, personally I think even easier. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12472161",
            "date": "2007-02-11T23:55:53+0000",
            "content": "Thorsten - this looks good.  I cleaned it up a bit and modified it to use SOLR-139.  The big changes I made are:\n\n\n\tIt uses two spaces (not tabs or 4 spaces)\n\tIt overwrites the existing XmlUpdateRequestHandler rather then adding a parallel one.  (We should either use StAX or XPP, but not both)\n\tIt breaks out the xml parsing so that parsing a single document is an easily testable chunk:\n\n\n\n  SolrDocument readDoc(XMLStreamReader parser)\n\n\n\tIt adds a test to make sure it reads documents correctly\n\tSince it is the XmlUpdateRequestHandler all the other tests that insert documents use it.\n\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12474337",
            "date": "2007-02-20T02:32:22+0000",
            "content": "haven't reviewed any patches, but to address some of J.J.s earlier points: i assume the goal would be to move to STaX because it is reportadly as fast as XPP but is also the new standard for \"fast\" stream based processing.\n\nAs for replacing other XML parsing code in the solr code base \u2013 XML parsing can probably be divided into two lumps:\n 1) processing input streams for updates (or more generally: \"requests with ContentStreams\" based on some of Ryan's recent patches) \n 2) config file parsing\n\nwhile STaX sounds like it makes a lot of sense for #1, sticking with DOM parsing for #2 seems like a good idea ... using XPath to access arbitrary sections of config information is extremely handy and the performance issues with initialization from the config DOM doens't seem like a big issue. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12474892",
            "date": "2007-02-22T00:34:31+0000",
            "content": "fixed the document parser to handle fields with CDATA.  \n\nswitch (event) {\n      // Add everything to the text\n      case XMLStreamConstants.SPACE:\n      case XMLStreamConstants.CDATA:\n      case XMLStreamConstants.CHARACTERS:\n        text.append( parser.getText() );\n        break;\n... "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12478325",
            "date": "2007-03-06T09:25:50+0000",
            "content": "updated to work with most recent SOLR-139 "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12486195",
            "date": "2007-04-03T01:19:32+0000",
            "content": "Applies cleaner with trunk - it still depends on SOLR-193 and SOLR-139, so \"clean\" may  not be the best description. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492615",
            "date": "2007-04-30T00:40:46+0000",
            "content": "applies (almost cleanly) with trunk + SOLR-193 + SOLR-139 "
        },
        {
            "author": "Thorsten Scherler",
            "id": "comment-12494005",
            "date": "2007-05-07T09:53:39+0000",
            "content": "What is missing with this issue, where can I give a helping had. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12494059",
            "date": "2007-05-07T15:23:41+0000",
            "content": "If you have SOLR-193 + SOLR-139, i think most things are good...\n\nWe could easily remove the SOLR-139 dependency.\n\nI think after solr1.2 (assuming it is sometime soon),  this and SOLR-193 would be good to include. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12494559",
            "date": "2007-05-09T19:05:49+0000",
            "content": "From Yonik on SOLR-231\n\n>> Solr should assume UTF-8 encoding unless the contentType says otherwise.\n> \n> In general yes (when Solr is asked for a Reader).\n> For XML, we should probably give the parser an InputStream.\n> http://www.nabble.com/double-curl-calls-in-post.sh--tf2287469.html#a6369448\n> \n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12501118",
            "date": "2007-06-04T07:09:24+0000",
            "content": "Updated to apply against trunk and removed the SOLR-139 dependency.\n\nNot it just relies on SOLR-193.   "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12504508",
            "date": "2007-06-14T02:31:29+0000",
            "content": "Extracts the request parsing and update handling into two parts.\n\nThis adds an \"UpdateRequestProcessor\" that handles the actual updating.  This offers a good place for authentication / document transformation etc.  This can all be reuse if we have a JSONUpdate handler.  The UpdateRequestProcessor can be changed using an init param in solrconfig,xml:\n\n  <requestHandler name=\"/update\" class=\"solr.XmlUpdateRequestHandler\" >\n    <str name=\"update.processor.class\">org.apache.solr.handler.UpdateRequestProcessor</str>\n  </requestHandler>\n\nMoved the XPP version to XppUpdateRequestHandler and mapped it to:\n  <requestHandler name=\"/update/xpp\" class=\"solr.XppUpdateRequestHandler\" />\n\nMy initial (not accurate) tests don't show any significant time difference between the two \u2013 we should keep both in the code until we are confident the new one is stable.\n\n\n\t- - - -\n\n\n\nThorsten - can you check if the STAX includes are all in good shape?  Is it ok to use:\n import javanet.staxutils.BaseXMLInputFactory;\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12504535",
            "date": "2007-06-14T04:23:59+0000",
            "content": "dooh \u2013 wrong issue "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12505003",
            "date": "2007-06-15T02:09:14+0000",
            "content": "updated to apply with trunk + SOLR-262\n\nChanged it to sit next to XmlUpdateRequestHandler \u2013 this way it can be evaluated next to XmlUpdateRequestHandler  rather then replace it.\n\nThe UpdateRequestProcessor interface needs review, but I think it can be done CTR... "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12509322",
            "date": "2007-06-30T18:53:16+0000",
            "content": "this is the default implementation since r552198 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12579140",
            "date": "2008-03-16T03:23:52+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked \"Resolved\" and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.3 as of today 2008-03-15\n\n\n\nThe Fix Version for all 29 issues found was set to 1.3, email notification was suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this (hopefully) unique string: batch20070315hossman1\n "
        }
    ]
}