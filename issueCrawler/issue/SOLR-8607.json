{
    "id": "SOLR-8607",
    "title": "The Schema API refuses to add new fields that match existing dynamic fields",
    "details": {
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "5.3.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "If the all catch dynamic field '*' is present in a managed schema collection, then any field creation requests through Schema API return the confusing/weird error \"Field ${FIELD_NAME} already exists\".\n\nSchema of a test collection: \n\n\ncurl -X GET http://localhost:8983/solr/testSQLQueries-eventsim/schema\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":0},\n  \"schema\":{\n    \"name\":\"example\",\n    \"version\":1.5,\n    \"uniqueKey\":\"id\",\n    \"fieldTypes\":[{\n        \"name\":\"boolean\",\n        \"class\":\"solr.BoolField\",\n        \"sortMissingLast\":true},\n      {\n        \"name\":\"double\",\n        \"class\":\"solr.TrieDoubleField\",\n        \"positionIncrementGap\":\"0\",\n        \"precisionStep\":\"0\"},\n      {\n        \"name\":\"float\",\n        \"class\":\"solr.TrieFloatField\",\n        \"positionIncrementGap\":\"0\",\n        \"precisionStep\":\"0\"},\n      {\n        \"name\":\"int\",\n        \"class\":\"solr.TrieIntField\",\n        \"positionIncrementGap\":\"0\",\n        \"precisionStep\":\"0\"},\n      {\n        \"name\":\"long\",\n        \"class\":\"solr.TrieLongField\",\n        \"precisionStep\":\"6\"},\n      {\n        \"name\":\"string\",\n        \"class\":\"solr.StrField\",\n        \"sortMissingLast\":true},\n      {\n        \"name\":\"tdate\",\n        \"class\":\"solr.TrieDateField\",\n        \"positionIncrementGap\":\"0\",\n        \"precisionStep\":\"6\"}],\n    \"fields\":[{\n        \"name\":\"_root_\",\n        \"type\":\"string\",\n        \"indexed\":true,\n        \"stored\":false},\n      {\n        \"name\":\"_version_\",\n        \"type\":\"long\",\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"id\",\n        \"type\":\"string\",\n        \"indexed\":true,\n        \"required\":true,\n        \"stored\":true}],\n    \"dynamicFields\":[{\n        \"name\":\"*_tdt\",\n        \"type\":\"tdate\",\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_txt\",\n        \"type\":\"string\",\n        \"multiValued\":true,\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_ss\",\n        \"type\":\"string\",\n        \"multiValued\":true,\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_ii\",\n        \"type\":\"int\",\n        \"multiValued\":true,\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_ls\",\n        \"type\":\"long\",\n        \"multiValued\":true,\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_i\",\n        \"type\":\"int\",\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_s\",\n        \"type\":\"string\",\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_l\",\n        \"type\":\"long\",\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_b\",\n        \"type\":\"boolean\",\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_f\",\n        \"type\":\"float\",\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*_d\",\n        \"type\":\"double\",\n        \"indexed\":true,\n        \"stored\":true},\n      {\n        \"name\":\"*\",\n        \"type\":\"string\",\n        \"indexed\":true,\n        \"stored\":true}],\n    \"copyFields\":[]}}\n\n\n\nCreate new field 'userId' using Schema API\n\n\ncurl -X POST -H \"Content-type:application/json\" --data-binary '{\"add-field\": {\"name\":\"userId\",\"type\":\"string\",\"indexed\":\"true\",\"stored\":\"true\"}}' http://localhost:8983/solr/testSQLQueries-eventsim/schema\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":6},\n  \"errors\":[{\n      \"add-field\":{\n        \"name\":\"userId\",\n        \"type\":\"string\",\n        \"indexed\":\"true\",\n        \"stored\":\"true\"},\n      \"errorMessages\":[\"Field 'userId' already exists.\\n\"]}]}\n\n\n\nThe field 'userId' does not exist in the schema but it is also not possible to add this field because of the dynamic field '*'.\n\nWhile one should never define dynamic field '*' in a managed schema, the Schema API should atleast return some useful error message.",
    "attachments": {
        "SOLR-8607.patch": "https://issues.apache.org/jira/secure/attachment/12785516/SOLR-8607.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-29T01:45:07+0000",
            "author": "Steve Rowe",
            "content": "I see this same problem for other dynamic fields, not just the catch all *.\n\nTo reproduce:\n\n\n$ bin/solr -e schemaless\n$ curl http://localhost:8983/solr/gettingstarted/schema\n[...]\n\"dynamicFields\":[...,{\"name\":\"*_txt\", \"type\":\"text_general\", \"indexed\":true, \"stored\":true},\n[...] \n$ curl -X POST -H \"Content-type:application/json\" --data-binary '{\"add-field\": {\"name\":\"new_txt\",\"type\":\"string\",\"indexed\":\"true\",\"stored\":\"true\"}}' http://localhost:8983/solr/gettingstarted/schema\n[...]\n\"errorMessages\":[\"Field 'new_txt' already exists.\\n\"]}]}\n\n ",
            "id": "comment-15122720"
        },
        {
            "date": "2016-01-29T02:00:47+0000",
            "author": "Steve Rowe",
            "content": "This workaround allowed me to create the new_txt field: first delete the matching dynamic field, then add the new field, then re-add the deleted dynamic field, all in one request:\n\n\n$ curl -X POST -H \"Content-type:application/json\" --data-binary '{\n\"delete-dynamic-field\":{\"name\":\"*_txt\"},\n\"add-field\": {\"name\":\"new_txt\",\"type\":\"string\",\"indexed\":\"true\",\"stored\":\"true\"},\n\"add-dynamic-field\":{\"name\":\"*_txt\", \"type\":\"text_general\", \"indexed\":true, \"stored\":true}}' \\\nhttp://localhost:8983/solr/gettingstarted/schema\n\n{\"responseHeader\": {\"status\":0, \"QTime\":81}}\n\n$ curl http://localhost:8983/solr/gettingstarted/schema\n[...]\n\"fields\":[...{\"name\":\"new_txt\", \"type\":\"string\", \"indexed\":true,\"stored\":true}],\n[...]\n\"dynamicFields\":[...,{\"name\":\"*_txt\", \"type\":\"text_general\", \"indexed\":true, \"stored\":true},\n[...]\n\n ",
            "id": "comment-15122751"
        },
        {
            "date": "2016-02-01T10:30:07+0000",
            "author": "Erik Hatcher",
            "content": "SOLR-8624 looks like a duplicate issue - with a proposed fix. ",
            "id": "comment-15126080"
        },
        {
            "date": "2016-02-01T13:41:43+0000",
            "author": "Steve Rowe",
            "content": "Patch with fix suggested on SOLR-8624, including tests that fail without the fix and succeed with it.\n\nRunning full test suite with the patch now. ",
            "id": "comment-15126254"
        },
        {
            "date": "2016-02-01T14:13:57+0000",
            "author": "Steve Rowe",
            "content": "Patch with CHANGES.txt entry.\n\nAll Solr tests passed with the patch.  Committing shortly. ",
            "id": "comment-15126280"
        },
        {
            "date": "2016-02-01T14:15:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 064c0ac00fed662183c4cb117f6aeb6d0f9fe1a1 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=064c0ac ]\n\nSOLR-8607: The Schema API refuses to add new fields that match existing dynamic fields ",
            "id": "comment-15126282"
        },
        {
            "date": "2016-02-01T14:41:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2bcda57ffbcb1456c17580f36c83530e8ac44f65 in lucene-solr's branch refs/heads/branch_5x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2bcda57 ]\n\nSOLR-8607: The Schema API refuses to add new fields that match existing dynamic fields (cherry-picked commit 064c0ac). ",
            "id": "comment-15126311"
        },
        {
            "date": "2016-02-01T14:44:20+0000",
            "author": "Steve Rowe",
            "content": "Pushed to master and branch_5x.\n\nThanks kiran and Jan H\u00f8ydahl for reporting! ",
            "id": "comment-15126315"
        },
        {
            "date": "2016-02-02T09:53:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 064c0ac00fed662183c4cb117f6aeb6d0f9fe1a1 in lucene-solr's branch refs/heads/master-solr-8621 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=064c0ac ]\n\nSOLR-8607: The Schema API refuses to add new fields that match existing dynamic fields ",
            "id": "comment-15127985"
        }
    ]
}