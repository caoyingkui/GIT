{
    "id": "SOLR-10035",
    "title": "Admin UI cannot find dataimport handlers",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Admin UI"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.4.1",
            "7.0"
        ],
        "affect_versions": "6.4",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The 6.4.0 version of Solr has a problem with the Dataimport tab in the admin UI.  It will say \"Sorry, no dataimport-handler defined\" when trying to access that tab.\n\nThe root cause of the problem is a change in the /admin/mbeans handler, by SOLR-9947.  The section of the output where defined dataimport handlers are listed was changed from QUERYHANDLER to QUERY.",
    "attachments": {
        "SOLR-10035.patch": "https://issues.apache.org/jira/secure/attachment/12850072/SOLR-10035.patch",
        "screenshot-1.png": "https://issues.apache.org/jira/secure/attachment/12850073/screenshot-1.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-25T18:57:26+0000",
            "content": "The changes to the mbean output are going to make my life interesting beyond the admin UI.  I have a SolrJ program that accesses this information and isn't going to work with newer versions of Solr.  Because it will need to deal with multiple versions, it's going to have to handle both the old and the new output. ",
            "author": "Shawn Heisey",
            "id": "comment-15838363"
        },
        {
            "date": "2017-01-25T23:37:58+0000",
            "content": "A binary install of Solr 6.4.0 can be fixed without a new version.  Edit the following file:\n\nsolr/server/solr-webapp/webapp/js/angular/controllers/dataimport.js\n\nThe string \"QUERYHANDLER\" will show up once in the file.  Change this text to \"QUERY\".  Be sure to only change the one that's all uppercase. ",
            "author": "Shawn Heisey",
            "id": "comment-15838825"
        },
        {
            "date": "2017-01-25T23:39:00+0000",
            "content": "Something that would be good to add is a test of the dataimport tab in the admin UI ... I've got absolutely no idea how to write that test.  Code that can run javascript like a browser would be required. ",
            "author": "Shawn Heisey",
            "id": "comment-15838830"
        },
        {
            "date": "2017-01-26T08:04:41+0000",
            "content": "Hmm, we should not change the mbeans API between minor versions. Can we publish these metrics in both sections until 7.0 and publish a deprecation message in changes? This should go in 6.4.1 ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15839401"
        },
        {
            "date": "2017-01-26T09:36:28+0000",
            "content": "Can we publish these metrics in both sections until 7.0 and publish a deprecation message in changes?\nYes, I'll take care of this. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15839470"
        },
        {
            "date": "2017-01-26T14:34:16+0000",
            "content": "Hmm, we should not change the mbeans API between minor versions\n\nI was thinking the same thing as I filed this issue, but I was worried that anything I said about it would be seen as hindering progress.  The changelog mention for SOLR-9947 was not adequate enough for a reader to realize that a user program consuming the mbeans would need to be changed. ",
            "author": "Shawn Heisey",
            "id": "comment-15839754"
        },
        {
            "date": "2017-01-26T16:40:50+0000",
            "content": "I wasn't aware of back-compat concerns in Dataimport UI ... which says something about tests, too (unfortunately I don't know anything about writing UI tests...). I can either revert the name changes, or do as you proposed, ie. register them under both the new and the old names. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15840001"
        },
        {
            "date": "2017-01-26T17:14:51+0000",
            "content": "Fixing the UI (the focus of this issue) is easy - one string on one line.\n\nThe larger concern is that the API for getting statistical information out of Solr has changed in a minor release, in a way that can break clients, and nothing in CHANGES.txt indicated that there was such a change.  I understand the desire to remove \"HANDLER\" from the category names \u2013 it's unnecessarily verbose.  If it were me making the improvements, I would have left the category names unchanged in 6.x, only making the changes in master.\n\nUsers expect that their client code will continue working if they make a minor version upgrade, and for the most part Solr has kept that promise.  Sometimes progress requires changes that break user expectations, but in that case, it should be mentioned in the changelog. ",
            "author": "Shawn Heisey",
            "id": "comment-15840067"
        },
        {
            "date": "2017-01-26T17:23:03+0000",
            "content": "If we revert then the new metrics stuff will break or need to change later, right?\n\nNow that 7.0 is discussed in a may timeframe perhaps some things can wait? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15840084"
        },
        {
            "date": "2017-01-26T18:06:51+0000",
            "content": "The original reason for this change was that the names with \"HANDLER\" suffixes didn't fit the metrics, and I wanted to avoid creating too many category names... If we change this back to use the old names, it won't unbreak 6.4.0 and it will create a weird situation where names flipped back and forth between 6.x releases. And we need to keep the changed names anyway in 7.0, again in order to cover broader set of plugins and metrics and to avoid creating too many category names.\n\nSo I think that the least confusing option at this point would be to add a very clear note in CHANGES and keep the new names (and avoid breaking back-compat in the future!) Keeping both new and old names is an option, too, but it may be more confusing in the UI / JMX. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15840146"
        },
        {
            "date": "2017-01-26T21:03:24+0000",
            "content": "So I think that the least confusing option at this point would be to add a very clear note in CHANGES and keep the new names (and avoid breaking back-compat in the future!) Keeping both new and old names is an option, too, but it may be more confusing in the UI / JMX.\n\nOr some middle ground. Expose both old and new for the rest of 6.x and add a -Dsolr.mbeans.useOnlyNewNaming=true flag which removes the old names with a warning in release notes that this breaks back compat to gain less confusing GUI output. Anyway most users will not even notice, except those that use a monitoring solution which suddenly breaks. Then again, very few have had the chance to upgrade to 6.4 yet ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15840454"
        },
        {
            "date": "2017-01-30T22:50:16+0000",
            "content": "This patch changes the output of /admin/mbeans to return affected mbeans under both new and old names, and supports selecting beans by both new and old categories.\n\nI also modified the UI to indicate that old names are deprecated (see the screenshot). ",
            "author": "Andrzej Bialecki",
            "id": "comment-15846085"
        },
        {
            "date": "2017-01-30T23:29:50+0000",
            "content": "Looks awesome \nThe obvious question then is, if you specify -Dsolr.mbeans.useOnlyNewNaming=true, will then the DIH UI work?  I think we should flip the constant QUERYHANDLER -> QUERY in that dih JS file... ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15846140"
        },
        {
            "date": "2017-01-31T09:29:24+0000",
            "content": "Jan H\u00f8ydahl good point  I'll change that JS file, and commit it shortly - thanks! ",
            "author": "Andrzej Bialecki",
            "id": "comment-15846577"
        },
        {
            "date": "2017-01-31T09:50:17+0000",
            "content": "Final patch. I manually verified that DIH works also when \"-Dsolr.mbeans.useOnlyNewNaming=true\" is specified. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15846594"
        },
        {
            "date": "2017-02-01T15:56:39+0000",
            "content": "Commit f51a38fd4cd5f98da3a26df55970d662227b633a in lucene-solr's branch refs/heads/branch_6x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f51a38f ]\n\nSOLR-10035 Admin UI cannot find dataimport handlers. ",
            "author": "ASF subversion and git services",
            "id": "comment-15848562"
        },
        {
            "date": "2017-02-04T22:51:43+0000",
            "content": "This can be RESOLVED, not? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15852969"
        },
        {
            "date": "2017-02-06T08:02:14+0000",
            "content": "Commit 51ff50d76da23137e2b0afe4af130601ba17eab1 in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=51ff50d ]\n\nSOLR-10035 Fix dataimport to use the new names. ",
            "author": "ASF subversion and git services",
            "id": "comment-15853645"
        },
        {
            "date": "2017-02-06T08:02:57+0000",
            "content": "This needed also a small fix on master so that the UI uses only the new names. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15853646"
        }
    ]
}