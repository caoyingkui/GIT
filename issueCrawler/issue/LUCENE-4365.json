{
    "id": "LUCENE-4365",
    "title": "The Maven build can't directly handle complex inter-module dependencies involving the test-framework modules",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/build"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The Maven dependency model disallows cyclic dependencies, of which there are now several in the Ant build (considering test and compile dependencies together, as Maven does).  All of these cycles involve either the Lucene test-framework or the Solr test-framework.\n\nThe current Maven build works around this problem by incorporating dependencies' sources into dependent modules' test sources, rather than literally declaring the problematic dependencies as such. (See SOLR-3780 for a recent example of putting this workaround in place for the Solrj module.)  \n\nBut with the factoring out of the Lucene Codecs module, upon which Lucene test-framework has a compile-time dependency, the complexity of the workarounds required to make it all hang together is great enough that I want to attempt a (Maven-build-only) module refactoring.  It should require fewer contortions and be more maintainable.\n\nThe Maven build is currently broken, as of the addition of the Codecs module (LUCENE-4340).",
    "attachments": {
        "lucene.solr.cyclic.dependencies.removed.png": "https://issues.apache.org/jira/secure/attachment/12543981/lucene.solr.cyclic.dependencies.removed.png",
        "lucene.solr.dependency.cycles.png.jpg": "https://issues.apache.org/jira/secure/attachment/12543942/lucene.solr.dependency.cycles.png.jpg",
        "LUCENE-4365.patch": "https://issues.apache.org/jira/secure/attachment/12543979/LUCENE-4365.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-09-05T23:58:11+0000",
            "content": "Graph of current Lucene/Solr inter-module cyclic dependencies ",
            "author": "Steve Rowe",
            "id": "comment-13449281"
        },
        {
            "date": "2012-09-06T04:02:11+0000",
            "content": "Trunk patch splitting out a tests-only module for each of the four modules that have cyclic dependencies involving Lucene test-framework or Solr test-framework.\n\nThe solr-core-tests module fails SolrInfoMBeanTest#testCallMBeanInfo() when a run against the solr-core jar, apparently because the SolrInfoMBean finding method doesn't look into jar dependencies.  The attached patch works around this issue by declaring the same compilation output directory as solr-core, so that like the Ant build, tests include the .class files in the classpath.  solr-solrj-tests is given the same treatment for similar reasons.\n\nAll tests pass. ",
            "author": "Steve Rowe",
            "id": "comment-13449390"
        },
        {
            "date": "2012-09-06T04:05:58+0000",
            "content": "Before applying the patch, run the following script:\n\n\nsvn --parents cp dev-tools/maven/lucene/core/pom.xml.template dev-tools/maven/lucene/core/src/java/\nsvn --parents cp dev-tools/maven/lucene/codecs/pom.xml.template dev-tools/maven/lucene/codecs/src/java/\nsvn --parents cp dev-tools/maven/solr/core/pom.xml.template dev-tools/maven/solr/core/src/java/\nsvn --parents cp dev-tools/maven/solr/solrj/pom.xml.template dev-tools/maven/solr/solrj/src/java/\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13449394"
        },
        {
            "date": "2012-09-06T04:08:05+0000",
            "content": "Graph showing dependencies after applying the patch ",
            "author": "Steve Rowe",
            "id": "comment-13449396"
        },
        {
            "date": "2012-09-06T04:11:03+0000",
            "content": "\nThe solr-core-tests module fails SolrInfoMBeanTest#testCallMBeanInfo() when a run against the solr-core jar, apparently because the SolrInfoMBean finding method doesn't look into jar dependencies\n\nYeah some of the crazy analyzers tests (TestRandomChains etc) have this same logic. would be nice if it was done better.\n\nI say if the maven jenkins job currently doesnt work at all, just commit it if it doesn't break packaging (generate-maven-artifacts & co).\nEven then we should know that from the nightly packaging jenkins jobs. ",
            "author": "Robert Muir",
            "id": "comment-13449399"
        },
        {
            "date": "2012-09-06T04:17:03+0000",
            "content": "Great work improving this Steven, what a mess! ",
            "author": "Chris Male",
            "id": "comment-13449400"
        },
        {
            "date": "2012-09-06T15:30:38+0000",
            "content": "Yeah some of the crazy analyzers tests (TestRandomChains etc) have this same logic. would be nice if it was done better.\n\nUnfortunately the Java ClassLoaders do not support listing all classes in a package. To solve this, the tests use a trick: They ask for the resource URI for the base package path from the classloader. And then standard recursive directory inspection is used. This needs the classloader to return a file:// URL, if that is not the case, we throw exception - that's the one you get?.\n\nBut not only those tests are doing this, a lot of tests, that access zip files directly in classpath (when Random Access is needed, because Classloaders only allow streams) do the same, they get the reource URI and then open the ZIP file. I think this is not a problem, as the tests are accessing only their own resources, not those of a foreign mdoule - so JAR files are not involved.\n\nMaybe Java 8 has a solution to list all classes in a package... ",
            "author": "Uwe Schindler",
            "id": "comment-13449739"
        },
        {
            "date": "2012-09-06T21:29:05+0000",
            "content": "ant generate-maven-artifacts was not using the correct POMs for the four modules split into main/test modules (lucene-core, lucene-codecs, solr-core, and solr-solrj).  Each of these modules now has three POMs - a main POM, a test POM, and an aggregator POM that call the other two in a recursive build.  The previous patch was causing the aggregator POMs from the base module directory to be used, rather than the POM for the main module, which will be located at <module>/src/java/.\n\nThis patch fixes the problem by using a dist-maven specialization called dist-maven-src-java in each of the four affected modules' build.xml files.\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-13450064"
        },
        {
            "date": "2012-09-07T03:59:58+0000",
            "content": "Committed:\n\n\n\tr1381779: trunk\n\tr1381854: branch_4x\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13450320"
        },
        {
            "date": "2013-03-22T16:42:56+0000",
            "content": "[branch_4x commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1382147\n\nLUCENE-4365: remove unnecessary randomizedtesting-runner dependency from the lucene-core-tests module (merge trunk r1382143) ",
            "author": "Commit Tag Bot",
            "id": "comment-13610897"
        },
        {
            "date": "2013-03-22T16:43:04+0000",
            "content": "[branch_4x commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1382025\n\nLUCENE-4365: Upgrade maven-install-plugin to just-released v2.4, to enable skipping installation of artifacts from modules solr-core-tests and solr-solrj-tests. (merged trunk r1382023) ",
            "author": "Commit Tag Bot",
            "id": "comment-13610899"
        },
        {
            "date": "2013-03-22T16:43:07+0000",
            "content": "[branch_4x commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1381854\n\nLUCENE-4365: split maven modules into main/test sub-modules for the four modules with cyclic dependencies on the Lucene or Solr test-framework modules: lucene-core, lucene-codecs, solr-core, and solr-solrj (merge trunk r1381779) ",
            "author": "Commit Tag Bot",
            "id": "comment-13610900"
        },
        {
            "date": "2013-05-10T10:33:24+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653916"
        }
    ]
}