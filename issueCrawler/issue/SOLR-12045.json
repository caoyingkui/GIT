{
    "id": "SOLR-12045",
    "title": "Move Analytics Component from contrib to core",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "master (8.0)",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The Analytics Component currently lives in contrib. Since it includes no external dependencies, there is no harm in moving it into core solr.\n\nThe analytics component would be included as a default search component and the analytics handler (currently only used for analytics shard requests, might be transitioned to handle user requests in the future) would be included as an implicit handler.",
    "attachments": {
        "SOLR-12045.rb-visibility.patch": "https://issues.apache.org/jira/secure/attachment/12919967/SOLR-12045.rb-visibility.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-02-28T15:47:31+0000",
            "content": "I ran into some confusion when adding the /analytics\u00a0handler as an implicit handler. In ImplicitPlugins.json\u00a0each handler has a useParams\u00a0option. I can't tell where this option is used, so I just followed the convention of the other handlers and put\u00a0 \"_ANALYTICS\"\u00a0for the /analytics\u00a0handler.\n\nIf I need to actually add a param set somewhere, I'd be happy to. I just don't know where it would go. ",
            "author": "Houston Putman",
            "id": "comment-16380497"
        },
        {
            "date": "2018-03-06T17:09:09+0000",
            "content": "+1 (haven't reviewed patch yet)\n\nThe implicit \"useParams\" is explained\u00a0here:\u00a0SOLR-9557 ",
            "author": "David Smiley",
            "id": "comment-16388111"
        },
        {
            "date": "2018-03-06T18:11:36+0000",
            "content": "Thanks for the link.\n\nI think everything should be fine then, since:\n\n\tthe /analytics handler isn't user facing yet. (It is called for shard requests from the AnalyticsComponent)\n\tThere are no implicit params that it needs.\n\n ",
            "author": "Houston Putman",
            "id": "comment-16388233"
        },
        {
            "date": "2018-04-13T19:00:42+0000",
            "content": "I'm not sure where best to bring this up but I'm concerned about all the ways there are to compute facets in Solr.  Each needs to be maintained, documented, and then in the end Solr is more complex \u2013 albeit maybe more capable though i really don't know right now where the gaps are.  It would love to see some particular use-cases compared in terms of syntax and performance, and of course a better understanding of extra capabilities unique to each.  The primary contenders are the JSON-Facets module & this Analytics module.  Of course this is wishful thinking; I can't implore anyone to do anything.  Well except for my kids but they are not up to this task yet LOL   I've seen presentations on both individually that made each out to be awesome but at no times were they compared. ",
            "author": "David Smiley",
            "id": "comment-16437754"
        },
        {
            "date": "2018-04-16T21:10:46+0000",
            "content": "Moving this component into core would solve another issue that a couple of people have encountered:\n\nIllegalAccessError: tried to access field org.apache.solr.handler.component.\nResponseBuilder._isOlapAnalytics from class org.apache.solr.handler.\ncomponent.AnalyticsComponent at org.apache.solr.handler.component.\nAnalyticsComponent.prepare(AnalyticsComponent.java:46) \n\nI've confirmed with one user that this is fixed by moving the jar to WEB-INF/lib.\n\nLooks like loading Solr with one classloader and analytics with another classloader (using <lib> config) breaks package visibility on the field in ResponseBuilder. ",
            "author": "Shawn Heisey",
            "id": "comment-16440032"
        },
        {
            "date": "2018-04-19T21:27:39+0000",
            "content": "The solution to class loader problems is not to move everything into a big fat core, but to solve the class loader issues  ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16444829"
        },
        {
            "date": "2018-04-20T06:16:51+0000",
            "content": "The solution to class loader problems is not to move everything into a big fat core\n\nIn truth, I don't really care where analytics lives.  Moving it would fix the classloader issue, but fixing the visibility issues is probably the best idea.  An alternate (but similar) idea would be to install the jar into the webapp instead of putting it in contrib.\n\nI've cooked up a patch that changes all of the fields in ResponseBuilder to private and adds getters/setters as appropriate.  A lot of getters/setters were already in the class, so this is not a major paradigm shift.  The patch touches a lot of code.  I will attach it momentarily.  I'll leave the decision about whether to take that approach to the ones who understand the ramifications better than I do. ",
            "author": "Shawn Heisey",
            "id": "comment-16445364"
        }
    ]
}