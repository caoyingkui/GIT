{
    "id": "LUCENE-6295",
    "title": "Remove Query.rewrite?",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "Queries are a bit hard to consume because of their complicated workflow: your first need to rewrite before creating a weight. Maybe we could simplify it and make query rewriting part of creating the weight?\n\nIf a user would like to have access to the rewritten query, he could still call Query.createWeight(searcher, needsScores).getQuery() instead of Query.rewrite?",
    "attachments": {
        "LUCENE-6295.patch": "https://issues.apache.org/jira/secure/attachment/12701093/LUCENE-6295.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14336780",
            "author": "Robert Muir",
            "date": "2015-02-25T17:18:38+0000",
            "content": "The main thing i hate is Query.rewrite(IndexReader). Queries are supposed to be independent of readers, so to me this is wrong. Also most implementations of rewrite don't need the reader, only special cases like multitermquery do.\n\nOn the other hand Weights are already bound to a reader, so I think thats how multitermquery should work.\n\nMaybe we should have both?\n\n\nQuery.rewrite(); // 95% of our current rewrites just stay as-is.\nWeight.rewrite(); // stuff like multitermquery\n\n "
        },
        {
            "id": "comment-14336815",
            "author": "Robert Muir",
            "date": "2015-02-25T17:36:05+0000",
            "content": "The other question is if Query.createWeight is enough to handle the MTQ case. \n\nThen we'd just be removing the IndexReader parameter from Query.rewrite(). "
        },
        {
            "id": "comment-14337415",
            "author": "Adrien Grand",
            "date": "2015-02-25T23:06:01+0000",
            "content": "Then we'd just be removing the IndexReader parameter from Query.rewrite().\n\nBut do we still need a rewrite() method? I was initially looking for a way to make queries easier to consume. For instance I started looking at replacing filters with queries in a couple of places (eg. the index splitter is a simple example) and having to call rewrite(until the same query is returned)+createWeight+scorer is quite heavy while on filters, you just need to call getDocIdSet.\n\nI was hoping that we could make rewrite() an implementation detail of createWeight(). Especially given that you could still have access to the rewritten query by calling getQuery() on the created weight. "
        },
        {
            "id": "comment-14337422",
            "author": "Robert Muir",
            "date": "2015-02-25T23:09:13+0000",
            "content": "I think its the Reader parameter that makes it harder to consume... but thats just me.  I have not looked at the splitter problem but i am afraid to combine all rewrite() into Weights. Maybe it doesnt look so bad, but most rewrite()s in the codebase are the simple kind, its just MTQ that is crazy. We shouldn't make the simple things complicated because of multitermquery or splitters, thats my only concern there. "
        },
        {
            "id": "comment-14337432",
            "author": "Adrien Grand",
            "date": "2015-02-25T23:16:21+0000",
            "content": "Actually I was rather thinking that it would simplify things. "
        },
        {
            "id": "comment-14337438",
            "author": "Robert Muir",
            "date": "2015-02-25T23:19:57+0000",
            "content": "OK, maybe its not too bad: we can try the patch. But I like the way its done recursively and how its simple to do in a query, i think its a feature we should keep. "
        },
        {
            "id": "comment-14338533",
            "author": "Adrien Grand",
            "date": "2015-02-26T15:17:22+0000",
            "content": "Here is a prototype patch that demonstrates the idea on a couple of our core queries:\n\n\trewrite id now protected and an impl detail of queries\n\tcreateWeight implicitely rewrites\n\tif you have a query wrapper (eg. phrase or boolean), you don't need to rewrite the sub queries, creating sub weights will do it implicitely\n\n\n\nWe should also probably move extractTerms from Query to Weight "
        },
        {
            "id": "comment-14338540",
            "author": "Robert Muir",
            "date": "2015-02-26T15:21:29+0000",
            "content": "\nWe should also probably move extractTerms from Query to Weight\n\nWhy? because of multitermquery? \n\n-1\n\nWe can't cater extractTerms to multitermquery. you just should not do that. we should throw UOE there always. "
        },
        {
            "id": "comment-14338545",
            "author": "Adrien Grand",
            "date": "2015-02-26T15:25:22+0000",
            "content": "Not because of MultiTermQuery, because of this comment on Query.extractTerms: \"Only works if this query is in its \n{@link #rewrite rewritten}\n form.\" "
        },
        {
            "id": "comment-14338641",
            "author": "Robert Muir",
            "date": "2015-02-26T16:25:45+0000",
            "content": "But that comment is \"catering to multitermquery\". Its only that way because of MTQ. "
        }
    ]
}