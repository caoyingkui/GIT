{
    "id": "SOLR-7787",
    "title": "Fork HyperLogLog and remove fastutil dependency",
    "details": {
        "components": [],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Trivial"
    },
    "description": "So fastutil is now part of Solr's distribution (because the stats component uses hyperloglog library, which in turn requires fastutil). I looked at the actual uses of fastutil and only java-hll uses it (and only a few classes).\n\nI've created a fork that uses HPPC instead (also randomized all tests, they pass). Since it's a relatively simple package I think it could be forked and imported into Solr's codebase entirely. I'd make a pull request but I see Hoss also created a few comments/ PRs and none of them received any attention; the project seems to be stale or dead?",
    "attachments": {
        "SOLR-7787.patch": "https://issues.apache.org/jira/secure/attachment/12745613/SOLR-7787.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-07-14T16:58:43+0000",
            "author": "Hoss Man",
            "content": "I don't have any strong opinions about this issue as it currently stands (ie: \"Fork HyperLogLog and remove fastutil dependency\") \u2013 as you mentioned, the java-hll project, with it's original goals of a cross langauge binary format protocol, doesn't appear to be very active anymore \u2013 but for the record can you please clarify the context/objective of this issue?\n\nIt started out as \"Promote fastutil to first-order dependency\" \u2013 and your goal seemed to be to remove HPPC, now you seem to have flipped the objective so that the focus is on keeping HPPC, and eliminating fastutil.\n\nhaving a clear understanding of \"the goal\" for either refactoring/forking/etc would be helpful for folks to develop an informed opinion. ",
            "id": "comment-14626656"
        },
        {
            "date": "2015-07-14T18:13:46+0000",
            "author": "Dawid Weiss",
            "content": "Well, I thought lack of initial feedback was lazy consensus \n\nAnd seriously \u2013 it can go either way. My original intention was to update HPPC which is duplicated in Solr and the clustering contrib. These have to be consistent. From there I observed that:\n\n1) Solr uses HPPC in a small number of classes,\n2) fastutil is present in solr's lib, but it's not used in any classes, it is just a transitive dependency from hll,\n3) fastutil is much larger than HPPC (roughly 15x).\n\nI am really ok with any option. I decided to cut fastutil out because it's just a much larger library (of which almost nothing is practically used in Solr). Also, hll's implementation uses fastutil iterators very inefficiently (causing intermediate autoboxing on every value) so I thought I'd take a stab at improving that while converting to HPPC.\n\nI can also leave everything as-is, really, but the patch I have locally seems like a nice improvement on its own (and could be perhaps pruned further to get rid of unnecessary stuff like serialization, etc.). ",
            "id": "comment-14626799"
        },
        {
            "date": "2015-07-14T19:34:26+0000",
            "author": "David Smiley",
            "content": "I think we should avoid very large dependencies that we so barely use.  +1 to Fork HLL so that we needn't use FastUtil.  \n\nPerhaps it would be useful to fork HLL publicly (e.g. on GitHub & publish to maven) to be its own 3rd party dependency \u2013 I imagine others aren't too keen on using a 17MB library that they aren't already using.  Ideally this would be condoned with the original library owner to use their maven groupId but differentiated in the artifactId, but it isn't necessary of course. ",
            "id": "comment-14626920"
        },
        {
            "date": "2015-07-14T19:38:14+0000",
            "author": "Upayavira",
            "content": "I can see the rationale of forking. I wonder though would hll accept a patch to remove the dependency (or make it optional)? Thus removing the need for us to maintain a fork? ",
            "id": "comment-14626927"
        },
        {
            "date": "2015-07-14T19:51:19+0000",
            "author": "Hoss Man",
            "content": "My original intention was to update HPPC which is duplicated in Solr and the clustering contrib. These have to be consistent. From there I observed that:\n...\nI am really ok with any option. I decided to cut fastutil out because it's just a much larger library (of which almost nothing is practically used in Solr). Also, hll's implementation uses fastutil iterators very inefficiently (causing intermediate autoboxing on every value) so I thought I'd take a stab at improving that while converting to HPPC.\n\nGot it \u2013 so the primary concern is/was dependency version consistency, and in the process of going down that rabbit hole, you realized forking HLL to eliminate the dep on fastutil seemed like the best win all around.\n\nSounds like a good plan of attack to me. ",
            "id": "comment-14626953"
        },
        {
            "date": "2015-07-14T20:09:06+0000",
            "author": "Dawid Weiss",
            "content": "Got it \u2013 so the primary concern is/was dependency version consistency, and in the process of going down that rabbit hole, you realized forking HLL to eliminate the dep on fastutil seemed like the best win all around.\n\nYes, that's exactly what happened.\n\nI wonder though would hll accept a patch to remove the dependency (or make it optional)?\n\nIt's not a complete removal \u2013 I simply replaced fastutil with HPPC (since Solr already uses it in a couple of places anyway). I also did a few other changes the author may not be too happy with (replaced testng with junit, replaced hardcoded randomization seeds with randomizedtesting, etc.) in preparation of importing the code into Solr's codebase. I will submit a PR too, but there seems to be a general lack of interest in this code from the original author, see Hoss's unaddressed question here:\n\nhttps://github.com/aggregateknowledge/java-hll/issues/15\n\nand Timon Karnezos doesn't seem to be too active recently: https://github.com/timonk?tab=contributions&period=monthly\n\n\n\n ",
            "id": "comment-14626975"
        },
        {
            "date": "2015-07-15T09:29:17+0000",
            "author": "Dawid Weiss",
            "content": "This is the PR, let's see if it receives any attention. Otherwise I'll try to clean it up from unnecessary stuff and import it directly into Solr's codebase.\n\nhttps://github.com/aggregateknowledge/java-hll/pull/16 ",
            "id": "comment-14627784"
        },
        {
            "date": "2015-07-16T10:32:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1691350 from Dawid Weiss in branch 'dev/branches/solr7787'\n[ https://svn.apache.org/r1691350 ]\n\nSOLR-7787 (jhll integration). ",
            "id": "comment-14629536"
        },
        {
            "date": "2015-07-16T11:47:17+0000",
            "author": "Dawid Weiss",
            "content": "Attaching a patch that imports java-hll code into Solr, removes the dependency on fastutil and jhll, cleans up the code a bit in a few places where we restrict API use. ",
            "id": "comment-14629607"
        },
        {
            "date": "2015-07-16T14:48:36+0000",
            "author": "Yonik Seeley",
            "content": "When HLL was first added, I remember scanning the code quickly and noting that the explicit storage rehashed the given value (which is wasted effort given that the provided values already need to be good hashes to start with).  Is there a way to avoid that?  Prob not a big deal though. ",
            "id": "comment-14629832"
        },
        {
            "date": "2015-07-16T15:31:28+0000",
            "author": "Dawid Weiss",
            "content": "Yeah, I honestly don't think those storage optimizations are worth the effort either, but I think the code can be tweaked after it's integrated \u2013 I wouldn't want to tinker with it in this patch (can you file another issue)? ",
            "id": "comment-14629892"
        },
        {
            "date": "2015-07-17T11:20:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1691518 from Dawid Weiss in branch 'dev/trunk'\n[ https://svn.apache.org/r1691518 ]\n\nSOLR-7787: Removed fastutil and java-hll dependency, integrated HyperLogLog from java-hll into Solr core. ",
            "id": "comment-14631207"
        },
        {
            "date": "2015-07-17T12:10:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1691531 from Dawid Weiss in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1691531 ]\n\nSOLR-7787: Removed fastutil and java-hll dependency, integrated HyperLogLog from java-hll into Solr core. ",
            "id": "comment-14631246"
        },
        {
            "date": "2015-07-17T12:25:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1691535 from Dawid Weiss in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1691535 ]\n\nSOLR-7787: Removed fastutil and java-hll dependency, integrated HyperLogLog from java-hll into Solr core. (committed from solr/ folder; note to Uwe: this is why I hate SVN...). ",
            "id": "comment-14631254"
        },
        {
            "date": "2015-07-17T12:29:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1691541 from Dawid Weiss in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1691541 ]\n\nSOLR-7787: Removed fastutil and java-hll dependency, integrated HyperLogLog from java-hll into Solr core. (committed from solr/ folder; note to Uwe: this is why I hate SVN...). ",
            "id": "comment-14631257"
        },
        {
            "date": "2015-07-17T16:41:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1691609 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1691609 ]\n\nSOLR-7787: Remove obsolute fastutil and hll files in solr/licenses/ ",
            "id": "comment-14631558"
        },
        {
            "date": "2015-07-17T16:42:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1691610 from Steve Rowe in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1691610 ]\n\nSOLR-7787: Remove obsolute fastutil and hll files in solr/licenses/ (merged trunk r1691609) ",
            "id": "comment-14631560"
        },
        {
            "date": "2015-07-18T11:09:20+0000",
            "author": "Dawid Weiss",
            "content": "Darn, my bad \u2013 thanks Steve Rowe! ",
            "id": "comment-14632379"
        },
        {
            "date": "2015-08-26T13:05:43+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Bulk close for 5.3.0 release ",
            "id": "comment-14713088"
        }
    ]
}