{
    "id": "LUCENE-3667",
    "title": "Consider changing how we set the number of threads to use to run tests.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The current way we set the number of threads to use is not expressive enough for some systems. My quad core with hyper threading is recognized as 8 CPUs - since I can only override the number of threads to use per core, 8 is as low as I can go. 8 threads can be problematic for me - just the amount of RAM used sometimes can toss me into heavy paging because I only have 8 GB of RAM - the heavy paging can cause my whole system to come to a crawl. Without hacking the build, I don't think I have a lot of workarounds.\n\nI'd like to propose that switch from using threadsPerProcessor to threadCount. In some ways, it's not as nice, because it does not try to scale automatically per system. But that auto scaling is often not ideal (hyper threading, wanting to be able to do other work at the same time), so perhaps we just default to 1 or 2 threads and devs can override individually?",
    "attachments": {
        "LUCENE-3667.patch": "https://issues.apache.org/jira/secure/attachment/12508598/LUCENE-3667.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-12-24T09:00:47+0000",
            "content": "-Dtests.sequential=true works good for me on restricted systems. But I agree I think we should have a setting that sets a upper bound no matter how many cpus are available. ",
            "author": "Simon Willnauer",
            "id": "comment-13175697"
        },
        {
            "date": "2011-12-24T12:57:42+0000",
            "content": "As far as the RAM usage, maybe solr tests shouldnt override lucene's default of 1 then.\n\n\n  <property name=\"tests.threadspercpu\" value=\"2\"/>\n\n\n\nBut IIRC, the problem is that many of the solr tests sleep a lot,\nso higher parallelism is better...  ",
            "author": "Robert Muir",
            "id": "comment-13175715"
        },
        {
            "date": "2011-12-24T14:15:21+0000",
            "content": "As far as the RAM usage, maybe solr tests shouldnt override lucene's default of 1 then.\n\nProbably they should not - but I override that down to 1 in my build.properties - like I said, that still sticks me with 8 threads. Lucene was lowered by default at some point, but I guess no one changed Solr. I'm not too worried about what I can change without hacking the build though. \n\n-Dtests.sequential=true works good for me on restricted systems.\n\nIt doesn't work good for me - it takes many times longer than if I use 5 threads. \n\nIts not a 'restricted' system - like a little under powered laptop - it's a fast quad core system that doesn't like our tests because its got 8 GB of RAM instead 16 (and I run a lot of RAM hungry apps) and because hyper threading causes the processor count to basically be a lie. I just want less than 8 threads because I have a sweet spot closer to 5 (I do hack my change into the build now) - more threads are not causing faster runs and they are occasionally bringing my comp to its knees during brief periods in the test run. I don't want one thread though - thats torturously slow - I just want full control of the number of threads to get below the 8 or more jail I live in.\n\n8 threads will often bring my system to a crawl if I am trying to do something else, but 5 threads will run the tests in just about the same time for me, and it won't swamp me - but I cannot choose 5. ",
            "author": "Mark Miller",
            "id": "comment-13175729"
        },
        {
            "date": "2011-12-24T14:27:47+0000",
            "content": "\nIts not a 'restricted' system - like a little under powered laptop - it's a fast quad core system that doesn't like our tests because its got 8 GB of RAM instead 16 (and I run a lot of RAM hungry apps) and because hyper threading causes the processor count to basically be a lie.\n\nI have the same configuration on my desktop (quad-core HT 8GB ram), and its always happy.\n\nOn my mac though (dual-core HT 4GB ram) running the tests 'owns' the machine completely.\n\nI figured its probably the i/o (my desktop has SSD)... ",
            "author": "Robert Muir",
            "id": "comment-13175731"
        },
        {
            "date": "2011-12-24T15:16:41+0000",
            "content": "You didn't get 16GB? That's my big regret these days. I've almost upgraded because of this, but I'm too lazy and I dont want to figure out what I need to get or install it.\n\nLike I said though, I run some other pretty RAM hungry programs at the same time as eclipse (which I also give a decent amount of RAM). If I shut some down, I don't go into heavy paging - but I'd rather just be able to lower the number of threads because that gets me the best of all the worlds - the tests are not any slower but I can leave my apps open. ",
            "author": "Mark Miller",
            "id": "comment-13175734"
        },
        {
            "date": "2011-12-24T16:36:59+0000",
            "content": "I only have 8GB, but on that machine, the tests don't even seem to put a dent into the machine... like they are fast, I'm not even aware they are running.\n\nOn the 4GB laptop (without SSD), turning on the tests makes it sound like an airplane and i cant even read gmail.\n\nSo I think we should tune the tests to not require a 'beast' computer, they should run reasonably well on 'normal' computers too.\n\nA few problems besides # of threads:\n\n\twe have a few tests that take absurd times (TestIndexWriterDelete: 120seconds on my laptop). We should fix these bad apples so we arent relying upon multiple threads so much anyway. I think TestSort is absurd too.\n\tI think ideally our tests should work without -Xmx512m, maybe we can get them all passing with 256m and keep simpletext/memory under control better.\n\tWe can always revisit tuning some of the more absurd params for mergefactor and stuff so this happens with less probability...\n\n ",
            "author": "Robert Muir",
            "id": "comment-13175744"
        },
        {
            "date": "2011-12-24T19:40:06+0000",
            "content": "the start to a patch.\n\non my laptop lucene's \"test-core\" finishes consistently faster, in ~2:30 versus ~4:15.\n\nadditionally, solr tests actually pass (on this computer they would previously ALWAYS fail due to timeout issues).\n\nfinally, while tests are running I am able to still use my computer to read email and such, unlike before.\n\nstill some work to do on some super-slow tests that i haven't looked into. ",
            "author": "Robert Muir",
            "id": "comment-13175761"
        },
        {
            "date": "2011-12-30T14:03:27+0000",
            "content": "updated patch cleaning up some false fails and more bad apples: testing on my desktop i find that with less threads we have to be more cautious about bad apples that take like 30 seconds... still more work to do ",
            "author": "Robert Muir",
            "id": "comment-13177660"
        },
        {
            "date": "2011-12-30T15:46:04+0000",
            "content": "Because fewer threads = more likely collision of two bad apples and total time = max(thread time)? With history of executions and greedy balancing this shouldn't be the case anymore. ",
            "author": "Dawid Weiss",
            "id": "comment-13177681"
        },
        {
            "date": "2011-12-30T16:25:14+0000",
            "content": "here's my most recent patch... things are pretty good, but some bad apples in the solr tests (seems there is a lot of fsyncing going on thats slowing them down) ",
            "author": "Robert Muir",
            "id": "comment-13177690"
        },
        {
            "date": "2011-12-30T16:27:22+0000",
            "content": "\nBecause fewer threads = more likely collision of two bad apples and total time = max(thread time)? With history of executions and greedy balancing this shouldn't be the case anymore.\n\nWell not just that, in general the bad apples should be fixed, we just sorta dodged the problem in some cases by cranking up parallelism.\n\nI agree that better balancing will help (but its still dodging the root cause if a test sometimes takes like 30 seconds) ",
            "author": "Robert Muir",
            "id": "comment-13177692"
        },
        {
            "date": "2011-12-30T19:27:49+0000",
            "content": "updated patch, with a timeout on the ContentStreamTest so it doesnt hang forever if svn.apache.org is down, and fixing test fsync slowness issues by using LuceneTestCase.newDirectory() in solr tests (on local runs this uses ramdirectory 95% of the time, fsdirectory other times, in hudson it uses fsdirectory more often).  ",
            "author": "Robert Muir",
            "id": "comment-13177730"
        },
        {
            "date": "2011-12-30T20:46:44+0000",
            "content": "minor tweak: now times are much less crazy across different runs and much faster in the worst case.\n\nIn MockDirectoryWrapper:\n\n    if (LuceneTestCase.rarely(randomState) || delegate instanceof NRTCachingDirectory) {\n      // don't wear out our hardware so much in tests.\n      delegate.sync(names);\n    }\n\n ",
            "author": "Robert Muir",
            "id": "comment-13177752"
        },
        {
            "date": "2011-12-30T21:09:12+0000",
            "content": "I plan to commit this patch soon. if someone objects ill just pull it back, but it at least allows \ntests to pass on my laptop without timing out, etc. ",
            "author": "Robert Muir",
            "id": "comment-13177759"
        },
        {
            "date": "2011-12-30T23:13:24+0000",
            "content": "Some  anecdotal numbers on my ThinkPad T400 (\"Intel(R) Core(TM)2 Duo CPU     P8800  @ 2.66GHz\" with 8GB RAM running \"Linux bester 2.6.31-23-generic #75-Ubuntu SMP Fri Mar 18 18:16:06 UTC 2011 x86_64 GNU/Linux\")\n\n\"time ant clean compile test\" on my laptop this morning, using trunk r1225376...\n\n\nBUILD SUCCESSFUL\nTotal time: 32 minutes 27 seconds\n\nreal\t32m28.495s\nuser\t33m12.050s\nsys\t1m47.760s\n\n\n\n...during that run, my CPU temp monitor warned several times (4 i think? it's a notification bar thing, i don't believe i have a log of it) that my CPUs were spiking into the 70-75C range.\n\nsame command after svn updating to r1225945 ....\n\n\nBUILD SUCCESSFUL\nTotal time: 18 minutes 49 seconds\n\nreal\t18m50.329s\nuser\t23m44.440s\nsys\t1m1.080s\n\n\n\n...and my CPU only spiked up to the ~70C range once.\n\n+1 ... thanks rmuir. ",
            "author": "Hoss Man",
            "id": "comment-13177816"
        },
        {
            "date": "2011-12-31T00:54:37+0000",
            "content": "Another anecdotal result, on a 4 core (8 \"cores\" w/ Hyperthreading) Intel Core i7-2600@3.4GHz, 8GB RAM, Windows 7:\n\ntime ant clean compile test on trunk @ r1225617:\n\n\nBUILD SUCCESSFUL\nTotal time: 9 minutes 38 seconds\n\nreal    9m39.762s\nuser    0m0.091s\nsys     0m0.090s\n\n\n\nSame command after svn update'ing to r1225973:\n\n\nBUILD SUCCESSFUL\nTotal time: 7 minutes 24 seconds\n\nreal    7m25.952s\nuser    0m0.060s\nsys     0m0.138s\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13177859"
        },
        {
            "date": "2012-01-02T17:16:56+0000",
            "content": "Thanks for reporting back guys. I still dont like the timings hossman has (i think 19 minutes is crazy, would really love to know whats going on there).\n\nbut just for comparison here is my machines:\n\nLinux (i7-2600k@3.4ghz, 8gb ram):\n\nBefore:\n\nBUILD SUCCESSFUL\nTotal time: 7 minutes 2 seconds\n\nreal\t7m3.099s\nuser\t27m47.900s\nsys\t0m54.639s\n\n\n\nAfter:\n\nBUILD SUCCESSFUL\nTotal time: 4 minutes 51 seconds\n\nreal\t4m52.310s\nuser\t17m14.869s\nsys\t0m29.682s\n\n\n\nWindows (Core2Quad-Q9650@3.0ghz, 8gb ram)\n\nBefore:\n\n-Solr tests always timeout/fail-\n\n\n\nAfter:\n\nBUILD SUCCESSFUL\nTotal time: 8 minutes 37 seconds\n\nreal    8m39.302s\nuser    0m0.000s\nsys     0m0.046s\n\n\n\nMac (Core i5@2.3ghz, 4gb ram)\n\nBefore:\n\n-Solr tests always timeout/fail-\n\n\n\nAfter:\n\nBUILD SUCCESSFUL\nTotal time: 11 minutes 20 seconds\n\nreal    11m20.428s\nuser    28m0.921s\nsys     1m38.629s\n\n ",
            "author": "Robert Muir",
            "id": "comment-13178464"
        }
    ]
}