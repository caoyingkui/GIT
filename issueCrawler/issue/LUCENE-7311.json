{
    "id": "LUCENE-7311",
    "title": "TermWeight shoud seek terms lazily",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Currently the terms are seeked eagerly in TermQuery.createWeight when creating the TermContext. This might be wasteful when scores are not needed since the query might be cached on some segments, thus seeking the term on these segments is not needed. We could change TermWeight to only seek terms in Weight.scorer when scores are not needed.",
    "attachments": {
        "LUCENE-7311.patch": "https://issues.apache.org/jira/secure/attachment/12807650/LUCENE-7311.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15311942",
            "author": "Adrien Grand",
            "date": "2016-06-02T08:32:38+0000",
            "content": "Here is a patch. "
        },
        {
            "id": "comment-15311949",
            "author": "Robert Muir",
            "date": "2016-06-02T08:34:49+0000",
            "content": "I think this is too invasive of an optimization? Already the term-handling code in these queries (and this is by far the simplest one) is too much, I think \"something has to give\" to make the world a simpler place before we decide to do these kinds of optimizations? For example removal of querynorm/classicsimilarity could really start to simplify Weight. "
        },
        {
            "id": "comment-15311960",
            "author": "Adrien Grand",
            "date": "2016-06-02T08:41:14+0000",
            "content": "I agree I am not much of a fan either, but opened this issue for discussion since it is something that I have seen a couple times already with users who have (very) large boolean filters that get reused. Another way to address these use-cases would be to have a tiny TermState cache on top of the terms dictionary, this way this optimization would be decoupled from the Weight implementations (the patch addresses TermQuery but it affects all queries that work on top of terms, like eg. phrase queries).\n\nRemoving queryNorm is appealing regardless of this change.  "
        },
        {
            "id": "comment-15311984",
            "author": "Robert Muir",
            "date": "2016-06-02T08:57:12+0000",
            "content": "Well, i personally think TermQuery/TermWeight should be very easy to follow and understand. If its not: there is no hope for any of our other queries.\n\nI don't think we should explicitly optimize for abusive cases here, potentially causing bugs and making the code impossible to work with.\n\nIf we can simplify/redesign Weight so that this stuff is more natural, then I think thats fine, but I think there are too many special cases in the code already.\n\nSome of these special cases might be easy to fix, just by doing some janitorial work. e.g. what is TermContext.hasOnlyRealTerms()? Do we still need this, is only to support autoprefix? Should we just remove autoprefix and these apis now that we have points?  "
        },
        {
            "id": "comment-15312002",
            "author": "Adrien Grand",
            "date": "2016-06-02T09:15:07+0000",
            "content": "+1 the patch was a bit trappy to write so I agree we should look at simplifying things first "
        },
        {
            "id": "comment-15374655",
            "author": "Adrien Grand",
            "date": "2016-07-13T09:10:34+0000",
            "content": "I updated the patch so that it can be applied on a recent master checkout.\n\nThings are a bit simpler since the first iteration on this issue since we removed aute-prefix terms, Weight.getValueForNormalization, Weight.normalize. Are we good to go now? "
        },
        {
            "id": "comment-15386068",
            "author": "ASF subversion and git services",
            "date": "2016-07-20T15:48:21+0000",
            "content": "Commit d5779335aa39b39e520849ccc01782880a3cfaaf in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d577933 ]\n\nLUCENE-7311: Cached term queries do not seek the terms dictionary anymore. "
        },
        {
            "id": "comment-15386069",
            "author": "ASF subversion and git services",
            "date": "2016-07-20T15:48:22+0000",
            "content": "Commit 71541bcd6cfd1e279faa1f2402403ac74cc5362d in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71541bc ]\n\nLUCENE-7311: Cached term queries do not seek the terms dictionary anymore. "
        },
        {
            "id": "comment-15387692",
            "author": "ASF subversion and git services",
            "date": "2016-07-21T13:37:31+0000",
            "content": "Commit 71541bcd6cfd1e279faa1f2402403ac74cc5362d in lucene-solr's branch refs/heads/apiv2 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71541bc ]\n\nLUCENE-7311: Cached term queries do not seek the terms dictionary anymore. "
        },
        {
            "id": "comment-15439012",
            "author": "Michael McCandless",
            "date": "2016-08-26T13:59:55+0000",
            "content": "Bulk close resolved issues after 6.2.0 release. "
        }
    ]
}