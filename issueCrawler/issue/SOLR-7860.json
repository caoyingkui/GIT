{
    "id": "SOLR-7860",
    "title": "Standardize use of HttpSolrClients in Solr",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "HttpShardHandlerFactory and UpdateShardHandler already provide two places where one can get {{HttpSolrClient}}s with timeouts set up properly etc., but there are lots of miscellaneous places which instantiate their own, with hardcoded timeouts. These are just waiting for some environment to realize the timeouts are not suitable, and not configurable as well. We should standardize this (anyone knows why there two to begin with?), ideally this hardcoding shouldn't exist at all..",
    "attachments": {
        "SOLR-7860.patch": "https://issues.apache.org/jira/secure/attachment/12748506/SOLR-7860.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-03T18:04:56+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "First cut at removing so many httpclients lying around. Removing the SDF's httpclient and using the update shard handler's httpclient. Tests are passing. ",
            "id": "comment-14652196"
        },
        {
            "date": "2015-08-03T18:27:13+0000",
            "author": "Noble Paul",
            "content": "First of all , we must not dealing with http clients directly. There should be standard ways to do common operations\n\nsomething like \n\nremoteCall(\"collection\", \"shardName\", ANY|LEADER|NON-LEADER , params, payload)\nremoteCall(\"collection\", \"shardName\", replicaName, params, payload)\n\n\n\nThe call could be synchronous or asynchronous ",
            "id": "comment-14652217"
        },
        {
            "date": "2015-08-05T03:24:57+0000",
            "author": "Ramkumar Aiyengar",
            "content": "This is a good start Ishan! There's also IndexFetcher which has it's own http client..\n\nThere is one question still here which I am in two minds about myself. One thing we do get by separate select and update httpclients is that you can configure limits/parallelism on each one separately. By extension, should we be aiming to consolidate the clients or just standardizing clients, for example, by just providing a \"client factory\" which can provide different clients for different kinds of operations within Solr, and have an unified configuration? So, the configuration describes different clients for different purposes with different tunables (with defaults obviously), and we instantiate a factory with that config, which can then hand out a client for anything which needs one for one of these purposes? ",
            "id": "comment-14654747"
        }
    ]
}