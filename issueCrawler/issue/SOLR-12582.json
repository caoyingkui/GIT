{
    "id": "SOLR-12582",
    "title": "Consider api/documentation synergies/overlap between JSON Faceting relatedness() function and significantTerms sreaming expression",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Facet Module",
            "streaming expressions"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "In SOLR-12581, Alexandre asked the tangential question below, which i've spun off into it's own jira...\n\nSort of a side-question, but this work [adding new options to the JSON faceting relatedness() aggregation] seems to overlap/compliment the significantTerms work done for streaming/QueryParser: http://lucene.apache.org/solr/guide/7_4/stream-source-reference.html#significantterms\n\nAre we saying SignificantTerms is for simpler use cases (as fore/back queries are corpus-wide) and then go into relatedness() for more complex analysis? \n\nShould the options be roughly compatible where it makes sense and/or similarly named?\n\nJust wondering because I could see this confusing newbies trying to see when to use which option.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-23T22:51:46+0000",
            "content": "I'm not an expert on streaming expressions, and i have no first hand familiarity with the significantTerms streaming souce \u2013 but from what i can tell they are only orthogonally related.\n\nthe signficantTerms streaming source is somewhat comparable to a field facet sorted by the relatedness() function \u2013 but it seems to have the normal constraints of any streaming expression in terms of the source data fields, and how data for the entire collection is stream processed on single node \u2013 the relatedness() aggregation function isn't quite as limited, but also probably not as powerful when that \"stream the entire collection\" usecase is what you want.\n\nas noted, relatedness() supports configuring arbitrary foreground/background queries, but it can also be used on an facet type \u2013 not just \"term\" faceting, so you can use it to score the buckets from any arbitrary facet (including range facets or facet queries) and in particular deal with sub facets.\n\nwhat does that all mean in terms of what we should say about one vs the other in documentation? ...\u00a0 i dunno.\u00a0 I agree there should probably be some cross linking between the documentation to help draw awareness of the two for folks who find one, but the other might be more appropriate, but i'm not sure what form that should take (hence filing this issue rather then just making the change myself)\n\nas far as trying to maintain the same option names \u2013 i don't know that that is feasible or really makes sense \u2013 at least in so much as adding new options to relatedness() using hte same names as the existing options on significantTerms.\u00a0 notably the existing minDocFreq option on significantTerms is similar in concept to the min_popularity option proposed in SOLR-12581 for relatedness(), but it would not really make sense to use minDocFreq as the option name in SOLR-12581 since the relatedness() function isn't tied to \"terms\" the way significantTerms is \u2013 so \"docFreq\" has no real meaning, and the more general \"popularity\" makes more sense (i suppose we could change the option name in signifncatTerms \u2013 but even then significantTerms doesn't produce the same concept of \"popularity\" that relatedness() does, andeven if it did because that that expression focuses exclusively on \"terms\" the concept of \"DocFreq\" is very appropriate.\n\n\n\u00a0 ",
            "author": "Hoss Man",
            "id": "comment-16553508"
        }
    ]
}