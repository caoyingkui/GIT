{
    "id": "SOLR-12291",
    "title": "OverseerCollectionMessageHandler sliceCmd assumes only one replica exists on each node",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Backup/Restore",
            "SolrCloud"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The OverseerCollectionMessageHandler sliceCmd assumes only one replica exists on one node\n\nWhen multiple replicas of\u00a0a\u00a0slice are on the same node we only track one replica's async request. This happens because the async requestMap's key is \"node_name\"\n\nI discovered this when Mikhail shared some logs of a restore issue, where the second\u00a0replica got added before the first replica had completed it's restorecore action.\n\nWhile looking at the logs I noticed that the overseer never called REQUESTSTATUS\u00a0for the restorecore action , almost as if it had missed tracking that particular async request.",
    "attachments": {
        "SOLR-122911.patch": "https://issues.apache.org/jira/secure/attachment/12921893/SOLR-122911.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-30T02:45:33+0000",
            "content": "Here's a simple way to reproduce this:\n\n\u00a0\n\nStart Solr with\n\nbin/solr start -e gettingstarted -noprompt\n\nCall collection reload with async\n\nhttp://localhost:8983/solr/admin/collections?action=reload&name=gettingstarted&async=1\n\nCall request status\n\nhttp://localhost:8983/solr/admin/collections?action=requeststatus&requestid=1\n\nHere's the output ( it's a miracle our users are able to make some sense of this response \u00a0)\u00a0\n\n\u00a0\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":5},\n  \"success\":{\n    \"192.168.0.6:8983_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":1}},\n    \"192.168.0.6:8983_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":0}},\n    \"192.168.0.6:7574_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":58}},\n    \"192.168.0.6:7574_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":59}}},\n  \"167115373362154\":{\n    \"responseHeader\":{\n      \"status\":0,\n      \"QTime\":0},\n    \"STATUS\":\"completed\",\n    \"Response\":\"TaskId: 167115373362154 webapp=null path=/admin/cores params={core=gettingstarted_shard2_replica_n4&async=167115373362154&qt=/admin/cores&action=RELOAD&wt=javabin&version=2} status=0 QTime=58\"},\n  \"167115373632133\":{\n    \"responseHeader\":{\n      \"status\":0,\n      \"QTime\":0},\n    \"STATUS\":\"completed\",\n    \"Response\":\"TaskId: 167115373632133 webapp=null path=/admin/cores params={core=gettingstarted_shard2_replica_n6&async=167115373632133&qt=/admin/cores&action=RELOAD&wt=javabin&version=2} status=0 QTime=0\"},\n  \"status\":{\n    \"state\":\"completed\",\n    \"msg\":\"found [1] in completed tasks\"}}\n\nNotice how we only track 2 task id's ..It should be 4 because the gettingstarted example creates a 2X2 collection.\n\n\u00a0\n\nAlso if you check the logs there were 4 tasks but the overseer didn't track 2 of them\u00a0\n\n~/solr-7.3.0$ grep \"/admin/cores\" example/cloud/node1/logs/solr.log | grep -i reload\n\nINFO\u00a0 - 2018-04-30 02:40:05.614; [ \u00a0 ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/cores params={core=gettingstarted_shard1_replica_n2&async=167115373148039&qt=/admin/cores&action=RELOAD&wt=javabin&version=2} status=0 QTime=1\n\nINFO\u00a0 - 2018-04-30 02:40:05.614; [ \u00a0 ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/cores params={core=gettingstarted_shard2_replica_n6&async=167115373632133&qt=/admin/cores&action=RELOAD&wt=javabin&version=2} status=0 QTime=0\n\n~/solr-7.3.0$ grep \"/admin/cores\" example/cloud/node2/logs/solr.log | grep -i reload\n\nINFO\u00a0 - 2018-04-30 02:40:05.672; [ \u00a0 ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/cores params={core=gettingstarted_shard1_replica_n1&async=167115372921360&qt=/admin/cores&action=RELOAD&wt=javabin&version=2} status=0 QTime=59\n\nINFO\u00a0 - 2018-04-30 02:40:05.672; [ \u00a0 ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/cores params={core=gettingstarted_shard2_replica_n4&async=167115373362154&qt=/admin/cores&action=RELOAD&wt=javabin&version=2} status=0 QTime=58\n ",
            "author": "Varun Thacker",
            "id": "comment-16458279"
        },
        {
            "date": "2018-04-30T02:49:44+0000",
            "content": "The affected APIs by this bug is : RELOAD collection and RESTORE collection ",
            "author": "Varun Thacker",
            "id": "comment-16458281"
        },
        {
            "date": "2018-05-04T06:06:16+0000",
            "content": "First cut patch. It requires another iteration. In terms of correctness\u00a0CollectionsAPIDistributedZkTest and\u00a0CollectionsAPIAsyncDistributedZkTest pass\u00a0\n\nThe one scope creep here is that I've removed special handling of legacyCloud in terms of how we create collections in CreateCollectionCmd.java . It makes the code a lot cleaner and I was hating the fact that it was making shard requests without going through\u00a0OverseerCollectionMessageHandler#sendShardRequest . Is there any reason why we should create a collection in a special way with/without legacy cloud?\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16463399"
        },
        {
            "date": "2018-05-07T11:23:36+0000",
            "content": "I like the overall idea. There's a bunch to cleanup, which I'm sure you already know \n\nI'll take a look at it when you've cleaned up but for now, I'd suggest not creating the asyncTracker perhaps if there's no async id? It might need some extra plumbing but would be cleaner I feel. wdyt ?\n\n\u00a0\n\nAlso, about the legacy cloud core creation, do you intend to commit this to 7x?\u00a0 ",
            "author": "Anshum Gupta",
            "id": "comment-16465803"
        },
        {
            "date": "2018-10-15T14:39:42+0000",
            "content": "The affected APIs by this bug is : BACKUPs , RELOAD collection and RESTORE collection ",
            "author": "Varun Thacker",
            "id": "comment-16650306"
        }
    ]
}