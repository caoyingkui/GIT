{
    "id": "LUCENE-3831",
    "title": "Passing a null fieldname to MemoryFields#terms in MemoryIndex throws a NPE",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I found this when querying a MemoryIndex using a RegexpQuery wrapped by a SpanMultiTermQueryWrapper.  If the regexp doesn't match anything in the index, it gets rewritten to an empty SpanOrQuery with a null field value, which then triggers the NPE.",
    "attachments": {
        "mindex-null-field.patch": "https://issues.apache.org/jira/secure/attachment/12516313/mindex-null-field.patch",
        "LUCENE-3831.patch": "https://issues.apache.org/jira/secure/attachment/12516340/LUCENE-3831.patch",
        "TestNullFieldAfterRegexpRewrite.java": "https://issues.apache.org/jira/secure/attachment/12516332/TestNullFieldAfterRegexpRewrite.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-02-28T11:32:38+0000",
            "content": "Trivial fix - we just check if the passed in fieldname is null, and if it is, return null. ",
            "author": "Alan Woodward",
            "id": "comment-13218077"
        },
        {
            "date": "2012-02-28T13:41:17+0000",
            "content": "Hmm I don't think the Fields.terms API should be expected to accept null (eg I don't know if the other codecs will NPE).\n\nI'd rather fix span queries to not pass the null field.  Is this happening in SpanTermQuery.getSpans()? ",
            "author": "Michael McCandless",
            "id": "comment-13218171"
        },
        {
            "date": "2012-02-28T14:28:41+0000",
            "content": "Here's a test case.  The error is thrown in SpanQuery.createWeight() when it's called on a bare SpanMultiTermQueryWrapper.\n\nIt looks as though a simple workaround is to always wrap SpanMultiTermQueryWrapper in a SpanOrQuery.  \n\nMaybe SpanOrQuery should not have a default constructor, but should require a fieldname if no clauses are supplied? ",
            "author": "Alan Woodward",
            "id": "comment-13218222"
        },
        {
            "date": "2012-02-28T15:23:26+0000",
            "content": "Thanks for the test cases Alan!\n\nI folded those into a patch, added a few assert field != null,\nand then fixed SpanWeight to detect when its .getField() is\nnull and return a null scorer in that case.\n\nI'd like to avoid the API break (changing Span*Query API to force\nup-front providing of the field) if we can... ",
            "author": "Michael McCandless",
            "id": "comment-13218266"
        },
        {
            "date": "2012-03-07T19:38:41+0000",
            "content": "Thanks Alan.\n\nI couldn't provoke an NPE on 3.x but I still fixed SpanWeight to not pass on a null field to IR.norms. ",
            "author": "Michael McCandless",
            "id": "comment-13224638"
        }
    ]
}