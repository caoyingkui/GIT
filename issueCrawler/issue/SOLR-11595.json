{
    "id": "SOLR-11595",
    "title": "optimize SolrIndexSearcher.localCollectionStatistics to use cached MultiFields",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.2"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "SolrIndexSearcher.localCollectionStatistics(field) simply calls Lucene's IndexSearcher.collectionStatistics(field) which in turn calls MultiFields.getTerms(reader, field).  Profiling in an app with many 150 fields in the query shows that building the MultiTerms here is expensive.  Fortunately it turns out that Solr already has a cached instance via SlowCompositeReaderWrapper (using MultiFields which has a ConcurrentHashMap to the MultiTerms keyed by field String.\n\nPerhaps this should be improved on the Lucene side... not sure.  But here on the Solr side, the solution is straight-forward.",
    "attachments": {
        "SOLR_11595_optimize_SolrIndexSearcher_collectionStatistics.patch": "https://issues.apache.org/jira/secure/attachment/12895266/SOLR_11595_optimize_SolrIndexSearcher_collectionStatistics.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-02T18:19:58+0000",
            "content": "Should we fix it in Lucene? We don't really need to create a MultiTerms instance, just to aggregate statistics? ",
            "author": "Adrien Grand",
            "id": "comment-16236318"
        },
        {
            "date": "2017-11-02T20:56:28+0000",
            "content": "Hmm; true.  This could be pretty simple \u2013 a ConcurrentHashMap of String field to CollectionStatistics.  Does that sound like something committable to you?  I can create a new issue (for Lucene) and a patch with this approach. ",
            "author": "David Smiley",
            "id": "comment-16236584"
        },
        {
            "date": "2017-11-03T13:25:41+0000",
            "content": "I was actually not thinking about caching the result but aggregating statistics manually without constructing a MultiTerms object.  ",
            "author": "Adrien Grand",
            "id": "comment-16237591"
        },
        {
            "date": "2017-11-03T13:34:01+0000",
            "content": "manually without constructing a MultiTerms object\n\nYes exactly; this is what I mean.  I'll throw up a patch \u2013 probably on Monday. ",
            "author": "David Smiley",
            "id": "comment-16237598"
        },
        {
            "date": "2017-11-10T12:40:29+0000",
            "content": "I'll commit this patch for the Solr level, since it has an easy implementation given that it indirectly already has a cached MultiFields instance.  It'll be faster than what's happening at LUCENE-8040 based on Rob's feedback. ",
            "author": "David Smiley",
            "id": "comment-16247423"
        },
        {
            "date": "2017-11-10T14:52:37+0000",
            "content": "I don't think you should add such a cache to solr either, for the same reasons i am against it on the lucene issue. ",
            "author": "Robert Muir",
            "id": "comment-16247598"
        },
        {
            "date": "2017-11-10T15:30:11+0000",
            "content": "Rob, I'm not adding a cache here.  SolrIndexSearcher already uses a SlowCompositeReaderWrapper.  I simply propose we use it in localCollectionStatistics().  Also, the design choices are different between Lucene IndexSearcher and Solr's SolrIndexSearcher.  As you know, this is where Solr puts most of it's caches. ",
            "author": "David Smiley",
            "id": "comment-16247641"
        },
        {
            "date": "2017-11-14T07:12:20+0000",
            "content": "If there are no further objections, I'll commit later today (Tuesday). ",
            "author": "David Smiley",
            "id": "comment-16251014"
        },
        {
            "date": "2017-11-14T21:58:58+0000",
            "content": "Commit 3923e9fba3ebb9e6e0526dc4a511d4e33b366c90 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3923e9f ]\n\nSOLR-11595: optimize SolrIndexSearcher.collectionStatistics ",
            "author": "ASF subversion and git services",
            "id": "comment-16252257"
        },
        {
            "date": "2017-11-14T22:07:58+0000",
            "content": "Commit 0032ce48b3886b226331aec06a5be4dfd4afffb8 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0032ce4 ]\n\nSOLR-11595: optimize SolrIndexSearcher.collectionStatistics\n\n(cherry picked from commit 3923e9f) ",
            "author": "ASF subversion and git services",
            "id": "comment-16252526"
        }
    ]
}