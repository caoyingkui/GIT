{
    "id": "LUCENE-5959",
    "title": "Optimized memory management in Automaton.Builder.finish()",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/other"
        ],
        "affect_versions": "4.10",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ]
    },
    "description": "Reworked Automaton.Builder.finish() to not allocate memory stepwise. Added growTransitions(int numTransitions) to be able to resize the transistions array just once.",
    "attachments": {
        "Automaton.diff": "https://issues.apache.org/jira/secure/attachment/12669694/Automaton.diff",
        "finish.patch": "https://issues.apache.org/jira/secure/attachment/12669427/finish.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14137415",
            "author": "Markus Heiden",
            "content": "Patch with suggested changes. ",
            "date": "2014-09-17T15:42:26+0000"
        },
        {
            "id": "comment-14137426",
            "author": "Michael McCandless",
            "content": "Thanks, this is a nice fix!  Maybe instead of using ArrayUtil.grow in that new private method, we could just alloc to that exact size?  (Since the Builder knows it will only add exactly that many transitions...). ",
            "date": "2014-09-17T15:49:05+0000"
        },
        {
            "id": "comment-14137449",
            "author": "Markus Heiden",
            "content": "A better approach would be to create the Automaton with the correct size in Builder.finish() instead of creating it in the constructor with a default size. But I can't do that, because the states have already been added to the automaton at that point.\n\nI may directly allocate \na.transitions = new int[numTransitions * 3]; \nin Builder.finish(), but this looks a bit dirty to me. The overhead of the approach in the patch should be negligible. ",
            "date": "2014-09-17T16:04:57+0000"
        },
        {
            "id": "comment-14137531",
            "author": "Markus Heiden",
            "content": "To avoid the initial creation of the transitions array, I could set it to \"new int[0]\" by using a static constant for that. I don't know, if that affects the performance of other use cases? ",
            "date": "2014-09-17T16:48:31+0000"
        },
        {
            "id": "comment-14137910",
            "author": "Michael McCandless",
            "content": "I may directly allocate  a.transitions = new int[numTransitions * 3]; in Builder.finish(), but this looks a bit dirty to me. \n\nI think that solution is OK?\n\nIt's nice not to tie up extra RAM (from ArrayUtil.oversize) since we don't know how long the automaton will be around... ",
            "date": "2014-09-17T20:24:24+0000"
        },
        {
            "id": "comment-14138686",
            "author": "Markus Heiden",
            "content": "I reworked the Builder completely, see Automaton.diff. Now no unneeded memory will be allocated in finish(). This looks for me like a clean and (memory) efficient solution. ",
            "date": "2014-09-18T08:21:37+0000"
        },
        {
            "id": "comment-14138765",
            "author": "Markus Heiden",
            "content": "Major rework of Automaton.Builder. ",
            "date": "2014-09-18T10:21:46+0000"
        },
        {
            "id": "comment-14138931",
            "author": "Michael McCandless",
            "content": "I like this, I'll commit shortly.  Thanks Markus! ",
            "date": "2014-09-18T13:41:15+0000"
        },
        {
            "id": "comment-14139011",
            "author": "ASF subversion and git services",
            "content": "Commit 1626001 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1626001 ]\n\nLUCENE-5959: add CHANGES entry ",
            "date": "2014-09-18T14:45:49+0000"
        },
        {
            "id": "comment-14139012",
            "author": "ASF subversion and git services",
            "content": "Commit 1626002 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1626002 ]\n\nLUCENE-5959: add CHANGES entry ",
            "date": "2014-09-18T14:46:02+0000"
        },
        {
            "id": "comment-14139013",
            "author": "Michael McCandless",
            "content": "Thanks Markus! ",
            "date": "2014-09-18T14:46:19+0000"
        },
        {
            "id": "comment-14332706",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:01:27+0000"
        }
    ]
}