{
    "id": "SOLR-10885",
    "title": "NullPointerException when run collapse filter",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.4.1",
        "resolution": "Not A Bug",
        "status": "Resolved"
    },
    "description": "Solr collapse is a great function to collapse data that is related so we only show one in search result.\n\nJust found one issue related with it - It throw NullPointerException in some cases.\n\nTo reproduce it, first ingest some data - AND commit multiple times.\n\n1. When there is no data that matches the query:\nhttp://localhost:8983/solr/thecollection/select?defType=edismax&q=non-existType:*&fq=\n{!collapse field=seriesId nullPolicy=expand}&fq={!collapse field=programId nullPolicy=expand}\n\n- But the problem only happens if I use both collapse fqs, if I just use one of them, it would be fine.\n\n*2. When the data that matches the query doesn't have the collapse fields\n- This is kind of a big problem as we may store different kinds of docs in one collection, one query may match different kinds of docs. \nIf some docs (docType1) have same value for  field1, we want to collapse them, if other dosc(docType2) have some value for field2, do same things.*\n- channel data doesn't have seriesId or programId\nhttp://localhost:8983/solr/thecollection/select?defType=edismax&q=docType:channel&fq={!collapse field=seriesId nullPolicy=expand}\n&fq=\n{!collapse field=programId nullPolicy=expand}\n\n\n\tBut the problem only happens if I use both collapse fqs, if I just use one of them, it would be fine.\n\n\n\nException from log:\nCaused by: org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://localhost:8983/solr/searchItems_shard1_replica3: java.lang.NullPointerException\n\tat org.apache.solr.search.CollapsingQParserPlugin$OrdScoreCollector.finish(CollapsingQParserPlugin.java:617)\n\tat org.apache.solr.search.CollapsingQParserPlugin$OrdScoreCollector.finish(CollapsingQParserPlugin.java:667)\n\tat org.apache.solr.search.SolrIndexSearcher.buildAndRunCollectorChain(SolrIndexSearcher.java:256)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListNC(SolrIndexSearcher.java:1823)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1640)\n\tat org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:611)\n\tat org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:533)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:295)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:166)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2299)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:658)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:464)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:345)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:296)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1691)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n\nint nextDocBase = currentContext + 1 < this.contexts.length ? this.contexts[(currentContext + 1)].docBase : this.maxDoc; - 617 from solr 6.4.1 CollapsingQParserPlugin.java\n\nSeems related with https://issues.apache.org/jira/browse/SOLR-8807\n\n\tBut SOLR-8807 only fixes issue related with spell checker.\n\n\n\nI may test this with latest solr 6.6.0 when I have time.\n\nUpdated:\nWhether solr supports multiple collapse fields?\n\n\tSeems the query occasionally works (1/10 maybe), but othertimes it throws NullPointerException\nhttp://localhost:18983/solr/thecollection/select?q=programId:* AND id:*&defType=edismax&fq=\n{!collapse+field=id }\n&fq=\n{!collapse+field=programId }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-18T01:05:20+0000",
            "content": "The collapse parser only supports collapsing on one field . You can use a composite key and solve it maybe. ",
            "author": "Varun Thacker",
            "id": "comment-16257831"
        },
        {
            "date": "2017-11-18T01:39:28+0000",
            "content": "Thanks, It make senses.\nCould we update the doc to explicitly state that: The collapse parser only supports collapsing on one field.\n\n\tThis can avoid others to misuse it and later wonder why it doesn't work.\n\n ",
            "author": "jefferyyuan",
            "id": "comment-16257855"
        },
        {
            "date": "2017-11-18T02:11:56+0000",
            "content": "Makes sense . I'll add some wording. Thanks for reporting ",
            "author": "Varun Thacker",
            "id": "comment-16257873"
        }
    ]
}