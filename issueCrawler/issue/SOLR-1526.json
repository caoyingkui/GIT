{
    "id": "SOLR-1526",
    "title": "Client Side Tika integration",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "clients - java",
            "SolrJ"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Often times it is cost prohibitive to send full, rich documents over the wire.  The contrib/extraction library has server side integration with Tika, but it would be nice to have a client side implementation as well.  It should support both metadata and content or just metadata.",
    "attachments": {
        "clientextraction.tar.gz": "https://issues.apache.org/jira/secure/attachment/12468441/clientextraction.tar.gz"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12872460",
            "date": "2010-05-27T22:05:45+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-12973058",
            "date": "2010-12-19T23:17:18+0000",
            "content": "I have a possible implementation for this jira. I created a class SolrFileInputDocument that extends SolrInputDocument, the main difference is that it contains the methods:\n\npublic void addFile(InputStream file)\n\nand \n\npublic void addFile(InputStream file , Metadata metadata)\n\n\nThis two methods will use Tika to extract the content and will end up creating fields (this.addField(...)) of the parent class SolrInputDocument. The SolrFileInputDocument accepts a Map instance to map the extracted metadata to a Solr field, something like this:\n\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"content\", \"text\");\n\t\tmap.put(\"keywords\", \"cat\");\n\t\tmap.put(\"creator\", \"manu\");\n\t\tSolrFileInputDocument document = new  SolrFileInputDocument(map);\n\nI added the classes to another \"contrib\" directory, I don't know if this should be done this way, I just didn't want to add a dependency with Tika that might be not always needed.  Adding this code to a client application would require to add the SolrJ jar plus the \"clientextraction\" jar\n\nI still haven't done anything to keep  the \"prefix\" feature of the ExtractingRequestHandler (which I don't think is going to be difficult) and I'm still don't manage non text fields like dates, but I could do it if you think this is a good approach.\n\nDo you think this could work? I can upload the code tomorrow. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12974176",
            "date": "2010-12-22T12:49:07+0000",
            "content": "I linked this issue to SOLR-1763, as they attempt to solve the same thing, on client vs server side.\n\nInstead of creating two solutions, we should base these two on same code base and config, so that it is easy to switch between them. Perhaps someone starts with server-side extraction but then want to optimize performance by going client-side. The switch should be intuitive.\n\nThus, should we consider porting the whole UpdateProcessorChain to SolrJ? How cool would it be to choose whether to execute an UP on client or server side simply by configuration change? I realize that some UP's may depend on SolrCore or have other difficult dependencies, but it should be possible to work around, not? "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-12978474",
            "date": "2011-01-06T19:50:47+0000",
            "content": "I'm sorry, I saw some comments about the UpdateProcessors, but I couldn't fin enough documentation. Is this a new component? Is it documented somewhere?\nI saw you've been working  with SOLR-1763, do you have something of that? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12978588",
            "date": "2011-01-07T00:20:37+0000",
            "content": "Nope, I have not started on 1763 yet.  "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-12978825",
            "date": "2011-01-07T15:46:49+0000",
            "content": "Now I get what you say about the UpdateRequestProcessor (I thought you where talking about a different/new component). I like the idea of reuse the code, I don't like the idea of adding complexity to SolrJ. Is it worthy to port the UpadateRequestProcessorChain to SolrJ? I definitely wouldn't like to have a configuration file on the SolrJ API. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-12982016",
            "date": "2011-01-15T03:23:07+0000",
            "content": "I'll upload the code I mentioned a couple of days ago in case somebody want it. I added as a new contrib, that's why I'm uploading the tar file instead of a patch, it contains the same libraries as the extracting contrib. It still doesn't work with dates and have lot's of pending things, but I think we should take a decision on how to implement this patch before I continue coding.\nYou will see that the \"lib\" directory is empty, that's because:\n1\u00b0) I can't upload a file with all the jars because it size would be more than 10 MB, the maximum for upload in Jira\n2\u00b0) It uses the same jars as the \"extraction\" contrib, so, for use the clientexctraction, simply copy the jars from the extraction contrib. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043707",
            "date": "2011-06-03T16:46:39+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106355",
            "date": "2011-09-16T14:50:43+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234698",
            "date": "2012-03-21T18:08:55+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717270",
            "date": "2013-07-23T18:47:41+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971035",
            "date": "2014-04-16T12:56:57+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-14597303",
            "date": "2015-06-23T07:56:15+0000",
            "content": "Commenting on this old issue...\n\nNow that Tika has a REST API, it may make more sense to integrate that one on the client side. Then SolrJ as well as other language client libraries could do it more or less the same way?\n\nGrant Ingersoll, there was some talk about adding more official clients to Solr, is that still being discussed? "
        }
    ]
}