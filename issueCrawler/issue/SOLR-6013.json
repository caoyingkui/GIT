{
    "id": "SOLR-6013",
    "title": "Fix method visibility of Evaluator, refactor DateFormatEvaluator for extensibility",
    "details": {
        "affect_versions": "4.7",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This is similar to issue 5981, the Evaluator class is declared as abstract, yet the parseParams method is package private?  Surely this is an oversight, as I wouldn't expect everyone writing their own evaluators to have to deal with parsing the parameters.\n\nSimilarly, I needed to refactor DateFormatEvaluator because I need to do some custom date math/parsing and it wasn't written in a way that I can extend it.\n\nPlease review/apply my attached patch to the next version of Solr, ie: 4.8 or 4.9 if I must wait.\n\nThanks!",
    "attachments": {
        "0001-change-method-variable-visibility-and-refactor-for-extensibility.patch": "https://issues.apache.org/jira/secure/attachment/12641770/0001-change-method-variable-visibility-and-refactor-for-extensibility.patch",
        "0001-change-method-access-to-protected.patch": "https://issues.apache.org/jira/secure/attachment/12642238/0001-change-method-access-to-protected.patch",
        "0001-add-getters-for-datemathparser.patch": "https://issues.apache.org/jira/secure/attachment/12641783/0001-add-getters-for-datemathparser.patch",
        "SOLR-6013.patch": "https://issues.apache.org/jira/secure/attachment/12642818/SOLR-6013.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Aaron LaBella",
            "id": "comment-13980051",
            "date": "2014-04-24T18:18:12+0000",
            "content": "attaching the patch for review/comments. "
        },
        {
            "author": "Aaron LaBella",
            "id": "comment-13980154",
            "date": "2014-04-24T19:46:45+0000",
            "content": "one more small patch after fully testing the changes for extensibility "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13981528",
            "date": "2014-04-25T20:06:37+0000",
            "content": "Thanks Aaron. Some comments:\n\n\tDateFormatEvaluator methods such as evaluateWrapper, evaluateString, parseMathString, resolveMapper and getDateMathParser have no business being public but we can make them protected if you want. All of them should be marked as experimental API.\n\tEvaluator.parseParams should be protected not public.\n\tI don't like that we are creating a method such as getVariableWrapper. These things are not supposed to be pluggable and it should definitely not be public. We can mark it as protected along with a javadoc warning saying that this is experimental API. If I were writing Evaluator today, I'd just use a Callable instead.\n\n\n\nOn an unrelated note, I wonder why we cache all available locales and timezones. If looking up locale/timezone is expensive then it can be done as-needed. I'll create an issue. "
        },
        {
            "author": "Aaron LaBella",
            "id": "comment-13982997",
            "date": "2014-04-28T13:10:21+0000",
            "content": "Thanks Shalin,\n\nI'm attaching another patch to change the method accessors to protected (instead of public) and marked the methods as lucene.experimental.  Let me know if there's anything else.  Otherwise, can you, or someone else commit/push these patches into the 4.x branch so it makes the next release?\n\nThanks "
        },
        {
            "author": "Aaron LaBella",
            "id": "comment-13982999",
            "date": "2014-04-28T13:10:57+0000",
            "content": "NOTE: the patches can be applied from oldest to newest "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13986457",
            "date": "2014-05-01T09:02:08+0000",
            "content": "Thanks Aaron. Here's a single patch with all your changes. We typically attach a patch named as SOLR-xxx.patch and if/when we need to revise, we upload patch with the same name again. Jira will automatically gray out the older patches in the UI. This makes it easier to know the latest patch.\n\nI made three changes:\n\n\tFileListEntityProcessor.getDate was missing a return statement\n\tI removed the getters for VariableWrapper and made the attributes public final\n\tChanged DateFormatCacheKey to static protected.\n\n\n\nI will commit this shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13986459",
            "date": "2014-05-01T09:11:06+0000",
            "content": "Commit 1591573 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1591573 ]\n\nSOLR-6013: Fix method visibility of Evaluator, refactor DateFormatEvaluator for extensibility "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13986460",
            "date": "2014-05-01T09:12:00+0000",
            "content": "Commit 1591574 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591574 ]\n\nSOLR-6013: Fix method visibility of Evaluator, refactor DateFormatEvaluator for extensibility "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13986461",
            "date": "2014-05-01T09:12:27+0000",
            "content": "Thanks Aaron! "
        },
        {
            "author": "Aaron LaBella",
            "id": "comment-13989557",
            "date": "2014-05-05T14:38:01+0000",
            "content": "Thanks Shalin, but, you forgot two of the public 'getter' methods that I added in the last patch to Evaluator.VariableWrapper:\n\n    public String getVarName() \n{\n      return this.varName;\n    }\n\n    public VariableResolver getVariableResolver() \n{\n      return this.vr;\n    }\n\nCan you fix/commit/close?\nThanks.\n\nAaron "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13989563",
            "date": "2014-05-05T14:46:59+0000",
            "content": "you forgot two of the public 'getter' methods that I added in the last patch to Evaluator.VariableWrapper\n\nNo, I didn't. Those two are now public final fields. "
        },
        {
            "author": "Aaron LaBella",
            "id": "comment-13992748",
            "date": "2014-05-08T13:15:01+0000",
            "content": "Shalin, that's fine I suppose (sorry I didn't notice you changed them to public/final).  I'm just wondering though, wouldn't it make sense to access the bean properties using traditional getter methods instead of accessing them directly?  Just curious as to the reasoning of not providing the getters.  In either case, I'm fine with whatever you decide and re-closing this issue.\n\nThanks.\n\nAaron "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13998804",
            "date": "2014-05-15T14:37:51+0000",
            "content": "Shalin, that's fine I suppose (sorry I didn't notice you changed them to public/final). I'm just wondering though, wouldn't it make sense to access the bean properties using traditional getter methods instead of accessing them directly? Just curious as to the reasoning of not providing the getters. In either case, I'm fine with whatever you decide and re-closing this issue.\n\nThis is just a simple internal object with final values. There is no value added by getters here. "
        }
    ]
}