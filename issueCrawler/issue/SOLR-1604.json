{
    "id": "SOLR-1604",
    "title": "Wildcards, ORs etc inside Phrase Queries",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ],
        "components": [
            "query parsers",
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Solr Plugin for ComplexPhraseQueryParser (LUCENE-1486) which supports wildcards, ORs, ranges, fuzzies inside phrase queries.",
    "attachments": {
        "ComplexPhrase_solr_3.4.zip": "https://issues.apache.org/jira/secure/attachment/12565124/ComplexPhrase_solr_3.4.zip",
        "ComplexPhrase.zip": "https://issues.apache.org/jira/secure/attachment/12426236/ComplexPhrase.zip",
        "ComplexPhrase-4.7.zip": "https://issues.apache.org/jira/secure/attachment/12634690/ComplexPhrase-4.7.zip",
        "ComplexPhraseQueryParser.java": "https://issues.apache.org/jira/secure/attachment/12426239/ComplexPhraseQueryParser.java",
        "ComplexPhrase-4.2.1.zip": "https://issues.apache.org/jira/secure/attachment/12579832/ComplexPhrase-4.2.1.zip",
        "SOLR-1604-alternative.patch": "https://issues.apache.org/jira/secure/attachment/12514180/SOLR-1604-alternative.patch",
        "SOLR-1604.patch": "https://issues.apache.org/jira/secure/attachment/12426238/SOLR-1604.patch",
        "SOLR1604.patch": "https://issues.apache.org/jira/secure/attachment/12635001/SOLR1604.patch",
        "ASF.LICENSE.NOT.GRANTED--ComplexPhrase.zip": "https://issues.apache.org/jira/secure/attachment/12441634/ASF.LICENSE.NOT.GRANTED--ComplexPhrase.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ahmet Arslan",
            "id": "comment-12782955",
            "date": "2009-11-26T18:18:00+0000",
            "content": "To enable ComplexPhraseQueryParser in Solr 1.4.0\n\n1-) extract ComplexPhrase.zip and run 'mvn package'\n2-) copy the ComplexPhrase/target/ComplexPhrase-1.0.jar to solrhome/lib directory\n3-) register queryparser to solrhome/conf/solrconfig.xml by adding \n<queryParser name=\"complexphrase\" class=\"org.apache.solr.search.ComplexPhraseQParserPlugin\" /> \n4-) enable it by appending &defType=complexphrase to search url.\n5-) More permanent usage can be configured in solrconfig.xml\n<requestHandler name=\"standard\" class=\"solr.StandardRequestHandler\" default=\"true\">\n  <lst name=\"defaults\">\n    <str name=\"defType\">complexphrase</str> \n  </lst>\n </requestHandler> "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-12782960",
            "date": "2009-11-26T18:38:54+0000",
            "content": "There is a fixed but forgotten bug in ComplexPhraseQuery at lucene-misc-2.9.1.jar.\nThis patch includes addition of a jar to trunk/lib directory. \nThis jar has the corrected version of ComplexPhraseQueryParser.\nI couldn't include the corrected version of ComplexPhraseQueryParser in patch because it accesses a package-private field in Lucene's QueryParser. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-12856540",
            "date": "2010-04-13T18:32:42+0000",
            "content": "solr-core maven artifact already contains AbstractSolrTestCase, so it is deleted from test source directory. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-12859048",
            "date": "2010-04-20T20:07:58+0000",
            "content": "To enable ComplexPhraseQueryParser in Solr 1.4.0 - Revisited\n\nDue to the reasons revealed here [1] this plugin should be loaded using the old way [2]\n\n[1] http://search-lucene.com/m/E49gN1naPyh\n[2] http://wiki.apache.org/solr/SolrPlugins#The_Old_Way\n\n1-) extract ComplexPhrase.zip and run 'mvn package'\n2-) unzip apache-solr-1.4.0.zip and copy ComplexPhrase/target/ComplexPhrase-1.0.jar to apache-solr-1.4.0/lib directory. \n3-) create a new apache-solr-1.4.0\\dist\\apache-solr-1.4.1-dev.war (by running 'ant dist') and use it.\n\n4-) register queryparser to solrhome/conf/solrconfig.xml by adding \n<queryParser name=\"complexphrase\" class=\"org.apache.solr.search.ComplexPhraseQParserPlugin\" /> \n5-) enable it by appending &defType=complexphrase to search url.\n6-) Alternatively you can add \n{!complexphrase} in front of your query string. e.g. &q={!complexphrase}\n\"s* b*\"\n7-) More permanent usage can be configured in solrconfig.xml\n<requestHandler name=\"standard\" class=\"solr.StandardRequestHandler\" default=\"true\">\n<lst name=\"defaults\">\n<str name=\"defType\">complexphrase</str> \n</lst>\n</requestHandler> "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872530",
            "date": "2010-05-27T22:07:16+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-12923982",
            "date": "2010-10-22T19:16:30+0000",
            "content": "There is a need for un-ordered proximity search. http://search-lucene.com/m/3W9fj2yzNy82/\nConfigurable inOrder parameter is added where default behavior is  true .\n\nThe configuration below can be used to obtain same behavior of PhraseQuery in which order of terms is not important.\n\n\n \n<queryParser name=\"complexphrase\" class=\"org.apache.solr.search.ComplexPhraseQParserPlugin\">\n    <bool name=\"inOrder\">false</bool>\n</queryParser>\n\n  "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-12928081",
            "date": "2010-11-04T01:23:25+0000",
            "content": "Hyphen inside the phrase causes exception. e.g. \"sulfur-reducing bacteria\"\nTerje Eggestad's fix is added. "
        },
        {
            "author": "Salman Akram",
            "id": "comment-12980660",
            "date": "2011-01-12T11:02:19+0000",
            "content": "I integrated the patch and its working fine however, there were couple of issues. \n\nOne is related to un-ordered proximity which seems to be fixed with the inOrder parameter but its not working for me (doesn't give any error but its still ordered). I will try to get the patch again coz I also merged it in early Nov so maybe it was applied after that.\n\nThe other issue is that although proximity search works with phrases BUT its not very accurate e.g. If I want to search   \"a b\" within 10 words of \"c\" the query would end up being \"a b c\"~10 but this will also return cases where \"a\" is not necessarily together with \"b\". Any scenario where these 3 words are within 10 words of each other will match.\n\nIs it possible in SOLR to do what I mentioned above? Any other patch? Something like \" \"a b\" c \"~10...\n\nNote: I was going through Lucene-1486 and there Ahmet mentioned that \"Specifically : \"(john johathon) smith\"~10 \" works perfectly. For me it seems there is no difference if I put the parenthesis or not.\n\nThanks! "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-12980702",
            "date": "2011-01-12T13:14:37+0000",
            "content": "Salman, what you are after is nested proximity search which is not currently available in Solr. For alternatives see http://search-lucene.com/m/94ONm1KRuAv1/\n\nRegarding parenthesis inside quotes and inOrder, they are covered in TestCases.\n\nWhat version of solr did you use?  "
        },
        {
            "author": "Salman Akram",
            "id": "comment-12980853",
            "date": "2011-01-12T18:44:09+0000",
            "content": "I am using SOLR 1.4.1 but integrated this patch in early Nov so maybe you committed the inOrder parameter after that?\n\nWhen you say \"Regarding parenthesis inside quotes...\" if this works and groups the words in phrase together won't it work for my case e.g. \"(a b) c\"~10?\n\nI guess if SurroundQuery doesn't use any analyzer it would be very difficult to make the existing queries work (I am using Standard Analyzer). "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-12981322",
            "date": "2011-01-13T16:34:09+0000",
            "content": "Use the most recent file which is non-gray color. Also  there is a \"date attached\" info for files.\nIt works for \"(a b) c\"~10. This is equivalent to \"a c\"~10 OR \"b c\"~10.\n\nSurroundQueryParser does not use Analyzer. It recommended to heavily use  wildcard operator instead. \ne.g. instead of searching foo bar, you search foo* bar*\n\nBut if you are using Standard Analyzer which does not have stemming in it, I think you can use Surround. \nYou can pre-lowercase your queries etc.  You can even pre-analyze your queries since your analyzer does not inject new tokens.\nBut your queries must be well formed, there is not default operator in this.\n\nBut I think it is better to discuss these things in solr/lucene-user mailing list. "
        },
        {
            "author": "Salman Akram",
            "id": "comment-12982651",
            "date": "2011-01-17T14:33:30+0000",
            "content": "I am trying to use CommonGrams with this patch but doesn't seem to work. \n\nIf I don't add \n{!complexphrase} it uses CommonGramsQueryFilterFactory and proper bi-grams are made but of course doesn't use this patch.\n\nIf I add {!complexphrase}\n it simply does it the old way i.e. ignore CommonGrams.\n\nCan you please help how can I combine both these features?\n "
        },
        {
            "author": "Salman Akram",
            "id": "comment-12983208",
            "date": "2011-01-18T14:38:57+0000",
            "content": "I tried the patch with latest non-grayed file but still inOrder doesn't seem to have any impact.\n\nResults for \"a b\"~5 and \"b a\"~5 are still different.\n\nAlso any feedback about CommonGrams integration?\n\nThanks a lot for all the help! "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-12983225",
            "date": "2011-01-18T15:26:49+0000",
            "content": "When you add &debugQuery=on to your search URL, you should see something like in the debug section:\nspanNear([text:a, text:b], 5, false) , false here means un-ordered phrase query. Do you see it?\n\nI will look into CommonGrams this weekend. "
        },
        {
            "author": "Ahsan Iqbal",
            "id": "comment-12983635",
            "date": "2011-01-19T10:04:33+0000",
            "content": "Hi \n\nI am having same issue (inOrder does not seem to work) with \n{!complexphrase}\n, in the debug section  it shows spanNear([text:a, text:b], 5, true),\nmy solrconfig.xml looks like \n\n  <queryParser name=\"complexphrase\" class=\"org.apache.solr.search.ComplexPhraseQParserPlugin\" > \n    <bool name=\"inOrder\">false</bool>\n  </queryParser>\n\n "
        },
        {
            "author": "Ahsan Iqbal",
            "id": "comment-12984381",
            "date": "2011-01-20T20:28:21+0000",
            "content": "Hi Ahmet\n\nI have read on mailing lists dated \"Mon, 20 Jul 2009\" that you had merged the surround query parser with solr.\nI have tried that by downloading jar file for surround query parser. and then pasting that jar file in web-inf/lib \nand configured query parser in solrconfig.xml as \n<queryParser name=\"SurroundQParser\" class=\"org.apache.lucene.queryParser.surround.parser.QueryParser\"/>\n\nthen web page the following exception comes \n\norg.apache.solr.common.SolrException: Error Instantiating QParserPlugin, org.apache.lucene.queryParser.surround.parser.QueryParser is not a org.apache.solr.search.QParserPlugin\n\ncan u guide what i m doing wrong....\n\nRegards\nAhsan "
        },
        {
            "author": "Salman Akram",
            "id": "comment-12984786",
            "date": "2011-01-21T15:59:23+0000",
            "content": "Ahmet,\n\nI would be waiting for your response on CommonGrams. Would be grateful if you can look into it this weekend. Thanks! "
        },
        {
            "author": "Salman Akram",
            "id": "comment-12984820",
            "date": "2011-01-21T17:14:44+0000",
            "content": "Although I would be asking this question on the mailing list as well but since its related to this patch so I wanted to check if this patch would work fine with SurroundQueryParser or if Surround does it itself? This patch functionality is really important for me.\n\nThanks a lot! "
        },
        {
            "author": "Salman Akram",
            "id": "comment-12985771",
            "date": "2011-01-24T16:09:20+0000",
            "content": "Any updates on integration with CommonGrams? Thanks "
        },
        {
            "author": "Salman Akram",
            "id": "comment-12990038",
            "date": "2011-02-03T10:09:23+0000",
            "content": "Reminder! Any updates regarding integration with CommonGrams? Thanks "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043860",
            "date": "2011-06-03T16:47:26+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Thomas Fischer",
            "id": "comment-13061310",
            "date": "2011-07-07T13:48:35+0000",
            "content": "Will the complexphrase search works fine with e.g. GOK:\"PXB 80?\", it will throw an exception if there is no space present, e.g. GOK:\"PXB80?\". The exception is:\nUnknown query type \"org.apache.lucene.search.WildcardQuery\" found in phrase query string \"PXB80?\" "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13068867",
            "date": "2011-07-21T08:53:56+0000",
            "content": "Update for solr 3.3.0\n\n\tDownload apache-solr-3.3.0-src.tgz\n\tDownload most latest ComplexPhrase.zip\n\t'mvn package' will generate 3 files under target folder\ncopy them to apache-solr-3.3.0/solr/lib/\n\t\n\t\tcp target/ComplexPhrase-* Downloads/apache-solr-3.3.0/solr/lib/\n\t\n\t\n\tcall 'ant clean dist' to create a new apache-solr-3.3-SNAPSHOT.war file under solr/dist folder\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106328",
            "date": "2011-09-16T14:50:36+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "meghana",
            "id": "comment-13159238",
            "date": "2011-11-29T13:06:27+0000",
            "content": "I have installed complexphrase parser and followed all instructions for installation... when i run with defType=complexphrase , i get below error.\nHTTP Status 500 - luceneMatchVersion java.lang.NoSuchFieldError: luceneMatchVersion at org.apache.solr.search.SolrComplexPhraseQueryParser\n\nhow to solve this. i am new to solr "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13199739",
            "date": "2012-02-03T14:32:25+0000",
            "content": "The class org.apache.lucene.queryparser.complexPhrase.ComplexPhraseQueryParser was committed and it's available in \"modules/queryparser\". How should this patch proceed in order to make that QParser available in Solr? Should it be added to the trunk? as a contrib? "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13199774",
            "date": "2012-02-03T15:32:45+0000",
            "content": "Committed o.a.l.queryparser.complexPhrase.ComplexPhraseQueryParser does not work with non-default fields. Several Lucene users raised this issue on mailing lists. Mark Harwood said the following on LUCENE-1486 which is still unresolved. However it didn't get any attention.\n\nFixing this would require changing the package name of ComplexPhraseQueryParser or changing the visibility of \"field\" in the QueryParser base class to \"protected\".\nAnyone have any strong feelings about which of these is the most acceptable?\n\nThat's why attachment of this issue is not consuming committed o.a.l.queryparser.complexPhrase.ComplexPhraseQueryParser and released as a solr-plugin.  "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13199786",
            "date": "2012-02-03T15:44:20+0000",
            "content": "That's true, but probably this Jira should focus in using the available ComplexPhraseQueryParser and there should be another Jira (a Lucene one) to fix that problem. The parser was moved for a reason and if we use a duplicated version of the parser in a different package (the old one) this will never be committed. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13200020",
            "date": "2012-02-03T20:20:44+0000",
            "content": "I imagined that LUCENE-1486 will be closed/fixed in the future, hopefully including the non default field patch. Are you saying that non default field problem should be handled in a separate issue (other than LUCENE-1486) ? "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13200033",
            "date": "2012-02-03T20:54:06+0000",
            "content": "It might be LUCENE-1486 or a new Lucene Jira, but what I say is that it should not be fixed in this issue. What I'm proposing is to only provide the necessary classes in Solr to be able to work with the current version of ComplexPhraseQueryParser, even if it is limited in some aspects. Once the ComplexPhraseQueryParser is improved we'll get those improvements in Solr (either automatically or by improving something from this side). "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13204379",
            "date": "2012-02-09T09:14:06+0000",
            "content": "path for trunk "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13204380",
            "date": "2012-02-09T09:14:53+0000",
            "content": "to make inOrder parameter configurable "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13204381",
            "date": "2012-02-09T09:15:43+0000",
            "content": "to enable non-default field searches "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13204804",
            "date": "2012-02-09T20:05:20+0000",
            "content": "In my opinion, we should not be relying on un-committed Lucene code, as it may change or even never get committed. I think this Jira should only consider the current ComplexPhraseQueryParser and we can create a new Solr Jira that depends on LUCENE-3758 for the order/unordered query. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13205863",
            "date": "2012-02-10T23:30:01+0000",
            "content": "I'm attaching an alternative patch with what I propose:\nIt works fine with what's committed today in Lucene, it doesn't require LUCENE-3758 committed to compile or LUCENE-1486 committed to run the tests, however, it\n has the limitations of the currently committed ComplexPhraseQueryParser.\nI have some commented testUnorderedPhraseQuery. It is commented because it currently doesn't run to the the limitations of LUCENE-3758\ntestFieldedQuery is also commented, as it doesn't run until LUCENE-1486 is committed. \nI added testAutogeneratingPhraseQueries, but it is also commented as hyphenated queries don't work when \"autogenerate phrase queries\" is set to true. This is something we should continue working on in this issue.\nI would like to hear opinions on how to continue working. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13226018",
            "date": "2012-03-09T11:17:52+0000",
            "content": "Did anybody got the chance to see these two patches? are there any more opinions on this? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13237044",
            "date": "2012-03-23T20:31:33+0000",
            "content": "Bulk changing fixVersion 3.6 to 4.0 for any open issues that are unassigned and have not been updated since March 19.\n\nEmail spam suppressed for this bulk edit; search for hoss20120323nofix36 to identify all issues edited "
        },
        {
            "author": "Madhusudan",
            "id": "comment-13269555",
            "date": "2012-05-07T12:02:26+0000",
            "content": "I am upgrading Solr to version 3.6 from version 1.4.1 and applied this patch. The Solr is built successfully. After indexing some document I performed a wildcard phrase query \"weekly repo*\", no documents were returned. However, by appending \"&defType=complexphrase\" the solr returned the document containing \"weekly report\". It seems that the complex phrase is not taken as default search handler.\nAlso, when restarting solr I discovered following error in log file as:\n\nSEVERE: org.apache.solr.common.SolrException: Error loading class 'org.apache.solr.search.ComplexPhraseQParserPlugin'\n\tat org.apache.solr.core.SolrResourceLoader.findClass(SolrResourceLoader.java:394)\n\tat org.apache.solr.core.SolrCore.createInstance(SolrCore.java:419)\n\tat org.apache.solr.core.SolrCore.createInitInstance(SolrCore.java:441)\n\tat org.apache.solr.core.SolrCore.initPlugins(SolrCore.java:1612)\n\tat org.apache.solr.core.SolrCore.initPlugins(SolrCore.java:1606)\n\tat org.apache.solr.core.SolrCore.initPlugins(SolrCore.java:1639)\n\tat org.apache.solr.core.SolrCore.initQParsers(SolrCore.java:1556)\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:555)\n\tat org.apache.solr.core.CoreContainer.create(CoreContainer.java:483)\n\tat org.apache.solr.core.CoreContainer.load(CoreContainer.java:335)\n\tat org.apache.solr.core.CoreContainer.load(CoreContainer.java:219)\n\tat org.apache.solr.core.CoreContainer$Initializer.initialize(CoreContainer.java:161)\n\tat org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:96)\n\tat org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)\n\tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n\tat org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:713)\n\tat org.mortbay.jetty.servlet.Context.startContext(Context.java:140)\n\tat org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1282)\n\tat org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:518)\n\tat org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:499)\n\tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n\tat org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\n\tat org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)\n\tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n\tat org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\n\tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n\tat org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)\n\tat org.mortbay.jetty.Server.doStart(Server.java:224)\n\tat org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n\tat org.mortbay.xml.XmlConfiguration.main(XmlConfiguration.java:985)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.mortbay.start.Main.invokeMain(Main.java:194)\n\tat org.mortbay.start.Main.start(Main.java:534)\n\tat org.mortbay.start.Main.start(Main.java:441)\n\tat org.mortbay.start.Main.main(Main.java:119)\nCaused by: java.lang.ClassNotFoundException: org.apache.solr.search.ComplexPhraseQParserPlugin\n\tat java.net.URLClassLoader$1.run(Unknown Source)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat java.net.FactoryURLClassLoader.loadClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Unknown Source)\n\tat org.apache.solr.core.SolrResourceLoader.findClass(SolrResourceLoader.java:378)\n\t... 37 more\n\nI would like some help regarding the use of this patch in new solr. "
        },
        {
            "author": "Mike Bria",
            "id": "comment-13270648",
            "date": "2012-05-08T17:51:38+0000",
            "content": "Hi everyone,\n\nSorry, but I'm green to this stuff.  How do I \"apply/install\" a \"*.patch\" file?\n\nI downloaded and successfully built (well, \"packaged\", via mvn) the ComplexPhrase.zip from Jul-2011.\n\nI then downloaded the 'SOLR-1604-alternative.patch' from Feb-2012. I can open and view it via a text editor...but I have no idea what to do to \"apply\" it?  I'm working on a RH Linux box at the moment.\n\nCan anyone guide me and/or point me in the right direction please?\n\nThanks!\nMike "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13270809",
            "date": "2012-05-08T20:49:40+0000",
            "content": "There are two separate ways to enable this functionality.\n\n\n\tYou can consume *.zip attachments as a solr plugin. Which does not require source code modification, but this particular case requires re-creating solr.war. http://wiki.apache.org/solr/SolrPlugins\n\n\n\n\n\t*.patch files contains source code modifications. http://wiki.apache.org/solr/HowToContribute#Working_With_Patches\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412073",
            "date": "2012-07-11T22:25:54+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429730",
            "date": "2012-08-07T03:42:31+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Phani Vempaty",
            "id": "comment-13438180",
            "date": "2012-08-20T20:41:59+0000",
            "content": "Hello all,\n\n Could I get the grammar file (.jj file) for ComplexPhrase one - It's not there as part of the patch/zip file.\n\nThanks,\nPhani. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13441123",
            "date": "2012-08-24T13:11:43+0000",
            "content": "Could I get the grammar file (.jj file) for ComplexPhrase one - It's not there as part of the patch/zip file.\nIt does not have a separate grammar file. It just extends QueryPaser. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13445553",
            "date": "2012-08-31T01:24:31+0000",
            "content": "removing 4.0 from fix version since this depends on LUCENE-1486 which is not already in the 4x branch .. can revist if there is movement on LUCENE-1486 "
        },
        {
            "author": "Jun Wang",
            "id": "comment-13445851",
            "date": "2012-08-31T11:37:56+0000",
            "content": "I have noticed that  LUCENE-1486 will be fixed in v4.1, and I have found that this patch can not work with solr 4.0. Is there new patch for 4.0? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13445858",
            "date": "2012-08-31T11:43:33+0000",
            "content": "If there would be a working patch, it could be in 4.0. It was just moved out because nobody took care. It's your turn! "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13470313",
            "date": "2012-10-05T13:33:30+0000",
            "content": "this supposed to work with solr 4.0 "
        },
        {
            "author": "Jun Wang",
            "id": "comment-13471436",
            "date": "2012-10-08T07:51:45+0000",
            "content": "Hi, Arslan, when using your patch for 4.0, I got a Exception: java.lang.IllegalArgumentException: Unknown query type \"org.apache.lucene.search.PrefixQuery\" found in phrase query string \"mp*\", my query is q=subject:\"mp*\"&wt=json. This exception was thrown at QueryComponent#process. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13471505",
            "date": "2012-10-08T11:47:54+0000",
            "content": "Jun Wang query string \"mp*\" is somehow invalid. Use &q=mp* instead. This parser expects  at least two clauses inside quotes. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13482896",
            "date": "2012-10-24T01:30:41+0000",
            "content": "Includes README.txt that contain instruction for Solr 4.0.0 "
        },
        {
            "author": "Roman Slavik",
            "id": "comment-13506475",
            "date": "2012-11-29T13:50:29+0000",
            "content": "Hi, I downloaded last version of ComplexPhrase (24/Oct/12 02:30) but have problem with junit test. Here is error log :\n\ntest(org.apache.solr.search.ComplexPhraseQParserPluginTest)  Time elapsed: 0.191 sec  <<< ERROR!\njava.lang.RuntimeException: Exception during query\n\tat __randomizedtesting.SeedInfo.seed([4BF35CC9C13F3B15:C3A763136FC356ED]:0)\n\tat org.apache.solr.util.AbstractSolrTestCase.assertQ(AbstractSolrTestCase.java:283)\n\tat org.apache.solr.search.ComplexPhraseQParserPluginTest.test(ComplexPhraseQParserPluginTest.java:158)\n\t// nothing interest here\nCaused by: java.lang.IllegalArgumentException: Unknown query type \"org.apache.lucene.search.ConstantScoreQuery\" found in phrase query string \"jo* [sma TO smz]\"\n\tat org.apache.lucene.queryparser.classic.ComplexPhraseQueryParser$ComplexPhraseQuery.rewrite(ComplexPhraseQueryParser.java:297)\n\tat org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:599)\n\tat org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:646)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:280)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListNC(SolrIndexSearcher.java:1385)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1260)\n\tat org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:390)\n\tat org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:411)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:206)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1699)\n\tat org.apache.solr.util.TestHarness.query(TestHarness.java:364)\n\tat org.apache.solr.util.TestHarness.query(TestHarness.java:346)\n\tat org.apache.solr.util.AbstractSolrTestCase.assertQ(AbstractSolrTestCase.java:273)\n\t... 41 more\n\n\nIs it error on my side (I didn't change anything)? Or some crucial error? "
        },
        {
            "author": "Ryan Long",
            "id": "comment-13537674",
            "date": "2012-12-21T04:42:46+0000",
            "content": "I also see the error Roman posted, with the latest version "
        },
        {
            "author": "Dmitry Kan",
            "id": "comment-13555062",
            "date": "2013-01-16T14:11:40+0000",
            "content": "This is ComplexPhrase project based on the version submitted on 21/Jul/11. It compiles and runs under solr 3.4. I have uncommented the tests in /org/apache/solr/search/ComplexPhraseQParserPluginTest.java and they passed. "
        },
        {
            "author": "Dmitry Kan",
            "id": "comment-13557053",
            "date": "2013-01-18T08:52:47+0000",
            "content": "Hello! Great work!\n\nI have two questions:\n\n1) What would it take to incorporate phrase searches into this extended query parser?\n\"\\\"a b\\\" c\"~100\nthat is, \"a b\" (phrase search) is found in that order and exactly side by side <=100 tokens away from c.\n\n2) does this implementation support the Boolean operators, like AND, OR, NOT (at least OR and NOT are supported as far as I can see)? Can they be nested? "
        },
        {
            "author": "Paul Morris",
            "id": "comment-13595230",
            "date": "2013-03-06T22:47:24+0000",
            "content": "Hi Ahmet and fellow ComplexPhrase users,\n\nWe have been using the ComplexPhraseQueryParser for a number of years with our SOLR installation, but we were hoping to upgrade to SOLR 4.1 and I was just wondering if ComplexPhrase works with the latest SOLR release? \n\nWe are still on SOLR 1.4.1 so keen to take advantage of all that SOLR 4.1 can offer, but we can't go there without ComplexPhrase  \n\nMuch thanks if anyone has anyone has any thoughts. \n "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13638000",
            "date": "2013-04-22T13:39:02+0000",
            "content": "Bring to 4.2.1 version "
        },
        {
            "author": "ettey siva",
            "id": "comment-13806798",
            "date": "2013-10-28T14:18:45+0000",
            "content": "Hi Ahmet\nI have installed complexphrase parser and followed all instructions for installation... \nEverything is fine except getting NULL Pointer exception when I start JBOSS.\n\n19:46:03,909 ERROR [SolrCore] java.lang.NullPointerException\n\tat org.apache.solr.schema.IndexSchema$DynamicReplacement$DynamicPattern$NameEndsWith.matches(IndexSchema.java:960)\n\tat org.apache.solr.schema.IndexSchema$DynamicReplacement.matches(IndexSchema.java:974)\n\tat org.apache.solr.schema.IndexSchema.getDynamicFieldType(IndexSchema.java:1221)\n\tat org.apache.solr.schema.IndexSchema$SolrQueryAnalyzer.getWrappedAnalyzer(IndexSchema.java:418)\n\tat org.apache.lucene.analysis.AnalyzerWrapper.initReader(AnalyzerWrapper.java:81)\n\tat org.apache.lucene.analysis.Analyzer.tokenStream(Analyzer.java:175)\n\tat org.apache.lucene.queryparser.classic.QueryParserBase.newFieldQuery(QueryParserBase.java:507)\n\tat org.apache.lucene.queryparser.classic.QueryParserBase.getFieldQuery(QueryParserBase.java:495)\n\tat org.apache.lucene.queryparser.classic.QueryParserBase.handleBareTokenQuery(QueryParserBase.java:1109)\n\tat org.apache.lucene.queryparser.classic.QueryParser.Term(QueryParser.java:358)\n\tat org.apache.lucene.queryparser.classic.QueryParser.Clause(QueryParser.java:257)\n\tat org.apache.lucene.queryparser.classic.QueryParser.Query(QueryParser.java:181)\n\tat org.apache.lucene.queryparser.classic.QueryParser.TopLevelQuery(QueryParser.java:170)\n\tat org.apache.lucene.queryparser.classic.QueryParserBase.parse(QueryParserBase.java:121)\n\tat org.apache.lucene.queryparser.classic.ComplexPhraseQueryParser.parse(ComplexPhraseQueryParser.java:107)\n\tat org.apache.solr.search.ComplexPhraseQParser.parse(ComplexPhraseQParserPlugin.java:108)\n\tat org.apache.solr.search.QParser.getQuery(QParser.java:142)\n\tat org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:142)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:187)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1904)\n\tat org.apache.solr.core.QuerySenderListener.newSearcher(QuerySenderListener.java:64)\n\tat org.apache.solr.core.SolrCore$5.call(SolrCore.java:1693)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat java.lang.Thread.run(Unknown Source)\n\nThanks in advance. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13821281",
            "date": "2013-11-13T12:55:28+0000",
            "content": "Hi ettey siva, what version of solr did you use? "
        },
        {
            "author": "ettey siva",
            "id": "comment-13822180",
            "date": "2013-11-14T05:36:50+0000",
            "content": "Hi Ahmet\nWe are using solr 4.4.\nIssue was resolved by uncommenting <defaultSearchField>text</defaultSearchField> in schema.xml\nThank you "
        },
        {
            "author": "Rebecca Tang",
            "id": "comment-13845628",
            "date": "2013-12-11T18:55:30+0000",
            "content": "I have a question about upgrading solr with this plugin.   Because the plugin has to be built into solr.war, I need to go through the process each time I upgrade solr.  It's rather cumbersome.  Does anyone have a better solution?  "
        },
        {
            "author": "Dmitry Kan",
            "id": "comment-13845661",
            "date": "2013-12-11T19:30:39+0000",
            "content": "Rebecca Tang you can define a solr core (even for a single index) and use its lib directory to copy the complex phrase parser jar.\n\nhttps://cwiki.apache.org/confluence/display/solr/Solr+Cores+and+solr.xml\n\nHTH "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13845695",
            "date": "2013-12-11T20:14:53+0000",
            "content": "Rebecca, for the time being thats the only way to use it. Lib directory fails as explained here : http://search-lucene.com/m/E49gN1naPyh\nThe problem is fielded queries do not work with current committed CPQP. If LUCENE-1486 gets fixed then this plugin can consume original CPQP. "
        },
        {
            "author": "suren",
            "id": "comment-13859022",
            "date": "2013-12-30T19:40:54+0000",
            "content": "Ahmet, \nI am using solr 4.3.1. do i still need to apply this patch ? if yes please tell me what patch to apply, I see lot of patches here, not sure which patch for what version of solr. "
        },
        {
            "author": "Randall Rosales Solorzano",
            "id": "comment-13900377",
            "date": "2014-02-13T14:42:45+0000",
            "content": "Hi everyone,\n\nDoes this plugin supports date searches?\nI noticed that doing something like this: \nq=Project.CommenceDate:[2006-08-01T00:00:00Z%20TO%202006-08-01T00:00:00Z]\n\ngives no results (When I use edismax it does return some results).\nI also tried:\nq=Project.CommenceDate:2006-08-01T00:00:00Z\n\nbut I get this error:\nInvalid Date String:'2006-08-01T00'\n\nThanks,\nRandall Rosales "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13924223",
            "date": "2014-03-07T19:10:34+0000",
            "content": "Two things:\n\n1> dots in field names are risky, in general you should only use valid Java variable naming conventions.\n2> How are you submitting this? Because ':' is the delimiter between fields and values, you need to escape this line if you're submitting this via a browser, as 00\\:00\\:00Z\n\nBTW, you'll get faster responses to this kind of question if you raise it on the user's list, more eyes see it.\n "
        },
        {
            "author": "Anonymous",
            "id": "comment-13933675",
            "date": "2014-03-13T18:12:12+0000",
            "content": "Hey,\nI have build Complex Phrase 4.2.1 and followed the steps given in first comment. I am using this parser with solr 4.6 version and when I executed URL by appending &defType=complexphrase I got an error given below. Any help would be appreciated thanks.\njava.lang.RuntimeException: java.lang.NoClassDefFoundError: org/apache/solr/search/SolrIndexReader at org.apache.solr.servlet.SolrDispatchFilter.sendError(SolrDispatchFilter.java:724) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:434) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:197) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99) at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408) at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023) at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589) at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:1852) at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) at java.lang.Thread.run(Unknown Source) Caused by: java.lang.NoClassDefFoundError: org/apache/solr/search/SolrIndexReader at org.apache.solr.search.ComplexPhraseQParserPlugin.createParser(ComplexPhraseQParserPlugin.java:56) at org.apache.solr.search.QParser.getParser(QParser.java:347) at org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:141) at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:187) at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135) at org.apache.solr.core.SolrCore.execute(SolrCore.java:1859) at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:710) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:413) ... 16 more Caused by: java.lang.ClassNotFoundException: org.apache.solr.search.SolrIndexReader at java.net.URLClassLoader$1.run(Unknown Source) at java.net.URLClassLoader$1.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(Unknown Source) at java.lang.ClassLoader.loadClass(Unknown Source) at java.net.FactoryURLClassLoader.loadClass(Unknown Source) at java.lang.ClassLoader.loadClass(Unknown Source) ... 24 more "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13933830",
            "date": "2014-03-13T18:29:21+0000",
            "content": "Hi Anonymous, It is possible that some api has changed. Tomorrow I will attach solr4.6 compatible one. In mean time you could give LUCENE-5205 a try. It has all the functionalities along with additional one. And its author [~tallison@mitre.org] responds very fast to any comments/questions/improvements/bugs etc. By the way SOLR-5410 is the wrapper for LUCENE-5205 "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13933838",
            "date": "2014-03-13T18:31:34+0000",
            "content": "followed the steps given in first comment. \n\nAnonymous, There is a ReadMe.txt in zip file. It has correct instructions. "
        },
        {
            "author": "Anonymous",
            "id": "comment-13933851",
            "date": "2014-03-13T18:36:38+0000",
            "content": "In ReadMe.txt they are putting jar file in to WEB_INF/lib dir and zipping it to new solr.war which I guess pretty much the same. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13933859",
            "date": "2014-03-13T18:40:55+0000",
            "content": "It is mandatory because there is a package private member access and class loader problem. \n\"A class loaded by one class loader can't access package-visible members in a class loaded by a different\nclassloader even if they are nominally in the same package.\" [1]\n\n[1]http://www.pubbs.net/grails/200911/37981/ "
        },
        {
            "author": "Anonymous",
            "id": "comment-13933901",
            "date": "2014-03-13T19:06:15+0000",
            "content": "Now getting this error\njava.lang.NullPointerException at java.io.StringReader.<init>(Unknown Source) at org.apache.lucene.queryparser.classic.QueryParserBase.parse(QueryParserBase.java:117) at org.apache.lucene.queryparser.classic.ComplexPhraseQueryParser.parse(ComplexPhraseQueryParser.java:107) at org.apache.solr.search.ComplexPhraseQParser.parse(ComplexPhraseQParserPlugin.java:108) at org.apache.solr.search.QParser.getQuery(QParser.java:142) at org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:142) at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:187) at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135) at org.apache.solr.core.SolrCore.execute(SolrCore.java:1859) at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:710) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:413) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:197) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99) at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408) at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023) at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589) at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:1852) at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) at java.lang.Thread.run(Unknown Source) "
        },
        {
            "author": "Anonymous",
            "id": "comment-13933921",
            "date": "2014-03-13T19:21:07+0000",
            "content": "Issue Resolved Thanks for helping "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13934859",
            "date": "2014-03-14T10:47:03+0000",
            "content": "Solr 4.7.0 compatible version. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13934897",
            "date": "2014-03-14T11:36:16+0000",
            "content": "I need to look at this, so I'm assigning it to myself. That said, my knowledge of this is sparse, so I'll have a bit of a learning curve. Anyone else who wants to tackle this please feel free to take it.\n\nAhmet:\nThnkas! This couldn't have come at a better time, I was dreading dealing with this. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13935096",
            "date": "2014-03-14T14:52:05+0000",
            "content": "Hi Erick Erickson thanks into looking into this. Let me summarise what have been so far. \n\n1) Consume existing ComplexPhraseQueryParser from lucene code base. Similar to lucene.SurroundQueryParser and solr.SurroundQParserPlugin relationship. This is the easiest one from solr perspective, in a way that it does not require any lucene code change. However fielded queries won't work in this solution. And you cannot set inOrder=\n{true|false}\n parameter for proximity. \n\n2) First fix LUCENE-1486 fielded query problem. Patch already available at LUCENE-1486. Forget about inOrder parameter.\n\n3) First fix both LUCENE-1486 and LUCENE-3758.\n\nPlease let me know which is the preferred one. "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-13935227",
            "date": "2014-03-14T16:35:26+0000",
            "content": "Probably it make sense to base plug-in on solr sources.\nAttached patch contains: org.apache.lucene.queryparser.classic.ComplexPhraseQueryParser and org.apache.solr.search.ComplexPhraseQParserPlugin in solr and lucene sources respectively. \nMade some code cleanup.\nAdded tests on lucene side for org.apache.lucene.queryparser.classic.ComplexPhraseQueryParser.\nRenamed test resources for solr plugin test.\nI continue working on name:jo* prefix query issue when Highlighter return empty string instead of highlight matched term (TODO added). "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13935248",
            "date": "2014-03-14T16:54:06+0000",
            "content": "Probably it make sense to base plug-in on solr sources.\nCan you please explain what do you mean by that? "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-13935418",
            "date": "2014-03-14T18:35:09+0000",
            "content": " I mean 2 things:\n1. Put plug-in sources in Solr codebase (not like separate lib jar)\n2. Make org.apache.solr.search.ComplexPhraseQParserPlugin as built-in standard plug-ins\n\nAdded patch fixing name:jo* issue with highlighter.\nTests in org.apache.solr.search.ComplexPhraseQParserPluginTest uncommented and passing. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13936189",
            "date": "2014-03-15T13:52:46+0000",
            "content": "OK, I was looking around the patch and think I understand at least some of what's going on. To drive this forward, I need a couple of things:\n\n1> Vitaliy and Ahmet to resolve the two patches and let me know what the right one to use is. BTW, Vitaliy, please use \"svn diff\" or the equivalent Git command to create patches. Zipped up sources are much harder to work with.\n\n2> Some idea of a roadmap from here. Straw-man proposal:\n2a> Close 1486 and open a new JIRA if there's a fix for that if necessary. It looks to me like this patch can be committed without 1486 and we'll generate a separate fix.\n2b> commit 3758, and remove inOrder from this patch, then commit this patch.\n2c> I've assigned these to myself so I don't lose track of them. I'll look desperately for cycles to work on them . But I have a couple of long plane flights in my future...\n\n3> Of course we need to document the syntax and behavior here, Cassandra Targett can probably point us in the right direction for doing this right by putting it in the new documentation!\n\n4> I'm also curious what we know now in terms of performance, resource requirements, that kind of stuff.\n\n5> I notice there's a patch labeled as having to do with license stuff. What's up there? Is this just putting the headers in the source files?\n\n5> Anything else? Does anyone out there object to moving forward with this? "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13936212",
            "date": "2014-03-15T14:56:14+0000",
            "content": "Here are some clarification regarding zipped attachments :\n\nZipped attachments are not meant for source code inclusion but for to be consumed as solr plugin. They will never be committed. Mainly because zipped version(s) include a duplicate code from lucene code base. Duplicated class is org.apache.lucene.queryparser.complexPhrase.ComplexPhraseQueryParser. Duplication is done for two reasons :\n\n\tTo enable fielded queries. this duplicate code changes package name to org.apache.lucene.queryparser.classic.ComplexPhraseQueryParser.  Originally Somehow this feature forgotten accidentally in LUCENE1468, while committing lucene.ComplexPhraseQueryParser. After that commit, package name changed from classic to complexPhrase. For this fix it needs to access a field from super class. After realizing this, chancing this fields visibility to protected is accepted by lazy consensus. This is the patch for this.\n\tTo enable ability change inOrder parameter. In original lucene code inOrder parameter is barcoded to true inSpanNearQuery classes. Separate jira for this is LUCENE-3758.\n\n\n\nBy the way, why LUCENE-1486 is re-opened is a mystery. It is not re-opened because of unforgotten non-default patch.  "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13936221",
            "date": "2014-03-15T15:12:52+0000",
            "content": "Vitaliy and Ahmet to resolve the two patches and let me know what the right one to use is.\nnone of them actually. They include source code (ComplexPhraseQueryParser.java) duplication from lucene. I will attach a patch that consumes lucene's ComplexPhraseQueryParser created against trunk.\n\nClose 1486 and open a new JIRA if there's a fix for that if necessary. It looks to me like this patch can be committed without 1486 and we'll generate a separate fix.\n+1. Yes this patch can be committed without LUCENE-1486. +1 for closing LUCENE-1486 given that it is re-opened mysteriously. +1 for creating a separate jira for this functionality just because it is less confusing. \n\ncommit 3758, and remove inOrder from this patch, then commit this patch.\nRequest ability change inOrder parameter came from a user. Robert had this comment about this.\n\nI notice there's a patch labeled as having to do with license stuff.\nThis attachment is old. I accidentally forget selection 'ASF inclusion\" radio box then. Jira weren't displaying feather icon for that. After that incident jira had removed that radio button selection option.  Attachments are ASF granted by default now. That file is renamed automatically by infra.  "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13936263",
            "date": "2014-03-15T17:57:59+0000",
            "content": "This is solr-only patch (solr/core/src/) and does not touch lucene code case. It adds two new java classes (ComplexPhraseQParserPlugin and TestComplexPhraseQParserPlugin) and consumes o.a.lucene.queryparser.complexPhrase.ComplexPhraseQueryParser "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13937220",
            "date": "2014-03-16T16:59:32+0000",
            "content": "Added entry to CHANGES.txt for Solr "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13937283",
            "date": "2014-03-16T19:14:38+0000",
            "content": "QueryEqualityTest added. "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13937334",
            "date": "2014-03-16T21:06:10+0000",
            "content": "following commands pass for me with last patch.\n\n\tant -Dtests.disableHdfs=true -Dtests.badapples=false test\n\tant -Dtestcase=QueryEqualityTest test\n\tant -Dtestcase=TestComplexPhraseQuery test\n\tant -Dtestcase=TestComplexPhraseQParserPlugin test\n\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13937398",
            "date": "2014-03-17T01:11:16+0000",
            "content": "Commit 1578200 from Erick Erickson in branch 'dev/trunk'\n[ https://svn.apache.org/r1578200 ]\n\nSOLR-1604: Wildcards, ORs etc inside Phrase Queries or 'ComplexPhraseQueryParser support in Solr' "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13937428",
            "date": "2014-03-17T03:35:23+0000",
            "content": "Commit 1578218 from Erick Erickson in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1578218 ]\n\nSOLR-1604: Wildcards, ORs etc inside Phrase Queries or 'ComplexPhraseQueryParser support in Solr' "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13937429",
            "date": "2014-03-17T03:36:50+0000",
            "content": "OK, quite a bit has been checked in for this, but I think it's all done. Let's see what happens now! "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13937878",
            "date": "2014-03-17T14:52:43+0000",
            "content": "OK, to finish this off, we need a Wiki/Confluence page, calling for volunteers:\n\nSome points that should be mentioned I think:\n> how to set up/use (simple really, defType)\n> A number of examples\n> inOrder=\"true|false\" as a local param mentioned\n> Anyone's experience with how it performs, especially with things like single-letter wildcards (e.g. \"j* smith\")\n\n "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13938085",
            "date": "2014-03-17T17:35:22+0000",
            "content": "Thanks Erick Erickson for committing this! Here is what I compiled from README.txt from zip distro.\n\nAfter indexing example documents under example/exampledocs via 'java -jar post.jar *.xml' utility\n\nThe query string \n\n\nq=manu:\"a* c*\"&defType=complexphrase\n\n or \n\nq={!complexphrase inOrder=true}manu:\"a* c*\" \n\n will return :\n\nhttp://localhost:8983/solr/collection1/select?q=manu:%22a*%20c*%22&defType=complexphrase&fl=manu\n\n\n<doc>\n  <str name=\"manu\">Apple Computer Inc.</str>\n</doc>\n<doc>\n  <str name=\"manu\">ASUS Computer Inc.</str>\n</doc>\n\n\n\n\ninOrder Parameter can be set in two ways.\n\n1) Its default value is true. If you want to set it to false in a permanent way : register query parser with a different name in solrconfig.xml\n\n <!-- Un-ordered complex phrase query parser -->\n  <queryParser name=\"unorderedcomplexphrase\" class=\"org.apache.solr.search.ComplexPhraseQParserPlugin\">\n    <bool name=\"inOrder\">false</bool>\n  </queryParser>\n\n\n\n2) At query time via local params. \n\nq={!complexphrase inOrder=false df=name}\"bla* pla*\"\n\n\nTo mix ordered and unordered clauses in the same query.\n\n\n+_query_:\"{!complexphrase inOrder=true}manu:\\\"a* c*\\\"\"  +_query_:\"{!complexphrase inOrder=false df=name}\\\"bla* pla*\\\"\"  \n\n\n\nLimitations\n\nmaxBooleanClauses\n\nYou may need to increase \n\n<maxBooleanClauses>1024</maxBooleanClauses>\n\n according to index size in solrconfig.xml because \n\n\"a* c*\"\n\n is expanded into SpanNearQuery \n\nspanNear([spanOr([manu:a, manu:america, manu:apache, manu:apple, manu:asus, manu:ati]), spanOr([manu:canon, manu:co, manu:computer, manu:corp, manu:corsair])], 0, false)\n\n\n\nStopwords\n\nLets say we add the, up, to to collection1/conf/stopwords.txt file and re-index example docs.\nWhile \n\nq=features:\"Stores up to 15,000\"\n\n returns \"Stores up to 15,000 songs, 25,000 photos, or 150 hours of video\",\n\nq=features:\"sto* up to 15*\"&defType=complexphrase \n\n does not return that document because SpanNearQuery has no good way to handle stopwords in a way analagous to PhraseQuery. It is recommended not to use stopword elimination with this query parser. "
        },
        {
            "author": "Anonymous",
            "id": "comment-13938888",
            "date": "2014-03-18T06:39:27+0000",
            "content": "Hey,\nI am using ComplexPhrase 4.2.1 with solr 4.7.0 \nIs there any difference between ComplexPhrase 4.7.0 and ComplexPhrase 4.2.1?\nAnd also \nCan I run this type of query \"hello world h*\" with this parser?  "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13939131",
            "date": "2014-03-18T12:34:38+0000",
            "content": "Hi Anonymous, there is no difference between 4.7.0 and 4.2.1. Committed one has local param addition. You can set inOrder parameter using http://wiki.apache.org/solr/LocalParams\n\nAnd yes \"hello world h*\" is perfectly fine.  "
        },
        {
            "author": "Anonymous",
            "id": "comment-13939139",
            "date": "2014-03-18T12:42:49+0000",
            "content": "Thanks Ahmet,\nYeah I saw that using debugQuery On and found that even phrase query is executed using \"Spannear query\" the addition of wildcard makes it to use \"spanOR\" inside \"spannear query\".\nOne more Question:\nwhen spannear is given multiple words like spannear(hello,world,hello) with slop \"0\" how it is working inside to find all the documents containing all above terms adjacent to eachother? "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13939198",
            "date": "2014-03-18T13:43:51+0000",
            "content": "when spannear is given multiple words like spannear(hello,world,hello) with slop \"0\" \nWith inOrder=true or inOrder=false?\n\nI am sure what happens, when you use the same term twice. I remember someone asked similar question on lucene list. http://search-lucene.com/m/SnDCWotpUB1  Span*Query family less used so there can be gotchas. Can you please tell us this treat is related your use case? "
        },
        {
            "author": "Anonymous",
            "id": "comment-13939505",
            "date": "2014-03-18T17:30:51+0000",
            "content": "inorder=true\nI am asking for general use case there can be different terms also. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13939603",
            "date": "2014-03-18T18:30:25+0000",
            "content": "Let's move this discussion to the user's list. We're in to \"how to use this\" discussion I think. That way we'll get a wider audience for this.\n "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13941021",
            "date": "2014-03-19T21:28:54+0000",
            "content": "Hi Erick Erickson, yes you are right about user's mailing list. \nBy the way did you have a chance look into documentation candidate I wrote? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13946111",
            "date": "2014-03-25T03:33:56+0000",
            "content": "Ahmet Arslan About the doc candidate. I took a quick glance at it, and I say go for it.\n\nThis looks like a good intro. Any shortcomings will become immediately\napparent and we'll fix it. The only documentation I really object to is false\ndocumentation .\n\nSo feel free to put it up on the Wiki. If I could ask you to, after you do create a JIRA\nand assign it to me to put the data over on the CWiki...\n\nThanks! "
        },
        {
            "author": "Ahmet Arslan",
            "id": "comment-13950187",
            "date": "2014-03-28T00:10:55+0000",
            "content": "feel free to put it up on the Wiki.\nDone. http://wiki.apache.org/solr/ComplexPhraseQueryParser\n\ncreate a JIRA and assign it to me to put the data over on the CWiki\u2026\nDone. SOLR-5926 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13982505",
            "date": "2014-04-27T23:25:32+0000",
            "content": "Close issue after release of 4.8.0 "
        }
    ]
}