{
    "id": "SOLR-9251",
    "title": "Allow a tag role:!overseer in replica placement rules",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.2"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The reason to assign an overseer role to  a node is to ensure that the node is exclusively used as overseer. replica placement should support tag called role\n\nSo if a collection is created with rule=role:!overseer no replica should be created in nodes designated as overseer",
    "attachments": {
        "SOLR-9251.patch": "https://issues.apache.org/jira/secure/attachment/12815515/SOLR-9251.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-07-01T12:08:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit df9fb16b46d6b9267364685f78236a8952d2d93a in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=df9fb16 ]\n\nSOLR-9251: Support for a new tag 'role' in replica placement rules ",
            "id": "comment-15358862"
        },
        {
            "date": "2016-07-01T12:09:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5937247ac38aaaeb166b92fcc6f6a08681d73a1e in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5937247 ]\n\nSOLR-9251: Support for a new tag 'role' in replica placement rules ",
            "id": "comment-15358863"
        },
        {
            "date": "2016-08-26T14:00:38+0000",
            "author": "Michael McCandless",
            "content": "Bulk close resolved issues after 6.2.0 release. ",
            "id": "comment-15439047"
        },
        {
            "date": "2016-12-05T20:16:19+0000",
            "author": "David Smiley",
            "content": "Noble Paul does the rule system allow one to have this rule but specify further that a particular shard may go on this overseer node (or any designated node for that matter)?  I hoped this would work:\n&rule=shard:RT,role:overseer\n&rule=shard:!RT,role:!overseer\nThis is a collection with the implicit router and thus named shards; one of them named \"RT\".  When I do this, Solr complains when attempting to create a replica that it could not identify nodes matching the rules.  Note that this notion isn't specific to the overseer... I have also tried with host:specifcHostName and got the same result.  I've tried various ways to try and achieve this but all in vain \n\n(apologies if you'd rather me ask on the user list) ",
            "id": "comment-15723258"
        },
        {
            "date": "2016-12-05T20:24:41+0000",
            "author": "Noble Paul",
            "content": "It works only if you assign the rope of overseer to a particular node. By default, such a role does not exist. Refer to the ADDROLE command ",
            "id": "comment-15723282"
        },
        {
            "date": "2016-12-05T20:27:22+0000",
            "author": "David Smiley",
            "content": "Right; I should add I definitely did that and can confirm the overseer is running there. ",
            "id": "comment-15723290"
        },
        {
            "date": "2016-12-06T04:09:27+0000",
            "author": "Noble Paul",
            "content": "the rule rule=shard:RT,role:overseer  just does not look right. It means all replicas  of shard RT must live in the node which is designated as overseer. why would you want all replicas of a given shard live in one node? it must be conflicting with maxShardsperNode ?\n\nAnyway, share your full create command ",
            "id": "comment-15724268"
        },
        {
            "date": "2016-12-06T05:32:24+0000",
            "author": "David Smiley",
            "content": "Thanks for your help.  I realize that most apps/use-cases call for additional replicas but mine doesn't \u2013 it's an identified and acceptable limitation for the confines of a slim operational budget.  The system that can be reloaded if need be.\n\nTo simplify this a bit, the example below uses a host tag instead of the role.  I don't see an error but I do see a shard going where I don't want it to go.  In particular, I want the \"RT\" shard on a specified host $rtHostName \u2013 this worked okay.  But once I got to the 3rd S<num> shard, I saw it on the host rtHostName.  I repeated this experiment after deleting the collection, and switching up which host is the designated RT host, and it observed this time it was the 4th numbered shard that was co-located with RT (the thing I'm trying to avoid), not the 3rd.  Interesting.  The cluster I am trying this on has 3 Solr nodes.\n\n\ncurl -XPOST --fail \"$SOLR_URL/admin/collections\" -F action=CREATE -F name=\"$COLLECTION\" \\\n  -F router.name=implicit -F shards=RT -F createNodeSet=\"${rtHostName}:8983_solr\" -F maxShardsPerNode=4 \\\n  -F rule=\"shard:RT,host:$rtHostName\" -F rule=\"shard:\\!RT,host:\\!$rtHostName\"\n// note escaping of the exclaimations to make Bash happy\n\ncurl -XPOST --fail \"$SOLR_URL/admin/collections\" -F action=CREATESHARD \\\n  -F collection=\"$COLLECTION\" -F shard=s1\n\n//repeat above several times varying shard name: s1, s2, s3\n\n ",
            "id": "comment-15724425"
        }
    ]
}