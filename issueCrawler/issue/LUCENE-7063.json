{
    "id": "LUCENE-7063",
    "title": "NumericUtils vs LegacyNumericUtils chaos with 6.0",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "Old prefix-coded terms helper functions are still available in LegacyNumericUtils, but its confusing when upgrading because NumericUtils and LegacyNumericUtils have overlaps in the APIs.\n\nOne issue is they share some exact methods that are completely unrelated to this encoding (e.g. floatToSortableInt). The method is just duplication and worst, most lucene code is still calling it from LegacyNumericUtils, even stuff like faceting code using it with docvalues.\n\nAnother issue is the new NumericUtils methods (which use full byte range) have vague names, no javadocs, expose helper methods as public unnecessarily, and cause general confusion.\n\nI don't think NumericUtils and LegacyNumericUtils should overlap. LegacyNumericUtils should only contain legacy stuff!",
    "attachments": {
        "LUCENE-7063.patch": "https://issues.apache.org/jira/secure/attachment/12791094/LUCENE-7063.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15177106",
            "author": "Robert Muir",
            "date": "2016-03-03T03:47:47+0000",
            "content": "Here's a patch. I tried to cleanup numericutils and add javadocs and fix naming of the newer methods (e.g. toSortableBytes and so on).  "
        },
        {
            "id": "comment-15177109",
            "author": "Robert Muir",
            "date": "2016-03-03T03:50:30+0000",
            "content": "Also i found the RUE constants i nuked (instead using java 8 constants like Integer.BYTES) are annoying when its easy to add simple deprecated constants to make it easier on anyone else. "
        },
        {
            "id": "comment-15177116",
            "author": "Robert Muir",
            "date": "2016-03-03T03:58:32+0000",
            "content": "As far as NumericUtils.intToBytes -> NumericUtils.intToSortableBytes, i think its super trappy to have a method with no javadocs called NumericUtils.intToBytes that is doing the sign-bit flipping. \n\nAFAIK LegacyNumericUtils always named this 'toPrefixCoded' so we never had this confusion before. "
        },
        {
            "id": "comment-15177477",
            "author": "Adrien Grand",
            "date": "2016-03-03T08:27:05+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15177706",
            "author": "Michael McCandless",
            "date": "2016-03-03T11:36:10+0000",
            "content": "+1, phew what a mess, thanks Robert Muir! "
        },
        {
            "id": "comment-15177807",
            "author": "Uwe Schindler",
            "date": "2016-03-03T13:27:58+0000",
            "content": "+1 to clean this up! "
        },
        {
            "id": "comment-15178199",
            "author": "Robert Muir",
            "date": "2016-03-03T17:34:36+0000",
            "content": "I'm gonna update this patch after investigating the tests. TestLegacyNumericUtils has a lot of nice unit tests, we should make sure none of these \"get lost\" in the sense, they are probably still possible to port forward to the new full byte[] range encoding and so on. I think this makes sense to just solve all here, so we know floats and doubles are really totally working correct and other things that are super important for core numeric fields. "
        },
        {
            "id": "comment-15178212",
            "author": "Michael McCandless",
            "date": "2016-03-03T17:39:54+0000",
            "content": "Thanks Robert Muir! "
        },
        {
            "id": "comment-15178236",
            "author": "Uwe Schindler",
            "date": "2016-03-03T17:53:36+0000",
            "content": "Thanks! I was about to mention this here, too. TestNumericUtils was written like 7 years ago (without randomization), but the tests are good. They check that compareto of double/float and the sortable long/int behave identical, especially with INFINITY and NAN. We should really test this. We can also randomize the tests now: Create a huge number of floats/doubles and sort them. After that convert every value from sorted random array to a sortableInteger and check that they are also increasing. The NaN and similar special value tests should of course stay as is. "
        },
        {
            "id": "comment-15179064",
            "author": "Robert Muir",
            "date": "2016-03-04T00:59:07+0000",
            "content": "Updated patch: adds TestNumericUtils.\n\nI was surprised this class was missing entirely!\n\nI \"ported\" many methods from TestLegacyNumericUtils to the new encodings: these test round-trip, compare, explicitly test \"special\" values for each type. I added BigInteger versions of each too.\n\nI also added random tests for each type (including bigint) that just do simple round-tripping and comparisons.\n\nThere were tests for NumericUtils binary add() and subtract() methods, but these were in TestBKD! I moved those to this test, too. "
        },
        {
            "id": "comment-15179198",
            "author": "ASF subversion and git services",
            "date": "2016-03-04T02:52:24+0000",
            "content": "Commit 3ffeccab7e9949d7cc1e43027d9347a8968131b2 in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3ffecca ]\n\nLUCENE-7063: add tests/docs for numericutils, rename confusing methods, remove overlap with LegacyNumericUtils "
        },
        {
            "id": "comment-15179234",
            "author": "ASF subversion and git services",
            "date": "2016-03-04T03:19:17+0000",
            "content": "Commit bea235f711d03165cd92f7a59c7de54ff2785d98 in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bea235f ]\n\nLUCENE-7063: add tests/docs for numericutils, rename confusing methods, remove overlap with LegacyNumericUtils "
        },
        {
            "id": "comment-15179278",
            "author": "ASF subversion and git services",
            "date": "2016-03-04T04:02:56+0000",
            "content": "Commit 2aa412132d0a32ab8c9fab538ba55bf09d24cd90 in lucene-solr's branch refs/heads/branch_6_0 from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2aa4121 ]\n\nLUCENE-7063: add tests/docs for numericutils, rename confusing methods, remove overlap with LegacyNumericUtils "
        },
        {
            "id": "comment-15179706",
            "author": "Michael McCandless",
            "date": "2016-03-04T10:38:33+0000",
            "content": "Thanks Robert Muir! "
        }
    ]
}