{
    "id": "LUCENE-7111",
    "title": "DocValuesRangeQuery.newLongRange behaves incorrectly for Long.MAX_VALUE and Long.MIN_VALUE",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/search"
        ],
        "labels": "",
        "fix_versions": [
            "5.5.2",
            "5.6",
            "6.0",
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "It seems that the following queries return all documents, which is unexpected:\n\n\nDocValuesRangeQuery.newLongRange(\"dv\", Long.MAX_VALUE, Long.MAX_VALUE, false, true);\nDocValuesRangeQuery.newLongRange(\"dv\", Long.MIN_VALUE, Long.MIN_VALUE, true, false);\n\n\n\nIn Solr, floats and doubles are converted to longs and -0d gets converted to Long.MIN_VALUE, and queries like {-0d TO 0d] could fail due to this, returning all documents in the index.",
    "attachments": {
        "LUCENE-7111.patch": "https://issues.apache.org/jira/secure/attachment/12793905/LUCENE-7111.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15198674",
            "author": "Ishan Chattopadhyaya",
            "date": "2016-03-17T03:10:00+0000",
            "content": "Attaching a failing test demonstrating the problem. "
        },
        {
            "id": "comment-15198687",
            "author": "Ishan Chattopadhyaya",
            "date": "2016-03-17T03:30:48+0000",
            "content": "Attaching an attempted fix. Not sure if there's a better way to handle this. Could someone please review?\n\nEdit: Never mind, the fix may not be the correct one. I'm still looking deeper. I think the fix is behaving correctly, but I am looking for suggestions from someone who knows that part of the code better. "
        },
        {
            "id": "comment-15199529",
            "author": "Robert Muir",
            "date": "2016-03-17T13:38:17+0000",
            "content": "Logically i am not sure what the behavior should be... in your example min==max but minInclusive and maxInclusive \"disagree\". "
        },
        {
            "id": "comment-15199531",
            "author": "Robert Muir",
            "date": "2016-03-17T13:42:36+0000",
            "content": "and, if its an overflow in the logic that should not happen (looks like it might be), i think its worth it to change the add/subtracts here to Math.addExact/Math.subtractExact. "
        },
        {
            "id": "comment-15199550",
            "author": "Ishan Chattopadhyaya",
            "date": "2016-03-17T13:52:34+0000",
            "content": "Right Robert, I think this overflow/underflow situation should be handled more properly to guard against surprises, even if min==max but minInclusive!=maxExclusive (which I think should throw 0 results). Another way to trigger this overflow is min=Long.MAX_VALUE, max=<any value>, minInclusive=false, maxInclusive=true/false. "
        },
        {
            "id": "comment-15199558",
            "author": "Yonik Seeley",
            "date": "2016-03-17T13:56:53+0000",
            "content": "I think this overflow/underflow situation should be handled more properly to guard against surprises\n\n+1, patch looks good. "
        },
        {
            "id": "comment-15199570",
            "author": "Adrien Grand",
            "date": "2016-03-17T14:02:29+0000",
            "content": "+1 to the patch "
        },
        {
            "id": "comment-15202276",
            "author": "Steve Rowe",
            "date": "2016-03-18T22:24:39+0000",
            "content": "+1 to the patch. "
        },
        {
            "id": "comment-15204135",
            "author": "ASF subversion and git services",
            "date": "2016-03-21T13:00:13+0000",
            "content": "Commit 751a53fe00a4dc02f579d0e4356c2198dbdd7228 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=751a53f ]\n\nLUCENE-7111: DocValuesRangeQuery.newLongRange behaves incorrectly for Long.MAX_VALUE and Long.MIN_VALUE "
        },
        {
            "id": "comment-15204136",
            "author": "ASF subversion and git services",
            "date": "2016-03-21T13:01:24+0000",
            "content": "Commit 4148cdf7446dca03e59cd5662f49b8286b3ba856 in lucene-solr's branch refs/heads/branch_6x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4148cdf ]\n\nLUCENE-7111: DocValuesRangeQuery.newLongRange behaves incorrectly for Long.MAX_VALUE and Long.MIN_VALUE "
        },
        {
            "id": "comment-15204139",
            "author": "ASF subversion and git services",
            "date": "2016-03-21T13:02:03+0000",
            "content": "Commit 1201524d8ff24727993a8d3949d783d5a947221a in lucene-solr's branch refs/heads/branch_6_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1201524 ]\n\nLUCENE-7111: DocValuesRangeQuery.newLongRange behaves incorrectly for Long.MAX_VALUE and Long.MIN_VALUE "
        },
        {
            "id": "comment-15204141",
            "author": "Steve Rowe",
            "date": "2016-03-21T13:02:55+0000",
            "content": "Thanks Ishan! "
        },
        {
            "id": "comment-15279054",
            "author": "Hoss Man",
            "date": "2016-05-10T21:57:20+0000",
            "content": "\nManually correcting fixVersion per Step #S5 of LUCENE-7271 "
        },
        {
            "id": "comment-15333841",
            "author": "Steve Rowe",
            "date": "2016-06-16T14:03:49+0000",
            "content": "Reopening to backport to 5.6 and 5.5.2. "
        },
        {
            "id": "comment-15333850",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T14:09:06+0000",
            "content": "Commit 52d41a1368b7ee36375df0099ccc2042ec5cf642 in lucene-solr's branch refs/heads/branch_5_5 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=52d41a1 ]\n\nLUCENE-7111: DocValuesRangeQuery.newLongRange behaves incorrectly for Long.MAX_VALUE and Long.MIN_VALUE "
        },
        {
            "id": "comment-15333851",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T14:09:08+0000",
            "content": "Commit c541d59f8dc19a174059214874b0d212832c2498 in lucene-solr's branch refs/heads/branch_5x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c541d59 ]\n\nLUCENE-7111: DocValuesRangeQuery.newLongRange behaves incorrectly for Long.MAX_VALUE and Long.MIN_VALUE "
        }
    ]
}