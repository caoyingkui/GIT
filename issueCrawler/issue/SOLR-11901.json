{
    "id": "SOLR-11901",
    "title": "Improve how logging collects class name information",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The log4j.properties that we ship with Solr has this Pattern\n\n%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n\n\n\n\nThe %c collects class name information ( more on this http://logging.apache.org/log4j/2.x/manual/async.html#Location ) which creates a throwable ( https://github.com/apache/log4j/blob/trunk/src/main/java/org/apache/log4j/spi/LoggingEvent.java#L253 ) and it can be expensive\n\nHere is the stack trace excerpt from the JFR capture which lead to this issue\n\norg.apache.log4j.spi.LoggingEvent.getLocationInformation()\norg.apache.log4j.helpers.PatternParser$ClassNamePatternConverter.getFullyQualifiedName(LoggingEvent)\norg.apache.log4j.helpers.PatternParser$NamedPatternConverter.convert(LoggingEvent)\norg.apache.log4j.helpers.PatternConverter.format(StringBuffer, LoggingEvent)\norg.apache.log4j.PatternLayout.format(LoggingEvent)\norg.apache.log4j.WriterAppender.subAppend(LoggingEvent)\norg.apache.log4j.RollingFileAppender.subAppend(LoggingEvent)\n...\norg.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.finish()\t214,658\t32.42\t0\n\n\n\n\nWe could remove capturing the class name information from the default config but ideally capturing the classname is useful. So if we can find a way that doesn't need to create a throwable then it's ideal. \n\nHere is an interesting read : https://shipilev.net/blog/2014/exceptional-performance/",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-25T18:25:03+0000",
            "content": "I will be okay removing class name from production log4j properties but keeping it enabled in test logs. We can mostly follow logs using the messages themselves. If there are places that need better messages, then it'd be nice to improve them anyway. But I am curious if we pay the cost of creating the Throwable even if the particular logging level is disabled? If so, then it is a good argument to add checked logging everywhere. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16339596"
        },
        {
            "date": "2018-07-12T16:58:52+0000",
            "content": "Varun Thacker Can this be closed? ",
            "author": "Erick Erickson",
            "id": "comment-16541948"
        }
    ]
}