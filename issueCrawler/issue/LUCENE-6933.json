{
    "id": "LUCENE-6933",
    "title": "Create a (cleaned up) SVN history in git",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Resolved",
        "type": "Task"
    },
    "description": "Goals:\n\n\tselectively drop projects and core-irrelevant stuff:\n\t\n\t\tlucene/site\n\t\tlucene/nutch\n\t\tlucene/lucy\n\t\tlucene/tika\n\t\tlucene/hadoop\n\t\tlucene/mahout\n\t\tlucene/pylucene\n\t\tlucene/lucene.net\n\t\tlucene/old_versioned_docs\n\t\tlucene/openrelevance\n\t\tlucene/board-reports\n\t\tlucene/java/site\n\t\tlucene/java/nightly\n\t\tlucene/dev/nightly\n\t\tlucene/dev/lucene2878\n\t\tlucene/sandbox/luke\n\t\tlucene/solr/nightly\n\t\n\t\n\tpreserve the history of all changes to core sources (Solr and Lucene).\n\t\n\t\tlucene/java\n\t\tlucene/solr\n\t\tlucene/dev/trunk\n\t\tlucene/dev/branches/branch_3x\n\t\tlucene/dev/branches/branch_4x\n\t\tlucene/dev/branches/branch_5x\n\t\n\t\n\tprovide a way to link git commits and history with svn revisions (amend the log message).\n\tannotate release tags\n\tdeal with large binary blobs (JARs): keep empty files instead for their historical reference only.\n\n\n\nNon goals:\n\n\tno need to preserve \"exact\" merge history from SVN (see \"impossible\" below).\n\tAbility to build ancient versions is not an issue.\n\n\n\nImpossible:\n\n\tIt is not possible to preserve SVN \"merge history\" because of the following reasons:\n\t\n\t\tEach commit in SVN operates on individual files. So one commit can \"copy\" (and record a merge) files from anywhere in the object tree, even modifying them along the way. There simply is no equivalent for this in git.\n\t\tThere are historical commits in SVN that apply changes to multiple branches in one commit (r1569975) and merges from multiple branches in one commit (r940806).\n\t\n\t\n\tBecause exact merge tracking is impossible then what follows is that exact \"linearized\" history of a given file is also impossible to record. Let's say changes X, Y and Z have been applied to a branch of a file A and then merged back. In git, this would be reflected as a single commit flattening X, Y and Z (on the target branch) and three independent commits on the branch. The \"copy-from\" link from one branch to another cannot be represented because, as mentioned, merges are done on entire branches in git, not on individual files. Yes, there are commits in SVN history that have selective file merges (not entire branches).",
    "attachments": {
        "multibranch-commits.log": "https://issues.apache.org/jira/secure/attachment/12778000/multibranch-commits.log"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15058546",
            "author": "Mark Miller",
            "date": "2015-12-15T18:58:51+0000",
            "content": "For some reference, here is a wiki page managing Mavens migration to git: https://cwiki.apache.org/confluence/display/MAVEN/Git+Migration\n\nHere is one of the infra JIRA's: https://issues.apache.org/jira/browse/INFRA-5266 Migrate Maven subprojects to git (surefire,scm,wagon)\n\nNot all very relatable to us in a lot of ways, but a root to get into INFRA tickets for a past migration. "
        },
        {
            "id": "comment-15058575",
            "author": "Dawid Weiss",
            "date": "2015-12-15T19:10:23+0000",
            "content": "Thanks Mark. I don't think I'll use automated scripts, I'll most likely put together something that will translate raw history revision-by-revision (cleaning up the dump local SVN first). It can take a long time if it's a one-time conversion. I realize it's mind-bending, but let's see if it works. I'll need some time to work through it, these are huge files. "
        },
        {
            "id": "comment-15060012",
            "author": "Dawid Weiss",
            "date": "2015-12-16T14:08:17+0000",
            "content": "Also, renames-with-modifications may not be picked up correctly for linear file history, like this one (r894959):\n\nNode-path: lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/CountdownWatcher.java\nNode-kind: file\nNode-action: add\nNode-copyfrom-rev: 892824\nNode-copyfrom-path: lucene/solr/branches/cloud/src/java/org/apache/solr/util/zookeeper/CountdownWatcher.java\nText-delta: true\nText-delta-base-md5: ba60152c2bd0eebe18755e4c555a62d2\nText-content-length: 924\nText-content-md5: f7173659406b1d7e07ee024cbaf78506\nContent-length: 924 \n(diff of changes)\n\n "
        },
        {
            "id": "comment-15060046",
            "author": "Mark Miller",
            "date": "2015-12-16T14:31:40+0000",
            "content": "Most of these issues are not unique to us though right? I assume that a lot of projects that have converted from svn to git have had to just bite the bullet on these issues?\n\nIs it easy to show how widespread the issues are? (eg how many classes are affected) "
        },
        {
            "id": "comment-15060058",
            "author": "Dawid Weiss",
            "date": "2015-12-16T14:39:01+0000",
            "content": "I don't know, to be honest. I think most conversions are done automatically using git-svn and if there are any erroneous merges they're never detected. Note this doesn't mean the final files are incorrect \u2013 they will be the same, it's just the history that is different. git doesn't \"track\" paths, it tracks changes. So you can have two (slightly different) files that will be detected as a \"copy-with-change\" operation.\n\nI think the whole conversion should be based on the \"best-effort\" principle. I can't promise miracles, let's just see how it comes out. "
        },
        {
            "id": "comment-15061015",
            "author": "Dawid Weiss",
            "date": "2015-12-16T22:23:28+0000",
            "content": "After some more digging and experiments it seems realistic that the following multi-step process will get us the goals above.\n\n\t create local SVN repo with the above, preserving dummy commits so that version numbers match Apache's SVN\n\t use git-svn to mirror (separately) lucene/java/, lucene/dev/ and Solr's pre-merge history.\n\t import those separate history trees into one git repo, use grafts and branch filtering to stitch them together.\n\t use https://rtyley.github.io/bfg-repo-cleaner/ to remove/ truncate binary blobs on the git repo\n\t do any finalizing cleanups (clean up any junk branches, tags, add actual release tags throughout the history).\n\n\n\nI'll proceed and try to do all the above locally. If it works, I'll push a \"test\" repo to github so that folks can inspect. Everything takes ages. Patience. "
        },
        {
            "id": "comment-15061027",
            "author": "Upayavira",
            "date": "2015-12-16T22:29:00+0000",
            "content": "Dawid Weiss Just for clarity's sake - what impact will this have on existing clones/forks on Github? Would they continue to work, or break? "
        },
        {
            "id": "comment-15061035",
            "author": "Dawid Weiss",
            "date": "2015-12-16T22:37:16+0000",
            "content": "They will break (because we plan to remove JARs and binary blobs). They are only partially correct anyway (no history past Solr/Lucene merger). You should be able to rebase custom patches fairly easily though since the content of each SVN revision should be identical, only commit hashes will differ. "
        },
        {
            "id": "comment-15063806",
            "author": "Dawid Weiss",
            "date": "2015-12-18T10:40:35+0000",
            "content": "Everything looks good so far. I stitched Solr's and Lucene history beautifully locally. Lots of interesting plot twists on the way.\n\nHad to restart git-svn fetches because it occurred to me that:\n1) the source of git-svn cannot be my local mirror (because it'd show in commit logs); if not for anything else, then for legal reasons we should fetch from Apache's SVN directly,\n2) fixing author entries is easier in git-svn (via authors.txt).\n\nwhile (!successfull()) retry(); "
        },
        {
            "id": "comment-15063848",
            "author": "Dawid Weiss",
            "date": "2015-12-18T11:29:20+0000",
            "content": "Does anybody know scala? I'd love to filter the JAR files to zero size using https://rtyley.github.io/bfg-repo-cleaner/ but the source code is way beyond my comprehension. "
        },
        {
            "id": "comment-15063906",
            "author": "Dawid Weiss",
            "date": "2015-12-18T12:42:23+0000",
            "content": "Nevermind, I did it myself. "
        },
        {
            "id": "comment-15064208",
            "author": "Dawid Weiss",
            "date": "2015-12-18T17:01:07+0000",
            "content": "I pushed a test repo with merged history to:\nhttps://github.com/dweiss/lucene-solr-svn2git\n\nA few remarks.\n\n\n\tI left only branches branch_3x, branch_4x and branch_5x as active branches. trunk becomes master.\n\tThe master's history is not entirely up to date; we can fill in remaining commits by fast-forwarding the remaining commits manually if we switch to git.\n\tAll the historical branches are tags under historical/branches/*, invoke git tag to see the list of tags.\n\tAll releases are tagged in a consistent manner as releases/lucene,solr,lucene-solr/number. Previous \"tags\" from SVN are available under historical tags (see above).\n\tYou can see \"graft points\" in history where Solr's, Lucene and Lucene-Solr's history is merged, see tags grafts/*.\n\tThe size of .git repo with all JARs inside was 455mb. I truncated all the JARs to 0 bytes (but left their filenames in history), the size of git repo after this dropped to 214mb. There are still some large binary blobs (Kuromoji dictionaries, europarl, etc.). I'll see if I can reduce it even more, but this seems acceptable already.\n\tThere are some oddball file permission issues on Windows.  Use git config core.filemode false to ignore.\n\tCheckout master and issue git log --follow lucene/core/src/java/org/apache/lucene/index/IndexWriter.java.\n\tThe blame history may not be identical due to differences in how git and svn handle merges, etc., but the history of each file should be fairly accurate.\n\tgitk --all makes a very interesting reading.\n\n "
        },
        {
            "id": "comment-15064270",
            "author": "Robert Muir",
            "date": "2015-12-18T17:29:35+0000",
            "content": "Is it still expected that there still a problem for lucene core/ history?\n\nE.G. here is indexwriter: https://github.com/dweiss/lucene-solr-svn2git/commits/master/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java?page=8 "
        },
        {
            "id": "comment-15064294",
            "author": "Dawid Weiss",
            "date": "2015-12-18T17:38:31+0000",
            "content": "git log (and github) doesn't display log history past rename. \n\nhttp://stackoverflow.com/questions/5646174/github-follow-history-by-default\n\nTry this though:\n\ngit log --follow lucene\\core\\src\\java\\org\\apache\\lucene\\index\\IndexWriter.java\n\n\nShows the history all the way back to 2001. "
        },
        {
            "id": "comment-15064301",
            "author": "Robert Muir",
            "date": "2015-12-18T17:43:16+0000",
            "content": "Thanks Dawid, i installed the chrome extension (https://chrome.google.com/webstore/detail/github-follow/agalokjhnhheienloigiaoohgmjdpned/) which seems to work. "
        },
        {
            "id": "comment-15064353",
            "author": "Dawid Weiss",
            "date": "2015-12-18T18:02:12+0000",
            "content": "I can go down to git repo size of 160mb by removing any of these files (not currently used on any of the active branches):\n\n*.mem\n*.dat\n*.war\n*.zip\n\n\nThese are mostly precompiled automata, etc. Current blobs (in any of branch_x and master) are not affected, but tags are. Don't know if it makes sense. "
        },
        {
            "id": "comment-15064355",
            "author": "Dawid Weiss",
            "date": "2015-12-18T18:02:38+0000",
            "content": "SVN-git merging procedure (outline). For historical reference. "
        },
        {
            "id": "comment-15064360",
            "author": "Mark Miller",
            "date": "2015-12-18T18:05:39+0000",
            "content": "I can go down to git repo size of 160mb\n\nCall me silly, but I'm +1 on that. Same reason as for the jars - if you want those files, they are in SVN and that is the best place to try and deal with that level. The Git repo should just try to capture all the code / build history it can. "
        },
        {
            "id": "comment-15064369",
            "author": "Mark Miller",
            "date": "2015-12-18T18:07:47+0000",
            "content": "i installed the chrome extension\n\nFor cmd line, if you have Git 2.6 or above, you are supposed to be able to make --follow the default when it makes sense with something like git config --global log.follow \"true\"\n\n "
        },
        {
            "id": "comment-15064566",
            "author": "Dawid Weiss",
            "date": "2015-12-18T19:27:57+0000",
            "content": "I'd keep those resources at least in the releases made in the past 12 months or so. It should still truncate nicely. You can play with it yourself if you wish, the instructions are attached to the issue. I'll attach the custom tool too. "
        },
        {
            "id": "comment-15064580",
            "author": "Dawid Weiss",
            "date": "2015-12-18T19:30:46+0000",
            "content": "Some tools used during the migration process (customized bfg). "
        },
        {
            "id": "comment-15064609",
            "author": "Paul Elschot",
            "date": "2015-12-18T19:43:41+0000",
            "content": "I cloned from  https://github.com/dweiss/lucene-solr-svn2git.git, and it works as advertised.\nAfter a git gc, the total file size is:\n\nfind . -type f -print0 | xargs -0 cat | wc\n2942604 13472825 347467457\n\nThis is just under 350MB, which does not seem to be consistent with the 214MB that was mentioned above. Did I do something wrong?\n\nTo me the actual size is not a problem at all.\n\nFor reference, the total number of files in the local git repo is 9322:\nfind . -type f | wc\n9322    9324  694864\n\nAnd thanks for showing how and when to graft. "
        },
        {
            "id": "comment-15064700",
            "author": "Paul Elschot",
            "date": "2015-12-18T20:20:54+0000",
            "content": "git gui reports this:\n\nNumber of packed objects: 741540\nNumber of packs: 1\nDisk space used by packed objects: 228602 KiB.\n\nSorry for the noise, the earlier counts include the working tree. "
        },
        {
            "id": "comment-15064736",
            "author": "Dawid Weiss",
            "date": "2015-12-18T20:49:10+0000",
            "content": "The exact number will depend slightly on the git version used (I had 1.x on one machine and 2.x on the other). I used simple estimates in the form of \n\ndu -sh .git\n\n\non a clean clone. "
        },
        {
            "id": "comment-15064770",
            "author": "David Smiley",
            "date": "2015-12-18T21:11:53+0000",
            "content": "Thanks for all the hard work you put into this Dawid!\n\nI was trying to test out how far the history goes back on the Solr side, using SearchComponent.java as an example.  I tried this:\ngit log --follow solr/core/src/java/org/apache/solr/handler/component/SearchComponent.java but it only goes back to 2012-04.  But when I use other tools I'm familiar with, Atlassian SourceTree, I found early commit messages with \"SearchComponent\" in them revealing commit 4a490cff561e9ab492ec27fdc55c51c0db02ffed in 2007-12.  Any ideas why git --log didn't work in this case? "
        },
        {
            "id": "comment-15064795",
            "author": "Dawid Weiss",
            "date": "2015-12-18T21:31:43+0000",
            "content": "Look at comments above, David \u2013 the tools probably don't \"follow\" renames. There should be an answer in those tools' docs how to fix this behavior, the history of renames is in the repo, for sure. "
        },
        {
            "id": "comment-15064797",
            "author": "Dawid Weiss",
            "date": "2015-12-18T21:32:27+0000",
            "content": "Oops, sorry. I misread your comment. I don't know. will look into it tomorrow. "
        },
        {
            "id": "comment-15064802",
            "author": "Mark Miller",
            "date": "2015-12-18T21:34:46+0000",
            "content": "Sounds like David is saying the opposite - the other tools are following and --follow with git is not working.\n\nDavid Smiley, is your git at least 1.5.3? I think that's where it was introduced on a quick google search. "
        },
        {
            "id": "comment-15065571",
            "author": "Dawid Weiss",
            "date": "2015-12-19T23:27:03+0000",
            "content": "No, it's indeed truncated. The reason for this is, like I mentioned, the fact that git doesn't really remember the exact \"path\" of a file (renames). It just tries its best to guess renames by moving paths of objects with the same hash.\n\nThe history of SearchComponent ends at this commit in git:\n\nsvn log -v -r 1144761 https://svn.apache.org/repos/asf/lucene/\n\nIf you look at the SVN log you'll see that this commit does both renames from a branch and changes to code; this can't be reflected in the counterpart git commit. I didn't track the exact reason why git can't follow the diff-change. Like I mentioned multiple times, it's the best effort, it's not exact history \u2013 SVN and git are different in terms how they manage file tracking. Feel free to browse the object graph though (gitk), perhaps you can improve upon this situation! "
        },
        {
            "id": "comment-15065666",
            "author": "Dawid Weiss",
            "date": "2015-12-20T09:07:23+0000",
            "content": "Btw. this is a good observation, David \u2013 exactly what I was hoping for when I solicited feedback. I'll see if there's anything to be improved in the import/ conversion process, but like I said, I wouldn't be too optimistic. "
        },
        {
            "id": "comment-15065691",
            "author": "Dawid Weiss",
            "date": "2015-12-20T09:51:33+0000",
            "content": "All I can say is the \"continuity\" of this file with respect to git log gets truncated somewhere when files have been moved from src/java to src/core/... Note that git blame does show changes this this file correctly though (or at least stretches back to Ryan's initial commit).  "
        },
        {
            "id": "comment-15065694",
            "author": "Stefan Pohl",
            "date": "2015-12-20T09:55:04+0000",
            "content": "Would it technically be feasible to detect such rename/move + change commits and split them up into two git commits? Within git, I typically do separate commits for rename/move operations, not having to rely on git's best-effort detection of very similar files. "
        },
        {
            "id": "comment-15065905",
            "author": "Dawid Weiss",
            "date": "2015-12-20T22:22:43+0000",
            "content": "Technically it's how it should be done in git (a good practice to preserve history of renames). But practically no, I can't do it \u2013 it's what git-svn does by default and the prostpect of doing it by hand for the bazillion of mixed change/merges in the project's history is not an appealing one.\n\nPerhaps you could try to fix this one particular merge somehow (git should be seeing the rename with options to detect renames harder, but it still doesn't), but I'm afraid I won't have the time to do it. Besides, this would be serious fiddling with commit history \u2013 all I did was fuse histories together, I didn't add new commits or alter existing commits. Whether we should do it just so that git log works... don't know. Look at the merge history around the problematic commit with gitk --all... no wonder git gets confused. I definitely get confused! "
        },
        {
            "id": "comment-15066314",
            "author": "Dawid Weiss",
            "date": "2015-12-21T10:53:50+0000",
            "content": "I think there's still something wrong with the migration process (with respect to the newest Solr history). Too many root commits in Solr history, something is wrong \u2013 perhaps this is the source of the problem with history logging. I'll be looking into this while waiting for Santa. "
        },
        {
            "id": "comment-15074305",
            "author": "Dawid Weiss",
            "date": "2015-12-29T21:16:16+0000",
            "content": "Thanks for pointing out the problem, David. The cause of the issue was Steve's rename-and-merge a long time ago... very complex, not worth mentioning. I fixed it with some manual tweaks and updated the repo (your local clone will be invalid and will contain stale refs, fetch a fresh one).\n\nhttps://github.com/dweiss/lucene-solr-svn2git\n\nThe migration procedure is 100% repeatable and I can roll out an up-to-date copy any time. It looks super good to me. I did not size-optimize anything except JAR files so that releases and diffs between commits are true. I don't think it's worth the trouble; a clone from github on my machine slurps a few mb/s.\n\nI think this issue is ready and I'm closing it. "
        },
        {
            "id": "comment-15074306",
            "author": "Dawid Weiss",
            "date": "2015-12-29T21:16:39+0000",
            "content": "Ready. Whenever we decide to switch, it's there. "
        },
        {
            "id": "comment-15074636",
            "author": "Yonik Seeley",
            "date": "2015-12-30T05:10:11+0000",
            "content": "Thanks Dawid, awesome job!  That missing history in git made some things painful for me in the past... so glad it's fixed! "
        },
        {
            "id": "comment-15074676",
            "author": "David Smiley",
            "date": "2015-12-30T06:24:32+0000",
            "content": "Excellent; this is great!  I tried with another old source file too and git followed it.  Thanks again Dawid. "
        },
        {
            "id": "comment-15074825",
            "author": "Dawid Weiss",
            "date": "2015-12-30T09:15:53+0000",
            "content": "Thanks. I've placed the scripts and know-how on how the migration process is performed here:\nhttps://github.com/dweiss/lucene-solr-svn2git-migration\n\nThe current git version of SVN at Apache is broken and cannot be reused, author tags are messed up:\n\n> git remote -v\norigin  git://git.apache.org/lucene-solr.git (fetch)\norigin  git://git.apache.org/lucene-solr.git (push)\n> git log --all | grep \"Author: \" | sort -u\n...\nAuthor: Adrien Grand <jpountz@apache.org =  jpountz = Adrien Grand jpountz@apache.org@apache.org>\nAuthor: Adrien Grand <jpountz@apache.org>\n...\nAuthor: dsmiley <dsmiley@13f79535-47bb-0310-9956-ffa450edef68>\nAuthor: ehatcher <ehatcher@13f79535-47bb-0310-9956-ffa450edef68>\n... (and more)\n\n\n\nI fetched everything from scratch via git-svn (see the scripts if you're interested). I also introduced a few minor synthetic commits that reshuffle folders or do some cleanups so that the repository looks more sensible. An overview of what it looks like conceptually (with revision numbers and sources) is here:\n\nhttps://raw.githubusercontent.com/dweiss/lucene-solr-svn2git-migration/master/docs/dev-lines-overview.png\n\nAs mentioned previously, I also cleaned up tags and branches (moving all current branches to tags under history/*. These (and graft tags) can be deleted of course - I left them as a reference. All releases use release/(project)/(version) convention, again converted to more modern, dot-separated naming scheme (SVN tags used underscores back from CVS days). "
        }
    ]
}