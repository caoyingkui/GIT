{
    "id": "SOLR-5079",
    "title": "Create ngroups for pivot faceting",
    "details": {
        "affect_versions": "4.5,                                            6.0",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "To save network traffic it would be great to now how many entries a facet list contains without loading the complete facet list. This issue is created because of an out of memory in loading the pivot facet with facet.limit set to -1.\n\nThe facet.pivot result would then look like\n\nq=facet.pivot=cat,id&facet.pivot.ngroup=true\n\n\n<arr name=\"cat,id\">\n <lst>\n   <str name=\"field\">cat/str>\n   <str name=\"value\">a</str>\n   <int name=\"count\">20</int>\n   <arr name=\"pivot\">\n   <lst>\n     <str name=\"field\">id</str>\n     <int name=\"value\">69</int>\n     <int name=\"count\">10</int>\n   </lst>\n   <lst>\n     <str name=\"field\">id</str>\n     <int name=\"value\">71</int>\n     <int name=\"count\">10</int>\n   </lst>\n   <int name=\"ngroup\">2</int> <!-- The new ngroup parm --> \n </lst>\n</arr>\n\n\n\nIf you add another new param for example facet.pivot.visible the\nresult could create less traffic\nespecially if there are a lot of ids and the param facet.limit=-1 is set\n\nq=facet.pivot=cat,id&facet.ngroup=true&f.id.facet.pivot.visible=false\n\n\n<arr name=\"cat,id\">\n <lst>\n   <str name=\"field\">cat/str>\n   <str name=\"value\">a</str>\n   <int name=\"count\">20</int>\n   <!-- No pivot list of id -->\n   <int name=\"ngroup\">2</int> \n </lst>\n</arr>",
    "attachments": {
        "SOLR-5079.patch": "https://issues.apache.org/jira/secure/attachment/12594420/SOLR-5079.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Sandro Mario Zbinden",
            "id": "comment-13720857",
            "date": "2013-07-26T14:58:40+0000",
            "content": "I created a first patch that implement this feature and reduce the traffic for loading facet pivoting. In this patch there is a disadvantage. If facet.limit is not set to -1 the ngroup count is affected.\n\nThe main change of the code is that i added the ngroup in the PivotFacetHelper class\n\nPivotFacetHelper.java\n          boolean ngroups = params.getFieldBool(field, FacetParams.FACET_PIVOT_NGROUP, false);\n          if (ngroups) {\n            int ngroup = 0;\n            for (Entry<String,Integer> entry  : nl) {\n              if (entry.getValue() > 0) {\n                ngroup = ngroup + 1;\n              }\n            }\n            pivot.add(\"ngroup\", ngroup);  \n          }\n\n\n\nFurther on only if set visible for the specific field is set the pivotlist will be added\n\nPivotFacetHelper.java\n          if (nl.size() >= minMatch) {\n            boolean visible = params.getFieldBool(subField, FacetParams.FACET_PIVOT_VISIBLE, true);\n            if (visible) {\n              pivot.add( \"pivot\", doPivots( nl, subField, nextField, fnames, subset) );  \n            }\n            values.add( pivot ); // only add response if there are some counts\n          }\n\n "
        },
        {
            "author": "Sandro Mario Zbinden",
            "id": "comment-13720940",
            "date": "2013-07-26T16:38:16+0000",
            "content": "Add a nex patch file with a fix of reading the PivotField in SolrJ "
        },
        {
            "author": "Brett Lucey",
            "id": "comment-14000993",
            "date": "2014-05-18T04:52:12+0000",
            "content": "I don't think this patch would work (as is) if the dataset is sharded.  Addressing the issue in a sharded dataset could be somewhat challenging as well, since you would need some mechanism to avoid double-counting a value that might be present on more than one shard.  Have you considered this use case? "
        }
    ]
}