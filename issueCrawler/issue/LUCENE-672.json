{
    "id": "LUCENE-672",
    "title": "new merge policy",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "New Feature",
        "fix_versions": [
            "2.1"
        ],
        "affect_versions": "2.0.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "New merge policy developed in the course of \nhttp://issues.apache.org/jira/browse/LUCENE-565\nhttp://issues.apache.org/jira/secure/attachment/12340475/newMergePolicy.Sept08.patch",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2006-09-14T18:03:31+0000",
            "content": "cloned LUCENE-565 to track this separately. ",
            "author": "Yonik Seeley",
            "id": "comment-12434753"
        },
        {
            "date": "2006-09-14T18:32:47+0000",
            "content": "I just committed http://issues.apache.org/jira/secure/attachment/12340475/newMergePolicy.Sept08.patch\nThanks for the very thorough job on this patch! ",
            "author": "Yonik Seeley",
            "id": "comment-12434758"
        },
        {
            "date": "2006-09-16T03:46:59+0000",
            "content": "A small fix named KeepDocCount0Segment.Sept15.patch is attached to LUCENE-565 (can't attach here).\n\nIn mergeSegments(...), if the doc count of a merged segment is 0, it is not added to the index (it should be properly cleaned up). Before LUCENE-672, a merged segment was always added to the index. The use of mergeSegments(...) in, e.g. addIndexes(Directory[]), assumed that behaviour. For code simplicity, this fix restores the old behaviour that a merged segment is always added to the index. This does NOT break any of the good properties of the new merge policy.\n\nTestIndexWriterMergePolicy is slightly modified to fix a bug and to check that segments are probably cleaned up. The patch passes all the tests. ",
            "author": "Ning Li",
            "id": "comment-12435174"
        },
        {
            "date": "2006-09-18T19:18:18+0000",
            "content": "Should lowerBound start off as -1 in maybeMergeSegments if we keep 0 sized segments? ",
            "author": "Yonik Seeley",
            "id": "comment-12435556"
        },
        {
            "date": "2006-09-18T20:54:52+0000",
            "content": "> Should lowerBound start off as -1 in maybeMergeSegments if we keep 0 sized segments?\n\nGood catch! Although the rightmost disk segment cannot be a 0-sized segment right now, it could be when NewIndexModifier is in.\n\nShoud I submit a new patch? ",
            "author": "Ning Li",
            "id": "comment-12435571"
        },
        {
            "date": "2006-09-18T21:22:49+0000",
            "content": "No need to submit a new patch... I made the change and committed it. ",
            "author": "Yonik Seeley",
            "id": "comment-12435579"
        }
    ]
}