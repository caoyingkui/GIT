{
    "id": "LUCENE-7419",
    "title": "performance bug in tokenstream.end()",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.5.5",
            "6.2",
            "7.0"
        ],
        "priority": "Blocker",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "TokenStream.end() calls getAttribute(), which is pretty costly to do per-stream.\n\nIt does its current hack, because in the ctor of TokenStream is \"too early\".\n\nInstead, we can just add a variant of clear(), called end() to AttributeImpl. For most attributes it defers to clear, but for PosIncAtt it can handle the special case.",
    "attachments": {
        "LUCENE-7419.patch": "https://issues.apache.org/jira/secure/attachment/12824445/LUCENE-7419.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15427196",
            "author": "Robert Muir",
            "date": "2016-08-18T21:32:00+0000",
            "content": "Here is one solution. There may be other ways to fix this. "
        },
        {
            "id": "comment-15427202",
            "author": "Michael McCandless",
            "date": "2016-08-18T21:34:45+0000",
            "content": "+1, thanks Robert Muir\n\nThis is the apparent source of the very unexpected slowdown here: https://github.com/elastic/elasticsearch/pull/19867#issuecomment-240841821\n\nWas quite \"fun\" to track down \n\nI'm still not sure why this affects my 2-socket (72 core) box but not my single socket (8 core) boxes, but when indexing geonames data with Elasticsearch this dynamic attribute lookup per StringField was exceptionally costly. "
        },
        {
            "id": "comment-15427205",
            "author": "Michael McCandless",
            "date": "2016-08-18T21:41:32+0000",
            "content": "The performance hit caused by this is really surprising: see the nightly Elasticsearch indexing benchmark: https://benchmarks-old.elastic.co/index.html#indexing\n\nThat drop on 8/9/2016 was from the \"simple\" change to Elasticsearch to pass binary terms (BytesRef) to Lucene instead of String terms via StringField.\n\nIt dropped indexing performance for the fastsettings run from ~80 K docs/sec to ~39 K docs/sec, but Robert Muir's patch here gets the performance back to ~80 K docs/sec. "
        },
        {
            "id": "comment-15427344",
            "author": "Michael McCandless",
            "date": "2016-08-18T23:14:06+0000",
            "content": "I think we should fix this for 6.2.0. "
        },
        {
            "id": "comment-15427806",
            "author": "Adrien Grand",
            "date": "2016-08-19T08:11:07+0000",
            "content": "So if I understand correctly, the slow down was caused by the fact that binary terms use a different impl for their TermToBytesRefAttribute (BytesTermAttributeImpl rather than PackedTokenAttributeImpl) and this confuses hotspot when getAttribute is called (regardless of which attribute is looked up)?\n\nShould PackedTokenAttributeImpl only do positionIncrement = 0; after calling super.end();? The position increment seems to be the only attribute that deserves special handling? Or maybe you wanted to have explicit handling of all attributes that are wrapper in this \u00fcber attribute impl? "
        },
        {
            "id": "comment-15427979",
            "author": "Robert Muir",
            "date": "2016-08-19T10:35:14+0000",
            "content": "That's not the issue as I see it.\n\nTo me, the problem is that we do getAttribute per-stream here (rather than once in a ctor, like everywhere else). We should not be doing that.\n\nAs far as the Packed impl, i did it the way i did to keep it simple and make it clear what its doing. If we were to call super.end(), which then would call close(), setting positionIncrement to 1, then we were to set it back to 0, i mean, that is totally unclear. I can't imagine why we would do it in that way, its not like we are paying a tax for lines of code. Even if we were, this would be worth it for the extra lines, because its way simpler not to do stuff like that! "
        },
        {
            "id": "comment-15427993",
            "author": "Uwe Schindler",
            "date": "2016-08-19T10:59:23+0000",
            "content": "I agree, the latest patch is the only correct fix. The special case for PositionIncrement inside the TokenStream base class is just wrong + it adds overhead in getAttribute. I agree attributes should have the option to say on their own what they need to do on end!\n\nIt would be good to find out when this problem in end() was added. To me thois code looked completely new, never have seen it before! "
        },
        {
            "id": "comment-15427997",
            "author": "Robert Muir",
            "date": "2016-08-19T11:02:29+0000",
            "content": "I am sure the problem originated when factoring lots of +1/-1 logic outside of documentsinverter. The indexer used to have a lot of this \"special case logic\" itself, to handle multi-valued fields which was really confusing. "
        },
        {
            "id": "comment-15428142",
            "author": "Adrien Grand",
            "date": "2016-08-19T12:52:03+0000",
            "content": "I was just curious to understand whit made hotspot unhappy since this the getAttribute call did not seem to be much of an issue is the case the field is a string rather than opaque bytes. I agree the removal of this per-stream getAttribute call is a good move regardless. "
        },
        {
            "id": "comment-15428181",
            "author": "Robert Muir",
            "date": "2016-08-19T13:23:12+0000",
            "content": "As soon as mike pointed to this area of the code being problematic, i saw this getAttribute() call, said \"that is bogus\" and made a patch. From my perspective thats the whole story, i didn't investigate any further.  "
        },
        {
            "id": "comment-15428185",
            "author": "Michael McCandless",
            "date": "2016-08-19T13:27:02+0000",
            "content": "I tested indexing all geonames, using lucene server (https://github.com/mikemccand/luceneserver) and this patch gets a ~5% speedup:\n\n\n  before: Total: 426514.0 docs/sec for 26.1 sec\n\u00a0  after: Total: 447550.4 docs/sec for 24.8 sec\n\n\n\nThis is on an 8 core box, so it's nice to confirm I can see a speedup not just on the crazy 72 core box. "
        },
        {
            "id": "comment-15428224",
            "author": "David Smiley",
            "date": "2016-08-19T13:57:01+0000",
            "content": "Nice; +1 to the patch and to commit to v6.2 "
        },
        {
            "id": "comment-15428319",
            "author": "ASF subversion and git services",
            "date": "2016-08-19T15:14:56+0000",
            "content": "Commit f8536ce72606af6c75cf9137f354da57bb0f3dbc in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f8536ce ]\n\nLUCENE-7419: Don't lookup PositionIncrementAttribute every time in TokenStream.end() "
        },
        {
            "id": "comment-15428328",
            "author": "ASF subversion and git services",
            "date": "2016-08-19T15:26:25+0000",
            "content": "Commit 326db813fa1791a3ada5d5dafebfb47268f03632 in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=326db81 ]\n\nLUCENE-7419: Don't lookup PositionIncrementAttribute every time in TokenStream.end() "
        },
        {
            "id": "comment-15428334",
            "author": "Robert Muir",
            "date": "2016-08-19T15:30:41+0000",
            "content": "thanks Michael McCandless for tracking this down! "
        },
        {
            "id": "comment-15439064",
            "author": "Michael McCandless",
            "date": "2016-08-26T14:00:56+0000",
            "content": "Bulk close resolved issues after 6.2.0 release. "
        },
        {
            "id": "comment-15880330",
            "author": "Michael McCandless",
            "date": "2017-02-23T12:21:44+0000",
            "content": "Reopening for eventual possible backport to a potential 5.5.5 release. "
        },
        {
            "id": "comment-15880500",
            "author": "ASF subversion and git services",
            "date": "2017-02-23T14:20:59+0000",
            "content": "Commit 4dbaed52a0a721b2b9668ee8074da42585fd54ea in lucene-solr's branch refs/heads/branch_5_5 from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4dbaed5 ]\n\nLUCENE-7419: Don't lookup PositionIncrementAttribute every time in TokenStream.end() "
        },
        {
            "id": "comment-15880502",
            "author": "Michael McCandless",
            "date": "2017-02-23T14:21:51+0000",
            "content": "OK I backported to 5.5.x branch so next release we do here will have it. "
        },
        {
            "id": "comment-16217242",
            "author": "Steve Rowe",
            "date": "2017-10-24T16:54:08+0000",
            "content": "Bulk close for 5.5.5 release. "
        }
    ]
}