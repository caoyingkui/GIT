{
    "id": "SOLR-3195",
    "title": "timeAllowed is ignored for grouping queries",
    "details": {
        "affect_versions": "3.5,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "For grouping queries, the timeAllowed parameter is ignored.  I couldn't find this limitation documented anywhere, and we would like to use that feature in our production system.  I have created a patch that makes grouping queries respect the timeAllowed parameter.  The test cases all pass, and it and it seems to work well.  I added support for both distributed and non-distributed grouping.",
    "attachments": {
        "SOLR-3195-timeallowed-for-grouping-3x-backport.patch": "https://issues.apache.org/jira/secure/attachment/12517032/SOLR-3195-timeallowed-for-grouping-3x-backport.patch",
        "SOLR-3195-timeallowed-for-grouping.patch": "https://issues.apache.org/jira/secure/attachment/12516900/SOLR-3195-timeallowed-for-grouping.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Martijn van Groningen",
            "id": "comment-13221913",
            "date": "2012-03-04T15:14:49+0000",
            "content": "This was never implemented. Good catch! The patch looks fine. I'll commit soon. "
        },
        {
            "author": "Russell Black",
            "id": "comment-13221916",
            "date": "2012-03-04T15:27:21+0000",
            "content": "Martijn, \n\nThere is one thing I'd like your opinion on \u2013 for distributed grouping the first phase and second phase are given the full time allotment with my patch, essentially resulting in doubling the effect of the timeAllowed parameter.  Do you think we should try to be smarter about it?  We could subtract the time time of the first query from the timeAllowed parameter that gets handed to the second query, resulting in more accurate overall time.  \n\nWhat do you think? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13221984",
            "date": "2012-03-04T19:42:33+0000",
            "content": "Russell, that is a good point. I think we just can use the qtime from the first query and subtract that from the specified timeAllowed. The qtime can be retrieved from the ShardResponse with the highest qtime. "
        },
        {
            "author": "Russell Black",
            "id": "comment-13222003",
            "date": "2012-03-04T20:30:22+0000",
            "content": "Martijn, I have a patch with just such an implementation. I'll upload it in a few minutes.  "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13222008",
            "date": "2012-03-04T20:49:48+0000",
            "content": "Nice! "
        },
        {
            "author": "Russell Black",
            "id": "comment-13222030",
            "date": "2012-03-04T22:03:33+0000",
            "content": "OK, this patch subtracts time for the second phase.  The one thing I did differently from your suggestion was to use ShardResponse.getSolrResponse().getElapsedTime() instead of QTime, since it is a more accurate measurement of total time spent on the first phase.  If you want to use QTime, feel free to change it.   "
        },
        {
            "author": "Russell Black",
            "id": "comment-13222048",
            "date": "2012-03-04T22:43:45+0000",
            "content": "Also, would it be possible to get my backported patch into 3x?   "
        },
        {
            "author": "Russell Black",
            "id": "comment-13222050",
            "date": "2012-03-04T22:45:57+0000",
            "content": "I just realized that my patches also contain the patch I submitted for SOLR-3196 which is actually related to this one.  Sorry of this creates confusion for you.  It's the changes to QueryComponent.java that fix SOLR-3196.  Thanks! "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13222060",
            "date": "2012-03-04T23:40:09+0000",
            "content": "No problem. I'll look into this tomorrow.  "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13222245",
            "date": "2012-03-05T09:59:41+0000",
            "content": "The difference between the elapsed time and qtime is that the first also takes into account the time spend on the trip from and to the shard where the shard request is executed. I think it is fine to include also this time in the time allowed for a query. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13222258",
            "date": "2012-03-05T10:32:02+0000",
            "content": "Committed to trunk and 3x branch. "
        }
    ]
}