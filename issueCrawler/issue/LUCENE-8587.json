{
    "id": "LUCENE-8587",
    "title": "Self comparison bug in GeoComplexPolygon.equals method",
    "details": {
        "components": [
            "modules/spatial3d"
        ],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "7.1",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "GeoComplexPolygon.equals method checks equality with own\u00a0testPoint1 field instead of the other.testPoint1.",
    "attachments": {
        "LUCENE-8587.patch": "https://issues.apache.org/jira/secure/attachment/12950419/LUCENE-8587.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16707424",
            "author": "Zsolt Gyulavari",
            "content": "Hi All,\n\nPlease review this patch. ",
            "date": "2018-12-03T16:04:33+0000"
        },
        {
            "id": "comment-16707481",
            "author": "Zsolt Gyulavari",
            "content": "Original commit in GitHub here: https://github.com/zsgyulavari/lucene-solr/commit/85aaa68b427fce7e9de2bc35d45078bb2158df41\n\n\u00a0 ",
            "date": "2018-12-03T16:27:08+0000"
        },
        {
            "id": "comment-16710721",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 26s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 24s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 24s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 24s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 24s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 24s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n   1m 30s \n  spatial3d in the patch failed.  \n\n\n  \n   \n   4m 29s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n lucene.spatial3d.geom.RandomBinaryCodecTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8587 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12950419/LUCENE-8587.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-137-generic #163~14.04.1-Ubuntu SMP Mon Sep 24 17:14:57 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / b0e6a92 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_191 \n\n\n unit \n https://builds.apache.org/job/PreCommit-LUCENE-Build/132/artifact/out/patch-unit-lucene_spatial3d.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/132/testReport/ \n\n\n modules \n C: lucene lucene/spatial3d U: lucene \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/132/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-12-05T23:01:13+0000"
        },
        {
            "id": "comment-16715216",
            "author": "Zsolt Gyulavari",
            "content": "Apparently I've tapped in a bigger\u00a0question here.\n\nThe tests are failing (10% of the time) because\u00a0GeoPoint serialization is based on lat/lon fields and equals are based on x/y/z fields. When creating GeoPoints out of lat/lon data in the test suite (as it is done for the shapes) then the same rounding happens as in the deserialization. The testPoint however is generated based on x/y/z in the test suite, so the rounding of the deserialization will result in different coordinates.\n\nIf I changed the equals method to allow a threshold below MINIMUM_RESOLUTION the hashCodes would be different for object that would be equal.\n\nIf I changed the generation of the random test data I would hide a potential problem in serialization:\nWhen a GeoPoint is created using the x/y/z constructor the serialization/deserialization would potentially result in an object that isn't equal to the original.\n\nPlease advise. ",
            "date": "2018-12-10T17:44:40+0000"
        },
        {
            "id": "comment-16716492",
            "author": "Ignacio Vera",
            "content": "I think the problems comes from how the testPoint is calculated:\n\n\u00a0\n\n/** Generate a point at the center of mass of a list of points.\n */\nprivate static GeoPoint getCenterOfMass(final PlanetModel planetModel, final List<GeoPoint> points) {\n  double x = 0;\n  double y = 0;\n  double z = 0;\n  //get center of mass\n  for (final GeoPoint point : points) {\n    x += point.x;\n    y += point.y;\n    z += point.z;\n  }\n  // Normalization is not needed because createSurfacePoint does the scaling anyway.\n  return planetModel.createSurfacePoint(x, y, z);\n}\n\n\u00a0\n\nMaybe we should build the point here using the equivalent [lat, lon]? Karl Wright ",
            "date": "2018-12-11T08:10:12+0000"
        },
        {
            "id": "comment-16717004",
            "author": "Karl Wright",
            "content": "\nMaybe we should build the point here using the equivalent [lat, lon]\n\nIgnacio Vera No, that makes no sense.\n\nPolygons are never constructed using (x,y,z) coordinates; they are always constructed using lat/lon points and a planet model.  If the lat/lons are the same you won't get different x,y,z points, period.  So there's something else being done wrong, and I think the problem is probably the random number generator construction of the testpoint.  The testpoint should not be included in the equals computation for that reason.\n\nI will commit a fix.\n ",
            "date": "2018-12-11T12:23:31+0000"
        },
        {
            "id": "comment-16717020",
            "author": "Karl Wright",
            "content": "Ok, you're right, this is more complex.  We cannot do without the testpoint and the in/out of set boolean, even though moving these around might produce exactly the same polygon.\n\nOn the other hand, blaming the serialization of the testpoint also seems odd since it's basically preserved from the constructor in whatever form was there.  Perhaps serialization/deserialization of the geopoint needs to change.  Let me examine that next. ",
            "date": "2018-12-11T12:34:05+0000"
        },
        {
            "id": "comment-16717035",
            "author": "Karl Wright",
            "content": "What I'd like to do is change the GeoPoint serialization and deserialization to save the (x,y,z) tuples rather than the (lat,lon) ones:\n\n\n  @Override\n  public void write(final OutputStream outputStream) throws IOException {\n    SerializableObject.writeDouble(outputStream, x);\n    SerializableObject.writeDouble(outputStream, y);\n    SerializableObject.writeDouble(outputStream, z);\n  }\n\n\n\nand\n\n\n  public GeoPoint(final PlanetModel planetModel, final InputStream inputStream) throws IOException {\n    // Note: this relies on left-right parameter execution order!!  Much code depends on that though and\n    // it is apparently in a java spec: https://stackoverflow.com/questions/2201688/order-of-execution-of-parameters-guarantees-in-java\n    this(planetModel, SerializableObject.readDouble(inputStream), SerializableObject.readDouble(inputStream), SerializableObject.readDouble(inputStream));\n  }\n\n\n\nThis is not a backwards compatible change, however, so we could make it only in master and not pull it up to the 7.x and 6.x branches.\n\nIgnacio Vera, what do you think? ",
            "date": "2018-12-11T12:41:47+0000"
        },
        {
            "id": "comment-16717068",
            "author": "Karl Wright",
            "content": "It appears GeoStandardCircle and GeoExactCircle require lat/lon as arguments, so in order to make this work I'd need to make some changes there as well, including adding constructors that accept GeoPoints.\n\nI'm also a bit queasy about the fact that after deserialization the point methods getLatitude() and getLongitude() will return different values than they would before serialization.  I don't see any obvious place where this might blow up but it will take more analysis to be sure. ",
            "date": "2018-12-11T12:57:11+0000"
        },
        {
            "id": "comment-16717159",
            "author": "Karl Wright",
            "content": "Thinking about it, it seems safest to me to serialize and deserialize all five GeoPoint values \u2013 lat, lon, x, y, z.  If that's done then no modifications would be needed to GeoStandardCircle and GeoExactCircle, and we wouldn't need to guess at whether it's all going to work.  The downside is that the serialized size is going to grow by a factor of 2 \u2013 but that may not be horrible. ",
            "date": "2018-12-11T13:35:13+0000"
        },
        {
            "id": "comment-16717269",
            "author": "ASF subversion and git services",
            "content": "Commit da62c732822f891102820f6b3efb054012f18b1c in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=da62c73 ]\n\nLUCENE-8587: Change GeoPoint serialization to make serialization/unserialization non-lossy ",
            "date": "2018-12-11T14:30:34+0000"
        },
        {
            "id": "comment-16717270",
            "author": "Karl Wright",
            "content": "Non-backwards-compatible change, so should not be pulled up to 7.x or 6.x branches. ",
            "date": "2018-12-11T14:31:21+0000"
        },
        {
            "id": "comment-16717617",
            "author": "Zsolt Gyulavari",
            "content": "Thank you Ignacio Vera and Karl Wright for looking into it and patching up the underlying serialization problem so fast.\n\nHowever I think the original issue (with the GeoComplexPolygon.equals) is still not fixed, so we shouldn't close this Jira just yet.\n\nHow do I retrigger the test runner? Should I upload a rebased patch? ",
            "date": "2018-12-11T17:29:52+0000"
        },
        {
            "id": "comment-16717619",
            "author": "Erick Erickson",
            "content": "Zsolt:\n\nYes, upload a new patch. Note the name should still be \"LUCENE-8587.patch\" and hit the \"Enable Patch Review\" button. ",
            "date": "2018-12-11T17:31:28+0000"
        },
        {
            "id": "comment-16717747",
            "author": "ASF subversion and git services",
            "content": "Commit 2edf5adedc1337aa059ca052115d5775cbd46701 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2edf5ad ]\n\nLUCENE-8587: Fix the equals method of GeoComplexPolygon ",
            "date": "2018-12-11T18:48:53+0000"
        },
        {
            "id": "comment-16717841",
            "author": "Zsolt Gyulavari",
            "content": "Thanks\u00a0Erick Erickson and Karl Wright for the quick response, I think the issue can be closed now. ",
            "date": "2018-12-11T19:26:42+0000"
        },
        {
            "id": "comment-16717995",
            "author": "ASF subversion and git services",
            "content": "Commit 2edf5adedc1337aa059ca052115d5775cbd46701 in lucene-solr's branch refs/heads/jira/http2 from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2edf5ad ]\n\nLUCENE-8587: Fix the equals method of GeoComplexPolygon ",
            "date": "2018-12-11T20:58:35+0000"
        },
        {
            "id": "comment-16718962",
            "author": "Zsolt Gyulavari",
            "content": "Karl Wright as kind of an afterthought, shouldn't these changes be listed in the CHANGES.TXT as they're breaking the file format? ",
            "date": "2018-12-12T13:19:36+0000"
        }
    ]
}