{
    "id": "SOLR-11168",
    "title": "ConcurrentUpdateSolrClientTest failure, RejectedExecutionException",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "7.0",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Jenkins failed https://builds.apache.org/job/Lucene-Solr-SmokeRelease-7.0/17/  from test failure of ConcurrentUpdateSolrClientTest.\nI'm attaching the output for this test failure.  It does not reproduce for me but that's not surprising as it seems this is a timing/concurrency issue.",
    "attachments": {
        "output.txt": "https://issues.apache.org/jira/secure/attachment/12879416/output.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-28T19:56:53+0000",
            "content": "(A) I noticed the test contains:\n\n        } catch (Throwable t) {\n          t.printStackTrace();\n        }\n\n\nwhich explains why the test threads that add documents report this java.util.concurrent.RejectedExecutionException a bunch of times instead of say once/thread.  I think we could simply wrap non-runtime exceptions to throw via Guava Throwables.  Nonetheless, this certainly isn't the bug.  \n\n(B) The test calls threadPool.awaitTermination with 5 seconds but there is no code before that will actually terminate this threadpool, and so practically speaking this will always take 5 seconds.  Their is a shutdown() call after but it should be before.  Nonetheless, this is probably not the bug.\n\n(C)  Maybe 5 seconds isn't enough time? We could add more time.  Whatever time we choose, if we detect that the threads are still busy, we might as well fail right then and there with a helpful error message, rather then continue on and assert things that will probably fail due to the CUSC being shut down (RejectedExecution).\n\n(D) CUSC.shutdownNow is being called... FWIW I think the code inside the shutdownExecutor condition is probably not ideal. Seeing shutdownNow get called multiple times is suspicious.  And the shutdown then nearly immediate shutdownNow following it is suspicious.\n\nCC Mark Miller ",
            "author": "David Smiley",
            "id": "comment-16105575"
        }
    ]
}