{
    "id": "LUCENE-5700",
    "title": "Add 'accountable' interface for various ramBytesUsed",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ]
    },
    "description": "Currently this is a disaster. there is ramBytesUsed(), sizeInBytes(), etc etc everywhere, with zero consistency, little javadocs, and no structure. For example, look at LUCENE-5695, where we go back and forth on how to handle \"don't know\". \n\nI don't think we should add any more of these methods to any classes in lucene until this has been cleaned up.",
    "attachments": {
        "LUCENE-5700.patch": "https://issues.apache.org/jira/secure/attachment/12647103/LUCENE-5700.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14007183",
            "author": "Michael McCandless",
            "content": "+1 to clean this up. ",
            "date": "2014-05-23T14:11:20+0000"
        },
        {
            "id": "comment-14010976",
            "author": "Adrien Grand",
            "content": "Here is a patch:\n\n\tnew oal.util.Accountable interface with a ramBytesUsed() method\n\tClasses that had a ramBytesUsed/sizeInBytes method to estimate memory usage now implement this interface\n\tClasses that had a sizeInBytes method to compute disk usage remained as-is.\n\n\n\nI think the tough question is what to do in case memory usage cannot be computed. Returning -1 would work but we would need to make sure all consumers of this API handle that case properly... Since we don't have this issue now (all classes that implement the interface know how to do it), the documentation specifies that negative values are unsupported. Maybe we'll need to revisit it in the future in case the problem arises but for now I think that is the simplest option? ",
            "date": "2014-05-28T09:48:35+0000"
        },
        {
            "id": "comment-14010984",
            "author": "Robert Muir",
            "content": "\nSince we don't have this issue now (all classes that implement the interface know how to do it)\n\nYeah, I don't think a class should implement the interface if it can't actually return a valid result. ",
            "date": "2014-05-28T09:58:31+0000"
        },
        {
            "id": "comment-14010994",
            "author": "Dawid Weiss",
            "content": "I'm for throwing an exception. Either a class knows how to handle it or shouldn't implement it (throw UnsupportedOperationException). ",
            "date": "2014-05-28T10:15:28+0000"
        },
        {
            "id": "comment-14013368",
            "author": "ASF subversion and git services",
            "content": "Commit 1598470 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1598470 ]\n\nLUCENE-5700: Add oal.util.Accountable and make all classes that can compute their memory usage implement it. ",
            "date": "2014-05-30T07:01:33+0000"
        },
        {
            "id": "comment-14013386",
            "author": "Adrien Grand",
            "content": "Committed. Thanks Robert and Dawid for the feedback! ",
            "date": "2014-05-30T07:36:54+0000"
        },
        {
            "id": "comment-14013387",
            "author": "ASF subversion and git services",
            "content": "Commit 1598479 from Adrien Grand in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1598479 ]\n\nLUCENE-5700: Add oal.util.Accountable and make all classes that can compute their memory usage implement it. ",
            "date": "2014-05-30T07:37:34+0000"
        }
    ]
}