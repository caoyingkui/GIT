{
    "id": "LUCENE-5499",
    "title": "EarlyTerminatingSortingCollector shouldnt require exact Sort match",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": []
    },
    "description": "Today EarlyTerminatingSortingCollector requires that the Sort match exactly at query and at index time.\n\nHowever, now that you can use any Sort (e.g. with multiple sortfields), this should be improved.\n\nFor example, early termination is fine in the following case:\n\n\tindex-time: popularity desc, time desc\n\tquery-time: popularity desc",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13923872",
            "author": "Robert Muir",
            "content": "The basics are: right now we just encode Sort.toString() in the index. But a Sort is just a collection of SortFields. So if we encode it differently (e.g. each SortField.toString() separated by INFORMATION_SEPARATOR_ONE, escaping the former in case someone is crazy...) we can easily have logic like this. ",
            "date": "2014-03-07T13:23:39+0000"
        },
        {
            "id": "comment-13924098",
            "author": "Michael McCandless",
            "content": "+1\n\nThe search-time sort just has to be \"congruent\" with the index-time one. ",
            "date": "2014-03-07T17:41:17+0000"
        },
        {
            "id": "comment-16620600",
            "author": "Adrien Grand",
            "content": "I can't find exactly when, but this has been fixed: TopFieldCollector now early-terminates if the search sort is a prefix of the index sort. ",
            "date": "2018-09-19T13:44:26+0000"
        }
    ]
}