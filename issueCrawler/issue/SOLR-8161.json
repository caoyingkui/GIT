{
    "id": "SOLR-8161",
    "title": "allowCompression parameter not been used",
    "details": {
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.0"
        ],
        "affect_versions": "5.0",
        "status": "Closed",
        "resolution": "Invalid",
        "priority": "Major"
    },
    "description": "shardHandlerFactory config in solr.xml:\n\n<shardHandlerFactory name=\"shardHandlerFactory\"\n    class=\"HttpShardHandlerFactory\">\n    <int name=\"socketTimeout\">${socketTimeout:600000}</int>\n    <int name=\"connTimeout\">${connTimeout:60000}</int>\n    <bool name=\"useRetries\">true</bool>\n    <bool name=\"allowCompression\">true</bool>\n  </shardHandlerFactory>\n\n\n\nactually useRetries can be set in HttpClient properly, but not use allowCompression paramter\n\nis it means Solr don't support response compression when do Http request ?\n\nhere is the source code to parse parameters :\n\nModifiableSolrParams clientParams = new ModifiableSolrParams();\n    clientParams.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, maxConnectionsPerHost);\n    clientParams.set(HttpClientUtil.PROP_MAX_CONNECTIONS, maxConnections);\n    clientParams.set(HttpClientUtil.PROP_SO_TIMEOUT, soTimeout);\n    clientParams.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, connectionTimeout);\n    if (!useRetries) {\n      clientParams.set(HttpClientUtil.PROP_USE_RETRY, false);\n    }\n    this.defaultClient = HttpClientUtil.createClient(clientParams);\n    \n    // must come after createClient\n    if (useRetries) {\n      // our default retry handler will never retry on IOException if the request has been sent already,\n      // but for these read only requests we can use the standard DefaultHttpRequestRetryHandler rules\n      ((DefaultHttpClient) this.defaultClient).setHttpRequestRetryHandler(new DefaultHttpRequestRetryHandler());\n    }\n\n\n\ncan anyone please explain to me ?\n\nwe are facing \"2048KB upload size exceeds limit\" issue, and we don't want to increase the limit for now\n\n<requestParsers enableRemoteStreaming=\"false\" \n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-14T03:14:27+0000",
            "author": "Erick Erickson",
            "content": "First, please raise questions like this on the user's list first, you'll get more eyes on the problem. We try to raise JIRAs for known code problems, enhancements and the like, not user queries.\n\nOf course if discussion on the user's list points to a problem in Solr/Lucene rather than a usage question, feel free to open a JIRA\n\nAnd when you do ask on the user's list, you need to include the evidence (stack trace etc) that leads you to believe you're hitting this problem. There isn't enough information here to really say much as far as diagnosing your problem, you might want to review:\n\nhttp://wiki.apache.org/solr/UsingMailingLists ",
            "id": "comment-14956181"
        }
    ]
}