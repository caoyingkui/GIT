{
    "id": "LUCENE-7402",
    "title": "TestGeo3DPoint.testGeo3DRelations() failure: invalid bounds for shape=GeoRectangle",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "modules/spatial3d"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "My Jenkins found a reproducing master seed:\n\n\nChecking out Revision 53a34b312e78ce6f56c0bb41304ac834b28b9534 (refs/remotes/origin/master)\n[...]\n [junit4] Suite: org.apache.lucene.spatial3d.TestGeo3DPoint\n   [junit4]   1>     doc=556 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=0.7599270561688233, lon=-3.141592653589793([X=-0.7245396312428835, Y=-8.873051402570008E-17, Z=0.6885391639622669])]\n   [junit4]   1>       quantized=[X=-0.7245396311865936, Y=-2.3309121299774915E-10, Z=0.6885391641833415]\n   [junit4]   1>     doc=562 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=0.671324362197981, lon=-3.141592653589793([X=-0.7828546079153551, Y=-9.587203897812958E-17, Z=0.621909142012704])]\n   [junit4]   1>       quantized=[X=-0.782854608095381, Y=-2.3309121299774915E-10, Z=0.6219091421482176]\n   [junit4]   1>     doc=671 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=0.7277792617505155, lon=-3.141592653589793([X=-0.7463767772766416, Y=-9.140479312497561E-17, Z=0.6649666093161187])]\n   [junit4]   1>       quantized=[X=-0.7463767772806459, Y=-2.3309121299774915E-10, Z=0.6649666092550081]\n   [junit4]   1>     doc=902 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=0.7408865305170907, lon=-3.141592653589793([X=-0.737564708579924, Y=-9.032562595264542E-17, Z=0.6746626165197899])]\n   [junit4]   1>       quantized=[X=-0.7375647084975573, Y=-2.3309121299774915E-10, Z=0.6746626163258577]\n   [junit4]   1>   shape=GeoRectangle: {planetmodel=PlanetModel.WGS84, toplat=0.7988584710911523(45.77121882179671), bottomlat=0.25383311815493353(14.543566370923246), leftlon=-1.2236144735575564E-12(-7.010794508597004E-11), rightlon=7.356011300929654E-49(4.214684015938074E-47)}\n   [junit4]   1>   bounds=XYZBounds: [xmin=-0.6971004676427383 xmax=0.9688341314344869 ymin=-1.0011854794644763E-9 ymax=1.0E-9 zmin=0.25134364633812856 zmax=0.7161240534205101]\n   [junit4]   2> NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestGeo3DPoint -Dtests.method=testGeo3DRelations -Dtests.seed=843049E58DFC1576 -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=ja-JP-u-ca-japanese-x-lvariant-JP -Dtests.timezone=America/Indiana/Vevay -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.57s J8 | TestGeo3DPoint.testGeo3DRelations <<<",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15402916",
            "author": "Karl Wright",
            "date": "2016-08-01T22:11:58+0000",
            "content": "The following test case does not fail:\n\n\n  @Test\n  public void testFailureCase2() {\n    final GeoPoint point = new GeoPoint(-0.7375647084975573, -2.3309121299774915E-10, 0.6746626163258577);\n    final GeoBBox box = new GeoRectangle(PlanetModel.WGS84, 0.7988584710911523, 0.25383311815493353, -1.2236144735575564E-12, 7.356011300929654E-49);\n    final XYZBounds bounds = new XYZBounds();\n    box.getBounds(bounds);\n    final XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(), bounds.getMinimumY(), bounds.getMaximumY(), bounds.getMinimumZ(), bounds.getMaximumZ());\n\n    assertTrue(box.isWithin(point)?solid.isWithin(point):true);\n  }\n\n\n\nThis indicates that the failure output of the relation test is somehow not correct.  Have to dig deeper. "
        },
        {
            "id": "comment-15402983",
            "author": "Karl Wright",
            "date": "2016-08-01T22:52:29+0000",
            "content": "Changing from the quantized point to the unquantized point causes the failure to happen:\n\n\n    //final GeoPoint point = new GeoPoint(-0.7375647084975573, -2.3309121299774915E-10, 0.6746626163258577);\n    final GeoPoint point = new GeoPoint(-0.737564708579924, -9.032562595264542E-17, 0.6746626165197899);\n\n\n\nThe unquantized point is outside the bounds.\n\nThe bounds are:\n\n\nXYZBounds: [xmin=-0.6971004676427383 xmax=0.9688341314344869 ymin=-1.0011854794644763E-9 ymax=1.0E-9 zmin=0.25134364633812856 zmax=0.7161240534205101]\n\n\n\nThe X value of the both points is far outside the X bound.  Y and Z are fine.  I frankly don't understand how come a very slight change in X has such an effect; it should have failed for both or not at all. "
        },
        {
            "id": "comment-15403054",
            "author": "Karl Wright",
            "date": "2016-08-01T23:51:23+0000",
            "content": "Here's the situation.  The ntersection computation needs to handle case where intersection is off the globe entirely.  The line of intersection in that case will have no solutions when intersected with the globe.\n\nThat basically means that, in that case, we should compute the bounds based on the intersection of both planes with the globe, where the planes are +/- MINIMUM_RESOLUTION.  We could in fact just change the way we compute bounds for planes in general to make sure we consider +/- MINIMUM_RESOLUTION, but I need to think that change through.\n\nThe basic idea of intersection calculation is to try and compute worst-case envelope bounds by adjusting the intersecting planes each with a fixed offset.  The offset is MINIMUM_RESOLUTION.  When the line of intersection is projected beyond the globe, then the bounds need to be determined in another way.  Not clear what that way is yet. "
        },
        {
            "id": "comment-15405967",
            "author": "Karl Wright",
            "date": "2016-08-03T14:14:46+0000",
            "content": "Still thinking about this; won't make further progress until the weekend at the earliest. "
        },
        {
            "id": "comment-15407634",
            "author": "ASF subversion and git services",
            "date": "2016-08-04T12:12:28+0000",
            "content": "Commit 2828f4e8e0a12d34eedc058e3f97c1f58a1500b9 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2828f4e ]\n\nLUCENE-7402: If intersection computation falls off the world, bounds includes whole world. "
        },
        {
            "id": "comment-15407638",
            "author": "ASF subversion and git services",
            "date": "2016-08-04T12:14:48+0000",
            "content": "Commit 6b4938891b0139fd0792bc7ee6bf9d23cb451c0b in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6b49388 ]\n\nLUCENE-7402: If intersection computation falls off the world, bounds includes whole world. "
        },
        {
            "id": "comment-15407643",
            "author": "Karl Wright",
            "date": "2016-08-04T12:16:04+0000",
            "content": "I chose to punt on the complex mathematics, and just use off-world intersections to determine when we didn't really understand the bounds. "
        }
    ]
}