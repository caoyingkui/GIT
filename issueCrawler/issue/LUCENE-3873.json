{
    "id": "LUCENE-3873",
    "title": "tie MockGraphTokenFilter into all analyzers tests",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/analysis"
        ],
        "type": "Task",
        "fix_versions": [
            "4.0-ALPHA",
            "3.6.1"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Mike made a MockGraphTokenFilter on LUCENE-3848.\n\nMany filters currently arent tested with anything but a simple tokenstream.\nwe should test them with this, too, it might find bugs (zero-length terms,\nstacked terms/synonyms, etc)",
    "attachments": {
        "LUCENE-3873.patch": "https://issues.apache.org/jira/secure/attachment/12520634/LUCENE-3873.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-26T13:58:07+0000",
            "content": "LUCENE-3848 has the MockGraphTokenFilter patch... ",
            "author": "Michael McCandless",
            "id": "comment-13238398"
        },
        {
            "date": "2012-03-26T14:01:55+0000",
            "content": "One way we can tie this in is via LUCENE-3919.\n\nBut: I think we can use this filter in some individual tests immediately?\n\nE.g. we can just add a method testRandomGraphs to the filters that do lots\nof crazy state-capturing, putting this thing in-front-of/behind them in\nthe analyzer and call checkRandomData? ",
            "author": "Robert Muir",
            "id": "comment-13238405"
        },
        {
            "date": "2012-03-26T14:20:22+0000",
            "content": "I agree we can use it in specific places for starters...\n\nThe patch on LUCENE-3848 mixes in \"TokenStream to Automaton\" and MockGraphTokenFilter; I'll split that apart and only commit MockGraphTokenFilter here.\n\nOne problem is... MockGraphTokenFilter isn't setting offsets currently.... I think to do this \"correctly\" it needs to buffer up pending input tokens, until it's reached the posLength it wants to output for a random token, and then set the offset accordingly. ",
            "author": "Michael McCandless",
            "id": "comment-13238422"
        },
        {
            "date": "2012-03-30T17:37:37+0000",
            "content": "Patch... I think it's close, but there are still some nocommits...\n\nI had to rework the original MockGraphTokenFilter to sometimes buffer tokens so\nit can set the correct offsets.\n\nI added a few test cases to existing analyzers (SynFilter, Japanese,\nStandard), and new direct test cases.\n\nI also created a new MockHoleInjectingTokenFilter...\n\nTests seem to pass... but it wouldn't surprise me if beasting/jenkins\nuncovers something... ",
            "author": "Michael McCandless",
            "id": "comment-13242580"
        },
        {
            "date": "2012-04-02T16:48:53+0000",
            "content": "New patch, fixing all nocommits.  I think it's ready... ",
            "author": "Michael McCandless",
            "id": "comment-13244321"
        },
        {
            "date": "2012-07-22T16:04:53+0000",
            "content": "Bulk close for 3.6.1 ",
            "author": "Uwe Schindler",
            "id": "comment-13420195"
        }
    ]
}