{
    "id": "SOLR-6046",
    "title": "Atomic Updates using a String[] for multiple values do not work unless you are using the BinaryRequestWriter",
    "details": {
        "affect_versions": "4.8",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "This is related to https://issues.apache.org/jira/browse/SOLR-6045, but somewhat in reverse.\n\nIn this case I am using the OOB request/response writers and trying to use atomic updates.\n\nThe following code for the field (see referenced jira for full code example) does not work:\n\n\n        Map<String, String[]> fieldModifier = Maps.newHashMap();\n        fieldModifier.put(\"set\", new String[] { \"new_value1\", \"new_value2\" });\n        sid.addField(\"field1\", fieldModifier);\n\n\n\nas it results in the index returning:\n\n\n\"field1\": [\n          \"[Ljava.lang.String;@162d4ea3\"\n        ],\n\n\n\nHowever if I modify the above code to use the BinaryRequestWriter then everything works just fine.\n\nAlso, if I modify the above code to use a List<String> instead of a String[] then that works fine with the OOB RequestWriter as well.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Scott Lindner",
            "id": "comment-13991559",
            "date": "2014-05-07T05:32:47+0000",
            "content": "So the issue here is with the following code in ClientUtils.java in the writeXML function:\n\n\n            if (v instanceof Collection) {\n              Collection values = (Collection) v;\n              for (Object value : values) {\n                writeVal(writer, boost, name, value, update);\n                boost = 1.0f;\n              }\n            } else {\n              writeVal(writer, boost, name, v, update);\n              boost = 1.0f;\n            }\n\n\n\nBecause only Collection is handled and not String[] so this falls back to toString(). "
        }
    ]
}