{
    "id": "LUCENE-663",
    "title": "New feature rich higlighter for Lucene.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "New Feature",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Well, I refactored (took) some code from two previous highlighters.\nThis highlighter:\n+ use TermPositionVector where available\n+ use Analyzer if no TermPositionVector found or is forced to use it.\n+ support for all lucene queries (Term, Phrase with slops, Prefix, Wildcard, Range) except Fuzzy Query (can be implemented easly)\n\n\n\thas no support for scoring (yet)\n\tuse same prefix,postfix for accepted terms (yet)\n\n\n\n? It's written in Java5\n\nIn next release I'd like to add support for Fuzzy, \"coloring\" f.e. diffrent color for terms btw. phrase terms (slops), scoring of fragments\n\nIt's apache licensed - I hope so  I put licene statement in every file",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--lucene-hlt-src.jar": "https://issues.apache.org/jira/secure/attachment/12339332/ASF.LICENSE.NOT.GRANTED--lucene-hlt-src.jar"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2006-08-22T21:53:30+0000",
            "content": "Hi Karel.\nMany thanks for taking the time to make a contribution.\n\nI would personally find it useful if you could describe your highlighter in terms of how it differs from existing implementations (the existing one in \"contrib\" and Ronnie Kolehmainen's recent contribution here: http://issues.apache.org/jira/browse/LUCENE-644?page=all ) . This would help us understand whether to consider this as an improvement to the existing approach or an alternative with different functionality.\n\nI know for example that the existing contrib highlighter has all 3 of the functions you list as features (TermPositionVector/Analyzer support and support for all Lucene queries).\n\nThe sorts of improvement I can think of would be if your solution was\na) faster\nb) a lighter memory footprint\nc) able to highlight span/phrase matches correctly \nd) simpler to use\n\nSo can you clarify what your motivations were and where you see the main differences/improvements over existing code?\n\nThanks again,\nMark ",
            "author": "Mark Harwood",
            "id": "comment-12429816"
        },
        {
            "date": "2006-08-23T00:06:25+0000",
            "content": "Hi,\nyes as I  wrote in the code and keeps author - I borrow small code parts from this contribution http://issues.apache.org/jira/browse/LUCENE-644?page=all \n(where is a small bug when term is on or near to end of field - change lines 321:sb.append(cbuf, 0, EOF ? skip : (surround - skippedChars));  \n276:int readed = reader.read(cbuf, 0, nextStart - pos); 278:sb.append(cbuf,0,readed);\nalso from WildcardTermEnum.\n\nMotivation - I was unable to find a highlighter with good performance and proper phrase highlight (at beginning I needed just phrase with slop 0).\n\nThis highlighter results highlight for query \"karel drinks beer\"~4 on text karel drinks a lot of beers. Beer is his life. -> <SUFFIX>karel</SUFFIX> <PREFIX>drinks<SUFFIX> a lot of  czech <PREFIX>beer</SUFFIX>. Beer is his life.\n\nI started to implement a stack for phrase query - end up with this.  Still it is not final, fuzzy, span,scoring and coloring needs to be done.\nI mean 'Coloring':\n<PREFIX>karel</SUFFIX> <PREFIX>drinks<SUFFIX> a <PREFIX1>lot</SUFFIX1> of  <PREFIX1>czech</SUFFIX1> <PREFIX>beer</SUFFIX>. Beer is his life.\n\nfor wild card BMW* -> <PREFIX>BMW</SUFFIX><PREFIX>ED</SUFFIX1>\netc.\n\nSo user can see why document matches his query.\n\nUsage is maybe more straightforward:\n\nConstructs Highlighter where all passed fields will be highlighted using TermPositionVector (where is not tpv null is returned)\n\nFulltextHighlighter highlighter = new FulltextHighlighter(reader,query,prefix,suffix);\n\nOR \nConstructs Highlighter where all fields with highlight will be highlighted using Analyzer\n\nFulltextHighlighter highlighter = new FulltextHighlighter(analyzer,query,prefix,suffix);\n\nConstructs Highlighter where analyzer or TermVector will be autodetected\nFulltextHighlighter highlighter = new FulltextHighlighter(reader, analyzer,query,prefix,suffix);\n\nAnd when iterating hits:\nString higlightedText = highlighter.highlight(luceneDocumentID, luceneDocument, fieldName);  // To use tpv\n\nOR\nString higlightedText = highlighter.highlight(luceneDocument, fieldName);  // To use analyzer, if tpv usage is forced assert reacts\n\nit has some options:\nsetAnalyzerUnstable(boolean analyzerUnstable)  set it false (default true) if you know that Token t.startOffset() < t(n+1).startOffset\nsetMaxFragments(int i); max fragmets\nsetSurround(int surround);\n\na) b) I don't know maybe it will be faster or lighter or none from both but I began because none from contributed and issued give 'nice' results.\nIm using a lot queries to search names like \"James Bond\" OR \"Sean Connery\" a this gives me nicer view why the document matches my query.\n\n Or I don't know how to use google ",
            "author": "Karel Tejnora",
            "id": "comment-12429848"
        },
        {
            "date": "2006-08-25T11:07:01+0000",
            "content": "Karel,\n\nalthough tests passed your 3 line fixes indeed look valid, so the files in LUCENE-644 are updated accordingly. Thanks.\n ",
            "author": "Ronnie Kolehmainen",
            "id": "comment-12430480"
        },
        {
            "date": "2006-10-14T02:45:58+0000",
            "content": "\n   [[ Old comment, sent by email on Wed, 23 Aug 2006 02:21:04 +0200 ]]\n\nIt is too late here...\nto\n\non text karel drinks a lot of beers. Beer is his life.\n\nshould be :\n\non text karel drinks a lot of czech beers. Beer is his life.\n\n\n(both are true... but second is better is all cases)\n\nWell is has support for Fuzzy Term if fuzzy term returns terms from \nquery.extractTerms ",
            "author": "Karel Tejnora",
            "id": "comment-12442203"
        },
        {
            "date": "2006-11-07T06:23:05+0000",
            "content": "\n   [[ Old comment, sent from unregistered email on Mon, 23 Oct 2006 04:09:23 -0700 ]]\n\nHello Karen,\n\nI want to use the new Highlighter api for matching only phrases and not the individual tokens in the phrase. Can you please tell me where I can find the source for new highlighter api?\n\nThanks,\nHarini\n\nQuoted from: \nhttp://www.nabble.com/-jira--Created%3A-%28LUCENE-663%29-New-feature-rich-higlighter-for-Lucene.-tf2147495.html#a5929597\n ",
            "author": "harini.raghavan@insideview.com",
            "id": "comment-12447678"
        },
        {
            "date": "2011-01-25T15:40:28+0000",
            "content": "Since Lucene 2.9 we have FastVectorHighlighter which uses TermVectors to highligt. Also the conventional Highlighter was extended to support more query types. ",
            "author": "Uwe Schindler",
            "id": "comment-12986444"
        }
    ]
}