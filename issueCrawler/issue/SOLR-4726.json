{
    "id": "SOLR-4726",
    "title": "Factor out a minimal abstract class from IndexSchema/ManagedIndexSchema",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Task",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Spinoff from SOLR-3251.\n\nRobert Muir wrote, on SOLR-4658 and SOLR-3251:\n\n\nIf the goal is to have multiple implementations of indexschema (immutable ones backed by human edited files, mutable ones saved to some opaque \"database\" that can be edited by REST), then why not make IndexSchema abstract and pluggable from solrconfig.xml like anything else?\n\n\nSo IndexSchema becomes abstract and loaded just like other plugins, versus being a \"wonder-do-it-all\" class. It would also\nhave the advantage of not having a bunch of options that have illegal combinations (e.g. managed+mutable)\n\nFinally it makes it extensible: if someone wants to make their own impl that is powered by microsoft access .MDB files then\nthey can do so.\n\n(Also i think it would make backwards compatibility possible in case something changes in drastic ways).\n\n\nand it would also be a bonus in the future if somehow the backwards cruft existing in various FieldType etc  apis (e.g. defaults and so on) were factored into the Classic guy to keep those apis simpler...\n\n\nFrom a pluggability perspective it would be nice if e.g. addFields was factored down (e.g. IndexSchema becomes abstract and minimal), and the immutable default impl threw UOE for changes or whatever... But i know this is a lot of work, it would be a good followup issue and probably good to do before schema gets any more hair (there is already tons of backwards cruft thrown about it for compat etc too).",
    "attachments": {},
    "issue_links": {},
    "comments": []
}