{
    "id": "SOLR-8316",
    "title": "Allow a field to be stored=false indexed=false docValues=true",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Duplicate",
        "priority": "Major"
    },
    "description": "Right now if you try to index a field which is not stored or indexed you will get an exception, however sometimes it makes sense to have a field which only has docValues on for example see SOLR-8220",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-20T17:08:14+0000",
            "author": "Hoss Man",
            "content": "This jira doesn't make sense to me ... it is absolutely posible to have a field that is stored=false & indexed=false (regardless of whether docValues=true|false)\n\nThere are lots of examples of this in various schemas, and even tests for the specific case of wanting docValues w/o stored or indexed fields...\n\n\n\tthe ignored_* dynamic field in basic_configs/conf/schema.xml\n\tmanu_exact in sample_techproducts_configs/conf/schema.xml\n\tall of the sort_* fields in schema-icucollate-dv.xml tested in TestICUCollationFieldDocValues.java\n\n\n\n...just to name a few.\n\nwhat exactly is the error you are getting? ",
            "id": "comment-15018344"
        },
        {
            "date": "2015-11-20T17:16:23+0000",
            "author": "Keith Laban",
            "content": "See: https://github.com/apache/lucene-solr/blob/trunk/solr/core/src/java/org/apache/solr/schema/FieldType.java#L253\n\nIt looks like the field doesn't actually get created when you have this configuration. Its valid from a schema prospective but the field itself is ignored when you try to index it. The goal of this jira ticket is to create the docValues of field that is not stored or indexed, as far as I can tell this doesn't happen right now. ",
            "id": "comment-15018361"
        },
        {
            "date": "2015-11-20T17:22:22+0000",
            "author": "Keith Laban",
            "content": "I'll have to take a look at the sort_* fields that sounds promising.  ",
            "id": "comment-15018371"
        },
        {
            "date": "2015-11-20T17:45:41+0000",
            "author": "Keith Laban",
            "content": "After looking further into this, it looks like a problem related to the worked being done in SOLR-8220. \n\nWe are adding fields retrieved from docValues by doing the following:\n\ndoc.add(schemaField.getType().createField(schemaField, sdv.get(docid).utf8ToString(), 1.0f));\n\n\n\nthis createField call is returning null based on the code I wrote above. Perhaps we need to create fields differently, or change how createField works. ",
            "id": "comment-15018404"
        },
        {
            "date": "2016-10-08T16:33:41+0000",
            "author": "Erick Erickson",
            "content": "Can this be closed? Seems like 8220 handles it. ",
            "id": "comment-15558265"
        },
        {
            "date": "2016-10-08T16:41:56+0000",
            "author": "Keith Laban",
            "content": "Yes this can be closed ",
            "id": "comment-15558284"
        },
        {
            "date": "2016-10-08T20:42:58+0000",
            "author": "Erick Erickson",
            "content": "Seel SOLR-8220 ",
            "id": "comment-15558683"
        }
    ]
}