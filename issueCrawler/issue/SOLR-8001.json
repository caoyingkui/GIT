{
    "id": "SOLR-8001",
    "title": "Using value sources on a multi-valued field can result in an exception if no data",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.4"
        ],
        "affect_versions": "5.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "SOLR-2522 Introduced the ability to reference a multi-valued field with doc values in a function query (value source) such as like this (an example using it for sorting): sort=field(myMultiValField,min) asc.  In the event that the document has no values for this field, this feature behaves nicely in the aforementioned example.  And it does if you reference in a 'fl' (as a DocTransformer): fl=id,myMultiValField:field(myMultiValField,min).  In that case, the returned document simply doesn't have a name-value pair.  But, if you sort on a more complex function that incorporates this, then you get an ArrayIndexOutOfBoundsException.  Such as this:\nsort=sum(otherField,field(myMultiValField,min)) asc  There may be other conditions where this same exception will be thrown; not sure.\n\nThe root cause can either be considered one of two things (or both) I think:\n\n\tThe longVal, intVal, etc. methods on FunctionValues need to be prepared for the possibility that the document has no data, in which case it should return a default value.  This means TrieLongField (& friends) are erroneous.\n\tValueSource.ValueSourceComparator could/should  call exists before calling doubleVal in the various methods where it does.\n\n\n\n\n\nA workarround for Solr 5.3 users that should work in any situation is to wrap the field function in a def function since that forces an existence check before attempting to access the value (ie: use sort=def(field(mult_field,min),0)+asc instead of sort=field(mult_field,min)+asc)",
    "attachments": {
        "SOLR-8001.patch": "https://issues.apache.org/jira/secure/attachment/12753878/SOLR-8001.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-01T20:33:59+0000",
            "author": "David Smiley",
            "content": "I don't have a complete patch with proper assertions but I triggered the bug by editing TestMinMaxOnMultiValuedField to have a test method like so:\n\n    assertU(adoc(sdoc(\"id\", \"0\")));//nothing\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\",\n            \"sort\", \"sum(32,field(val_tls_dv,min)) asc\"),\n        \"//TODO\");\n\n ",
            "id": "comment-14726130"
        },
        {
            "date": "2015-09-01T21:11:16+0000",
            "author": "Hoss Man",
            "content": "david: thanks for following up ... in this context your comments in SOLR-2522 totally make sense to me now.\n\ni'll take care of fleshing out a patch with comprehensive tests and fixes (including your note about optimizing away the extra ord call) ",
            "id": "comment-14726194"
        },
        {
            "date": "2015-09-02T23:02:17+0000",
            "author": "Hoss Man",
            "content": "\nDavid: please check out the attached patch and let me know if this is what you had in mind.\n\nNOTE: I discovered that the sort order when using this function on docs w/o values is inconsistent with the order when using a single valued field (containing the same effictive value) and filed that as a seperate bug since i can't think of a clear solution at the moment: SOLR-8005 ",
            "id": "comment-14728197"
        },
        {
            "date": "2015-09-03T14:01:53+0000",
            "author": "David Smiley",
            "content": "+1 Nice work Hoss Man. The patch looks good. ",
            "id": "comment-14729088"
        },
        {
            "date": "2015-09-03T17:22:11+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1701081 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1701081 ]\n\nSOLR-8001: Fixed bugs in field(foo,min) and field(foo,max) when some docs have no values ",
            "id": "comment-14729420"
        },
        {
            "date": "2015-09-03T18:08:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1701090 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1701090 ]\n\nSOLR-8001: Fixed bugs in field(foo,min) and field(foo,max) when some docs have no values (merge r1701081) ",
            "id": "comment-14729490"
        },
        {
            "date": "2015-09-03T18:13:36+0000",
            "author": "Hoss Man",
            "content": "thanks david. ",
            "id": "comment-14729496"
        }
    ]
}