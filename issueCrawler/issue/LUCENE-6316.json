{
    "id": "LUCENE-6316",
    "title": "LRUQueryCache eviction is slow",
    "details": {
        "resolution": "Duplicate",
        "affect_versions": "5.1,                                            6.0",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "The stack traces upon timeout of http://jenkins.thetaphi.de/job/Lucene-Solr-5.x-Linux/11738/console suggest that evictions on LRUQueryCache are slow.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14344808",
            "author": "Adrien Grand",
            "date": "2015-03-03T09:26:58+0000",
            "content": "I managed to reproduce the issue, this is caused by LUCENE-6321. What happens is that there is an eviction loop that looks like\n\n\nwhile (cache_is_too_large()) {\n  to_remove = least_recently_used_entry();\n  cache.remove(to_remove);\n}\n\n\n\nHowever, the hash of the least-recently used entry has changed in the mean time, so the cache cannot find it, the removal fails and this loop becomes an infinite loop. "
        }
    ]
}