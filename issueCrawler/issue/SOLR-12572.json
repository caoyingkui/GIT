{
    "id": "SOLR-12572",
    "title": "Reuse fieldvalues computed while sorting at writing in ExportWriter",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "streaming expressions"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "While exporting result through \"/export\" handler,\n\nhttp://localhost:8983/solr/core_name/export?q=my-query&sort=severity+desc,timestamp+desc&fl=severity,timestamp,msg\n\n\nDoc-values are sought for all the sort\u00a0fields defined (in this example 'severity, 'timestamp'). When we stream out docs we again make doc-value seeks against the fl\u00a0fields ('severity','timestamp','msg') . \n\nIn most common use-cases we have fl = sort\u00a0fields, or atleast the sort fields are\u00a0subset of fl fields, so if we can pre-collect the values while sorting it, we can reduce the doc-value seeks potentially bringing speed improvement.",
    "attachments": {
        "SOLR-12572.patch": "https://issues.apache.org/jira/secure/attachment/12932427/SOLR-12572.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-23T20:01:55+0000",
            "content": "Attached WIP patch, which reuses docValues for \"numeric\" field types. Initial tests showed improvement up-to 30% in execution time against export handler, for 2.5M docs and sorting on 8 fields.\n\nI am facing IndexOutOfBounds exception for string and boolean (implements string logic) data type, as \"exact\" values are not computed, but \"ordinals\". I will detail this out more after performing few tests. ",
            "author": "Amrit Sarkar",
            "id": "comment-16553333"
        },
        {
            "date": "2018-07-23T23:21:01+0000",
            "content": "Thanks Amrit for the patch! Few comments\n\n1. There is a correctness issue with this patch around empty values . Here is a test in TestExportWriter which demonstrates the problem\n\n@Test\npublic void testEmptyValues() throws Exception {\n  //Index 2 document with one document that doesn't have field2_i_p\n  //Sort and return field2_i_p\n  //Test SOLR-12572 for potential NPEs\n  assertU(delQ(\"*:*\"));\n  assertU(commit());\n\n\n  assertU(adoc(\"id\",\"1\", \"field2_i_p\",\"1\"));\n  assertU(adoc(\"id\",\"2\"));\n  assertU(commit());\n\n  String resp = h.query(req(\"q\", \"*:*\", \"qt\", \"/export\", \"fl\", \"id,field2_i_p\", \"sort\", \"field2_i_p asc\"));\n}\n\n\u00a0\n\nThe output for this before the patch is\n\n{\n\"responseHeader\":{\"status\":0},\n\"response\":{\n\"numFound\":2,\n\"docs\":[{\n\"id\":\"2\"}\n,{\n\"id\":\"1\",\n\"field2_i_p\":1}]}}\n\nand after the patch the output looks like\n\n{\n\"responseHeader\":{\"status\":0},\n\"response\":{\n\"numFound\":2,\n\"docs\":[{\n\"id\":\"2\",\n\"field2_i_p\":0}\n,{\n\"id\":\"1\",\n\"field2_i_p\":1}]}}\n\n\nSee how doc id:2 get's \"field2_i_p\":0 . This is because in IntFieldWriter we assume that a document has a value. And 0 because IntValue set's\u00a0currentValue to 0 if no value exists. I believe this will be true for the remaining fields so we should expand the test case to make sure we aren't introducing a regression\n\nif (sortValue.getField().equals(this.field)) {\n  val = (int) sortValue.getCurrentValue();\n  ew.put(this.field, val);\n  return true;\n}\n\n\u00a0\n\n2. Can we implement\u00a0this method in SortDoc\n\npublic SortValue getSortValue(String field) {\n  for (SortValue value : sortValues) {\n    if (value.getField().equals(\"field\")) {\n      return value;\n    }\n  }\n  return null;\n}\n\nIf we do this then\u00a0LongFieldWriter and all the other FieldWriter's\u00a0logic around this could be simplified\u00a0\n\nfor (SortValue sortValue : sortDoc.getSortValues()) {\n  if (sortValue.getField().equals(this.field)) {\n    val = (long) sortValue.getCurrentValue();\n    ew.put(this.field, val);\n    return true;\n  }\n}\n\n\u00a0\n\n3. We'd need to implement\u00a0DoubleValue with the new interface otherwise there is a compilation issue\n\n\u00a0\n\n\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16553539"
        },
        {
            "date": "2018-07-24T20:03:27+0000",
            "content": "Thanks Varun; great insights. I am able to put up a patch, with respect to your comments, which optimise for all field types at export writing, except MultiFieldWriter for now. note this is WIP, and testRandomNumerics is failing. ",
            "author": "Amrit Sarkar",
            "id": "comment-16554736"
        },
        {
            "date": "2018-07-27T15:29:21+0000",
            "content": "Uploaded recent patch; which fix testRandomNumerics but we are skipping optimization when field-values are not available / empty / null. \n\nIntroduced new boolean valNotNull for implementations of SortValue which keeps check whether the field getting fetched has actual value or not. ",
            "author": "Amrit Sarkar",
            "id": "comment-16559893"
        },
        {
            "date": "2018-07-27T19:44:35+0000",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 14s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m  2s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m  2s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m  2s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m  2s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m  2s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  39m  5s \n  core in the patch passed.  \n\n\n  \n   \n  43m 24s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12572 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12933379/SOLR-12572.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 1888bb5 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/154/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/154/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16560194"
        },
        {
            "date": "2018-08-01T22:47:03+0000",
            "content": "Hi Amrit,\n\nI've taken your last patch and cleaned it up a little. I think the patch is looking in good shape.\u00a0\n\nWill run some tests for correctness on this patch later today. Let's capture some perf numbers\n\nI'm thinking of indexing 25M docs with just \"id\" and then executing this query : q=match_all&sort=id desc&fl=id\u00a0 with and without the patch. This will test when a field is reused in sort and fl how much speed improvement do we get.\u00a0 If the numbers look good I'd imagine more sort and fl fields will bring larger\u00a0improvements.\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16566117"
        },
        {
            "date": "2018-08-02T21:44:59+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n -1 \n  test4tests  \n   0m  0s \n  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 12s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m  5s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m  5s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m  5s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m  5s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m  5s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  42m  3s \n  core in the patch failed.  \n\n\n  \n   \n  46m 24s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.handler.export.TestExportWriter \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12572 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12934173/slowness.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / b5ed635 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/158/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/158/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/158/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16567520"
        },
        {
            "date": "2018-08-03T01:35:39+0000",
            "content": "I did some testing on my local machine. The collection was 1 shard 1 replica. The collection has 25M docs where number_i was 1 though 25M .\n\nhttp://localhost:8983/solr/test_export/export?q=*:*&sort=number_i\u00a0desc&fl=number_i\n\nResults from 2 runs shows a ~30% improvement.\u00a0\u00a0\n\nwithout patch :\u00a0886s\u00a0,\u00a0866s\nwith patch :\u00a0664s ,\u00a0674s\n\nThe worrying thing though is that 7.4 is faster than master. I suspect that has something to do with\u00a0SOLR-11598 . I'm creating a new Jira to track that slowdown .\n\nThis patch looks good to me otherwise so I plan on committing it in the next few days ",
            "author": "Varun Thacker",
            "id": "comment-16567671"
        },
        {
            "date": "2018-08-08T20:16:48+0000",
            "content": "Updated patch which builds on top of\u00a0SOLR-12616 ",
            "author": "Varun Thacker",
            "id": "comment-16573801"
        },
        {
            "date": "2018-08-08T22:56:36+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n -1 \n  test4tests  \n   0m  0s \n  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 14s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m  5s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m  5s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m  5s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m  5s \n  the patch passed  \n\n\n -1 \n  Validate source patterns  \n   1m  5s \n  Validate source patterns validate-source-patterns failed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  44m 43s \n  core in the patch passed.  \n\n\n  \n   \n  49m  3s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12572 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12934872/SOLR-12572.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / e9f3a3c \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n Validate source patterns \n https://builds.apache.org/job/PreCommit-SOLR-Build/161/artifact/out/patch-validate-source-patterns-root.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/161/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/161/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16574009"
        },
        {
            "date": "2018-08-23T10:05:51+0000",
            "content": "I did some benchmarkings comparing export perf b/w version 7.4, master branch, master + S-12572 patch: https://docs.google.com/spreadsheets/d/1ZBCOybUPr9UVG0GCAJQTPYnKhohKirIlXduynFf2Whs/edit?usp=sharing.\n\nWe can see decent performance improvements, which will add performance to streaming expressions as well. ",
            "author": "Amrit Sarkar",
            "id": "comment-16590013"
        },
        {
            "date": "2018-08-23T16:38:49+0000",
            "content": "Final patch which makes some minor changes on top of Amrit's patch.\u00a0\n\nAdded a test, some assertions and a modified copy method ( which is more like a clone ) in\u00a0DoubleValue, IntValue etc.\n\nThe numbers Amrit posted look great! Thanks for running these extensive benchmarks\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16590493"
        },
        {
            "date": "2018-08-23T18:02:47+0000",
            "content": "Commit dfd2801cd27ccc1e24179cc0ee5768a22bb2e64c in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dfd2801 ]\n\nSOLR-12572: While exporting documents using the export writer, if a field is specified as a sort parameter and also in the fl (field list) parameter, we save on one doc-value lookup. This can bring performance improvements of 15% and upwards depending on how many fields are in common ",
            "author": "ASF subversion and git services",
            "id": "comment-16590613"
        },
        {
            "date": "2018-08-23T21:53:53+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n -1 \n  patch  \n   0m  5s \n  SOLR-12572 does not apply to master. Rebase required? Wrong Branch? See https://wiki.apache.org/solr/HowToContribute#Creating_the_patch_file for help.  \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12572 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12936848/SOLR-12572.patch \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/171/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16590852"
        },
        {
            "date": "2018-08-24T08:00:56+0000",
            "content": "Commit 2e12a4e8331cd5d9d29b1682ae9fac8f98e56084 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2e12a4e ]\n\nSOLR-12572: While exporting documents using the export writer, if a field is specified as a sort parameter and also in the fl (field list) parameter, we save on one doc-value lookup. This can bring performance improvements of 15% and upwards depending on how many fields are in common\n\n(cherry picked from commit dfd2801) ",
            "author": "ASF subversion and git services",
            "id": "comment-16591294"
        },
        {
            "date": "2018-08-24T08:02:47+0000",
            "content": "Commit cee309a6f76429bfba4334f78786a9c6eb97c3c0 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cee309a ]\n\nSOLR-12572: revert numDocs to be indexed to 1k ",
            "author": "ASF subversion and git services",
            "id": "comment-16591297"
        },
        {
            "date": "2018-08-24T08:03:28+0000",
            "content": "Thanks Amrit! ",
            "author": "Varun Thacker",
            "id": "comment-16591298"
        },
        {
            "date": "2018-08-25T03:09:41+0000",
            "content": "Commit dfd2801cd27ccc1e24179cc0ee5768a22bb2e64c in lucene-solr's branch refs/heads/jira/http2 from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dfd2801 ]\n\nSOLR-12572: While exporting documents using the export writer, if a field is specified as a sort parameter and also in the fl (field list) parameter, we save on one doc-value lookup. This can bring performance improvements of 15% and upwards depending on how many fields are in common ",
            "author": "ASF subversion and git services",
            "id": "comment-16592411"
        },
        {
            "date": "2018-08-25T03:09:49+0000",
            "content": "Commit cee309a6f76429bfba4334f78786a9c6eb97c3c0 in lucene-solr's branch refs/heads/jira/http2 from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cee309a ]\n\nSOLR-12572: revert numDocs to be indexed to 1k ",
            "author": "ASF subversion and git services",
            "id": "comment-16592416"
        }
    ]
}