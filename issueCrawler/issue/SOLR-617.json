{
    "id": "SOLR-617",
    "title": "Allow configurable deletion policy",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "search",
            "update"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Lucene API provides means to configure deletion policy. Solr should be able to expose it through configuration in solrconfig.xml. Moreover the new replication (SOLR-561) strategy is going to rely on this .\n\nI propose the configuration go into the <mainIndex>  section\n\nsample configuration\nsolrconfig.xml\n<mainIndex>\n    <!-- configure deletion policy here-->\n    <deletionPolicy>\n       <!-- Store only the commits with optimize.Non optimized commits will get deleted by lucene when \n               the last IndexWriter/IndexReader using this commit point is closed  -->\n        <keepOptimizedOnly>true</keepOptimizedOnly>\n         <!--Maximum no: of commit points stored . Older ones will be cleaned when they go out of scope-->\n        <maxCommitsToKeep></maxCommitsToKeep>\n         <!-- max age of a stored commit-->\n        <maxCommitAge></maxCommitAge>    \n    </deletionPolicy>\n    \n  </mainIndex>",
    "attachments": {
        "617.patch": "https://issues.apache.org/jira/secure/attachment/12389306/617.patch",
        "solr-617.patch": "https://issues.apache.org/jira/secure/attachment/12388842/solr-617.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Akshay K. Ukey",
            "id": "comment-12625339",
            "date": "2008-08-25T12:50:21+0000",
            "content": "This patch adds support for the configuration described in the issue description. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12626572",
            "date": "2008-08-28T14:11:15+0000",
            "content": "Thanks for the patch Akshay!\n\nI think we should allow a user to specify his custom IndexDeletionPolicy too. We can provide a default implementation with all the options specified in the issue description. So I propose that we have the following syntax:\n\n\n<deletionPolicy class=\"com.MyDeletionPolicy\" />\n\n\n\nThe default implementation will be SolrIndexDeletionPolicy which can be configured through a NamedList. Any custom deletion policy will be initialized with a NamedList if it implements NamedListInitializedPlugin.\n\n<!-- configure deletion policy here-->\n    <deletionPolicy class=\"solr.SolrIndexDeletionPolicy\">\n      <!--  Store only the commits with optimize.Non optimized commits will get deleted by lucene when\n            the last IndexWriter/IndexReader using this commit point is closed  -->\n      <str name=\"keepOptimizedOnly\">true</str>\n      <!--Maximum no: of commit points stored . Older ones will be cleaned when they go out of scope-->\n      <str name=\"maxCommitsToKeep\"></str>\n      <!-- max age of a stored commit-->\n      <str name=\"maxCommitAge\"></str>\n    </deletionPolicy>\n\n\n\nTo facilitate replication, we can have a wrapper over the IndexDeletionPolicy which can provide us the features needed for replication (SOLR-561). We need access to a list of non-deleted IndexCommit instances, a way to lookup IndexCommit given a version as well as the latest commit point.  "
        },
        {
            "author": "Akshay K. Ukey",
            "id": "comment-12627510",
            "date": "2008-09-01T18:17:33+0000",
            "content": "Attached is a patch with SolrDeletionPolicy class as the default deletion policy, with configuration as in Shalin's comment above, except that <str> is used for all the parameters in the named list. IndexDeletionPolicyWrapper class over IndexDeletionPolicy to enable access to commit details. Currently <maxCommitAge> named list parameter is not considered in the implementation of SolrDeletionPolicy. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12627640",
            "date": "2008-09-02T11:58:45+0000",
            "content": "This is looking great. Thanks!\n\nWe need a few tests for this. With the recent changes in Lucene trunk, we can get rid of the wrapper over IndexCommit. We need to support maxCommitAge too so that users who do a lot commits can reliably replicate without storing too many generations. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12627750",
            "date": "2008-09-02T17:17:21+0000",
            "content": "I think the deletion policy should be able to support true reservation... see the prototype patch I put together in https://issues.apache.org/jira/secure/attachment/12383728/deletion_policy.patch\n\nLucene has added more capabilities since then, so we should be able to simplify it. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12627770",
            "date": "2008-09-02T18:12:24+0000",
            "content": "We have two options:\n\n\tDo not reserve a commit point \u2013 If it gets deleted due to a newer commit, let an in-flight replication fail so that the slave re-polls and gets a fresher commit point.\n\tLet an in-flight replication reserve a commit point \u2013 The slave would start another replication immediately after the previous one because the master now has a newer commit point that what it had just pulled.\n\n\n\nI'm more in favor of the first approach. Here, the onus of keeping a commit point for reliable replication will fall on the user supplying configuration according to his commit frequency (the maxAge condition will be handy).\n\nAlso, wouldn't implementing a reserve method limit us to only the default SolrDeletionPolicy? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12627881",
            "date": "2008-09-03T01:06:16+0000",
            "content": "#1 and #2 can both lead to starvation.  I think the default should finish grabbing an index even if a newer version is available.\n\nHere, the onus of keeping a commit point for reliable replication will fall on the user supplying configuration\n\nIf we can make it such that it just works, regardless of network speed, index size, etc, then I think we should.  A reservation mechanism would easily enable this. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12627900",
            "date": "2008-09-03T04:49:02+0000",
            "content": "The IndexDeletionPolicyWrapper should be able to support the reserve feature even if the user provided IndexDeletionPolicy does not do it because it is wrapping the IndexCommit object. \nthe config can be as follows\n\n  <deletionPolicy class=\"solr.SolrIndexDeletionPolicy\" >\n    //this value will be honoured by the wrapper itself irrespective of the underlying implementation\n     <str name=\"reserve\">10</str>\n</deletionPolicy>\n\n "
        },
        {
            "author": "Akshay K. Ukey",
            "id": "comment-12629159",
            "date": "2008-09-08T13:38:12+0000",
            "content": "Patch synced with trunk. "
        },
        {
            "author": "Akshay K. Ukey",
            "id": "comment-12633649",
            "date": "2008-09-23T07:54:18+0000",
            "content": "This patch has:\n1. maxCommitAge configuration support\n2. Reservation mechanism is added in the ReplicationHandler configuration. Code for the same is in the latest patch of https://issues.apache.org/jira/browse/SOLR-561\n3. Test cases. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12634258",
            "date": "2008-09-24T19:03:12+0000",
            "content": "The patch looks good. I think this covers all the features we wanted to have.\n\nA few minor nitpicks\n\n\tThe latestCommit and maxCommitAgeMillis variables in SolrDeletionPolicy are assigned but never used.\n\tThe additional logging in onInit and onCommit in SolrDeletionPolicy can be removed \u2013 the same message is logged in FINE and INFO both\n\tThe defaults in solrconfig.xml should mimic the previous behavior i.e. keep only the last commit point\n\tJavadocs on IndexDeletionPolicyWrapper#setReserveDuration will be helpful\n\tIndexDeletionPolicyWrapper#getCommits should return the generic version of the Map\n\tIndexDeletionPolicyWrapper#getConfiguredDeletionPolicy can be called getWrappedDeletionPolicy or just getDeletionPolicy\n\tSlight mistake in the logging, the info message should be in the same block\n\nif(keepOptimizedOnly){\n          if(!commit.isOptimized())\n            commit.delete();\n          log.info(\"Marking unoptimized index \"+getId(commit)+ \" for deletion.\");\n        }\n\n\n\tThe getter methods in SolrDeletionPolicy should be named more appropriately e.g. isKeepOptimizedOnly, getMaxCommitAge, getMaxCommitsToKeep\n\n\n\nThe tests look good. Thanks for all the work, Akshay  "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12634264",
            "date": "2008-09-24T19:34:06+0000",
            "content": "Also, we need to use slf4j instead of the JDK Logger in the patch. "
        },
        {
            "author": "Akshay K. Ukey",
            "id": "comment-12634972",
            "date": "2008-09-26T19:13:16+0000",
            "content": "Patch with changes suggested by Shalin and logging using slf4j. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12635023",
            "date": "2008-09-26T21:15:56+0000",
            "content": "Updated with more javadocs and comments in solrconfig.xml\n\nI think this is ready to go in. I'll commit this in a day or two if there are no objection. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12635278",
            "date": "2008-09-29T03:38:14+0000",
            "content": "Committed revision 699975.\n\nThanks Yonik, Noble and Akshay! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775512",
            "date": "2009-11-10T15:51:43+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}