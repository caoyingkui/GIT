{
    "id": "SOLR-8488",
    "title": "Add support for leading wildcards to ComplexPhraseQParserPlugin",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "It would be useful to support leading wildcards in phrase searches as well. \n\nCurrently we support this query -\n\n\n{!complexphrase inOrder=true}name:\"Jo* Smith\"\n\n\nIt would be useful to be support a query like -\n\n\n{!complexphrase inOrder=true\\}name:\"*Jo* Smith\"",
    "attachments": {
        "SOLR-8488.patch": "https://issues.apache.org/jira/secure/attachment/12780540/SOLR-8488.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-05T12:48:32+0000",
            "author": "Varun Thacker",
            "content": "Simple patch with a test case. ",
            "id": "comment-15083001"
        },
        {
            "date": "2016-01-06T08:11:43+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Functionally looks okay, but this should be opted in. Leading wildcards can be very costly and the user should consciously opt in to allow them.. ",
            "id": "comment-15085188"
        },
        {
            "date": "2016-01-07T07:58:59+0000",
            "author": "Varun Thacker",
            "content": "Thanks Ram for the feedback!\n\nPatch which makes leading wildcards optional and false by default.\n\nOne oddity in ComplexPhraseQParserPlugin is how \"inOrder\" can be configured while defining the plugin via init .But it won't work because ComplexPhraseQParser#setInOrder doesn't do this lparser.setInOrder(inOrder); ? Maybe warrants another Jira though ",
            "id": "comment-15087025"
        },
        {
            "date": "2016-01-07T20:10:08+0000",
            "author": "Yonik Seeley",
            "content": "For a common letter such as \"a\", each level may be 10 times more expensive than the last... while it may make sense to allow for that to be limited, I don't think it makes sense to hobble it by default.  Its also not necessarily that expensive compared to some other Solr operations like stats/facets on high cardinality fields (and pivoted multiplies this).\n\nSolr has normally allowed leading wildcards by default, and we should continue that here.\nFor example, try:\nhttp://localhost:8983/solr/techproducts/query?q=text:*olr ",
            "id": "comment-15088019"
        },
        {
            "date": "2016-01-07T21:02:12+0000",
            "author": "Ramkumar Aiyengar",
            "content": "I get that consistency with the normal phrase queries will be good, do keep in mind that cpq makes it even easier to shoot yourself in your foot, \"*a *b *c\" for example. Also enabling it by default would also be a compatibility break for 5x at least.\n\nFor trunk, fine, I am not too opinionated about the default, as long as there's an option to block it. And if we are looking to be consistent, should other parsers also honor this option? ",
            "id": "comment-15088100"
        }
    ]
}