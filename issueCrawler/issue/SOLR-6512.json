{
    "id": "SOLR-6512",
    "title": "Add a collections API call to add/delete arbitrary properties to a specific replica",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This is a sub-task for SOLR-6491, but seems generally useful. \n\nSince this is in support of the \"preferredLeader\" functionality, I've run into some considerations that I wanted some feedback on how to handle.\n\n\"preferredLeader\" has the restriction that there should only be one per slice, so setting this for a particular node means removing the property for all the other replicas on the slice. Not a problem to do, my question is more whether this is something reasonable to enforce on an arbitrary property based on what that property is? Perfectly do-able, but \"semantically challenged\". Currently, this is never a node with \"preferedLeader\" set to \"false\", it is forcibly removed from other nodes in the slice when this property is assigned.\n\nThe problem here is that there's nothing about assigning an arbitrary property to a node that would reasonably imply this kind of behavior. One could always control this with secondary flags on the command, e.g. \"shardExclusive=true|false\" for instance, perhaps with safety checks in for known one-per-shard properties like \"preferredLeader\".\n\n\"preferredLeader\" seems to fit more naturally into a \"role\", but currently ADDROLE and DELTEROLE have nothing to do with the notion of setting a role for a particular node relative to a collection/shard. Easy enough to add, but enforcing the \"only one node per slice may have this role\" rule there is similarly arbitrary and overloads the ADDROLE/DELETEROLE in a way that seems equally confusing. Plus, checking whether the required collection/shard/node params are present becomes based on the value of the property being set, which is all equally arbitrary.\n\nThe other interesting thing is that setting an arbitrary property on a node would allow one to mess things up royally by, say, changing properties like \"core\", or \"base_url\" or node_name at will. Actually this is potentially useful, but very, very dangerous and I'm not particularly interested in supporting it .  I suppose we could require a prefix, say the only settable properties are \"property.whatever\".\n\nWe could also add something specific to nodes, something like ADDREPLICAROLE/DELETEREPLICAROLE, perhaps with sub-params like \"onlyOneAllowedPerShard\", but this gets messy and relies on the users \"doing the right thing\". I prefer enforcing rules like this  based on the role I think. Or at least enforcing these kinds of requirements on the \"preferredLeader\" role if we go that way.\n\nWhat are people's thoughts here? I think I'm tending towards the ADDREPLICAROLE/DELETEREPLICAROLE way of doing this, but it's not set in stone. I have code locally for arbitrary properties that I can modify for the role bits.\n\nSo, if I'm going to summarize the points I'd like feedback on:\n1> Is setting arbitrary properties on a node desirable? If so, should we require a prefix like \"property\" to prevent resetting values SolrCloud depends on?\n\n2> Is it better to piggyback on ADDROLE/DELETEROLE? Personally I'm not in favor of this one. Too messy with requiring additional parameters to work right in this case\n\n3> Is the best option to create new collections API calls for ADDREPLICAROLE/DELETEREPLICAROLE that\n3.1> require collection/slice/node parameters\n3.2> enforces the \"onlyOnePerShard\" rule for certain known roles\n3.3 v1> allows users to specify arbitrary roles something like \"onlyOnePerShard\" as an optional T|F parameter, otherwise is totally open.\nor\n3.3 v2> No support other than \"preferredLeader\", only roles that are pre-defined are allowed, in which case the \"onlyOnePerShard\" is implicit in the role.",
    "attachments": {
        "SOLR-6512.patch": "https://issues.apache.org/jira/secure/attachment/12668969/SOLR-6512.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-14134541",
            "date": "2014-09-15T21:41:41+0000",
            "content": "So after thinking on it for a bit, I decided I like option 3, with the 3.3 v1 variant. I'll attach a preliminary patch in a minute that has ADD/DELETE[REPLICAROLE] collections API commands. It's certainly not ready for committing yet.\n\nThings I need to do yet:\n1> Right now, it only really recognizes a \"preferredLeader\" role. I'll remove that restriction.\n2> I'll see add support on the ADDREPLICAROLE for \"onePerShard\" so if people want to put arbitrary roles in there they can. It'll default to \"true\". The \"preferredLeader\" command will barf if onePerShard=false, otherwise it's up to someone adding a new role. \n\nSo the train's leaving the station here, object now if there are problems with this approach please. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14134928",
            "date": "2014-09-16T04:21:27+0000",
            "content": "Well, it took me more than a 'minute'. This patch (haven't checked it over entirely yet) that does the following:\n\n1> Allows an arbitrary role to be assigned to a particular replica for a collection/slice.\n2> Defaults to 'only one per slice'. Thus if you set the same property on a second node in a slice, it is removed from the first one.\n3> Allows <2> to be overridden by a param multiplePerSlice=true. \n4> Throws an error for <3> if the role in question is in a list of known roles that should have one role per slice. \"preferredLeader\" is the one and only role in this list at present.\n\nI'll look at it in the morning and no doubt see stuff I want to change. That said, AFAIK it's quite close to being ready to commit, so speak up now if there are issues. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14142189",
            "date": "2014-09-20T20:24:23+0000",
            "content": "Except for CHANGES.txt entries, I think it's ready, assuming that adding an arbitrary role to specific replicase is A Good Thing.\n\nThis patch allows one to add and delete a role on a specific replica. By default there is only one role allowed per slice, with the ability to override by specifying multiplePerSlice=true (defaults to false).\n\nNOTE: Moving a few static strings around in this patch reflect Shalin's recent work in SOLR-6115: Cleanup enum/string action types in Overseer, OverseerCollectionProcessor and CollectionHandler. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14142191",
            "date": "2014-09-20T20:30:26+0000",
            "content": "Review Board here: https://reviews.apache.org/r/25876/. At least I hope I did it right.\n\nI'll probably commit this early next week unless there are objections. Mostly waiting that long to give people a chance to comment. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14142192",
            "date": "2014-09-20T20:33:09+0000",
            "content": "Mark Miller Noble Paul\n\nDon't want the train to leave the station without people being on board. This particular patch allows arbitrary roles to be assigned to a replica. The first use-case is, of course, the preferredLeader stuff, but it's not confined to that.\n\nSo we can commit this if it's useful without having to use it for the preferredLeader stuff at all. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14149832",
            "date": "2014-09-26T19:19:15+0000",
            "content": "This particular patch allows arbitrary roles to be assigned to a replica.\n\n+1 to the functionality in general, I think there will be many uses for this.\n\nAs far as naming though... perhaps this is more about arbitrary metadata/properties,  and not specifically roles?  Roles could just be a semantic interpretation of specific properties.  If we had a setProperty API (or setReplicaProperty), it could be used for both setting roles as well as other things.\n\nmultiplePerSlice=true (defaults to false).\n\nFor a generic API, it feels like the default should be the reverse.   sliceUnique=true/false (with the default being false) "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14149957",
            "date": "2014-09-26T20:54:26+0000",
            "content": "Yeah, I flipped back and forth between roles and properties when I started this. After coding it up as roles, I actually came to think that properties would be less error-prone. It's too easy to foo on string maintenance when you have multiple roles. Seems worth changing. I'll default to removing properties that are set to false in the interest of brevity.\n\nAs far as the sliceUnique defaulting to false, hmmm. I guess that works. How to reconcile the fact that \"preferredLeader\" is always sliceUnique=true? Silently set sliceUnique=true for properties we know must be sliceUnique=true (I suppose a bit of documentation is in order here)? Fail unless they specify sliceUnique=true? or only fail if they explicitly specify sliceUnique=false?\n\nI'm tending to silently override sliceUnique for known properties and failing if they explicitly specify sliceUnique=false for properties like \"preferredLeader\" on the principle that they should be notified that they're trying to do something inconsistent. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14149961",
            "date": "2014-09-26T21:01:04+0000",
            "content": "I'm tending to silently override sliceUnique for known properties and failing if they explicitly specify sliceUnique=false for properties like \"preferredLeader\" on the principle that they should be notified that they're trying to do something inconsistent.\n\nYep, seems fine, and we get to keep sliceUnique=false (I think true would continually suprise people... setting a prop on one replica automatically removes it from certain other replicas?).  It will also lead to a more consistent API if/when we have true node-level properties... "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14152697",
            "date": "2014-09-30T01:42:30+0000",
            "content": "Reworked patch for arbitrary property assignment rather than roles. Also on review board, see: https://reviews.apache.org/r/26161/\n\nthe \"preferredLeader\" role is special in that there is a list of known properties that we enforce the \"only one per slice\" rule. This list may be added to in the future if necessary.\n\nThere is an optional parameter \"sliceUnique\" that can be specified with arbitrary properties to enforce this rule without changing the code. sliceUnique defaults to \"false\", in which case properties can be added however desired.\n\nI'll probably commit this Wednesday unless there are objections. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14155104",
            "date": "2014-10-01T16:55:03+0000",
            "content": "Final patch with CHANGES.txt addition "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14155106",
            "date": "2014-10-01T16:57:50+0000",
            "content": "Commit 1628773 from Erick Erickson in branch 'dev/trunk'\n[ https://svn.apache.org/r1628773 ]\n\nSOLR-6512: Add a collections API call to add/delete arbitrary properties to a specific replica "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14155247",
            "date": "2014-10-01T18:25:09+0000",
            "content": "Commit 1628802 from Erick Erickson in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1628802 ]\n\nSOLR-6512: Add a collections API call to add/delete arbitrary properties to a specific replica "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14155251",
            "date": "2014-10-01T18:27:20+0000",
            "content": "I'll be adding to the ref guide momentarily. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14163621",
            "date": "2014-10-08T15:30:06+0000",
            "content": "NOTE: SOLR-6513 has a change that preserves custom properties across nodes going up and down that slipped through this JIRA. "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332773",
            "date": "2015-02-23T05:01:50+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}