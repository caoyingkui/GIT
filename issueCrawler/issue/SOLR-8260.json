{
    "id": "SOLR-8260",
    "title": "Use NIO2 APIs in core discovery",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.4"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "CorePropertiesLocator currently does all its file system interaction using java.io.File and friends, which have all sorts of drawbacks with regard to error handling and reporting.  We've been on java 7 for a while now, so we should use the nio2 Path APIs instead.",
    "attachments": {
        "SOLR-8260.patch": "https://issues.apache.org/jira/secure/attachment/12771377/SOLR-8260.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-09T17:11:05+0000",
            "author": "Alan Woodward",
            "content": "Patch.  Tests pass, running precommit now. ",
            "id": "comment-14996913"
        },
        {
            "date": "2015-11-09T17:50:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1713490 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1713490 ]\n\nSOLR-8260: Use nio2 API in core discovery ",
            "id": "comment-14996994"
        },
        {
            "date": "2015-11-09T18:02:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1713498 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1713498 ]\n\nSOLR-8260: Use nio2 API in core discovery ",
            "id": "comment-14997021"
        },
        {
            "date": "2015-11-09T18:15:00+0000",
            "author": "Uwe Schindler",
            "content": "Thanks Alan! I like this very much. We should on working to disallow java.io.File throughout Solr!  ",
            "id": "comment-14997043"
        },
        {
            "date": "2015-11-09T18:18:14+0000",
            "author": "Alan Woodward",
            "content": "We should on working to disallow java.io.File throughout Solr!\n\nThat would be great, but I think it might take a while! ",
            "id": "comment-14997049"
        },
        {
            "date": "2015-11-09T20:34:46+0000",
            "author": "Shawn Heisey",
            "content": "We should on working to disallow java.io.File throughout Solr!\n\nI thought this had already been added to the forbidden apis config in the build system, but it seems that was only for Lucene.  I'm guessing that if we move it from the lucene config to the base config, Solr will pick it up as well. ",
            "id": "comment-14997303"
        },
        {
            "date": "2015-11-09T22:36:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1713563 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1713563 ]\n\nSOLR-8260: Remove morphlines test setup with wrongly configured core discovery roots ",
            "id": "comment-14997535"
        },
        {
            "date": "2015-11-09T22:37:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1713564 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1713564 ]\n\nSOLR-8260: Remove morphlines test setup with wrongly configured core discovery roots ",
            "id": "comment-14997538"
        },
        {
            "date": "2015-11-12T13:41:34+0000",
            "author": "Kevin Risden",
            "content": "Alan Woodward I see that you are going through and fixing a bunch to nio from java.io. Is there a JIRA outlining what still needs to be done? ",
            "id": "comment-15002074"
        },
        {
            "date": "2015-11-12T13:44:48+0000",
            "author": "Alan Woodward",
            "content": "There isn't, but an overarching JIRA ticket isn't a bad idea.  Will open one up! ",
            "id": "comment-15002079"
        },
        {
            "date": "2015-11-12T17:18:41+0000",
            "author": "Shawn Heisey",
            "content": "I added the same exclusions found in the forbiddenapi config for Lucene to Solr, and started going through the tagged classes in trunk to change to NIO2.  I don't think I've touched anything for core discovery yet, so I'm hoping the commits here won't overlap. ",
            "id": "comment-15002454"
        },
        {
            "date": "2015-11-12T17:25:37+0000",
            "author": "Kevin Risden",
            "content": "Probably makes sense to look over at SOLR-8282 that Alan Woodward created. ",
            "id": "comment-15002477"
        },
        {
            "date": "2015-11-17T20:32:00+0000",
            "author": "David Smiley",
            "content": "I just reviewed this patch.  One thing I'm seeing here that I usually consider to be a (minor) error is this pattern:\n\n    catch (IOException e) {\n      logger.error(\"Couldn't persist core properties to {}: {}\", propfile, e.getMessage());\n    }\n\n\nTwo things:\n\n\tI almost always pass the exception (variable e here) to the logger.  Or in other cases involving throwing different exceptions, the parallel is forgetting to pass the exception as the cause.  Was not doing this intentional?\n\tTo put the details of the exception in the logged string, I suggest e.toString() as it includes the class as well as the message.  Forgetting to do this can be confusing, like for example if you get a FileNotFoundException where the class name itself is key to understanding what the problem is, just as much as the file name (in the message) is.\n\n ",
            "id": "comment-15009440"
        },
        {
            "date": "2015-11-18T09:46:55+0000",
            "author": "Alan Woodward",
            "content": "Passing the exception itself to the logger generally ends up with a stacktrace being written out, which I don't think would be particularly useful here.  But I like the idea of replacing e.getMessage() with e.toString(), will update.  Thanks! ",
            "id": "comment-15010636"
        },
        {
            "date": "2015-12-05T04:59:58+0000",
            "author": "David Smiley",
            "content": "will update.\n\nLooking forward to that still  ",
            "id": "comment-15042651"
        }
    ]
}