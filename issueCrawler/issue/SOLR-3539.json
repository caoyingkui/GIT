{
    "id": "SOLR-3539",
    "title": "rethink softCommit=true|false param on commits?",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I think the current NTR related options when doing a commit, particularly \"openSearcher=\"true|false\" and \"softCommit=true|false\", is confusing, and we should rethink them before they get baked into the user API in 4.0.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13293886",
            "date": "2012-06-12T20:02:36+0000",
            "content": "\nThis is something that started to concern me while trying to update the tutorial.  I'm having a hard time articulating my concerns to myself, so this will largely be stream of consciousness...\n\nBoth of these params seen defined more in terms of what they don't do then what they actually do \u2013 softCommit in particular \u2013 and while they aren't too terrible to explain indivdually, it's very hard to clearly articulate how they interplay with eachother.\n\n\n\topenSearcher\n\t\n\t\ttrue - opens a new searcher against this commit point\n\t\tfalse - does not open a new searcher against this commit point\n\t\n\t\n\tsoftCommit\n\t\n\t\ttrue - a new searcher is opened against the commit point, but no data is flushed to disk.\n\t\tfalse - the commit point is flushed to disk.\n\t\n\t\n\n\n\nCertain combinations of these params seem redundent (openSearcher=true&softCommit=true) while others not only make no sense, but are directly contradictory (openSearcher=false&softCommit=true)...\n\n\n\n\n\n\t\n\n\nsoftCommit=true\nsoftCommit=false\n\n\nopenSearcher=true\nopenSearcher is redundent\nOK\n\n\nopenSearcher=false\ncontradictory (openSearcher is currently ignored)\nOK\n\n\n\n\n\nFrom a vocabulary standpoint, they also seem confusing to understand.  Consider a new user, starting with the 4x example which contains the following...\n\n\n  <autoCommit> \n    <maxTime>15000</maxTime> \n    <openSearcher>false</openSearcher> \n  </autoCommit>\n\n\n\nDocuments this user adds will automaticly get flushed to disk, but won't be visible in search results until the user takes some explicit action.  The user, upon reading some docs or asking on the list will become aware that he needs to open a new searcher, and will be guided to \"do a commit\" (or maybe a commit explicitly adding openSearcher=true).  But this is actually overkill for what the user needs, because it will also flush any pending docs to disk.  All the user really needs to \"open a new searcher\" is to do an explicit commit with softCommit=true.\n\n\n\nI would like to suggest that we throw out the the \"softCommit\" param and replace it with a \"flush\" (or \"flushToDisk\" or \"persist\") param, which is solely concerned with the persistence of the commit, and completely disjoint from \"searcher\" opening which would be controled entirely with the \"openSearcher\" param.\n\n\n\topenSearcher\n\t\n\t\ttrue - opens a new searcher against this commit point\n\t\tfalse - does not open a new searcher against this commit point\n\t\n\t\n\tflush\n\t\n\t\ttrue - flushes this commit point to stable storage\n\t\tfalse - does not flush this commit point to stable storage\n\t\n\t\n\n\n\nMaking the interaction much easier to understand...\n\n\n\n\n\n\t\n\n\nflush=true\nflush=false\n\n\nopenSearcher=true\nOK\nOK\n\n\nopenSearcher=false\nOK\nNo-Op\n\n\n\n\n\n\n\nI've mainly been thinking about this from a user perspective the last few days, so I haven'thad a chance to figure out how much this would impact the internals related to softCommit right now.  I supsect there are a lot of places that would need to be tweaked, but hopefully most of them would just involve flipping logic (softCommit=true -> flush=false).  The biggest challenges i can think of are:\n\n\thow to deal with the autocommit options in solrconfig.xml.  in 3x we supported a single <autoCommit/> block.  On the 4x branch we support one <autoCommit/> lock and one <autoSoftCommit/> block \u2013 should we continue to do that? would <autoSoftCommit/> just implicitly specify flush=false? or should we try to generalize to support N <autoCommit/> blocks where <openSearcher/> and <flush/> are config options for all of them?\n\tevent eventlistener \u2013 it looks like the SolrEventListener API had a postSoftCommit() method added to it, but it doesn't seem to be configurable in any way \u2013 i think this is just for tests, but if it's intentionally being expost we would need to revamp it ... off the cuff i would suggest removing postSoftCommit() changing the postCommit() method to take in some new structure specifying the options on the commit.\n\n\n\n\nThoughts? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412086",
            "date": "2012-07-11T22:25:58+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13423788",
            "date": "2012-07-27T10:46:23+0000",
            "content": "Anyone else have thoughts around this?\nOne performance concern of mine revolves around \"commit\" - the vast majority of people used it for visibility of documents, not for persistence at a specific time.\n\nI'm warming to the idea of a \"flush\" param instead of softCommit, and it seems like perhaps it should default to \"false\" for 4.0 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429786",
            "date": "2012-08-07T03:43:02+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13442603",
            "date": "2012-08-27T18:44:41+0000",
            "content": "I agree we could clean this up.\n\nI worry about flush since it used to mean something else. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13442617",
            "date": "2012-08-27T18:53:23+0000",
            "content": "I worry about flush since it used to mean something else.\n\n\"persist\" ? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13456390",
            "date": "2012-09-15T12:49:26+0000",
            "content": "Unassigned issues -> 4.1 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717281",
            "date": "2013-07-23T18:47:43+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13931038",
            "date": "2014-03-11T22:05:42+0000",
            "content": "Perhaps for 5? I'd say this baked in now  "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971267",
            "date": "2014-04-16T12:57:36+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}