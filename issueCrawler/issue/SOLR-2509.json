{
    "id": "SOLR-2509",
    "title": "spellcheck: StringIndexOutOfBoundsException: String index out of range: -1",
    "details": {
        "affect_versions": "3.1",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Hi,\n\nI'm a french user of SOLR and i've encountered a problem since i've installed SOLR 3.1.\n\nI've got an error with this query : \ncle_frbr:\"LYSROUGE1149-73190\"\n\nSEE COMMENTS BELOW\n\nI've tested to escape the minus char and the query worked :\ncle_frbr:\"LYSROUGE1149(BACKSLASH)-73190\"\n\nBut, strange fact, if i change one letter in my query it works :\ncle_frbr:\"LASROUGE1149-73190\"\n\n\nI've tested the same query on SOLR 1.4 and it works !\n\nCan someone test the query on next line on a 3.1 SOLR version and tell me if he have the same problem ? \nyourfield:\"LYSROUGE1149-73190\"\n\nWhere do the problem come from ?\n\nThank you by advance for your help.\n\nTom",
    "attachments": {
        "schema.xml": "https://issues.apache.org/jira/secure/attachment/12503867/schema.xml",
        "SOLR-2509.patch": "https://issues.apache.org/jira/secure/attachment/12503897/SOLR-2509.patch",
        "solrconfig.xml": "https://issues.apache.org/jira/secure/attachment/12503868/solrconfig.xml",
        "document.xml": "https://issues.apache.org/jira/secure/attachment/12503866/document.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Thomas Gambier",
            "id": "comment-13032320",
            "date": "2011-05-12T08:43:40+0000",
            "content": "More investigation :\n\nI've located that spellchecker collate function is the trouble.\n\nhttp://localhost:8983/solr/spell?q=cle_frbr%3A\"LYSROUGE1149-73190\"&spellcheck=true&spellcheck.collate=true\nThe query failed with the same error as above.\n\nhttp://localhost:8983/solr/spell?q=cle_frbr%3A\"LYSROUGE1149-73190\"&spellcheck=true\nThis query works fine. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13050211",
            "date": "2011-06-16T04:40:43+0000",
            "content": "Moved original stack trace out of description for brevity...\n\n\nThe error is :\nHTTP ERROR 500\n\nProblem accessing /solr/select. Reason:\n\n    String index out of range: -1\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: -1\n\tat java.lang.AbstractStringBuilder.replace(AbstractStringBuilder.java:797)\n\tat java.lang.StringBuilder.replace(StringBuilder.java:271)\n\tat org.apache.solr.spelling.SpellCheckCollator.getCollation(SpellCheckCollator.java:131)\n\tat org.apache.solr.spelling.SpellCheckCollator.collate(SpellCheckCollator.java:69)\n\tat org.apache.solr.handler.component.SpellCheckComponent.addCollationsToResponse(SpellCheckComponent.java:179)\n\tat org.apache.solr.handler.component.SpellCheckComponent.process(SpellCheckComponent.java:157)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:194)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1360)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:356)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:252)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n\tat org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n\tat org.mortbay.jetty.Server.handle(Server.java:326)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n\tat org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)\n\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13050212",
            "date": "2011-06-16T04:41:54+0000",
            "content": "the stack trace is different, but based on the fact that it has to do with using spellcheck.collate and \"-\" in the query this smells like it might be realted to SOLR-1630 "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13090066",
            "date": "2011-08-24T07:51:45+0000",
            "content": "I see this issue in 1.4 with query \"Irano-Hind\" and spellcheck w/collate. However, I cannot reproduce in 3.1, so my issue was probably SOLR-1630 related.\n\nSure you're on 3.1? Can you describe closer what you do, what field type you use, how you setup spellcheck etc? "
        },
        {
            "author": "Steffen Elberg Godskesen",
            "id": "comment-13151129",
            "date": "2011-11-16T10:37:59+0000",
            "content": "\nWe seem to be hitting this bug in in 4.0 also. I've attached the simplest (that I could come up with) config, schema and document that enables me to reproduce the exception on the latest nightly build (from https://builds.apache.org/job/Solr-trunk/lastSuccessfulBuild/artifact/artifacts/apache-solr-4.0-2011-11-16_08-54-59.tgz) \n\nTo reproduce:\n\n\n\tStart a Solr instance using the attached schema.xml and solrconfig.xml\n\tAdd the attached document.xml to the index\n\tQuery for hypenated-wotd with spellchecking on and collation on (e.g. http://localhost:8983/solr/select?&q=hypenated-wotd&spellcheck=true&spellcheck.collate=true)\n\n\n\nThis will log the following exception (very similar to the one above, but included for completeness)\n\n\nNov 16, 2011 11:18:33 AM org.apache.solr.core.SolrCore execute\nINFO: [] webapp=/solr path=/select params={spellcheck.collate=true&spellcheck=true&q=hypenated-wotd} hits=0 status=500 QTime=34 \nNov 16, 2011 11:18:33 AM org.apache.solr.common.SolrException log\nSEVERE: java.lang.StringIndexOutOfBoundsException: String index out of range: -4\n\tat java.lang.AbstractStringBuilder.replace(AbstractStringBuilder.java:797)\n\tat java.lang.StringBuilder.replace(StringBuilder.java:271)\n\tat org.apache.solr.spelling.SpellCheckCollator.getCollation(SpellCheckCollator.java:131)\n\tat org.apache.solr.spelling.SpellCheckCollator.collate(SpellCheckCollator.java:70)\n\tat org.apache.solr.handler.component.SpellCheckComponent.addCollationsToResponse(SpellCheckComponent.java:177)\n\tat org.apache.solr.handler.component.SpellCheckComponent.process(SpellCheckComponent.java:154)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:194)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1475)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:353)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:248)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n\tat org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n\tat org.mortbay.jetty.Server.handle(Server.java:326)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n\tat org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)\n\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n\n "
        },
        {
            "author": "James Dyer",
            "id": "comment-13151281",
            "date": "2011-11-16T16:00:01+0000",
            "content": "This patch contains a failing unit test, based on Steffan's config files. "
        },
        {
            "author": "Steffen Elberg Godskesen",
            "id": "comment-13155380",
            "date": "2011-11-22T19:55:51+0000",
            "content": "This patch passes James' new unit tests, but fails testCollate() in org.apache.solr.handler.component.SpellCheckComponentTest, since the collation \"pixmaa-a-b-c-d-e-f-g\" is now returned for the query \"pixma-a-b-c-d-e-f-g\" with the word \"pixmaa\" in the index. The test expects the collation \"pixmaa\" to be returned. \n\nI'm not really in a position to decide which behavior is correct. The new behavior passes James' tests and fixes the StringIndexOutOfBoundsException, but may deviate enough from the current behavior to cause problems for existing users. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13162416",
            "date": "2011-12-04T16:31:54+0000",
            "content": "This seems like a fairly straight-forward patch code-change wise, but I confess I know nothing about this code. So if someone who does can take a glance at the actual changes (three lines total, and unit tests, cool!) and render an opinion on Steffan's note about the collation issue is something to be concerned about or not I can alter the failing test and get this into the code. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13163103",
            "date": "2011-12-05T22:16:52+0000",
            "content": "Steffen's changes are most certainly correct.  The index contains \"pixmaa\" and we are querying on \"pixma-a-b-c-d-e-f-g\".  The spelling index is using analyzer \"lowerpunctfilt\" (solrconfig-spellcheckcomponent.xml, line 44) which includes WordDelimiterFilter and \"generateWordParts=1\".  So we would expect this query to tokenize down to \"pixma\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\".  As the Collate feature is only supposed to replace the misspelled token with the new one, I wonder why this test scenario would expect all 8 tokens to be replaced by 1 token .\n\nIndeed, this test scenario was added during a refactoring (r1022768) with no JIRA # or bug mentioned at all in the comments.  So we can't know for sure why it was added.  I'm thinking this is invalid.  I would expect the correct collation to be \"pixma-a-b-c-d-e-f-g\".  \n\nJust for grins, I put a \"println\" in SpellingQueryConverter to show the start & end offsets for each token before and after the patch.  In both cases, we get the same token texts, but prior to the patch the offset values are clearly wrong.\n\n--before:\nTOKEN: pixma so=0 eo=19\nTOKEN: a so=0 eo=19\nTOKEN: b so=0 eo=19\nTOKEN: c so=0 eo=19\nTOKEN: d so=0 eo=19\nTOKEN: e so=0 eo=19\nTOKEN: f so=0 eo=19\nTOKEN: g so=0 eo=19\nTOKEN: pixmaabcdefg so=0 eo=19\n\n--after:\nTOKEN: pixma so=0 eo=5\nTOKEN: a so=6 eo=7\nTOKEN: b so=8 eo=9\nTOKEN: c so=10 eo=11\nTOKEN: d so=12 eo=13\nTOKEN: e so=14 eo=15\nTOKEN: f so=16 eo=17\nTOKEN: g so=18 eo=19\nTOKEN: pixmaabcdefg so=0 eo=19\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13163114",
            "date": "2011-12-05T22:34:04+0000",
            "content": "Indeed, this test scenario was added during a refactoring (r1022768) with no JIRA # or bug mentioned at all in the comments. \n\nMy commit \n\nThe commit comment said \"tests: fix resource leaks and simplify\", and hopefully that's all I did!\n\nLooking back wrt pixma, it looks like I replaced this:\n\n-  @Test\n-  public void testCollate2() throws Exception {\n-    SolrCore core = h.getCore();\n-    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n-    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n-\n-    ModifiableSolrParams params = new ModifiableSolrParams();\n-    params.add(CommonParams.QT, \"spellCheckCompRH\");\n-    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n-    params.add(CommonParams.Q, \"pixma-a-b-c-d-e-f-g\");\n-    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n-    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n-\n-    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n-    SolrQueryResponse rsp = new SolrQueryResponse();\n-    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n-    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n-    NamedList values = rsp.getValues();\n-    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n-    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n-    String collation = (String) suggestions.get(\"collation\");\n-    assertEquals(\"pixmaa\", collation);\n-  }\n\n\n\nWith this:\n\n\n+    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n+       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n+    );\n\n "
        },
        {
            "author": "James Dyer",
            "id": "comment-13163695",
            "date": "2011-12-06T16:51:59+0000",
            "content": "ahhhh.  I see in r1022768 you combined \"testCollate()\" with \"testCollate2()\", where this test scenario was originally.  Thanks for the clarification (and sorry!).  So in fact this was added with SOLR-1630 (r987509), the comments therein are not very reassuring that it was a \"correct\" or \"final\" fix. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13163770",
            "date": "2011-12-06T19:43:51+0000",
            "content": "Here's the updated patch. The only difference between this and the original is that I changed the failing test to expect pixmaa rather than pixma-a-b-c-d-e-f-g.\n\nIf nobody objects, I'll commit this tomorrow (7-Dec) on both trunk and 3x. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13164434",
            "date": "2011-12-07T14:47:10+0000",
            "content": "\nTrunk r: 1211456\n3x r:    1211457 "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13165200",
            "date": "2011-12-08T13:01:51+0000",
            "content": "By the way, many thanks to Thomas and Steffen! "
        }
    ]
}