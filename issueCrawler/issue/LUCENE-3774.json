{
    "id": "LUCENE-3774",
    "title": "check-legal isn't doing its job",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/build"
        ],
        "type": "Improvement",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "affect_versions": "3.6,                                            4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In trunk, the check-legal-lucene ant target is not checking any lucene/contrib/**/lib/ directories; the modules/**/lib/ directories are not being checked; and check-legal-solr can't be checking solr/example/lib/**/*.jar, because there are currently .jar files in there that don't have a license.\n\nThese targets are set up to take in a full list of lib/ directories in which to check, but modules move around, and these lists are not being kept up-to-date.\n\nInstead, check-legal-* should run for each module, if the module has a lib/ directory, and it should be specialized for modules that have more than one (solr/core/) or that have a lib/ directory in a non-standard place (lucene/core/).",
    "attachments": {
        "backport.patch": "https://issues.apache.org/jira/secure/attachment/12514416/backport.patch",
        "LUCENE-3774.patch": "https://issues.apache.org/jira/secure/attachment/12514240/LUCENE-3774.patch",
        "LUCENE3774.patch": "https://issues.apache.org/jira/secure/attachment/12514288/LUCENE3774.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-02-11T23:03:26+0000",
            "content": "Patch:\n\n\n\tEliminates check-legal-solr and renames check-legal-lucene to check-legal.\n\tant test depends on either validate-lucene or validate-solr, which depend on check-legal.\n\tcheck-legal takes no action unless there is a lib/ directory in the module where it's being run.\n\tlucene/core/ and solr/core/ modules specialize check-legal to handle their non-standard lib/ directories.\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13206293"
        },
        {
            "date": "2012-02-11T23:24:51+0000",
            "content": "This version of the patch fixes the previous version's incorrect spelling of the example-DIH/**/lib/ directories. ",
            "author": "Steve Rowe",
            "id": "comment-13206299"
        },
        {
            "date": "2012-02-12T05:46:36+0000",
            "content": "Thanks for taking this on Steve! ",
            "author": "Mark Miller",
            "id": "comment-13206354"
        },
        {
            "date": "2012-02-12T09:15:04+0000",
            "content": "I looked at DependencyChecker, we should rewrite it as an ANT task, really \u2013 it would be cleaner to use (with a dirset or a fileset). I'm thinking it could look like this:\n\n<check-license>\n <jars>\n  <fileset dir=\"base\" includes=\"**/lib/*.jar\" />\n </jars>\n</check-license>\n\n\nBase JAR names could be considered a match (or better, a mapper could be added to specify explicit mapping between the two). The upside of this is that we could have a single top-level check license task that would simply scan everything, once and wouldn't need to be updated as libs are added or removed.\n\nI can help with the implementation, this is a trivial task, but I'd appreciate if you could hook it in ANT scripts where appropriate, Steve. Let me know if this is a good idea.\n ",
            "author": "Dawid Weiss",
            "id": "comment-13206378"
        },
        {
            "date": "2012-02-12T11:22:38+0000",
            "content": "I wrote a task as a quick experiment, it looks like this:\n\n<license-check>\n  <fileset dir=\"../..\">\n    <include name=\"**/*.jar\" />\n    <!-- Speed up scanning a bit. -->\n    <exclude name=\"**/src/**\" />\n    <exclude name=\"**/build/**\" />\n  </fileset>\n\n  <licenseMapper>\n    <filtermapper>\n      <replacestring from=\"\\\" to=\"/\" />\n      <replaceregex pattern=\"\\.jar$\" replace=\"\" flags=\"gi\" />\n\n      <!-- Handle non-typical version patterns. -->\n      <replaceregex pattern=\"/cpptasks([^/]+)$\"            replace=\"/cpptasks\" flags=\"gi\" />\n      <replaceregex pattern=\"/commons-csv-([^/]+)$\"        replace=\"/commons-csv\" flags=\"gi\" />\n      <replaceregex pattern=\"/apache-solr-noggit-([^/]+)$\" replace=\"/apache-solr-noggit\" flags=\"gi\" />\n\n      <!-- Typical version trailers. -->\n      <replaceregex pattern=\"\\-(r)?([0-9\\-\\.])+(beta([0-9\\-\\.])*)?$\" replace=\"\" flags=\"gi\" />\n    </filtermapper>\n  </licenseMapper>\n</license-check>\n\n\n\nThe mapper tells where a LICENSE and NOTICE file should be expected for each JAR. This is different from the current design where LICENSE and NOTICE files are matched against each other, but it opens up a few interesting possibilities:\n\n\texact reporting where a LICENSE/NOTICE file is expected for a given JAR (with full expected filename),\n\tplacing all LICENSE/NOTICE files in a single location in the project (not alongside JARs),\n\tallowing a single LICENSE/NOTICE to cover multiple JARs (for example slf4j.LICENSE would cover all slf4j JAR files).\n\n\n\nLet me know what you think. ",
            "author": "Dawid Weiss",
            "id": "comment-13206396"
        },
        {
            "date": "2012-02-12T11:58:45+0000",
            "content": "An example output:\n\n[license-check] MISSING LICENSE for the following file:\n[license-check] C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-1.5.2.jar\n[license-check] Expected locations below:\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-ASL.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-BSD.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-BSD_LIKE.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-CDDL.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-CPL.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-MIT.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-MPL.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-PD.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-SUN.txt\n[license-check]   => C:\\Work\\lucene-solr\\modules\\analysis\\morfologik\\lib\\morfologik-polish-LICENSE-FAKE.txt\n...\n[license-check] Scanned 91 JAR file(s) for licenses, 15 error(s).\nException in thread \"main\" C:\\Work\\lucene-solr\\lucene\\tools\\build.xml:47: License check failed. Check the logs.\n\n ",
            "author": "Dawid Weiss",
            "id": "comment-13206397"
        },
        {
            "date": "2012-02-12T12:11:55+0000",
            "content": "\nThe upside of this is that we could have a single top-level check license task that would simply scan everything, once and wouldn't need to be updated as libs are added or removed.\n\nI think with steve's patch this is per-module? I woudl really prefer it done per-module and not as a 'top-level' task.\n\nIf its a top-level task, then test cannot depend on it. I don't want to scan licenses of all of lucene/solr just to run 'ant test -Dtestcase' within some confined space, or to just run lucene core tests. ",
            "author": "Robert Muir",
            "id": "comment-13206399"
        },
        {
            "date": "2012-02-12T13:23:01+0000",
            "content": "I have a different view on this. Things like this (license checking) are typically integration tests. Having them per-module only complicates build files and is an unnecessary overhead for running normal tests (because dependencies change rarely). Integration tests are usually long running and tedious and a build server is a nice facility to run them on (and this justifies why they could be placed on the top level). ",
            "author": "Dawid Weiss",
            "id": "comment-13206409"
        },
        {
            "date": "2012-02-12T13:24:40+0000",
            "content": "I'll finish the implementation and add to this issue as a patch. The task can be used per-module (even if I don't see the point of this), not necessarily at the top level (it's just a matter of the fileset/ mapper used). ",
            "author": "Dawid Weiss",
            "id": "comment-13206410"
        },
        {
            "date": "2012-02-12T13:38:41+0000",
            "content": "\nThe task can be used per-module (even if I don't see the point of this), not necessarily at the top level (it's just a matter of the fileset/ mapper used).\n\nThere are a few advantages: having compile/test/javadocs/licensecheck/... per-module in the common-build means that the entire definition for a module is pretty self-contained.\n\nIt means we can easily add/disable modules without editing many 'global' files.\nIn most cases a module won't have to specify anything, the default task looking at all jar files in /lib? would be fine.\n\nOn the other hand, a top-level task that looks for all jar files is going to be more complicated, \nfor example it will fail if it does not have logic to ignore start.jar/post.jar in the solr example (no idea what other exceptions may exist). ",
            "author": "Robert Muir",
            "id": "comment-13206414"
        },
        {
            "date": "2012-02-12T13:47:35+0000",
            "content": "Sure there are pros and cons. I just tend to disagree with you about which solution is better. Having a few top-level exclusion rules in the fileset (build folders, example folders) is not that bad to me. Having it automatically detect missing files in modules and other locations is a big plus that to me makes the decision easy. I just executed it from the top checkout and it already got some inconsistencies:\n\n[license-check] MISSING NOTICE for the license file:\n[license-check]   C:\\Work\\lucene-solr\\lucene\\contrib\\misc\\ant_lib\\cpptasks-LICENSE-ASL.txt\n[license-check]   Expected location below:\n[license-check]   C:\\Work\\lucene-solr\\lucene\\contrib\\misc\\ant_lib\\cpptasks-NOTICE.txt\n\n[there is only one shared notice for ant and ant-junit?]\n[license-check] MISSING NOTICE for the license file:\n[license-check]   C:\\Work\\lucene-solr\\lucene\\lib\\ant-junit-LICENSE-ASL.txt\n[license-check]   Expected location below:\n[license-check]   C:\\Work\\lucene-solr\\lucene\\lib\\ant-junit-NOTICE.txt\n\n\n\nIt means we can easily add/disable modules without editing many 'global' files.\n\nSince the detection is global this isn't an argument because any JAR you add will just be included in the global detection. We can restrict its pattern to follow */lib/* to simulate previous behavior but as the above output shows (ant_lib) it may be wiser to just respond to build failures resulting from inconsistencies as they arise?\n ",
            "author": "Dawid Weiss",
            "id": "comment-13206415"
        },
        {
            "date": "2012-02-12T14:43:16+0000",
            "content": "A patch with an ant task implementing *LICENSE/NOTICE checks, modified build files (no submodule checking, top-level ant validate does everything) and fixes to current LICENSE/NOTICE quirks and inconsistencies. ",
            "author": "Dawid Weiss",
            "id": "comment-13206424"
        },
        {
            "date": "2012-02-12T14:45:05+0000",
            "content": "I've attached a patch and pushed the branch to github (if you're lazy):\nhttps://github.com/dweiss/lucene_solr/tree/LUCENE3774\n\nThe big upside to me is this (top level):\n\n> ant validate\n...\nvalidate:\n[license-check] Scanned 82 JAR file(s) for licenses (in 0.12s.), 0 error(s).\n\nBUILD SUCCESSFUL\nTotal time: 2 seconds\n\n ",
            "author": "Dawid Weiss",
            "id": "comment-13206425"
        },
        {
            "date": "2012-02-12T14:47:30+0000",
            "content": "You can add verbose=\"true\" to check-licenses task or run with ant -verbose and it'll show you the details of where each license file is. \n\nThis patch is a seed for discussion; feel free to tear it apart and go back to per-module checks (but I really think that 0.12 sec. may be worth an occasional top-level update). I currently excluded SOLR examples/ (although some files in there do live with license/ notice information). ",
            "author": "Dawid Weiss",
            "id": "comment-13206427"
        },
        {
            "date": "2012-02-12T16:15:47+0000",
            "content": "Hi Dawid,\n\nI agree with you that a top-level validate task would be better, though we'll need to insure that it gets invoked regularly on Jenkins.\n\nI can't apply your patch because it's in Git format - I don't use Git - can you generate a Subversion-compatible patch?\n\nThanks,\nSteve ",
            "author": "Steve Rowe",
            "id": "comment-13206441"
        },
        {
            "date": "2012-02-12T16:35:09+0000",
            "content": "Dawid, I just skimmed your patch and I see that you've done lots of license file cleanups - cool!\n\nHeads up: I plan on committing SOLR-3123 today, and I need to add the Eclipse Public License to LicenseType.java, where your patch also makes changes. ",
            "author": "Steve Rowe",
            "id": "comment-13206445"
        },
        {
            "date": "2012-02-12T18:03:03+0000",
            "content": "\nHaving a few top-level exclusion rules in the fileset (build folders, example folders) is not that bad to me.\n\nKeep in mind also, that when I see things like \"..\" from lucene/, I know this cannot totally work,\nbecause lucene/ must be buildable/packagable by itself (its broken in trunk that this doesn't work today,\nmostly because hudson does not test this is the case: LUCENE-2974). ",
            "author": "Robert Muir",
            "id": "comment-13206461"
        },
        {
            "date": "2012-02-12T18:10:32+0000",
            "content": "Hi Steven. I will merge the changes, no problem. As for committing this in, let's wait until folks have some time to express if they prefer per-module or global checks. I left per-module validation hooks in place as far as I remember, so we could move it down from top-level if needed. It shouldn't even affect performance that much; I just think it's cleaner if done at top-level, that's all.\n\nAs for Jenkins: if builds are done per-subproject (Lucene, Solr) then indeed this validation wouldn't be executed. I imagine at least one plan should run full top-level build though so something would fire a build exception in case of validation errors?\n\nAs for git vs. svn patch \u2013 I've looked at this: http://stackoverflow.com/questions/3418277/how-to-apply-git-diff-patch\n\nI'll re-generate the patch. ",
            "author": "Dawid Weiss",
            "id": "comment-13206465"
        },
        {
            "date": "2012-02-12T18:14:46+0000",
            "content": "git patch with --no-prefix? ",
            "author": "Dawid Weiss",
            "id": "comment-13206467"
        },
        {
            "date": "2012-02-12T18:21:12+0000",
            "content": "because lucene/ must be buildable/packagable by itself\n\nDoes this apply to solr as well? I don't see how this can work with shared tools (like DependencyChecker previously). If it's so important to have separate build files and separate infrastructure for solr and lucene then I don't see the point of having the global build file, really.\n\nI see things like \"..\" from lucene/, I know this cannot totally work,\n\nWhere did you see it? If you mean target named \"test\" then this is only for debugging, I should have removed it. ",
            "author": "Dawid Weiss",
            "id": "comment-13206469"
        },
        {
            "date": "2012-02-12T18:31:56+0000",
            "content": "Ok, so now Solr reaches out to Lucene's folders, but it shouldn't be the other way around, right? I can update the patch to have a macro for dependency checking (on Lucene side) and apply it on the Solr side too. This will make validation execute in two places instead of one, but it'll keep Lucene self-contained. ",
            "author": "Dawid Weiss",
            "id": "comment-13206473"
        },
        {
            "date": "2012-02-12T18:37:27+0000",
            "content": "Dawid: Nice Task implementation, I like it, much easier than the static main()!\n\nCurrently we require ANT 1.7 (and hudson/myself always uses ANT 1.7), so: Do we need to upgrade? As far as I remember, ANT changed in 1.8 for the first time to use only ResourceSets, in previous versions your Task would only use the FileSet class. As it does not work with non-file resources at all, should we better use FileSet in the java code? - On the other hand, I am not sure about regexmapper support, 1.7 only supports globmapper?\n\nIf we decide to go to ANT 1.8, don't forget to update BUILD.txt! ",
            "author": "Uwe Schindler",
            "id": "comment-13206476"
        },
        {
            "date": "2012-02-12T19:07:14+0000",
            "content": "I'll re-generate the patch.\ngit patch with --no-prefix?\n\nThanks!  This patch worked for me (using patch -p0 < LUCENE-3774.patch).\n\nI've looked at this: http://stackoverflow.com/questions/3418277/how-to-apply-git-diff-patch\n\nI tried another suggestion from this web page, using your original patch: patch -p1 < LUCENE-3774.patch. This also worked, so there was no reason to re-generate after all - sorry about that.\n\nCurrently we require ANT 1.7 (and hudson/myself always uses ANT 1.7), so: Do we need to upgrade?\n\nI use Ant 1.7.1, and Dawid's patch worked for me, so I don't think we need to upgrade?\n\nAfter applying the patch, when I run ant validate at the top level, I get the following:\n\n\nvalidate:\n[license-check] MISSING NOTICE for the license file:\n[license-check]   C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\solr\\contrib\\langid\\lib\\jsonic-LICENSE-ASL.txt\n[license-check]   Expected location below:\n[license-check]   C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\solr\\contrib\\langid\\lib\\jsonic-NOTICE.txt\n[license-check] Scanned 82 JAR file(s) for licenses (in 4.71s.), 0 error(s).\n\n\n\nThis tooks significantly longer for me than for you, Dawid: 4.71s vs. 0.12s (maybe disk caching effects?  I have an SSD...).  Even so, it's fast enough not to cause trouble. ",
            "author": "Steve Rowe",
            "id": "comment-13206488"
        },
        {
            "date": "2012-02-12T19:14:38+0000",
            "content": "Uwe: I'm not sure if I used anything that requires Ant 1.8+ \u2013 will double check before committing once we finalize the patch, thanks for noticing.\n\nThis tooks significantly longer for me than for you, Dawid: 4.71s vs. 0.12s (maybe disk caching effects? I have an SSD...). Even so, it's fast enough not to cause trouble.\n\nI have a fairly fast SSD and indeed, this was most likely a result of warmed-up caches. 5 seconds seems longish to me though because there's really not that much to do. I'll add some diagnostics maybe so that we can see what takes so long (scanning vs. license checks later on?). ",
            "author": "Dawid Weiss",
            "id": "comment-13206490"
        },
        {
            "date": "2012-02-12T19:50:28+0000",
            "content": "Steve what computer are you working on? I just checked after rebooting (no caches). ant validate took 2 seconds (precompiled), but license scanning was pretty much like before:\n\n[license-check] Scanned 82 JAR file(s) for licenses (in 0.27s.), 0 error(s).\n\n\nThis is odd, shouldn't be an order of magnitude difference. ",
            "author": "Dawid Weiss",
            "id": "comment-13206496"
        },
        {
            "date": "2012-02-12T19:54:57+0000",
            "content": "I know whom to blame. I used ant 1.7.1 and the result is:\n\n[license-check] Scanned 82 JAR file(s) for licenses (in 4.44s.), 0 error(s).\n\n\nTry with the latest Ant (1.8.2). I'll try to see what's causing such a huge speed difference, but maybe we should just enforce Ant 1.8.+?  ",
            "author": "Dawid Weiss",
            "id": "comment-13206497"
        },
        {
            "date": "2012-02-12T20:08:03+0000",
            "content": "I know whom to blame. I used ant 1.7.1 and the result is: [...] 4.44s.\n\nCool, glad you tracked it down.\n\nTry with the latest Ant (1.8.2). I'll try to see what's causing such a huge speed difference, but maybe we should just enforce Ant 1.8.+? \n\nI recall there being problems with Ant 1.8 in some parts of the build - sorry, I don't remember the details.  I'm sure we could work through those issues, whatever they are, though, so +1 from me to require Ant 1.8.\n\nWith Ant 1.8.2, I get:\n\n\n[license-check] Scanned 82 JAR file(s) for licenses (in 0.21s.), 0 error(s).\n\n\n\nSo yeah, Ant 1.7.1 is the culprit. ",
            "author": "Steve Rowe",
            "id": "comment-13206504"
        },
        {
            "date": "2012-02-12T20:34:32+0000",
            "content": "ANT 1.8 improved performance of <fileSet/>, I think I read that in the bulletin.\n\nBut what we have seen: Dawid's code is compatible with ANT 1.7, so we dont need to change minimum requirements. If its slower or not should not force us to upgrade. So build works, all fine. -1 to require ANT 1.8. ",
            "author": "Uwe Schindler",
            "id": "comment-13206511"
        },
        {
            "date": "2012-02-12T20:40:30+0000",
            "content": "Yep, sure, this isn't crucial by any means. I will try to inspect what's causing such a dramatic slowdown though, it isn't normal. ",
            "author": "Dawid Weiss",
            "id": "comment-13206515"
        },
        {
            "date": "2012-02-12T21:50:01+0000",
            "content": "A cleaned up patch that does split license checking into solr/lucene/modules (3 parts). I also cleaned up modules/build.xml to use a macro and avoid repetition . \n\nCan you please double check that everything works with Ant 1.7? Weirdly enough, I now see no slowdown on execution... ",
            "author": "Dawid Weiss",
            "id": "comment-13206527"
        },
        {
            "date": "2012-02-12T21:51:43+0000",
            "content": "Oh, ok. I see the slowdown still, it's just not that big because it's split into three scans. ",
            "author": "Dawid Weiss",
            "id": "comment-13206528"
        },
        {
            "date": "2012-02-12T21:57:24+0000",
            "content": "Oh, ok. I see the slowdown still, it's just not that big because it's split into three scans.\n\nExactly, that's what I know, ANT somehow exponentially got slower on larger filesets. I think you can reproduce the same slowdown with other ant tasks, too, so its completely unrelated to your Task implementation. We simply have in the Lucene builds no other FileSets like that one (except maybe the main lucene clover task). ",
            "author": "Uwe Schindler",
            "id": "comment-13206529"
        },
        {
            "date": "2012-02-12T22:05:05+0000",
            "content": "That had to be something really ugly in ANT 1.7 \u2013 I'll have to check what kind of bug it was, but I bet it was glorious  ",
            "author": "Dawid Weiss",
            "id": "comment-13206530"
        },
        {
            "date": "2012-02-12T22:06:52+0000",
            "content": "Can you please double check that everything works with Ant 1.7? Weirdly enough, I now see no slowdown on execution...\n\nWorks for me (from the top level) under Ant 1.7.1.\n\nUnder solr, two problems are found:\n\n\nvalidate:\n     [echo] License check under: C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\solr\n [licenses] MISSING NOTICE for the license file:\n [licenses]   C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\solr\\contrib\\langid\\lib\\jsonic-LICENSE-ASL.txt\n [licenses]   Expected location below:\n [licenses]   C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\solr\\contrib\\langid\\lib\\jsonic-NOTICE.txt\n [licenses] MISSING LICENSE for the following file:\n [licenses]   C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\solr\\example\\exampledocs\\post.jar\n\n\n\nBut: When I run ant validate from lucene/ or modules/ or solr/, it fails (lucene/ error shown here):\n\n\nBUILD FAILED\nC:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\lucene\\build.xml:178: The following error occurred while executing this line:\nC:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\lucene\\tools\\custom-tasks.xml:22: Problem: failed to create task or type licenses\nCause: The name is undefined.\nAction: Check the spelling.\nAction: Check that any custom tasks/types have been declared.\nAction: Check that any <presetdef>/<macrodef> declarations have taken place.\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13206531"
        },
        {
            "date": "2012-02-12T22:12:50+0000",
            "content": "Timings for me under Ant 1.7.1:\n\n\nvalidate:\n     [echo] License check under: C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\lucene\n [licenses] Scanned 7 JAR file(s) for licenses (in 0.79s.), 0 error(s).\n\nvalidate:\n     [echo] License check under: C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\modules\n [licenses] Scanned 11 JAR file(s) for licenses (in 1.38s.), 0 error(s).\n\n[...]\n\nvalidate:\n     [echo] License check under: C:\\cygwin\\home\\s\\svn\\lucene\\dev\\trunk\\solr\n[...]\n [licenses] Scanned 73 JAR file(s) for licenses (in 1.37s.), 1 error(s).\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13206533"
        },
        {
            "date": "2012-02-12T22:20:43+0000",
            "content": "As for jsonic-NOTICE.txt, I have that file on disk, but it's zero length (didn't know what to put in there, to be honest). Maybe it didn't make it to the patch for this reason? As for post.jar \u2013 this should probably be excluded and generated in solr (it's most likely ignored because I, again, don't have it in my checkout). ",
            "author": "Dawid Weiss",
            "id": "comment-13206535"
        },
        {
            "date": "2012-02-12T22:24:23+0000",
            "content": "Ok, fixed jsonic-NOTICE.txt (added the project's URL there). I'll check what's with ANT 1.7 and non-topmost builds. ",
            "author": "Dawid Weiss",
            "id": "comment-13206536"
        },
        {
            "date": "2012-02-12T22:26:51+0000",
            "content": "Ehm. Weird, I used ANT 1.7.1 and everything works for me (including ant validate from subfolders). Can you do ant -verbose? ",
            "author": "Dawid Weiss",
            "id": "comment-13206539"
        },
        {
            "date": "2012-02-12T22:30:27+0000",
            "content": "Oh, I see what's wrong now. import is before compilation and it fails on putting the project structure together. I knew having it at the top-level would be simpler...\n\nOk, I'll see what I can do about it, but it'll have to wait until tomorrow. ",
            "author": "Dawid Weiss",
            "id": "comment-13206541"
        },
        {
            "date": "2012-02-12T22:33:08+0000",
            "content": "This patch fixes the issue with failing definition by delaying taskdef until the macro is invoked. Piggybacking NOTICE updates for jsonic and other minor things. ",
            "author": "Dawid Weiss",
            "id": "comment-13206542"
        },
        {
            "date": "2012-02-12T22:39:39+0000",
            "content": "This patch fixes the issue with failing definition by delaying taskdef until the macro is invoked. Piggybacking NOTICE updates for jsonic and other minor things.\n\nWorks for me from lucene/ and solr/ (no more license problems!), but not from modules/. ",
            "author": "Steve Rowe",
            "id": "comment-13206544"
        },
        {
            "date": "2012-02-12T22:40:16+0000",
            "content": "Excluded /dist/ from validation too. Seems to work for me just fine. I'm done for the day. ",
            "author": "Dawid Weiss",
            "id": "comment-13206545"
        },
        {
            "date": "2012-02-13T08:05:45+0000",
            "content": "I assumed modules doesn't need to be self-contained like Lucene or Solr. I can fix that by enforcing tools' compilation in that macro... I'll do that.\n\nThis reminds me of the \"infrastructure tools\" problem we had in Carrot2. We finally decided to simply have them as a stand-alone project living within the same repository space, with a stored, versioned binary artefact updated when tools had to be updated (rarely). This does version a binary file but you don't need to worry about recompiling things over and over. ",
            "author": "Dawid Weiss",
            "id": "comment-13206739"
        },
        {
            "date": "2012-02-13T08:55:37+0000",
            "content": "Reordered the order of calls (first submodules then macro) in modules/build.xml. \n\nCleaned up empty validation targets that only made ant output harder to read. ",
            "author": "Dawid Weiss",
            "id": "comment-13206759"
        },
        {
            "date": "2012-02-13T09:15:08+0000",
            "content": "Thanks Dawid, especially for the really simple \"example task\" (I see this as simple example Task). I would like to see all other calls to Java that launches external JVMs to be converted to ANT (e.g. the Analyzer tasks).\n\nWith you simple check-legal task, this is easy to do, as you can simply copypaste most parts. ",
            "author": "Uwe Schindler",
            "id": "comment-13206767"
        },
        {
            "date": "2012-02-13T09:40:51+0000",
            "content": "No problem, like I said \u2013 we have dealt with ANT quite a lot in the past, so this comes easily. Having a task is definitely a speedup over spawning a separate JVM. I also like some of the tools ANT makes available even if they may feel like a clumsy way of expressing simple things at times. ",
            "author": "Dawid Weiss",
            "id": "comment-13206770"
        },
        {
            "date": "2012-02-13T10:34:54+0000",
            "content": "Steve, will you double check again if everything works and commit this in? I didn't put an entry into CHANGES so you'd have to add it if it qualifies at all to be mentioned there. ",
            "author": "Dawid Weiss",
            "id": "comment-13206793"
        },
        {
            "date": "2012-02-13T13:45:12+0000",
            "content": "I assumed modules doesn't need to be self-contained like Lucene or Solr. I can fix that by enforcing tools' compilation in that macro... I'll do that.\nSteve, will you double check again if everything works\n\nYes, everything works for me now, thanks!\n\nand commit this in?\n\nIs there some reason why you can't do this?  IMO committers should commit their own work.\n\nI didn't put an entry into CHANGES so you'd have to add it if it qualifies at all to be mentioned there.\n\nIMO this definitely warrants a CHANGES.txt entry.\n\nThis should also be backported to branch_3x.\n\nThis reminds me of the \"infrastructure tools\" problem we had in Carrot2. We finally decided to simply have them as a stand-alone project living within the same repository space, with a stored, versioned binary artefact updated when tools had to be updated (rarely). This does version a binary file but you don't need to worry about recompiling things over and over.\n\n+1 to do this for this and any other Lucene/Solr Ant tasks. ",
            "author": "Steve Rowe",
            "id": "comment-13206875"
        },
        {
            "date": "2012-02-13T14:03:29+0000",
            "content": "Is there some reason why you can't do this? IMO committers should commit their own work.\n\nSure I can, but you started the issue and you're still the assignee, I just chimed in at some point \n\nI'll commit this in. Don't know if I'll find the time to backport tonight so feel free to do it if you have spare cycles. ",
            "author": "Dawid Weiss",
            "id": "comment-13206887"
        },
        {
            "date": "2012-02-13T14:11:18+0000",
            "content": " OK - please assign to yourself. ",
            "author": "Steve Rowe",
            "id": "comment-13206892"
        },
        {
            "date": "2012-02-13T16:19:37+0000",
            "content": "Hi Dawid,\n\nI noticed you put a CHANGES.txt entry under the 4.0 section, but since this will be backported, it should go under the 3.6 section.  Also, you put your entry under \"Optimizations\", but I think it would better go under \"Build\". ",
            "author": "Steve Rowe",
            "id": "comment-13206963"
        },
        {
            "date": "2012-02-13T16:38:58+0000",
            "content": "See, that's why I insisted you do the commit \n\nI'm used to a different CHANGES organization (changes always go to trunk, then put a divider once released) \u2013 I'll fix according to your suggestions, but I'll do it later in the evening. ",
            "author": "Dawid Weiss",
            "id": "comment-13206972"
        },
        {
            "date": "2012-02-13T23:20:47+0000",
            "content": "Manually merged and corrected backport. Didn't test extensively, but ant validate from the top level, lucene/ and solr/ passes.  ",
            "author": "Dawid Weiss",
            "id": "comment-13207328"
        },
        {
            "date": "2012-02-17T17:30:27+0000",
            "content": "Hi Dawid,\n\nI noticed that on branch_3x, there is no <macrodef> for license-check-macro - I guess you didn't finish the merge from trunk to branch_3x? ",
            "author": "Steve Rowe",
            "id": "comment-13210392"
        },
        {
            "date": "2012-02-17T17:34:24+0000",
            "content": "Mhmm... this would be weird, wouldn't it? I'll check. ",
            "author": "Dawid Weiss",
            "id": "comment-13210399"
        },
        {
            "date": "2012-02-17T17:34:25+0000",
            "content": "Mhmm... this would be weird, wouldn't it? I'll check. ",
            "author": "Dawid Weiss",
            "id": "comment-13210400"
        },
        {
            "date": "2012-02-17T17:38:30+0000",
            "content": "It's under lucene/tools/custom-tasks.xml? It needs to be in a separate file because it's used in modules (in trunk) where common-build.xml doesn't apply (isn't imported). ",
            "author": "Dawid Weiss",
            "id": "comment-13210402"
        },
        {
            "date": "2012-02-17T17:43:13+0000",
            "content": "Aha - sorry for the noise - I was restricting my search (in IntelliJ and using grep ... $(find ...) from the cmdline) to just *build.xml <facepalm> ",
            "author": "Steve Rowe",
            "id": "comment-13210406"
        },
        {
            "date": "2012-02-17T17:50:40+0000",
            "content": "It needs to be in a separate file because it's used in modules (in trunk) where common-build.xml doesn't apply (isn't imported).\n\nFYI, trunk/modules/**/build.xml do import common-build.xml, because they import contrib/contrib-build.xml, which in turn imports common-build.xml. ",
            "author": "Steve Rowe",
            "id": "comment-13210412"
        },
        {
            "date": "2012-02-17T17:54:34+0000",
            "content": "Crap, my last comment is wrong too: trunk/modules/build.xml does not import lucene/contrib/contrib-build.xml at all, and this is where the license check stuff goes for modules/, so of course your explanation is exactly correct.  <sigh> ",
            "author": "Steve Rowe",
            "id": "comment-13210415"
        },
        {
            "date": "2012-02-17T17:57:35+0000",
            "content": "No worries, I'm glad you're double checking after me. Makes me confident nothing slipped through. ",
            "author": "Dawid Weiss",
            "id": "comment-13210418"
        },
        {
            "date": "2012-03-31T14:09:04+0000",
            "content": "I have a different view on this. Things like this (license checking) are typically integration tests. Having them per-module only complicates build files and is an unnecessary overhead for running normal tests (because dependencies change rarely).\n\n+1\n\nHaving been bit by the changes in this issue dozens of times already, we shouldn't be doing these checks on a normal \"ant test\".  Seems like it should be fine to let Jenkins test it.\n\n\n\tSolrCloud demo instructions that have you make a copy of example it example2, etc.\n\tmv build build.old so I could compare two runs\n\ttry out a new jar locally w/o dotting all the i's\n\n\n\nI've seen users report these errors on the mailing list too, and it's not apparent to them what the issue is. ",
            "author": "Yonik Seeley",
            "id": "comment-13243153"
        },
        {
            "date": "2012-03-31T14:14:06+0000",
            "content": "I agree too I think, its worse now that checking licenses means we have to resolve first,\nto ensure the jars actually exist. this adds overhead, maybe jenkins is good enough?\nit runs many times a day and we don't actually change jars that often: most of the time\nwhen developing we are just changing code... ",
            "author": "Robert Muir",
            "id": "comment-13243160"
        },
        {
            "date": "2012-03-31T14:19:15+0000",
            "content": "I'm for pushing it to the top level. This will simplify handling of exceptional patterns and such too. Shouldn't be much of a problem to move it too. ",
            "author": "Dawid Weiss",
            "id": "comment-13243162"
        }
    ]
}