{
    "id": "SOLR-10521",
    "title": "sort by string field of the nested child when searching with {!parent}",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "New Feature",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The idea is to integrate Lucene's ToParentBlockJoinSortField \nThe approach to hookup it is a little bit tricky:\nsort={!childfield bjq=$q field=COLOR_s}desc sort=\\childfield(COLOR_s,$q) desc\nthe question no.1 wdyt about the syntax? \ninternally it creates a function query with valueSource which produces ToParentBlockJoinSortField \n\nThe main challenge is picking Solr field type from  ToParentBlockJoinSortField, because as-is it's broken on mergeIds - ByteRefs need to be properly marshaled and unmarshalled by a field type from the child scope.",
    "attachments": {
        "SOLR-10521-doc.patch": "https://issues.apache.org/jira/secure/attachment/12871289/SOLR-10521-doc.patch",
        "SOLR-10521-raw.patch": "https://issues.apache.org/jira/secure/attachment/12864010/SOLR-10521-raw.patch",
        "SOLR-10521.patch": "https://issues.apache.org/jira/secure/attachment/12864576/SOLR-10521.patch",
        "SOLR-10521-6x.patch": "https://issues.apache.org/jira/secure/attachment/12865522/SOLR-10521-6x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-19T13:08:06+0000",
            "content": "Attaching the first raw scratch with a smoke only coverage. The significant gap is a lack of caching for bitsets. I also want to make QueryComponent change nicer.  \nWDYT about it overall; regarding end user syntax; is there a way to fix marshalling in a better way (it's QueryComponent changes now)?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15974604"
        },
        {
            "date": "2017-04-20T21:55:26+0000",
            "content": "Made a cool test. Caching and equality aren't addressed yet. \nIs there are any thoughts about the syntax?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15977624"
        },
        {
            "date": "2017-04-21T21:23:19+0000",
            "content": "SOLR-10521.patch done with equality testing, has a cool cloud test.\n\nI want to experiment with value source syntax, WDYT about sort=childfield(name,$q) asc? ",
            "author": "Mikhail Khludnev",
            "id": "comment-15979401"
        },
        {
            "date": "2017-04-21T22:16:59+0000",
            "content": "SOLR-10521.patch here we go!\nthe valuesource syntax is sort=childfield(field,$bjq) asc or sort=childfield(field) asc assuming $q.\nThe sad thing is that, I cant' improve QueryComponent change (it's brilliant already).\nSo, far it can be only used for sorting. But can be extended to regular value source functionality in future. This might even work numerics, but I havent' checked it yet.\nReviews and suggestions are urgently required!    ",
            "author": "Mikhail Khludnev",
            "id": "comment-15979484"
        },
        {
            "date": "2017-04-25T17:20:47+0000",
            "content": "No feedback. It's ok. What about vetoes?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15983281"
        },
        {
            "date": "2017-04-26T20:23:07+0000",
            "content": "Here is the problem. QueryComponent needs to decide about a field type to marshal and unmarshal sort values.  \n\n\tit works as expected when sort=name asc. The correct field type is put to SortSpec.fields here. And then it's used to marshall ByteRef to String and back.\n\tit works surprisingly fine when sorting by function like sort=sum(age, 42) asc. In this case SortSpecParsing puts null into SortSpec.fields. And then this null disables any marshaling that allows passing doubles and ints through javabin serialization (I care about SolrCloud), but it makes impossible to have a sort field returning BytesRef, because they are grabled with javabin. For example sort=field(name) asc doesn't work.\nDo you have an idea how to introduce sort=childfield(name) asc, without giving a lobotomy to myself QueryComponent?  \n\n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-15985491"
        },
        {
            "date": "2017-04-26T22:01:26+0000",
            "content": "SOLR-10521.patch ByteRefs from Comparator are converted to byte[] and then unmarshalled back explicitly. Yet another one spaghetti. It seems like no-commit to me.   ",
            "author": "Mikhail Khludnev",
            "id": "comment-15985639"
        },
        {
            "date": "2017-04-27T07:06:34+0000",
            "content": "SOLR-10521.patch is a new hope. It wraps the true FieldComparator<ByteRefs> with a simple utf8ToString() converter. Let's take a one day timeout, and kick it off then.    ",
            "author": "Mikhail Khludnev",
            "id": "comment-15986126"
        },
        {
            "date": "2017-04-27T22:27:37+0000",
            "content": "I'm thinking about how I would use this.  And I do think it will probably come up.  Most likely, I will want to both sort on a child (or grandchild, etc) field, and I will want to actually know what was in that field. \n\nSo:\n\na) It's important to include that extra $q parameter - don't assume there is only one level of children.\nb) Would it perhaps make more sense, and be easier on the QueryComponent, if you could just include arbitrary child / grandchild field values in the parent result set (perhaps, appearing as a multi-valued field?)  If you did this, could you then simply sort on the resulting field?  Ie, instead of changing the syntax of sort, allow child fields to be added to the response, and then sort them using the normal mechanism.  I feel like it would be easier to modify the \"fl\" parameter because there's already a bracket syntax there (for example, for [docid]).  Or maybe this already exists and I'm not aware of it?  Something like fl=id,name,[!childfield=price_that_day object_type=sku_history price]  and then sort=price_that_day desc?  Actually, now that you mention it, I think we do have a ticket in the backlog that this feature would actually make feasible! ",
            "author": "Stephen Weiss",
            "id": "comment-15987823"
        },
        {
            "date": "2017-04-28T09:19:10+0000",
            "content": "Commit 816b806d8ac81940ccb9681c3b4f1d8727a395f7 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=816b806 ]\n\nSOLR-10521: adding sort=childfield(field,$q) asc for \n{!parent}\n query. ",
            "author": "ASF subversion and git services",
            "id": "comment-15988496"
        },
        {
            "date": "2017-04-28T11:03:18+0000",
            "content": "SOLR-10521-6x.patch with stats instead of metrics ",
            "author": "Mikhail Khludnev",
            "id": "comment-15988643"
        },
        {
            "date": "2017-04-28T11:20:04+0000",
            "content": "Commit 189e50d9bcba4bd39e31fe6007ac56c1a882a61b in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=189e50d ]\n\nSOLR-10521: adding sort=childfield(field,$q) asc for \n{!parent}\n query. ",
            "author": "ASF subversion and git services",
            "id": "comment-15988667"
        },
        {
            "date": "2017-05-10T21:10:22+0000",
            "content": "Stephen Weiss,\nThanks for feedback. \nWould it perhaps make more sense, and be easier on the QueryComponent\nI wouldn't touch it ever, too many stuff has been injected into it already. However, solid approach always seems promising. Perhaps, it can be done in the dedicated component, and might be considered as a step in SOLR-10144\nI feel like it would be easier to modify the \"fl\" parameter \nright, we already have [child], and [subquery] (I'm sorry about that). The problem is that sort, fl has completely different scope. Just one case, we might fl non-indexed child field, and sort by non-stored child field too.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16005427"
        },
        {
            "date": "2017-06-05T19:53:18+0000",
            "content": "Cassandra Targett, would you mind to look at SOLR-10521-doc.patch?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16037473"
        },
        {
            "date": "2017-06-05T21:00:10+0000",
            "content": "Mikhail Khludnev - Yes it looks good. +1, thanks. ",
            "author": "Cassandra Targett",
            "id": "comment-16037586"
        },
        {
            "date": "2017-06-05T21:27:38+0000",
            "content": "Commit 9b6b3e6260ed1ac53a80cc8d6d9e88635f0c5c16 in lucene-solr's branch refs/heads/branch_6_6 from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9b6b3e6 ]\n\nSOLR-10521: documenting sort=childfield(field) asc ",
            "author": "ASF subversion and git services",
            "id": "comment-16037624"
        },
        {
            "date": "2017-06-05T21:30:31+0000",
            "content": "Commit a4bd80054fbd2129f4bea77c3bdb1e7e82da9975 in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a4bd800 ]\n\nSOLR-10521: documenting sort=childfield(field) asc ",
            "author": "ASF subversion and git services",
            "id": "comment-16037630"
        },
        {
            "date": "2017-06-05T21:31:41+0000",
            "content": "Commit 7646f91097c54890348b2f9dda9cf4e554c3f77d in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7646f91 ]\n\nSOLR-10521: documenting sort=childfield(field) asc ",
            "author": "ASF subversion and git services",
            "id": "comment-16037633"
        },
        {
            "date": "2017-06-07T20:26:30+0000",
            "content": "Cassandra Targett, I've checked the generated guide. Formatting around childfield() has minor issues, I'm not sure how to address them. fyi.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16041549"
        },
        {
            "date": "2017-06-08T13:16:35+0000",
            "content": "Mikhail Khludnev, yes, I also noticed those as I was looking over the generated guide late yesterday afternoon. Lots of other examples in that page also had issues from the conversion. I have fixed them locally, but haven't pushed it yet, I will do that soon with a group of minor typos I've found on other pages also. ",
            "author": "Cassandra Targett",
            "id": "comment-16042679"
        }
    ]
}