{
    "id": "SOLR-12184",
    "title": "Master/Slave configuration exposes Basic Auth password in plain text.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "documentation",
            "replication (java)"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "7.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Copying\u00a0my original question and reply from Shawn Heisey.\nSeems even when we use Secuirty.json with BasicAuthentication Plugin as documented here \u2013 https://lucene.apache.org/solr/guide/7_2/basic-authentication-plugin.html\n, which nicely encrypts the user password using SHA256 encryption,\u00a0\u00a0when it comes to configuring\nPlease let me know how I can use the same encrypted password as in Security.json when setting up Master/Slave Replication for Solr.\n\u00a0\nAt the moment, the cleartext password is the only way it can be configured.\n\u00a0\nIt is not possible to use the same string that goes in security.json for\na feature like replication.\u00a0 That string is a one-way hash of the\npassword, so it cannot be decrypted.\u00a0 The replication handler must be\nable to obtain the cleartext password.\n\u00a0\nThe DIH feature offers password encryption for database passwords.\u00a0\nScroll down a little bit on the following page to the description\nnumbered \"2\":\n\u00a0\nhttps://lucene.apache.org/solr/guide/6_6/uploading-structured-data-store-data-with-the-data-import-handler.html#configuring-the-dih-configuration-file\n\u00a0\nThe replication handler CAN be enhanced to use a the same kind of\nencryption.\u00a0 Note that this is merely security through obscurity.\u00a0 If\nwhoever is looking at the configuration also has access to the key file,\nthen they will be able to decrypt the password.\n\u00a0\nCan you file an enhancement issue in Jira to add this capability to\nother handlers like replication?\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nHello,\nSeems even when we use Secuirty.json with BasicAuthentication Plugin as documented here \u2013 https://lucene.apache.org/solr/guide/7_2/basic-authentication-plugin.html\n, which nicely encrypts the user password using SHA256 encryption,\u00a0\u00a0when it comes to configuring the slave in a Master/Slave Index Replication Strategy, the slave config requires to give the\nBasicAuthentication password in plain text?\u00a0\u00a0Is it something I got wrong?\u00a0\u00a0But in my setup of HA with Master/Slave replication it works in this manner.\n\u00a0\nhttps://lucene.apache.org/solr/guide/7_2/index-replication.html\u00a0\u00a0this also indicates the config is in plain text.\n\u00a0\n\u00a0\u00a0\u00a0\u00a0<!-- If HTTP Basic authentication is enabled on the master, then the slave\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 can be configured with the following -->\n\u00a0\n\u00a0\u00a0\u00a0\u00a0<str name=\"httpBasicAuthUser\">username</str>\n\u00a0\u00a0\u00a0\u00a0<str name=\"httpBasicAuthPassword\">password</str>\n\u00a0\n\u00a0\nPlease let me know how I can use the same encrypted password as in Security.json when setting up Master/Slave Replication for Solr.\n\u00a0\nThx\n-Syed Ahmed.",
    "attachments": {
        "SOLR-12184.patch": "https://issues.apache.org/jira/secure/attachment/12938832/SOLR-12184.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-04T09:38:51+0000",
            "content": "I think the proper solution is to let PKI auth plugin handle this, see\u00a0SOLR-9640\u00a0for a started impl ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16425252"
        },
        {
            "date": "2018-06-06T23:32:19+0000",
            "content": "Actually, this does not\u00a0require a private Jira issue in my opinion, as the fact that these passwords are plaintext in the config files is documented and public knowledge, nothing to hide here.\n\nThis issue could perhaps lead to something like adding a warning box in the \u00a0documentation about the risk of exposing plain-text passwords in configs, or start working on a way to externalise the password into another file than solrconfig.xml or some other solution. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16504048"
        },
        {
            "date": "2018-09-07T14:36:14+0000",
            "content": "Syed B. Ahmed feel free to open an issue suggesting the ability for replicationHandler to read an encrypted password, like DIH does.\n\nA workaround could be to insert a variable in place of the actual password, and then inject that into solr.in.sh on each node:\n\n<str name=\"httpBasicAuthPassword\">${basicAuthPassword}</str>\n\nThe line\u00a0to set in solr.in.sh:\n\nexport SOLR_OPTS=\"$SOLR_OPTS -DbasicAuthPassword=secret\"\n\n\n\u00a0I think that when doing it this way, the password will not leak through the Admin UI, since all system properties containing the string \"password\" are redacted with **** before display. Please test and report back  ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16607189"
        },
        {
            "date": "2018-09-07T14:42:29+0000",
            "content": "Making this issue public as there is no security hole, it is common knowledge that config files is a bad place to put passwords.\n\nSample RefGuide documentation patch attached which spells this out and suggests using a property and variable substitution for this password instead, which is not perfect either since pw will leak from the terminal with e.g. ps -aux\u00a0but still slightly better. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16607198"
        }
    ]
}