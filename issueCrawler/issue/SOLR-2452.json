{
    "id": "SOLR-2452",
    "title": "rewrite solr build system",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.4",
            "4.0-ALPHA"
        ],
        "components": [
            "Build"
        ],
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "As discussed some in SOLR-2002 (but that issue is long and hard to follow), I think we should rewrite the solr build system.\n\nIts slow, cumbersome, and messy, and makes it hard for us to improve things.",
    "attachments": {
        "SOLR-2452-post-reshuffling.patch": "https://issues.apache.org/jira/secure/attachment/12483133/SOLR-2452-post-reshuffling.patch",
        "SOLR-2452.post.dir.reshuffle.branch_3x.patch": "https://issues.apache.org/jira/secure/attachment/12486342/SOLR-2452.post.dir.reshuffle.branch_3x.patch",
        "SOLR-2452.dir.reshuffle.sh": "https://issues.apache.org/jira/secure/attachment/12483132/SOLR-2452.dir.reshuffle.sh",
        "SOLR-2452.dir.reshuffle.branch_3x.sh": "https://issues.apache.org/jira/secure/attachment/12486341/SOLR-2452.dir.reshuffle.branch_3x.sh",
        "SOLR-2452.diffSource.py.patch.zip": "https://issues.apache.org/jira/secure/attachment/12485709/SOLR-2452.diffSource.py.patch.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Robert Muir",
            "id": "comment-13014444",
            "date": "2011-04-01T07:00:57+0000",
            "content": "I brought my previous patch up to date and committed it to \n\nhttps://svn.apache.org/repos/asf/lucene/dev/branches/solr2452\n\ni ripped all the existing stuff out of the solr build: we can always add stuff back but I wanted to start lean and mean. compile/test/clean/dependencies/etc should work, and are extended from lucene's build.\n\nappreciate anyone who wants to spend time trying to help. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13038159",
            "date": "2011-05-23T19:34:26+0000",
            "content": "Robert, I synch'd this up to trunk yesterday (and it's already out of date!), and made a few minor changes.\n\nOne of the changes I made was switching the solr/contrib/analysis-extras/ layout to the conventional Maven layout, to mirror all the other Solr contribs:\n\n\nsrc/\n+--- main/\n|    +--- java/   \n+--- test/\n     +--- java/\n     +--- resources/\n\n\n\nBut I see that the layout for the new modules/suggest/ module you just added (LUCENE-2995) is:\n\n\nsrc/\n+--- java/\n+--- test/\n\n\n\n(and if it had had any test resources, I assume they would be under src/test-files/).\n\nI think there should just be one layout for all Lucene & Solr modules (in the abstract sense of the word).\n\nI would be fine with switching all the Solr contribs to use the same layout as the new suggest module.\n\nThoughts? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13038196",
            "date": "2011-05-23T20:28:01+0000",
            "content": "\nI think there should just be one layout for all Lucene & Solr modules (in the abstract sense of the word).\n\nI would be fine with switching all the Solr contribs to use the same layout as the new suggest module.\n\n+1, and thanks for iterating on this issue more!\n\nI would like to see this stuff consistent, the particulars of whatever that layout is, do not matter to me.\nMy only thoughts are that I think this should be fixed in trunk, and also backported to branch 3.x to make merging easier... "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13038212",
            "date": "2011-05-23T20:44:34+0000",
            "content": "Okay, I'll standardize on the following layout, since it's used by the vast majority of Lucene/Solr modules, and so will wreak the least havoc:\n\n\nsrc/\n+--- java/\n+--- resources/       (optional)\n+--- test/\n+--- test-files/      (optional)\n+--- tools/           (optional)\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13042428",
            "date": "2011-06-01T20:58:08+0000",
            "content": "Robert, I'm merging trunk to the SOLR-2452 branch, and I noticed that SOLR-2279 introduced a solr.directoryFactory <sysproperty> element in the <junit> task invocation for all the Solr contribs.  \n\nI'm trying to figure out how to support this in the consolidated build without duplicating code.  My current thinking is to introduce an optional <element> in the \"test-macro\" definition to supply the <sysproperty> to the <junit> task, and then make new <junit-sequential-solr> and <junit-parallel-solr> targets, including the solr.directoryFactory <sysprop> element in each <test-macro> invocation.  Then a new common-solr.test target would depend on the junit-*-solr targets.\n\nThoughts? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13042434",
            "date": "2011-06-01T21:05:50+0000",
            "content": "Steven, I think there we should just set the property in lucene/common-build.xml, in the reusable 'test' target. I've already done this with a couple others if you look \n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13042435",
            "date": "2011-06-01T21:06:39+0000",
            "content": "Oh, and, by the way thanks for picking up on that branch... hopefully I can come in and help soon, but its really a relief you are working on it. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13042492",
            "date": "2011-06-01T22:42:52+0000",
            "content": "Steven, I think there we should just set the property in lucene/common-build.xml, in the reusable 'test' target. I've already done this with a couple others if you look \n\nThanks, I added it to the junit task invocation in the test-macro definition. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043715",
            "date": "2011-06-03T16:46:42+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13049430",
            "date": "2011-06-14T21:19:10+0000",
            "content": "Forgot to include the issue number in the comment, so it's not showing up here, but I just committed a merge with trunk up to r1135758.  Here's the ViewVC link: http://svn.apache.org/viewvc?view=revision&revision=1135759 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13051895",
            "date": "2011-06-20T10:08:08+0000",
            "content": "This Bash script and patch together eliminate solr/src/ and move everything under it up one level, except for solr/src/java/, solr/src/test/ and solr/src/test-files/, which are moved under a new directory solr/core/:\n\n\nsolr/\n+---core/\n+---dev-tools/\n+---scripts/\n+---site-src/\n+---solrj/\n+---test-framework/\n+---webapp/\n    +---web/\n...\n\n\n\nAdditionally:\n\n\tI merged solr/src/common/ into the solrj/ directory, and moved all o.a.s.client.solrj and o.a.s.common tests from the core tests to solrj/src/test/; and\n\tI merged src/webapp/src/ into the core/src/java/ directory.\n\n\n\nThe philosophy at work here is to keep all sources used to build an artifact under a single directory.\n\nCompilation and testing works, though the core<->solrj dependencies are unusual: non-test core depends on non-test solrj, but solrj tests depend on core tests.  (The IntelliJ and Maven builds need fudging to make this work, since their dependency mechanisms are not fine-grained enough to directly support this setup - these changes are also included in the patch.)\n\nI haven't committed this to the branch because it's fairly radical, and I'd like to make sure nobody objects, but also because tracking trunk changes will become much harder after this change is committed to the branch.\n\nRobert, would you please review? "
        },
        {
            "author": "Chris Male",
            "id": "comment-13051907",
            "date": "2011-06-20T10:21:19+0000",
            "content": "I haven't reviewed the changes but just a comment on the philosophy:\n\n\nI merged solr/src/common/ into the solrj/ directory\n\nI don't hugely like this decision.  Core Solr code (like SolrDocument for example) should be in Solr core, not in SolrJ which is just a client library.  Like Lucene, Solr core should contain all the code it needs.  Any other modules (which SolrJ can be considered as one) should then depend on the core.  \n\nWhats the reason for making the choice to put the common code in SolrJ? \n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13051912",
            "date": "2011-06-20T10:43:06+0000",
            "content": "Whats the reason for making the choice to put the common code in SolrJ? \n\nThe current packaging arrangement has the the common/ code in the solrj jar; similarly, the solr-core jar contains the webapp/src/ code.\n\nThe only thing I've done here is eliminated separate source directories.  I haven't changed the packaging. "
        },
        {
            "author": "Chris Male",
            "id": "comment-13051916",
            "date": "2011-06-20T10:46:51+0000",
            "content": "I see.  Can we address the packaging or is that out of scope of this work? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13051919",
            "date": "2011-06-20T10:48:28+0000",
            "content": "SolrJ [...] is just a client library\n\nThat's not all it is; on 8/18/2010 on #lucene IRC, yonik wrote:\n\nsolrj used to not be included in the war, but solr core uses solrj for distributed search "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13051920",
            "date": "2011-06-20T10:50:30+0000",
            "content": "Can we address the packaging or is that out of scope of this work?\n\nWhat did you have in mind?\n "
        },
        {
            "author": "Chris Male",
            "id": "comment-13051923",
            "date": "2011-06-20T10:56:42+0000",
            "content": "Hmmm I hadn't considered the issue of SolrJ being used for distributed search.  "
        },
        {
            "author": "Chris Male",
            "id": "comment-13051928",
            "date": "2011-06-20T11:02:22+0000",
            "content": "I think my comments can be addressed later on maybe and shouldn't stop these improvements from going forward so +1 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13051939",
            "date": "2011-06-20T11:47:02+0000",
            "content": "\nbut solrj tests depend on core tests\n\nCurious why this is? some base classes that could be moved into test-framework instead? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13051943",
            "date": "2011-06-20T12:14:23+0000",
            "content": "\nbut solrj tests depend on core tests\n\nCurious why this is? some base classes that could be moved into test-framework instead?\n\nAt a minimum, o.a.s.client.solrj.SolrJettyTestBase (likely should be moved to another package, given that Solr core o.a.s.servlet.*CacheHeaderTest* tests extend this class) and o.a.s.util.ExternalPaths. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13051953",
            "date": "2011-06-20T12:37:22+0000",
            "content": "ok, i was just curious, sounds like something that could possibly be dealt with later.\n\nI think i said it before too, I find it confusing the way these directories all depend upon each other today and how each one is not its own 'subproject' of the build (that basically acts like a contrib or module itself and states its dependencies). So I would really like to see this fixed.\n\nHowever, I think I would recommend thinking about when you want to make the change: it will make merging code up to this branch nearly impossible... is it holding back other changes or is this a final step? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13051957",
            "date": "2011-06-20T12:40:31+0000",
            "content": "by the way, obviously since you have been doing all the work here, i don't want you to read this as me questioning/objecting to the change, just trying to maybe help save you some sanity... if you don't mind dealing with the merging I would just say go for it. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13052250",
            "date": "2011-06-20T22:29:30+0000",
            "content": "However, I think I would recommend thinking about when you want to make the change: it will make merging code up to this branch nearly impossible... is it holding back other changes or is this a final step?\n\nIt's not a final step.  All of the targets you removed need to be put back (I counted 40 or so).  But I think this will be a minor amount of work comparitively.\n\nI think for the moment I'll keep iterating on the patch, rather than committing it to the branch, to minimize merge costs, until I have all of the Solr targets re-implemented.  I don't think it'll take too long, maybe another day or two.\n\nOnce that's done, I'll commit the moves/copies from the shell script and the patch, then generate a full patch for review.  Assuming there are no objections then, I plan to commit within a day or so to minimize merge costs.\n\nSo I hope to have this issue resolved this week. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13052252",
            "date": "2011-06-20T22:32:55+0000",
            "content": "So I hope to have this issue resolved this week.\n\nReally? thats awesome!\n\nWorst case, some of those top-level targets could be literally 'put back' probably with minimal modifications.\nMy idea of temporary nuking was to try to start over, extending lucene's build system, as otherwise i got lost in all the xml. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13052684",
            "date": "2011-06-21T17:28:02+0000",
            "content": "This version of the shell script & patch removes Solrj's dependence on Solr core tests, by moving SolrJettyTestBase and ExternalPaths from Solr core to Solr's test-framework \u2013 it turns out that these were the only two Solr core test classes that Solrj depended on. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061167",
            "date": "2011-07-07T09:26:54+0000",
            "content": "This patch restores all of Solr's build targets from trunk; the build system rewrite is feature-complete at this point.  (The reshuffling scripts requires no further changes.)\n\nI moved lucene-lib/ directories to under build/, and eliminated per-contrib clean target actions - instead, ant clean just deletes solr/build/, solr/dist/, solr/package/, and solr/example/solr/lib/.\n\nBefore I commit this patch to the branch, I want to put the build through its paces and examine differences between the outputs from trunk and from branches/solr2452 with this patch applied.\n\nOne difference I found so far: on trunk the Solr create-package target includes duplicate javadocs for some non-contrib modules (core & solrj I think): in the uber-javadocs, and again for the javadocs produced for maven.  The per-contrib javadocs, by contrast, are excluded.  This makes the compressed binary package about 1.8MB larger than it needs to be, IIRC. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061826",
            "date": "2011-07-08T07:47:57+0000",
            "content": "The solr2452 branch is now up-to-date with trunk, and I've committed to the branch the work that I was keeping as a script/patch pair.\n\nI think this is ready to commit to trunk.\n\nFor review purposes, I'm attaching the zipped output from python -u diffSource.py trunk branches/solr2452, but the patch is huge, so I don't know how useful it will be.  (I had to compress it because it exceeds JIRA's 10MB threshold.)\n\nI plan on merging the solr2452 branch back to trunk in about 24 hours, and then work on backporting the changes to branch_3x. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13061999",
            "date": "2011-07-08T14:55:21+0000",
            "content": "playing around with the branch, the whole situation looks so much better to me.\n\nin my opinion we can then go and make other little improvements, make things faster, add new targets, in separate issues... so I think you should just commit before the patch goes out of date.\n\nmaybe we even encounter some serious grief, but I think we should just work thru this in svn.\n\ngreat work! "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13062184",
            "date": "2011-07-08T21:10:23+0000",
            "content": "Merged with trunk, committed in r1144510. (Forgot to include issue number in log comment.) "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13062652",
            "date": "2011-07-09T23:04:18+0000",
            "content": "Committed to trunk in r1144761.\n\nNext up: backport to branch_3x. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13062776",
            "date": "2011-07-10T17:51:31+0000",
            "content": "What's the right thing to do here in terms of a patch against the old file structure? Is it reasonable to check out fresh code, hack the patch file to reflect the new paths and apply it to the new structure or must I re-edit the source?\n\nAnd is SVN merge smart enough to deal when merging from trunk to 3x when 3x hasn't been changed, or is it better to just wait on it all until the back-port is done?\n\nThe patch I'm trying to apply is 2535, it's pretty small so manually reproducing it isn't a problem.\n\nI get a little nervous in situations like this <G>.... "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13062811",
            "date": "2011-07-10T21:30:56+0000",
            "content": "What's the right thing to do here in terms of a patch against the old file structure? Is it reasonable to check out fresh code, hack the patch file to reflect the new paths and apply it to the new structure or must I re-edit the source?\n\nI'm working on a script to automatically hack patch files against the old file structure.  When it's ready, I'll attach it to this issue.\n\nAnd is SVN merge smart enough to deal when merging from trunk to 3x when 3x hasn't been changed, or is it better to just wait on it all until the back-port is done?\n\nAFAIK, SVN merge is not smart enough.  I should be able to finish the backport in a day or two, though, so waiting shouldn't be too bad.\n\nYou don't need to wait for these things, and for small patches it may be feasible to manually manage the patch hacking and the 3.x merging.  But for larger patches, the effort should be much smaller when the patch hacking script is available and the 3.x backport is finished. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13063394",
            "date": "2011-07-11T15:26:33+0000",
            "content": "What's the right thing to do here in terms of a patch against the old file structure? Is it reasonable to check out fresh code, hack the patch file to reflect the new paths and apply it to the new structure or must I re-edit the source?\n\nThat's what I did.\n\nAnd is SVN merge smart enough to deal when merging from trunk to 3x when 3x hasn't been changed, or is it better to just wait on it all until the back-port is done?\n\nApply the changes in 3x however you can (i.e. patch, etc) and then use \"svn merge --record-only\".  http://wiki.apache.org/lucene-java/SvnMerge "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13063409",
            "date": "2011-07-11T15:57:49+0000",
            "content": "This script, given a patch created with 'svn diff' against trunk pre-SOLR-2452, will write a new patch on the standard output stream with paths fixed up to reflect the post-SOLR2452 structure.\n\nUsage: perl SOLR-2452.patch.hack.pl < old.patch > new.patch\n\nI've tested it on a couple of patches I had lying around, and it seems to work.\n\nYonik, could you test it on the original patch you said you manually hacked? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13063418",
            "date": "2011-07-11T16:09:24+0000",
            "content": "The script produced output like this:\n\n\nIndex: solr/core/src/java/org/apache/solr/core/SolrCore.java\n===================================================================\n--- solr/src/java/org/apache/solr/core/SolrCore.java    (revision 888880231429dc9c7680375a0a21b1886e59b194)\n+++ solr/src/java/org/apache/solr/core/SolrCore.java    (revision )\n\n\n\nNotice that \"core\" wasn't substituted on the lines starting with \u2014 and +++\n\nTrying to use the resulting patch file, I got:\n\n/opt/code/lusolr$ patch -p0 < tt.patch\ncan't find file to patch at input line 5\nPerhaps you used the wrong -p or --strip option?\nThe text leading up to this was:\n--------------------------\n|Index: solr/core/src/java/org/apache/solr/core/SolrCore.java\n|===================================================================\n|--- solr/src/java/org/apache/solr/core/SolrCore.java\t(revision 888880231429dc9c7680375a0a21b1886e59b194)\n|+++ solr/src/java/org/apache/solr/core/SolrCore.java\t(revision )\n--------------------------\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13063419",
            "date": "2011-07-11T16:11:35+0000",
            "content": "Thanks Yonik - I'll fix it "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13063423",
            "date": "2011-07-11T16:20:37+0000",
            "content": "This version of the patch hacking script is fixed so that all paths are modified instead of just the ones on 'Index:' lines "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13063488",
            "date": "2011-07-11T19:38:08+0000",
            "content": "If there are no objections, I plan on committing the patch hacking script to dev-tools/scripts/ later today. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13063821",
            "date": "2011-07-12T11:16:25+0000",
            "content": "I removed the patch hack script attachments, since the version in svn is now better, and I don't want to keep posting fixes here. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13064748",
            "date": "2011-07-13T18:19:43+0000",
            "content": "For the record, the svn movement script and post-movement patch against branch_3x.\n\nCommitting shortly. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13064752",
            "date": "2011-07-13T18:25:10+0000",
            "content": "Committed to branch_3x in r1146191. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13065295",
            "date": "2011-07-14T14:39:25+0000",
            "content": "On trunk in solr, \"ant example\" after touching a single source file was 31 seconds before this patch and is now 51.  Anyone have any ideas where we lost?  (the original description did cite speed as one reason for a rewrite  "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13065428",
            "date": "2011-07-14T18:08:28+0000",
            "content": "On trunk in solr, \"ant example\" after touching a single source file was 31 seconds before this patch and is now 51. Anyone have any ideas where we lost? (the original description did cite speed as one reason for a rewrite \n\nI've opened an issue to speed up the build: SOLR-2652 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13066621",
            "date": "2011-07-17T11:53:03+0000",
            "content": "Resolving this issue as trunk and branch_3x seem to have stabilized; when problems related to the Solr build restructuring arise, I plan on opening new issues. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106223",
            "date": "2011-09-16T14:48:53+0000",
            "content": "bulk close for 3.4 "
        }
    ]
}