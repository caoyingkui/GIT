{
    "id": "LUCENE-7230",
    "title": "IntPoint, LongPoint etc. need a ctor with FieldType",
    "details": {
        "resolution": "Won't Fix",
        "affect_versions": "6.0",
        "components": [
            "core/index"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "Previously IntField, LongField etc. had constructors that also take a FieldType. Such a constructor would also be required for IntPoint, LongPoint etc. so that a 'stored' Point can easily be created.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15247422",
            "author": "Michael McCandless",
            "date": "2016-04-19T09:24:30+0000",
            "content": "I think this could be a little too dangerous to expose, e.g. if someone tries to then make a FloatPoint with doc values enabled, bad things happen since FloatPoint encodes a float as a binary value, while doc values expects a long value.  Likewise, simply turning on stored would store a binary value today.\n\nI think instead you should separately add a StoredField to your document?  The 6.0.0 javadocs failed to point this out, but we've fixed that for 6.1. "
        },
        {
            "id": "comment-15247786",
            "author": "Philip Helger",
            "date": "2016-04-19T13:58:00+0000",
            "content": "Okay, thanks for the hint. I was not quite sure if StoredField is the way to go. Btw. shall I used StoredField also for existing StringField objects with Store.YES? "
        }
    ]
}