{
    "id": "SOLR-4702",
    "title": "Velocity templates not rendering spellcheck suggestions correctly",
    "details": {
        "affect_versions": "4.2",
        "status": "Resolved",
        "fix_versions": [
            "4.3",
            "4.10",
            "6.0"
        ],
        "components": [
            "contrib - Velocity"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The spellcheck links, AKA \"Did you mean\", aren't rendered correctly.\n\nInstead of just having the corrected words, they have some .toString gibberish because the object being serialized is too high up in the tree.\n\nThis breaks both the link text displayed to the user, and the href used for the anchor tag.\n\nExample:\nSearch for \"electronicss OR monitor\" and you get:\nDid you mean {collationQuery=electronics OR monitor,hits=14,misspellingsAndCorrections={electronicss=electronics,monitor=monitor}}?\n\nBut you should just see:\nDid you mean electronics OR monitor?   (with hyperlinked \"electronics OR monitor\")\n\nThe actual query submitted by those links is similarly broken.  Possibly the templates were developed before collation was added and/or enabled by default.\n\nTo see this bug at all with the example configs and docs you'll need to have applied SOLR-4680 or SOLR-4681 against 4.2 or trunk.",
    "attachments": {
        "SOLR-4702.patch": "https://issues.apache.org/jira/secure/attachment/12578292/SOLR-4702.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Bennett",
            "id": "comment-13629449",
            "date": "2013-04-11T22:00:08+0000",
            "content": "Fixes \"Did you mean\" spellcheck logic to use proper collation elements.\n\nAlso breaks out that logic into a new template did_you_mean.vm, and reformats the code to make it a bit easier to read. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13630429",
            "date": "2013-04-12T18:16:19+0000",
            "content": "Mark - here's an updated patch that simplifies a bit of the Velocity stuff, hopefully without breaking anything. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13630433",
            "date": "2013-04-12T18:17:57+0000",
            "content": "Ideally we'd have tests that check that the example app works where we could codify expectations from the example app to make sure things like this don't break as components/internals change.  Thoughts on ways to go about that?  Selenium tests?  Or somehow do this with JUnit?   Do we still have tests that drive from the example configuration? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13630466",
            "date": "2013-04-12T18:44:09+0000",
            "content": "Here's an update that fixes the reference to the no longer used textSpell field type and uses text_general on the text field instead.  If the queryAnalyzerFieldType specified field type doesn't exist, it uses the WhitespaceAnalyzer so it still worked without an error. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13630494",
            "date": "2013-04-12T19:02:14+0000",
            "content": "Committed this to both 4x (r1467413) and trunk (r1467416).\n\nMark - let me know if there's anything else needed here. "
        },
        {
            "author": "Mark Bennett",
            "id": "comment-13632118",
            "date": "2013-04-15T20:14:04+0000",
            "content": "Hi Erik,\n\nThanks.\n\nTwo options we might consider:\n1: I didn't see a for loop, and in some cases there could be multiple collations?\n2: When debugging, seeing the raw suggestions, prior to collation filtering, can be nice.  Though I'm not sure if that's a good fit for these templates or not.  If we come back and add more options, maybe a \"showRawSpellingSuggestions=true|FALSE\" might be nice. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14087073",
            "date": "2014-08-06T01:17:08+0000",
            "content": "Commit 1616073 from Erik Hatcher in branch 'dev/trunk'\n[ https://svn.apache.org/r1616073 ]\n\nSOLR-4702: Added support for multiple spellcheck collations to /browse UI. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14087075",
            "date": "2014-08-06T01:19:18+0000",
            "content": "Commit 1616074 from Erik Hatcher in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1616074 ]\n\nSOLR-4702: Added support for multiple spellcheck collations to /browse UI. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-14087085",
            "date": "2014-08-06T01:27:49+0000",
            "content": "Mark Bennett - apologies for the delay on this.  The fix was committed earlier (for Solr 4.3), and I left this open to (eventually, heh) address your feedback after the commit.  I just committed an enhancement that shows all possible collation queries, along with their hit count; note that the counts are within the currently selected filters not globally.  Regarding the debugging, I recommend simply adding &wt=xml (or clicking the link in the footer) to get at the raw response suitable for developer-level debugging.  I also often simply put into the template $response... and $object.class kind of expressions directly into the template and refresh my browser to see gory details that help craft the templates.  We certainly could add more insight into the UI as you suggest, though under a new Jira. "
        }
    ]
}