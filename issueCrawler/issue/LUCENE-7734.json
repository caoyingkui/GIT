{
    "id": "LUCENE-7734",
    "title": "FieldType copy constructor should accept IndexableFieldType",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "7.0"
        ]
    },
    "description": "FieldType is a concrete implementation of IndexableFieldType.  It has a copy-constructor but it demands a FieldType.  It should accept  IndexableFieldType.",
    "attachments": {
        "LUCENE_7734.patch": "https://issues.apache.org/jira/secure/attachment/12856863/LUCENE_7734.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15902421",
            "date": "2017-03-09T03:32:08+0000",
            "content": "I'm unsure whether it is an issue or not, but it seems to imply that we could not add new properties to FieldType without adding them to IndexableFieldType as well? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15902424",
            "date": "2017-03-09T03:36:02+0000",
            "content": "I thought FieldType was supposed to track IndexableFieldType, to be it's default impl.  Nevertheless, if one day we want additional state that should be copied, we could add an overloaded version. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15902428",
            "date": "2017-03-09T03:41:20+0000",
            "content": "Yeah I think seeing FieldType as the default impl of IndexableFieldType makes sense, +1 to the patch. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15902496",
            "date": "2017-03-09T05:01:37+0000",
            "content": "I realized this changes the signature of a public class... (I needed to do an 'ant clean\" first).  On 6x I could add an additional one-liner constructor for the existing FieldType typed argument? ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15904063",
            "date": "2017-03-09T23:32:22+0000",
            "content": "True, but this change is API compatible, so if something compiles today, it will still compile with your patch. I think the only thing it breaks is ABI compatibility so it would not be possible eg. to replace the Lucene JAR without recompiling. But this is not something we guarantee anyway, I don't think we should add an additional constructor on 6.x. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15904404",
            "date": "2017-03-10T04:12:55+0000",
            "content": "Commit d2bf30d58fbfc9279bed663500400153b4d4df44 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d2bf30d ]\n\nLUCENE-7734: FieldType copy constructor widened to IndexableFieldType ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15904415",
            "date": "2017-03-10T04:25:02+0000",
            "content": "So I'm in the middle of a cherry pick from master to branch_6x when I see that, surprise surprise, IndexableFieldType in 6x does not define numericType() or numericPrecisionStep() (both deprecated things associated with legacy numerics).  I could add an instanceof FieldType and cast to this copy constructor on 6x.  Or, just let this be a 7x thing.  I could go either way but I'm inclined to just let it be 7x.  If I don't hear any opinion further then I'll simply move the changes.txt entry to 7.0 and not touch 6x. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15906020",
            "date": "2017-03-11T02:35:59+0000",
            "content": "Commit 6415d912ca370c47ac9bd138d719b0ade71893a1 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6415d91 ]\n\nLUCENE-7734: move to 7x section; won't do 6x backport ",
            "author": "ASF subversion and git services"
        }
    ]
}