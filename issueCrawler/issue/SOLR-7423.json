{
    "id": "SOLR-7423",
    "title": "Non thread safe use of WeakHashMap can hang in get method.",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Duplicate",
        "priority": "Major"
    },
    "description": "You can see this with some googling and I just saw it happen in TestSolrConfigHandler. A thread was stuck in HttpCacheHeaderUtil in the get for the WeakHashMap.\n\nApache commons-beanutils has a WeakFastHashMap that is supposed to be thread safe and read efficient I think.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-19T18:45:34+0000",
            "author": "Dawid Weiss",
            "content": "Guava's MapMaker can provide one for you as well (I think). ",
            "id": "comment-14502052"
        },
        {
            "date": "2015-04-19T20:06:07+0000",
            "author": "Uwe Schindler",
            "content": "If you just need one that uses Identity (not equals), you can use WeakIdentityMap from Lucene. This one can be backed by a ConcurrentHashMap for thread safety. MMapDirectory uses it. ",
            "id": "comment-14502105"
        },
        {
            "date": "2015-10-24T15:49:33+0000",
            "author": "Mark Miller",
            "content": "This was changed in SOLR-8189\n\n-  private static Map<SolrCore, EtagCacheVal> etagCoreCache\n-    = new WeakHashMap<>();\n+  private static Map<SolrCore, EtagCacheVal> etagCoreCache = Collections.synchronizedMap(new WeakHashMap<>());\n\n ",
            "id": "comment-14972663"
        }
    ]
}