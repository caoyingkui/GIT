{
    "id": "SOLR-5298",
    "title": "user versioning",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Solr currently handles the assignment of version numbers, but it would be useful to allow the user to specify their own version numbers.  For consistency, it would then be the users responsibility to specify versions on all updates (i.e. it would be undefined behavior if sometimes the user specified their own versions and sometimes did not).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13784639",
            "date": "2013-10-02T23:45:27+0000",
            "content": "As far as behavior, the idea would be that it works the same way as when updates are forwarded to replicas... if an older version for a document is received after a newer version, then it is silently dropped to preserve the semantics of \"last one wins\".\n\nFrom an API perspective, If an update specifies _version_, it's taken to be a constraint (optimistic concurrency).  We need either a boolean flag specifying that the supplied version is actually the one to use (userVersion=true ?) or use a different parameter alltogether (_userVersion_ ?) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13784725",
            "date": "2013-10-03T01:22:11+0000",
            "content": "We need either a boolean flag specifying that the supplied version is actually the one to use (userVersion=true ?) or use a different parameter alltogether (_userVersion_ ?)\n\n_new_version_ ? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13786298",
            "date": "2013-10-04T16:29:32+0000",
            "content": "_new_version_ ?\n\nYeah, I like it!  Since a user adding _version_ means they are specifying the existing version,  _new_version_ obviously means they are specifying the new version. "
        }
    ]
}