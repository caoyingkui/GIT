{
    "id": "SOLR-12513",
    "title": "Reproducing TestCodecSupport.testMixedCompressionMode failure",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "From https://jenkins.thetaphi.de/job/Lucene-Solr-master-Windows/7375/ (reproduces for me on Linux):\n\n\nChecking out Revision 3b9d3a760a432b97aad2c08b2f778fa2344eb14a (refs/remotes/origin/master)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCodecSupport -Dtests.method=testMixedCompressionMode -Dtests.seed=F584376A20EC9B2D -Dtests.slow=true -Dtests.locale=ha-GH -Dtests.timezone=Africa/Nairobi -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.59s J1 | TestCodecSupport.testMixedCompressionMode <<<\n   [junit4]    > Throwable #1: org.junit.ComparisonFailure: Expecting compression mode string to be BEST_SPEED but got: BEST_COMPRESSION\n   [junit4]    >  SegmentInfo: _5(8.0.0):c1\n   [junit4]    >  SegmentInfos: segments_e: _7(8.0.0):c2 _5(8.0.0):c1\n   [junit4]    >  Codec: Lucene70 expected:<BEST_[SPEED]> but was:<BEST_[COMPRESSION]>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([F584376A20EC9B2D:2BF1400E658E6E9C]:0)\n   [junit4]    > \tat org.apache.solr.core.TestCodecSupport.lambda$assertCompressionMode$0(TestCodecSupport.java:115)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.withSearcher(SolrCore.java:1874)\n   [junit4]    > \tat org.apache.solr.core.TestCodecSupport.assertCompressionMode(TestCodecSupport.java:112)\n   [junit4]    > \tat org.apache.solr.core.TestCodecSupport.testMixedCompressionMode(TestCodecSupport.java:157)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n[...]\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=1658, maxMBSortInHeap=7.737749859284375, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@2da9a1c5), locale=ha-GH, timezone=Africa/Nairobi\n   [junit4]   2> NOTE: Windows 10 10.0 amd64/Oracle Corporation 10.0.1 (64-bit)/cpus=3,threads=1,free=39067800,total=97320960",
    "attachments": {
        "SOLR-12513.patch": "https://issues.apache.org/jira/secure/attachment/12929046/SOLR-12513.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-24T16:00:49+0000",
            "content": "Digging.... ",
            "author": "Erick Erickson",
            "id": "comment-16521528"
        },
        {
            "date": "2018-06-25T05:40:12+0000",
            "content": "Fixing the test is easy enough, just specify maxSegments=1 for the optimize call at line 156.\n\nchange assertU(optimize()); to assertU(optimize(\"maxSegments\", \"1\"));.\n\nThis does call into question other places where optimize assumes 1 setment, so I took a quick look through the other calls to assertU(optimize()) and found several that have comments or it's immediately obvious that they expect exactly one segment and changed those too. \n\nAlong the way I looked at DirectUpdateHandlerOptimizeTest as that called optimize, and I'm puzzled. The last time that test did anything except test that calling optimize with -1 threw an error was... 2008.\n\nThe assertNumSegments was commented out about then. This change predates TieredMergePolicy, which doesn't behave the way this test expects anyway. So if you re-enable assertNumSegments (well, actually use one that doesn't read the directory over in TestMergePolicyConfig) then the very first assert fails.\n\nTesting the assert failure with a segment count of -1 seems like a good thing to keep so I'll move if over into TestMergePolicyConfig and delete DirectUpdateHandlerOptimizeTest. Since it doesn't really care what merge policy is used, it just needs to be tested once.\n\nThere are two mentions in: \n..../lucene/tools/junit4/cached-timehints.txt\nI'm not familiar with this file, should the references just be removed? Steve Rowe do you know?\n\nMeanwhile I'll beast TestCodecSupport tonight.\n ",
            "author": "Erick Erickson",
            "id": "comment-16521867"
        },
        {
            "date": "2018-06-25T15:14:05+0000",
            "content": "There are two mentions in: \n ..../lucene/tools/junit4/cached-timehints.txt\n I'm not familiar with this file, should the references just be removed? Steve Rowe do you know?\nThat file is generated locally based on test timings. I think it's okay to ignore them, but if you're worried about it you can regenerate the file using ant test-updatecache (if you're curious you can see what it does in lucene/common-build.xml. ",
            "author": "Steve Rowe",
            "id": "comment-16522417"
        },
        {
            "date": "2018-06-25T16:22:41+0000",
            "content": "Thanks Steve Rowe\n\nI regenerated the hints file, so the actual code changes are very small compared to the total patch size.\n\nI have yet to run precommit and full tests on this one, but after I do I'll check this patch in. ",
            "author": "Erick Erickson",
            "id": "comment-16522489"
        },
        {
            "date": "2018-06-25T20:29:08+0000",
            "content": "That file is used to provide default timings for load balancing of suites across JVMs to minimize the overall execution time. I can't remember the last time I updated that file, so perhaps we should just leave it as empty (which is not a big deal since those timings are also generated locally to an ignored file and even if they're not used, there is job-stealing in place).\n\nTry:\n\ncd lucene\nant test-help\n\n\nand see the section:\n\n     [help] #\n     [help] # Load balancing and caches. --------------------------------------\n     [help] #\n\n ",
            "author": "Dawid Weiss",
            "id": "comment-16522773"
        },
        {
            "date": "2018-06-25T21:16:40+0000",
            "content": "OK, I'll just remove all the content then? There's no point in keeping the content if it's not useful. ",
            "author": "Erick Erickson",
            "id": "comment-16522829"
        },
        {
            "date": "2018-06-25T22:17:01+0000",
            "content": "Final patch, CHANGES.txt and empty hints file. ",
            "author": "Erick Erickson",
            "id": "comment-16522879"
        },
        {
            "date": "2018-06-25T22:38:17+0000",
            "content": "those timings are also generated locally to an ignored file\n\nThanks Dawid, I had forgotten that there is both a static and a dynamic version of the file. ",
            "author": "Steve Rowe",
            "id": "comment-16522901"
        },
        {
            "date": "2018-06-25T22:41:17+0000",
            "content": "Commit revisions:\n\nmaster: 1d85cd783863f75cea133fb9c452302214165a4d\n7x:        53ec8224705f4f0d35751b18b3f0168517c43121 ",
            "author": "Erick Erickson",
            "id": "comment-16522902"
        }
    ]
}