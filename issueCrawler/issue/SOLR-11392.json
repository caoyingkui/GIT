{
    "id": "SOLR-11392",
    "title": "StreamExpressionTest.testParallelExecutorStream fails too frequently",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I've never been able to reproduce the failure but jenkins fails frequently with the following error:\n\n\nStack Trace:\norg.apache.solr.client.solrj.impl.CloudSolrClient$RouteException: Error from server at http://127.0.0.1:38180/solr/workQueue_shard2_replica_n3: Expected mime type application/octet-stream but got text/html. <html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\n<title>Error 404 </title>\n</head>\n<body>\n<h2>HTTP ERROR: 404</h2>\n<p>Problem accessing /solr/workQueue_shard2_replica_n3/update. Reason:\n<pre>    Can not find: /solr/workQueue_shard2_replica_n3/update</pre></p>\n<hr /><a href=\"http://eclipse.org/jetty\">Powered by Jetty:// 9.3.20.v20170531</a><hr/>\n</body>\n</html>\n\n\n\nWhat appears to be happening is that the test framework is having trouble setting up the collection.\n\nHere is the test code:\n\n\n@Test\n  public void testParallelExecutorStream() throws Exception {\n    CollectionAdminRequest.createCollection(\"workQueue\", \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"workQueue\", cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n    CollectionAdminRequest.createCollection(\"mainCorpus\", \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"mainCorpus\", cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n    CollectionAdminRequest.createCollection(\"destination\", \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"destination\", cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n\n    UpdateRequest workRequest = new UpdateRequest();\n    UpdateRequest dataRequest = new UpdateRequest();\n\n\n    for (int i = 0; i < 500; i++) {\n      workRequest.add(id, String.valueOf(i), \"expr_s\", \"update(destination, batchSize=50, search(mainCorpus, q=id:\"+i+\", rows=1, sort=\\\"id asc\\\", fl=\\\"id, body_t, field_i\\\"))\");\n      dataRequest.add(id, String.valueOf(i), \"body_t\", \"hello world \"+i, \"field_i\", Integer.toString(i));\n    }\n\n    workRequest.commit(cluster.getSolrClient(), \"workQueue\");\n    dataRequest.commit(cluster.getSolrClient(), \"mainCorpus\");",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-09-23T16:19:52+0000",
            "content": "Alan Woodward, I'm wondering if you see anything I might be doing wrong with the code above?\n\nI'm creating the workQueue collection as follows:\n\nCollectionAdminRequest.createCollection(\"workQueue\", \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"workQueue\", cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n\n\n\nBut frequently on jenkins this collection seems to not be available when I add documents? Is there another approach I should be using? ",
            "author": "Joel Bernstein",
            "id": "comment-16177867"
        },
        {
            "date": "2017-09-23T16:41:45+0000",
            "content": "I see that there is a processAndWait method I can use rather then just the process method when creating the collection. I will try that and see if that resolves the issue. ",
            "author": "Joel Bernstein",
            "id": "comment-16177877"
        },
        {
            "date": "2017-09-23T17:04:35+0000",
            "content": "Commit d5274ff239772d1b1c28775cec14abb44e4d80de in lucene-solr's branch refs/heads/master from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d5274ff ]\n\nSOLR-11392: StreamExpressionTest.testParallelExecutorStream fails too frequently ",
            "author": "ASF subversion and git services",
            "id": "comment-16177889"
        },
        {
            "date": "2017-09-23T17:09:32+0000",
            "content": "Commit 0882b59b25f668fd5a3666393e512a0b40789108 in lucene-solr's branch refs/heads/branch_7x from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0882b59 ]\n\nSOLR-11392: StreamExpressionTest.testParallelExecutorStream fails too frequently ",
            "author": "ASF subversion and git services",
            "id": "comment-16177894"
        },
        {
            "date": "2017-09-26T13:19:13+0000",
            "content": "The test is failing on jenkins with the following error:\n\n\n<h2>HTTP ERROR: 404</h2>\n<p>Problem accessing /solr/mainCorpus_shard2_replica_n3/update. Reason:\n<pre>    Can not find: /solr/mainCorpus_shard2_replica_n3/update</pre></p>\n\n\n\nNotice this is looking for the \"_n3\" replica. What's odd about this is that only two replicas where created for this collection. From the test logs:\n\n\n[junit4]   2> 134364 INFO  (OverseerStateUpdate-98710583079665671-127.0.0.1:33171_solr-n_0000000000) [n:127.0.0.1:33171_solr    ] o.a.s.c.o.SliceMutator createReplica() {\n   [junit4]   2>   \"operation\":\"ADDREPLICA\",\n   [junit4]   2>   \"collection\":\"mainCorpus\",\n   [junit4]   2>   \"shard\":\"shard1\",\n   [junit4]   2>   \"core\":\"mainCorpus_shard1_replica_n1\",\n   [junit4]   2>   \"state\":\"down\",\n   [junit4]   2>   \"base_url\":\"http://127.0.0.1:44379/solr\",\n   [junit4]   2>   \"type\":\"NRT\"} \n   [junit4]   2> 134365 INFO  (OverseerStateUpdate-98710583079665671-127.0.0.1:33171_solr-n_0000000000) [n:127.0.0.1:33171_solr    ] o.a.s.c.o.SliceMutator createReplica() {\n   [junit4]   2>   \"operation\":\"ADDREPLICA\",\n   [junit4]   2>   \"collection\":\"mainCorpus\",\n   [junit4]   2>   \"shard\":\"shard2\",\n   [junit4]   2>   \"core\":\"mainCorpus_shard2_replica_n2\",\n   [junit4]   2>   \"state\":\"down\",\n   [junit4]   2>   \"base_url\":\"http://127.0.0.1:45595/solr\",\n   [junit4]   2>   \"type\":\"NRT\"} \n\n\n\n\nSo the question is why is the client looking for the third replica?\n\nAnother odd thing with this failure is that it doesn't reproduce and I've never seen it locally. So this only happens on Jenkins. ",
            "author": "Joel Bernstein",
            "id": "comment-16180755"
        },
        {
            "date": "2017-09-26T13:24:10+0000",
            "content": "Cao Manh Dat, Shalin Shekhar Mangar, could you look at the comment above and let me know what you think.\n\nThe error I'm seeing looks like a Solr Cloud bug but it's not clear to me. It appears that the Solr Cloud client is sending updates to a shard that doesn't exist. ",
            "author": "Joel Bernstein",
            "id": "comment-16180763"
        },
        {
            "date": "2017-09-29T09:43:48+0000",
            "content": "It looks like there are two issues here:\n\n1) A previous test (in the case I'm looking at, testExecutorStream) is creating the mainCorpus collection, but for some reason it's created with replicas named _n1 and _n3:\n\n\n 55135    [junit4]   2> 151484 INFO  (qtp1541434343-1456) [    ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/collections params={async=147c5276-5e91-4a73-912a-0025669a97ec&r\n  55135 eplicationFactor=1&collection.configName=conf&name=mainCorpus&nrtReplicas=1&action=CREATE&numShards=2&wt=javabin&version=2} status=0 QTime=1\n  55136    [junit4]   2> 151485 INFO  (qtp1541434343-1455) [    ] o.a.s.h.a.CollectionsHandler Invoked Collection Action :requeststatus with params requestid=147c5276-5e91-4a73-912a-0\n  55136 025669a97ec&action=REQUESTSTATUS&wt=javabin&version=2 and sendToOCPQueue=true\n  55137    [junit4]   2> 151486 INFO  (qtp1541434343-1455) [    ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/collections params={requestid=147c5276-5e91-4a73-912a-0025669a97\n  55137 ec&action=REQUESTSTATUS&wt=javabin&version=2} status=0 QTime=1\n  55138    [junit4]   2> 151488 INFO  (OverseerThreadFactory-647-thread-5) [    ] o.a.s.c.CreateCollectionCmd Create collection mainCorpus\n  55139    [junit4]   2> 151488 INFO  (OverseerCollectionConfigSetProcessor-98740321293107209-127.0.0.1:65381_solr-n_0000000000) [    ] o.a.s.c.OverseerTaskQueue Response ZK path: /ov\n  55139 erseer/collection-queue-work/qnr-0000000038 doesn't exist.  Requestor may have disconnected from ZooKeeper\n  55140    [junit4]   2> 151610 INFO  (OverseerStateUpdate-98740321293107209-127.0.0.1:65381_solr-n_0000000000) [    ] o.a.s.c.o.SliceMutator createReplica() {\n  55141    [junit4]   2>   \"operation\":\"ADDREPLICA\",\n  55142    [junit4]   2>   \"collection\":\"mainCorpus\",\n  55143    [junit4]   2>   \"shard\":\"shard1\",\n  55144    [junit4]   2>   \"core\":\"mainCorpus_shard1_replica_n1\",\n  55145    [junit4]   2>   \"state\":\"down\",\n  55146    [junit4]   2>   \"base_url\":\"http://127.0.0.1:65381/solr\",\n  55147    [junit4]   2>   \"type\":\"NRT\"}\n  55148    [junit4]   2> 151616 INFO  (OverseerStateUpdate-98740321293107209-127.0.0.1:65381_solr-n_0000000000) [    ] o.a.s.c.o.SliceMutator createReplica() {\n  55149    [junit4]   2>   \"operation\":\"ADDREPLICA\",\n  55150    [junit4]   2>   \"collection\":\"mainCorpus\",\n  55151    [junit4]   2>   \"shard\":\"shard2\",\n  55152    [junit4]   2>   \"core\":\"mainCorpus_shard2_replica_n3\",\n  55153    [junit4]   2>   \"state\":\"down\",\n  55154    [junit4]   2>   \"base_url\":\"http://127.0.0.1:65394/solr\",\n  55155    [junit4]   2>   \"type\":\"NRT\"}\n\n\n\nThis is a bit weird, but it works fine.  At the end of the test, the collection is deleted.  \n\nThen testParallelExecutorStream starts up, and it too creates a 'mainCorpus' collection, only this time with shards named _n1 and _n2, as you'd expect.  The bug then comes when the cluster's existing CloudSolrClient is used to send updates to the newly recreated collection.  The cluster state provider still has state cached from the previous test, so it thinks that the relevant replicas to send data to are _n1 and _n3.  But when it gets a 404 back from the (no longer existing) _n3 replica, it doesn't invalidate its cache and try again, it just fails.  This looks like a genuine bug in CloudSolrClient.  Noble Paul I think you're best placed to know how to fix this?\n\nA workaround for the test is to use different collection names for the different tests. ",
            "author": "Alan Woodward",
            "id": "comment-16185583"
        },
        {
            "date": "2017-09-29T13:07:47+0000",
            "content": "Thanks Alan Woodward, I'll take the first step of changing the collection names for one of the tests. This should get the tests passing again.\n\nThese errors are happening much more frequently lately. So I think it would be a good idea to see if there has been a regression in CloudSolrClient due to the new SolrCloud features. \n ",
            "author": "Joel Bernstein",
            "id": "comment-16185795"
        },
        {
            "date": "2017-10-04T18:29:28+0000",
            "content": "Commit 070d6d3748341a955d807570d96896068a933f3e in lucene-solr's branch refs/heads/master from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=070d6d3 ]\n\nSOLR-11392: Change collection names in test case ",
            "author": "ASF subversion and git services",
            "id": "comment-16191788"
        },
        {
            "date": "2017-10-04T18:58:40+0000",
            "content": "Commit 8ac381a6a0ce7fae1d50896f15dd4fe8307c79d6 in lucene-solr's branch refs/heads/branch_7x from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8ac381a ]\n\nSOLR-11392: Change collection names in test case ",
            "author": "ASF subversion and git services",
            "id": "comment-16191834"
        },
        {
            "date": "2017-10-13T03:23:59+0000",
            "content": "Notice this is looking for the \"_n3\" replica. What's odd about this is that only two replicas where created for this collection\n\nJoel, sorry for the late reply. Solr does not create replica numbers sequentially anymore. This was done in SOLR-11011 ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16203010"
        }
    ]
}