{
    "id": "SOLR-2335",
    "title": "FunctionQParser can't handle fieldnames containing whitespace",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "FunctionQParser has some simplistic assumptions about what types of field names it will deal with, in particular it can't deal with field names containing whitespaces.",
    "attachments": {
        "SOLR-2335.patch": "https://issues.apache.org/jira/secure/attachment/12475275/SOLR-2335.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13014922",
            "date": "2011-04-02T01:21:48+0000",
            "content": "Updating summary/description based on root of problem.\n\nDescription form original bug reporter...\n\n\nWe use an external file field configured as dynamic field. The dynamic field name (and so the name of the provided file) may contain spaces. But currently it is not possible to query for such fields. The following query results in a ParseException:\nq=val:(experience_foo\\ bar)\n\norg.apache.lucene.queryParser.ParseException: Cannot parse 'val:(experience_foo\\ bar)': Expected ',' at position 15 in 'experience_foo bar'\n\nWe use following configuration for the externalFileField:\n  <types>\n    ...\n    <fieldType name=\"experienceRankFile\" keyField=\"id\" defVal=\"0\" stored=\"false\" indexed=\"false\" class=\"solr.ExternalFileField\"\n                 valType=\"float\"/>\n  </types>\n  <fields>\n    <dynamicField name=\"experience_*\" type=\"experienceRankFile\" />\n    ...\n  </field>\n\n\nThe original reasons for these assumptions in FunctionQParser are still generally good: it helps keep the syntax and the parsing simpler then they would otherwise need to be.\n\nI think an easy improvement we could make is to leave the current parsing logic the way it is, but provide a new \"FieldValueSourceParaser\" that expects a single (quoted) string as input, and just returns the FieldValueSource for that field.\n\nSo these two would be equivilent...\n\n\n{!func}myFieldName\n{!func}field(\"myFieldName\")\n\n\n\n...but it would also be possible to write...\n\n\n{!func}field(\"1 my wacky Field*Name\")\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13014930",
            "date": "2011-04-02T01:49:27+0000",
            "content": "Quick patch showing what i had in mind.\n\nonly tried it out with the example for about 30 seconds, and it seemed correct \u2013 but it needs some real tests. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13014935",
            "date": "2011-04-02T02:28:20+0000",
            "content": "oh, that's clever.  I like it! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13014936",
            "date": "2011-04-02T02:46:42+0000",
            "content": "the other thing this should make possible is sorting on fields that historicly havne't been sortable...\n\n\nsort=field(\"1 my wacky Field*Name\") desc\n\n\n\n... the sort parsing code could even be optimized to detect when a function sort results in a FieldValueSource and swap it out with a regular sort ... but i'm not sure if there are any gotchas there. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13017195",
            "date": "2011-04-07T23:03:01+0000",
            "content": "updated patch, includes tests showing the parser working \u2013 even with external field filed when the field name has whitespace and quote characters in it "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13018926",
            "date": "2011-04-12T17:40:23+0000",
            "content": "Committed revision 1091516. "
        }
    ]
}