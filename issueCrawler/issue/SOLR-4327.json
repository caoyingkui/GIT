{
    "id": "SOLR-4327",
    "title": "SolrJ code review indicates potential for leaked HttpClient connections",
    "details": {
        "affect_versions": "4.0",
        "status": "Resolved",
        "fix_versions": [
            "4.5.1",
            "4.6",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The SolrJ HttpSolrServer implementation does not seem to handle errors properly and seems capable of leaking HttpClient connections.  See the request() method in org.apache.solr.client.solrj.impl.HttpSolrServer.  The issue is that exceptions thrown from within this method do not necessarily consume the stream when an exception is thrown.  There is a try/finally block which reads (in part):\n\n\n    } finally {\n      if (respBody != null && processor!=null) {\n        try {\n          respBody.close();\n        } catch (Throwable t) {} // ignore\n      }\n    }\n\n\n\nBut, in order to always guarantee consumption of the stream, it should include:\n\n\nmethod.abort();",
    "attachments": {
        "SOLR-4327.patch": "https://issues.apache.org/jira/secure/attachment/12608170/SOLR-4327.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13793471",
            "date": "2013-10-12T21:02:34+0000",
            "content": "Thanks Karl - this one missed my radar. I'll commit shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13793480",
            "date": "2013-10-12T21:26:55+0000",
            "content": "Commit 1531596 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1531596 ]\n\nSOLR-4327: HttpSolrServer can leak connections on errors. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13793481",
            "date": "2013-10-12T21:28:14+0000",
            "content": "Commit 1531597 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1531597 ]\n\nSOLR-4327: HttpSolrServer can leak connections on errors. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13793486",
            "date": "2013-10-12T21:30:55+0000",
            "content": "Commit 1531598 from Mark Miller in branch 'dev/branches/lucene_solr_4_5'\n[ https://svn.apache.org/r1531598 ]\n\nSOLR-4327: HttpSolrServer can leak connections on errors. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13793542",
            "date": "2013-10-13T00:40:03+0000",
            "content": "Thanks again Karl! "
        },
        {
            "author": "Oleg Kalnichevski",
            "id": "comment-13793721",
            "date": "2013-10-13T17:34:42+0000",
            "content": "This is none of my business, but I think and catching and ignoring Throwables is an exceptionally bad idea\n\n\ntry {\n    respBody.close();\n} catch (Throwable t) {} // ignore\n\n\n\nAt the very least it should be\n\n\ntry {\n    respBody.close();\n} catch (Exception ignore) {}\n\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-13794126",
            "date": "2013-10-14T14:02:40+0000",
            "content": "+1 Oleg.  Mark, please change to catch Exception. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13794135",
            "date": "2013-10-14T14:12:43+0000",
            "content": "That change has nothing to do with this JIRA issue. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13794615",
            "date": "2013-10-14T23:17:39+0000",
            "content": "See SOLR-4992 if you are interested in the catching Throwable issue. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-15084569",
            "date": "2016-01-06T02:35:35+0000",
            "content": "My mistake for not taking the time to really dig into this one. This was a mistake to add, though it had no ill affect. I've addressed it in SOLR-8451 and added some connection reuse testing. "
        }
    ]
}