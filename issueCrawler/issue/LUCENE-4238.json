{
    "id": "LUCENE-4238",
    "title": "NRTCachingDirectory has concurrency bug(s).",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/store"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "",
    "attachments": {
        "LUCENE-4238_test.patch": "https://issues.apache.org/jira/secure/attachment/12537411/LUCENE-4238_test.patch",
        "LUCENE-4238.patch": "https://issues.apache.org/jira/secure/attachment/12537386/LUCENE-4238.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-19T20:30:42+0000",
            "content": "Not sure the exact details yet, but it appears files can show up in the delegate and the cache, and the code considers this a problem. I've seen:\n\njava.io.IOException: cannot uncache file=\"t1509\": it was separately also created in the delegate directory\n\tat __randomizedtesting.SeedInfo.seed([6917E11030521BB4:9721BE7090E1E8BC]:0)\n\tat org.apache.lucene.store.NRTCachingDirectory.unCache(NRTCachingDirectory.java:289)\n\tat org.apache.lucene.store.NRTCachingDirectory.close(NRTCachingDirectory.java:261)\n\n\n\nand\n\n\n125733 T925 ccr.RunnerThreadGroup.uncaughtException WARNING RunnerThreadGroup's sub thread threw an uncaught exception. org.apache.lucene.index.MergePolicy$MergeException: java.lang.AssertionError: name=_yd_Lucene40WithOrds_0.tii\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:507)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:480)\nCaused by: java.lang.AssertionError: name=_yd_Lucene40WithOrds_0.tii\n\tat org.apache.lucene.store.NRTCachingDirectory.deleteFile(NRTCachingDirectory.java:165)\n\tat org.apache.lucene.index.IndexFileDeleter.deleteFile(IndexFileDeleter.java:568)\n\tat org.apache.lucene.index.IndexFileDeleter.decRef(IndexFileDeleter.java:507)\n\tat org.apache.lucene.index.IndexFileDeleter.decRef(IndexFileDeleter.java:492)\n\n\n\nWhen I saw the second, it may be unrelated, but I also saw:\n\n125492 T923 C6 P47307 oasc.SolrException.log SEVERE java.lang.AssertionError: recoveryExecutor-31-thread-1: RefCount is 0 pre-decrement for file \"_y8.fdt\"\n\t\tat org.apache.lucene.index.IndexFileDeleter$RefCount.DecRef(IndexFileDeleter.java:614)\n\t\tat org.apache.lucene.index.IndexFileDeleter.decRef(IndexFileDeleter.java:504)\n\t\tat org.apache.lucene.index.IndexFileDeleter.decRef(IndexFileDeleter.java:492)\n\t\tat org.apache.lucene.index.IndexFileDeleter.checkpoint(IndexFileDeleter.java:453)rellim\n\n\t\tat org.apache.lucene.index.IndexWriter.checkpoint(IndexWriter.java:2000)\n\t\tat org.apache.lucene.index.IndexWriter.publishFlushedSegment(IndexWriter.java:2123)\n\n ",
            "author": "Mark Miller",
            "id": "comment-13418644"
        },
        {
            "date": "2012-07-20T14:23:47+0000",
            "content": "Hi Mark, which test/seed are you seeing this on? ",
            "author": "Michael McCandless",
            "id": "comment-13419174"
        },
        {
            "date": "2012-07-20T18:50:20+0000",
            "content": "LUCENE-4241 possibly related?  (assertions tripping in NRTCachingDirectory.deleteFile in 3/100 runs of RecoveryZkTest.testDistribSearch - seeds didn't reproduce for me) ",
            "author": "Hoss Man",
            "id": "comment-13419433"
        },
        {
            "date": "2012-07-20T18:53:39+0000",
            "content": "Here is an ugly rough test i started playing with yesterday - it will trigger the first exception quite often for me.  ",
            "author": "Mark Miller",
            "id": "comment-13419439"
        },
        {
            "date": "2012-07-20T18:54:32+0000",
            "content": "Looks like Hossman has also seen this same issue with RecoveryZkTest. Considering it doesn't seem to fail with that exception on all our jenkins machines, may not be easy to see it there. ",
            "author": "Mark Miller",
            "id": "comment-13419440"
        },
        {
            "date": "2012-07-20T18:56:49+0000",
            "content": "Somehow it seems not too difficult to get a file both cached and in the underlying dir - and delete and an assert really don't like that. ",
            "author": "Mark Miller",
            "id": "comment-13419443"
        },
        {
            "date": "2012-07-20T19:18:32+0000",
            "content": "Thanks for the test Mark.\n\nI think this is a horror in the test-framework actually, imagine say, that the bug is that \nNRTCachingDir's createOutput should be synced. Well we wrap in MockDirectoryWrapper for our tests,\nwhich does all kinds of crazy shit, and its createOutput is synced. So tests wont find the bug.\n\nOn the other hand we dont want to NOT wrap in it because some of that crazy stuff we want to always do,\nlike checkindex on close.\n\nSo I will open an issue to clean this up. I think we should have a base class with the stuff that doesnt\nneed sync like checkIndex-on-close, and MDW extends that. Then in tests we can switch between the two\nto catch bugs like this. ",
            "author": "Robert Muir",
            "id": "comment-13419463"
        },
        {
            "date": "2012-07-20T21:13:00+0000",
            "content": "I can't make the test fail: (after fixing it to properly create a tempdirectory).\n\nAre you sure that its not just a bug in your test?\nThe way its coded, it will use /your/cwd/random as the name of the directory, and wont be cleaned out.\nSo if you then run the test again, it will have the previous files from your previous run.\n\nI'll attach my version ",
            "author": "Robert Muir",
            "id": "comment-13419574"
        },
        {
            "date": "2012-07-20T21:15:53+0000",
            "content": "Specifically this line would cause the problem:\n\nfinal Directory dir = new NRTCachingDirectory(newFSDirectory(new File(TEST_DIRECTORY)), 0.5, 1);//newDirectory();\n\n\n\nTEST_DIRECTORY is set by default to \"random\", so it would be reused across test runs.\nI changed it to use:\n\n\nFile tmpdir = _TestUtil.getTempDir(\"threadSafety\");\ntmpdir.mkdirs();\n\n\n\nIt always passes for me.\n\nHowever, if your version produces same fail you are seeing, this would be consistent with my previous\ncomments about what happens if you modify files directly on the filesystem underneath NRTCachingDir (e.g. replication handler),\nbecause thats essentially what that test bug would cause.\n\n ",
            "author": "Robert Muir",
            "id": "comment-13419576"
        },
        {
            "date": "2012-07-20T21:54:26+0000",
            "content": "Are you sure that its not just a bug in your test?\n\nNope, I'm definitely not sure - I pieced that bit together from other tests - all this new test infra is fairly new to me.\n\nI'll try some runs when I get a chance - it would make a lot of sense - even with a concurrency issue it seemed quite odd you could get a file in both the delegate and the cache with that simple test. ",
            "author": "Mark Miller",
            "id": "comment-13419603"
        },
        {
            "date": "2012-07-20T22:03:24+0000",
            "content": "Yup - thanks - passes for me. Looks to be a test bug that must be similar to the underlying issue.\n\nI'll start hunting down the replication path. ",
            "author": "Mark Miller",
            "id": "comment-13419609"
        },
        {
            "date": "2012-07-20T22:15:32+0000",
            "content": "I'll generalize the test and commit it if you dont mind: extra coverage doesn't hurt.\n\nAlso I'll try some of these LuceneTestCase traps if i can: e.g. TEST_DIRECTORY shouldnt be public. ",
            "author": "Robert Muir",
            "id": "comment-13419626"
        }
    ]
}