{
    "id": "SOLR-5331",
    "title": "SolrCloud 4.5 bulk add errors",
    "details": {
        "affect_versions": "4.5",
        "status": "Closed",
        "fix_versions": [
            "4.5.1"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "Since Solr 4.5 bulk adding documents via SolrJ (at least) is causing errors.\n\n// build array list of SolrInputDocuments\n\nserver.add(docs);\n\nI've tried with CUSS (which swallows exceptions as expected) however they are shown in the logs on server, and with CloudSolrServer which is returning the errors as well as seeing them in the server logs.\n\nI've tried downgrading my SolrJ to 4.4, still errors so looks like a regression in the server code. Reverting to Solr 4.4 on server and I don't get errors (however run into deadlock issues).\n\nI raised this issue in IRC - NOT the mailing list, and elyorag suggested opening a ticket, and to mention this has now been discussed in IRC.\n\nThe exceptions would indicate I'm attempting to do multiple operations in a single request which is malformed. I am not, I am only attempting to add documents.\n\n\nStack traces seen here:\n\n    14:57:13 ERROR SolrCmdDistributor shard update error RetryNode: http://X.X.X.X:8080/solr/collection1_shard16_replica2/:org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException: Illegal to have multiple roots (start tag in epilog?).\n\n    shard update error RetryNode: http://X.X.X.X:8080/solr/collection1_shard16_replica2/:org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException: Illegal to have multiple roots (start tag in epilog?).\n    at [row,col \n{unknown-source}]: [18,327]\n    at org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:424)\n    at org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:180)\n    at org.apache.solr.update.SolrCmdDistributor$1.call(SolrCmdDistributor.java:401)\n    at org.apache.solr.update.SolrCmdDistributor$1.call(SolrCmdDistributor.java:375)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:722)\n\n----\n\n    org.apache.solr.common.SolrException: Illegal to have multiple roots (start tag in epilog?).\n    at [row,col {unknown-source}\n]: [7,6314]\n    at org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:176)\n    at org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:92)\n    at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n    at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n    at org.apache.solr.core.SolrCore.execute(SolrCore.java:1859)\n    at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:703)\n    at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:406)\n    at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:195)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\n    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)\n    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023)\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)\n    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:722)\n    Caused by: com.ctc.wstx.exc.WstxParsingException: Illegal to have multiple roots (start tag in epilog?).\n    at [row,col \n{unknown-source}\n]: [7,6314]\n    at com.ctc.wstx.sr.StreamScanner.constructWfcException(StreamScanner.java:630)\n    at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:461)\n    at com.ctc.wstx.sr.BasicStreamReader.handleExtraRoot(BasicStreamReader.java:2155)\n    at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.java:2070)\n    at com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2647)\n    at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1019)\n    at org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:213)\n    at org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:174)\n    ... 22 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13794081",
            "date": "2013-10-14T12:40:50+0000",
            "content": "This is worth investigating before we release 4.5.1 "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13794094",
            "date": "2013-10-14T13:04:30+0000",
            "content": "Agreed. I'll take a look at this today as well and see if I can recreate the bug.\n\nChris, can you post more of the Solrj code, I'd like to see the entire request?   "
        },
        {
            "author": "Chris Geeringh",
            "id": "comment-13794153",
            "date": "2013-10-14T14:39:17+0000",
            "content": "Joel, I have my own parser class which returns a SolrInputDocument from a FileInputStream.\n\nI itterate the file system and add to the arraylist, when it reaches 100, I add...\n\n\nCloudSolrServer server = new CloudSolrServer(zkString);\nserver.setDefaultCollection(\"collection1\");\n\nFile dir = new File(\"/path/to/files\");\n\nList<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\nfor(File file : dir.listFiles()) {\n     docs.add(MyParser.parse(new FileInputStream(file));\n     if(docs.size() >= 100) \n{\n          server.add(docs);\n          docs.clear();\n     }\n} "
        },
        {
            "author": "Chris Geeringh",
            "id": "comment-13794164",
            "date": "2013-10-14T14:57:30+0000",
            "content": "I read about using Java bin transport in CloudSolrServer in another ticket - if possible I would like to test this. I am running with the latest 4.6 snapshot from Jenkins. Please advise if this can be done. "
        },
        {
            "author": "Chris Geeringh",
            "id": "comment-13794332",
            "date": "2013-10-14T18:15:15+0000",
            "content": "Some updates.\n\nI tried reducing my arraylist size check before calling server.add(docs) to 10 instead of 100, now I have no issues with my importing. Maybe there is a buffer size, or XML length limit which I was exceeding with my (large?) posts and they were being truncated, and causing the malformed error message?\n\nSwitching to java bin transport also solved my issue (thanks shalin) and is faster. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13794365",
            "date": "2013-10-14T18:51:39+0000",
            "content": "Thanks for the update. I was working on reproducing the bug, but wasn't seeing the error. I suspect you're right about the buffer size. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13794381",
            "date": "2013-10-14T19:14:04+0000",
            "content": "Solr sets the servlet container's POST buffer size limit.  This can be controlled with the formdataUploadLimitInKB attribute on the requestParsers tag in solrconfig.xml.  It defaults to 2048, or 2 megabytes. "
        },
        {
            "author": "Chris Geeringh",
            "id": "comment-13794437",
            "date": "2013-10-14T20:27:34+0000",
            "content": "Shawn is this also applicable for Tomcat? I have set the max post size to 100MB there "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13794458",
            "date": "2013-10-14T20:43:06+0000",
            "content": "Hi Chris,\nthis setting affects all servlet containers. Shawn's explanation was not fully correct: Solr does not set anything in the servlet container. Since Solr 4.1.0, any settings in the container about charset, request size,.. don't have any effect on Solr anymore. Especially Tomcat was the source of all bugs (because you had to configure Tomcat to use UTF-8) for query encoding.\n\nSOLR-4265 and SOLR-4283 changed this: All query parameters, uploaded files,... are now handled directly by the dispatcher servlet. It reads the POST data from an input stream, it does not let Tomcat parse them.\n\nThe Tomcat setting only affects the maximum size of POSTed form data if parsed by Tomcat itsself (means those &...&...&....-encoded data). As parsing is done in Solr, the corresponding setting in tomcat is: formdataUploadLimitInKB (for form data encoded like URL params) and multipartUploadLimitInKB (for file uploads) in the solrconfig.xml. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13794481",
            "date": "2013-10-14T21:03:38+0000",
            "content": "Hi Chris, just for completeness:\nDo you use/enforce multipart POST? If this is the case, this commit could cause this: r1469946 (SOLR-4358: HttpSolrServer now supports forcing multipart requests). If you post this as multipart (and not as a single raw and large file), it may hit the multipart limit. Every file of a multipart request must be smaller than the configured limit (see above). So you have to raise multipartUploadLimitInKB. Mentioning \"bulk mode\" seem to suggest this to me. Unfortunately I have no idea about SolrJ's internal handling, so just digging. "
        },
        {
            "author": "Chris Geeringh",
            "id": "comment-13794982",
            "date": "2013-10-15T08:06:28+0000",
            "content": "I'm not uploading any files to Solr. Only plain text, via SolrInputDocument(s) - I have increased the formdataUploadLimitInKB value and will test further. "
        },
        {
            "author": "Chris Geeringh",
            "id": "comment-13805167",
            "date": "2013-10-25T08:37:03+0000",
            "content": "Closing this... With the above changes, and changes to my tomcat connector limits, this issue has gone away. "
        }
    ]
}