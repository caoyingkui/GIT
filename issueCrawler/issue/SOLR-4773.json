{
    "id": "SOLR-4773",
    "title": "New discovery mode needs to ensure that instanceDir is correct",
    "details": {
        "affect_versions": "4.4,                                            6.0",
        "status": "Resolved",
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Doing a fresh checkout of 4.x (trunk to to I think) and firing up the example fails because we can't find solrconfig. The construction of the instanceDir in SolrCoreDiscoverer constructs a path with an extra solr (e.g. solr/solr/core).\n\nI'll attach a patch shortly.",
    "attachments": {
        "SOLR-4773.patch": "https://issues.apache.org/jira/secure/attachment/12580891/SOLR-4773.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13644031",
            "date": "2013-04-28T14:52:21+0000",
            "content": "Yeah the nightly smoker already failed! I hope this does not affect 4.3? "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13644041",
            "date": "2013-04-28T15:37:23+0000",
            "content": "4.3 RC3 example runs fine for me.\n\nbranch_4x ant run-example also works fine (although it has the problem with no longer supporting implicit collection name.)\n\nBut ant package for branch_4x, unzip the release, run the example from the release gives me the reported problem. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13644042",
            "date": "2013-04-28T15:37:43+0000",
            "content": "Here's a preliminary patch that I really don't like much, but it illustrates the problem and has a test case. There's got to be a better way of removing the ancestor paths. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13644043",
            "date": "2013-04-28T15:45:09+0000",
            "content": "Uwe Schindler Don't think this affects 4.3, or if it does only people using the core discovery process. At least I switched to the example solr.xml file that uses core discovery from 4.x to 4.3, compiled and it was OK.\n\nJack Krupansky blew up for me when I built 4x.\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13644046",
            "date": "2013-04-28T16:08:52+0000",
            "content": "I take it back, the new test in the patch does NOT fail without the code changes, probably because it's an absolute rather than relative path... But my plane is descending so I'll be chopped off pretty soon, I'll be looking later. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13644135",
            "date": "2013-04-28T21:11:40+0000",
            "content": "Different approach, putting up for comment before committing. Are there any good reasons not to use the absolute path for this (legacy) instanceDir stuff? This patch uses absolute path here.... "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13644928",
            "date": "2013-04-29T21:55:18+0000",
            "content": "Unless someone thinks this is a bad idea, I'll commit this later this evening (PST). "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13645544",
            "date": "2013-04-30T12:54:47+0000",
            "content": "+1\nTested on branch_4x "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13645567",
            "date": "2013-04-30T13:27:05+0000",
            "content": "[trunk commit] erick\nhttp://svn.apache.org/viewvc?view=revision&revision=1477621\n\nSOLR-4773, discovery mode needed a change to instanceDir "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13645598",
            "date": "2013-04-30T14:07:38+0000",
            "content": "[branch_4x commit] erick\nhttp://svn.apache.org/viewvc?view=revision&revision=1477639\n\nFix for SOLR-4773, setting instanceDir in core discovery mode "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13645600",
            "date": "2013-04-30T14:08:36+0000",
            "content": "trunk - r: 1477621\n4.x   - r: 1477639 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13645970",
            "date": "2013-04-30T20:55:32+0000",
            "content": "It doesn't look like you committed the test? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13645973",
            "date": "2013-04-30T20:57:40+0000",
            "content": "Reopening to track and make sure we get a test in that can catch this. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13646075",
            "date": "2013-04-30T22:30:07+0000",
            "content": "That'd be great. I tried to create a test, but I gave up fighting the test infrastructure. The problem I had trying to create a test is that I couldn't figure out how to create a test that didn't have absolute paths for the dir in question, and I wasn't able to create a failure with abs paths.....\n\nLooking forward to someone showing me how to make that happen.....\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13646139",
            "date": "2013-04-30T23:18:34+0000",
            "content": "I'll tackle it (though probably not until the weekend). "
        },
        {
            "author": "Andy Fowler",
            "id": "comment-13649960",
            "date": "2013-05-06T18:32:30+0000",
            "content": "I'm thinking this is the cause of a bug I'm seeing in the 4.3.0 release. To reproduce using the multicore example:\n\n\n\techo \"<solr></solr>\" > multicore/solr.xml to put it into core discovery mode\n\tplace a core.properties file in core0/ and core1/ directories, just with loadOnStartup and transient properties defined.\n\tstart example `java -Dsolr.solr.home=multicore -jar start.jar`\n\n\n\nYou should receive a \"More than one core points to data dir 'multicore/data/'\" failure on startup. Setting a relative path in each core.properties file doesn't work \u2014\u00a0it only works when I provide discrete dataDir for each core. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13650032",
            "date": "2013-05-06T19:44:38+0000",
            "content": "You should receive a \"More than one core points to data dir 'multicore/data/'\" failure on startup. Setting a relative path in each core.properties file doesn't work \u2014 it only works when I provide discrete dataDir for each core.\n\nI've ripped all that data dir checking out for 4.4. "
        },
        {
            "author": "Andy Fowler",
            "id": "comment-13650033",
            "date": "2013-05-06T19:44:56+0000",
            "content": "Confirmed by compiling branch_4x that this fixes the bug I noticed in 4.3.0 release. To future travelers, this means that each core.properties file needs a discrete dataDir property in 4.3.0. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13650042",
            "date": "2013-05-06T19:58:01+0000",
            "content": "bq: I've ripped all that data dir checking out for 4.4.\n\nDoes that include the checking for cores with the same name? Seems like that makes it easier for people to shoot themselves in the foot without giving them any clues what went wrong. And core discovery makes that pretty easy to do, just copy the core.properties file around and forget to change the name parameter.. Or an absolute path to the datadir.... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13650058",
            "date": "2013-05-06T20:14:57+0000",
            "content": "Does that include the checking for cores with the same name?\n\nYes, all this checking and how it was done just further complicates the code and we want to get away from pre configuration as a way to create collections anyhow.\n\nWe should just keep this simple - a core should fail to be created in the core container if there is an existing core with the same name, that's it.\n\nI feel all the transient and other recent changes to CoreContainer are really starting to significantly complicate what was already a design that needed some love, so I'm trying to simplify as much as possible so we can more easily refactor down the line. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13650098",
            "date": "2013-05-06T20:46:31+0000",
            "content": "Makes sense, I wasn't altogether happy with the complexification. But we're leaving the user high and dry when tracking down errors.\n\nTake 4.x and just copy collection1 to collection2 and fire up solr. No warnings in the log. No errors in the log. But you can't get to collection2, you get a 404 error. And any index mods are done in the collection2 directory.\n\nAdmittedly the configuration is foo'd and Solr is doing exactly what the defined behavior is (identically named cores last one wins). But how the hell is someone supposed to track that down? Especially with lots of cores? They don't get a single clue in the place we always say to look, the solr log.\n\nI see where there are tests for creating a core with the same name as an existing core via the core admin handler, but I don't see at a glance any coverage for this scenario. "
        },
        {
            "author": "Andy Fowler",
            "id": "comment-13650104",
            "date": "2013-05-06T20:52:57+0000",
            "content": "Just to throw in my $0.02 as an app developer and solr consumer w/ far less knowledge on the rest of the worlds' use cases: if I accidentally put solr into a state where two cores were sharing a dataDir, I would really want some sort of strong warning, or just an absolute failure.\n\nI really like the way that cores are moving to being just a simple directory on the FS, rather than a block in a monolithic XML file. But if the cores are moving toward more backing by directory + properties file, it seems like accidentally sharing a dataDir could be a really bad thing. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13650117",
            "date": "2013-05-06T21:24:13+0000",
            "content": "You should get an error as I said - we just shouldn't be trying to detect it that way. Corecontainer should throw an exception when a core is added with an existing name.  "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13650123",
            "date": "2013-05-06T21:32:04+0000",
            "content": "New JIRA for same-named cores, see SOLR-4790. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13659676",
            "date": "2013-05-16T16:22:26+0000",
            "content": "Andy Fowler - I finally found some time and looked into this more deeply in relation to 4.3.0.  The patch for this issue does not fix the problem with relative dataDirs in the released version.  The patch as-is won't apply to 4.3.0 because the code in branch_4x was significantly refactored, but I found the right place to apply the change from getPath to getCanonicalPath, and it didn't help.  It did fix an exception during startup (solrconfig.xml couldn't be found) when I followed your simple instructions for running the multicore example with discovery, but only core0 started, core1 didn't, because it had the same dataDir as core0.\n\nMark Miller - Do you happen to know how we can fix the problem with relative or missing dataDir properties in the 4.3 branch?  Would the change be trivial enough to make it to 4.3.1?  Discovery mode is essentially broken at the moment in the 4.3.0 release unless you have full absolute paths that are explicitly declared in the properties file.  This is not how I want things to work in my own setup. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13659699",
            "date": "2013-05-16T16:52:20+0000",
            "content": "I don't know that it would be that easy - I honestly think it could involve multiple bugs - I fixed many little things in this area in 4x and I think erick has as well. With all the refactoring and all the bugs (there is still a critical outstanding one around persistence if I remember right), as I've said elsewhere, I don't consider the new solr.xml format to be usable for 4.3 and I don't think I can confidently make it solid for 4.3.1 - I've dedicated what time I can to make it solid for 4.4 (and I know there is still work to do and work I've done but not put up yet), which shouldn't be too far out.\n\nI reccomended keeping this stuff in 5x and changing the tests and example to use it before pushing it out in a release - as I said, it didn't actually bake in 5x by sitting there, essentially hidden from dev use and wide testing for a couple weeks - I pushed back a bit multiple times - because I was worried this would be the result, but at this point, we are where we are, and I can only offer to help make things usable for 4.4 at best. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13659703",
            "date": "2013-05-16T16:58:17+0000",
            "content": "at this point, we are where we are, and I can only offer to help make things usable for 4.4 at best.\n\nThanks, Mark.  I thought that might be the case, just wanted to nail it down.  Now I know what to tell users! "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717161",
            "date": "2013-07-23T18:47:19+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13937153",
            "date": "2014-03-16T13:31:29+0000",
            "content": "This was fixed a long time ago by SOLR-4790, closing it slipped through the cracks somehow. "
        }
    ]
}