{
    "id": "LUCENE-1115",
    "title": "Some small fixes to contrib/benchmark",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "2.3",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I've fixed a few small issues I've hit in contrib/benchmark.\n\nFirst, this alg was only doing work on the first round.  All\nsubsequent rounds immediately finished:\n\n\nanalyzer=org.apache.lucene.analysis.standard.StandardAnalyzer\ndoc.maker=org.apache.lucene.benchmark.byTask.feeds.LineDocMaker\nwork.dir = /lucene/work\ndocs.file=work/reuters.lines.txt\ndoc.maker.forever=false\ndirectory=FSDirectory\ndoc.add.log.step=3000\n\n{ \"Rounds\"\n  ResetSystemErase\n  CreateIndex\n  { \"AddDocs\" AddDoc > : *\n  CloseIndex\n  NewRound\n} : 3\n\n\n\nI think this is because we are failing to reset \"exhausted\" to false\nin PerfTask.doLogic(), so I added that.  Plus I had to re-open the\nfile in LineDocMaker.\n\nSecond, I made a small optimization to not call updateExhausted unless\nany of the child tasks are TaskSequence or ResetInputsTask (which I\ncompute up-front).\n\nFinally, we were not allowing flushing by RAM and doc count, so I\nfixed the logic in Create/OpenIndexTask to set both RAMBufferSizeMB\nand MaxBufferedDocs.",
    "attachments": {
        "LUCENE-1115.patch": "https://issues.apache.org/jira/secure/attachment/12372407/LUCENE-1115.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-01-02T17:32:39+0000",
            "content": "Attached patch.  All tests pass.  I plan to commit in a day or so. ",
            "author": "Michael McCandless",
            "id": "comment-12555346"
        },
        {
            "date": "2008-01-02T23:25:02+0000",
            "content": "Definitely a bug.\nPatch looks good, and I like the optimization, thanks for fixing this Mike.\n\nPerhaps rename in TaskSequence from anyExhaustedTasks to anyExhaustableTasks?\n\nAlso, this new test (belongs in TestPerfTaskLogic) passes with the fix but fails without it:\n\n  /**\n   * Test that exhaust in loop works as expected (LUCENE-1115).\n   */\n  public void testExhaustedLooped() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"doc.maker=\"+Reuters20DocMaker.class.getName(),\n        \"doc.add.log.step=3\",\n        \"doc.term.vector=false\",\n        \"doc.maker.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  CloseIndex\",\n        \"} : 2\",\n    };\n    \n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n\n    // 3. test number of docs in the index\n    IndexReader ir = IndexReader.open(benchmark.getRunData().getDirectory());\n    int ndocsExpected = 20; // Reuters20DocMaker exhausts after 20 docs.\n    assertEquals(\"wrong number of docs in the index!\", ndocsExpected, ir.numDocs());\n    ir.close();\n  }\n\n\n\nCheers,\nDoron ",
            "author": "Doron Cohen",
            "id": "comment-12555441"
        },
        {
            "date": "2008-01-03T00:34:26+0000",
            "content": "Awesome, I will add that test case.  Thanks Doron! ",
            "author": "Michael McCandless",
            "id": "comment-12555453"
        }
    ]
}