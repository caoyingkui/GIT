{
    "id": "SOLR-10513",
    "title": "CLONE - ConjunctionSolrSpellChecker wrong check for same string distance",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "4.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "See ConjunctionSolrSpellChecker.java\n\ntry {\n      if (stringDistance == null) \n{\n        stringDistance = checker.getStringDistance();\n      }\n else if (stringDistance != checker.getStringDistance()) \n{\n        throw new IllegalArgumentException(\n            \"All checkers need to use the same StringDistance.\");\n      }\n    } catch (UnsupportedOperationException uoe) \n{\n      // ignore\n    }\n\nIn line stringDistance != checker.getStringDistance() there is comparing by references. So if you are using 2 or more spellcheckers with same distance algorithm, exception will be thrown anyway.\n\n\nUpdate: As of Solr 6.5, this has been changed to stringDistance.equals(checker.getStringDistance()) .\nHowever, LuceneLevenshteinDistance does not even override equals method. \n\nThis does not solve the problem yet, because the default equals method anyway compares references.\n\nHence unable to use FileBasedSolrSpellChecker .  \n\nMoreover, Some check of similar sorts should also be in the init method. So that user does not have to wait for this error during query time. If the spellcheck components have been added solrconfig.xml , it should throw error during core-reload itself.",
    "attachments": {
        "SOLR-10513.patch": "https://issues.apache.org/jira/secure/attachment/12915714/SOLR-10513.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-18T16:13:41+0000",
            "content": "As of Solr 6.5, this has been changed to stringDistance.equals(checker.getStringDistance()) .\nHowever, LuceneLevenshteinDistance does not even override equals method. \n\nThis does not solve the problem yet, because the default equals method anyway compares references.\n\nHence unable to use FileBasedSolrSpellChecker .   ",
            "author": "Abhishek Kumar Singh",
            "id": "comment-15972987"
        },
        {
            "date": "2018-03-22T16:31:18+0000",
            "content": "We faced the same issue for the configuring multiple spell checkers, FileBasedSolrSpellChecker specifically. Uploaded patch, tests awaited. ",
            "author": "Amrit Sarkar",
            "id": "comment-16409825"
        },
        {
            "date": "2018-03-23T15:36:28+0000",
            "content": "Test added, patch updated. Awaiting feedback. ",
            "author": "Amrit Sarkar",
            "id": "comment-16411582"
        },
        {
            "date": "2018-03-23T19:51:40+0000",
            "content": "Thanks Amrit for the patch and\u00a0 Abhishek for the analysis!\n\nIf I understand this correctly there are\u00a02 issues here:\n\nIssue1: If you add 2 spellcheckers and both are configured with\u00a0LuceneLevenshteinDistance then an exception will be thrown but it shouldn't. This is because the equals method has not been overriden. So this will fail.\u00a0\n\nThe test doesn't need to add a third spell checker and also should probably implement toString in LuceneLevenshteinDistance ?\n\ncssc = new ConjunctionSolrSpellChecker();\nlevenstein1 = new MockSolrSpellChecker(new LuceneLevenshteinDistance());\nlevenstein2 = new MockSolrSpellChecker(new LuceneLevenshteinDistance());\n\ncssc.addChecker(levenstein1);\ncssc.addChecker(levenstein2);\n\n\n\nIssue2:\u00a0This should be an init failure and not during a query.\u00a0Maybe\u00a0ConjunctionSolrSpellChecker could have a constructor that takes a\u00a0stringDistance and\u00a0accuracy and avoids all these checks? Let's spin that off in other Jira and discuss there.\n\n\u00a0\n\nAlso while we're working on this patch can we validate the\u00a0accuracy/queryAnalyzer checks works as expected and have a test for that?\n\n\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16411954"
        },
        {
            "date": "2018-03-23T21:32:45+0000",
            "content": "Varun Thacker: thank you for the feedback.\n\nThe test doesn't need to add a third spell checker and also should probably implement toString in LuceneLevenshteinDistance ?\n\nLike LevenshteinDistance. We want to prove here that A,A,B StringDistance type will not go with each other, where A and B can be arbitrary. If we are verifying LuceneLevenshteinDistance of one spellchecker should match with other, it shouldn't with non-LuceneLevenshteinDistance stringDistance.\n\nThis should be an init failure and not during a query. Maybe ConjunctionSolrSpellChecker could have a constructor that takes a stringDistance and accuracy and avoids all these checks? Let's spin that off in other Jira and discuss there.\n\nAlso while we're working on this patch can we validate the accuracy/queryAnalyzer checks works as expected and have a test for that?\n\nFor both these points we need to extend / improve / diversify the ConjunctionSolrSpellCheckerTest which has MockSpellCheckers now. We can discuss.\n\nP.S. forgot, thank Abhishek, you analysis solved the problem anyway. ",
            "author": "Amrit Sarkar",
            "id": "comment-16412114"
        },
        {
            "date": "2018-03-23T21:41:59+0000",
            "content": "Like\u00a0LevenshteinDistance. We want to prove here that A,A,B\u00a0StringDistance\u00a0type will not go with each other, where A and B can be arbitrary. If we are verifying LuceneLevenshteinDistance of one spellchecker should match with other, it shouldn't with non-LuceneLevenshteinDistance stringDistance.\n\u00a0\n\nBut today if we add two\u00a0spell checkers both with\u00a0LuceneLevenshteinDistance then\u00a0ConjunctionSolrSpellChecker will fail. That's the Jira title and the fix but the test adds a third spell checker which makes it confusing as to what are we really testing\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16412129"
        },
        {
            "date": "2018-03-23T21:46:41+0000",
            "content": "Although I am away until w/o April 2, I might be able to help later on with this.\u00a0 My memory here is ConjunctionSpellChecker\u00a0 initially only worked for adding the WordBreakSpellchecker in with DirectSpellChecker.\u00a0 At the time, I thought a nice enhancement would eventually allow you to combine any spell checkers you wanted, say if you had multiple fields on a \"qf\" parameter, and you wanted individual spellcheckers for each.\u00a0 I am not so sure such general usage is possible at this time. ",
            "author": "James Dyer",
            "id": "comment-16412135"
        },
        {
            "date": "2018-03-23T22:09:58+0000",
            "content": "But today if we add two spell checkers both with LuceneLevenshteinDistance then ConjunctionSolrSpellChecker will fail. That's the Jira title and the fix but the test adds a third spell checker which makes it confusing as to what are we really testing \n\nMakes sense. But since in the patch, we are overriding the equals method of a class, we should test both assertions, equal and not equal, that was the motivation behind the test.\n\n James Dyer if I remember correctly, Abhishek was working on something similar, I will try to track down the jira. ",
            "author": "Amrit Sarkar",
            "id": "comment-16412175"
        },
        {
            "date": "2018-03-29T15:30:04+0000",
            "content": "Final patch uploaded, with proper comments, ant precommit is not working on my system some random JARs not found. Tests added based on recommendation, ",
            "author": "Amrit Sarkar",
            "id": "comment-16419199"
        },
        {
            "date": "2018-04-05T19:43:49+0000",
            "content": "See my version of the patch.  This also adds an \"equals\" method to LuceneLevenshteinDistance and improves the test to check that known StringDistance's implement \"equals\" and behave properly with CSSC.  This is a bit less of a change than prior patches.  If this is deemed adequate, I can commit this soon. ",
            "author": "James Dyer",
            "id": "comment-16427495"
        },
        {
            "date": "2018-04-05T19:54:41+0000",
            "content": "James Dyer, thank you for the updated one. In the prior patches I have included the included you have with the latest, along with verifying Analyzer and Accuracy. I also validate the correctness of CSSC in SpellCheckCollatorTest. If you think we should open a new jira to add those correctness-tests, let me know I will do the same. ",
            "author": "Amrit Sarkar",
            "id": "comment-16427507"
        },
        {
            "date": "2018-04-05T20:57:58+0000",
            "content": "Amrit Sarkar, will just checking for the StringDistance properly solve your problem?  If so, I think we should limit to this.  Beyond this simple fix, we likely need to re-think how we configure CSSC as suggested by Varun Thacker.  CSSC was put here to allow you to use WordBreakSolrSpellChecker with another spell checker, and as WBSSC does not use its own Analyzer, these checks are moot.  But I can see the use of expanding this to let you have any combinations of spell checkers, its just not robust enough to handle that as it exists now. ",
            "author": "James Dyer",
            "id": "comment-16427580"
        },
        {
            "date": "2018-04-12T18:14:11+0000",
            "content": "will just checking for the StringDistance properly solve your problem?\nIt does and I agree with you. It is therefore another conversation I guess we can have on a seperate jira of extending CSSC capabilities. But will appreciate if at least we can get this into master, we can still work it out by using other distanceMeasure available. ",
            "author": "Amrit Sarkar",
            "id": "comment-16436080"
        },
        {
            "date": "2018-04-13T16:13:01+0000",
            "content": "Commit 12bd5f9448f70b9fdc450dac916dbd1a83edafbc in lucene-solr's branch refs/heads/master from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=12bd5f9 ]\n\nSOLR-10513: Implement .equals() for LuceneLevenshteinDistance. ",
            "author": "ASF subversion and git services",
            "id": "comment-16437504"
        },
        {
            "date": "2018-04-13T16:14:41+0000",
            "content": "Commit 6d771dcc9f0c6cbb33b1b5cf6c60f126713d9555 in lucene-solr's branch refs/heads/branch_7x from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6d771dc ]\n\nSOLR-10513: Implement .equals() for LuceneLevenshteinDistance. ",
            "author": "ASF subversion and git services",
            "id": "comment-16437511"
        },
        {
            "date": "2018-04-13T18:48:22+0000",
            "content": "Committed on master and branch_7x.  Thank you Amrit Sarkar and Abhishek Kumar Singh . ",
            "author": "James Dyer",
            "id": "comment-16437742"
        }
    ]
}