{
    "id": "LUCENE-3613",
    "title": "remove .codecs.DefaultXXXX and split into 3x/4x impls",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Currently there is a lot of shared codec implementations for things like\nfield infos, segment infos, stored fields, term vectors under the .codecs \npackage with the name Default*\n\nI think actually the .codecs package should be our abstract codec apis,\nand the implementations should be under the respective codecs.\n\nAlso, lots of these implementations are still 'shared' across the 3.x and 4.x\nformats, but shouldn't be: the 4.x versions should be \"clean\", and the 3.x \nversions should have all the backwards cruft.\n\nAdditionally, the \"PreFlexRW\" should be writing this stuff in 3.x format,\nbut today it does not (it writes a 3.x index repackaged in a 4.x \"container\").\n\nReally PreFlexRW needs to write indexes that are exactly like the 3.x format\n(if you opened them up in lucene 3.x you could read them!). When this works\nthen we know that codecs will actually work for our backwards compatibility needs\nand we know that we have good index backwards compatibility testing. \n\nFor starters we could just pick some 3.x version of lucene and wire PreFlexRW\nto it... in the future maybe the writer should take a version param so it\ncan actually simulate different minor versions.",
    "attachments": {
        "LUCENE-3613.patch": "https://issues.apache.org/jira/secure/attachment/12505910/LUCENE-3613.patch",
        "LUCENE-3613_vectors.patch": "https://issues.apache.org/jira/secure/attachment/12510895/LUCENE-3613_vectors.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-12-02T15:43:47+0000",
            "content": "I thought the fieldinfos would be a good one to start with here, but I think we are going to have to keep that DefaultXXX until 5.0\n\nThe problem is gaps in the field numbers, we have no easy way to simulate what we did in 3.x at write time,\nunless we make stuff even more complicated just for the sake of simulating it properly... annoying.\n\nSo ill leave this one be for now and try to get some of this other stuff cleaned up. ",
            "author": "Robert Muir",
            "id": "comment-13161694"
        },
        {
            "date": "2011-12-02T17:42:13+0000",
            "content": "Here's a first patch, moving this Default* stuff to Lucene40 codec. \n\nSome preflex stuff is obviously using Lucene40 impls still, but this just reflects reality. ",
            "author": "Robert Muir",
            "id": "comment-13161742"
        },
        {
            "date": "2012-01-17T20:28:52+0000",
            "content": "here's a pretty trivial patch splitting the 4.x and 3.x term vectors implementations.\n\nI didn't do much refactoring except to remove shared docstore code from the 4.x version.\n\nIf there are no objects I would like to commit this, then separately add getComparator() to TermVectorsWriter, use it to sort the term vectors hash, and fix our 3.x backwards compatibility so preflex actually handles the sort order change in term vectors. ",
            "author": "Robert Muir",
            "id": "comment-13187973"
        },
        {
            "date": "2012-01-17T20:46:52+0000",
            "content": "same patch: just with a bit more dead code removal: 3x reader doesn't need the raw methods used by bulk merging because PreFlexRW's vectors writer doesnt bulk merge (uses the default impl). ",
            "author": "Robert Muir",
            "id": "comment-13187988"
        }
    ]
}