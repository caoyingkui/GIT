{
    "id": "SOLR-3648",
    "title": "The \"/browse\" Solritas GUI does not work under SolrCloud - 500 error",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When run in a SolrCloud configuration the Velocity searchHandler responds to a /browse request with an HTTP error 500 and a stack trace indicating org.apache.solr.common.cloud.ZooKeeperException:\nZkSolrResourceLoader does not support getConfigDir()",
    "attachments": {
        "SOLR-3648.patch": "https://issues.apache.org/jira/secure/attachment/12537495/SOLR-3648.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13419522",
            "date": "2012-07-20T20:15:51+0000",
            "content": "Looks as if we in general need more interaction tests between SolrCloud and various other Solr features. I set it as Blocker for now, since it is probably a quick fix.. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13419557",
            "date": "2012-07-20T20:55:43+0000",
            "content": "There are a variety of extras that may not work with SolrCloud - I don't consider any of them blockers though. Initially, I would only expect core stuff to work well until others start digging into other components. I have never looked at how the UIMA update processor plays with SolrCloud as an example. Unless a lot of people start asking about something like that, it's just not high on my priority list.\n\nOf course, a lot of this could be done by anybody.\n\nI look at this the same as some search components not yet supporting distrib. Some things won't work with SolrCloud to begin with as well. I've focused my attention on the core features.\n\nCurrently, anything anywhere that tries to get the local fs directory will fail when in SolrCloud mode. In the cases that you can accomplish the same thing using zookeeper, another code path can be added. I've done this for a couple other things. In some cases it might not be so easy though.\n\nThat exception is telling you, in cloud mode, this feature is not currently support - perhaps we should tweak it to be more explicit about that.\n\nSince I'm not familiar with browse or what it tries to do internally, it's not high on my personal list, which is quite long. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13419572",
            "date": "2012-07-20T21:08:29+0000",
            "content": "In this case I assume the problem is in the VelocityResponseWriter. \n\n\n    VelocityEngine engine = new VelocityEngine();\n    String template_root = request.getParams().get(\"v.base_dir\");\n    File baseDir = new File(request.getCore().getResourceLoader().getConfigDir(), \"velocity\");\n    if (template_root != null) {\n      baseDir = new File(template_root);\n    }\n    engine.setProperty(RuntimeConstants.FILE_RESOURCE_LOADER_PATH, baseDir.getAbsolutePath());\n    engine.setProperty(\"params.resource.loader.instance\", new SolrParamResourceLoader(request));\n    SolrVelocityResourceLoader resourceLoader =\n        new SolrVelocityResourceLoader(request.getCore().getSolrConfig().getResourceLoader());\n    engine.setProperty(\"solr.resource.loader.instance\", resourceLoader);\n\n\n\nIt looks like its asking for the location of config files - they are in zookeeper - but this 'engine' wants a file path. Looks like some difficulties... "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13420154",
            "date": "2012-07-22T12:48:23+0000",
            "content": "Attaching first patch\n\n\n\tNot using Velocity's file.resource.loader\n\tParam v.base_dir now is always relative to \"conf\" and respected by SolrResourceLoader\n\tSolrVelocityResourceLoader first checks the given paths from v.base_dir, default \"velocity\" before checking default locations\n\tShowFileRequestHandler#showFromZooKeeper patched to remove \"/\" prefix from requested file so that e.g. /velocity/main.css resolves for ZK.\n\n\n\nStill missing are some unit tests. Also perhaps a way to load files/resources outside of current core's \"conf\" via ZK. But \"..\" is disallowed, so how would this work? Perhaps we need a way/syntax to address files from another config or folder than the current, a way that works across all ResourceLoaders... "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13420168",
            "date": "2012-07-22T13:18:50+0000",
            "content": "Would it be a good idea to let resource loaders support a simple URI syntax?\n\n\nmyfile.txt                           # relative to conf (whether in FS or ZK)\nfile:///var/myfile.txt               # absolute file from local file system\nhttp://localhost/myfile.txt          # absolute URL\nzk://solr/configs/otherconfig/myfile # absolute ZK ref, to e.g. reference a synonym dict residing in a shared config\n\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13421424",
            "date": "2012-07-24T13:57:48+0000",
            "content": "Jan - thanks for your efforts here.  I've carved out a couple of days (local Lucene/Solr Hackathon) later this week to work on Solr 4/trunk issues and will be looking into this one in more detail then.  \n\nAt first glance, I don't think we should lose the file resource loader completely, as it can be a very useful way to make sets of templates that are overridable.  But for a first pass to get this working with SolrCloud properly I'm ok with it.  Ultimately (and I'll aim to dig into this more myself soon) I think we should make the template resource loading settings pluggable/editable from configuration. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13421857",
            "date": "2012-07-24T23:08:37+0000",
            "content": "Erik, feel free to grab the current patch and polish it to your likings.\n\nA disadvantage is that we have very little test coverage. We could of course use something like Selenium... "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13424442",
            "date": "2012-07-28T22:17:46+0000",
            "content": "Adapted Jan's work with some tweaks.  Hard-coded \"velocity/\" in the custom resource loader (which is what gets used in SolrCloud mode).  Kept file resource loader in the mix when not in SolrCloud mode.\n\nAll is working now, so I'll commit and iterate on anything else remaining here. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13424446",
            "date": "2012-07-28T22:26:06+0000",
            "content": "Committed my patch to r1366775 (4_x) and r1366776 (trunk). "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13424448",
            "date": "2012-07-28T22:32:09+0000",
            "content": "TODO: update VelocityResponseWriter wiki (it needs a cleanup anyway) with pertinent details.\n\nWhat else do you think should be done here, Jan?  The one thing I didn't incorporate from your patch was the \"path\" parameter to the SolrVelocityResourceLoader (but rather hardcoded it), mainly for simplicity.  I don't think that multiple \"path\"'s capability should be done that way here.  Either your way or my way here is a change in how it was done before by requiring it look in a velocity/ sub\"directory\".  I doubt anyone has used it the way I was intending it to be used, so not a big deal to break it I don't think.  My thinking with that, thankfully quite useful in SolrCloud mode resource loader, was that plugins/contrib modules could ship their own Velocity templates in their JAR files.  Anyone using it that way will now have to put the templates in a velocity/ subdirectory inside the JAR. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13424457",
            "date": "2012-07-28T23:26:07+0000",
            "content": "I'm cool with that, thanks for finalizing! "
        }
    ]
}