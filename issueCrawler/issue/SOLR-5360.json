{
    "id": "SOLR-5360",
    "title": "Correctly routed realtime-get through CloudSolrServer",
    "details": {
        "affect_versions": "4.5",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Today you cannot do realtime-gets through CloudSolrServer, because it will not route the request to the correct replica (the leader-replica of the shard where the document to be fetched lives according to routing rules)\n\nDoing realtime-gets from clients are important in several scenarios. For example in common optimistic locking scenario. Pseudo-code:\n\npublic void createOrUpdateDoc(String id, ChangeInfo changes) {\n    outherLoop: while(true) {\n        try {\n            // Assume that document with id does not exist already\n            // Just try to store it as a new document\n            SolrInputDocument newDoc = createNewSolrInputDocument(id, changes); \n            sendUpdateRequestToSolr(newDoc);\n            return;\n        } catch (DocumentAlreadyExists e) {\n            // Ok the document already existed\n            while(true) {\n                // Fetch the existing document - realtime-get so that you do not\n                // have to wait until next commit to be able to fetch it, if the document\n                // was created/updated after last commit\n                SolrDocument fetchedDoc = realTimeGet(id);\n                // Merge the changes into the existing document\n                // Including copy of _version_ from fetchedDoc to updatedDoc\n                SolrInputDocument updatedDoc = merge(fetchedDoc, changes);\n                // Try to store the updated document\n                try {\n                    sendUpdateRequestToSolr(updatedDoc);\n                    return;\n                } catch (VersionConflict e) {\n                    // Someone updated the doc, between my fetch and update\n                    // Ignore, just take another round in the inner while(true)-loop\n                } catch (DocumentDoesNotExist e) {\n                    // Someone deleted the document since when I tried to\n                    // create it as a new document the first time\n                    // Will create it again by taking another round in outher\n                    // while(true)-loop\n                    continue outherLoop;\n                }\n            }\n        }\n    }\n}\n\n\nSorry if the code is not perfect, but I just wrote it directly here - I sure you get the idea.\n\nI would like to enable realtime-get through CloudSolrServer in order to be able to do scenarios as e.g. the one shown above",
    "attachments": {
        "SOLR-5360.patch": "https://issues.apache.org/jira/secure/attachment/12608930/SOLR-5360.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Per Steffensen",
            "id": "comment-13797913",
            "date": "2013-10-17T13:56:01+0000",
            "content": "Patch fitting on top of branch_4x revision 1533083 "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13797960",
            "date": "2013-10-17T14:38:30+0000",
            "content": "Today you cannot do realtime-gets through CloudSolrServer, because it will not route the request to the correct replica \n\nIt seems like \"cannot do realtime-gets\" is too strong?  There are plenty of use-cases where going to any active replica should be fine.\nIn your optimistic locking scenario, there should be no correctness issue, but just a performance/efficiency issue, right?\n\nThere are certainly use cases where hitting only the leader with RTG is needed, so having the option is good. "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13797989",
            "date": "2013-10-17T15:17:35+0000",
            "content": "It seems like \"cannot do realtime-gets\" is too strong? There are plenty of use-cases where going to any active replica should be fine.\n\nMy impression is that it does not work. Unlike updates and searches, realtime-gets are not re-routed on server-side, so you have to hit the correct shard directly from the client. Try running the provided test (CloudRealTimeGetTest) without my fix in CloudSolrServer.\n\nIn your optimistic locking scenario, there should be no correctness issue, but just a performance/efficiency issue, right?\n\nNo I do not think so, because of the no-re-routing issue. It would be nice to have re-routing on server-side, and then the fix I provided to CloudSolrServer will just be an optimization.\n\nSo unlike the direct-update-routing thingy made in CloudSolrServer in 4.5, this is not just an optimization - it is to make it work at all. If I am not mistaken.  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13797996",
            "date": "2013-10-17T15:21:21+0000",
            "content": "realtime-gets are not re-routed on server-side, \n\nAh - if that's not working then it should definitely be considered a bug.\nA RTG sent to a different shard should definitely route to the correct shard (just not necessarily the leader of that shard). "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13798293",
            "date": "2013-10-17T19:10:13+0000",
            "content": "Limitations\n\n\tOnly works for single-document (id parameter) RTGs - not multi-document RTGs (ids parameter)\n\tDoes not work for ImplicitDocRouters\n\n\n\njust not necessarily the leader of that shard\n\nBe careful serving RTGs from non-leaders. It can lead to inconsistency between version-conflicts from update-requests and what you get from you RTG on the same document. But probably not a big problem i practice. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13798308",
            "date": "2013-10-17T19:24:25+0000",
            "content": "Be careful serving RTGs from non-leaders. It can lead to inconsistency between version-conflicts from update-requests and what you get from you RTG on the same document. But probably not a big problem i practice.\n\nSeems like optimistic concurrency should still work, even if the RTG is served from a non-leader.  It's just that it's inefficient (could lead to many more retries than necessary). "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13798338",
            "date": "2013-10-17T19:56:37+0000",
            "content": "Seems like optimistic concurrency should still work, even if the RTG is served from a non-leader. It's just that it's inefficient (could lead to many more retries than necessary).\n\nBelieve you are right "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13800565",
            "date": "2013-10-21T11:49:54+0000",
            "content": "Will one of the committers please commit this one? If no, why not? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971232",
            "date": "2014-04-16T12:57:31+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Gavin",
            "id": "comment-16574130",
            "date": "2018-08-09T01:01:33+0000",
            "content": "Move issue from deprecated 'In  Progress' back to 'Open' "
        }
    ]
}