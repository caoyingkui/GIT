{
    "id": "LUCENE-8032",
    "title": "Test failed: RandomGeoShapeRelationshipTest.testRandomContains",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [
            "modules/spatial3d"
        ],
        "fix_versions": [
            "6.7",
            "7.2",
            "master (8.0)"
        ]
    },
    "description": "https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/20800/\n\nError Message:\ngeoAreaShape: GeoExactCircle: {planetmodel=PlanetModel.WGS84, center=[lat=-0.00871130560892533, lon=2.3029626482941588([X=-0.6692047265792528, Y=0.7445316825911176, Z=-0.008720939756154669])], radius=3.038428918538668(174.0891533827647), accuracy=2.111101444186927E-4} shape: GeoRectangle: {planetmodel=PlanetModel.WGS84, toplat=0.18851664435052304(10.801208089253723), bottomlat=-1.4896034997154073(-85.34799368160976), leftlon=-1.4970589804391838(-85.7751612613233), rightlon=1.346321571653886(77.13854392318753)} expected:<0> but was:<2>\n\nStack Trace:\njava.lang.AssertionError: geoAreaShape: GeoExactCircle: {planetmodel=PlanetModel.WGS84, center=[lat=-0.00871130560892533, lon=2.3029626482941588([X=-0.6692047265792528, Y=0.7445316825911176, Z=-0.008720939756154669])], radius=3.038428918538668(174.0891533827647), accuracy=2.111101444186927E-4}\nshape: GeoRectangle: {planetmodel=PlanetModel.WGS84, toplat=0.18851664435052304(10.801208089253723), bottomlat=-1.4896034997154073(-85.34799368160976), leftlon=-1.4970589804391838(-85.7751612613233), rightlon=1.346321571653886(77.13854392318753)} expected:<0> but was:<2>\n        at __randomizedtesting.SeedInfo.seed([87612C9805977C6F:B087E212A0C8DB25]:0)\n        at org.junit.Assert.fail(Assert.java:93)\n        at org.junit.Assert.failNotEquals(Assert.java:647)\n        at org.junit.Assert.assertEquals(Assert.java:128)\n        at org.junit.Assert.assertEquals(Assert.java:472)\n        at org.apache.lucene.spatial3d.geom.RandomGeoShapeRelationshipTest.testRandomContains(RandomGeoShapeRelationshipTest.java:225)",
    "attachments": {
        "LUCENE-8032.patch": "https://issues.apache.org/jira/secure/attachment/12895385/LUCENE-8032.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16235533",
            "date": "2017-11-02T10:55:21+0000",
            "content": "Attached is a test reproducing the issue.\n\nMy first assessment is that the problem is in the edge point of the GeoExactCircle that does not lie in the edge of the shape. We might need to recompute it differently to make sure it lies on the edge of the circle. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16235557",
            "date": "2017-11-02T11:09:07+0000",
            "content": "Thanks, Ignacio Vera, I'll try to do some analysis as time permits later today. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16235696",
            "date": "2017-11-02T13:10:53+0000",
            "content": "My first assessment is wrong. I think the problem is the radius of the circle is pretty big (~174 degrees) and the calculation of the edges for the circle might not be correct in such circumstances. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16235737",
            "date": "2017-11-02T13:41:54+0000",
            "content": "Hi Ignacio Vera, I changed the code so that it picks either northPoint or eastPoint as the edge point based on the characteristics of the planetmodel.  This didn't help, so I'm going to have to dig deeper. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16235743",
            "date": "2017-11-02T13:44:07+0000",
            "content": "Ignacio Vera, I think you are right, because any shape that is described by intersecting planes that span more than 180 degrees is problematic and needs special consideration.\n\nI think the best thing to do is limit the span via an argument check, for now.  Exact circles that are that large are going to have issues, no question. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16235837",
            "date": "2017-11-02T14:43:58+0000",
            "content": "Commit 154edb8e3c5ddf8336b2a70db03ba1be9c425642 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=154edb8 ]\n\nLUCENE-8032: Limit size of exact circle so that approximation planes don't intersect at angles greater than 180 degrees. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16235839",
            "date": "2017-11-02T14:44:49+0000",
            "content": "Commit 2867a4eee02e6bf6cb9257b208dd30c23649810d in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2867a4e ]\n\nLUCENE-8032: Limit size of exact circle so that approximation planes don't intersect at angles greater than 180 degrees. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16235840",
            "date": "2017-11-02T14:45:38+0000",
            "content": "Commit d3f0512baf5cb7a5fb3dc4173d655337bfc3309b in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d3f0512 ]\n\nLUCENE-8032: Limit size of exact circle so that approximation planes don't intersect at angles greater than 180 degrees. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16235881",
            "date": "2017-11-02T15:12:29+0000",
            "content": "Thanks Karl Wright,\n\nWe were in fact building a concave polygon which needs other type of treatment. \n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16236042",
            "date": "2017-11-02T16:16:39+0000",
            "content": "Ignacio Vera, the factory method is called in your test:\n\n\npointList.add(new GeoPoint(PlanetModel.WGS84, 0.06776123345311073, -0.7752474170087745));\npointList.add(new GeoPoint(PlanetModel.WGS84, 0.11666112095362069,-0.8228149925456804));\npointList.add(new GeoPoint(PlanetModel.WGS84, 0.08767696070608244, -0.9145966780640845));\nGeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, pointList);\n\n\n\nThis should construct a GeoConcavePolygon if warranted, no? ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16237157",
            "date": "2017-11-03T06:30:04+0000",
            "content": "yes, the factory will create the polygon that is needed.\n\nYou might have got confused with my latest comment. I understand that GeoExactCircle is creating a polygon with n sides (n depending on the accuracy). Therefore when radio is bigger that 90 degrees we are in fact building a concave polygon and that is the reason logic fails.\n\nJust an afterthought: When accuracy is high, the number of edges can be quite big, maybe the logic for complex polygons is more adequate.\n\nAnyway, I am happy with current limitation but if there is interest in this kind of shape there might be room for improvement.\n\nThanks!\n\n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16237208",
            "date": "2017-11-03T07:34:30+0000",
            "content": "Thanks, Ignacio Vera, for the clarification.  I was trying to be sure I wasn't missing something important.\n\nYes, the problem is that the \"polygon\" would be concave, and that would make it impossible to properly represent with the same logic.\n\nAs for your other suggestion: the planes used to construct the exact circle approximation do not go through the center of the earth.  Thus, the shape is not a true polygon, as Geo3D describes it.  The choice of planes allows far fewer to be used than you would need if you implemented the exact circle with true polygon (great circle) edges.  The first thing I did was figure out how many planes would be needed for a good approximation, and found that number to be acceptably low.  The fact that planes are not true polygon edges also means that the complex crossing-counting logic found in ComplexPolygon would not work. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16237412",
            "date": "2017-11-03T10:34:13+0000",
            "content": "Upps you are right, edges are not great circles.\n\nThanks!  ",
            "author": "Ignacio Vera"
        }
    ]
}