{
    "id": "SOLR-8029",
    "title": "Modernize and standardize Solr APIs",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "6.0",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Solr APIs have organically evolved and they are sometimes inconsistent with each other or not in sync with the widely followed conventions of HTTP protocol. Trying to make incremental changes to make them modern is like applying band-aid. So, we have done a complete rethink of what the APIs should be. The most notable aspects of the API are as follows:\nThe new set of APIs will be placed under a new path /solr2. The legacy APIs will continue to work under the /solr path as they used to and they will be eventually deprecated.\nThere are 4 types of requests in the new API \n\n\t/v2/<collection-name>/* : Hit a collection directly or manage collections/shards/replicas\n\t/v2/<core>/* : Hit a core directly or manage cores\n\t/v2/cluster/* : Operations on cluster not pertaining to any collection or core. e.g: security, overseer ops etc\n\n\n\n\nThis will be released as part of a major release. Check the link given below for the full specification.  Your comments are welcome\nSolr API version 2 Specification",
    "attachments": {
        "SOLR-8029.patch": "https://issues.apache.org/jira/secure/attachment/12781562/SOLR-8029.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-10T12:57:25+0000",
            "author": "Shawn Heisey",
            "content": "I have no real wish to derail your plan, but I wondered about a possible wrinkle:  In order to have a /solr2 URL work, doesn't that require a completely separate context, and therefore a separate application from Jetty's point of view?  If this is true, are there any problems in getting the two to work together?  They would be in the same JVM, but for general security concerns I would hope that the servlet API keeps them pretty separate.\n\nSomething to think about ... I wonder if maybe paths under /CONTEXT/api (where CONTEXT is defined in the context fragment for the container and is normally \"solr\") would be a better way to separate this out.  At that point, you could put the new angular UI on /CONTEXT/ui.  Having separate and clear URLs for ui and api would make it a lot easier for a user to know that they can't put a ui URL into a program that expects to talk to the api. ",
            "id": "comment-14738705"
        },
        {
            "date": "2015-09-10T13:02:30+0000",
            "author": "Noble Paul",
            "content": "Shawn Heisey We could deploy solr at the root context / that means /solr and /solr2 will become paths controlled by Solr. \n\nThe UI could live at a separate path however  ",
            "id": "comment-14738711"
        },
        {
            "date": "2015-09-10T14:20:13+0000",
            "author": "Shawn Heisey",
            "content": "The path \"/solr2\" rubs me the wrong way.  It implies to a user that we didn't think it through originally, had to change it, and just tacked on a number.  We'll be stuck with it forever to avoid future compatibility problems.  Users may start to wonder when version 3 will come out and force them to change all their software again.  Using something like /solr/api, with all the old paths working until explicitly disabled in the config or the next major version comes out, will look like a well-planned and permanent change to users.  If we use \"/solr2\" it might look like we are quickly fixing a major oops with a temporary URL path that will disappear in a future version.\n\nI don't like the idea of deploying the context at the root, but it's not a BAD solution if we do it right.  If we do that, the URL path should remain configurable, so a user can use /fahrbot if they want to.  One problem with this is that suddenly it becomes Solr's responsibility to make sure that path works correctly throughout the application.  Jetty has had a very long time to work out any bugs with custom context paths ... we would be starting from scratch.\n\nI know that we might be starting from scratch with supporting a configurable path when we shed the webapp and become a standalone application, so that part of my thoughts might be moot. ",
            "id": "comment-14738807"
        },
        {
            "date": "2015-09-10T14:24:52+0000",
            "author": "Upayavira",
            "content": "If we are going to go this way, and it will require a lot of consensus for us to do so, we should not be thinking about implementation issues right now.\n\nI'd ask why Solr2? There never was a solr2. What might make more sense would be http://$host:8983/v2/blah as that would allow us to do future iterations on the API should we decide to (or even http://$host:8983/solr/v2/blah) ",
            "id": "comment-14738818"
        },
        {
            "date": "2015-09-10T14:27:37+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "If we are going to have this released for 6.0, can we not use /solr context for the new API, but something like /solr-old (or similar) for backcompat reasons? ",
            "id": "comment-14738826"
        },
        {
            "date": "2015-09-10T14:31:18+0000",
            "author": "Noble Paul",
            "content": "if we use \"/solr2\" it might look like we are quickly fixing a major oops with a temporary URL path that will disappear in a future version.\n\nYes, we are doing a quick fix. Because anything else will also will look like a quick fix and api becomes a reserved name which cannot conflict with  a collection name. We should not make the new API look like  a second class citizen where I need to append an extra path to access that like solr/api/_cluster\n\nEventually , when we deprecate the legacy API, we should be able to get rid of the prefix altogether. \n\nAt this point let us not discuss the \"how\" part. Let's define what an ideal solution should look like and fix that first.  ",
            "id": "comment-14738831"
        },
        {
            "date": "2015-09-10T14:33:07+0000",
            "author": "Noble Paul",
            "content": "I know that we might be starting from scratch with supporting a configurable path when we shed the webapp and become a standalone application, so that part of my thoughts might be moot.\n\nDid we not already get rid of the concept that \"solr is a webapp\" ",
            "id": "comment-14738833"
        },
        {
            "date": "2015-09-10T14:35:55+0000",
            "author": "Steve Molloy",
            "content": "Having version in URL is pretty common and makes sense to me. The old API could be made into v1, pointing the root /solr to v2 by default, with option to configure it to v1 for people needing to support backward compatibility with absolutely no impact on their existing client applications. ",
            "id": "comment-14738840"
        },
        {
            "date": "2015-09-10T14:41:00+0000",
            "author": "Noble Paul",
            "content": "The old API could be made into v1, pointing the root /solr to v2 by default, with option to configure it to v1 for people needing to support backward compatibility with absolutely no impact on their existing client applications.\n\nChanging stuff abruptly will infuriate users. All the existing apps should work when they move to new Solr. If we fail to do that we will hamper adoption. We should give users a painless migration path. \n ",
            "id": "comment-14738849"
        },
        {
            "date": "2015-09-10T14:44:53+0000",
            "author": "Upayavira",
            "content": "I don't think that's what Steve means.\n\nhttp://HOST:8983/v1/blah redirects to http://HOST:8983/solr/blah\nhttp://HOST:8983/v2/blah does new clever things\nhttp://HOST:8983/solr/blah does what it ever did\n\nDecent, versioned API, and backwards compatibility. ",
            "id": "comment-14738852"
        },
        {
            "date": "2015-09-10T14:46:55+0000",
            "author": "Steve Molloy",
            "content": "Changing stuff abruptly will infuriate users. All the existing apps should work when they move to new Solr. If we fail to do that we will hamper adoption. We should give users a painless migration path.\n\nAgreed, this is why I propose to have the current API URL point to the URL with /v1 or /v2 in it. Making the choice of default version configurable would allow people to use the API they want as they were using it in previous version, then start migrating slowly, at their own pace, to the new version by using /v2 URl in client code using new API. Once everything is updated, they could change default version configured and not have to change their client code. With this approach, the same would apply if in some years we decide to have a v3 API for whatever reason. ",
            "id": "comment-14738857"
        },
        {
            "date": "2015-09-10T14:48:57+0000",
            "author": "Noble Paul",
            "content": "Upayavira So what you are saying is instead of the the prefix /solr2 use the /v2 prefix.  ",
            "id": "comment-14738862"
        },
        {
            "date": "2015-09-10T14:54:47+0000",
            "author": "Noble Paul",
            "content": "Agreed, this is why I propose to have the current API URL point to the URL with /v1 or /v2 in it. \n\n need more clarity\n\nI make the following assumptions in the new design.\n\n\tEvery path that exists today should work exactly same in 6.0\n\tUsing the new API should not have extra long uri which may make it look like a second class citizen\n\n ",
            "id": "comment-14738867"
        },
        {
            "date": "2015-09-10T14:58:02+0000",
            "author": "Steve Molloy",
            "content": "Yes, make the current version:\n/v1/\n{api}\n\nMake the new version:\n/v2/{api}\n\nAnd have /solr point to a configurable version, probably /v1 by default at first:\n/solr/collection/select => /v1/collection/select\n/v1/collection/select => Same as current /solr/collection/select\n/v2/collection/select => New API for collection operations.\n\nThis way, existing clients get the existing behaviour. Client that wish to migrate progressively can use both /solr pointing to /v1 and /v2 in new calls. Completely new clients can either use /v2 or configure Solr so /solr points to /v2 and use that, meaning:\n\n/solr/collection/select => /v2/collection/select\n/v1/collection/select => current API\n/v2/collection/select => new API. ",
            "id": "comment-14738875"
        },
        {
            "date": "2015-09-10T15:05:53+0000",
            "author": "Noble Paul",
            "content": "not a bad idea.  ",
            "id": "comment-14738882"
        },
        {
            "date": "2015-09-10T15:15:12+0000",
            "author": "Shawn Heisey",
            "content": "I had not considered the idea of a conflict with a collection or core named api.  That is a potential problem.\n\nForgetting about implementation for the discussion is a good idea, but I think the URL path is important even if we don't consider how we're going to do it.  I think that stepping away from the default /solr prefix, especially if that is a temporary change that we then change back in next major version's example, is going really irritate users.  I believe that if we are going to change the URL path, it should remain under /solr (or whatever the user chose for the context), and be a permanent move.\n\nI wonder if you could have the implementation work in such a way that /solr/api/select (and friends) would still work for a collection named api, and /solr/api/api/select (or however we arrange the lower bits of a new structure) would ALSO work.  We could also declare (and document) that if the new APIs are enabled, a core named api will no longer be accessible.\n\n/solr/v2 is another idea, but I do not want anyone to get tied to a specific version in the base URL, and there is still the possibility that a user has a core with a conflicting name.\n\nDid we not already get rid of the concept that \"solr is a webapp\"\n\nWe got rid of the concept from the user perspective, but it is still a crucial detail of our implementation.  We have talked about changing that, but it is our reality for the moment, and once we get to the implementation, it will have to be factored in.\n\nI don't want anyone to think that any of my ideas or criticisms are an indication of an automatic -1 vote.  I think the general idea here is VERY good, but that the proposed plan could be improved.  If everyone disagrees with me, then I will adapt ... and try not to be mean if my concerns become real. ",
            "id": "comment-14738893"
        },
        {
            "date": "2015-09-10T15:23:48+0000",
            "author": "Noble Paul",
            "content": "solr/v2 is another idea, but I do not want anyone to get tied to a specific version in the base URL, and there is still the possibility that a user has a core with a conflicting name.\n\nSteve Molloy suggests that we have only /v2 or /v1 prefix instead of the /solr prefix. However /solr prefix would work as if it is equivalent to /v1. Having /v1 or /v2 prefix is extremely common among API designers now. I give a +1 for Steve Molloy 's suggestion . We don't need to tell the user that he is using solr by using it in every API call ",
            "id": "comment-14738907"
        },
        {
            "date": "2015-09-10T15:48:23+0000",
            "author": "Shawn Heisey",
            "content": "I like my idea better, but /v2 would work.  I think users aren't going to like it, and I think the only way you can make it really work is to deploy at the root context.  The root context means it will be up to solr to make sure that /solr, /v1, and /v2 are all functioning correctly, and I have concerns that we will have a release that's less than stable because of it.\n\nI've voiced my concerns and elaborated at length on my own ideas, so I'm done for now.  Good luck with implementation, and I look forward to seeing it! ",
            "id": "comment-14738960"
        },
        {
            "date": "2015-09-10T16:33:11+0000",
            "author": "Upayavira",
            "content": "I note that there's lot more to this proposal than just the URL - we've missed a heap of content in your proposal document. Can we break it out into JIRAs so we can explore each part?\n\ne.g. you suggest a GET to /solr2/<collection>/query would execute a search. I'd suggest that the 'query' is unneeded. The point is that, from a REST point of view, the <collection> is the resource we are interacting with, not a 'query'. I'd love to see a venue for discussing these details in, well, detail. ",
            "id": "comment-14739065"
        },
        {
            "date": "2015-09-10T17:12:37+0000",
            "author": "Noble Paul",
            "content": "we've missed a heap of content in your proposal document. Can we break it out into JIRAs so we can explore each part?\n\nI'll eventually create more sub tasks for implementing specific things. But, if I do it now you would not get the complete picture as the doc provides.\n\nI'd suggest that the 'query' is unneeded.\n\nI beg to differ. it will be rather awkward to make a request like /v2/gettingstarted?q=fieldname:val . the <collection> means a lot of things. not just the contents of the index ",
            "id": "comment-14739160"
        },
        {
            "date": "2015-09-10T19:05:50+0000",
            "author": "Upayavira",
            "content": "You are suggesting we write a new RESTful API, then suggesting something that isn't restful. It doesn't make sense to me. A collection doesn't have a property called a 'query'. If you said /<collection>/index?q=:, that might make more sense, because we are querying a collection's index, but a query is more of an action than a resource. ",
            "id": "comment-14739381"
        },
        {
            "date": "2015-09-10T21:14:42+0000",
            "author": "Upayavira",
            "content": "In case I sound overly negative - I'm not wanting to. This is an interesting proposal that I could support - any criticisms I have are details aimed at making it all stronger, not trying to pull it down. ",
            "id": "comment-14739605"
        },
        {
            "date": "2015-09-11T03:55:30+0000",
            "author": "Noble Paul",
            "content": "You are suggesting we write a new RESTful API\n\nNowhere in the document do we suggest that we are making a RESTful API. We don't wan't to conform to any external standard where purists of the standards come and tell us what to do and how to do things. We are making a standard for Solr which is easy for Solr users.\n\n\n ",
            "id": "comment-14740121"
        },
        {
            "date": "2015-09-11T14:40:10+0000",
            "author": "Upayavira",
            "content": "Noble, can you please state some of the rationale behind this proposed API - not in terms of why it is needed, but rather why you have structured it how you have. Why are you using HOCON, which is a largely unknown (to me at least) format over the more widely used JSON? If you are going to want to deviate from REST, which is also a widely implemented standard, I'd like to hear why.  ",
            "id": "comment-14740916"
        },
        {
            "date": "2015-09-11T14:52:23+0000",
            "author": "Noble Paul",
            "content": "Hocon is a super set of json.  Json is valid hocon.  The advantage is that it is not at all strict.   ",
            "id": "comment-14740934"
        },
        {
            "date": "2015-09-11T15:29:16+0000",
            "author": "Walter Underwood",
            "content": "HOCON looks like a poor choice for a wire format. It is a modified, incompatible JSON designed for human readability.\n\nQuoting the spec:\n\n\"HOCON is significantly harder to specify and to parse than JSON. Think of it as moving the work from the person maintaining the config file to the computer program.\"\n\nhttps://github.com/typesafehub/config/blob/master/HOCON.md\n\nIf we want a new wire format, we should use something faster, like Protobuf or Avro. ",
            "id": "comment-14740979"
        },
        {
            "date": "2015-09-11T15:41:49+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "I think the wire format will continue to remain Javabin and Smile; used between the SolrJ clients and the server.\nFor the purpose of API requests, both JSON and HOCON seem decent choices to me. ",
            "id": "comment-14740994"
        },
        {
            "date": "2015-09-11T15:42:46+0000",
            "author": "Shawn Heisey",
            "content": "I don't have a lot to say about hocon, except that strict json is likely a lot better tested.  I've got no experience with it and haven't looked at the spec.\n\nAs for response formats ... the design doc specifically says there will only be json.  I predict that javabin will be added back in very quickly for SolrJ.  I won't personally miss XML, but some might. ",
            "id": "comment-14740998"
        },
        {
            "date": "2015-09-11T16:28:47+0000",
            "author": "Mark Miller",
            "content": "wolfgang hoschek chose HOCON as the config file format for Kite Morphlines. He might have some insights to share around HOCON vs JSON in this context as well. ",
            "id": "comment-14741086"
        },
        {
            "date": "2015-09-11T18:00:24+0000",
            "author": "Noble Paul",
            "content": "The response will continue to support all the existing formats and nothing new. However,  hocon will be supported for input commands such as create collection.  The objective is to be more forgiving to user typos. Clients such as SolrJ will use json because there will not be any typos and it is easier to produce json than hocon ",
            "id": "comment-14741253"
        },
        {
            "date": "2015-09-13T01:51:27+0000",
            "author": "Ramkumar Aiyengar",
            "content": "The introspect API probably requires this anyway, but all API should be able to statically declare their schema in some format. This would make it possible to plug in encodings which require a schema, like Avro. ",
            "id": "comment-14742298"
        },
        {
            "date": "2015-09-13T05:43:49+0000",
            "author": "Noble Paul",
            "content": "Ramkumar Aiyengar Can you make this clearer ?\n\nThe introspect API is a like  a javadocs for the APIs, which gives you the details of the parameters/constraints/description of each API. I haven't thought about it as a means to define the response. The response will be driven by the wt param  ",
            "id": "comment-14742357"
        },
        {
            "date": "2015-09-15T10:35:05+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Right, my point was to see if we can use it beyond just being a doc, and use it to format the response. The wt param will still drive the encoding/decoding (i.e. json/xml/hocon whatever..), but instead of all APIs just populating and serializing a generic NamedList, it would help to make sure what the APIs return conform to the doc we make available. That way, something like Avro for example, can use the doc as configuration to encode/decode it's data. ",
            "id": "comment-14745220"
        },
        {
            "date": "2015-09-15T10:38:57+0000",
            "author": "Noble Paul",
            "content": "Do you mean ,the introspect API returns the schema of the output? ",
            "id": "comment-14745225"
        },
        {
            "date": "2015-09-15T13:28:59+0000",
            "author": "Steve Molloy",
            "content": "The wt param will still drive the encoding/decoding\n\nIs there any plans for supporting HTTP Accept header at some point for setting response type? ",
            "id": "comment-14745451"
        },
        {
            "date": "2015-09-15T20:21:25+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Do you mean ,the introspect API returns the schema of the output?\n\nSchema for both the input and output, yes. ",
            "id": "comment-14746087"
        },
        {
            "date": "2015-10-21T23:28:34+0000",
            "author": "Jason Gerlowski",
            "content": "The API Spec has a number of TODO comments.  Are those the main things you're taking input on at this point, or are you looking for feedback on all aspects of the API? ",
            "id": "comment-14968165"
        },
        {
            "date": "2015-10-22T01:33:18+0000",
            "author": "Noble Paul",
            "content": "No. In open to suggestions on anything.not just the todo. ",
            "id": "comment-14968339"
        },
        {
            "date": "2015-10-22T03:20:24+0000",
            "author": "Jason Gerlowski",
            "content": "Great, a few quick notes from an initial once-over:\n\n1.) Is there a reason for the \"_\" prefix in \"/v2/_node\" and \"/v2/_cluster\"?  I might be missing some convention here, but it struck me as odd.  Is there a reason to not use \"/v2/node\" and \"/v2/cluster\" instead?\n\n2.) Should the Collection APIs have an explicit \"_collection\" path component (i.e. /v2/_collection/<collection-name>).  It seems more consistent with the other two main chunks of the API.  The node APIs have \"_node\" called out explicitly in their base path.  The cluster APIs have \"_cluster\" in their base path as well.  Why not do the same for the Collection APIs? ",
            "id": "comment-14968436"
        },
        {
            "date": "2015-11-03T16:11:39+0000",
            "author": "Jeffrey Stylos",
            "content": "Hi, IBM employee here \u2014 we use Solr in our Retrieve and Rank service and are excited about a Solr v2 API to improve the usability of our service.\n\nSome thoughts on the proposed changes:\n\n/v2/ is more standard than /solr2/ (looks like others agree)\n\nHaving a path parameter (/v2/[collection]) at the top-level makes it difficult to add new resources or other paths. A more REST-standard approach would be preface path parameters with a static path value (/v2/collections/[collection]). This would also allow the removal of the _ preface on _node and _cluster.\n\nThere is some inconsistency around naming style, with a mixture of snake_case, hyphen-case, camelCase, unseparatedtext, and abbreviations. A v2 API would be a good opportunity to make all of the identifiers use a consistent naming convention.\n\nOn naming, we\u2019ve found in API usability studies that acronyms and abbreviations (like \u201cwt\u201d) make APIs harder to understand.\n\nHOCON is an interesting suggestion, although I have some concerns about it from a usability standpoint. In our API usability studies one of the most common mistakes using JSON has been attempting to use single quotes instead of double quotes \u2014 HOCON doesn\u2019t fix this, and an fact can make things worse by resulting in unexpected behavior ( https://github.com/akka/akka-meta/issues/2 ). By attempting to be more permissive in its parsing, HOCON makes it more difficult for a parser to generate helpful error messages (such as in the common single-quote scenario). Breaking support for existing pretty printers and syntax highlighters is also a concern.\n\nOne suggestion for an additional feature: a version date parameter, ala FourSquare and Stripe, (?version=2015-11-03) would offer greater flexibility in being able to evolve the API without breaking users.\n\nAnd finally, a v2 would be a good time to question the core object model and abstractions of the service.\n\n(For reference, the API guidelines we use for IBM Watson APIs are public at: https://github.com/watson-developer-cloud/api-guidelines.) ",
            "id": "comment-14987532"
        },
        {
            "date": "2015-11-03T16:20:09+0000",
            "author": "Mark Miller",
            "content": "Should the Collection APIs have an explicit \"_collection\" path component\n\nIt really should. Though the leading underscore stuff looks silly to me. Can we throw in ` too? \n\nNot having something like this now for cores or collections was a big mistake IMO. ",
            "id": "comment-14987545"
        },
        {
            "date": "2015-11-03T16:32:47+0000",
            "author": "Noble Paul",
            "content": "A more REST-standard approach would be preface path parameters with a static path value (/v2/collections/[collection]).\n\nThe argument against this suggestion was that the most common operation on solr are read and update . These are collection specific. The cluster and node specific operations are rare . So the idea was to make the commonly used operations shorter\n\neg\n\n/v2/mycollection/update\n/v2/mycollection/select\n\ninstead of \n\n/v2/collections/mycollection/update\n/v2/collections/mycollection/select\n\nIf we are willing to accept that _node and _cluster are special keywords , then we make the common operations simple which is performed 100's of times every second.  \n\nat the top-level makes it difficult to add new resources or other paths\n\nAll new resources will be added under the /v2/_cluster and /v2/_node paths \n\n ",
            "id": "comment-14987566"
        },
        {
            "date": "2015-11-03T16:38:51+0000",
            "author": "Mark Miller",
            "content": "To me it's the same silly shortcut arguments that got us the current API mess. If we are redoing it, why make the exact same mistakes?\n\nIf we are willing to accept that _node and _cluster are special keywords\n\nAnd if we are willing to accept that future keywords will keep coming and so we are using this prefix '_' as an alternative to the widely accepted URL scoping that we should be doing. ",
            "id": "comment-14987577"
        },
        {
            "date": "2015-11-03T16:43:43+0000",
            "author": "Mark Miller",
            "content": "All new resources will be added under the /v2/_cluster and /v2/_node paths\n\nIt's great that someone thinks that now, but it really won't have any meaning to Joe Committer next year. And if it's required over the long haul, it's a real weakness to the design. We have a much more flexible, widely used and understood alternative. ",
            "id": "comment-14987585"
        },
        {
            "date": "2015-11-03T16:54:11+0000",
            "author": "Noble Paul",
            "content": "The argument was that all operations fall under three categories\n\n\n\tcluster specific\n\tnode specific\n\tcollection specific\n\n\n\nIf a new resource comes up it has to be one of these so it will be a sub path under these  ",
            "id": "comment-14987600"
        },
        {
            "date": "2015-11-03T17:10:15+0000",
            "author": "Jason Gerlowski",
            "content": "\"The argument against this suggestion was that the most common operation on solr are read and update . These are collection specific. The cluster and node specific operations are rare . So the idea was to make the commonly used operations shorter\"\n\nWhat does making the commonly used paths shorter actually get us?\n\nAre we trying to keep things shorter to increase readability?  If so, I'd argue that it would have the opposite effect.  I can only really speak for myself, but I think that the consistency gained by having a static path value (collections, node, cluster) used everywhere outweighs any negatives of having to read an extra path segment. ",
            "id": "comment-14987631"
        },
        {
            "date": "2015-11-03T17:18:13+0000",
            "author": "Noble Paul",
            "content": "Are we trying to keep things shorter to increase readability?\n\nYes. readability as well as writability\n I'm not strongly for or against for either. I would like to get others's opinions on this ",
            "id": "comment-14987651"
        },
        {
            "date": "2015-11-03T18:12:21+0000",
            "author": "Steve Molloy",
            "content": "I'm +1 for dedicated paths for each resource, in other words, longer paths with collections in it and no special keywords. I personally agree that not having keywords will make things easier to read then having shorter URLs with special keywords. ",
            "id": "comment-14987762"
        },
        {
            "date": "2015-11-03T19:01:30+0000",
            "author": "Alexandre Rafalovitch",
            "content": "+1 for consistency (/collection, /cluster) and for things that will make 3rd party tools play easier with Solr. \n\nIntegration story is important, so sticking to more standard REST guidelines would be more beneficial in long run. ",
            "id": "comment-14987866"
        },
        {
            "date": "2015-11-03T19:09:24+0000",
            "author": "Shawn Heisey",
            "content": "Digging around in my pocket for a couple more pennies...\n\nConsistency is probably the number one goal when an API is redesigned.  There better be a REALLY good reason for any deviations that result in special cases, special syntax, etc.  I think that /select and /update should NOT have special shorter endpoints, and that identifiers should not have leading underscores (or any other kind of unusual marking) unless they really are some kind of special case that will only be used in highly unusual situations.\n\nRelated tangent: Using \"/select\" as the default query handler has always seemed like a strange choice to me.  Is this an opportunity to rename the default query handler to /query for the v2 api?\n\nGetting more detailed: It is probably a good idea to have a specific list of legal values for the first URL path component after /v2 ... so only a list like this is valid:\n\n\n/v2/collection\n/v2/node\n/v2/cluster\n/v2/core (might need this, if the implementation needs separation from collection)\n\n\n\nStandards for the next path component might be different for cluster than they are for collection/node/core ... unless we implement a further abstraction where SolrCloud can be a cluster of clusters. ",
            "id": "comment-14987885"
        },
        {
            "date": "2015-11-03T19:17:41+0000",
            "author": "Jeffrey Stylos",
            "content": "One note: for user-created resources, the REST convention is to use the name of the resource in plural `/v2/collections/[collection]` as opposed to `/v2/collection/[collection]`. ",
            "id": "comment-14987907"
        },
        {
            "date": "2015-11-04T11:41:20+0000",
            "author": "Noble Paul",
            "content": "In our API usability studies one of the most common mistakes using JSON has been attempting to use single quotes instead of double quotes\n\nIn Solr you are free to use single quotes or double quotes or no quotes at all. So that does not need hocon\n\n\nHOCON will be an optional syntax and default will be JSON (not strict JSON)\n\nOne suggestion for an additional feature: a version date parameter, ala FourSquare and Stripe, \n\nSolr is a software not a service . SO , I don't know if date makes any sense. We release stuff in parallel. For instance , a bug fix version of 5.3 can be released after 6.0 release. In that case what is the relevance of the date\n\nAnd finally, a v2 would be a good time to question the core object model and abstractions of the service.\n\nThanks, I shall go through the doc  ",
            "id": "comment-14989405"
        },
        {
            "date": "2015-11-05T20:47:46+0000",
            "author": "Jeffrey Stylos",
            "content": "Good point about version dates being more complicated given parallel releases. If version dates don't work directly, I wonder if there's another way to support for minor but breaking API changes that would work better for Solr. Is it setting a minor API version, like ?version=2.004? It would be nice to have a plan for how to introduce small breaking changes apart from going to a new major version. ",
            "id": "comment-14992444"
        },
        {
            "date": "2015-11-16T11:56:57+0000",
            "author": "Noble Paul",
            "content": "OK +1 to what Shawn Heisey , Mark Miller and  Jeffrey Stylos have recommended\n\n/v2/collections (I am using plural here. not the singular 'collection' )\n/v2/node\n/v2/cluster\n\n\n\nBut the /v2/core is not there because I assume it is to house the core admin API\n\nIt should be under /v2/node/cores\n\nI also wish to know where to put the admin UI\n\nI propose it should be at the same place /admin   ",
            "id": "comment-15006572"
        },
        {
            "date": "2015-11-16T12:37:07+0000",
            "author": "Upayavira",
            "content": "Regarding the admin UI, there's two parts:\n1. where is the initial HTML loaded from?\n2. where are the CSS/JS/etc resources loaded from?\n\nCurrently, for #1 it is just at /solr/. A request to / bounces you to /solr/. This could bounce you to /solr/admin/ if preferred.\n\nWhere the CSS/JS/etc is an implementation detail and I'd happily move it (trivially) under a directory such as /admin/, but whilst v1 API is still around we just need to make sure that doesn't conflict with any other /admin APIs (I doubt it would). ",
            "id": "comment-15006609"
        },
        {
            "date": "2015-11-16T13:39:32+0000",
            "author": "Noble Paul",
            "content": "why don't we move all static stuff to a dub directory  say /solr/admin/js and /solr/admin/css ? So, we don't need to take up any more root level namespaces ",
            "id": "comment-15006665"
        },
        {
            "date": "2015-11-16T13:46:29+0000",
            "author": "Upayavira",
            "content": "Isn't that what I just proposed?  The static stuff could be hidden under /solr/admin/js, /solr/admin/css, etc, whereas a request to / gets bounced to /solr/admin/, from where the HTML is served. ",
            "id": "comment-15006671"
        },
        {
            "date": "2015-11-16T13:51:14+0000",
            "author": "Noble Paul",
            "content": "cool, then we are on same page. For v2 we should make it work at a path /v2/admin ",
            "id": "comment-15006677"
        },
        {
            "date": "2016-01-11T13:58:17+0000",
            "author": "Noble Paul",
            "content": "Most of the APIs are done. Poorly tested . Needs a ton of test cases to be added. This is just an early preview ",
            "id": "comment-15091924"
        },
        {
            "date": "2016-01-14T14:51:02+0000",
            "author": "Noble Paul",
            "content": "more tests ",
            "id": "comment-15098200"
        },
        {
            "date": "2016-01-20T15:49:05+0000",
            "author": "Noble Paul",
            "content": "more tests ",
            "id": "comment-15108765"
        },
        {
            "date": "2016-01-21T01:10:09+0000",
            "author": "Jack Krupansky",
            "content": "Is this likely to be in 6.0 or 6.1?\n\n+1 for 6.0, even if not absolutely 100% completely done. At least 6.0 can be billed as having a modern API, even if there might be some additional work required to get it fully rock solid/fully tested in 6.1. ",
            "id": "comment-15109850"
        },
        {
            "date": "2016-01-21T02:28:00+0000",
            "author": "Yonik Seeley",
            "content": "Whenever it is committed, it would seem to make sense to mark it as experimental, allowing for real user feedback + improvements. ",
            "id": "comment-15109927"
        },
        {
            "date": "2016-01-21T02:33:07+0000",
            "author": "Noble Paul",
            "content": "Yes, this will be experimental in the first release. We will have to do a few iterations to get this right ",
            "id": "comment-15109934"
        },
        {
            "date": "2016-01-28T11:07:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1381cc6865e5bed3753f03d7a82ac56298772e18 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1381cc6 ]\n\nSOLR-8029 first commit with framework and tests for a few APIs ",
            "id": "comment-15121235"
        },
        {
            "date": "2016-01-29T12:32:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit acf1a310b40b9e68eadfc21687d7f4b92721a4cc in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=acf1a31 ]\n\nSOLR-8029 Randomly run schema tests with v2 API ",
            "id": "comment-15123424"
        },
        {
            "date": "2016-01-30T14:28:50+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 00d985b8eae57fed84423a7a93336de4b22a8f2b in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=00d985b ]\n\nSOLR-8029 Tests for solrconfig apis now randomly use /v2 endpoints ",
            "id": "comment-15124912"
        },
        {
            "date": "2016-02-01T17:04:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b7e51075a02343caa806990a8a5414f2683be615 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b7e5107 ]\n\nSOLR-8029 added support and test for /update paths. All RequestHandlers now won't be automatically register ",
            "id": "comment-15126575"
        },
        {
            "date": "2016-02-02T13:37:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8b8c9461f296fb9c4f0f3e3ad9378d50a0244eb2 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8b8c946 ]\n\nSOLR-8029 refactored the SpecProvider API. Addressed a few test failures in async API calls ",
            "id": "comment-15128258"
        },
        {
            "date": "2016-02-04T10:25:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 292fe4a19ca96d65a6e0e2bd6213f82371714a4a in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=292fe4a ]\n\nSOLR-8029 Security API test now randomly uses v2 API ",
            "id": "comment-15132099"
        },
        {
            "date": "2016-02-11T21:11:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3cfebd53f66198ec1d738452a688ad4f67dc8436 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3cfebd5 ]\n\nSOLR-8029 renamed class/dirs and removed the 'v2' part ",
            "id": "comment-15143509"
        },
        {
            "date": "2016-02-12T02:19:46+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 346038000e19bad6d3a5a2b9063849b94e897848 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3460380 ]\n\nSOLR-8029 renamed class/dirs and removed the 'v2' part ",
            "id": "comment-15143896"
        },
        {
            "date": "2016-02-16T20:31:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a4b5c46ff71b569a55f57c1bc5be00b17c36e755 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a4b5c46 ]\n\nSOLR-8029 removed the V2RequestContext class and folded the functionality into SolrQueryRequest ",
            "id": "comment-15149251"
        },
        {
            "date": "2016-02-18T00:27:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5893631766d9908de56a714885a23d028add014f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5893631 ]\n\nSOLR-8029 By default, do not register all APIs to the v2 path ",
            "id": "comment-15151490"
        },
        {
            "date": "2016-02-24T06:12:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ddeb53dd91cb9370f0f22a4ccdcf33f1e267bf79 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ddeb53d ]\n\nSOLR-8029: Merging changes from master ",
            "id": "comment-15160234"
        },
        {
            "date": "2016-02-24T06:12:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c0b91afb94387b59eaca699831fedf015879c96b in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c0b91af ]\n\nSOLR-8029: Merging changes from master ",
            "id": "comment-15160235"
        },
        {
            "date": "2016-03-09T13:51:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 49b9c62dfb638b2b414a919bff9d391fe8aa2ec5 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=49b9c62 ]\n\nSOLR-8029: V2 API relies on the \"registerPath\" attribute to decide where to register it ",
            "id": "comment-15187110"
        },
        {
            "date": "2016-03-09T13:51:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d5e5da894b4a43c16b5e6d4f4d21f4a790732ca5 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d5e5da8 ]\n\nSOLR-8029: merged changes from master ",
            "id": "comment-15187111"
        },
        {
            "date": "2016-03-09T13:51:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 943f2709a3717a840c1eaffe850904613ae9596d in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=943f270 ]\n\nSOLR-8029: merged changes from master ",
            "id": "comment-15187112"
        },
        {
            "date": "2016-03-10T18:31:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a9b8176fa083e6c32f8cd4bf200b92b817fc0e7e in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a9b8176 ]\n\nSOLR-8029:  change dthe structure of the spec json to simplify it ",
            "id": "comment-15189686"
        },
        {
            "date": "2016-03-11T13:18:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b1b1e97cf2e1665cd00d4e655b77216fb0415682 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b1b1e97 ]\n\nSOLR-8029: bug fixes ",
            "id": "comment-15190907"
        },
        {
            "date": "2016-03-14T11:57:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bbb81e0bb6881b8233a99650afe59a270334b9fc in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bbb81e0 ]\n\nSOLR-8029: FIxed failing tests and added a testcase ",
            "id": "comment-15193151"
        },
        {
            "date": "2016-03-14T12:51:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e802a4d61ed26ce43fc5bdffa3ab5391c9724dc6 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e802a4d ]\n\nSOLR-8029: Add V2 paths for security permissions and refactored and documented security APIs ",
            "id": "comment-15193218"
        },
        {
            "date": "2016-03-14T12:53:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6c768cebca2f2ca6baa3aa7546d63ad4fc6fe37f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6c768ce ]\n\nSOLR-8029: test should randomly run on v2 ",
            "id": "comment-15193221"
        },
        {
            "date": "2016-03-15T12:03:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7209e04d4dc41f2886a7d73620648c0c63bc41ea in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7209e04 ]\n\nSOLR-8029: do not keep the spec objects in memory. Load them on demand ",
            "id": "comment-15195159"
        },
        {
            "date": "2016-03-18T08:29:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4541cc562cbf2a84625dc2d4e33e52308147d265 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4541cc5 ]\n\nSOLR-8029: Merge remote-tracking branch 'remotes/origin/master' into apiv2 ",
            "id": "comment-15201172"
        },
        {
            "date": "2016-03-18T08:29:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8163ffd08318da1c525b9377339f93da4950fbf4 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8163ffd ]\n\nSOLR-8029: Merge remote-tracking branch 'remotes/origin/master' into apiv2 ",
            "id": "comment-15201173"
        },
        {
            "date": "2016-03-18T10:55:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 0412be5d6a469c38b5aa824cda6aea2014a2732a in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0412be5 ]\n\nSOLR-8029: More specs ",
            "id": "comment-15201310"
        },
        {
            "date": "2016-03-21T10:00:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6aedeb9c44f7725addfefb7eb4dfa4484e826a05 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6aedeb9 ]\n\nSOLR-8029: security api spec should be lazily loaded because it can change with the implementation ",
            "id": "comment-15203966"
        },
        {
            "date": "2016-03-21T11:34:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8a5e76f4c93111265d1d0b648491091a3572ad85 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8a5e76f ]\n\nSOLR-8029: more api spec ",
            "id": "comment-15204062"
        },
        {
            "date": "2016-03-21T13:01:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ba3199cf6ede2c68add28dd4609caea4d180b87f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ba3199c ]\n\nSOLR-8029: more api spec ",
            "id": "comment-15204137"
        },
        {
            "date": "2016-03-22T06:20:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 376c4e8539377647f8bbccd716fd72720c8d5af8 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=376c4e8 ]\n\nSOLR-8029: more api spec ",
            "id": "comment-15205876"
        },
        {
            "date": "2016-03-22T12:11:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c7f58b8205df8bcf21d2b7c83b77e3a324dca97d in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c7f58b8 ]\n\nSOLR-8029: SchemaValidation ",
            "id": "comment-15206244"
        },
        {
            "date": "2016-03-23T10:06:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 38d542226cbbdda1d0b7b48323f3c235a300e92f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=38d5422 ]\n\nSOLR-8029: Validate Json spec ",
            "id": "comment-15208165"
        },
        {
            "date": "2016-03-23T19:18:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ba5dc7503e9e86ae636ef5f9d9e2852c4ddeb619 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ba5dc75 ]\n\nSOLR-8029: enable schema enforcement for commands ",
            "id": "comment-15208980"
        },
        {
            "date": "2016-04-01T12:23:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 31126e888a319742a153196ef3547c25b966524f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=31126e8 ]\n\nSOLR-8029: error output should be in json. spec for create command fixed ",
            "id": "comment-15221623"
        },
        {
            "date": "2016-04-05T12:38:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 283c648374a71026d5213ee83112cf903754b526 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=283c648 ]\n\nSOLR-8029: fixing test errors ",
            "id": "comment-15226163"
        },
        {
            "date": "2016-04-11T14:28:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f1155e1c02e07a427dedb1f453b3d37f834c661b in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f1155e1 ]\n\nSOLR-8029: mor testcases for collection api ",
            "id": "comment-15235165"
        },
        {
            "date": "2016-04-11T15:18:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c72aeac59e4f736e250ec7f4a5faad5903866394 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c72aeac ]\n\nSOLR-8029 :  More API spec ",
            "id": "comment-15235271"
        },
        {
            "date": "2016-04-11T16:22:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7c8d3e054ece4c046e350226a3d22ebe214dd0d1 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7c8d3e0 ]\n\nSOLR-8029: Added tests for add, delete replica props ",
            "id": "comment-15235402"
        },
        {
            "date": "2016-04-12T11:06:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d9677c43403ac0c780af595d28eb811b4e277d95 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d9677c4 ]\n\nSOLR-8029: more tests ",
            "id": "comment-15236993"
        },
        {
            "date": "2016-04-14T06:41:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 59421d9d9b98e3e8a066e30fd01481ee2ea9c8d1 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=59421d9 ]\n\nSOLR-8029: coreadmin tests and spec ",
            "id": "comment-15240699"
        },
        {
            "date": "2016-04-14T13:09:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit db32de3a83f31f509e6aa249d6e8371a46872e93 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=db32de3 ]\n\nSOLR-8029: coreadmin tests and spec ",
            "id": "comment-15241118"
        },
        {
            "date": "2016-04-18T14:11:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4a1f9c86df0b9d68d46eca2ea111c8c76b1ca0e5 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4a1f9c8 ]\n\nSOLR-8029: precommit errors ",
            "id": "comment-15245721"
        },
        {
            "date": "2016-04-25T09:11:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 52aa4478de9d1ef352c28b4beccf5c442170d46b in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=52aa447 ]\n\nSOLR-8029: missing mappings for /v2/cluster path ",
            "id": "comment-15256124"
        },
        {
            "date": "2016-04-25T12:22:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 474141ea4342636080a9c34b76badcb0db542757 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=474141e ]\n\nSOLR-8029: give sub path info at _introspect ",
            "id": "comment-15256274"
        },
        {
            "date": "2016-04-25T13:46:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9b8511cde4afdba1f247ae428e515420a843f7f7 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9b8511c ]\n\nSOLR-8029: /get spec was not mapped right ",
            "id": "comment-15256366"
        },
        {
            "date": "2016-05-25T21:09:54+0000",
            "author": "Cassandra Targett",
            "content": "I've started doing a functional review of this, with a build from the apiv2 branch Noble has been pushing to. I know I'll find more stuff, but as a first pass I noticed a few things to start:\n\n\n\tSchema endpoints don't seem to include GET methods for fields, copyfields or dynamic fields. I found the specs for them in core/src/resources/apispec (core.SchemaRead.fields.json, core.SchemaRead.copyFields.json), but I can't get to the endpoints referred to in those spec files and they are not listed from an introspect request to the schema endpoint (i.e., http://localhost:8983/solr/v2/collections/apitest/schema/_introspect).\n\tI feel like there are similar GET endpoints missing from the config endpoint, but I'll do some further analysis on that to be able to list them.\n\tReplacements for the Blob Store API and the ConfigSets API are not included?\n\n ",
            "id": "comment-15300852"
        },
        {
            "date": "2016-05-26T07:22:23+0000",
            "author": "Noble Paul",
            "content": "Thanks Cassandra\n\nSchema endpoints don't seem to include GET methods for fields, copyfields or dynamic fields.  \n\nRight , those specs are not included in the output. Will add them\n\nReplacements for the Blob Store API and the ConfigSets API are not included?\n\nNot yet, I'm planning to add them to the v2 path as is. \nI need to write the spec for them\n ",
            "id": "comment-15301669"
        },
        {
            "date": "2016-05-26T12:36:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c07a0bfe8e47f068a00a979c5e0f09c206ced688 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c07a0bf ]\n\nSOLR-8029: wrong doc ",
            "id": "comment-15302012"
        },
        {
            "date": "2016-05-26T12:36:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5df4ca1ebdf33508c16be9c00db622d3ec7fe2ec in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5df4ca1 ]\n\nSOLR-8029: Added the missing paths in schema ",
            "id": "comment-15302013"
        },
        {
            "date": "2016-05-31T15:32:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f72c6914a83f6cf5b287c53beb40c52244ba5a9b in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f72c691 ]\n\nSOLR-8029: Added configset and blob store APIs to /v2 path ",
            "id": "comment-15307924"
        },
        {
            "date": "2016-06-16T12:08:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b333e6bd0a3b86f85d68d47b65b12ef99ab03a86 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b333e6b ]\n\nSOLR-8029: merging with trunk ",
            "id": "comment-15333651"
        },
        {
            "date": "2016-07-18T10:26:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 552ad6e906f8ef63b378909d9689a20955d3e1fd in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=552ad6e ]\n\nSOLR-8029: Addressing test failures ",
            "id": "comment-15382046"
        },
        {
            "date": "2016-07-18T17:47:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 22f1be69f9de124d15b9831e69d3ef1797160828 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=22f1be6 ]\n\nSOLR-8029: Addressing test failures ",
            "id": "comment-15382701"
        },
        {
            "date": "2016-07-21T13:37:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 49a09217064d6f1578895cf8425946bb2d08338d in lucene-solr's branch refs/heads/apiv2 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=49a0921 ]\n\nSOLR-8029: merge master into apiv2 ",
            "id": "comment-15387694"
        },
        {
            "date": "2016-07-21T16:24:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f9f148fb7cf602ddefb25c6edd33887c6a93bcf0 in lucene-solr's branch refs/heads/apiv2 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f9f148f ]\n\nSOLR-8029: make precommit happy: drop unused imports and move license headers to the top of files ",
            "id": "comment-15387985"
        },
        {
            "date": "2016-07-24T22:19:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 003f9b74a55d73473d8f58670f09c5abd4253c96 in lucene-solr's branch refs/heads/apiv2 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=003f9b7 ]\n\nSOLR-8029: API spec resource names: s/commands/Commands/ ",
            "id": "comment-15391185"
        },
        {
            "date": "2016-08-18T23:56:49+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I am reading the spec as a newbie, so these are comments in light of that:\n\nSolr Resources description\n\n\tcore ? - we should mention/explain core not just mention it\n\tconfigset - Zookeeper only? What about for non SolrCloud installations\n\tNon-distributed collection terminology - Is it still collection or core? Or both\n\n\n\nConventions\n\n\tWhat's SMILE? Takes a while to find reference to some binary JSON, but the fasterxml website was (is?) dead, maybe cross-reference JIRA we implemented it\n\tQuery endpoints return a lot more formats (CSV, PHP, Python, HTML from /browse). Are those not discussed somehow?\n\tHJSON or HOCON (misspelling or two different things?)\n\tEndpoints that require input payloads - does this include \"update\" endpoint? What about XML Update format? What about /extract end point, is it update? Maybe clarify this a bit.\n\tWhat's an example of an operation key? Forward reference I guess, but hard to visualize this early in the document\n\tOperations are specified using snake case using either a dash or underscore - Who is making this choice? Are some operations defined one way and others the other? Or the client call can use either? This is super-confusing and can cause issues to the client applications. Why can't we just have one way on this, since everything has to be redone anyway.\n\t/v2/admin was already discussed for static resources, the spec should be updated if that's accepted as the solution\n\n\n\nAPI Versioning\n\n\tStill talks about /solr/v2\n\n\n\nIntrospection support\n\n\tIs Schema auto-generated from something or manually written?\n\tIf it is auto-generated, what is the self-description mechanism used for that. Because it would be good to have pluggable components (e.g. URPs, analysers) to self-describe themselves too, it is not clear whether that would be the same effort umbrella or a separate one.\n\n\n\nList collections\n\n\tDoes the name parameter support the full Java regex or just star? If just star, there is no point being 'flexible' about. But if it is full regex (e.g. test[a-z][0-9]) , it is worth mentioning.\n\tconfig param - return all collections that use the specific ?collection? (configset I am guessing, maybe call it configset too)\n\n\n\nCreate collection\n\n\tconfigTemplate? - is that same as configset? If not, need to explain.\n\tWith async, why are we making request to one endpoint but getting its status from another. That could mess a lot of users/tools up. Can we not proxy it internally or something. (documentation later for delete command seem to imply that this is already what is planned)\n\tIs there no useful information to be returned when collection is created? Like which nodes it ends up on?\n\n\n\nCollection configuration\n\n\tsharedConfigName vs configTemplate vs - unmentioned - configset - this really needs to be explained in the resource description section\n\tAgain, what happens without SolrCloud here? We are still supporting it or is the assumption we will not. If we will not, this needs to be documented as explicit precondition before merging this into master (e.g. definitely not version 6)\n\n\n\nCollection Alias\n\n\tEndpoint (/v2/...) is completely mismatching to the example. One of them is very out of date\n\tEarlier we said that alias is opaque to the user, which I read to say that call to list the collections would return aliases as well (good for tools). Now, it seems that they are returned in a collection_aliases end point. Is that instead or in addition? Think about Admin UI, would we want an alias in the dropdown of options to run a query against (I would think yes)?\n\tNo output seems to be shown, but will there be a marker that something is an alias? Or a list of collections that alias creates?\n\tIt would make sense to have a filter that lists all aliases a collection a part of (it can be present in multiple I believe)\n\n\n\nCollection API and Collection Exists\n\n\tneeds to be updated to use /v2/collections/collectionName structure\n\n\n\nCollection Delete\n\n\tWhat happens if we provide an alias name here?\n\n\n\nSwap collections?\n\n\tDo we support swapping the collections? In non-Cloud mode, obviously. And if we only have Cloud mode, how do we support those use-cases?\n\n\n\nCollection Administration Tasks\n\n\tExamples are all-over the place in terms of URL structure.\n\n\n\nLink Config\n\n\tThat's linking to which one of the sharedConfigName, configTemplate or configset?\n\tCan reload fail? If so, would having and not having reload=true cause different versions of output to be present? Are there other operations that also need reload afterwards? This should be consistent.\n\n\n\n\nShare Configs\n\n\tThis dual-API is super-significant for tools and Admin UI. How exactly would they know which API to use for a specific collection? What about when the name given is an alias? The return format of calls that will allow this decision should be really clearly documented\n\n\n\n\n\tUpdate collection\n\tVery confusing section. Is this taking into account swapped default and solr-format JSON end-points? What about Solr XML Update format? Extract?\n\n\n\n(I stopped here for now)\n\n\n ",
            "id": "comment-15427381"
        },
        {
            "date": "2016-08-22T03:18:51+0000",
            "author": "Steve Rowe",
            "content": "I reviewed the changes on the apiv2 branch, and found many small problems, which I've listed below.  I didn't attempt to prioritize them - I think they all should be addressed.\n\nMiscellaneous\n\n\n\tI couldn't find any V2 version of these old collections api actions: CLUSTERPROP, BALANCESHARDUNIQUE, MIGRATESTATEFORMAT, BACKUP, RESTORE, ADDROLE, REMOVEROLE\n\tSome plugins, e.g. /replication, don't have _introspect support - is this intentional?\n\tQuestion: I can't find it now, but I saw somewhere that only one command is allowed when POSTing to V2 APIs.\n\t\n\t\tIs this true?\n\t\tWhat about bulk schema and config APIs?  Manual V2 schema api testing with multiple commands in a single request resulted in all but the first command being silently ignored.\n\t\n\t\n\n\n\nAPI spec files\n\n\n\tThere are many many many missing descriptions & documentation links, and many top-level CWIKI documentation links\n\t\n\t\tI think it's very important to make these as complete as possible\n\t\n\t\n\tDefault value documentation is missing almost everywhere\n\t\n\t\tI think these should be filled in where possible\n\t\n\t\n\t/url/path appears to be an orphan in many *.json files - I can't find any use of it in code, and when it appears in *.json files, it's always a subset of /url/paths (plural).\n\tThese orphaned spec files should be removed:\n\t\n\t\tcores.core.Commands.requestRecovery.json (directly specified in cores.core.Commands.json)\n\t\tcores.json (handled by cores.Status.json)\n\t\n\t\n\tEmpty command properties maps, should be removed from:\n\t\n\t\tcluster.security.BasicAuth.Commands.json: /commands/set-user\n\t\tcluster.security.RuleBasedAuthorization.json: /commands/set-permission/params\n\t\n\t\n\tcluster.config.Commands.json:\n\t\n\t\t\"delete\" command should be removed, since that functionality is covered by cluster.config.delete.json\n\t\n\t\n\tcluster.security.RuleBasedAuthorization.json:\n\t\n\t\t/commands/delete-permission:\n\t\t\n\t\t\t\"type\" key is present twice - \"type\":\"object\" should be removed (since it should be \"int\")\n\t\t\n\t\t\n\t\t/commands/set-user-role:\n\t\t\n\t\t\tdescription should state that multiple roles should be comma-separated.\n\t\t\n\t\t\n\t\n\t\n\tcluster.security.authentication.Commands.json\n\t\n\t\tWhy does it contain no commands?\n\t\n\t\n\tcluster.security.authorization.Commands.json\n\t\n\t\tWhy does it contain no commands?\n\t\n\t\n\tcluster.security.RuleBasedAuthorization.json:\n\t\n\t\t\"set-permission\" and \"update-permission\" commands: required \"role\" property is never defined.\n\t\t\"set-permission\" command: \"method\" should be restricted to the allowed values (GET, POST, etc.)\n\t\t\n\t\t\tJsonSchemaValidator will have to be modified to support the \"enum\" JSON schema feature\n\t\t\n\t\t\n\t\t\"update-permission\" command: \"index\" property is required, but shouldn't be, since \"before\" could be specified instead.\n\t\n\t\n\tcollections.Commands.json:\n\t\n\t\tdescription is spelled \"Description\" (capital \"D\") but should be lowercase\n\t\tdescription is a copy-paste-o:\"The add-field command adds a new field definition to your schema.\"\n\t\n\t\n\tcore.config.Commands.json:\n\t\n\t\ttype is object, no validation on the object?: most commands have this problem\n\t\t\n\t\t\te.g.: add-requesthandler should have required \"name\" and \"class\" (as should all update-* and add-* commands?)\n\t\t\n\t\t\n\t\n\t\n\tcore.RealtimeGet.json:\n\t\n\t\tMissing \"fq\" param\n\t\tHow do /get/update and /get/versions work, and what do they do?  I don't see any code to handle them.\n\t\t/v2/c/{collection}/_introspect doesn't return /get/... in availableSubPaths, but it should\n\t\t\n\t\t\tsame problem for cores\n\t\t\n\t\t\n\t\t/v2/c/{collection}/get/_introspect says that the paths are /get/..., but that's wrong: they're /v2/c/{collection}/get/...\n\t\t\n\t\t\tsame problem for cores\n\t\t\n\t\t\n\t\n\t\n\tcore.SchemaEdit.json:\n\t\n\t\tNon-supported properties that should be removed: \"tokenized\", \"binary\"\n\t\tBulk mode doesn't work - any command after the first appears to be silently ignored\n\t\t\n\t\t\tWhy isn't testing failing?\n\t\t\n\t\t\n\t\t/v2/c/{collection}/_introspect doesn't return /schema/... in availableSubPaths, but it should\n\t\t\n\t\t\tsame problem for cores\n\t\t\n\t\t\n\t\t/v2/c/{collection}/schema/_introspect says that the paths are /schema/..., but that's wrong: they're /v2/c/{collection}/schema/...\n\t\t\n\t\t\tsame problem for cores\n\t\t\n\t\t\n\t\n\t\n\tcore.SchemaRead.fields.json:\n\t\n\t\tincludeDynamic only applies to /schema/fields, but /schema/dynamicfields and /schema/fieldtypes are included in /url/paths\n\t\n\t\n\tcluster.json\n\t\n\t\t/v2/cluster/nodes endpoint returns same results as /v2/cluster - is /v2/cluster/nodes supposed to do something different?  If not, why does it need to be here?\n\t\n\t\n\tcluster.commandstatus.json\n\t\n\t\tThere is no way to delete a command status (old collections api: DELETESTATUS action) - you can only get info on one via: GET /v2/cluster/command-status/{id}.\n\t\tMaybe this endpoint could renamed from /v2/cluster/command-status to /v2/cluster/async-command, and then have DELETE available on /v2/cluster/async-command/{id}?\n\t\n\t\n\tcluster.config.*.json\n\t\n\t\tshould be renamed to \"cluster.configs.*.json\" (plural) - the endpoint is /cluster/configs (plural)\n\t\n\t\n\tcollection.json\n\t\n\t\tshould be renamed to collections.collection.json\n\t\tCollectionHandlerApi.EndPoint.COLLECTION_STATE will need to have its spec name updated\n\t\n\t\n\tcollections.collection.Commands.json\n\t\n\t\tMissing command: migrate-docs\n\t\n\t\n\tcollections.collection.Commands.modify.json:\n\t\n\t\t\"maxShardsPerNode\" property is missing\n\t\n\t\n\tcollections.collection.shards.Commands.json\n\t\n\t\t\"async\" key is missing for \"split\", \"create\" and \"add-replica\" commands\n\t\t\"create\" command: \"createNodeSet\" description should say it's a comma-separated list\n\t\t\"add-replica\" command: \"shard\" property description is incomplete: \"The name of the shard where \"\n\t\n\t\n\tcollections.collection.shards.shard.Commands.json:\n\t\n\t\tforce-leader <- additionalProperties should be false instead of true, since none are supported\n\t\tMissing command: \"synch-shard\" <- I think this should be spelled \"sync-shard\"\n\t\n\t\n\tcollections.collection.shards.shard.replica.Commands.json\n\t\n\t\t\"set-property\" command should take an array\n\t\t/commands/set-property/properties/value/description is wrong (copy-paste-o): \"The property name\"\n\t\n\t\n\tcollections.collection.shards.shard.replica.delete.json\n\t\n\t\t\"async\" param is missing\n\t\n\t\n\tcollections.Commands.json\n\t\n\t\t\"async\" key is missing for \"create\", \"create-alias\" and \"delete-alias\" commands.\n\t\t/commands/create:\n\t\t\n\t\t\t\"createNodeSet.shuffle\" key is missing\n\t\t\t\"maxShardsPerNode\" key is missing\n\t\t\n\t\t\n\t\n\t\n\tcore.config.Params.Commands.json\n\t\n\t\t/commands/update/description: \"update one or more configsets\", <- should be parameter sets\n\t\n\t\n\tcore.SchemaEdit.addFieldType.json:\n\t\n\t\t\"queryAnalyzer\" and \"indexAnalyzer\" should be added as possible keys\n\t\tanalyzer objects (\"analyzer\" and the above two) should not include the \"type\" key\n\t\tanalyzer objects should include \"class\", \"charFilters\", \"tokenizer\" and \"filters\" keys, each with appropriate sub-config.\n\t\n\t\n\tcore.SchemaEdit.replaceFieldType.json\n\t\n\t\tshould be the same schema as core.SchemaEdit.addFieldType, but is currently almost empty.\n\t\n\t\n\tcore.SchemaRead.json:\n\t\n\t\t\"/schema/similarity\" is present 3 times\n\t\t\"/schema/zkversion\" and \"/schema/uniquekey\" are present 2 times\n\t\tMaybe there should be a test for the multiply-specified-path problem (e.g. in JsonSchemaValidator)?\n\t\n\t\n\tcore.SchemaRead.fields.json\n\t\n\t\tparams only apply to the \"fields\" endpoint, so why are dynamicfields and fieldtypes included here?\n\t\n\t\n\tcore.Update.json\n\t\n\t\t/update/json/commands <- is this path new?  seems to be rewritten/forwarded to /update/json in UpdateRequestHandlerApi.  Is adding this endpoint necessary?\n\t\tMissing path: /update/json/docs\n\t\t(maybe?) missing path: /update/bin\n\t\n\t\n\tcores.Commands.json:\n\t\n\t\tThe description on \"schema\" and \"dataDir\" are copy/paste-o's (\"The core name\")\n\t\t\"numShards\" description starts \"NO:of\", which may not be understood by some, should be \"number of\" instead.\n\t\t/commands/create:\n\t\t\n\t\t\t\"async\" key is missing\n\t\t\t\"configset\" should not be required - it's not included in CoreDescriptor.requiredProperties\n\t\t\t\n\t\t\t\tor if I'm wrong and it is required, then it's misspelled (\"configSet\" is the correct spelling)\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\tcores.core.Commands.json\n\t\n\t\tmissing command: \"request-status\" (corresponding to REQUESTSTATUS)\n\t\tmissing command: \"pre-recovery\" (corresponding to PRERECOVERY)\n\t\tmissing command: \"request-sync-shard\" (corresponding to REQUESTSYNCSHARD)\n\t\tmissing command: \"request-buffer-updates\" (corresponding to REQUESTBUFFERUPDATES)\n\t\tmissing command: \"request-apply-updates\" (corresponding to REQUESTAPPLYUPDATES)\n\t\t\"async\" key is missing from \"swap\", \"rename\", \"unload\", \"merge-indexes\" commands\n\t\t/commands/reload\n\t\t\n\t\t\t\"additionalProperties\" should be false, not true\n\t\t\n\t\t\n\t\t/commands/merge-indexes\n\t\t\n\t\t\tMissing properties: \"indexDir\", \"srcCore\", \"async\"\n\t\t\n\t\t\n\t\t/commands/request-recovery\n\t\t\n\t\t\t\"additionalProperties\" should be false, not true\n\t\t\n\t\t\n\t\t/commands/forceprepareforleadership:\n\t\t\n\t\t\tI think it should be spelled \"force-prepare-for-leadership\"\n\t\t\t\"additionalProperties\" should be false, not true\n\t\t\n\t\t\n\t\n\t\n\tcores.core.Commands.split.json\n\t\n\t\t\"path\" and \"targetCore\" are singular but take arrays - the descriptions should be plural but are now singular.\n\t\t\"ranges\" is plural but takes a single string - why is treated differently from \"path\" and \"targetCore\"?\n\t\n\t\n\tcores.Status.json\n\t\n\t\t\"indexInfo\" param default is wrong: it's true, not false\n\t\tI think core-specific status should be at /v2/cores/{core} (currently 404's), rather than at /v2/cores/{core}/status - that would be consistent with the V2 Collections API per-collection status at /v2/c/{collection}\n\t\n\t\n\tnode.Commands.json\n\t\n\t\tMissing commands: add-role, remove-role\n\t\t/commands/overseerop\n\t\t\n\t\t\tI think it should be spelled \"overseer-op\"\n\t\t\tMissing properties: \"op\" and \"electionNode\"\n\t\t\t\"additionalProperties\" should be false, not true\n\t\t\n\t\t\n\t\t/commands/rejoinleaderelection\n\t\t\n\t\t\tI think it should be spelled \"rejoin-leader-election\"\n\t\t\t\"additionalProperties\" should be false, not true\n\t\t\n\t\t\n\t\n\t\n\tnode.invoke.json:\n\t\n\t\tMissing param: \"class\"\n\t\n\t\n\n\n\nJSON schema validation\n\n\n\t\"int\" is used instead of \"integer\" in schemas (json-schema requires \"integer\")\n\tJsonSchemaValidator has no \"integer\" support, only \"number\" (e.g. no INTEGER in JsonSchemaValidator.Type, ApiBag.KNOWN_TYPES)\n\tJsonSchemaValidator doesn't validate type values - using an invalid type gives an NPE instead of a useful error message\n\t\n\t\tJsonValidatorTest is incomplete: it should test all supported schema validation aspects\n\t\tDid you explore existing JSON validation libraries (instead of implementing from scratch)?\n\t\n\t\n\tJsonSchemaValidator\n\t\n\t\tClass javadocs should fully describe the limitations it has compared to full JSON schema support\n\t\tType.valdateData() is misspelled, should be validateData()\n\t\tAttribute.validateData is unused, should be removed\n\t\tAttribute class name is too vague - it could be named SchemaNode instead, since it represents a node in a JSON schema graph.\n\t\tObjectAttribute class name is too vague - it could be named SchemaAttribute instead, since it is a set of schema object attribute validators\n\t\n\t\n\n\n\nCode/resources\n\n\n\tsolr/core/src/resources/implicitPlugins.json\n\t\n\t\treferences \"update_json_docs\" as paramsets to be used by the \"update\" and \"/update/json/docs\" endpoints, but the definition for these is only in techproducts example - shouldn't a copy of it be in all example configsets?  Or maybe instead in solr/core/src/resources/?\n\t\n\t\n\tMap2:\n\t\n\t\tthere are no direct tests of this class, but there should be\n\t\tgeneric <K,V> should be dropped (the delegate map should probably be <String,Object> though)\n\t\t\n\t\t\tvalues can be of any type\n\t\t\tno generic uses in the code\n\t\t\n\t\t\n\t\tMap2 name is too vague - maybe call it ValidatingJsonMap?\n\t\t\n\t\t\tDifferences from Java's Map:\n\t\t\t\n\t\t\t\tvalue validation\n\t\t\t\tvalue type coersion to JSON types\n\t\t\t\tJSON deserialization\n\t\t\t\tdeep copy\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\tNOT_NULL_OF_TYPE lambda is never used (and has a bug: first of pair's type is checked against itself instead of against second of pair's)\n\t\tgetDeepCopy(Collection,int,boolean) can be removed in favor of the exact duplicate in o.a.s.Utils\n\t\n\t\n\to.a.s.common.util.Predicate looks very similar to Java8's Predicate, except that the instead of returning a boolean, the test() method returns either null for success or a String containing a failure explanation. I think it's bad to have a same-named class that behaves slightly differently.  Maybe name it ExplanatoryPredicate?\n\to.a.s.common.util.Lookup interface is never used, so should be removed\n\tApiBag\n\t\n\t\tregisterLazy() doesn't use its generic type parameter <T>, so it should be removed\n\t\tvalidateAndRegister(): this looks like orphaned code - there is no /url/parts in any *.json file:\n\n      Map2 parts = url.getMap(\"parts\", null);\n      if (parts != null) {\n        Set<String> wildCardNames = getWildCardNames(paths);\n        for (Object o : parts.keySet()) {\n          if (!wildCardNames.contains(o.toString()))\n            throw new RuntimeException(\"\" + o + \" is not a valid part name\");\n          Map2 pathMeta = parts.getMap(o.toString(), NOT_NULL);\n          pathMeta.get(\"type\", ENUM_OF, ImmutableSet.of(\"enum\", \"string\", \"int\", \"number\", \"boolean\"));\n        }\n      }\n\n\n\t\tgetWildCardNames() isn't called from anywhere but the above dead code, so can it also be removed?\n\t\tIntrospectApi.call() makes a deep copy of the base api spec map on every request, apparently to exclude description of commands that were not called.  This seems inefficient - maybe there should be a per-command cache or something?\n\t\n\t\n\tURL templates are used in various places, but names in code are inconsistent:\n\t\n\t\tIn DumpRequestHandler.handleRequestBody(), \"urlPart\" should be renamed, e.g. to \"urlTemplateValues\"/\"templates\" :\n\nString[] parts = req.getParams().getParams(\"urlPart\");\nif (parts != null && parts.length > 0) {\n  Map map = new LinkedHashMap<>();\n  rsp.getValues().add(\"urlPart\", map);\n  for (String part : parts) {\n    map.put(part, req.getPathValues().get(part));\n  }\n}\n\n\n\t\tIn PathTrie:\n\t\t\n\t\t\t\"parts\" is used to mean both \"url path segment sequence\" and \"path segment template mappings\".  E.g. in lookup(Map parts) <- parts is a map from path segment template name to concrete value, e.g \"{collection}\"->mycollection.  Maybe rename the \"path segment template mappings\" ones to (path)(segment)templates(map)?\n\t\t\twildCardName() and Node.varName should be renamed, e.g. to (get)templateName\n\t\t\n\t\t\n\t\tSolrQueryRequest.getPathValues() should be renamed, e.g. to getPathSegmentTemplateMappings() or getTemplates()\n\t\n\t\n\tURL path segment sequences are used in various places, but names in code are inconsistent:\n\t\n\t\tIn PathTrie and V2HttpCall, List<String> getParts()/\"parts\"/\"pieces\"/\"path\" usages would be more easily identifiable if referred to consistently as \"segments\" (since we're talking URL path segments here).\n\t\n\t\n\tTestPathTrie.testPathTrie() should clear the \"parts\" template map between lookup calls; otherwise previous paths' template values will linger.\n\tPathTrie:\n\t\n\t\tfindValidChildren() <- why is \"valid\" part of this method name?  There doesn't seem to be any filtering for validity here - it's more like \"recursively enumerate all descendant paths\".  Maybe rename to \"getAvailableSubPaths\" (same as \"availableSubPaths\" result set)?\n\t\tNode.lookup(List,int,Map,Set) really really needs comments.  It took me 10 minutes of staring to figure out this 13 line method.  Specifically, the role of the \"i\" path segment counter should be thoroughly explained, including its relationship to the current node in the trie.\n\t\n\t\n\tApiCommand\n\t\n\t\tcommented out code should be removed.\n\t\tgeneric type param is never used, so should be removed.\n\t\n\t\n\tV2HttpCall:\n\t\n\t\tgetApiInfo(): typo: s/4044/404/ in: // this is to return the user with all the subpaths for  a given 4044 request\n\t\texecute():  //todo remove. for debugging only\n\t\n\t\n\tCollectionHandlerApi\n\t\n\t\tprefixSubStitutes() should be prefixSubstitutes() (second \"S\" should be lowercase)\n\t\n\t\n\tUpdateRequestHandler\n\t\n\t\tshouldn't /update/bin be \"application/javabin\" instead of \"application/csv\"?:\n\t\t\n\t\t\tcreateDefaultLoaders():\n\npathVsLoaders.put(BIN_PATH,registry.get(\"application/csv\"));\n...    \npublic static final String BIN_PATH = \"/update/bin\";\n\n\n\t\t\n\t\t\n\t\tIs /update/bin supported?  It's not listed in core.Update.json or in ImplicitPlugins.json.\n\t\n\t\n\tReplicationHandler\n\t\n\t\tLOCATION is unused and should be removed.\n\t\n\t\n\n ",
            "id": "comment-15429990"
        },
        {
            "date": "2016-08-22T04:25:43+0000",
            "author": "Noble Paul",
            "content": "Thanks Alexandre Rafalovitch A lot of stuff that is there is the spec is not implemented . The scope is vast. I strongly recommend you to take a look at the branch v2api\n\nconfigset - Zookeeper only? What about for non SolrCloud installations\n\nThere is no concept of a configset outside of SolrCloud\n\nNon-distributed collection terminology - Is it still collection or core? Or both\n\nThe core APIs will continue to exist. So , both\n\nWhat's SMILE? Takes a while to find reference to some binary JSON, \n\nIt is not added as a part of v2 API. It already exists\n\nHJSON or HOCON (misspelling or two different things?)\n\nHJSON actually. We want to be as forgiving as possible \n\nOperations are specified using snake case using either a dash or underscore - Who is making this choice? Are some operations defined one way and others the other?\n\nThey already exist. It is not added i V2 API\n\n/v2/admin was already discussed for static resources, the spec should be updated if that's accepted as the solution\n\nThe spec is not a complete future plan. We have a lot of missing pieces. The objective is to include as much as possible and make a first release \n\n\nStill talks about /solr/v2\n\nIt is /solr/v2\n\nIs Schema auto-generated from something or manually written?\n\nIt is manually written. it is a part of the source code. Please check the apiv2 branch\n\nA lot of stuff do not yet support schema . As of now only coponents with end points (request handlers ) do have schema\n\nDoes the name parameter support the full Java regex or just star? If just star, there is no point being 'flexible' about. But if it is full regex (e.g. test[a-z][0-9]) , it is worth mentioning.\n\nconfig param - return all collections that use the specific ?collection? \n\nIt is the same as the LIST command as of . It neither supports wild card nor regex. We would like to add support on both end points together\n\nWith async, why are we making request to one endpoint but getting its status from another. \n\nInteresting. We should explore the semantics of supporting the same\n\nIs there no useful information to be returned when collection is created? Like which nodes it ends up on?\n\nThe responses are same as they are in V1 . Yes , it returns the nodes\n\n ",
            "id": "comment-15430026"
        },
        {
            "date": "2016-08-22T13:47:43+0000",
            "author": "Noble Paul",
            "content": "Thanks Steve Rowe \n\nI shall post a detailed response after I go through all of them ",
            "id": "comment-15430779"
        },
        {
            "date": "2016-08-26T11:02:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 327aaffae4bd32df6f591a5a3c823ad19fb18df5 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=327aaff ]\n\nSOLR-8029 : Addressing a few feedback back comments by steve. The rest to follow\u2028 \u2028\n\n*\t \"int\" is used instead of \"integer\" in schemas (json-schema requires \"integer\")\u2028\n*  JsonSchemaValidator has no \"integer\" support, only \"number\" (e.g. no INTEGER in JsonSchemaValidator.Type, ApiBag.KNOWN_TYPES)\u2028\n*  JsonSchemaValidator doesn't validate type values - using an invalid type gives an NPE instead of a useful error message\u2028\n*  JsonValidatorTest is incomplete: it should test all supported schema validation aspects\u2028\n*  Did you explore existing JSON validation libraries (instead of implementing from scratch)?\u2028\n*  JsonSchemaValidator\u2028\n*  Class javadocs should fully describe the limitations it has compared to full JSON schema support\u2028\n*  Type.valdateData() is misspelled, should be validateData()\u2028\n*  Attribute.validateData is unused, should be removed\u2028\n*  Attribute class name is too vague - it could be named SchemaNode instead, since it represents a node in a JSON schema graph.\u2028\n*  ObjectAttribute class name is too vague - it could be named SchemaAttribute instead, since it is a set of schema object attribute validators \u2028\n*  /url/path appears to be an orphan in many *.json files \u2028\n* These orphaned spec files should be removed:\u2028\n* cores.core.Commands.requestRecovery.json (directly specified in cores.core.Commands.json)\u2028\n* cores.json (handled by cores.Status.json)\u2028\n* cluster.config.Commands.json:\u2028\n* \"delete\" command should be removed, since that functionality is covered by cluster.config.delete.json\u2028\n* cluster.security.RuleBasedAuthorization.json:\u2028\n* /commands/delete-permission:\u2028\n* \"type\" key is present twice - \"type\":\"object\" should be removed (since it should be \"int\")\u2028\n* collections.Commands.json:\u2028\n* description is spelled \"Description\" (capital \"D\") but should be lowercase\u2028\n* description is a copy-paste-o:\"The add-field command adds a new field definition to your schema.\"\u2028 ",
            "id": "comment-15438801"
        },
        {
            "date": "2016-08-29T13:13:07+0000",
            "author": "Varun Thacker",
            "content": "Hi Noble,\n\nOne suggestion regarding a param in the ADDREPLICA Collections API\n\nWe currently have a param called \"node\" which basically can be used to tell Solr which node to create the replica. \nIn the cluster state , the param gets stored as \"node_name\" . So for a user who calls CLUSTERSTATUS he now sees the value as \"node_name\" . It would be nicer if ADDREPLICA command renamed the param from \"node\" to \"node_name\" just to make it more consistent I believe.\n\nSimilarly Add Role / Delete node takes \"node\" as well.  ",
            "id": "comment-15445844"
        },
        {
            "date": "2016-08-29T15:59:51+0000",
            "author": "Noble Paul",
            "content": "\ud83d\udc4d ",
            "id": "comment-15446272"
        },
        {
            "date": "2016-09-03T18:11:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit baec97036a2c0413830f0717f5adf1d7871b5b3c in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=baec970 ]\n\nSOLR-8029:  more feedback from Steve addressed. ADDROLE, REMOVEROLE commands added ",
            "id": "comment-15461475"
        },
        {
            "date": "2016-09-07T09:57:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b49d9027b346e65853f6d1210f45d5c918760e70 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b49d902 ]\n\nSOLR-8029: Merge remote-tracking branch 'remotes/origin/master' into apiv2 ",
            "id": "comment-15470193"
        },
        {
            "date": "2016-09-07T09:57:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d83b6b8022d3c023344d6b1efd74e2c2f972a8c7 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d83b6b8 ]\n\nSOLR-8029: Merge remote-tracking branch 'remotes/origin/master' into apiv2 ",
            "id": "comment-15470194"
        },
        {
            "date": "2016-09-07T13:09:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ea739f7350b0971249267532e30e979116754d2e in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ea739f7 ]\n\nSOLR-8029: added , commands add-role, remove-role, clusterprop ",
            "id": "comment-15470588"
        },
        {
            "date": "2016-09-09T11:54:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 66f09139197ce54292dc103e2d66b1b384bb79a6 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=66f0913 ]\n\nSOLR-8029: 'enum' support in schema ",
            "id": "comment-15476889"
        },
        {
            "date": "2016-09-09T11:54:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cf1bbc3d74fd11f81e6fa51c5c5f205fdc4e2c21 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cf1bbc3 ]\n\nSOLR-8029: general refactoring ",
            "id": "comment-15476890"
        },
        {
            "date": "2016-09-15T07:41:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c47ea512b8d483a8ccf47373ce6a6e4028a5ecca in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c47ea51 ]\n\nSOLR-8029: balanceshardunique added ",
            "id": "comment-15492661"
        },
        {
            "date": "2016-09-15T11:17:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bbb44137e1f457b02f47ce0798d4d213d964d8cb in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bbb4413 ]\n\nSOLR-8029: moved the set-replica to collections/collection level ",
            "id": "comment-15493038"
        },
        {
            "date": "2016-09-15T12:33:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4f53c9411eca4927f75471be5f089d5ade6c8251 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4f53c94 ]\n\nSOLR-8029: renamed a couple of core commands and added a testcase for ValidatingJsonMap ",
            "id": "comment-15493181"
        },
        {
            "date": "2016-09-15T16:47:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2551c7997947f6abc7912b659ad3ceb393c3b931 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2551c79 ]\n\nSOLR-8029:added missing attribute ",
            "id": "comment-15493892"
        },
        {
            "date": "2016-09-16T07:28:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9d18a538ffb7e095a4dc1181670da7139842e5a5 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9d18a53 ]\n\nSOLR-8029:test failure addressed ",
            "id": "comment-15495633"
        },
        {
            "date": "2016-09-16T07:28:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit befedca2d63a1abdd7989f75d9e2af0678a2b96d in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=befedca ]\n\nSOLR-8029:test failure addressed ",
            "id": "comment-15495634"
        },
        {
            "date": "2016-09-16T14:04:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit db048321565bbc2cfa92192372c782659ff21521 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=db04832 ]\n\nSOLR-8029: cleaning up specs ",
            "id": "comment-15496413"
        },
        {
            "date": "2016-09-20T09:17:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e0a09f5370ae770f7aeca474970969f70e30b9c8 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e0a09f5 ]\n\nSOLR-8029: more cleanup of specs ",
            "id": "comment-15506132"
        },
        {
            "date": "2016-09-20T12:50:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3baf6f8b3002e550400781194c4ef88a248f2ef9 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3baf6f8 ]\n\nSOLR-8029: more cleanup of specs. renamed collections.json collections.collection.json ",
            "id": "comment-15506414"
        },
        {
            "date": "2016-09-22T19:33:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b957e2ed1f28038e6b0f07dc0f74319d89cb16c2 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b957e2e ]\n\nSOLR-8029: testcases for configset api ",
            "id": "comment-15514268"
        },
        {
            "date": "2016-10-06T18:54:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4e879baf99b3426529e6a0f176fcfc50a1687716 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4e879ba ]\n\nSOLR-8029: Simplified the /_introspect code and fixed a couple of bugs ",
            "id": "comment-15552822"
        },
        {
            "date": "2016-10-20T19:10:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c482b339e7813e3b39593bda7c498ecefc547e05 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c482b33 ]\n\nSOLR-8029: Added more details to config API ",
            "id": "comment-15592703"
        },
        {
            "date": "2016-11-10T13:46:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 776eae2449450d21b25cef0717d996cdd9b0cce3 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=776eae2 ]\n\nSOLR-8029: filling in some missing specs ",
            "id": "comment-15654080"
        },
        {
            "date": "2016-11-10T14:22:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 31933ec76005f0656a5a494c18fcb3b22a8ada97 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=31933ec ]\n\nSOLR-8029: filling in some missing specs ",
            "id": "comment-15654167"
        },
        {
            "date": "2016-11-22T16:40:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4942f3325e5a1f89a1902b071642163f0c806398 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4942f33 ]\n\nSOLR-8029: cleanup code for readability ",
            "id": "comment-15687216"
        },
        {
            "date": "2016-11-26T17:40:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a919579f42123d626bc4b873325ba1ee37fec479 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a919579 ]\n\nSOLR-8029: refactoring ",
            "id": "comment-15698254"
        },
        {
            "date": "2016-11-26T17:40:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 16629175125ef896fa38874739f2e5d38d3cc8e3 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1662917 ]\n\nSOLR-8029: typos ",
            "id": "comment-15698255"
        },
        {
            "date": "2016-11-28T14:05:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 84695ff71f33716774b85413eced4d42fb26ad09 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=84695ff ]\n\nSOLR-8029: add support for #include in spec files ",
            "id": "comment-15702022"
        },
        {
            "date": "2016-11-28T15:36:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5e179a18aa4bcb3697e9f4964ff2a01b9f6b082e in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5e179a1 ]\n\nSOLR-8029: reuse add-fieldtype spec ",
            "id": "comment-15702245"
        },
        {
            "date": "2016-11-28T15:44:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cc21a767b92df6430cd46e2d07253ef50229c61f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cc21a76 ]\n\nSOLR-8029: more spec ",
            "id": "comment-15702266"
        },
        {
            "date": "2016-11-28T15:52:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 509db5805748e9d8e825f70058d92f6c251aa0f4 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=509db58 ]\n\nSOLR-8029: more spec refinements ",
            "id": "comment-15702289"
        },
        {
            "date": "2016-11-28T15:58:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f3b14aebd817e922afc0268d05a8cbbaf6b8a985 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f3b14ae ]\n\nSOLR-8029: more spec refinements ",
            "id": "comment-15702319"
        },
        {
            "date": "2016-11-28T16:25:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5ef717bd97cc1f479dfdf2bdd210f32406c8224d in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5ef717b ]\n\nSOLR-8029: more spec refinements for schema edit ",
            "id": "comment-15702387"
        },
        {
            "date": "2016-11-28T17:07:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 47fd4929e60359e3df86966451ce9372dae74fd8 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=47fd492 ]\n\nSOLR-8029: more spec refinements for schema read ",
            "id": "comment-15702509"
        },
        {
            "date": "2016-12-09T15:58:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bf89a7a405138b39d91d4dc31a9a920e4ecf6ff3 in lucene-solr's branch refs/heads/apiv2 from Cassandra Targett\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bf89a7a ]\n\nSOLR-8029: Update 'cluster' specs with descriptions and links to docs ",
            "id": "comment-15735663"
        },
        {
            "date": "2016-12-09T15:59:00+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cedc63d46e5aca384b8b34fbe7c51568ffbe671a in lucene-solr's branch refs/heads/apiv2 from Cassandra Targett\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cedc63d ]\n\nSOLR-8029: Modify schemaEdit specs; add include file for analyzers ",
            "id": "comment-15735664"
        },
        {
            "date": "2016-12-13T20:06:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6aa57e891aca031b598c085a10d26c1d82e99343 in lucene-solr's branch refs/heads/apiv2 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6aa57e8 ]\n\nSOLR-8029: Api spec parsing: Recursively handle '#include' directives in all JSON objects; replace repeated analyzer definitions in the addFieldType spec with a single file included for each of the different types of analyzers; add multiTermAnalyzer key to addFieldType spec. ",
            "id": "comment-15746128"
        },
        {
            "date": "2016-12-21T20:08:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6798877180ffc136adbe70a273b3e554df8aa370 in lucene-solr's branch refs/heads/apiv2 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6798877 ]\n\nSOLR-8029: remove stray commas in api spec files ",
            "id": "comment-15768044"
        },
        {
            "date": "2016-12-21T20:08:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 03eca9c111e68b74e4d9a160bcf5fb3cbc0d3ddf in lucene-solr's branch refs/heads/apiv2 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=03eca9c ]\n\nSOLR-8029: get introspect working for endpoints that don't include named cores or collections ",
            "id": "comment-15768045"
        },
        {
            "date": "2016-12-29T09:53:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b55e25a9900f15db1c5ffbb2f2eb1f09c831f56f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b55e25a ]\n\nSOLR-8029: avoid infinite loop ",
            "id": "comment-15784987"
        },
        {
            "date": "2017-01-05T10:44:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8c58366684f824465d46a957232664b5a11a1923 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8c58366 ]\n\nSOLR-8029: \"shard\" property should be required for \"split\" and \"create\" commands ",
            "id": "comment-15801033"
        },
        {
            "date": "2017-01-05T14:45:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1fc35c136a953d8cd8ff12cfdffa328040320d73 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1fc35c1 ]\n\nSOLR-8029: delete shard parameters added ",
            "id": "comment-15801527"
        },
        {
            "date": "2017-01-06T21:50:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d9caa8082c0e04909fd4d6b9095464ed452742b1 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d9caa80 ]\n\nSOLR-8029: changed command id to a parameter instead of path segment ",
            "id": "comment-15805884"
        },
        {
            "date": "2017-01-09T10:26:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 049cb10a21a4fdfa180c1931fdf901c1067f13ab in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=049cb10 ]\n\nSOLR-8029: _introspect for per core handlers must return the full path ",
            "id": "comment-15811399"
        },
        {
            "date": "2017-01-10T22:16:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f1bd0f462456b4aa8273b394247c6acbadf9fa3b in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f1bd0f4 ]\n\nSOLR-8029: added a testcase for absolute paths returned by _introspect api ",
            "id": "comment-15816355"
        },
        {
            "date": "2017-01-12T13:11:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit de325d98cfb86304eed299f9f794786b4bbf24a2 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=de325d9 ]\n\nSOLR-8029: improve /_introspect support for urls with trailing variables such as /blob/\n{name} ",
            "id": "comment-15820958"
        },
        {
            "date": "2017-01-12T13:47:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit caebda946abf237a97bf844fdcc5623ee4dec2eb in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=caebda9 ]\n\nSOLR-8029: spec improvements ",
            "id": "comment-15821029"
        },
        {
            "date": "2017-01-12T13:50:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b1c49bc9d6287a2453ced2432fe7e008a5f8593f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b1c49bc ]\n\nSOLR-8029: spec improvements ",
            "id": "comment-15821037"
        },
        {
            "date": "2017-01-12T13:52:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5fe6090f3e42f51be8a9c164b515ffcb7fdf5835 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5fe6090 ]\n\nSOLR-8029: spec improvements ",
            "id": "comment-15821044"
        },
        {
            "date": "2017-01-12T14:07:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 09d1a8f0c00bbad82f659051acd161b523e2746e in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=09d1a8f ]\n\nSOLR-8029: spec improvements ",
            "id": "comment-15821068"
        },
        {
            "date": "2017-01-12T14:09:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e199495c4344e6c8e8861d43ab819cd451e9f1f1 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e199495 ]\n\nSOLR-8029: spec improvements ",
            "id": "comment-15821074"
        },
        {
            "date": "2017-01-18T00:00:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4d04cc85d69af51179d0ef9269b21859ed7b2861 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4d04cc8 ]\n\nSOLR-8029: variable names changed ",
            "id": "comment-15827091"
        },
        {
            "date": "2017-01-25T18:59:00+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4ddaba397d30f9b5344545d08c809488633638d1 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4ddaba3 ]\n\nSOLR-8029: fixing some test errors ",
            "id": "comment-15838369"
        },
        {
            "date": "2017-01-25T18:59:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c91b96211b9e88c6cc7a4e3aedc14e4f1375dab8 in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c91b962 ]\n\nSOLR-8029: fixing some test errors ",
            "id": "comment-15838370"
        },
        {
            "date": "2017-01-25T19:00:27+0000",
            "author": "Noble Paul",
            "content": "I'm planning to commit this to master shortly ",
            "id": "comment-15838373"
        },
        {
            "date": "2017-01-25T19:18:43+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "I'm planning to commit this to master shortly\n+1. Yay, this is exciting! ",
            "id": "comment-15838401"
        },
        {
            "date": "2017-01-25T21:59:27+0000",
            "author": "David Smiley",
            "content": "Exciting indeed   Congrats Noble & everyone else for working so hard on it. ",
            "id": "comment-15838668"
        },
        {
            "date": "2017-01-26T01:23:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5a8dfd96a28bc316d74b5b7e74b28f16b5bd3f4b in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5a8dfd9 ]\n\nSOLR-8029: fixing precommit errors ",
            "id": "comment-15838966"
        },
        {
            "date": "2017-01-27T21:04:33+0000",
            "author": "Noble Paul",
            "content": "patch with all tests , precommit passing.  ",
            "id": "comment-15843495"
        },
        {
            "date": "2017-01-27T21:12:15+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Awesome news.\n\nSo, is this now fully implementing original specs and answering all issue questions? Or is there a newer document reflecting the actual implementation. \n\nHow do we review this, apart from pure code-reading? ",
            "id": "comment-15843499"
        },
        {
            "date": "2017-01-27T21:35:39+0000",
            "author": "Noble Paul",
            "content": "Alexandre Rafalovitch Good question. \n\nIt's unlikely that it sticks to the original documentation fully.\n\nI shall just put up a small one pager for folks who wish to review this quickly  ",
            "id": "comment-15843526"
        },
        {
            "date": "2017-01-27T23:00:59+0000",
            "author": "Noble Paul",
            "content": "Refer to this document. This is not fully updated and some of the items marked as \"missing\" are actually implemented. \nhttps://docs.google.com/document/d/18n9IL6y82C8gnBred6lzG0GLaT3OsZZsBvJQ2YAt72I/edit?usp=sharing ",
            "id": "comment-15843618"
        },
        {
            "date": "2017-01-31T05:57:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 71abe130697b0f279d6e3613145f1f8f052c7848 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71abe13 ]\n\nSOLR-8029: Added new style APIs and a framework for creating new APIs and mapping old APIs to new ",
            "id": "comment-15846429"
        },
        {
            "date": "2017-01-31T12:40:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit eb42834617a6fde7bc5f7a0c1ccbf1c9cce10e83 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eb42834 ]\n\nSOLR-8029: test failures fixed ",
            "id": "comment-15846756"
        },
        {
            "date": "2017-02-01T12:11:56+0000",
            "author": "Noble Paul",
            "content": "Things looks stable and I plan to port it to branch_6x. Any inputs, feedback are welcome. Especially on the framework, configuration etc. If there are missing APIs we can open a ticket and fix them seperately ",
            "id": "comment-15848297"
        },
        {
            "date": "2017-02-04T20:16:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d72634813b2e9014b70ce753a02c8d7297af8c81 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d726348 ]\n\nSOLR-8029: Added new style APIs and a framework for creating new APIs and mapping old APIs to new ",
            "id": "comment-15852921"
        },
        {
            "date": "2017-02-07T09:20:39+0000",
            "author": "Alan Woodward",
            "content": "Hey Noble Paul, this is failing on the Java 9 Jenkins runs because TestCoreAdminApis uses EasyMock (see SOLR-9893 and SOLR-9966).  You need to use Mockito instead. ",
            "id": "comment-15855624"
        },
        {
            "date": "2017-02-08T14:05:06+0000",
            "author": "Noble Paul",
            "content": "sure Alan Woodward . I'll fix it ",
            "id": "comment-15858019"
        },
        {
            "date": "2017-02-13T15:29:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 563f522643b5460e5b3bde1815f3f0b08c248eef in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=563f522 ]\n\nSOLR-8029: disabled easymock for java9 ",
            "id": "comment-15863825"
        },
        {
            "date": "2017-02-13T15:58:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8b5dec52f5d331ad3febd599016f8dd85480e628 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8b5dec5 ]\n\nSOLR-8029: disabled easymock for java9 ",
            "id": "comment-15863865"
        },
        {
            "date": "2017-02-15T00:22:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5c4ee10683fab338f3f4619a850d509c716ebe33 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5c4ee10 ]\n\nSOLR-8029: introspect was not showing for certain collection apis ",
            "id": "comment-15866988"
        },
        {
            "date": "2017-02-15T00:24:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 65c6c576b720b19029a10bf14f81d4de23302863 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=65c6c57 ]\n\nSOLR-8029: introspect was not showing for certain collection apis ",
            "id": "comment-15866993"
        },
        {
            "date": "2017-02-15T01:43:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9a1702a8f5b5496893a99c4e1f39cd58520786ae in lucene-solr's branch refs/heads/master from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9a1702a ]\n\nSOLR-8029: Reverting the previous commit and the merge ",
            "id": "comment-15867078"
        },
        {
            "date": "2017-02-15T01:47:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2470fbaa0ee4d1a211957bc47242bd081a31234d in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2470fba ]\n\nSOLR-8029: introspect was not showing for certain collection apis ",
            "id": "comment-15867081"
        },
        {
            "date": "2017-04-07T14:14:46+0000",
            "author": "Cassandra Targett",
            "content": "Noble Paul - Since the new APIs were included with Solr 6.5, and there is SOLR-10432 for follow-on items, this should be resolved, right? ",
            "id": "comment-15960860"
        }
    ]
}