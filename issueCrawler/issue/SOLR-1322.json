{
    "id": "SOLR-1322",
    "title": "range queries won't work for trie fields with precisionStep=0",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "range queries won't work for trie fields with precisionStep=0... a normal range query should be used in this case.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12737899",
            "date": "2009-08-01T15:44:45+0000",
            "content": "Oops - precisionStep should be big, not zero... so NumericRangeQuery may still work after all.\nThe issue actually has more to do with multiValued fields with a real precisionStep. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12737900",
            "date": "2009-08-01T15:50:40+0000",
            "content": "The issue actually has more to do with multiValued fields with a real precisionStep.\n\nI'm sorry, I don't understand what you mean by that. What is the issue? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12737906",
            "date": "2009-08-01T16:11:10+0000",
            "content": "If trie fields are indexed in parts, NumericRangeQuery will produce invalid results for multiValued fields... that's a limitation of the trie encoding (not easily fixable at all). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12738601",
            "date": "2009-08-03T21:19:41+0000",
            "content": "committed - precisionStep is ignored if the field is multiValued. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12738986",
            "date": "2009-08-04T14:22:06+0000",
            "content": "If trie fields are indexed in parts, NumericRangeQuery will produce invalid results for multiValued fields... that's a limitation of the trie encoding (not easily fixable at all). \n\nI do not really understand the problem with MultiValueFields. I had trie fields in my index in the past that had multiple trie values and numeric range queries worked with it. What is the problem? You should be able to add more than one value using separate Field instances to the index.\n\nA NumericRangeQuery on a MultiValued field should show results for all documents as soon as one of the indexed values fall into the range. Correct me if I am wrong! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12738989",
            "date": "2009-08-04T14:39:58+0000",
            "content": "A NumericRangeQuery on a MultiValued field should show results for all documents as soon as one of the indexed values fall into the range.\n\nAh, you're right, because NumericRangeQuery uses a pure disjunctive model (it only logically ORs different terms).\nAny types of queries that did an AND inbetween terms would get messed up, but we don't have any of those! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12738990",
            "date": "2009-08-04T14:40:24+0000",
            "content": "reopening - tries can work for multiValued fields "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12738993",
            "date": "2009-08-04T14:45:48+0000",
            "content": "Correct, but it is good to think about it multiple times. I always fall into the same trap when thinking about it, but as soon as I have a picture with the indexed terms it gets clear again. I think, I should write a test about this special case inside TestNumericRangeQueryXX (index multiple values and do some ranges with precStep=inf and real precStep on the same field and compare results). "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12739069",
            "date": "2009-08-04T18:15:29+0000",
            "content": "I added a test to Lucene Core that verifies, that multi-valued terms work correctly: Revision #800896   "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12739102",
            "date": "2009-08-04T19:09:26+0000",
            "content": "committed patch that removes precisionStep checks if multiValued and updates comments in the example schema. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775822",
            "date": "2009-11-10T15:52:11+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}