{
    "id": "LUCENE-3894",
    "title": "Make BaseTokenStreamTestCase a bit more evil",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Throw an exception from the Reader while tokenizing, stop after not consuming all tokens, sometimes spoon-feed chars from the reader...",
    "attachments": {
        "LUCENE-3894_maxWordLength.patch": "https://issues.apache.org/jira/secure/attachment/12519160/LUCENE-3894_maxWordLength.patch",
        "LUCENE-3894.patch": "https://issues.apache.org/jira/secure/attachment/12519130/LUCENE-3894.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-20T21:48:39+0000",
            "content": "Patch; tests pass.\n\nI had to fix up Edge/NGramTokenizers to work w/ spoon feeding, but otherwise no analyzers seem to be failing, at least on one run...\n\nI had to do some sneaky things with MockTokenizer to work around its state machine... ",
            "author": "Michael McCandless",
            "id": "comment-13233823"
        },
        {
            "date": "2012-03-20T22:02:47+0000",
            "content": "Fixed a few things... ",
            "author": "Michael McCandless",
            "id": "comment-13233856"
        },
        {
            "date": "2012-03-20T22:28:51+0000",
            "content": "+1 Mike, here's an updated patch... the random test for icutokenizer now passes (spoonfeeding caught a bug).\n\nBut, now testHugeDoc fails... (not a random test). ",
            "author": "Robert Muir",
            "id": "comment-13233881"
        },
        {
            "date": "2012-03-20T22:33:08+0000",
            "content": "I think that new read method needs to use the incoming offset (ie, pass location + offset, not location, as 2nd arg to input.read)?  Does testHugeDoc then pass? ",
            "author": "Michael McCandless",
            "id": "comment-13233886"
        },
        {
            "date": "2012-03-20T22:39:17+0000",
            "content": "Thats it! But this 'new read method' is not really new, its from commons-io! we should open a bug over there... ",
            "author": "Robert Muir",
            "id": "comment-13233893"
        },
        {
            "date": "2012-03-20T23:19:59+0000",
            "content": "I opened IO-311 for the missing offset bug. ",
            "author": "Robert Muir",
            "id": "comment-13233934"
        },
        {
            "date": "2012-03-20T23:34:30+0000",
            "content": "Thanks Rob! ",
            "author": "Michael McCandless",
            "id": "comment-13233945"
        },
        {
            "date": "2012-03-21T00:51:48+0000",
            "content": "I think we have bugs in some tokenizers. Its currently very hard to reproduce and we get no random seed \n\nI think the issue is the maxWordLength=20. This is not long enough to catch bugs in tokenizers I think,\nwe should exceed whatever buffersize they use for example.\n\nSo I think we need to refactor this logic so that the multithreaded tests take maxWordLength, and ensure\nthis parameter is always respected.\n\nThis way, tests for things like tokenizers can bump this up to things like CharTokenizer.IO_BUFFER_SIZE*2\nor whatever makes sense to them, to ensure we really test them well.\n\nI don't like the fact that only my stupid trivial test (testHugeDoc) found the IO-311 bug, what if we\ndidn't have that silly test? \n\nI'll add a patch. ",
            "author": "Robert Muir",
            "id": "comment-13233996"
        },
        {
            "date": "2012-03-21T00:54:48+0000",
            "content": "patch for the maxWordLength issue.\n\nThis also makes the single-threaded version that the multi-threaded versions call private, so that its not accidentally used (losing test coverage).\n\nNow we can beef up tokenizer tests to test longer strings, for stemmers and filters i think 20 is probably fine though. ",
            "author": "Robert Muir",
            "id": "comment-13233998"
        }
    ]
}