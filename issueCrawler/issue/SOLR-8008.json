{
    "id": "SOLR-8008",
    "title": "bin/solr should delete configset if collection creation fails and no other collection references it",
    "details": {
        "components": [
            "scripts and tools"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "A user's list question prompted this, and at least two other devs hit it so I'm not imagining things.\n\nThe bin/solr script (and SolrCLI) for create_collection uploads the config set automatically if (and only if) it's not in ZK already. But...\nLet's say I have a problem with my config files (syntax error, deprecated options, whatever) that prevents the collection from being created. It gets pretty confusing to correct the configs and try to create your collection again and have it fail for the same reason because the configs weren't re-uploaded to ZK.\n\nI can think of at least three+ options:\n1> delete the configsets from ZK in collection failure case if (and only if) it isn't referenced by another collection. I like this one as, from a user's perspective, it's least confusing. I see my collection creation failed because of a problem in my configs. I correct the configs and do the exact same operation again and it succeeds.\n1a> provide a \"force configset update\" option for create_collection. This one's easiest I think.\n\n2> Provide an upload_configset option that overwrites an existing configset. Perhaps with a -force flag to insure it's done intentionally.\n\n3> make the delete collection option remove a configset named identically to the collection even if the collection doesn't exist.\n\nThoughts?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-03T18:16:22+0000",
            "author": "Mark Miller",
            "content": "3\n\nI don't like 3. These are two separate things, messing with collections should not mess with config sets.\n\nUpload configs should already overwrite? It doesn't? ",
            "id": "comment-14729501"
        },
        {
            "date": "2015-09-03T19:10:31+0000",
            "author": "Anshum Gupta",
            "content": "I don't like 3 either. I like 1a as I think it's the most user friendly and least invasive. Perhaps also warn/prompt of existing collections that use the configset you are about to update? ",
            "id": "comment-14729609"
        },
        {
            "date": "2015-09-03T19:19:28+0000",
            "author": "Erick Erickson",
            "content": "bq: I don't like 3. These are two separate things, messing with collections should not mess with config sets.\n\nI'm not a fan of it either, just getting all the options out there. I'll quibble a little bit here, the\noptions in bin/solr already mess with config sets when messing with collections by uploading\nthe specified configset if it's not there already when creating a collection. The argument that\ncreate_collection shouldn't do this could certainly be made.\n\nbq: Upload configs should already overwrite? It doesn't?\n\nYes it does, but it requires you to go outside the bin/solr script and use zkcli directly which is an extra complication IMO. Ideally I'd like the users to never need to know that zkcli exists. And there's no command in bin/solr that lets you upload configsets separately, perhaps there should be.\n\nIt's confusing that the process for a new user is\n-bin/solr create_collection blah blah\n>>create failed because of a bad config (in this particular case, \n    it looks like the user was trying to use a 4.x schema that had \n    deprecated options)\n\n\tfix the schema\n-use the same create_collection call and it fails with the \n   same error b/c the fixed configset wasn't uploaded.\n\n ",
            "id": "comment-14729623"
        },
        {
            "date": "2015-09-07T14:46:03+0000",
            "author": "Mark Miller",
            "content": "I'm not a fan of it either, just getting all the options out there. I'll quibble a little bit here, the\noptions in bin/solr already mess with config sets when messing with collections by uploading\nthe specified configset if it's not there already when creating a collection.\n\nBootstrapping a collection by auto uploading a config set for it is one thing. I have no problem with that. Automatically deleting a shared resource like that when messing with another resource is very different I think.\n\nAnd there's no command in bin/solr that lets you upload configsets separately, perhaps there should be.\n\nAgreed that it should be easy to upload a config set again. Making the start script also able to handle config seems like the right approach to me. A tool that does one and only implicitly the other is going to have a lot of problems. ",
            "id": "comment-14733800"
        },
        {
            "date": "2015-09-07T16:07:47+0000",
            "author": "Erick Erickson",
            "content": "bq: A tool that does one and only implicitly the other is going to have a lot of problems.\n\nI think that crystalizes what I'm thinking. Personally I'd like both a -overwriteConfig\noption on the create and a separate uploadConfig option, but then I'm not writing\nthe code..\n\nHmmm, instead of an -overwriteConfig option, maybe require a confirmation if you specify a configset when creating a collection and the configset is already in ZK like  \"configuration set blahblahblah already exists in Zookeeper, overwrite?\". Actually I like this better than an overwrite flag, it doesn't require the user to do anything different the second time they create a collection than they did the first time. Requiring an overwrite flag would still be confusing because there's no way for them to know the fixed configs didn't get sent to ZK, leaving them puzzled why the fixes didn't \"take\".\n\nOr even just error out on create collection when the configset already exists with an appropriate message. We'd need an uploadconfig command in that case though.\n\nI think there should be an uploadConfig separately too... ",
            "id": "comment-14733875"
        },
        {
            "date": "2018-08-24T15:52:15+0000",
            "author": "Erick Erickson",
            "content": "I ran across this looking for something else. I propose we just close it as \"won't fix\". We have the configsets api and bin/solr is another way to approach it so I think we have enough tools to deal with this issue.\n\nI'll close it over the weekend unless there are objections. ",
            "id": "comment-16591840"
        }
    ]
}