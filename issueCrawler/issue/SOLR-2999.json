{
    "id": "SOLR-2999",
    "title": "spellcheck-index is rebuilt on commit if optimized",
    "details": {
        "affect_versions": "3.1,                                            3.2,                                            3.3,                                            3.4,                                            3.5,                                            4.0-ALPHA",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "If an empty commit (i.e. without having posted new documents) is issued on an optimized index, the spellcheck-index is rebuilt even though solrconfig defines buildOnOptimize=true, not buildOnCommit=true.\n\nThe problem was discovered on solr 4.0 but seems to happen on 3.x, too. Discussion and further information can be found on the list (http://lucene.472066.n3.nabble.com/spellcheck-index-is-rebuilt-on-commit-tp3626492p3626492.html)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13178730",
            "date": "2012-01-03T13:32:26+0000",
            "content": "One proposed solution is for spellchecker to record the index version when doing a rebuild and use this to determine if index has changed.\n\nThis can probably be utilized to avoid unnecessary buildOnCommit on empty commit as well. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13179799",
            "date": "2012-01-04T19:39:11+0000",
            "content": "I am not sure if this is easily fixable. Even with version you can not really tell if we just merged two segments into one (background merge) or if we called optimize. It seems we have three problems here. 1) we can't really tell if we optimized or not 2) we commit and trigger a new searcher even if there is no change in the IW 3) Spellchecker relies on somewhat unrelated events to rebuild \n\nIMO this is totally fu**ed up and we should not rely on any of those events but require that a rebuild should be triggered explicitly. What we currently do is neither onCommit nor onOptimize we do onNewSearcher which is not what the API promises. Fixing the entire thing to do a onCommit / onOptimize would require waiting for the searcher to be available which I doubt is going to be easy nor worth it.\n\nI think we should make this super explicit and don't rely on any obscure events. The user knows when this should be rebuild and I personally would like to have an API that does less implicit things.\n\njust my $0.05 "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13180075",
            "date": "2012-01-05T01:20:28+0000",
            "content": "Mostly agree to this. Another thing is that the IndexBasedSpellChecker also is very slow to rebuild (and single threaded as well), so in real life you NEVER want to build on every commit, even if it sounds nice, especially not on large indexes. Also, as there is less need in general to call optimize explicitly anymore, buildOnOptimize is not super useful either.\n\nWhat WOULD make sense instead of these two is a \"cron\" based build, say \"autoBuild=true\" and \"autoBuildIntervalSec=3600\". We could listen to the same event as today, but only trigger a build if more than N seconds has passed since last build - and only if the index has changed. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13180101",
            "date": "2012-01-05T01:41:59+0000",
            "content": "as there is less need in general to call optimize explicitly anymore, buildOnOptimize is not super useful either.\n\nthe number of reasons to call optimize hasn't changed: if you know your index isn't going to be modified for \"a while\" then it can be efficient to optimize your index down to a single segment.  for people who don't do incremental updates, who just build whole indexes from scratch (either manually, or on some fixed schedule) optimizing at the end of their index build process can make a lot of sense, and features like this to automaticly generate the spell check dictionary from the index once it's built and optimized can be useful to people in that situation.\n\nHaving that said: if it's broken, and has never really worked properly, and there is no clean way to make it work, then let's just rip the fucker out and tell people \"we're sorry, but this feature has never worked properly so it's no longer supported, send a request with spellcheck.build=true if/when you want the index rebuilt\"\n\n(particularly if, as i understand it, IndexBasedSpellChecker is a lame-duck and moving forward people should use DirectSolrSpellChecker instead .. making FileBasedSpellChecker the only impl where \"rebuild\" matters, and  buildOnCOmmit and builtOnOptimize are both really silly in that case) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13180119",
            "date": "2012-01-05T02:03:52+0000",
            "content": "I forgot to mention...\n\nFWIW: the SpellCheckerListener could be made a little smarter so that it compared the reader/segments/whatever from the newSearcher with the currentSearcher \u2013 that would help mitigate the cases where a No-Op commit is triggering a rebuild, but it still wouldn't help the situations like simon described where the index just happens to shrink to a single segment as a result of a fortuitous merge.  an argument could be made that it's \"ok\" for that to trigger a spellchecker rebuild if buildOnOptimize==true, since the index is in fact optimized now, but i don't necessarily feel that way.\n\ni say just rip the shit out let the user trigger the rebuild remotely as needed  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13180130",
            "date": "2012-01-05T02:20:35+0000",
            "content": "One thing I would mention is that it seems the IndexBasedSpellChecker is always \"rebuilt\" as in completely blown away and recreated.\n\nYet it does not store any frequency information (things like docFreq are always gathered from the main index), it only indexes\nterm text in a special way. \n\nBecause of this, I don't actually understand why solr always rebuilds it from scratch when it supports updates... is there a reason for this?\n\nIt seems that 'rebuilding' an indexbasedspellchecker really doesn't help you that much, it only cleans out some potentially dead terms \nthat would be filtered out at correction time anyway (docFreq = 0), and this is even less likely if you are using e.g. HighFrequencyDictionary.\n\nShouldn't the default be to just 'update' ?  "
        },
        {
            "author": "James Dyer",
            "id": "comment-13180469",
            "date": "2012-01-05T15:36:16+0000",
            "content": "Another reason removing this functionality might make sense:  users can just put a build command in the firstsearcher/newsearcher warming queries, ensuring a build whenever a new searcher is opened.  I've found this a better option than using buildOnCommit/buildOnOptimize.  We have 1 index that does incremental updates and another that rebuilds nightly and its a good technique in both situations. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13237051",
            "date": "2012-03-23T20:31:34+0000",
            "content": "Bulk changing fixVersion 3.6 to 4.0 for any open issues that are unassigned and have not been updated since March 19.\n\nEmail spam suppressed for this bulk edit; search for hoss20120323nofix36 to identify all issues edited "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412074",
            "date": "2012-07-11T22:25:55+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429811",
            "date": "2012-08-07T03:43:15+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13451080",
            "date": "2012-09-07T22:31:47+0000",
            "content": "removing fixVersion=4.0 since there is no evidence that anyone is currently working on this issue.  (this can certainly be revisited if volunteers step forward)\n "
        }
    ]
}