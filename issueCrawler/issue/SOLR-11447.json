{
    "id": "SOLR-11447",
    "title": "ZkStateWriter should process commands in atomic",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "ZkStateWriter should process all the ZkWriteCommands correspond to a message in atomic ( we are processing one by one command right now ). Some ZkWriteCommands can get lost. Here is the case :\n1. We process DOWNNODE message ( whatever message that produces multiple ZkWriteComand ).\n2. We poll that message from stateUpdateQueue and push it to workQueue ( for backup ).\n3. The DOWNNODE message is converted into multiple ZkWriteCommand\n4. We enqueue one by one ZkWriteCommand into ZkStateWriter. Any command can trigger flush, which calls the onWrite() callback to empty workQueue\n5. The Overseer gets restarted, and the rest of ZkWriteCommands (which not get processed in step 4) will be lost because the workQueue is empty now (because onWrite() callback in step 4)",
    "attachments": {
        "SOLR-11447.patch": "https://issues.apache.org/jira/secure/attachment/12891192/SOLR-11447.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-10T02:08:01+0000",
            "content": "My patch for this ticket, including test. This patch\n\n\tZkStateWriter.enqueueUpdate now accept a list of ZkWriteCommand instead of just single ZkWriteCommand\n\tdo some refactoring in enqueueUpdate to makes it cleaner\n\tdo a change on ZkStateWriter.maybeFlushAfter, right now we use updates.size() to trigger the flush, but I think this logic is wrong, because of updates.size() equals to the number of collection get changed not how many ZkWriteCommand get processed.\n\n\n\nBut I kinda confuse on handling ZkStateWriter.maybeFlushBefore with multiple commands, can you please take a look?\nShalin Shekhar Mangar Noble Paul ",
            "author": "Cao Manh Dat",
            "id": "comment-16198035"
        },
        {
            "date": "2017-10-13T08:17:42+0000",
            "content": "Updated patch :\n\n\tRemoving maybeFlushBefore()\n\tHandle NO_OP correctly\n\n\n\nWill commit soon. ",
            "author": "Cao Manh Dat",
            "id": "comment-16203188"
        },
        {
            "date": "2017-10-13T08:23:57+0000",
            "content": "Commit 8a7d04a6582e6f1509660300d5421da034593420 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8a7d04a ]\n\nSOLR-11447: ZkStateWriter should process commands in atomic ",
            "author": "ASF subversion and git services",
            "id": "comment-16203191"
        },
        {
            "date": "2017-10-16T09:32:57+0000",
            "content": "Commit dea85256a485800b8ddebc149bc6765e7da90412 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dea8525 ]\n\nSOLR-11447: ZkStateWriter should process commands in atomic ",
            "author": "ASF subversion and git services",
            "id": "comment-16205625"
        }
    ]
}