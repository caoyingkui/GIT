{
    "id": "LUCENE-8206",
    "title": "TestIndexWriterWithThreads has wall-clock time dependency",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Task",
        "components": [],
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ]
    },
    "description": "final long stopTime = System.currentTimeMillis() + 200;\n\n\n\nThis can cause failures on slower machines.\n\nBuild: https://builds.apache.org/job/Lucene-Solr-Tests-master/2422/\n\n3 tests failed.\nFAILED:  org.apache.lucene.index.TestIndexWriterWithThreads.testCloseWithThreads\n\nError Message:\nthread failed before indexing a single document\n\nStack Trace:\njava.lang.AssertionError: thread failed before indexing a single document",
    "attachments": {
        "LUCENE-8206.patch": "https://issues.apache.org/jira/secure/attachment/12915030/LUCENE-8206.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16403738",
            "date": "2018-03-17T21:29:27+0000",
            "content": "So this test is pretty ugly in general... I tried to improve wall-time hacks by adding a cyclic barrier instead of a main thread sleep and by removing the forked thread timeout condition entirely: if the test deadlocks, the framework will issue the failure, including stack traces.\n\nI could not get testOpenTwoIndexWritersOnDifferentThreads to ever complete. This test is strange... it has assumptions inside (instead of an if statement?). I don't understand what it should be testing and why the assumptions are there, but I didn't take a very close look. ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-16404063",
            "date": "2018-03-18T17:19:06+0000",
            "content": "Ok, cleaned up testOpenTwoIndexWritersOnDifferentThreads a bit more and did succeed in making it reach the assertions block (2 per 1000 runs, so chances are slim). It passed. I'll commit those changes in. ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-16404093",
            "date": "2018-03-18T18:14:58+0000",
            "content": "Commit d09cc1cb0b8cf6e30079c4f4e42d59e6e47d0e1a in lucene-solr's branch refs/heads/master from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d09cc1c ]\n\nLUCENE-8206: improvements to TestIndexWriterWithThreads. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16404094",
            "date": "2018-03-18T18:15:57+0000",
            "content": "Commit 633d20fa07b87c65cc96b5cdde2739e1ea5043df in lucene-solr's branch refs/heads/branch_7x from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=633d20f ]\n\nLUCENE-8206: improvements to TestIndexWriterWithThreads. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16404095",
            "date": "2018-03-18T18:17:22+0000",
            "content": "ah bummer I was just reviewing it. I think it LGTM mostly. I'd just throw AssertionError instead of wrapping it in a RT exception if the barrier barfs. There is also a Thread.sleep(100); in there that I would love to see gone maybe replace it with a yield()? thanks for taking care of it. ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16404096",
            "date": "2018-03-18T18:21:12+0000",
            "content": "Argh.. sorry Simon! Please go ahead and do a follow-up. AssertionError is fine, but it wouldn't make much difference in general (the test framework would handle whatever is thrown up to the the default handler). I was thinking about adding yield... but eventually didn't since it was too scare for me to touch that stuff.  ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-16404494",
            "date": "2018-03-19T08:31:49+0000",
            "content": "Dawid Weiss no worries. Both comments were style / taste and/or optional. I am ok with the patch, thanks for working on it! ",
            "author": "Simon Willnauer"
        }
    ]
}