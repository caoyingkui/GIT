{
    "id": "SOLR-11459",
    "title": "AddUpdateCommand#prevVersion is not cleared which may lead to problem for in-place updates of non existed documents",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "7.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I have a 1_shard / m_replicas SolrCloud cluster with Solr 6.6.0 and run batches of 5 - 10k in-place updates from time to time. \nOnce I noticed that job \"hangs\" - it started and couldn't finish for a a while.\nLogs were full of messages like:\n\n\n Missing update, on which current in-place update depends on, hasn't arrived. id=__, looking for version=___, last found version=0\"  \n\n\n\n \nTried to fetch document ___ from the leader, but the leader says document has been deleted. Deleting the document here and skipping this update: Last found version: 0, was looking for: ___\",24,0,\"but the leader says document has been deleted. Deleting the document here and skipping this update: Last found version: 0\n\n\n\nFurther analysis shows that:\n\n\tThere are 100-500 updates for non-existed documents among other updates (something that I have to deal with)\n\tLeader receives bunch of updates and executes this updates one by one. JavabinLoader which is used by processing documents reuses same instance of AddUpdateCommand for every update and just clearing its state at the end. Field AddUpdateCommand#prevVersion is not cleared.\n\tIn case of update is in-place update, but specified document does not exist, this update is processed as a regular atomic update (i.e. new doc is created), but prevVersion is used as a distrib.inplace.prevversion parameter in sequential calls to every slave in DistributedUpdateProcessor. prevVersion wasn't cleared, so it may contain version from previous processed update.\n\tSlaves checks it's own version of documents which is 0 (cause doc does not exist), slave thinks that some updates were missed and spends 5 seconds in DistributedUpdateProcessor#waitForDependentUpdates waiting for missed updates (no luck) and also tries to get \"correct\" version from leader (no luck as well)\n\tSo update for non existed document costs m * 5 sec each\n\n\n\n\nI workarounded this by explicit check of doc existence, but it probably should be fixed.\n\nObviously first guess is that  prevVersion should be cleared in AddUpdateCommand#clear, but have no clue how to test it.\n\n\n+++ solr/core/src/java/org/apache/solr/update/AddUpdateCommand.java\t(revision )\n@@ -78,6 +78,7 @@\n      updateTerm = null;\n      isLastDocInBatch = false;\n      version = 0;\n+     prevVersion = -1;\n    }",
    "attachments": {
        "SOLR-11459.patch": "https://issues.apache.org/jira/secure/attachment/12909159/SOLR-11459.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-18T15:04:07+0000",
            "content": "Ishan Chattopadhyaya, any thoughts about this? ",
            "author": "Andrey Kudryavtsev",
            "id": "comment-16209491"
        },
        {
            "date": "2017-10-18T16:05:22+0000",
            "content": "Hi Andrey,\nI'm currently on a vacation and shall take a look at this on Friday.\nOn a cursory glance, it seems what you're recommending makes sense. I'll have to be more thorough in order to be sure.\nThere are TestInPlaceUpdatesStandalone and TestInPlaceUpdatesDistrib tests. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-16209598"
        },
        {
            "date": "2018-01-17T02:18:50+0000",
            "content": "GitHub user werder06 opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/307\n\n    SOLR-11459 Clear AddUpdateCommand#prevVersion to fix in-place updates\u2026\n\n    \u2026 for non existed documents\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/werder06/lucene-solr master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/307.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #307\n\n\ncommit 38a689190e80860e9efcfc6bc121f86656801044\nAuthor: Andrey <akudryav@...>\nDate:   2018-01-17T02:17:54Z\n\n    SOLR-11459 Clear AddUpdateCommand#prevVersion to fix in-place updates for non existed documents\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-16328178"
        },
        {
            "date": "2018-01-17T02:27:18+0000",
            "content": "Hope to fix this one.\u00a0\n\nThe test is not ideal, it will fail without \"prevVersion = -1\" cause of there doc with id = 2\u00a0will not\u00a0present\u00a0on\u00a0every replica\u00a0after in-place update. But as there is\u00a0TestInPlaceUpdatesStandalone#testDVUpdatesWithDelete to check that in-place update for non existed docs will result in a doc creation, I think it's ok to have it's distributed analog.\u00a0\n\n\u00a0 ",
            "author": "Andrey Kudryavtsev",
            "id": "comment-16328190"
        },
        {
            "date": "2018-01-18T20:07:04+0000",
            "content": "I'd like to pull it in, but here is the issue. I rolled back the code change\n\n\n$ git diff -- src/java/org/apache/solr/update/AddUpdateCommand.java\ndiff --git a/solr/core/src/java/org/apache/solr/update/AddUpdateCommand.java b/solr/core/src/java/org/apache/solr/update/AddUpdateCommand.java\nindex cb1af9a..af39726 100644\n--- a/solr/core/src/java/org/apache/solr/update/AddUpdateCommand.java\n+++ b/solr/core/src/java/org/apache/solr/update/AddUpdateCommand.java\n@@ -78,6 +78,7 @@ public class AddUpdateCommand extends UpdateCommand implements Iterable<Document\nupdateTerm = null;\nisLastDocInBatch = false;\nversion = 0;\n+ /// prevVersion = -1;\n}\n\n\n\n$ git status\n        modified:   src/java/org/apache/solr/update/AddUpdateCommand.java\n        modified:   src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib.java\n        modified:   ../test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java\n\n\n\n$ ant test -Dtestcase=TestInPlaceUpdatesDistrib\n...\n\nBUILD SUCCESSFUL\nTotal time: 3 minutes 55 seconds\n\n\n\nSo, it seems like it's lacking test coverage that's sad. ",
            "author": "Mikhail Khludnev",
            "id": "comment-16331113"
        },
        {
            "date": "2018-01-18T22:59:59+0000",
            "content": "Try\u00a0\n\nant test\u00a0 -Dtestcase=TestInPlaceUpdatesDistrib -Dtests.seed=B15B19F853ACE2C4\n\nDon't be sad. ",
            "author": "Andrey Kudryavtsev",
            "id": "comment-16331393"
        },
        {
            "date": "2018-01-19T09:00:46+0000",
            "content": "Got it. It fails. It's fine.\n\n [junit4] Tests with failures [seed: B15B19F853ACE2C4]:\n [junit4] - org.apache.solr.update.TestInPlaceUpdatesDistrib.test\n\n\nHowever, it's NPE fail from the test method\n\n[23:00:39.841] ERROR 50.7s | TestInPlaceUpdatesDistrib.test <<<\n > Throwable #1: java.lang.NullPointerException\n > at __randomizedtesting.SeedInfo.seed([B15B19F853ACE2C4:390F2622FD508F3C]:0)\n > at org.apache.solr.update.TestInPlaceUpdatesDistrib.updateExistedAndNonExistedDocs(TestInPlaceUpdatesDistrib.java:433)\n > at org.apache.solr.update.TestInPlaceUpdatesDistrib.test(TestInPlaceUpdatesDistrib.java:147)\n\nTestInPlaceUpdatesDistrib.java:433\n\u00a0 \u00a0assertEquals(50.0f, client.getById(\"2\").get(\"inplace_updatable_float\"));\n\n\n\nThe author, somehow tell us that the update should create this doc. It's not clear whether it's described as an expected behavior. But even it is, can we have clearer assertNotNull()? Also, can't we don't copy-paste\u00a0introduce indexDocs() but rather loop through docs?\u00a0\u00a0 \u00a0\u00a0\n\n\u00a0\n\n\u00a0 ",
            "author": "Mikhail Khludnev",
            "id": "comment-16331948"
        },
        {
            "date": "2018-01-19T17:39:20+0000",
            "content": "The author, somehow tell us that the update should create this doc. It's not clear whether it's described as an expected behavior. But even it is, can we have clearer assertNotNull()?\u00a0\nNo problem.\u00a0\nAlso, can't we don't\u00a0copy-paste\u00a0introduce\u00a0indexDocs()\u00a0but rather loop through docs?\u00a0\nNot sure about this one. I need a batch\u00a0of updates on a same\u00a0Solr node to\u00a0see problems when\u00a0same instance of AddUpdateCommand is reused\u00a0for different updates. So it's like add(Collection<SolrInputDocument> docs)\u00a0must have here.\u00a0\n\n\u00a0 ",
            "author": "Andrey Kudryavtsev",
            "id": "comment-16332599"
        },
        {
            "date": "2018-02-04T19:17:42+0000",
            "content": "Great investigation and the test, Andrey Kudryavtsev. I'm going to commit SOLR-11459.patch next week.\n\nNote: rolling back one-liner fix fails well with\u00a0\u00a0\n\nant test\u00a0 -Dtestcase=TestInPlaceUpdatesDistrib -Dtests.seed=693C5C2078500204:553EDF06E26EA4D0 -Dtests.slow=true -Dtests.locale=ga -Dtests.timezone=US/Arizona -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\n\u00a0 ",
            "author": "Mikhail Khludnev",
            "id": "comment-16351869"
        },
        {
            "date": "2018-02-05T20:27:06+0000",
            "content": "This patch\u00a0gives some unrelated failures. But from what I see these tests often or even (always) blink now. Like:\n\n   [junit4] Tests with failures [seed: 7506124B2E5AC21A]:\n   [junit4]   - org.apache.solr.handler.admin.AutoscalingHistoryHandlerTest.testHistory\n   [junit4]   - org.apache.solr.cloud.autoscaling.TriggerIntegrationTest.testMetricTrigger\n\n\n\nAny objections or concerns for committing this patch? \n\u00a0\n\n\u00a0 ",
            "author": "Mikhail Khludnev",
            "id": "comment-16352888"
        },
        {
            "date": "2018-02-06T00:54:48+0000",
            "content": "+1 to the patch. The failures seem unrelated. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-16353172"
        },
        {
            "date": "2018-02-06T18:08:31+0000",
            "content": "Commit c50806824005b979a7e4854af38b2d8071bc52c0 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c508068 ]\n\nSOLR-11459: Fix in-place nonexistent doc update following existing doc update ",
            "author": "ASF subversion and git services",
            "id": "comment-16354268"
        },
        {
            "date": "2018-02-06T18:29:40+0000",
            "content": "Commit 76d94c19bb8f6480ec0119ad77d6601432b7099b in lucene-solr's branch refs/heads/branch_7x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=76d94c1 ]\n\nSOLR-11459: Fix in-place nonexistent doc update following existing doc update ",
            "author": "ASF subversion and git services",
            "id": "comment-16354302"
        },
        {
            "date": "2018-02-06T19:28:47+0000",
            "content": "Commit 2c2a03f01d9a2fbbd7031d3f15a971b5aeb0c598 in lucene-solr's branch refs/heads/branch_7x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2c2a03f ]\n\nRevert \"SOLR-11459: Fix in-place nonexistent doc update following existing doc update\"\n\nThis reverts commit 76d94c19bb8f6480ec0119ad77d6601432b7099b. ",
            "author": "ASF subversion and git services",
            "id": "comment-16354426"
        },
        {
            "date": "2018-02-06T20:01:38+0000",
            "content": "Commit 359ae6fe6efa06feaefa67ea2465589e92dd52bb in lucene-solr's branch refs/heads/branch_7x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=359ae6f ]\n\nSOLR-11459: Fix in-place nonexistent doc update following existing doc update\n\nApplying again. No changes. ",
            "author": "ASF subversion and git services",
            "id": "comment-16354476"
        }
    ]
}