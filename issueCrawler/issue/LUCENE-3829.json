{
    "id": "LUCENE-3829",
    "title": "Lucene40 codec's DocValues DirectSource impls aren't thread-safe",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "Our DirectSource impls hold IndexInput(s) open against the dat/idx\nfiles, which we then seek + read when loading a specific document's\nvalue.  But this is in no way protected against multiple threads\nI think...?",
    "attachments": {
        "LUCENE-3829.patch": "https://issues.apache.org/jira/secure/attachment/12516198/LUCENE-3829.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-02-27T19:18:28+0000",
            "content": "Patch showing the failure (you have to remove the true || in\nTestDocValuesIndexing.testWithThreads), and also (separately) adding\nDV coverage to LineFileDocs for better test coverage.\n\nI'll commit the patch shortly (it's tests only, and passing because I\ndisabled testing DirectSource with threads until we can fix this\nissue; we still test Source with threads). ",
            "author": "Michael McCandless",
            "id": "comment-13217413"
        },
        {
            "date": "2012-02-27T19:23:25+0000",
            "content": "Good catch! maybe we need per-thread cloning like for stored fields?\n\nAt least all this is more funny than stupid FC insanity by reader wrapping... DOH! ",
            "author": "Uwe Schindler",
            "id": "comment-13217417"
        },
        {
            "date": "2012-02-27T19:27:50+0000",
            "content": "maybe we need per-thread cloning like for stored fields?\n\nYeah I think we need something just like that... not sure where we should insert it into the API though.\n\nAt least all this is more funny than stupid FC insanity by reader wrapping... DOH!\n\n ",
            "author": "Michael McCandless",
            "id": "comment-13217428"
        },
        {
            "date": "2012-02-28T19:57:26+0000",
            "content": "wait, I think your test is wrong. DV consumer should pull a source directly from DV per thread. An instance is not threadsafe per-se. if you pull an \"in-memory\" source you can simply share it but the interface doesn't guarantee this. you can simply pull the \"in-memory\" source in each thread and you get the same instance since it is cached. The same is true for the on-disk source since it is not cached. I clone the IndexInput in getDirectSource() to prevent this problem.  ",
            "author": "Simon Willnauer",
            "id": "comment-13218542"
        },
        {
            "date": "2012-02-28T23:15:02+0000",
            "content": "Duh, thanks Simon \n\nOnce I fixed the test to use the API correctly, it passes! ",
            "author": "Michael McCandless",
            "id": "comment-13218683"
        }
    ]
}