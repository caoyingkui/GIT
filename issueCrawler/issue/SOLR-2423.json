{
    "id": "SOLR-2423",
    "title": "FieldType can take Object rather then String",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Currently, FieldType takes a String value and converts that to whatever it uses internally \u2013 it would be great to be able to pass an Object in directly.  For embeded solr, and for UpdateRequestProcessors that wish to reuse objects in various fields, this will avoid conversion to and from string.\n\nThis is a major API change, so it should only apply to 4.0",
    "attachments": {
        "SOLR-2423-field-object.patch": "https://issues.apache.org/jira/secure/attachment/12473466/SOLR-2423-field-object.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-13005999",
            "date": "2011-03-12T07:18:19+0000",
            "content": "This patch changes the FieldType (and SchemaField) method signatures to use Object\n\n\n-  public Fieldable createField(SchemaField field, String externalVal, float boost) {\n+  public Fieldable createField(SchemaField field, Object value, float boost) {\n\n\n\nIt also changes DocumentBuilder to use the Object directly "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13006001",
            "date": "2011-03-12T07:22:01+0000",
            "content": "FYI, I ran into this because I am experimenting with different ways to index spatial data and want to index the same data with multiple representations.  Converting to/from string each time is silly and with this the CopyField \"just works\"   "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13008073",
            "date": "2011-03-17T18:56:54+0000",
            "content": "added to trunk in #1082638, after 3.1 is released, i will port to 3.x and then resolve the issue "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13012457",
            "date": "2011-03-29T12:28:31+0000",
            "content": "Hey Ryan - \n\nIt seems you took out (from DocumentBuilder):\n\n\n if (sfield != null && v instanceof Date && sfield.getType() instanceof DateField) {\n   DateField df = (DateField) sfield.getType();\n   val = df.toInternal((Date) v) + 'Z';\n }\n\n\n\nAnd I have code that fails without this...was this logic moved elsewhere? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13012465",
            "date": "2011-03-29T12:58:07+0000",
            "content": "It is in TrieDateField\n\n    long time = (value instanceof Date) \n      ? ((Date)value).getTime() \n      : super.parseMath(null, value.toString()).getTime();\n\n\n\nJust realized that DateField uses the default createField\n\nI will add a test and fix now "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13012483",
            "date": "2011-03-29T13:51:04+0000",
            "content": "fixed in #1086582 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043706",
            "date": "2011-06-03T16:46:39+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106460",
            "date": "2011-09-16T14:51:11+0000",
            "content": "3.4 -> 3.5 "
        }
    ]
}