{
    "id": "LUCENE-2877",
    "title": "BUG in the org.apache.lucene.analysis.br.BrazilianAnalyzer",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "modules/analysis"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.0.2",
        "resolution": "Invalid",
        "status": "Resolved"
    },
    "description": "One weird bug with this field is that instead of \"false\", you have to search for \"falsee\" to get the correct results.\n\nThe same behavior happen with other fields that stored in the index and not analyzed.\n\nExample of create fields to indexing:\nField field = new Field(\"situacaoDocumento\", \"ATIVO\", Field.Store.YES, Field.Index.NOT_ANALYZED);\nor\nField field = new Field(\"copia\", \"false\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n\nExample search i need to do, but nothing get correct result:\n\t\t\tIndexSearcher searcher = ...;\n\t\t\tTopScoreDocCollector collector = ....;\n                        Query query = MultiFieldQueryParser.parse(VERSION, \"copia:false\", \"copia\", flags, getAnalyzer());\n\t\t\tsearcher.search(query, collector);\n\t\t\tScoreDoc[] hits = collector.topDocs().scoreDocs;\n\t\t\tif (hits.length > 0) \n{\n\t\t\t\treturn searcher.doc(0);\n\t\t\t}\n\t\t\treturn null;\nExample search i do to work:\n\t\t\tIndexSearcher searcher = ...;\n\t\t\tTopScoreDocCollector collector = ....;\n                        Query query = MultiFieldQueryParser.parse(VERSION, \"copia:falsee\", \"copia\", flags, getAnalyzer());\n\t\t\tsearcher.search(query, collector);\n\t\t\tScoreDoc[] hits = collector.topDocs().scoreDocs;\n\t\t\tif (hits.length > 0) {\t\t\t\treturn searcher.doc(0);\t\t\t}\n\t\t\treturn null;\n\nI tested on the Luke (Lucene Index Toolbox) and he prove the bug.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-01-20T19:33:20+0000",
            "content": "Hello, I think the issue is that you are using Field.Index.NOT_ANALYZED.\n\nThis means the BrazilianAnalyzer is not actually analyzing your text at index-time, causing the confusion. ",
            "author": "Robert Muir",
            "id": "comment-12984353"
        },
        {
            "date": "2011-01-21T12:41:01+0000",
            "content": "Please don't assign fix versions yourself. 3.0.3 is already released. The \"Fix Version\" is up to issue asignee (committer). ",
            "author": "Uwe Schindler",
            "id": "comment-12984721"
        },
        {
            "date": "2011-01-21T12:44:53+0000",
            "content": "As the flag you are using says: NOT_ANALYZED will not analyze the Field when indexing, it is just added as one token, as you pass. So why is there an bug in BrasilianAnalyzer? It's not even used during indexing! ",
            "author": "Uwe Schindler",
            "id": "comment-12984723"
        },
        {
            "date": "2011-02-20T23:52:05+0000",
            "content": "Let's try not to be too scary to users trying to report bugs eh? Concerned committers should properly update fix/affects versions as they can, but I don't know we need to lock them down to committers.\n\nThank's for the report Renan. It seems your code might be off. Often times, it's best to email the user list before creating JIRA issues - unless you are fairly confident in your find.\n\nIt seems this was not a bug, but user error. If you find that our analysis is off, please comment on this issue.\n\nThanks! ",
            "author": "Mark Miller",
            "id": "comment-12997241"
        }
    ]
}