{
    "id": "LUCENE-3985",
    "title": "Refactor support for thread leaks",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/test"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This will be duplicated in the runner and in LuceneTestCase; try to consolidate.",
    "attachments": {
        "LUCENE-3985.patch": "https://issues.apache.org/jira/secure/attachment/12538542/LUCENE-3985.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-11T23:03:47+0000",
            "content": "bulk cleanup of 4.0-ALPHA / 4.0 Jira versioning. all bulk edited issues have hoss20120711-bulk-40-change in a comment ",
            "author": "Hoss Man",
            "id": "comment-13412318"
        },
        {
            "date": "2012-07-31T11:18:59+0000",
            "content": "I have a branch on which tests pass. There are some threads that I ignore in Solr because there is no way to shut them down cleanly. I'll provide a patch soon. ",
            "author": "Dawid Weiss",
            "id": "comment-13425678"
        },
        {
            "date": "2012-07-31T12:36:49+0000",
            "content": "A patch that adds refactored thread leak detection (at the suite level), improved reporting, suite timeouts and other whistles.\n\nCheck out TestWorstCaseTestBehavior and uncomment methods demonstrating these features if you'd like to see what it looks like.\n\nSolr tests pass because I added this:\n\n+    // THESE ARE LIKELY BUGS - these threads should be closed!\n+    if (threadName.startsWith(\"Overseer-\") ||\n+        threadName.startsWith(\"aliveCheckExecutor-\") ||\n+        threadName.startsWith(\"concurrentUpdateScheduler-\")) {\n+      return true;\n+    } \n\n\n\nThese should be fixed but I have too little Solr knowledge to do it myself. Also, one entire test suite is commented out \u2013 FullSolrCloudTest. This one leaks threads that don't look safe to me. ",
            "author": "Dawid Weiss",
            "id": "comment-13425711"
        },
        {
            "date": "2012-07-31T14:04:25+0000",
            "content": "This one leaks threads that don't look safe to me.\n\nWhat kind of threads are you considering not safe? ",
            "author": "Mark Miller",
            "id": "comment-13425781"
        },
        {
            "date": "2012-07-31T14:56:09+0000",
            "content": "I'd say no threads should be left after a suite completes, really, but I understand the pattern of having a static executor to which tasks are dispatched. Shutting it down will be difficult because it's effectively a one-time initialization singleton. I consider this \"safe\" because these threads in general just wait idly for jobs. I cannot rule out that they are still processing something but checking this adds more overhead than necessary. We could shorten the expiration time on these executors and increase lingering beyond this expiration time so theoretically it's possible to wait for a clean state but I think it'll increase tests time to an unacceptable level (didn't check though).\n\nThat one particular test suite leaks threads that have stack traces reaching into solr though \u2013 if you care to take a look at see what they are and if some kind of shutdown is missing, I'd appreciate. ",
            "author": "Dawid Weiss",
            "id": "comment-13425827"
        },
        {
            "date": "2012-07-31T16:06:10+0000",
            "content": "FullSolrCloudTest leaves the following:\n\n68621 T11 ccr.ThreadLeakControl.checkThreadLeaks SEVERE 3 threads leaked from SUITE scope at org.apache.solr.cloud.FullSolrCloudTest: \n\t   1) Thread[id=606, name=Thread-97, state=WAITING, group=Overseer state updater.]\n\t        at java.lang.Object.wait(Native Method)\n\t        at java.lang.Object.wait(Object.java:503)\n\t        at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1345)\n\t        at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:925)\n\t        at org.apache.solr.common.cloud.SolrZkClient$7.execute(SolrZkClient.java:289)\n\t        at org.apache.solr.common.cloud.SolrZkClient$7.execute(SolrZkClient.java:1)\n\t        at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:67)\n\t        at org.apache.solr.common.cloud.SolrZkClient.getData(SolrZkClient.java:286)\n\t        at org.apache.solr.cloud.Overseer$CloudStateUpdater.amILeader(Overseer.java:187)\n\t        at org.apache.solr.cloud.Overseer$CloudStateUpdater.run(Overseer.java:113)\n\t        at java.lang.Thread.run(Thread.java:722)\n\t   2) Thread[id=600, name=TEST-FullSolrCloudTest.testDistribSearch-seed#[535509622737983D]-EventThread, state=WAITING, group=TGRP-FullSolrCloudTest]\n\t        at sun.misc.Unsafe.park(Native Method)\n\t        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\t        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\n\t        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\n\t        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)\n\t   3) Thread[id=599, name=TEST-FullSolrCloudTest.testDistribSearch-seed#[535509622737983D]-SendThread(127.0.0.1:57474), state=RUNNABLE, group=TGRP-FullSolrCloudTest]\n\t        at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)\n\t        at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:295)\n\t        at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:277)\n\t        at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:158)\n\t        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)\n\t        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)\n\t        at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1131)\n\n ",
            "author": "Dawid Weiss",
            "id": "comment-13425874"
        },
        {
            "date": "2012-07-31T16:12:41+0000",
            "content": "heh - unfortunately, for me, only sometimes does it fail with one thread - which is different than the 3 you see. I took a try at improving the case I can see. ",
            "author": "Mark Miller",
            "id": "comment-13425879"
        },
        {
            "date": "2012-07-31T16:22:55+0000",
            "content": "Yeah, it will vary \u2013 the lingering time is 2 seconds but it's still not enough and I see some failures depending on the machine I use. My build server failed with this one, for example:\n\nbuild\t31-Jul-2012 15:01:23\t[junit4:junit4] Suite: org.apache.solr.cloud.ZkCLITest\n...\nbuild\t31-Jul-2012 15:01:23\t[junit4:junit4]    > Throwable #1: com.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE scope at org.apache.solr.cloud.ZkCLITest: \nbuild\t31-Jul-2012 15:01:23\t[junit4:junit4]    >    1) Thread[id=20260, name=SessionTracker, state=TIMED_WAITING, group=TGRP-ZkCLITest]\nbuild\t31-Jul-2012 15:01:23\t[junit4:junit4]    >         at java.lang.Object.wait(Native Method)\nbuild\t31-Jul-2012 15:01:23\t[junit4:junit4]    >         at org.apache.zookeeper.server.SessionTrackerImpl.run(SessionTrackerImpl.java:145)\nbuild\t31-Jul-2012 15:01:23\t[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([B90AA507E190F87]:0)\nbuild\t31-Jul-2012 15:01:23\t[junit4:junit4]    >\n\n\n\nWe should try to nail these because they probably contribute to those thread limits that you've been commenting on. I also see some crazy thread IDs in logs like: T20000 which seems suspicious \u2013 they should be reused after a while. ",
            "author": "Dawid Weiss",
            "id": "comment-13425892"
        },
        {
            "date": "2012-07-31T16:27:57+0000",
            "content": "they should be reused after a while.\n\nOk, from the JDK source code it seems they won't be. ",
            "author": "Dawid Weiss",
            "id": "comment-13425900"
        },
        {
            "date": "2012-07-31T17:21:45+0000",
            "content": "I saw another:\n\n   2) Thread[id=13, name=SessionTracker, state=TIMED_WAITING, group=TGRP-FullSolrCloudTest]\n        at java.lang.Object.wait(Native Method)\n        at org.apache.zookeeper.server.SessionTrackerImpl.run(SessionTrackerImpl.java:145)\n\tat __randomizedtesting.SeedInfo.seed([657241244CA545BB]:0)\n\nThis, like I think some of the others, is stopping - it just has not stopped yet I guess. In this case, ZooKeeper tries to shutdown this thread simply by setting running to false - on its next loop it will notice and bail. ZooKeeper doesn't wait to make sure that has happened before returning from shutdown though. ",
            "author": "Mark Miller",
            "id": "comment-13425933"
        },
        {
            "date": "2012-07-31T17:34:44+0000",
            "content": "You're right. I'll probably add a hacky way to terminate these threads earlier instead of enforcing a long lingering time. Thanks Mark. ",
            "author": "Dawid Weiss",
            "id": "comment-13425946"
        },
        {
            "date": "2012-08-01T17:48:16+0000",
            "content": "Reiterated patch improving logging on suite timeouts among other things.\n\nI've added @BadApples test group (enabled by default) which includes two zk tests that I just have no idea how to fix and that fail for me frequently (and with such a long log that I can't really tell what's a result of the test itself and what's an unexpected behavior). I needed this to run full solr/lucene tests to ensure other things were working. \n\nHelp to fix these two remaining tests would be great, I don't want to throw everything on Mark \n\nThis also brings a question if I should commit in a patch that will probably break all existing builds (those bad apples above). I think it's worth it, even at the price of temporarily ignoring those two tests. ",
            "author": "Dawid Weiss",
            "id": "comment-13426773"
        },
        {
            "date": "2012-08-01T18:09:58+0000",
            "content": "Updated patch passing -Dtests.badapples to the spawned jvm (missed that). ",
            "author": "Dawid Weiss",
            "id": "comment-13426789"
        },
        {
            "date": "2012-08-01T18:34:07+0000",
            "content": "Did the \"fail tests on uncaught exceptions from other threads\" get factored into the new randomizedrunner? ",
            "author": "Robert Muir",
            "id": "comment-13426802"
        },
        {
            "date": "2012-08-01T19:28:56+0000",
            "content": "It was actually there from the very beginning, only initially it was at the thread group level (not at the global level). Normally this wouldn't matter as most threads would inherit the test group but I changed it so that it's now on both and additionally verifies if the handles hasn't been changed along the way. ZooKeeper does substitute it so there is a hack aimed at eagerly initializing that part of ZooKeeper and restoring the handler. ",
            "author": "Dawid Weiss",
            "id": "comment-13426840"
        },
        {
            "date": "2012-08-01T19:32:33+0000",
            "content": "Build server bug feedback \u2013 zookeeper init should be a class rule, not a test rule. Corrected. ",
            "author": "Dawid Weiss",
            "id": "comment-13426845"
        },
        {
            "date": "2012-08-02T08:23:42+0000",
            "content": "You can add the signatures to the forbidden API list under jdk.txt (with comment) or a new file (but don't forget to place this new signature file in Lucene and Solr's filesets).\n\nI think, to not complicate the filesets, we should use for this case simply jdk.txt and not a separate file (as all signatures refer to JDK. Otherwise we must rename jdk.txt to defaultCharsJdk.txt or whatever). Just place a comment in the introduction and add the signatures to jdk.txt. The other txt files in banned methods are more for other parts of lucene code-base (like test-only), or like commons-io, refer to a solr-only lib. ",
            "author": "Uwe Schindler",
            "id": "comment-13427168"
        },
        {
            "date": "2012-08-02T08:33:04+0000",
            "content": "It is a separate file, I wanted it to be somewhat explicit. We can merge in later on, not a problem. ",
            "author": "Dawid Weiss",
            "id": "comment-13427174"
        },
        {
            "date": "2012-08-02T08:38:51+0000",
            "content": "OK, doesnt matter. I would just prefer to have it merged in - or we should rename the other files, too. ",
            "author": "Uwe Schindler",
            "id": "comment-13427177"
        },
        {
            "date": "2012-08-02T12:57:41+0000",
            "content": "Hopefully I can look at my piece of this today or tomorrow. ",
            "author": "Mark Miller",
            "id": "comment-13427284"
        },
        {
            "date": "2012-08-03T22:38:11+0000",
            "content": "I added a close to Overseer and ConnectionManager - at least for me that FullSolrCloudTest seems to pass consistently. I only ran it like 15-20 times, but it passed each time and was failing 50% or more previously. ",
            "author": "Mark Miller",
            "id": "comment-13428430"
        },
        {
            "date": "2012-08-04T05:25:35+0000",
            "content": "Thanks Mark. I'll merge with the trunk and let the tests run for a while. ",
            "author": "Dawid Weiss",
            "id": "comment-13428563"
        },
        {
            "date": "2012-08-07T03:41:34+0000",
            "content": "rmuir20120906-bulk-40-change ",
            "author": "Robert Muir",
            "id": "comment-13429722"
        },
        {
            "date": "2012-08-12T20:06:05+0000",
            "content": "Applies on trunk. Will backport to 4.x tomorrow if nothing pops up. ",
            "author": "Dawid Weiss",
            "id": "comment-13432820"
        },
        {
            "date": "2013-05-10T10:34:10+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13654140"
        }
    ]
}