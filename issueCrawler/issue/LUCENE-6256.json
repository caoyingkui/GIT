{
    "id": "LUCENE-6256",
    "title": "PostingsEnum impls should respect documented behavior when no positions exist",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "PostingsEnum.nextPositions says that if no positions exist, NO_MORE_POSITIONS will be returned on the first call (actually it refers to DocsEnum.NO_MORE_DOCS, which should be changed since DocsEnum doesn't exist on trunk).  At least one impl (BlockDocsEnum) does assert false inside nextPosition().  This means if you have assertions turned on (e.g. in a test) you get an assertion here, when the behavior should return NO_MORE_POSITIONS.  I'm still going through all the implementations, but I also see MultiTermHighlighting which returns Integer.MAX_VALUE.  I think we should clean up all these implementations which have no positions (including maybe the fake scorers that are copied around in a lot of places?) to return NO_MORE_POSITIONS.",
    "attachments": {
        "LUCENE-6256.patch": "https://issues.apache.org/jira/secure/attachment/12699615/LUCENE-6256.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14327014",
            "author": "Ryan Ernst",
            "date": "2015-02-19T05:26:40+0000",
            "content": "I was reminded that nextPosition() should be called freq() times only.  Having a NO_MORE_POSITIONS constant doesn't make sense. The case that should return -1 is only for when positions do not exist.\n\nThis patch removes asserts in the places that should just return -1, and updates the javadocs for nextPositions().  All tests pass. "
        },
        {
            "id": "comment-14327177",
            "author": "Alan Woodward",
            "date": "2015-02-19T09:54:05+0000",
            "content": "+1\n\nThe javadoc is a straight error on my part, a remnant from a previous attempt at reworking the API.  The assertions were in there to check that the codecs were returning the correct PostingsEnum implementation when postings() was called, but they're pretty superfluous. "
        },
        {
            "id": "comment-14327367",
            "author": "Robert Muir",
            "date": "2015-02-19T13:01:29+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14328575",
            "author": "ASF subversion and git services",
            "date": "2015-02-20T05:29:40+0000",
            "content": "Commit 1661061 from Ryan Ernst in branch 'dev/trunk'\n[ https://svn.apache.org/r1661061 ]\n\nLUCENE-6256: Change PostingsEnum.nextPosition() to consistently return -1 when positions are not available "
        },
        {
            "id": "comment-14328581",
            "author": "ASF subversion and git services",
            "date": "2015-02-20T05:41:59+0000",
            "content": "Commit 1661062 from Ryan Ernst in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1661062 ]\n\nLUCENE-6256: Change PostingsEnum.nextPosition() to consistently return -1 when positions are not available (merged 1661061) "
        },
        {
            "id": "comment-14495249",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:15+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}