{
    "id": "SOLR-3604",
    "title": "The wiki claims all comments are wiped from solr.xml on save - we should fix this.",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13408865",
            "date": "2012-07-08T07:26:58+0000",
            "content": "With XML as config file format, there is not much you can do, as the parser strips all comments (most do) and only some of them are able to preserve them in resulting DOM tree.\nAs the DOM tree is later thrown away and the config is only persisted as Java Objects, the comments get finally lost at that stage (if not already by parser).\nSolrXmlSerializer is not XML conform at all (it's a hack, correct would be to use SAX or DOM serialization), so it could be modified to add comments, but without data where they were originally, you have no chance.\n\nThe only chance to preserve comments would be a complete rewrite, don't throw away the DOM tree and let core manipulation work directly on the DOM tree (this can e.g. be done by a custom mapping class build from an XSD file). At the end serialize DOM tree again to file. This of course needs a parser that preserves all comments during parsing and serialization. Almost impossible  "
        },
        {
            "author": "Mike Sokolov",
            "id": "comment-13408942",
            "date": "2012-07-08T15:39:56+0000",
            "content": "I think SOLR uses Woodstox for its parsing, which definitely reports comments as events.  I have code that does round-trip reserialization of XML docs using Woodstox, and it preserves pretty much everything, possibly with the exception of some ignorable whitespace (like between attributes).  But of course if Solr throws them away, they won't be available to re-serialize.\n\nIf it's too much trouble to update Solr to add comments to its object model, maybe it's worth converting comments to something that would be re-serialized as <comment> elements, that would be preserved, but otherwise ignored? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13408945",
            "date": "2012-07-08T15:57:08+0000",
            "content": "It does not use woodstox here, but thats not the problem. Java6's DocumentBuilder (XERCES) also reports the comments.\n\nThe problem is the object model and how its deserialized/serialized. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13408949",
            "date": "2012-07-08T16:14:22+0000",
            "content": "I work on a product that has a class that edits solrconfig.xml and schema.xml. We keep the DOM tree around and edit it directly for modifications - later we serialize it out with changes, preserving comments. It seems to work out just fine - at the least it turns out a lot better than just stripping the comments.\n\nWe should be doing the same thing here with solr.xml - the starting comments contain very helpful information for manual editing, and users may add their own comments.\n\nI'm not sure why we do any XML writing manually - I have no problem replacing that. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13408959",
            "date": "2012-07-08T16:34:34+0000",
            "content": "I work on a product that has a class that edits solrconfig.xml and schema.xml. We keep the DOM tree around and edit it directly for modifications - later we serialize it out with changes, preserving comments. It seems to work out just fine - at the least it turns out a lot better than just stripping the comments.\n\nThat's what I proposed 2 comments ago. It needs a major rewrite of the whole solr.xml parsing. I would not directly edit the DOM tree (this is crazy), instead create a XSD schema and create Java classes out of it (that wrap the DOM tree).\n\nI just wanted to mention, that a XML parser is not required to preserve comments on de/serialization, because the file semantically identical. So if you drop in a custom, high-speed XML parser into your classpath, the comments may get lost. \n\nI'm not sure why we do any XML writing manually - I have no problem replacing that.\n\nJust crazy unneeded code, but as no XML-like syntax structure is available, the writer of that code wrote it by hand, instead of, e.g., sending SAX events to TransformerHandler for serialization. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13409145",
            "date": "2012-07-09T03:18:55+0000",
            "content": "Yeah, but you also said \"Almost impossible \", which really seems like an overstatement.\n\nsolr.xml is a fairly simple little xml file - nothing like solrconfig.xml or schema.xml - I don't think any rewrite of parsing/writing will be that major. It won't be fun work, but I don't see it as a lot of work.\n\nI think editing the DOM tree for such a simple file is probably a lot less work than mapping around to java classes personally. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412192",
            "date": "2012-07-11T22:26:18+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429818",
            "date": "2012-08-07T03:43:18+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13452179",
            "date": "2012-09-10T17:41:57+0000",
            "content": "moving all 4.0 issues not touched in a month to 4.1 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13528611",
            "date": "2012-12-11T02:08:02+0000",
            "content": "If we can actually remove the need for solr.xml like we are discussing in another issue, that would be the best solution here I think. "
        },
        {
            "author": "Michael Garski",
            "id": "comment-13543504",
            "date": "2013-01-04T01:23:46+0000",
            "content": "It's not only comments that are wiped - the logging element is lost as well (I opened SOLR-3900 for that). "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13564723",
            "date": "2013-01-28T21:53:31+0000",
            "content": "Given solr.xml is going away, I won't be working on this. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654205",
            "date": "2013-05-10T10:34:23+0000",
            "content": "Closed after release. "
        }
    ]
}