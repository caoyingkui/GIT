{
    "id": "SOLR-2996",
    "title": "make \"q=*\" not suck in the lucene and edismax parsers",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [
            "query parsers"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "More then a few users have gotten burned by thinking that \"*\" is the appropriate syntax for \"match all docs\" when what it really does (unless i'm mistaken) is create a prefix query on the default search field using a blank string as the prefix.\n\nsince it seems very unlikely that anyone has a genuine usecase for making a prefix query with a blank prefix, we should change the default behavior of the LuceneQParser and EDismaxQParsers (and any other Qparsers that respect *:* if i'm forgetting them) to treat this situation the same as *:*.  we can offer a (local)param to force the old behavior if someone really wants it.",
    "attachments": {
        "SOLR-2996.patch": "https://issues.apache.org/jira/secure/attachment/12571487/SOLR-2996.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13177799",
            "date": "2011-12-30T22:45:49+0000",
            "content": "Recent example of this type of confusion and the problems it can cause from the mailing list...\n\nhttps://mail-archives.apache.org/mod_mbox/lucene-solr-user/201112.mbox/%3Calpine.DEB.2.00.1112131115550.16571@bester%3E\n\nAnother recent discussion about this type of problem from IRC...\n\n\n13:25 < mikeliss:#solr> Hi, I'm running into an error with maxbooleanclauses when I try to do a range query with \n                        highlighting...is there any workaround for this? Would really appreciate some direction, if \n                        anybody knows.\n13:26 < mikeliss:#solr> This is the query that dies: \nhttp://localhost:8983/solr/select/?q=*&version=2.2&start=0&rows=20&indent=on&hl=true&hl.fl=text,caseName,westCite,docketNumber,lexisCite,court_citation_string&hl.snippets=5&f.text.hl.alternateField=text&f.text.hl.maxAlternateFieldLength=500\n\n13:28 < hoss:#solr> that query doesn't make sense ... for a couple of reasons ... what are you *trying* to do?\n13:29 < hoss:#solr> i mena ... for starters ... there is no range query there.  second, q=* is a big red flag: it's \n                    a prefix query on the default field using the prefix \"\" (ie: the empty string)\n\n14:23 < mikeliss:#solr> hoss, yeah, I assumed that highlighting would just do nothing if a prefix query were given \n                        on an empty string.\n14:24 < mikeliss:#solr> hoss, I added a check in my code that will only enable highlighting if the query isn't '*'.\n14:24 < mikeliss:#solr> hoss, Seems naive, but it's working at least for the moment.\n\n14:27 < hoss:#solr> i think you're missing my point: q=* is a fairly non-sensical query ... you should't just \n                    prevent highlighting on that query, you should stop doing that query in the first place\n14:28 < hoss:#solr> as a query solr can handle it, and optimize it to be efficient\n14:28 < hoss:#solr> (evenn though it's silly)\n14:28 < mikeliss:#solr> hoss, I'm using that query on my homepage to show the latest documents in the index. It \n                        should just return everything, right?\n14:28 < hoss:#solr> but for highlighting, the highlighter actually needs to know all the terms it matches\n14:28 < hoss:#solr> and to konw al lthe terms it matches, it needs to look at *ALL* the terms in the default field\n14:29 < hoss:#solr> mikeliss: no, no, NO ... i'm not sure where people started getting the missconception that \n                    \"q=*\" matches all docs, but that is *NOT* what it does\n14:29 < hoss:#solr> one second...\n14:30 < hoss:#solr> mikeliss: \nhttps://mail-archives.apache.org/mod_mbox/lucene-solr-user/201112.mbox/%3CCAL69qOn1XeMNz6JYdWj_o7rH_=O3i-NiqdO6rorvN48bywU+nA@mail.gmail.com%3E\n14:30 < hoss:#solr> ...and...\n14:30 < hoss:#solr> https://mail-archives.apache.org/mod_mbox/lucene-solr-user/201112.mbox/%3Calpine.DEB.2.00.1112131115550.16571@bester%3E\n\n14:32 < mikeliss:#solr> hoss, ah, that makes sense. I guess * is just too tempting, since it is something users can \n                        easily remember.\n14:34 < mikeliss:#solr> hoss, back to my original issue, now I'm confused why hl fails on a search for *. Shouldn't \n                        it just highlight nothing, and return results? I wasn't able to get debugging to work for \n                        the query, so I'm a bit confused..\n\n14:35 < hoss:#solr> see my other comment above: the highlighter is trying to find all the terms used in the query \n                    to highlight them -- a query for \"*\" matches all terms in the default field, which is way more \n                    then the highlighter can handle (hence the exception)\n\n14:38 < hoss:#solr> i'm filing a bug to change the beahvior of \"q=*\" ... do you mind if i cut/paste this dialog \n                    into the jira issue as an example of user confusion?\n14:39 < mikeliss:#solr> Not at all. I was wondering if that was potentially a bug...figured I'd leave it to the \n                        experts.\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13177818",
            "date": "2011-12-30T23:16:52+0000",
            "content": "fix jira markup in description "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13588929",
            "date": "2013-02-27T23:52:38+0000",
            "content": "Who knows QueryParser.jj grammar well enough to know where to fix this so that a bare \"\" gets translated to *:? Would make a great fix for 4.2 if it's a 15-min fix? "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13589375",
            "date": "2013-02-28T09:32:29+0000",
            "content": "I've had a quick look, and I think it's just a matter of changing the Clause() definition in QueryParser.jj.  (Warning: untested patch)\n\n\nIndex: solr/core/src/java/org/apache/solr/parser/QueryParser.jj\n===================================================================\n--- solr/core/src/java/org/apache/solr/parser/QueryParser.jj\t(revision 1451143)\n+++ solr/core/src/java/org/apache/solr/parser/QueryParser.jj\t(working copy)\n@@ -195,7 +195,8 @@\n \n   (\n-   q=Term(field)\n+   <STAR> {q=handleBareTokenQuery(\"*\", \"*\", fuzzySlop, prefix, true, fuzzy, regexp)}\n+   | q=Term(field)\n    | <LPAREN> q=Query(field) <RPAREN> (<CARAT> boost=<NUMBER>)?\n    | (localParams = <LPARAMS> (<CARAT> boost=<NUMBER>)? { q=getLocalParams(field, localParams.image); }  )\n   )\n\n\n\n\nI don't have time to look at this properly now, but I'll probably get a chance next week.  Feel free to try out that patch though! "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13589443",
            "date": "2013-02-28T11:06:11+0000",
            "content": "Hmm\n\n\nlap:parser janhoy$ javacc QueryParser.jj\nJava Compiler Compiler Version 5.0 (Parser Generator)\n(type \"javacc\" with no arguments for help)\nReading from file QueryParser.jj . . .\norg.javacc.parser.ParseException: Encountered \" \"}\" \"} \"\" at line 198, column 84.\nWas expecting one of:\n    \"instanceof\" ...\n    \";\" ...\n    \"<\" ...\n(snip)\n    \"(\" ...\n\n\n\nLine 198 is the new <STAR>... line "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13589445",
            "date": "2013-02-28T11:09:45+0000",
            "content": "I did say untested   It needs a semicolon:\n\n\n+   <STAR> {q=handleBareTokenQuery(\"*\", \"*\", fuzzySlop, prefix, true, fuzzy, regexp);}\n\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13589479",
            "date": "2013-02-28T12:23:01+0000",
            "content": "Yea, found that out actually, but next obstacle\n\nlap:parser janhoy$ javacc QueryParser.jj\nJava Compiler Compiler Version 5.0 (Parser Generator)\n(type \"javacc\" with no arguments for help)\nReading from file QueryParser.jj . . .\nWarning: Choice conflict involving two expansions at\n         line 198, column 4 and line 199, column 6 respectively.\n         A common prefix is: \"*\"\n         Consider using a lookahead of 2 for earlier expansion.\n\n\n\nThink we need to somehow say that q=Term(field) should be chosen only if NOT <STAR> or something. But if you have some time next week to test it that's great. The learning curve is a bit steep here. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13590013",
            "date": "2013-02-28T22:53:42+0000",
            "content": "How about this patch?  No grammar modification required. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13591452",
            "date": "2013-03-02T17:22:14+0000",
            "content": "[trunk commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1451906\n\nSOLR-2996: treat un-fielded * as : "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13591460",
            "date": "2013-03-02T17:46:12+0000",
            "content": "[branch_4x commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1451910\n\nSOLR-2996: treat un-fielded * as : "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654210",
            "date": "2013-05-10T10:34:24+0000",
            "content": "Closed after release. "
        }
    ]
}