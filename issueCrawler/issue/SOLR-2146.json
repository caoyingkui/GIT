{
    "id": "SOLR-2146",
    "title": "Custom SchemaField object",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "There is some use cases that require to extend SchemaField objects with \"attributes\" or \"properties\".\nFor example, I would like to be able to assign a specific \"term mapping file\" for each of my field. Each field name will have a \"mapping file\" associated that I can access at query time using the IndexSchema object.\n\nThe FieldType object already enables the addition of attributes. However, these attributes are \"local\" to a field type, not a field definition. Multiple fields can have the same field types, which is not suitable for our use cases. \nOne possible solution will be to create one field type per field definition, but this is more a dirty hack: it means duplicating field types, making them more difficult to maintain.\n\nReferences to mailing list discussion:\nhttp://www.mail-archive.com/solr-user@lucene.apache.org/msg40436.html\nhttp://www.mail-archive.com/solr-user@lucene.apache.org/msg40585.html",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12919939",
            "date": "2010-10-11T18:37:42+0000",
            "content": "Note: the crux of the issue isn't particularly that \"SchemaField\" needs to be extensible in a java sense \u2013 it's primarily that FieldType subclasses should be able to declare properties that can be specified in the corresponding <field /> declarations by some means.\n\nAs i mentioned on the mailing list...\n\n\n> something that is intended to be customized -- while FieldType\n> objects are constructed once at startup, SchemaField obejcts are\n> frequently created on the fly when dealing with dynamicFields, so\n> initialization complexity is kept to a minimum.\n> \n> That said -- this definitely seems like that type of usecase that we\n> should try to find *some* solution for -- even if it just means having\n> Solr automaticly create hidden FieldType instances for you on startup\n> based on attributes specified in the<field />  that the corrisponding\n> FieldType class understands.\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717145",
            "date": "2013-07-23T18:47:15+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971352",
            "date": "2014-04-16T12:57:51+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}