{
    "id": "SOLR-7771",
    "title": "Classloader problem with \"solr.XXX\" class names and jars in SOLR_HOME/lib",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.2.1",
        "status": "Closed",
        "resolution": "Duplicate",
        "priority": "Major"
    },
    "description": "Jars placed in SOLR_HOME/lib seem to be loaded twice, which causes problems trying to use solr.XXXXXX class names in schema.xml.\n\nIf the full class name is used, it works.\n\nSteps to recreate on an extracted Solr 5.2.1 download.  This was done on Windows, so I used backslashes as path separators:\n\n\nbin\\solr start\nbin\\solr create -c foo -d sample_techproducts_configs\nbin\\solr stop -all\n\n\n\nAdd the following to server\\foo\\conf\\schema.xml, just before the </schema> end tag:\n\n\n    <fieldType name=\"icu_test\" class=\"solr.TextField\">\n      <analyzer> \n        <tokenizer class=\"solr.ICUTokenizerFactory\"/>\n      </analyzer>\n    </fieldType>\n\n\n\nCreate a new directory \u2013 server\\solr\\lib.\nCopy icu4j-54.1.jar and lucene-analyzers-icu-5.2.1.jar from contrib\\analysis-extras to server\\solr\\lib.\n\n\nbin\\solr start\n\n\n\nNote an exception in the logging tab:\njava.lang.NoClassDefFoundError: org/apache/lucene/analysis/icu/segmentation/ICUTokenizer\n\nAt this point, if the class name is changed from solr.ICUTokenizerFactory to org.apache.lucene.analysis.icu.segmentation.ICUTokenizerFactory and solr is stopped and started, then everything is OK.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-07-10T02:15:36+0000",
            "author": "Shawn Heisey",
            "content": "This is the first part of the solr log during the startup with the errors:\n\n\nINFO  - 2015-07-10 02:11:12.626; [   ] org.eclipse.jetty.util.log.Log; Logging initialized @216ms\nINFO  - 2015-07-10 02:11:12.745; [   ] org.eclipse.jetty.server.Server; jetty-9.2.10.v20150310\nWARN  - 2015-07-10 02:11:12.756; [   ] org.eclipse.jetty.server.handler.RequestLogHandler; !RequestLog\nINFO  - 2015-07-10 02:11:12.757; [   ] org.eclipse.jetty.deploy.providers.ScanningAppProvider; Deployment monitor [file:/C:/Users/elyograg/Downloads/solr-5.2.1/server/contexts/] at interval 0\nINFO  - 2015-07-10 02:11:13.219; [   ] org.eclipse.jetty.webapp.StandardDescriptorProcessor; NO JSP Support for /solr, did not find org.apache.jasper.servlet.JspServlet\nWARN  - 2015-07-10 02:11:13.237; [   ] org.eclipse.jetty.security.ConstraintSecurityHandler; ServletContext@o.e.j.w.WebAppContext@457e2f02{/solr,file:/C:/Users/elyograg/Downloads/solr-5.2.1/server/solr-webapp/webapp/,STARTING}{/solr.war} has uncovered http methods for path: /\nINFO  - 2015-07-10 02:11:13.258; [   ] org.apache.solr.servlet.SolrDispatchFilter; SolrDispatchFilter.init()WebAppClassLoader=1582797472@5e5792a0\nINFO  - 2015-07-10 02:11:13.268; [   ] org.apache.solr.core.SolrResourceLoader; JNDI not configured for solr (NoInitialContextEx)\nINFO  - 2015-07-10 02:11:13.269; [   ] org.apache.solr.core.SolrResourceLoader; using system property solr.solr.home: C:\\Users\\elyograg\\Downloads\\solr-5.2.1\\server\\solr\nINFO  - 2015-07-10 02:11:13.269; [   ] org.apache.solr.core.SolrResourceLoader; new SolrResourceLoader for directory: 'C:\\Users\\elyograg\\Downloads\\solr-5.2.1\\server\\solr\\'\nINFO  - 2015-07-10 02:11:13.270; [   ] org.apache.solr.core.SolrResourceLoader; Adding 'file:/C:/Users/elyograg/Downloads/solr-5.2.1/server/solr/lib/icu4j-54.1.jar' to classloader\nINFO  - 2015-07-10 02:11:13.271; [   ] org.apache.solr.core.SolrResourceLoader; Adding 'file:/C:/Users/elyograg/Downloads/solr-5.2.1/server/solr/lib/lucene-analyzers-icu-5.2.1.jar' to classloader\nINFO  - 2015-07-10 02:11:13.381; [   ] org.apache.solr.core.SolrXmlConfig; Loading container configuration from C:\\Users\\elyograg\\Downloads\\solr-5.2.1\\server\\solr\\solr.xml\nINFO  - 2015-07-10 02:11:13.431; [   ] org.apache.solr.core.CorePropertiesLocator; Config-defined core root directory: C:\\Users\\elyograg\\Downloads\\solr-5.2.1\\server\\solr\nINFO  - 2015-07-10 02:11:13.447; [   ] org.apache.solr.core.CoreContainer; New CoreContainer 1362728240\nINFO  - 2015-07-10 02:11:13.448; [   ] org.apache.solr.core.CoreContainer; Loading cores into CoreContainer [instanceDir=C:\\Users\\elyograg\\Downloads\\solr-5.2.1\\server\\solr\\]\nINFO  - 2015-07-10 02:11:13.449; [   ] org.apache.solr.core.CoreContainer; loading shared library: C:\\Users\\elyograg\\Downloads\\solr-5.2.1\\server\\solr\\lib\nINFO  - 2015-07-10 02:11:13.449; [   ] org.apache.solr.core.SolrResourceLoader; Adding 'file:/C:/Users/elyograg/Downloads/solr-5.2.1/server/solr/lib/icu4j-54.1.jar' to classloader\nINFO  - 2015-07-10 02:11:13.450; [   ] org.apache.solr.core.SolrResourceLoader; Adding 'file:/C:/Users/elyograg/Downloads/solr-5.2.1/server/solr/lib/lucene-analyzers-icu-5.2.1.jar' to classloader\n\n\n\nIn it you can see the two jars being loaded twice, both times from the newly created lib directory. ",
            "id": "comment-14621609"
        },
        {
            "date": "2015-07-11T15:28:10+0000",
            "author": "Shawn Heisey",
            "content": "SOLR-4852 describes a similar problem that has been seen before, but that was produced in a different way on a different major version. ",
            "id": "comment-14623448"
        },
        {
            "date": "2015-07-11T15:44:51+0000",
            "author": "Shawn Heisey",
            "content": "Further testing after the steps already described, which describes another workaround:\n\nrenamed server\\solr\\lib to server\\solr\\libXX so it no longer gets used.\nchanged the class name in schema.xml back to solr.ICUTokenizerFactory.\nremoved all <lib> elements from solrconfig.xml and replaced them with these lines:\n\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/analysis-extras/lib\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/analysis-extras/lucene-libs\" regex=\".*\\.jar\" />\n\n\n\nWhen Solr was restarted, everything worked, and the jars only got loaded once, because the install only has one core.  I don't like this workaround, because if I have three dozen cores that all have <lib> directives pointing at the same jars, then those jars will be loaded three dozen times.\n\nThe \"full class name\" workaround is somewhat reasonable, and is likely the direction that I will go in my own setup when I can finally upgrade to 5.x, but if a novice user follows existing documentation, they won't be using full class names. ",
            "id": "comment-14623460"
        },
        {
            "date": "2015-07-11T15:47:27+0000",
            "author": "Shawn Heisey",
            "content": "TL;DR further testing of the latest workaround: After all these steps, if I copy the server\\solr\\foo directory to create server\\solr\\foo2, then edit the core.properties file in that directory so the name is foo2, both cores work properly. ",
            "id": "comment-14623461"
        },
        {
            "date": "2015-08-03T21:43:53+0000",
            "author": "Shawn Heisey",
            "content": "Ahmet Arslan got this filed before I did, just found that issue. ",
            "id": "comment-14652584"
        }
    ]
}