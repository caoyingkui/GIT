{
    "id": "SOLR-12355",
    "title": "HashJoinStream's use of String::hashCode results in non-matching tuples being considered matches",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "6.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The following strings have been found to have hashCode conflicts and as such can result in HashJoinStream considering two tuples with fields of these values to be considered the same.\n\n\n\n\"MG!!00TNGP::Mtge::\".hashCode() == \"MG!!00TNH1::Mtge::\".hashCode()\u00a0\n\nThis means these two tuples are the same if we're comparing on field \"foo\"\n\n{\n  \"foo\":\"MG!!00TNGP::Mtge::\"\n}\n{\n  \"foo\":\"MG!!00TNH1::Mtge::\"\n}\n\n\nand these two tuples are the same if we're comparing on fields \"foo,bar\"\n\n{\n  \"foo\":\"MG!!00TNGP\"\n  \"bar\":\"Mtge\"\n}\n{\n  \"foo\":\"MG!!00TNH1\"\n  \"bar\":\"Mtge\"\n}",
    "attachments": {
        "SOLR-12355.patch": "https://issues.apache.org/jira/secure/attachment/12923494/SOLR-12355.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-14T23:44:54+0000",
            "content": "I have a fix for this where instead of calculating the string value's hashCode we just use the string value as the key in the hashed set of tuples. I'm creating a few test cases to verify this gives us what we want. ",
            "author": "Dennis Gove",
            "id": "comment-16475055"
        },
        {
            "date": "2018-05-14T23:51:23+0000",
            "content": "This also impacts OuterHashJoinStream. ",
            "author": "Dennis Gove",
            "id": "comment-16475060"
        },
        {
            "date": "2018-05-15T15:08:25+0000",
            "content": "Initial patch attached. I have not yet run the full suite of tests against this. ",
            "author": "Dennis Gove",
            "id": "comment-16475973"
        },
        {
            "date": "2018-05-18T21:19:27+0000",
            "content": "Commit f506bc9cb7f1e82295c9c367487d49a80e767731 in lucene-solr's branch refs/heads/master from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f506bc9 ]\n\nSOLR-12355: Fixes hash conflict in HashJoinStream and OuterHashJoinStream ",
            "author": "ASF subversion and git services",
            "id": "comment-16481205"
        },
        {
            "date": "2018-05-18T21:21:27+0000",
            "content": "Commit 1e661ed97aed0cc77869b01134d80c761c6b5295 in lucene-solr's branch refs/heads/branch_7x from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1e661ed ]\n\nSOLR-12355: Fixes hash conflict in HashJoinStream and OuterHashJoinStream ",
            "author": "ASF subversion and git services",
            "id": "comment-16481209"
        }
    ]
}