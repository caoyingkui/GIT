{
    "id": "LUCENE-7185",
    "title": "fix random number generation used for spatial tests",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "The current method is not very good for testing. \n\n\n\tIt will only rarely or never return edge cases like -180/180/-90/90\n\tIt will only rarely return 0\n\tThere are many possible doubles within the ranges (-180..180/-90..90) it will never return",
    "attachments": {
        "LUCENE-7185.patch": "https://issues.apache.org/jira/secure/attachment/12797385/LUCENE-7185.patch",
        "LUCENE-7185_sorting.patch": "https://issues.apache.org/jira/secure/attachment/12797468/LUCENE-7185_sorting.patch",
        "oldRandom.png": "https://issues.apache.org/jira/secure/attachment/12799177/oldRandom.png",
        "newRandom.png": "https://issues.apache.org/jira/secure/attachment/12799176/newRandom.png",
        "LUCENE-7185_polygon.patch": "https://issues.apache.org/jira/secure/attachment/12799175/LUCENE-7185_polygon.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15229091",
            "author": "Robert Muir",
            "date": "2016-04-06T20:58:08+0000",
            "content": "Here is what im thinking. Lots of tests fail. Some problems may be test bugs, other real bugs.\n\nI fixed the LatLonGrid but there are many other failures.  "
        },
        {
            "id": "comment-15229115",
            "author": "Michael McCandless",
            "date": "2016-04-06T21:08:46+0000",
            "content": "+1, this is great  "
        },
        {
            "id": "comment-15229511",
            "author": "ASF subversion and git services",
            "date": "2016-04-07T01:49:34+0000",
            "content": "Commit b59ace99e45969a8d81be4639bfb2695681636eb in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b59ace9 ]\n\nLUCENE-7185: make an empty grid the simple way "
        },
        {
            "id": "comment-15229514",
            "author": "ASF subversion and git services",
            "date": "2016-04-07T01:50:18+0000",
            "content": "Commit e75db9476764b9a6a426686a58e18f38a26883a5 in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e75db94 ]\n\nLUCENE-7185: make an empty grid the simple way "
        },
        {
            "id": "comment-15229526",
            "author": "Robert Muir",
            "date": "2016-04-07T02:03:22+0000",
            "content": "I'm gonna try to fight my way thru the various test fails, some are pretty crazy.\n\nby frequently choosing certain edge values it also means we find bugs or test bugs with tie-break handling in sorting, rectangles that really look more like lines/single points, you name it. "
        },
        {
            "id": "comment-15229653",
            "author": "ASF subversion and git services",
            "date": "2016-04-07T04:08:57+0000",
            "content": "Commit 2965ac2ca18e2019fb9f03170b9bcf98162a9d21 in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2965ac2 ]\n\nLUCENE-7185: fix edge case bug in test logic (min=max=180), don't leak Directory for edge cases! "
        },
        {
            "id": "comment-15229654",
            "author": "ASF subversion and git services",
            "date": "2016-04-07T04:09:38+0000",
            "content": "Commit cebac848a999db0b341d717c8edd39ecc9184671 in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cebac84 ]\n\nLUCENE-7185: fix edge case bug in test logic (min=max=180), don't leak Directory for edge cases! "
        },
        {
            "id": "comment-15229655",
            "author": "ASF subversion and git services",
            "date": "2016-04-07T04:10:29+0000",
            "content": "Commit e0c507a40012a1148da65b81d722bd9b29ec9d8e in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e0c507a ]\n\nLUCENE-7185: fix edge case bugs in LatLonPoint bounding box query "
        },
        {
            "id": "comment-15229657",
            "author": "ASF subversion and git services",
            "date": "2016-04-07T04:11:39+0000",
            "content": "Commit 6d537d2bad64a27927aa7c67c600dee97f79aa2b in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6d537d2 ]\n\nLUCENE-7185: fix edge case bugs in LatLonPoint bounding box query "
        },
        {
            "id": "comment-15229825",
            "author": "Dawid Weiss",
            "date": "2016-04-07T07:17:01+0000",
            "content": "\n+      // may trigger divide by zero\n+      return 0.0;\n\n\n\nGiven that ((Double) +0.0).equals/compareTo(-0.0) equals false, even though unboxed comparison obviously equals true, I'd add -0.0 to the list of surprises as well. "
        },
        {
            "id": "comment-15229836",
            "author": "Robert Muir",
            "date": "2016-04-07T07:28:51+0000",
            "content": "Here is a patch for the sort bug. The bug is actually in SloppyMath.haversinSortKey. It sometimes returns values that are different, yet when followed through with the rest of the haversin equation will collapse to the same value due to subsequent rounding.\n\nThis means Double.compare(sortKey(...), sortKey(...)) becomes inconsistent with Double.compare(fullHaversin(...), fullHaversin(...)) which is the whole point, and causes the tie-breaker test failure.\n\nThe fix is to clobber some bits: in the worst case for huge distances around the earth it increases error from 0.1cm to 20cm, but \"typical\" distances (e.g. < 1000km) are not impacted and still within e.g. 0.01mm error. Our docs for error were really off here too: i improved the testing for that. The fix does not hurt performance.\n\nNow all tests pass in sandbox/, but I have not yet looked at geopoint failures. One of them is kinda scary:\n\n[junit4] Suite: org.apache.lucene.spatial.geopoint.search.TestGeoPointQuery\n   [junit4] IGNOR/A 0.01s J1 | TestGeoPointQuery.testRandomBig\n   [junit4]    > Assumption #1: 'nightly' test group is disabled (@Nightly())\n   [junit4] IGNOR/A 0.00s J1 | TestGeoPointQuery.testRandomDistanceHuge\n   [junit4]    > Assumption #1: 'nightly' test group is disabled (@Nightly())\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestGeoPointQuery -Dtests.method=testAllLonEqual -Dtests.seed=4ABB96AB44F4796E -Dtests.locale=id-ID -Dtests.timezone=Pacific/Fakaofo -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] ERROR   0.35s J1 | TestGeoPointQuery.testAllLonEqual <<<\n   [junit4]    > Throwable #1: java.lang.IllegalArgumentException: Illegal shift value, must be 32..63; got shift=0\n   [junit4]    >    at __randomizedtesting.SeedInfo.seed([4ABB96AB44F4796E:DBB16756B45E397A]:0)\n   [junit4]    >    at org.apache.lucene.spatial.util.GeoEncodingUtils.geoCodedToPrefixCodedBytes(GeoEncodingUtils.java:109)\n   [junit4]    >    at org.apache.lucene.spatial.util.GeoEncodingUtils.geoCodedToPrefixCoded(GeoEncodingUtils.java:89)\n   [junit4]    >    at org.apache.lucene.spatial.geopoint.search.GeoPointPrefixTermsEnum$Range.fillBytesRef(GeoPointPrefixTermsEnum.java:236)\n   [junit4]    >    at org.apache.lucene.spatial.geopoint.search.GeoPointTermsEnum.nextRange(GeoPointTermsEnum.java:71)\n   [junit4]    >    at org.apache.lucene.spatial.geopoint.search.GeoPointPrefixTermsEnum.nextRange(GeoPointPrefixTermsEnum.java:171)\n   [junit4]    >    at org.apache.lucene.spatial.geopoint.search.GeoPointPrefixTermsEnum.nextSeekTerm(GeoPointPrefixTermsEnum.java:190)\n   [junit4]    >    at org.apache.lucene.index.FilteredTermsEnum.next(FilteredTermsEnum.java:212)\n   [junit4]    >    at org.apache.lucene.spatial.geopoint.search.GeoPointTermQueryConstantScoreWrapper$1.scorer(GeoPointTermQueryConstantScoreWrapper.java:110)\n   [junit4]    >    at org.apache.lucene.search.Weight.bulkScorer(Weight.java:135)\n   [junit4]    >    at org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight.bulkScorer(LRUQueryCache.java:644)\n   [junit4]    >    at org.apache.lucene.search.AssertingWeight.bulkScorer(AssertingWeight.java:68)\n   [junit4]    >    at org.apache.lucene.search.BooleanWeight.optionalBulkScorer(BooleanWeight.java:231)\n   [junit4]    >    at org.apache.lucene.search.BooleanWeight.booleanScorer(BooleanWeight.java:297)\n   [junit4]    >    at org.apache.lucene.search.BooleanWeight.bulkScorer(BooleanWeight.java:364)\n   [junit4]    >    at org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight.bulkScorer(LRUQueryCache.java:644)\n   [junit4]    >    at org.apache.lucene.search.AssertingWeight.bulkScorer(AssertingWeight.java:68)\n   [junit4]    >    at org.apache.lucene.search.AssertingWeight.bulkScorer(AssertingWeight.java:68)\n   [junit4]    >    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:666)\n   [junit4]    >    at org.apache.lucene.search.AssertingIndexSearcher.search(AssertingIndexSearcher.java:91)\n   [junit4]    >    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473)\n   [junit4]    >    at org.apache.lucene.spatial.util.BaseGeoPointTestCase.verifyRandomRectangles(BaseGeoPointTestCase.java:835)\n   [junit4]    >    at org.apache.lucene.spatial.util.BaseGeoPointTestCase.verify(BaseGeoPointTestCase.java:763)\n   [junit4]    >    at org.apache.lucene.spatial.util.BaseGeoPointTestCase.testAllLonEqual(BaseGeoPointTestCase.java:495)\n\n\n "
        },
        {
            "id": "comment-15229925",
            "author": "Michael McCandless",
            "date": "2016-04-07T08:43:27+0000",
            "content": "+1 to the sorting patch! "
        },
        {
            "id": "comment-15230401",
            "author": "ASF subversion and git services",
            "date": "2016-04-07T15:28:03+0000",
            "content": "Commit 05d62a357711d1e4e850a5d2fb7336bf0a7acf24 in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=05d62a3 ]\n\nLUCENE-7185: fix tie-breaker sort bug "
        },
        {
            "id": "comment-15230402",
            "author": "ASF subversion and git services",
            "date": "2016-04-07T15:28:37+0000",
            "content": "Commit 01867a5b318d6509731feea118b3f82764310380 in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=01867a5 ]\n\nLUCENE-7185: fix tie-breaker sort bug "
        },
        {
            "id": "comment-15235177",
            "author": "ASF subversion and git services",
            "date": "2016-04-11T14:37:00+0000",
            "content": "Commit 901a3af301f81331459cddb87e4fbf1a4437303b in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=901a3af ]\n\nLUCENE-7185: fix random number generation used for spatial tests.\n\nNote that GeoPoint tests are still on the old RNG as we haven't get made them happy. "
        },
        {
            "id": "comment-15235192",
            "author": "ASF subversion and git services",
            "date": "2016-04-11T14:41:38+0000",
            "content": "Commit b21218e79f2b431b3311a0a07dfbcdb7ae48f1ab in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b21218e ]\n\nLUCENE-7185: fix random number generation used for spatial tests.\n\nNote that GeoPoint tests are still on the old RNG as we haven't get made them happy. "
        },
        {
            "id": "comment-15239341",
            "author": "ASF subversion and git services",
            "date": "2016-04-13T14:33:40+0000",
            "content": "Commit cd673ebec93cbdf37d14b3984552cec4388cea0f in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cd673eb ]\n\nLUCENE-7185: add proper tests for grid bugs found here, and fix related bugs still lurking "
        },
        {
            "id": "comment-15239342",
            "author": "ASF subversion and git services",
            "date": "2016-04-13T14:34:49+0000",
            "content": "Commit acf0a57940ee8a625a3d5c48bfa170e5e758996b in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=acf0a57 ]\n\nLUCENE-7185: add proper tests for grid bugs found here, and fix related bugs still lurking "
        },
        {
            "id": "comment-15245089",
            "author": "Robert Muir",
            "date": "2016-04-18T03:28:12+0000",
            "content": "Attached is some improvements to the polygon/box testing, really its just about the points we pick to test. I haven't yet improved the actual polygons being generated.\n\nHere is a visual of what random points and boxes look like with the old generator. You can see it essentially only targets vertices for points and boxes and so these are usually not very interesting.\n\n\nHere is the new one: it tries better to find edge cases. Specifically we attack edges themselves, the bounding box, diagonals between vertices, and so on. I improved boxes as well, they definitely still could use work but should be more effective.\n\n\nI will beast the tests to try to reduce any noise. I think its ok given what our tests are doing (and the very simple stuff we are doing today with polys). "
        },
        {
            "id": "comment-15245119",
            "author": "ASF subversion and git services",
            "date": "2016-04-18T04:19:13+0000",
            "content": "Commit c135e9a7d6aedc317879a716716224b3b19c91a1 in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c135e9a ]\n\nLUCENE-7185: improve random test point/box generation for spatial tests "
        },
        {
            "id": "comment-15245124",
            "author": "ASF subversion and git services",
            "date": "2016-04-18T04:38:55+0000",
            "content": "Commit 2138bc05365e362dd5aa8df4224fd853e981de2f in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2138bc0 ]\n\nLUCENE-7185: improve random test point/box generation for spatial tests "
        },
        {
            "id": "comment-15245183",
            "author": "Dawid Weiss",
            "date": "2016-04-18T06:10:39+0000",
            "content": "Cool visualization. "
        },
        {
            "id": "comment-15245249",
            "author": "Michael McCandless",
            "date": "2016-04-18T07:45:47+0000",
            "content": "+1, this is fabulous!! "
        },
        {
            "id": "comment-15245630",
            "author": "ASF subversion and git services",
            "date": "2016-04-18T13:16:01+0000",
            "content": "Commit cc099d8fc60a7693417754f9b3a3f51f0952f9a3 in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cc099d8 ]\n\nLUCENE-7185: handle underflow "
        },
        {
            "id": "comment-15245632",
            "author": "ASF subversion and git services",
            "date": "2016-04-18T13:16:39+0000",
            "content": "Commit 045f2cad6f7808f11a4f0626ec497a077eac3220 in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=045f2ca ]\n\nLUCENE-7185: handle underflow "
        },
        {
            "id": "comment-15246781",
            "author": "ASF subversion and git services",
            "date": "2016-04-18T23:48:01+0000",
            "content": "Commit b839325740f9487bf30c74b649993c7e400a2aaa in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b839325 ]\n\nLUCENE-7185: fix buggy worst-case error and add test for absurd distances "
        },
        {
            "id": "comment-15246793",
            "author": "ASF subversion and git services",
            "date": "2016-04-18T23:57:29+0000",
            "content": "Commit cc463bf4f28b07b05a125a6b7105a9997ec8e82e in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cc463bf ]\n\nLUCENE-7185: fix buggy worst-case error and add test for absurd distances "
        }
    ]
}