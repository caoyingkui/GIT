{
    "id": "SOLR-352",
    "title": "UpdateRequest is duplicating commit and optimize requests",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "UpdateRequest current sets both query args and a update XML message in the POST body.  This causes Solr to do two commit/optimize for each commit/optimize request sent in by SolrJ.  I will be attaching a patch to remove the commit/optimize query args.",
    "attachments": {
        "solr-352.patch": "https://issues.apache.org/jira/secure/attachment/12365489/solr-352.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Bill Au",
            "id": "comment-12526197",
            "date": "2007-09-10T17:30:57+0000",
            "content": "Patch to remove commit/optimize query args since the request already contain an commit/optimize XML message in the POST body. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12526208",
            "date": "2007-09-10T18:04:19+0000",
            "content": "Dooh, thanks Bill\n\nThis patch is slightly different.  Rather then getting rid of the parameters for commit or optimize, it always uses the parameter version and does not send xml.\n\nThis way we can continue to support calling <commit> immediatly after <add> (without sending a second request)\n\nryan "
        },
        {
            "author": "Bill Au",
            "id": "comment-12526213",
            "date": "2007-09-10T18:35:16+0000",
            "content": "Ryan, I am gettign a NullPointerException when I tried you patch:\n\njava.lang.NullPointerException\n\tat org.apache.solr.common.util.ContentStreamBase$StringStream.<init>(ContentStreamBase.java:137)\n\tat org.apache.solr.client.solrj.util.ClientUtils.toContentStreams(ClientUtils.java:59)\n\tat org.apache.solr.client.solrj.request.UpdateRequest.getContentStreams(UpdateRequest.java:134)\n\tat org.apache.solr.client.solrj.impl.CommonsHttpSolrServer.request(CommonsHttpSolrServer.java:113)\n\tat org.apache.solr.client.solrj.request.UpdateRequest.process(UpdateRequest.java:199)\n\tat org.apache.solr.client.solrj.impl.BaseSolrServer.commit(BaseSolrServer.java:79)\n\tat org.apache.solr.client.solrj.impl.BaseSolrServer.commit(BaseSolrServer.java:68)\n\tat jsp._solrjCommit_jsp._jspService(solrjCommit.jsp:12)\n\tat com.caucho.jsp.JavaPage.service(JavaPage.java:60)\n\tat com.caucho.jsp.Page.pageservice(Page.java:570)\n\tat com.caucho.server.dispatch.PageFilterChain.doFilter(PageFilterChain.java:179)\n\tat com.caucho.server.cache.CacheFilterChain.doFilter(CacheFilterChain.java:209)\n\tat com.caucho.server.webapp.WebAppFilterChain.doFilter(WebAppFilterChain.java:173)\n\tat com.caucho.server.dispatch.ServletInvocation.service(ServletInvocation.java:229)\n\tat com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:274)\n\tat com.caucho.server.port.TcpConnection.run(TcpConnection.java:511)\n\tat com.caucho.util.ThreadPool.runTasks(ThreadPool.java:520)\n\tat com.caucho.util.ThreadPool.run(ThreadPool.java:442)\n\tat java.lang.Thread.run(Thread.java:595) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12526224",
            "date": "2007-09-10T19:03:58+0000",
            "content": "did you apply the whole patch?\n\nIt includes a null check at line 59 of ClientUtils.java.\n\n\n//--------------------------------------------------------------------------\nIndex: client/java/solrj/src/org/apache/solr/client/solrj/util/ClientUtils.java\n===================================================================\n\u2014 client/java/solrj/src/org/apache/solr/client/solrj/util/ClientUtils.java    (revision 574315)\n+++ client/java/solrj/src/org/apache/solr/client/solrj/util/ClientUtils.java    (working copy)\n@@ -56,9 +56,12 @@\n    */\n   public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n   {\n+    if( str == null )\n+      return null;\n+\n+    ArrayList<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n     ContentStreamBase ccc = new ContentStreamBase.StringStream( str );\n     ccc.setContentType( contentType );\n-    ArrayList<ContentStream> streams = new ArrayList<ContentStream>();\n     streams.add( ccc );\n     return streams;\n   }  "
        },
        {
            "author": "Bill Au",
            "id": "comment-12526228",
            "date": "2007-09-10T19:18:02+0000",
            "content": "My bad.  Somehow I didn't pick up the patch to ClientUtils.java.  After taking care of that, both commit and optimize works as expected and only once.  I will commit the latest patch tomorrow morning (so that other folks will have a chance to review/comment). "
        },
        {
            "author": "Bill Au",
            "id": "comment-12526271",
            "date": "2007-09-10T21:23:38+0000",
            "content": "Ryan, how does one call <commit> immediately after <add> with a single request? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12526283",
            "date": "2007-09-10T22:15:07+0000",
            "content": "I just added some docs to:\n  http://wiki.apache.org/solr/Solrj\n\nEssentially, you can work with the UpdateRequest directly and use options that are not available in the  SolrServer interface.\n\n  SolrServer server = ...\n\n  UpdateRequest req = new UpdateRequest(); \n  req.setAction( UpdateRequest.ACTION.COMMIT, false, false );\n  req.add( docs );\n  UpdateResponse rsp = req.process( server );\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12526284",
            "date": "2007-09-10T22:17:57+0000",
            "content": "Note, in solr, this is starting the commit with a request parameter, not <commit/>\n\n /update?commit=true with post data: \n <add>\n   ...\n </add> "
        },
        {
            "author": "Bill Au",
            "id": "comment-12526463",
            "date": "2007-09-11T14:14:27+0000",
            "content": "Thanks Ryan.  I got it to work but I have to add\n\nreq.setOverwrite(true);\n\nOtherwise, a got an exception from Solr:\n\norg.apache.solr.common.SolrException: unsupported param combo:add:,allowDups=false,overwritePending=false,overwriteCommitted=false\n\nunsupported param combo:add:,allowDups=false,overwritePending=false,overwriteCommitted=false\n\nrequest: http://cn-ewr1-dev40-pi2.cnet.com:7905/solr/update?commit=true&waitFlush=false&waitSearcher=false&wt=xml&version=2.2\n\nSo it looks like the combination of default values of allowDups, overwriteCommitted, and overwritePending (all false) in UpdateRequest is not supported by Solr.  Should we change the default to something that is supported (setting overwirte to true)?  I can open a separate bug and take care of that. "
        },
        {
            "author": "Bill Au",
            "id": "comment-12526466",
            "date": "2007-09-11T14:19:54+0000",
            "content": "Patch commited (Committed revision 574608). "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12526469",
            "date": "2007-09-11T14:35:53+0000",
            "content": "yes, lets make the default overwrite=true\n\nI removed the overwritePending/overwriteCommited options so that adding SOLR-60 is a non issue for solrj.\n\nCan you open a new issue? "
        },
        {
            "author": "Bill Au",
            "id": "comment-12526497",
            "date": "2007-09-11T15:35:31+0000",
            "content": "I have opened SOLR-353 for setting default overwrite=true in UpdateRequest. "
        }
    ]
}