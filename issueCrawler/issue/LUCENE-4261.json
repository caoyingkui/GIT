{
    "id": "LUCENE-4261",
    "title": "Scorers return empty getChildren",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/query/scoring"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Duplicate",
        "status": "Resolved"
    },
    "description": "Scorer.getChildren() returns an empty list for some Scorers that conceptually do have children, including:\n\n\n\tscorer for a BoostedQuery\n\tscorer for a FunctionQuery with nested QueryValueSources",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-26T21:56:51+0000",
            "content": "Can you try the 4.x branch: http://svn.apache.org/repos/asf/lucene/dev/branches/branch_4x/\n\nThese got cleaned up after the 4.0 alpha in LUCENE-3505 ",
            "author": "Robert Muir",
            "id": "comment-13423496"
        },
        {
            "date": "2012-07-26T22:38:50+0000",
            "content": "Well, FunctionQuery.AllScorer still doesn't define getChildren():\n\nhttp://svn.apache.org/repos/asf/lucene/dev/branches/branch_4x/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java\n\nLooks like BoostedQuery is fixed though. ",
            "author": "Steven Bethard",
            "id": "comment-13423516"
        },
        {
            "date": "2012-07-26T22:43:45+0000",
            "content": "FunctionQuery.AllScorer doesnt have any children.\n\nIts not a bug, its just that those valuesources are not scorers. ",
            "author": "Robert Muir",
            "id": "comment-13423517"
        },
        {
            "date": "2012-07-27T00:28:52+0000",
            "content": "It's true that QueryValueSources aren't Scorers, but the QueryDocValues of a QueryValueSource does contain a Scorer. Conceptually, it feels like a FunctionQuery with QueryValueSources inside of it should be returning the Scorers from the queries as part of its getChildren(). But perhaps that's just too difficult to implement... ",
            "author": "Steven Bethard",
            "id": "comment-13423585"
        },
        {
            "date": "2012-07-27T00:42:28+0000",
            "content": "The FunctionQuery's scorer has no subscorers, as far as the Scorer api\ngoes, its a 'leaf node'. Its score is the result of a function and thats it.\nThis is really the whole point of function queries.\n\nYou are then in 'function territory' (and whatever that function does is opaque really).\n ",
            "author": "Robert Muir",
            "id": "comment-13423590"
        },
        {
            "date": "2012-07-27T00:52:39+0000",
            "content": "That's too bad.\n\nWell, consider this issue as a request for increased documentation of what each Query considers to be it's \"children\" then. ",
            "author": "Steven Bethard",
            "id": "comment-13423597"
        },
        {
            "date": "2012-07-27T00:59:57+0000",
            "content": "The documentation for function query already states:\n\n\nReturns a score for each document based on a ValueSource\n\n\n\nSo it only has one scorer, It doesnt operate on subscorers! \nIf you want to be able to navigate valuesources, thats \nsomething else entirely that you would need to do with the \nfunction query apis.\n\nBut it doesn't belong in the scorer api. ",
            "author": "Robert Muir",
            "id": "comment-13423599"
        },
        {
            "date": "2012-07-27T01:00:14+0000",
            "content": "see LUCENE-3505 ",
            "author": "Robert Muir",
            "id": "comment-13423600"
        },
        {
            "date": "2012-07-27T01:22:23+0000",
            "content": "Please reconsider the documentation request. Right now, the only way you can figure out what the children of any Query's Scorer are is to read the source code.\n\nAll I'm asking for is something as simple as:\n\nFor FunctionQuery:\n\n\"The getChildren() method in Scorers created by FunctionQuery objects return no child Scorers. FunctionQuery is considered a \"leaf node\" in terms of Scorers.\"\n\nFor BoostedQuery:\n\n\"The getChildren() method in Scorers created by BoostedQuery objects return a single Scorer corresponding to the Query being boosted\"\n\nFor BooleanQuery:\n\n\"The getChildren() method in Scorers created by BooleanQuery objects return one child Scorer for each clause in the BooleanQuery\" (is that right?)\n\netc. ",
            "author": "Steven Bethard",
            "id": "comment-13423614"
        }
    ]
}