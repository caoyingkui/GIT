{
    "id": "LUCENE-4147",
    "title": "rollback/preparecommit thread hazard",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA",
            "6.0"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "found by http://jenkins.sd-datasolutions.de/job/Lucene-Solr-4.x-Windows-Java7-64/70/\n\nrollback should never throw this exception, as it documents it clears any pendingcommits.\n\nbut it calls closeInternal outside of any sync block, so it looks like there is a race here.",
    "attachments": {
        "LUCENE-4147.patch": "https://issues.apache.org/jira/secure/attachment/12532209/LUCENE-4147.patch",
        "deadlock.log": "https://issues.apache.org/jira/secure/attachment/12532790/deadlock.log",
        "fail.log": "https://issues.apache.org/jira/secure/attachment/12532402/fail.log"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-06-15T16:26:17+0000",
            "content": "Test case that fails more easily from the bug ... ",
            "author": "Michael McCandless",
            "id": "comment-13295751"
        },
        {
            "date": "2012-06-18T11:17:41+0000",
            "content": "Patch, acquiring the commitLock around close and rollback, and adding\nthe ensureOpen before prepareCommit.  However, the test still fails\nafter a few hundred beasting iterations, I think because of thread safety\nissues where one thread calls docWriter.abort while another is\nflushing ... not sure how to fix that one yet.  Simon maybe you can\nhave a look? ",
            "author": "Michael McCandless",
            "id": "comment-13395813"
        },
        {
            "date": "2012-06-18T11:35:34+0000",
            "content": "mike, do we really need to acquire the commit lock? from my perspective it would be enough to add an ensure open when we assigne pendingCommit (inside the sync block) so that racing threads hit already close exceptions.\n\nregarding the thread safety issue in DocWriter can you paste the trace? ",
            "author": "Simon Willnauer",
            "id": "comment-13395826"
        },
        {
            "date": "2012-06-18T12:21:28+0000",
            "content": "mike, do we really need to acquire the commit lock?\n\nThe problem is rollback forcefully clears the pendingCommit and then deletes any files it had (alone) referenced, so if a commit is running concurrently the fsyncs will fail since the files were deleted.\n\nAlso: it doesn't really make sense to allow rollback and commit to proceed concurrently?  Why would an app need this?  Seems like we can simplify the code by making them exclusive.\n\nregarding the thread safety issue in DocWriter can you paste the trace?\n\nWill do ... need to re-beast. ",
            "author": "Michael McCandless",
            "id": "comment-13395854"
        },
        {
            "date": "2012-06-18T12:46:34+0000",
            "content": "Here's the verbose output from a failure w/ the patch ...  ",
            "author": "Michael McCandless",
            "id": "comment-13395865"
        },
        {
            "date": "2012-06-19T12:27:25+0000",
            "content": "I think we should commit the current patch, and then leave the issue open for the docWriter abort/flush thread safety.\n\nThe current patch should fix the Jenkins test failures we're seeing (but the new test here may still sometimes fail until we fix the abort/flush thread safety issue). ",
            "author": "Michael McCandless",
            "id": "comment-13396718"
        },
        {
            "date": "2012-06-19T13:54:46+0000",
            "content": "patch fixing the DWPT issue. The problem was that we didn't close the DW before aborting. That means we didn't invalidate the thread states in DWPTThreadPool and an already waiting Thread could acquire the state before we eventually close the DW. If that happens together with a low ram buffer / low maxBufferedDocs we hit an exception on flush since IFD deleted the files already. Now since we first close and then abort this can't happen anymore and will cause an AlreadClosedException for the indexing thread.  ",
            "author": "Simon Willnauer",
            "id": "comment-13396771"
        },
        {
            "date": "2012-06-19T13:55:25+0000",
            "content": "one more think, I think this is a general problem that exists before so we might need a CHANGES.TXT entry? ",
            "author": "Simon Willnauer",
            "id": "comment-13396772"
        },
        {
            "date": "2012-06-19T15:27:08+0000",
            "content": "The problem was that we didn't close the DW before aborting.\n\nAha!  Thanks.\n\nI'll beast this, and add a CHANGES entry ... ",
            "author": "Michael McCandless",
            "id": "comment-13396853"
        },
        {
            "date": "2012-06-19T16:33:53+0000",
            "content": "Hmm, hit a failure (verbose log attached)... haven't tried to understand it yet. ",
            "author": "Michael McCandless",
            "id": "comment-13396908"
        },
        {
            "date": "2012-06-19T19:37:26+0000",
            "content": "I see what's happening. There is a thread that started flushing before we call rollback but finishes after we already wiped its files. I think we don't have a choice here but wait for the flushes to finish with flushControl.waitForFlush(); I will prepare a new patch tomorrow. ",
            "author": "Simon Willnauer",
            "id": "comment-13397008"
        },
        {
            "date": "2012-06-20T19:46:29+0000",
            "content": "new patch that waits for running flushes in abort after all possible DWPTs are aborted. \n ",
            "author": "Simon Willnauer",
            "id": "comment-13397810"
        },
        {
            "date": "2012-06-20T22:39:23+0000",
            "content": "Thanks Simon; I'll re-beast. ",
            "author": "Michael McCandless",
            "id": "comment-13397957"
        },
        {
            "date": "2012-06-20T23:01:24+0000",
            "content": "Well, the good news is beasting didn't uncover a failure ... but the bad news is: it uncovered a deadlock/hang!!  I'm attaching thread stacks. ",
            "author": "Michael McCandless",
            "id": "comment-13397980"
        },
        {
            "date": "2012-06-21T12:18:08+0000",
            "content": "I feared that this is gonna hang at some point. I moved the docWriter abort / close out of the sync block in IW rollbackInternal and beasted the new test + all other tests for hours now. I think this is fine to move that out, no need really to keep the IW lock since we already have the commit lock in our hands. I didn't see a failure so far. ",
            "author": "Simon Willnauer",
            "id": "comment-13398384"
        },
        {
            "date": "2012-06-21T12:22:46+0000",
            "content": "Thanks Simon, I'll review & beast ... ",
            "author": "Michael McCandless",
            "id": "comment-13398388"
        },
        {
            "date": "2012-06-21T16:17:41+0000",
            "content": "OK, patch looks good, and beasting ran for 4 hours w/ no failures/hangs ... I'll commit.  Thanks Simon! ",
            "author": "Michael McCandless",
            "id": "comment-13398524"
        }
    ]
}