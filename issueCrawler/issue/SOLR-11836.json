{
    "id": "SOLR-11836",
    "title": "Use -1 in bucketSizeLimit to get all facets, analogous to the JSON facet API",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "streaming expressions"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Currently, to retrieve all buckets using the streaming expressions facet function, the bucketSizeLimit parameter must have a high enough value so that all results will be included. Compare this with the JSON facet API, where you can use \"limit\": -1 to achieve this. It would help if such a possibility existed.\n\nIssue 11236 is related.",
    "attachments": {
        "SOLR-11836.patch": "https://issues.apache.org/jira/secure/attachment/12905435/SOLR-11836.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-10T11:15:09+0000",
            "content": "Alfonso Mu\u00f1oz-Pomer Fuentes,\n\nCorrect, the behavior should be analogous. I have attached a small patch which do the same. Test and documentation updated. Joel Bernstein requesting your feedback and thoughts. ",
            "author": "Amrit Sarkar",
            "id": "comment-16320087"
        },
        {
            "date": "2018-01-10T16:11:05+0000",
            "content": "I haven't looked at the patch yet, but it sounds like a good change. I'll try to get this looked at before the next release. ",
            "author": "Joel Bernstein",
            "id": "comment-16320511"
        },
        {
            "date": "2018-01-11T10:36:21+0000",
            "content": "Thanks all for such a quick action. I looked at the code and until this makes it to a stable release I\u2019ll use Integer.MAX_VALUE instead of -1. ",
            "author": "Alfonso Mu\u00f1oz-Pomer Fuentes",
            "id": "comment-16322022"
        },
        {
            "date": "2018-03-16T21:30:27+0000",
            "content": "Joel Bernstein will the fix / workaround be part of Solr 7.3? thank you in advance. ",
            "author": "Amrit Sarkar",
            "id": "comment-16402564"
        },
        {
            "date": "2018-09-11T17:44:01+0000",
            "content": "Patch applies cleanly on master. Looks good to me!\n\nWe should just commit this and it can be part of 7.5 .\u00a0\n\n\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16611004"
        },
        {
            "date": "2018-09-11T17:49:04+0000",
            "content": "Running tests and committing it to master and 7_x\u00a0 and then checking with the RM to backport\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16611011"
        },
        {
            "date": "2018-09-11T18:16:50+0000",
            "content": "Commit d35d2063a817b4b4a6975115860624686afe8964 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d35d206 ]\n\nSOLR-11836: FacetStream works with bucketSizeLimit of -1 which will fetch all the buckets ",
            "author": "ASF subversion and git services",
            "id": "comment-16611046"
        },
        {
            "date": "2018-09-11T18:19:57+0000",
            "content": "Commit 019239c77d6e502c76a293da0c2367c85b5d7843 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=019239c ]\n\nSOLR-11836: FacetStream works with bucketSizeLimit of -1 which will fetch all the buckets\n\n(cherry picked from commit d35d206) ",
            "author": "ASF subversion and git services",
            "id": "comment-16611049"
        },
        {
            "date": "2018-09-11T18:21:19+0000",
            "content": "Okay looks like the patch was provided by Amrit and not\u00a0Alfonso. I'll fix the CHAGES entry ",
            "author": "Varun Thacker",
            "id": "comment-16611050"
        },
        {
            "date": "2018-09-11T19:37:55+0000",
            "content": "Commit 2b553f03bec74f65604334b5047a9ce68dd5d344 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2b553f0 ]\n\nSOLR-11836: add all contributors for the patch ",
            "author": "ASF subversion and git services",
            "id": "comment-16611140"
        },
        {
            "date": "2018-09-11T19:38:29+0000",
            "content": "Commit 1c493552a23741c4c2319ca35e5018603853db46 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1c49355 ]\n\nSOLR-11836: add all contributors for the patch\n\n(cherry picked from commit 2b553f0) ",
            "author": "ASF subversion and git services",
            "id": "comment-16611142"
        },
        {
            "date": "2018-09-11T19:49:04+0000",
            "content": "I was just looking this over and testing some things out locally.\n\nI tested just sending\u00a0-1 to the JSON facet API and it didn't return results. It's also not a documented thing to do.\n\nI see that the patch sets the limit to Integer.MAX_VALUE. It would be good to understand how this effects the internal data structures used by the JSON facet API. For example it's possible that the JSON API is pre-allocating one or more arrays of that size. This would not be an unusual thing todo inside Solr. If that's the case then setting limit to Integer.MAX_VALUE would be something that we want to avoid. ",
            "author": "Joel Bernstein",
            "id": "comment-16611153"
        },
        {
            "date": "2018-09-11T19:55:15+0000",
            "content": "Hi Joel,\n\nI checked FacetFieldMerger and saw this statement which is why I assumed doing the same thing in FacetStream would be the right thing to do.\u00a0\n\nint lim = freq.limit >= 0 ? (int)freq.limit : Integer.MAX_VALUE;\n\nor example it's possible that the JSON API is pre-allocating one or more arrays of that size.\nIf this is happening perhaps we should create another Jira as this would affect JSON Facet API users as well?\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16611158"
        },
        {
            "date": "2018-09-11T20:00:40+0000",
            "content": "I think we need to modify the patch a little after Joe's comment. We shouldn't use\u00a0nteger.MAX_VALUE explicitly from FacetStream. We should just pass down -1 and then let JSON Facets deal with -1 as it does currently .\n\nSo essentially remove this\u00a0\n\nif (this.bucketSizeLimit == -1) {\n  this.bucketSizeLimit = Integer.MAX_VALUE;\n}\n ",
            "author": "Varun Thacker",
            "id": "comment-16611161"
        },
        {
            "date": "2018-09-11T20:02:55+0000",
            "content": "In that particular spot there are no array allocations made. It may be that in the lower level facet collecting code that array allocations are made based on limit. We could dig and see how the limit is being used and/or also ping Yonik and see what he thinks.\n\nYonik Seeley, do you feel it's safe to be setting the facet bucket limit to Integer.MAX_VALUE?\u00a0 ",
            "author": "Joel Bernstein",
            "id": "comment-16611163"
        },
        {
            "date": "2018-09-11T20:03:58+0000",
            "content": "Also when I sent -1 directly to the JSON facet API it didn't return results. I'll need to dig into why. ",
            "author": "Joel Bernstein",
            "id": "comment-16611165"
        },
        {
            "date": "2018-09-11T21:29:13+0000",
            "content": "I believe the Integer.MAX_VALUE is safe to use based on a review of FacetFieldProcessor.\n\nI will test out this patch locally. ",
            "author": "Joel Bernstein",
            "id": "comment-16611272"
        },
        {
            "date": "2018-09-11T21:34:05+0000",
            "content": "limit:-1 should work fine for JSON Facets.\n\nAlso when I sent -1 directly to the JSON facet API it didn't return results. I'll need to dig into why.\nPerhaps other code in the middle (i.e. before it gets to the JSON Facet code) manipulates that value and messes it up?\n\nTestJsonFacets randomly specifies limit:-1 so this should be well tested too:\nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets.java#L935 ",
            "author": "Yonik Seeley",
            "id": "comment-16611275"
        },
        {
            "date": "2018-09-11T22:42:16+0000",
            "content": "It's the FacetStream that is causing the -1 limit to stop returning results. We can fix that as well. ",
            "author": "Joel Bernstein",
            "id": "comment-16611347"
        },
        {
            "date": "2018-09-22T00:01:53+0000",
            "content": "Commit 60569fbe4e8e9f9f9d57da9bf2570f847a26965c in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=60569fb ]\n\nSOLR-11836: Move CHANGES entry to the 7.6 section ",
            "author": "ASF subversion and git services",
            "id": "comment-16624345"
        },
        {
            "date": "2018-09-22T00:03:06+0000",
            "content": "Commit a9723cd25298459db6d659a42d1f7b6c6c507139 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a9723cd ]\n\nSOLR-11836: Move CHANGES entry to the 7.6 section\n\n(cherry picked from commit 60569fb) ",
            "author": "ASF subversion and git services",
            "id": "comment-16624348"
        },
        {
            "date": "2018-09-22T00:03:36+0000",
            "content": "Thanks Amrit! ",
            "author": "Varun Thacker",
            "id": "comment-16624349"
        }
    ]
}