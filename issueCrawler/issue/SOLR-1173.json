{
    "id": "SOLR-1173",
    "title": "Let contrib projects modify web.xml when running dist-war",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "1.5"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Original problem:\n\nI just wrote a Servlet Filter to handle authentication for our\nservice.  Here's what I did:\n\n1. Created a dir in contrib\n2. Put my project in there, I took the dataimporthandler build.xml as\nan example and modified it to suit my needs.  Worked great!\n3. ant dist now builds my jar and includes it\n\nI now need to modify web.xml to add my filter-mapping, init params,\netc.  How can I do this cleanly?  Or do I need to manually open up the\narchive and edit it and then re-war it?\n\nIn common-build I don't see a target for dist-war, so don't see how it\nis possible...\n\nSee: http://mail-archives.apache.org/mod_mbox/lucene-solr-user/200905.mbox/%3C4ED43C6D-320D-4E0D-835D-4366B0F08D0E@ehatchersolutions.com%3E",
    "attachments": {
        "xmltask_contrib_build.diff": "https://issues.apache.org/jira/secure/attachment/12408466/xmltask_contrib_build.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jacob Singh",
            "id": "comment-12710686",
            "date": "2009-05-19T09:59:21+0000",
            "content": "This patch provides a new task (dist-war-contrib).  This will do a contrib-crawl over the contrib/*/build.xml files looking for a dist-war task which will get run prior to running dist-war if you run dist.\n\nIf you want to modify the web.xml before it is added to the war:\n\n1. Download the xmltask jar from: http://sourceforge.net/project/downloading.php?group_id=27398&filename=xmltask-v1.15.1.jar&a=8015257 and put it in lib\n\n2. Add something like the following to your build.xml (in your contrib project): \n\n<target name=\"dist-war\" depends=\"dist\">\n                <xmltask source=\"${solr-path}/build/web/WEB-INF/web.xml\" dest=\"${solr-path}/build/web/WEB-INF/web.xml\"\n         preserveType=\"true\"\n             report=\"true\">\n                        <insert path=\"/web-app/filter[last()]\" position=\"after\">\n<![CDATA[\n  <filter>\n    <display-name>HmacFilter</display-name>\n    <filter-name>HmacFilter</filter-name>\n    <filter-class>com.acquia.search.HmacFilter</filter-class>\n  </filter>\n  <filter-mapping>\n    <filter-name>HmacFilter</filter-name>\n    <url-pattern>/*</url-pattern>\n  </filter-mapping>\n]]>\n            </insert>\n        </xmltask>\n</target>\n\n\n3. That's it! Deploy and your changes to web.xml will take effect, no fuss no muss.\n\nNote: This does show some warnings for projects that do not implement dist-war "
        },
        {
            "author": "Jacob Singh",
            "id": "comment-12710687",
            "date": "2009-05-19T10:08:20+0000",
            "content": "Oops, forgot the common-build.xml diff "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12717628",
            "date": "2009-06-09T09:46:05+0000",
            "content": "Marking for 1.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12722041",
            "date": "2009-06-19T21:56:23+0000",
            "content": "FWIW: I'd prefer we not go down this route.\n\ncontribs (as a general rule) should be jars that can be built and dropped into a solr lib directly and used as is. If contribs start customizing the web.xml to include in Servlet Filters or Servlets then we either wind up with a single solr.war that must include that contrib (and it's dependencies) to function properly or multiple different war files that contain permutations of solr with various contribs baked into them.\n\n\nAnything add on code that needs to modify the web.xml shouldn't be considered a simple plugin ... it should be considered \"expert\" level modifications.\n\nIf i understand the motivation for this, it's that an expert user (jacob) has private modifications (not intended for being committed into the ASF repository) and is requesting modifications to the solr build files to make this modifications possible when he builds his own version of solr \u2013 not when using an official build.\n\nThis doesn't seem like something that needs to be in the solr build files \u2013 if you're going to compile solr yourself anyway, then modifying the web.xml can be done just as easily in a build file at a \"higher\" level the solr as it can be at a \"lower\" level like a contrib.  ie: instead of...\n\n\nsvn co https://svn.apache.org/repos/asf/lucene/solr/trunk/ solr\ncp my-private-contrib solr/contirb/my-private-contrib\ncd solr\nant dist\n\n\n\n...(where my-private-contrib/build.xml has the xmltask options you describe) you could just as easily do something like...\n\n\nsvn co https://svn.apache.org/repos/asf/lucene/solr/trunk/ solr\ncp my-private-contrib solr/contirb/my-private-contrib\nant -f some-other-antfile-with-xmltask-commands.xml\ncd solr\nant dist\n\n\n\n\nIn short: since what you want to do is already possible another way, I'd rather not make the change you are proposing because it could be inadvertently abused in future commits.\n\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722131",
            "date": "2009-06-20T03:51:25+0000",
            "content": "I agree with Hoss.  I'm marking as Won't Fix. \n\nHowever, I did as of r786752 commit a tweak to build.xml such that you can build Solr using \"ant -Dweb.xml=/path/to/custom/web.xml\" to incorporate a custom web.xml into solr.war.\n "
        },
        {
            "author": "Jacob Singh",
            "id": "comment-12722146",
            "date": "2009-06-20T05:59:08+0000",
            "content": "\"If i understand the motivation for this, it's that an expert user (jacob) has private modifications (not intended for being committed into the ASF repository) and is requesting modifications to the solr build files to make this modifications possible when he builds his own version of solr - not when using an official build.\"\n\nNot exactly.  I don't have a modifications, I build a new contrib jar which needs to have its filter configured in web.xml.  It's not a modification to Solr code, and the war target, not the build target.  What I was proposing is that in the future, if any contrib modules needed web.xml extensions, they would have to break the build/war processes, and this 10 line patch prevents that without causing any other disruption; just like all the rest of the steps which use contrib-crawl.\n\nStill, I guess I'm outnumbered, so we'll just have to keep maintaining our modification   But there's the rationale.\n\nBest,\nJacob "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722175",
            "date": "2009-06-20T11:27:44+0000",
            "content": "Jacob - your use case makes sense for sure, though we don't have such a contrib in Solr's codebase currently and if we did we'd just hardcode wire it into solr.war just like we do the dataimport JSP pages currently.  It's not the cleanest most componentized way, to be sure.  \n\nBut at least now you simply can maintain your own plugin and your own web.xml and Solr's build allows you to incorporate it. "
        }
    ]
}