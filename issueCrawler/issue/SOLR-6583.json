{
    "id": "SOLR-6583",
    "title": "Resuming connection with ZooKeeper causes log replay",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "affect_versions": "4.10.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "If a node is partitioned from ZooKeeper for an extended period of time then upon resuming connection, the node re-registers itself causing recoverFromLog() method to be executed which fails with the following exception:\n\n8091124 [Thread-71] ERROR org.apache.solr.update.UpdateLog  \u2013 Error inspecting tlog tlog{file=/home/ubuntu/shalin-lusolr/solr/example/solr/collection_5x3_shard5_replica3/data/tlog/tlog.0000000000000009869 refcount=2}\njava.nio.channels.ClosedChannelException\n        at sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:99)\n        at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:678)\n        at org.apache.solr.update.ChannelFastInputStream.readWrappedStream(TransactionLog.java:784)\n        at org.apache.solr.common.util.FastInputStream.refill(FastInputStream.java:89)\n        at org.apache.solr.common.util.FastInputStream.read(FastInputStream.java:125)\n        at java.io.InputStream.read(InputStream.java:101)\n        at org.apache.solr.update.TransactionLog.endsWithCommit(TransactionLog.java:218)\n        at org.apache.solr.update.UpdateLog.recoverFromLog(UpdateLog.java:800)\n        at org.apache.solr.cloud.ZkController.register(ZkController.java:834)\n        at org.apache.solr.cloud.ZkController$1.command(ZkController.java:271)\n        at org.apache.solr.common.cloud.ConnectionManager$1$1.run(ConnectionManager.java:166)\n8091125 [Thread-71] ERROR org.apache.solr.update.UpdateLog  \u2013 Error inspecting tlog tlog{file=/home/ubuntu/shalin-lusolr/solr/example/solr/collection_5x3_shard5_replica3/data/tlog/tlog.0000000000000009870 refcount=2}\njava.nio.channels.ClosedChannelException\n        at sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:99)\n        at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:678)\n        at org.apache.solr.update.ChannelFastInputStream.readWrappedStream(TransactionLog.java:784)\n        at org.apache.solr.common.util.FastInputStream.refill(FastInputStream.java:89)\n        at org.apache.solr.common.util.FastInputStream.read(FastInputStream.java:125)\n        at java.io.InputStream.read(InputStream.java:101)\n        at org.apache.solr.update.TransactionLog.endsWithCommit(TransactionLog.java:218)\n        at org.apache.solr.update.UpdateLog.recoverFromLog(UpdateLog.java:800)\n        at org.apache.solr.cloud.ZkController.register(ZkController.java:834)\n        at org.apache.solr.cloud.ZkController$1.command(ZkController.java:271)\n        at org.apache.solr.common.cloud.ConnectionManager$1$1.run(ConnectionManager.java:166)\n\n\n\nThis is because the recoverFromLog uses transaction log references that were collected at startup and are no longer valid.\n\nWe shouldn't even be running recoverFromLog code for ZK re-connect.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2014-10-14T16:44:36+0000",
            "author": "Jesse Sipprell",
            "content": "Just an FYI, I also am seeing a number of these when bringing all nodes up on a previously shutdown SolrCloud with a populated zk tree, although this hardly is unexpected given the hypothesized cause.\n\nIt does seem fairly minor based on the fact that I haven't noticed any ramifications regarding elections or otherwise bringing everything up irrespective of previous state, but I thought I would add Yet Another Data Point. ",
            "id": "comment-14171200"
        },
        {
            "date": "2014-10-16T07:55:08+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Hi Jesse Sipprell, what you are seeing is probably a different bug because if you are bringing up dead nodes then this error shouldn't happen. \n\nAs I said in the description:\nThis is because the recoverFromLog uses transaction log references that were collected at startup and are no longer valid.\n\nIf you start a node then the log references collected at startup should be valid and the recoverFromLog method should definitely succeed. Which version of Solr are you using? How often do you see this error and is it easily reproducible? ",
            "id": "comment-14173504"
        },
        {
            "date": "2014-12-02T10:54:26+0000",
            "author": "Yago Riveiro",
            "content": "This is happening in Solr 4.6.1 too.\n\n\nERROR - app2 - 2014-12-01 21:30:42.820; org.apache.solr.update.UpdateLog; Error inspecting tlog tlog{file=/solr/node/collections/collection1_shard2_replica1/data/tlog/tlog.0000000000000001284 refcount=2}\n\n ",
            "id": "comment-14231304"
        },
        {
            "date": "2015-03-09T11:52:40+0000",
            "author": "Markus Jelsma",
            "content": "Seems this is on 4.10.4 as well. I have never seen it happen before\nhttp://mail-archives.apache.org/mod_mbox/lucene-solr-user/201503.mbox/%3Czarafa.54fc424e.0fe2.1b6ac4ae3e74e461@mail.openindex.io%3E ",
            "id": "comment-14352850"
        },
        {
            "date": "2015-04-02T12:46:34+0000",
            "author": "Mark Miller",
            "content": "I linked to SOLR-7338, as that is fairly related to this issue and my sample patch attached there should address this. ",
            "id": "comment-14392662"
        },
        {
            "date": "2015-04-06T15:42:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1671554 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1671554 ]\n\nSOLR-7338: A reloaded core will never register itself as active after a ZK session expiration, also fixes SOLR-6583 ",
            "id": "comment-14481320"
        },
        {
            "date": "2015-04-06T15:57:00+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1671562 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1671562 ]\n\nSOLR-7338: A reloaded core will never register itself as active after a ZK session expiration, also fixes SOLR-6583 ",
            "id": "comment-14481347"
        },
        {
            "date": "2015-04-06T16:14:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1671570 from Timothy Potter in branch 'dev/branches/lucene_solr_5_1'\n[ https://svn.apache.org/r1671570 ]\n\nSOLR-7338: A reloaded core will never register itself as active after a ZK session expiration, also fixes SOLR-6583 ",
            "id": "comment-14481365"
        },
        {
            "date": "2015-04-20T13:39:37+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This was fixed by SOLR-7338 ",
            "id": "comment-14502796"
        }
    ]
}