{
    "id": "SOLR-5577",
    "title": "indexing delay due to zookeeper election",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.6.1",
            "4.7",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The behaviour we observed was that a zookeeper election took about 2s plus 1.5s for reading the zoo_data snapshot. During this time solr tried to establish connections to any zookeeper in the ensemble but only succeeded once a leader was elected and that leader was done reading the snapshot. Solr document updates were slowed down during this time window.\n\nIs this expected to happen during and shortly after elections, that is zookeeper closing existing connections, rejecting new connections and thus stalling solr updates?\n\nOther than avoiding zookeeper elections, are there ways of reducing their impact on solr?\n\nzookeeper log extract\n\n\n08:18:54,968 [QuorumCnxManager.java:762] Connection broken for id ...\n08:18:56,916 [Leader.java:345] LEADING - LEADER ELECTION TOOK - 1941\n08:18:56,918 [FileSnap.java:83] Reading snapshot ...\n...\n08:18:57,010 [NIOServerCnxnFactory.java:197] Accepted socket connection from ...\n08:18:57,010 [NIOServerCnxn.java:354] Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running\n08:18:57,010 [NIOServerCnxn.java:1001] Closed socket connection for client ... (no session established for client)\n...\n08:18:58,496 [FileTxnSnapLog.java:240] Snapshotting: ... to ...\n\n\n\nsolr log extract\n\n\n08:18:54,968 [ClientCnxn.java:1085] Unable to read additional data from server sessionid ... likely server has closed socket, closing socket connection and attempting reconnect\n08:18:55,068 [ConnectionManager.java:72] Watcher org.apache.solr.common.cloud.ConnectionManager@... name:ZooKeeperConnection Watcher:host1:port1,host2:port2,host3:port3,... got event WatchedEvent state:Disconnected type:None path:null path:null type:None\n08:18:55,068 [ConnectionManager.java:132] zkClient has disconnected\n...\n08:18:55,961 [ClientCnxn.java:966] Opening socket connection to server ...\n08:18:55,961 [ClientCnxn.java:849] Socket connection established to ...\n08:18:55,962 [ClientCnxn.java:1085] Unable to read additional data from server sessionid ... likely server has closed socket, closing socket connection and attempting reconnect\n...\n08:18:56,714 [ClientCnxn.java:966] Opening socket connection to server ...\n08:18:56,715 [ClientCnxn.java:849] Socket connection established to ...\n08:18:56,715 [ClientCnxn.java:1085] Unable to read additional data from ...\n...\n08:18:57,640 [ClientCnxn.java:966] Opening socket connection to server ...\n08:18:57,641 [ClientCnxn.java:849] Socket connection established to ...\n08:18:57,641 [ClientCnxn.java:1085] Unable to read additional data from ...\n...\n08:18:58,352 [ClientCnxn.java:966] Opening socket connection to server ...\n08:18:58,353 [ClientCnxn.java:849] Socket connection established to ...\n08:18:58,353 [ClientCnxn.java:1085] Unable to read additional data from ...\n...\n08:18:58,749 [ClientCnxn.java:966] Opening socket connection to server ...\n08:18:58,749 [ClientCnxn.java:849] Socket connection established to ...\n08:18:58,751 [ClientCnxn.java:1207] Session establishment complete on server ... sessionid = ..., negotiated timeout = ...\n08:18:58,751 ... [ConnectionManager.java:72] Watcher org.apache.solr.common.cloud.ConnectionManager@... name:ZooKeeperConnection Watcher:host1:port1,host2:port2,host3:port3,... got event WatchedEvent state:SyncConnected type:None path:null path:null type:None",
    "attachments": {
        "SOLR-5577.patch": "https://issues.apache.org/jira/secure/attachment/12620575/SOLR-5577.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13855835",
            "date": "2013-12-23T18:45:47+0000",
            "content": "Our model should be able to handle this better.\n\nSome off the cough remarks:\n\n\n\tOur model should be fine with turning off updates only after the connection with zk is lost for a while, rather than the moment it's noticed.\n\n\n\n\n\tEven if we didn't want to relax the above, we should be able to handle this case better - if the issue is that ZooKeeper is actually unavailable, we won't get new leaders or anything anyway, so no reason to be too concerned about turning off updates. Not sure how easy that is to detect though.\n\n "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-13855874",
            "date": "2013-12-23T19:29:40+0000",
            "content": "A shard might update it's state while zk is away (and no one else knows about it) and perhaps we're trying to avoid any such cases by rejecting the updates for as long as zk is unavailable. There might be concerns about consistency if we get any less strict, or so I think. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13855877",
            "date": "2013-12-23T19:34:56+0000",
            "content": "The proposal here is to only relax updating the collection for a while when ZK connection is lost. If a shard updates its state, wouldn't the Overseer have to process the state update? That would still continue to fail till ZK comes back up. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13855908",
            "date": "2013-12-23T20:25:05+0000",
            "content": "Solr document updates were slowed down during this time window.\n\nThat's interesting - slowed down? Not rejected? That is more surprising to me...need to do some code review. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13855910",
            "date": "2013-12-23T20:29:30+0000",
            "content": "If a shard updates its state, wouldn't the Overseer have to process the state update? \n\nCorrect. And there is already some window as well - I'm not sure it matters that the window is a little larger due to the the possibly very small change in probability of it being an issue. We have to think about it carefully, but for the most part, this is just a preventative measure to make sure some node is not going rogue for a long period of time with a cached, stale cluster state and no connection to ZooKeeper for some reason, but perhaps a connection to other nodes.\n\nI think we always intended to think about ways to relax it, but when putting things together initially, it was faster/easier to just lock this down as much as possible to start. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13855912",
            "date": "2013-12-23T20:32:36+0000",
            "content": "P.S. I don't know that it's the right solution for the issue yet either - just spit balling at this point. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13855916",
            "date": "2013-12-23T20:34:49+0000",
            "content": "That's interesting - slowed down? Not rejected? That is more surprising to me...need to do some code review.\n\nOkay, bad memory. Looking at the code, this makes sense. Those updates wait up to the session expiration before they would end up erroring...a slowdown makes sense.\n\nWe have to be able to improve this. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13855919",
            "date": "2013-12-23T20:37:37+0000",
            "content": "So I think we already kind of have this window setup for this case - up to the session timeout, which I think makes sense. The problem is in how it's implemented. It shouldn't hold up updates for that long, it should simply only accept them for that long. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13856403",
            "date": "2013-12-24T17:24:25+0000",
            "content": "Currently when we get disconnected from ZK, do we know if that is due to the session expiration? From what I can see, and I am probably wrong, we get to know that the session expired only when we next try to reconnect. If so, and if we were the leader, the session expiry would have triggered a re-election before we reconnect, and we shouldn't be processing them as the leader in the first place \u2013 so we might end up with two nodes thinking they are the leader for the period from the disconnect to when we try to reconnect and get a session expiry. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13856720",
            "date": "2013-12-26T03:17:50+0000",
            "content": "You would have to be dc'd from zk for the length of the session timeout before a new leader election would start - which is why it should be safe to accept updates for about up to the session timeout after losing the zk connection. We just have to fix the lazy impl.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13857231",
            "date": "2013-12-27T01:30:33+0000",
            "content": "We need something more like this. First draft patch attached. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13857233",
            "date": "2013-12-27T01:34:17+0000",
            "content": "I think perhaps we should wait up to 80 or 90% of the session time-out before we start rejecting updates. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13858108",
            "date": "2013-12-28T20:49:28+0000",
            "content": "Commit 1553912 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1553912 ]\n\nSOLR-5577: Likely ZooKeeper expiration should not slow down updates a given amount, but instead cut off updates after a given time. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13858109",
            "date": "2013-12-28T20:55:46+0000",
            "content": "Commit 1553914 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1553914 ]\n\nSOLR-5577: Likely ZooKeeper expiration should not slow down updates a given amount, but instead cut off updates after a given time. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13858190",
            "date": "2013-12-29T00:14:31+0000",
            "content": "Commit 1553981 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1553981 ]\n\nSOLR-5577: Don't start a timer on disconnect if we are already closed "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13858191",
            "date": "2013-12-29T00:15:45+0000",
            "content": "Commit 1553982 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1553982 ]\n\nSOLR-5577: Don't start a timer on disconnect if we are already closed "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13861794",
            "date": "2014-01-03T19:08:45+0000",
            "content": "Commit 1555204 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1555204 ]\n\nSOLR-5577: fix possible race on canceling timer on close "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13861807",
            "date": "2014-01-03T19:17:04+0000",
            "content": "Commit 1555207 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1555207 ]\n\nSOLR-5577: fix possible race on canceling timer on close "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13862591",
            "date": "2014-01-05T16:44:15+0000",
            "content": "Thanks Christine! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13862629",
            "date": "2014-01-05T18:50:06+0000",
            "content": "Commit 1555610 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1555610 ]\n\nSOLR-5577: don't start timer thread in constructor "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13862630",
            "date": "2014-01-05T18:51:12+0000",
            "content": "Commit 1555611 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1555611 ]\n\nSOLR-5577: don't start timer thread in constructor "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13863229",
            "date": "2014-01-06T18:51:03+0000",
            "content": "Mark, any reason why we start the disconnect timer when we get an EXPIRED? Shouldn't we just set cancel the timer and set likelyExpired to true? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13863257",
            "date": "2014-01-06T19:08:14+0000",
            "content": "Thanks Ramkumar! I used some refactoring logic to extract a method for setting connected=false - didn't catch that one. Not necessary. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13863332",
            "date": "2014-01-06T19:55:53+0000",
            "content": "Commit 1556002 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1556002 ]\n\nSOLR-5577: don't start timer thread on expiration "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13863335",
            "date": "2014-01-06T19:58:25+0000",
            "content": "Commit 1556003 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1556003 ]\n\nSOLR-5577: don't start timer thread on expiration "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867852",
            "date": "2014-01-10T14:42:36+0000",
            "content": "Commit 1557136 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1557136 ]\n\nSOLR-5577: timer thread should be run as daemon "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867853",
            "date": "2014-01-10T14:43:47+0000",
            "content": "Commit 1557137 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1557137 ]\n\nSOLR-5577: timer thread should be run as daemon "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867865",
            "date": "2014-01-10T14:52:36+0000",
            "content": "Commit 1557140 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557140 ]\n\nSOLR-5577: Likely ZooKeeper expiration should not slow down updates a given amount, but instead cut off updates after a given time. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867913",
            "date": "2014-01-10T15:37:09+0000",
            "content": "Commit 1557154 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557154 ]\n\nSOLR-5577: Don't start a timer on disconnect if we are already closed "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867916",
            "date": "2014-01-10T15:38:49+0000",
            "content": "Commit 1557155 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557155 ]\n\nSOLR-5577: fix possible race on canceling timer on close "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867920",
            "date": "2014-01-10T15:40:40+0000",
            "content": "Commit 1557157 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557157 ]\n\nSOLR-5577: don't start timer thread in constructor "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867926",
            "date": "2014-01-10T15:45:59+0000",
            "content": "Commit 1557160 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557160 ]\n\nSOLR-5577: don't start timer thread on expiration "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867927",
            "date": "2014-01-10T15:47:23+0000",
            "content": "Commit 1557161 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557161 ]\n\nSOLR-5577: timer thread should be run as daemon "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13869681",
            "date": "2014-01-13T16:51:11+0000",
            "content": "Commit 1557769 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1557769 ]\n\nSOLR-5577: Remove CHANGES entry from 4.7 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13869703",
            "date": "2014-01-13T17:09:06+0000",
            "content": "Commit 1557773 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1557773 ]\n\nSOLR-5577: Remove CHANGES entry from 4.7 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13876013",
            "date": "2014-01-19T21:20:59+0000",
            "content": "Commit 1559587 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1559587 ]\n\nSOLR-5577: Harden leaking Timer thread. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13876014",
            "date": "2014-01-19T21:22:04+0000",
            "content": "Commit 1559588 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1559588 ]\n\nSOLR-5577: Harden leaking Timer thread. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13876015",
            "date": "2014-01-19T21:23:05+0000",
            "content": "Commit 1559589 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1559589 ]\n\nSOLR-5577: Harden leaking Timer thread. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13876925",
            "date": "2014-01-20T22:25:45+0000",
            "content": "Commit 1559844 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1559844 ]\n\nSOLR-5577: Protect against NPE race with close - spotted by Greg Chanan "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13876941",
            "date": "2014-01-20T22:49:58+0000",
            "content": "Commit 1559847 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1559847 ]\n\nSOLR-5577: Protect against NPE race with close - spotted by Greg Chanan "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13882315",
            "date": "2014-01-26T14:51:57+0000",
            "content": "Commit 1561497 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1561497 ]\n\nSOLR-5577: Harden leaking Timer thread. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13882316",
            "date": "2014-01-26T14:53:31+0000",
            "content": "Commit 1561499 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1561499 ]\n\nSOLR-5577: Harden leaking Timer thread. "
        }
    ]
}