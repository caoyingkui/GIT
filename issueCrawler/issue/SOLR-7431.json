{
    "id": "SOLR-7431",
    "title": "stateFormat=2 is not respected when collections are recreated.",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.1",
        "status": "Resolved",
        "resolution": "Invalid",
        "priority": "Major"
    },
    "description": "The following steps produce a clusterstate.json at the root of the Solr hive in ZK rather than a state.json node under the collection.\n\n0> Start separate ZK locally\n1> create a collection with stock 5.x\n2> shut down all solr nodes and Zookeeper\n3> rm -rf /tmp/zookeeper\n4> start ZK\n5> upconfig your configuration\n6> start the solr nodes.\n\nWhen I created the nodes originally, the collection had a state.json node below it, but after the above there was only the uber-clusterstate.json node and no state.json below the collection.\n\nEven in this state, new collections have the state.json as a child of the collection.\n\nI'm not quite sure what happens if you do something less drastic than blow the entire ZK configuration away. Say you remove just one replica's information from the ZK state, it's not clear to me where it gets re-added.\n\nOf course this is not something that's very common, I ran in to it trying to hack an upgrade from 4.x to 5.x and migrate from the single clusterstate.json to state-per-collection.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-05T01:32:56+0000",
            "author": "Erick Erickson",
            "content": "It's just invalid to expect Solr to recreate the Zookeeper state when you blow away all the data in Zookeeper, so closing. The stateFormat is not present. Well, actually there's not even clusterprops.json znode to read the property from.\n\nActually, thinking about it some more this is kind of cool behavior. I can blow away all of my ZK data and still get my collections back. All I have to do is push the configsets back to ZK after starting all my Solr nodes. The fact that clusterstate.json is where the collections is easily remedied by MIGRATESTATEFORMAT. ",
            "id": "comment-15799951"
        }
    ]
}