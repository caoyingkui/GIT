{
    "id": "SOLR-10655",
    "title": "refactor duplicate ref guide content into \"snippet\" files that can be included",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "documentation"
        ],
        "type": "Sub-task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "in cwiki, we were using the \"excerpt\" and \"excerpt-include\" macros to mirror some content across multiple pages.\n\nas part of the cwiki->adoc migration, these macros were just evaluated durring export, and the content is now duplicated.\n\nmoving forward, we should refactor this duplicated content into \"snippet\" files that can be included in multiple places.  A few things we need to be careful about when doing this:\n\n\tensuring anchors and relative links are generated in such a way that they are still unique per-section\n\tthat some convention / page attributes are used such that the BuildNavAndPDFBody code doesn't try to include them as \"real\" pages (or errors that they have no parent)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-09T23:18:50+0000",
            "content": "Some relevant docs on how to ensure generated IDs differ when the same file is included multiple times in a document...\n\nhttp://asciidoctor.org/docs/user-manual/#include-multiple ",
            "author": "Hoss Man",
            "id": "comment-16003740"
        },
        {
            "date": "2017-05-09T23:43:15+0000",
            "content": "NOTE: I've added // TODO: SOLR-10655 ... comments around all of the areas that were excerpt or excerpt-include in cwiki.\n\nAlso: one potentially problematic aspect is that using-the-solr-administration-user-interface was using excerpt-include inside of a list element to create a \"sub list\" ... i have no idea if attempting to do the same thing with asciidoc includes will work, or if we'll want to rethink that page structure slightly. ",
            "author": "Hoss Man",
            "id": "comment-16003768"
        },
        {
            "date": "2017-05-15T17:46:09+0000",
            "content": "I personally split this problem into two separate use cases - first, we used excerpt to save having to remember where we were maintaining a list of related pages...like a copied TOC. This use case doesn't actually interest me that much going forward, because I think it's a one-off that we are unlikely to repeat. With better global find/replace at our disposal now, the task of maintaining those pages is 1000x easier even if it doesn't reside in a single place.\n\nThe other use case I find more useful, which is to split a page into smaller bits and use include:: syntax to include the snippet in a broader page. The way I've thought of it is that there is a sub-dir somewhere that has these little snippets and we do something like include::some-dir/y.adoc[]. I'm wary of that approach, just in terms of document sprawl with lots of possible contributors - it could get messy.\n\nHowever, it occurs to me now that there is another approach using include:: where you mark up a document with tags where you'll want to pull content, and then in your other document use the same include:: macro but request only that tagged section, as in include::y.adoc[tags=section1]. For a lot of our content, this may be a simpler approach. The syntax for using tags like this is explained in: http://asciidoctor.org/docs/user-manual/#include-partial ",
            "author": "Cassandra Targett",
            "id": "comment-16010976"
        },
        {
            "date": "2017-05-16T02:13:18+0000",
            "content": "For a lot of our content, this may be a simpler approach. The syntax for using tags like this is explained in: http://asciidoctor.org/docs/user-manual/#include-partial\n\nthe \"include tagged portion\" does look like a perfect fit for what we were using in cwiki \u2013 and i agree that model of including a tagged portion of another file is probably a better fit for what we want to do, because in all the cases i can think of one page should really \"own\" the content, and it's just a matter of other pages \"citing\" that content.\n\nbut in practice it seems to have bugs that will break links between the 2 pages \u2013 which seems like a deal breaker, since we explicitly draw attention to this relationship in our pages (and i don't think we should stop doing that)...\n\nhttps://github.com/asciidoctor/asciidoctor/issues/2200\n\nI'm attaching a patch that tries to use the include::foo.adoc[tags=some_excerpt] syntax in all places that currently have a \"TODO SOLR-10655\" related comment \u2013 see nocommits in the patch and the ultimate build failure messages from ant build-site because of the our automatic link checking.\n\nI personally split this problem into two separate use cases - first, we used excerpt to save having to remember where we were maintaining a list of related pages...like a copied TOC. This use case doesn't actually interest me that much going forward, because I think it's a one-off that we are unlikely to repeat. With better global find/replace at our disposal now, the task of maintaining those pages is 1000x easier even if it doesn't reside in a single place.\n\nI disagree ... i think that unless asciidoctor issue#2200 has an easy workaround we should move forward with refactoring this duplicated documentation into some \"snippet\" files that can be included in multiple places.  Even if search and replace is much easier with adoc then with cwiki, it's too easy for someone who doesn't realize the content is duplicated to make an edit in to only one copy.  we can have all the // NOTE: this table is duplicated in defining-fields.adoc type comments we want, but those may still be easily overlooked by someone who (for example) knows they need to edit one cell of a table in field-type-definitions-and-properties.adoc and uses uses their editor's search feature to jump to the relevant line \u2013 never realizing there is a big ass comment off screen above that table informing them about another page they may not have ever paid attention to.\n\n(I would much rather use the \"include tag\" syntax then having these one off snippet files, but given the viable options i'd much rather someone opening a file to edit it find an include::snippet/foo.adoc they didn't expect \u2013 drawing attention to the fact that the content is re-used in multiple places \u2013 then find the content they expect, but overlook that it's duplicated in multiple places)\n\n\n\nensuring anchors and relative links are generated in such a way that they are still unique per-section\n\nNote for future, there are easy ways to deal with this as long as the included file expects to be included in multiple places and explicitly declares all it's anchors \u2013 and our existing link checker code should automatically ensure that's never problematic if someone forgets...\n\nhttp://asciidoctor.org/docs/user-manual/#include-multiple\n\nthat some convention / page attributes are used such that the BuildNavAndPDFBody code doesn't try to include them as \"real\" pages (or errors that they have no parent)\n\nFYI: I looked into this and confirmed that BuildNavAndPDFBody (currently) only looks at \"top level\" src/*.adoc files, nothing in subdirectories \u2013 so we could easily start organizing \"snippet\" type files in whatever subdirs we want w/o needing any code changes) ",
            "author": "Hoss Man",
            "id": "comment-16011629"
        },
        {
            "date": "2017-05-16T14:18:39+0000",
            "content": "disagree ... i think that unless asciidoctor issue#2200 has an easy workaround we should move forward with refactoring this duplicated documentation into some \"snippet\" files that can be included in multiple places. Even if search and replace is much easier with adoc then with cwiki, it's too easy for someone who doesn't realize the content is duplicated to make an edit in to only one copy. we can have all the // NOTE: this table is duplicated in defining-fields.adoc type comments we want, but those may still be easily overlooked by someone who (for example) knows they need to edit one cell of a table in field-type-definitions-and-properties.adoc and uses uses their editor's search feature to jump to the relevant line \u2013 never realizing there is a big ass comment off screen above that table informing them about another page they may not have ever paid attention to.\n\nYour counter-argument conflates the two use cases I delineated while attempting to disagree with the first one.\n\nWe used this two ways, to be specific:\n\n\n\tWe made a list of children pages on one page, then used excerpt/excerpt-include to include the same list of children on another 2 pages. Essentially, we had 3 pages with the same TOC.\n\tWe made a table on one page and included that table on another page.\n\n\n\nMy point is that I think the 2nd case is more common use of shared content than the first. I personally don't think we're going to do the first very often, or we would have done it already.\n\nThat said, the linking problem is still a problem. ",
            "author": "Cassandra Targett",
            "id": "comment-16012466"
        },
        {
            "date": "2017-05-16T16:09:10+0000",
            "content": "Your counter-argument conflates the two use cases I delineated while attempting to disagree with the first one.\n\nYeah \u2013 sorry, i distracted myself and never circled back to the point i originally set out to make ... which was that in general i think we should do whatever we can to eliminate any dup content.  \n\nEven if we don't expect to do #1 very often, all of the places we do both #2 AND #1 should be refactored in some way (not neccessarily the same way, if there were hypothetical better options for each niche) to eliminate duplication.   just like my example of someone jumping straight to a single row in a table and not noticing a comment that the entire table is duplicated \u2013 someone might also go edit a list of collection based pages on using-the-solr-administration-user-interface.adoc and maybe they notice the comment that the entire list is duplicated on collection-specific-tools.adoc - but maybe they overlook/missunderstand that it's ALSO duplicated on core-specific-tools.adoc\n\nhence my summation (intended for both #1 and #2 type usecasees)...\n\n... i'd much rather someone opening a file to edit it find an include::snippet/foo.adoc they didn't expect \u2013 drawing attention to the fact that the content is re-used in multiple places \u2013 then find the content they expect, but overlook that it's duplicated in multiple places ",
            "author": "Hoss Man",
            "id": "comment-16012647"
        }
    ]
}