{
    "id": "SOLR-8148",
    "title": "Ensure that updates are not reordered",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "There was discussion in SOLR-5944 (and possibly elsewhere) on exploring ensuring that updates are not reordered when sent from leader to replica. This would simplify a lot of things. \n\nHere's Yonik's comment from SOLR-5944:\n\nDon't reorder updates between leader and replicas:\n\n\n\tcreate a new ConcurrentUpdateSolrClient that uses a single channel and can return individual responses... perhaps this fits into HTTP/2 ?\n\thave only a single SolrClient on the leader talk to each replica\n    order the udpates in version order when sending\n\t\n\t\tprob multiple ways to achieve this... reserve a slot when getting the version, or change versions so that they are contiguous so we know if we are missing one.\n\t\n\t\n\n\n\nThe only additional reason to use multiple threads when sending is to increase indexing performance. We can also implement multi-threading for increased parallelism on the server side. This should also simplify clients (no more batching, multiple threads, etc), as well as make our general recovery system more robust.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}