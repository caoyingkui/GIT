{
    "id": "SOLR-3369",
    "title": "shards.tolerant=true broken on group queries",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.4"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In a distributed environment, shards.tolerant=true allows for partial results to be returned when individual shards are down.  For group=true and facet=true queries, using this feature results in an error when shards are down.  This patch allows users to use the shard tolerance feature with facet and grouping queries.",
    "attachments": {
        "SOLR-3369-shards-tolerant.patch": "https://issues.apache.org/jira/secure/attachment/12583403/SOLR-3369-shards-tolerant.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Martijn van Groningen",
            "id": "comment-13256963",
            "date": "2012-04-18T21:10:38+0000",
            "content": "I took a quick look. Patch also seems to add support for adding shards.info parameter for grouping and adds exception information to the response when a shard request fails.\n\nI don't that think that shards.tolerant is a supported feature in Solr 3.x versions (I couldn't find any reference of this param in the 3.6 source). So I think we shouldn't add this to the 3.6 branch since that would be adding a new feature to a Solr version that is actually in maintenance mode.\n\n "
        },
        {
            "author": "Russell Black",
            "id": "comment-13257057",
            "date": "2012-04-18T22:57:07+0000",
            "content": "Martijn,\n\nYou're right, 3.6 doesn't have this feature.  My mistake.  Just use the trunk patch if you wish.  \n\nThe reason I had a 3.6 version of this patch is that we have backported SOLR-3134 (original shards info/tolerance feature) to 3.6.  SOLR-3369-shards-tolerant-3_6.patch is intended to be applied on top of that, and is of no use without it.  I just posted our SOLR-3134 backport patch if you have an interest in adding shards.info and shards.tolerant to 3.x.  If not, at least the patch will be available for other 3.x users who want that feature. "
        },
        {
            "author": "Russell Black",
            "id": "comment-13258329",
            "date": "2012-04-20T15:47:38+0000",
            "content": "removed 3.6 from affected versions "
        },
        {
            "author": "Russell Black",
            "id": "comment-13540622",
            "date": "2012-12-28T22:48:22+0000",
            "content": "The patch in SOLR-3557 contained some overlap with the patch on this ticket.  I am updating the patch on this ticket accordingly.   "
        },
        {
            "author": "Ferry Landzaat",
            "id": "comment-13603244",
            "date": "2013-03-15T09:07:58+0000",
            "content": "Is there any plan to fix this issue? We want to upgrade from 3.x and really need this patch to make the system reliable. "
        },
        {
            "author": "Andr\u00e9 Bois-Crettez",
            "id": "comment-13650755",
            "date": "2013-05-07T12:16:23+0000",
            "content": "Same here, with Solr 4.2.1 it is still not possible to do queries with both shards.tolerant=true and grouping.\n\nIs there anything wrong with the patch itself ? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13650759",
            "date": "2013-05-07T12:23:46+0000",
            "content": "If someone adds a test to exercise this patch, I'll commit it. "
        },
        {
            "author": "Jabouille jean Charles",
            "id": "comment-13658443",
            "date": "2013-05-15T15:19:20+0000",
            "content": "Hi,\n\nhere is a test, you just have to copy it in solr/core/src/test/org/apache/solr/:\n\nTestDistributedGroupingWithShardTolerantActivated.java\npackage org.apache.solr;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.apache.lucene.util.LuceneTestCase.Slow;\nimport org.apache.solr.client.solrj.SolrServer;\nimport org.apache.solr.client.solrj.SolrServerException;\nimport org.apache.solr.client.solrj.embedded.JettySolrRunner;\nimport org.apache.solr.cloud.ChaosMonkey;\nimport org.apache.solr.common.params.CommonParams;\nimport org.apache.solr.common.params.ModifiableSolrParams;\nimport org.apache.solr.common.params.ShardParams;\n\n\n@Slow\npublic class TestDistributedGroupingWithShardTolerantActivated extends BaseDistributedSearchTestCase {\n\n  String t1=\"a_t\";\n  String i1=\"a_si\";\n  String s1=\"a_s\";\n  String tlong = \"other_tl1\";\n  String tdate_a = \"a_n_tdt\";\n  String tdate_b = \"b_n_tdt\";\n  String oddField=\"oddField_s\";\n\n  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"grouped\", UNORDERED);   // distrib grouping doesn't guarantee order of top level group commands\n\n    indexr(id,1, i1, 100, tlong, 100,t1,\"now is the time for all good men\",\n           tdate_a, \"2010-04-20T11:00:00Z\",\n           tdate_b, \"2009-08-20T11:00:00Z\",\n           \"foo_f\", 1.414f, \"foo_b\", \"true\", \"foo_d\", 1.414d);\n    indexr(id,2, i1, 50 , tlong, 50,t1,\"to come to the aid of their country.\",\n           tdate_a, \"2010-05-02T11:00:00Z\",\n           tdate_b, \"2009-11-02T11:00:00Z\");\n    indexr(id,3, i1, 2, tlong, 2,t1,\"how now brown cow\",\n           tdate_a, \"2010-05-03T11:00:00Z\");\n    indexr(id,4, i1, -100 ,tlong, 101,\n           t1,\"the quick fox jumped over the lazy dog\",\n           tdate_a, \"2010-05-03T11:00:00Z\",\n           tdate_b, \"2010-05-03T11:00:00Z\");\n    indexr(id,5, i1, 500, tlong, 500 ,\n           t1,\"the quick fox jumped way over the lazy dog\",\n           tdate_a, \"2010-05-05T11:00:00Z\");\n    indexr(id,6, i1, -600, tlong, 600 ,t1,\"humpty dumpy sat on a wall\");\n    indexr(id,7, i1, 123, tlong, 123 ,t1,\"humpty dumpy had a great fall\");\n    indexr(id,8, i1, 876, tlong, 876,\n           tdate_b, \"2010-01-05T11:00:00Z\",\n           t1,\"all the kings horses and all the kings men\");\n    indexr(id,9, i1, 7, tlong, 7,t1,\"couldn't put humpty together again\");\n    indexr(id,10, i1, 4321, tlong, 4321,t1,\"this too shall pass\");\n    indexr(id,11, i1, -987, tlong, 987,\n           t1,\"An eye for eye only ends up making the whole world blind.\");\n    indexr(id,12, i1, 379, tlong, 379,\n           t1,\"Great works are performed, not by strength, but by perseverance.\");\n\n    indexr(id, 14, \"SubjectTerms_mfacet\", new String[]  {\"mathematical models\", \"mathematical analysis\"});\n    indexr(id, 15, \"SubjectTerms_mfacet\", new String[]  {\"test 1\", \"test 2\", \"test3\"});\n    indexr(id, 16, \"SubjectTerms_mfacet\", new String[]  {\"test 1\", \"test 2\", \"test3\"});\n    String[] vals = new String[100];\n    for (int i=0; i<100; i++) {\n      vals[i] = \"test \" + i;\n    }\n    indexr(id, 17, \"SubjectTerms_mfacet\", vals);\n\n    indexr(\n        id, 18, i1, 232, tlong, 332,\n        t1,\"no eggs on wall, lesson learned\",\n        oddField, \"odd man out\"\n    );\n    indexr(\n        id, 19, i1, 232, tlong, 432,\n        t1, \"many eggs on wall\",\n        oddField, \"odd man in\"\n    );\n    indexr(\n        id, 20, i1, 232, tlong, 532,\n        t1, \"some eggs on wall\",\n        oddField, \"odd man between\"\n    );\n    indexr(\n        id, 21, i1, 232, tlong, 632,\n        t1, \"a few eggs on wall\",\n        oddField, \"odd man under\"\n    );\n    indexr(\n        id, 22, i1, 232, tlong, 732,\n        t1, \"any eggs on wall\",\n        oddField, \"odd man above\"\n    );\n    indexr(\n        id, 23, i1, 233, tlong, 734,\n        t1, \"dirty eggs\",\n        oddField, \"odd eggs\"\n    );\n\n    for (int i = 100; i < 150; i++) {\n      indexr(id, i);\n    }\n\n    int[] values = new int[]{9999, 99999, 999999, 9999999};\n    for (int shard = 0; shard < clients.size(); shard++) {\n      int groupValue = values[shard];\n      for (int i = 500; i < 600; i++) {\n        index_specific(shard, i1, groupValue, s1, \"a\", id, i * (shard + 1), t1, shard);\n      }\n    }\n\n    commit();\n    \n    // SOLR-3369: shrds.tolreant=true with grouping\n    for (int numDownServers = 0; numDownServers < jettys.size() - 1; numDownServers++) {\n      List<JettySolrRunner> upJettys = new ArrayList<JettySolrRunner>(jettys);\n      List<SolrServer> upClients = new ArrayList<SolrServer>(clients);\n      List<JettySolrRunner> downJettys = new ArrayList<JettySolrRunner>();\n      List<String> upShards = new ArrayList<String>(Arrays.asList(shardsArr));\n      for (int i = 0; i < numDownServers; i++) {\n        // shut down some of the jettys\n        int indexToRemove = r.nextInt(upJettys.size());\n        JettySolrRunner downJetty = upJettys.remove(indexToRemove);\n        upClients.remove(indexToRemove);\n        upShards.remove(indexToRemove);\n        ChaosMonkey.stop(downJetty);\n        downJettys.add(downJetty);\n      }\n\n      simpleQuery(\"q\", \"*:*\", \"rows\", 100, \"fl\",\n          \"id,\" + i1, \"group\", \"true\", \"group.query\", t1 + \":kings OR \" + t1\n              + \":eggs\", \"group.limit\", 10, \"sort\", i1 + \" asc, id asc\",\n          CommonParams.TIME_ALLOWED, 1, ShardParams.SHARDS_INFO, \"true\",\n          ShardParams.SHARDS_TOLERANT, \"true\");\n      \n      // restart the jettys\n      for (JettySolrRunner downJetty : downJettys) {\n        downJetty.start();\n      }\n    }\n  }\n\n  private void simpleQuery(Object... queryParams) throws SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int i = 0; i < queryParams.length; i += 2) {\n      params.add(queryParams[i].toString(), queryParams[i + 1].toString());\n    }\n    params.set(\"shards\", shards);\n    queryServer(params);\n  }\n\n}\n\n\n\nYour patch works perfectly in \"select\" mode. In \"browse\" mode there in a other exception:\n\nERROR org.apache.solr.core.SolrCore:log:85  - java.lang.NullPointerException\n    at org.apache.solr.handler.component.SpellCheckComponent.finishStage(SpellCheckComponent.java:297)\n    at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:317)\n\n\n\nThank you very much for this patch, we hope it will be in the next release of solr. "
        },
        {
            "author": "Russell Black",
            "id": "comment-13658664",
            "date": "2013-05-15T18:53:27+0000",
            "content": "This test case fails sometimes because it occasionally tries to use one of the \"down\" servers as the collator.  I'll fix this and include it in a new patch. "
        },
        {
            "author": "Russell Black",
            "id": "comment-13659018",
            "date": "2013-05-15T23:31:30+0000",
            "content": "As requested, I added a test case to the patch file.   "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13659021",
            "date": "2013-05-15T23:35:02+0000",
            "content": "latest patch adds:\n\n+      // test group query\n+      queryPartialResults(upShards, upClients, \n+          \"q\", \"*:*\", \n+          \"rows\", 100, \n+          \"fl\", \"id,\" + i1, \n+          \"group\", \"true\", \n+          \"group.query\", t1 + \":kings OR \" + t1 + \":eggs\", \n+          \"group.limit\", 10, \n+          \"sort\", i1 + \" asc, id asc\",\n+          CommonParams.TIME_ALLOWED, 1, \n+          ShardParams.SHARDS_INFO, \"true\",\n+          ShardParams.SHARDS_TOLERANT, \"true\");\n\n\n\n\nbut does not include TestDistributedGroupingWithShardTolerantActivated.java\n\nIs this intentional? "
        },
        {
            "author": "Russell Black",
            "id": "comment-13659030",
            "date": "2013-05-15T23:39:35+0000",
            "content": "Yes, this is intentional.  TestDistributedGroupingWithShardTolerantActivated.java duplicated much of what was in TestDistributedSearch.java.  TestDistributedSearch.java already has the framework in place for dealing with partial results.   "
        },
        {
            "author": "Russell Black",
            "id": "comment-13673482",
            "date": "2013-06-03T19:43:41+0000",
            "content": "Ryan, is there anything preventing this patch from committing?  Was the test case satisfactory? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13691975",
            "date": "2013-06-24T13:56:02+0000",
            "content": "This patch looks alright on first pass. There's something wrong with the solrcloud tests in trunk right now (unrelated to the patch). I'll wait for it to be fixed and then commit once I get a clean pass on all tests. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13697919",
            "date": "2013-07-02T16:10:17+0000",
            "content": "Commit 1498992 from shalin@apache.org\n[ https://svn.apache.org/r1498992 ]\n\nSOLR-3369: shards.tolerant=true is broken for group queries "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13697922",
            "date": "2013-07-02T16:12:58+0000",
            "content": "Commit 1498993 from shalin@apache.org\n[ https://svn.apache.org/r1498993 ]\n\nSOLR-3369: shards.tolerant=true is broken for group queries "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13697927",
            "date": "2013-07-02T16:15:08+0000",
            "content": "shards.tolerant already works for facet queries so this issue is only about group queries. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13716882",
            "date": "2013-07-23T18:38:52+0000",
            "content": "Bulk close resolved 4.4 issues "
        }
    ]
}