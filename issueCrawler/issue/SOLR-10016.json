{
    "id": "SOLR-10016",
    "title": "SQL should support sorting by random_<SEED>",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Parallel SQL"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I tried using the handy sort=random_<SEED> feature in normal queries with SQL and it failed:\n\n\n \ncurl --data-urlencode \"stmt=select rating, movie_id, user_id from ratings order by random_5150 asc\" \\\n>  \"http://localhost:8983/solr/ratings/sql\"\n{\"result-set\":{\"docs\":[\n{\"EXCEPTION\":\"Fields in the sort spec must be included in the field list:random_5150\",\"EOF\":true}]}}\n\n\n\nI'd like to take a stab at fixing this if there are no objections to me doing so?",
    "attachments": {
        "SOLR-10016.patch": "https://issues.apache.org/jira/secure/attachment/12859997/SOLR-10016.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-23T18:06:54+0000",
            "content": "+1, looks like a nice feature.\n\nBest to add this to Calcite SQL implementation. This should be hitting master very soon. ",
            "author": "Joel Bernstein",
            "id": "comment-15834968"
        },
        {
            "date": "2017-01-24T18:07:29+0000",
            "content": "thanks Joel, will get started on this using the Calcite SQL implementation \n\nalso, Hossman was thinking we should try to solve this by allowing any function / ValueSource (not just random) for sorting SQL results, so I'm going to go down that path first ",
            "author": "Timothy Potter",
            "id": "comment-15836376"
        },
        {
            "date": "2017-03-22T19:56:07+0000",
            "content": "Here's a patch (-p0 style) prepared against branch_6_5 that adds the ability to sort SQL query results using Solr's random_SEED trick (via RandomStream).\n\nTo use this, your SQL would look something like:\n\ncurl --data-urlencode \"stmt=select movie_id, user_id from ratings order by _random_ asc limit 100\" \"http://localhost:8983/solr/ratings/sql\"\n\n\n\nUnlike with score, the random sort field doesn't need to be included in the results, which I felt was unnecessary since it's just a random number.\n\nStill needs a test but wanted to post something up to get initial feedback.\n\nIdeally, we'd be able to sort by any ValueSource as well as include the value of a ValueSource in the results. However, it seems like we need to expose the name and type of every possible ValueSource in the SolrSchema.getRelDataType return value? Joel Bernstein or Kevin Risden any suggestions on the best way to support any ValueSource in a SQL query? Seems like that would force the user to have to use LIMIT afaik, ValueSource's aren't exportable. Also, let me know if this approach is acceptable for random sorting. ",
            "author": "Timothy Potter",
            "id": "comment-15937010"
        },
        {
            "date": "2017-03-23T02:02:41+0000",
            "content": "Just going to share my two cents on this (not fully fleshed out):\n\nI don't know if adding a field to the schema for each custom field is the right approach. This would get very unwieldy. Instead, is it possible to do this by implemented a custom function that isn't in the schema? Something like random() or random(SEED). I don't know the right place to hook this into Calcite right now but it seems like this would be possible? It may also be the case that Calcite has some functions built in already? ",
            "author": "Kevin Risden",
            "id": "comment-15937559"
        },
        {
            "date": "2017-03-23T02:08:13+0000",
            "content": "The Calcite reference (https://calcite.apache.org/docs/reference.html) mentions RAND() and RAND_INTEGER(). I haven't tried to use these with the Solr Calcite piece. Might have to get more creative about the SQL query but a thought. ",
            "author": "Kevin Risden",
            "id": "comment-15937566"
        },
        {
            "date": "2017-03-23T14:19:55+0000",
            "content": "Thanks Kevin Risden ... I'll see about just working with those RAND functions. ",
            "author": "Timothy Potter",
            "id": "comment-15938402"
        },
        {
            "date": "2017-03-27T21:35:41+0000",
            "content": "update on this ... not having much luck with functions (UDF or built-in). Julian mentioned that push-down of functions to adapters is not implemented in Calcite yet, so not sure this is worth pursuing?\n\nAs for the built-in functions like RAND(), I tried this SQL:\n\n\nselect movie_id, user_id, RAND() as some_rand from ratings order by movie_id desc LIMIT 100\n\n\n\nThe the RAND definitely comes into the Solr code (in SolrProject), but then it looks like we'd have to call that function for every tuple while processing the stream? Feels like I'm missing something basic here ...\n ",
            "author": "Timothy Potter",
            "id": "comment-15944084"
        },
        {
            "date": "2017-03-27T22:23:04+0000",
            "content": "I'm hoping that functions are accessible, so it's good to hear that RAND() is appearing in the SolrProject. Can you point to the discussion where Julian mentioned that the push-down of functions was not implemented?\n ",
            "author": "Joel Bernstein",
            "id": "comment-15944139"
        }
    ]
}