{
    "id": "LUCENE-398",
    "title": "ParallelReader crashes when trying to merge into a new index",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.1"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "ParallelReader causes a NullPointerException in\norg.apache.lucene.index.ParallelReader$ParallelTermPositions.seek(ParallelReader.java:318)\nwhen trying to merge into a new index.\n\nSee test case and sample output:\n\n$ svn diff\nIndex: src/test/org/apache/lucene/index/TestParallelReader.java\n===================================================================\n\u2014 src/test/org/apache/lucene/index/TestParallelReader.java    (revision 179785)\n+++ src/test/org/apache/lucene/index/TestParallelReader.java    (working copy)\n@@ -57,6 +57,13 @@\n\n   }\n\n+  public void testMerge() throws Exception {\n+    Directory dir = new RAMDirectory();\n+    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true);\n+    w.addIndexes(new IndexReader[] \n{ ((IndexSearcher)\nparallel).getIndexReader() }\n);\n+    w.close();\n+  }\n+\n   private void queryTest(Query query) throws IOException {\n     Hits parallelHits = parallel.search(query);\n     Hits singleHits = single.search(query);\n$ ant -Dtestcase=TestParallelReader test\nBuildfile: build.xml\n[...]\ntest:\n    [mkdir] Created dir:\n/Users/skirsch/text/lectures/da/thirdparty/lucene-trunk/build/test\n    [junit] Testsuite: org.apache.lucene.index.TestParallelReader\n    [junit] Tests run: 2, Failures: 0, Errors: 1, Time elapsed: 1.993 sec\n\n    [junit] Testcase: testMerge(org.apache.lucene.index.TestParallelReader):  \nCaused an ERROR\n    [junit] null\n    [junit] java.lang.NullPointerException\n    [junit]     at\norg.apache.lucene.index.ParallelReader$ParallelTermPositions.seek(ParallelReader.java:318)\n    [junit]     at\norg.apache.lucene.index.ParallelReader$ParallelTermDocs.seek(ParallelReader.java:294)\n    [junit]     at\norg.apache.lucene.index.SegmentMerger.appendPostings(SegmentMerger.java:325)\n    [junit]     at\norg.apache.lucene.index.SegmentMerger.mergeTermInfo(SegmentMerger.java:296)\n    [junit]     at\norg.apache.lucene.index.SegmentMerger.mergeTermInfos(SegmentMerger.java:270)\n    [junit]     at\norg.apache.lucene.index.SegmentMerger.mergeTerms(SegmentMerger.java:234)\n    [junit]     at\norg.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:96)\n    [junit]     at\norg.apache.lucene.index.IndexWriter.addIndexes(IndexWriter.java:596)\n    [junit]     at\norg.apache.lucene.index.TestParallelReader.testMerge(TestParallelReader.java:63)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit]     at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit]     at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\n\n    [junit] Test org.apache.lucene.index.TestParallelReader FAILED\n\nBUILD FAILED\n/Users/skirsch/text/lectures/da/thirdparty/lucene-trunk/common-build.xml:188:\nTests failed!\n\nTotal time: 16 seconds\n$",
    "attachments": {
        "patch-next.diff": "https://issues.apache.org/jira/secure/attachment/12335614/patch-next.diff",
        "ASF.LICENSE.NOT.GRANTED--ParallelReader.diff": "https://issues.apache.org/jira/secure/attachment/12312644/ASF.LICENSE.NOT.GRANTED--ParallelReader.diff",
        "ParallelReaderTest1.java": "https://issues.apache.org/jira/secure/attachment/12335615/ParallelReaderTest1.java",
        "ASF.LICENSE.NOT.GRANTED--parallelreader.diff": "https://issues.apache.org/jira/secure/attachment/12312643/ASF.LICENSE.NOT.GRANTED--parallelreader.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2005-06-22T05:55:09+0000",
            "content": "Created an attachment (id=15503)\npossible fix (untested)\n\nThe problem might be that in ParallelReader, the \"readers\" list is never\nactually modified. This tries to fix it (not tested at all, sorry). ",
            "author": "Daniel Naber",
            "id": "comment-12322448"
        },
        {
            "date": "2005-06-22T18:19:55+0000",
            "content": "Created an attachment (id=15509)\nAttempt to fix it, which causes an exception in TermInfosReader instead\n\n(In reply to comment #1)\n> Created an attachment (id=15503) [edit]\n> possible fix (untested)\n> \n> The problem might be that in ParallelReader, the \"readers\" list is never\n> actually modified. This tries to fix it (not tested at all, sorry).\n\nI tried your suggestion, but it does not change the symptoms.\n\nI also tried a different approach, passing the null argument to seek() on to\nthe individual IndexReaders and let them deal with it, but this causes a\nNullPointerException in a different place\n(org.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:140))\n\nSee attached diff and test output. ",
            "author": "Sebastian Kirsch",
            "id": "comment-12322449"
        },
        {
            "date": "2006-06-19T17:18:59+0000",
            "content": "The NullPointerException is probably caused by a broken implementation of ParallelTermEnum.next().\nThe method does not find the next field properly, especially if a field was marked \"indexed\" but did not contain any terms.\n\nThe attached patch (for Lucene 2.0) should help; a testcase is included. ",
            "author": "Christian Kohlschuetter",
            "id": "comment-12416734"
        },
        {
            "date": "2006-06-19T17:20:31+0000",
            "content": "Patches broken implementation of ParallelTermEnum.next() ",
            "author": "Christian Kohlschuetter",
            "id": "comment-12416735"
        },
        {
            "date": "2006-06-19T17:22:47+0000",
            "content": "JUnit Testcase that triggers the bug. ",
            "author": "Christian Kohlschuetter",
            "id": "comment-12416736"
        },
        {
            "date": "2006-06-19T23:23:21+0000",
            "content": "Files:\n\nhttp://issues.apache.org/jira/secure/attachment/12335614/patch-next.diff\nhttp://issues.apache.org/jira/secure/attachment/12335615/ParallelReaderTest1.java ",
            "author": "Christian Kohlschuetter",
            "id": "comment-12416782"
        },
        {
            "date": "2006-06-20T02:28:49+0000",
            "content": "Christian,\n\nI think you can make this more efficient by caching the field iterator.  You only need to generate it at the first transition to a new field.\n\nChuck ",
            "author": "Chuck Williams",
            "id": "comment-12416798"
        },
        {
            "date": "2006-06-20T09:23:15+0000",
            "content": "Christian,\n\nI'm going to open a new issue on this in order to rename it, post a revised patch, and hopefully get the attention of a committer.\n\nChuck ",
            "author": "Chuck Williams",
            "id": "comment-12416837"
        },
        {
            "date": "2006-06-20T09:46:53+0000",
            "content": "Revised patch posted in LUCENE-607 ",
            "author": "Chuck Williams",
            "id": "comment-12416838"
        },
        {
            "date": "2006-06-21T03:43:17+0000",
            "content": "Thanks for tracking this down Christian!\nI've committed Chuck's version of your patch in LUCENE-607 ",
            "author": "Yonik Seeley",
            "id": "comment-12416985"
        }
    ]
}