{
    "id": "LUCENE-6501",
    "title": "Flatten subreader structure in ParallelCompositeReader",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.2",
        "components": [
            "core/index"
        ],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "The current implementation of ParallelCompositeReader reassembles the whole subreader structure of the wrapped reader with ParallelLeafReader and ParallelCompositeReader.\n\nThis leads to bugs like described in LUCENE-6500. This reaches back to the time when this reader was reimplemented for the first time shortly before release of 4.0. Shortly afterwards, we completely changed our search infrastructure to just call leaves() and working with them. The method getSequentialSubReaders was made protected, just to be implemented by subclasses (like this one). But no external code can ever call it. Also the search API just rely on the baseId in relation to the top-level reader (to correctly present document ids). The structure is completely unimportant.\n\nThis issue will therefore simplify ParallelCompositeReader to just fetch all LeafReaders and build a flat structure of ParallelLeafReaders from it. This also has the nice side-effect, that only the parallel leaf readers must be equally sized, not their structure.\n\nThis issue will solve LUCENE-6500 as a side effect. I just opened a new issue for discussion and to have this listed as \"feature\" and not bug.\n\nIn general, we could also hide the ParallelLeafReader class and make it an implementation detail. ParallelCompositeReader would be the only entry point -> because people could pass any IndexReader structure in, a single AtomicReader would just produce a CompositeReader with one leaf. We could then also rename it back to ParallelReader (like it was in pre Lucene4).",
    "attachments": {
        "LUCENE-6501.patch": "https://issues.apache.org/jira/secure/attachment/12735383/LUCENE-6501.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14559639",
            "author": "Uwe Schindler",
            "date": "2015-05-26T19:07:14+0000",
            "content": "Patch. "
        },
        {
            "id": "comment-14559717",
            "author": "Uwe Schindler",
            "date": "2015-05-26T19:41:26+0000",
            "content": "I am currently testing Lucene Core in a loop to ensure that tests pass even with sometimes flattened down (we may add an extra reader wrapper for this in test-framework FlattenedCompositeReader).\n\nI am confident that all is fine, because nothing problematic calls getSetSequentialSubReaders() or IndexReaderContext.children() or IndexReaderContext.parent "
        },
        {
            "id": "comment-14559876",
            "author": "Adrien Grand",
            "date": "2015-05-26T21:07:50+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14560841",
            "author": "Uwe Schindler",
            "date": "2015-05-27T11:59:23+0000",
            "content": "No problems with testing up to now. I think this is safe for 5.3 (not 5.2) so it can bake longer. "
        },
        {
            "id": "comment-14560875",
            "author": "ASF subversion and git services",
            "date": "2015-05-27T12:33:17+0000",
            "content": "Commit 1681998 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1681998 ]\n\nLUCENE-6501: Flatten subreader structure in ParallelCompositeReader (fixes close listener bug LUCENE-6500) "
        },
        {
            "id": "comment-14560886",
            "author": "ASF subversion and git services",
            "date": "2015-05-27T12:38:55+0000",
            "content": "Commit 1682000 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1682000 ]\n\nMerged revision(s) 1681998 from lucene/dev/trunk:\nLUCENE-6501: Flatten subreader structure in ParallelCompositeReader (fixes close listener bug LUCENE-6500) "
        },
        {
            "id": "comment-14713216",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:06:06+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}