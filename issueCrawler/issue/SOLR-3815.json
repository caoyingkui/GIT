{
    "id": "SOLR-3815",
    "title": "add hash range to shard",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0"
        ],
        "components": [],
        "type": "Sub-task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "",
    "attachments": {
        "SOLR-3815.patch": "https://issues.apache.org/jira/secure/attachment/12544422/SOLR-3815.patch",
        "SOLR-3815_addrange.patch": "https://issues.apache.org/jira/secure/attachment/12544873/SOLR-3815_addrange.patch",
        "SOLR-3815_clusterState_immutable.patch": "https://issues.apache.org/jira/secure/attachment/12544935/SOLR-3815_clusterState_immutable.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13451702",
            "date": "2012-09-09T23:30:11+0000",
            "content": "This issue is for \n\n\tpulling apart the different uses of ZkNodeProps - Replica vs other generic uses\n\tchanging properties from Map<String,String> to Map<String,Object>\n\tadding generic properties to slices\n\tadding Range to slice properties\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13451722",
            "date": "2012-09-10T00:55:42+0000",
            "content": "Here's a patch that does the bare minimum to separate out Replica from ZkNodeProps.  My first two attempts led to tests that didn't pass somehow, so I'm taking it slower this time. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13451735",
            "date": "2012-09-10T02:25:19+0000",
            "content": "Committed:\ntrunk - http://svn.apache.org/viewvc?view=revision&revision=1382621\n4x - http://svn.apache.org/viewvc?view=revision&revision=1382622\n\nboy do I miss the automatic linking of svn commits to JIRA issues! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13452611",
            "date": "2012-09-11T00:32:21+0000",
            "content": "As discussed in SOLR-3755, I've added an additional level to Slice so things like \"range\" and \"replicationFactor\" can be siblings of \"replicas\" (in my local copy - currently uncommitted).\n\nExample:\n\n    \"shard5\":{\"replicas\":{\"127.0.0.1:58050_solr_collection1\":{\n          \"shard\":\"shard5\",\n          \"leader\":\"true\",\n          \"roles\":null,\n          \"state\":\"active\",\n          \"core\":\"collection1\",\n          \"collection\":\"collection1\",\n          \"node_name\":\"127.0.0.1:58050_solr\",\n          \"base_url\":\"http://127.0.0.1:58050/solr\"}}}},\n\n\n\nSince we're breaking back compat (just with older trunk), we should take the opportunity to make other changes as well.\nOne candidate is to make the same change for Collections - adding an additional level so that other collection stats/properties can live alongside \"shards\" that contain the shards for the collection.\n\nCurrent:\n\n  \"collection1\":{\n    \"shard3\":{\"replicas\":{\"127.0.0.1:58046_solr_collection1\":{\n\n\n\nProposal:\n\n  \"collection1\":{\n    \"shards\" : {\n      \"shard3\":{\"replicas\":{\"127.0.0.1:58046_solr_collection1\":{\n\n\n\nThoughts?\nAny other candidates for name changes while we are breaking compat anyway? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13454357",
            "date": "2012-09-12T21:04:21+0000",
            "content": "Here's a start on adding ranges to shard properties.  Seems to work at first and then gets lost on an update currently.\n\nExample:\n\n{\"collection1\":{\n    \"shard1\":{\"replicas\":{\"Rogue:8983_solr_collection1\":{\n          \"shard\":\"shard1\",\n          \"leader\":\"true\",\n          \"roles\":null,\n          \"state\":\"active\",\n          \"core\":\"collection1\",\n          \"collection\":\"collection1\",\n          \"node_name\":\"Rogue:8983_solr\",\n          \"base_url\":\"http://Rogue:8983/solr\"}}},\n    \"shard2\":{\n      \"range\":\"0-7fffffff\",\n      \"replicas\":{}}}}\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13454608",
            "date": "2012-09-13T03:32:59+0000",
            "content": "Folks, while working to add the \"replicas\" level to shards (to make room for other properties), I noticed that the Overseer.updateSlice() method changed the existing ClusterState (which is advertised as being immutable).  I re-wrote the method to be much shorter, and immutable with respect to the existing ClusterState, and started getting a test failure.\n\nI eventually tried just adding back the part of the code that erroneously modified the existing ClusterState, and the test passed again (see the nocommit block in Overseer).\n\nAny idea what's going on?\n\nedit: the test that failed was LeaderElectionIntegrationTest.  Not sure if it caused other failures.\n\nedit: in Overseer.run() we have \"ClusterState clusterState = reader.getClusterState();\" and that is the state that is accidentally being modified (that accidentally makes things work).  I assume the reader is supposed to update it's state via zookeeper - which means there is perhaps something wrong with reader.updateClusterState(true)? "
        },
        {
            "author": "Sami Siren",
            "id": "comment-13454748",
            "date": "2012-09-13T08:55:44+0000",
            "content": "Yonik, I was trying to reproduce what you see and applied SOLR-3815_clusterState_immutable.patch. do you mean that with that patch (which modifies the existing state inside the nocommits block) the LeaderElectionIntegrationTest should pass? It fails for me sporadically around 50% of time.\n\nwrt. editing the immutable state. I think the problem may be in the shared ZKStateReader which is used by the overseer and rest of the system. Shouldn't the overseer create it's own reader so that it cannot modify the state (which should not be happening in the first place, bug, bug!) that other parts running on that same instance see and use. "
        },
        {
            "author": "Sami Siren",
            "id": "comment-13454777",
            "date": "2012-09-13T09:54:24+0000",
            "content": "It appears that if I create a new instance of the ZkStateReader in Overseer constructor for overseer to use the test starts to fail 100% of time which seems to suggest the side-effect of editing the existing state is gone.\n\nI did not try to look at the actual failure yet since i am not sure if I am looking at the right thing... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13454883",
            "date": "2012-09-13T13:22:18+0000",
            "content": "LeaderElectionIntegrationTest\n\nWhen I commit my latest work today, one thing I did was make this test more stable. Once I commit, it should be easier to determine if this was involved in your change or not. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13454888",
            "date": "2012-09-13T13:33:49+0000",
            "content": "do you mean that with that patch (which modifies the existing state inside the nocommits block) the LeaderElectionIntegrationTest should pass? It fails for me sporadically around 50% of time.\n\nOK, perhaps it's because I modify less of the original state that the original code does (that's commented out).\nJust to clarify, I don't want to modify the original state - it was just the only way I could get the test to pass sometimes (because I noticed the original code modified the state).\n\nI think the problem may be in the shared ZKStateReader which is used by the overseer and rest of the system.\n\nAh, that would explain it - I hadn't realized the single instance was shared. The state not really being immutable could definitely cause issues then! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13455289",
            "date": "2012-09-13T21:09:32+0000",
            "content": "I just marked this issue a blocker for 4.0\nWe want to get the clusterstate.json format finalized for 4.0 so we can implement splitting, etc, at any point in the 4x line (hopefully sooner rather than later). "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13455320",
            "date": "2012-09-13T21:25:07+0000",
            "content": "Ah, that would explain it - I hadn't realized the single instance was shared. The state not really being immutable could definitely cause issues then!\n\nIf I remember right, I'm the one that prompted Sami to share this - with the idea that overseer didn't have to get the clusterstate.json twice on every change. Didn't realize it would introduce an issue though. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13455368",
            "date": "2012-09-13T22:23:04+0000",
            "content": "with the idea that overseer didn't have to get the clusterstate.json twice on every change. \n\nThat would be fine if the state were actually immutable.  But this test must have been relying on getting the info through the back door (I hope it's mainly just a test issue at least). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13457407",
            "date": "2012-09-17T22:10:40+0000",
            "content": "When I commit my latest work today, one thing I did was make this test more stable.\n\nYep, looks like the test was fixed!\n\nI've committed the changes to add the \"replicas\" level for each slice to both trunk and 4x: \nhttp://svn.apache.org/viewvc?rev=1386858&view=rev "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13457863",
            "date": "2012-09-18T14:45:31+0000",
            "content": "Looks like Overseer.setShardLeader also modifies previously created (immutable) state.  I'll fix.\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13457928",
            "date": "2012-09-18T16:33:11+0000",
            "content": "I think you intended to backport r1386858 to 4.x? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13457942",
            "date": "2012-09-18T16:46:17+0000",
            "content": "I think you intended to backport r1386858 to 4.x?\n\nYep - I hadn't noticed my commit failed.  Committed in r1387245 "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13458151",
            "date": "2012-09-18T20:52:58+0000",
            "content": "Committed Overseer.setShardLeader fix.\ntrunk: http://svn.apache.org/viewvc?rev=1387354&view=rev\n4x: http://svn.apache.org/viewvc?rev=1387355&view=rev "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13459077",
            "date": "2012-09-19T20:47:16+0000",
            "content": "Committed fix to preserve shard properties:\ntrunk: http://svn.apache.org/viewvc?rev=1387747&view=rev\n4x: http://svn.apache.org/viewvc?rev=1387749&view=rev "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610799",
            "date": "2013-03-22T16:36:03+0000",
            "content": "[branch_4x commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1387749\n\nSOLR-3815: preserve shard properties "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610809",
            "date": "2013-03-22T16:36:44+0000",
            "content": "[branch_4x commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1387355\n\nSOLR-3815: fix overseer.setShardLeader to not modify existing state "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610810",
            "date": "2013-03-22T16:36:48+0000",
            "content": "[branch_4x commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1387245\n\nSOLR-3815: change clusterstate structure to add properties to slices "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610886",
            "date": "2013-03-22T16:42:16+0000",
            "content": "[branch_4x commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1382622\n\nSOLR-3815: separate ZkNodeProps from Replica, change properties from String values to Object values "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654015",
            "date": "2013-05-10T10:33:44+0000",
            "content": "Closed after release. "
        }
    ]
}