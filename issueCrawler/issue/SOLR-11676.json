{
    "id": "SOLR-11676",
    "title": "nrt replicas is always 1 when not specified",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I created 1 2 shard X 2 replica collection . Here's the log entry for it\n\n\n2017-11-27 06:43:47.071 INFO  (qtp159259014-22) [   ] o.a.s.h.a.CollectionsHandler Invoked Collection Action :create with params replicationFactor=2&routerName=compositeId&collection.configName=_default&maxShardsPerNode=2&name=test_recovery&router.name=compositeId&action=CREATE&numShards=2&wt=json&_=1511764995711 and sendToOCPQueue=true\n\n\n\nAnd then when I look at the state.json file I see nrtReplicas is set to 1. Any combination of numShards and replicationFactor without explicitly specifying the \"nrtReplicas\" param puts the \"nrtReplicas\" as 1 instead of using the replicationFactor value\n\n\n{\"test_recovery\":{\n    \"pullReplicas\":\"0\",\n    \"replicationFactor\":\"2\",\n...\n    \"nrtReplicas\":\"1\",\n    \"tlogReplicas\":\"0\",\n..",
    "attachments": {
        "SOLR-11676.patch": "https://issues.apache.org/jira/secure/attachment/12900037/SOLR-11676.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-30T15:03:46+0000",
            "content": "Varun I can see what are you saying:\n\nCreateCollectionCmd::\n\n      int numNrtReplicas = message.getInt(NRT_REPLICAS, message.getInt(REPLICATION_FACTOR, numTlogReplicas>0?0:1));\n\n\n\nBut this code suggests, it will pick replicationFactor positively. I will put a debugger and test.\n ",
            "author": "Amrit Sarkar",
            "id": "comment-16272773"
        },
        {
            "date": "2017-11-30T16:06:57+0000",
            "content": "Figured out. Attached patch, verified its working. ClusterStateTest is very poorly written in terms of verifying actual collection properties passed.\n\n\n\tmodified:   solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler.java\n\tmodified:   solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator.java\n\n \n\nIf we decide to write tests for the same, it will be tad difficult. ",
            "author": "Amrit Sarkar",
            "id": "comment-16272856"
        },
        {
            "date": "2017-12-31T01:16:09+0000",
            "content": "I ran into this while doing a simple restore.\n\nSteps to reproduce:\n\n1. ./bin/solr start -e cloud -noprompt : This creates a 2 node cluster and a gettingstarted collection which 2X2\n2. Added 4 docs (id=1,2,3,4) with commit=true and openSearcher=true (default)\n3. Call backup: http://localhost:8983/solr/admin/collections?action=BACKUP&name=gettingstarted_backup&collection=gettingstarted&location=/Users/varunthacker/solr-7.1.0\n4. Call restore:\nhttp://localhost:8983/solr/admin/collections?action=restore&name=gettingstarted_backup&collection=restore_gettingstarted&location=/Users/varunthacker/solr-7.1.0\n\nAt step 4, you'll get an error saying Solr cloud with available number of nodes:2 is insufficient for restoring a collection with 2 shards, total replicas per shard 1 and maxShardsPerNode -1. Consider increasing maxShardsPerNode value OR number of available nodes.\n\nThe restore test doesn't catch this because in the test we always explicitly specify maxShardsPerNode ( https://github.com/apache/lucene-solr/blob/master/solr/core/src/test/org/apache/solr/cloud/AbstractCloudBackupRestoreTestCase.java#L256 )\n\nWhen I look at the state.json of gettingstarted it has\n\n\n{\"gettingstarted\":{\n    \"pullReplicas\":\"0\",\n    \"replicationFactor\":\"2\",\n    \"router\":{\"name\":\"compositeId\"},\n    \"maxShardsPerNode\":\"-1\",\n    \"autoAddReplicas\":\"false\",\n    \"nrtReplicas\":\"1\",\n    \"tlogReplicas\":\"0\",\n    \"shards\":{\n...\n\n\n\nI think there are two problems here : \na> nrtReplicas should be 2 \nb> maxShardsPerNode should be 2  ",
            "author": "Varun Thacker",
            "id": "comment-16307025"
        },
        {
            "date": "2017-12-31T01:34:19+0000",
            "content": "The create collection API allows passing both replicationFactor and nrtReplicas today unfortunately. \n\nSo with this API call action=create&name=test_collection&replicationFactor=3&nrtReplicas=2&numShards=1\n\nI get a state.json like this and in reality it creates a 2 replica collection\n\n\n{\"test_collection\":{\n    \"pullReplicas\":\"0\",\n    \"replicationFactor\":\"3\",\n    \"router\":{\"name\":\"compositeId\"},\n    \"maxShardsPerNode\":\"1\",\n    \"autoAddReplicas\":\"false\",\n    \"nrtReplicas\":\"2\",\n    \"tlogReplicas\":\"0\",\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16307028"
        },
        {
            "date": "2017-12-31T01:54:10+0000",
            "content": "I think the restore collection which has maxShardsPerNode=-1 is not related to this issue. \nLooks like the start script maybe is passing -1 explicitly. I'll have to check why but that's another Jira if needed ",
            "author": "Varun Thacker",
            "id": "comment-16307034"
        },
        {
            "date": "2017-12-31T02:06:43+0000",
            "content": "Here's another approach to the fix which adds the validation in CollectionsHandler .\n\nI'll add a test as well tomorrow\n\nAndrzej Bialecki  I noticed that SimClusterStateProvider calls ClusterStateMutator#createCollection to mock collection creation. Today in CollectionsHandler.java we have some validation for the create command already, like verify rule syntax etc. Is it okay if we don't get the benefits or test coverage of the validation here? ",
            "author": "Varun Thacker",
            "id": "comment-16307038"
        },
        {
            "date": "2018-06-14T13:07:44+0000",
            "content": "The scope of the patch should be :\n\n\n\tDon't allow replicationFactor and nrtReplicas to be specified on the same API call\n\tIf either nrtReplicas or replicationFactor is specified keep both in sync in state.json including modify collections command\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16512444"
        },
        {
            "date": "2018-06-15T16:35:22+0000",
            "content": "Patch which keeps replicationFactor and nrtReplicas in sync . I'll see if I can improve where the checks are placed tomorrow ",
            "author": "Varun Thacker",
            "id": "comment-16514060"
        },
        {
            "date": "2018-06-18T08:03:36+0000",
            "content": "Uploaded the latest patch which I'll commit shortly. ",
            "author": "Varun Thacker",
            "id": "comment-16515469"
        },
        {
            "date": "2018-06-18T08:24:05+0000",
            "content": "Commits\u00a0\n\nmaster : 11fcb23906e8416e74087c5b9d168ef8b777c581\n\nbranch_7x : de71d48e0afa1e9829f14731268554b29d0d5823 ",
            "author": "Varun Thacker",
            "id": "comment-16515486"
        },
        {
            "date": "2018-06-18T22:17:02+0000",
            "content": "Reproducing failure for CollectionAdminRequestRequiredParamsTest from https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Solaris/674/; git bisect blames commit de71d48 on this issue:\n\n\nChecking out Revision b4c01b0d1fa792b8f868b8572643f8df7d909e81 (refs/remotes/origin/branch_7x)\n[...]\n   [junit4] Suite: org.apache.solr.client.solrj.CollectionAdminRequestRequiredParamsTest\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=CollectionAdminRequestRequiredParamsTest -Dtests.method=testCreateCollection -Dtests.seed=267028DB6018A9B0 -Dtests.slow=true -Dtests.locale=de-CH -Dtests.timezone=Europe/Dublin -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.01s J0 | CollectionAdminRequestRequiredParamsTest.testCreateCollection <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: required params missing: required=[name, nrtReplicas, action, numShards, replicationFactor], params=[name, nrtReplicas, action, numShards]\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([267028DB6018A9B0:D013342A54EDE631]:0)\n   [junit4]    > \tat org.apache.solr.client.solrj.CollectionAdminRequestRequiredParamsTest.assertContainsParams(CollectionAdminRequestRequiredParamsTest.java:214)\n   [junit4]    > \tat org.apache.solr.client.solrj.CollectionAdminRequestRequiredParamsTest.testCreateCollection(CollectionAdminRequestRequiredParamsTest.java:147)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:748)\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=580, maxMBSortInHeap=7.329713806131059, sim=RandomSimilarity(queryNorm=false): {}, locale=de-CH, timezone=Europe/Dublin\n   [junit4]   2> NOTE: SunOS 5.11 amd64/Oracle Corporation 1.8.0_172 (64-bit)/cpus=3,threads=1,free=49257384,total=162983936\n[...]\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16516413"
        },
        {
            "date": "2018-06-19T08:16:23+0000",
            "content": "Thanks Steve! Working on it right away\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16516779"
        },
        {
            "date": "2018-06-19T11:08:35+0000",
            "content": "Committed the fix for it. Thanks Steve for pointing it out\n\nmaster : 81906d3\n\nbranch_7x :\u00a04ea3372 ",
            "author": "Varun Thacker",
            "id": "comment-16516941"
        }
    ]
}