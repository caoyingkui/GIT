{
    "id": "LUCENE-5275",
    "title": "Fix AttributeSource.toString()",
    "details": {
        "components": [],
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Its currently just Object.toString, e.g.:\n\norg.apache.lucene.analysis.en.PorterStemFilter@8a32165c\n\nBut I think we should make it more useful, to end users trying to see what their chain is doing, and to make SOPs easier when debugging:\n\n\nEnglishAnalyzer analyzer = new EnglishAnalyzer(TEST_VERSION_CURRENT);\ntry (TokenStream ts = analyzer.tokenStream(\"body\", \"Its 2013, let's fix this already!\")) {\n  ts.reset();\n  while (ts.incrementToken()) {\n    System.out.println(ts.toString());\n  }\n  ts.end();\n}\n\n\n\nProposed output:\n\nPorterStemFilter@8a32165c term=it,bytes=[69 74],startOffset=0,endOffset=3,positionIncrement=1,type=<ALPHANUM>,keyword=false\nPorterStemFilter@987b9eea term=2013,bytes=[32 30 31 33],startOffset=4,endOffset=8,positionIncrement=1,type=<NUM>,keyword=false\nPorterStemFilter@6b5dbd1f term=let,bytes=[6c 65 74],startOffset=10,endOffset=15,positionIncrement=1,type=<ALPHANUM>,keyword=false\nPorterStemFilter@45cbde1b term=fix,bytes=[66 69 78],startOffset=16,endOffset=19,positionIncrement=1,type=<ALPHANUM>,keyword=false\nPorterStemFilter@bcd8f627 term=alreadi,bytes=[61 6c 72 65 61 64 69],startOffset=25,endOffset=32,positionIncrement=2,type=<ALPHANUM>,keyword=false",
    "attachments": {
        "LUCENE-5275.patch": "https://issues.apache.org/jira/secure/attachment/12607847/LUCENE-5275.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-10-10T17:49:04+0000",
            "content": "And maybe hashcode should be replaced by identityhashcode? ",
            "author": "Robert Muir",
            "id": "comment-13791726"
        },
        {
            "date": "2013-10-10T17:51:05+0000",
            "content": "Yeah: i think identityhashcode is way more useful (see updated patch).\n\nThis way the toString actually helps you figure out which guy is which if you are putting sops in your analysis chain:\n\n\nPorterStemFilter@23bd31c0 term=it,bytes=[69 74],startOffset=0,endOffset=3,positionIncrement=1,type=<ALPHANUM>,keyword=false\nPorterStemFilter@23bd31c0 term=2013,bytes=[32 30 31 33],startOffset=4,endOffset=8,positionIncrement=1,type=<NUM>,keyword=false\nPorterStemFilter@23bd31c0 term=let,bytes=[6c 65 74],startOffset=10,endOffset=15,positionIncrement=1,type=<ALPHANUM>,keyword=false\nPorterStemFilter@23bd31c0 term=fix,bytes=[66 69 78],startOffset=16,endOffset=19,positionIncrement=1,type=<ALPHANUM>,keyword=false\nPorterStemFilter@23bd31c0 term=alreadi,bytes=[61 6c 72 65 61 64 69],startOffset=25,endOffset=32,positionIncrement=2,type=<ALPHANUM>,keyword=false\n\n ",
            "author": "Robert Muir",
            "id": "comment-13791730"
        },
        {
            "date": "2013-10-10T18:18:56+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13791803"
        },
        {
            "date": "2013-10-10T18:38:26+0000",
            "content": "+1 ",
            "author": "Adrien Grand",
            "id": "comment-13791821"
        },
        {
            "date": "2013-10-10T18:40:49+0000",
            "content": "OK, this is alright. reflectAsString and the hashcode is fine.\n\nI don't want users to \"parse\" this output, this was a major pain and so we removed toString() in Lucene 3.1 and replaced by reflectAsString(). ",
            "author": "Uwe Schindler",
            "id": "comment-13791824"
        },
        {
            "date": "2013-10-10T18:42:42+0000",
            "content": "I think its ok for Token.toString() to keep its current implementation? that was a concern too right?\n\nI dont care about Token  ",
            "author": "Robert Muir",
            "id": "comment-13791827"
        },
        {
            "date": "2013-10-10T18:43:40+0000",
            "content": "I am fine, as already said \n\nOne thing. Can we make toString(), equals() and hashCode() final in TokenStream to prevent users to do shitty stuff on subclasses? ",
            "author": "Uwe Schindler",
            "id": "comment-13791831"
        },
        {
            "date": "2013-10-10T18:45:53+0000",
            "content": "Another way to fix this then (because super.toString() is already using Object.toString():\n\npublic final String toString() {\n  return super.toString() + \" \" + reflectAsString(false);\n}\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13791835"
        },
        {
            "date": "2013-10-10T18:51:02+0000",
            "content": "I didnt want the full class name. i think, while thats appropriate for Object.toString, its overkill and overly verbose in this context. I like my getSimpleName modification better personally. ",
            "author": "Robert Muir",
            "id": "comment-13791842"
        },
        {
            "date": "2013-10-10T18:57:16+0000",
            "content": "And as i mentioned, Object.toString prints the hashcode (which is useless and changes according to the contents). IdentityHashCode i feel is more useful as part of the toString message: because it helps to identify which stream in the chain it is (imagine you are toStringing along each way of the chain in debugging and have the same filter in the chain twice). ",
            "author": "Robert Muir",
            "id": "comment-13791848"
        },
        {
            "date": "2013-10-10T19:02:40+0000",
            "content": "The hasCode of TokenStream is the default hashCode of Object, which is identityHashCode(). This is why I said: make toString(), equals(), hashCode() final in TokenStream, because it makes absolutely no sense to compare tokenstreams. identityHashCode is defined as: \"Returns the same hash code for the given object as would be returned by the default method hashCode(), whether or not the given object's class overrides hashCode(). The hash code for the null reference is zero.\" ",
            "author": "Uwe Schindler",
            "id": "comment-13791857"
        },
        {
            "date": "2013-10-10T19:04:04+0000",
            "content": "\nOne thing. Can we make toString(), equals() and hashCode() final in TokenStream to prevent users to do shitty stuff on subclasses?\n\nI don't see why we should make the proposed toString final.\n\nMy suggested implementation tries to be succinct and useful by printing just the simple class name + identityhashcode + reflectAsString(false).\n\nIf someone wants to override this method to print \"more stuff\", e.g. reflectAsString(true), or some other internal state variables that matter to them, let them? ",
            "author": "Robert Muir",
            "id": "comment-13791858"
        },
        {
            "date": "2013-10-10T19:05:00+0000",
            "content": "Or shorter: The default Object hashCode does not change on Object's contents because it supports the default identity equals(). Identity equals does not compare contents, so hashCode is stable. ",
            "author": "Uwe Schindler",
            "id": "comment-13791859"
        },
        {
            "date": "2013-10-10T19:05:21+0000",
            "content": "\nThe hasCode of TokenStream is the default hashCode of Object, which is identityHashCode(). This is why I said: make toString(), equals(), hashCode() final in TokenStream, because it makes absolutely no sense to compare tokenstreams. identityHashCode is defined as: \"Returns the same hash code for the given object as would be returned by the default method hashCode(), whether or not the given object's class overrides hashCode(). The hash code for the null reference is zero.\"\n\nCan we please discuss hashcode/equals on another issue?\n\nThis issue is 100% about toString: hashcode/equals has a separate purpose and deserves its own issue / analysis of the tradeoffs. I'm not proposing changing anything about them here. ",
            "author": "Robert Muir",
            "id": "comment-13791860"
        },
        {
            "date": "2013-10-10T19:07:05+0000",
            "content": "I don't see why we should make the proposed toString final.\n\nThat's fine. I just want prevent people from putting TokenStreams into maps/sets, so make equals() and hashCode() final (implementing identity contract). I don't care about toString(). ",
            "author": "Uwe Schindler",
            "id": "comment-13791862"
        },
        {
            "date": "2013-10-10T19:08:18+0000",
            "content": "You started the hashCode discussion, so its part of the game  ",
            "author": "Uwe Schindler",
            "id": "comment-13791864"
        },
        {
            "date": "2013-10-10T19:12:44+0000",
            "content": "I did not start a discussion about hashcodes.\n\nI started a discussion about the \"@[hexnumber]\" that appears in tostring. it happens to be the hashcode by default.\n\nI refuse to change the hashcode on this issue. ",
            "author": "Robert Muir",
            "id": "comment-13791868"
        },
        {
            "date": "2013-10-10T19:18:17+0000",
            "content": "I only want you to use the default hashcode and not identity Hash Code because it is the same of hashcode stays  not implemented. The reason for this was given before. \n\nThat's all  ",
            "author": "Uwe Schindler",
            "id": "comment-13791875"
        },
        {
            "date": "2013-10-10T19:19:17+0000",
            "content": "\nThat's fine. I just want prevent people from putting TokenStreams into maps/sets, so make equals() and hashCode() final (implementing identity contract). I don't care about toString().\n\nSo can you make another issue about that please? This issue is just about toString. I don't want to go messing with equals/hashcode (high risk of bugs).\n\nThis issue is about improving toString to make debugging easier! ",
            "author": "Robert Muir",
            "id": "comment-13791876"
        },
        {
            "date": "2013-10-10T19:22:41+0000",
            "content": "Ok, other issue... I just give up, but its not my final decision!  ",
            "author": "Uwe Schindler",
            "id": "comment-13791880"
        },
        {
            "date": "2013-10-10T19:23:49+0000",
            "content": "seriously, if you want to improve hashcode/equals: I am all for it. \n\nI just dont want that mixed into this issue. I want to keep it completely contained to improving toString to make debugging easier. ",
            "author": "Robert Muir",
            "id": "comment-13791881"
        },
        {
            "date": "2013-10-10T19:27:34+0000",
            "content": "Ok. My only suggestion: See above!  ",
            "author": "Uwe Schindler",
            "id": "comment-13791886"
        },
        {
            "date": "2013-10-10T19:30:56+0000",
            "content": "But your suggestion is plain wrong:\n\n\nThe hashCode of TokenStream is the default hashCode of Object, which is identityHashCode().\n\nthis is not true! Its the hashCode of AttributeSource.\n\nThis is useless. ",
            "author": "Robert Muir",
            "id": "comment-13791897"
        },
        {
            "date": "2013-10-10T19:31:27+0000",
            "content": "Take 5 seconds of your time to see my 2 printouts above. I dont really understand why this isnt 100% clear. ",
            "author": "Robert Muir",
            "id": "comment-13791899"
        },
        {
            "date": "2013-10-10T19:35:54+0000",
            "content": "Oh fuck  Sorry. Not my day, more beer needed! ",
            "author": "Uwe Schindler",
            "id": "comment-13791904"
        },
        {
            "date": "2013-10-10T20:21:50+0000",
            "content": "now i see why i was so confused! ",
            "author": "Robert Muir",
            "id": "comment-13791950"
        },
        {
            "date": "2013-10-11T18:03:28+0000",
            "content": "Commit 1531376 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1531376 ]\n\nLUCENE-5275: Change AttributeSource.toString to display the current state of attributes ",
            "author": "ASF subversion and git services",
            "id": "comment-13792884"
        },
        {
            "date": "2013-10-11T18:23:54+0000",
            "content": "Commit 1531381 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1531381 ]\n\nLUCENE-5275: Change AttributeSource.toString to display the current state of attributes ",
            "author": "ASF subversion and git services",
            "id": "comment-13792912"
        }
    ]
}