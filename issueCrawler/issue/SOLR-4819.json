{
    "id": "SOLR-4819",
    "title": "Pimp QueryEqualityTest to use random testing",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The current QueryEqualityTest does some (important but) basic tests of query parsing to ensure that queries that are produced are equivalent to each other.\n\nSince we do random testing, it might be a good idea to generate random queries rather than pre-canned ones",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13656465",
            "date": "2013-05-13T22:29:39+0000",
            "content": "Since we do random testing, it might be a good idea to generate random queries rather than pre-canned ones\n\npart of the reason there's no randomization in theses tests yet is because of the difficulty in ensuring that hte randomly generated input is in fact valid for an arbitrary qparsers.\n\nthe itch i was scratching when i wrote that class was that there were some really blatent basic bugs with the equals methods in some of hte queries produced by the existing parsers causing really bad cache performance, so i wanted something that would ensure no parser would be included \"out of hte box\" w/o at least some basic sanity checking that obviously equivilent queries were equivilent.\n\nI think having specific test classes for specific types of queries (or for specific qparsers) would be the best place for more randomized testing ... this class is really just the front line defense against something really terrible.\n\n "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13656481",
            "date": "2013-05-13T22:42:03+0000",
            "content": "I think having specific test classes for specific types of queries (or for specific qparsers) would be the best place for more randomized testing ... this class is really just the front line defense against something really terrible.\n\nThat makes sense, I guess I didn't quite understand the purpose of this class "
        }
    ]
}