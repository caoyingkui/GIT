{
    "id": "LUCENE-4229",
    "title": "latin text analysis",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Hi\n\na workmate and I played a bit with latin text analysis and created two filter for the solr trunk version.\nOne filter is designed for number conversion like 'iv' -> '4', 'v' -> '5', 'vi' -> '6' ...\nThe second filter is a stemmer for the most common suffixe.\n\nThe following schema configuration could be a usecase for latin stemming.\n\n\t<fieldType name=\"text_latin\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n\t\t<analyzer>\n\t\t\t<tokenizer class=\"solr.StandardTokenizerFactory\"/>\n\t\t\t<filter class=\"org.apache.solr.analysis.LatinNumberConvertFilterFactory\" strictMode=\"true\"/>\n\t\t\t<filter class=\"solr.KeywordMarkerFilterFactory\" protected=\"latin_protwords.txt\" />\n\t\t\t<filter class=\"org.apache.solr.analysis.LatinStemFilterFactory\" />\n\t\t</analyzer>\n\t</fieldType>\n\nLatinNumberConvertFilterFactory has one property \"strictMode\" (default is false). This boolean indicates in which way the computation of the value is done, because not all letter combination are \"valid\" numbers. With strictMode=\"true\" the output of \"ic\" is \"ic\"; With strictMode=\"false\" the output of \"ic\" is \"99\"\nThe LatinStemFilterFactory generates for each input token two output token. the first stemmed as noun and the second stemmed as verb.\nBoth filter are aware of the KeywordMarkerFilterFactory.\n\nI have attached the svn patch for both filter. In addition I attached to zip files that are needed by filter tests (TestLatinNumberConvertFilter, TestLatinStemFilter). I am sorry for that but i did not find the option to include them into the patch, if there is one.\n\nThe image latin_analysis.png is an example of the analysis done with the configuration above. For this test we used the jar file latin.analysis.jar\n\n\nHave fun with latin text analysis. \nIt would be great to get some feedback.",
    "attachments": {
        "SOLR-3630.patch": "https://issues.apache.org/jira/secure/attachment/12536782/SOLR-3630.patch",
        "latinNumberTestData.zip": "https://issues.apache.org/jira/secure/attachment/12536783/latinNumberTestData.zip",
        "latinTestData.zip": "https://issues.apache.org/jira/secure/attachment/12536784/latinTestData.zip",
        "latin_analysis.png": "https://issues.apache.org/jira/secure/attachment/12536785/latin_analysis.png",
        "latin.analysis.jar": "https://issues.apache.org/jira/secure/attachment/12536786/latin.analysis.jar"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-17T07:36:12+0000",
            "content": "I moved this one to Lucene as it is a new Lucene feature.\n\nFunny number converter  ",
            "author": "Uwe Schindler",
            "id": "comment-13415971"
        },
        {
            "date": "2012-07-17T10:50:08+0000",
            "content": "fix encoding issue in patch file ",
            "author": "Markus Klose",
            "id": "comment-13416075"
        }
    ]
}