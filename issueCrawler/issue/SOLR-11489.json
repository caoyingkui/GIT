{
    "id": "SOLR-11489",
    "title": "Create collections as _foo and auto-create an alias foo->_foo",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Spin-off from SOLR-11488. Currently if a collection and an alias have the same name we don't test how they're resolved. So an innocent change to the code could easily change the behavior (what happens when you have a collection old, and an alias old->new and delete collection \"old\"? Have we even defined what should happen?).\n\nSee the discussion at SOLR-11488.\n\nAn alternative proposal to SOLR-11488 (thanks Varun for pointing it out) is when creating a collection \"foo\", actually name it foo and create an alias foo->_foo. Also don't allow the user to create an alias that begins with an underscore (and maybe the same for collections? An alias _foo->_foo starts to get weird).\n\nThe result would be we'd never have a collection and an alias with the same name, which would go a long way to prevent issues going forward.\n\nThis requires we consider the name in state.json to be an implementation detail, but the user won't notice. Potential here for the list of aliases to be quite large.\n\nOf course the user could still reference the collection directly as _foo if they insisted.\n\nEstablishing this JIRA for discussion of the alternatives.\n\nAssigning to myself to keep it from getting lost, feel free to take it over if you'd like.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-14T17:08:06+0000",
            "content": "Only one of these JIRAs should be implemented. We'll close the one not implemented as \"is superceded by\" or something. ",
            "author": "Erick Erickson",
            "id": "comment-16204736"
        },
        {
            "date": "2018-01-08T01:27:49+0000",
            "content": "There's no chance I'll be looking at this any time soon, so unassigning. ",
            "author": "Erick Erickson",
            "id": "comment-16315551"
        },
        {
            "date": "2018-03-30T18:48:50+0000",
            "content": "Simple proposal: when creating an alias, check that it does not collide with an existing collection name. And vice versa check alias names before creating a collection. Should be simple enough? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16420827"
        },
        {
            "date": "2018-03-30T19:02:51+0000",
            "content": "Jan H\u00f8ydahl\n\nIt can take a while for someone to realize they want to do the aliasing for, say,  live and not-live collections and atomically switch. Often this is long after they've gotten their apps running pointing to the collection rather than any alias.\n\nSo I create C1 and index to it. All my apps reference C1.\n\nNow I want to change my schema but have no service interruption. Currently I can create C2 and get it ready (index to it, QA, whatever). Once it's ready I create an alias C1->C2. My apps don't have to change.\n\nIf we refused to create an alias with the same name as a pre-existing collection this would not be possible.\n\nI suppose one could do this with a brief service interruption by shutting the apps down, deleting C1 and then creating an alias C1->C2 but that's clumsy....\n\nThis is one variant, there are others that all boil down basically to \"I need to switch what collections are being used without changing my app or service interruptions\"...\n\nAs long as we consciously decide not to support my above scenario that's perfectly valid, just making sure it's considered... ",
            "author": "Erick Erickson",
            "id": "comment-16420839"
        },
        {
            "date": "2018-03-30T20:14:26+0000",
            "content": "I don\u2019t really like this idea. I think it\u2019s an abstraction that doesn\u2019t give us much and can complicate how Solr works, in addition to braking things users may have built to monitor/operate Solr. \nFor example, collection APIs work on collections, but now they\u2019ll have to start reading aliases? things like metrics will include the collection name or the alias? logging keys (MDC stuff) will print collections, not aliases I guess, etc.\n\nI'm personally happy with the way aliases and collections work right now. There may be bugs that need to be fixed and/or improvements to tests, but I don't think we need to do a core change like this.\n\nAs long as we consciously decide not to support my above scenario that's perfectly valid, just making sure it's considered...\nI agree with Varun Thacker in SOLR-11488, this is a very useful feature and we should continue to support it.\n\u00a0 ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16420892"
        },
        {
            "date": "2018-03-30T20:28:34+0000",
            "content": "Let us instead add a working RENAMECOLLECTION command that takes as arguments oldName and newName and at the same time atomically adds oldName as an alias. Then we can document that as the procedure for your use case. I know that we used to have a RENAME for the cores API that was kind of broken but I believe it would be easier now with cloud to make something like this? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16420904"
        }
    ]
}