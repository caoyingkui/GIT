{
    "id": "SOLR-12990",
    "title": "High test failure rate on Java11/12 when (randomized) ssl=true clientAuth=false",
    "details": {
        "type": "Bug",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "Ever since the policeman's Jenkins instance started running tests on Java11, we've seen an abnormally high number of test failures that seem to be related to randomzed ssl.\n\nI've been investigating these logs, and trying to reproduce and have found the following observations:\n\n\n\tIn all the policeman jenkins logs i looked at, these SSL related failures only occur when the RandomizeSSL annotation picks ssl=true clientAuth=false\n\t\n\t\tNOTE: this doesn't mean that every test using ssl=true clientAuth=false failed \u2013 since our build system only prints test output when tests fail, it's possible/probably (based on how often the value should be picked) that many tests randomly use ssl=true clientAuth=false and pass\n\t\n\t\n\tthe failures usually showed an exception that was Caused by: javax.net.ssl.SSLException: Received fatal alert: internal_error in the logs.\n\twhen i attempted to re-produce some of these failing seeds on my own machine using Java11, i could not reliably reproduce these failures w/the same seeds\n\t\n\t\tbeasting could occasionally reproduce the failures, at roughly 1/10 runs\n\t\tsuggesting that system load/timing contributed to these SSL related failures\n\t\n\t\n\tpicking one particularly trivial test (DistributedDebugComponentTest)\n\t\n\t\twith javax.net.debug=all enabled, i was able to see more details...\n\t\t\n\t\t\tnotably: Fatal (INTERNAL_ERROR): Session has no PSK\n\t\t\n\t\t\n\t\twhen I patched the test to force ssl=true clientAuth=true I was unable to trigger any failures with the same seed.\n\t\n\t\n\ton the jira/http2 branch I was unable to reproduce these failures at all, w/o any patching\n\t\n\t\tsimilar to SOLR-12988, this may be because of bug fixes in the upgraded jetty.\n\t\n\t\n\n\n\n\n\nFiling this issue largely for tracking purpose, although we may also want to use it for discussions/considerations of other backports/fixes to 7x",
    "attachments": {
        "enable.ssl.debug.patch": "https://issues.apache.org/jira/secure/attachment/12948355/enable.ssl.debug.patch",
        "DistributedDebugComponentTest.ssl.debug.log.txt": "https://issues.apache.org/jira/secure/attachment/12948356/DistributedDebugComponentTest.ssl.debug.log.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16688421",
            "content": "attaching for posterity a patch that enables javax.net.debug=all when running tests, and the logs from a failing instance of DistributedDebugComponentTest run against master (95d01c6583b825b6b87591e4f27002c285ea25fb) w/this patch enabled. ",
            "author": "Hoss Man",
            "date": "2018-11-15T17:43:13+0000"
        },
        {
            "id": "comment-16688433",
            "content": "Uwe Schindler - would it be possible to set up a jenkins job on your server pointed at the jira/http2 branch, focusing on java11/12 ? ... even if it didn't send any email reports and rand very infrequently, I'd really like to see if it shows a reduced rate of SSL related test failures compared to master. ",
            "author": "Hoss Man",
            "date": "2018-11-15T17:50:19+0000"
        }
    ]
}