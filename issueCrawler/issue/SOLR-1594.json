{
    "id": "SOLR-1594",
    "title": "SolrDispatchFilter needs to sanitize exception message",
    "details": {
        "affect_versions": "1.4",
        "status": "Resolved",
        "fix_versions": [
            "1.5"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "SolrDispatchFIlter needs to sanitize exception messages before using them in the response.  I will attach a patch shortly.",
    "attachments": {
        "solr-1594.patch": "https://issues.apache.org/jira/secure/attachment/12425849/solr-1594.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12781491",
            "date": "2009-11-23T17:25:33+0000",
            "content": "What bad things happen w/o this patch? "
        },
        {
            "author": "Bill Au",
            "id": "comment-12781496",
            "date": "2009-11-23T17:29:37+0000",
            "content": "Try running this query:\n\nsolr/select/?q=title:\"<script>alert(\"xss\")</script> "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12781504",
            "date": "2009-11-23T17:54:51+0000",
            "content": "OK....\n\ncurl 'http://localhost:8983/solr/select/?q=title:\"<script>alert(\"xss\")</script>'\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"/>\n<title>Error 400 </title>\n</head>\n<body><h2>HTTP ERROR: 400</h2><pre>org.apache.lucene.queryParser.ParseException: Cannot parse 'title:\"&lt;script&gt;alert(\"xss\")&lt;/script&gt;': Lexical error at line 1, column 37.  Encountered: &lt;EOF&gt; after : \"\\\")&lt;/script&gt;\"</pre>\n<p>RequestURI=/solr/select/</p><p><i><small><a href=\"http://jetty.mortbay.org/\">Powered by Jetty://</a></small></i></p><br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n\n</body>\n</html>\n\n\n\nFrom the browser, it displays:\n\nHTTP ERROR: 400\n\norg.apache.lucene.queryParser.ParseException: Cannot parse 'title:\"<script>alert(\"xss\")</script>': Lexical error at line 1, column 37.  Encountered: <EOF> after : \"\\\")</script>\"\n\nRequestURI=/solr/select/\n\nPowered by Jetty://\n\n "
        },
        {
            "author": "Bill Au",
            "id": "comment-12781507",
            "date": "2009-11-23T18:11:27+0000",
            "content": "Jetty is sanitizing both the HTTP response line and the response body so it is OK.  I know of at least one appserver that is not doing that. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12781513",
            "date": "2009-11-23T18:20:05+0000",
            "content": "Ahhh.  If we escape it, will it then be double escaped by the time it gets out of jetty? "
        },
        {
            "author": "Bill Au",
            "id": "comment-12781522",
            "date": "2009-11-23T18:32:58+0000",
            "content": "I just tried it and Jetty does double-escape:\n\norg.apache.lucene.queryParser.ParseException: Cannot parse '\"&lt;script&gt;alert(\"xss\")&lt;/script&gt;': Lexical error at line 1, column 31.  Encountered: &lt;EOF&gt; after : \"\\\")&lt;/script&gt;\"\n\nSo should we leave it up to the appserver to do the right thing or should Solr be more proactive?  To me double-escaping is a lesser evil than being vulnerable to xss attack. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12781530",
            "date": "2009-11-23T18:39:33+0000",
            "content": "\n\nSo should we leave it up to the appserver to do the right thing or should Solr be more proactive?\n\nAs long as we're relying on the default error page of the servlet container, we shouldnt' attempt to modify the messages in anyway, becaus that will just screw things up for servlet containers that do the correct behavior.  if there is an XSS risk, it's caused by the servlet container, and that's where it should be fixed.\n\ni don't mind putting in work arrounds for specific servlet containers when it doesn't affect anybody else, but double escaping would defiitely cause problems for people who have good default error pages in their servlet containers (or who customize the solr webapp to add their own error page)\n\nwe should focus our efforts on something like SOLR-141 instead of trying to apply html specific sanitizing. "
        },
        {
            "author": "Bill Au",
            "id": "comment-12781697",
            "date": "2009-11-23T23:18:13+0000",
            "content": "This same problem had been reported against and fixed in Tomcat.  I have reported it to the vendor of my appserver and they are working on a fix.  Marking as invalid. "
        }
    ]
}