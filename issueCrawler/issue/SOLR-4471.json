{
    "id": "SOLR-4471",
    "title": "Replication occurs even when a slave is already up to date.",
    "details": {
        "affect_versions": "4.1",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Scenario: master/slave replication, master delta index runs every 10 minutes, slave poll interval is 10 sec.\n\nThere was an issue SOLR-4413 - slave reads index from wrong directory, so slave is full copy index from master every time, which is fixed after applying this patch from 4413 (see script below).\n\nNow on replication the slave downloads only updated files, but slave is create a new segement file and also a new version of index (generation is identical with master). On next polling the slave is download the full index again, because the new version slave is force a full copy.\n\nProblem is the new version of index on the slave after first replication.\n\n\nmkdir work\ncd work\nsvn co http://svn.apache.org/repos/asf/lucene/dev/branches/lucene_solr_4_1/\ncd lucene_solr_4_1\npatch -p0 < ../../patches/SOLR-4413.patch\ncd solr\nant dist",
    "attachments": {
        "SOLR-4471_TestRefactor.diff": "https://issues.apache.org/jira/secure/attachment/12570502/SOLR-4471_TestRefactor.diff",
        "SOLR-4471.patch": "https://issues.apache.org/jira/secure/attachment/12570283/SOLR-4471.patch",
        "SOLR-4471_Tests.patch": "https://issues.apache.org/jira/secure/attachment/12570432/SOLR-4471_Tests.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Amit Nithian",
            "id": "comment-13583053",
            "date": "2013-02-21T09:42:33+0000",
            "content": "I have a proposed solution with a bit of extra commentary on it in the code so it's clear what I am doing.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583217",
            "date": "2013-02-21T14:18:12+0000",
            "content": "Looks like we need a test for this. "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13583465",
            "date": "2013-02-21T19:28:55+0000",
            "content": "I'll work on the test if no one else is. I think I see that my slave_gen > master_gen+1 is not needed but simply slave_gen > mater. I'll see if I can put some tests around it and re-submit a patch soon. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583468",
            "date": "2013-02-21T19:32:27+0000",
            "content": "I'm working on some improved tests in this area, but I'd appreciate any help or additional test work. We can't have too many for this stuff.  "
        },
        {
            "author": "Andre Charton",
            "id": "comment-13583528",
            "date": "2013-02-21T20:35:17+0000",
            "content": "Today after debugging in a bigger environment I found slave marked the index as stale (method isStale() in SnapPuller). This is because segment the file, which comes from master and is different in size than the file on slave. This only happens if there are enough data and also 'delta-date'. With few data file looks same (exists + same size). \nSo again: problem is that slave generates this segment file after replication (and also a new version). In the end the version number is may a \"subproblem\" of this new segment file. I'm note sure how lucene work, but that looks for me as the general problem. \nI also checked solr 3.6.1, the version is same. Also 3.6 didn't create index dir with time stamp (eg. index.12345) and segment files are same slave <-> master. "
        },
        {
            "author": "Helder Sepulveda",
            "id": "comment-13583567",
            "date": "2013-02-21T21:32:12+0000",
            "content": "I also tested this:\n\nUpgraded servers to the latest n-Build\n\n\tDo a commit on the Master\n\tThe Slave seems replicate only what it needs (correct way)\n\tNext replication cycle comes and slave will download entire index\n\n\n\nFirst I noticed this behavior when clicking two times on the replicate now button \nbut I changed my pollInterval to 30 seconds and the problem is more evident. "
        },
        {
            "author": "Andre Charton",
            "id": "comment-13583594",
            "date": "2013-02-21T22:08:46+0000",
            "content": "One shot: I tried to set commit after replication as soft commit and it works for me:\n\nSnapPuller line 622 ff\n      // update our commit point to the right dir\n      CommitUpdateCommand cuc = new CommitUpdateCommand(req, false);\n      ...\n      cuc.softCommit = true; // use soft commit here, so on commit no new segment info are generated - on slave.\n      ...\n\n\n\nNow slave didn't generate new segment file, also index version looks fine.\n\nSomebody agree? "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13583599",
            "date": "2013-02-21T22:14:12+0000",
            "content": "When your replication is downloading the full index what is the value of the isFullCopyNeeded variable? Are you getting a full copy b/c the variable value is true or b/c the index is \"stale\"? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583603",
            "date": "2013-02-21T22:16:25+0000",
            "content": "Somebody agree? \n\nIt's kind of a workaround, but there is more to this. I've already advanced a bit beyond this though - I'm not using a soft commit, I'm just not doing that commit unless isFullCopyNeeded. I'm running into an issue with the version though. Somehow, after the replication happens, the commit timestamp we store is not getting set to the value of the index we replicated in - it's like it's stale. "
        },
        {
            "author": "Andre Charton",
            "id": "comment-13583621",
            "date": "2013-02-21T22:37:39+0000",
            "content": "@Amit: First thought was version, but it was because setup was to small. Now I see it's stale b/c file exits and size is diff (-> segment file).\n@Mark: why this comment \"// update our commit point to the right dir\" - how we mark replicated index as ready for search?\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583629",
            "date": "2013-02-21T22:45:36+0000",
            "content": "why this comment \"// update our commit point to the right dir\" \n\nIt's needed when you switch Directory's. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583631",
            "date": "2013-02-21T22:46:09+0000",
            "content": "Or it was at one point - once we have some more thorough testing and some more fixes, we will have to see how that turns out. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583685",
            "date": "2013-02-21T23:49:17+0000",
            "content": "In the test i was building on, pre commit was screwing with things. I've taken that out for now and am making some progress. "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13583707",
            "date": "2013-02-22T00:04:29+0000",
            "content": "One question in the unit tests, I noticed that it's one method test() which I am trying to break out into multiple unit test methods but was wondering if there is an order to the private test method invocations that caused this one single test() method. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583710",
            "date": "2013-02-22T00:08:56+0000",
            "content": "Your guess is as good as mine - someone else originally wrote these. I think it tries to make order not matter, I don't know how successful it is. I generally just comment out the methods I'm not currently working with. "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13583717",
            "date": "2013-02-22T00:11:46+0000",
            "content": " So I tried to create a @BeforeClass and @AfterClass annotation to keep the server static.. now I just moved them to setup and teardown so each test creates and destroys jetty instances. I hate single methods that test 10 things so I hope that others agree. "
        },
        {
            "author": "Andre Charton",
            "id": "comment-13583742",
            "date": "2013-02-22T00:34:19+0000",
            "content": "Sorry for the spam - but which test method - can't find any related to the SnapPuller on trunk. But may is better to have no test method than the one with 10 aspects. "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13583748",
            "date": "2013-02-22T00:39:43+0000",
            "content": "It's in the TestReplicationHandler.java file. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583787",
            "date": "2013-02-22T01:27:32+0000",
            "content": "Here is where I am at. A couple fixes, a test that catches at least some of this. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583796",
            "date": "2013-02-22T01:34:51+0000",
            "content": "Amit: I think that's a fine change - I'd only check if it affects the overall test time much. "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13583801",
            "date": "2013-02-22T01:38:40+0000",
            "content": "Mark, do you have any details you can provide about the underlying issue that you are trying to resolve in case there is something we can do to help? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583803",
            "date": "2013-02-22T01:41:18+0000",
            "content": "I think that patch may solve things for you. It at least fixes some things. Next I want to write more tests or try and think of what is not currently being tested. If you can break that patch, that would help as I can then add that test and fix it. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583807",
            "date": "2013-02-22T01:46:38+0000",
            "content": "One thing that does seem to mess things up is precommit. I'm not sure that's the most useful feature at the moment anyway, but avoid it in your testing  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13583859",
            "date": "2013-02-22T03:09:28+0000",
            "content": "Another test and fix for when a new index directory is forced. Turns out we are doing things different somehow currently and don't need that commit at all any more to update our commit points. Some other improvement or bug fix. "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13584039",
            "date": "2013-02-22T07:10:53+0000",
            "content": "This doesn't add anything new other than break out the test() method into separate actual junit tests. Also it's better to ensure each test has a clean set of jetty servers initialized so as to ensure state from previous tests don't leak into future ones. "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13584064",
            "date": "2013-02-22T07:41:36+0000",
            "content": "Sorry I'm trying to read the patch and perhaps I'm missing something but where is the commit that I thought was needed to signal new data? If that's not needed can you explain why just for my understanding?\n\nAlso why is there such a distinction between getIndexDir and getNewIndexDir and why can't all calls route through one? It's a bit confusing to me at the moment. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13584289",
            "date": "2013-02-22T14:05:33+0000",
            "content": "No, the commit was not to single new data - see the comment - it was mainly about fixing an issue when restarting the writer.\n\nAt one point, it may have also been what triggered a new searcher, but we have done that explicitly instead for a while now.\n\ngetIndexDir and getNewIndexDir are kind of complicated. getNewIndexDir should always be safe to use, but it does this extra step of reading a properties file sometimes. Technically, it's mainly supposed to be critical to use getNewIndexDir when making new writers and searchers - i sometimes use it elsewhere in replication to be sure any kind of race is not an issue. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13584325",
            "date": "2013-02-22T15:01:01+0000",
            "content": "I think I'm about ready to commit what I have. I think it fixes the glaring issues and has some improved tests. Then it will be easier to build on top of that if needed. "
        },
        {
            "author": "Helder Sepulveda",
            "id": "comment-13584328",
            "date": "2013-02-22T15:10:35+0000",
            "content": "Once you commit, Can you generate a .war file?\nI would like to test it on the servers\n\nSolr 4.1 reduced my index size by more than 50%, Me so happy!\nBut this problem with the replication is a show stopper.\n\nLet me know if there is anything I can do to help.  "
        },
        {
            "author": "Andre Charton",
            "id": "comment-13584390",
            "date": "2013-02-22T16:17:26+0000",
            "content": "For me patch looks good, together with 4413 replication in solr 4.x is working. \nThanks for that ( especially from network team, because angry about heavy network usage during replications)!\n\n@Helder try:\nbuild script to apply patches in solr, copy content in build.sh an run - may it works for you\nmkdir patches\ncd patches\nwget https://issues.apache.org/jira/secure/attachment/12570408/SOLR-4471.patch\nwget https://issues.apache.org/jira/secure/attachment/12569673/SOLR-4413.patch\ncd ..\nmkdir work\ncd work\nsvn co http://svn.apache.org/repos/asf/lucene/dev/branches/lucene_solr_4_1/\ncd lucene_solr_4_1\npatch -p0 < ../../patches/SOLR-4413.patch\npatch -p0 < ../../patches/SOLR-4471.patch\ncd solr\nant dist\n\n "
        },
        {
            "author": "Helder Sepulveda",
            "id": "comment-13584397",
            "date": "2013-02-22T16:25:46+0000",
            "content": "I think I will have to start by installing SVN and ANT...\nMy servers are VM clones of production servers, they have the bare minimum to run solr, no extra bells and whistles.\nAnything else I might need? "
        },
        {
            "author": "Helder Sepulveda",
            "id": "comment-13584408",
            "date": "2013-02-22T16:33:01+0000",
            "content": "Andre if you already have a .war file, I would appreciate it very much if you can upload it somewhere, it will save me a lot of troubles "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13584432",
            "date": "2013-02-22T17:00:11+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1449115\n\nSOLR-4471: Replication occurs even when a slave is already up to date.\n\nSOLR-4484: ReplicationHandler#loadReplicationProperties still uses Files rather than the Directory to try and read the replication properties files.\n\nSOLR-4488: Return slave replication details for a master if the master has also acted like a slave. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13584440",
            "date": "2013-02-22T17:10:10+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1449117\n\nSOLR-4471: Replication occurs even when a slave is already up to date.\n\nSOLR-4484: ReplicationHandler#loadReplicationProperties still uses Files rather than the Directory to try and read the replication properties files.\n\nSOLR-4488: Return slave replication details for a master if the master has also acted like a slave. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13584470",
            "date": "2013-02-22T17:31:46+0000",
            "content": "I've put up an intermediate build of the current 4X branch at http://people.apache.org/~markrmiller/solr-4.2-SNAPSHOT.tgz that includes the current fixes. "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13584488",
            "date": "2013-02-22T18:00:07+0000",
            "content": "Sorry to spam again. Thanks for the explanation! I saw a bunch of changes and I thought they were all to this patch but didn't realize it was for other bugs. I am attaching my latest test class with some refactorings to hopefully make new tests easier. I think it's as fast but even if it's a bit slower, I'd rather have a slower clean test class than a dirtier fast one  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13584524",
            "date": "2013-02-22T18:36:08+0000",
            "content": "Thanks, I'll commit this shortly.\n\nI'd rather have a slower clean test class than a dirtier fast one\n\nIt depends on the time difference I think.\n\nIn this case, it doesn't look like a problem. I'm not sure what the original motivation to have them together was. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13584528",
            "date": "2013-02-22T18:40:40+0000",
            "content": "but didn't realize it was for other bugs. \n\nI did SOLR-4484 because it was causing me problems with the test so had to be fixed for this fix.\n\nI did SOLR-4488 because I used it as part of the new testing. "
        },
        {
            "author": "Shikhar Bhushan",
            "id": "comment-13584719",
            "date": "2013-02-22T21:32:47+0000",
            "content": "We ran into the same issue with full copies happening with each incremental. Patch works! Thank you. "
        },
        {
            "author": "Helder Sepulveda",
            "id": "comment-13584726",
            "date": "2013-02-22T21:36:11+0000",
            "content": "I just tested the .war in the solr-4.2-SNAPSHOT.tgz and replication is working as intended!\nThanks a bunch "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13584763",
            "date": "2013-02-22T22:18:19+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1449240\n\nSOLR-4471: Improve and clean up TestReplicationHandler. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13584768",
            "date": "2013-02-22T22:26:10+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1449241\n\nSOLR-4471: Improve and clean up TestReplicationHandler. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13584887",
            "date": "2013-02-23T00:34:14+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1449258\n\nSOLR-4471: Fix up test. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13584892",
            "date": "2013-02-23T00:42:13+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1449259\n\nSOLR-4471: Fix up test. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13584989",
            "date": "2013-02-23T03:28:14+0000",
            "content": "Thanks all for the help! "
        },
        {
            "author": "Ra\u00fal Grande",
            "id": "comment-13585978",
            "date": "2013-02-25T16:38:56+0000",
            "content": "I have problems with 4.2-SNAPSHOT version. My slaves doesn't replicate even when master's version is higher than theirs. See image here: http://oi50.tinypic.com/o8uzad.jpg\n\nWhy logs say \"Slave in sync with master\" when clearly isn't?? "
        },
        {
            "author": "Amit Nithian",
            "id": "comment-13586019",
            "date": "2013-02-25T17:25:55+0000",
            "content": "I'm curious about something. What does:\n1) http://localhost:17045/solr/replication?command=indexversion yield\n2) http://localhost:<your slave port>/solr/replication?command=details yield\n\nI have noticed that what you see on the UI vs what you see in the indexversion and details sometimes differ and I wonder if that is a culprit here? Does #1,#2 jive with the versions that you see in the UI? "
        },
        {
            "author": "Ra\u00fal Grande",
            "id": "comment-13586912",
            "date": "2013-02-26T07:55:30+0000",
            "content": "When I do http://localhost:17045/solr/replication?command=indexversion response is:\n<long name=\"generation\">29037</long>\n\nThat's the same version than slaves have, but on the UI generation in master is now 29082. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13588450",
            "date": "2013-02-27T15:44:16+0000",
            "content": "\nWhen I do http://localhost:17045/solr/replication?command=indexversion response is:\n<long name=\"generation\">29037</long>\nThat's the same version than slaves have, but on the UI generation in master is now 29082.\n\nSounds like perhaps that needs it's own new JIRA issue? "
        },
        {
            "author": "Ra\u00fal Grande",
            "id": "comment-13589364",
            "date": "2013-02-28T09:15:42+0000",
            "content": "SOLR-4511 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654278",
            "date": "2013-05-10T10:34:38+0000",
            "content": "Closed after release. "
        }
    ]
}