{
    "id": "LUCENE-5824",
    "title": "hunspell FLAG LONG implemented incorrectly",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ]
    },
    "description": "If you have more than 256 flags, you run out of 8-bit characters, so you have to use another flag type to get 64k:\n\n\tUTF-8: 16-bit BMP flags\n\tlong: two-character flags like 'AB'\n\tnum: decimal numbers like '10234'\n\n\n\nBut our implementation for 'long' is wrong, it encodes as 'A+B', which means it cant distinguish between 'AB' and 'BA' and causes overgeneration.",
    "attachments": {
        "LUCENE-5824.patch": "https://issues.apache.org/jira/secure/attachment/12655759/LUCENE-5824.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14062005",
            "author": "Robert Muir",
            "content": "Simple patch and test to encode as A << 8 + B (and also check the values are really within range: they should be two ascii characters). \n\nThis bug currently impacts the more complicated dictionaries using this encoding type (russian, arabic, hebrew, etc) ",
            "date": "2014-07-15T12:37:50+0000"
        }
    ]
}