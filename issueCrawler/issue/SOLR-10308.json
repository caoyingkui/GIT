{
    "id": "SOLR-10308",
    "title": "Solr fails to work with Guava 21.0",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "highlighter"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.4.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "This is what we get:\n\n\nCaused by: java.lang.NoSuchMethodError: com.google.common.base.Objects.firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n\tat org.apache.solr.handler.component.HighlightComponent.prepare(HighlightComponent.java:118)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:269)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:166)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2299)\n\tat org.apache.solr.client.solrj.embedded.EmbeddedSolrServer.request(EmbeddedSolrServer.java:178)\n\tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:149)\n\tat org.apache.solr.client.solrj.SolrClient.query(SolrClient.java:942)\n\tat org.apache.solr.client.solrj.SolrClient.query(SolrClient.java:957)\n\tat org.xwiki.search.solr.internal.AbstractSolrInstance.query(AbstractSolrInstance.java:117)\n\tat org.xwiki.query.solr.internal.SolrQueryExecutor.execute(SolrQueryExecutor.java:122)\n\tat org.xwiki.query.internal.DefaultQueryExecutorManager.execute(DefaultQueryExecutorManager.java:72)\n\tat org.xwiki.query.internal.SecureQueryExecutorManager.execute(SecureQueryExecutorManager.java:67)\n\tat org.xwiki.query.internal.DefaultQuery.execute(DefaultQuery.java:287)\n\tat org.xwiki.query.internal.ScriptQuery.execute(ScriptQuery.java:237)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl.doInvoke(UberspectImpl.java:395)\n\tat org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl.invoke(UberspectImpl.java:384)\n\tat org.apache.velocity.runtime.parser.node.ASTMethod.execute(ASTMethod.java:173)\n\t... 183 more\n\n\n\nGuava 21 has removed some signature that solr is currently using.",
    "attachments": {
        "SOLR-10308.patch": "https://issues.apache.org/jira/secure/attachment/12909828/SOLR-10308.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-16T16:28:02+0000",
            "content": "FTR removed in Guava in https://github.com/google/guava/commit/f67ab864bde63fa6602b5688de0440957ffeaa2e ",
            "author": "Vincent Massol",
            "id": "comment-15928370"
        },
        {
            "date": "2017-03-16T16:28:27+0000",
            "content": "The solution is to use MoreObjects#firstNonNull instead, see https://github.com/google/guava/blob/master/guava/src/com/google/common/base/MoreObjects.java#L55 ",
            "author": "Vincent Massol",
            "id": "comment-15928373"
        },
        {
            "date": "2017-03-16T19:27:35+0000",
            "content": "Some of Solr's dependencies also rely on Guava, and may not be compatible with a newer version.  In particular, the hadoop jars for HDFS support may fall into this category.  Other dependencies like this are the reason that Solr includes such an ancient version of Guava.  The declared Guava dependency in the hadoop packages that Solr uses is 11.0.2, which is five years old. Solr includes 14.0.1, so we're already using a newer version than our dependencies want us to.  That version is only four years old. \n\nFixing the three guava usages in Solr code that are incompatible with version 21 should be pretty easy, but any other dependencies are outside our control.\n\nSee HADOOP-10101 for more information.  That issue (to upgrade the guava dependency in hadoop) has been open for more than three years. ",
            "author": "Shawn Heisey",
            "id": "comment-15928692"
        },
        {
            "date": "2017-03-16T19:51:58+0000",
            "content": "FYI, on the XWiki project, we've been using Solr with Guava 20 for a long time now and haven't noticed any issue. Of course we don't use all the Solr modules/extensions.\n\nWe're really stuck ATM because we'd like to upgrade to Selenium 3.3.1 which requires Guava 21 and fails on 20 and SOLR is the opposite: works on 20 and fail on 21 \n\nIt's really bad that the Guava guy don't pay more attention to backward compat and preserve it for much longer. I'd say for such a well known library it should be a must. They should learn from apache commons IMO.\n\nThanks for your reply Shawn Heisey. Does it mean there's no chance that this issue will get fixed any time soon? ",
            "author": "Vincent Massol",
            "id": "comment-15928728"
        },
        {
            "date": "2017-03-16T21:06:29+0000",
            "content": "Why would you be putting the Solr SERVER in the same JVM as Selenium?  SolrJ (the client) doesn't normally depend on Guava, and is the only part of Solr that I would even remotely expect to coexist with Selenium.  Since version 5.0, Solr no longer officially supports running with other web applications \u2013 the only supported way to start it is with the included Jetty installation, and we strongly recommend that the Jetty install is kept clean.\n\nThe only time I would expect the bulk of Solr to be in a client application is if you are using EmbeddedSolrServer ... but in that case, there is no HTTP access, so Selenium wouldn't work anyway.\n\nUntil Solr's dependencies (hadoop in particular) upgrade to work with newer Guava versions, I'm afraid that Solr will be stuck in the past.  I suspect that Google follows generally recommended deprecation practices, but it is impractical to hold onto deprecated code for years at a time, which is what would be required to keep complete compatibility for seven major versions. ",
            "author": "Shawn Heisey",
            "id": "comment-15928908"
        },
        {
            "date": "2017-03-17T12:00:21+0000",
            "content": "Yes you're most likely right but it's a bit more complex; we have a single maven build and the guava dependency version is declared in the root pom (to version 20 ATM because Solr doesn't work with version 21) so that all dependencies (including transitive ones) requiring guava all use the same version. The functional tests that we run somewhere in that build use selenium and thus require version 21 for selenium 3.3.1. I guess one solution would be to refactor this build at the expense of a lot of explicit guava dependencies in several places (instead of the single one at the top). To complete the picture, we're using the maven enforcer plugin with the \"requireUpperBoundDeps\" check, which fails the build in case of conflicts.\n\nThanks. ",
            "author": "Vincent Massol",
            "id": "comment-15929825"
        },
        {
            "date": "2017-03-17T12:02:05+0000",
            "content": "\n I suspect that Google follows generally recommended deprecation practices, but it is impractical to hold onto deprecated code for years at a time, which is what would be required to keep complete compatibility for seven major versions.\n\nFTR this is what XWiki does (we've been keeping backward compatibility for 12 years now) and what most Apache commons projects do too (for ex commons collection, commons lang, etc). ",
            "author": "Vincent Massol",
            "id": "comment-15929826"
        },
        {
            "date": "2017-07-03T07:32:17+0000",
            "content": "Why would you be putting the Solr SERVER in the same JVM as Selenium?\n\nThat's actually just the first reason why the general build fail (much safer and easier to have the same version of Guava during the build and at runtime) but this does not have much impact on the root issue: XWiki is stuck with Guava 20 (on which it's working well by the way so you might consider upgrading at least to this version) because it's embedding Solr. ",
            "author": "Thomas Mortagne",
            "id": "comment-16072008"
        },
        {
            "date": "2018-01-16T00:37:52+0000",
            "content": "Fixing the three guava usages in Solr code that are incompatible with version 21 should be pretty easy\nI have a patch in SOLR-11260 for this. I needed this for another reason: to be able to use a third party NLP library for my Turkish analysis plugin. A drop-in upgrade of Guava breaks highlighting. I patched solr 6.6.0 and using it in a production-like environment. Does this patch solve Vincent Massol's problem? Does it break any existing functionality? ",
            "author": "Ahmet Arslan",
            "id": "comment-16326657"
        },
        {
            "date": "2018-01-16T00:56:57+0000",
            "content": "Maybe worth thinking about if we can\u00a0relocate the version of guava used? I know maven has nice plugins for this, not sure what the state of the art is for ant builds, though... ",
            "author": "Mike Drob",
            "id": "comment-16326664"
        },
        {
            "date": "2018-01-16T08:56:43+0000",
            "content": "Does this patch solve Vincent Massol's problem?\n\nAhmet Arslan definitely  ",
            "author": "Thomas Mortagne",
            "id": "comment-16326902"
        },
        {
            "date": "2018-01-16T09:29:43+0000",
            "content": "Ahmet Arslan Note: I work with Thomas Mortagne on XWiko so we have the same need \u00a0Yes it would solve our problem. Thanks! ",
            "author": "Vincent Massol",
            "id": "comment-16326926"
        },
        {
            "date": "2018-01-16T12:26:06+0000",
            "content": "ant precommit passed. Running ant test now but it looks like it is hanged:\n\n\n   [junit4] HEARTBEAT J0 PID(2348@...): 2018-01-16T15:19:55, stalled for 28263s at: HdfsDirectoryTest (suite)\n   [junit4] HEARTBEAT J0 PID(2348@...): 2018-01-16T15:20:55, stalled for 28323s at: HdfsDirectoryTest (suite)\n   [junit4] HEARTBEAT J0 PID(2348@...): 2018-01-16T15:21:55, stalled for 28383s at: HdfsDirectoryTest (suite)\n\n\n\nI am not sure whether it is due to guava update or not. I will try to figure out. ",
            "author": "Ahmet Arslan",
            "id": "comment-16327068"
        },
        {
            "date": "2018-01-16T12:27:41+0000",
            "content": "\u00a0relocate the version of guava used\nMike Drob can you please provide some context/pointers? I am not familiar with the relocate concept. ",
            "author": "Ahmet Arslan",
            "id": "comment-16327071"
        },
        {
            "date": "2018-01-16T17:57:23+0000",
            "content": "Unfortunately, the patch affects the following hdfs test cases.\n\n   [junit4] HEARTBEAT J1 PID(26866@...): 2018-01-16T19:27:40, stalled for 7988s at: HdfsNNFailoverTest (suite)\n   [junit4] HEARTBEAT J2 PID(26860@...): 2018-01-16T19:27:40, stalled for 8591s at: StressHdfsTest (suite)\n   [junit4] HEARTBEAT J0 PID(26869@...): 2018-01-16T19:28:04, stalled for 7141s at: MoveReplicaHDFSFailoverTest (suite)\n   [junit4] HEARTBEAT J3 PID(26880@...): 2018-01-16T19:28:04, stalled for 8352s at: CheckHdfsIndexTest (suite)\n   [junit4] HEARTBEAT J1 PID(26866@...): 2018-01-16T19:28:40, stalled for 8048s at: HdfsNNFailoverTest (suite)\n   [junit4] HEARTBEAT J2 PID(26860@...): 2018-01-16T19:28:40, stalled for 8651s at: StressHdfsTest (suite)\n   [junit4] HEARTBEAT J0 PID(26869@...): 2018-01-16T19:29:04, stalled for 7201s at: MoveReplicaHDFSFailoverTest (suite)\n   [junit4] HEARTBEAT J3 PID(26880@...): 2018-01-16T19:29:04, stalled for 8412s at: CheckHdfsIndexTest (suite)\n\n ",
            "author": "Ahmet Arslan",
            "id": "comment-16327479"
        },
        {
            "date": "2018-02-06T15:54:14+0000",
            "content": "Removing the Guava dependency (or alternatively allowing a greater range of Guava versions, including 21.0) would be appreciated (see https://issues.apache.org/jira/browse/OAK-7182). ",
            "author": "Julian Reschke",
            "id": "comment-16354052"
        },
        {
            "date": "2018-02-06T16:58:47+0000",
            "content": "XWiki is stuck with Guava 20 (on which it's working well by the way so you might consider upgrading at least to this version) because it's embedding Solr.\n\nSolr supports indexes in HDFS, which means that Solr has Hadoop dependencies.  The version of Hadoop included with Solr doesn't work with newer Guava versions.  Fixing the problems with the core Solr code related to Guava 21 is easy, but there is little we can do about the hadoop \u2013 it's a completely separate project.  The vast majority of Solr users don't use HDFS, and those users apparently can upgrade to Guava 20, but the project as a whole cannot upgrade.\n\nHadoop 3.0 has been upgraded to Guava 18 (they were at version 11!).  I don't know if this means that it would be compatible with Guava 21 or later, though.  See HADOOP-10101 and SOLR-9515.\n\nOn XWiki and Solr: Why would anyone EVER use EmbeddedSolrServer in a production application?  There is absolutely no way to provide high availability, redundancy, load balancing, etc. ",
            "author": "Shawn Heisey",
            "id": "comment-16354149"
        },
        {
            "date": "2018-02-06T17:02:37+0000",
            "content": "\nOn XWiki and Solr: Why would anyone EVER use EmbeddedSolrServer in a production application? There is absolutely no way to provide high availability, redundancy, load balancing, etc.\n\nI can answer that one  Simply because XWiki provides the embedded SOLR as the default and it works very well for the majority of use cases (about 99.99% of them). When an install requires a more elaborate SOLR setup (with all the features you mentioned), XWiki allows to use an external SOLR instance. ",
            "author": "Vincent Massol",
            "id": "comment-16354154"
        },
        {
            "date": "2018-02-08T19:39:24+0000",
            "content": "I have updated a master checkout of Lucene/Solr to Guava 24.0-jre and Hadoop 3.0.0, fixed the compile errors, and now I'm running Solr tests.  The one thing I'm not sure about is whether there is enough HDFS coverage in Solr's test suite to be sure that the hadoop upgrade hasn't broken anything. ",
            "author": "Shawn Heisey",
            "id": "comment-16357467"
        },
        {
            "date": "2018-02-08T19:46:52+0000",
            "content": "Here are the failures I got:\n\n   [junit4] Tests with failures [seed: CAEB705400CC7150]:\n   [junit4]   - org.apache.solr.cloud.autoscaling.sim.TestLargeCluster.testSearchRate\n   [junit4]   - org.apache.solr.cloud.TestSolrCloudWithKerberosAlt.testBasics\n   [junit4]   - org.apache.solr.cloud.autoscaling.TriggerIntegrationTest.testNodeLostTriggerRestoreState\n   [junit4]   - org.apache.solr.cloud.autoscaling.TriggerIntegrationTest.testMetricTrigger\n   [junit4]   - org.apache.solr.cloud.SaslZkACLProviderTest.testSaslZkACLProvider\n   [junit4]   - org.apache.solr.cloud.TestSolrCloudWithDelegationTokens (suite)\n\nI don't think these failures have anything to do with HDFS.  But I do not know if this result is enough to say that hadoop 3.0.0 is actually working.\n\nThe last test mentioned above fails with this:\n\njava.lang.ClassNotFoundException: org.apache.kerby.kerberos.kerb.KrbException\n\nKrbException doesn't appear in the code at all.  It is mentioned once in the Solr Reference Guide. ",
            "author": "Shawn Heisey",
            "id": "comment-16357479"
        },
        {
            "date": "2018-02-08T19:56:40+0000",
            "content": "Initial patch uploaded.  This upgrades both Guava and Hadoop to the latest versions.  Another hadoop dependency was needed, since some HDFS functionality was split off into a client jar.  I did my best at fixing the Guava compile errors.  I don't know if it was correct to assume UTF-8 on the hashString usages, but that's what I did.\n\nMark Miller, I think you might qualify as a resident HDFS expert.  Do you think it's safe to commit an upgrade to hadoop 3.0.0, at least on master? ",
            "author": "Shawn Heisey",
            "id": "comment-16357490"
        },
        {
            "date": "2018-02-08T22:10:07+0000",
            "content": "I have discovered that the old version of curator we're using has dependencies on Guava as well, and there was a test failure stemming from that.\n\nGoing to try and upgrade curator to the latest as well and see what happens. ",
            "author": "Shawn Heisey",
            "id": "comment-16357647"
        },
        {
            "date": "2018-02-08T23:34:10+0000",
            "content": "Curator 4.0.0 is apparently missing classes that are needed.  On the machine where I'm fiddling with this, I've downgraded that dependency to 3.3.0.  I've also added another dependency: org=\"com.google.j2objc\" name=\"j2objc-annotations\".  Newer guava needs it, and there was a compile message about it.\n\nI also discovered that a bunch of hdfs tests are classified as Nightly, so I'm re-testing with -Dtests.nightly=true. ",
            "author": "Shawn Heisey",
            "id": "comment-16357709"
        },
        {
            "date": "2018-02-09T01:11:17+0000",
            "content": "I don't know if it was correct to assume UTF-8 on the hashString usages\nI believe it should be as the following. I had confirmed it before in\u00a0SOLR-11260\n\n\tHashFunction.hashString -> HashFunction.hashUnencodedChars\n\n ",
            "author": "Ahmet Arslan",
            "id": "comment-16357783"
        },
        {
            "date": "2018-04-26T14:31:05+0000",
            "content": "Mark Miller, I think you might qualify as a resident HDFS expert. Do you think it's safe to commit an upgrade to hadoop 3.0.0, at least on master?\n\nYeah, it could be done, but only on master. Here is an old issue: SOLR-9515 ",
            "author": "Mark Miller",
            "id": "comment-16454311"
        },
        {
            "date": "2018-06-13T13:53:03+0000",
            "content": "FYI: <https://github.com/google/guava/wiki/CVE-2018-10237> ",
            "author": "Julian Reschke",
            "id": "comment-16511168"
        }
    ]
}