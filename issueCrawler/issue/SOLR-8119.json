{
    "id": "SOLR-8119",
    "title": "Detect index corruption for all files on replication",
    "details": {
        "components": [
            "replication (java)"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Lucene writes checksums for large files but they aren't verified until a merge is necessary because it'd be too costly to go through the entire bytes. Only truncation of such files is checked during open. However, index replication is one activity that has to go through the entire file anyway so we can be more aggressive than Lucene in validating the checksum.\n\nI propose that we validate all files, large and small, during replication.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-04T05:39:42+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Note that there is some API mismatch in the way we replicate vs how we can validate the checksums e.g. FastInputStream vs IndexInput etc so a good amount of refactoring may be necessary. ",
            "id": "comment-14942562"
        }
    ]
}