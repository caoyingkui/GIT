{
    "id": "SOLR-10484",
    "title": "Create a new replica property that keeps a replica from becoming active.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "See the user's list thread \"Stopping a node from receiving any requests temporarily.\" for one example, but there are others. I can imagine operations people wanting to take a replica out of action for some time without affecting other replicas on that host.\n\nWhat do people think about having a property you could use with ADDREPLICA like \"property.inactive\" or something that kept the replica from coming up at all until the property was removed?\n\nDELETEREPLICAPROP could be used to remove it when operations was ready to have it become active.\n\nADDREPLICAPROP could be used to add it to an active replica and should take that replica out of service.\n\nWhether we can piggy-back off of the core admin UNLOAD here I'm unclear on.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-12T15:39:00+0000",
            "content": "If the intention is to keep only (certain) queries away from certain replicas but for updates etc. still to be sent then the HttpShardHandler[Factory] and the ReplicaListTransformer stuff from SOLR-8332 could be built upon I think. For example we already have a preferLocalShards logic and avoidCertainReplicas logic is fairly similar.\n\nFor example if something like this was configured\n\n<shardHandlerFactory name=\"shardHandlerFactory\" class=\"solr.HttpShardHandlerFactory\">\n  <str name=\"avoidableReplicaProperty\">dontAskMe</str>\n</shardHandlerFactory>\n\n\nthen any replicas annotated as \"dontAskMe\" would be avoided. ",
            "author": "Christine Poerschke",
            "id": "comment-15966076"
        },
        {
            "date": "2017-04-12T16:02:35+0000",
            "content": "Interesting, I'd never have thought of that. I'm thinking of a temporary state that wouldn't affect any other replicas in the collection. Wouldn't using SOLR-8332 require that the collection be brought up and down while solrconfig was changed? If that's the case it would be a problem. I admit I know little about SOLR-8332 so maybe I'm way off base.\n\nAnother use-case is expanding capacity when a cluster is running hot. There is SOLR-6086 where a replica becomes active when it's added before autowarming is complete which got me to thinking about situations where operations people might want to temporarily disable a replica while \"something\" was done to it without affecting the rest of the collection at all. \n\nI admit largely speculating here. When I thought of it my reaction was \"this seems so useful I wonder why we haven't done it\". Which then lead to \"Well, if we haven't done this yet maybe it's not that usefull\" so I opened this JIRA to see what others had to say. ",
            "author": "Erick Erickson",
            "id": "comment-15966120"
        },
        {
            "date": "2017-04-12T16:23:41+0000",
            "content": "... Wouldn't using SOLR-8332 require that the collection be brought up and down while solrconfig was changed? ...\n\nI'm thinking that <some property> be known to Solr as the property that identifies replicas to be avoided, it could be \"property.inactive\" as you suggested and/or something configurable. Once configured (or present out-of-the-box) then ReplicaListTransformer would basically not only re-order the replica list but it would also filter out anything that needs to be filtered out according to the <some property> property.\n\nAnother use-case is expanding capacity when a cluster is running hot. ... people might want to temporarily disable a replica while \"something\" was done to it without affecting the rest of the collection at all.\n\nYes, I can certainly see a use case for that too.\n\n\n\nCould the idea of disabling a replica be even taken from temporary situation to permanent feature?\n\n\ttemporary situation: annotate a replica as not-to-be-used whilst something is being done to it\n\tpermanent situation: optionally annotate replicas and in request handlers optionally configure annotations so that certain request handlers use (or not use) replicas with certain annotations. This would for example allow within the same collection the partitioning of traffic e.g. 'simple' search requests go to one set of machines and more 'complex' search requests use a different request handler and get routed to a different set of machines, but in terms of indexing and monitoring etc. you are still dealing with just one collection essentially.\n\n ",
            "author": "Christine Poerschke",
            "id": "comment-15966157"
        },
        {
            "date": "2017-04-13T05:12:37+0000",
            "content": "bq: Could the idea of disabling a replica be even taken from temporary situation to permanent feature?\n\nIs this another role perhaps? I'm thinking here of a collection that serves, say, both user-level requests and \"heavy\" analytics requests. That way I could run very complex analytics against a subset of my nodes that were segregated from those serving live traffic.\n\nSo is my original \"property\" idea really a role? A role of \"analytics_replica\" or \"under_construction\". Hmmm, I think I like the idea of an \"analytics_replica\" role. a \"role\" of something like \"under_construction\" seems better suited to be a property but I don't particularly have strong feelings about that.\n\nSo your idea has something like every solr replica has an \"analytics\" (to continue my example) request handler. But only those nodes that also have the \"analytics\" role assigned would have requests routed to them? And having a role like this (or property I suppose) would also imply that no other requests get routed here? ",
            "author": "Erick Erickson",
            "id": "comment-15967148"
        },
        {
            "date": "2017-04-13T18:15:09+0000",
            "content": "\nSo is my original \"property\" idea really a role? ...\n\nGood question, i had to go read up on the difference between property and role actually \n\n\thttps://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-ADDREPLICAPROP:AddReplicaProperty\n\thttps://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-ADDROLE:AddaRole\n\n\n\nLogically, theoretically, there are four types of replicas:\n\n\treplicas which the \"analytics\" requests (continuing with your example) must not be sent to ('forbidden' replicas)\n\treplicas which the \"analytics\" requests should rather not be sent to ('disliked' replicas for lack of a better word)\n\treplicas which the \"analytics\" requests should ideally be sent to ('preferred' replicas)\n\treplicas which the \"analytics\" requests must be sent to ('required' replicas)\n\treplicas which are none of the above since they are not annotated\n\n\n\nSo if there are any 'required' replicas at all then \"analytics\" requests can only be sent to those replicas. If there are no 'required' replicas but 'preferred' replicas then those will be used if available and only if they are not available would the request be sent to a 'disliked' replica. In no circumstances would the \"analytics\" requests go to a 'forbidden' replica.\n\nNow, all of that is rather complex isn't it? And now what if we had \"daily analytics\" requests and \"weekly analytics\" requests alongside the user-level live traffic?\n\n\n\nSo it seems to me that yes your original idea is for a \"role\" that keeps a replica from becoming active (or from being considered active).\n\nAnd my thoughts are more along the lines of properties e.g.\n\n\n<requestHandler name=\"/search\" class=\"solr.SearchHandler\" >\n  <shardHandlerFactory name=\"shardHandlerFactory\" class=\"solr.HttpShardHandlerFactory\">\n    <!-- consider the 'tier' property when routing requests -->\n    <str name=\"replicaPriority.property\">tier</str>\n    <!-- use a value of 1 for replicas that have no 'tier' property -->\n    <str name=\"replicaPriority.default\">1</str>\n    <!-- send requests to tier 1 and tier 2 replicas, in that order i.e. prefer tier 1 over tier 2 -->\n    <int name=\"replicaPriority.minimum\">1</int>\n    <int name=\"replicaPriority.maximum\">2</int>\n  </shardHandlerFactory>\n</requestHandler>\n\n<requestHandler name=\"/analytics\" class=\"solr.SearchHandler\" >\n  <shardHandlerFactory name=\"shardHandlerFactory\" class=\"solr.HttpShardHandlerFactory\">\n    <!-- consider the 'tier' property when routing requests -->\n    <str name=\"replicaPriority.property\">tier</str>\n    <!-- use a value of 1 for replicas that have no 'tier' property -->\n    <str name=\"replicaPriority.default\">1</str>\n    <!-- send requests only to tier 3 replicas -->\n    <int name=\"replicaPriority.minimum\">3</int>\n    <int name=\"replicaPriority.maximum\">3</int>\n  </shardHandlerFactory>\n</requestHandler>\n\n\n\nIn the above setup a replica could be taken out of (search and analytics) use by giving it a tier value of (say) 4 or equally it could be set aside for analytics use by temporarily giving it tier=3 instead of tier=2 property.\n\n\n\nSo in short I think:\n\n\t\"under_construction\" role (this ticket, here)\n\t\"replicaPriority.*\" property (another ticket, another day)\n\n\n\nPS: there already is a \"construction\" Slice.State - not sure if \"construction\" and \"under_construction\" could be confused. An alternative might be \"dormant\" role and alongside the existing \"overseer\" role hopefully we'll never end up with a dormant overseer ... ",
            "author": "Christine Poerschke",
            "id": "comment-15967990"
        }
    ]
}