{
    "id": "SOLR-1311",
    "title": "pseudo-field-collapsing",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "3.2"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "I am trying to develope a new way of doing field collapsing based on the adjacent field collapsing algorithm. I have started developing it beacuse I am experiencing performance problems with the field collapsing patch with big index (8G).\nThe algorith does adjacent-pseudo-field collapsing. It does collapsing on the first X documents. Instead of making the collapsed docs disapear, the algorith will send them to a given position of the relevance results list.\nThe reason I just do collapsing in the first X documents is that if I have for example 600000 results and I am showing 10 results per page, I really don't need to do collapsing in the page 30000 or even not in the 3000. Doing this I am noticing dramatically better performance. The problem is I couldn't find a way to plug the algorithm as a component and keep good performance. I had to hack few classes in SolrIndexSearcher.java\nThis patch is just experimental and for testing purposes. In case someone finds it interesting would be good do find a way to integrate it in a better way than it is at the moment.\nAdvices are more than welcome.\n\n\nFunctionality:\nIn solrconfig.xml we specify the pseudo-collapsing parameters:\n     <str name=\"plus.considerMoreDocs\">true</str>\n     <str name=\"plus.considerHowMany\">3000</str>\n     <str name=\"plus.considerField\">name</str>\n(at the moment there's no threshold and other parameters that exist in the current collapse-field patch)\n\nplus.considerMoreDocs one enables pseudo-collapsing\nplus.considerHowMany sets the number of resultant documents in wich we want to apply the algorithm\nplus.considerField is the field to do pseudo-collapsing\n\nIf the number of results is lower than plus.considerHowMany the algorithm will be applyed to all the results.\nLet's say there is a query with 600000 results and we've set considerHowMany to 3000 (and we already have the docs sorted by relevance). \nWhat adjacent-pseudo-collapse does is, if the 2nd doc has to be collapsed it will be sent to the pos 2999 of the relevance results array. If the 3th has to be collpased too  will go to the position 2998 and successively like this.\n\nThe algorithm is not applyed when a sortspec is set or plus.considerMoreDocs is set to false. It neighter is applyed when using MoreLikeThisRequestHanlder.\n\nExample with a query of 9 results:\nResults sorted by relevance without pseudo-collapse-algorithm:\n\ndoc1 - collapse_field_value 3\ndoc2 - collapse_field_value 3\ndoc3 - collapse_field_value 4\ndoc4 - collapse_field_value 7\ndoc5 - collapse_field_value 6\ndoc6 - collapse_field_value 6\ndoc7 - collapse_field_value 5\ndoc8 - collapse_field_value 1\ndoc9 - collapse_field_value 2\n\nResults pseudo-collapsed with plus.considerHowMany = 5\n\ndoc1 - collapse_field_value 3\ndoc3 - collapse_field_value 4\ndoc4 - collapse_field_value 7\ndoc5 - collapse_field_value 6\ndoc2 - collapse_field_value 3*\ndoc6 - collapse_field_value 6\ndoc7 - collapse_field_value 5\ndoc8 - collapse_field_value 1\ndoc9 - collapse_field_value 2\n\nResults pseudo-collapsed with plus.considerHowMany = 9\n\ndoc1 - collapse_field_value 3\ndoc3 - collapse_field_value 4\ndoc4 - collapse_field_value 7\ndoc5 - collapse_field_value 6\ndoc7 - collapse_field_value 5\ndoc8 - collapse_field_value 1\ndoc9 - collapse_field_value 2\ndoc6 - collapse_field_value 6*\ndoc2 - collapse_field_value 3*\n\n*pseudo-collapsed documents",
    "attachments": {
        "SOLR-1311-pseudo-field-collapsing.patch": "https://issues.apache.org/jira/secure/attachment/12414647/SOLR-1311-pseudo-field-collapsing.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uri Boness",
            "id": "comment-12754509",
            "date": "2009-09-12T11:25:05+0000",
            "content": "Wouldn't be an idea to try and merge this code with the original field collapsing patch? Quite a bit of work was done recently on that patch to make it more extensible. So for example, you now have a Collapser interface that encapsulates the actual collapsing algorithm, and my guess is that your algorithm can probably fit there. Indeed when the corpus is large, adjacent field collapsing can turn into a performance issue, and having this pseudo algorithm seems to make a lot of sense. So for example, using the original field collapsing patch, it would be nice if we could just define another parameter called collapse.type which will hold one of three values: adjacent, pseudo-adjacent, and non-adjacent.\n\nBTW, I haven't looked at your patch yet and I don't know how well it works with faceting? But integrating it with the original patch will enable you that support (i.e. before/after collapse facet counts support) automatically. "
        },
        {
            "author": "Marc Sturlese",
            "id": "comment-12759489",
            "date": "2009-09-25T11:08:46+0000",
            "content": "Well, the thing is my patch is very good in performance because by now it can not be integrated as a plugin. Field collaping patch does 2 \"searches\". One to pick the ids to collapse and the second to filter the ids in the main search.\nWhat I do is to pseudo-collapse straight in the mian search... reordering the ids in the getDocListAndSetNC and getDocListNC so response times are almost the same with or without the patch.  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872604",
            "date": "2010-05-27T22:08:40+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12921324",
            "date": "2010-10-15T12:23:03+0000",
            "content": "Hi Marc,\n\ncould this issue be closed because of a field collapsing which is now in trunk and more mature?\n\nWhy it cannot be integrated as a plugin? "
        },
        {
            "author": "Marc Sturlese",
            "id": "comment-12921328",
            "date": "2010-10-15T12:41:24+0000",
            "content": "Well I said it can not be integrated as a plugin because it hacks DocListAndSetNC and DocListNC. This 2 functions just can be altered altering the SolrIndexSearcher.java class.\nThe pseudo-field-collapse sort is not included in the current field collapsing but current field collapsing seems to perform much better that it use to (I don't think as good as this patch, but the current feature is much more complete than my patch).\nI supose I can close it. "
        }
    ]
}