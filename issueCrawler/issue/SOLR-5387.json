{
    "id": "SOLR-5387",
    "title": "Multi-Term analyser not working",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.5"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "I tried the solr 4.5 example schema modifed by changing a field, say, 'manu' to the following fieldType:\n<fieldType name=\"text_general_mt\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n...\n      <analyzer type=\"query\">\n        <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n        <filter class=\"solr.LowerCaseFilterFactory\"/>\n      </analyzer>\n      <analyzer type=\"multiterm\">\n        <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n        <filter class=\"solr.LowerCaseFilterFactory\"/>\n      </analyzer>\n    </fieldType>\n\nAfter indexing a document with manu value european@union.de, \nthe following search throw an Exception:\n\nmanu:(european@unio*)\n\nThe exception:\nanalyzer returned too many terms for multiTerm term: european@unio\norg.apache.solr.common.SolrException: analyzer returned too many terms for multiTerm term: european@unio\n        at org.apache.solr.schema.TextField.analyzeMultiTerm(TextField.java:157)\n        at org.apache.solr.parser.SolrQueryParserBase.analyzeIfMultitermTermText(SolrQueryParserBase.java:936)\n        at org.apache.solr.parser.SolrQueryParserBase.getPrefixQuery(SolrQueryParserBase.java:981)\n        at org.apache.solr.parser.SolrQueryParserBase.handleBareTokenQuery(SolrQueryParserBase.java:746)\n        at org.apache.solr.parser.QueryParser.Term(QueryParser.java:300)\n        at org.apache.solr.parser.QueryParser.Clause(QueryParser.java:186)\n        at org.apache.solr.parser.QueryParser.Query(QueryParser.java:108)\n\n\nI thought I did exactly as instructed by various MultiTerm-blogs & Wiki-Pages. So please take a look if this is a bug.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13805286",
            "date": "2013-10-25T13:09:34+0000",
            "content": "Please raise questions like this on the user's list before raising a JIRA to see if it's a real bug or just a misunderstanding on your part.\n\nIn this case, the code is functioning as expected. MultiTerm analysis chains may NOT break incoming tokens up into more than one token. In this case, anything with an @ symbol is broken up into more than one term due to the StandardTokenizer, which is an illegal condition for multiterm queries. "
        }
    ]
}