{
    "id": "SOLR-4833",
    "title": "All(most all) Logger instances should be made static",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "The majority of Logger usage in Solr is via static variables, but there are a few places where this pattern does not hold true - i think we should fix that and be completley consistent.  if there is any specific cases where a non-static variable really makes a lot of sense, then it should be heavily commented as to why.\n\n\n\nThe SLF4J FAQ has a list of pros and cons for why Logger variables should/shouldn't be static...\n\nhttp://slf4j.org/faq.html#declared_static\n\n...the majority of the \"pros\" for non-static usage don't really apply to Solr, while the pros for static usage due.\n\nAnother lucene/solr specific pro in favor of static variables for loggers is the way our test framework looks for memory leaks in tests.  Having a simple test that does not null out a static reference to what seems like a small object is typically fine \u2013 but if that small object has an explicit (non-static) reference to a Logger, all of the state in that Logger is counted as part of the size of that small object leading to confusion.",
    "attachments": {
        "SOLR-4833-Remove-None-static-loggers.patch": "https://issues.apache.org/jira/secure/attachment/12584426/SOLR-4833-Remove-None-static-loggers.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13659734",
            "date": "2013-05-16T17:23:33+0000",
            "content": "as a specific example see comments in SOLR-4825...\n\n\n\tRegexBoostProcessorTest had a static ref to a SolrRequestParsers instance\n\tSolrRequestParsers had a non-static ref to a Logger\n\tSOLR-4825 changed the Logger to maintain some heavy state\n\tRegexBoostProcessorTest started failing in unpredictable ways because the size of the (non-nulled) SolrRequestParsers started to sporadically exceed the size threashold at the end of the test.\n\n "
        },
        {
            "author": "Greg Bowyer",
            "id": "comment-13664789",
            "date": "2013-05-23T02:11:32+0000",
            "content": "I took a first stab at this, two things strike me.\n\n\n\tShould lucene use SLF4J as a logging framework instead of j.u.logging ?\n\n\n\n\n\tShould loggers that are defined on parent classes be removed, I feel that if we want subclasses to go through the same logger, they can all access that logger by its moniker themselves, the only thing that stopped me in my tracks is that some of the exposed loggers form part of the user extensible API surface.\n\n "
        }
    ]
}