{
    "id": "LUCENE-6900",
    "title": "Grouping sortWithinGroup should use Sort.RELEVANCE to indicate that, not null",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "modules/grouping"
        ],
        "labels": "",
        "fix_versions": [
            "5.5"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "In AbstractSecondPassGroupingCollector, withinGroupSort uses a value of null to indicate a relevance sort.  I think it's nicer to use Sort.RELEVANCE for this \u2013 after all it's how the groupSort variable is handled.  This choice is also seen in GroupingSearch; likely some other collaborators too.\n\nMartijn van Groningen is there some wisdom in the current choice that escapes me?  If not I'll post a patch.",
    "attachments": {
        "LUCENE_6900.patch": "https://issues.apache.org/jira/secure/attachment/12773883/LUCENE_6900.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15013006",
            "author": "Martijn van Groningen",
            "date": "2015-11-19T06:45:22+0000",
            "content": "No there isn't, what I remember is that when creating this class it was common to use 'null' as an indication to sort by relevancy. "
        },
        {
            "id": "comment-15022828",
            "author": "David Smiley",
            "date": "2015-11-23T19:36:43+0000",
            "content": "Here is a patch.  There are some edits I did just for code clarity.\n\nI expanded the scope to include having the AbstractSecondPassGroupingCollector.needScores be determined based on the constructor args instead of always returning true (this is an optimization and addresses a TODO comment).  I did not do this likewise for other collectors.  Do you think this is okay or would you prefer a separate issue and increasing the scope there?\n\nThe Solr side was tricky to debug & fix.  I ended up doing a refactoring in TopGroupsResultTransformer to extract out near duplicated code.  I strengthened the test in TestDistributedGrouping so it actually tests score ordered groups, which it didn't before because the commenter (you?) thought distributed IDF was necessary when in fact just returning some field value as a score works fine.  I ran into SOLR-6612 but avoided it by adding \"maxScore\" to the \"handle\" map as a \"SKIP\".  I spent a little time trying to fix it but I stopped myself as it was becoming a distraction.  Some little improvements in the issue might reflect that. "
        },
        {
            "id": "comment-15024205",
            "author": "Christine Poerschke",
            "date": "2015-11-24T10:24:57+0000",
            "content": "Patch looks good to me. Two minor comments:\n\n\tin the AbstractSecondPassGroupingCollector constructor you replaced a size() == 0 with isEmpty() and perhaps the wording of the exception on the following line might be changed also to mention empty rather than size==0\n\tin BlockGroupingCollector around line 235 there's an existing TODO comment mentioning null as meaning \"by relevance\"\n\n\n "
        },
        {
            "id": "comment-15025467",
            "author": "David Smiley",
            "date": "2015-11-24T21:35:46+0000",
            "content": "Thanks for the review Christine!  I updated the patch with those simple changes.  Also, I backed-out unrelated improvements to needScore; I'll file a separate issue.\n\nAbsent of further feedback, I'll commit this tomorrow around now. "
        },
        {
            "id": "comment-15028166",
            "author": "ASF subversion and git services",
            "date": "2015-11-26T04:56:48+0000",
            "content": "Commit 1716569 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1716569 ]\n\nLUCENE-6900: Grouping sortWithinGroup shouldn't be null; use Sort.RELEVANCE.\nEnhanced related Solr side a bit. "
        },
        {
            "id": "comment-15028182",
            "author": "ASF subversion and git services",
            "date": "2015-11-26T05:14:24+0000",
            "content": "Commit 1716570 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1716570 ]\n\nLUCENE-6900: Grouping sortWithinGroup shouldn't be null; use Sort.RELEVANCE.\nEnhanced related Solr side a bit. "
        },
        {
            "id": "comment-15031796",
            "author": "Alan Woodward",
            "date": "2015-11-30T14:00:19+0000",
            "content": "Just noticed that this has an entry in the Solr CHANGES.txt file - was that intentional? "
        },
        {
            "id": "comment-15031836",
            "author": "David Smiley",
            "date": "2015-11-30T14:29:26+0000",
            "content": "Yes; most of my time on this issue was debugging the Solr side, after which I ended up enhancing a test and doing a little refactoring. "
        }
    ]
}