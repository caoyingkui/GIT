{
    "id": "SOLR-3148",
    "title": "SystemInfoHandler does not expose all available info",
    "details": {
        "affect_versions": "3.6,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The following info is not returned even when they are available (on java 1.6 and 1.7): \n\n\ngetSystemLoadAverage()\ngetOpenFileDescriptorCount()\ngetMaxFileDescriptorCount()\ngetCommittedVirtualMemorySize()\ngetTotalPhysicalMemorySize()\ngetTotalSwapSpaceSize()\ngetProcessCpuTime()\n\n\n\nThis is happening because the following exception is thrown: \n\n\njava.lang.IllegalAccessException: Class org.apache.solr.handler.admin.SystemInfoHandler can not access a member of class com.sun.management.UnixOperatingSystem with modifiers \"public native\"\n\n\n\nIt seems to be enough to call setAccessible(true) on the method to get rid of that exception.\n\nAdditionally I see a strange value for the ulimit key:\n\n\"ulimit\":\"(error executing: ulimit -n)\",",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Sami Siren",
            "id": "comment-13215023",
            "date": "2012-02-23T20:29:16+0000",
            "content": "This seems to work ok now. I did not change the ulimit part. "
        },
        {
            "author": "Thomas Mueller",
            "id": "comment-14060502",
            "date": "2014-07-14T10:06:39+0000",
            "content": "FYI I faced the same problem, but found a different solution. I think the problem is that you need to get the method on the interface (com.sun.management.OperatingSystemMXBean), not on the class (sun.management.OperatingSystemImpl). That way, setAccessible(true) is not needed. This works for me:\n\n\nOperatingSystemMXBean mxBean = ManagementFactory.\n    getOperatingSystemMXBean();\nMethod method = Class.forName(\n    \"com.sun.management.OperatingSystemMXBean\").\n    getMethod(\"getTotalPhysicalMemorySize\");\nlong physicalMemorySize = (Long) method.invoke(mxBean);       \n\n "
        }
    ]
}