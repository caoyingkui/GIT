{
    "id": "SOLR-8741",
    "title": "Json Facet API, numBuckets not returning real number of buckets.",
    "details": {
        "components": [
            "Facet Module"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Hi, using the json facet api I realized that the numBuckets is wrong. It is not returning the right number of buckets. I have a dimension which numBuckets says it has 1340, but when retrieving all the results it brings 988. \nFYI the field is of type string.\n\nThanks.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-26T23:20:32+0000",
            "author": "Alexandre Rafalovitch",
            "content": "If that's in the SolrCloud, then this is probably a duplicate of SOLR-7452 ",
            "id": "comment-15170076"
        },
        {
            "date": "2016-02-27T22:53:47+0000",
            "author": "Yonik Seeley",
            "content": "IIRC numBuckets is using the same estimation algorithm used for \"unique\" described here: http://yonik.com/solr-count-distinct/\nbefore hyperloglog got added.\n\nWe should prob add some way to use hll for numBuckets as well, but for now you may be able to work around by using hll directly yourself.\n\nExample:\n\njson.facet={\n  numCat:\"hll(cat)\",\n  categories: {\n    type : terms,\n    field : cat\n  }\n}'\n\n\n\nThat should work for the common case, but not for other cases like mincount=N (where N>1) for example, or for other domain switching techniques like block join. ",
            "id": "comment-15170752"
        },
        {
            "date": "2016-02-29T16:17:53+0000",
            "author": "Pablo Anzorena",
            "content": "Alexandre Rafalovitch no, it is not in SolrCloud. \n\nYonik Seeley thank you very much! Solr is using MurmurHash3 128 bits hash, right? How accurate is the HyperLogLog? I read that for cardinality greater than 10^9 it has an error of 2%. Is the same in solr? Have you, or somebody else make any test on how accurate it is?  ",
            "id": "comment-15172075"
        },
        {
            "date": "2016-03-16T15:26:21+0000",
            "author": "Pablo Anzorena",
            "content": "Just for the record, I made a quite a few tests with dimensions of cardinality greater than 1.000.000, with cardinality fewer than 200 and from others between them, and in all the cases the error was under 2%. ",
            "id": "comment-15197499"
        },
        {
            "date": "2016-03-30T10:54:00+0000",
            "author": "Pablo Anzorena",
            "content": "Yonik SeeleyThe hll algorithm is throwing a NullPointerException in a specific field.\n\n\n03-29@15:38:13,187 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.search.facet.HLLAgg$Merger.merge(HLLAgg.java:86)\n03-29@15:38:13,187 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.search.facet.FacetBucket.mergeBucket(FacetModule.java:410)\n03-29@15:38:13,187 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.search.facet.FacetQueryMerger.merge(FacetModule.java:337)\n03-29@15:38:13,187 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.search.facet.FacetModule.handleResponses(FacetModule.java:178)\n03-29@15:38:13,187 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:388)\n03-29@15:38:13,188 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n03-29@15:38:13,188 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.core.SolrCore.execute(SolrCore.java:2064)\n03-29@15:38:13,188 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:654)\n03-29@15:38:13,188 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:450)\n03-29@15:38:13,188 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:227)\n03-29@15:38:13,188 --APP: F, SSID:VDMSf4fvQaWsOMEbFfxEDGal, LOGIN:panzoren-- ERROR [stderr] (Thread-112)        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:196\n\n\n\nThe definition of the field in the schema is the following:\n\n<field name=\"nro_shipper_unif\" type=\"string\" indexed=\"true\" stored=\"false\" required=\"false\" multiValued=\"false\" />\n\n\n\nThe particularity with this field is that it has a cardinality of million values. ",
            "id": "comment-15217793"
        },
        {
            "date": "2016-03-30T11:45:29+0000",
            "author": "Yago Riveiro",
            "content": "I hit this bug too.\n\nIf I discard the docs that do not have the field that throws the NPE (q=field:* to fetch only docs with values) the hll doesn't throws the NPE   ",
            "id": "comment-15217835"
        },
        {
            "date": "2016-03-30T14:50:16+0000",
            "author": "Pablo Anzorena",
            "content": "Yeah, that's right. \nAnyway I think it's important to understand what is happening and if possible fix it. ",
            "id": "comment-15218077"
        }
    ]
}