{
    "id": "SOLR-6924",
    "title": "TestSolrConfigHandlerCloud fails frequently.",
    "details": {
        "components": [],
        "type": "Test",
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "I see this fail all the time. Usually something like:\n\njava.lang.AssertionError: Could not get expected value  P val for path [response, params, y, p] full output {",
    "attachments": {
        "SOLR-6924.patch": "https://issues.apache.org/jira/secure/attachment/12706964/SOLR-6924.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-10T18:06:18+0000",
            "author": "Mark Miller",
            "content": "\njava.lang.AssertionError: Could not get expected value  null for path [response, params, y, c] full output {\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":0},\n  \"response\":{\n    \"znodeVersion\":1,\n    \"params\":{\n      \"x\":{\n        \"a\":\"A val\",\n        \"b\":\"B val\",\n        \"\":{\"v\":0}},\n      \"y\":{\n        \"c\":\"CY val\",\n        \"b\":\"BY val\",\n        \"\":{\"v\":0}}}}}\n\tat __randomizedtesting.SeedInfo.seed([D765D9019AAF2D1E:56835719EDF04D22]:0)\n\tat org.junit.Assert.fail(Assert.java:93)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.apache.solr.core.TestSolrConfigHandler.testForResponseElement(TestSolrConfigHandler.java:259)\n\tat org.apache.solr.handler.TestSolrConfigHandlerCloud.testReqParams(TestSolrConfigHandlerCloud.java:270)\n\tat org.apache.solr.handler.TestSolrConfigHandlerCloud.doTest(TestSolrConfigHandlerCloud.java:70)\n\tat org.apache.solr.BaseDistributedSearchTestCase.testDistribSearch(BaseDistributedSearchTestCase.java:868)\n\n ",
            "id": "comment-14272628"
        },
        {
            "date": "2015-01-29T16:49:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1655736 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1655736 ]\n\nSOLR-6924: Add BadApple to test. ",
            "id": "comment-14297122"
        },
        {
            "date": "2015-01-29T16:50:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1655737 from Mark Miller in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1655737 ]\n\nSOLR-6924: Add BadApple to test. ",
            "id": "comment-14297124"
        },
        {
            "date": "2015-02-06T09:06:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1657761 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1657761 ]\n\nSOLR-6924: Splitting the testcase because more SolrConfigHandler features and testcases are coming up ",
            "id": "comment-14308866"
        },
        {
            "date": "2015-02-06T09:08:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1657762 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1657762 ]\n\nSOLR-6924: Splitting the testcase because more SolrConfigHandler features and testcases are coming up ",
            "id": "comment-14308868"
        },
        {
            "date": "2015-02-10T03:08:36+0000",
            "author": "Mark Miller",
            "content": "\nCould not get expected value  'P val' for path 'response/params/y/p' full output: {   \"responseHeader\":{     \"status\":0,     \"QTime\":0},   \"response\":{     \"znodeVersion\":0,     \"params\":{\"x\":{         \"a\":\"A val\",         \"b\":\"B val\",         \"\":{\"v\":0}}}}}\n\njava.lang.AssertionError: Could not get expected value  'P val' for path 'response/params/y/p' full output: {\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":0},\n  \"response\":{\n    \"znodeVersion\":0,\n    \"params\":{\"x\":{\n        \"a\":\"A val\",\n        \"b\":\"B val\",\n        \"\":{\"v\":0}}}}}\n\tat __randomizedtesting.SeedInfo.seed([A4ACF6659668D699:2CF8C9BF3894BB61]:0)\n\tat org.junit.Assert.fail(Assert.java:93)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.apache.solr.core.TestSolrConfigHandler.testForResponseElement(TestSolrConfigHandler.java:399)\n\n ",
            "id": "comment-14313448"
        },
        {
            "date": "2015-02-14T20:49:45+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Another failure from my local jenkins:\n\n [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSolrConfigHandlerCloud -Dtests.method=test -Dtests.seed=59310820B646978D -Dtests.slow=true -Dtests.locale=th_TH -Dtests.timezone=Africa/Sao_Tome -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 37.5s J1 | TestSolrConfigHandlerCloud.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: Could not get expected value  'b' for path 'overlay/requestHandler/\\/x/a' full output: {\n   [junit4]    >   \"responseHeader\":{\n   [junit4]    >     \"status\":0,\n   [junit4]    >     \"QTime\":0},\n   [junit4]    >   \"overlay\":{\n   [junit4]    >     \"znodeVersion\":0,\n   [junit4]    >     \"requestHandler\":{\"/x\":{\n   [junit4]    >         \"name\":\"/x\",\n   [junit4]    >         \"class\":\"org.apache.solr.handler.DumpRequestHandler\",\n   [junit4]    >         \"startup\":\"lazy\"}}}}\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([59310820B646978D:D16537FA18BAFA75]:0)\n   [junit4]    > \tat org.apache.solr.core.TestSolrConfigHandler.testForResponseElement(TestSolrConfigHandler.java:399)\n   [junit4]    > \tat org.apache.solr.core.TestSolrConfigHandler.reqhandlertests(TestSolrConfigHandler.java:189)\n   [junit4]    > \tat org.apache.solr.handler.TestSolrConfigHandlerCloud.testReqHandlerAPIs(TestSolrConfigHandlerCloud.java:90)\n   [junit4]    > \tat org.apache.solr.handler.TestSolrConfigHandlerCloud.test(TestSolrConfigHandlerCloud.java:76)\n\n\n\nThe root cause seems to be the following:\n\n   [junit4]   2> 1014079 T3226 oasc.ZkController$WatcherImpl$1.run WARN listener throws error org.apache.solr.common.SolrException: Unable to reload core [collection1]\n   [junit4]   2> \tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:615)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore$11.run(SolrCore.java:2696)\n   [junit4]   2> \tat org.apache.solr.cloud.ZkController$WatcherImpl$1.run(ZkController.java:2294)\n   [junit4]   2> Caused by: org.apache.solr.common.SolrException: Could not load conf for core collection1: Error loading solr config from solrconfig.xml\n   [junit4]   2> \tat org.apache.solr.core.ConfigSetService.getConfig(ConfigSetService.java:66)\n   [junit4]   2> \tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:608)\n   [junit4]   2> \t... 2 more\n   [junit4]   2> Caused by: org.apache.solr.common.SolrException: Error loading solr config from solrconfig.xml\n   [junit4]   2> \tat org.apache.solr.core.SolrConfig.readFromResourceLoader(SolrConfig.java:167)\n   [junit4]   2> \tat org.apache.solr.core.ConfigSetService.createSolrConfig(ConfigSetService.java:80)\n   [junit4]   2> \tat org.apache.solr.core.ConfigSetService.getConfig(ConfigSetService.java:61)\n   [junit4]   2> \t... 3 more\n   [junit4]   2> Caused by: java.io.IOException: Error opening /configs/conf1/solrconfig.xml\n   [junit4]   2> \tat org.apache.solr.cloud.ZkSolrResourceLoader.openResource(ZkSolrResourceLoader.java:88)\n   [junit4]   2> \tat org.apache.solr.core.SolrResourceLoader.openConfig(SolrResourceLoader.java:309)\n   [junit4]   2> \tat org.apache.solr.core.Config.<init>(Config.java:122)\n   [junit4]   2> \tat org.apache.solr.core.Config.<init>(Config.java:92)\n   [junit4]   2> \tat org.apache.solr.core.SolrConfig.<init>(SolrConfig.java:180)\n   [junit4]   2> \tat org.apache.solr.core.SolrConfig.readFromResourceLoader(SolrConfig.java:158)\n   [junit4]   2> \t... 5 more\n   [junit4]   2> Caused by: org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /configs/conf1/solrconfig.xml\n   [junit4]   2> \tat org.apache.zookeeper.KeeperException.create(KeeperException.java:127)\n   [junit4]   2> \tat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n   [junit4]   2> \tat org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1155)\n\n\n\nCore load/reload etc is not well tested in the face of zk session expiration I guess. We should add some (separate) tests for this sort of thing. ",
            "id": "comment-14321702"
        },
        {
            "date": "2015-02-14T21:48:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1659860 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1659860 ]\n\nSOLR-6924: messageformat requires strings ",
            "id": "comment-14321721"
        },
        {
            "date": "2015-02-14T21:51:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1659861 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1659861 ]\n\nSOLR-6924: messageformat requires strings ",
            "id": "comment-14321724"
        },
        {
            "date": "2015-03-15T20:25:58+0000",
            "author": "Yonik Seeley",
            "content": "Just hit one of these failures myself and thought it was my code... ugh. ",
            "id": "comment-14362541"
        },
        {
            "date": "2015-03-24T18:39:47+0000",
            "author": "Noble Paul",
            "content": "Make the watches more robust , so that reconnect will fire even listeners and try reload again ",
            "id": "comment-14378347"
        },
        {
            "date": "2015-03-25T18:19:46+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669195 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1669195 ]\n\nSOLR-6924: conf node listening made more robust to take care of session expiry and reconnect ",
            "id": "comment-14380400"
        },
        {
            "date": "2015-03-25T19:03:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669209 from Noble Paul in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1669209 ]\n\nSOLR-6924: conf node listening made more robust to take care of session expiry and reconnect ",
            "id": "comment-14380531"
        },
        {
            "date": "2015-03-25T22:47:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669240 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1669240 ]\n\nSOLR-6924: conf node listening made more robust to take care of session expiry and reconnect ",
            "id": "comment-14380950"
        },
        {
            "date": "2015-03-26T00:33:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669245 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1669245 ]\n\nSOLR-6924: removing double listening of nodes ",
            "id": "comment-14381117"
        },
        {
            "date": "2015-03-26T00:57:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669246 from Noble Paul in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1669246 ]\n\nSOLR-6924: removing the accidental commit. Will do it if a 5.01 comes up ",
            "id": "comment-14381149"
        },
        {
            "date": "2015-03-31T07:38:12+0000",
            "author": "Noble Paul",
            "content": "New fix that would invoke a refresh command to each replica to ensure that they are all updated to the latest config version. This is the same strategy used by schema reloads as well ",
            "id": "comment-14388182"
        },
        {
            "date": "2015-03-31T15:48:34+0000",
            "author": "Timothy Potter",
            "content": "Seems like waitForAllReplicasState is doing the same thing as ManagedIndexSchema#waitForSchemaZkVersionAgreement? If so, we should fix the code to use 1 implementation vs. having 2 doing the same thing albeit a little differently. ",
            "id": "comment-14388731"
        },
        {
            "date": "2015-03-31T16:18:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1670381 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1670381 ]\n\nSOLR-6924: The config API forcefully refreshes all replicas in the collection to ensure all are\n  updated ",
            "id": "comment-14388772"
        },
        {
            "date": "2015-03-31T16:27:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1670382 from Noble Paul in branch 'dev/branches/lucene_solr_5_1'\n[ https://svn.apache.org/r1670382 ]\n\nSOLR-6924: The config API forcefully refreshes all replicas in the collection to ensure all are\n  updated ",
            "id": "comment-14388789"
        },
        {
            "date": "2015-03-31T16:34:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1670383 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1670383 ]\n\nSOLR-6924: The config API forcefully refreshes all replicas in the collection to ensure all are\n  updated ",
            "id": "comment-14388800"
        },
        {
            "date": "2015-04-15T00:30:38+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495331"
        }
    ]
}