{
    "id": "SOLR-10486",
    "title": "Add Length Conversion Evaluators",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Based on the work in SOLR-10485 I think it makes sense to add Conversion evaluators. I think a good place to start is with the conversions listed here:\n\nhttps://www.learner.org/interactives/metric/conversion_chart.html#1\n\nThis ticket will add length conversions and lay down the initial syntax.\n\nSample syntax:\n\n\nselect(eval(), convert(inches, meters, 22) as meters)\n\n\n\nThis will return a single tuple with 22 inches converted to meters.",
    "attachments": {
        "SOLR-10486.patch": "https://issues.apache.org/jira/secure/attachment/12863313/SOLR-10486.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-13T17:25:38+0000",
            "content": "Simple patch with Length conversions ",
            "author": "Joel Bernstein",
            "id": "comment-15967926"
        },
        {
            "date": "2017-04-13T22:26:24+0000",
            "content": "The switch clauses in \n\nevaluate(....)\n\n result in the same code path for every tuple in the stream. It would be more efficient to construct a lambda with the appropriate code during construction of this class (or on open) and execute that in evaluate.\n\nAlso, the exception (for invalid conversion) would be thrown before reading a single tuple. ",
            "author": "Dennis Gove",
            "id": "comment-15968331"
        },
        {
            "date": "2017-04-13T22:51:07+0000",
            "content": "Yep, makes sense. I'll adjust the patch. ",
            "author": "Joel Bernstein",
            "id": "comment-15968353"
        },
        {
            "date": "2017-04-13T23:42:10+0000",
            "content": "New patch using lambdas with tests. ",
            "author": "Joel Bernstein",
            "id": "comment-15968399"
        },
        {
            "date": "2017-04-13T23:47:00+0000",
            "content": "Dennis Gove, one thing to notice about the new patch is an adjustment I made to how the SelectStream is handling exceptions when the Evaluators are constructed. The way it was before exceptions during Evaluator initialization were being swallowed. So I added a specific EvaluatorException that would be thrown rather then swallowed. ",
            "author": "Joel Bernstein",
            "id": "comment-15968401"
        },
        {
            "date": "2017-04-13T23:58:09+0000",
            "content": "Aww, that's horrible. I can't believe I did that. Good catch! ",
            "author": "Dennis Gove",
            "id": "comment-15968413"
        },
        {
            "date": "2017-04-15T15:57:10+0000",
            "content": "No worries, my use of the switch statement in the read() method was worse! Thanks for bringing up the lambda solution.\n\nIf you like the approach using the EvaluatorException then we can create a ticket to throw this exception in the constructors of all existing evaluators. ",
            "author": "Joel Bernstein",
            "id": "comment-15970006"
        },
        {
            "date": "2017-04-17T15:13:28+0000",
            "content": "Commit 8417307c63362806031fda14512ff373559cc65a in lucene-solr's branch refs/heads/master from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8417307 ]\n\nSOLR-10486: Add Length Conversion Evaluators ",
            "author": "ASF subversion and git services",
            "id": "comment-15971136"
        },
        {
            "date": "2017-04-17T15:13:32+0000",
            "content": "Commit 66715a47619ec9c4204e4be44f3379f0cf2d72d5 in lucene-solr's branch refs/heads/master from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=66715a4 ]\n\nSOLR-10486: Fix precommit ",
            "author": "ASF subversion and git services",
            "id": "comment-15971137"
        },
        {
            "date": "2017-04-18T15:57:12+0000",
            "content": "A bit late but a thought here: Isn't there an existing unit conversion library we could use here instead of reinventing the wheel? We might get other unit conversions for free besides just length (pressure, weight, etc) ",
            "author": "Kevin Risden",
            "id": "comment-15972964"
        },
        {
            "date": "2017-04-18T16:09:38+0000",
            "content": "These are pretty simple and just to kick things off. We can always put in a conversion library going forward.\n\nThe conversions are part of a larger strategy for supporting natural language queries. So I just wanted something to get started with. ",
            "author": "Joel Bernstein",
            "id": "comment-15972979"
        }
    ]
}