{
    "id": "SOLR-207",
    "title": "snappuller inefficient finding latest snapshot",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [
            "replication (scripts)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "snapinstaller (and snappuller) do the following to find the latest snapshot:\nname=`find ${data_dir} -name snapshot.* -print|grep -v wip|sort -r|head -1`\n\nThis recurses into all of the snapshot directories, doing much more disk-io than is necessary.\nI think it is the cause of bloated kernel memory usage we have seen on some of our Linux boxes, caused\nby kernel dentry and inode caches.   Those caches compete with buffer cache (caching the actual data of the index)\nand can thus decrease performance.",
    "attachments": {
        "find_maxdepth.patch": "https://issues.apache.org/jira/secure/attachment/12355433/find_maxdepth.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12488410",
            "date": "2007-04-12T15:49:50+0000",
            "content": "uses \"-maxdepth 1\" to avoid recursion.\n\nBill - does this look OK? "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12488413",
            "date": "2007-04-12T15:50:48+0000",
            "content": "IIUC the snapshot directories are named like\n\n  snapshot.YYYYMMDDHHMMSS\n\nand they are all under the same parent directory.\n\nIf that's the case, then doing\n\n  ls -rt ${data_dir}/snapshot.* | head -1\n\nwill return the name of the most recent directory, efficiently. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12488418",
            "date": "2007-04-12T16:20:15+0000",
            "content": "That's close to the way it was done in the past, but some people ran into problems because of shell restrictions w.r.t. number or size of the argments passed to the process (because the shell expands the list). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12488420",
            "date": "2007-04-12T16:29:07+0000",
            "content": "Although, another alternative that doesn't have the shell expansion problem would be\n\nls -r ${data_dir} | grep snapshot.  | grep -v wip | head -1\n "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12488468",
            "date": "2007-04-12T18:44:41+0000",
            "content": "I think find -maxdepth is not supported on Solaris. And the -t option in my previous example was obviously wrong.\n\nI'm not sure if ls -r sorts by filename everywhere (but I have no evidence that it does not).\n\nThe most portable version might be\n\n  ls ${data_dir} | grep snapshot. | grep -v wip | sort -r | head -1  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12488469",
            "date": "2007-04-12T18:47:35+0000",
            "content": "I tried both versions out, and the \"find\" version was quicker (on Linux at least).\nSystem time was about the same, but \"ls\" had much higher user time.\n\n$ time find . -maxdepth 1 -name 'snapshot.*' | grep -v wip | head -1\n./snapshot.20070411235957\n\nreal    0m0.009s\nuser    0m0.002s\nsys     0m0.008s\n\n$ time ls -r . | grep snapshot. | grep -v wip | head -1\nsnapshot.20070412114504\n\nreal    0m0.050s\nuser    0m0.043s\nsys     0m0.009s\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12488485",
            "date": "2007-04-12T19:40:46+0000",
            "content": "> I think find -maxdepth is not supported on Solaris\n\nSigh... back to ls then. "
        },
        {
            "author": "Bill Au",
            "id": "comment-12488491",
            "date": "2007-04-12T20:28:10+0000",
            "content": "I confirmed that find -maxdepth does not work on Solaris.  So it is back to ls.  We should be OK as long as we don't use any wildcard that causes expansion. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12488515",
            "date": "2007-04-12T22:02:15+0000",
            "content": "Updated patch:\n\n\tswitches back to \"ls\",\n\ttries to determine if \"maxdepth\" is supported for the cleanup scripts that need to find -mtime\n\tin snappuller, make the master find the latest snapshot instead of sending the complete \"ls\" across the network.\n\n\n\nThis has not yet been tested. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12488516",
            "date": "2007-04-12T22:03:32+0000",
            "content": "re-attaching with ASF perms (in the older JIRA version, the \"grant license\" option was first, and now it is last... hence I keep clicking the incorrect one) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12489284",
            "date": "2007-04-17T02:26:44+0000",
            "content": "Tested and committed. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589289",
            "date": "2008-04-15T23:44:42+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.2\n\n\n\nThe Fix Version for all 39 issues found was set to 1.2, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman2 "
        }
    ]
}