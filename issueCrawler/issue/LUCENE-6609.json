{
    "id": "LUCENE-6609",
    "title": "FieldCacheSource (or it's subclasses) should override getSortField",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "ValueSource defines the following method...\n\n\n  public SortField getSortField(boolean reverse) {\n    return new ValueSourceSortField(reverse);\n  }\n\n\n\n...where ValueSourceSortField builds up a ValueSourceComparator containing a double[] based on the FunctionValues of the original ValueSource.\n\nmeanwhile, the abstract FieldCacheSource exists as a base implementation for classes like IntFieldSource and DoubleFieldSource which wrap a ValueSource around DocValues for the specified field.\n\nBut neither FieldCacheSource nor any of it's subclasses override the getSortField(boolean) method \u2013 so attempting to sort on something like an IntFieldSource winds up using a bunch of ram to build that double[] to give users a less accurate sort (because of casting) then if they just sorted directly on the field.\n\nis there any good reason why FieldCacheSource subclases like IntFieldSource shouldn't all override getSortField with something like...\n\n\n  public SortField getSortField(boolean reverse) {\n    return new SortField(field, Type.INT, reverse);\n  }\n\n\n\n?",
    "attachments": {
        "LUCENE-6609.patch": "https://issues.apache.org/jira/secure/attachment/12748549/LUCENE-6609.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14648066",
            "author": "Hoss Man",
            "date": "2015-07-30T18:22:39+0000",
            "content": "I think the same thing would make sense for SortedSetFieldSource.getSortField() \u2013 it can return an instance of SortedSetSortField. "
        },
        {
            "id": "comment-14652642",
            "author": "Hoss Man",
            "date": "2015-08-03T22:07:04+0000",
            "content": "here's a patch with the changes and some basic tests (both whitebox at the lucene level and more pragmatic at the solr level)\n\nOnly one existing test needed changed in this patch: TestFunctionQuerySort.testSearchAfterWhenSortingByFunctionValues was assumed the sort values in the FieldDoc would be Doubles when using an IntFieldSource as the basis of the Sort \u2013 to keep the spirit of the original test, I wrapped that IntFieldSource in a SumFloatFunction. "
        },
        {
            "id": "comment-14652653",
            "author": "Adrien Grand",
            "date": "2015-08-03T22:18:21+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14652757",
            "author": "ASF subversion and git services",
            "date": "2015-08-03T23:13:24+0000",
            "content": "Commit 1693979 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1693979 ]\n\nLUCENE-6609: Add getSortField impls to many subclasses of FieldCacheSource which return the most direct SortField implementation "
        },
        {
            "id": "comment-14652759",
            "author": "Hoss Man",
            "date": "2015-08-03T23:14:44+0000",
            "content": "thanks for the review adrian.\n\n(running full tests and precommit on 5x now) "
        },
        {
            "id": "comment-14652844",
            "author": "ASF subversion and git services",
            "date": "2015-08-04T00:23:14+0000",
            "content": "Commit 1693987 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1693987 ]\n\nLUCENE-6609: Add getSortField impls to many subclasses of FieldCacheSource which return the most direct SortField implementation (merge r1693979) "
        },
        {
            "id": "comment-14653887",
            "author": "Hoss Man",
            "date": "2015-08-04T16:12:23+0000",
            "content": "causing some randomized test failures due to codecs that don't support max.\n\nreopening until fixed. "
        },
        {
            "id": "comment-14654001",
            "author": "ASF subversion and git services",
            "date": "2015-08-04T17:19:57+0000",
            "content": "Commit 1694090 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1694090 ]\n\nLUCENE-6609: refactor Solr tests to isolate SortedSetSelector dependent code into a test that SuppressCodecs the problematic docvalues formats "
        },
        {
            "id": "comment-14654034",
            "author": "ASF subversion and git services",
            "date": "2015-08-04T17:48:42+0000",
            "content": "Commit 1694092 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1694092 ]\n\nLUCENE-6609: refactor Solr tests to isolate SortedSetSelector dependent code into a test that SuppressCodecs the problematic docvalues formats (merge r1694090) "
        },
        {
            "id": "comment-14713148",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:05:54+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}