{
    "id": "LUCENE-3832",
    "title": "Port BasicAutomata.stringUnion from Brics to Lucene",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "core/FSTs"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Brics has my code to build Automaton from a set of sorted strings in one step (Daciuk/Mihov's algorithm again). This should be easily portable to Lucene and is quite useful.",
    "attachments": {
        "LUCENE-3832.patch": "https://issues.apache.org/jira/secure/attachment/12516345/LUCENE-3832.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-02-28T16:01:04+0000",
            "content": "A patch with ported stringunion. ",
            "author": "Dawid Weiss",
            "id": "comment-13218294"
        },
        {
            "date": "2012-02-28T16:03:41+0000",
            "content": "+1\n\nThen we can remove the class from test-framework and cutover all uses to this new one? ",
            "author": "Michael McCandless",
            "id": "comment-13218297"
        },
        {
            "date": "2012-02-28T16:31:39+0000",
            "content": "Huh? Sorry, I don't get you \u2013 what do you mean? ",
            "author": "Dawid Weiss",
            "id": "comment-13218329"
        },
        {
            "date": "2012-02-28T16:39:24+0000",
            "content": "In test-framework is a helper method to build a Daciuk/Mihov automaton.\n\nWith the patch, this somehow makes TermsFilter from contrib obsolete or should we maybe port that to an AutomatonQuery / MTQWF(AutomatonQuery)? If it simply subclasses AQ it could be more performant if the array has terms which are following each other in terms index. ",
            "author": "Uwe Schindler",
            "id": "comment-13218338"
        },
        {
            "date": "2012-02-28T16:42:27+0000",
            "content": "Sorry, what I meant was: we already have (and use, from tests only) this algorithm, in lucene/test-framework/src/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder.java.\n\nI agree we should promote it to core: it seems quite useful!\n\nActually I think there are slight differences vs the attached patch (looks like Robert cutover to CharsRef/BytesRef), so I guess we need to reconcile those... or maybe just move the existing one from test-framework to StringUnionOperations (if there are no important differences  ). ",
            "author": "Michael McCandless",
            "id": "comment-13218341"
        },
        {
            "date": "2012-02-28T19:05:47+0000",
            "content": "I don't know if the original version is a derivative of what I placed in the patch or not (I wrote the one originally in brics). There will be ordering differences between the one based on char and UTF8 so it's not exactly the same; somebody should perhaps look at it from a wider perspective. If you have spare cycles, feel free to take over \u2013 this was really a 5 minute effort and I can't take a deeper look at it at the moment. ",
            "author": "Dawid Weiss",
            "id": "comment-13218485"
        },
        {
            "date": "2012-02-29T03:46:34+0000",
            "content": "The version in test-framework was something i quickly hacked together \n(converted Dawid's implementation to binary order) because some tests \nadded for blocktree (TestTermsEnum?) were really slow without it. ",
            "author": "Robert Muir",
            "id": "comment-13218880"
        },
        {
            "date": "2012-02-29T07:25:43+0000",
            "content": "We should then just move Robert's port instead of what I pulled from Brics. UTF8 order is omnipresent in Lucene so it should really be that (possibly with a method accepting an iterator/iterable of char sequences and sorting internally?). ",
            "author": "Dawid Weiss",
            "id": "comment-13218959"
        },
        {
            "date": "2012-02-29T13:45:27+0000",
            "content": "We should then just move Robert's port instead of what I pulled from Brics.\n\n+1, as long as we can reconcile that the diffs are not \"meaningful\"   Maybe you fixed a bug since we added this to Lucene!\n\nEG a small diff is your version does the .sort() for the caller, but Lucene's version requires caller do the .sort()... ",
            "author": "Michael McCandless",
            "id": "comment-13219201"
        },
        {
            "date": "2012-03-06T02:40:48+0000",
            "content": "removing 3.6, automaton package doesnt exist there. ",
            "author": "Robert Muir",
            "id": "comment-13222946"
        },
        {
            "date": "2012-06-28T09:04:28+0000",
            "content": "A patch moving DaciukMihovAutomatonBuilder to automata package and hiding it effectively under BasicAutomata.makeStringUnion.\n\nMinor cleanups. ",
            "author": "Dawid Weiss",
            "id": "comment-13402944"
        },
        {
            "date": "2012-06-28T09:04:55+0000",
            "content": "Passes tests for me, I'll commit it in soon if there are no objections. ",
            "author": "Dawid Weiss",
            "id": "comment-13402945"
        },
        {
            "date": "2012-06-28T09:44:16+0000",
            "content": "I don't like the one that takes CharSequence and makes a new arraylist and sorts  ",
            "author": "Robert Muir",
            "id": "comment-13402958"
        },
        {
            "date": "2012-06-28T09:57:34+0000",
            "content": "I don't like many things. For example the fact that it accepts UTF-8 but returns an automaton with codepoints on transitions \u2013 this isn't intuitive \n\nI think that method fits well with other methods in that class (accepting strings). Maybe it's a good idea to cutover to utf8 entirely but just having Collection<utf8> and everything else on char sequences seems odd to me. ",
            "author": "Dawid Weiss",
            "id": "comment-13402969"
        },
        {
            "date": "2012-06-28T10:01:01+0000",
            "content": "\nFor example the fact that it accepts UTF-8 but returns an automaton with codepoints on transitions \u2013 this isn't intuitive\n\nWhats unintuitive? UTF-8 and UTF-32 share the same order. ",
            "author": "Robert Muir",
            "id": "comment-13402972"
        },
        {
            "date": "2012-06-28T10:02:19+0000",
            "content": "You pass an array of bytes and get codepoint (ints) as transitions. ",
            "author": "Dawid Weiss",
            "id": "comment-13402974"
        },
        {
            "date": "2012-06-28T10:04:35+0000",
            "content": "So how is passing an array of shorts better? ",
            "author": "Robert Muir",
            "id": "comment-13402975"
        },
        {
            "date": "2012-06-28T10:09:24+0000",
            "content": "My whining doesn't mean I want to change this because I realize most of the data in Lucene already comes as UTF8 and it wouldn't make sense to convert it back and forth. This doesn't change my feeling that it isn't intuitive when you look at the method's signature.\n\nOf course it's explained in the javadoc what it actually does, but so is conversion/ sorting in that other method that you don't like (and that I think is generally useful considering the rest of this package). ",
            "author": "Dawid Weiss",
            "id": "comment-13402979"
        },
        {
            "date": "2012-06-29T09:48:32+0000",
            "content": "It'd be possible to avoid the sort and still make makeUnionOfStrings(Collection<String>) possible if we also exposed Utf16AsUtf8 comparator... Then the automaton builder could accept either byte[] or char[] and just do its job without any additional overhead of copying. \n\nOk, I'll remove that method if you don't like it. If there's a need we can revert it using the trick above. ",
            "author": "Dawid Weiss",
            "id": "comment-13403805"
        },
        {
            "date": "2012-07-11T23:08:39+0000",
            "content": "hoss20120711-manual-post-40alpha-change ",
            "author": "Hoss Man",
            "id": "comment-13412327"
        }
    ]
}