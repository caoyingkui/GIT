{
    "id": "LUCENE-5436",
    "title": "RefrenceManager#accquire can result in infinite loop if manager resource is abused outside of the manager",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/search"
        ],
        "affect_versions": "4.6.1,                                            4.7,                                            6.0",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "I think I found a bug that can cause the ReferenceManager to stick in an infinite loop if the managed reference is decremented outside of the manager without a corresponding increment. I think this is pretty bad since the debugging of this is a mess and we should rather throw ISE instead.",
    "attachments": {
        "LUCENE-5436.patch": "https://issues.apache.org/jira/secure/attachment/12627369/LUCENE-5436.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13893527",
            "author": "Simon Willnauer",
            "content": "here is a patch and a test that shows the problem ",
            "date": "2014-02-06T16:56:02+0000"
        },
        {
            "id": "comment-13893577",
            "author": "Michael McCandless",
            "content": "Hmm, sneaky.  So we are adding best-effort catching of this mis-use?\n\nInstead of isClosed can we add protected getRefCount?  That's just more consistent with the current abstract methods we already have?\n\nThere's a small typo in the exception message (then -> the). ",
            "date": "2014-02-06T17:47:44+0000"
        },
        {
            "id": "comment-13893684",
            "author": "Simon Willnauer",
            "content": "Hmm, sneaky. So we are adding best-effort catching of this mis-use?\nyeah this is nothing else than preventing the manager from going into an infinite loop.\n\nInstead of isClosed can we add protected getRefCount? That's just more consistent with the current abstract methods we already have?\nyeah I think that is a better name. ",
            "date": "2014-02-06T19:20:18+0000"
        },
        {
            "id": "comment-13893698",
            "author": "Simon Willnauer",
            "content": "here is a new patch using getRefCount... ",
            "date": "2014-02-06T19:29:39+0000"
        },
        {
            "id": "comment-13893702",
            "author": "Michael McCandless",
            "content": "+1, thanks Simon. ",
            "date": "2014-02-06T19:32:20+0000"
        },
        {
            "id": "comment-13893721",
            "author": "Simon Willnauer",
            "content": "here is a patch with a changes entry... I will commit shortly ",
            "date": "2014-02-06T19:58:38+0000"
        },
        {
            "id": "comment-13893728",
            "author": "ASF subversion and git services",
            "content": "Commit 1565429 from Simon Willnauer in branch 'dev/trunk'\n[ https://svn.apache.org/r1565429 ]\n\nLUCENE-5436: RefrenceManager#accquire can result in infinite loop if manager resource is abused outside of the manager ",
            "date": "2014-02-06T20:09:37+0000"
        },
        {
            "id": "comment-13893739",
            "author": "ASF subversion and git services",
            "content": "Commit 1565430 from Simon Willnauer in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1565430 ]\n\nLUCENE-5436: RefrenceManager#accquire can result in infinite loop if manager resource is abused outside of the manager ",
            "date": "2014-02-06T20:14:08+0000"
        },
        {
            "id": "comment-13893742",
            "author": "Simon Willnauer",
            "content": "committed to 4x and trunk ",
            "date": "2014-02-06T20:16:40+0000"
        }
    ]
}