{
    "id": "SOLR-8052",
    "title": "Tests using MiniKDC do not work with Java 9 Jigsaw",
    "details": {
        "components": [
            "Authentication"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "As described in my status update yesterday, there are some problems in dependencies shipped with Solr that don't work with Java 9 Jigsaw builds.\n\norg.apache.solr.cloud.SaslZkACLProviderTest.testSaslZkACLProvider\n\n\n   [junit4]    > Throwable #1: java.lang.RuntimeException: java.lang.IllegalAccessException: Class org.apache.hadoop.minikdc.MiniKdc can not access a member of class sun.security.krb5.Config (module java.security.jgss) with modifiers \"public static\", module java.security.jgss does not export sun.security.krb5 to <unnamed module @6d2a209c>\n   [junit4]    >        at org.apache.solr.cloud.SaslZkACLProviderTest$SaslZkTestServer.run(SaslZkACLProviderTest.java:211)\n   [junit4]    >        at org.apache.solr.cloud.SaslZkACLProviderTest.setUp(SaslZkACLProviderTest.java:81)\n   [junit4]    >        at java.lang.Thread.run(java.base@9.0/Thread.java:746)\n   [junit4]    > Caused by: java.lang.IllegalAccessException: Class org.apache.hadoop.minikdc.MiniKdc can not access a member of class sun.security.krb5.Config (module java.security.jgss) with modifiers \"public static\", module java.security.jgss does not export sun.security.krb5 to <unnamed module @6d2a209c>\n   [junit4]    >        at java.lang.reflect.AccessibleObject.slowCheckMemberAccess(java.base@9.0/AccessibleObject.java:384)\n   [junit4]    >        at java.lang.reflect.AccessibleObject.checkAccess(java.base@9.0/AccessibleObject.java:376)\n   [junit4]    >        at org.apache.hadoop.minikdc.MiniKdc.initKDCServer(MiniKdc.java:478)\n   [junit4]    >        at org.apache.hadoop.minikdc.MiniKdc.start(MiniKdc.java:320)\n   [junit4]    >        at org.apache.solr.cloud.SaslZkACLProviderTest$SaslZkTestServer.run(SaslZkACLProviderTest.java:204)\n   [junit4]    >        ... 38 moreThrowable #2: java.lang.NullPointerException\n   [junit4]    >        at org.apache.solr.cloud.ZkTestServer$ZKServerMain.shutdown(ZkTestServer.java:334)\n   [junit4]    >        at org.apache.solr.cloud.ZkTestServer.shutdown(ZkTestServer.java:526)\n   [junit4]    >        at org.apache.solr.cloud.SaslZkACLProviderTest$SaslZkTestServer.shutdown(SaslZkACLProviderTest.java:218)\n   [junit4]    >        at org.apache.solr.cloud.SaslZkACLProviderTest.tearDown(SaslZkACLProviderTest.java:116)\n   [junit4]    >        at java.lang.Thread.run(java.base@9.0/Thread.java:746)\n\n\n\nThis is really bad, bad, bad! All security related stuff should never ever be reflected on!\nSo we have to open issue in MiniKdc project so they remove the \"hacks\". Elasticsearch had\nsimilar problems with Amazon's AWS API. The worked around with a funny hack in their SecurityPolicy\n(https://github.com/elastic/elasticsearch/pull/13538). But as Solr does not run with SecurityManager\nin production, there is no way to do that. \n\nWe should report issue on the MiniKdc project, so they fix their code and remove the really bad reflection on Java's internal classes.\n\nFYI, my conclusion from yesterday.",
    "attachments": {
        "SOLR-8052.patch": "https://issues.apache.org/jira/secure/attachment/12854342/SOLR-8052.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-15T21:25:50+0000",
            "author": "Anshum Gupta",
            "content": "Hi Uwe Schindler, I don't see how this is really related to Kerberos auth plugin. Was that a mistake ? ",
            "id": "comment-14746251"
        },
        {
            "date": "2015-09-16T07:16:02+0000",
            "author": "Uwe Schindler",
            "content": "Hi Anshum,\n\nit might be related to something else, I have just seen that this is related to \"sun.security.krb5\" (see Javadocs: \"This class maintains key-value pairs of Kerberos configurable constants from configuration file or from user specified system properties\") and \"MiniKDC\" (Key Districbution Center\", which is also related to Kerberos).\n\nIf you know better, could you please just correct the issue description and summary to correctly say what's wrong. This was just manual \"text mining\" on keywords based on the stack trace.\n\nIt might also be good to find out if this is just a test issue or a general problem. Maybe it is only that this uses MiniKDC in tests but not in production. But the underlying issue is MiniKDC, so somebody who knows the project more could inform them about the issue. ",
            "id": "comment-14747055"
        },
        {
            "date": "2015-09-16T13:45:21+0000",
            "author": "Mark Miller",
            "content": "Ping Gregory Chanan.\n\nAFAIK, MiniKdc is a test class. The Hadoop projects have many Mini* classes that make it easier to spin up a cluster to run against in tests. ",
            "id": "comment-14768946"
        },
        {
            "date": "2015-09-16T14:05:57+0000",
            "author": "Uwe Schindler",
            "content": "OK, so this is a test-only issue. This is what I expected. ",
            "id": "comment-14768981"
        },
        {
            "date": "2015-09-16T15:27:33+0000",
            "author": "Anshum Gupta",
            "content": "You beat me to it Uwe  \nThanks for fixing the summary. MiniKDC is a test class to be used for spinning up an embedded KDC server on the fly for security testing. It isn't used for anything else, and AFAIK this is the only way to test anything that needs KDC without actually spinning up a KDC server. ",
            "id": "comment-14790551"
        },
        {
            "date": "2016-03-19T12:58:48+0000",
            "author": "Uwe Schindler",
            "content": "The test also fails quite often with conventional Java 9 builds, so I disabled it when Java 9 is detected. ",
            "id": "comment-15202752"
        },
        {
            "date": "2017-02-24T01:19:11+0000",
            "author": "Hoss Man",
            "content": "\nI've been digging into some of the Java9 related SOLR jiras \u2013 starting with the kerberos based test problems \u2013 to try and figure out if these really are test only bugs and/or if there is anything we can do about making things work better.\n\nBased on my initial reading/experimenting, I think we should replace MiniKdc (from hadoop's test infrastrcture) with SimpleKdcServer (from the apache kerby project)...\n\n\n\tSimpleKdcServer does not appear to have reflection related bugs that cause problems under jigsaw like MiniKdc does\n\tSimpleKdcServer does not suffer from the same \"can't use multiple nodes\" problem (HADOOP-9893) that has required TestMiniSolrCloudClusterKerberos to be @Ignored since it was created.\n\t\n\t\tI was able to add multiple solr nodes to TestSolrCloudWithKerberosAlt w/o problems after switching\n\t\tWith a few other modifications, I was able to get TestMiniSolrCloudClusterKerberos to work as well (details below)\n\t\n\t\n\tIn hadoop's master branch, MiniKdc has been refactored to use SimpleKdcServer internally anyway\n\n\n\nDoing this isn't a silver bullet for the java9/jigsaw related failures (I'll file a new but about that), but it should help us move forward \u2013 and in general seems like an improvement.\n\n\n\nThe attached patch is a starting point for this change.\n\nOne thing I'm not particularly happy with here is that in order to get it to pass, I had to modify TestMiniSolrCloudClusterKerberos to create a single KerberosTestServices instance in the @BeforeClass method, instead of in a regular @Before method.\n\nIn and of itself, this change isn't neccessarily bad \u2013 it just means we only start one Kerberos server instead of one per method.\n\nWhat concerns me is that w/o this change, only the first test method would ever pass, and subsequent test methods would log/throw errors from ZK \u2013 and running any single test method with -Dtests.method would (seemingly) always pass.\n\nMy initial suspicion was that something in SimpleKdcServer, or in our KerberosTestServices wrapper, wasn't \"resetting\" the JVM security settings correctly when we shut it down \u2013 but if that were the case I would expect something like ant test -Dtests.jvms=1 -Dtests.class=*Kerber* to fail (even with KerberosTestServices only ever being instnatiated once per test class) when the (sole) Test JVM got to the second test class and instantated a second KerberosTestServices instance.\n\nHowever that doesn't seem to be the case.  For some reason, using only one KerberosTestServices in a test class is fine, regardless of how many test classes using kerberos run in that JVM, but using multiple KerberosTestServices in a single test class causes kerberos failures.\n\nFor the purposes of demonstrating this (in contrast with the changes made in TestMiniSolrCloudClusterKerberos which seem like a good idea either way) I've added a TestHossSanity which works just like TestMiniSolrCloudClusterKerberos except initializes KerberosTestServices on a per test-method basis.\n\nExamples of the types of Kerberose errors it logs (after the first test method succeeds)...\n\n\n...\n   [junit4] <JUnit4> says \u4f60\u597d! Master seed: 6BEDD90DB0D4DC38\n   [junit4] Executing 1 suite with 1 JVM.\n   [junit4] \n   [junit4] Started J0 PID(11220@tray).\n   [junit4] Suite: org.apache.solr.cloud.TestHossSanity\n   [junit4]   2> 0    INFO  (TEST-TestHossSanity.testStopAllStartAll-seed#[6BEDD90DB0D4DC38]) [    ] o.a.s.c.MiniSolrCloudCluster Starting cluster of 5 servers in /home/hossman/lucene/dev/solr/build/solr-core/test/J0/temp/solr.cloud.TestHossSanity_6BEDD90DB0D4DC38-001/tempDir-002\n   [junit4]   2> 11   INFO  (TEST-TestHossSanity.testStopAllStartAll-seed#[6BEDD90DB0D4DC38]) [    ] o.a.s.c.ZkTestServer STARTING ZK TEST SERVER\n\n\n...first test (testStopAllStartAll) proceeds and runs fine...\n\n\n   [junit4] OK      31.2s | TestHossSanity.testStopAllStartAll\n   [junit4]   2> 30989 INFO  (TEST-TestHossSanity.testCollectionCreateWithoutCoresThenDelete-seed#[6BEDD90DB0D4DC38]) [    ] o.a.s.c.MiniSolrCloudCluster Starting cluster of 5 servers in /home/hossman/lucene/dev/solr/build/solr-core/test/J0/temp/solr.cloud.TestHossSanity_6BEDD90DB0D4DC38-001/tempDir-004\n   [junit4]   2> 30989 INFO  (TEST-TestHossSanity.testCollectionCreateWithoutCoresThenDelete-seed#[6BEDD90DB0D4DC38]) [    ] o.a.s.c.ZkTestServer STARTING ZK TEST SERVER\n...\n   [junit4]   2> 30989 INFO  (Thread-100) [    ] o.a.s.c.ZkTestServer client port:0.0.0.0/0.0.0.0:0\n   [junit4]   2> 30990 INFO  (Thread-100) [    ] o.a.s.c.ZkTestServer Starting server\n   [junit4]   2> 30995 INFO  (pool-11-thread-1) [    ] o.a.k.k.k.s.r.KdcRequest Client entry is empty.\n   [junit4]   2> 30995 INFO  (pool-11-thread-1) [    ] o.a.k.k.k.s.r.KdcRequest The preauth data is empty.\n   [junit4]   2> 30995 INFO  (pool-11-thread-1) [    ] o.a.k.k.k.s.KdcHandler KRB error occurred while processing request:Additional pre-authentication required\n   [junit4]   2> 31001 INFO  (pool-11-thread-2) [    ] o.a.k.k.k.s.r.KdcRequest Client entry is empty.\n   [junit4]   2> 31090 INFO  (TEST-TestHossSanity.testCollectionCreateWithoutCoresThenDelete-seed#[6BEDD90DB0D4DC38]) [    ] o.a.s.c.ZkTestServer start zk server on port:34029\n   [junit4]   2> 31098 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.ZooKeeperServer Client failed to SASL authenticate: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: Failure unspecified at GSS-API level (Mechanism level: Checksum failed)]\n   [junit4]   2> 31099 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.ZooKeeperServer Closing client connection due to SASL authentication failure.\n   [junit4]   2> 31099 ERROR (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.NIOServerCnxn Unexpected Exception: \n   [junit4]   2> java.nio.channels.CancelledKeyException\n   [junit4]   2> \tat sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:73)\n   [junit4]   2> \tat sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:77)\n   [junit4]   2> \tat org.apache.zookeeper.server.NIOServerCnxn.sendBuffer(NIOServerCnxn.java:151)\n   [junit4]   2> \tat org.apache.zookeeper.server.NIOServerCnxn.sendResponse(NIOServerCnxn.java:1081)\n   [junit4]   2> \tat org.apache.zookeeper.server.ZooKeeperServer.processPacket(ZooKeeperServer.java:936)\n   [junit4]   2> \tat org.apache.zookeeper.server.NIOServerCnxn.readRequest(NIOServerCnxn.java:373)\n   [junit4]   2> \tat org.apache.zookeeper.server.NIOServerCnxn.readPayload(NIOServerCnxn.java:200)\n   [junit4]   2> \tat org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:244)\n   [junit4]   2> \tat org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:208)\n   [junit4]   2> \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> 31099 WARN  (NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0) [    ] o.a.z.s.NIOServerCnxn Exception causing close of session 0x15a6da2d5a90000 due to java.nio.channels.CancelledKeyException\n\n...etc...\n\n   [junit4] Completed [1/1 (1!)] in 205.89s, 3 tests, 4 errors <<< FAILURES!\n   [junit4] \n   [junit4] \n   [junit4] Tests with failures [seed: 6BEDD90DB0D4DC38]:\n   [junit4]   - org.apache.solr.cloud.TestHossSanity.testCollectionCreateWithoutCoresThenDelete\n   [junit4]   - org.apache.solr.cloud.TestHossSanity.testCollectionCreateSearchDelete\n   [junit4]   - org.apache.solr.cloud.TestHossSanity (suite)\n   [junit4] \n   [junit4] \n   [junit4] JVM J0:     0.43 ..   207.37 =   206.94s\n   [junit4] Execution time total: 3 minutes 27 seconds\n   [junit4] Tests summary: 1 suite, 3 tests, 2 suite-level errors, 2 errors\n\n\n\nIf anyone with more Kerberos knowledge then myself (pretty much anybody!) could look this over and share your thoughts, i'd appreciate it. ",
            "id": "comment-15881700"
        },
        {
            "date": "2017-02-24T01:25:11+0000",
            "author": "Hoss Man",
            "content": "Created SOLR-10199 to track the non-test code problems with using Solr's kerberos features in Java9 (discovered with this patch) ",
            "id": "comment-15881720"
        },
        {
            "date": "2017-03-07T22:43:28+0000",
            "author": "Hoss Man",
            "content": "updated patch, some small cleanups ",
            "id": "comment-15900326"
        },
        {
            "date": "2017-03-21T08:06:13+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "On GNU/Linux, I got the following errors with SimpleKdcServer().\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestHossSanity -Dtests.method=testCollectionCreateWithoutCoresThenDelete -Dtests.seed=BECDD8E860981FA6 -Dtests.slow=true -Dtests.locale=sr-BA -Dtests.timezone=Pacific/Chatham -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   0.08s | TestHossSanity.testCollectionCreateWithoutCoresThenDelete <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Unable to parse:includedir /etc/krb5.conf.d/\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([BECDD8E860981FA6:D0817296FE0CCE7]:0)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.common.Krb5Parser.load(Krb5Parser.java:72)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.common.Krb5Conf.addKrb5Config(Krb5Conf.java:47)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.ClientUtil.getDefaultConfig(ClientUtil.java:94)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.KrbClientBase.<init>(KrbClientBase.java:51)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.KrbClient.<init>(KrbClient.java:38)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.server.SimpleKdcServer.<init>(SimpleKdcServer.java:54)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices.getKdc(KerberosTestServices.java:104)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices.access$000(KerberosTestServices.java:34)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices$Builder.build(KerberosTestServices.java:243)\n   [junit4]    > \tat org.apache.solr.cloud.TestMiniSolrCloudClusterKerberos.setupMiniKdc(TestMiniSolrCloudClusterKerberos.java:92)\n   [junit4]    > \tat org.apache.solr.cloud.TestHossSanity.setupMiniKdc(TestHossSanity.java:83)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestHossSanity -Dtests.method=testStopAllStartAll -Dtests.seed=BECDD8E860981FA6 -Dtests.slow=true -Dtests.locale=sr-BA -Dtests.timezone=Pacific/Chatham -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   0.01s | TestHossSanity.testStopAllStartAll <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Unable to parse:includedir /etc/krb5.conf.d/\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([BECDD8E860981FA6:C8F3C79B21AFB289]:0)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.common.Krb5Parser.load(Krb5Parser.java:72)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.common.Krb5Conf.addKrb5Config(Krb5Conf.java:47)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.ClientUtil.getDefaultConfig(ClientUtil.java:94)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.KrbClientBase.<init>(KrbClientBase.java:51)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.KrbClient.<init>(KrbClient.java:38)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.server.SimpleKdcServer.<init>(SimpleKdcServer.java:54)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices.getKdc(KerberosTestServices.java:104)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices.access$000(KerberosTestServices.java:34)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices$Builder.build(KerberosTestServices.java:243)\n   [junit4]    > \tat org.apache.solr.cloud.TestMiniSolrCloudClusterKerberos.setupMiniKdc(TestMiniSolrCloudClusterKerberos.java:92)\n   [junit4]    > \tat org.apache.solr.cloud.TestHossSanity.setupMiniKdc(TestHossSanity.java:83)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestHossSanity -Dtests.method=testCollectionCreateSearchDelete -Dtests.seed=BECDD8E860981FA6 -Dtests.slow=true -Dtests.locale=sr-BA -Dtests.timezone=Pacific/Chatham -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   0.01s | TestHossSanity.testCollectionCreateSearchDelete <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Unable to parse:includedir /etc/krb5.conf.d/\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([BECDD8E860981FA6:1D37764DE770F503]:0)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.common.Krb5Parser.load(Krb5Parser.java:72)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.common.Krb5Conf.addKrb5Config(Krb5Conf.java:47)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.ClientUtil.getDefaultConfig(ClientUtil.java:94)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.KrbClientBase.<init>(KrbClientBase.java:51)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.client.KrbClient.<init>(KrbClient.java:38)\n   [junit4]    > \tat org.apache.kerby.kerberos.kerb.server.SimpleKdcServer.<init>(SimpleKdcServer.java:54)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices.getKdc(KerberosTestServices.java:104)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices.access$000(KerberosTestServices.java:34)\n   [junit4]    > \tat org.apache.solr.cloud.KerberosTestServices$Builder.build(KerberosTestServices.java:243)\n   [junit4]    > \tat org.apache.solr.cloud.TestMiniSolrCloudClusterKerberos.setupMiniKdc(TestMiniSolrCloudClusterKerberos.java:92)\n   [junit4]    > \tat org.apache.solr.cloud.TestHossSanity.setupMiniKdc(TestHossSanity.java:83)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: leaving temporary files on disk at: /home/ishan/code/lucene-solr/solr/build/solr-core/test/J0/temp/solr.cloud.TestHossSanity_BECDD8E860981FA6-001\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=2030, maxMBSortInHeap=6.996209606328252, sim=RandomSimilarity(queryNorm=false): {}, locale=sr-BA, timezone=Pacific/Chatham\n   [junit4]   2> NOTE: Linux 4.9.13-201.fc25.x86_64 amd64/Oracle Corporation 1.8.0_121 (64-bit)/cpus=4,threads=1,free=92100216,total=116916224\n   [junit4]   2> NOTE: All tests run in this JVM: [TestHossSanity]\n   [junit4] Completed [1/1 (1!)] in 1.10s, 3 tests, 3 errors <<< FAILURES!\n   [junit4] \n   [junit4] \n   [junit4] Tests with failures [seed: BECDD8E860981FA6]:\n   [junit4]   - org.apache.solr.cloud.TestHossSanity.testCollectionCreateWithoutCoresThenDelete\n   [junit4]   - org.apache.solr.cloud.TestHossSanity.testStopAllStartAll\n   [junit4]   - org.apache.solr.cloud.TestHossSanity.testCollectionCreateSearchDelete\n\n\n\nAlas, I would need to look into the internals of Kerby now to figure out why this is happening or how to avoid this. ",
            "id": "comment-15934232"
        },
        {
            "date": "2017-03-21T08:30:25+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Maybe this has been fixed in 1.0.0-RC3. DIRKRB-613 ",
            "id": "comment-15934248"
        },
        {
            "date": "2017-03-21T17:09:43+0000",
            "author": "Hoss Man",
            "content": "On GNU/Linux, I got the following errors with SimpleKdcServer().\n\nInteresting ... I don't have and global /etc/krb5.conf files on my linux system, so i hadn't hit that type of error \u2013 but I also didn't realize anything about SimpleKdcServer was ever looking outside of the work dir specified, so that in and of itself may relate to the the weird problems I was seeing running multiple SimpleKdcServer (ie: if each instance is not 100% self contained for test purposes)\n\nI'll dig deeper into the code and the fix you mentioned in DIRKRB-613 to see if i can work around at least to the point where you can try testing my patch, but hopefully that will also suggest a fix for TestHossSanity as well. ",
            "id": "comment-15934902"
        }
    ]
}