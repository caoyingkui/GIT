{
    "id": "SOLR-92",
    "title": "XML parsing error with resin-3.0.21",
    "details": {
        "affect_versions": "1.2",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When the resin XML parser starts, it gets the following error trying to parse the config file:\n\n[00:25:35.025] Caused by: java.lang.NumberFormatException: empty String\n[00:25:35.025]  at\nsun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:994)\n[00:25:35.025]  at java.lang.Float.parseFloat(Float.java:394)\n[00:25:35.025]  at org.apache.solr.core.Config.getFloat(Config.java:174)\n[00:25:35.025]  at\norg.apache.solr.schema.IndexSchema.readConfig(IndexSchema.java:273)\n\n\nsee: http://www.mail-archive.com/solr-dev@lucene.apache.org/msg01852.html",
    "attachments": {
        "resinXmlParser.patch": "https://issues.apache.org/jira/secure/attachment/12347778/resinXmlParser.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12460583",
            "date": "2006-12-22T20:34:05+0000",
            "content": "simple change moving:\n case Node.ATTRIBUTE_NODE: \n\nto use:\n  nd.getNodeValue() "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12460586",
            "date": "2006-12-22T20:42:28+0000",
            "content": "Thanks Ryan, do we know if this still works with much older resin releases (that the previous patch was supposed to fix)? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12460592",
            "date": "2006-12-22T20:58:57+0000",
            "content": "I just tried it with resin-2.1.17  (2005/12/22)  and it appears to work fine.  I have not tried it with tomcat.  It works with jetty as the tests are run with that correct? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12460632",
            "date": "2006-12-23T02:37:20+0000",
            "content": "I just briefly tried Tomcat 5.5.20, Jetty 5.1, Jetty 6.1rc2 and they all seem to be OK with this change (very brief test... start up, run a single query) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12460675",
            "date": "2006-12-24T00:46:26+0000",
            "content": "should have put this in the bug instead of email...\n\nhttp://www.nabble.com/Schema-Parsing-Failed%2C-fix--tf2868892.html#a8038207\n\n\n\n: : Node.ATTRIBUTE_NODE case so it is treated the same as TEXT_NODE and it\n: : works for resin and the tests pass.\n:\n: Hmmm... yeah, this seems to be a mistake in the DOM-Level-3-Core\n: description of what getText is suppose to do ... it says that for\n: ATTRIBUTE_NODE you should concat all of the children \u2013 but how would an\n: ATTRIBUTE ever have children?\n\nDid some more reading ... according to DOM-Level-3-Core, an Attr's allowed\nchildren are \"Text\" and \"EntityReference\".\n\nXerces2-j NodeImpl..getTextContent duplicates the table from the\nLevel-3-Core docs (which is also in the java 1.5 javadocs for\norg.w3c.dom.Node.getTextContent()) which the notable exception that they\nmove ATTRIBUTE_NODE down into the second row (indicating nodeValue should\nbe used instead of concating the children) ... the impl backs this up\n(AttrImpl inherits getTextContent from NodeImpl, which by default returns\nthis.getNodeValue())\n\nhttp://xerces.apache.org/xerces2-j/javadocs/xerces2/org/apache/xerces/dom/NodeImpl.html#getTextContent()\nhttp://java.sun.com/j2se/1.5.0/docs/api/org/w3c/dom/Node.html#getTextContent()\nhttp://svn.apache.org/viewvc/xerces/java/trunk/src/org/apache/xerces/dom/AttrImpl.java?view=markup\nhttp://svn.apache.org/viewvc/xerces/java/trunk/src/org/apache/xerces/dom/NodeImpl.java?view=markup\n\nFortunately, the DOM Spec says that accessing the Attr.nodeValue is\ndefined to be Attr.value, which is documented as...\n\n        On retrieval, the value of the attribute is returned as a string.\n        Character and general entity references are replaced with their values.\n\n...so even if someone out there is acctually obeying the spec about\ngiving Attr's child nodes, we should still be safe using getNodeValue in\nthe Node.ATTRIBUTE_NODE case since the spec says that needs to work too.\n\n------\n\n...i'll commit this change along with some more comments explaining it "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12462666",
            "date": "2007-01-06T01:38:50+0000",
            "content": "Hmmm... forgot to resolve this, changes commited back in december. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589317",
            "date": "2008-04-15T23:44:45+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.2\n\n\n\nThe Fix Version for all 39 issues found was set to 1.2, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman2 "
        }
    ]
}