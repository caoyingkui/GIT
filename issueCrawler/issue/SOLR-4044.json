{
    "id": "SOLR-4044",
    "title": "CloudSolrServer early connect problems",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "If you call CloudSolrServer.connect() after Zookeeper is up, but before clusterstate, etc. is populated, you will get \"No live SolrServer\" exceptions (line 322 in LBHttpSolrServer):\n\nthrow new SolrServerException(\"No live SolrServers available to handle this request\");\n\n\nfor all requests made even though all the Solr nodes are coming up just fine.",
    "attachments": {
        "SOLR-4044-waitforcluster.patch": "https://issues.apache.org/jira/secure/attachment/12701336/SOLR-4044-waitforcluster.patch",
        "SOLR-4044.patch": "https://issues.apache.org/jira/secure/attachment/12655444/SOLR-4044.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Grant Ingersoll",
            "id": "comment-13510718",
            "date": "2012-12-05T19:49:25+0000",
            "content": "I think this also happens even if connect is called via the process() method.  AFAICT, from reading the code, it is due to ZkStateReader being instantiated once in the connect string, but not really being notified if/when cores/collections are available b/c it doesn't have anything it can set watches on, yet, b/c Solr may not be ready yet.\n\nI will try to write up a test to see if I can reproduce this. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13511428",
            "date": "2012-12-06T14:47:45+0000",
            "content": "Hmmm, so if I'm understanding you correctly, if you start up the CloudSolrServer early, then even after the cluster is ready, the CloudSolrServer never sees it as ready.\n\nIf the issue truly is in ZkStateReader, this may be an issue beyond CloudSolrServer and cause problems in the servers themselves?  Or perhaps the code that creates all the collection template stuff if none exists has been preventing this from being seen?\n\nIf it looks like there is no clusterstate.json it seems like we should have an option to bail out immediately (with an appropriate error message).\n\nDo we also need a mode that waits and retries for a certain amount of time? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13511432",
            "date": "2012-12-06T14:53:03+0000",
            "content": "I think since a core or the overseer is not up yet, the nodes to watch are simply not there - a fix may be as simple as allowing the cloudsolrserver or zkstatereader to create the nodes it's expecting to watch if it doesn't find them. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13511451",
            "date": "2012-12-06T15:20:01+0000",
            "content": "FWIW, my workaround is simply to catch the exception and to recreate a new CloudSolrServer and try again (with some backoff logic). "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13511452",
            "date": "2012-12-06T15:20:45+0000",
            "content": "Also, note, I'm still working to confirm what is happening with a standalone test, but it may take me a bit. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13511485",
            "date": "2012-12-06T16:04:48+0000",
            "content": "a fix may be as simple as allowing the cloudsolrserver or zkstatereader to create the nodes it's expecting to watch if it doesn't find them.\n\nA retry seems much safer... after all, someone could have given the wrong path.  Seems like clients should normally be read-only w.r.t. ZK. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13511538",
            "date": "2012-12-06T17:29:03+0000",
            "content": "Yeah, makes sense. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717417",
            "date": "2013-07-23T18:48:11+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971193",
            "date": "2014-04-16T12:57:25+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-14060069",
            "date": "2014-07-13T10:13:02+0000",
            "content": "Added test to reproduce the issue "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-14339947",
            "date": "2015-02-27T09:44:24+0000",
            "content": "Moving the conversation over from SOLR-7146...\n\nSeems like clients should normally be read-only w.r.t. ZK.\n\nThis isn't the case at the moment - ZkStateReader.createClusterStateWatchersAndUpdate already calls ensureExists() on the aliases and clusterstate.json znodes.  I agree that it sounds like a good idea, though.\n\nMaybe a nicer way forward would be:\n\n\tthrow a 503 SolrServerException if any of the watcher nodes don't exist in ZkStateReader when cCSWAU is called\n\tadd a sugar waitForCluster(timeout) method to CloudSolrClient that will repeatedly check zk for the relevant nodes\n\n\n\nAlso, if we want to really ensure that clients never actually change ZK, we could add a ReadOnlyZkClient that subclasses SolrZkClient and throws UOE on makePath() and setData(), and make CloudSolrClient use that. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-14340008",
            "date": "2015-02-27T11:09:00+0000",
            "content": "Patch with test.  ZkStateReader doesn't try and create any nodes any more, and will throw an exception in createClusterStateWatchersAndUpdate if the relevant nodes aren't there.  Nodes are instead created in ZkController. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-14340342",
            "date": "2015-02-27T16:21:44+0000",
            "content": "Better patch, with some fixes for OverseerTest and ZkStateWriterTest.  All tests pass. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14347594",
            "date": "2015-03-04T21:28:37+0000",
            "content": "I am hesitant to introduce a method called waitForCluster. Can we overload connect with a boolean waitForCluster and timeout parameters instead? "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-14351811",
            "date": "2015-03-07T21:32:02+0000",
            "content": "Can we overload connect with a boolean waitForCluster and timeout parameters instead?\n\nYes, that's nicer.  No need for the boolean as the presence of timeout parameters implies that you're ready to wait.  Here's a patch. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14351892",
            "date": "2015-03-08T04:36:15+0000",
            "content": "+1 "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-14352762",
            "date": "2015-03-09T10:33:55+0000",
            "content": "Thanks everyone! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14352763",
            "date": "2015-03-09T10:34:21+0000",
            "content": "Commit 1665174 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1665174 ]\n\nSOLR-4044: CloudSolrClient.connect() can take a timeout parameter to wait for the cluster "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14352770",
            "date": "2015-03-09T10:36:53+0000",
            "content": "Commit 1665175 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1665175 ]\n\nSOLR-4044: CloudSolrClient.connect() can take a timeout parameter to wait for the cluster "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14495424",
            "date": "2015-04-15T00:31:04+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}