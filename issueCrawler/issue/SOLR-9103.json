{
    "id": "SOLR-9103",
    "title": "Restore ability for users to add custom Streaming Expressions",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.3"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "StreamHandler is an implicit handler. So to make it extensible, we can introduce the below syntax in solrconfig.xml. \n\n<expressible name=\"hello\" class=\"org.apache.solr.search.HelloStream\"/>\n\n\nThis will add hello function to streamFactory of StreamHandler.",
    "attachments": {
        "SOLR-9103.PATCH": "https://issues.apache.org/jira/secure/attachment/12803367/SOLR-9103.PATCH",
        "HelloStream.class": "https://issues.apache.org/jira/secure/attachment/12807974/HelloStream.class",
        "SOLR-9103.patch": "https://issues.apache.org/jira/secure/attachment/12832771/SOLR-9103.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-11T03:37:41+0000",
            "author": "Cao Manh Dat",
            "content": "Initial patch along with test. ",
            "id": "comment-15279445"
        },
        {
            "date": "2016-06-03T14:51:21+0000",
            "author": "Cao Manh Dat",
            "content": "Update patch file\n\n\tAdd dynamic loading testcase with custom stream.\n\n ",
            "id": "comment-15314228"
        },
        {
            "date": "2016-06-29T18:39:29+0000",
            "author": "Dennis Gove",
            "content": "This ability existed in the initial patch adding Streaming Expressions (SOLR-7377). I guess it was removed at some point, though I wonder why. Glad to see it added back! ",
            "id": "comment-15355598"
        },
        {
            "date": "2016-07-12T15:31:56+0000",
            "author": "Joel Bernstein",
            "content": "We need to the restore the ability for users to add their own expressions. But I'm not sure the solrconfig.xml is the best place to do this.\n\nHow do people feel about adding a new expressions.properties file to the configset? ",
            "id": "comment-15373078"
        },
        {
            "date": "2016-07-14T04:33:25+0000",
            "author": "David Smiley",
            "content": "Why not solrconfig.xml?  It's a known config file used for a variety of miscellaneous configuration and hooks to be updated via HTTP APIs (with added work, granted).  Unless there's a good reason to add another config file, it seems clearer to users to use an existing known spot. ",
            "id": "comment-15376290"
        },
        {
            "date": "2016-07-14T12:59:05+0000",
            "author": "Joel Bernstein",
            "content": "I'm thinking we should externalize all the function mappings rather then having them coded into classes. It just seems nicer to have a properties file to hold the entire Streaming Expressions function table rather then defining it in the solrconfig.xml. Also Streaming Expressions can be run outside of Solr, so having a properties file that can be pointed to would facilitate this. ",
            "id": "comment-15376859"
        },
        {
            "date": "2016-07-17T04:46:36+0000",
            "author": "David Smiley",
            "content": "We're just talking about mapping an invocation name to a class name, right?  If so, then how is this different than a QParserPlugin or a DocumentTransformer, or ValueSource?  Consistency in approach. ",
            "id": "comment-15381084"
        },
        {
            "date": "2016-07-17T08:05:51+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "As long as the user can use the Config APIs to add/remove expressions without needing to edit any file then it does not matter where the mappings are actually persisted. Having said that keeping them in solrconfig.xml may be easier to integrate from a Config API perspective. ",
            "id": "comment-15381213"
        },
        {
            "date": "2016-07-19T22:53:56+0000",
            "author": "Joel Bernstein",
            "content": "Ok, then let's use the solrconfig.xml for adding custom expressions. In that case I think this patch looks like a good approach. We can use the same approach as other pluggables and register the standard expressions in a class.  ",
            "id": "comment-15385016"
        },
        {
            "date": "2016-10-10T17:20:56+0000",
            "author": "Dennis Gove",
            "content": "testDynamicLoadingCustomStream is not passing because it cannot find runtimecode/HelloStream.class. Note that I did add the file solr/core/src/test-files/runtimecode/HelloStream.java. But it doesn't appear the test can find the .class of that. I know you provided a .class but I'm not sure I'm comfortable adding a .class to the source code.\n\nThe test does pass if I run it directly in Eclipse, however.\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCustomStream -Dtests.method=testDynamicLoadingCustomStream -Dtests.seed=96673E541CBCF992 -Dtests.slow=true -Dtests.locale=fr-CH -Dtests.timezone=Europe/Sarajevo -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   28.5s | TestCustomStream.testDynamicLoadingCustomStream <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Cannot find resource in classpath or in file-system (relative to CWD): runtimecode/HelloStream.class\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([96673E541CBCF992:E6D23776E646B225]:0)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.getFile(SolrTestCaseJ4.java:1798)\n   [junit4]    > \tat org.apache.solr.core.TestDynamicLoading.getFileContent(TestDynamicLoading.java:261)\n   [junit4]    > \tat org.apache.solr.core.TestCustomStream.testDynamicLoadingCustomStream(TestCustomStream.java:73)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:985)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:960)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n ",
            "id": "comment-15562874"
        },
        {
            "date": "2016-10-11T21:38:34+0000",
            "author": "Dennis Gove",
            "content": "Was able to get the tests passing by moving the package of HelloStream to something that is compiled during test runs. This will prevent us from having to include a .class file in the source code. ",
            "id": "comment-15566696"
        },
        {
            "date": "2016-10-12T00:32:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 56cd8bffc6d9a166fe607bd228dca55370386122 in lucene-solr's branch refs/heads/master from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=56cd8bf ]\n\nSOLR-9103: Restore ability for users to add custom Streaming Expressions ",
            "id": "comment-15567095"
        },
        {
            "date": "2016-10-12T00:34:49+0000",
            "author": "Dennis Gove",
            "content": "Updated with some pre-commit changes. ",
            "id": "comment-15567100"
        },
        {
            "date": "2016-10-12T00:38:26+0000",
            "author": "Dennis Gove",
            "content": "Cao, thank you very much for this. I'm really happy to see this feature restored. ",
            "id": "comment-15567106"
        },
        {
            "date": "2016-10-12T00:52:32+0000",
            "author": "Joel Bernstein",
            "content": "I'm happy as well! ",
            "id": "comment-15567131"
        },
        {
            "date": "2016-10-12T16:16:31+0000",
            "author": "Cao Manh Dat",
            "content": "Thanks Dennis for reviewing the patch. ",
            "id": "comment-15569144"
        },
        {
            "date": "2016-10-14T15:35:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5e6a8e7c7537bfe1d2fdabf3b1bdd9fe825c5996 in lucene-solr's branch refs/heads/branch_6x from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5e6a8e7 ]\n\nSOLR-9103: Restore ability for users to add custom Streaming Expressions ",
            "id": "comment-15575668"
        }
    ]
}