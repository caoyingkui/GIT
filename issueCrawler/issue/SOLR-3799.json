{
    "id": "SOLR-3799",
    "title": "Federated search support - include documents from external collections in Solr search results.",
    "details": {
        "affect_versions": "6.0",
        "status": "Open",
        "fix_versions": [
            "6.0"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Following discussion on dev@lucene.apache.org (http://mail-archives.apache.org/mod_mbox/lucene-dev/201205.mbox/%3CABA41FBE-72A8-467E-BF33-3D0CA1ED81DD@cominvent.com%3E , http://mail-archives.apache.org/mod_mbox/lucene-dev/201208.mbox/%3C1345800198.2303.68.camel@oo%3E) i would like to introduce the idea of Federated Search in Solr.\n\nIt would be nice to have support for real Federated Search in Solr - very helpfull for people who would like to include some external search results in their Solr-based system.\n\nBy Federated Search i mean searching across not only distributed Solr instances (existing DistributedSearch in Solr) but also other kind of external search services.\n\nTypical federated search process includes:\n\n\tcollection selection step\n\tresults merging\n\tadapters for external collections connection\n\tcollections representations (used in collection selection and/or result merging)\n\n\n\n\nI'm thinking about creating full solution with basic example implementation of each module.\n\nThings to do that comes to my mind are:\n1. federated request support in SearchHandler: the place where everything is tight up.\n2. CollectionSelectionComponent: which should be independent, so one can use it separately.\n3. federated search support in QueryComponent: with no hard-coded agorithms if it's possible.\n4. Results merging rules module: as pluggable part of QueryComponent or as separate MergingComponent.\n5. Adapter (connector) to external collection: interface and example implementation.\n6. Collections representation: interface and default implementation: Used to store informations about indexes/collections.\n\n\nThe typical use case would look like this:\n\n\tuser sends search request\n\tSolr decides to which indexes delegate the request (collection selection): for example by comparing user's query with collection representations.\n\tSolr decides how many and which documents get from each collection (merge rules): for example by using previous step results.\n\tSolr sends user's query to collections (Solr instances and/or external collections through dedicated adapters)\n\tSolr merges and retuns the results.\n\n\n\n\nDesign requirements:\n\n\tlightweight implementation\n\tdesigned as Solr feature, not as something on top of Solr or as Solr extension\n\teasy to use and customize out of the box\n\tallow for extension/reimplementation by users\n\n\n\nAny suggestions/discussions welcome!",
    "attachments": {},
    "issue_links": {},
    "comments": []
}