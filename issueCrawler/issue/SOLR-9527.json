{
    "id": "SOLR-9527",
    "title": "Solr RESTORE api doesn't distribute the replicas uniformly",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "6.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Please refer to this email thread for details,\n\nhttp://lucene.markmail.org/message/ycun4x5nx7lwj5sk?q=solr+list:org%2Eapache%2Elucene%2Esolr-user+order:date-backward&page=1",
    "attachments": {
        "SOLR-9527.patch": "https://issues.apache.org/jira/secure/attachment/12829474/SOLR-9527.patch",
        "Solr 9527.pdf": "https://issues.apache.org/jira/secure/attachment/12862375/Solr%209527.pdf"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-21T00:11:34+0000",
            "author": "Stephen Lewis Bianamara",
            "content": "This patch accomplishes two things in the branch branch_6_2.\n\n(a) It fixes the issue of replica distribution for the leaders\n(b) Simultaneously, supports the CreateNodeSet parameter for collection restore. ",
            "id": "comment-15508211"
        },
        {
            "date": "2016-09-21T03:02:50+0000",
            "author": "Hrishikesh Gadre",
            "content": "Stephen Lewis Bianamara Thanks for the patch  I updated your patch with a unit test which reproduces the problem (without your patch) and passes with your patch.\n\nThe failure can be reproduced with this command,\n\nant test  -Dtestcase=TestLocalFSCloudBackupRestore -Dtests.method=test -Dtests.seed=F465CD94BAC9633C -Dtests.slow=true -Dtests.locale=lt -Dtests.timezone=America/Inuvik -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\nVarun Thacker Could you please take a look? ",
            "id": "comment-15508535"
        },
        {
            "date": "2016-09-21T20:44:24+0000",
            "author": "Stephen Lewis Bianamara",
            "content": "This update removes some extra logging I'd meant to rip and passes through the createNodeSet param from the request to the function call. ",
            "id": "comment-15511121"
        },
        {
            "date": "2016-09-30T22:17:21+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker David Smiley Can you review this patch please?  ",
            "id": "comment-15537223"
        },
        {
            "date": "2016-10-01T03:20:39+0000",
            "author": "David Smiley",
            "content": "FYI When I originally worked on the backup capability, I didn't add support for createNodeSet because I wasn't yet sure how to resolve the possibility of duplicating logic with regular collection creation.  I gave a cursory look at the patch here; it's interesting that the patch is actually kinda small.  I should look at it more when I have time.  I noticed this doesn't seem to be tested; right?  I saw a test modification but it doesn't seem to test the distribution. ",
            "id": "comment-15537773"
        },
        {
            "date": "2016-11-08T21:07:18+0000",
            "author": "Hrishikesh Gadre",
            "content": "Hi David Smiley \n\nI noticed this doesn't seem to be tested; right? I saw a test modification but it doesn't seem to test the distribution.\n\nI added assertion in the test to verify that the number of replicas per host are in-line with the expected value of max_shards_per_node param. I think this is sufficient to test the distribution . Although I have not added any test for \"createNodeSet\" functionality. Let me add that test as well. ",
            "id": "comment-15648793"
        },
        {
            "date": "2017-02-23T14:23:55+0000",
            "author": "Dewald Viljoen",
            "content": "I've run smack dab straight into this issue recently. I was wondering what the progress is on this patch?\n\nI'm currently running Solr 6.4.1 and would really like to take advantage of the Collections Backup/Restore functionality in combination with HDFS. All works well until I restore the collection and all my shards end up on one of my SolrCloud nodes. I can specify a replicationFactor of 2 and then though some other API calls make the replica's the leaders and rebalance everything but it's a bit of a mess.\n\nI'm happy to lend my efforts to get this issue resolved. ",
            "id": "comment-15880507"
        },
        {
            "date": "2017-04-06T21:30:03+0000",
            "author": "Rohit",
            "content": "Trying to refine the replica placement to be more uniform across multiple nodes if we have sufficient amount of live_nodes in Solr available,\n1. When we have live_nodes in excess of the replication factor which existed during the time to backup we can do away with creating multiple replicas for same shard on the same live_node to ensure better distribution.\n\n2. User should be given warning or, option to go ahead with the Restore API if the number of live_nodes is less that what the collection was originally created.\n\nDetails of the two issue in the attached PDF and initial patch attached with the ticket. ",
            "id": "comment-15959792"
        },
        {
            "date": "2017-04-21T16:40:18+0000",
            "author": "Stephen Weiss",
            "content": "Any chance we can get this patch merged in?  We really need this issue fixed, and it's made upgrading a serious pain.   Every new version we have to recompile our own Solr for this one little detail.  If you need it to be tested... well... we've used it in production for months and it's great.  What's actually in master is no good.  Why didn't that need to be tested as much? ",
            "id": "comment-15979043"
        },
        {
            "date": "2017-04-21T19:41:01+0000",
            "author": "David Smiley",
            "content": "+1 to the patch ",
            "id": "comment-15979271"
        },
        {
            "date": "2017-04-21T19:47:35+0000",
            "author": "David Smiley",
            "content": "+1 to the patch ",
            "id": "comment-15979276"
        },
        {
            "date": "2017-04-21T19:48:16+0000",
            "author": "Varun Thacker",
            "content": "Thanks David for the review. I'll go through it and commit in on Monday ",
            "id": "comment-15979277"
        },
        {
            "date": "2017-04-24T18:55:10+0000",
            "author": "Varun Thacker",
            "content": "I reviewed the latest patch ( 6th April ) and here are a few things I believe we should fix:\n\n\n\tShould we rename DocCollection#getReplicaCount to DocCollection#getNodeCount ?\n\n\n\n\n\tRestoreCmd has an unused import. We should generally remove all unused imports to make \"ant precommit\" happy\n\n\n\n\nString createNodeArg = message.getStr(CREATE_NODE_SET, null);\nif (createNodeArg == CREATE_NODE_SET_EMPTY) {\n  throw new SolrException(\n      SolrException.ErrorCode.BAD_REQUEST,\n      \"Cannot restore with a CREATE_NODE_SET of CREATE_NODE_SET_EMPTY.\"\n  );\n}\n\n\n\n\n\tCan we move this check from RestoreCmd to the CollectionsHandler#RESTORE_OP?\n\n\n\n\n\tIn line 206 of RestoreCmd , shouldn't\n\n\n\nint repFactor = backupCollectionState.getReplicaCount();\n\nbe \n\nint repFactor = message.getInt(REPLICATION_FACTOR, backupCollectionState.getReplicaCount());\n\n\n\tWe should also allow users to pass createNodeSet.shuffle\n\n ",
            "id": "comment-15981674"
        },
        {
            "date": "2017-05-06T05:02:19+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker I have addressed all the review comments. In addition I also added a unit test to verify createNodeSet functionality. I made few changes along the way,\n\n(a) Added support for configuring createNodeSet.shuffle parameter for restore command.\n(b) The logic in RestoreCmd.java comparing the current num_live_nodes against the num_nodes for backup collection was not quite correct since it was not considering the createNodeSet as well as maxShardsPerNode parameters. So I fixed that logic.\n(c) Fixed UpdateRequestProcessorFactoryTest (unrelated to these changes). It was failing for following combination of parameters,\n\n\nant test  -Dtestcase=UpdateRequestProcessorFactoryTest -Dtests.method=testRequestTimeUrp -Dtests.seed=91817E95F0748507 -Dtests.slow=true -Dtests.locale=be-BY -Dtests.timezone=America/Indiana/Vevay -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\n\n\n\nCan you take a look and let me know your feedback? ",
            "id": "comment-15999287"
        },
        {
            "date": "2017-05-06T07:26:56+0000",
            "author": "Mikhail Khludnev",
            "content": "testRequestTimeUrp has been fixed. Just pull ",
            "id": "comment-15999325"
        },
        {
            "date": "2017-05-09T10:27:25+0000",
            "author": "Varun Thacker",
            "content": "Hi Hrishikesh,\n\nStarting to look at it right now. ",
            "id": "comment-16002445"
        },
        {
            "date": "2017-05-10T12:01:43+0000",
            "author": "Varun Thacker",
            "content": "Hi Hrishikesh,\n\nPatch looks good. Attaching a new patch without the changes to UpdateRequestProcessorFactoryTest as that's already been committed. \n\nI'm going to run all the tests and commit this soon. ",
            "id": "comment-16004551"
        },
        {
            "date": "2017-05-10T14:40:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b1efd37ba7b57cc01b3e2ac740b4f1d13fb86cd2 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b1efd37 ]\n\nSOLR-9527: Improve distribution of replicas when restoring a collection ",
            "id": "comment-16004794"
        },
        {
            "date": "2017-05-10T14:48:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1adeebdd92a96233836f83f6144da9eead65a2cf in lucene-solr's branch refs/heads/branch_6x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1adeebd ]\n\nSOLR-9527: Improve distribution of replicas when restoring a collection ",
            "id": "comment-16004807"
        },
        {
            "date": "2017-05-10T14:49:22+0000",
            "author": "Varun Thacker",
            "content": "Thanks all for contributing! ",
            "id": "comment-16004810"
        },
        {
            "date": "2017-05-10T15:57:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 201e2125f4db3b4fd1ecfe5ddef5471f305fc1f0 in lucene-solr's branch refs/heads/branch_6_6 from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=201e212 ]\n\nSOLR-9527: Improve distribution of replicas when restoring a collection ",
            "id": "comment-16004912"
        }
    ]
}