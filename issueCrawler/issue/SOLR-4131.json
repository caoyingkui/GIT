{
    "id": "SOLR-4131",
    "title": "Nested dismax query showing \"dismax\" as spellcheck result",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "I'm performing the following query against our Solr database:\n\n\nspellcheck.count=5&facet=true&facet.limit=200&hl=true&hl.fl=name&hl.fl=shortDescription&version=1&start=0&facet.sort=index&facet.field=parentCatgroup_id_search&facet.field=mfName_ntk_cs&fq=catalog_id:\"10001\"&fq=storeent_id:(\"10001\")&fq=published:1&fq=-(catenttype_id_ntk_cs:ItemBean+AND+parentCatentry_id:[*+TO+*])&timeAllowed=15000&hl.simple.post=</span></strong>&rows=24&debugQuery=false&facet.query=price_CAD:({*+100}+100)&facet.query=price_CAD:({100+200}+200)&facet.query=price_CAD:({200+300}+300)&facet.query=price_CAD:({300+400}+400)&facet.query=price_CAD:({400+500}+500)&facet.query=price_CAD:({500+*})&q=(%2B(mfPartNumber_ntk:(TESTSTRING)+partNumber_ntk:(TESTSTRING)))+OR+(_query_:\"{!dismax+ps%3D2+mm%3D'2<-25%25'+qf%3D'longDescription+name^5+mfName^10+xf_CategoryPath^10'+pf%3D'longDescription^10+name^30+xf_CategoryPath^30'}+TESTSTRING+\")&spellcheck.collate=false&hl.simple.pre=<strong><span+class%3Dfont2>&facet.mincount=1&spellcheck=true&hl.requireFieldMatch=true\n\n\n\nwhich results in the following returned XML:\n\n\nThis XML file does not appear to have any style information associated with it. The document tree is shown below.\n<response>\n<responseHeader>\n<status>0</status>\n<QTime>59</QTime>\n<lst name=\"params\">\n<str name=\"spellcheck.count\">5</str>\n<str name=\"facet\">true</str>\n<str name=\"facet.limit\">200</str>\n<str name=\"hl\">true</str>\n<arr name=\"hl.fl\">\n<str>name</str>\n<str>shortDescription</str>\n</arr>\n<str name=\"version\">1</str>\n<str name=\"start\">0</str>\n<str name=\"facet.sort\">index</str>\n<arr name=\"facet.field\">\n<str>parentCatgroup_id_search</str>\n<str>mfName_ntk_cs</str>\n</arr>\n<arr name=\"fq\">\n<str>catalog_id:\"10001\"</str>\n<str>storeent_id:(\"10001\")</str>\n<str>published:1</str>\n<str>\n-(catenttype_id_ntk_cs:ItemBean AND parentCatentry_id:[* TO *])\n</str>\n</arr>\n<str name=\"timeAllowed\">15000</str>\n<str name=\"hl.simple.post\"></span></strong></str>\n<str name=\"rows\">24</str>\n<str name=\"debugQuery\">false</str>\n<arr name=\"facet.query\">\n<str>price_CAD:({* 100} 100)</str>\n<str>price_CAD:({100 200} 200)</str>\n<str>price_CAD:({200 300} 300)</str>\n<str>price_CAD:({300 400} 400)</str>\n<str>price_CAD:({400 500} 500)</str>\n<str>price_CAD:({500 *})</str>\n</arr>\n<str name=\"q\">\n(+(mfPartNumber_ntk:(TESTSTRING) partNumber_ntk:(TESTSTRING))) OR (_query_:\"{!dismax ps=2 mm='2<-25%' qf='longDescription name^5 mfName^10 xf_CategoryPath^10' pf='longDescription^10 name^30 xf_CategoryPath^30'} TESTSTRING \")\n</str>\n<str name=\"hl.simple.pre\"><strong><span class=font2></str>\n<str name=\"spellcheck.collate\">false</str>\n<str name=\"facet.mincount\">1</str>\n<str name=\"hl.requireFieldMatch\">true</str>\n<str name=\"spellcheck\">true</str>\n</lst>\n</responseHeader>\n<result name=\"response\" numFound=\"0\" start=\"0\"/>\n<lst name=\"facet_counts\">\n<lst name=\"facet_queries\">\n<int name=\"price_CAD:({* 100} 100)\">0</int>\n<int name=\"price_CAD:({100 200} 200)\">0</int>\n<int name=\"price_CAD:({200 300} 300)\">0</int>\n<int name=\"price_CAD:({300 400} 400)\">0</int>\n<int name=\"price_CAD:({400 500} 500)\">0</int>\n<int name=\"price_CAD:({500 *})\">0</int>\n</lst>\n<lst name=\"facet_fields\">\n<lst name=\"parentCatgroup_id_search\"/>\n<lst name=\"mfName_ntk_cs\"/>\n</lst>\n<lst name=\"facet_dates\"/>\n</lst>\n<lst name=\"highlighting\"/>\n<lst name=\"spellcheck\">\n<lst name=\"suggestions\">\n<lst name=\"teststring\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">21</int>\n<int name=\"endOffset\">31</int>\n<arr name=\"suggestion\">\n<str>test taking</str>\n<str>testing</str>\n<str>tests eolang</str>\n<str>tests quick</str>\n<str>tests grade</str>\n</arr>\n</lst>\n<lst name=\"teststring\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">49</int>\n<int name=\"endOffset\">59</int>\n<arr name=\"suggestion\">\n<str>test taking</str>\n<str>testing</str>\n<str>tests eolang</str>\n<str>tests quick</str>\n<str>tests grade</str>\n</arr>\n</lst>\n<lst name=\"dismax\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">78</int>\n<int name=\"endOffset\">84</int>\n<arr name=\"suggestion\">\n<str>digimax</str>\n<str>minimax</str>\n<str>big max</str>\n<str>heisman</str>\n<str>mid max</str>\n</arr>\n</lst>\n<lst name=\"qf\">\n<int name=\"numFound\">3</int>\n<int name=\"startOffset\">102</int>\n<int name=\"endOffset\">104</int>\n<arr name=\"suggestion\">\n<str>qlf</str>\n<str>qnf</str>\n<str>qlfd</str>\n</arr>\n</lst>\n<lst name=\"longdescription\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">106</int>\n<int name=\"endOffset\">121</int>\n<arr name=\"suggestion\">\n<str>job descriptions</str>\n<str>description</str>\n<str>prescription</str>\n<str>descriptions</str>\n<str>skin prescription</str>\n</arr>\n</lst>\n<lst name=\"mfname\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">129</int>\n<int name=\"endOffset\">135</int>\n<arr name=\"suggestion\">\n<str>3 name</str>\n<str>ornament</str>\n<str>enamel</str>\n<str>username</str>\n<str>surnames</str>\n</arr>\n</lst>\n<lst name=\"categorypath\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">139</int>\n<int name=\"endOffset\">154</int>\n<arr name=\"suggestion\">\n<str>category</str>\n<str>category 5e</str>\n<str>category 6</str>\n<str>category 5</str>\n<str>category 6a</str>\n</arr>\n</lst>\n<lst name=\"longdescription\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">163</int>\n<int name=\"endOffset\">178</int>\n<arr name=\"suggestion\">\n<str>job descriptions</str>\n<str>description</str>\n<str>prescription</str>\n<str>descriptions</str>\n<str>skin prescription</str>\n</arr>\n</lst>\n<lst name=\"categorypath\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">190</int>\n<int name=\"endOffset\">205</int>\n<arr name=\"suggestion\">\n<str>category</str>\n<str>category 5e</str>\n<str>category 6</str>\n<str>category 5</str>\n<str>category 6a</str>\n</arr>\n</lst>\n<lst name=\"teststring\">\n<int name=\"numFound\">5</int>\n<int name=\"startOffset\">211</int>\n<int name=\"endOffset\">221</int>\n<arr name=\"suggestion\">\n<str>test taking</str>\n<str>testing</str>\n<str>tests eolang</str>\n<str>tests quick</str>\n<str>tests grade</str>\n</arr>\n</lst>\n</lst>\n</lst>\n</response>\n\n\n\nParts of the nested dismax query are being used as spellcheck keywords, and we don't quite understand why.  Is there something that we're doing wrong, which would cause the nested query to show up as spellcheck kwywords?\n\nThanks.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "James Dyer",
            "id": "comment-13507516",
            "date": "2012-11-30T18:17:11+0000",
            "content": "I think the issue is that the SpellingQueryConverter class is not designed to work with local params.  Your best bet is to build a space-delimited list of raw query terms that you want spellchecked and pass them as the \"spellcheck.q\" parameter.  Does this solve your problems?\n\nOf course making the spellchecker more robust to handle anything you throw at it would be a worthy enhancement.  "
        },
        {
            "author": "Parham Mofidi",
            "id": "comment-13507531",
            "date": "2012-11-30T18:31:24+0000",
            "content": "Yes it helped.  Thanks James! "
        },
        {
            "author": "James Dyer",
            "id": "comment-13507535",
            "date": "2012-11-30T18:43:47+0000",
            "content": "SpellingQueryConverter by design does not support local params.  Using spellcheck.q is an acceptable workaround. "
        }
    ]
}