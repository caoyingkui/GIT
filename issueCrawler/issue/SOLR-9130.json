{
    "id": "SOLR-9130",
    "title": "fail to create cloud collection on RecoveryStrategy ERROR",
    "details": {
        "components": [
            "search"
        ],
        "type": "Sub-task",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "Spinoff SOLR-9110.\nWhen I launch a cloud test (but not only test) with non-cloud config eg solrconfig-basic.xml from test/resources it logs ERROR somewhere deep in logs,  but doesn't propagate this error to create collection call \n\n\n \nERROR cloud.RecoveryStrategy  - No UpdateLog found\n- cannot recover. core=app-analytics\n\n \n\nPlease to consider error propagation and explicit create collection failure",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-19T08:59:38+0000",
            "author": "Alan Woodward",
            "content": "Recovery happens in its own thread, which is presumably why this doesn't cause a failure on core startup.\n\nThere are a bunch of config and schema requirements for cloud (off the top of my head I can think of: uniqueid and version fields, /get handler and update log).  I think it would be useful to add some checking to the ConfigSetService.  getConfig() could call out to an abstract validate() method, and then CloudConfigSetService can run its own checks there and throw an exception if the config won't work in cloud mode.  That way we fail fast before a core is even loaded. ",
            "id": "comment-15290735"
        }
    ]
}