{
    "id": "SOLR-4559",
    "title": "add fqDefType to enable not needing to specify local params syntax for fq parser",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "People using fq= are generally sending structured queries (like facet drilldowns etc), and it is useful to be able to set the default parser in solrconfig.xml. Today fq uses the lucene parser, which means if your solr clients arent properly escaping lucene syntax, facet drilldowns could broken. It is just as tricky to ensure all clients are properly using localparams in their fqs.",
    "attachments": {
        "SOLR-4559.patch": "https://issues.apache.org/jira/secure/attachment/12573998/SOLR-4559.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan Ernst",
            "id": "comment-13604142",
            "date": "2013-03-16T07:18:45+0000",
            "content": "This patch adds the suggested fqDefType to QueryComponent. I opted not to change the MoreLikeThisHandler, because the semantics of fq are slightly different there, and digging into the tests was...hairy.  If someone feels strongly, they can file another jira for that.  Also note the patch shows some import reorg in files I touched because my editor (intellij) automatically organizes imports (undoing wildcard imports and putting java lang imports first).  If that is an issue I can disable it and fix the diff. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13604269",
            "date": "2013-03-16T14:07:10+0000",
            "content": "Today fq uses the lucene parser, which means if your solr clients arent properly escaping lucene syntax, facet drilldowns could broken.\n\nRight.  That's one reason the term query parser was developed.\n\nIt is just as tricky to ensure all clients are properly using localparams in their fqs.\n\nWhy?  It was designed to be just a prefix so that no escaping was necessary.  Simply construct the drill-down facet like so in the client:\n\n\"{!term f=category}\" + $category_value\n\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13604463",
            "date": "2013-03-17T00:33:50+0000",
            "content": "This seems to be unusable unless you write a custom query parser that is locked into a single field like the test case one in the patch.  Perhaps if there were a \"field:value\" qparser that didn't require any escaping, just splitting at the first colon then a settable fq qparser would be handy.  If we did do something like this, I'd prefer we lose the \"defType\" naming since it is confusingly unspecific.  fqDefaultParser or something like that would be clearer. "
        },
        {
            "author": "Ryan Ernst",
            "id": "comment-13605280",
            "date": "2013-03-18T16:26:28+0000",
            "content": "This patch changes fqDefType to fqDefaultParser as suggested.\n\n\nThis seems to be unusable unless you write a custom query parser that is locked into a single field like the test case one in the patch.\n\nA complex query parser itself can handle which field(s) to build a query for. The main benefit is being able to set the parser to use in solrconfig.xml.\n "
        },
        {
            "author": "Shingo Sasaki",
            "id": "comment-13685429",
            "date": "2013-06-17T10:42:48+0000",
            "content": "Additionally I want defType parameter for facet.query. (SOLR-4837)\n\nSince I created the custom parser that has the same syntax as the lucene parser and the different output Query from that, I have wanted to write my parser to solrconfig.xml  for fq and for facet.query. "
        }
    ]
}