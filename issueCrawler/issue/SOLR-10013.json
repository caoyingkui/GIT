{
    "id": "SOLR-10013",
    "title": "DocValuesTest.testFloatAndDoubleRangeQueryRandom() failure: NPE",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "From https://jenkins.thetaphi.de/job/Lucene-Solr-6.x-Linux/2702/, reproduces for me on Java8/Linux:\n\n\nChecking out Revision 20b7dfae42810ea4c345355735d732bdbb191150 (refs/remotes/origin/branch_6x)\n[...]\n   [junit4]   2> 1426152 INFO  (TEST-DocValuesTest.testFloatAndDoubleRangeQueryRandom-seed#[690818771545E96F]) [    ] o.a.s.s.DocValuesTest Indexed values: [-1.7147449030215377E-208, -1.6887024655302576E-11, 1.534911516604164E113, 0.0, 2.6947996404505155E-166, -2.649722021970773E306, 6.138239235731689E-198, 2.3967090122610808E111]\n[...]\n   [junit4]   2> 1426154 ERROR (TEST-DocValuesTest.testFloatAndDoubleRangeQueryRandom-seed#[690818771545E96F]) [    ] o.a.s.SolrTestCaseJ4 REQUEST FAILED: q=doubledv:{2.0801416404385346E-41+TO+8.701032080293731E-226]&fl=id,doubledv,score&sort=id+asc&wt=xml:java.lang.NullPointerException\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=DocValuesTest -Dtests.method=testFloatAndDoubleRangeQueryRandom -Dtests.seed=690818771545E96F -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=sk-SK -Dtests.timezone=Indian/Mayotte -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   4.23s J0 | DocValuesTest.testFloatAndDoubleRangeQueryRandom <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Exception during query\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([690818771545E96F:51983624D9EDF0F4]:0)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:821)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:788)\n   [junit4]    > \tat org.apache.solr.schema.DocValuesTest.testFloatAndDoubleRangeQueryRandom(DocValuesTest.java:618)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:543)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]    > Caused by: java.lang.NullPointerException\n   [junit4]    > \tat org.apache.lucene.document.SortedNumericDocValuesRangeQuery$1$1.matches(SortedNumericDocValuesRangeQuery.java:114)\n   [junit4]    > \tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:253)\n   [junit4]    > \tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:197)\n   [junit4]    > \tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39)\n   [junit4]    > \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:669)\n   [junit4]    > \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473)\n   [junit4]    > \tat org.apache.solr.search.SolrIndexSearcher.buildAndRunCollectorChain(SolrIndexSearcher.java:241)\n   [junit4]    > \tat org.apache.solr.search.SolrIndexSearcher.getDocListNC(SolrIndexSearcher.java:1823)\n   [junit4]    > \tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1640)\n   [junit4]    > \tat org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:611)\n   [junit4]    > \tat org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:533)\n   [junit4]    > \tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:295)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:166)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2384)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:331)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:313)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:795)\n[...]\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene62): {id=PostingsFormat(name=Asserting)}, docValues:{doubledvs=DocValuesFormat(name=Direct), intdvs=DocValuesFormat(name=Memory), doubledv=DocValuesFormat(name=Lucene54), stringdvs=DocValuesFormat(name=Direct), floatdvs=DocValuesFormat(name=Lucene54), longdvs=DocValuesFormat(name=Lucene54), booldvs=DocValuesFormat(name=Lucene54), datedv=DocValuesFormat(name=Direct), datedvs=DocValuesFormat(name=Lucene54), longdv=DocValuesFormat(name=Memory), booldv=DocValuesFormat(name=Direct), intdv=DocValuesFormat(name=Lucene54), stringdv=DocValuesFormat(name=Lucene54), floatdv=DocValuesFormat(name=Memory)}, maxPointsInLeafNode=1013, maxMBSortInHeap=5.279545835306134, sim=RandomSimilarity(queryNorm=true,coord=no): {}, locale=sk-SK, timezone=Indian/Mayotte",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-20T18:24:47+0000",
            "content": "reproduce line also fails for me.\n\ngit co 3ef9f0e39fb1ec50efb079ca7ffd4c2a53f6c45c and the test passes ... suggesting this was broken by LUCENE-7643: 20b7dfae42810ea4c345355735d732bdbb191150 \n\nAdrien Grand - can you look into this NPE? ",
            "author": "Hoss Man",
            "id": "comment-15832208"
        },
        {
            "date": "2017-01-20T19:00:42+0000",
            "content": "I cast this as a Lucene test and it failed for me on branch_6x the first time I ran it:\n\naddition to TestDocValuesRangeQuery.java\n  public void testSortedNumericNPE() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    double[] nums = {-1.7147449030215377E-208, -1.6887024655302576E-11, 1.534911516604164E113, 0.0,\n        2.6947996404505155E-166, -2.649722021970773E306, 6.138239235731689E-198, 2.3967090122610808E111};\n    for (int i = 0; i < nums.length; ++i) {\n      Document doc = new Document();\n      doc.add(new SortedNumericDocValuesField(\"dv\", NumericUtils.doubleToSortableLong(nums[i])));\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    final IndexReader reader = iw.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    iw.close();\n\n    Query query = SortedNumericDocValuesField.newRangeQuery(\"dv\", \n        NumericUtils.doubleToSortableLong(2.0801416404385346E-41), \n        NumericUtils.doubleToSortableLong(8.701032080293731E-226));\n    searcher.search(query, searcher.reader.maxDoc(), Sort.INDEXORDER);\n\n    reader.close();\n    dir.close();\n  }\n\n\n\nthe output (from IntelliJ):\n\n\njava.lang.NullPointerException\n\tat __randomizedtesting.SeedInfo.seed([B0FAEFDBF6B1B28:649D3F6C7292AECB]:0)\n\tat org.apache.lucene.document.SortedNumericDocValuesRangeQuery$1$1.matches(SortedNumericDocValuesRangeQuery.java:114)\n\tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:253)\n\tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:197)\n\tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39)\n\tat org.apache.lucene.search.LRUQueryCache.cacheIntoBitSet(LRUQueryCache.java:513)\n\tat org.apache.lucene.search.LRUQueryCache.cacheImpl(LRUQueryCache.java:504)\n\tat org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight.cache(LRUQueryCache.java:708)\n\tat org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight.bulkScorer(LRUQueryCache.java:787)\n\tat org.apache.lucene.search.AssertingWeight.bulkScorer(AssertingWeight.java:79)\n\tat org.apache.lucene.search.AssertingWeight.bulkScorer(AssertingWeight.java:79)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:666)\n\tat org.apache.lucene.search.AssertingIndexSearcher.search(AssertingIndexSearcher.java:91)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:592)\n\tat org.apache.lucene.search.IndexSearcher.searchAfter(IndexSearcher.java:577)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:504)\n\tat org.apache.lucene.search.TestDocValuesRangeQuery.testSortedNumericNPE(TestDocValuesRangeQuery.java:144)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1713)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:907)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:943)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:957)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:811)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:462)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:916)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:802)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:852)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:863)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat java.lang.Thread.run(Thread.java:745)\n\nNOTE: reproduce with: ant test  -Dtestcase=TestDocValuesRangeQuery -Dtests.method=testSortedNumericNPE -Dtests.seed=B0FAEFDBF6B1B28 -Dtests.locale=es-PE -Dtests.timezone=UCT -Dtests.asserts=true -Dtests.file.encoding=UTF-8\nNOTE: test params are: codec=Asserting(Lucene62): {}, docValues:{dv=DocValuesFormat(name=Lucene54)}, maxPointsInLeafNode=1383, maxMBSortInHeap=6.648357973491871, sim=RandomSimilarity(queryNorm=false,coord=yes): {}, locale=es-PE, timezone=UCT\nNOTE: Mac OS X 10.12.2 x86_64/Oracle Corporation 1.8.0_77 (64-bit)/cpus=8,threads=1,free=190316544,total=257425408\nNOTE: All tests run in this JVM: [TestDocValuesRangeQuery]\n\n ",
            "author": "Steve Rowe",
            "id": "comment-15832258"
        },
        {
            "date": "2017-01-20T19:08:48+0000",
            "content": "FYI I still get the NPE if I switch the order of the range endpoints so that the lower value is actually lower. ",
            "author": "Steve Rowe",
            "id": "comment-15832267"
        },
        {
            "date": "2017-01-20T20:36:40+0000",
            "content": "Commit c9262602f06d3fdaa2ec8809a6948aaed72bc0b1 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c926260 ]\n\nSOLR-10013: Fix DV range query bug introduced by LUCENE-7643 by disabling and optimization (LUCENE-7649 to track re-enabling or removing completely)\n\nConflicts:\n\tlucene/core/src/java/org/apache/lucene/document/SortedNumericDocValuesRangeQuery.java\n\tlucene/core/src/java/org/apache/lucene/document/SortedSetDocValuesRangeQuery.java ",
            "author": "ASF subversion and git services",
            "id": "comment-15832364"
        },
        {
            "date": "2017-01-20T20:36:44+0000",
            "content": "Commit b0db06bad568b7eedf528379a2fe5ac935992d56 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b0db06b ]\n\nSOLR-10013: Fix DV range query bug introduced by LUCENE-7643 by disabling and optimization (LUCENE-7649 to track re-enabling or removing completely) ",
            "author": "ASF subversion and git services",
            "id": "comment-15832367"
        },
        {
            "date": "2017-01-20T20:39:32+0000",
            "content": "thanks for extracting that test steve \u2013 i committed it with a test for both queries (low and high swapped) along with removing the optimization.\n\nWe'll let Adrien Grand figure out if the optimization can be fixed in LUCENE-7649 ",
            "author": "Hoss Man",
            "id": "comment-15832373"
        },
        {
            "date": "2017-01-23T09:39:22+0000",
            "content": "Commit a5b5df419c7f5bc1a94bc2fa0c1b8ba87b8159f8 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a5b5df4 ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization. ",
            "author": "ASF subversion and git services",
            "id": "comment-15834137"
        },
        {
            "date": "2017-01-23T09:39:24+0000",
            "content": "Commit 6693c261e5782bc49dea92002745a91215c4166e in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6693c26 ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization. ",
            "author": "ASF subversion and git services",
            "id": "comment-15834139"
        },
        {
            "date": "2017-01-23T09:41:20+0000",
            "content": "Thanks Steve and Hoss for looking into it. There was a bug on 6.x indeed because I had not realized that SingletonSortedNumericDocValues would null out the bits when they are an instance of MatchAllBits. I reenabled the optimization with a fix and new tests for that specific case. ",
            "author": "Adrien Grand",
            "id": "comment-15834146"
        },
        {
            "date": "2017-01-24T03:33:03+0000",
            "content": "Commit b0db06bad568b7eedf528379a2fe5ac935992d56 in lucene-solr's branch refs/heads/apiv2 from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b0db06b ]\n\nSOLR-10013: Fix DV range query bug introduced by LUCENE-7643 by disabling and optimization (LUCENE-7649 to track re-enabling or removing completely) ",
            "author": "ASF subversion and git services",
            "id": "comment-15835592"
        },
        {
            "date": "2017-01-24T08:58:10+0000",
            "content": "Commit 6693c261e5782bc49dea92002745a91215c4166e in lucene-solr's branch refs/heads/apiv2 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6693c26 ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization. ",
            "author": "ASF subversion and git services",
            "id": "comment-15835870"
        },
        {
            "date": "2017-02-10T08:33:52+0000",
            "content": "Commit a36ebaa90c95d8be6411464c237593a1ff825af0 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a36ebaa ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization for sorted dv too. ",
            "author": "ASF subversion and git services",
            "id": "comment-15860919"
        },
        {
            "date": "2017-02-10T08:34:23+0000",
            "content": "Commit 0215c65ac56a1faef100caf3eafb6fd85eaa337d in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0215c65 ]\n\nLUCENE-7643,SOLR-10013: Reenable the single-value optimization for sorted dv too. ",
            "author": "ASF subversion and git services",
            "id": "comment-15860921"
        }
    ]
}