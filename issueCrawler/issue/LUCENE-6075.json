{
    "id": "LUCENE-6075",
    "title": "SimpleRateLimiter cast overflow results in Thread.sleep exception",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/store"
        ],
        "labels": "",
        "fix_versions": [
            "4.10.3",
            "5.0",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "SimpleRateLimiter.pause() uses an uncheck cast of longs to ints:\n\n            Thread.sleep((int) (pauseNS/1000000), (int) (pauseNS % 1000000));\n\nAlthough we check that pauseNS is positive, however if it's large enough the cast to int produces a negative value, causing Thread.sleep to throw an exception.\n\nWe should protect for it.",
    "attachments": {
        "LUCENE-6075.patch": "https://issues.apache.org/jira/secure/attachment/12683346/LUCENE-6075.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14222954",
            "author": "Michael McCandless",
            "date": "2014-11-24T12:54:24+0000",
            "content": "+1, I'll fix this. "
        },
        {
            "id": "comment-14223093",
            "author": "Michael McCandless",
            "date": "2014-11-24T16:11:08+0000",
            "content": "Simple patch w/ test. "
        },
        {
            "id": "comment-14224423",
            "author": "ASF subversion and git services",
            "date": "2014-11-25T11:40:53+0000",
            "content": "Commit 1641584 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1641584 ]\n\nLUCENE-6075: don't overflow int in SimpleRateLimiter "
        },
        {
            "id": "comment-14224425",
            "author": "ASF subversion and git services",
            "date": "2014-11-25T11:41:34+0000",
            "content": "Commit 1641585 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1641585 ]\n\nLUCENE-6075: don't overflow int in SimpleRateLimiter "
        },
        {
            "id": "comment-14224433",
            "author": "Michael McCandless",
            "date": "2014-11-25T11:45:37+0000",
            "content": "Thanks Boaz Leskes! "
        },
        {
            "id": "comment-14226188",
            "author": "Boaz Leskes",
            "date": "2014-11-26T13:43:39+0000",
            "content": "Thank you for fixing it.\n\nI ran into it in code that ran in a VM and I suspect (though can't be sure) it had something to do with virtualized time. I wonder if it makes sense to have a \"sanity check\" upper bound to rate limiting - as sleeping for 25 days is most likely not the intended behaviour..  "
        },
        {
            "id": "comment-14229246",
            "author": "Robert Muir",
            "date": "2014-11-30T21:36:15+0000",
            "content": "reopen for backport "
        },
        {
            "id": "comment-14229677",
            "author": "ASF subversion and git services",
            "date": "2014-12-01T11:21:35+0000",
            "content": "Commit 1642666 from Michael McCandless in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1642666 ]\n\nLUCENE-6075: don't overflow int in SimpleRateLimiter "
        },
        {
            "id": "comment-14229679",
            "author": "Michael McCandless",
            "date": "2014-12-01T11:23:08+0000",
            "content": "I wonder if it makes sense to have a \"sanity check\" upper bound to rate limiting - as sleeping for 25 days is most likely not the intended behaviour..\n\n25 days is clearly rather silly ... but I'm not sure we should add such checks at this low level.  Where would you draw the line? "
        },
        {
            "id": "comment-14231579",
            "author": "Boaz Leskes",
            "date": "2014-12-02T15:05:51+0000",
            "content": "Yeah, that's the tricky part which made me wonder (as opposed to a suggestion ) The only thought I had is maintaining a last update time stamp (on top on lastNS) and if that goes backwards, adapt for it? I'm not sure how often this happens in practice though. From the reaction, I judge that it's not really often and we just have stepped into a very rare case. I'm OK with leaving as is. Thx for the fix! "
        },
        {
            "id": "comment-14332656",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:01:10+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}