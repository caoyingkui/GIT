{
    "id": "LUCENE-1045",
    "title": "SortField.AUTO doesn't work with long",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.4"
        ],
        "affect_versions": "2.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is actually the same as LUCENE-463 but I cannot find a way to re-open that issue. I'm attaching a test case by dragon-fly999 at hotmail com that shows the problem and a patch that seems to fix it.\n\nThe problem is that a long (as used for dates) cannot be parsed as an integer, and the next step is then to parse it as a float, which works but which is not correct. With the patch the following parsers are used in this order: int, long, float.",
    "attachments": {
        "TestDateSort.java": "https://issues.apache.org/jira/secure/attachment/12368934/TestDateSort.java",
        "LUCENE-1045.patch": "https://issues.apache.org/jira/secure/attachment/12370236/LUCENE-1045.patch",
        "LUCENE-1045-shortbyte.patch": "https://issues.apache.org/jira/secure/attachment/12374470/LUCENE-1045-shortbyte.patch",
        "auto-long-sorting.diff": "https://issues.apache.org/jira/secure/attachment/12368935/auto-long-sorting.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-11-03T21:48:58+0000",
            "content": "Makes auto sorting work with long. ",
            "author": "Daniel Naber",
            "id": "comment-12540011"
        },
        {
            "date": "2007-11-26T18:54:40+0000",
            "content": "patch applied ",
            "author": "Daniel Naber",
            "id": "comment-12545549"
        },
        {
            "date": "2007-11-26T19:44:32+0000",
            "content": "This patch seems a bit strange to me (sorry for getting to it so late).  I think the better way might be to have the FieldSortedHitQueue#comparatorAuto method use the ExtendedFieldCache, instead of creating the dependency in FieldCacheImpl on ExtendedFieldCache to have long support.  \n\nThen, you could just override getAuto in ExtendedFieldCache.   \n\nThis way, those who have longs and want them treated as such get them from the ExtendedFC, otherwise, those just using FieldCacheImpl, get the behavior they are used to, namely no long support. ",
            "author": "Grant Ingersoll",
            "id": "comment-12545567"
        },
        {
            "date": "2007-11-26T19:54:46+0000",
            "content": "Hmmm, I didn't realize that ExtendedFieldCache was added until you just pointed it out.\nWhy can't we just add long and double support directly to FieldCache? ",
            "author": "Yonik Seeley",
            "id": "comment-12545575"
        },
        {
            "date": "2007-11-26T20:02:03+0000",
            "content": "Because it is an interface and that could break implementations.  See https://issues.apache.org/jira/browse/LUCENE-1015 ",
            "author": "Grant Ingersoll",
            "id": "comment-12545578"
        },
        {
            "date": "2007-11-26T20:08:10+0000",
            "content": "Normally right, but a user can't provide their own implementation for lucene to use (because of the way lucene looks up the implementation). ",
            "author": "Yonik Seeley",
            "id": "comment-12545580"
        },
        {
            "date": "2007-11-26T20:12:48+0000",
            "content": "There is a cleaner way of doing this w/o copying code from ExtendedFieldCacheImpl\n\nPatch to follow ",
            "author": "Grant Ingersoll",
            "id": "comment-12545583"
        },
        {
            "date": "2007-11-26T20:15:27+0000",
            "content": "\nNormally right, but a user can't provide their own implementation for lucene to use (because of the way lucene looks up the implementation).\n\nTrue, it isn't all that useful of an interface.  We probably should open another issue to deal with it.  Either that, or we should take another look at fixing it in https://issues.apache.org/jira/browse/LUCENE-831\n ",
            "author": "Grant Ingersoll",
            "id": "comment-12545584"
        },
        {
            "date": "2007-11-26T20:25:50+0000",
            "content": "Refactoring to remove duplicated code and use the ExtendedFieldCache impl. ",
            "author": "Grant Ingersoll",
            "id": "comment-12545590"
        },
        {
            "date": "2007-11-26T20:42:27+0000",
            "content": "My only concern is that ExtendedFieldCache(Impl) adds more public classes that we then need to keep back compatibility with in future releases.  If we decide that adding long/double directly to FieldCache is OK, then that should ideally be done before the next release so we can simply remove ExtendedFieldCache. ",
            "author": "Yonik Seeley",
            "id": "comment-12545592"
        },
        {
            "date": "2007-11-26T20:57:13+0000",
            "content": "> True, it isn't all that useful of an interface.\n\nPerhaps it should be an abstract base class instead of an interface, so that the API can more easily evolve without breaking user code?  If external implementations are not currently supported, this might even be a back-compatible change. ",
            "author": "Doug Cutting",
            "id": "comment-12545601"
        },
        {
            "date": "2007-11-26T21:27:49+0000",
            "content": "That's fine by me, I think we just need to document it clearly in CHANGES.txt that we are making a potentially non-back compatible change (which isn't likely) in order to support future back compatibility .  \n\nI guess the question is whether there are people that have extended TopDocCollector and created a variation of the PriorityQueue that is similar to FieldSortedHitQueue that uses their own FieldCache implementation.  I can't imagine the need for this, but it does seem possible, or did I miss something? ",
            "author": "Grant Ingersoll",
            "id": "comment-12545612"
        },
        {
            "date": "2007-12-03T02:06:21+0000",
            "content": "Any more thoughts on this?  Otherwise, I am going to apply this patch before I forget about it.  It does seem to me there is at least a remote possibility of using the interface.  \n\nI will commit tomorrow evening or Tuesday unless I hear otherwise. ",
            "author": "Grant Ingersoll",
            "id": "comment-12547714"
        },
        {
            "date": "2007-12-03T02:15:59+0000",
            "content": "I think we should just fold Long & Double support into the FieldCache and change it to be an abstract class.\nIt is very unlikely that anyone has implemented their own FieldCache since it wouldn't be directly usable with Lucene.\nIn the worst-case scenario that someone did, there will be an immediate and understandable error, and the fix is easy. ",
            "author": "Yonik Seeley",
            "id": "comment-12547715"
        },
        {
            "date": "2007-12-03T07:59:20+0000",
            "content": "Grant, any chance of you throwing in short support in there? ",
            "author": "Otis Gospodnetic",
            "id": "comment-12547754"
        },
        {
            "date": "2007-12-03T11:44:29+0000",
            "content": "\nshort support\nFieldCache already has shorts support, so no reason not to add it and bytes to SortField.\n\nI will work up a patch for all of this. ",
            "author": "Grant Ingersoll",
            "id": "comment-12547803"
        },
        {
            "date": "2007-12-03T17:30:04+0000",
            "content": "Drops ExtendedFieldCache, puts everything into FieldCache, adds support to SortField and FieldSortedHitQueue for sorting on bytes and longs.  Drops FieldCacheImpl as it doesn't really serve any purpose once you make FieldCache a class.\n\nNote this breaks the back-compat. contract on FieldCache interface. ",
            "author": "Grant Ingersoll",
            "id": "comment-12547911"
        },
        {
            "date": "2007-12-03T23:44:32+0000",
            "content": "Actually, I'm not sure we should change it to an abstract class now... that's not a backward compatible change for normal users, right?\n\nPeople very likely access the current FieldCache via FieldCache.DEFAULT.get...() or\nFieldCache f = FieldCache.DEFAULT\n\nSo as long as no one has any custom implementations, we can at least add new methods to the FieldCache interface and implement them in FieldCacheImpl ",
            "author": "Yonik Seeley",
            "id": "comment-12548053"
        },
        {
            "date": "2007-12-04T00:58:21+0000",
            "content": "With this latest patch, they will still be able to do that.  I made FC a full-blown public class and deleted FieldCacheImpl.\n\nSo far, there has been one user who responded to my request for people who have implemented FieldCache: http://www.gossamer-threads.com/lists/lucene/java-user/55402\n\nHowever, the user already says it isn't a big deal for us to change it. ",
            "author": "Grant Ingersoll",
            "id": "comment-12548078"
        },
        {
            "date": "2007-12-04T01:19:35+0000",
            "content": "> With this latest patch, they will still be able to do that.\n\nOnly if they recompile.  Simply dropping in a new lucene jar would break their existing FieldCache usage. ",
            "author": "Yonik Seeley",
            "id": "comment-12548079"
        },
        {
            "date": "2007-12-04T02:01:14+0000",
            "content": "Yes.  True.  Here you and Doug finally had me convinced and now...  ",
            "author": "Grant Ingersoll",
            "id": "comment-12548088"
        },
        {
            "date": "2007-12-18T15:13:54+0000",
            "content": "I committed my original patch which keeps the ExtendedFieldCache.\n\nIf anything, I think we should mark FieldCache for 3.X that it is going to be converted to a class. ",
            "author": "Grant Ingersoll",
            "id": "comment-12552783"
        },
        {
            "date": "2008-01-31T02:21:14+0000",
            "content": "Sigh, I had it in the patch, but didn't get the BYTE and SHORT values on the SortField.  Ugh. ",
            "author": "Grant Ingersoll",
            "id": "comment-12564272"
        },
        {
            "date": "2008-01-31T16:27:23+0000",
            "content": "Here's the patch that adds the missing short and byte sorting.\n\nWill commit in the next day or two. ",
            "author": "Grant Ingersoll",
            "id": "comment-12564391"
        },
        {
            "date": "2008-02-02T03:09:39+0000",
            "content": "I committed the short-byte patch. ",
            "author": "Grant Ingersoll",
            "id": "comment-12565023"
        }
    ]
}