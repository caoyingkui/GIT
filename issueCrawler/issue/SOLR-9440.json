{
    "id": "SOLR-9440",
    "title": "ZkStateReader on a client can cache collection state and never refresh it",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "I saw this while writing a test case for SOLR-9438. The collection1 collection which was in stateFormat=2 was somehow caching the CloudSolrClient's ZkStateReader such that the returned cluster state contained the collection state. However this collection was neither watched nor lazy so any call to waitForRecoveriesToFinish would see stale state and loop until timeout.",
    "attachments": {
        "SOLR-9440.patch": "https://issues.apache.org/jira/secure/attachment/12894964/SOLR-9440.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-13T16:41:50+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Moving to 6.5, since 6.4 has already been released. ",
            "id": "comment-15907791"
        },
        {
            "date": "2017-05-18T00:57:22+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I hit this problem all the time in the tests of SOLR-10233, the only workaround I found is to use cluster.getSolrClient().getZkStateReader().registerCore(collectionName);. ",
            "id": "comment-16015005"
        },
        {
            "date": "2017-10-04T08:25:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5982d8734adf44e12cae1985574ca682f07839ca in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5982d87 ]\n\nSOLR-11076: Added more debug logging. Ensure collections are active before we exercise autoscaling. Added workaround for SOLR-9440. ",
            "id": "comment-16190978"
        },
        {
            "date": "2017-10-31T07:49:22+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I found the root cause.\n\nThe bug is in ZkStateReader.removeCollectionStateWatcher which only removes the collection from the collection's watch list i.e. collectionWatches map. Since ZK does not have a way to remove a watch, the watch object is fired again when the collection changes. Now, there is code in StateWatcher's refreshAndWatch method which is supposed to evict the cached DocCollection object from watchedCollectionStates if the collection is no more in the collectionWatches map. However, that code never gets executed because the StateWatcher's process method returns early if the collection is not in collectionWatches list. So a cached DocCollection reference that is neither lazy nor watched is left behind. ",
            "id": "comment-16226414"
        },
        {
            "date": "2017-10-31T07:51:24+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Also, the reason why we saw this manifest on tests is because the SolrCloudTestCase.waitForState method eventually calls ZkStateReader.waitForState method which registers and then removes a collection state watcher. ",
            "id": "comment-16226416"
        },
        {
            "date": "2017-10-31T11:59:10+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This patch changes removeCollectionStateWatcher to handle evictions the same as unregisterCore method. It also removes all the workarounds introduces because of this bug in various places. ",
            "id": "comment-16226673"
        },
        {
            "date": "2017-10-31T12:23:46+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I added a test in ZkStateReaderTest which fails 100% of the time without the fix. This is ready. ",
            "id": "comment-16226690"
        },
        {
            "date": "2017-10-31T12:28:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 39376cd8b5ef03b3338c2e8fa31dce732749bcd7 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=39376cd ]\n\nSOLR-9440: The ZkStateReader.removeCollectionStateWatcher method can cache a DocCollection reference and never update it causing stale state to be returned in ClusterState ",
            "id": "comment-16226695"
        },
        {
            "date": "2017-10-31T12:29:20+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I'll observe the impact of this change on jenkins for a couple of days before porting it to branch_7x. ",
            "id": "comment-16226696"
        },
        {
            "date": "2017-10-31T17:38:53+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Thanks for looking at this Shalin!\n\n      if (v.canBeRemoved()) {\n        watchedCollectionStates.remove(collection);\n        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\n        reconstructState.set(true);\n\n\nI'm wondering if we need some synchronization here, with registerCollectionStateWatcher and also to make sure the watchedCollectionStates.remove and lazyCollectionStates.put is done atomically?\n\n-  private ConcurrentHashMap<String, CollectionWatch> collectionWatches = new ConcurrentHashMap<>();\n+  public ConcurrentHashMap<String, CollectionWatch> collectionWatches = new ConcurrentHashMap<>();\n\n\nIs this only for testing purposes? ",
            "id": "comment-16227172"
        },
        {
            "date": "2017-11-01T04:35:37+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "\nI'm wondering if we need some synchronization here, with registerCollectionStateWatcher and also to make sure the watchedCollectionStates.remove and lazyCollectionStates.put is done atomically\n\nHmm good point. I don't think we need synchronization here but we need to ensure that the result, once visible, is consistent. So this is a trick that the ZkStateReader uses \u2013 It adds all collections to the lazyCollectionStates map and never removes them unless the collection is deleted. But it gives priority to watchedCollectionStates over the lazy ones. This ensures that during constructState, the collection is always available in the cluster state even if it is removed from the watchedCollectionStates. Actually the lazyCollectionStates.put is not necessary but it is there just for safety.\n\nIs this only for testing purposes?\n\nOops, yes, thanks for catching. I'll revert it. ",
            "id": "comment-16233639"
        },
        {
            "date": "2017-11-01T04:45:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2e4b6929d2d714b1c12dc66cd46a2307c8bb1044 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2e4b692 ]\n\nSOLR-9440: Revert visibility change of collectionWatches ",
            "id": "comment-16233650"
        },
        {
            "date": "2017-11-08T06:36:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f6f5d01be9bafedb4794d2e3a104ea8db5bcfa78 in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f6f5d01 ]\n\nSOLR-9440: The ZkStateReader.removeCollectionStateWatcher method can cache a DocCollection reference and never update it causing stale state to be returned in ClusterState\n\n(cherry picked from commit 39376cd) ",
            "id": "comment-16243444"
        },
        {
            "date": "2017-11-08T06:36:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 23e1aeb2ce8f7abaee49000099d1a951328edebc in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=23e1aeb ]\n\nSOLR-9440: Revert visibility change of collectionWatches\n\n(cherry picked from commit 2e4b692) ",
            "id": "comment-16243445"
        }
    ]
}