{
    "id": "SOLR-1261",
    "title": "Lucene trunk renamed RangeQuery & Co to TermRangeQuery",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "search"
        ],
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I committed shortly ago LUCENE-1713, that renamed RangeQuery to TermRangeQuery (and also RangeFilter -> TermRangeFilter). The API of the old deprecated RangeQuery and RangeFilter classes was reverted to the state of Lucene 2.4, only the new classes contain the improvements of 2.9. So Solr will not compile anymore, because the new ctors of RangeQuery and setConstantScoreRewrite are no longer available, but were already included into Solr.\n\nThis can be solved by simply replacing RangeQuery to TermRangeQuery in the source.\n\nThere were some minor cleanups with the API, because there must not be any strange methods anmes because of BW compatibility in the new class. Also all ctors using Term are only available in the deprecated classes.",
    "attachments": {
        "SOLR-1261.patch": "https://issues.apache.org/jira/secure/attachment/12412546/SOLR-1261.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-12727270",
            "date": "2009-07-04T20:29:18+0000",
            "content": "This change is related to Lucenes new numeric search capabilities and some API cleanup because of this. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12727272",
            "date": "2009-07-04T20:59:18+0000",
            "content": "Attached is a patch, that does this (untested, but should work).\n\nIn my opinion, QueryParsing.java should now also be able to create a string representation of NumericRangeQueries, I did this, too (related to SOLR-940). "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12731576",
            "date": "2009-07-15T17:33:00+0000",
            "content": "In my opinion, QueryParsing.java should now also be able to create a string representation of NumericRangeQueries, I did this, too (related to SOLR-940).\n\nThe only problem is that Solr always prints out the value given by FieldType#toExternal which TermRangeQuery#toString wouldn't know about. So I guess we should leave it as is. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12731579",
            "date": "2009-07-15T17:36:12+0000",
            "content": "Committed revision 794328.\n\nThis has been committed as part of SOLR-940 and other related issues. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12731609",
            "date": "2009-07-15T18:22:26+0000",
            "content": "\nIn my opinion, QueryParsing.java should now also be able to create a string representation of NumericRangeQueries, I did this, too (related to SOLR-940).\n\nThe only problem is that Solr always prints out the value given by FieldType#toExternal which TermRangeQuery#toString wouldn't know about. So I guess we should leave it as is.\n\nYou misunderstood me. I did not change anything in TermRangeQuery, the code is identical to that before (only ConstantScoreRangeQuery and RangeQuery replaced by TermRangeQuery).\n\nWhat I have done as new contribution in this patch is, that I extended QueryParsing.java to print out the correct numeric query representation (also using toExternal and so on):\n\n\nif (query instanceof NumericRangeQuery) {\n      NumericRangeQuery q = (NumericRangeQuery)query;\n      String fname = q.getField();\n      FieldType ft = writeFieldName(fname, schema, out, flags);\n      out.append( q.includesMin() ? '[' : '{' );\n      Number lt = q.getMin();\n      Number ut = q.getMax();\n      if (lt==null) {\n        out.append('*');\n      } else {\n        writeFieldVal(lt.toString(), ft, out, flags);\n      }\n\n      out.append(\" TO \");\n\n      if (ut==null) {\n        out.append('*');\n      } else {\n        writeFieldVal(ut.toString(), ft, out, flags);\n      }\n\n      out.append( q.includesMax() ? ']' : '}' );\n}\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12731614",
            "date": "2009-07-15T18:39:02+0000",
            "content": "The only problem with the above code are Date Trie Queries, as they would be printed as long values... (effectively toExternal(Long.toString())   "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775798",
            "date": "2009-11-10T15:52:09+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}