{
    "id": "SOLR-2772",
    "title": "DateField parsing/formatting issues of years 0001-1000",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.5",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Sub-task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "see parent task for background",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13106635",
            "date": "2011-09-16T17:52:22+0000",
            "content": "Committed revision 1171691.\n\nworking on backport to 3x "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13106677",
            "date": "2011-09-16T18:42:32+0000",
            "content": "Committed revision 1171704.\n\ntrunk fixup of an unneccessary change i noticed when working on the backport "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13106745",
            "date": "2011-09-16T19:31:51+0000",
            "content": "Committed revision 1171739. - stupid jdoc mistake\nCommitted revision 1171741. - merge everything to 3x "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13152898",
            "date": "2011-11-18T14:35:20+0000",
            "content": "If the only issue was years less than 1000, we might want to consider bringing back the original hand-rolled formatting code and fixing it.\nA quick performance test shows it's over 4 times as fast.\n\nUsing the current code in DateField, I only got about 25K formats/sec.  To put that into perspective, formatting 100 dates takes 4ms - a non -trivial amount of time. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13154478",
            "date": "2011-11-21T20:42:19+0000",
            "content": "1) The original code was more broken then what we have now, so saying it's 4 times as fast is kind of meaningless.\n\n2) The only issue is not just (positive) years less then 1000, as noted in the parent issue, there is confusion about how to handle years less then 0001 because of ambiguity in xml dateTime format spec about year \"0\"\n\n...as i said in the parent issue, unless someone has a better idea, i'm open to moving towards (correct) hand rolled code \u2013 but we have to figure out what is \"correct\" as far as year 0.  This particular child issue was just to move forward with something that worked for year 0001 and above. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13154484",
            "date": "2011-11-21T20:46:25+0000",
            "content": "I don't know if that will help but maybe we should look at http://joda-time.sourceforge.net it seems they worked around the perf issues with the java impl. and its ASL-2 maybe we can include or get some code from them? - ignore me if I'm completely off here "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13154505",
            "date": "2011-11-21T21:05:36+0000",
            "content": "Simon: see parent issue with link to JodaTime thread where i asked about using JodaTime to deal with some of the issues faced by DateField and the XML dateTime spec (including stub code using JodaTime) and got a response that was not very promising. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13154509",
            "date": "2011-11-21T21:07:27+0000",
            "content": "1) The original code was more broken then what we have now, so saying it's 4 times as fast is kind of meaningless.\n\nSeems relevant that if the only difference in behavior between the old code and the new code is years < 1000, then I could fix the old code and get a 4x speedup. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13154551",
            "date": "2011-11-21T21:28:14+0000",
            "content": "I guess i don't understand what exactly you mean by \"original\". \n\nThe original circa Solr 1.1 hand rolled code for dealing with dates had all sorts of bugs, fixed in various ways over the years \u2013 this particular patch fixed two bugs in DateField (related to years 0001-1000 and millis on years before the epoch) and corrected the fact that TextResponseWriter was erroneously not using the well tested formatting code in DateField \u2013 so it was still susceptible to some of those old bugs.  (do i have the full list of those bugs handy: no, but if you're interested you can search Jira for them)\n\nIf you want to re-write this to be hand rolled go ahead, but please do so in the DateField code (and don't just revert the changes to TextResponseWriter) since tests directly against DateField are where most of the Unit testing of parsing/formatting esoteric dates live \u2013 if you keep all those tests happy (w/o writting yet another new set of parse/format methods) then i'll happily welcome whatever high-performance hand rolled solution you have. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13157867",
            "date": "2011-11-27T12:36:08+0000",
            "content": "Bulk close after 3.5 is released "
        }
    ]
}