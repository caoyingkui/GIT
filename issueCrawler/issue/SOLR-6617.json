{
    "id": "SOLR-6617",
    "title": "/update/json/docs handler needs to do a better job with tweet like JSON structures",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "SOLR-6304 allows me to send in arbitrary JSON document and have Solr do something reasonable with it. I tried this with a simple tweet and got a weird error:\n\ncurl \"http://localhost:8983/solr/tutorial/update/json/docs\" -H 'Content-type:application/json' -d @sample_tweet.json\n\n{\"responseHeader\":{\"status\":400,\"QTime\":11},\"error\":{\"msg\":\"Document contains multiple values for uniqueKey field: id=[14065694, 136447843652214784]\",\"code\":400}}\n\n\n\nHere's the tweet I'm trying to index:\n\n\n{\n        \"user\": {\n            \"name\": \"John Doe\",\n            \"screen_name\": \"example\",\n            \"lang\": \"en\",\n            \"time_zone\": \"London\",\n            \"listed_count\": 221,\n            \"id\": 14065694,\n            \"geo_enabled\": true\n        },\n        \"id\": \"136447843652214784\",\n        \"text\": \"Morning San Francisco - 36 hours and counting.. #datasift\",\n        \"created_at\": \"Tue, 15 Nov 2011 14:17:55 +0000\"\n}\n\n\n\nThe error is because the nested user object within the tweet also has an \"id\" field. So then I tried to map /user/id to user_id_s via:\n\n\ncurl \"http://localhost:8983/solr/tutorial/update/json/docs?f=user_id_s:/user/id\" -H 'Content-type:application/json' -d @sample_tweet.json\n{\"responseHeader\":{\"status\":400,\"QTime\":0},\"error\":{\"msg\":\"Document is missing mandatory uniqueKey field: id\",\"code\":400}}\n\n\n\nSo then I added the mapping for id explicitly and it worked:\n\ncurl \"http://localhost:8983/solr/tutorial/update/json/docs?f=id:/id&f=user_id_s:/user/id\" -H 'Content-type:application/json' -d @sample_tweet.json\n{\"responseHeader\":{\"status\":0,\"QTime\":25}}\n\nWorking through this wasn't terrible but our goal with features like this is to have Solr make good decisions when possible to ease the new user's burden of getting to know Solr.\n\nI'm just wondering if the reasonable thing to do wouldn't be to map the user fields with user_ prefix? ie /user/id becomes user_id automatically.\n\nLastly, I wanted to use field guessing with this so my JSON document gets indexed in a reasonable way and the only data that got indexed is:\n\n\n{\n        \"user_id_s\": \"14065694\",\n        \"id\": \"136447843652214784\",\n        \"_version_\": 1481614081193410600\n}\n\n\n\nSo I explicitly defined the /update/json/docs request handler in my solrconfig.xml as:\n\n\n  <requestHandler name=\"/update/json/docs\" class=\"solr.UpdateRequestHandler\">\n        <lst name=\"defaults\">\n         <str name=\"update.chain\">add-unknown-fields-to-the-schema</str>\n         <str name=\"stream.contentType\">application/json</str>\n       </lst>\n  </requestHandler>\n\n\n\nSame result - no field guessing! (this is using the schemaless example config)",
    "attachments": {
        "SOLR-6617.patch": "https://issues.apache.org/jira/secure/attachment/12674367/SOLR-6617.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-10-11T08:10:25+0000",
            "author": "Noble Paul",
            "content": "The behavior is expected (but not desirable)\nLet me explain why this happens. by default (in the absence of any 'f' parameter) , the value of \"f=/**\" . So all values are mapped with their corresponding names in the input json. \n\nso the following code should have worked\n\n\ncurl \"http://localhost:8983/solr/tutorial/update/json/docs?f=user_id_s:/user/id&f=/**\" -H 'Content-type:application/json' -d @sample_tweet.json\n\n\n\nOne solution I can think of is make f=/** do fully expanded name as the key with a reasonable delimiter . so all the field names  become user.screen_name , user.lang  etc\n\nIf necessary , we can provide a switch to simple names with a flag ",
            "id": "comment-14168058"
        },
        {
            "date": "2014-10-11T16:18:46+0000",
            "author": "Noble Paul",
            "content": "This adds new functionality to the parser  f=$FQN:/** . The $FQN creates the name as a fully qualified name. the /update/json/docs will start using f=$FQN:/** instead of f=/** \n\n$FQN will append all the parent names and use \".\" as a delimiter ",
            "id": "comment-14168231"
        },
        {
            "date": "2014-10-13T13:13:05+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I can see why you did not choose a simple parameter to enable FQN vs NAME. This makes mapping even more powerful because we can now choose how to certain nested sections individually. We'll need to document that we will use FQN by default because it breaks backward-compatibility with the previous release. ",
            "id": "comment-14169267"
        },
        {
            "date": "2014-10-13T18:50:49+0000",
            "author": "Timothy Potter",
            "content": "Patch looks good Noble Paul. I applied this to my test scenario:\n\n\ncurl \"http://localhost:8983/solr/tutorial/update/json/docs\" -H 'Content-type:application/json' -d @sample_tweet.json\n\n\n\nResulted in:\n\n\n{\n        \"user.name\": [\n          \"Stewart Townsend\"\n        ],\n        \"user.url\": [\n          \"http://www.stewarttownsend.com\"\n        ],\n        \"user.description\": [\n          \"Developer Relations at Datasift (www.datasift.com)  - Car racing petrol head, all things social lover, co-founder of www.flowerytweetup.com\"\n        ],\n        \"user.location\": [\n          \"iPhone: 53.852402,-2.220047\"\n        ],\n        \"user.statuses_count\": [\n          28247\n        ],\n        \"user.followers_count\": [\n          3094\n        ],\n        \"user.friends_count\": [\n          510\n        ],\n        \"user.screen_name\": [\n          \"stewarttownsend\"\n        ],\n        \"user.lang\": [\n          \"en\"\n        ],\n        \"user.time_zone\": [\n          \"London\"\n        ],\n        \"user.listed_count\": [\n          221\n        ],\n        \"user.id\": [\n          14065694\n        ],\n        \"user.id_str\": [\n          14065694\n        ],\n        \"user.geo_enabled\": [\n          true\n        ],\n        \"id\": \"136447843652214784\",\n        \"text\": [\n          \"Morning San Francisco - 36 hours and counting.. #datasift\"\n        ],\n        \"source\": [\n          \"<a href=\\\"http://www.tweetdeck.com\\\" rel=\\\"nofollow\\\">TweetDeck</a>\"\n        ],\n        \"created_at\": [\n          \"Tue, 15 Nov 2011 14:17:55 +0000\"\n        ],\n        \"_version_\": 1481875073806631000\n      }\n\n\n\nWhich I'd say is very reasonable behavior on Solr's part.  +1 for commit ",
            "id": "comment-14169749"
        },
        {
            "date": "2014-10-14T07:21:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1631649 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1631649 ]\n\nSOLR-6617 ",
            "id": "comment-14170619"
        },
        {
            "date": "2014-10-14T07:29:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1631656 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1631656 ]\n\nSOLR-6617 ",
            "id": "comment-14170623"
        },
        {
            "date": "2014-10-14T07:34:08+0000",
            "author": "Noble Paul",
            "content": "thanks Timothy Potter ",
            "id": "comment-14170626"
        },
        {
            "date": "2015-02-23T05:02:18+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332862"
        }
    ]
}