{
    "id": "SOLR-4707",
    "title": "LZ4.decompress()  throws ArrayIndexOutOfBoundsException",
    "details": {
        "affect_versions": "4.2,                                            4.2.1",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "The exception is thrown for all components I'm using: RealTimeGetHandler, TermVectorComponent, MoreLikethis, SearchHandler.\n\nHere 2 trace errors:\n\nhttp://localhost:8984/solr/osr/mlt?q=itemid:76069564&mlt.boost=true&fq=domainid:13554&fq= date_i:[NOW/DAY-30DAY TO NOW/DAY+1DAY]&fq=category:(kunst_und_kultur schweiz literatur)&rows=250\n\n\n{\"response\":{\"numFound\":70253,\"start\":0,\"maxScore\":1.311772,\"docs\":[{\"itemid\":\"116987750\",\"score\":1.311772},{\"itemid\":\"77298475\",\"score\":1.2506518},\n{\"itemid\":\"78497083\",\"score\":0.48435652},{\"itemid\":\"101957016\",\"score\":0.4811761},{\"itemid\":\"76771601\",\"score\":0.4811761},{\"itemid\":\"90468738\",\"score\":0.4811761},{\"itemid\":\"79075873\",\"score\":0.4811761},{\"itemid\":\"76837622\",\"score\":0.48091167},{\"itemid\":\"77206876\",\"sco{\"error\":{\"trace\":\"java.lang.ArrayIndexOutOfBoundsException\\n\\tat org.apache.lucene.codecs.compressing.LZ4.decompress(LZ4.java:132)\\n\\tat org.apache.lucene.codecs.compressing.CompressionMode$4.decompress(CompressionMode.java:135)\\n\\tat org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.visitDocument(CompressingStoredFieldsReader.java:258)\\n\\tat org.apache.lucene.index.SegmentReader.document(SegmentReader.java:139)\\n\\tat org.apache.lucene.index.BaseCompositeReader.document(BaseCompositeReader.java:116)\\n\\tat org.apache.solr.search.SolrIndexSearcher.doc(SolrIndexSearcher.java:643)\\n\\tat org.apache.solr.response.TextResponseWriter.writeDocuments(TextResponseWriter.java:270)\\n\\tat org.apache.solr.response.TextResponseWriter.writeVal(TextResponseWriter.java:177)\\n\\tat org.apache.solr.response.JSONWriter.writeNamedListAsMapWithDups(JSONResponseWriter.java:183)\\n\\tat org.apache.solr.response.JSONWriter.writeNamedList(JSONResponseWriter.java:299)\\n\\tat org.apache.solr.response.JSONWriter.writeResponse(JSONResponseWriter.java:95)\\n\\tat org.apache.solr.response.JSONResponseWriter.write(JSONResponseWriter.java:60)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.writeResponse(SolrDispatchFilter.java:627)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:358)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:141)\\n\\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\\n\\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)\\n\\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\\n\\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\\n\\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\\n\\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)\\n\\tat org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\\n\\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\\n\\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\\n\\tat org.mortbay.jetty.Server.handle(Server.java:326)\\n\\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\\n\\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)\\n\\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\\n\\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\\n\\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\\n\\tat org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)\\n\\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\\n\",\"code\":500}}\n\n\n\nhttp://localhost:8984/solr/osr/tv?q=itemid:105266867\n\n\n{\"responseHeader\":{\"status\":500,\"QTime\":1},\"response\":{\"numFound\":1,\"start\":0,\"docs\":[{\"itemid\":\"105266867\",\"text\":\"exklusiver kann man kaum w\u00fcrzen  safran ist das teuerste gew\u00fcrz der welt handverlesen und in m\u00fchevoller kleinstarbeit hergestellt ist safran sehr selten und wird in winzigen mengen gehandelt und verwendet\",\"title\":\"safran\",\"domainid\":4287,\"date_i\":\"2012-11-21T17:01:23Z\",\"date\":\"2012-11-21T17:01:09Z\",\"category\":[\"kultur\",\"literatur\",\"gesellschaft\",\"umwelt\",\"trinken\",\"essen\"]}]},\"termVectors\":[\"uniqueKeyFieldName\",\"itemid\",\"105266867\",[\"uniqueKey\",\"105266867\"]],\"error\":{\"trace\":\"java.lang.ArrayIndexOutOfBoundsException\\n\\tat org.apache.lucene.codecs.compressing.LZ4.decompress(LZ4.java:132)\\n\\tat org.apache.lucene.codecs.compressing.CompressionMode$4.decompress(CompressionMode.java:135)\\n\\tat org.apache.lucene.codecs.compressing.CompressingTermVectorsReader.get(CompressingTermVectorsReader.java:493)\\n\\tat org.apache.lucene.index.SegmentReader.getTermVectors(SegmentReader.java:175)\\n\\tat org.apache.lucene.index.BaseCompositeReader.getTermVectors(BaseCompositeReader.java:97)\\n\\tat org.apache.lucene.index.IndexReader.getTermVector(IndexReader.java:385)\\n\\tat org.apache.solr.handler.component.TermVectorComponent.process(TermVectorComponent.java:313)\\n\\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:208)\\n\\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\\n\\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1817)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:639)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:345)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:141)\\n\\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\\n\\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)\\n\\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\\n\\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\\n\\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\\n\\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)\\n\\tat org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\\n\\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\\n\\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\\n\\tat org.mortbay.jetty.Server.handle(Server.java:326)\\n\\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\\n\\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)\\n\\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\\n\\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\\n\\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\\n\\tat org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)\\n\\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\\n\",\"code\":500}}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Adrien Grand",
            "id": "comment-13629951",
            "date": "2013-04-12T09:40:26+0000",
            "content": "Thanks for reporting the issue Victor. Can you reproduce the issue if you reindex your documents? I'd be happy to take a look at the index too if you can share it with us. "
        },
        {
            "author": "Victor Ruiz",
            "id": "comment-13629953",
            "date": "2013-04-12T09:57:23+0000",
            "content": "Hi Adrien, I use master-slave replication and the problem is only happening in one of the two slaves. I'm going to try to copy manually the files from the master to the slave and check if the problem can be reproduced again.\n\nThe index size is around 8GB, I can save a copy before replacing it with the master's index. How can I send it to you? Do you have dropbox or any other kind of cloud storage? "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13629954",
            "date": "2013-04-12T10:00:08+0000",
            "content": "Could it be that the file is different on your slaves compared to the master? COuld you checksum them and make sure it's not a network or some other transmission-time corruption? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13629958",
            "date": "2013-04-12T10:04:07+0000",
            "content": "Yeah that solr replication handler's test fails almost daily... doesn't inspire much confidence. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13629968",
            "date": "2013-04-12T10:18:12+0000",
            "content": "Could it be that the master-slave replication does not copy the files in correct order? I have in mind that it has some hard-coded filename filters when copying and move some data files like the commit point metadata as last file to the target slave. As Lucene 4 uses a lot of different file names, this may be broken, so the files are not copied in right order.\n\nIf this is the case, we can move this issue back to Solr  "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13629970",
            "date": "2013-04-12T10:20:00+0000",
            "content": "Moved back... "
        },
        {
            "author": "Victor Ruiz",
            "id": "comment-13630006",
            "date": "2013-04-12T12:14:11+0000",
            "content": "Checksum of files in the slave didn't match the checksum in the master, so I guess there was a fail during replication.\nRestoring the index files from master to slave has solved the problem.\n\nI thought that Solr replication was fault tolerant and that it could ensure data consistency between master and slaves, but now I see that it's not trustable 100%.\n "
        }
    ]
}