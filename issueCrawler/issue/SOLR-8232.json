{
    "id": "SOLR-8232",
    "title": "bin/solr does not rotate console log file",
    "details": {
        "components": [
            "scripts and tools"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3",
        "status": "Resolved",
        "resolution": "Not A Problem",
        "priority": "Minor"
    },
    "description": "The bin/solr script, when started with bin/solr start, uses this command to start Solr:\n\n\n nohup \"$JAVA\" \"${SOLR_START_OPTS[@]}\" $SOLR_ADDL_ARGS -jar start.jar \\\n        \"-XX:OnOutOfMemoryError=$SOLR_TIP/bin/oom_solr.sh $SOLR_PORT $SOLR_LOGS_DIR\" \"${SOLR_JETTY_CONFIG[@]}\" \\\n        1>\"$SOLR_LOGS_DIR/solr-$SOLR_PORT-console.log\" 2>&1 & echo $! > \"$SOLR_PID_DIR/solr-$SOLR_PORT.pid\"\n\n\n\nThis sends console output to stdout, with no means of rotating the log file, meaning it will eventually fill the drive unless restarted.\n\nI would propose that stdout be written to dev/null and we use proper means for handling logging, which can do proper log rotation as configured by the user.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-06T13:21:02+0000",
            "author": "Alexandre Rafalovitch",
            "content": "/dev/null is a bit drastic, but it should be possible to configure log4j to log vast majority to a rotating file. ",
            "id": "comment-14993657"
        },
        {
            "date": "2015-11-06T14:53:38+0000",
            "author": "Shawn Heisey",
            "content": "The logf4j config already does log to a rotated file ... but it also logs to the console.  The console log file, which grows unbounded, is created by redirecting stdout and stderr in the start script.  Gettting rotation on that log file would mean redirecting through a script or program, rather than simply redirecting to a file.  We could do that, but I don't think that's a good use of committer time.\n\nIf we change the CONSOLE logging to WARN or higher, there will be almost nothing logged in the console log unless there's a problem.  It would also eliminate what I suspect is a lot of user confusion when they run the zkcli script and see a ton of INFO logs from zookeeper. ",
            "id": "comment-14993769"
        },
        {
            "date": "2015-11-06T15:20:48+0000",
            "author": "Upayavira",
            "content": "I'd support that - >=warn only. ",
            "id": "comment-14993803"
        },
        {
            "date": "2015-11-06T15:33:03+0000",
            "author": "Yonik Seeley",
            "content": "What is logged to the console that isn't logged in other logs? ",
            "id": "comment-14993818"
        },
        {
            "date": "2015-11-06T16:23:02+0000",
            "author": "Shawn Heisey",
            "content": "What is logged to the console that isn't logged in other logs?\n\nOrdinarily, I would think there's nothing logged to the console that's not also sent to solr.log.  If something goes really wrong, there might be things logged to stdout/stderr that do not go through a logging framework, which is why it's a good idea to keep redirecting the console to a logfile.\n\nAnother issue was brought up on the user list \u2013 the GC log, which has the same problem.  Java has a solution for that:\n\nhttp://stackoverflow.com/questions/3822097/rolling-garbage-collector-logs-in-java/12277309#12277309\n\nI can work on a patch for these issues. ",
            "id": "comment-14993886"
        },
        {
            "date": "2015-11-06T16:38:06+0000",
            "author": "Shawn Heisey",
            "content": "There are some log4j.properties files for tests that only have console logging, set to INFO.  I'm thinking I probably shouldn't touch these, or I will risk screwing up tests.  Does anyone happen to know whether those should be left at INFO? ",
            "id": "comment-14993915"
        },
        {
            "date": "2015-11-06T16:40:03+0000",
            "author": "Yonik Seeley",
            "content": "bq, Ordinarily, I would think there's nothing logged to the console that's not also sent to solr.log. If something goes really wrong, there might be things logged to stdout/stderr that do not go through a logging framework, which is why it's a good idea to keep redirecting the console to a logfile.\n\nSo that suggests we should shut off logging to the console altogether (i.e. not just WARN or higher),  while still redirecting it to a logfile for anything that somehow misses the logging framewor? ",
            "id": "comment-14993922"
        },
        {
            "date": "2015-11-06T16:49:03+0000",
            "author": "Shawn Heisey",
            "content": "With console logging set to WARN, this is what I got in server/log/solr-8983-consolr.log when I started a freshly built server on trunk:\n\n\nWARNING: System properties and/or JVM args set.  Consider using --dry-run or --exec\n401  WARN  (main) [   ] o.e.j.s.h.RequestLogHandler !RequestLog\n1170 WARN  (main) [   ] o.e.j.s.SecurityHandler ServletContext@o.e.j.w.WebAppContext@e25b2fe{/solr,file:/home/elyograg/asf/trunk/solr/server/solr-webapp/webapp/,STARTING}{/home/elyograg/asf/trunk/solr/server/solr-webapp/webapp} has uncovered http methods for path: /\n1500 WARN  (main) [   ] o.a.s.c.SolrResourceLoader Can't find (or read) directory to add to classloader: lib (resolved as: /home/elyograg/asf/trunk/solr/server/solr/lib).\n\n\n\nAre these worth fixing? ",
            "id": "comment-14993938"
        },
        {
            "date": "2015-11-06T16:55:19+0000",
            "author": "Shawn Heisey",
            "content": "So that suggests we should shut off logging to the console altogether (i.e. not just WARN or higher), while still redirecting it to a logfile for anything that somehow misses the logging framewor?\n\nTurning off CONSOLE logging entirely is certainly an option, but I like the idea of keeping WARN and higher on the console, so that any non-framework info that gets logged also has WARN/ERROR messages from the framework in context. ",
            "id": "comment-14993951"
        },
        {
            "date": "2015-11-06T17:23:57+0000",
            "author": "Erick Erickson",
            "content": "+1 on piping console logging to dev/nul in the bin/start script when\nstarting in the background. There's no reason that I can see for\nlogging it twice and it's trappy.\n\nWhen running in foreground we should still send it out IMO. That gives\nus the option of collection a very long log file easily. I've often tried\nto \"get the logs\" and found that the 4M rotation size thwarts me, and\nrunning in foreground and piping console to a log gives me an easy\nway to work with someone and get all the output from forever\nin those cases.\n\nSure, I could have them change the log rotation size, but running in\nforeground and piping is easier I think.\n\nThe same need would be served by a script flag that does what \nhappens currently, i.e. pipes to a console log file that grows\nforever but defaults to sending it to dev/nul ",
            "id": "comment-14994027"
        },
        {
            "date": "2015-11-06T17:29:01+0000",
            "author": "Timothy Potter",
            "content": "The intent when I set this up was that sysadmins would actually configure the log4j.properties to meet their needs, which in most cases means turning off the CONSOLE logger as it is redundant to the solr logger. I guess it's too much to ask people to configure their log settings when going into production. +1 to Erick's suggestion ",
            "id": "comment-14994043"
        },
        {
            "date": "2015-11-06T18:37:42+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I think it is too much to ask if it is not in some \"going to production\" guide explicitly and we funnel people to that guide.\n\nSolr can be overwhelming and people don't know what issues to deal with until they have to deal with them. In case of logs, it happens much later (when disk space goes red).\n\nI am -5 (yeah, that strong) on piping console to /dev/null. Because that way you will not know what was missed. What critical message got thrown from the guts of 3rd party library, etc. I am +1 on not duplicating information though. If the output is supposed to be mostly ever empty, there is no harm redirecting it to somewhere, given that we already have various logging. ",
            "id": "comment-14994173"
        },
        {
            "date": "2015-11-06T19:16:54+0000",
            "author": "Erick Erickson",
            "content": "Alexandre Rafalovitch Your point about poorly-behaved messages (i.e. not going through logging) being lost is well taken, but what do you think should be done in that case to not blow up disk space by recording all console output? ",
            "id": "comment-14994254"
        },
        {
            "date": "2015-11-06T19:18:54+0000",
            "author": "Timothy Potter",
            "content": "I think it is too much to ask if it is not in some \"going to production\" guide explicitly and we funnel people to that guide.\nYou mean like the Solr ref guide? https://cwiki.apache.org/confluence/display/solr/Configuring+Logging ",
            "id": "comment-14994257"
        },
        {
            "date": "2015-11-06T19:28:40+0000",
            "author": "Erick Erickson",
            "content": "Hmmm, perhaps we need to direct more people to that whole section of the ref guide.\n\nThat said, though, the start scripts are still trappy IMO. ",
            "id": "comment-14994280"
        },
        {
            "date": "2015-11-06T21:17:47+0000",
            "author": "Alexandre Rafalovitch",
            "content": "You mean this line in a middle of a section that is itself sandwiched between two debugging sections:\n\n    While you\u2019re customizing the log4j.properties file, we also recommend removing the CONSOLE appender from the rootLogger by changing the log4j.rootLogger property to:\n\nAnd it is not in \"Taking Solr to Production\" section either. The correct funnel would be something that says in the \"Taking Solr to Production\":\n    1. Do X\n    2. Do Y\n    3. Do logging change Z, as the default configuration redirects console and does not rotate log files. Leaving it at default may use up available space.\n\nOr worst case, here: https://cwiki.apache.org/confluence/display/solr/Taking+Solr+to+Production#TakingSolrtoProduction-Logsettings ",
            "id": "comment-14994444"
        },
        {
            "date": "2015-11-06T21:20:32+0000",
            "author": "Alexandre Rafalovitch",
            "content": "If we redirect all our own output away from the console in the background mode using log4j, we are expecting that nothing will show up in the log file that redirects console output. If something does, it will be an unpleasant surprise. If we have enough unpleasant surprises to blow up disk space, we have a bigger problem. ",
            "id": "comment-14994446"
        },
        {
            "date": "2015-11-06T21:26:14+0000",
            "author": "Upayavira",
            "content": "The log entries I had were just those of a busy server. Nothing going wrong.\n\nWe aren't redirecting anything away, we're reducing duplication. Everything is logged already. We're just making sure it is logged somewhere that won't cause other problems.\n\nIf we decided nothing is going to go to the console, it makes sense not to create the console log file, as, having an empty log file gives a false sense of security when the other log file could be full of errors. ",
            "id": "comment-14994457"
        },
        {
            "date": "2015-11-06T21:32:29+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Ok. Perhaps I am missing something basic here. I thought that solr-$SOLR_PORT-console.log contained three kinds of things:\n\n\n\tstuff sent there by log4j setting\n\tstuff sent to stdout by a random library (possibly not Solr) saying System.out.println(\"Oh, fiddlesticks\")\n\tstuff sent to stderr (because of 2>&1) by a random library (surely not Solr) saying System.err.println(\"Sky is falling\")\n\n\n\nI am in full agreement on reducing duplication with the first (log4j) item. Like you said, we are already logging it somewhere.\n\nWhat I thought I was commenting on was that I want the second and third item to stay captured somewhere. Which will not be if we do 1>/dev/null 2>&1 . ",
            "id": "comment-14994470"
        },
        {
            "date": "2015-11-06T22:35:14+0000",
            "author": "Shawn Heisey",
            "content": "Timothy Potter,\n\nIn preparation for handling GC log rotation, I am looking at the start scripts.  The code handling GC_LOG_OPTS in the shell script seems odd to me:\n\n\nif [ \"$GC_LOG_OPTS\" != \"\" ]; then\n  gc_log_flag=\"-Xloggc\"\n  if [ \"$JAVA_VENDOR\" == \"IBM J9\" ]; then\n    gc_log_flag=\"-Xverbosegclog\"\n  fi\n  GC_LOG_OPTS=($GC_LOG_OPTS \"$gc_log_flag:$SOLR_LOGS_DIR/solr_gc.log\")\nelse\n  GC_LOG_OPTS=()\nfi\n\n\n\nThis allows the following construct to disable GC logging, which is very cool:\n\n\nexport GC_LOG_OPTS=\n\n\n\nBut if you instead want to entirely override the logging options, the start script will include your options as well as the built-in option that enables GC logging.  The built-in options are included last, so I think user-provided options may not do what was intended.\n\nAlso, if I read the code right, then if GC_LOG_OPTS is not defined at all when the quoted code block is reached, GC logging is disabled.  As long as users don't mess with any of the scripts this isn't really a problem, but I believe the docs do encourage people to edit the ${SOLR_HOME}/solr.in script. ",
            "id": "comment-14994600"
        },
        {
            "date": "2015-11-06T22:51:08+0000",
            "author": "Timothy Potter",
            "content": "Shawn Heisey that's not my code  ",
            "id": "comment-14994618"
        },
        {
            "date": "2015-11-06T22:56:17+0000",
            "author": "Shawn Heisey",
            "content": "that's not my code\n\nMy apologies.\n\nI'm perfectly willing to rip things out and make them the way I think they should be, but I don't like doing so without having a full understanding of intent. ",
            "id": "comment-14994628"
        },
        {
            "date": "2015-11-06T23:32:50+0000",
            "author": "Timothy Potter",
            "content": "no worries ... my main point is as far as I'm concerned, fix what you think needs fixing and I appreciate you digging in it ... I haven't kept a close eye on bin/solr for a while, so there are things I'm not clear on in there anymore either.  ",
            "id": "comment-14994701"
        },
        {
            "date": "2016-09-27T11:20:54+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Now that we mute CONSOLE appenders when running in bg, the console log file becomes almost empty, so the risk of it filling up during a run is now almost nonexistent. On each restart a new file is started, and in SOLR-9570 I propose to delete the oldest of those.\n\nI'm resolving this as \"Not a problem\" for now. If you believe that stdout/err logging during a single run still should rotate its log file automatically (which requires something else than redirect) then please re-open and continue work on this issue. ",
            "id": "comment-15525821"
        }
    ]
}