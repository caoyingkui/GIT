{
    "id": "SOLR-2615",
    "title": "Have LogUpdateProcessor log each command (add, delete, ...) at debug/FINE level",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.4",
            "4.0-ALPHA"
        ],
        "components": [
            "update"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "It would be great if the LogUpdateProcessor logged each command (add, delete, ...) at debug (\"Fine\") level. Presently it only logs a summary of 8 commands and it does so at the very end.\n\nThe attached patch implements this.\n\n\tI moved the LogUpdateProcessor ahead of RunUpdateProcessor so that the debug level log happens before Solr does anything with it. It should not affect the ordering of the existing summary log which happens at finish().\n\tI changed UpdateRequestProcessor's static log variable to be an instance variable that uses the current class name. I think this makes much more sense since I want to be able to alter logging levels for a specific processor without doing it for all of them. This change did require me to tweak the factory's detection of the log level which avoids creating the LogUpdateProcessor.\n\tThere was an NPE bug in AddUpdateCommand.getPrintableId() in the event there is no schema unique field. I fixed that.\n\n\n\nYou may notice I use SLF4J's nifty log.debug(\"message blah {} blah\", var) syntax, which is both performant and concise as there's no point in guarding the debug message with an isDebugEnabled() since debug() will internally check this any way and there is no string concatenation if debug isn't enabled.",
    "attachments": {
        "SOLR-2615_LogUpdateProcessor_debug_logging.patch": "https://issues.apache.org/jira/secure/attachment/12483454/SOLR-2615_LogUpdateProcessor_debug_logging.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13053597",
            "date": "2011-06-23T01:41:02+0000",
            "content": "You may notice I use SLF4J's nifty log.debug(\"message blah {} blah\", var) syntax, which is both performant and concise as there's no point in guarding the debug message with an isDebugEnabled() since debug() will internally check this any way and there is no string concatenation if debug isn't enabled.\n\nI think there is still a point to caching isDebugEnabled() though.  The implementation most likely involves checking volatile variables, and can involve checking a hierarchy of loggers.  I assume the cost may be different for different logging implementations too.  Better to just cache if you can and not worry about it. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13053630",
            "date": "2011-06-23T03:28:01+0000",
            "content": "I traced the code from SLF4J thru JDK14 Logging and indeed there is a volatile-read at the end.  I didn't see any hierarchy traversal.  Isn't this a bit of a micro-optimization concern?  These log calls are on a per-indexed document basis, not a per-term/token or low level detail basis.  My personal code taste eschews verbosity.\n\nBut I'm not going to fight it further, so if you still don't agree then I'm not going to object to any log-level cache & check modifications when you commit it. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13061467",
            "date": "2011-07-07T18:10:47+0000",
            "content": "Yonik, if I instead use a doDebug boolean flag initialized in the constructor, would that sufficiently satisfy you to commit this? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13062003",
            "date": "2011-07-08T15:08:45+0000",
            "content": "Yonik, if I instead use a doDebug boolean flag initialized in the constructor, would that sufficiently satisfy you to commit this?\n\nYep, I think so... "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13062487",
            "date": "2011-07-09T16:06:01+0000",
            "content": "I was trying to test this patch (actually see what the new logging output looked like) and when trying to change the log level from http://localhost:8983/solr/admin/logging\nI can't seem to get anything above the \"INFO\" level.  For example, changing \"root\" to SEVERE works to suppress messages at the INFO level, but changing it to \"FINEST\" doesn't get me anything more than \"INFO\".  Any clues? "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13062618",
            "date": "2011-07-09T20:45:59+0000",
            "content": "If I use the DIH handler and turn on threads=2 I get more debugging output than if I don't use threads... It actually outputs EVERY add to Solr...\n\nIs this something that should be fixes here too? "
        },
        {
            "author": "David Smiley",
            "id": "comment-13062674",
            "date": "2011-07-10T04:42:00+0000",
            "content": "Yonik,\n In JDK14 logging, the console logger has a default threshold of INFO. This makes the out-of-the-box use of Solr's logging admin page a little deceiving since it more detailed logging appears to do nothing. To quickly configure the threshold, look at SOLR-2616 which includes a logging config file with a commented threshold adjustment.  \n\nBill,\n  I'm not sure about the log output of the DIH with threads=2; it would appear to be specific to the DIH based on your description and unrelated to the files involved in this patch. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13063382",
            "date": "2011-07-11T15:07:16+0000",
            "content": "Thanks for the tips David, hopefully when SOLR-2616 is committed we can fix this oddity.\nI've committed this patch to trunk and will backport. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106200",
            "date": "2011-09-16T14:48:50+0000",
            "content": "bulk close for 3.4 "
        }
    ]
}