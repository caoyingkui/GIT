{
    "id": "LUCENE-7423",
    "title": "AutoPrefixPostingsFormat: a PostingsFormat optimized for prefix queries on text fields.",
    "details": {
        "resolution": "Not A Problem",
        "affect_versions": "None",
        "components": [
            "modules/sandbox"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Closed",
        "type": "New Feature"
    },
    "description": "The autoprefix terms dict added in https://issues.apache.org/jira/browse/LUCENE-5879 has been removed with https://issues.apache.org/jira/browse/LUCENE-7317.\n\nThe new points API is now used to do efficient range queries but the replacement for prefix string queries is unclear. The edge ngrams could be used instead but they have a lot of drawbacks and are hard to configure correctly. The completion postings format is also a good replacement but it requires to have a big FST in RAM and it cannot be intersected with other fields. \n\nThis patch is a proposal for a new PostingsFormat optimized for prefix query on string fields. It detects prefixes that match \"enough\" terms and writes auto-prefix terms into their own virtual field.\n At search time the virtual field is used to speed up prefix queries that match \"enough\" terms.\nThe auto-prefix terms are built in two pass:\n\n\tThe first pass builds a compact prefix tree. Since the terms enum is sorted the prefixes are flushed on the fly depending on the input. For each prefix we build its corresponding inverted lists using a DocIdSetBuilder. The first pass visits each term of the field TermsEnum only once. When a prefix is flushed from the prefix tree its inverted lists is dumped into a temporary file for further use. This is necessary since the prefixes are not sorted when they are removed from the tree. The selected auto prefixes are sorted at the end of the first pass.\n\n\n\n\n\tThe second pass is a sorted scan of the prefixes and the temporary file is used to read the corresponding inverted lists.\n\n\n\nThe patch is just a POC and there are rooms for optimizations but the first results are promising:\nI tested the patch with the geonames dataset. I indexed all the titles with the KeywordAnalyzer and compared the index/merge time and the size of the indices. \n\nThe edge ngram index (with a min edge ngram size of 2 and a max of 20) takes 572M on disk and it took 130s to index and optimize the 11M titles. \n\nThe auto prefix index takes 287M on disk and took 70s to index and optimize the same 11M titles. Among the 287M, only 170M are used for the auto prefix fields and the rest is for the regular keyword field. All the auto prefixes were generated for this test (at least 2 terms per auto-prefix).  \n\nThe queries have similar performance since we are sure on both sides that one inverted list can answer any prefix query.",
    "attachments": {
        "LUCENE-7423.patch": "https://issues.apache.org/jira/secure/attachment/12825436/LUCENE-7423.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15434056",
            "author": "Robert Muir",
            "date": "2016-08-24T01:55:20+0000",
            "content": "i still am not sure about the benchmark. indexing prefixes of 2-20, come on, of course that's gonna waste disk! What strings will you really be speeding up?\n\nSomething like 2-5, now we're talking. Of course, autoprefix has the advantage that it can magically determine something better than \"2-5\", but still we know a static case can be competitive, our numerics were very decent for years based on those facts. I'd like to see more fair numbers, as the analysis chain can handle this case, too, and its also more user-friendly.\n\nMy concern is the cost of maintenance here vs the actual tradeoff of performance we get for a relatively obscure case (prefixes). we have to maintain a large amount of code for a corner-case. Instead, If we want to spend extra disk on accelerating wildcards, i would honestly rather it be helping the true worst cases (e.g. suffix trie or similar datastructures). "
        },
        {
            "id": "comment-15434935",
            "author": "Jim Ferenczi",
            "date": "2016-08-24T13:29:09+0000",
            "content": "(edited since the results of the autoprefix were wrong due to a bug in the code to generate the prefixes)\n\nI've added a small benchmark AutoPrefixPerf.java (modified from Michael McCandless utils).\n\nFor the benchmark I used the english wikipedia title and a standard analyzer:\n\nStandard analyzer\nA single field in this test:\n\n\t\"field\": standard analyzer\n\n\n\n\nIndexed 12600000: 33.756 sec\nFinal Indexed 12696047: 33.9 sec\nOptimize...\nAfter force merge: 37.794 sec\nClose...\nAfter close: 37.798 sec\nDone CheckIndex:\nSegments file=segments_1 numSegments=1 version=7.0.0 id=ex11gzoft89z21le5c93bpett\n  1 of 1: name=_j maxDoc=12696047\n    version=7.0.0\n    id=ex11gzoft89z21le5c93bpets\n    codec=Lucene62\n    compound=false\n    numFiles=7\n    size (MB)=78.562\n    diagnostics = {os=Mac OS X, java.vendor=Oracle Corporation, java.version=1.8.0_77, java.vm.version=25.77-b03, lucene.version=7.0.0, mergeMaxNumSegments=1, os.arch=x86_64, java.runtime.version=1.8.0_77-b03, source=merge, mergeFactor=9, os.version=10.11.4, timestamp=1472043738648}\n    no deletions\n    test: open reader.........OK [took 0.002 sec]\n    test: check integrity.....OK [took 0.046 sec]\n    test: check live docs.....OK [took 0.000 sec]\n    test: field infos.........OK [1 fields] [took 0.000 sec]\n    test: field norms.........OK [0 fields] [took 0.000 sec]\n    test: terms, freq, prox...OK [2513966 terms; 34713220 terms/docs pairs; 0 tokens] [took 2.321 sec]\n      field \"field\":\n        index FST:\n          699982 bytes\n        terms:\n          2513966 terms\n          20843092 bytes (8.3 bytes/term)\n        blocks:\n          80953 blocks\n          59384 terms-only blocks\n          10 sub-block-only blocks\n          21559 mixed blocks\n          18273 floor blocks\n          25611 non-floor blocks\n          55342 floor sub-blocks\n          13294379 term suffix bytes (164.2 suffix-bytes/block)\n          2538232 term stats bytes (31.4 stats-bytes/block)\n          8829391 other bytes (109.1 other-bytes/block)\n          by prefix length:\n             0: 5\n             1: 421\n             2: 5620\n             3: 18794\n             4: 31598\n             5: 16630\n             6: 5322\n             7: 1709\n             8: 443\n             9: 138\n            10: 249\n            11: 14\n            12: 2\n            13: 6\n            14: 2\n      \n    test: stored fields.......OK [0 total field count; avg 0.0 fields per doc] [took 0.257 sec]\n    test: term vectors........OK [0 total term vector count; avg 0.0 term/freq vector fields per doc] [took 0.000 sec]\n    test: docvalues...........OK [0 docvalues fields; 0 BINARY; 0 NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET] [took 0.000 sec]\n    test: points..............OK [0 fields, 0 points] [took 0.000 sec]\n\ndetailed segment RAM usage: \n_j(7.0.0):C12696047: 741.9 KB\n|-- postings [PerFieldPostings(segment=_j formats=1)]: 683.8 KB\n    |-- format 'Lucene50_0' [BlockTreeTermsReader(fields=1,delegate=Lucene50PostingsReader(positions=false,payloads=false))]: 683.8 KB\n        |-- field 'field' [BlockTreeTerms(terms=2513966,postings=34713220,positions=-1,docs=12682564)]: 683.7 KB\n            |-- term index [FST(input=BYTE1,output=ByteSequenceOutputs,packed=false]: 683.6 KB\n        |-- delegate [Lucene50PostingsReader(positions=false,payloads=false)]: 32 bytes\n|-- stored fields [CompressingStoredFieldsReader(mode=FAST,chunksize=16384)]: 58.1 KB\n    |-- stored field index [CompressingStoredFieldsIndexReader(blocks=97)]: 58.1 KB\n        |-- doc base deltas: 29.1 KB\n        |-- start pointer deltas: 26.6 KB\n\nNo problems were detected with this index.\n\n\n\n\n-EdgeNgram analyzer  min=2 max=5\nTwo fields for this test:\n\n\t\"field\": standard analyzer\n\tfield-edge: edge ngram analyzer (min=2, max=5) on top of a standard analyzer.\n\n\n\n\nIndexed 12600000: 70.831 sec\nFinal Indexed 12696047: 71.484 sec\nOptimize...\nAfter force merge: 80.344 sec\nClose...\nAfter close: 80.347 sec\nDone CheckIndex:\nSegments file=segments_1 numSegments=1 version=7.0.0 id=8bm8xy2peb5wo3td0ptgwv036\n  1 of 1: name=_19 maxDoc=12696047\n    version=7.0.0\n    id=8bm8xy2peb5wo3td0ptgwv035\n    codec=Lucene62\n    compound=false\n    numFiles=7\n    size (MB)=224.803\n    diagnostics = {os=Mac OS X, java.vendor=Oracle Corporation, java.version=1.8.0_77, java.vm.version=25.77-b03, lucene.version=7.0.0, mergeMaxNumSegments=1, os.arch=x86_64, java.runtime.version=1.8.0_77-b03, source=merge, mergeFactor=15, os.version=10.11.4, timestamp=1472044255056}\n    no deletions\n    test: open reader.........OK [took 0.002 sec]\n    test: check integrity.....OK [took 0.130 sec]\n    test: check live docs.....OK [took 0.000 sec]\n    test: field infos.........OK [2 fields] [took 0.000 sec]\n    test: field norms.........OK [0 fields] [took 0.000 sec]\n    test: terms, freq, prox...OK [3459987 terms; 155467747 terms/docs pairs; 0 tokens] [took 3.736 sec]\n      field \"field\":\n        index FST:\n          699967 bytes\n        terms:\n          2513966 terms\n          20843092 bytes (8.3 bytes/term)\n        blocks:\n          80953 blocks\n          59384 terms-only blocks\n          10 sub-block-only blocks\n          21559 mixed blocks\n          18273 floor blocks\n          25611 non-floor blocks\n          55342 floor sub-blocks\n          13294377 term suffix bytes (164.2 suffix-bytes/block)\n          2538232 term stats bytes (31.4 stats-bytes/block)\n          8836971 other bytes (109.2 other-bytes/block)\n          by prefix length:\n             0: 5\n             1: 421\n             2: 5620\n             3: 18794\n             4: 31598\n             5: 16630\n             6: 5322\n             7: 1709\n             8: 443\n             9: 138\n            10: 249\n            11: 14\n            12: 2\n            13: 6\n            14: 2\n      \n      field \"field-edge\":\n        index FST:\n          265903 bytes\n        terms:\n          946021 terms\n          4693480 bytes (5.0 bytes/term)\n        blocks:\n          30830 blocks\n          26448 terms-only blocks\n          16 sub-block-only blocks\n          4366 mixed blocks\n          6054 floor blocks\n          5852 non-floor blocks\n          24978 floor sub-blocks\n          2954296 term suffix bytes (95.8 suffix-bytes/block)\n          990273 term stats bytes (32.1 stats-bytes/block)\n          2750060 other bytes (89.2 other-bytes/block)\n          by prefix length:\n             0: 5\n             1: 313\n             2: 6051\n             3: 21746\n             4: 2272\n             5: 396\n             6: 28\n             7: 16\n             8: 3\n      \n    test: stored fields.......OK [0 total field count; avg 0.0 fields per doc] [took 0.319 sec]\n    test: term vectors........OK [0 total term vector count; avg 0.0 term/freq vector fields per doc] [took 0.000 sec]\n    test: docvalues...........OK [0 docvalues fields; 0 BINARY; 0 NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET] [took 0.000 sec]\n    test: points..............OK [0 fields, 0 points] [took 0.000 sec]\n\ndetailed segment RAM usage: \n_19(7.0.0):C12696047: 1 MB\n|-- postings [PerFieldPostings(segment=_19 formats=1)]: 943.6 KB\n    |-- format 'Lucene50_0' [BlockTreeTermsReader(fields=2,delegate=Lucene50PostingsReader(positions=false,payloads=false))]: 943.6 KB\n        |-- field 'field' [BlockTreeTerms(terms=2513966,postings=34713220,positions=-1,docs=12682564)]: 683.7 KB\n            |-- term index [FST(input=BYTE1,output=ByteSequenceOutputs,packed=false]: 683.6 KB\n        |-- field 'field-edge' [BlockTreeTerms(terms=946021,postings=120754527,positions=-1,docs=12645321)]: 259.8 KB\n            |-- term index [FST(input=BYTE1,output=ByteSequenceOutputs,packed=false]: 259.7 KB\n        |-- delegate [Lucene50PostingsReader(positions=false,payloads=false)]: 32 bytes\n|-- stored fields [CompressingStoredFieldsReader(mode=FAST,chunksize=16384)]: 95.2 KB\n    |-- stored field index [CompressingStoredFieldsIndexReader(blocks=97)]: 95.2 KB\n        |-- doc base deltas: 47.5 KB\n        |-- start pointer deltas: 45.3 KB\n\nNo problems were detected with this index.\n\nTook 4.209 sec total.\n\n\nTotal index size: 235722542 bytes\n\n\n\n\nFor the results of the AutoPrefix PostingsFormat please check the next comment. "
        },
        {
            "id": "comment-15436539",
            "author": "Jim Ferenczi",
            "date": "2016-08-25T09:00:08+0000",
            "content": "I fixed another bug in the prefixes creation. Most of the prefixes were missing in my last patch so the latest result shows a completely different trend. Sorry for the noise Robert Muir , you were right, the 2-5 edge ngram is competitive and it beats the autoprefix by a large margin.\nHere are the raw results actualized with the latest patch:\n\nAutoPrefix minPrefixTerms=2\n\nIndexed 12600000: 60.369 sec\nFinal Indexed 12696047: 60.589 sec\nOptimize...\nAfter force merge: 87.115 sec\nClose...\nAfter close: 87.121 sec\nDone CheckIndex:\nSegments file=segments_1 numSegments=1 version=7.0.0 id=2jb0oyddk8jizhc2jin5e5vwf\n  1 of 1: name=_j maxDoc=12696047\n    version=7.0.0\n    id=2jb0oyddk8jizhc2jin5e5vwe\n    codec=Lucene62\n    compound=false\n    numFiles=7\n    size (MB)=300.525\n    diagnostics = {os=Mac OS X, java.vendor=Oracle Corporation, java.version=1.8.0_77, java.vm.version=25.77-b03, lucene.version=7.0.0, mergeMaxNumSegments=1, os.arch=x86_64, java.runtime.version=1.8.0_77-b03, source=merge, mergeFactor=9, os.version=10.11.4, timestamp=1472114132102}\n    no deletions\n    test: open reader.........OK [took 0.002 sec]\n    test: check integrity.....OK [took 0.172 sec]\n    test: check live docs.....OK [took 0.002 sec]\n    test: field infos.........OK [2 fields] [took 0.001 sec]\n    test: field norms.........OK [0 fields] [took 0.001 sec]\n    test: terms, freq, prox...OK [3928482 terms; 222231646 terms/docs pairs; 0 tokens] [took 5.478 sec]\n      field \"field-autoprefix\":\n        index FST:\n          401257 bytes\n        terms:\n          1414516 terms\n          10333460 bytes (7.3 bytes/term)\n        blocks:\n          45642 blocks\n          33484 terms-only blocks\n          4 sub-block-only blocks\n          12154 mixed blocks\n          10382 floor blocks\n          14302 non-floor blocks\n          31340 floor sub-blocks\n          6305776 term suffix bytes (138.2 suffix-bytes/block)\n          1484556 term stats bytes (32.5 stats-bytes/block)\n          3661060 other bytes (80.2 other-bytes/block)\n          by prefix length:\n             0: 6\n             1: 366\n             2: 3205\n             3: 13054\n             4: 17849\n             5: 7613\n             6: 2466\n             7: 752\n             8: 202\n             9: 62\n            10: 58\n            11: 7\n            13: 1\n            14: 1\n      \n      field \"field\":\n        index FST:\n          699971 bytes\n        terms:\n          2513966 terms\n          20843092 bytes (8.3 bytes/term)\n        blocks:\n          80953 blocks\n          59384 terms-only blocks\n          10 sub-block-only blocks\n          21559 mixed blocks\n          18273 floor blocks\n          25611 non-floor blocks\n          55342 floor sub-blocks\n          13294381 term suffix bytes (164.2 suffix-bytes/block)\n          2538232 term stats bytes (31.4 stats-bytes/block)\n          8839046 other bytes (109.2 other-bytes/block)\n          by prefix length:\n             0: 5\n             1: 421\n             2: 5620\n             3: 18794\n             4: 31598\n             5: 16630\n             6: 5322\n             7: 1709\n             8: 443\n             9: 138\n            10: 249\n            11: 14\n            12: 2\n            13: 6\n            14: 2\n      \n    test: stored fields.......OK [0 total field count; avg 0.0 fields per doc] [took 0.304 sec]\n    test: term vectors........OK [0 total term vector count; avg 0.0 term/freq vector fields per doc] [took 0.002 sec]\n    test: docvalues...........OK [0 docvalues fields; 0 BINARY; 0 NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET] [took 0.001 sec]\n    test: points..............OK [0 fields, 0 points] [took 0.000 sec]\n\ndetailed segment RAM usage: \n_j(7.0.0):C12696047: 1.1 MB\n|-- postings [PerFieldPostings(segment=_j formats=1)]: 1.1 MB\n    |-- format 'AutoPrefix_0' [BlockTreeTermsReader(fields=2,delegate=Lucene50PostingsReader(positions=false,payloads=false))]: 1.1 MB\n        |-- field 'field' [BlockTreeTerms(terms=2513966,postings=34713220,positions=-1,docs=12682564)]: 683.7 KB\n            |-- term index [FST(input=BYTE1,output=ByteSequenceOutputs,packed=false]: 683.6 KB\n        |-- field 'field-autoprefix' [BlockTreeTerms(terms=1414516,postings=187518426,positions=-1,docs=12682564)]: 392 KB\n            |-- term index [FST(input=BYTE1,output=ByteSequenceOutputs,packed=false]: 391.9 KB\n        |-- delegate [Lucene50PostingsReader(positions=false,payloads=false)]: 32 bytes\n|-- stored fields [CompressingStoredFieldsReader(mode=FAST,chunksize=16384)]: 61.9 KB\n    |-- stored field index [CompressingStoredFieldsIndexReader(blocks=97)]: 61.9 KB\n        |-- doc base deltas: 30.5 KB\n        |-- start pointer deltas: 29.1 KB\n\nNo problems were detected with this index.\n\nTook 5.986 sec total.\n\n\nTotal index size: 315123344 bytes\n\n\n\n\nThe index size is 301M which is bigger than the 225M of the 2-5 edge ngram index and it is not faster to build.\nBottom line is that this PostingsFormat could help only for cases with big prefixes that shares a lot of terms, since this is a corner case I'll close this issue and move the patch into my own repo. I'll leave the last patch on this issue in order to let people reiterate from the latest status if they have a use case that could be optimized with this format.\nI ran a last test to see if selecting the prefixes based on the number of terms could help. I tried with different size, the following panel is the result with minAutoPrefixTerms=24:\n\nAutoPrefix minPrefixTerms=24\n\nFinal Indexed 12696047: 53.821 sec\nOptimize...\nAfter force merge: 75.871 sec\nClose...\nAfter close: 75.876 sec\nDone CheckIndex:\nSegments file=segments_1 numSegments=1 version=7.0.0 id=4cf35tmfowkmzqs14df1f10te\n  1 of 1: name=_j maxDoc=12696047\n    version=7.0.0\n    id=4cf35tmfowkmzqs14df1f10td\n    codec=Lucene62\n    compound=false\n    numFiles=7\n    size (MB)=231.003\n    diagnostics = {os=Mac OS X, java.vendor=Oracle Corporation, java.version=1.8.0_77, java.vm.version=25.77-b03, lucene.version=7.0.0, mergeMaxNumSegments=1, os.arch=x86_64, java.runtime.version=1.8.0_77-b03, source=merge, mergeFactor=9, os.version=10.11.4, timestamp=1472114958183}\n    no deletions\n    test: open reader.........OK [took 0.002 sec]\n    test: check integrity.....OK [took 0.165 sec]\n    test: check live docs.....OK [took 0.000 sec]\n    test: field infos.........OK [2 fields] [took 0.000 sec]\n    test: field norms.........OK [0 fields] [took 0.000 sec]\n    test: terms, freq, prox...OK [2564273 terms; 187695193 terms/docs pairs; 0 tokens] [took 3.388 sec]\n      field \"field-autoprefix\":\n        index FST:\n          13343 bytes\n        terms:\n          50307 terms\n          223075 bytes (4.4 bytes/term)\n        blocks:\n          1626 blocks\n          1250 terms-only blocks\n          1 sub-block-only blocks\n          375 mixed blocks\n          355 floor blocks\n          417 non-floor blocks\n          1209 floor sub-blocks\n          158541 term suffix bytes (97.5 suffix-bytes/block)\n          87397 term stats bytes (53.7 stats-bytes/block)\n          179907 other bytes (110.6 other-bytes/block)\n          by prefix length:\n             0: 6\n             1: 189\n             2: 773\n             3: 595\n             4: 49\n             5: 10\n             6: 2\n             7: 1\n             9: 1\n      \n      field \"field\":\n        index FST:\n          699971 bytes\n        terms:\n          2513966 terms\n          20843092 bytes (8.3 bytes/term)\n        blocks:\n          80953 blocks\n          59384 terms-only blocks\n          10 sub-block-only blocks\n          21559 mixed blocks\n          18273 floor blocks\n          25611 non-floor blocks\n          55342 floor sub-blocks\n          13294381 term suffix bytes (164.2 suffix-bytes/block)\n          2538232 term stats bytes (31.4 stats-bytes/block)\n          8839046 other bytes (109.2 other-bytes/block)\n          by prefix length:\n             0: 5\n             1: 421\n             2: 5620\n             3: 18794\n             4: 31598\n             5: 16630\n             6: 5322\n             7: 1709\n             8: 443\n             9: 138\n            10: 249\n            11: 14\n            12: 2\n            13: 6\n            14: 2\n      \n    test: stored fields.......OK [0 total field count; avg 0.0 fields per doc] [took 0.275 sec]\n    test: term vectors........OK [0 total term vector count; avg 0.0 term/freq vector fields per doc] [took 0.000 sec]\n    test: docvalues...........OK [0 docvalues fields; 0 BINARY; 0 NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET] [took 0.000 sec]\n    test: points..............OK [0 fields, 0 points] [took 0.000 sec]\n\ndetailed segment RAM usage: \n_j(7.0.0):C12696047: 758.9 KB\n|-- postings [PerFieldPostings(segment=_j formats=1)]: 697 KB\n    |-- format 'AutoPrefix_0' [BlockTreeTermsReader(fields=2,delegate=Lucene50PostingsReader(positions=false,payloads=false))]: 696.9 KB\n        |-- field 'field' [BlockTreeTerms(terms=2513966,postings=34713220,positions=-1,docs=12682564)]: 683.7 KB\n            |-- term index [FST(input=BYTE1,output=ByteSequenceOutputs,packed=false]: 683.6 KB\n        |-- field 'field-autoprefix' [BlockTreeTerms(terms=50307,postings=152981973,positions=-1,docs=12682435)]: 13.2 KB\n            |-- term index [FST(input=BYTE1,output=ByteSequenceOutputs,packed=false]: 13 KB\n        |-- delegate [Lucene50PostingsReader(positions=false,payloads=false)]: 32 bytes\n|-- stored fields [CompressingStoredFieldsReader(mode=FAST,chunksize=16384)]: 61.9 KB\n    |-- stored field index [CompressingStoredFieldsIndexReader(blocks=97)]: 61.9 KB\n        |-- doc base deltas: 30.5 KB\n        |-- start pointer deltas: 29.1 KB\n\nNo problems were detected with this index.\n\nTook 3.852 sec total.\n\n\nTotal index size: 242224063 bytes\n\n\n\n\nThe index size is 231M which is very close to the edge 2-5 index size and it's a little bit faster to build than the edge ngram index but the gain are negligible compared to the cost of maintenance of a PostingsFormat like this. "
        }
    ]
}