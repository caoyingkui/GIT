{
    "id": "SOLR-586",
    "title": "Maven - Solr Artifact Publishing",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "clients - java",
            "contrib - DataImportHandler"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I know there is an issue open (SOLR-19) for getting a solr build going under Maven.  This issue differs from that in that it does not concern the build process of the solr project, but rather simple dependency management for maven projects that depend on the solr artifacts.  I've outlined a way to easily incorporate solrj + dependencies into your own maven projects, in hopes that others doing this find it useful.  \n\nThis issue's purpose is twofold:\n1) Let others know the process.\n2) Open the idea of whether this can be streamlined/incorporated into the standard build in some manner.\n\nDepending on Solrj in a Maven Project\n1) Build a 1.3 snapshot.\n  1.1) Check out the code from http://svn.apache.org/repos/asf/lucene/solr/\n  1.2) Build using \"ant dist\" \n2) Install the artifacts into your maven repo, using the included pom files.\n  2.1) Move to your dist/apache-solr-1.3-dev/dist directory.\n  2.2) Copy the attached pom files into this directory.\n  2.3) Install solr-common into your repo.\n    ex) mvn install:install-file -Dfile=apache-solr-common-1.3-dev.jar -DpomFile=solr-common.pom.xml\n  2.4) Install solrj into your repo.\n    ex) mvn install:install-file -Dfile=apache-solr-solrj-1.3-dev.jar -DpomFile=solrj.pom.xml\n3) Use Solrj in your existing Maven projects by including it as a dependency in your own pom.xml\n        <dependency>\n            <groupId>org.apache.lucene.solr</groupId>\n            <artifactId>solrj</artifactId>\n            <version>1.3-SNAPSHOT</version>\n        </dependency>\n\nSo given the above process, it seems like it would be relatively simple to standardize this process by:\n1) Including the solr-common and solrj pom files w/ the dist.  \n2) Automating the periodic installation of the artifacts to a central repo, such as the ibiblio repo.  \n\nIf those steps were performed, then creating a (maven) project based on solrj would be super simple: just #3 from above.  Since most custom developments are probably for the clients, it seems like simplifying this would be a nice step to take.",
    "attachments": {
        "solr-dih.pom.xml": "https://issues.apache.org/jira/secure/attachment/12387611/solr-dih.pom.xml",
        "solr2mvn.sh": "https://issues.apache.org/jira/secure/attachment/12387697/solr2mvn.sh",
        "SOLR-586-20080811-craigmcc.zip": "https://issues.apache.org/jira/secure/attachment/12388015/SOLR-586-20080811-craigmcc.zip",
        "SOLR-586-nits.patch": "https://issues.apache.org/jira/secure/attachment/12388177/SOLR-586-nits.patch",
        "solrj.pom.xml": "https://issues.apache.org/jira/secure/attachment/12383027/solrj.pom.xml",
        "solr-server.pom.xml": "https://issues.apache.org/jira/secure/attachment/12387696/solr-server.pom.xml",
        "SOLR-586.patch": "https://issues.apache.org/jira/secure/attachment/12388043/SOLR-586.patch",
        "solr-common.pom.xml": "https://issues.apache.org/jira/secure/attachment/12383028/solr-common.pom.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12601493",
            "date": "2008-06-01T20:02:42+0000",
            "content": "\nSo given the above process, it seems like it would be relatively simple to standardize this process by:\n1) Including the solr-common and solrj pom files w/ the dist.\n2) Automating the periodic installation of the artifacts to a central repo, such as the ibiblio repo.\n\nI don't use Maven, but i'm +1 to the idea.\n\nFWIW: this is the same basic approach lucene-java took ... most committers were hesitant to rip out the ant build files they were use to in order to use maven to build with, but changes were made to at least generate poms and help automate publishing jars and POMs to the Apache maven repository (which is mirrored by ibiblio) "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12620124",
            "date": "2008-08-06T03:48:48+0000",
            "content": "A third POM to install the Data Import Handler jar file as a separate artifact.  This will become obsolete if/when DIH is included in the Solr Common jar. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12620125",
            "date": "2008-08-06T03:51:01+0000",
            "content": "A shell script to install all three (including the new DIH jar file) Solr jar files into a Maven 2 repository.  See comments at the beginning of the script for setup and execution instructions. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12620126",
            "date": "2008-08-06T03:53:10+0000",
            "content": "Thanks for the work on this!  As I had a need for the same thing (use SolrJ in a Maven based project), it was a happy moment to see someone else had done the basic work for me .  To pay back favor for favor, I've added a third POM for the DataImportHandler jar (only needed until DIH is included in the common jar), and a shell script (solr2mvn.sh) that will install all three artifacts for you.  See the comments at the beginning of the script for setup and execution instructions.\n "
        },
        {
            "author": "Dominic Mitchell",
            "id": "comment-12620213",
            "date": "2008-08-06T11:05:35+0000",
            "content": "This looks fantastic \u2014 it would be really useful for us, we're doing it by hand at present.\n\nI do have one request though: how hard would it be to attach a source jar as well?  The addition to the POM is fairly simple.  Most of our projects have this:\n\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-source-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>attach-sources</id>\n            <goals>\n              <goal>jar</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n\n\n\nI find that this makes maven artifacts a load more useful.\n\nAh, I see the POM isn't actually being used in and of itself. It's just there to list the dependencies.  I'd need to amend build.xml to produce source jars as well.  Oh well.  I'll try and see how much effort that will be. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12620316",
            "date": "2008-08-06T16:52:17+0000",
            "content": "I do have one request though: how hard would it be to attach a source jar as well?\n\nI agree that sources jars would be helpful ... and javadoc jars as well, for that matter.  As you noted, the poms are not currently being used to build Solr \u2013 they are just used for the packaging.  I'll take a crack at updating the install script, once the Solr build process produces sources and javadoc jars in addition to the current binary jars. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12620492",
            "date": "2008-08-07T01:51:10+0000",
            "content": "Additional POM for the server part of Apache Solr. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12620493",
            "date": "2008-08-07T01:51:43+0000",
            "content": "Updated script that copies the server POM and JAR files as well. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12621166",
            "date": "2008-08-09T18:11:05+0000",
            "content": "A third POM to install the Data Import Handler jar file as a separate artifact. This will become obsolete if/when DIH is included in the Solr Common jar.\nDIH is a contrib project which means it will always be a separate artifact.\n\nI agree that sources jars would be helpful ... and javadoc jars as well, for that matter\nI agree that source and javadoc jars will be useful. Javadocs are already generated separately for solrj and DIH but not as jars. The solr-commons and solr core javadocs are combined together currently. We will need modifications to build files to generate javadoc and source jars for each of the artifacts separately.\n\nI'll take a crack at updating the install script, once the Solr build process produces sources and javadoc jars in addition to the current binary jars.\nI think it would be better to integrate maven deploy with the ant builds similar to how Lucene does it.\n\nI'm going to start making the changes. Hope to post a patch soon. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12621174",
            "date": "2008-08-09T19:43:32+0000",
            "content": "I'm going to start making the changes. Hope to post a patch soon.\n\nCool.  Two things I noticed that we should pay attention to:\n\n\n\tThe solr-server POM I posted should also declare dependencies on the Lucene\n  2.4-DEV jars that it uses (which also implies you need to have installed those\n  locally by running \"ant generate-maven-artifacts\" in the Lucene source tree).\n\n\n\n\n\tGiven we need to do that, it would be nice to add a similar build target into the\n  Solr build.xml file, so the prototypes get things like the right version numbers.\n  This will also require the same prerequesite that the Lucene build does, that\n  you have installed the Ant Maven Tasks jar into your Ant environment.\n\n\n\nDoes SolrJ also require a Lucene dependency if you use it in the \"embedded server\" style? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12621186",
            "date": "2008-08-09T20:47:08+0000",
            "content": "The solr-server POM I posted should also declare dependencies on the Lucene 2.4-DEV jars that it uses (which also implies you need to have installed those locally by running \"ant generate-maven-artifacts\" in the Lucene source tree).\nI'm not sure how we will manage the dependency of lucene jars. It would be wrong to declare a dependency on lucene snapshot jars since Solr has a particular revision of the trunk checked in. We should probably hold on to the solr-server for now and focus on SolrJ (without embedded) and DIH working. The DIH artifact should only depend on solr-commons because this jar will only be used for extending DIH API. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12621208",
            "date": "2008-08-10T03:20:00+0000",
            "content": "I'm not sure how we will manage the dependency of lucene jars. It would be wrong to declare a dependency on lucene snapshot jars since Solr has a particular revision of the trunk checked in.\n\nThe typical Maven approach to this would be to make each of the specific Lucene jars Solr depends on (the ones checked in to the \"lib\" directory) into Solr artifacts (groupId of org.apache.lucene.solr), with version number that correspond to the Solr version they are a part of.  That way, there's absolutely no interference with Lucene's own Maven artifacts, and no dependence on Lucene SNAPSHOT versions which can change underneath us. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12621673",
            "date": "2008-08-12T02:15:11+0000",
            "content": "Heres a substantially updated version of the earlier attachments, based in large part on the approach the Lucene folks took (creds to them for doing the grunt work .  To use it:\n\n\n\tInstall the Maven Ant Tasks in a place accessible to your Ant\n  (see <http://maven.apache.org/ant-tasks.html> for more info).\n\n\n\n\n\tDownload and unzip the patch into the top level directory of\n  your Solr source tree from SVN.  This will create a \"maven\"\n  subdirectory with the new files.\n\n\n\n\n\tExecute \"ant clean dist\" to create the usual Solr artifacts.\n\n\n\n\n\tChange directory to \"maven\", then execute \"ant -f build-maven.xml\"\n  to create the Maven artifacts and install them on your local repository.\n  This includes the Lucene variants checked in to the \"lib\" directory,\n  but done in a way that won't interfere with Lucene's own artifacts\n  when 2.4 goes final.\n\n\n\nShalin, you're welcome to use whatever of this makes sense \u2013 but this functionality scratched my own personal itch quite nicely (Maven based app that needed Solrj in embedded mode).\n "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12621674",
            "date": "2008-08-12T02:20:16+0000",
            "content": "Hmm ... JIRA doesn't make it at all obvious that the previous comment refers to the attachment named <SOLR-586-20080811-craigmcc.zip> even though they were uploaded together ... so this should clarify things. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12621757",
            "date": "2008-08-12T10:17:39+0000",
            "content": "This is awesome! Thanks!\n\nI'm integrating it with the existing builds so that there would be no need for a maven folder.\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12621788",
            "date": "2008-08-12T12:11:34+0000",
            "content": "This patch (SOLR-586.patch) integrates all of Craig's POM files and build targets into the Solr build.xml and directory structure. Solr uses a particular revision of commons-csv for which I've created a POM just like Craig did for the lucene jars. The group name for all artifacts is changed to org.apache.solr.\n\nAnother thing I noticed was that we are using a dev-snapshot of stax. Any particular reason for this? Should we move to a stable version? 1.2.0 is the latest stable version I can find on the central maven repository. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12621821",
            "date": "2008-08-12T13:57:17+0000",
            "content": "Another thing I noticed was that we are using a dev-snapshot of stax. Any particular reason for this? Should we move to a stable version? 1.2.0 is the latest stable version I can find on the central maven repository.\n\nyes, if possible, we should try to avoid dev builds.  However, we should switch the .jar in an independent issue "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12621920",
            "date": "2008-08-12T18:34:20+0000",
            "content": "Changes\n\n\n\tReverted back to org.apache.lucene.solr as the group name due to Maven central repository's restriction on having groupId same as the controlled domain name.\n\tAdded target dist-src which packages source code for each artifact\n\tAdded target dist-javadoc which packages javadoc for each artifact\n\tRenamed the main solr jar to apache-solr-server-${version}.jar for consistency with other jars\n\tgenerate-maven-artifact target also adds source and javadocs for each artifact\n\n\n\nIf we want to publish nightly maven snapshots, then after executing the main nightly target, we must execute the following on hudson:\n{{\n{ant clean generate-maven-artifacts}\n}}\n\nIt will be OK to put a dependency on generate-maven-artifacts in the nightly target. Ofcourse, first we need to setup a build.property file on hudson which gives the URL to maven repo, username and private key. Someone who is familar with how Lucene did this and has karma on hudson will need to take this up now. \n\nWhen the artifacts are published, the following should be added to your pom.xml to use solrj\n\n<dependency>\n  <groupId>org.apache.lucene.solr</groupId>\n  <artifactId>solr-solrj</artifactId>\n  <version>1.3-SNAPSHOT</version>\n</dependency>\n\n\nTo use the EmbeddedSolrServer, a dependency to solr-server must also be added:\n\n<dependency>\n  <groupId>org.apache.lucene.solr</groupId>\n  <artifactId>solr-core</artifactId>\n  <version>1.3-SNAPSHOT</version>\n</dependency>\n\n\n\nI've not added a dependency on solr-server for SolrJ because it is only needed for EmbeddedSolrServer but not if you only use CommonsHttpSolrServer.\n\nThis is ready to be committed now. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12621950",
            "date": "2008-08-12T20:07:25+0000",
            "content": "The patch fails to apply cleanly for me ... the changes to \"contrib/dataimporthandler/build.xml\" fail at lines 51 and 61.  Did something change in this file in parallel to your creating the patch?  (I'm at r685285).\n\nI've not added a dependency on solr-server for SolrJ because it is only needed for EmbeddedSolrServer but not if you only use CommonsHttpSolrServer.\n\n+1. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622077",
            "date": "2008-08-13T03:03:28+0000",
            "content": "Can you update to the latest trunk and try again?\n\nIt applies cleanly on the trunk. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12622093",
            "date": "2008-08-13T04:36:37+0000",
            "content": "Can you update to the latest trunk and try again?\n\nBad News:  Even with a fresh checkout of the source, the patch fails to apply.\n\nGood News:  This looks like a botch in the patch file itself; there's a missing \"-\" to delete the previous line 53 of the old \"contrib/dataimporthandler/build.xml\".  OK, let's fix it manually and try the build.\n\nBad News:  \"ant clean generate-maven-artifacts\" fails.  This time it's because the patched version of the top-level build.xml is expecting the POM templates to be in either \"lib\" or the top level directories for contrib stuff, where they are actually all in the top level directory.  Let's fix that as well.\n\nBest News:  Everything works.\n\nI suspect that the second patch file doesn't necessarily reflect all the most recent changes.  My recommendation is to go ahead and commit the patch as it actually exists in Shalin's tree, and then clean up anything that might still be missed up.  We shouldn't disrupt anything if the nightly build script hasn't been changed yet.  I can commit to check any newly committed change first thing tomorrow (Pacific time). "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622097",
            "date": "2008-08-13T05:02:30+0000",
            "content": "Are you sure you are using the latest SOLR-586.patch ? I just tried it on a clean checkout and it works well. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622099",
            "date": "2008-08-13T05:09:26+0000",
            "content": "Ok, my bad. It doesn't work. I should stop using IDEs to create/apply patches. I'll post a new one shortly. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622100",
            "date": "2008-08-13T05:16:12+0000",
            "content": "This one should be correct. Sorry for all the confusion I caused. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12622121",
            "date": "2008-08-13T07:00:09+0000",
            "content": "I still have the same problems as reported earlier (patch doesn't apply, build.xml changes reflect \"lib/xxx\" paths for the templates), so it still fails for me.  However, I still recommend that we go ahead and apply the actual commits, and clean up any problems later. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622122",
            "date": "2008-08-13T07:03:16+0000",
            "content": "Try adding -p0. I have the same problem if I don't use -p0 in the patch command.\n\npatch -p0 < SOLR-586.patch "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622156",
            "date": "2008-08-13T10:11:12+0000",
            "content": "Committed revision 685497.\n\nThanks Spencer and Craig!\n\nI'll keep this issue open for a day or two in case any problems show up with the builds or until we can make the necessary changes on hudson. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12622207",
            "date": "2008-08-13T13:14:09+0000",
            "content": "Is this expected?  Or do we each need to download and install the maven ant task?\n\n\nbicho:s3 ryan$ ant generate-maven-artifacts\nBuildfile: build.xml\n\nmaven.ant.tasks-check:\n\nBUILD FAILED\n/Users/ryan/Documents/workspace/APACHE/s3/common-build.xml:334:\n##################################################################\nMaven ant tasks not found.\nPlease make sure the maven-ant-tasks jar is in ANT_HOME/lib, or made\navailable to Ant using other mechanisms like -lib or CLASSPATH.\n##################################################################\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622210",
            "date": "2008-08-13T13:22:53+0000",
            "content": "Yes, this is expected. You must have the maven-ant-tasks jar in your classpath to use the maven-specific ant targets.\n\nWe must publish jars ourselves (through hudson for snapshots and through a one-time script for the release). Once that is done, these steps will not be needed for any user who wants to use the artifacts in his maven project. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622215",
            "date": "2008-08-13T13:46:00+0000",
            "content": "One important point to note is that along with Solr artifacts, we will also publish un-released pieces of code (Lucene 2.4-dev and commons-csv snapshots) as maven artifacts. Though they will be under Solr's groupId, but they will still be available for people to use through the central repository.\n\nI'm not sure if that is OK with Apache's release policies. "
        },
        {
            "author": "Craig McClanahan",
            "id": "comment-12622278",
            "date": "2008-08-13T16:59:19+0000",
            "content": "Committed revision 685497.\n\nThis worked for me.  Thanks!\n\nbp. One important point to note is that along with Solr artifacts, we will also publish un-released pieces of code (Lucene 2.4-dev and commons-csv snapshots) as maven artifacts. Though they will be under Solr's groupId, but they will still be available for people to use through the central repository.\n\nWell, technically releasing Solr 1.3 will release these artifacts (they'll be branded as part of Solr version 1.3, not Lucene 2.4-dev, in the repository).  In this particular case, it's even the same PMC, so presumably the Lucene Java folks will be in agreement with this if the vote passes.  If that wasn't the case, the normal license compatibility rules would apply. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12622332",
            "date": "2008-08-13T19:46:14+0000",
            "content": "minor changes:\n\n1. change the inceptionYear from 2000 -> 2006 (when solr donated to Apache)\n2. removed \"Embedded\" from the core description.   "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622449",
            "date": "2008-08-14T06:01:49+0000",
            "content": "Committed revision 685781.\n\nThanks Ryan! "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12622660",
            "date": "2008-08-14T19:50:24+0000",
            "content": "I'm running into a funny issue.\n\n$ ant clean\n$ ant generate-maven-artifacts\n\neverything works great\n\nnow run: ant generate-maven-artifacts again.  The second time, I get:\n\nBUILD FAILED\n/Users/ryan/Documents/workspace/APACHE/s3/build.xml:645: A tar file cannot include itself\n\n\nnot really a big deal, but figured I'd point it out... "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622665",
            "date": "2008-08-14T20:02:41+0000",
            "content": "Nothing to do with generate-maven-artifacts target. Run ant package twice and the same thing happens. Simply deleting the tar/zip before package runs will fix this. I shall make the change in the package target. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12622679",
            "date": "2008-08-14T20:43:57+0000",
            "content": "the included pom is missing a reference to commons-fileupload.  This is needed in the core and embedded solrj\n\n\nIndex: client/java/solrj/solr-solrj-pom.xml.template\n===================================================================\n--- client/java/solrj/solr-solrj-pom.xml.template\t(revision 686022)\n+++ client/java/solrj/solr-solrj-pom.xml.template\t(working copy)\n@@ -66,6 +66,11 @@\n       <artifactId>commons-logging</artifactId>\n       <version>1.0.4</version>\n     </dependency>\n+    <dependency>\n+      <groupId>commons-fileupload</groupId>\n+      <artifactId>commons-fileupload</artifactId>\n+      <version>1.2</version>\n+    </dependency>\n \n     <!-- Stax -->\n     <dependency>\n\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622688",
            "date": "2008-08-14T20:54:17+0000",
            "content": "Committed revision 686039.\n\nSorry, my bad. Thanks Ryan! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12623773",
            "date": "2008-08-19T20:00:57+0000",
            "content": "Just an FYI, I had the Maven 2.0.7 Ant tasks and got:\n\ngenerate-maven-artifacts:\n    [mkdir] Created dir: ../solr-clean/build/maven\n    [mkdir] Created dir: .../solr-clean/dist/maven\n     [copy] Copying 1 file to .../solr-clean/build/maven/src/maven\n[artifact:install-provider] Installing provider: org.apache.maven.wagon:wagon-ssh:jar:1.0-beta-2:runtime\n\nBUILD FAILED\n.../solr-clean/build.xml:695: The following error occurred while executing this line:\n....solr-clean/common-build.xml:252: artifact:deploy doesn't support the \"uniqueVersion\" attribute\n\nUpgrading them to 2.0.9 and it works. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12623778",
            "date": "2008-08-19T20:08:37+0000",
            "content": "Can we close this? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12623780",
            "date": "2008-08-19T20:14:42+0000",
            "content": "The uniqueVersion=\"false\" forces maven to use the same version each time overwriting the artifacts. No need to create a separate snapshot artifact each time \u2013 it will just clog the repository.\n\nCan we close this? \nI've kept it open just to make sure we remember to start publishing snapshot artifacts before 1.3 and of course released artifact when 1.3 goes out. Some one with enough karma should take a look at lucene's way of doing this and make the changes on hudson. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12623800",
            "date": "2008-08-19T20:50:09+0000",
            "content": "I'll see through the Hudson stuff to take care of the publishing aspects. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12623814",
            "date": "2008-08-19T21:19:37+0000",
            "content": "I changed the group id to be org.apache.solr per Maven's recommendation at http://maven.apache.org/pom.html#Maven_Coordinates\n\nCommitted revision 687158. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12623985",
            "date": "2008-08-20T13:27:45+0000",
            "content": "Have a look at: http://people.apache.org/maven-snapshot-repository/org/apache/solr/\n\nI'll update the wiki w/ details, too, but here's the gist:\n\nHudson builds the artifacts via the generate-maven-artifacts.  A cron job runs on my account on Hudson (just like for Lucene) and copies the artifacts to the snapshot repo on p.a.o.\n\nThen, the only thing that remains is publishing the artifacts to the official Maven repo on the release.  I will update the release instructions to do this, per the Lucene Java instructions. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12623994",
            "date": "2008-08-20T13:47:11+0000",
            "content": "Wow, this is great! Thanks Grant! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12623997",
            "date": "2008-08-20T14:00:40+0000",
            "content": "OK, I think we are in pretty good shape.  I updated the Wiki under the committers section, published an initial nightly build.  \n\nSpencer, et. al. please check it out and let me know if we can close this.  Obviously, we can't publish the officially released artifacts until after 1.3, so if there is an error there, we will have to reopen the issue. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12624397",
            "date": "2008-08-21T15:27:28+0000",
            "content": "Maven artifacts are now being published per the link above.  Official release artifacts will be published at that time. "
        },
        {
            "author": "David Smiley",
            "id": "comment-12912262",
            "date": "2010-09-19T17:38:43+0000",
            "content": "This hasn't worked for quite some time.  Should we re-open this or open a new issue? "
        }
    ]
}