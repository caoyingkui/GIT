{
    "id": "SOLR-595",
    "title": "support field level boosting to morelikethis handler.",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Allow boosting to be specified for particular fields when using more like this.\n\n\n\tParse out \"mlt.qf parameters\" to get boosts in dismax like format (existing code from DisMax param parse code used to produce a Map<String,Float>)\n\tIterate through mltquery terms, get boost by looking at field from which mltquery term came,  and multiply boost specified in map by existing term boost.\n\n\n\n\n\tIf mlt.boost=false, then you get the same boost values as in map/mlt.qf parameters,\n\n\n\n\n\tIf mlt.boost=true then you get normalized boost multiplied by specified boost (which makes sense to me).",
    "attachments": {
        "SOLR-595.patch": "https://issues.apache.org/jira/secure/attachment/12383858/SOLR-595.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Thomas Morton",
            "id": "comment-12604275",
            "date": "2008-06-11T17:31:46+0000",
            "content": "patch to add functionality and unit tests. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12605575",
            "date": "2008-06-17T12:50:12+0000",
            "content": "Committed revision 668638.\n\nMade one minor change from the patch, to check to see if the boostFields is non-empty before looping over all the query clauses. "
        }
    ]
}