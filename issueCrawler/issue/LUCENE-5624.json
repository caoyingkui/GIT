{
    "id": "LUCENE-5624",
    "title": "nightly 'test-lock-factory' may leak file handles",
    "details": {
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/store"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "4.9",
            "6.0"
        ]
    },
    "description": "https://builds.apache.org/job/Lucene-Solr-NightlyTests-trunk/556/console\n\n\n[LockStressTest1] Exception in thread \"main\" java.nio.file.FileSystemException: /usr/home/hudson/hudson-slave/workspace/Lucene-Solr-NightlyTests-trunk/lucene/build/core/lockfactorytest/test-test.lock: Too many open files in system\n[LockStressTest1] \tat sun.nio.fs.UnixException.translateToIOException(UnixException.java:91)\n[LockStressTest1] \tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\n[LockStressTest1] \tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)\n[LockStressTest1] \tat sun.nio.fs.UnixFileSystemProvider.newFileChannel(UnixFileSystemProvider.java:176)\n[LockStressTest1] \tat java.nio.channels.FileChannel.open(FileChannel.java:287)\n[LockStressTest1] \tat java.nio.channels.FileChannel.open(FileChannel.java:334)\n[LockStressTest1] \tat org.apache.lucene.store.NativeFSLock.obtain(NativeFSLockFactory.java:149)\n[LockStressTest1] \tat org.apache.lucene.store.VerifyingLockFactory$CheckedLock.obtain(VerifyingLockFactory.java:65)\n[LockStressTest1] \tat org.apache.lucene.store.Lock.obtain(Lock.java:77)\n[LockStressTest1] \tat org.apache.lucene.store.LockStressTest.main(LockStressTest.java:114)",
    "attachments": {
        "LUCENE-5624-test.patch": "https://issues.apache.org/jira/secure/attachment/12641245/LUCENE-5624-test.patch",
        "LUCENE-5624.patch": "https://issues.apache.org/jira/secure/attachment/12641237/LUCENE-5624.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13976676",
            "author": "Robert Muir",
            "content": "I will see if i can reproduce this by running it with a massive amount of iterations. ",
            "date": "2014-04-22T12:18:31+0000"
        },
        {
            "id": "comment-13976677",
            "author": "Robert Muir",
            "content": "This is probably important to look at before 4.8: just in case somehow its the locking code itself causing a problem! ",
            "date": "2014-04-22T12:19:16+0000"
        },
        {
            "id": "comment-13976692",
            "author": "Robert Muir",
            "content": "Lets also test Simple here too. I want to know if it has leaks. ",
            "date": "2014-04-22T12:32:19+0000"
        },
        {
            "id": "comment-13976695",
            "author": "Robert Muir",
            "content": "Reproduces easily for me: ant test-lock-factory -Dtests.nightly=true -Dtests.multiplier=100 ",
            "date": "2014-04-22T12:33:15+0000"
        },
        {
            "id": "comment-13976698",
            "author": "Robert Muir",
            "content": "The leak definitely seems to be locks (not sockets or something), from the output of 'lsof' i see this:\n\njava      15416 15430      rmuir 1657w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1658w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1659w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1660w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1661w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1662w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1663w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1664w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1665w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1666w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1667w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1668w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1669w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\njava      15416 15430      rmuir 1670w      REG                8,1         0    5617836 /home/rmuir/workspace/lucene-trunk/lucene/build/core/lockfactorytest/test-test.lock\n...\n\n ",
            "date": "2014-04-22T12:34:23+0000"
        },
        {
            "id": "comment-13976707",
            "author": "Robert Muir",
            "content": "If i run the test with -Dlock.factory.impl=org.apache.lucene.store.SimpleFSLockFactory then it passes always.\n\nLooks like a real leak in NativeFSLock! ",
            "date": "2014-04-22T12:45:37+0000"
        },
        {
            "id": "comment-13976730",
            "author": "Robert Muir",
            "content": "I dont see the leak yet, but in all cases the 'else' case in close() is bullshit. \n\nLock is java.io.Closeable now. ",
            "date": "2014-04-22T13:12:20+0000"
        },
        {
            "id": "comment-13976735",
            "author": "Robert Muir",
            "content": "Here is the bug:\n\n\nIndex: src/java/org/apache/lucene/store/NativeFSLockFactory.java\n===================================================================\n--- src/java/org/apache/lucene/store/NativeFSLockFactory.java\t(revision 1589085)\n+++ src/java/org/apache/lucene/store/NativeFSLockFactory.java\t(working copy)\n@@ -150,7 +150,7 @@\n     boolean success = false;\n     try {\n       lock = channel.tryLock();\n-      success = true;\n+      success = lock != null;\n     } catch (IOException | OverlappingFileLockException e) {\n       // At least on OS X, we will sometimes get an\n       // intermittent \"Permission Denied\" IOException,\n\n\n\nWe leak a handle (The channel) when tryLock() returns null, but there is no exception.\n\nI can fix it this way, or clean up this code a little bit too. Its too confusing. ",
            "date": "2014-04-22T13:20:40+0000"
        },
        {
            "id": "comment-13976743",
            "author": "Uwe Schindler",
            "content": "I think we should further clean this up. The code on close() is horrible and makes no sense anymore. The whole NativeFSLock should be as short like SimpleFSLock. No need forr all the extra code! ",
            "date": "2014-04-22T13:25:27+0000"
        },
        {
            "id": "comment-13976746",
            "author": "Robert Muir",
            "content": "Here is my proposed patch. But we can do the one-liner too.\n\nI just hate the closeable violations, the hard-to-read code, etc.\n\nWe should also fix test-lock-factory to test simple as well. ",
            "date": "2014-04-22T13:26:10+0000"
        },
        {
            "id": "comment-13976785",
            "author": "Robert Muir",
            "content": "Updated patch, removing the crazy test (SimpleFS does not do this stuff on close, and i dont think we should either, it breaks closeable) ",
            "date": "2014-04-22T13:48:43+0000"
        },
        {
            "id": "comment-13976793",
            "author": "Uwe Schindler",
            "content": "Here improved test ",
            "date": "2014-04-22T14:00:27+0000"
        },
        {
            "id": "comment-13976796",
            "author": "Uwe Schindler",
            "content": "+1 to commit with the new testing. Also please backport. I will redo my started RC (not yet visible...) ",
            "date": "2014-04-22T14:03:16+0000"
        },
        {
            "id": "comment-13976806",
            "author": "ASF subversion and git services",
            "content": "Commit 1589131 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1589131 ]\n\nLUCENE-5624: fix NativeFS file handle leak, improve lock testing ",
            "date": "2014-04-22T14:07:13+0000"
        },
        {
            "id": "comment-13976812",
            "author": "ASF subversion and git services",
            "content": "Commit 1589134 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1589134 ]\n\nLUCENE-5624: fix NativeFS file handle leak, improve lock testing ",
            "date": "2014-04-22T14:17:42+0000"
        },
        {
            "id": "comment-13976844",
            "author": "ASF subversion and git services",
            "content": "Commit 1589140 from Robert Muir in branch 'dev/branches/lucene_solr_4_8'\n[ https://svn.apache.org/r1589140 ]\n\nLUCENE-5624: fix NativeFS file handle leak, improve lock testing ",
            "date": "2014-04-22T14:39:04+0000"
        },
        {
            "id": "comment-13976845",
            "author": "Robert Muir",
            "content": "Thanks Uwe! ",
            "date": "2014-04-22T14:39:31+0000"
        },
        {
            "id": "comment-13982581",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:25:48+0000"
        }
    ]
}