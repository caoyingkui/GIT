{
    "id": "SOLR-10323",
    "title": "SpellingQueryConverter does not remove \":\" char when using fielded queries",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "6.2.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "If you pass a fielded query to SpellingQueryConverter.convert, it returns a token that is prefixed with a \":\" char.\n\nExample: The query \"foo:bar\" is converted to \":bar\"\n\nThis bug seems to have been introduced by the fix for SOLR-2556. Before this patch, SpellingQueryConverter.convert returned tokens without the leading colon char.",
    "attachments": {
        "SOLR-10323.patch": "https://issues.apache.org/jira/secure/attachment/12859983/SOLR-10323.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-22T17:41:31+0000",
            "content": "The issue seems to be bigger than that:\n\nIn SpellingQueryConverterTest::testNumeric()\n\n\n@Test\n  public void testNumeric() throws Exception {\n    SpellingQueryConverter converter = new SpellingQueryConverter();\n    converter.init(new NamedList());\n    converter.setAnalyzer(new WhitespaceAnalyzer());\n    String[] queries = {\"12345\", \"foo:12345\", \"12345 67890\", \"foo:(12345 67890)\", \"foo:(life 67890)\", \"12345 life\",\n        \"+12345 +life\", \"-12345 life\"};\n    int[] tokensToExpect = {1, 1, 2, 2, 2, 2, 2, 2};\n    for (int i = 0; i < queries.length; i++) {\n      Collection<Token> tokens = converter.convert(queries[i]);\n      System.out.println(\"tkns for \"+queries[i]+\" >> \"+tokens);\n      assertTrue(\"tokens Size: \" + tokens.size() + \" is not: \" + tokensToExpect[i], tokens.size() == tokensToExpect[i]);\n    }\n  }\n\n\n\n\ntkns for 12345 >> [12345]\ntkns for foo:12345 >> [:12345]\ntkns for 12345 67890 >> [12345, 67890]\ntkns for foo:(12345 67890) >> [(12345, 67890]\ntkns for foo:(life 67890) >> [(life, 67890]\ntkns for 12345 life >> [12345, life]\ntkns for +12345 +life >> [+12345, +life]\ntkns for -12345 life >> [-12345, life]\n\n\n\nObserve ( coming anywhere, braces are not handled too. Test cases are not hard enough there. ",
            "author": "Amrit Sarkar",
            "id": "comment-15936766"
        },
        {
            "date": "2017-03-22T18:50:32+0000",
            "content": "SOLR-10323.patch uploaded which will ignore \":\" and \"(\" throughout the original term. This fixes our problem but an overhead comes around as the SpellingQueryConverter will break if the original term is like:\n\nfoo:bar(random)  ===> [bar, random], in current code, this happens already\nfoo:bar:bar ===> [bar, bar], in current code, this happens already\n\nand there is no way to escape it like:\nfoo:bar(random)\nfoo:bar\\:bar\n\nBut this will work perfectly with other special characters like underscores, highen and alphanumerics.\n\nI will add relevant test cases very soon if we have +1 with the stated compromise. ",
            "author": "Amrit Sarkar",
            "id": "comment-15936915"
        },
        {
            "date": "2017-03-23T06:08:01+0000",
            "content": "changed the QUERY_REGEX:\n\n\n(?:(?!(([A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c-\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u2001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd\\-.0-9\\xb7\\u0300-\\u036f\\u203f-\\u2040]|\\p{Cs}{2})+:|[\\^.:(]\\d+)))[^^.\\s][\\p{L}_\\-0-9]+\n\n\n\n\n.......:|[\\^.:(]\\d+)))........\n\n ",
            "author": "Amrit Sarkar",
            "id": "comment-15937787"
        },
        {
            "date": "2017-04-03T19:57:19+0000",
            "content": "This compromise works for my needs ",
            "author": "Michael Pellegrini",
            "id": "comment-15954072"
        },
        {
            "date": "2017-04-03T22:52:58+0000",
            "content": "Cool, I will add the test cases then to the current patch and would request a committer to have a look, suggest any improvements and ultimately commit that. This is a legit bug. ",
            "author": "Amrit Sarkar",
            "id": "comment-15954285"
        },
        {
            "date": "2017-04-04T01:21:40+0000",
            "content": "SOLR-10323.patch uploaded with light but precise test cases.\n\n\n\tmodified:   solr/core/src/java/org/apache/solr/spelling/SpellingQueryConverter.java\n\tmodified:   solr/core/src/test/org/apache/solr/spelling/SpellingQueryConverterTest.java\n\n\n\nRequesting someone to review the patch. ",
            "author": "Amrit Sarkar",
            "id": "comment-15954449"
        },
        {
            "date": "2017-04-05T19:38:44+0000",
            "content": "James Dyer can you review this patch? ",
            "author": "Michael Pellegrini",
            "id": "comment-15957516"
        },
        {
            "date": "2017-04-06T15:30:18+0000",
            "content": "This patch makes the test a little simpler.  Straightforward fix.  I'll commit this shortly. ",
            "author": "James Dyer",
            "id": "comment-15959099"
        },
        {
            "date": "2017-04-06T17:50:10+0000",
            "content": "Commit e75a2e6b86bdac5ee86a4c3fa9d2f5e33bfc42d1 in lucene-solr's branch refs/heads/master from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e75a2e6 ]\n\nSOLR-10323: fix to SpellingQueryConverter to properly strip out colons in field-specific queries ",
            "author": "ASF subversion and git services",
            "id": "comment-15959430"
        },
        {
            "date": "2017-04-06T19:39:32+0000",
            "content": "Commit d5de738ed4ad561d0e7cc058ac3aa10a814be2f0 in lucene-solr's branch refs/heads/branch_6x from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d5de738 ]\n\nSOLR-10323: fix to SpellingQueryConverter to properly strip out colons in field-specific queries ",
            "author": "ASF subversion and git services",
            "id": "comment-15959599"
        },
        {
            "date": "2017-04-06T19:48:41+0000",
            "content": "Thank you Amrit for the patch and Michael for reporting this issue. ",
            "author": "James Dyer",
            "id": "comment-15959619"
        }
    ]
}