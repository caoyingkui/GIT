{
    "id": "LUCENE-5930",
    "title": "IntelliJ config: drop resource-only modules, add module groups, and add module for lucene/backward-codecs",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ]
    },
    "description": "The number of intellij modules is getting out of hand.  Intellij supports marking subdirectories within a module as source/resources/tests/test-resources.  I think we should consolidate these modules so we have just one per lucene module.  Is there some reason I'm missing that this was not done in the first place?",
    "attachments": {
        "LUCENE-5930.failed.intellij.map-reduce.module.test.output.txt": "https://issues.apache.org/jira/secure/attachment/12668496/LUCENE-5930.failed.intellij.map-reduce.module.test.output.txt",
        "LUCENE-5930.patch": "https://issues.apache.org/jira/secure/attachment/12667904/LUCENE-5930.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14127865",
            "author": "Ryan Ernst",
            "content": "I should clarify that not all modules are setup this way.  It looks like just the major ones (which is where the pain is for me, having to switch between intellij modules to find browse for what I'm looking for).  I see this patter for the following lucene modules:\n\n\tlucene core\n\tcodecs\n\tsolr core\n\n\n\n...I guess that was it. I thought I had remember more.  Even so, lucene core is what bugs me the most.  Any objections? ",
            "date": "2014-09-10T00:41:02+0000"
        },
        {
            "id": "comment-14127869",
            "author": "Ryan Ernst",
            "content": "I also think we should try grouping modules? That would make it a lot less cumbersome to navigate.\nhttp://www.jetbrains.com/idea/webhelp/grouping-modules.html ",
            "date": "2014-09-10T00:45:20+0000"
        },
        {
            "id": "comment-14128111",
            "author": "Steve Rowe",
            "content": "LUCENE-4367 is where I added the extra test modules for lucene-core, lucene-codecs, solr-core and solr-solrj, because any module that the lucene or solr test framework module has a compile dependency on makes (or made, anyway) IntelliJ think there was a circular dependency (because of the test dependency every module has on either the lucene or solr test framework, and IntelliJ's - and Maven's - inability to distinguish between dependency types when detecting cycles).  See the images I put up on the Maven version of that issue (LUCENE-4365) that show the situation before and after.\n\nMaybe IntelliJ is smarter now (IntelliJ v9 or v10 when LUCENE-4367 was put in place; v13 now and v14 EAP is available) about the difference between test and compile scope dependencies?  It's worth trying.\n\nIIRC, some modules have (test-)resource-only fake modules in order to copy over resources or something like that.\n\n\nI also think we should try grouping modules? That would make it a lot less cumbersome to navigate.\nhttp://www.jetbrains.com/idea/webhelp/grouping-modules.html\n\n+1 ",
            "date": "2014-09-10T05:55:41+0000"
        },
        {
            "id": "comment-14129346",
            "author": "Ryan Ernst",
            "content": "Thanks Steve.  I tried with 13.1 and I see the same issues you saw before.  I've opened an issue with IDEA:\nhttp://youtrack.jetbrains.com/issue/IDEA-129728\n\nI will upload a patch with adding groups soon. ",
            "date": "2014-09-10T23:24:25+0000"
        },
        {
            "id": "comment-14129414",
            "author": "Ryan Ernst",
            "content": "This patch does the following:\n\n\tAdds group Lucene with subgroups Analysis, Core, and Other\n\tAdds group Solr with subgroup Contrib\n\tAdds module for backward-codecs (will not be there for backport to 4x)\n\tConslidate lucene-core, codecs, solr-core and solrj to include their resources, removing the previous resource specific modules.\n\n\n\nSteve, if you could try this out, I was having trouble getting solrj tests to run within intellij (fails to compile not finding lucene core stuff). So I probably have a bug in this somewhere. ",
            "date": "2014-09-11T00:11:48+0000"
        },
        {
            "id": "comment-14129428",
            "author": "Steve Rowe",
            "content": "Ryan Ernst, looks like you've got some unrelated changes in the patch: lucene/CHANGES.txt, solr/CHANGES.txt, lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java, etc.\n\nI'll see if I can figure out what doesn't belong and revert those locally. ",
            "date": "2014-09-11T00:22:41+0000"
        },
        {
            "id": "comment-14129434",
            "author": "Ryan Ernst",
            "content": "Oops sorry. The problem is my trunk was more up to date than the branch. I will upload a new patch as soon as I can get back online.  ",
            "date": "2014-09-11T00:27:16+0000"
        },
        {
            "id": "comment-14129445",
            "author": "Ryan Ernst",
            "content": "New patch, without the trunk diffs. ",
            "date": "2014-09-11T00:39:50+0000"
        },
        {
            "id": "comment-14129642",
            "author": "David Smiley",
            "content": "Nice; I'm looking forward to this!  The lengthy modules were getting out of hand. ",
            "date": "2014-09-11T05:22:28+0000"
        },
        {
            "id": "comment-14129684",
            "author": "Steve Rowe",
            "content": "The module groups look good, I didn't change them in this version of the patch.\n\nI refactored the patch a bit so that the dev-tools/**/*.iml files are svn move'd - that way their history stays intact and I can view diffs for them in IntelliJ.  Run the following svn commands before applying the patch:\n\n\nsvn mv dev-tools/idea/lucene/core/src/java/lucene-core.iml dev-tools/idea/lucene/core/src/\nsvn mv dev-tools/idea/lucene/codecs/src/java/codecs.iml dev-tools/idea/lucene/codecs/src/\nsvn mv dev-tools/idea/solr/core/src/test/solr-core-tests.iml dev-tools/idea/solr/core/src/\nsvn mv dev-tools/idea/solr/solrj/src/test/solrj-tests.iml dev-tools/idea/solr/solrj/src/\n\n\n\nI also fixed up several other issues I found after running all the predefined whole-module JUnit run configurations.\n\nThe main things I changed:\n\n\n\tAdded lucene-core as a TEST dependency to solrj-tests.iml, so that tests that need lucene utility class(es) will compile - I think this is the problem you saw, Ryan.\n\tReordered .idea/modules.xml by module group and then alphabetically, and put the group attribute first in the XML tags.\n\tAdded an @Ignore annotation to backward-codec module's CreateBackwardsCompatibilityIndex so that IntelliJ won't run it.\n\tRemoved the test output directory from lucene-core.iml, so that it wouldn't be included in analysis-common's test classpath; otherwise, TestAllAnalyzersHaveFactories complains that TrivialLookaheadTokenFilter, a Lucene core test class, can't be loaded via SPI.  (I also did the same thing in codecs.iml even though it isn't causing a problem at this point, since test output only happens in the corresponding test module.)\n\tAdded src/resources/ to sandbox.iml so that IDVersionPostingsFormat is loadable via SPI.\n\tAdded the Solr core test library to map-reduce.iml so that class org.mortbay.jetty.Connector is loadable (from jetty-<version>.jar, which is only located in solr/core/test-lib/).\n\n\n\nI started getting OOM Permgen errors half-way through the solr core JUnit module run configuration (around 1,000/1,833 tests, all passing up to that point), not sure how to configure that, so I didn't change that. ",
            "date": "2014-09-11T06:03:39+0000"
        },
        {
            "id": "comment-14130528",
            "author": "Steve Rowe",
            "content": "Ryan, any comments about my patch? I'd like to commit ASAP, since trunk is broken ATM (solrj-tests module doesn't compile). ",
            "date": "2014-09-11T19:08:05+0000"
        },
        {
            "id": "comment-14130635",
            "author": "Ryan Ernst",
            "content": "The iml changes seem fine.  My only concern is adding the @Ignore.  That breaks running CreateBackwardsCompatibilityIndex from ant.  I think intellij should be using the same test file pattern ant does? ",
            "date": "2014-09-11T20:13:47+0000"
        },
        {
            "id": "comment-14130682",
            "author": "Steve Rowe",
            "content": "My only concern is adding the @Ignore. That breaks running CreateBackwardsCompatibilityIndex from ant. I think intellij should be using the same test file pattern ant does?\n\nThanks Ryan, I didn't realize the intent was to invoke CreateBackwardsCompatibilityIndex as a test from ant.\n\nThis version of the patch doesn't add the @Ignore, and for the backward-codecs module test uses a pattern (regex against the fully qualified class name) .*\\.Test[^.]*$|.*Test$, matching test class names that start or end with \"Test\", which finds all tests in the module except CreateBackwardsCompatibilityIndex.\n\nCommitting shortly. ",
            "date": "2014-09-11T20:48:51+0000"
        },
        {
            "id": "comment-14130689",
            "author": "Ryan Ernst",
            "content": "for the backward-codecs module\nShouldn't this test pattern (which is used by ant) be the same test pattern all of the intellij modules use? ",
            "date": "2014-09-11T20:51:59+0000"
        },
        {
            "id": "comment-14130698",
            "author": "Steve Rowe",
            "content": "Shouldn't this test pattern (which is used by ant) be the same test pattern all of the intellij modules use?\n\nYes, theoretically... I was thinking only fix what's known to be broken.\n\nI'll go test every single module now and see how the pattern affects them, and then apply it.  Yay. ",
            "date": "2014-09-11T20:56:26+0000"
        },
        {
            "id": "comment-14130713",
            "author": "Ryan Ernst",
            "content": "I'll go test every single module now and see how the pattern affects them, and then apply it. Yay.\n\nDon't feel obligated to fix it here.  If there are problems, they already exist, and could be handled later if/when they are found (if this were actual code I would care, but its just test runners).  This patch already improves the intellij setup a lot, IMO.  If you are ready to commit, go for it. ",
            "date": "2014-09-11T21:03:56+0000"
        },
        {
            "id": "comment-14132253",
            "author": "Steve Rowe",
            "content": "\nI'll go test every single module now and see how the pattern affects them, and then apply it. Yay.\n\nDon't feel obligated to fix it here. If there are problems, they already exist, and could be handled later if/when they are found (if this were actual code I would care, but its just test runners). This patch already improves the intellij setup a lot, IMO. If you are ready to commit, go for it.\n\nWell, you were right, the IntelliJ build should be as close as possible to the Ant build, and restricting tests in the same way as the Ant build makes it more so.  Going through this exercise led me to find and fix a long-standing Solr test problem (SOLR-6508), so it wasn't a complete waste of time .\n\nThe attached patch adds the equivalent of the Ant build test-class-matching patterns, shown below from test-macro in lucene/common-build.xml, to each pre-defined whole-module JUnit run configuration:\n\n\n<!-- Input test classes. -->\n<junit4:duplicate times=\"${tests.dups}\">\n  <fileset dir=\"@{testsDir}\">\n    <include name=\"**/Test*.class\" />\n    <include name=\"**/*Test.class\" />\n    <include name=\"${tests.explicitclass}\" if=\"tests.explicitclass\" />\n    <exclude name=\"**/*$*\" />\n  </fileset>\n</junit4:duplicate>\n\n\n\nThe equivalent in the pattern language used by IntelliJ's run configuration facility is .*\\.Test[^.]*|.*\\.[^.]*Test.  For reasons I don't understand, in addition to not matching the full-stop character, [^.] also fails to match the $ character, so nested classes are not matched, achieving the same effect as the Ant build's <exclude name=\"**/*$*\" />.\n\nTwo other changes are included in this version of the patch:\n\n\n\tI changed all modules' src/resources/ and src/test-files/ <sourceFolder>-s to use type=\"java-resource\" and type=\"java-test-resource\", respectively, rather than the previous isTestSource=\"<false|true>\", to mirror what IntelliJ does when you mark folders as (Test) Resources.\n\tI added -Xmx512m -XX:MaxPermSize=256m to the Solr Core JUnit run configuration, to avoid PermGen OOMs.\n\n\n\nWith the exception of the map-reduce Solr contrib's tests and the single Solr Core failure described in SOLR-6514, all tests in all modules' pre-defined whole-module JUnit run configurations pass.\n\nThree test suites in the map-reduce Solr contrib fail in ways I don't understand - see the attached console log for each: LUCENE-5930.failed.intellij.map-reduce.module.test.output.txt.  Maybe somebody else will know what's going on there (Mark Miller?).\n\nNow I'm committing shortly. ",
            "date": "2014-09-12T22:56:01+0000"
        },
        {
            "id": "comment-14132257",
            "author": "Ryan Ernst",
            "content": "+1, thanks Steve! ",
            "date": "2014-09-12T22:58:49+0000"
        },
        {
            "id": "comment-14132261",
            "author": "ASF subversion and git services",
            "content": "Commit 1624671 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1624671 ]\n\nLUCENE-5930: IntelliJ config: drop resource-only modules, add module groups, and add module for lucene/backward-codecs, and fix up a bunch of other little issues ",
            "date": "2014-09-12T23:02:12+0000"
        },
        {
            "id": "comment-14132409",
            "author": "Steve Rowe",
            "content": "Commit 1624689 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1624689 ]\n\nLUCENE-5930: order lucene-core test dep after lucene-test-framework ",
            "date": "2014-09-13T00:57:05+0000"
        },
        {
            "id": "comment-14132470",
            "author": "ASF subversion and git services",
            "content": "Commit 1624692 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1624692 ]\n\nLUCENE-5930: IntelliJ config: drop resource-only modules, add module groups, and add module for lucene/backward-codecs, and fix up a bunch of other little issues (merged trunk r1624671 and r1624689) ",
            "date": "2014-09-13T02:11:26+0000"
        },
        {
            "id": "comment-14132471",
            "author": "Steve Rowe",
            "content": "Committed to trunk and branch_4x.\n\nThanks Ryan! ",
            "date": "2014-09-13T02:12:56+0000"
        },
        {
            "id": "comment-14132933",
            "author": "ASF subversion and git services",
            "content": "Commit 1624780 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1624780 ]\n\nLUCENE-5930: native svn:eol-style for new file backward-codecs.iml ",
            "date": "2014-09-13T20:38:58+0000"
        },
        {
            "id": "comment-14332997",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:03:01+0000"
        }
    ]
}