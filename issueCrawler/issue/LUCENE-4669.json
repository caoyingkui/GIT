{
    "id": "LUCENE-4669",
    "title": "Document wrongly deleted from index",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [],
        "affect_versions": "4.0",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Not A Problem",
        "status": "Resolved"
    },
    "description": "I'm trying to implement document deletion from an index.\nIf I create an index with three documents (A, B and C) and then try to delete A, A gets marked as deleted but C is removed from the index. I've tried this with different number of documents and saw that it is always the last document that is removed.\n\nWhen I run the example unit test code bellow I get this output:\n\nBefore delete\nFound 3 documents\nDocument at = 0; isDeleted = false; path = a; \nDocument at = 1; isDeleted = false; path = b; \nDocument at = 2; isDeleted = false; path = c; \nAfter delete\nFound 2 documents\nDocument at = 0; isDeleted = true; path = a; \nDocument at = 1; isDeleted = false; path = b; \n\n\n\nExample unit test:\nExampleUnitTest.java\n    @Test\n    public void delete() throws Exception {\n        File indexDir = FileUtils.createTempDir();\n\n        IndexWriter writer = new IndexWriter(new NIOFSDirectory(indexDir), new IndexWriterConfig(Version.LUCENE_40,\n            new StandardAnalyzer(Version.LUCENE_40)));\n        Document doc = new Document();\n        String fieldName = \"path\";\n        doc.add(new StringField(fieldName, \"a\", Store.YES));\n        writer.addDocument(doc);\n        doc = new Document();\n        doc.add(new StringField(fieldName, \"b\", Store.YES));\n        writer.addDocument(doc);\n        doc = new Document();\n        doc.add(new StringField(fieldName, \"c\", Store.YES));\n        writer.addDocument(doc);\n        writer.commit();\n\n        System.out.println(\"Before delete\");\n        print(indexDir);\n\n        writer.deleteDocuments(new Term(fieldName, \"a\"));\n        writer.commit();\n\n        System.out.println(\"After delete\");\n        print(indexDir);\n\n    }\n\n    public static void print(File indexDirectory) throws IOException {\n        DirectoryReader reader = DirectoryReader.open(new NIOFSDirectory(indexDirectory));\n        Bits liveDocs = MultiFields.getLiveDocs(reader);\n        int numDocs = reader.numDocs();\n        System.out.println(\"Found \" + numDocs + \" documents\");\n        for (int i = 0; i < numDocs; i++) {\n            Document document = reader.document(i);\n            StringBuffer sb = new StringBuffer();\n            sb.append(\"Document at = \").append(i);\n            sb.append(\"; isDeleted = \").append(liveDocs != null ? !liveDocs.get(i) : false).append(\"; \");\n            for (IndexableField field : document.getFields()) {\n                String fieldName = field.name();\n                for (String value : document.getValues(fieldName)) {\n                    sb.append(fieldName).append(\" = \").append(value).append(\"; \");\n                }\n            }\n            System.out.println(sb.toString());\n        }\n    }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-09T15:57:20+0000",
            "content": "see the javadocs for numDocs ",
            "author": "Robert Muir",
            "id": "comment-13548600"
        },
        {
            "date": "2013-01-09T16:03:13+0000",
            "content": "I've seen the javadocs for numDocs and I still don't get why is it that when I delete de document with field path=a the document with field path=c is removed from the index.\n\nDo you care to explain? ",
            "author": "Miguel Ferreira",
            "id": "comment-13548607"
        },
        {
            "date": "2013-01-09T16:13:15+0000",
            "content": "Hi Miguel,\n\nc has not been deleted, the problem is that you used IndexReader.numDocs instead of IndexReader.maxDoc. Given that you deleted a document, IndexReader.numDocs decreased from 3 to 2 but c still has docId==2 so your print(File) method doesn't display it. ",
            "author": "Adrien Grand",
            "id": "comment-13548622"
        },
        {
            "date": "2013-01-10T07:36:43+0000",
            "content": "Thanks for the explanation Adrien Grand!\n\nOne more question: what's the best way to iterate over all documents in an index? ",
            "author": "Miguel Ferreira",
            "id": "comment-13549406"
        },
        {
            "date": "2013-01-10T10:04:07+0000",
            "content": "Hi Miguel,\n\nOne more question: what's the best way to iterate over all documents in an index?\n\nRetrieving stored fields for all documents in an index is something Lucene is bad at (it doesn't optimize for this use-case on purpose), and you should try to avoid doing it. Otherwise, iterating over all doc ids from 0 to ir.maxDoc(), skipping deleted documents (liveDocs != null && !liveDocs.get(docID)) and calling IndexReader.document(docID) should work.\n\nPlease ask questions on the user mailing-list instead of JIRA in the future. ",
            "author": "Adrien Grand",
            "id": "comment-13549495"
        }
    ]
}