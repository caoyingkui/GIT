{
    "id": "LUCENE-5106",
    "title": "unban properties with unicode escapes",
    "details": {
        "components": [],
        "fix_versions": [],
        "affect_versions": "4.4",
        "priority": "Blocker",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "As discussed on the mailing list, its just wrong to ban the use of unicode here.\n\nThis blocks 4.4 (because it was committed there, too)",
    "attachments": {
        "LUCENE-5106.patch": "https://issues.apache.org/jira/secure/attachment/12592005/LUCENE-5106.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-07-12T14:30:21+0000",
            "content": "In my opinion, we should keep the current thing for 4.4 and use the new one for 4.5 ?\n\nThat was my original plan! ",
            "author": "Uwe Schindler",
            "id": "comment-13706975"
        },
        {
            "date": "2013-07-12T14:35:24+0000",
            "content": "As i stated, i disagree with the change of banning unicode, and think it should be reverted.\n\nSo I opened this issue. ",
            "author": "Robert Muir",
            "id": "comment-13706978"
        },
        {
            "date": "2013-07-12T14:49:06+0000",
            "content": "Ok, so what's your plan now?\n\nThe idea was to ban inconsistency for 4.4. For 4.5 we have enough time to fix all code to only use Reader/Writer with 4.5.\n\nIf we apply your patch, one could add a mixed one again (also for 4.4) - so a similar crazy thing like the one in SOLR-4914: The commit done by Alan Woodward was the worst thing one could do, writing with UTF-8 enabled, but reading only with unicode-escapes allowed.\n\nSo for 4.4, for maximum compatility we use the currently committed one for 4.4 branch only (only allowing consisten InputStream/OutputStream throughout the code! And in 4.5 we only allow the UTF-8 one, Reader/Writer throughout the code! This allows to still read files written by 4.4 and before, with unicode-escapes (because files written by old Lucene/Solr code from 4.4 and earlier) are still correctly decoded (The Reader load(Reader) method decodes unicode-escaped, too). In fact, files written by the InputStream API are US-ASCII only, with everything >127 escaped (see src.zip).\n\nFor forbidden-apis (the original forbidden-apis), I plan to allow both by default. ",
            "author": "Uwe Schindler",
            "id": "comment-13706981"
        },
        {
            "date": "2013-07-12T14:56:45+0000",
            "content": "This patch has all I want. ",
            "author": "Robert Muir",
            "id": "comment-13706986"
        },
        {
            "date": "2013-07-12T14:57:17+0000",
            "content": "Then you risk inconsistency, because your patch does not disallow InputStream/OutputStream. This is why i want the current commited thing for 4.4. Without it, its a blocker, as Alan Woodward could commit something similar again while backporting.\n\nI don't want to ban unicode, I want all this legacy code be consistent only. ",
            "author": "Uwe Schindler",
            "id": "comment-13706987"
        },
        {
            "date": "2013-07-12T14:59:57+0000",
            "content": "I asked to revert the (wrong) change, you didnt do it. so i opened a blocker issue. its really simple ",
            "author": "Robert Muir",
            "id": "comment-13706988"
        },
        {
            "date": "2013-07-12T15:03:00+0000",
            "content": "You don't understand the reason behind the change, don't you! I DONT WANT TO BAN UNICODE - I WANT TO ENFOCE CONSISTENCY AND CORRECTNESS OF THE EXISTING CODE! That's all. And because of that this code wil not be reverted by me, sorry. ",
            "author": "Uwe Schindler",
            "id": "comment-13706991"
        },
        {
            "date": "2013-07-12T15:06:56+0000",
            "content": "I'm not going to argue with you about this any more Uwe. I'm just asking you nicely to revert the change. ",
            "author": "Robert Muir",
            "id": "comment-13706993"
        },
        {
            "date": "2013-07-12T16:53:38+0000",
            "content": "I Robert, to make us both happy - I would suggest to commit the patch from LUCENE-5107. It uses UTF-8 and when backported to Lucene 4.4, we are both happy:\n\n\n\tYou don't need to ban UTF-8 in LuSolr 4.4\n\tAnd I have safety that loading/storing properties is consistent.\n\n\n\nLUCENE-5107 does not bring any compatibility issues, because properties files written using OutputStream are ASCII-only (Java escapes everything > 127), so can be loaded as UTF-8 easily. ",
            "author": "Uwe Schindler",
            "id": "comment-13707081"
        },
        {
            "date": "2013-07-12T17:38:20+0000",
            "content": "Fixed through LUCENE-5107. Sorry Robert - as always it was funny to fight to find finally a good solution!  ",
            "author": "Uwe Schindler",
            "id": "comment-13707127"
        }
    ]
}