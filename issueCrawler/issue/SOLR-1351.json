{
    "id": "SOLR-1351",
    "title": "facet on same field different ways",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There is a general need to facet on the same field in different ways (different prefixes, different filters).  We need a way to express this.",
    "attachments": {
        "SOLR-1351-B.patch": "https://issues.apache.org/jira/secure/attachment/12545186/SOLR-1351-B.patch",
        "SOLR-1351.patch": "https://issues.apache.org/jira/secure/attachment/12419424/SOLR-1351.patch",
        "SOLR-1351-facet-same-field.patch": "https://issues.apache.org/jira/secure/attachment/12578961/SOLR-1351-facet-same-field.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uri Boness",
            "id": "comment-12754506",
            "date": "2009-09-12T10:56:29+0000",
            "content": "This is something that I've done in the far past (Solr 1.2) and they way I see it, facets should be identified by a unique idea rather than by the field name and the facet results will then be grouped by these ids. I think this can be done by just adding one extra parameter in the form: \n\n\nf.<fieldName>.facet.id\n\n\n\nThis parameter will practically mean that all other specific parameter for field facet will need to use this id instead of the field name, that is:\n\nAssuming we have a field called \"cat\" to represent a category. Right now (without an id) we ca do:\n\n\nq=*:*&facet=true&facet.field=cat&f.cat.facet.sort=true&f.cat.facet.limit=20&f.cat.facet.mincount=1\n\n\n\nwith introducing the id:\n\n\nq=*:*&facet=true&facet.field=cat&f.cat.facet.id=category&f.category.facet.sort=true&f.category.facet.limit=20&f.category.facet.mincount=1\n\n\n\nNow to support multiple \"configurations\":\n\n\nq=*:*&facet=true&facet.field=cat&f.cat.facet.id=cat1&f.cat1.facet.sort=true&f.cat1.facet.limit=20&f.cat1&facet.mincount=1&f.cat.facet.id=cat2&f.cat2.facet.sort=false&f.cat2.facet.count=0\n\n\n\nNote that even after introducing the id param, backward compatibility can easily be maintained - we just determine that when the id param is not specified, the field name is the default id.\n\nFrom experience, I can tell you that adding this feature not only will enable multiple facets on the same field, but IMO will also make it much easier to develop search clients and tools on top of Solr.\n\nIf this solution sounds reasonable, I can start working on a patch for it. "
        },
        {
            "author": "Uri Boness",
            "id": "comment-12754542",
            "date": "2009-09-12T15:25:09+0000",
            "content": "Another option is to define the id as a local param:\n\n\nq=*:*&facet=true&facet.field={!id=category}cat&f.category.facet.sort=true&f.category.facet.limit=20&f.category.facet.mincount=1\n\n\n\nand for multiple configurations:\n\n\nq=*:*&facet=true&facet.field={!id=cat1}cat&f.cat1.facet.sort=true&f.cat1.facet.limit=20&f.cat1&facet.mincount=1&facet.field={!id=cat2}cat&f.cat2.facet.sort=false&f.cat2.facet.count=0\n\n\n\nI guess it plays nicer with the new functionality in 1.4\n "
        },
        {
            "author": "Uri Boness",
            "id": "comment-12754713",
            "date": "2009-09-13T16:02:31+0000",
            "content": "Took the approach as described above. The only difference is that instead of the \"id\" parameter I reused the \"key\" parameter already supported by this component. The idea is that now, when the \"key\" local param is specified, all the specific facet params need to use the key instead of the field name.\n\n\nq=*:*&facet=true&facet.field={!key=cat1}cat&f.cat1.facet.sort=true&f.cat1.facet.limit=20&f.cat1&\nfacet.mincount=1&facet.field={!key=cat2}cat&f.cat2.facet.sort=false&f.cat2.facet.count=0\n\n\n\nThis not only applies to simple filed facets but also to date facets:\n\n\nq=*:*&facet=true&facet.date={!key=foo}bday&f.foo.facet.date.start=1976-07-01T00:00:00.000Z&\nf.foo.facet.date.end=1976-07-01T00:00:00.000Z+1MONTH&f.foo.facet.date.gap=+1DAY&\nf.foo.facet.date.other=all&facet.date={!key=bar}bday&\nf.bar.facet.date.end=1976-07-01T00:00:00.000Z+7DAY&f.bar.facet.date.gap=+1DAY&\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872632",
            "date": "2010-05-27T22:09:35+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Purdy",
            "id": "comment-13004807",
            "date": "2011-03-09T21:34:42+0000",
            "content": "Patch does not work with current nightly in solr 3.2, solr 4.0 and with latest stable release 1.4.1. Has this been integrated into the current version(s)? If not is there an updated patch somewhere?\n\nThanks Robert. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13007697",
            "date": "2011-03-16T21:18:17+0000",
            "content": "realized we had some duplicate issues.\n\nnote that the description/comments in SOLR-2251 have some good examples of usecases we should definitely make sure we support / test for "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043657",
            "date": "2011-06-03T16:46:22+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106354",
            "date": "2011-09-16T14:50:43+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13156425",
            "date": "2011-11-24T00:18:51+0000",
            "content": "Someone asked on the dev list about resurrecting Uri's patch...\n\nreviewing it now, i suspect that getting it to apply to the trunk (to work as Uri originally wrote it) would just be a simple matter of tweaking the paths and line numbers to get it to apply cleanly. \n\nThere are a few other things that I think would need to be addressed before i'd be comfortable committing however...\n\n\u2014\n\n1) need to make sure range faceting is also supported \n\n2) need a test to verify that things work as expected with distributed searches \u2013 some of the params (facet.limit, facet.mincount, facet.offset) have special handling in FacetComponent that may need tweaked to work properly when they are specified on a \"key\" instead of on a true field name.\n\n3) need to make sure some precedence rules like those described in SOLR-2251 work, are tested, and documented.  The main issue here is that if someone is already using the \"key\" local param for the purposes of filter exclusion, the precedence of per-field overrides on things like \"facet.limit\" should still apply and not just be ignored because of \"per-key\" overrides.\n\nie: a request like this in Solr 3.4...\n\n\nfacet.limit=10&facet.field=foo&facet.field={!key=bar ex=dt}foo&f.foo.facet.limit=100\n\n\n...causes both of the facet results for field \"foo\" to get a limit of 100 overriding the \"global\" limit of 10 \u2013 that shouldn't change when this feature is added, and skimming Uri's original patch i'm pretty sure it would:  getFieldParams(\"bar\",\"facet.limit\") isn't going to pay any attention to \"f.foo.facet.limit\" at all, would look for \"f.bar.facet.limit\" and if it's not found then it would just use the value of \"facet.limit\"\n\n\u2014\n\n#1 should be trivial, #2 is a big question mark: I have no idea if it will just work as is or if some special logic needs to be added (and if so what).  #3 is probably going to be a little tricky just because it doesn't play nicely with any of the logic in SolrParams aboout how per-field overrides should work, so we may need a new method in SolrParams to deal with this, or maybe just make SolrParams.fname() public so SimpleFacets can (cleanly) check the things it wants to check directly with something like...\n\n\nstatic String getKeyOrDefault(final String key, final String field, \n                              final String param, final SolrParams params) {\n  String result = params.get(params.fname(key, param);\n  if (null == result) {\n    result = params.getFieldParam(field, param);\n  }\n  return result;\n}\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234716",
            "date": "2012-03-21T18:08:59+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Robert Purdy",
            "id": "comment-13445651",
            "date": "2012-08-31T04:38:39+0000",
            "content": "Hey all, has this been integrated yet into any current versions of SOLR or is there a current way in a newer version then SOLR 1.5 to perform multiple facet prefix queries on the same field? Any Help on this would be great as I am currently stuck from upgrading our system until this feature is available  or unless I perform many queries per page like we used to before applying Uri's patch.\n\nThanks Robert. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13445840",
            "date": "2012-08-31T11:08:58+0000",
            "content": "Robert:\n\nThe key is looking at the \"Resolution   :\" field. That'll change to \"Fixed\" when it's been committed.....\n\nSo no, this isn't in any version yet. "
        },
        {
            "author": "Robert Purdy",
            "id": "comment-13446177",
            "date": "2012-08-31T17:52:37+0000",
            "content": "Thanks Erick, I was unsure. "
        },
        {
            "author": "Robert Purdy",
            "id": "comment-13456007",
            "date": "2012-09-14T18:24:44+0000",
            "content": "I have modified Uri's patch to work with trunc. Seems to work fine and allow me to have multiple facet prefix queries on the same field. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13633018",
            "date": "2013-04-16T17:08:39+0000",
            "content": "adding tests from these patches.\n\nRather then:\n\n+                    ,\"facet.date\", \"{!key=foo}\" + f\n+                    ,\"f.foo.facet.date.start\", \"1976-07-01T00:00:00.000Z\"\n+                    ,\"f.foo.facet.date.end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n+                    ,\"f.foo.facet.date.gap\",   \"+1DAY\"\n+                    ,\"f.foo.facet.date.other\", \"all\"\n+                    ,\"facet.date\", \"{!key=bar}\" + f\n+                    ,\"f.bar.facet.date.start\", \"1976-07-01T00:00:00.000Z\"\n+                    ,\"f.bar.facet.date.end\",   \"1976-07-01T00:00:00.000Z+7DAY\"\n+                    ,\"f.bar.facet.date.gap\",   \"+1DAY\"\n\n\n\nWe now have:\n\n                ,\"facet.date\", \"{!key=foo \" +\n                  \"facet.date.start=1976-07-01T00:00:00.000Z \" +\n                  \"facet.date.end=1976-07-01T00:00:00.000Z+1MONTH \" +\n                  \"facet.date.gap=+1DAY \" +\n                  \"facet.date.other=all \" +\n                \"}\" + f\n                ,\"facet.date\", \"{!key=bar \" +\n                  \"facet.date.start=1976-07-01T00:00:00.000Z \" +\n                  \"facet.date.end=1976-07-01T00:00:00.000Z+7DAY \" +\n                  \"facet.date.gap=+1DAY \" +\n                \"}\" + f\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13633032",
            "date": "2013-04-16T17:22:16+0000",
            "content": "While the style is different then proposed in this patch, you can get the same results using localParams syntax from SOLR-4717 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654121",
            "date": "2013-05-10T10:34:06+0000",
            "content": "Closed after release. "
        }
    ]
}