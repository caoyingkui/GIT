{
    "id": "SOLR-1861",
    "title": "HTTP Authentication for sharded queries",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Implemented"
    },
    "description": "This issue came out of a requirement to have HTTP authentication for queries. Currently, HTTP authentication works for querying single servers, but it's not possible for distributed searches across multiple shards to receive authenticated http requests.\n\nThis patch adds the option for Solr clients to pass shard-specific http credentials to SearchHandler, which can then use these credentials when making http requests to shards.\n\nHere's how the patch works:\n\nA final constant String called shardcredentials acts as the name of the SolrParams parameter key name.\nThe format for the value associated with this key is a comma-delimited list of colon-separated tokens:\n{{   shard0:port0:username0:password0,shard1:port1:username1:password1,shardN:portN:usernameN:passwordN  }}\nA client adds these parameters to their sharded request. \nIn the absence of shardcredentials and/or matching credentials, the patch reverts to the existing behaviour of using a default http client (i.e. no credentials). This ensures b/w compatibility.\n\nWhen SearchHandler receives the request, it passes the 'shardcredentials' parameter to the HttpCommComponent via the submit() method.\nThe HttpCommComponent parses the parameter string, and when it finds matching credentials for a given shard, it creates an HttpClient object with those credentials, and then sends the request using this.\nNote: Because the match comparison is a string compare (a.o.t. dns compare), the host/ip names used in the shardcredentials parameters must match those used in the shards parameter.\n\nImpl Notes:\nThis patch is used and tested on the 1.4 release codebase. There weren't any significant diffs between the 1.4 release and the latest trunk for SearchHandler, so should be fine on other trunks, but I've only tested with the 1.4 release code base.",
    "attachments": {
        "SearchHandler.java": "https://issues.apache.org/jira/secure/attachment/12440625/SearchHandler.java"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Peter Sturge",
            "id": "comment-12852864",
            "date": "2010-04-02T16:48:27+0000",
            "content": "Apologies that this is the source file and not a diff'ed patch file.\n\nI've tried so many Win doze svn products, but I just can't get them to create a patch file (I'm sure this is more down to me not configuring them correctly, rather than rapidsvn, visualsvn, Tortoisesvn etc.).\nIf someone would like to create a patch file from this source, that would be extraordinarily kind of you!\nIn any case, the changes to this file are quite straightforward. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12852986",
            "date": "2010-04-02T23:05:56+0000",
            "content": "A small update to this patch to support distributed searches with multiple cores. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12854775",
            "date": "2010-04-08T02:46:20+0000",
            "content": "If this was implemented inside SolrJ, then all SolrJ apps would be able to use authentication. It would be just as much code as putting the auth code in SearchHandler. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-13264570",
            "date": "2012-04-29T15:14:06+0000",
            "content": "Would a Solrj client be able to intrinsically handle a distributed shard request? It could make separate requests for each shard, but you wouldn't have the nice advantage of distributed searches, with aggregated facets, ranges etc. that's built-in on the server side. Or perhaps I've misunderstood your Solrj suggestion?\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13835739",
            "date": "2013-11-30T13:29:40+0000",
            "content": "2013 Old JIRA cleanup "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16067403",
            "date": "2017-06-28T22:52:27+0000",
            "content": "Closing ancient issue which is now superseded by the Autentication framework. "
        }
    ]
}