{
    "id": "SOLR-2571",
    "title": "IndexBasedSpellChecker \"thresholdTokenFrequency\" fails with a ClassCastException on startup",
    "details": {
        "affect_versions": "1.4.1,                                            3.1,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "3.3",
            "4.0-ALPHA"
        ],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When parsing the configuration for thresholdTokenFrequency\", the IndexBasedSpellChecker tries to pull a Float from the DataConfig.xml-derrived NamedList.  However, this comes through as a String.  Therefore, a ClassCastException is always thrown whenever this parameter is specified.  The code ought to be doing \"Float.parseFloat(...)\" on the value.\n\nThis looks like a nice feature to use in cases the data contains misspelled or rare words leading to spurious \"correct\" queries.  I would have liked to have used this with a project we just completed however this bug prevented that.  This issue came up recently in the User's mailing list so I am raising an issue now.",
    "attachments": {
        "SOLR-2571.patch": "https://issues.apache.org/jira/secure/attachment/12481137/SOLR-2571.patch",
        "SOLR-2571.solr3.2.patch": "https://issues.apache.org/jira/secure/attachment/12481138/SOLR-2571.solr3.2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "James Dyer",
            "id": "comment-13042388",
            "date": "2011-06-01T19:50:37+0000",
            "content": "Patches attached for Trunk & 3.x .\n\nThis patch fixes the problem for IndexBasedSpellChecker.  DirectSolrSpellChecker (Trunk only) appears to be correct already.\n\nShould this patch be committed, I will add documentation for \"thresholdTokenFrequency\" to the wiki.  Currently it is absent from the wiki (although documented in Smiley&Pugh). "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13042683",
            "date": "2011-06-02T10:25:37+0000",
            "content": "Hi James, I'm confused about this one a little bit. Perhaps DirectSolrSpellChecker is actually wrong?\n\nIf I configure the thing like this:\n\n\n<float name=\"thresholdTokenFrequency\">0.07</float>\n\n\n\nThen it does apply the parameter. I guess what I'm asking is, if in general we should be using int/float/etc in these types and not <str> (especially DirectSolrSpellChecker which takes a lot of numeric parameters but expects them all to be <str>). Just glancing through solrconfig.xml its not clear that there is a precedent, it appears inconsistent as far as numeric parameters. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13042810",
            "date": "2011-06-02T15:04:02+0000",
            "content": "ha...I was unaware solrconfig.xml could take <float /> elements at all.  But now that you mention it, there's a couple of them in the example config file.  I tried this for myself and it works.\n\nI guess with this being the case, I would agree that its better to change DirectSolrSpellChecker to require a Float, not a String.  Once we decide \"correctness\" on this I'll also add this parameter to the wiki as its pretty much an undocumented feature... "
        },
        {
            "author": "Mike Sokolov",
            "id": "comment-13043165",
            "date": "2011-06-03T01:11:06+0000",
            "content": "sounds like a good case for a config schema "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043168",
            "date": "2011-06-03T01:19:51+0000",
            "content": "Mike, I think I agree: currently we are relying upon examples in the wiki, but in this case one did not exist and it was/is totally confusing. "
        },
        {
            "author": "Mike Sokolov",
            "id": "comment-13043172",
            "date": "2011-06-03T01:29:26+0000",
            "content": "I posted a patch in SOLR-1758 that has a preliminary schema and implements schema-checking when loading config files that could help "
        },
        {
            "author": "James Dyer",
            "id": "comment-13043427",
            "date": "2011-06-03T15:58:39+0000",
            "content": "I'm betting the jury will rule we keep this a <float /> element, so here's a patch that changes DirectSolrSpellChecker.  I also added a unit test for thresholdTokenFrequency and added a (commented-out) line for it in the example solrconfig.xml.\n\nThere are 3 TODO's in the unit test code:\n1. My ignorance of the expression language used in unit-tests lead mem write an old-style long-form unit test.  If someone can show me how to convert this to a 1-liner I would be very appreciative.\n\n2. I found that DirectSolrSpellChecker returns results in a slightly different format than IndexBasedSpellChecker.  Is this OK?  Can SOLRJ handle this or do we need to tweak there?\n\n3. Also, in one case IndexBasedSpellChecker returns \"correctlySpelled=false\" while DirectSolrSpellChecker returns \"correctlySpelled=true\".  Is this discrepancy valid? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043431",
            "date": "2011-06-03T16:04:46+0000",
            "content": "Thanks for updating the patch!\n\n\nI found that DirectSolrSpellChecker returns results in a slightly different format than IndexBasedSpellChecker. Is this OK? Can SOLRJ handle this or do we need to tweak there?\n\nNot sure, I have used DirectSolrSpellChecker with solrj and I didn't have any problems... but that's not saying there isn't one.\n\n\nAlso, in one case IndexBasedSpellChecker returns \"correctlySpelled=false\" while DirectSolrSpellChecker returns \"correctlySpelled=true\". Is this discrepancy valid?\n\nI don't know, what makes this 'decision' of correctlySpelled? Do you know? Remember also the DirectSolrSpellChecker is a different spellchecker totally than IndexBasedSpellChecker (it uses a fundamentally different algorithm), although I tried to keep some of the parameters consistent.\n\nAnother question is, there are lots of other float/int arguments to DirectSolrSpellChecker, maybe we should cut all of these over to <int> and <float> while we are here? "
        },
        {
            "author": "James Dyer",
            "id": "comment-13044909",
            "date": "2011-06-06T15:23:34+0000",
            "content": "This version takes all of DirectSolrSpellChecker's parameters as Integer and Float objects rather than Strings, as appropriate.  Also, I changed the \"accuracy\" parameter to use SpellingParams.SPELLCHECK_ACCURACY ... I'm not sure if this would have validated any unit tests (I didn't see any tests that use DirectSolrSpellChecker).\n\nI think this will make DirectSolrSpellChecker more consistent with the rest of \"solrconfig.xml\"s parameter requirements.  The only better option than this, maybe, would to make it flexible and allow either the Int/Float or String in these cases.  I think this later option is not necessary however. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13044917",
            "date": "2011-06-06T15:47:04+0000",
            "content": "\nwhat makes this 'decision' of correctlySpelled? Do you know?\n\nI took a quick look to find out.  Its more complicated than I thought!  Here's the basic jist (I think!) :\n\n\tIf the instance of SolrSpellChecker returns frequency data and all suggestions have frequency >0, TRUE.\n\tIf the instance of SolrSpellChecker returns frequency data and any suggestion have frequency == 0, FALSE.\n\tIf the instance of SolrSpellChecker returns NO frequency data but has suggestions, OMIT.\n\tIf the instance of SolrSpellChecker returns NO suggestions, FALSE.\n\n\n\nPossibly this isn't fully accurate but I'm at least mostly correct here.  Seems like the discrepency with DirectSolrSpellChecker is because it isn't returning Frequency info?\n\nThis all happens in SpellCheckComponent.toNamedList() ... I'm guessing the code here uses the presence or absence of frequency data as kind of a proxy indicator whether or not its dealing with IndexBasedSpellChecker or FileBasedSpellChecker.  Possibly it would be better if each instance of SolrSpellChecker had a \"isCorrectlySpelled()\" method that toNamedList() could call?  Maybe I should I go open another jira issue for that? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13045029",
            "date": "2011-06-06T18:58:07+0000",
            "content": "\nThis version takes all of DirectSolrSpellChecker's parameters as Integer and Float objects rather than Strings, as appropriate. \n\nDid you maybe upload an older patch? I took a look and it only seems to cutover the threshold param.\n\n\nI'm not sure if this would have validated any unit tests (I didn't see any tests that use DirectSolrSpellChecker).\n\nThere is a test (DirectSolrSpellCheckerTest), but its probably not that great  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13045031",
            "date": "2011-06-06T18:59:59+0000",
            "content": "\nPossibly this isn't fully accurate but I'm at least mostly correct here. Seems like the discrepency with DirectSolrSpellChecker is because it isn't returning Frequency info?\n\nThis sounds like a bug, care to open a separate issue on it? (we can resolve the int/float stuff here on this one).\n\nThe thing certainly intends to return freq info...\n\nSuggestWord[] suggestions = checker.suggestSimilar(new Term(field, token.toString()), \n          options.count, options.reader, options.onlyMorePopular, accuracy);\n      for (SuggestWord suggestion : suggestions)\n        result.add(token, suggestion.string, suggestion.freq);\n\n "
        },
        {
            "author": "James Dyer",
            "id": "comment-13045069",
            "date": "2011-06-06T20:24:07+0000",
            "content": "Here is that patch with Ints/Floats instead of Strings.  I made a tiny adjustment to the unit test also. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13045246",
            "date": "2011-06-07T02:58:22+0000",
            "content": "Committed revision 1132855 (trunk).\nI organized the constants in DirectSolrSpellchecker a bit, so its easy to see which ones are 'shared' with the others and which ones are unique to it.\n\nCommitted revision 1132856 (branch_3x).\nI backported the test and example here. In the case of this test, it needed to clearIndex() in setup() like trunk does, so I merged these bits also.\n\nThanks James! "
        },
        {
            "author": "James Dyer",
            "id": "comment-13045523",
            "date": "2011-06-07T16:30:22+0000",
            "content": "I added \"thresholdTokenFrequency\" to the SpellCheckComponent wiki page. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13058968",
            "date": "2011-07-02T02:43:16+0000",
            "content": "Bulk close for 3.3 "
        }
    ]
}