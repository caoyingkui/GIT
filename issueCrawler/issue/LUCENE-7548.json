{
    "id": "LUCENE-7548",
    "title": "Docvalues sorting treats empty values as the default",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "I found this working on Solr, Mike suggested I raise it as a Lucene issue.\n\nThis was for int fields, I'll assume the same holds for other types.\n\nThe sort order is as though the null field was explicitly set to zero, the whole idea of sorting missing first is lost.\n\ndoc1\nint_dv = 0\nint_sort = 1\n\ndoc2\nint_sort=2\n\ndoc3\nint_dv = 0\nint_sort=3\n\nsort by int_dv asc,int_sort asc gives\ndoc1\ndoc2\ndoc3\n\nwhen it should give\ndoc2\ndoc1\ndoc3",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15652963",
            "author": "Erick Erickson",
            "date": "2016-11-10T04:09:18+0000",
            "content": "BTW, interestingly the /export handler seems to sort in the correct order, but /select doesn't. I admit I didn't look very closely, but thought it worth mentioning. "
        },
        {
            "id": "comment-15654110",
            "author": "Adrien Grand",
            "date": "2016-11-10T14:00:36+0000",
            "content": "The default for numeric fields is indeed to treat missing values as a zero. I think it has been this way for a long time. That said, I'b be fine with reconsidering and using MAX_VALUE when sorting in ascending order and MIN_VALUE when sorting in descending order, which is not exactly sorting missing values last but probably close enough for most users. This might have a slight performance impact on 6.x since doc value formats have to return 0 for documents which do not have a value, which makes using 0 as a missing value more efficient since the comparator does not have to check docsWithField. In master however since the format is sparse anyway, this should not matter. "
        }
    ]
}