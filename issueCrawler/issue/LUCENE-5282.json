{
    "id": "LUCENE-5282",
    "title": "speed up javadocs generation tasks",
    "details": {
        "components": [],
        "fix_versions": [],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "These generate the same things over and over. I think this is due to javadocs always rebuilding their dependencies.\n\nCan we not add a fake timestamp file (with 'touch') somewhere like javadocs.generated and then use 'uptodate' comparing that against the relevant source code to determine if javadocs need regeneration? \n\nThis seems like it would be a very simple solution.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-10-13T21:25:04+0000",
            "content": "I am looking into this, should just be a few lines of ant.\nI'm gathering benchmarks for 'ant documentation' so we get an idea... ",
            "author": "Robert Muir",
            "id": "comment-13793787"
        },
        {
            "date": "2013-10-13T22:22:36+0000",
            "content": "Its not so easy the way we are using a macro for this (e.g. to link in dependencies). There is not even a default \"task\" (its just defined to fail if you dont redefine it)... needs some thought. ",
            "author": "Robert Muir",
            "id": "comment-13793811"
        },
        {
            "date": "2013-10-13T22:53:13+0000",
            "content": "I have an idea how to fix the macro. Its just too late today! ",
            "author": "Uwe Schindler",
            "id": "comment-13793829"
        },
        {
            "date": "2013-10-14T11:50:01+0000",
            "content": "Hi, status update:\n\nIt is not as easy as expected. My idea how to fix the macro was to use the similar approach like the javadocs-packages-file downloader. This was invoked by \"antcall\", so if/unless properties were respected and updated. The idea I had was the same: use <local> to define property, then <uptodate> on the local property to find out if source files are newer than @destdir/package.html (this is the recommended approach to detect javadocs timestamp, see e.g. the official ANT build.xml: http://svn.apache.org/viewvc/ant/core/branches/ANT_18_BRANCH/build.xml?revision=1341924&view=markup, line 1438), and finally execute the javadocs task with <antcall>, passing the @-variables as parameters to the task. The problem why this did not work is the <nested> sourcefiles property, you cannot pass xml structures as parameters to a target. I found no way around that.\n\nThe second problem: You cannot get the source folder with the Java files from the macro: you only have the nested element that has the package names and directories somewhere in them.\n\nIn my opinion the only was to fix this would be a separate uptodate task in common-build and all module's javadocs targets depend on that one + ifunless check. ANT's own build.xml shows how to do this: http://svn.apache.org/viewvc/ant/core/branches/ANT_18_BRANCH/build.xml?revision=1341924&view=markup, line 1450. ",
            "author": "Uwe Schindler",
            "id": "comment-13794068"
        }
    ]
}