{
    "id": "LUCENE-1651",
    "title": "Make IndexReader.open() always return MSR to simplify (re-)opens.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "As per discussion in mailing list, I'm making DirectoryIndexReader.open() always return MSR, even for single-segment indexes.\nWhile theoretically valid in the past (if you make sure to keep your index constantly optimized) this feature is made practically obsolete by per-segment collection.\n\nThe patch somewhat de-hairies (re-)open logic for MSR/SR.\nSR no longer needs an ability to pose as toplevel directory-owning IR.\nAll related logic is moved from DIR to MSR.\nDIR becomes almost empty, and copying two or three remaining fields over to MSR/SR, I remove it.\nLots of tests fail, as they rely on SR returned from IR.open(), I fix by introducing SR.getOnlySegmentReader static package-private method.\nSome previous bugs are uncovered, one is fixed in LUCENE-1645, another (partially fixed in LUCENE-1648) is fixed in this patch.",
    "attachments": {
        "LUCENE-1651-tag.patch": "https://issues.apache.org/jira/secure/attachment/12409712/LUCENE-1651-tag.patch",
        "LUCENE-1651.patch": "https://issues.apache.org/jira/secure/attachment/12408713/LUCENE-1651.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-05-21T15:58:11+0000",
            "content": "Okay, here's the first patch, against latest trunk.\ntest-core, test-contrib pass. test-tag fails due to no-longer-correct test assumptions. Should I checkout the branch and make a separate patch, or how is it done? ",
            "author": "Earwin Burrfoot",
            "id": "comment-12711665"
        },
        {
            "date": "2009-05-21T16:05:20+0000",
            "content": "Excellent!  Thanks Earwin.\n\ntest-tag fails due to no-longer-correct test assumptions. Should I checkout the branch and make a separate patch, or how is it done?\n\nYes, please make mods to the tags/XXX checkout, and include those mods in the patch. ",
            "author": "Michael McCandless",
            "id": "comment-12711668"
        },
        {
            "date": "2009-05-26T18:09:51+0000",
            "content": "Earwin are you working on the patch for back-compat tests, here? ",
            "author": "Michael McCandless",
            "id": "comment-12713170"
        },
        {
            "date": "2009-05-26T19:09:58+0000",
            "content": "Yup, will post one soon, didn't have enough time on hands. ",
            "author": "Earwin Burrfoot",
            "id": "comment-12713195"
        },
        {
            "date": "2009-06-02T20:40:11+0000",
            "content": "Hm.. okay, I've got back to work on this patch. To fix tests relying on getting SR from IR.open() on trunk I introduced a package-private utility method that extracts SR from MSR if it is the only one there. The tests in tags/XXX don't see this method, should I backport it somewhere there? ",
            "author": "Earwin Burrfoot",
            "id": "comment-12715672"
        },
        {
            "date": "2009-06-02T20:46:04+0000",
            "content": "You can add a stub method (matches signature but does nothing) to src/java in the back-compat branch, just so the tests compile.  The back-compat tests run against the trunk's jar. ",
            "author": "Michael McCandless",
            "id": "comment-12715676"
        },
        {
            "date": "2009-06-02T22:21:19+0000",
            "content": "Here are the patches for current lucene trunk and back compat tag. ",
            "author": "Earwin Burrfoot",
            "id": "comment-12715721"
        },
        {
            "date": "2009-06-03T02:02:29+0000",
            "content": "I'm hitting compilation errors:\n\ncommon.compile-core:\n    [mkdir] Created dir: /lucene/src/msr.1651/build/classes/java\n    [javac] Compiling 374 source files to /lucene/src/msr.1651/build/classes/java\n    [javac] /lucene/src/msr.1651/src/java/org/apache/lucene/index/SegmentReader.java:419: directory has private access in org.apache.lucene.index.IndexReader\n    [javac]     instance.directory = dir;\n    [javac]             ^\n    [javac] /lucene/src/msr.1651/src/java/org/apache/lucene/index/SegmentReader.java:420: cannot find symbol\n    [javac] symbol  : variable readOnly\n    [javac] location: class org.apache.lucene.index.SegmentReader\n    [javac]     instance.readOnly = readOnly;\n    [javac]             ^\n    [javac] /lucene/src/msr.1651/src/java/org/apache/lucene/index/SegmentReader.java:562: cannot find symbol\n    [javac] symbol  : variable readOnly\n    [javac] location: class org.apache.lucene.index.SegmentReader\n    [javac]       return clone(readOnly); // Preserve current readOnly\n    [javac]                    ^\n    [javac] /lucene/src/msr.1651/src/java/org/apache/lucene/index/SegmentReader.java:588: cannot find symbol\n    [javac] symbol  : variable readOnly\n    [javac] location: class org.apache.lucene.index.SegmentReader\n    [javac]     if (normsUpToDate && deletionsUpToDate && !doClone && openReadOnly && readOnly) {\n    [javac]                                                                           ^\n    [javac] /lucene/src/msr.1651/src/java/org/apache/lucene/index/SegmentReader.java:611: cannot find symbol\n    [javac] symbol  : variable readOnly\n    [javac] location: class org.apache.lucene.index.SegmentReader\n    [javac]       clone.readOnly = openReadOnly;\n    [javac]            ^\n    [javac] /lucene/src/msr.1651/src/java/org/apache/lucene/index/SegmentReader.java:612: directory has private access in org.apache.lucene.index.IndexReader\n    [javac]       clone.directory = directory;\n    [javac]            ^\n    [javac] /lucene/src/msr.1651/src/java/org/apache/lucene/index/SegmentReader.java:612: directory has private access in org.apache.lucene.index.IndexReader\n    [javac]       clone.directory = directory;\n    [javac]                         ^\n    [javac] /lucene/src/msr.1651/src/java/org/apache/lucene/index/SegmentReader.java:1214: directory has private access in org.apache.lucene.index.IndexReader\n    [javac]     return directory;\n    [javac]            ^\n    [javac] Note: Some input files use or override a deprecated API.\n    [javac] Note: Recompile with -Xlint:deprecation for details.\n    [javac] 8 errors\n\n ",
            "author": "Michael McCandless",
            "id": "comment-12715777"
        },
        {
            "date": "2009-06-03T06:38:17+0000",
            "content": "Seems the patch didn't apply completely. Your line numbers are off, also directory/readOnly are now members of SegmentReader, no way they can't be seen:\n\n\nclass SegmentReader extends IndexReader implements Cloneable {\n  protected Directory directory;\n  protected boolean readOnly;\n\n  private String segment;\n  private SegmentInfo si;\n  private int readBufferSize;\n\n\n\nHere's corresponding part of the patch, I bet $Id$ is the reason.\n\n-/**\n- * @version $Id$\n- */\n-class SegmentReader extends DirectoryIndexReader {\n+/** @version $Id$ */\n+class SegmentReader extends IndexReader implements Cloneable {\n+  protected Directory directory;\n+  protected boolean readOnly;\n+\n\n ",
            "author": "Earwin Burrfoot",
            "id": "comment-12715836"
        },
        {
            "date": "2009-06-03T10:12:21+0000",
            "content": "Hmm \u2013 let me figure out what happened.  Sorry for the false alarm! ",
            "author": "Michael McCandless",
            "id": "comment-12715888"
        },
        {
            "date": "2009-06-03T10:58:45+0000",
            "content": "OK, I had one hunk fail in SegmentReader.java patch; once I fixed that, t'sall good.\n\nPatch looks good Earwin, thanks!\n\nI think we should now rename MultiSegmentReader to DirectoryIndexReader? ",
            "author": "Michael McCandless",
            "id": "comment-12715900"
        },
        {
            "date": "2009-06-03T11:42:48+0000",
            "content": "Patch looks good Earwin, thanks!\nI believe the readers can be cleaned up further, but I'm short on time and don't want to delay it for another week or two, and then rebase it against updated trunk once again. Might as well do that under a separate issue.\n\nI think we should now rename MultiSegmentReader to DirectoryIndexReader?\nMaybe DirectoryReader instead of DirectoryIndexReader? But all three are in fact okay with me, I really don't have any preference here. ",
            "author": "Earwin Burrfoot",
            "id": "comment-12715908"
        },
        {
            "date": "2009-06-03T14:20:51+0000",
            "content": "Let's just go w/ DirectoryReader?  Can you post a new patch w/ that?  Thanks.\n\nI believe the readers can be cleaned up further, but I'm short on time and don't want to delay it for another week or two, and then rebase it against updated trunk once again. Might as well do that under a separate issue.\n\nAgreed!  Progress not perfection. ",
            "author": "Michael McCandless",
            "id": "comment-12715935"
        },
        {
            "date": "2009-06-03T16:02:15+0000",
            "content": "Argh! The rename broke test-tag again  in new and innovative ways.\nNew patches attached. ",
            "author": "Earwin Burrfoot",
            "id": "comment-12715964"
        },
        {
            "date": "2009-06-03T16:15:44+0000",
            "content": "One more version, applies against current trunk without fuzzy hunk matching. ",
            "author": "Earwin Burrfoot",
            "id": "comment-12715969"
        },
        {
            "date": "2009-06-03T17:44:33+0000",
            "content": "OK patch looks good. I plan to commit in a day or two. Thanks Earwin! ",
            "author": "Michael McCandless",
            "id": "comment-12716004"
        },
        {
            "date": "2009-06-07T16:34:01+0000",
            "content": "Thanks Earwin! ",
            "author": "Michael McCandless",
            "id": "comment-12717051"
        }
    ]
}