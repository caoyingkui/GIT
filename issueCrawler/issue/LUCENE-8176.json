{
    "id": "LUCENE-8176",
    "title": "HttpReplicatorTest sometimes fails with leaked thread",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ]
    },
    "description": "I can't reproduce it locally when beasting thousands of times but it occurs on the Elastic CI. The logs look like this:\n\n\n08:56:28    [junit4] Suite: org.apache.lucene.replicator.http.HttpReplicatorTest\n08:56:28    [junit4]   2> 2018-02-15 18:55:34.282:INFO::TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: Logging initialized @4074ms to org.eclipse.jetty.util.log.StdErrLog\n08:56:28    [junit4]   2> 2018-02-15 18:55:34.416:INFO:oejs.Server:TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: jetty-9.4.8.v20171121, build timestamp: 2017-11-22T07:27:37+10:00, git hash: 82b8fb23f757335bb3329d540ce37a2a2615f0a8\n08:56:28    [junit4]   2> 2018-02-15 18:55:34.449:INFO:oejs.session:TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: DefaultSessionIdManager workerName=node0\n08:56:28    [junit4]   2> 2018-02-15 18:55:34.449:INFO:oejs.session:TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: No SessionScavenger set, using defaults\n08:56:28    [junit4]   2> 2018-02-15 18:55:34.454:INFO:oejs.session:TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: Scavenging every 600000ms\n08:56:28    [junit4]   2> 2018-02-15 18:55:34.509:INFO:oejs.AbstractConnector:TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: Started ServerConnector@7d0c3601{HTTP/1.1,[http/1.1]}{127.0.0.1:40696}\n08:56:28    [junit4]   2> 2018-02-15 18:55:34.510:INFO:oejs.Server:TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: Started @4301ms\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.236:INFO:oejs.AbstractConnector:TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: Stopped ServerConnector@7d0c3601{HTTP/1.1,[http/1.1]}{127.0.0.1:0}\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.239:INFO:oejs.session:TEST-HttpReplicatorTest.testBasic-seed#[74212B823E917AF0]: Stopped scavenging\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.258:INFO:oejs.Server:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: jetty-9.4.8.v20171121, build timestamp: 2017-11-22T07:27:37+10:00, git hash: 82b8fb23f757335bb3329d540ce37a2a2615f0a8\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.260:INFO:oejs.session:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: DefaultSessionIdManager workerName=node0\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.260:INFO:oejs.session:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: No SessionScavenger set, using defaults\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.260:INFO:oejs.session:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: Scavenging every 660000ms\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.262:INFO:oejs.AbstractConnector:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: Started ServerConnector@31668a1{HTTP/1.1,[http/1.1]}{127.0.0.1:43769}\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.262:INFO:oejs.Server:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: Started @5054ms\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.332:INFO:oejs.AbstractConnector:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: Stopped ServerConnector@31668a1{HTTP/1.1,[http/1.1]}{127.0.0.1:0}\n08:56:28    [junit4]   2> 2018-02-15 18:55:35.333:INFO:oejs.session:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: Stopped scavenging\n08:56:28    [junit4]   2> 2018-02-15 18:56:05.331:WARN:oejut.QueuedThreadPool:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: QueuedThreadPool@qtp1066862162{STOPPING,8<=8<=10000,i=0,q=1} Couldn't stop Thread[qtp1066862162-31,5,TGRP-HttpReplicatorTest]\n08:56:28    [junit4]   2> Feb 15, 2018 8:56:05 AM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\n08:56:28    [junit4]   2> WARNING: Will linger awaiting termination of 1 leaked thread(s).\n08:56:28    [junit4]   2> Feb 15, 2018 8:56:25 AM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\n08:56:28    [junit4]   2> SEVERE: 1 thread leaked from SUITE scope at org.apache.lucene.replicator.http.HttpReplicatorTest: \n08:56:28    [junit4]   2>    1) Thread[id=31, name=qtp1066862162-31, state=TIMED_WAITING, group=TGRP-HttpReplicatorTest]\n08:56:28    [junit4]   2>         at sun.misc.Unsafe.park(Native Method)\n08:56:28    [junit4]   2>         at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n08:56:28    [junit4]   2>         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2163)\n08:56:28    [junit4]   2>         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.reservedWait(ReservedThreadExecutor.java:308)\n08:56:28    [junit4]   2>         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:373)\n08:56:28    [junit4]   2>         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\n08:56:28    [junit4]   2>         at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\n08:56:28    [junit4]   2>         at java.lang.Thread.run(Thread.java:748)\n08:56:28    [junit4]   2> Feb 15, 2018 8:56:25 AM com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\n08:56:28    [junit4]   2> INFO: Starting to interrupt leaked threads:\n08:56:28    [junit4]   2>    1) Thread[id=31, name=qtp1066862162-31, state=TIMED_WAITING, group=TGRP-HttpReplicatorTest]\n08:56:28    [junit4]   2> Feb 15, 2018 8:56:28 AM com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\n08:56:28    [junit4]   2> SEVERE: There are still zombie threads that couldn't be terminated:\n08:56:28    [junit4]   2>    1) Thread[id=31, name=qtp1066862162-31, state=TIMED_WAITING, group=TGRP-HttpReplicatorTest]\n08:56:28    [junit4]   2>         at sun.misc.Unsafe.park(Native Method)\n08:56:28    [junit4]   2>         at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n08:56:28    [junit4]   2>         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2163)\n08:56:28    [junit4]   2>         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.reservedWait(ReservedThreadExecutor.java:308)\n08:56:28    [junit4]   2>         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:373)\n08:56:28    [junit4]   2>         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\n08:56:28    [junit4]   2>         at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\n08:56:28    [junit4]   2>         at java.lang.Thread.run(Thread.java:748)\n08:56:28    [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=1782, maxMBSortInHeap=7.137471976677822, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@52731bd6), locale=nl-BE, timezone=Antarctica/DumontDUrville\n08:56:28    [junit4]   2> NOTE: Linux 4.4.0-1048-aws amd64/Oracle Corporation 1.8.0_151 (64-bit)/cpus=4,threads=2,free=238028936,total=319291392\n08:56:28    [junit4]   2> NOTE: All tests run in this JVM: [IndexAndTaxonomyRevisionTest, LocalReplicatorTest, HttpReplicatorTest]\n08:56:28    [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=HttpReplicatorTest -Dtests.seed=74212B823E917AF0 -Dtests.slow=true -Dtests.locale=nl-BE -Dtests.timezone=Antarctica/DumontDUrville -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n08:56:28    [junit4] ERROR   0.00s J1 | HttpReplicatorTest (suite) <<<\n08:56:28    [junit4]    > Throwable #1: com.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE scope at org.apache.lucene.replicator.http.HttpReplicatorTest: \n08:56:28    [junit4]    >    1) Thread[id=31, name=qtp1066862162-31, state=TIMED_WAITING, group=TGRP-HttpReplicatorTest]\n08:56:28    [junit4]    >         at sun.misc.Unsafe.park(Native Method)\n08:56:28    [junit4]    >         at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n08:56:28    [junit4]    >         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2163)\n08:56:28    [junit4]    >         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.reservedWait(ReservedThreadExecutor.java:308)\n08:56:28    [junit4]    >         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:373)\n08:56:28    [junit4]    >         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\n08:56:28    [junit4]    >         at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\n08:56:28    [junit4]    >         at java.lang.Thread.run(Thread.java:748)\n08:56:28    [junit4]    > \tat __randomizedtesting.SeedInfo.seed([74212B823E917AF0]:0)Throwable #2: com.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:\n08:56:28    [junit4]    >    1) Thread[id=31, name=qtp1066862162-31, state=TIMED_WAITING, group=TGRP-HttpReplicatorTest]\n08:56:28    [junit4]    >         at sun.misc.Unsafe.park(Native Method)\n08:56:28    [junit4]    >         at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n08:56:28    [junit4]    >         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2163)\n08:56:28    [junit4]    >         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.reservedWait(ReservedThreadExecutor.java:308)\n08:56:28    [junit4]    >         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:373)\n08:56:28    [junit4]    >         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\n08:56:28    [junit4]    >         at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\n08:56:28    [junit4]    >         at java.lang.Thread.run(Thread.java:748)\n08:56:28    [junit4]    > \tat __randomizedtesting.SeedInfo.seed([74212B823E917AF0]:0)\n08:56:28    [junit4] Completed [9/9 (1!)] on J1 in 54.16s, 2 tests, 2 errors <<< FAILURES!\n\n\n\nThis line in particular is interesting:\n\n08:56:28    [junit4]   2> 2018-02-15 18:56:05.331:WARN:oejut.QueuedThreadPool:TEST-HttpReplicatorTest.testServerErrors-seed#[74212B823E917AF0]: QueuedThreadPool@qtp1066862162{STOPPING,8<=8<=10000,i=0,q=1} Couldn't stop Thread[qtp1066862162-31,5,TGRP-HttpReplicatorTest]}\n\n\n. It means that Jetty waited for 500ms for this thread to finish its work, then interrupted it, then waited again for 500ms and the thread was still alive. It is not clear to me whether the bug is yet. I guess it could be either Jetty or how the test handles InterruptedException.",
    "attachments": {
        "LUCENE-8176.patch": "https://issues.apache.org/jira/secure/attachment/12912892/LUCENE-8176.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16379852",
            "date": "2018-02-28T06:41:06+0000",
            "content": "Giving that org.eclipse.jetty.io.SelectorManager.doStart() creates ReservedThreadExecutor which occurs in the stale stacktrace, the suite timeout should be raised above 1 min which is default idle time for RTE, during that minute it may ignore interrupt() that causes this failure.   ",
            "author": "Mikhail Khludnev"
        },
        {
            "id": "comment-16391488",
            "date": "2018-03-08T16:34:07+0000",
            "content": "Thanks for looking! I'm not very familiar with the internals of Jetty, can you elaborate on why it might ignore interrupt? Interrupt is called after the server has been marked as stopped so my understanding is that it shouldn't keep threads alive regardless of any timeout. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16391494",
            "date": "2018-03-08T16:40:27+0000",
            "content": "Nevermind I just saw the linked Solr issue has more background. I'm fine with raising the timeout for now, can you add a comment next to the annotation to explain why we have to add it? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16394420",
            "date": "2018-03-11T07:01:23+0000",
            "content": "Commit 779821fe10ee5584afee47da9e088a12c64dcbcd in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=779821f ]\n\nLUCENE-8176: await HttpReplicatorTest completion for a minute. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16394421",
            "date": "2018-03-11T07:02:27+0000",
            "content": "Commit fa7de9e5e50dc26d7698ea3537e9e5f3c63f65eb in lucene-solr's branch refs/heads/branch_7x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fa7de9e ]\n\nLUCENE-8176: await HttpReplicatorTest completion for a minute. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16395039",
            "date": "2018-03-12T10:27:55+0000",
            "content": "Thanks Mikhail! ",
            "author": "Adrien Grand"
        }
    ]
}