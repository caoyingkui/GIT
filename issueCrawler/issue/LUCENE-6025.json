{
    "id": "LUCENE-6025",
    "title": "Add BitSet.prevSetBit",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0"
        ]
    },
    "description": "This would allow the join module to work with any BitSet as opposed to only FixedBitSet.",
    "attachments": {
        "LUCENE-6025.patch": "https://issues.apache.org/jira/secure/attachment/12677290/LUCENE-6025.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14184762",
            "author": "Yonik Seeley",
            "content": "+1 ",
            "date": "2014-10-27T02:25:55+0000"
        },
        {
            "id": "comment-14185099",
            "author": "Adrien Grand",
            "content": "Here is a patch. It adds BitSet.prevSetBit and cuts over the join module to BitSet instead of FixedBitSet. ",
            "date": "2014-10-27T12:48:55+0000"
        },
        {
            "id": "comment-14185327",
            "author": "ASF subversion and git services",
            "content": "Commit 1634585 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1634585 ]\n\nLUCENE-6025: Give AbstractPagedMutable the accountable interface ",
            "date": "2014-10-27T16:30:47+0000"
        },
        {
            "id": "comment-14185333",
            "author": "ASF subversion and git services",
            "content": "Commit 1634588 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1634588 ]\n\nLUCENE-6025: Give AbstractPagedMutable the accountable interface ",
            "date": "2014-10-27T16:33:25+0000"
        },
        {
            "id": "comment-14186267",
            "author": "Robert Muir",
            "content": "Patch is great, I really like the simplification of SparseBitSet.nextSetBit too.\n\nShouldn't DocIDSet.build() specify BitDocIDSet as return value? This would fix the compile error in join module with the current patch, and give better type safety... which this area of the code sorely needs.\n\nfor the join module we should maybe try to fix the type safety bugs with something like:\n\nabstract class ParentsFilter extends Filter {\n  // we just narrow the return type to one that will actually friggin work.\n  @Override abstract BitDocIdSet getDocIDSet(...);\n}\n\n\n\nBitSetCachingWrapperFilter would extend that one instead, but wrap any Filter. ",
            "date": "2014-10-28T02:59:45+0000"
        },
        {
            "id": "comment-14189904",
            "author": "Adrien Grand",
            "content": "New patch:\n\n\tAdded BitDocIdSetFilter that basically looks like this:\n\n\n\n\n/**\n * A {@link Filter} that produces {@link BitDocIdSet}s.\n */\npublic abstract class BitDocIdSetFilter extends Filter {\n\n  /**\n   * Same as {@link #getDocIdSet(LeafReaderContext, Bits)} but does not take\n   * acceptDocs into account and guarantees to return a {@link BitDocIdSet}.\n   */\n  public abstract BitDocIdSet getDocIdSet(LeafReaderContext context) throws IOException;\n\n  @Override\n  public final DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    return BitsFilteredDocIdSet.wrap(getDocIdSet(context), acceptDocs);\n  }\n\n}\n\n\n\nSo that block joins do not have do instanceof checks and casts.\n\n\n\tChanged DocIdSetBuilder.build to return a BitDocIdSet\n\tRenamed DocIdSetBuilder to BitDocIdSet.Builder\n\n ",
            "date": "2014-10-30T10:20:16+0000"
        },
        {
            "id": "comment-14189906",
            "author": "Adrien Grand",
            "content": "The reason why I did not name it ParentsFIlter like Robert proposed is that we sometimes need bitsets for children too, ",
            "date": "2014-10-30T10:21:05+0000"
        },
        {
            "id": "comment-14189944",
            "author": "Uwe Schindler",
            "content": "Looks good! ",
            "date": "2014-10-30T11:18:39+0000"
        },
        {
            "id": "comment-14190047",
            "author": "Robert Muir",
            "content": "This patch looks great! But should DocIdSet.EMPTY ever be returned for the Bitset-wrapper? Its not a BitDocIDSet. ",
            "date": "2014-10-30T13:24:48+0000"
        },
        {
            "id": "comment-14190180",
            "author": "Adrien Grand",
            "content": "This is the way CachingWrapperFilter deals with null doc id sets: they are internally stored as DocIdSet.EMPTY in the cache and replaced by null in CachingWrapperFilter.getDocIdSet. Here is an updated patch that tries to isolate this implementation detail in CachingWrapperFilter. ",
            "date": "2014-10-30T15:02:02+0000"
        },
        {
            "id": "comment-14190257",
            "author": "Robert Muir",
            "content": "+1 ",
            "date": "2014-10-30T15:47:16+0000"
        },
        {
            "id": "comment-14190285",
            "author": "ASF subversion and git services",
            "content": "Commit 1635531 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1635531 ]\n\nLUCENE-6025: Add BitSet.prevSetBit and cut over the join module to this API. ",
            "date": "2014-10-30T16:06:18+0000"
        },
        {
            "id": "comment-14190303",
            "author": "ASF subversion and git services",
            "content": "Commit 1635532 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1635532 ]\n\nLUCENE-6025: Add BitSet.prevSetBit and cut over the join module to this API. ",
            "date": "2014-10-30T16:13:00+0000"
        },
        {
            "id": "comment-14190311",
            "author": "Adrien Grand",
            "content": "Thanks Robert and Uwe for the reviews! ",
            "date": "2014-10-30T16:15:58+0000"
        },
        {
            "id": "comment-14332542",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:00:35+0000"
        }
    ]
}