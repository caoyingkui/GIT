{
    "id": "SOLR-9034",
    "title": "Atomic updates not work with CopyField",
    "details": {
        "components": [
            "Server"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5.2",
            "5.6",
            "6.0.1",
            "6.1"
        ],
        "affect_versions": "5.5",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Atomic updates does not work when CopyField has docValues enabled.  Below is the sample schema\n\n\n   <field name=\"single_i_dvn\" multiValued=\"false\" type=\"int\"    indexed=\"true\" stored=\"true\" />\n   <field name=\"single_d_dvn\" multiValued=\"false\" type=\"double\" indexed=\"true\" stored=\"true\" />\n   <field name=\"single_s_dvn\" multiValued=\"false\" type=\"string\" indexed=\"true\" stored=\"true\" />\n   <field name=\"copy_single_i_dvn\" multiValued=\"false\" type=\"int\"    docValues=\"true\" indexed=\"true\" stored=\"false\" useDocValuesAsStored=\"false\" />\n   <field name=\"copy_single_d_dvn\" multiValued=\"false\" type=\"double\" docValues=\"true\" indexed=\"true\" stored=\"false\" useDocValuesAsStored=\"false\" />\n   <field name=\"copy_single_s_dvn\" multiValued=\"false\" type=\"string\" docValues=\"true\" indexed=\"true\" stored=\"false\" useDocValuesAsStored=\"false\" />\n\n\n\nBelow is the exception\n\nCaused by: java.lang.IllegalArgumentException: DocValuesField\n \"copy_single_i_dvn\" appears more than once in this document \n(only one value is allowed per field)",
    "attachments": {
        "SOLR-9034.patch": "https://issues.apache.org/jira/secure/attachment/12800434/SOLR-9034.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-04-25T00:44:15+0000",
            "author": "Karthik Ramachandran",
            "content": "Can someone review the change?  It would good if this fix makes it to 5.5.1 ",
            "id": "comment-15255762"
        },
        {
            "date": "2016-04-25T21:22:09+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Thanks for the patch, I am reviewing it. ",
            "id": "comment-15257082"
        },
        {
            "date": "2016-04-25T21:31:57+0000",
            "author": "Yonik Seeley",
            "content": "We should also make sure that we have tests for both retrieval cases (transaction log and index).  ",
            "id": "comment-15257091"
        },
        {
            "date": "2016-04-26T16:45:58+0000",
            "author": "Yonik Seeley",
            "content": "Updated patch... the test modification should improve coverage for the retrieval-from-tlog case. ",
            "id": "comment-15258412"
        },
        {
            "date": "2016-04-26T17:19:10+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Updating the patch to move the logic of filtering the list of nonstored DV fields that are copy targets to the SolrIndexSearcher so that the list is computed once and used again and again. The logic for filtering, as in Karthik's original patch, seems like a good idea in order to solve the issue, since such a filtering happens for stored fields that are copy field targets. This patch retains the tests from Yonik's previous patch.\n[~kramachandran@commvault.com], Yonik Seeley, please review. ",
            "id": "comment-15258493"
        },
        {
            "date": "2016-04-26T20:04:58+0000",
            "author": "Karthik Ramachandran",
            "content": "Changes looks good. ",
            "id": "comment-15258825"
        },
        {
            "date": "2016-04-28T19:52:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c897917c718eef75d66c5d0006f409d5c95260c7 in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c897917 ]\n\nSOLR-9034: fix atomic updates for copyField w/ docValues ",
            "id": "comment-15262826"
        },
        {
            "date": "2016-04-28T19:53:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 21aea6f606f81b1b4c45fa41501f33744f2b887a in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=21aea6f ]\n\nSOLR-9034: fix atomic updates for copyField w/ docValues ",
            "id": "comment-15262830"
        },
        {
            "date": "2016-04-28T19:54:20+0000",
            "author": "Yonik Seeley",
            "content": "Committed.  Thanks! ",
            "id": "comment-15262832"
        },
        {
            "date": "2016-05-09T22:19:13+0000",
            "author": "Przemys\u0142aw Szeremiota",
            "content": "Yonik,\n\nI was fighting SOLR 5.5 useDocValuesAsStored/copyField issue on our company's SOLR installation, and sufficient fix seems to be simple:\nsolr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java\n  -       searcher.decorateDocValueFields(sid, docid, searcher.getNonStoredDVs(false));\n  +       searcher.decorateDocValueFields(sid, docid, searcher.getNonStoredDVs(true));\n\n\ngetNonStoredDVs(false) returns all non-stored docValues fields, getNonStoredDVs(true) returns only non-stored docValues fields used as stored, either explicitly or implicitly (in schema 1.6). Doesn't masking \"implicitly use all docvalues as stored, configured or not\"  behavior with copyField target detection defeats whole purpose of choosing docValues/stored behavior? ",
            "id": "comment-15277188"
        },
        {
            "date": "2016-05-20T19:05:59+0000",
            "author": "Steve Rowe",
            "content": "Reopening to backport to 6.0.1. ",
            "id": "comment-15293989"
        },
        {
            "date": "2016-05-20T19:06:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit be59da0b42df01a2e4b6c6fa8d8d6bf50fb3d690 in lucene-solr's branch refs/heads/branch_6_0 from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=be59da0 ]\n\nSOLR-9034: fix atomic updates for copyField w/ docValues ",
            "id": "comment-15293990"
        },
        {
            "date": "2016-05-20T19:14:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ed028a75dde0cc2cfe577027f60a5634aa5e7c13 in lucene-solr's branch refs/heads/branch_6_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ed028a7 ]\n\nSOLR-9034: branch_6_0: move CHANGES entry from under 5.5.1 to under 6.0.1 ",
            "id": "comment-15294000"
        },
        {
            "date": "2016-05-20T19:19:04+0000",
            "author": "Scott Blum",
            "content": "Did this make 5.5.1? ",
            "id": "comment-15294007"
        },
        {
            "date": "2016-05-28T13:38:21+0000",
            "author": "Steve Rowe",
            "content": "Bulk close issues included in the 6.0.1 release. ",
            "id": "comment-15305352"
        },
        {
            "date": "2016-06-09T20:37:00+0000",
            "author": "Scott Blum",
            "content": "Should probably backport to 5.5.2, 5.6 ",
            "id": "comment-15323293"
        },
        {
            "date": "2016-06-14T17:40:40+0000",
            "author": "Steve Rowe",
            "content": "Reopening to backport to 5.6 and 5.5.2. ",
            "id": "comment-15329998"
        },
        {
            "date": "2016-06-14T19:34:09+0000",
            "author": "Steve Rowe",
            "content": "Here are the 5.6 and 5.5.2 commits, since the ASF bot doesn't seem to be working:\n\nbranch_5x: SOLR-9034: fix atomic updates for copyField w/ docValues\nCommit: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/5f91aa95\n\nbranch_5_5: SOLR-9034: fix atomic updates for copyField w/ docValues\nCommit: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/7777599d\n\nbranch_5_5: SOLR-9034: Add 5.5.2 CHANGES entry\nCommit: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/6f06e56c\n ",
            "id": "comment-15330259"
        },
        {
            "date": "2016-06-18T21:55:53+0000",
            "author": "Steve Rowe",
            "content": "My Jenkins found a reproducing TestNRTOpen.testSharedCores() failure on branch_5_5, and git bisect points the finger at this issue - the seed doesn't reproduce for me on master, branch_6x, branch_6_1 or branch_6_0 though:\n\n\nChecking out Revision c6b9ac065571718e7e92174fa7e2a927583012fa (refs/remotes/origin/branch_5_5)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestNRTOpen -Dtests.method=testSharedCores -Dtests.seed=7C31F56A2C49EB56 -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=ar-LB -Dtests.timezone=Asia/Magadan -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.21s J5  | TestNRTOpen.testSharedCores <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([7C31F56A2C49EB56:9A32BF25A4BFC659]:0)\n   [junit4]    > \tat org.apache.solr.core.TestNRTOpen.testSharedCores(TestNRTOpen.java:117)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n ",
            "id": "comment-15338217"
        },
        {
            "date": "2016-06-20T14:58:29+0000",
            "author": "Steve Rowe",
            "content": "Another reproducing branch_5_5 seed for TestNRTOpen.testSharedCores() http://jenkins.thetaphi.de/job/Lucene-Solr-5.5-Linux/310/consoleText:\n\n\nChecking out Revision c6b9ac065571718e7e92174fa7e2a927583012fa (refs/remotes/origin/branch_5_5)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestNRTOpen -Dtests.method=testSharedCores -Dtests.seed=A2B2DA22BF73E3AF -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=es-HN -Dtests.timezone=Libya -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.49s J1 | TestNRTOpen.testSharedCores <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<3> but was:<1>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([A2B2DA22BF73E3AF:44B1906D3785CEA0]:0)\n   [junit4]    > \tat org.apache.solr.core.TestNRTOpen.testSharedCores(TestNRTOpen.java:116)\n\n\n\nBut this seed continues to fail even when I rollback to the commit prior to this issue's branch_5_5 commit.  Also, when I run the test on my box the failure point and cause are different - this is on branch_5_5 at the SOLR-9034 commit point on branch_5_5 (7777599):\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestNRTOpen -Dtests.method=testSharedCores -Dtests.seed=A2B2DA22BF73E3AF -Dtests.multiplier=3 -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=es-HN -Dtests.timezone=Libya -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.27s | TestNRTOpen.testSharedCores <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<[org.apache.lucene.index.SegmentCoreReaders@6cda66e6, org.apache.lucene.index.SegmentCoreReaders@37203df2, org.apache.lucene.index.SegmentCoreReaders@49f95cf6]> but was:<[org.apache.lucene.index.SegmentCoreReaders@345238b3]>\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([A2B2DA22BF73E3AF:44B1906D3785CEA0]:0)\n   [junit4]    >        at org.apache.solr.core.TestNRTOpen.testSharedCores(TestNRTOpen.java:124)\n\n\n\nSo it looks like the other seed succeeds earlier than the SOLR-9034 commit for indirect reasons.  I'll poke around some more. ",
            "id": "comment-15339649"
        },
        {
            "date": "2016-06-20T16:15:55+0000",
            "author": "Steve Rowe",
            "content": "I've opened SOLR-9229 for the TestNRTOpen.testSharedCores() failures, and since they don't seem to be directly related to this issue - more likely SOLR-8621 is the cause - I'm resolving this issue. ",
            "id": "comment-15339822"
        },
        {
            "date": "2016-06-25T20:33:46+0000",
            "author": "Steve Rowe",
            "content": "Bulk close issues released with 5.5.2. ",
            "id": "comment-15349780"
        }
    ]
}