{
    "id": "SOLR-306",
    "title": "copyFields with a dynamic destination should support static source",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "In SOLR-226, we added support for copy fields with a dynamic destination.\n\nWe should also support dynamic copyFields with a static source:\n <copyField source=\"name\" dest=\"text_*\" /> \n\nThis will copy the contents of \"name\" to \"text_name\"",
    "attachments": {
        "SOLR-306-CopyField.patch": "https://issues.apache.org/jira/secure/attachment/12361951/SOLR-306-CopyField.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12513150",
            "date": "2007-07-17T04:56:22+0000",
            "content": "restructured code to make this work.\n\nThe relevant change was to add type 'EQUALS' to DynamicReplacement.   "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12513298",
            "date": "2007-07-17T17:11:12+0000",
            "content": "Given that this looks like very simple syntactic sugar:\n  source=\"name\" dest=\"text_*\"\nis the same as\n  source=\"name\" dest=\"text_name\"\n\nIt seems like this should be handled at schema-parse time (and not as a dynamic copyfield). "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12513310",
            "date": "2007-07-17T18:07:48+0000",
            "content": "i'm a little worried that the syntax as described would give people the wrong impression.    the syntax added in SOLR-226 was fairly clear because there was a one to one mapping between the * in the source and the * in the dest ... there is a lot more ambiguity here.\n\nif <copyField source=\"foo_\" dest=\"bar\" /> will copy from all incoming fields starting with \"foo_\" to the field \"bar\", people might reasonably assume that  <copyField source=\"bar\" dest=\"foo_\" /> will copy from the field \"bar\" to ALL fields starting with \"foo_\" ... where different people might have different assumptions about what \"ALL\" means ... someone might assume Solr will map it to every explicitly created field matching the pattern, others might assume it will map to every dynamicField that is based on a suffix (ie: if there are dynamic fields for string and *_text then a copyfield with a dest of foo should create foo_string and foo_text)\n\n...the point being it could get very confusing.  it would probably be better to do this using a different tag name / syntax, to help it stand out as functionally different ... perhaps this is a good opportunity to do true regex based matching...\n\n  <regexCopyField source=\"(name)\" dest=\"text_$1\" /> "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12513315",
            "date": "2007-07-17T18:16:36+0000",
            "content": "Yonik - good point.  Taking that, this can be reduced to:\n\nIndex: src/java/org/apache/solr/schema/IndexSchema.java\n===================================================================\n\u2014 src/java/org/apache/solr/schema/IndexSchema.java    (revision 557002)\n+++ src/java/org/apache/solr/schema/IndexSchema.java    (working copy)\n@@ -525,12 +525,12 @@\n           else \n{\n             dCopies.add(new DynamicCopy(source, d));\n           }\n\n\t}\n\telse if( destIsPattern ) \n{\n-          String msg =  \"copyField only supports a dynamic destination if the source is also dynamic\" ;\n-          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, msg );\n         }\n         else {\n+          if( destIsPattern ) \n{\n+            d = getField(dest.replace( \"*\", source ));\n+          }\n+\n           // retrieve the field to force an exception if it doesn't exist\n           SchemaField f = getField(source);\n\n\n\n-------------------\n\nHoss-\n\nyes, I see the concern.  After realizing that the copy field isn't anything special, and I essentially need to write one/field anyway, I may as well write:\n source=\"name\" dest=\"text_name\" \nand be done with it.\n\nI'll close this issue, and maybe a regex version could be started later. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12513316",
            "date": "2007-07-17T18:28:57+0000",
            "content": "Of course if the source isn't dynamic, there really isn't a reason for this feature at all. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12513320",
            "date": "2007-07-17T18:34:39+0000",
            "content": "> maybe a regex version could be started later\n\nDon't hurry... I think that's moving in the wrong direction for good performance \nhttp://www.nabble.com/NO_NORMS-and-TOKENIZED--tf3064721.html#a9047635 "
        }
    ]
}