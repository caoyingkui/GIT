{
    "id": "SOLR-8339",
    "title": "SolrDocument and SolrInputDocument should have a common interface",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Currently, both share a Map interface (SOLR-928). However, there are many common methods like createField(), setField() etc. that should perhaps go into an interface/abstract class.",
    "attachments": {
        "SOLR-8339.patch": "https://issues.apache.org/jira/secure/attachment/12774294/SOLR-8339.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-25T04:48:02+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Is there a historic reason for not having a common interface/abstract class for SolrDocument and SolrInputDocument other than a Map?\nSince having this right now might break backcompat, does it make sense to do this for 6.0?\nRight now, the motivation for doing this is SOLR-8220, but not strictly needed. ",
            "id": "comment-15026180"
        },
        {
            "date": "2015-11-25T08:28:14+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "It seems there is no backcompat implications. Spoke to Noble Paul offline, and mentioned that there is no backcompat issue with this change as long as any existing method is not deleted or altered.\n\nHere's a patch adding a SolrDocumentBase as an abstract class which SolrDocument and SolrInputDocument now extend from. ",
            "id": "comment-15026408"
        },
        {
            "date": "2015-11-25T08:41:37+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Updated patch, includes the child document methods common to both the classes as well. ",
            "id": "comment-15026429"
        },
        {
            "date": "2015-11-25T11:05:48+0000",
            "author": "Mikhail Khludnev",
            "content": "Looked on. Patch seems fine! ",
            "id": "comment-15026616"
        },
        {
            "date": "2015-12-02T12:26:19+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Removed javadocs references using @see annotation. Some how ant was not happy. Those links seemed not all that useful anyway. ",
            "id": "comment-15035717"
        },
        {
            "date": "2015-12-02T14:13:39+0000",
            "author": "Ahmet Arslan",
            "content": "With this change, can we remove org.apache.solr.client.solrj.util.ClientUtils#toSolrInputDocument method? And org.apache.solr.client.solrj.util.ClientUtils#toSolrDocument ? ",
            "id": "comment-15035846"
        },
        {
            "date": "2015-12-02T14:24:51+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "With this change, can we remove org.apache.solr.client.solrj.util.ClientUtils#toSolrInputDocument method? And org.apache.solr.client.solrj.util.ClientUtils#toSolrDocument ?\n\nWe can deprecate those in 5.x and remove in trunk.\n\nIshan Chattopadhyaya - SolrDocument used to be serializable but you have removed that in your patch. Same for SolrInputDocument. That is a compat-break. Can you put that back? ",
            "id": "comment-15035869"
        },
        {
            "date": "2015-12-02T14:38:15+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Thanks Shalin Shekhar Mangar. Added the Serializable to the base class. ",
            "id": "comment-15035885"
        },
        {
            "date": "2015-12-02T15:56:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1717654 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1717654 ]\n\nSOLR-8339: Refactor SolrDocument and SolrInputDocument to have a common base abstract class called SolrDocumentBase. Deprecated methods toSolrInputDocument and toSolrDocument in ClientUtils. ",
            "id": "comment-15036009"
        },
        {
            "date": "2015-12-02T16:06:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1717657 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1717657 ]\n\nSOLR-8339: Refactor SolrDocument and SolrInputDocument to have a common base abstract class called SolrDocumentBase. Deprecated methods toSolrInputDocument and toSolrDocument in ClientUtils. ",
            "id": "comment-15036034"
        },
        {
            "date": "2015-12-02T16:08:53+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Ishan! ",
            "id": "comment-15036038"
        },
        {
            "date": "2016-11-10T16:17:01+0000",
            "author": "Juan Jos\u00e9",
            "content": "When upgrade Apache Solr from version 4.10 to 5.0.0, the parse serialization is not working from SolrDocument class to json.\nwe use library com.fasterxml.jackson.core:jackson-databind:2.5.4 for json parsing. We are getting this exception:\n\norg.springframework.web.util.NestedServletException: Handler processing failed; nested exception is java.lang.StackOverflowError\n\torg.springframework.web.servlet.DispatcherServlet.triggerAfterCompletionWithError(DispatcherServlet.java:1302)\n\torg.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:977)\n\torg.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)\n\torg.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:969)\n\torg.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:871)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:647)\n\torg.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:728)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\n\n\n   causa ra\u00edz\n            java.lang.StackOverflowError\n\tcom.fasterxml.jackson.databind.type.HierarchicType.getRawClass(HierarchicType.java:74)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._doFindSuperInterfaceChain(TypeFactory.java:1009)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._findSuperInterfaceChain(TypeFactory.java:1004)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._findSuperTypeChain(TypeFactory.java:958)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:285)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:279)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._mapType(TypeFactory.java:891)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._fromClass(TypeFactory.java:732)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._constructType(TypeFactory.java:387)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:303)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:279)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._mapType(TypeFactory.java:891)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._fromClass(TypeFactory.java:732)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._constructType(TypeFactory.java:387)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:303)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:279)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._mapType(TypeFactory.java:891)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._fromClass(TypeFactory.java:732)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._constructType(TypeFactory.java:387)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:303)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:279)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._mapType(TypeFactory.java:891)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._fromClass(TypeFactory.java:732)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._constructType(TypeFactory.java:387)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:303)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:279)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._mapType(TypeFactory.java:891)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._fromClass(TypeFactory.java:732)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._constructType(TypeFactory.java:387)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:303)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:279)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._mapType(TypeFactory.java:891)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._fromClass(TypeFactory.java:732)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._constructType(TypeFactory.java:387)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:303)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:279)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._mapType(TypeFactory.java:891)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._fromClass(TypeFactory.java:732)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._constructType(TypeFactory.java:387)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:303)\n\tcom.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(TypeFactory.java:279)\n\tcom.fasterxml.jackson.databind.type.TypeFactory._mapType(TypeFactory.java:891)\n\n\nWe solved this error getting fields manually from the map _field, the code is:\npublic List<Object> transformSolrDocumentsListToDocuments(SolrDocumentList searched) {\n\tList<Object> documents = new ArrayList<>();\n\tfor (SolrDocument solrDocument : searched) {\n\t\tMap<String, Object> fields = new HashMap<>();\n\t\tfor (String key : solrDocument.getFieldValueMap().keySet()) \n{\n\t\t\tObject field = solrDocument.getFieldValue(key);\n\t\t\tfields.put(key, field);\n\t\t}\n\t\tdocuments.add(fields);\n\t}\n\n\treturn documents;\n}  ",
            "id": "comment-15654439"
        },
        {
            "date": "2016-11-10T16:33:00+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "This change was introduced in Solr 5.5 and should not affect 4.10 to 5.0 upgrade. Maybe the solr-users list might be better in terms of offering solutions for the problem you faced? ",
            "id": "comment-15654481"
        },
        {
            "date": "2016-11-11T07:18:48+0000",
            "author": "Juan Jos\u00e9",
            "content": "Sorry I made a mistake. It was to upgrade from 5.4.1 to 5.5.0. ",
            "id": "comment-15656384"
        },
        {
            "date": "2016-11-11T11:54:56+0000",
            "author": "Juan Jos\u00e9",
            "content": "This issue is controlled from version 2.7.3 of com.fasterxml.jackson.core:jackson-databind ",
            "id": "comment-15656886"
        },
        {
            "date": "2017-05-06T12:29:30+0000",
            "author": "Shawn Heisey",
            "content": "How does one actually convert SolrDocument to SolrInputDocument without the methods that no longer exist?  This was discussed today in the #solr IRC channel, and the following SO post was mentioned:  I tried a few ideas, but was unable to \n\nhttp://stackoverflow.com/questions/38266684/substitute-of-org-apache-solr-client-solrj-util-clientutils-tosolrinputdocument\n\nI've come up with an alternate plan to restoring the ClientUtils method \u2013 a constructor on SolrDocumentBase that accepts another SolrDocumentBase as an argument, and does a shallow copy. ",
            "id": "comment-15999419"
        },
        {
            "date": "2018-10-17T09:58:48+0000",
            "author": "Gregor B. Rosenauer",
            "content": "I am upgrading an old 5.4.1 codebase to 7.5.0 and found there is no replacement for the now removed method ClientUtils.toSolrInputDocument().\n\nWhat's the correct way to handle this, without reimplementing the old code (what's the point then?).\n\nMaybe the patch should be extended to SolrClient.add accept a SolrDocumentBase instead of only SolrInputDocument? ",
            "id": "comment-16653292"
        }
    ]
}