{
    "id": "SOLR-255",
    "title": "RemoteSearchable for Solr(use RMI)",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "I experimentally implemented RemoteSearchable of Lucene for Solr.\nI referred to \"FederatedSearch\" and used RMI. \n\nTwo or more Searchers can be referred to with SolrIndexSearcher.\nThese query-only indexes can be specified in solrconfig.xml, \nenumerating the list under a <searchIndex> tag.\n\n  <searchIndex>\n    <lst>E:\\sample\\data1</lst>\n    <lst>E:\\sample\\data2</lst>\n    <lst>rmi://localhost</lst>\n  </searchIndex>\n\nThe index in the dataDir is also used as the default index of solr\nto update and query.\n\nWhen data of a document in a index specified under the <searchIndex> is\nupdated, \nthat document data in the index will be deleted and data of the updated document will be stored\nin the index in the dataDir.\n\nSolrRemoteSearchable (the searcher for remote access) is started from SolrCore \nby specifying \"< remoteSearcher>true</remoteSearcher >\" in solrconfig.xml.(It is registered in RMI. )\n(\"-Djava.security.policy\" should be set when you start VM. )\n\nNot all of the operational cases are tested \nbecause Solr has so many features. \n\nMoreover, TestUnit has not been made \nbecause I made this through a trial and error process. \nSome changes are required in Lucene to execute this. \n\nI need your comments on this although it might be hard without TestUnit. \nI especially worry about the followings: \n\n\tAm I on the right truck about this issue?\n\tIs the extent of modifying Lucene tolerable?\n\tAre there any ideas to implement this feature without modifying Lucene?\n\tDoes this idea contribute for improving Solr?\n\tThis implementation may partially overlap with \"Multiple Solr Cores\".\n  What should be done?\n\tAre there any other considerations about this issue, which I have overlooked?",
    "attachments": {
        "solr-multi20070606.zip": "https://issues.apache.org/jira/secure/attachment/12359138/solr-multi20070606.zip",
        "solr-multi20070724..zip": "https://issues.apache.org/jira/secure/attachment/12362422/solr-multi20070724..zip"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Toru Matsuzawa",
            "id": "comment-12502224",
            "date": "2007-06-07T05:30:10+0000",
            "content": "I attached the patch for Lucene, the patch for Solr \nand solrconfig.xml to execute this.\n\nMy response could be very slow because of my poor English ability.  "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12504740",
            "date": "2007-06-14T13:52:10+0000",
            "content": "I took only a very quick look at this and noticed changes are done in Lucene.  Any such changes should be brought up on the java-dev@lucene.... mailing list and posted as a patch in Lucene's JIRA.  You can explain why you need to make those changes.\n\nI didn't take a closer look at your Solr changes, but from your description above, my guess is that this will clash, at least somewhat, with SOLR-215.\n\nIs this what you implemented?\n                                                   remote lucene index (not Solr?)\n                                                  /\n                                               RMI\nclient -----> solr instance /\n                                             \\\n                                               RMI\n                                                  \\\n                                                   remote lucene index (not Solr?)\n\nThanks. "
        },
        {
            "author": "Toru Matsuzawa",
            "id": "comment-12505078",
            "date": "2007-06-15T07:50:09+0000",
            "content": "My implementation is as follows.\n\nclient --> Solr instance  +/data/index\n                                           +/local/other/solr1/data/index\n                                           +/local/other/solr2/data/index\n                                           +/local/other/solr3/data/index\n\n\n\n\n\n\n\n                                           +--- RMI <--- Remote Solr index(/data/index)\n\n\n\n\n\n\n\n                                           +--- RMI <--- Remote Solr index(/data/index)\n\nFirst of all, I'd like to get your comments whether my modification is beneficial for Solr.\nIf it is helpful, is it possible to implement this changes without modifying Lucene? \nI need your comments on this point.(If you have any other ideas for the implementation, please let me know.)\n\nAfter it becomes clear the necessity of modifying Lucene, I'd like to post it to Lucene's JIRA.\n\nI understand there are some overlaps with SOLR-215.\nHowever, I think this modification can coexist with SOLR-215.\n\nThank you.\n "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12506716",
            "date": "2007-06-20T23:13:47+0000",
            "content": "That looks good.  So with your patch one can search any one of those indices, or any group of those indices, correct?  In the case where a group of indices is searched, do you search them in parallel and merge the results?\n\nI'll add a note about this work to SOLR-215.  It sounds like you and Henri (the author of SOLR-215) really need to work together, otherwise applying both his and your patch will be very difficult. "
        },
        {
            "author": "Henri Biestro",
            "id": "comment-12507326",
            "date": "2007-06-22T13:52:14+0000",
            "content": "Toru,\nI've been looking quickly at your patch and kinda understands why Otis is pushing for a merge. \nI dont know how this is usually done; should we merge the 2 issues and merge our patches?\nI can try & see how this goes if you want.\n\nOne thing that worries me though is the Lucene patch dependency; any way to only have a Solr patch?\nI would suspect that Lucene committers are as busy as Solr 's so the review process might take sometime.\nAlthough from far, it does look like pretty harmless changes so there is hope...\n\nAs a side note, I was wondering if we could extend you patch's functionality and get read/write capability per index (as in http://hellonline.com/blog/?p=55 ,document indexing load balancing could be performed on hashing unique key % number of indexes for instance or by some configurable class). The current functionality would be retained by specificying 'read-only' versus 'read-write' for each index.\n\nNice job btw.\nHenri "
        },
        {
            "author": "Toru Matsuzawa",
            "id": "comment-12508380",
            "date": "2007-06-27T02:17:21+0000",
            "content": "Hi Otis & Henri,\n\nOtis Gospodnetic wrote:\n> So with your patch one can search any one of those indices,\n> or any group of those indices, \n> correct?  In the case where a group of indices is searched,\n> do you search them in parallel and merge the results?\n\nWith my patch one can search a group of these indeces.\nEach index in the group is searched in sequence, \nand then each result is merged.\n\nHenri Biestro wrote:\n> I've been looking quickly at your patch and \n> kinda understands why Otis is pushing for a merge. \n> I dont know how this is usually done; \n> should we merge the 2 issues and merge our patches?\n> I can try & see how this goes if you want.\n\nI inspected the patch of SOLR-215. \nThe overlaps between SOLR-215 and SOLR255 are \nin the constructor of SolrIndexSearcher and SolrCore.\nEach modification should be committed sequentially.\nAfter that, there are not many additional modifications.\n\nThe commitment should be done through some stages. \n(It might be acceptable Step1 and Step2 is in reverse order. Or, simultaneous? ) \nStep1) MultiCore (SOLR-215) \nStep2) The functionality of MultiSearcher, exclude modification of RMI and Lucene.\n       (SolrMultiSearcher and SolrIndexSearchable) \nStep3) The modification of Lucene\nStep4) The functional addition to the RMI (SolrRemoteSearcher) \n       (When it becomes MultiCore, additional modification, in which \n        the remote object of RMI should be created dynamically, will be needed.)\n\n> One thing that worries me though is the Lucene patch dependency; \n> any way to only have a Solr patch?\n> I would suspect that Lucene committers are as busy as Solr 's \n> so the review process might take sometime.\n> Although from far, it does look like pretty harmless changes so there is hope...\n\nThe RMI (SolrRemoteSearcher) causes the Lucene patch dependency.\nThere will be no impact on SOLR-215 by the above-mentioned procedure.\n\n> As a side note, I was wondering if we could extend \n> you patch's functionality and get read/write capability per index\n> (as in http://hellonline.com/blog/?p=55 ,\n> document indexing load balancing could be performed \n> on hashing unique key % number of indexes for instance \n> or by some configurable class). \n> The current functionality would be retained \n> by specificying 'read-only' versus 'read-write' for each index.\n\nI also have ideas about this but those are not concrete enough.\nAnyway, that will be done through Step5 and later.\n\nThanks. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12508385",
            "date": "2007-06-27T02:51:47+0000",
            "content": "Toru, could you give an overview of how this solution works, what data is passed over the network, and how well you think it scales?  What is done on the shards, and what is done on the \"combiner\" to sort hits by a certain field?  to facet by a certain field?  Some of the methods on SolrSearchable make me nervous about scalability (like getInts(field), getFloats(field)) but it's not easy to tell if/when those are used.\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12508394",
            "date": "2007-06-27T03:28:48+0000",
            "content": "A few other considerations for good scalability:\n\n\tshards should be searched in parallel\n\tthere needs to be multiple copies of each shard (esp for HA), with failover, otherwise splitting and distributing the index will lead to higher failure rates.\n\n "
        },
        {
            "author": "Toru Matsuzawa",
            "id": "comment-12510631",
            "date": "2007-07-06T09:03:08+0000",
            "content": "Hi Yonik,\n\nSolrMultiSearcher execute searches in each index file.\nIndex files to be searched is as follows:\n\n\t/data/index (default index files, read/write)\n\tlocal index files (read only)\n\tremote index files through RMI (read only)\n\n\n\nSolrIndexSearchable performs searches in local indexes, \nwhich originally SolrIndexSearcher performs.\nSolrClientSearchable is executed as the wrapper instance \nwhich gets a RMI object and performs searches \n\nIn SolrMultiSearcher, SolrFieldSortedHitQueue merged search results \nfrom all searched indexes.\n(FieldSortedHitQueue cannot use here \nbecause it requires using FieldCache.)\n\nWhen RMI is valid, the following data are transferred through the network.\n1) Weight, DocSet, Sort and so on, for search requests to remote indexes\n2) DocListAndSet , DocList or DocSet as these search results\n3) FieldCache of each field from remote indexes\n\nWith getInts(field), getFloats(field) and so on, \nSolrMultiSearcher merges all these data, \nwhich SolrIndexSearchable or SolrClientSearchable for each index gets \nwith getInts(field), getFloats(field) and so on.\nThere will be certain problems on scalability unless something should be done for this point.\uff08Please teach if there is something a good idea. )\n\nEach index is searched sequentially in my present implementation.\nThis process should be in parallel in future implementation. (It must be hard to implement.)\n\nMy implementation is mainly in order to search indexes on remote nodes through RMI.\nWithout RMI (i.e., local index searches only), my implementation can be more simple.\n(I have originally implemented this for its remote index use in my project.\n However, I use Solr with local indexes only because of complex operations of remote index version.)\n\nThanks, "
        },
        {
            "author": "Sharad Agarwal",
            "id": "comment-12510637",
            "date": "2007-07-06T09:28:24+0000",
            "content": "Toru, Along with the query processing, RequestHandlers also add more info to response, like 'highlighting' and 'moreLikeThis' information. I am not clear how this get accomplished in the distributed environment? \n\nCollecting Highlighting info for all top N records from all shards could be quite expensive. How about first combining the results from shards and then gathering Highlighting info? "
        },
        {
            "author": "Toru Matsuzawa",
            "id": "comment-12514941",
            "date": "2007-07-24T11:23:08+0000",
            "content": "Pache Updated.\n\nThe following changes.\n1) Addition of easy TestUnit.\n2) search for shards in parallel.\n3) Cash(like FieldCache) is added to getInts(filed),getStringIndex(filed) etc.\n4) Bug fix of \"sort asc\".\n\nStandalone/solr-multi20070724-NoRMI.patch is a patch for local index searches only.\nPlease use the patch of RMI/lucene4solr-multi.patch and RMI/solr-multi20070724.patch when you use RMI. \n(lucene4solr-multi.patch is patch for lucene. ) "
        },
        {
            "author": "Stu Hood",
            "id": "comment-12516107",
            "date": "2007-07-27T22:16:40+0000",
            "content": "Everyone working on this patch should check out\nhttp://lucene.zones.apache.org:8080/hudson/job/Lucene-Nightly/javadoc/org/apache/lucene/search/ParallelMultiSearcher.html\nand make sure no work is being duplicated. My company is using 'ParallelMultiSearcher' in a production environment with great success, so I wanted to make sure it is on everyone's radar.\n\nThanks! "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12596932",
            "date": "2008-05-14T20:43:12+0000",
            "content": "I re-read all the comments here and from what I understand, this patch doesn't really add anything that SOLR-303 hasn't already given us.\n\nIs that correct?  If that's correct, I'll close this issue. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12604132",
            "date": "2008-06-11T06:13:56+0000",
            "content": "One month no follow-up makes me think there is no real interest in this any more, now that we have Distributed Search functionality.  If there is still something of value in this issue/patch, we can reopen. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-16672221",
            "date": "2018-11-01T21:15:32+0000",
            "content": "Resolved long time ago, but was not \"closed\". "
        }
    ]
}