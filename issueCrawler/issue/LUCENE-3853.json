{
    "id": "LUCENE-3853",
    "title": "Improve MIGRATE.txt for FieldsEnum/TermsEnum",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/other"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The text in MIGRATE.txt that explains the new situation with FieldsEnum seems to be missing a level of object in explaining TermEnum. Perhaps it didn't keep with the code. here's a patch to MIGRATE.txt.",
    "attachments": {
        "LUCENE-3853.patch": "https://issues.apache.org/jira/secure/attachment/12517239/LUCENE-3853.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-06T14:16:26+0000",
            "content": "Hi Benson, thanks for the patch.\n\nI think it would be better though if our example didnt recommend MultiFields (or at least noted that this is the slow/trappy way to access terms)\nAlso we need some null checks I think in the example, because e.g. fields() is allowed to return null, so it should be checked before it has an\niterator...\n\nbut i think this is overall a great idea? perhaps if we come up with a good example we can think of a place in the javadocs it could reside as well,\nso its not just in the migration guide (e.g. if you are a new Lucene user, you likely wouldnt even look at MIGRATE.txt but this would still be useful). ",
            "author": "Robert Muir",
            "id": "comment-13223271"
        },
        {
            "date": "2012-03-06T14:21:27+0000",
            "content": "In most cases, requesting a FieldsEnum is not needed, you normally use AtomicReader.fields().terms(\"fieldname\") [with several null-checks]. I think this code should be prominently on the howto. ",
            "author": "Uwe Schindler",
            "id": "comment-13223274"
        },
        {
            "date": "2012-03-06T14:28:05+0000",
            "content": "So, the explanation below what I patchd that I failed to read the first time sort-of endorses Multi-Field.\n\nI happen to be updating code of someone else's that want to walk all of the fields, which is how I ran into this.\n\nOne possibility is to change the comment I added to say 'this is not the recommended way, read below for more information on this' and then focus effort on howto and examples instead of MIGRATION/CHANGE, rather than making the little Migratin example bigger and bigger?\n\nWhere in the tree do you generally put examples? ",
            "author": "Benson Margulies",
            "id": "comment-13223276"
        },
        {
            "date": "2012-03-06T14:34:44+0000",
            "content": "Improved version. ",
            "author": "Benson Margulies",
            "id": "comment-13223280"
        },
        {
            "date": "2012-03-06T15:04:24+0000",
            "content": "Further adjustments to reflect advice from Uwe. ",
            "author": "Benson Margulies",
            "id": "comment-13223304"
        },
        {
            "date": "2012-03-06T15:13:19+0000",
            "content": "Nice!\n\nsome comments:\n\n\t\"If you pass a SegmentReader to SlowCompositeReaderWrapper  it will simply return reader.fields(),\" should be \"If you pass a SegmentReader to SlowCompositeReaderWrapper.wrap() it will simply return itsself,\"\n\tThe MultiFields comment should be in the line of @lucene.internal (changed from @lucene.experimental). @lucene.internal will already print the \"internal\" warning. We should review the other Multi* classes, too. They are all internal not experimental.\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13223314"
        },
        {
            "date": "2012-03-06T17:46:36+0000",
            "content": "Once more with edits as per Uwe. ",
            "author": "Benson Margulies",
            "id": "comment-13223465"
        }
    ]
}