{
    "id": "LUCENE-4136",
    "title": "TestDocumentsWriterStallControl hang (reproducible)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "On trunk (probably affects 4.0 too, but trunk is where i hit it):\n\nant test -Dtestcase=TestDocumentsWriterStallControl -Dtests.seed=9D5404FF4A909330",
    "attachments": {
        "LUCENE-4136.patch": "https://issues.apache.org/jira/secure/attachment/12531784/LUCENE-4136.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-06-11T22:35:30+0000",
            "content": "\n   [junit4] Full thread dump Java HotSpot(TM) 64-Bit Server VM (19.1-b02 mixed mode):\n   [junit4] \n   [junit4] \"waiter\" prio=10 tid=0x00007f4be8048000 nid=0x74a6 waiting on condition [0x00007f4bf7743000]\n   [junit4]    java.lang.Thread.State: TIMED_WAITING (parking)\n   [junit4] \tat sun.misc.Unsafe.park(Native Method)\n   [junit4] \t- parking to wait for  <0x00000000fb563eb8> (a java.util.concurrent.CountDownLatch$Sync)\n   [junit4] \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\n   [junit4] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1011)\n   [junit4] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1303)\n   [junit4] \tat java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)\n   [junit4] \tat org.apache.lucene.index.TestDocumentsWriterStallControl$Synchronizer.await(TestDocumentsWriterStallControl.java:419)\n   [junit4] \tat org.apache.lucene.index.TestDocumentsWriterStallControl$Waiter.run(TestDocumentsWriterStallControl.java:255)\n   [junit4] \n   [junit4] \"updater\" prio=10 tid=0x00007f4be806d000 nid=0x74a5 waiting on condition [0x00007f4bf733f000]\n   [junit4]    java.lang.Thread.State: TIMED_WAITING (parking)\n   [junit4] \tat sun.misc.Unsafe.park(Native Method)\n   [junit4] \t- parking to wait for  <0x00000000fb563eb8> (a java.util.concurrent.CountDownLatch$Sync)\n   [junit4] \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\n   [junit4] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1011)\n   [junit4] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1303)\n   [junit4] \tat java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)\n   [junit4] \tat org.apache.lucene.index.TestDocumentsWriterStallControl$Synchronizer.await(TestDocumentsWriterStallControl.java:419)\n   [junit4] \tat org.apache.lucene.index.TestDocumentsWriterStallControl$Updater.run(TestDocumentsWriterStallControl.java:304)\n   [junit4] \n   [junit4] \"updater\" prio=10 tid=0x00007f4be806c800 nid=0x74a4 waiting on condition [0x00007f4bf7440000]\n   [junit4]    java.lang.Thread.State: TIMED_WAITING (parking)\n   [junit4] \tat sun.misc.Unsafe.park(Native Method)\n   [junit4] \t- parking to wait for  <0x00000000fb563eb8> (a java.util.concurrent.CountDownLatch$Sync)\n   [junit4] \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\n   [junit4] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1011)\n   [junit4] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1303)\n   [junit4] \tat java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)\n   [junit4] \tat org.apache.lucene.index.TestDocumentsWriterStallControl$Synchronizer.await(TestDocumentsWriterStallControl.java:419)\n   [junit4] \tat org.apache.lucene.index.TestDocumentsWriterStallControl$Updater.run(TestDocumentsWriterStallControl.java:304)\n   [junit4] \n   [junit4] \"TEST-TestScope-org.apache.lucene.index.TestDocumentsWriterStallControl.testAccquireReleaseRace-seed#[9D5404FF4A909330]\" prio=10 tid=0x00007f4c3827a000 nid=0x74a3 waiting on condition [0x00007f4bf7c4d000]\n   [junit4]    java.lang.Thread.State: TIMED_WAITING (sleeping)\n   [junit4] \tat java.lang.Thread.sleep(Native Method)\n   [junit4] \tat org.apache.lucene.index.TestDocumentsWriterStallControl.assertState(TestDocumentsWriterStallControl.java:215)\n   [junit4] \tat org.apache.lucene.index.TestDocumentsWriterStallControl.testAccquireReleaseRace(TestDocumentsWriterStallControl.java:160)\n   [junit4] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n   [junit4] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n   [junit4] \tat java.lang.reflect.Method.invoke(Method.java:597)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1969)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$1100(RandomizedRunner.java:132)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:814)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:875)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:889)\n   [junit4] \tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n   [junit4] \tat org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:32)\n   [junit4] \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n   [junit4] \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n   [junit4] \tat org.apache.lucene.util.TestRuleReportUncaughtExceptions$1.evaluate(TestRuleReportUncaughtExceptions.java:68)\n   [junit4] \tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n   [junit4] \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:821)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$700(RandomizedRunner.java:132)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner$3$1.run(RandomizedRunner.java:669)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:695)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:734)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:745)\n   [junit4] \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n   [junit4] \tat org.apache.lucene.util.TestRuleReportUncaughtExceptions$1.evaluate(TestRuleReportUncaughtExceptions.java:68)\n   [junit4] \tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:38)\n   [junit4] \tat org.apache.lucene.util.TestRuleIcuHack$1.evaluate(TestRuleIcuHack.java:51)\n   [junit4] \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n   [junit4] \tat org.apache.lucene.util.TestRuleNoInstanceHooksOverrides$1.evaluate(TestRuleNoInstanceHooksOverrides.java:53)\n   [junit4] \tat org.apache.lucene.util.TestRuleNoStaticHooksShadowing$1.evaluate(TestRuleNoStaticHooksShadowing.java:52)\n   [junit4] \tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:36)\n   [junit4] \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n   [junit4] \tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:56)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:605)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$400(RandomizedRunner.java:132)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:551)\n   [junit4] \n   [junit4] \"Low Memory Detector\" daemon prio=10 tid=0x00007f4c3809c000 nid=0x6e4d runnable [0x0000000000000000]\n   [junit4]    java.lang.Thread.State: RUNNABLE\n   [junit4] \n   [junit4] \"CompilerThread1\" daemon prio=10 tid=0x00007f4c38099800 nid=0x6e4b waiting on condition [0x0000000000000000]\n   [junit4]    java.lang.Thread.State: RUNNABLE\n   [junit4] \n   [junit4] \"CompilerThread0\" daemon prio=10 tid=0x00007f4c38096800 nid=0x6e49 waiting on condition [0x0000000000000000]\n   [junit4]    java.lang.Thread.State: RUNNABLE\n   [junit4] \n   [junit4] \"Signal Dispatcher\" daemon prio=10 tid=0x00007f4c38094800 nid=0x6e48 waiting on condition [0x0000000000000000]\n   [junit4]    java.lang.Thread.State: RUNNABLE\n   [junit4] \n   [junit4] \"Finalizer\" daemon prio=10 tid=0x00007f4c38078000 nid=0x6e42 in Object.wait() [0x00007f4c347f6000]\n   [junit4]    java.lang.Thread.State: WAITING (on object monitor)\n   [junit4] \tat java.lang.Object.wait(Native Method)\n   [junit4] \t- waiting on <0x00000000e017e870> (a java.lang.ref.ReferenceQueue$Lock)\n   [junit4] \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)\n   [junit4] \t- locked <0x00000000e017e870> (a java.lang.ref.ReferenceQueue$Lock)\n   [junit4] \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)\n   [junit4] \tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\n   [junit4] \n   [junit4] \"Reference Handler\" daemon prio=10 tid=0x00007f4c38076000 nid=0x6e40 in Object.wait() [0x00007f4c348f7000]\n   [junit4]    java.lang.Thread.State: WAITING (on object monitor)\n   [junit4] \tat java.lang.Object.wait(Native Method)\n   [junit4] \t- waiting on <0x00000000e017e830> (a java.lang.ref.Reference$Lock)\n   [junit4] \tat java.lang.Object.wait(Object.java:485)\n   [junit4] \tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)\n   [junit4] \t- locked <0x00000000e017e830> (a java.lang.ref.Reference$Lock)\n   [junit4] \n   [junit4] \"main\" prio=10 tid=0x00007f4c3800a000 nid=0x6e17 in Object.wait() [0x00007f4c3df33000]\n   [junit4]    java.lang.Thread.State: WAITING (on object monitor)\n   [junit4] \tat java.lang.Object.wait(Native Method)\n   [junit4] \t- waiting on <0x00000000fafdb958> (a com.carrotsearch.randomizedtesting.RandomizedRunner$2)\n   [junit4] \tat java.lang.Thread.join(Thread.java:1186)\n   [junit4] \t- locked <0x00000000fafdb958> (a com.carrotsearch.randomizedtesting.RandomizedRunner$2)\n   [junit4] \tat java.lang.Thread.join(Thread.java:1239)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:561)\n   [junit4] \tat com.carrotsearch.randomizedtesting.RandomizedRunner.run(RandomizedRunner.java:521)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:145)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:238)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n   [junit4] \n   [junit4] \"VM Thread\" prio=10 tid=0x00007f4c3806f800 nid=0x6e3b runnable \n   [junit4] \n   [junit4] \"GC task thread#0 (ParallelGC)\" prio=10 tid=0x00007f4c3801d000 nid=0x6e1d runnable \n   [junit4] \n   [junit4] \"GC task thread#1 (ParallelGC)\" prio=10 tid=0x00007f4c3801f000 nid=0x6e1f runnable \n   [junit4] \n   [junit4] \"GC task thread#2 (ParallelGC)\" prio=10 tid=0x00007f4c38021000 nid=0x6e21 runnable \n   [junit4] \n   [junit4] \"GC task thread#3 (ParallelGC)\" prio=10 tid=0x00007f4c38022800 nid=0x6e23 runnable \n   [junit4] \n   [junit4] \"GC task thread#4 (ParallelGC)\" prio=10 tid=0x00007f4c38024800 nid=0x6e24 runnable \n   [junit4] \n   [junit4] \"GC task thread#5 (ParallelGC)\" prio=10 tid=0x00007f4c38026800 nid=0x6e25 runnable \n   [junit4] \n   [junit4] \"GC task thread#6 (ParallelGC)\" prio=10 tid=0x00007f4c38028000 nid=0x6e26 runnable \n   [junit4] \n   [junit4] \"GC task thread#7 (ParallelGC)\" prio=10 tid=0x00007f4c3802a000 nid=0x6e28 runnable \n   [junit4] \n   [junit4] \"VM Periodic Task Thread\" prio=10 tid=0x00007f4c380a6800 nid=0x6e50 waiting on condition \n   [junit4] \n   [junit4] JNI global references: 1113\n   [junit4] \n   [junit4] Heap\n   [junit4]  PSYoungGen      total 122560K, used 101761K [0x00000000f5560000, 0x00000000fdb50000, 0x0000000100000000)\n   [junit4]   eden space 119552K, 82% used [0x00000000f5560000,0x00000000fb5d0448,0x00000000fca20000)\n   [junit4]   from space 3008K, 100% used [0x00000000fd860000,0x00000000fdb50000,0x00000000fdb50000)\n   [junit4]   to   space 8064K, 0% used [0x00000000fcb90000,0x00000000fcb90000,0x00000000fd370000)\n   [junit4]  PSOldGen        total 171008K, used 74086K [0x00000000e0000000, 0x00000000ea700000, 0x00000000f5560000)\n   [junit4]   object space 171008K, 43% used [0x00000000e0000000,0x00000000e4859af8,0x00000000ea700000)\n   [junit4]  PSPermGen       total 44352K, used 20608K [0x00000000dae00000, 0x00000000dd950000, 0x00000000e0000000)\n   [junit4]   object space 44352K, 46% used [0x00000000dae00000,0x00000000dc2200d0,0x00000000dd950000)\n   [junit4] <<< JVM J1: EOF ----\n\n ",
            "author": "Robert Muir",
            "id": "comment-13293146"
        },
        {
            "date": "2012-06-11T22:42:38+0000",
            "content": "Seems like it might not be hung, but super-slow. most of the time i run this test it returns instantly.\n\non the other hand, about 25% of the time it takes minutes to complete! ",
            "author": "Robert Muir",
            "id": "comment-13293152"
        },
        {
            "date": "2012-06-11T22:43:31+0000",
            "content": "yeah, thats the case with this seed:\n\nBUILD SUCCESSFUL\nTotal time: 2 minutes 49 seconds ",
            "author": "Robert Muir",
            "id": "comment-13293154"
        },
        {
            "date": "2012-06-11T22:49:38+0000",
            "content": "As a workaround for now, i set testAcquireReleaseRace to @Nightly until we can figure this out. ",
            "author": "Robert Muir",
            "id": "comment-13293161"
        },
        {
            "date": "2012-06-12T07:34:59+0000",
            "content": "I reduced the # of checkpoints this test runs to keep that number low though.. can you check if that patch makes it faster for you? It never takes that long for me even in 1 k runs with random seeds ",
            "author": "Simon Willnauer",
            "id": "comment-13293411"
        },
        {
            "date": "2012-06-12T10:51:50+0000",
            "content": "+1 to commit (and remove @nightly): with the patch this seed is 9 seconds. I also then ran the test w/o seed about 20 times and it never spun off for minutes.\n\nIt must be something about my # of cpus maybe? This reminds me of Uwe's 2-cpu problem with another test... ",
            "author": "Robert Muir",
            "id": "comment-13293506"
        },
        {
            "date": "2012-06-12T20:24:20+0000",
            "content": "committed to branch_4x & trunk ",
            "author": "Simon Willnauer",
            "id": "comment-13293898"
        }
    ]
}