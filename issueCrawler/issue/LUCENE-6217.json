{
    "id": "LUCENE-6217",
    "title": "IndexWriter should make it clear when tragedy strikes",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "If you hit an exception at a \"bad time\" e.g. when writing files for a newly flushed segment, IndexWriter declares it a tragedy and secretly closes itself as a side effect of the exception.\n\nSubsequent operations will throw an ACE with the exception that caused the tragedy as its cause.\n\nThis requires messy code, if you want to know when this happened to you, since the first exception doesn't make it clear that it was \"tragic\".\n\nI think we should make it easier to know when this happens?\n\nMaybe we could instead throw a new exception (IWClosedByTragedy or something), or maybe we add a getter (.getTragicException) to IW?",
    "attachments": {
        "LUCENE-6217.patch": "https://issues.apache.org/jira/secure/attachment/12696513/LUCENE-6217.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14304102",
            "author": "Ryan Ernst",
            "date": "2015-02-03T22:03:46+0000",
            "content": "Maybe we could instead throw a new exception (IWClosedByTragedy or something)\n\n+1 "
        },
        {
            "id": "comment-14304110",
            "author": "Robert Muir",
            "date": "2015-02-03T22:05:38+0000",
            "content": "I would rather have the getter than confusingly change exception types.\n\nwe shouldn't make this more complicated than it already is: you cannot recover from this situation anyway. "
        },
        {
            "id": "comment-14304788",
            "author": "Simon Willnauer",
            "date": "2015-02-04T08:38:57+0000",
            "content": "I just wanna point out the consequences if you provide this as a getter rather than an exception:\n\n  try {\n    iw.addDocument(doc);\n  } catch (TragicEventException ex) {\n    // notify others that all bets are off\n  } \n\n\n\nvs.\n\n\n  try {\n    iw.addDocument(doc);\n  } catch (Throwable ex) {\n    Throwable tragic = iw.getTragicEventException();\n    if (tragic != null) {\n      // notify others that all bets are off\n    }\n    throw ex; \n  } \n\n\n\n99% of the users won't catch this but would be happy to see it right away what happened. If you need to catch it ie. if you care to notify the dedicated exception is way nicer and more intuitive too. I'd vote for the exception and I don't see how this makes things more complicated, I am sure you have something in mind can you elaborate on that? "
        },
        {
            "id": "comment-14305029",
            "author": "Robert Muir",
            "date": "2015-02-04T12:42:07+0000",
            "content": "The way i see it, 100% of users wont catch this. The reason is you cannot recover from it. If you cannot flush segments or some other error like this, usually manual intervention is necessary. Its not something you can recover from.\n\nSo, I dont think we need to make big changes to indexwriter or overengineer an API for it. Changing all exception types to be a fake one definitely counts as that to me. "
        },
        {
            "id": "comment-14305053",
            "author": "Simon Willnauer",
            "date": "2015-02-04T13:11:01+0000",
            "content": "The way i see it, 100% of users wont catch this. \n\nI need to catch it! "
        },
        {
            "id": "comment-14305194",
            "author": "Simon Willnauer",
            "date": "2015-02-04T14:58:45+0000",
            "content": "I think being able to check indexWriter.isOpen() would solve most of the issues. If I get indexWriter.getTragicException() I am good with it.  "
        },
        {
            "id": "comment-14305483",
            "author": "Michael McCandless",
            "date": "2015-02-04T16:49:30+0000",
            "content": "I'll add a getter... "
        },
        {
            "id": "comment-14305685",
            "author": "Michael McCandless",
            "date": "2015-02-04T18:35:19+0000",
            "content": "Simple patch, adding getTragicException and isOpen to IW, and I fixed a couple tests to use these methods. "
        },
        {
            "id": "comment-14305689",
            "author": "Robert Muir",
            "date": "2015-02-04T18:37:20+0000",
            "content": "+1 for these new methods and for the bonus test improvements, thats a nice solution. "
        },
        {
            "id": "comment-14305705",
            "author": "Ryan Ernst",
            "date": "2015-02-04T18:45:30+0000",
            "content": "I do like the test changes.  +1 "
        },
        {
            "id": "comment-14305953",
            "author": "ASF subversion and git services",
            "date": "2015-02-04T21:05:59+0000",
            "content": "Commit 1657398 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1657398 ]\n\nLUCENE-6217: add IW.isOpen and IW.getTragicException "
        },
        {
            "id": "comment-14305961",
            "author": "ASF subversion and git services",
            "date": "2015-02-04T21:08:13+0000",
            "content": "Commit 1657399 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1657399 ]\n\nLUCENE-6217: add IW.isOpen and IW.getTragicException "
        },
        {
            "id": "comment-14495383",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:53+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}