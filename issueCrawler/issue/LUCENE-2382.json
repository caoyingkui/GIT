{
    "id": "LUCENE-2382",
    "title": "Merging implemented by codecs must catch aborted merges",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is a regression (we lost functionality on landing flex).\n\nWhen you close IW with \"false\" (meaning abort all running merges), IW asks the merge threads to abort.  The threads are supposed to periodically check if they are aborted and throw an exception if so.\n\nBut on the cutover to flex, where the codec can override how merging is done (but a default impl is in the base enum classes), we lost this.",
    "attachments": {
        "LUCENE-2382.patch": "https://issues.apache.org/jira/secure/attachment/12469156/LUCENE-2382.patch"
    },
    "issue_links": {},
    "comments": []
}