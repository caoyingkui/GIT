{
    "id": "LUCENE-107",
    "title": "QueryParser removing wildcards in phrases in 1.3rc1",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/queryparser"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "QueryParser seems to be removing (replacing with space) wildcard characters in \nphrases in 1.3rc1.  I have only tried this with StandardAnalyzer - don't know \nif other Analyzers have the same problem.  The following code demonstrates the \nproblem:\n\nimport java.io.*;\nimport org.apache.lucene.analysis.*;\nimport org.apache.lucene.analysis.standard.*;\nimport org.apache.lucene.search.*;\nimport org.apache.lucene.queryParser.*;\n\npublic class Test {\n        public static void main(String[] args){\n                try\n{\n                        Query nonPhraseQuery = QueryParser.parse(\"Yellow*\",\n                                        \"text\", new StandardAnalyzer());\n                        System.out.println(\"NON-PHRASE QUERY: \" +\n                                        nonPhraseQuery.toString());\n                        Query phraseQuery = QueryParser.parse(\"\\\"Yellow*\\\"\",\n                                        \"text\", new StandardAnalyzer());\n                        System.out.println(\"PHRASE QUERY: \" +\n                                        phraseQuery.toString());\n                }\n catch(Exception e)\n{\n                        e.printStackTrace();\n                }\n        }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2003-09-10T23:30:34+0000",
            "content": "If you use an Analyzer that doesn't remove '*' characters from the query, this\nwon't be a problem.\nUnfortunately, I cannot find a place in QueryParser that handles PhraseQuery\ndifferently from other queries, when used with a wild-card character.\n\nPerhaps somebody more familiar with QueryParser will know. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321300"
        },
        {
            "date": "2003-09-11T02:12:00+0000",
            "content": "It is also worth noting that, even if you could get an asterisk into a phrase\nquery, it would not function as a wildcard.  The QueryParser does not support\nwildcarded terms within phrases.  One could extend it to use PhrasePrefixQuery,\nbut at present, this is not supported. ",
            "author": "cutting@apache.org",
            "id": "comment-12321301"
        }
    ]
}