{
    "id": "SOLR-9712",
    "title": "Saner default for maxWarmingSearchers",
    "details": {
        "components": [
            "search"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.4",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "As noted in SOLR-9710, the default for maxWarmingSearchers is Integer.MAX_VALUE which is just crazy. Let's have a saner default. Today we log a performance warning when the number of on deck searchers goes over 1. What if we had the default as 1 that expert users can increase if needed?",
    "attachments": {
        "SOLR-9712.patch": "https://issues.apache.org/jira/secure/attachment/12836796/SOLR-9712.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-11-02T05:49:03+0000",
            "author": "Mikhail Khludnev",
            "content": "What if we had the default as 1 that expert users can increase if needed?\nupdate log will leak SOLR-7115 ",
            "id": "comment-15627837"
        },
        {
            "date": "2016-11-02T16:59:42+0000",
            "author": "Erick Erickson",
            "content": "Also, I think there's some kind weird issue where opening a searcher or loading a core or something seems to open two searchers so a default of 1 would generate the log warning messages every time which is disconcerting to the users. I don't recall the exact Solr JIRA or whether it's been fixed so FYI, so that's something to check. ",
            "id": "comment-15629599"
        },
        {
            "date": "2016-11-02T21:25:42+0000",
            "author": "Yonik Seeley",
            "content": "What we really need is additional functionality \nA high maxWarmingSearchers is bad from a resource perspective, but good from an API perspective.\nConversely, maxWarmingSearchers=1 can cause spurious failures, requiring all clients that care if something is committed (presumably that's why they called commit) to implement a retry loop.\n\nOne needs a reliable \"update this document and make it visible, and don't return until it is visible\" in conjunction with \"let's not warm more than one searcher at a time\". ",
            "id": "comment-15630584"
        },
        {
            "date": "2016-11-03T03:59:52+0000",
            "author": "David Smiley",
            "content": "+1 Yonik.  I've long felt that a commit should block instead of execute concurrently, possibly failing.  It's kinda crazy this hasn't been done yet. It's a real gotcha for users who don't know better. ",
            "id": "comment-15631462"
        },
        {
            "date": "2016-11-03T06:38:29+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "One needs a reliable \"update this document and make it visible, and don't return until it is visible\" in conjunction with \"let's not warm more than one searcher at a time\".\n\nI thought the first part was the reason behind waitSearcher=true? Agreed that we need to fix the second part. As David said, the commits should block by default instead of happening concurrently. Otherwise we cannot easily reason about memory consumption when multiple clients call commit. ",
            "id": "comment-15631818"
        },
        {
            "date": "2016-11-03T12:52:47+0000",
            "author": "Yonik Seeley",
            "content": "I thought the first part was the reason behind waitSearcher=true?\n\nRight, unless maxWarningSearchers is exceeded, in which case I think an exception is thrown? ",
            "id": "comment-15632642"
        },
        {
            "date": "2016-11-03T13:29:08+0000",
            "author": "Yonik Seeley",
            "content": "Here's a completely untested patch.\n\nIt's much smaller than it looks (change in indentation obscures actual changes.)\n\nThis really just adds a loop around the open logic and then replaces the code that throws an exception when maxWarmingSearchers is exceeded with a wait.  Seems like the lowest risk change since it doesn't change anything else.\n\n        } else if (onDeckSearchers > maxWarmingSearchers) {\n          onDeckSearchers--;\n          try {\n            searcherLock.wait();\n          } catch (InterruptedException e) {\n            log.info(SolrException.toStr(e));\n            // TODO: should we throw an exception in this case?\n          }\n          continue;  // go back to the top of the loop and retry\n\n\n\nThat code just logs an InterruptedException, but perhaps we should throw an exception in that case (i.e. abort trying to open a reader)?  Things like this sometimes do have a real impact on our Chaos tests though... ",
            "id": "comment-15632718"
        },
        {
            "date": "2016-11-03T13:34:54+0000",
            "author": "Yonik Seeley",
            "content": "I often wondered if this was causing subtle bugs... other parts of the system rely on being able to reliably do a commit and not having it spuriously fail. Probably should have fixed it a long time ago! ",
            "id": "comment-15632730"
        },
        {
            "date": "2016-11-03T13:45:02+0000",
            "author": "Yonik Seeley",
            "content": "If we go this route (which I think we should) then we probably also should:\n\n\tchange the default maxWarmingSearchers to 1\n\tremove maxWarmingSearchers from our starting configs (it becomes pretty advanced... most shouldn't need to worry about it)\n\tremove maxWarmingSearchers from the majority of our test configs - we'll want the best test coverage on maxWarmingSearchers=1\n\tadd an upgrade note encouraging removal of maxWarmingSearchers from your config, unless you specifically know better\n\tdocument the change in behavior of course...\n\n ",
            "id": "comment-15632752"
        },
        {
            "date": "2016-11-07T04:56:40+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I like this. It is a simple fix and I believe it takes care of SOLR-7115 as well. ",
            "id": "comment-15643112"
        },
        {
            "date": "2016-11-18T21:48:09+0000",
            "author": "Mark Miller",
            "content": "That code just logs an InterruptedException, but perhaps we should throw an exception in that case \n\nI almost would prefer not letting this get interrupted, it's a nasty path to test and I worry about everything going smoothly in all cases. On the other hand, if this code is interrupted, there is a good chance you are going to run into closed channel issues anyway. ",
            "id": "comment-15677862"
        },
        {
            "date": "2016-12-15T16:40:08+0000",
            "author": "Yonik Seeley",
            "content": "OK, I'm going to create a stress test for concurrent commits... ",
            "id": "comment-15751816"
        },
        {
            "date": "2016-12-15T18:33:49+0000",
            "author": "Yonik Seeley",
            "content": "Here's an updated patch that changes the default maxWarmingSearchers to 1.\nIt looks like I didn't need to create any additional tests... by changing maxWarmingSearchers to 1 first, a bunch of the stress tests started failing since they also test concurrent commits.  TestStressVersions, TestStressReorder, and TestRealTimeGet all failed (not an exhausted list tested by hand) w/o the blocking patch and succeeded with it.\n\nUnfortunately, running the full test suite results in some errors.  Not sure what's going on there yet. ",
            "id": "comment-15752122"
        },
        {
            "date": "2016-12-16T00:14:41+0000",
            "author": "Yonik Seeley",
            "content": "OK, I have clean runs now (with no further changes)... looks like it was a bad checkout. ",
            "id": "comment-15752939"
        },
        {
            "date": "2016-12-16T02:41:16+0000",
            "author": "Yonik Seeley",
            "content": "OK, here's the final patch that I'll probably commit tomorrow. Most maxWarmingSearcher specifications have been removed from test configurations.  This doesn't really reduce coverage much due to the fact that maxWarmingSearchers=1 (the default) is not special-cased so all code paths will still be exercised with concurrent commits. ",
            "id": "comment-15753229"
        },
        {
            "date": "2016-12-16T03:07:31+0000",
            "author": "David Smiley",
            "content": "This is wonderful and a big deal; thanks Yonik!  I didn't notice a CHANGES.txt in the patch, so naturally you'll do that when you commit (I do the same approach).  If the CHANGES.txt is no more clear than the title of this issue then users won't realize what this is all about, I think.  Here's my attempt to word it:\n\nSOLR-9712: maxWarmingSearchers now defaults to 1, and more importantly commits will now *block* if this limit is reached instead of throwing an error (a good thing).  Consequently there is no longer a risk in overlapping commits.  Nonetheless users should continue to avoid excessive committing. ",
            "id": "comment-15753275"
        },
        {
            "date": "2016-12-16T03:40:03+0000",
            "author": "Yonik Seeley",
            "content": "If the CHANGES.txt is no more clear than the title of this issue then users won't realize what this is all about\n\nHeh... yep.  I often ignore the original JIRA title for the commit message + CHANGES entry and try to pick something that means the most to developers for the former and users for the latter.  This change should probably go under the \"change of behavior\" section. ",
            "id": "comment-15753323"
        },
        {
            "date": "2016-12-16T03:58:33+0000",
            "author": "Yonik Seeley",
            "content": "OK, how about this?\n\nmaxWarmingSearchers now defaults to 1, and more importantly commits will now block if this limit is exceeded instead of throwing an exception (a good thing). Consequently there is no longer a risk in overlapping commits. Nonetheless users should continue to avoid excessive committing.  Users are advised to remove any pre-existing maxWarmingSearchers entries from their solrconfig.xml files. ",
            "id": "comment-15753353"
        },
        {
            "date": "2016-12-16T04:08:46+0000",
            "author": "David Smiley",
            "content": "+1 good advice ",
            "id": "comment-15753369"
        },
        {
            "date": "2016-12-16T16:46:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c9522a393661c8878d488ad4475ac7e2cbb9c25c in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c9522a3 ]\n\nSOLR-9712: block when maxWarmingSearchers is exceeded instead of throwing exception, default to 1, remove from most configs ",
            "id": "comment-15754917"
        },
        {
            "date": "2016-12-16T16:49:52+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 0f4c5f0a732cb0df3a213d05dca8b7c477728154 in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0f4c5f0 ]\n\nSOLR-9712: block when maxWarmingSearchers is exceeded instead of throwing exception, default to 1, remove from most configs ",
            "id": "comment-15754925"
        },
        {
            "date": "2016-12-16T16:51:06+0000",
            "author": "Mikhail Khludnev",
            "content": "@yonik have you tried the test from SOLR-7115 with it? ",
            "id": "comment-15754927"
        },
        {
            "date": "2016-12-16T17:14:01+0000",
            "author": "Yonik Seeley",
            "content": "Nope... I hadn't realized we had a good reproducible test for that.\nLooks like that test expects to hit an exception though, so it would need to be tweaked to pass now. ",
            "id": "comment-15754990"
        },
        {
            "date": "2016-12-19T12:51:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c9522a393661c8878d488ad4475ac7e2cbb9c25c in lucene-solr's branch refs/heads/feature/metrics from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c9522a3 ]\n\nSOLR-9712: block when maxWarmingSearchers is exceeded instead of throwing exception, default to 1, remove from most configs ",
            "id": "comment-15761078"
        },
        {
            "date": "2017-02-09T16:32:46+0000",
            "author": "Mark Miller",
            "content": "Related issue here: SOLR-10110 ",
            "id": "comment-15859752"
        }
    ]
}