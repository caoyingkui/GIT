{
    "id": "SOLR-4304",
    "title": "Coupling between SpellCheckComponent(s) and QueryConverter(s) is a mess and makes no sense",
    "details": {
        "affect_versions": "4.0",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The initial report here (from Jack Krupansky) was that if you configured multiple <queryConvertor> instances you would get an NPE because the SpellCheckComponent's inform() method assumes there will be at most 1.\n\nLooking into this more deeply, it's actually just a surface symptom of a much more significant problem...\n\n\n\tQueryConverters can be configured as \"first order\" type plugins in solrconfig.xml using the <queryConverter> syntax, with the ability to have multiple instances each with their own names\n\tQueryConvertors don't seem to actually be instantiated/initialized unless there is a SpellCheckComponent \u2013 but if there are more then one SpellCheckComponent instances, then the QueryConverters will all be initialzed again and again.\n\tSpellCheckComponent expects there to be 0 or 1 QueryConvertors, throwing an NPE if multiple QueryConvertors are configured \u2013 there is no spellcheck request param to request a QueryConvertor by name.\n\teven if we tried to add a request param to pick a QueryConvertor by name \u2013 the SpellCheckComponent has a \"queryAnalyzerFieldType\" init param that is used to get an Analyzer which is passed to QueryConverter.setAnalyzer() on init \u2013 making it impossible to use multiple QueryConverter's with a single SpellCheckComponent, or a single (custom) QueryConvertor with multiple SpellCheckComponents with differnet queryAnalyzerFieldType init params\n\t\n\t\tNOTE: if 0 QueryConverters are configured then each SpellCheckComponent creates it's own private instance of \"SpellingQueryConverter\" \u2013 so there is no serious problem in this (default) situation with the SpellCheckComponent's being configured to use different queryAnalyzerFieldTypes\n\t\n\t\n\n\n\n\n\n\nInitial steps reported to reproduce the NPE...\n\n1. Add to 4.0 example solrconfig.xml:\n\n\n<queryConverter name=\"myQueryConverter-1\" class=\"solr.SpellingQueryConverter\"/>\n<queryConverter name=\"myQueryConverter-2\" class=\"solr.SuggestQueryConverter\"/>\n\n\n\n2. Perform a spellcheck request:\n\ncurl \"http://localhost:8983/solr/spell?q=test&indent=true\"",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Jack Krupansky",
            "id": "comment-13552969",
            "date": "2013-01-14T18:34:38+0000",
            "content": "The issue is in this code:\n\n\n      Map<String, QueryConverter> queryConverters = new HashMap<String, QueryConverter>();\n      core.initPlugins(queryConverters,QueryConverter.class);\n\n      //ensure that there is at least one query converter defined\n      if (queryConverters.size() == 0) {\n        LOG.info(\"No queryConverter defined, using default converter\");\n        queryConverters.put(\"queryConverter\", new SpellingQueryConverter());\n      }\n\n      //there should only be one\n      if (queryConverters.size() == 1) {\n        queryConverter = queryConverters.values().iterator().next();\n        IndexSchema schema = core.getSchema();\n        String fieldTypeName = (String) initParams.get(\"queryAnalyzerFieldType\");\n        FieldType fieldType = schema.getFieldTypes().get(fieldTypeName);\n        Analyzer analyzer = fieldType == null ? new WhitespaceAnalyzer(core.getSolrConfig().luceneMatchVersion)\n                : fieldType.getQueryAnalyzer();\n        //TODO: There's got to be a better way!  Where's Spring when you need it?\n        queryConverter.setAnalyzer(analyzer);\n      }\n\n\n\nNo else! And queryConverter is not initialized, except for that code path where there was zero or one QueryConverter class. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13744160",
            "date": "2013-08-19T20:17:09+0000",
            "content": "I've updated the summary & description to include more info about hte broader problem of having multiple QueryConverters or multiple SpellCheckComponents.\n\nFor now, as part of the work i'm doing in SOLR-5108 i'll lock down the config parsing to support at most 1 instance of <queryConverter>  (since that's all that's ever worked anyway because of this NPE)\n\nMoving forward, we should figure out some way to resolve this cluster-fuck of interconnectedness.\n\nOff the top of my head: perhaps the cleanest thing to do would be:\n\n\tcontinue to have <queryConverter> be top level declarations\n\tcontinue to have each SpellCheckComponent init a copy of each configured <queryConverter>\n\tChange SpellCheckComponent to keep track of all the QueryConverters it initializes \u2013 and call setAnalyzer on all of them\n\tChange SpellCheckComponent to let you pick a converter by name at request time.\n\n\n\n...ie: top level configuration, component level objects. "
        }
    ]
}