{
    "id": "LUCENE-8250",
    "title": "Should FilteringTokenFilter handle positionLength",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Improvement",
        "components": [],
        "fix_versions": []
    },
    "description": "FilteringTokenFilter does not handle the position length graph attribute when removing a token from the stream. This doesn't work well with graph token stream that sets position length since removing a token from the stream can invalidate the position length set on the previous tokens. \nThis issue was first discussed in https://issues.apache.org/jira/browse/LUCENE-4065 but it has a different purpose which is why I am opening a new issue here.",
    "attachments": {
        "LUCENE-8250.patch": "https://issues.apache.org/jira/secure/attachment/12918897/LUCENE-8250.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16436277",
            "date": "2018-04-12T20:38:20+0000",
            "content": "can we make a simple test case for the issue? It would help me understand it better. The last example we looked at, we tentatively decided that stopfilter was doing the right thing, so maybe we need another one. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16436960",
            "date": "2018-04-13T07:37:09+0000",
            "content": "I attached a small test that I hope illustrate the issue. The synonym rule is \"twd, the walking dead, the zombie show\" and removing \"the\" from the stream after the synonym graph makes \"zombie show\" a following path of \"walking\" so the output of the graph is \"twd, walking dead, walking zombie show\". It's unclear to me if the FilteringTokenFilter is doing the right thing here. I added the dot output of TokenStreamToAutomaton in the test, this class is able to fill the hole when a stop filter removes a token but in this case I don't see how we can infer that \"zombie show\" is not after \"walking\".  ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-16437157",
            "date": "2018-04-13T10:37:12+0000",
            "content": "ok I will dig into it. But i think its coming back, I think the problem is that these bogus \"holes\"  are incompatible with conversion of the stream to an automaton in this case. \n\nThe idea if a \"hole\" is that from a position perspective, the token is removed but we leave evidence that it was there. So its wrong to modify positionLength when deleting a token if we are going to do holes.\n\nAn alternative is to not leave a hole at all when deleting a token. Instead FilteringTokenFilter would adjust posinc/poslen as needed to behave as if the token was never there in the first place. It would need some additional buffering to do this correctly. So that's how LUCENE-4065 ties in. ",
            "author": "Robert Muir"
        }
    ]
}