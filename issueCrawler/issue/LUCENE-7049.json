{
    "id": "LUCENE-7049",
    "title": "merge eats CPU much when there are many deleteByQuery",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [
            "core/index",
            "core/search"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "When\nadding very many delete><query> \n\nThen\nwe got CPU spike in merge thread that blocks indexing process\n\nConsiderations\nDespite adding too many <delete><query> is odd itself, I suppose the code can more efficient. See sampling snapshots attached.",
    "attachments": {
        "Selection_114.png": "https://issues.apache.org/jira/secure/attachment/12789892/Selection_114.png",
        "Selection_116.png": "https://issues.apache.org/jira/secure/attachment/12789894/Selection_116.png",
        "Selection_115.png": "https://issues.apache.org/jira/secure/attachment/12789893/Selection_115.png"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15166913",
            "author": "Mikhail Khludnev",
            "date": "2016-02-25T08:29:59+0000",
            "content": "Thanks Ivan Mamontov for contributing snapshots.  "
        },
        {
            "id": "comment-15167204",
            "author": "Shawn Heisey",
            "date": "2016-02-25T13:44:46+0000",
            "content": "I have noticed that deleteByQuery in Solr will be held up by a merge.  That roadblock probably also stands in the way of any further indexing requests made after the deleteByQuery.  I would not be overly surprised to learn that it makes the CPU spin, but I have not actually checked this.\n\nAdds and deletes by ID can happen at the same time as a merge since 4.0, but deleteByQuery apparently works differently, so it is blocked by any merge activity.  I recently changed my indexing program so that it turns deleteByQuery into a query with fl=unique_key_field, and then does the ID delete with the results.  I had gotten rid of all the \"optimizeUnderway\" checking that I had added back in the 3.x days, and didn't want to add that back in, so I \"fixed\" my delete code. "
        }
    ]
}