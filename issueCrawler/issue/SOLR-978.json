{
    "id": "SOLR-978",
    "title": "Old files are not removed from slaves after replication",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The files in the slave's index is not removed even after they are removed from master.\nThe temp directories named index.xxxxxxx are not removed after use\n\nThe problem is that when we do a commit on the slave after replication is done. The commit does not re-open the IndexWriter. Therefore, the deletion policy does not take affect and older files are left as is. This can keep on building up. The only solution is to re-open the index writer.\n\nA user has reported the issue http://markmail.org/thread/yw5n4dk2t5zbt5z5",
    "attachments": {
        "SOLR-978.patch": "https://issues.apache.org/jira/secure/attachment/12398635/SOLR-978.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12666851",
            "date": "2009-01-24T07:45:31+0000",
            "content": "Changes\n\n\n\tAdd a forceOpenWriter method to DirectUpdateHandler2 which is called by SnapPuller on the slave to make sure IndexWriter is open. This is to make sure IndexDeletionPolicy gets a chance to cleanup older commit points.\n\tSnapPuller calls forceOpenWriter if core.getUpdateHandler is an instance of DirectUpdateHandler2.\n\tSnapPuller calls delTree on temporary files and folders in a finally block\n\n\n\nI know 2 is not a very clean way. I thought of adding that method in UpdateHandler as a no-op and overriding it in DUH2. However that would mean that custom UpdateHandler implementations would silently ignore this call and we will not have a chance to warn them (which we can do with this patch). Also, DUH2 already has a protected openWriter method. However calling that method needs access to a protected lock object. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12667113",
            "date": "2009-01-25T17:53:28+0000",
            "content": "Committed revision 737550.\n\nThanks Jaco and Noble! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775463",
            "date": "2009-11-10T15:50:35+0000",
            "content": "Bulk close Solr 1.4 issues "
        }
    ]
}