{
    "id": "SOLR-4685",
    "title": "JSON response write modification to support RAW JSON",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "If the field ends with \"_json\" allow the field to return raw JSON.\n\nFor example the field,\n\noffice_json \u2013 string\n\nI already put into the field raw JSON already escaped. I want it to come with no double quotes and not escaped.",
    "attachments": {
        "SOLR-4685.SOLR_4_5.patch": "https://issues.apache.org/jira/secure/attachment/12607105/SOLR-4685.SOLR_4_5.patch",
        "SOLR-4685.1.patch": "https://issues.apache.org/jira/secure/attachment/12578684/SOLR-4685.1.patch",
        "SOLR-4685.5.1.patch": "https://issues.apache.org/jira/secure/attachment/12729423/SOLR-4685.5.1.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Bill Bell",
            "id": "comment-13625119",
            "date": "2013-04-08T04:18:08+0000",
            "content": "Here is a simple patch.  "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13625142",
            "date": "2013-04-08T05:08:03+0000",
            "content": "OK. I have a solution for SOLR 4.2.1. I added a new field json.fsuffix (field suffix). \n\n\nhttp://localhost:8983/solr/collection1/select?q=*%3A*&indent=true&rows=50&wt=json&json.fsuffix=_json\n\n\n\n\n  <field name=\"office_json\">{\"poffL\":{\"poff\":{\"prNm\":\"Canon Counseling LLC\",\"prID\":\"DHDHD\",\"offL\":{\"off\":{\"addCd\":\"R729D\",\"zip\":78258,\"isLab\":0,\"faxL\":{\"faxFull\":\"(210) 555-1215\"},\"oNm\":\"Canon Counseling LLC\",\"isXray\":0,\"oRank\":1,\"ad1\":\"19206 West Rd\",\"city\":\"San Antonio\",\"pracUrl\":\"/group-directory/texas-tx/san-antonio/canon-counseling-llc\",\"isBStf\":0,\"oGUID\":\"973D43A0-882A-E211-8426-B499BAA4D952\",\"prmryO\":1,\"phL\":{\"phFull\":\"(210) 555-1212\"},\"addTp\":\"Office\",\"st\":\"TX\",\"oLegacyID\":\"D757D8842019122\",\"isPhrm\":0,\"oID\":\"YX7YLM\"}},\"pLegacyID\":\"EDA4E9842019122\",\"prGUID\":\"963D43A0-882A-E211-8426-B499BAA4D952\",\"pProvCnt\":1}}}</field>\n\n\n\nAnd you get:\n\n\n{\n        \"id\": \"0579B002\",\n        \"name\": \"Canon PIXMA MP500 All-In-One Photo Printer\",\n        \"manu\": \"Canon Inc.\",\n        \"manu_id_s\": \"canon\",\n        \"cat\": [\n          \"electronics\",\n          \"multifunction printer\",\n          \"printer\",\n          \"scanner\",\n          \"copier\"\n        ],\n        \"features\": [\n          \"Multifunction ink-jet color photo printer\",\n          \"Flatbed scanner, optical scan resolution of 1,200 x 2,400 dpi\",\n          \"2.5\\\" color LCD preview screen\",\n          \"Duplex Copying\",\n          \"Printing speed up to 29ppm black, 19ppm color\",\n          \"Hi-Speed USB\",\n          \"memory card: CompactFlash, Micro Drive, SmartMedia, Memory Stick, Memory Stick Pro, SD Card, and MultiMediaCard\"\n        ],\n        \"weight\": 352,\n        \"price\": 179.99,\n        \"price_c\": \"179.99,USD\",\n        \"popularity\": 6,\n        \"inStock\": true,\n        \"office_json\": {\n          \"poffL\": {\n            \"poff\": {\n              \"prNm\": \"Canon Counseling LLC\",\n              \"prID\": \"DHDHD\",\n              \"offL\": {\n                \"off\": {\n                  \"addCd\": \"R729D\",\n                  \"zip\": 78258,\n                  \"isLab\": 0,\n                  \"faxL\": {\n                    \"faxFull\": \"(210) 555-1215\"\n                  },\n                  \"oNm\": \"Canon Counseling LLC\",\n                  \"isXray\": 0,\n                  \"oRank\": 1,\n                  \"ad1\": \"19206 West Rd\",\n                  \"city\": \"San Antonio\",\n                  \"pracUrl\": \"\\/group-directory\\/texas-tx\\/san-antonio\\/canon-counseling-llc\",\n                  \"isBStf\": 0,\n                  \"oGUID\": \"973D43A0-882A-E211-8426-B499BAA4D952\",\n                  \"prmryO\": 1,\n                  \"phL\": {\n                    \"phFull\": \"(210) 555-1212\"\n                  },\n                  \"addTp\": \"Office\",\n                  \"st\": \"TX\",\n                  \"oLegacyID\": \"D757D8842019122\",\n                  \"isPhrm\": 0,\n                  \"oID\": \"YX7YLM\"\n                }\n              },\n              \"pLegacyID\": \"EDA4E9842019122\",\n              \"prGUID\": \"963D43A0-882A-E211-8426-B499BAA4D952\",\n              \"pProvCnt\": 1\n            }\n          }\n        },\n        \"store\": \"45.19214,-93.89941\",\n        \"_version_\": 1.4317228499665e+18\n      },\n\n "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13625148",
            "date": "2013-04-08T05:12:40+0000",
            "content": "THis is good for SOLR 4.2.1 "
        },
        {
            "author": "David Smiley",
            "id": "comment-13625152",
            "date": "2013-04-08T05:18:48+0000",
            "content": "Bill, why did you close and mark as fixed? "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13625153",
            "date": "2013-04-08T05:19:25+0000",
            "content": "Whoops!! "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13625155",
            "date": "2013-04-08T05:22:23+0000",
            "content": "You need to add the field as \"string\" in schema.xml \n\n<field name=\"office_json\" type=\"string\" indexed=\"false\" stored=\"true\" />\n "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13626218",
            "date": "2013-04-09T04:41:28+0000",
            "content": "OK this checks out. Submitting a JSOn transformer to DIH next that you can use with this. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13628886",
            "date": "2013-04-11T12:49:57+0000",
            "content": "[trunk commit] shalin\nhttp://svn.apache.org/viewvc?view=revision&revision=1466855\n\nSOLR-4685: Fix core admin SPLIT action to be useful with non-cloud setups "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13628888",
            "date": "2013-04-11T12:52:20+0000",
            "content": "[branch_4x commit] shalin\nhttp://svn.apache.org/viewvc?view=revision&revision=1466860\n\nSOLR-4685: Fix core admin SPLIT action to be useful with non-cloud setups "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13628890",
            "date": "2013-04-11T12:53:05+0000",
            "content": "[branch_4x commit] shalin\nhttp://svn.apache.org/viewvc?view=revision&revision=1466862\n\nSOLR-4685: Fix core admin SPLIT action to be useful with non-cloud setups. Fixing changelog entry. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13628906",
            "date": "2013-04-11T13:09:44+0000",
            "content": "I'm sorry people. I mis-typed SOLR-4695 and put this issue's number in the commit and did it again while merging the fixed changelog entry into branch_4x. Please excuse these commits. "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13629805",
            "date": "2013-04-12T05:20:42+0000",
            "content": "Can somone give some feedback to me?\n\nThis seems like a worthy addition. It is backwards compatible. No risk. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13630126",
            "date": "2013-04-12T14:54:02+0000",
            "content": "Bill - I like the idea and it's a nice simple addition in there.  I wonder if there's any deeper need here beyond just treating a string field as raw JSON at output type but also a true JSON field type?\n\nI'm +1 on what you've included so far... can you add a test case? "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13631537",
            "date": "2013-04-15T06:40:59+0000",
            "content": "OK. I am uploading 2 test cases. \n\n1. To test without escaping when using the new field. json.fsuffix=_json\n2. To test the old way with escaping to make sure nothing was impacted.\n\nant -Dtestcase=JSONWriterTest test "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13637587",
            "date": "2013-04-21T16:13:46+0000",
            "content": "OK we ready to commit this? "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13701764",
            "date": "2013-07-08T04:34:51+0000",
            "content": "Thoughts?\n\nWe have been using this in production and it works like a charm. We also get better performance, since the patch skips over checking the field for correct JSON.  "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13702133",
            "date": "2013-07-08T17:09:02+0000",
            "content": "To me, this feels like too much of a hack than a carefully designed feature. Or maybe it's just the hard-wired field naming convention, or that this is JSON-specific - don't XML, PHP, Ruby, etc., have a similar issue?\n\nMaybe it would be better if you simply had a custom, application-specific response writer.\n\nOr, why not just have the client parse JSON string values? I mean, that is easy to do in both Java and JavaScript, right?\n\nSo, I'm missing out on why this should be a feature of Solr. I mean, Solr's responsibility is to return the values of the fields, not format them in an application-specific manner. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13702894",
            "date": "2013-07-09T04:35:04+0000",
            "content": "I don't see any harm in this.  Erik Hatcher? "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13787766",
            "date": "2013-10-06T20:43:53+0000",
            "content": "Can we please commit this ?\n\nI am using it in PROD for last few months and it works great.\n\nJack: XML, PHP, Ruby don't have this issue since if the field is XML, and you use wt=xml you get XML normally out of it. But when you set wt=json and have a field that is JSON string, it escapes everything.  There is no hard in this. It just stops the escaping of any fields that end with json.fsuffix=_json - basically ending with _json.\n\nI need all the other features of wt=json, but I also need the ability to NOT escape a JSON string field.\n\nIf someone could figure out a simple way that does not waste resources figuring out which fields are already JSON when you use wt=json, that would be preferrable - to turn off escaping of that field. But until we have that I am proposing this feature. Which has NO hard and it a simple feature to maintain - \"turn off escaping of a field when using wt=json\".\n\nCan we vote on it?\n "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13787778",
            "date": "2013-10-06T21:24:06+0000",
            "content": "For recent release of SOLR 4.5 "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-14095052",
            "date": "2014-08-13T02:16:53+0000",
            "content": "Bill Bell - Bill, sorry this hasn't yet been addressed to your satisfaction.  I'm not sure what motivated me initially to assign this to myself.  After looking at it a bit more and realizing I don't have any personal/professional motivation, I'm unassigning myself.  It'd be interesting to hear of others that are either using your patch or desire it. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-14495674",
            "date": "2015-04-15T05:16:39+0000",
            "content": "The behavior is now supported by SOLR-7376 "
        },
        {
            "author": "Bill Bell",
            "id": "comment-14521030",
            "date": "2015-04-30T07:07:49+0000",
            "content": "Patch for 5.1 "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14521413",
            "date": "2015-04-30T12:20:28+0000",
            "content": "I fail to see , how can you claim that this is completely backward compatible. What if I already have a field with an \"_json\" suffix and I have  coded my client app to read escaped JSON string?\n\nI totally understand the motivation and need for this . Probably , we should add an extra request flag to turn this on . like json.key.suffix=_json. Which means any field ending with _json will be unescaped "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14521547",
            "date": "2015-04-30T14:14:34+0000",
            "content": "Seems like SOLR-7376 covers this functionality sufficiently?\n\nIf we want any better support, it feels like it should be in the form of a proper JSON fieldType.  That would allow:\n\n\tproper validation on ingest\n\tfuture features like structured indexing of the JSON\n\toptional raw-writing to the appropriate response handler automatically\n\n\n\nThen one could make a dynamicField of *_json instead of a hacky json.key.suffix  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14521594",
            "date": "2015-04-30T14:46:16+0000",
            "content": "If we want any better support, it feels like it should be in the form of a proper JSON fieldType\n\n+1 . This should be the right way to solve this \n "
        }
    ]
}