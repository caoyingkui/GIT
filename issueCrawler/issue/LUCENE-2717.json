{
    "id": "LUCENE-2717",
    "title": "BasicOperations.concatenate creates invariants",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I started writing a test for LUCENE-2716, and i found a problem with BasicOperations.concatenate(Automaton, Automaton):\nit creates automata with invariant representation (which should never happen, unless you manipulate states/transitions manually).\n\nstrangely enough the BasicOperations.concatenate(List<Automaton>) does not have this problem.",
    "attachments": {
        "LUCENE-2717.patch": "https://issues.apache.org/jira/secure/attachment/12457771/LUCENE-2717.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-10-21T18:29:29+0000",
            "content": "attached is a patch with test and a sub-optimal fix.\n\nI'll work on a better fix. ",
            "author": "Robert Muir",
            "id": "comment-12923560"
        },
        {
            "date": "2010-10-21T19:04:32+0000",
            "content": "here's the fix.\n\nthe problem is if you concatenate empty with any automaton, the result must be empty.\n\nso if the RHS was empty, the concatenation was \"correct\" but it would \ncreate epsilon transitions from the LHS's accept states all to dead states...\n\nin the fix i just return makeEmpty() if either is empty, which is a very quick check.\n\nwill commit soon. ",
            "author": "Robert Muir",
            "id": "comment-12923570"
        },
        {
            "date": "2010-10-21T19:08:20+0000",
            "content": "Committed revision 1026104 ",
            "author": "Robert Muir",
            "id": "comment-12923571"
        }
    ]
}