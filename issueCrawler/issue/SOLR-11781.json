{
    "id": "SOLR-11781",
    "title": "Pass impersonator info to the authorization plugin",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "7.0",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "SENTRY-1475 implemented Solr authorization plugin based on Sentry. This also includes the audit log functionality in Sentry. Currently authorization context is not providing the impersonator information which is required for the audit logs. We should improve Solr authorization framework to pass this extra information.",
    "attachments": {
        "SOLR-11781-00.patch": "https://issues.apache.org/jira/secure/attachment/12914883/SOLR-11781-00.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-03-16T13:29:26+0000",
            "content": "Hi. I have a need to implement audit logging plugin as well, and was considering where to put it, either as part of Authentication plugin, as part of Authorization plugin or as a new plugin type intercepting all requests. Would love to hear more about how you did it.\n\nIn our case we need arbitrary information from the JWT token parsed by authentication plugin. Is there any method to pass information (except for the user principle) from Authentication to authorization? Can Auth plugin fill information in AuthorizationContext? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16401888"
        },
        {
            "date": "2018-03-16T15:51:49+0000",
            "content": "Jan H\u00f8ydahl\u00a0Typically audit logging is closely related to authorization as we want to identify which \"authenticated\" user tried to perform an operation that was not authorized.\u00a0I enhanced AuthorizationContext to explicitly pass the impersonator username (please find attached patch) and implemented audit logging inside the authorization plugin.\nIs there any method to pass information (except for the user principle) from Authentication to authorization? Can Auth plugin fill information in AuthorizationContext?\nWhile authentication plugin can pass any arbitrary information via HttpServletRequest object (e.g. using custom attributes), authorization context does not provide access to raw\u00a0HttpServletRequest object. In my case, KerberosPlugin is already passing impersonator user name. I just had to add another method in AuthorizationContext to forward this info to the Authorization plugin. I wonder if it would make more sense to expose\u00a0HttpServletRequest object directly to authorization plugin? This way authentication and authorization plugins can pass any information via\u00a0HttpServletRequest object. I am not sure if the original design did not support it intentionally. What do you think? ",
            "author": "Hrishikesh Gadre",
            "id": "comment-16402083"
        },
        {
            "date": "2018-03-19T09:21:27+0000",
            "content": "Would it not be a cleaner design with a separate AuditLoggerPlugin as suggested in SOLR-12120?\u00a0\n\n\u00a0 ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16404542"
        },
        {
            "date": "2018-03-20T13:33:13+0000",
            "content": "The code in HttpSolrCall\n\n.getAttribute(KerberosPlugin.IMPERSONATOR_USER_NAME)\n\n...looks messy as it references a concrete autz implementation. Could you move the public static final String IMPERSONATOR_USER_NAME = \"solr.impersonator.user.name\"; and perhaps other generic key definitions related to DelegationTokens from\u00a0KerberosPlugin to some other class which is not tied to a particular implementation? Or if DT will only ever be used by Kerberos, then find some more generic way to pass context information in the\u00a0AuthorizationContext.\n\nThis change also does not have any unit tests (probably since the only user is non-solr code)? Think about how the new code could be tested in some way. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16406331"
        }
    ]
}