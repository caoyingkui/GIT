{
    "id": "SOLR-10356",
    "title": "Add Streaming Evaluators for basic math functions",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "",
    "attachments": {
        "SOLR-10356.patch": "https://issues.apache.org/jira/secure/attachment/12860257/SOLR-10356.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-24T00:38:39+0000",
            "content": "\npow(a,b) // a^b\nmod(a,b) // a % b\nceil(a) // Math.ceil(a)\nfloor(a) // Math.floor(a)\n\n ",
            "author": "Dennis Gove",
            "id": "comment-15939495"
        },
        {
            "date": "2017-03-24T00:40:50+0000",
            "content": "I'm going to keep this open for a week or so and if anyone has other basic math evaluators you'd like to see added please just let me know and I'll include them here. ",
            "author": "Dennis Gove",
            "id": "comment-15939496"
        },
        {
            "date": "2017-03-24T03:04:44+0000",
            "content": "Is this intended for streaming expressions? How about abs(a), coalesce(a,b), round(a), round(a,b), sqrt(a). ",
            "author": "Vish Persaud",
            "id": "comment-15939633"
        },
        {
            "date": "2017-03-24T12:05:04+0000",
            "content": "Yeah, intended for streaming expressions. So far we have the following \n\n\nabs(a) // |a|\nadd(a,b,...,z) // a + b + ... + z\ndiv(a,b) // a/b\nmult(a,b,...,z) // a * b * ... * z\nsub(a,b,...,z) // a - b - ... - z\nlog(a) // natural log\npow(a,b) // a^b\nmod(a,b) // a % b\nceil(a) // ceiling of a\nfloor(a) // floor of a\n\n\n\nI'll add these ones\n\ncoalesce(a,b,...,z) // this won't actually be specific to math, we can coalesce on any value type\nround(a)\nsqrt(a)\ncbrt(a) // cubed root\nsin(a) // sine of a\nsinh(a) // hyperbolic sine of a\nasin(a) // arc sine of a\ncos(a) // cosine of a\ncosh(a) // hyperbolic cosine of a\nacos(a) // arc cosine of a\ntan(a) // tangent of a\ntanh(a) // hyperbolic tangent of a\natan(a) // arc tangent of a\n\n\n\nWhat were you thinking for round(a,b)? ",
            "author": "Dennis Gove",
            "id": "comment-15940215"
        },
        {
            "date": "2017-03-24T12:25:36+0000",
            "content": "In round(a,b),  'a' is the value to round and 'b' is the desired number of decimal places, i.e.:\n\nround(4.17) = 4\nround(4.17,0) = 4\nround(4.17,1) = 4.2\nround(4.17,9) = 4.17\n\nround(a) is same as java.lang.Math.round(a), but I'm unclear if there's a sufficiently performant implementation for round(a,b).  After a quick search, it looks like there are implementations involving Math.round with additional multiplication & division, and some involving DecimalFormat, NumberFormat, or BigDecimal.  So not sure if round(a,b) is worthwhile. ",
            "author": "Vish Persaud",
            "id": "comment-15940233"
        },
        {
            "date": "2017-03-24T13:15:35+0000",
            "content": "I haven't confirmed, but I think BigDecimal can accomplish this by setting the scale\n\na.setScale(b, RoundingMode.HALF_UP)\n\n ",
            "author": "Dennis Gove",
            "id": "comment-15940294"
        },
        {
            "date": "2017-03-24T17:21:20+0000",
            "content": "I think the scale will control placement of the decimal (10^1, 10^2, 10^-1, etc), as opposed to rounding.  Seems like rounding while retaining one or more decimal places would need to be handled by setting precision in BigDecimal.  In any case, not sure how performant that is, compared to say basic rounding to integers via Math.round(). ",
            "author": "Vish Persaud",
            "id": "comment-15940769"
        },
        {
            "date": "2017-03-25T14:12:29+0000",
            "content": "Adds \n\n+      .withFunctionName(\"pow\", PowerEvaluator.class)\n+      .withFunctionName(\"mod\", ModuloEvaluator.class)\n+      .withFunctionName(\"ceil\", CeilingEvaluator.class)\n+      .withFunctionName(\"floor\", FloorEvaluator.class)\n+      .withFunctionName(\"sin\", SineEvaluator.class)\n+      .withFunctionName(\"asin\", ArcSineEvaluator.class)\n+      .withFunctionName(\"sinh\", HyperbolicSineEvaluator.class)\n+      .withFunctionName(\"cos\", CosineEvaluator.class)\n+      .withFunctionName(\"acos\", ArcCosineEvaluator.class)\n+      .withFunctionName(\"cosh\", HyperbolicCosineEvaluator.class)\n+      .withFunctionName(\"tan\", TangentEvaluator.class)\n+      .withFunctionName(\"atan\", ArcTangentEvaluator.class)\n+      .withFunctionName(\"tanh\", HyperbolicTangentEvaluator.class)\n\n ",
            "author": "Dennis Gove",
            "id": "comment-15941733"
        },
        {
            "date": "2017-03-25T18:42:51+0000",
            "content": "Includes everything discussed so far (except round(a,b)), including tests. ",
            "author": "Dennis Gove",
            "id": "comment-15941849"
        },
        {
            "date": "2017-04-01T00:48:21+0000",
            "content": "Includes some refactoring required due to an addition of StreamContext into the evaluators. ",
            "author": "Dennis Gove",
            "id": "comment-15951879"
        },
        {
            "date": "2017-04-02T03:22:40+0000",
            "content": "Commit 674ce4e89393efe3147629e76f053c9901c182dc in lucene-solr's branch refs/heads/master from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=674ce4e ]\n\nSOLR-10356: Adds basic math streaming evaluators ",
            "author": "ASF subversion and git services",
            "id": "comment-15952502"
        },
        {
            "date": "2017-04-02T03:39:51+0000",
            "content": "Commit 6ce02bc693d4ef67872e9c536155c5308227d6e9 in lucene-solr's branch refs/heads/branch_6x from Dennis Gove\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6ce02bc ]\n\nSOLR-10356: Adds basic math streaming evaluators ",
            "author": "ASF subversion and git services",
            "id": "comment-15952511"
        },
        {
            "date": "2017-08-06T17:08:35+0000",
            "content": "Can this be closed? ",
            "author": "Erick Erickson",
            "id": "comment-16115854"
        }
    ]
}