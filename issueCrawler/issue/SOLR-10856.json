{
    "id": "SOLR-10856",
    "title": "ExtendedDismaxQParser (edismax) override OR when mm=100%",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "5.5,                                            6.0,                                            6.6",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Since Solr 5.5.1, edismax parser override OR (with AND behavior) in queries when mm=100%. This behavior is new from Solr 5.5.1 to 6.6.0.\n\nConcerned query :\n\n\ncurl -s 'http://localhost:8983/solr/mycorename/select?q=type_s%3A(A+OR+C)&wt=json&defType=edismax&mm=100%25&indent=true&debugQuery=true'\n\n\n\n\n1) Solr 5.4.1 :\n\n\n    \"rawquerystring\":\"type_s:(A OR C)\",\n    \"querystring\":\"type_s:(A OR C)\",\n    \"parsedquery\":\"(+(type_s:A type_s:C))/no_coord\",\n    \"parsedquery_toString\":\"+(type_s:A type_s:C)\",\n    \"explain\":{...},\n    \"QParser\":\"ExtendedDismaxQParser\",\n\n\n\n\nReturns docs as expected.\n\n2) Solr 5.5.1 :\n\n\n    \"rawquerystring\":\"type_s:(A OR C)\",\n    \"querystring\":\"type_s:(A OR C)\",\n    \"parsedquery\":\"(+((type_s:A type_s:C)~2))/no_coord\",\n    \"parsedquery_toString\":\"+((type_s:A type_s:C)~2)\",\n    \"explain\":{},\n    \"QParser\":\"ExtendedDismaxQParser\",\n\n\n\n\nReturns no results\n\n3) Solr 6.6.0 :\n\n\n    \"rawquerystring\":\"type_s:(A OR C)\",\n    \"querystring\":\"type_s:(A OR C)\",\n    \"parsedquery\":\"(+(type_s:A type_s:C)~2)/no_coord\",\n    \"parsedquery_toString\":\"+((type_s:A type_s:C)~2)\",\n    \"explain\":{},\n    \"QParser\":\"ExtendedDismaxQParser\",\n\n\n\nReturns no results\n\nThis bug looks like SOLR-8812 issue.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-25T02:24:59+0000",
            "content": "You are describing exactly what mm is supposed to do. The change made in SOLR-2649 was the root cause (deliberately... because of the bug caused by the inverse impact boolean operators had on mm), and SOLR-8812 was about choosing less disruptive default values when users are not specifying them.\n\nIn this case, however you are explicitly requesting mm=100%... and getting answers that match. The short answer is don't use mm=100% if you want boolean logic. It is not feature compatible.\n\nThe longer answer is nasty and would require delving into how boolean operators are truly handled by Solr when translated into OCCURS flags. The mm parameter operates on the SHOULD OCCUR flags, which is (roughly) what your OR terms are translated into. ",
            "author": "Greg Pendlebury",
            "id": "comment-16062195"
        }
    ]
}