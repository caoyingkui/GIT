{
    "id": "LUCENE-5990",
    "title": "Merging should pass correct fieldinfos to producers always",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "I think its been a longstanding issue, but I noticed it in the bulk merge code today and see that we can fix it...\n\ninstead of:\n\nDocumentStoredFieldVisitor visitor = new DocumentStoredFieldVisitor();\nstoredFieldsReader.visitDocument(docID, visitor);\nDocument doc = visitor.getDocument();\naddDocument(doc, mergeState.mergeFieldInfos);\n\n\n\nwe should do:\n\naddDocument(doc, mergeState.fieldInfos[i]);\n\n\n\nThis is a lot more consistent and reduce the possibility of scary bugs during merge because the codec does something strange. We should look into all merge logic to see if it can be improved here.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14159532",
            "author": "Robert Muir",
            "content": "FWIW this example is actually bogus (duh), because it passing to the consumer. But the idea still applies. I just wanted to open the issue to remind myself, to check this for e.g. DV producers and so on that take fieldinfos as a parameter. ",
            "date": "2014-10-05T14:09:35+0000"
        },
        {
            "id": "comment-14159533",
            "author": "Robert Muir",
            "content": "I will also think about assertingcodec and how it could check for such things. maybe its producer on init could save fieldinfos, e.g. for DV\n\n\npublic DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n  // save ref to state.fieldinfos\n}\n\n\n\nthen whenever getXXXDocValues(FieldInfo) is called, it could lookup by number or by name and assert the FieldInfo is the same instance.  ",
            "date": "2014-10-05T14:13:21+0000"
        }
    ]
}