{
    "id": "SOLR-9250",
    "title": "Search breaks with EU symbol \u20ac and wildcard *",
    "details": {
        "components": [
            "Server"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "While testing UTF-8 character searches, which worked, we have noticed a combination that fails. Testing with the data T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m, we found the search worked, but by adding a wild-card (e.g. T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m*), the search fails. Adding the wildcard before the \u20ac symbol worked (i.e. T\u00f9\u00fb\u00fc\u00ff*).\n\nShowing the logs for these queries:\nFull text without wildcard, hit=1\n2016-06-25 13:16:34.361 [qtp237852351-21] INFO  org.apache.solr.core.SolrCore.Request  \u2013 [core-name] webapp=/solr path=/select params={q=T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m&indent=true&fq=type:CONTACT&rows=12&wt=json&_=1466860594348} hits=1 status=0 QTime=0 \n\n\nFull text with wildcard, hit=0\n2016-06-25 13:16:41.172 [qtp237852351-16] INFO  org.apache.solr.core.SolrCore.Request  \u2013 [core-name] webapp=/solr path=/select params={q=T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m*&indent=true&fq=type:CONTACT&rows=12&wt=json&_=1466860601160} hits=0 status=0 QTime=0 \n\n\nPartial text before \u20ac with wildcard, hit=1\n2016-06-25 13:16:52.135 [qtp237852351-18] INFO  org.apache.solr.core.SolrCore.Request  \u2013 [core-name] webapp=/solr path=/select params={q=T\u00f9\u00fb\u00fc\u00ff*&indent=true&fq=type:CONTACT&rows=12&wt=json&_=1466860612125} hits=1 status=0 QTime=2",
    "attachments": {
        "contact-name-field-type.png": "https://issues.apache.org/jira/secure/attachment/12813392/contact-name-field-type.png",
        "contact-name-analyze.png": "https://issues.apache.org/jira/secure/attachment/12813393/contact-name-analyze.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-25T14:02:23+0000",
            "author": "Ahmet Arslan",
            "content": "What do you mean by saying the search fails? Throws exception? Does not return expected results?\nWildcard queries are not analyzed by the way.\nPlease ask question of this type on user mailing list. ",
            "id": "comment-15349652"
        },
        {
            "date": "2016-06-25T14:34:12+0000",
            "author": "Tim Nolan",
            "content": "What do you mean by saying the search fails? Throws exception? Does not return expected results?\n\nNo results are returned. Please look at the logs for the hits string.\n\nWildcard queries are not analyzed by the way.\n\nI'm not sure what you mean by that statement, but I'm pretty sure this is a valid issue worthy of some investigation.\n\nLet me put it another way, why does this type of query work except when a \u20ac is not present but doesn't when it is? For example, if I change the data to T\u00f9\u00fb\u00fc\u00ff\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m, searching with a wildcard (i.e. T\u00f9\u00fb\u00fc\u00ff\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m*) will return a result, whereas when the data is T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m, searching for T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m* doesn't return a result. ",
            "id": "comment-15349666"
        },
        {
            "date": "2016-06-25T14:59:38+0000",
            "author": "Ahmet Arslan",
            "content": "We need to see field type definition for that field. Index time analyzer may breaking words at EU symbol or something. ",
            "id": "comment-15349674"
        },
        {
            "date": "2016-06-25T15:08:58+0000",
            "author": "Ahmet Arslan",
            "content": "I'm not sure what you mean by that statement\nPlease see https://wiki.apache.org/solr/MultitermQueryAnalysis ",
            "id": "comment-15349677"
        },
        {
            "date": "2016-06-25T15:10:42+0000",
            "author": "Tim Nolan",
            "content": "The field configuration:\nschema.xml\n    <field name=\"contact-name\" type=\"phrase\" indexed=\"true\" stored=\"false\"/>\n\n\n\nIf I make the field stored, the returned result is shown below:\n\n{\n    \"numFound\": 1,\n    \"start\": 0,\n    \"docs\": [\n      {\n        \"id\": \"CO_912054\",\n        \"type\": \"CONTACT\",\n        \"contact-id\": 912054,\n        \"contact-name\": \"T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m UTF8\"\n      }\n    ]\n  \n\n\nOne thing that might be a contributing factor is that \u20ac is a 3-byte UTF-8 character. Maybe that affects the parser? ",
            "id": "comment-15349678"
        },
        {
            "date": "2016-06-25T15:14:14+0000",
            "author": "Tim Nolan",
            "content": "Ah - I've just noticed if I put the query in quotes it works (i.e. query for \"T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2\u00e6\u00e7\u00e9\u00e8\u00ea\u00eb\u00ef\u00ee\u00f4\u0153m*\"). Still - the behaviour doesn't seem consistent, but maybe not a bug. ",
            "id": "comment-15349680"
        },
        {
            "date": "2016-06-25T15:36:25+0000",
            "author": "Tim Nolan",
            "content": "....but am getting different inconsistent behavior. Querying contact-name:\"T\u00f9\u00fb\u00fc\u00ff\u20ac*\" now returns a result, but contact-name:\"T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2* doesn't.\n\n\n2016-06-25 15:27:49.978 [qtp237852351-20] INFO  org.apache.solr.core.SolrCore.Request  \u2013 [sg-inst3442] webapp=/solr path=/select params={q=contact-name:\"T\u00f9\u00fb\u00fc\u00ff\u20ac*\"&indent=true&wt=json&_=1466868469972} hits=1 status=0 QTime=0 \n2016-06-25 15:28:03.818 [qtp237852351-14] INFO  org.apache.solr.core.SolrCore.Request  \u2013 [sg-inst3442] webapp=/solr path=/select params={q=contact-name:\"T\u00f9\u00fb\u00fc\u00ff\u20ac\u00e0\u00e2*\"&indent=true&wt=json&_=1466868483813} hits=0 status=0 QTime=0\n\n ",
            "id": "comment-15349692"
        },
        {
            "date": "2016-06-25T17:54:39+0000",
            "author": "Ahmet Arslan",
            "content": "Please, we need to see field type definition. Where the analyzer elements are chained. ",
            "id": "comment-15349738"
        },
        {
            "date": "2016-06-25T20:05:06+0000",
            "author": "Tim Nolan",
            "content": "This the one?\n\nField-Type:    org.apache.solr.schema.TextField\n\n\n\nI've also attached a screenshot of the analysis page (see contact-name-analyze.png), which seems to indicate the \u20ac is being treated the same as white-space. ",
            "id": "comment-15349765"
        },
        {
            "date": "2016-06-25T20:13:13+0000",
            "author": "Ahmet Arslan",
            "content": "Yes this one, but you needs to make the chains visible.\nIt is the <fieldType> tag in schema.\n Anyways, the problem looks like your tokenizer breaks/tokenizes your sample input at the UE char.\nPlease use analysis admin page to see how your example text is tokenized/indexed.\n\nHave you read https://wiki.apache.org/solr/MultitermQueryAnalysis ? ",
            "id": "comment-15349767"
        },
        {
            "date": "2016-06-25T20:17:44+0000",
            "author": "Tim Nolan",
            "content": "schema.xml\n    <fieldType name=\"phrase\" class=\"solr.TextField\" sortMissingLast=\"true\" omitNorms=\"true\" autoGeneratePhraseQueries=\"true\">\n      <analyzer>\n        <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n        <filter class=\"solr.LowerCaseFilterFactory\"/>\n        <filter class=\"solr.EnglishMinimalStemFilterFactory\"/>\n        <filter class=\"solr.RemoveDuplicatesTokenFilterFactory\"/>\n      </analyzer>\n    </fieldType>\n\n\n\nwhich seems to indicate the \u20ac is being treated the same as white-space\nThe same seems to happen with the $ symbol, and this seems a reasonable thing to split on. Please confirm if that's the default behavior, and this JIRA can probably be closed. ",
            "id": "comment-15349769"
        },
        {
            "date": "2016-06-25T21:29:27+0000",
            "author": "Ahmet Arslan",
            "content": "Yes this is a know issue of wildcard queries. ",
            "id": "comment-15349836"
        },
        {
            "date": "2016-09-23T19:40:17+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Can anyone confirm that it is correct according to Unicode Standard Annex #29 to split on \"\u20ac\"? ",
            "id": "comment-15517372"
        },
        {
            "date": "2016-09-23T20:24:22+0000",
            "author": "Steve Rowe",
            "content": "StandardTokenizer currently implements the word break rules from Unicode 6.3.0, so the references below are to resources from that version.\n\nIn rules and test cases below, the \u00f7 symbol means a break is required, and the \u00d7 symbol means a break is disallowed.\n\nThe dollar sign (U+0024) and euro symbol (U+20AC) are both in the same class for the purposes of UAX#29's word break rules: \"Other\" (that is, not in any designated word break character classes - see the full list of word break properties here http://www.unicode.org/Public/6.3.0/ucd/auxiliary/WordBreakProperty.txt).  For characters in the \"Other\" class (referred to as \"999.0\" in the test cases given below), the word break rule WB14 applies (from http://www.unicode.org/reports/tr29/tr29-23.html#WB14):\n\n\nOtherwise, break everywhere (including around ideographs).\n\nWB14.\tAny\t\u00f7\tAny\n\nUnicode supplies a set of test cases for word break rules (http://www.unicode.org/Public/6.3.0/ucd/auxiliary/WordBreakTest.txt).  U+20AC doesn't appear in these test cases, but U+0024 does in two of them - the character names and classes are given in the info after the # character on each line:\n\n\n\u00f7 0061 \u00f7 0024 \u00f7 002D \u00f7 0033 \u00d7 0034 \u00d7 002C \u00d7 0035 \u00d7 0036 \u00d7 0037 \u00d7 002E \u00d7 0031 \u00d7 0034 \u00f7 0025 \u00f7 0062 \u00f7\t#  \u00f7 [0.2] LATIN SMALL LETTER A (ALetter) \u00f7 [999.0] DOLLAR SIGN (Other) \u00f7 [999.0] HYPHEN-MINUS (Other) \u00f7 [999.0] DIGIT THREE (Numeric) \u00d7 [8.0] DIGIT FOUR (Numeric) \u00d7 [12.0] COMMA (MidNum) \u00d7 [11.0] DIGIT FIVE (Numeric) \u00d7 [8.0] DIGIT SIX (Numeric) \u00d7 [8.0] DIGIT SEVEN (Numeric) \u00d7 [12.0] FULL STOP (MidNumLet) \u00d7 [11.0] DIGIT ONE (Numeric) \u00d7 [8.0] DIGIT FOUR (Numeric) \u00f7 [999.0] PERCENT SIGN (Other) \u00f7 [999.0] LATIN SMALL LETTER B (ALetter) \u00f7 [0.3]\n[...]\n\u00f7 2060 \u00f7 0061 \u00d7 2060 \u00f7 0024 \u00d7 2060 \u00f7 002D \u00d7 2060 \u00f7 0033 \u00d7 2060 \u00d7 0034 \u00d7 2060 \u00d7 002C \u00d7 2060 \u00d7 0035 \u00d7 2060 \u00d7 0036 \u00d7 2060 \u00d7 0037 \u00d7 2060 \u00d7 002E \u00d7 2060 \u00d7 0031 \u00d7 2060 \u00d7 0034 \u00d7 2060 \u00f7 0025 \u00d7 2060 \u00f7 0062 \u00d7 2060 \u00d7 2060 \u00f7\t#  \u00f7 [0.2] WORD JOINER (Format_FE) \u00f7 [999.0] LATIN SMALL LETTER A (ALetter) \u00d7 [4.0] WORD JOINER (Format_FE) \u00f7 [999.0] DOLLAR SIGN (Other) \u00d7 [4.0] WORD JOINER (Format_FE) \n\n ",
            "id": "comment-15517479"
        }
    ]
}