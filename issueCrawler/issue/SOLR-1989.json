{
    "id": "SOLR-1989",
    "title": "Re-Compilation of source needs to be possible in release artifacts",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Users who download Solr 3.1 or 4.0 should be able to recompile the source - at the present moment, this is not possible with nightly builds because of assumptions about compiling (and compiling against) .../modules and ../lucene \u2013 even though the jars are included in the \"lucene-libs\" directory.",
    "attachments": {
        "SOLR-1989.patch": "https://issues.apache.org/jira/secure/attachment/12469412/SOLR-1989.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12885724",
            "date": "2010-07-06T22:56:37+0000",
            "content": "This is easily reproducable  by trying to run \"ant example\" from a nightly download from hudson.\n\n\u2013\n\nIn general, the solr build.xml doesn't seem to be looking at the \"lucene-libs\" directory consistently.  This is particularly noticable if you download a nightly build artifact from hudson, which only includes the Solr source, and the lucene+modules dependencies are only available in compiled form.\n\nRunning \"ant example\" or \"ant compile-solrj\" causes the build to fail with messages like this...\n\ncompile-lucene:\n\ncompile-solrj:\n    [javac] Compiling 89 source files to /tmp/apache-solr-4.0-2010-07-06_08-06-42/build/solrj\n    [javac] /tmp/apache-solr-4.0-2010-07-06_08-06-42/src/common/org/apache/solr/common/util/ConcurrentLRUCache.java:19: package org.apache.lucene.util does not exist\n    [javac] import org.apache.lucene.util.PriorityQueue;\n...\n\n\n\nRunning \"ant compile\" fails even faster, with the \"compile-lucene\" target being unable to find the modules...\n\n\nhossman@bester:/tmp/apache-solr-4.0-2010-07-06_08-06-42$ ant compile\nBuildfile: build.xml\n\ninit-forrest-entities:\n\ncompile-lucene:\n\nBUILD FAILED\n/tmp/apache-solr-4.0-2010-07-06_08-06-42/common-build.xml:212: /tmp/modules/analysis/common not found.\n\nTotal time: 0 seconds\n\n\n\n(It's not entirely clear to me what special magic causes \"compile-lucene\" to succeed silently when using \"ant example\" ... a property is getting set somewhere i'm not seeing) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12885727",
            "date": "2010-07-06T23:06:21+0000",
            "content": "My suggested way of dealing with this...\n\n\n\tall of the relevant classpaths should be fixed to include lucene-libs when compiling solr source\n\ttwo new (overridable) system properties should be added for locating the \"modules.base.dir\" and \"lucene.base.dir\".  These should default to \"../modules\" and \"../lucene\" respectively\n\ta new (overridable) system property \"build.lucene.dependencies\" should be added, which defaults to \"true\" if \"${modules.base.dir}\" and \"${lucene.base.dir}\" both exist and are readble.\n\tif \"${build.lucene.dependencies}\" is false, and the lucene-libs dir is empty (or non-existent) the \"compile-lucene\" target should fail with a helpful error message saying that the neccessary lucene libraries can't be found, and point to a wiki with more info on how to build Solr.  (if \"${build.lucene.dependencies}\" is true, \"compile-lucene\" should continue to work as it currently does)\n\n\n\nIf the image i have in my head is correct, that should result in people who check out \"dev/trunk\" having the same experience they have now \u2013 compilation at the top level, or within solr, will result in everything being re-compiled as needed.  It should also result in people who only download the solr artifacts (and nothing else) being able to recompile solr using the jars in lucene-libs dir.  The added new feature is that people who download solr (or checkout just dev/trunk/solr) will be ableto set system properties as needed to recompile solr against whatever version of dev/*/modules and dev/*/lucene they want. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12885733",
            "date": "2010-07-06T23:27:39+0000",
            "content": "Hoss I worry about your suggested way, especially given the current complexity of the solr build system (it really really really really needs a cleanup).\n\nwouldnt it just be easier to have the source artifacts include lucene and modules source? \n\nI worry about compiling/testing solr not using the latest version of lucene src, i mean i already worry about this now and often do 'clean'\nto ensure i havent screwed something up with solr if i am messing with lucene. I think doing this would add even more complexity. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12885736",
            "date": "2010-07-06T23:31:30+0000",
            "content": "I also think that running off source is sweet. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12982337",
            "date": "2011-01-16T16:58:31+0000",
            "content": "we have to figure out how we want this to work:\n\nPersonally, my opinion would be that Solr source artifacts include the source it depends on.\nAlternatively we could do heavy ant-hacking.\n\nBut I don't think we can release until the source code artifacts are correct. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12985165",
            "date": "2011-01-22T18:00:53+0000",
            "content": "I think we just include the source too. As devs, we would prefer to run off the source I think - and it seems best to keep the distrib build setup as close to how the solr checkout works as possible, doesn't it? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12986971",
            "date": "2011-01-26T12:09:14+0000",
            "content": "Personally, as I said i really like including the source... but I might be in the minority as\nI am a dev and think its cool to have the source to all the \"search-related\" stuff being\nused in the search engine.\n\nUwe has expressed some interest in a better solution: if he has time to get to this, that's\ngreat... otherwise I uploaded this patch at least so we are releasable. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12994068",
            "date": "2011-02-13T10:42:50+0000",
            "content": "Committed revision 1070206, 1070208 (branch-3x) "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013054",
            "date": "2011-03-30T15:45:25+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}