{
    "id": "LUCENE-5368",
    "title": "Only close IndexOuput when MockDirectoryWrapper crashes...",
    "details": {
        "type": "Wish",
        "priority": "Minor",
        "labels": "",
        "resolution": "Invalid",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": []
    },
    "description": "The directory contract allows to read from opened IndexInput even after Directory.close() is called as long as the input is not closed. In MockDirWrapper we close the index input forcefully during close (sometimes if we run check index) when we try to crash the dir. I think we should just close the IndexOutput in that case and let the index input open until they are closed.",
    "attachments": {
        "LUCENE-5368.patch": "https://issues.apache.org/jira/secure/attachment/12618676/LUCENE-5368.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13847884",
            "author": "Simon Willnauer",
            "content": "here is a patch ",
            "date": "2013-12-13T20:36:10+0000"
        },
        {
            "id": "comment-13847912",
            "author": "Michael McCandless",
            "content": "The directory contract allows to read from opened IndexInput even after Directory.close() is called as long as the input is not closed.\n\nI don't think that's the contract.\n\nI mean, this happens to be true for Lucene's Directory impls today ... but I think that's more of a happy accident than a hard contract.  I can see a DB based Directory impl closing the database connection in Directory.close, which would render all open IndexInputs unusable.  It should be an error to close a Directory when there are still open IndexInputs/Outputs (MDW enforces this today).\n\nI don't think apps should close a Directory until all open IndexReaders on that Directory have been closed.\n\nEither that or, I think we should just remove Directory.close, if its semantics are so ambiguous.\n\nAlso, if you remove closing the IIs then won't this cause failures on Windows?  (The comment says we must close so we can corrupt even currently open files). ",
            "date": "2013-12-13T21:20:04+0000"
        },
        {
            "id": "comment-13853232",
            "author": "Simon Willnauer",
            "content": "I guess you convinced me on this one. I really missed the DB connection thing which makes lots of sense. I think we should harden the contract on Directory and document that the behavior is not guaranteed but is an impl. detail that can change at any time. ",
            "date": "2013-12-19T19:58:58+0000"
        }
    ]
}