{
    "id": "SOLR-791",
    "title": "Allow to submit config and schema when creating a new core",
    "details": {
        "affect_versions": "1.3",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Currently it's possible to create cores \"remotely\" via SolrJ.\n\nCoreAdminRequest.createCore(\"acore\", \"acoreinstancedir\", adminServer);\n\n\n\nHowever, this process is incomplete because I need to manually log onto the remote server and place a configuration file as well as a schema file into the conf/ folder in the acoreinstancedir/. It would be great it I can simply submit those files together with the create core request.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12635803",
            "date": "2008-09-30T18:24:55+0000",
            "content": "This doesn't seem like something that should be a built in feature of Solr ... userswho want to be able to remotely install config files should use WebDAV or other tools designed for such a purpose. "
        },
        {
            "author": "Gunnar Wagenknecht",
            "id": "comment-12635825",
            "date": "2008-09-30T19:40:36+0000",
            "content": "Hmm, but why is it possible to setup cores remotely? It sounds unreasonable to install, setup and maintain a separate systemto allow WebDAV just for uploading configuration files.  \n\nIt would be easier if I can make a single POSTrequest  to setup & create a new core. This would be a single, atomic request and avoids a second system which helps keeping the operational costs under control.\n "
        },
        {
            "author": "Vladimir Manolov",
            "id": "comment-13197762",
            "date": "2012-02-01T11:51:53+0000",
            "content": "This feature would be really helpful, if one does not have access to the filesystem of a production environment, which is often the case in large companies, which have some deployment processes. Adding WebDAV to existing environments is often difficult, since there is some kind of established infrastructure in the enterprise and the company is not flexible enough to allow specific hosting solutions, which would include WebDAV. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13469285",
            "date": "2012-10-04T10:48:35+0000",
            "content": "To actually work, you'd need to upload essentially all of the conf directory, as well as any sub-directories. For instance, what about stopwords.txt? protwords.txt? the velocity and xslt subdirs? dictionary files? elevate.xml? currency.xml? Simply uploading the schema.xml and solrconfig.xml files will fail if any filter references, say, stopwords.txt. "
        },
        {
            "author": "Hooman Mozaffari",
            "id": "comment-13736825",
            "date": "2013-08-12T12:52:09+0000",
            "content": "As an alternative you can extend CoreAdminHandler class, overwrite handleCustomAction method and implement the extra functionality. \n\nIn Solr 4.4.0 and later make sure you have introduced your custom core admin handler by setting up the following attributes in solr.xml:\n\n\n<str name=\"sharedLib\">[location of your shared libraries including the jar file containing your new admin handler class]</str>\n<str name=\"adminHandler\">[fully qualified name of your new admin handler class]</str>\n\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13823970",
            "date": "2013-11-15T19:14:29+0000",
            "content": "This will be superceded by named config sets, a separate JIRA. "
        },
        {
            "author": "Alexey Serba",
            "id": "comment-13825232",
            "date": "2013-11-18T09:55:36+0000",
            "content": "This will be superceded by named config sets, a separate JIRA\nErick Erickson, could you please link to that issue? If you meant SOLR-5287 then I believe this API will be available only for existing cores/collections, right?\n\nAnother idea is that Solr should have default configs (example?) bundled into a jar (so this is part of the installation). These configs will be used at core/collection creation time if you omit instanceDir/configSet parameters. WDYT? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13825301",
            "date": "2013-11-18T13:06:23+0000",
            "content": "Another idea is that Solr should have default configs (example?) bundled into a jar (so this is part of the installation). These configs will be used at core/collection creation time if you omit instanceDir/configSet parameters. WDYT?\n\n+1 - I brought this up on the mailing list the other day. You should be able to do more as you work with a database - you get a bunch of starting settings for your collection even with no work, and you can tweak them as necessary after the fact. Or of course you could make new template collection sets or tweak them up front, but that should be a choice rather than kind of forced in your face. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13825305",
            "date": "2013-11-18T13:24:57+0000",
            "content": "[~aserba] Not SOLR-5287, but SOLR-4779. That said, though, SOLR-5287 would allow building up from an absolutely minimal skeleton, see solrconfig-minimal and schema-tiny in the test code. The problem here would just be that that sometime during the complex process of making a full-blown set of configs, I'll mess it up sometime and have to manually edit the mistakes just like before. If the core doesn't load, you can't use the new editing code. If the core fails to load, you can't select from the admin UI. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13825309",
            "date": "2013-11-18T13:26:59+0000",
            "content": "4779 should probably make this unnecessary. SOLR-5287 is also related, although somewhat tangentially. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13825310",
            "date": "2013-11-18T13:28:34+0000",
            "content": "If the core doesn't load, you can't use the new editing code. If the core fails to load, you can't select from the admin UI.\n\nWe should probably try and allow some sort of sanity check - perhaps by loading up a tmp core or something...if it fails, we don't engage the change. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13825311",
            "date": "2013-11-18T13:30:05+0000",
            "content": "Although I guess you are talking about submitting the configs with the core create call? I think thats fine if it fails - it should just fail atomically - all or nothing. Then you change your configs and try again based on the errors. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13825314",
            "date": "2013-11-18T13:35:46+0000",
            "content": "bq: We should probably try and allow some sort of sanity check - perhaps by loading up a tmp core or something...if it fails, we don't engage the change.\n\nYeah, I've been deferring the hardening of error cases, figuring it would be good to get the basic functionality in place first then figure out how to harden. \"Progress not perfection\" and all that. Hadn't really though about this option, but it makes lots of sense and lets the system do the work. I'll raise a JIRA for this, thanks for the idea! "
        }
    ]
}