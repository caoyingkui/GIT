{
    "id": "LUCENE-5966",
    "title": "How to migrate from numeric fields to auto-prefix terms",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": []
    },
    "description": "In LUCENE-5879 we are adding auto-prefix terms to the default terms dict, which is generalized from numeric fields and offers faster performance while using less indexing space and about the same indexing time.\n\nBut there are many users out there with indices already created containing numeric fields ... so ideally we have some simple way for such users to switch over to auto-prefix  terms.\n\nRobert has a good plan (copied from LUCENE-5879):\n\nHere are some thoughts.\n\n\tkeep current trie \"Encoding\" for terms, it just uses precision step=Inf and lets the term dictionary do it automatically.\n\tcreate a filteratomicreader, that for a previous trie encoded field, removes \"fake\" terms on merge.\n\n\n\nUsers could continue to use NumericRangeQuery just with the infinite precision step, and it will always work, just execute slower for old segments as it doesnt take advantage of the trie terms that are not yet merged away.\n\nOne issue to making it really nice, is that lucene doesnt know for sure that a field is numeric, so it cannot be \"full-auto\". Apps would have to use their schema or whatever to wrap with this reader in their merge policy.\n\nMaybe we could provide some sugar for this, such as a wrapping merge policy that takes a list of field names that are numeric, or sugar to pass this to IWC in IndexUpgrader to force it, and so on.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15906232",
            "author": "Michael McCandless",
            "content": "We removed auto prefix terms ... ",
            "date": "2017-03-11T15:57:24+0000"
        }
    ]
}