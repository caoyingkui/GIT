{
    "id": "SOLR-5575",
    "title": "query by keys throw OutOfMemoryError",
    "details": {
        "affect_versions": "4.7",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "q=id:(31418017646566 OR 3141309666656)\nstart=0\nrows=2147483647\n\nreturn \n\n{\n  \"error\": \n{\n    \"msg\": \"java.lang.OutOfMemoryError: Requested array size exceeds VM limit\",\n    \"trace\": \"java.lang.RuntimeException: java.lang.OutOfMemoryError: Requested array size exceeds VM limit\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.sendError(SolrDispatchFilter.java:768)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:436)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:200)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)\\n\\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)\\n\\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1041)\\n\\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:603)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1721)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1679)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\\n\\tat java.lang.Thread.run(Thread.java:744)\\nCaused by: java.lang.OutOfMemoryError: Requested array size exceeds VM limit\\n\",\n    \"code\": 500\n  }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Cassandra Targett",
            "id": "comment-16322504",
            "date": "2018-01-11T16:30:28+0000",
            "content": "I think this is a duplicate of SOLR-3513 since it's the value in the rows param which causes the error that is still present in 7.2, although in a different form:\n\n\n{\n  \"responseHeader\":{\n    \"zkConnected\":true,\n    \"status\":500,\n    \"QTime\":6,\n    \"params\":{\n      \"q\":\"id:(0812521390 OR 0441385532)\",\n      \"rows\":\"2147483647\",\n      \"debugQuery\":\"on\"}},\n  \"error\":{\n    \"trace\":\"java.lang.NegativeArraySizeException\\n\\tat org.apache.lucene.util.PriorityQueue.<init>(PriorityQueue.java:63)\\n\\tat org.apache.lucene.util.PriorityQueue.<init>(PriorityQueue.java:44)\\n\\tat org.apache.solr.handler.component.ShardFieldSortedHitQueue.<init>(ShardFieldSortedHitQueue.java:45)\\n\\tat org.apache.solr.handler.component.QueryComponent.mergeIds(QueryComponent.java:801)\\n\\tat org.apache.solr.handler.component.QueryComponent.handleRegularResponses(QueryComponent.java:585)\\n\\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:564)\\n\\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:423)\\n\\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:177)\\n\\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2503)\\n\\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:710)\\n\\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:516)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:382)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:326)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1751)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\\n\\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\\n\\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\\n\\tat org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:534)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)\\n\\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283)\\n\\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108)\\n\\tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\\n\\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\\n\\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\\n\\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\",\n    \"code\":500}}\n\n\n\nWithout the rows value expected results are returned. "
        }
    ]
}