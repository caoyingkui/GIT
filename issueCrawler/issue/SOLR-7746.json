{
    "id": "SOLR-7746",
    "title": "Ping requests stopped working with distrib=true in Solr 5.2.1",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "5.2.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "\"steps to reproduce\"\n# start 1 node SolrCloud cluster\nsh> ./bin/solr -c -p 8888\n# create a test collection (we won\u2019t use it, but I just want to it to load solr configs to Zk)\n./bin/solr create_collection -c test -d sample_techproducts_configs -p 8888\n# create another test collection with 2 shards\ncurl 'http://localhost:8888/solr/admin/collections?action=CREATE&name=test2&numShards=2&replicationFactor=1&maxShardsPerNode=2&collection.configName=test'\n# try distrib ping request\ncurl 'http://localhost:8888/solr/test2/admin/ping?wt=json&distrib=true&indent=true'\n...\n  \"error\":{\n    \"msg\":\"Ping query caused exception: Error from server at http://192.168.59.3:8888/solr/test2_shard2_replica1: Cannot execute the PingRequestHandler recursively\"\n...\n\n\n\n\"Exception\"\n2116962 [qtp599601600-13] ERROR org.apache.solr.core.SolrCore  [test2 shard2 core_node1 test2_shard2_replica1] \u2013 org.apache.solr.common.SolrException: Cannot execute the PingRequestHandler recursively\n\tat org.apache.solr.handler.PingRequestHandler.handlePing(PingRequestHandler.java:246)\n\tat org.apache.solr.handler.PingRequestHandler.handleRequestBody(PingRequestHandler.java:211)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2064)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:654)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:450)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:227)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:196)",
    "attachments": {
        "SOLR-7746.patch": "https://issues.apache.org/jira/secure/attachment/12750863/SOLR-7746.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-14T16:47:45+0000",
            "author": "Michael Sun",
            "content": "This issue can be reproduced in trunk build too. ",
            "id": "comment-14697353"
        },
        {
            "date": "2015-08-17T17:40:31+0000",
            "author": "Michael Sun",
            "content": "Attach a fix. For the ping request particular, there is a requirement that qt parameter either be a meaningful handler or be null. The fix address this requirement when requests are sent to shards. ",
            "id": "comment-14699905"
        },
        {
            "date": "2015-08-19T00:33:34+0000",
            "author": "Gregory Chanan",
            "content": "Can we put the complexity in the PingRequestHandler instead of the SearchHandler?  Localizing the complexity seems like the best long term approach here. ",
            "id": "comment-14702234"
        },
        {
            "date": "2015-08-19T22:56:44+0000",
            "author": "Michael Sun",
            "content": "Yeah, that makes sense. Thanks Gregory Chanan for suggestion. ",
            "id": "comment-14703885"
        },
        {
            "date": "2015-08-20T21:11:35+0000",
            "author": "Michael Sun",
            "content": "Upload the patch to handle sharded ping requests inside PingRequestHandler. There are two changes.\n\n1. If the qt=/admin/ping for ping requests to shard, it delegates the request to the default handler, \"/select\".\n2. For ping requests to shard, PingRequestHandler returns what the delegated handler returns. Therefore the result can be aggregated later. (Originally PingRequestHandler removes most part from results that delegated handler returns. It works fine with non-distributed requests but can break the aggregation logic for distributed requests.) ",
            "id": "comment-14705757"
        },
        {
            "date": "2015-08-21T01:29:14+0000",
            "author": "Gregory Chanan",
            "content": "Looks good Michael, a few questions/comments:\n\n\n(params.getBool(ShardParams.IS_SHARD,false))\n\n\n\nConvention is to put a space after \",\".  Also, are you using tabs? please remove them.\n\n\n    handler = core.getRequestHandler( null );\n        ModifiableSolrParams wparams = new ModifiableSolrParams(params);\n        wparams.remove(CommonParams.QT);\n        req.setParams(wparams);\n\n\nIs it correct ot remove the QT or replace the QT with the default handler you are calling?\n\n\n // In case it's a query for shard, return the result from delegated handler for distributed query to merge result\n      if (params.getBool(ShardParams.IS_SHARD,false)) {\n        core.execute(handler, req, rsp );\n        ex = rsp.getException(); \n      } else {\n       core.execute(handler, req, pingrsp );\n        ex = pingrsp.getException(); \n      }\n...\n if (!params.getBool(ShardParams.IS_SHARD,false)) {\n    rsp.add( \"status\", \"OK\" );\n }\n\n\n\nIs all the if-elsing necessary?  What happens if you use pingrsp for whether IS_SHARD is true or not and then remove the if around the status check?  What you have now doesn't look correct to me, the non-IS_SHARD case won't have OK status, right? ",
            "id": "comment-14706065"
        },
        {
            "date": "2015-08-21T17:03:28+0000",
            "author": "Michael Sun",
            "content": "Thanks Gregory Chanan for reviewing. Here is my answers.\n\n1. Will add space and other formatting.\n2. qt parameter is no longer used at that point since delegation is completed. It doesn't matter if qt is removed or set to default handler.\n3. The logic is correct for non-IS_SHARD use case and it adds OK status to rsp with the ! in last if condition.\n\n ",
            "id": "comment-14707039"
        },
        {
            "date": "2015-08-21T17:19:27+0000",
            "author": "Gregory Chanan",
            "content": "on #3, sorry I didn't write that correctly.  Let me try to put it another way \u2013 why not just simplify the code I listed above and get rid of the if/else handling.  Does anything break if you do that?\n\nAlso, it would be great to add a test to demonstrate the problem you are fixing so it doesn't show up again.  Ideally the test should demonstrate IS_SHARD and non-IS_SHARD cases and the IS_SHARD test case should fail without your patch applied. ",
            "id": "comment-14707066"
        },
        {
            "date": "2015-08-26T01:06:22+0000",
            "author": "Michael Sun",
            "content": "Attach patch with test. I tested that the test is gonna fail without change in PingRequestHandler. Also the code path in PingRequestHandler() is modified to separate the handling in case isShard is true or not to reduce if-else block.\n\nThere is behavior change for PingRequestHandler in case isShard=true. In this case, it simply returns what the delegated handler returns. Javadoc is updated. Here is how new PingRequestHandler process ping request with distrib=true. This behavior change is required to aggregate results from shards (Step 7).\n\n1. PingRequestHandler receives ping request with distrib=true.\n2. Find the delegated handler, for example SearchHandler by default.\n3. Call SearchHandler to handle request.\n4. SearchHandler send requests to shards with distrib=false and isShard=true. \n5. [Shard] PingHandler of each shard receives the request and delegate to SearchHandler.\n6. [Shard] SearchHandler of shards process and return the result.\n7. SearchHandler in Step3 aggregate the result of all shards.\n8. Return the result to PingRequestHandler.\n9. PingRequestHandler returns either success or HTTP Error code.\n ",
            "id": "comment-14712297"
        },
        {
            "date": "2015-08-27T00:23:05+0000",
            "author": "Gregory Chanan",
            "content": "1. You should not modify TestMiniSolrCloudCluster.  That's for testing whether the MiniSolrCloudCluster itself works.  Write a test that uses the MiniSolrCloudCluster, there should be a number of examples.  Or maybe you don't even need it \u2013 can SolrPingTest satisfy what you need?\n\n2. \n\n+      // Send distributed and non-distributed ping query\n+      cloudSolrClient.setDefaultCollection(collectionName);\n+      SolrPing req = new SolrPing();\n+      req.setDistrib(true);\n+      SolrPingResponse rsp = req.process(cloudSolrClient, collectionName);\n+      assertEquals(0, rsp.getStatus()); \n+      \n+      cloudSolrClient.setDefaultCollection(collectionName);\n+      req = new SolrPing();\n+      req.setDistrib(false);\n+      rsp = req.process(cloudSolrClient, collectionName);\n+      assertEquals(0, rsp.getStatus());   \n\n\nMost of this code is unnecessary, you set the default collection multiple times, you pass the collectionName even though it's set, you create a new request when it would just suffice to set distrib.\n\n3. \n\n+  public SolrPing setDistrib(boolean distrib) {   \n+    params.add(\"distrib\", distrib ? \"true\" : \"false\");\n+    return this;    \n+  }\n\n\n\nYou shouldn't modify SolrPing just to test it.  Just extend getParams on SolrPing for your distrib example.\n\n4. Can you just have a single one of these instead of putting it in each clause?\n\n  // Send an error or return\n+      if( ex != null ) {\n+        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n+            \"Ping query caused exception: \"+ex.getMessage(), ex );\n+      }\n+    } else {\n\n ",
            "id": "comment-14715804"
        },
        {
            "date": "2015-08-27T01:29:33+0000",
            "author": "Gregory Chanan",
            "content": "I compared what happens in 5.1 vs your version of trunk for the commands listed in the description:\n5.1:\n\ncurl 'http://localhost:8889/solr/test2/admin/ping?wt=json&distrib=true&indent=true'\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":26,\n    \"params\":{\n      \"df\":\"text\",\n      \"echoParams\":\"all\",\n      \"indent\":\"true\",\n      \"q\":\"solrpingquery\",\n      \"distrib\":\"true\",\n      \"wt\":\"json\",\n      \"preferLocalShards\":\"false\",\n      \"rows\":\"10\"}},\n  \"status\":\"OK\"}\n\n\n\nTrunk:\n\ncurl 'http://localhost:8885/solr/test2/admin/ping?wt=json&distrib=true&indent=true'\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":28,\n    \"params\":{\n      \"q\":\"{!lucene}*:*\",\n      \"distrib\":\"true\",\n      \"df\":\"text\",\n      \"preferLocalShards\":\"false\",\n      \"indent\":\"true\",\n      \"echoParams\":\"all\",\n      \"rows\":\"10\",\n      \"wt\":\"json\"}},\n  \"status\":\"OK\"}\n\n\n\nLooks good, the change in the q parameter looks like it's that way because the solrconfig.xml being used is different. ",
            "id": "comment-14715882"
        },
        {
            "date": "2015-08-27T21:56:21+0000",
            "author": "Michael Sun",
            "content": "Thanks Gregory Chanan for your comments. The updated patch is uploaded. ",
            "id": "comment-14717605"
        },
        {
            "date": "2015-08-29T01:27:09+0000",
            "author": "Gregory Chanan",
            "content": "Looks good, two minor comments:\n\n\n+      req = new SolrPingWithDistrib();\n+      req.setDistrib(false);\n\n\n\nJust use a SolrPing here, if you can.\n\n\n+      Map<String, String> collectionProperties = new HashMap<>();\n+      collectionProperties.put(CoreDescriptor.CORE_CONFIG, \"solrconfig-tlog.xml\");\n+      collectionProperties.put(\"solr.tests.maxBufferedDocs\", \"100000\");\n+      collectionProperties.put(\"solr.tests.ramBufferSizeMB\", \"100\");\n+      // use non-test classes so RandomizedRunner isn't necessary\n+      collectionProperties.put(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.TieredMergePolicy\");\n+      collectionProperties.put(\"solr.tests.mergeScheduler\", \"org.apache.lucene.index.ConcurrentMergeScheduler\");\n+      collectionProperties.put(\"solr.directoryFactory\", \"solr.RAMDirectoryFactory\");\n+      miniCluster.createCollection(collectionName, NUM_SHARDS, REPLICATION_FACTOR, configName, collectionProperties);\n\n\n\nI think all this complexity is necessary because of the configuration you are using.  Look at ConcurrentDeleteAndCreateCollectionTest \u2013 that uses the MiniSolrCloudCluster and creates a collection without this complexity. ",
            "id": "comment-14720887"
        },
        {
            "date": "2015-08-31T18:45:12+0000",
            "author": "Michael Sun",
            "content": "That makes sense. The updated patch is uploaded. Thanks Gregory Chanan ",
            "id": "comment-14723848"
        },
        {
            "date": "2015-09-01T21:50:24+0000",
            "author": "Gregory Chanan",
            "content": "+1 lgtm. ",
            "id": "comment-14726269"
        },
        {
            "date": "2015-09-03T23:34:00+0000",
            "author": "Gregory Chanan",
            "content": "Actually I found a problem with the test.  It looks like\n\nBuilder jettyConfig = JettyConfig.builder();\n\n\n\ndoesn't set up the JettyConfig properly for SSL tests.  You need to use buildJettyConfig instead.  Not sure if we can enforce that in tests automatically. ",
            "id": "comment-14730038"
        },
        {
            "date": "2015-09-05T00:39:01+0000",
            "author": "Michael Sun",
            "content": "Thanks Gregory Chanan for pointing it out. I updated the patch and uploaded it. ",
            "id": "comment-14731661"
        },
        {
            "date": "2015-09-12T01:17:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1702581 from gchanan@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1702581 ]\n\nSOLR-7746: Ping requests stopped working with distrib=true in Solr 5.2.1 ",
            "id": "comment-14741829"
        },
        {
            "date": "2015-09-12T01:19:40+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1702582 from gchanan@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1702582 ]\n\nSOLR-7746: Ping requests stopped working with distrib=true in Solr 5.2.1 ",
            "id": "comment-14741831"
        },
        {
            "date": "2015-09-12T01:20:27+0000",
            "author": "Gregory Chanan",
            "content": "Committed to trunk and 5.4, thanks for the patch Michael Sun. ",
            "id": "comment-14741832"
        },
        {
            "date": "2015-10-02T16:11:01+0000",
            "author": "Mark Miller",
            "content": "FY on the CHANGES.txt entry for this one:\n\n\nSOLR-7746: Ping requests stopped working with distrib=true in Solr 5.2.1.  (Michael Sun)\n\n\n\nIt should read:\n\n\nSOLR-7746: Ping requests stopped working with distrib=true in Solr 5.2.1.  (Alexey Serba, Michael Sun via Greg Chanan)\n\n\n\nReporter always gets credit and if committer didn't really contribute we use the via credit. ",
            "id": "comment-14941316"
        },
        {
            "date": "2015-10-02T17:01:31+0000",
            "author": "Gregory Chanan",
            "content": "Thanks Mark, both the \"via\" and reporter points make sense.  Should I go back and update the CHANGES.txt? ",
            "id": "comment-14941394"
        },
        {
            "date": "2015-10-02T17:35:59+0000",
            "author": "Mark Miller",
            "content": "Yeah, personally I think it's worth it for the reporter credit. ",
            "id": "comment-14941458"
        },
        {
            "date": "2015-10-02T22:31:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1706499 from gchanan@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1706499 ]\n\nSOLR-7746: Update credit in CHANGES.txt ",
            "id": "comment-14941896"
        },
        {
            "date": "2015-10-02T22:41:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1706502 from gchanan@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1706502 ]\n\nSOLR-7746: Update credit in CHANGES.txt ",
            "id": "comment-14941908"
        }
    ]
}