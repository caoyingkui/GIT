{
    "id": "LUCENE-4963",
    "title": "Deprecate broken TokenFilter constructors",
    "details": {
        "components": [],
        "fix_versions": [
            "4.4"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "We have some TokenFilters which are only broken with specific options. This includes:\n\n\n\tTrimFilter when updateOffsets=true\n\tStopFilter, JapanesePartOfSpeechStopFilter, KeepWordFilter, LengthFilter, TypeTokenFilter when enablePositionIncrements=false\n\n\n\nI think we should deprecate these behaviors in 4.4 and remove them in trunk.",
    "attachments": {
        "LUCENE-4963.patch": "https://issues.apache.org/jira/secure/attachment/12581078/LUCENE-4963.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-04-27T09:40:56+0000",
            "content": "Hi,\n+1 to deprecate the constuctors taking those arguments and make sure the alternatives already implement the correct behaviour.\nUnfortunately we may not be able to completely remove that code in 5.x (we can remove the ctors, yes), because matchVersion sometimes implies the wrong behaviour. We nuked almost all of them, we should just check this. ",
            "author": "Uwe Schindler",
            "id": "comment-13643617"
        },
        {
            "date": "2013-04-30T00:06:36+0000",
            "content": "Thanks Uwe for the advice. Here is a first patch:\n\n\n\tDeprecate constructors that expose broken options and make them throw an IllegalArgumentException when the lucene match version is >= 4.4\n\n\n\n\n\tRemove the same constructors from TestRandomChains' exclusion list.\n\n\n\n\n\tSince enablePositionIncrements=true was used by the Analyzing and Fuzzy suggesters to ignore position holes, I had to make it an option in the suggesters themselves instead of the token streams.\n\n\n\n\n\tMore documentation in the oal.analysis package: PositionLengthAttribute and guidelines on writing non-corrupt token streams.\n\n ",
            "author": "Adrien Grand",
            "id": "comment-13645061"
        },
        {
            "date": "2013-04-30T06:56:42+0000",
            "content": "Hi Adrien,\nthanks for doing the work! I think on the first look its fine! I will now verify the changes for each TokenFilter... The patch is for 4.x? In trunk you will remove the deprecations in a second step to enable merging without extra work? ",
            "author": "Uwe Schindler",
            "id": "comment-13645330"
        },
        {
            "date": "2013-04-30T08:10:19+0000",
            "content": "Hi Uwe, thanks for doing the review! The patch applies to trunk and I plan to remove deprecations in a second step. Is it OK with you? ",
            "author": "Adrien Grand",
            "id": "comment-13645378"
        },
        {
            "date": "2013-05-03T16:04:53+0000",
            "content": "Yeah, I would do it the same way. First deprecate and commit to both branches. Then remove stuff in trunk only. ",
            "author": "Uwe Schindler",
            "id": "comment-13648525"
        },
        {
            "date": "2013-05-03T16:56:42+0000",
            "content": "I'll commit this soon unless someone objects. ",
            "author": "Adrien Grand",
            "id": "comment-13648559"
        },
        {
            "date": "2013-05-04T18:18:10+0000",
            "content": "[trunk commit] jpountz\nhttp://svn.apache.org/viewvc?view=revision&revision=1479148\n\nLUCENE-4963: Deprecate broken TokenFilter options. ",
            "author": "Commit Tag Bot",
            "id": "comment-13649130"
        },
        {
            "date": "2013-05-04T18:33:40+0000",
            "content": "[branch_4x commit] jpountz\nhttp://svn.apache.org/viewvc?view=revision&revision=1479151\n\nLUCENE-4963: Deprecate broken TokenFilter options (merged from r1479148). ",
            "author": "Commit Tag Bot",
            "id": "comment-13649133"
        },
        {
            "date": "2013-05-04T20:27:16+0000",
            "content": "[trunk commit] jpountz\nhttp://svn.apache.org/viewvc?view=revision&revision=1479171\n\nLUCENE-4963: Completely remove deprecated options in 5.0. ",
            "author": "Commit Tag Bot",
            "id": "comment-13649159"
        },
        {
            "date": "2013-05-04T20:27:30+0000",
            "content": "Thank you Uwe! ",
            "author": "Adrien Grand",
            "id": "comment-13649160"
        },
        {
            "date": "2013-07-23T18:37:01+0000",
            "content": "Bulk close resolved 4.4 issues ",
            "author": "Steve Rowe",
            "id": "comment-13716722"
        },
        {
            "date": "2013-07-26T12:59:31+0000",
            "content": "There should be an option in AnalyzingLookupFactory and FuzzyLookupFactory to setPreservePositionIncrements then. ",
            "author": "Artem Lukanin",
            "id": "comment-13720760"
        },
        {
            "date": "2013-07-26T13:00:03+0000",
            "content": "There should be an option in AnalyzingLookupFactory and FuzzyLookupFactory to setPreservePositionIncrements then. ",
            "author": "Artem Lukanin",
            "id": "comment-13720762"
        },
        {
            "date": "2013-12-06T13:12:49+0000",
            "content": "Hi, how we're now supposed to fix this?\nhttp://stackoverflow.com/questions/18668376/solr-4-4-stopfilterfactory-and-enablepositionincrements ",
            "author": "Alexander S.",
            "id": "comment-13841236"
        },
        {
            "date": "2013-12-06T13:17:25+0000",
            "content": "I do index\ntwitter.com/testuser\nthen search for\nhttp://www.twitter.com/testuser\n\nThese are in stopwords filter:\nhttp\nhttps\nwww\n\nNo results. ",
            "author": "Alexander S.",
            "id": "comment-13841239"
        },
        {
            "date": "2013-12-07T15:43:22+0000",
            "content": "The way to generate a query based on the token stream of the query string is the responsibility of the query parser. For example, QueryParserBase has the setEnablePositionIncrements method http://lucene.apache.org/core/4_4_0/queryparser/org/apache/lucene/queryparser/classic/QueryParserBase.html#setEnablePositionIncrements(boolean) which can be used to ignore holes in the token stream (which seems to be what you are looking for).  ",
            "author": "Adrien Grand",
            "id": "comment-13842249"
        }
    ]
}