{
    "id": "LUCENE-6167",
    "title": "Speed up SortingMergePolicy by string",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "Building the sorted docmaps can take a nontrivial amount of time, for String we currently don't do a very good job.",
    "attachments": {
        "LUCENE-6167.patch": "https://issues.apache.org/jira/secure/attachment/12690720/LUCENE-6167.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14268824",
            "author": "Robert Muir",
            "date": "2015-01-08T05:07:21+0000",
            "content": "Here is one simple solution that is ~2x faster building docmaps for geonames by string name. There are other ways to skin the cat though. "
        },
        {
            "id": "comment-14270878",
            "author": "Adrien Grand",
            "date": "2015-01-09T11:08:07+0000",
            "content": "I think there is a typo. The if statement should check ord2 right?\n\n\n+        if (ord1 == -1) {\n+          ord2 = missingOrd;\n+        }\n\n\n\nOtherwise I think this is good. Maybe the patch could be changed so that the string improvement also works if you have several sort fields by doing the instanceof check for each comparator? I would also be interesting to see if the string comparator could be refactored so that this special case is not needed anymore. "
        },
        {
            "id": "comment-14270887",
            "author": "Robert Muir",
            "date": "2015-01-09T11:14:05+0000",
            "content": "Thanks Adrien, I will add tests for string. I thought i had added them before!\n\n\nI would also be interesting to see if the string comparator could be refactored so that this special case is not needed anymore.\n\nMaybe, but i am afraid to make the API more difficult. I can't be the only one who would really like FieldComparator to look more like java.util.Comparator and not have to implement 20 methods to compare things. "
        }
    ]
}