{
    "id": "SOLR-11832",
    "title": "Restore from backup creates old format collections",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "Backup/Restore"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.6.2,                                            7.2",
        "resolution": "Duplicate",
        "status": "Closed"
    },
    "description": "Restoring a collection from a backup always creates the new collection using the old format state json (format 1), as a global clusterstate.json file at top level of ZK. All new collections should be defaulting to use the newer per-collection (format 2) in /collections/.../state.json\n\nAs we're running clusters with many collections, the old global state format isn't good for us, so as a workaround for now we're calling MIGRATESTATEFORMAT immediately after the RESTORE call.\n\nThis bug was mentioned in the comments of SOLR-5750 and also recently mentioned by Varun Thacker in SOLR-11560\n\nCode patch attached, but as per David Smiley's comment in the code, fixing this means at least 1 test class doesn't succeed anymore. From what I can tell, the BasicDistributedZk2Test fails because it's not using the official collection API to create a collection, it seems to be bypassing that and manually creating cores using the core admin api instead, which I think is not enough to ensure the correct ZK nodes are created. The test superclass has some methods to create a collection which do use the collection api so I could try fixing the tests (I'm just not that familiar with why those BasicDistributed*Test classes aren't using the collection api).",
    "attachments": {
        "SOLR-11832.patch": "https://issues.apache.org/jira/secure/attachment/12905126/SOLR-11832.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-08T18:34:57+0000",
            "content": "Not sure I'm following here. I took a very, very, very quick glance at BasicDistributedZkTest and BasicDistributedZk2Test on master without this patch.\n\nThe only call I see to the core admin APIs create command is in BasicDistributedZkTest, and it's never used (it's in a private method that's in turn called by another private method that's never called). We should remove that code completely.\n\nThere are a couple of calls to the core admin API to get the status, but that should be OK.\n\nWhat am I missing? ",
            "author": "Erick Erickson",
            "id": "comment-16316751"
        },
        {
            "date": "2018-01-09T09:43:16+0000",
            "content": "You're quite right Erick, my mistake.. that test class has been fixed in the master branch (but is still broken in branch_6x) so with this patch the tests do complete successfully. Hence this patch can be merged to master and to branch_7x but it can't be backported to branch_6x as it stands.\n\nWe're running 6.6.2 in production, so we'll just use the workaround for now until we get around to upgrading to 7. ",
            "author": "Tim Owen",
            "id": "comment-16318139"
        },
        {
            "date": "2018-01-10T22:18:09+0000",
            "content": "Hi Tim,\n\nIs SOLR-11586 what you're looking for? ",
            "author": "Varun Thacker",
            "id": "comment-16321233"
        },
        {
            "date": "2018-01-10T22:19:27+0000",
            "content": "I didn't hear back from Noble Paul  on https://issues.apache.org/jira/browse/SOLR-11586?focusedCommentId=16227436&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16227436 hence I didn't change the default ( which the patch you attached does ) \n\nI'm +1 to changing the default but we can do that in another Jira. I think we should close this out as a duplicate of SOLR-11586 ",
            "author": "Varun Thacker",
            "id": "comment-16321236"
        },
        {
            "date": "2018-01-10T22:24:51+0000",
            "content": "Going forward we should only use per collection state.json . The monolithic clusterstate.json is largely there for backcompat ",
            "author": "Noble Paul",
            "id": "comment-16321247"
        },
        {
            "date": "2018-01-11T09:55:19+0000",
            "content": "Varun Thacker .. yes it does appear to be the same issue as SOLR-11586 .. sorry I had searched Jira for backup and restore and didn't see your ticket before!\n\nI'd agree the default needs changing too (as my patch is doing) but I'm less familiar with what other code paths might end up invoking that ClusterStateMutator code I've changed (it might be others as well as restored backups).\n\nFeel free to close this as a duplicate then ",
            "author": "Tim Owen",
            "id": "comment-16321976"
        },
        {
            "date": "2018-01-16T21:14:45+0000",
            "content": "Let's address changing the default behaviour on\u00a0SOLR-11860 ",
            "author": "Varun Thacker",
            "id": "comment-16327815"
        },
        {
            "date": "2018-01-16T21:15:14+0000",
            "content": "Thanks Tim! I hope back-porting\u00a0\u00a0SOLR-11860\u00a0 fixes your problem ",
            "author": "Varun Thacker",
            "id": "comment-16327818"
        }
    ]
}