{
    "id": "SOLR-178",
    "title": "add simple servlet displaying last N severe/warning logs",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "Admin UI"
        ],
        "type": "Wish",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "From a discussion of masked errors when parsing hte schema/solrconfig...\n\nhttp://www.nabble.com/merely-a-suggestion%3A-schema.xml-validator-or-better-schema-validation-logging-tf3331929.html\n\n\ni've been thinking a Servlet that didn't depend on any special Solr code\n(so it will work even if SolrCore isn't initialized) but registeres a log\nhandler and records the last N messages from Solr above a certain level\nwould be handy to refer people to when they are having issues and aren't\noverly comfortable with log files.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12477722",
            "date": "2007-03-04T01:27:36+0000",
            "content": "Although this would help, sometimes people don't think to check log files, and they will also often forget to check this (or not know about it).\nIf we could also surface this on the admin pages (maybe even on the front page), it would help.  Not sure how feasible that would be though. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12477725",
            "date": "2007-03-04T01:49:38+0000",
            "content": "I recently wrote a similar servlet for a site i had to debug behind a firewall (i could not look at the logs).  It was a log4j appender that saved that last bunch of lines in memory and an AJAX interface that refreshed every couple seconds.  \n\nIf we go this route, i'd like to see a custom RequestHandler that accumulates the last N lines and spits the results back with the standard wt=json/xml etc.  This handler should have an interface to dynamically change the log level and number of lines saved.  Flare and other solr front ends may do something nice with this info.\n\nWithout getting out of hand, we could have the /admin landing page include an iframe that refreshes every couple seconds. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12477729",
            "date": "2007-03-04T02:39:58+0000",
            "content": "1) i agree, we should link to this from the admin page - i just want it to be fully functional without any other solr specific code loading (so it will work even if SolrCore doesn't init properly)\n\n2) my main concern is that we have a uniform URL we can tell novice users to look at to get SERIOUS errors from solr \u2013 they may not understand which log file the solr messages are getting sent to (or may have logging turned off completely)\n\n3) it really shouldn't be a RequestHandler, because then it requires SolrCore to parse the solrconfig.xml properly ... we could have a RequestHandler that does something similar.\n\n4) the log level is already configurable from the admin pages ... i'm not a big fan of that functionality actually, since (unless i'm mistaken) it affects the entire JVM \u2013 not just hte solr webapp.\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12477730",
            "date": "2007-03-04T02:47:19+0000",
            "content": "> the log level is already configurable from the admin pages \n\nI thought that had never worked.  Just tried it out on solr/example, doesn't seem to work for me. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13255793",
            "date": "2012-04-17T18:19:23+0000",
            "content": "This is implemented by SOLR-3358 "
        }
    ]
}