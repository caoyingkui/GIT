{
    "id": "LUCENE-7590",
    "title": "Add DocValues statistics helpers",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "New Feature",
        "components": [
            "modules/misc"
        ],
        "fix_versions": [
            "6.4",
            "7.0"
        ]
    },
    "description": "I think it can be useful to have DocValues statistics helpers, that can allow users to query for the min/max/avg etc. stats of a DV field. In this issue I'd like to cover numeric DV, but there's no reason not to add it to other DV types too.",
    "attachments": {
        "LUCENE-7590-sorted-set.patch": "https://issues.apache.org/jira/secure/attachment/12843749/LUCENE-7590-sorted-set.patch",
        "LUCENE-7590-2.patch": "https://issues.apache.org/jira/secure/attachment/12843389/LUCENE-7590-2.patch",
        "LUCENE-7590.patch": "https://issues.apache.org/jira/secure/attachment/12842705/LUCENE-7590.patch",
        "LUCENE-7590-sorted-numeric.patch": "https://issues.apache.org/jira/secure/attachment/12843723/LUCENE-7590-sorted-numeric.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15739549",
            "date": "2016-12-11T10:59:45+0000",
            "content": "First patch adds numeric statistics. I'd appreciate comments about it before I add support for sorted-numeric (including, whether we should!).\n\nNote that I chose to take either a field or ValueSource. The latter gives some flexibility by allowing users to pass an arbitrary VS over e.g. an Expression over a numeric DV field.\n\nThis, as far as I could tell, does not apply to SortedNumericDV, or at least I couldn't find an existing ValueSource implementation (like LongFieldSource) for SortedNumericDV.\n\nIf this approach looks good, I'd like to refactor the class so that it's easy to share/reuse code between Long and Double NDV fields. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15741562",
            "date": "2016-12-12T10:26:23+0000",
            "content": "Thanks Shai Erera.\n\nMaybe instead of a new stepping-stone class that the user must invoke, DocsAndContexts, you could just define a functional interface:\n\n\n  (LeafReaderContext ctx) -> DocIdSetIterator\n\n\n\nAnd then maybe instead of a new class that computes stats in its ctor, NumericLongDocValuesStats, you could offer a static method instead, taking a top-level reader and the above function, that computes the stats and returns a results class holding the min/max/mean/etc.?  Seems like that might be a simpler way to expose the functionality... ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15741572",
            "date": "2016-12-12T10:31:29+0000",
            "content": "I would not even define an own functional interface, just use java.util.function.Function<LeafReaderContext,DocIdSetIterator>: https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html\n\nThis only works if the function does not throw checked exceptions. Otherwise a new functional interface is needed. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15741718",
            "date": "2016-12-12T11:54:03+0000",
            "content": "Thanks Michael McCandless and Uwe Schindler, I changed to a static class and removed DocsAndContexts in favor of a new Function<LeafReaderContext,DocIdSetIterator>.\n\nMaybe BitsDocIdSetIterator can go in separately (i.e. a separate issue)? As I think it's a useful utility to have anyway. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15741852",
            "date": "2016-12-12T13:12:25+0000",
            "content": "Thanks Shai Erera the patch looks great! ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15742406",
            "date": "2016-12-12T16:41:11+0000",
            "content": "Maybe BitsDocIdSetIterator can go in separately (i.e. a separate issue)?\n\nIt took us a lot of efforts to remove slow iterators so I'd like to not add them back. Let's implement the computation of these stats by writing a Collector and use a MatchAllDocsQuery?\n\nWhy is missing undefined when count is zero?\n\n\n ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15743089",
            "date": "2016-12-12T20:40:54+0000",
            "content": "Let's implement the computation of these stats by writing a Collector and use a MatchAllDocsQuery?\n\nAt first I thought this is an overkill, but a Collector will allow computing them for documents that match another query. I will explore that option.\n\nWhy is missing undefined when count is zero?\n\nI thought that if you have no documents in the index at all, then missing is undefined, but now that you ask the question, I guess in that case it's fine if it's 0, like count. I'll change the docs. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15745512",
            "date": "2016-12-13T16:07:16+0000",
            "content": "Patch implements a DocValuesStatsCollector. Note some key design decisions:\n\nA DocValuesStats is responsible for providing the specific DocValuesIterator for a LeafReaderContext. It then accumulates the value, computes missing and other statistics. It computes missing and count, leaving min and max to the actual implementation. Also, this stats does not define a mean, as at least for now I'm not sure how the mean value of a SortedSetDocValues is defined.\n\nAn abstract NumericDocValuesStats implementation for single-numeric DV fields, which also adds a mean statistic, with two concrete implementations: LongNumericDocValuesStats and DoubleNumericDocValuesStats.\n\nThis hierarchy should allow us to add further statistics for SortedSet and SortedNumeric DV fields. I did not implement them yet, as I'm not sure about some of the statistics (e.g. should the mean stat of a SortedNumeric be the mean across all values, or the minimum per document or ...). Let's discuss that separately.\n\nAlso, note that I had to make DocValuesIterator public in order to declare it in this collector.\n\nIf you're OK with the design and implementation, I want to separate DovValuesStats to its own file, for clarity. I did not do it yet though. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15745530",
            "date": "2016-12-13T16:14:34+0000",
            "content": "Added tests for DoubleNumericDocValuesStats.\n\nNow that I review the class names, how do you feel about removing Numeric from the concrete classes, so they're called Long/DoubleDocValuesStats? ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15745825",
            "date": "2016-12-13T18:19:24+0000",
            "content": "Instead of using a NOOP_COLLECTOR, you could throw a CollectionTerminatedException, which will skip the segment entirely. By the way, in such cases I think we should still increase the missing count?\n\nCan we avoid making DocValuesIterator public? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15745828",
            "date": "2016-12-13T18:19:50+0000",
            "content": "how do you feel about removing Numeric from the concrete classes, so they're called Long/DoubleDocValuesStats?\n\nFine with me. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15745855",
            "date": "2016-12-13T18:30:42+0000",
            "content": "Instead of using a NOOP_COLLECTOR, you could throw a CollectionTerminatedException\n\nOK, good idea.\n\nBy the way, in such cases I think we should still increase the missing count?\n\nI am not sure? I mean, missing represents all the documents that matched the query and did not have a value for that DV field. But when getLeafCollector is called, we don't know yet that any documents will be matched by the query at all (I think?) and therefore updating missing might be confusing? I.e., I'd expect that if anyone chained TotalHitsCollector with DocValuesStatsCollector, then totalHits = stats.count() + stats.missing()? I am open to discuss it, just not sure I always want to update missing with context.reader().numDocs() ...\n\nCan we avoid making DocValuesIterator public?\n\nI did not find a way, since it's part of DocValuesStats.init() API and I think users should be able to provide their own Stats impl, e.g. if they want to compute something on a BinaryDocValues field?\n\nHere too, I'd love to get more ideas though. I tried to avoid implementing N collectors, one for each DV type, where they share a large portion of the code. But if you have strong opinions about making DVI public, maybe that's what we should do ... ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15746113",
            "date": "2016-12-13T19:59:45+0000",
            "content": "Adrien Grand I accept your proposal about missing, only in case a reader does not have the requested DV field, the collector returns a LeafCollector which updates missing for every hit document.\n\nI also renamed the classes as proposed earlier, as well extracted DocValuesStats and friends to its own class.\n\nI still didn't address changing DocValuesIterator to public. BTW, I noticed that SimpleTextDocValuesReader defines a private class named DocValuesIterator with exactly the same signature, I assume because the other one is package-private. So I feel that changing DVI to public is beneficial beyond the scope of this issue alone. What do you think? ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15747731",
            "date": "2016-12-14T08:58:34+0000",
            "content": "Thanks, the missing change and the rename look good to me.\n\nRegarding DocValuesIterator, I think in the simple text case, it is really an impl detail, and the one in core is only really used to share the declaration of advanceExact. My feeling is that making it public is only useful here because the way stats are computed is very abstracted with generics and inheritance, so I am not convinced this use-case requires that we make DocValuesIterator public. I would rather either avoid abstracting so much or define a functional interface in the stats package that only defines an advanceExact method and use method references to be able to share computation across the various doc value types.\n\nMaybe we can also make the collector pkg-private, it does not seem to need to be public, does it? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15747823",
            "date": "2016-12-14T09:43:17+0000",
            "content": "Patch changes DocValuesIterator package-private again and adds an API to DocValuesStats to help in determining whether a document has or does not have a value for the field.\n\nThe Collector needs to be public because you're supposed to initialize it and run a search with it. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15747950",
            "date": "2016-12-14T10:33:12+0000",
            "content": "+1 ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15748039",
            "date": "2016-12-14T11:07:56+0000",
            "content": "Commit ad7152ad4739a47aa2b45405ba1682b3dda18923 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ad7152a ]\n\nLUCENE-7590: add DocValuesStatsCollector ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15748057",
            "date": "2016-12-14T11:15:18+0000",
            "content": "Commit 43f4f7a279553913aadfdd684d9cdcff0a5f4220 in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=43f4f7a ]\n\nLUCENE-7590: add DocValuesStatsCollector ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15748068",
            "date": "2016-12-14T11:20:07+0000",
            "content": "Commit e09ef681e4d36adb8987ca0cda6bcb3221830102 in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e09ef68 ]\n\nRevert \"LUCENE-7590: add DocValuesStatsCollector\"\n\nThis reverts commit 43f4f7a279553913aadfdd684d9cdcff0a5f4220. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15748087",
            "date": "2016-12-14T11:25:56+0000",
            "content": "Commit 7269c484a4a0dd147a445a4b676144592f0aa60f in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7269c48 ]\n\nLUCENE-7590: add DocValuesStatsCollector ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15748094",
            "date": "2016-12-14T11:28:28+0000",
            "content": "Commit 85582dabe4372085e1af5d01ebbfcfd0303b9f12 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=85582da ]\n\nLUCENE-7590: fix typo in method parameter ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15748192",
            "date": "2016-12-14T12:11:54+0000",
            "content": "There are now few tasks left:\n\n\n\tAdd more statistics, such as sum and stdev (for numeric fields). Should we care about overflow, or only document it?\n\n\n\n\n\tWe can also compute more stats like what Solr gives in Stats Component. What do you think?\n\n\n\n\n\tAdd stats for SortedDocValues. This should be fairly straightforward by comparing the BytesRef of all matching documents. But I don't think we should have a mean stat for it? Likewise for SortedSetDocValues.\n\n\n\n\n\tWhat should we do with SortedNumericDocValues? min and max are well defined, but what about mean? Should it be across all values?\n\n\n\nI intend to close this issue and handle the rest in follow-on issues, unless you think otherwise. Also, would appreciate your feedback on the above points. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15750949",
            "date": "2016-12-15T09:55:58+0000",
            "content": "Patch adds sum, stdev and variance stats to NumericDocValuesStats. I also added a CHANGES entry which I forgot to in the previous commit. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15751272",
            "date": "2016-12-15T12:42:56+0000",
            "content": "Commit 295cab7216ca76debaf4d354409741058a8641a1 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=295cab7 ]\n\nLUCENE-7590: add sum, variance and stdev stats to NumericDVStats ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15751275",
            "date": "2016-12-15T12:45:23+0000",
            "content": "Commit 2a0814fc34b76d8031938d09e11bedc7f604f543 in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2a0814f ]\n\nLUCENE-7590: add sum, variance and stdev stats to NumericDVStats ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15757455",
            "date": "2016-12-17T19:19:03+0000",
            "content": "Patch adds DVStats for SortedNumericDocValuesField. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15758335",
            "date": "2016-12-18T06:40:16+0000",
            "content": "Commit 944b8e07f557b9320895998fe33d71cae5199eee in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=944b8e0 ]\n\nLUCENE-7590: add DocValuesStats for SortedNumeric DV fields ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15758367",
            "date": "2016-12-18T07:05:09+0000",
            "content": "Commit 63a5cd00173f7e89a478981429d4d5cd38f3cf1d in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=63a5cd0 ]\n\nLUCENE-7590: add DocValuesStats for SortedNumeric DV fields ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15758609",
            "date": "2016-12-18T10:23:31+0000",
            "content": "Patch adds SortedDocValuesStats and SortedSetDocValuesStats for sorted and sorted-set DV fields. With this patch, I think the issue is ready to be closed. I am not sure that we need a DVStats for a BinaryDVField at this point, but if demand arises, it should be easy to add. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15759352",
            "date": "2016-12-18T20:00:27+0000",
            "content": "Commit 23206caabd09310cb23a2b5302ce41af62b5c9cc in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=23206ca ]\n\nLUCENE-7590: add Sorted(Set)DocValuesStats ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15759363",
            "date": "2016-12-18T20:06:34+0000",
            "content": "Commit 47bb32c3bb77a2dfaaf9d1db50e244599cf053a6 in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=47bb32c ]\n\nLUCENE-7590: add Sorted(Set)DocValuesStats ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15759376",
            "date": "2016-12-18T20:15:04+0000",
            "content": "Commit 73b6a29f2d89e2f1ce86b57ad0acec7d157f7e21 in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=73b6a29 ]\n\nLUCENE-7590: move docsWithField to DocValuesStats ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15759382",
            "date": "2016-12-18T20:19:43+0000",
            "content": "Committed to master and 6x. This is now complete. ",
            "author": "Shai Erera"
        },
        {
            "id": "comment-15760531",
            "date": "2016-12-19T08:15:28+0000",
            "content": "Commit 321c6f090f04463a8798d090e5426efeabbdc418 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=321c6f0 ]\n\nLUCENE-7590: make (Sorted)NumericDocValuesStats public ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15760555",
            "date": "2016-12-19T08:24:19+0000",
            "content": "Commit f075a673c9629e92c1e9dd1e104a4e602d6fe610 in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f075a67 ]\n\nLUCENE-7590: make (Sorted)NumericDocValuesStats public ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15761080",
            "date": "2016-12-19T12:51:57+0000",
            "content": "Commit 944b8e07f557b9320895998fe33d71cae5199eee in lucene-solr's branch refs/heads/feature/metrics from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=944b8e0 ]\n\nLUCENE-7590: add DocValuesStats for SortedNumeric DV fields ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15761081",
            "date": "2016-12-19T12:51:59+0000",
            "content": "Commit 23206caabd09310cb23a2b5302ce41af62b5c9cc in lucene-solr's branch refs/heads/feature/metrics from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=23206ca ]\n\nLUCENE-7590: add Sorted(Set)DocValuesStats ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15761082",
            "date": "2016-12-19T12:52:01+0000",
            "content": "Commit 321c6f090f04463a8798d090e5426efeabbdc418 in lucene-solr's branch refs/heads/feature/metrics from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=321c6f0 ]\n\nLUCENE-7590: make (Sorted)NumericDocValuesStats public ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15762133",
            "date": "2016-12-19T19:52:45+0000",
            "content": "Commit c083e81e6015d8d52ccd74ad1e966862936fb926 in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c083e81 ]\n\nLUCENE-7590: fix test edge case\n\nIn case all indexed documents were deleted, the test failed to\ncorrectly assert the number of expected missing documents. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15762149",
            "date": "2016-12-19T20:00:36+0000",
            "content": "Commit 4d81eee8a141c68b17c2f75cf6534fb352d94473 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4d81eee ]\n\nLUCENE-7590: fix test edge case\n\nIn case all indexed documents were deleted, the test failed to\ncorrectly assert the number of expected missing documents. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15766041",
            "date": "2016-12-21T04:04:04+0000",
            "content": "Shai Erera I'm a little confused about the description defined here.\n\n\n public LongDocValuesStats(String description) {\n      super(description, Long.MAX_VALUE, Long.MIN_VALUE);\n }\n\n\n\nit was in turn passed to NumericDocValueStats as the name of DV field.\nWhy not use the field as the name of parameter in LongDocValuesStats? ",
            "author": "Zhang Yuan"
        },
        {
            "id": "comment-15766325",
            "date": "2016-12-21T07:07:33+0000",
            "content": "Zhang Yuan where do you see that? I checked master and there's no description in the file at all. Here's the code:\n\n\n    public LongDocValuesStats(String field) {\n      super(field, Long.MAX_VALUE, Long.MIN_VALUE);\n    }\n\n ",
            "author": "Shai Erera"
        }
    ]
}