{
    "id": "SOLR-12303",
    "title": "Subquery Doc transform doesn't inherit path from original request",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "localhost:8983/solr/k_test/search?sort=score desc,uniqueId desc&q.op=AND&wt=json&q={!parent which=parent_field:true score=max}({!edismax v=$origQuery})&facet=false&fl=uniqueId&fl=score&fl=_children_:[subquery]&fl=uniqueId&origQuery=false&qf=parent_field&_children_.fl=uniqueId&_children_.fl=score&_children_.rows=3&spellcheck=false&_children_.q={!edismax qf=parentId v=$row.uniqueId}&rows=1\n\n\n\nFor this request, even though the path is /search, the subquery request would be fired on handler /select.\n\nSubquery request should inherit the parent request handler and there should be an option to override this behavior. (option to override is already available by specifying qt)",
    "attachments": {
        "SOLR-12303.patch": "https://issues.apache.org/jira/secure/attachment/12921899/SOLR-12303.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-03T01:20:06+0000",
            "content": "It might not seem like the right thing to you, but this is how Solr has been working for many years, and is expected behavior.  You can configure Solr to do what you want without a lot of trouble.\n\nTo specify which handler to use on shard requests, define the shards.qt parameter.  In your definition for /search, you can put this in the defaults section so that users do not need to specify it, or maybe in the invariants section so users can't override your choice.\n\nIt looks like the documentation is missing this parameter in the distributed search section.  I can find info about shards.qt in the reference guide if I already know what to search for, but it's not where I would expect it to be.\n\nI will leave this issue open for now so that there can be a discussion about whether Solr should default the shards.qt parameter to the name of the handler.  If such a change is made, it is only going to happen in the next major version \u2013 8.0.  Changing a default like that in a minor version would cause many problems for existing users. ",
            "author": "Shawn Heisey",
            "id": "comment-16461815"
        },
        {
            "date": "2018-05-03T01:25:29+0000",
            "content": "We should probably put the shards.qt parameter in at least one of the handler definitions in the example configuration, possibly in a comment. ",
            "author": "Shawn Heisey",
            "id": "comment-16461822"
        },
        {
            "date": "2018-05-03T07:27:04+0000",
            "content": "Shawn Heisey\nI'm referring to the subquery Doc transformer. Apologies if the heading is misleading.\nBut your explanation for shards.qt is valid for this case too.\n\nAs you have mentioned, All the default behavior should be documented. This behavior should be common for subquery transformer and sharded requests (and in other cases if applicable) ",
            "author": "Munendra S N",
            "id": "comment-16462046"
        },
        {
            "date": "2018-05-03T07:29:19+0000",
            "content": "It might not seem like the right thing to you, but this is how Solr has been working for many years, and is expected behavior. You can configure Solr to do what you want without a lot of trouble.\n\nShawn Heisey, this is not about bare SolrCloud searches, this issue is about [subquery]. And the proposal makes a lot of sense to me. Patches are welcome.   ",
            "author": "Mikhail Khludnev",
            "id": "comment-16462048"
        },
        {
            "date": "2018-05-03T17:07:18+0000",
            "content": "I do not know what this subquery feature you're referring to even is.  Apologies if I got the wrong idea. ",
            "author": "Shawn Heisey",
            "id": "comment-16462794"
        },
        {
            "date": "2018-05-04T06:31:36+0000",
            "content": " SOLR-12303.patch \n1. Changed subqueryAugementer constructor where original request is an argument. With this client can't be passed to the constructor(I'm not sure if that's okay. One way is to add multiple constructors).\n2. I have added tests to check the precedence of qt over parent path. There should also be a test to validate if parent path is inherited(I couldn't find a way to verify this, need help) ",
            "author": "Munendra S N",
            "id": "comment-16463423"
        },
        {
            "date": "2018-05-04T06:45:16+0000",
            "content": "Munendra S N, the patch makes sense. \nThere should also be a test to validate if parent path is inherited(I couldn't find a way to verify this, need help)\nthere might be test solrconfig.xml where the default /select is absent, that should be asserted explicitly, then the current code will fail on [subquery]    ",
            "author": "Mikhail Khludnev",
            "id": "comment-16463428"
        },
        {
            "date": "2018-05-04T13:19:17+0000",
            "content": " SOLR-12303.patch \nTest to verify if parent path is inherited or not.  Created a separate config without /select to test this ",
            "author": "Munendra S N",
            "id": "comment-16463855"
        },
        {
            "date": "2018-05-04T20:09:55+0000",
            "content": "This makes much sense, I'll tweak it a little before commit. Aren't there issues with SolrCloud?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16464339"
        },
        {
            "date": "2018-05-05T07:01:58+0000",
            "content": " SOLR-12303.patch \nSame issue exists for solrCloud too.\nNow, I have added the qt override test for the distributed subquery. Currently, parent handler inheritance test is not added for distributed mode(As it is similar to the standalone mode) ",
            "author": "Munendra S N",
            "id": "comment-16464683"
        },
        {
            "date": "2018-05-05T20:45:02+0000",
            "content": "reworked SOLR-12303.patch. \n\n\tI definitely anxious regarding request.path I've never use it and can't really understand the purpose that's why I use qt.\n\tit boils down to question about inheriting main query params in subquery. It makes sense for qt, but not for fl that's how it's done explicitly\n\tI used existing config.\nAlso, I don't think tests like assertQEx(...    \"subq1.qt\", \"/bleh\",..) make sense at all, they should pass (request fails) now as is. \n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-16464893"
        },
        {
            "date": "2018-05-06T12:31:51+0000",
            "content": "Mikhail Khludnev\nReason for using request.getPath() instead of qt is that in case of HTTP Requests, there would be cases where qt won't be set.\nFor client library(SolrJ) and test cases qt needs to be set to use a different handler. For HTTP Requests, it is not required. \nSo, In case of HTTP request subquery won't inherit path(as qt need not be specified).\nHence, request.getPath() needs to be used.\nIn case of the client libraries, qt and getPath() would be same. In case of HTTP request, it could be different.\nAlso, whenever qt is specified it is used but behavior mentioned in the documentation for HTTP request is different.\n qt is used for HTTP request if /select is path and there is no handler with /select \n https://wiki.apache.org/solr/CoreQueryParameters\n https://wiki.apache.org/solr/SolrRequestHandler#Old_handleSelect.3Dtrue_Resolution_.28qt_param.29\nhttps://lucene.apache.org/solr/guide/7_0/major-changes-in-solr-7.html#changes-to-default-behaviors  - handleSelect change\n\nThe path using request.getPath(), doesn't handle a case,\n\n\tWhen /select is not available and handleSelect=true. it should use qt (I can work on adding this functionality)\n\n ",
            "author": "Munendra S N",
            "id": "comment-16465107"
        },
        {
            "date": "2018-05-06T13:22:53+0000",
            "content": "Oh.. right, Munendra S N! Attached the reproducer see TestSubQueryTransformerDistrib.testNoSelect(). ",
            "author": "Mikhail Khludnev",
            "id": "comment-16465121"
        },
        {
            "date": "2018-05-06T22:06:47+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 3 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   4m 15s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   4m 41s \n  the patch passed  \n\n\n +1 \n  javac  \n   4m 41s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   4m 54s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   4m 41s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   4m 41s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   4m 41s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 117m  0s \n  core in the patch failed.  \n\n\n  \n   \n 135m 46s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\u00a0\n solr.cloud.autoscaling.SearchRateTriggerIntegrationTest \n\n\n\u00a0\n solr.cloud.TestRandomFlRTGCloud \n\n\n\u00a0\n solr.response.transform.TestSubQueryTransformerDistrib \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestLargeCluster \n\n\n\u00a0\n solr.cloud.autoscaling.SearchRateTriggerTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12303 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12922182/SOLR-12303.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 5fc7251 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/83/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/83/testReport/ \n\n\n modules \n C: solr solr/core solr/solr-ref-guide U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/83/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16465301"
        },
        {
            "date": "2018-05-07T05:29:32+0000",
            "content": "SOLR-12303.patch\nMikhail Khludnev\nUsing request.getPath(). Also, handled the special case for handleSelect=true(javadoc might need to be improved for getParentPath()).\nFailing test is passing now\n\n  /**\n   *\n   * {@link CommonParams#PATH} is given more priority than {@link CommonParams#QT}\n   * When handleSelect=true and /select handler is not configured then path would be\n   * picked from {@link CommonParams#QT}\n   * When handleSelect=false and /select is not configured, request would not reach subquery\n   * transformer. (main query itself would fail)\n   * @return main query's path\n   */\n  private String getParentPath() {\n    String path = request.getPath();\n    SolrRequestHandler handler = request.getCore().getRequestHandler(path); // didn't find other ways to check if handler is configured for the path or not\n    if (handler != null) {\n      return path;\n    }\n    return request.getParams().get(CommonParams.QT);\n  }\n\n ",
            "author": "Munendra S N",
            "id": "comment-16465449"
        },
        {
            "date": "2018-05-07T07:57:17+0000",
            "content": "It seems ok. However, I don't like to write a lone to support ancient handleSelect it's mentioned as legacy in Reference Guide, and I can't find any occurrences in test-files.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16465581"
        },
        {
            "date": "2018-05-07T09:12:34+0000",
            "content": "I have added support for handleSelect to have the completeness. Even though it is a legacy parameter, I assume people use it. Once the support for handleSelect is removed then this can be removed.\nLet me know if this needs to be removed, I will remove it. ",
            "author": "Munendra S N",
            "id": "comment-16465656"
        },
        {
            "date": "2018-05-07T13:16:15+0000",
            "content": "hm, in this case it's worth to bring back that dedicated solrconfig.xml, introduce handleSelect and default attributes assign placeholder values to them, and set these props randomly in test setup.  eg now the line return request.getParams().get(CommonParams.QT); lacks test coverage.    ",
            "author": "Mikhail Khludnev",
            "id": "comment-16465899"
        },
        {
            "date": "2018-05-07T17:23:40+0000",
            "content": " SOLR-12303.patch \nI have added test when handleSelect=true(handleSelect=false is default previous tests covers this case) and default is enabled/disabled ",
            "author": "Munendra S N",
            "id": "comment-16466215"
        },
        {
            "date": "2018-05-08T04:37:41+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 3 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m 23s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m 20s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m 20s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 30s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m 20s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m 20s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   2m 20s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 182m 43s \n  core in the patch failed.  \n\n\n  \n   \n 193m 20s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\u00a0\n solr.cloud.TestRandomFlRTGCloud \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestGenericDistributedQueue \n\n\n\u00a0\n solr.security.hadoop.TestSolrCloudWithHadoopAuthPlugin \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12303 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12922284/SOLR-12303.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 3e8f31e \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/84/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/84/testReport/ \n\n\n modules \n C: solr/core solr/solr-ref-guide U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/84/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16466848"
        },
        {
            "date": "2018-05-08T07:15:55+0000",
            "content": "Mikhail Khludnev\nAmong the failed tests, \n\n\tsolr.cloud.autoscaling.IndexSizeTriggerTest - Wasn't able to reproduce(succeeds in my local)\n\tsolr.cloud.autoscaling.sim.TestGenericDistributedQueue - marked as BadApple\n\tsolr.security.hadoop.TestSolrCloudWithHadoopAuthPlugin - Wasn't able to reproduce(succeeds in my local)\n\tsolr.cloud.TestRandomFlRTGCloud - fails continously\n\n\n\nsolr.cloud.TestRandomFlRTGCloud - One of the tests fails because of the subquery change.\nThe test randomly adds the subquery transformer for the RTG request.\nWhen subquery is added to RTG(the only /get path is specified) subquery throws NPE(getDocList)\n\nWhat should be the fix for this?? Fixing the test case is straightforward (by adding the subquery's qt parameter). What should be the actual behavior of subquery with RTG?? ",
            "author": "Munendra S N",
            "id": "comment-16466990"
        },
        {
            "date": "2018-05-08T11:45:11+0000",
            "content": "he-he. /get is an example of search handler which has no sense for inheriting in [subquery]. It makes me thick that it's better to keep existing code as-is and just mention this trap and workaround it the refguide.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16467273"
        },
        {
            "date": "2018-05-08T12:18:06+0000",
            "content": "Mikhail Khludnev\nI concur with you, it is not a good idea to introduce change without completeness.\nAs you suggested, documentation should be changed to mention, \n\nsubquery would use /select by default and search handler can be changed for subquery using subquery's qt parameter\n\n ",
            "author": "Munendra S N",
            "id": "comment-16467327"
        },
        {
            "date": "2018-05-09T09:46:50+0000",
            "content": "Commit ef8edbab005de326cd0ae7a7db41511c13711d16 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ef8edba ]\n\nSOLR-12303: documenting default [subquery].qt trap. ",
            "author": "ASF subversion and git services",
            "id": "comment-16468616"
        },
        {
            "date": "2018-05-09T09:49:00+0000",
            "content": "Commit 5021fb185fdad94b36cbdddf7d5e4f2d056213a0 in lucene-solr's branch refs/heads/branch_7x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5021fb1 ]\n\nSOLR-12303: documenting default [subquery].qt trap. ",
            "author": "ASF subversion and git services",
            "id": "comment-16468619"
        },
        {
            "date": "2018-05-09T12:28:07+0000",
            "content": "So, Munendra S N, what we are going to do? Put it to Won't fix?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16468776"
        },
        {
            "date": "2018-05-11T04:34:46+0000",
            "content": "Mikhail Khludnev\nApologies missed the last message. It makes sense to put it as Won't fix ",
            "author": "Munendra S N",
            "id": "comment-16471483"
        }
    ]
}