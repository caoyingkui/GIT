{
    "id": "SOLR-6741",
    "title": "IPv6 Field Type",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "It would be nice if Solr had a field type which could be used to index IPv6 data and supported efficient range queries.",
    "attachments": {
        "SOLR-6741.patch": "https://issues.apache.org/jira/secure/attachment/12684539/SOLR-6741.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-12-01T23:41:12+0000",
            "author": "Hoss Man",
            "content": "It would be nice if Solr had a field type which could be used to index IPv6 data and supported efficient range queries. \n\nbetter still would be a field type that understood how to parse & index both IPv4 and IPv6 and could likewise handle range & \"prefix\" (ie: ip:169.229.136.*) queries of both.\n\nbut i think doing the IPv6 part (correctly) is kind of blocked by LUCENE-5596 and/or LUCENE-5879.\n\nWe could do something IPv4 specific in the meantime by wrapping TrieLongField \u2013 but personally i'd rather have one single well done \"IPField\" class that deals with bytes under the hood and handles IPv4 string parsing as a slightly special case - storing them internally as IPv6 mapped addrs...\nhttps://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses ",
            "id": "comment-14230695"
        },
        {
            "date": "2014-12-02T03:10:38+0000",
            "author": "Steve Davids",
            "content": "I attached a patch for IPv4 support which allows a prefix query, range queries, and CIDR notation which extends a TrieLongField. Hopefully this can serve as a good starting point. Lloyd Ramey was also a contributor for this code. ",
            "id": "comment-14230903"
        },
        {
            "date": "2015-04-17T23:04:38+0000",
            "author": "Shawn Heisey",
            "content": "Something related, but not exactly the same, that would be really awesome - support for general 128 bit numbers.  That type could be used as a building-block for an IPv6 type.\n\nThis would allow more efficient encoding of UUIDs for indexes with billions of documents, among other things.\n\nEven better would be if the new type was a Trie type with precisionStep support. ",
            "id": "comment-14500868"
        },
        {
            "date": "2015-04-26T12:20:22+0000",
            "author": "David Smiley",
            "content": "This should definitely use Lucene's new & experimental \"auto prefix terms\"; Hoss mentioned that.  This is not blocked by LUCENE-5596.  We'd need a new Solr field type with the sugar like in the IPv4 patch here but that which does a range between 2 terms.  That will functionally work even without \"auto prefix terms\".  Then configure the codec appropriately and then the search will be much faster (and indexing a bit slower too of course).\n\nFWIW Lucene spatial's NumberRangePrefixTreeStrategy could work, but it needs a subclass of NumberRangePrefixTree and presently the only one that exists is DateRangePrefixTree.  If you need to index IPv6 ranges, then this should be faster than intersecting 2 range queries on a start and end field. ",
            "id": "comment-14513017"
        },
        {
            "date": "2015-08-14T20:32:25+0000",
            "author": "Erik Hatcher",
            "content": "I bit off more than I could chew - unassigning from myself for now.  After digesting the comments here, it looks like a fair bit more complex work is needed to get this as polished as folks would like. \n\nThe original patch works great (nice work!) on 5.x, but does not compile on trunk because numericValue() API removal.  \n\nShould we get the current patch fixed up for trunk and get it committed as-is?  Or entirely hold off until all the implementation ideas discussed above are tackled? ",
            "id": "comment-14697704"
        },
        {
            "date": "2015-10-13T23:41:36+0000",
            "author": "Erick Erickson",
            "content": "I'm want to float the notion that we'll need to specialized IPv4 support until there are no IPv4-only IP addresses people want to index. In very large volume situations (think log files), requiring that a field support IPv6 when you know that IPv4 is all you're interested in seems wasteful to require IPv6 capabilities space-wise as well as making queries more complex and consuming unnecessary memory. Even if there's a 128 bit native type. \n\nWe could, in future if/when IPv6 support is added allow a hint in the schema file to use this code in future, something like:\n\n<field name=\"ip\" type=\"ipAddress\" indexed=\"true\" stored=\"true\" multiValued=\"false\" ipv4only=\"true\" />\n\nwhere ipv4only defaults to \"false\". If that is desirable, I'd argue that this patch is not wasted effort and is in fact a building block for IPv6 support.\n\nStraw-man proposal:\n\n1> break this out into a separate JIRA, having an IPv4 patch under an IPv6 header is...odd\n2> Change the class names and field type to reference IPv4\n3> Fix it up for trunk and commit.\n\nWhat do people think? ",
            "id": "comment-14955952"
        },
        {
            "date": "2015-10-13T23:46:42+0000",
            "author": "Yonik Seeley",
            "content": "+1, if we can get ipv4 working today, no reason not to do so. ",
            "id": "comment-14955964"
        },
        {
            "date": "2015-10-14T00:14:14+0000",
            "author": "Erick Erickson",
            "content": "Happens that I have a flight tomorrow, I may be able to give it a preliminary look-see. ",
            "id": "comment-14955994"
        },
        {
            "date": "2016-03-09T03:19:44+0000",
            "author": "Steve Davids",
            "content": "Any updates on this ticket regarding rolling with IPv4 support with IPv6 being added later? ",
            "id": "comment-15186415"
        },
        {
            "date": "2016-03-09T03:57:14+0000",
            "author": "Erick Erickson",
            "content": "I've assigned this to myself, but I'm not entirely sure when I'll be able to work on it so if anyone's interested it won't hurt my feelings if they take it over.\n\nGoing to dust this off and commit it if it works, as I remember it's got some pretty good unit tests & etc.\n\nI don't think waiting for IPV6 (and biginteger) support is necessary, we can fold this into IPV6 support whenever IPV6 gets under way. ",
            "id": "comment-15186454"
        },
        {
            "date": "2016-03-09T04:06:01+0000",
            "author": "Erick Erickson",
            "content": "Bah: Then I just looked and LUCENE-5879 is already committed so I don't think committing an IPV4-only type is a good idea. So I'll un-assign it to myself as I won't have time to enhance this patch to work on both any time soon.\n\nIt would still be a good thing for IPV4 to be more efficient space-wise than IPV6, possibly based on a hint in the schema. That said, I have no clue whether LUCENE-5879 already \"does the right thing\" here.\n\nThe unit tests in this patch are pretty cool IIRC, so if anything is done with this it'd be a good idea to use them as a base for IPV6-specific tests. ",
            "id": "comment-15186461"
        },
        {
            "date": "2016-03-09T04:11:05+0000",
            "author": "David Smiley",
            "content": "Not on the Solr end, but IMO it's just as well since only weeks ago did LUCENE-7043 InetAddressPoint ged added to Lucene. ",
            "id": "comment-15186465"
        },
        {
            "date": "2016-05-31T20:03:34+0000",
            "author": "Erick Erickson",
            "content": "Again assigned it to myself but if someone else wants to pick this up, please feel free.\n\nI have no idea how this plays with LUCENE-7043 at all, but it really looks like it should use the InetAddressPoint. I have no idea when I'll be able to even take a look. This JIRA though has a bunch of tests that we should respect and possibly expand to IPV6 as well.\n\nI've had an offline conversation that claims that the current patch should have this change:\n protected static boolean isCidrPrefixInteger(String str) \n{\n    return str.matches(\"^(3[0-2]|[1-2][0-9]|[1-9])$\");\n  }\n\nNot putting it in the patch pending review of the patch itself to see how it would all fit. ",
            "id": "comment-15308500"
        },
        {
            "date": "2018-02-14T16:26:05+0000",
            "author": "Erick Erickson",
            "content": "OK, I'm not going to get to this, so un-assigning. ",
            "id": "comment-16364362"
        }
    ]
}