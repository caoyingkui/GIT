{
    "id": "SOLR-6562",
    "title": "Function query calculates the wrong value",
    "details": {
        "affect_versions": "4.9",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "This calculation fl=sub(sum(abs(sub(1416906516710,1416783600000)),abs(sub(103680000000000,1416906516710))),102263216400000) should return 0. But the calculated value is 8388608",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Xu Zhang",
            "id": "comment-14148402",
            "date": "2014-09-25T22:29:45+0000",
            "content": "This is floating number precision nature, when using float to represent big numbers, we will lose precision. Do we really need to support arbitrary-precision numbers ? "
        },
        {
            "author": "Stefan Neum\u00fcller",
            "id": "comment-14149021",
            "date": "2014-09-26T10:53:08+0000",
            "content": "I'm using function queries to calculate dates. For example to add some hours to a date. And here I have problems with the precision. The result differs for 1-3 minutes. It would be nice to allow solr to use double precision. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14153532",
            "date": "2014-09-30T18:40:15+0000",
            "content": "\nThis is currently working as designed \u2013 not a bug, but i've opened some realted improvement issues i've had in the back of my mind and your report reminded me.\n\nthe ValueSource implementations (the internals of function queries) support math operations on diff data types (int, long, float, double, etc...) corrisponding to the lowest level FieldType support in lucene DocValues (the same API as used by the FieldCache).\n\nHowever: at present, there is no general purpose way to indicate which datatype you'd like to see used when doing math operations (neither from a bottom up \"the source data is ints, so do int math\" or a top down \"i ultimately want a long, so do long math\") standpoint.  \n\nSince the primary purpose of function queries is to be used in boosting query scores, which are alreayd floating point \u2013 that's what gets used at the moment.\n\nI'm using function queries to calculate dates. For example to add some hours to a date.\n\nThe \"ms()\" function is specifically designed to coerce millisecond based (long) math when subtraction on date fields like you are attempting in your original examples.  when combining the results of ms() inside of a \"sm()\" function that will still be done using floating point math by default however\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14153535",
            "date": "2014-09-30T18:40:57+0000",
            "content": "resolving invalid since this is function as designed \u2013 see linked issues for future improvement. "
        }
    ]
}