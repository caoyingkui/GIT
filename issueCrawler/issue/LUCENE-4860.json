{
    "id": "LUCENE-4860",
    "title": "PostingsHighlighter should pass field name to PassageFormatter.format?",
    "details": {
        "components": [],
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "If the app needs to render different fields (eg multi-valued vs single-valued) differently it's tricky now.\n\nYou can do Passage[0].getMatchTerms()[0].field(), but then that doesn't work if that field hit the empty highlight.\n\nI think we should pass the fieldName to format directly?  And then maybe change getMatchTerms() to return BytesRef[] instead (the field name is redundant: they are all the same for all passages passed to format).",
    "attachments": {
        "LUCENE-4860.patch": "https://issues.apache.org/jira/secure/attachment/12574578/LUCENE-4860.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-03-20T16:13:49+0000",
            "content": "Yeah the current API is bogus. The idea of the getMatchTerms was just thinking about different terms having different colors, but the API was never adjusted after multiple fields were added to this thing.\n\nSo I think passing fieldName + changing matchTerms to just be the bytes sounds good. \n\nAlternatively we could put fieldName in the passage too, but thats confusing because you have N of them. ",
            "author": "Robert Muir",
            "id": "comment-13607784"
        },
        {
            "date": "2013-03-20T17:28:55+0000",
            "content": "Here's one possible approach ... it just add .getFormatter/.getScorer each taking String field, so subclass can pick an impl up front depending on the field name. ",
            "author": "Michael McCandless",
            "id": "comment-13607890"
        },
        {
            "date": "2013-03-20T17:41:11+0000",
            "content": "New patch, cutting Passage.getMatchTerms from Term[] -> BytesRef[]. ",
            "author": "Michael McCandless",
            "id": "comment-13607905"
        },
        {
            "date": "2013-03-21T22:14:21+0000",
            "content": "Patch, creating & reusing the default PassageScorer/Formater once per highlight request ...\n\nI think it's ready. ",
            "author": "Michael McCandless",
            "id": "comment-13609580"
        },
        {
            "date": "2013-03-21T22:50:29+0000",
            "content": "New patch, adding back lost assert in one test and adding back null check for the scorer... ",
            "author": "Michael McCandless",
            "id": "comment-13609640"
        },
        {
            "date": "2013-03-22T01:12:22+0000",
            "content": "+1 ",
            "author": "Robert Muir",
            "id": "comment-13609769"
        },
        {
            "date": "2013-03-22T14:52:29+0000",
            "content": "[trunk commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1459816\n\nLUCENE-4860: per-field control over scoring and formatting ",
            "author": "Commit Tag Bot",
            "id": "comment-13610348"
        },
        {
            "date": "2013-03-22T15:08:03+0000",
            "content": "[branch_4x commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1459817\n\nLUCENE-4860: per-field control over scoring and formatting ",
            "author": "Commit Tag Bot",
            "id": "comment-13610360"
        },
        {
            "date": "2013-05-10T10:33:21+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653902"
        }
    ]
}