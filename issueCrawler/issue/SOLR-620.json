{
    "id": "SOLR-620",
    "title": "Velocity Response Writer",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Add a Velocity - http://velocity.apache.org - response writer, making it possible to generate a decent search UI straight from Solr itself.  Designed to work standalone or in conjunction with the JSON response writer (or SolrJS) for Ajaxy things.",
    "attachments": {
        "SOLR-620-velocity.properties.patch": "https://issues.apache.org/jira/secure/attachment/12405236/SOLR-620-velocity.properties.patch",
        "SOLR-620.zip": "https://issues.apache.org/jira/secure/attachment/12393008/SOLR-620.zip",
        "SOLR-620.patch": "https://issues.apache.org/jira/secure/attachment/12385456/SOLR-620.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erik Hatcher",
            "id": "comment-12611421",
            "date": "2008-07-08T01:05:25+0000",
            "content": "First draft - very basic operation.  Must also add Velocity, Commons Lang, and Commons Collections to the classpath.\n\nExample: http://localhost:8983/solr/select?q=ipod&wt=velocity\n\nWith an optional template parameter, specifying the template name under conf/velocity (&template=default) "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12611422",
            "date": "2008-07-08T01:07:38+0000",
            "content": "The JARs used to build this example (probably not the most current versions, but what I happened to have laying around). "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12611424",
            "date": "2008-07-08T01:11:19+0000",
            "content": "There are a zillion bells and whistles that can be added to this, lots of Velocity parameters that can be controlled.  We'll probably want to have some custom Solr macros to make templating life a lot easier.  For example, we'll need to make navigating the DocList easier. "
        },
        {
            "author": "Matthias Epheser",
            "id": "comment-12612436",
            "date": "2008-07-10T11:16:37+0000",
            "content": "Just added also the request object to the context for my very first implementation of a solrjs, so the searcher is avaliable for $request.getSearcher().doc(id).\n\nI think there are two possible ways to get make easier:\n\n\tWrapping the resonse in an object (maybe SolrReponse from solrj), providing handy getters and loops etc.\n\tCreating velocity macros\n\n\n\nI'll experiment a bit with both solutions and comment again. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12612527",
            "date": "2008-07-10T15:07:31+0000",
            "content": "perhaps look at convrting the DocList to a SolrDocumentList.  Then velocity could use the solrj functions.\n\ntake a look at: org.apache.solr.update.DocumentBuilder \u2013 it has a function loadStoredFields that you can use to convert a Document to a SolrDocument. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12612531",
            "date": "2008-07-10T15:15:06+0000",
            "content": "Here's an updated patch with a bit more meat to the default.vm, also adding in the SolrQueryRequest to the Velocity context.   \n\nI've done it the hard way for now, by navigating the API as rawly as it gets to display the documents.   Doing it this way for a bit will inform what kind of macros or other context helpers we need to make the view as clean as possible. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12612534",
            "date": "2008-07-10T15:18:05+0000",
            "content": "Matthias - I removed your patch to keep it clean here.  If you name the patch SOLR-620.patch, it will grey out previous versions.  Two comments on your patch, be sure to flag your patch as being ok to use within the ASF, and also be sure to svn add (locally only of course) the .vm files so they appear in the patch too. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12612535",
            "date": "2008-07-10T15:21:55+0000",
            "content": "Another handy method to get all the documents is SolrIndexSearcher#readDocs(Document[] docs, DocList ids) - however it is probably best for memory usage (or is it?) to continue to use the DocList#iterator() so only a single document is loaded at a time in case there are large field values or a lot of documents requested.   Although this point will be a bit moot when Velocity layouts are implemented (something I plan to do eventually) where the original template is generated into a string buffer and then another wrapping template is generated around it. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12612537",
            "date": "2008-07-10T15:26:27+0000",
            "content": "however it is probably best for memory usage (or is it?) to continue to use the DocList#iterator() so only a single document is loaded at a time\n\nYes.  That's why I deferred loading documents until response writing.... so things could be streamed one doc at a time. "
        },
        {
            "author": "Matthias Epheser",
            "id": "comment-12612801",
            "date": "2008-07-11T08:22:49+0000",
            "content": "I've done it the hard way for now, by navigating the API as rawly as it gets to display the documents. Doing it this way for a bit will inform what kind of macros or other context helpers we need to make the view as clean as possible.\n\nPlayed around a bit with macros and their capabilities, I think creating a java context helper class is the better way. The velocity template should make it easy to create very custom html. With macros, we could \"hide\" the complex method calls, but eg. creating a shortcut for a loop AND customize the html inside this loop will not be possible easily. \n\nAnd, correct me if I'm wrong, your \"shortcut setters\" like \"#set($iterator=$response.values.response.iterator())\" have to be declared in every template file, cause template libraries cannot share variables, and macros only produce Strings and no other return types.\n\nSo I suggest a small java wrapper object that still uses the doclist for performance considerations and only provides handy convenience methods like\n\ngetResultIterator() -> iterator of ids, used in #foreachs\ngetDocFieldValue(docId, fieldName)\netc.\n\nso a custom result view looks like this:\n#foreach($docid in $helper.getResultIterator())\n<li>$helper.getDocFieldValue(docid, \"title\")</li>\n#end\n\nThis object can be passed to the velocity context and may be accessible to all custom templates, without changing the data's nature (doclist to momory objects or the like). I'll have a test version of thos approch ready this evening. \n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12612891",
            "date": "2008-07-11T14:35:48+0000",
            "content": "Isn't this a good candidate for a contrib project? \n\n\tIt introduces quite a few dependencies Solr core does not need\n\tMost of the users do not deploy the webapp in Solr itself (for security reasons)\n\n\n\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12612894",
            "date": "2008-07-11T14:43:32+0000",
            "content": "Sure, contrib is fine.   Where it ends up isn't a big deal to me.\n\nAs for how Solr is deployed - having the web tier and Solr be one and the same (in a read-only configuration of course) is a pretty compelling way to deploy, I'd think.  Why separate Solr and the UI when using load balanced replicated servers?     Of course it depends on the needs of the application, but keeping a separate web app to regurgitate what Solr returns can be an unnecessary deployment hassle. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12615320",
            "date": "2008-07-21T17:32:38+0000",
            "content": "Looking at a recent version of this, it seems best if we can reuse the NamedList<Object> parsing from solrj rather then have the velocity writer add helper functions to access parts of the response.\n\nI just posted SOLR-641 to expose this parsing form EmbeddedSolrServer "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12616666",
            "date": "2008-07-24T21:37:06+0000",
            "content": "check SOLR-654 for a way to construct a SolrResponse from a given class \u2013 this way the velocity writer can have access to any utility functions a SolrResponse implementation has. "
        },
        {
            "author": "Matthias Epheser",
            "id": "comment-12616896",
            "date": "2008-07-25T14:06:59+0000",
            "content": "According to the patches Ryan mentioned above (SOLR-641 and SOLR-654, I created an update of VelocityResponseWriter.\n\n It now contains the following configuration possibilities:\n\n\n\tvl.template: The template file to use inside conf/velocity/\n\tvl.json: If this param is true, the output of the template is wrapped inside a javascript function, eg myFunction( <actual output> ). This is necessary if we want to use JSON requests out of a javascript client.\n\tvl.content: The content type of the response. Default is text/html in standard mode, and text/json in vl.json=true mode.\n\tvl.response: To provide an implementation of SolrResponse inside the template, specify the class name of the implementation. For convenience, it looks inside the package \"org.apache.solr.client.solrj.response\", so you only have to choose  eg. QueryResponse, LukeResponse, MultiCoreResponse. Custom classes may be accessed using the full qualified class name, eg. my.custom.package.CustomResponse\n\n\n\nRegardless of the  vl.response, there is always an instance of RawRequestHelper inside the context, this provides access to the SolrQueryRequest and SolrQueryResponse, as well as convenience methods like getResultIterator() or getRequestParam() "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12616953",
            "date": "2008-07-25T17:12:50+0000",
            "content": "Matthias - I'm perplexed by the JSON feature.   The intention was to use the Velocity writer to produce templated output, but if you want JSON data, use wt=json, not the velocity one. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12616969",
            "date": "2008-07-25T17:49:56+0000",
            "content": "the JSON feature gets around a javascript limitation for cross-site scripting.  If you enclose your HTML within a JSON tag, you can access from any server \u2013 otherwise it has to come from the same machine.\n\nthe json feature just sends your velocity template output (perhaps html) surrounded with:\n\n  { result: \"your template output here (escaped for json)\" }\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12642622",
            "date": "2008-10-25T14:31:07+0000",
            "content": "Would it make sense to allow passing of the velocity template in a parameter for extra on-the-fly flexibility? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12642787",
            "date": "2008-10-26T11:06:10+0000",
            "content": "That's an interesting idea, Yonik.  Easy enough to implement.  I'm not quite sure how useful it'd be - I'm curious about what use cases this would be leveraged.  I'll toss it in though.\n\nThe same feature would be useful to the XsltResponseWriter also, I'd think.   "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12643580",
            "date": "2008-10-29T18:28:47+0000",
            "content": "Attached is a new patch.  Sorry Matthias, this doesn't included your changes (mostly the JSON wrapper, something I've yet to fully understand the need for).\n\nThis new patch allows for templates to be specified as parameters.  &template.hit=$doc.get('id'), for example, overrides the hit.vm template found in conf/velocity. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12643595",
            "date": "2008-10-29T18:40:48+0000",
            "content": "http://wiki.apache.org/solr/VelocityResponseWriter contains usage instructions and examples. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12643646",
            "date": "2008-10-29T20:48:46+0000",
            "content": "This .zip supercedes the previous patches (except for the JSON wrapping feature from Matthias - no worries, that part will come back as needed).  The .zip slides into the contrib/ structure as \"velocity\".  Unzip, then run \"ant dist\" in contrib/velocity to have the example configuration all set up for this. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12644266",
            "date": "2008-10-31T11:56:22+0000",
            "content": "Updated .zip.  Simply extract to contrib, then start up the example (from example/ subdirectory): java -Dsolr.solr.home=../contrib/velocity/src/main/solr/ -jar start.jar\n\nThis adds pagination, CSS, a decent facet navigation, reasonable document view, and JQuery integration (just for toggling explanation hit detail for now). "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12644328",
            "date": "2008-10-31T16:16:00+0000",
            "content": "Looks good.\n\nI think you should go ahead and commit it.  It is easier to keep track of the changes once it is committed. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12644373",
            "date": "2008-10-31T17:34:05+0000",
            "content": "Thanks Ryan!  Committed.   Needs work, but it's a good starting point, and usable as is. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12644379",
            "date": "2008-10-31T17:54:20+0000",
            "content": "don't know why, but FF 3.0.3 (on mac) does not display anything unless we change:\n\nIndex: contrib/velocity/src/main/solr/conf/velocity/browse.vm\n===================================================================\n--- contrib/velocity/src/main/solr/conf/velocity/browse.vm\t(revision 709500)\n+++ contrib/velocity/src/main/solr/conf/velocity/browse.vm\t(working copy)\n@@ -7,7 +7,7 @@\n <head>\n   <title>#param('title')</title>\n   <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\n-  <script type=\"text/javascript\" src=\"/solr/admin/jquery-1.2.3.min.js\"/>\n+  <script type=\"text/javascript\" src=\"/solr/admin/jquery-1.2.3.min.js\"></script>\n   <link rel=\"stylesheet\" type=\"text/css\" href=\"/solr/admin/file?file=/velocity/main.css&contentType=text/css\"/>\n </head>\n <body>\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12644380",
            "date": "2008-10-31T18:02:30+0000",
            "content": "What are your thoughts on what should go in the velocity contrib src/main/solr files?\n\nI don't like that it duplicates all the stuff in /trunk/example/solr\n\nIn my view (influenced by wicket), it would be great if the velocity templates were packaged in the .jar files rather then in the config directory.  "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12644474",
            "date": "2008-11-01T00:37:29+0000",
            "content": "As for the duplication - I agree.... really all I'm after is getting an example configuration, much like data import handler (which also duplicates an entire configuration, mostly).  All this VelocityResponseWriter needs is to be registered in solrconfig.xml (where's Spring when you need it, such that dropping in a JAR is all that is needed to wire in a new component?!    Suggestions on improving, or just hardwire it into the default example config, are welcome?\n\nRegarding Velocity template location, Velocity has a very flexible resource loader mechanism.  Right now it's hardcoded to use the custom parameter loader (&template.<template name>=<body>) or the file system.  Just wiring in the built-in classpath resource loader won't be enough... we need a SolrResourceLoader pass-through to pick up templates in JAR files in conf/lib - that'll be real handy.\n\nI'll work on the JAR loading capability, shouldn't be too hard to toss in there. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12644491",
            "date": "2008-11-01T04:59:54+0000",
            "content": "Ok, got your JAR loader in place.  At this point, templates get found first in params (&template.name=body), then the file system (either v.base_dir property value, bad name I know, or conf/velocity), then the JARs.  This gives overridability down to the request level.\n\nThe one caveat to the JAR loader... it's actually just a front-end to SolrResourceLoader#openResource(), so it can open files in the conf directory (or via absolute path, it seems!), as well as from conf/lib/*.jar's and the Solr classpath itself.\n\nWe'll make the Velocity properties more flexibly managed as we evolve this.\n\nTemplates on the file system really make the most sense to me, but we'll let Velocity's flexibility shine through. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12647706",
            "date": "2008-11-14T19:33:41+0000",
            "content": "Just noticed that this contrib is not added into the release/signing/packaging stuff in the top level build. "
        },
        {
            "author": "Matthias Epheser",
            "id": "comment-12648303",
            "date": "2008-11-17T20:12:01+0000",
            "content": "As discussed on the mailinglist, this patch adds the removed json wrap and response writer capabilities. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12648577",
            "date": "2008-11-18T11:18:03+0000",
            "content": "I have added in the json escaping/wrapping feature, renamed all parameters (including template overrides) to use the \"v.\" prefix.  But I did not add the rawResponse feature yet.  It needs more thought, and no known example is using it yet.  I'd prefer that SolrJ's SolrQuery and SolrResponse objects be put into the Velocity context - making this portable between embedded and HTTP Solr calls.  Using the SolrJ API will alleviate the need that rawResponse was filling, I believe.   "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12698102",
            "date": "2009-04-11T15:50:24+0000",
            "content": "I got my HTML page with garbage characters because my template encoding is UTF-8 but velocity expects it ISO-8859-1 as default (default velocity.properties file). I think it is necessary we can override default properties. How do people think applying the patch? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12698116",
            "date": "2009-04-11T17:55:02+0000",
            "content": "Yeah, I figured we'd need to provide a mechanism to load velocity.properties, or at least specify them in some manner through config.  Does the engine.init calls after setting some properties lose those values originally set?   Maybe velocity.properties should be loaded from SolrResourceLoader so that it can live on the classpath? "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12698148",
            "date": "2009-04-12T01:27:35+0000",
            "content": "Does the engine.init calls after setting some properties lose those values originally set?\n\nAccording to the Velocity document, the sequence of ve initialization will be engine.setProperty(ies) then engine.init.\n\nhttp://velocity.apache.org/engine/releases/velocity-1.6.2/developer-guide.html#separate\n\nAnd I checked VelocityEngine through debugger. It was no problem.\n\nMaybe velocity.properties should be loaded from SolrResourceLoader so that it can live on the classpath?\n\nRight. I updated the patch.\n\nI'd like to commit if there is no objections. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12698201",
            "date": "2009-04-12T10:08:02+0000",
            "content": "Looks good, no objections at all.  Commit when ready. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12698304",
            "date": "2009-04-13T01:47:19+0000",
            "content": "velocity.properties was committed revision 764347. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12698352",
            "date": "2009-04-13T09:06:41+0000",
            "content": "I think we can resolve this issue and open new ones for any additional work needed on the VelocityResponseWriter. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775513",
            "date": "2009-11-10T15:51:43+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}