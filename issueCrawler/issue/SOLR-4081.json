{
    "id": "SOLR-4081",
    "title": "QueryParsing.toString(Query,IndexSchema) does not properly handle WrappedQuery",
    "details": {
        "affect_versions": "4.0",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "QueryParsing.toString() is a method that uses knowledge of various Query implementations to properly render a query string. For example, using toString with a BooleanQuery might return a string like this:\n\nowner_id:18935 (acl_id:9451 acl_id:11634 acl_id:15678 acl_id:16791)\n\nWhen using localParams such as \"\n{!cache=false cost=0}\n\", the query turns into a WrappedQuery wrapping a BooleanQuery. This is not understood by QueryParsing.toString(), which calls WrappedQuery.toString() instead, returning a string like this:\n\n{!cache=false cost=0}owner_id:w (acl_id:` acl_id:Ik acl_id:Zr acl_id:z> acl_id:)\n\nThe probable (untested) solution will be to include a couple of lines at the top of toString(), as shown below. A further optimization would be to create \"void WrappedQuery.getOptions(Appendable out)\", to avoid creating a StringBuilder inside WrappedQuery.getOptions().\n\n\npublic static void toString(Query query, IndexSchema schema, Appendable out, int flags) throws IOException {\n  boolean writeBoost = true;\n\n  // Begin new code to handle WrappedQuery\n  if (query instanceof WrappedQuery) {\n    WrappedQuery q = (WrappedQuery)query;\n    out.append (q.getOptions());\n    query = q.getWrappedQuery();\n  }\n  // End new code to handle WrappedQuery\n\n  if (query instanceof TermQuery) {\n    ...",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13498467",
            "date": "2012-11-16T00:13:03+0000",
            "content": "Thanks Eirik, I've committed a fix to trunk & 4x.\nhttp://svn.apache.org/viewvc?rev=1410115&view=rev "
        }
    ]
}