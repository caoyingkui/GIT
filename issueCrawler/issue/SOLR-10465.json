{
    "id": "SOLR-10465",
    "title": "setIdField should be deprecated in favor of SolrClientBuilder methods",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrJ"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Now that builders are in place for SolrClients, the setters used in each SolrClient can be deprecated, and their functionality moved over to the Builders. This change brings a few benefits:\n\n\n\tunifies SolrClient configuration under the new Builders. It'll be nice to have all the knobs, and levers used to tweak {{SolrClient}}s available in a single place (the Builders).\n\treduces SolrClient thread-safety concerns. Currently, clients are mutable. Using some SolrClient setters can result in erratic and \"trappy\" behavior when the clients are used across multiple threads.\n\n\n\nThis subtask endeavors to change this behavior for the setIdField setter on all SolrClient implementations.",
    "attachments": {
        "SOLR-10465.patch": "https://issues.apache.org/jira/secure/attachment/12943949/SOLR-10465.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-10-15T13:37:36+0000",
            "content": "Patch adds method withIdField to the builder.  Deprecates setIdField method. ",
            "author": "Charles Sanders",
            "id": "comment-16650221"
        },
        {
            "date": "2018-10-18T02:51:43+0000",
            "content": "Not sure the linking is working, so repeating SOLR-11868.\u00a0\n\nI suggest we rename this to something else, perhaps \"withRoutingField\"? The linked Jira points out that this really has nothing to do with any field named \"id\", whether it's a <uniqueKey> or not. It's really the field used for computing what shard the doc goes to whether it's \"id\" or something totally different.\n\nIf this gets committed, please close the linked Jira as well. ",
            "author": "Erick Erickson",
            "id": "comment-16654556"
        },
        {
            "date": "2018-10-18T13:25:00+0000",
            "content": "Updated the patch.  Changed idField to routingField as suggested in the previous comment. ",
            "author": "Charles Sanders",
            "id": "comment-16655222"
        },
        {
            "date": "2018-10-19T19:33:32+0000",
            "content": "Thanks for the cross-reference Erick!  Def would've missed that.  And I agree on the rename\n\nAnd thanks for taking interest in this Charles.  I didn't realize this when I created the JIRA, but I think the fate of this setter should be tied to that of setDefaultCollection (see SOLR-10466).  If we lock down the routing-field only, we're kindof undercutting setDefaultCollection (that method becomes useless/unusable unless several of your collections all have the same routing-field-name).  This point also extends to the SolrClient methods which take in an overriding collection.  If we lock down the routing field, we're making SolrClient.add(String collection, SolrInputDocument doc) tougher to use.\n\nI think the end goal of thread-safety is still something to aim for, but I'm not sure moving this setter to the builder now is the right way to go with the current obstacles.  Sorry to only catch this after you'd put work into it Charles.  Sorry to waste your time; I should have caught some of the problems here earlier and closed this jira out (or at least posted a word-of-warning here).  That's on me and I'm sorry!\n\nIf you're still interested in helping out and improving this area of the code, there are some other steps we can take though.  We can deprecate/rename the method to setRoutingField or something similar as Erick suggested.  There's also other setters that cause thread-safety issues, where the simple move-it-to-the-builder approach still makes sense.  Examples of this are: SOLR-10467, SOLR-10468, SOLR-10462, and SOLR-10461.  Sorry again for the confusion/trouble. ",
            "author": "Jason Gerlowski",
            "id": "comment-16657322"
        },
        {
            "date": "2018-10-22T12:21:08+0000",
            "content": "Jason Gerlowski  No problem.  Thanks for the update. ",
            "author": "Charles Sanders",
            "id": "comment-16658931"
        }
    ]
}