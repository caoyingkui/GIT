{
    "id": "SOLR-9876",
    "title": "Reuse CountSlotArrAcc internal array for same level subFacets",
    "details": {
        "components": [
            "Facet Module"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "7.0",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "All facet processors are processed sequentially. We can reuse CountSlotArrAcc internal array across same level facet processors instead of reallocating new array for each.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-17T21:56:24+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user rustamhsmv opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/126\n\n    SOLR-9876 Reuse CountSlotArrAcc internal array for same level subFacets\n\n    All facet processors are processed sequentially. We can reuse CountSlotArrAcc internal array across same level facet processors instead of reallocating new array for each.\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/rustamhsmv/lucene-solr FacetReusable\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/126.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #126\n\n\ncommit a3812a67d95651c70c801cbea5ed1ff2e39ee051\nAuthor: rustamhsmv <rustam.hashimov@outlook.com>\nDate:   2016-12-16T23:34:47Z\n\n    make CountSlotArrAcc internal array reusable\n\ncommit 1c069cc6e0fdc084bb1b88591dae32143d4ebdba\nAuthor: rustamhsmv <rustam.hashimov@outlook.com>\nDate:   2016-12-17T21:51:21Z\n\n    Comments\n\n ",
            "id": "comment-15757680"
        },
        {
            "date": "2017-01-09T22:56:11+0000",
            "author": "Rustam Hashimov",
            "content": "Feedbacks to improve the code would be much appreciated! ",
            "id": "comment-15813124"
        },
        {
            "date": "2017-02-28T16:25:56+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user dennisgove commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/126#discussion_r103494004\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/search/facet/SlotAcc.java \u2014\n    @@ -394,7 +394,16 @@ public CountSlotAcc(FacetContext fcontext) {\n       int[] result;\n       public CountSlotArrAcc(FacetContext fcontext, int numSlots) {\n         super(fcontext);\n\n\tresult = new int[numSlots];\n    +    \n    +    String key = fcontext.level + this.getClass().getSimpleName();\n    +    result = (int[]) fcontext.getReusable(key);\n    +    if (result == null || result.length < numSlots) {\n    +      result = new int[numSlots];\n    +      fcontext.addReusable(key, result);\n\t\n\t\t\n\t\t\n\t\t\tEnd diff \u2013\n\t\t\n\t\t\n\t\n\t\n\n\n\n    If null != result is it reasonable to reset the value under the key to the newly created array? ",
            "id": "comment-15888374"
        }
    ]
}