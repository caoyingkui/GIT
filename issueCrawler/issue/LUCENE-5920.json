{
    "id": "LUCENE-5920",
    "title": "tweak junit4 output options for 'ant beast'",
    "details": {
        "type": "Test",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ]
    },
    "description": "Currently, this outputs way too much, e.g. including all test output for every passing run (because this is the behavior when -Dtestcase is set).\n\nEspecially with tests.verbose, this is really annoying as you have output from say 200 runs that you don't care about.\n\nI think ant beast should only show the interesting output for the failing run and try to suppress unnecessary output as much as possible for passing ones (it should be JUST enough to know your test ran and passed and not ignored, e.g. you didnt screw up).",
    "attachments": {
        "LUCENE-5920.patch": "https://issues.apache.org/jira/secure/attachment/12666225/LUCENE-5920.patch",
        "LUCENE-5920-silencer2.patch": "https://issues.apache.org/jira/secure/attachment/12666432/LUCENE-5920-silencer2.patch",
        "LUCENE-5920-silencer1.patch": "https://issues.apache.org/jira/secure/attachment/12666314/LUCENE-5920-silencer1.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14119844",
            "author": "Robert Muir",
            "content": "Here's a patch. This attacks the worst of it, so you don't see full test output for passing runs.\n\nIt would be great if we could further reduce the noise, as each passing run still does a lot of useless stuff like topHints, but I don't know how to cleanly do it.\n\n\n   [junit4] <JUnit4> says ciao! Master seed: C8AD36CBB2C5BBC0\n   [junit4] Executing 1 suite with 1 JVM.\n   [junit4] \n   [junit4] Started J0 PID(10546@beast).\n   [junit4] OK      0.30s | TestDemo.testDemo\n   [junit4] JVM J0:     0.37 ..     1.51 =     1.14s\n   [junit4] Execution time total: 1.53 sec.\n   [junit4] Tests summary: 1 suite, 1 test\n     [echo] 5 slowest tests:\n[junit4:tophints]  30.50s | org.apache.lucene.codecs.lucene410.TestLucene410DocValuesFormat\n[junit4:tophints]  27.76s | org.apache.lucene.codecs.compressing.TestCompressingTermVectorsFormat\n[junit4:tophints]  19.49s | org.apache.lucene.index.TestMixedDocValuesUpdates\n[junit4:tophints]  14.29s | org.apache.lucene.codecs.perfield.TestPerFieldDocValuesFormat\n[junit4:tophints]  13.93s | org.apache.lucene.index.TestIndexWriterExceptions\n\n ",
            "date": "2014-09-03T13:13:23+0000"
        },
        {
            "id": "comment-14119911",
            "author": "Ryan Ernst",
            "content": "+1 ",
            "date": "2014-09-03T14:49:29+0000"
        },
        {
            "id": "comment-14120167",
            "author": "Uwe Schindler",
            "content": "The patch looks fine to me!\n\nBy the way: Ant 1.8 has now \n{else=\"...\"}\n in conditions. So you dont need the explicit property setter after the condition. You can combine both:\n\n\n<condition property=\"tests.showSuiteSummary\" value=\"false\" else=\"true\">\n  <isset property=\"beast.iters\"/>\n</condition>\n\n\n\nI have not yet changed all those constructs (a single condition is easier to understand than the crazy explicit property setter afterwards). ",
            "date": "2014-09-03T17:56:40+0000"
        },
        {
            "id": "comment-14120339",
            "author": "Dawid Weiss",
            "content": "I don't think it's possible to not update tophints, etc. without some hairy ant conditionals. ",
            "date": "2014-09-03T20:00:17+0000"
        },
        {
            "id": "comment-14120345",
            "author": "Robert Muir",
            "content": "For now I left it alone. in ant 1.9.1 maybe we can do it in a simple way: https://ant.apache.org/manual/ifunless.html\n\notherwise we'd need another target for tophints and would probably still produce just as much noise. ",
            "date": "2014-09-03T20:02:35+0000"
        },
        {
            "id": "comment-14120363",
            "author": "Dawid Weiss",
            "content": "> https://ant.apache.org/manual/ifunless.html\n\nUh, oh. I didn't know about this (knew about ant-contrib's implementation of if). I wonder if this also works with task containers like \nhttps://ant.apache.org/manual/Tasks/sequential.html ",
            "date": "2014-09-03T20:13:28+0000"
        },
        {
            "id": "comment-14120370",
            "author": "Robert Muir",
            "content": "updated patch. i fixed all the conditionals with else in common-build.xml\n\nI think we should do this as a start, for the tough bugs requiring verbose?\n\nLater, maybe we can do something fancier like a custom listener even. But for now this makes it really usable for such tests. ",
            "date": "2014-09-03T20:17:31+0000"
        },
        {
            "id": "comment-14120372",
            "author": "Uwe Schindler",
            "content": "+1, Thanks Robert for the condition rewrites! ",
            "date": "2014-09-03T20:19:47+0000"
        },
        {
            "id": "comment-14120374",
            "author": "ASF subversion and git services",
            "content": "Commit 1622345 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1622345 ]\n\nLUCENE-5920: tweak junit4 output options for 'ant beast' ",
            "date": "2014-09-03T20:21:05+0000"
        },
        {
            "id": "comment-14120376",
            "author": "Uwe Schindler",
            "content": "Uh, oh. I didn't know about this (knew about ant-contrib's implementation of if). I wonder if this also works with task containers like  https://ant.apache.org/manual/Tasks/sequential.html\n\nIt should, because Sequntial is also a Task like anything else: http://www.docjar.com/docs/api/org/apache/tools/ant/taskdefs/Sequential.html ",
            "date": "2014-09-03T20:22:03+0000"
        },
        {
            "id": "comment-14120377",
            "author": "ASF subversion and git services",
            "content": "Commit 1622346 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622346 ]\n\nLUCENE-5920: tweak junit4 output options for 'ant beast' ",
            "date": "2014-09-03T20:24:06+0000"
        },
        {
            "id": "comment-14120388",
            "author": "Robert Muir",
            "content": "I committed the simple improvement. we could improve more with custom listeners or upgrading to ant 1.9.1! ",
            "date": "2014-09-03T20:31:48+0000"
        },
        {
            "id": "comment-14120445",
            "author": "Uwe Schindler",
            "content": "This silences the tophints:\n\n\tRemoved the echo (useless), instead I renamed the task with taskname=\"\"\n\tUse a condition to set the number of tophints to 0 if beasting\n\n ",
            "date": "2014-09-03T21:01:30+0000"
        },
        {
            "id": "comment-14120457",
            "author": "ASF subversion and git services",
            "content": "Commit 1622357 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1622357 ]\n\nLUCENE-5920: Further silence beasting ",
            "date": "2014-09-03T21:07:29+0000"
        },
        {
            "id": "comment-14120459",
            "author": "ASF subversion and git services",
            "content": "Commit 1622358 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622358 ]\n\nMerged revision(s) 1622357 from lucene/dev/trunk:\nLUCENE-5920: Further silence beasting ",
            "date": "2014-09-03T21:08:36+0000"
        },
        {
            "id": "comment-14120462",
            "author": "Uwe Schindler",
            "content": "Another approach for beasting would be:\nWe already use a groovy script for beasting. At the beginning of the groovy script we could set build listeners to silent (log level 0), afterwards reenable the old value.\nThe backside is that all output then gets lost. So not helpful if error occurs (unless junit4 would use severe log levels). ",
            "date": "2014-09-03T21:10:18+0000"
        },
        {
            "id": "comment-14120774",
            "author": "Robert Muir",
            "content": "Hi Uwe, thanks for the improvement!\n\nAbout your additional idea, i think we can do it, but I think we need to fix this check to happen on the first iteration?\n\n/home/rmuir/workspace/trunk-checkmerge/lucene/common-build.xml:1373: Not even a single test was executed (a typo in the filter pattern maybe)?\n\n\n\nCurrently, this does not happen until the end of the beasting (I don't know why). its important in case you screw up: typo tests.method, tests.class, or the thing is Nightly or Ignored.\n\nIf we fix this, we don't need any of the current output, just maybe a \".\" or some other kind of status bar to see progress. ",
            "date": "2014-09-04T00:48:38+0000"
        },
        {
            "id": "comment-14121014",
            "author": "Uwe Schindler",
            "content": "Hi Robert,\nthis cannot be fixed easily, the reason is that the statistics are initialized before the \"-beast\" target is invoked and the message printed after the \"-beast\" target. This is completely out of the scope of our groovy script.\nI generally try the whole stuff first with a low beast.iter or simple ant test and later replace the beast count once I am sure it works.\n\nAbout your additional idea, i think we can do it, but I think we need to fix this check to happen on the first iteration?\n\nThe problem is: you get no output at all. If a test error happens you won't see it, too. You just see the BuildException, nothing more (I tried it with a fake failure). The main issue: You don't even see the reproduce line with seed.\n\nWe can do this if junit4 is fixed to make use of log levels. By default, Ant logs with level \"WARN\". If I allow minimum of WARN to be printed, I see everything. For minimum \"ERROR\" I see nothing (that is what \"0\" means when I tested it).\n\nUnfortunately, Ant's API added log levels later, so for backwards compatibility it is not enforced to be given. And because of this every task around there just prints with default \"WARN\" level. The reason is also that you never see a difference in the output (e.g., Maven shows log level like any good logger does), but Ant ignores it completely in its output. These 2 facts make the log levels ignored by everyone creating tasks, including Dawid Weiss (also the Ant people themselves don't care).\n\nIf we fix this, we don't need any of the current output, just maybe a \".\" or some other kind of status bar to see progress.\n\nWe would then need to switch on/off on every iteration and print a single line log message (the beaster iteration, like we do currently). Printing all progress into one line is impossible with ANT. You must log whole lines. ",
            "date": "2014-09-04T06:39:06+0000"
        },
        {
            "id": "comment-14121023",
            "author": "Dawid Weiss",
            "content": "> -        <echo>5 slowest tests:</echo>\n\nWhy was it useless? I warn you \u2013 you'll get to reply to people asking what 'tophints' shows in the future!  ",
            "date": "2014-09-04T06:45:48+0000"
        },
        {
            "id": "comment-14121026",
            "author": "Uwe Schindler",
            "content": "Why was it useless?\n\nI changed the taskname, see commit. With the current version its much better now, but the log message is just a static line of text, so:\nIf you want to have it, include it into the output of the tophints task - that's my opinion. ",
            "date": "2014-09-04T06:48:47+0000"
        },
        {
            "id": "comment-14121040",
            "author": "Dawid Weiss",
            "content": "> These 2 facts make the log levels ignored by everyone creating tasks, including Dawid Weiss (also the Ant people themselves don't care).\n\nI do care about log levels and I log through Ant's logging system. The text report does not (because it streams underlying output from tests; it'd be a killer to push it through so many indirection levels). There is nothing to prevent one from writing a custom event listener and format the output in any way one likes (I mentioned to Robert that a simple dotted output per test ('.' - success, 'F' - failure) would also be doable.\n\nhttps://github.com/carrotsearch/randomizedtesting/blob/master/junit4-ant/src/main/java/com/carrotsearch/ant/tasks/junit4/listeners/AggregatedEventListener.java\n\nThe (example) text listener is here:\n\nhttps://github.com/carrotsearch/randomizedtesting/blob/master/junit4-ant/src/main/java/com/carrotsearch/ant/tasks/junit4/listeners/TextReport.java ",
            "date": "2014-09-04T06:53:27+0000"
        },
        {
            "id": "comment-14121042",
            "author": "Dawid Weiss",
            "content": "I could probably take logging level into account here:\n\nhttps://github.com/carrotsearch/randomizedtesting/blob/master/junit4-ant/src/main/java/com/carrotsearch/ant/tasks/junit4/listeners/TextReport.java#L340\n\nDon't know; does it make sense to you? ",
            "date": "2014-09-04T06:56:13+0000"
        },
        {
            "id": "comment-14121053",
            "author": "Uwe Schindler",
            "content": "I think this was a misunderstanding. You are talking about listeners to events and log events in JUnit4.\n\nThe \"fast approach\" here was to disable logging completely in ANT: Raise the log level to ERROR. My problem was then caused by the fact that Ant then did not show anything anymore. The approach here was to let Ant itsself supress logging. The groovy beaster script can do this easily.\n\nI was referring to this approach: http://stackoverflow.com/questions/5462732/make-ant-quiet-without-the-q-flag (although the scripts inside are \"wrong\", because they miss correct checks and assume that there is only one build listener).\n\nAnt's loggers can only print whole lines, how to work around that?  ",
            "date": "2014-09-04T07:13:59+0000"
        },
        {
            "id": "comment-14121093",
            "author": "Uwe Schindler",
            "content": "This is my idea (disable logging on the ant level).\n\nThis is how it looks now when everything goes well:\n\n\n$ ant beast -Dbeast.iters=10 -Dtestcase=TestVersion\n[...]\n-init-totals:\n\n-beast:\n  [beaster] Beast round: 1\n  [beaster] Beast round: 2\n  [beaster] Beast round: 3\n  [beaster] Beast round: 4\n  [beaster] Beast round: 5\n  [beaster] Beast round: 6\n  [beaster] Beast round: 7\n  [beaster] Beast round: 8\n  [beaster] Beast round: 9\n  [beaster] Beast round: 10\n  [beaster] Beasting finished.\n\n-check-totals:\n\nbeast:\n\nBUILD SUCCESSFUL\nTotal time: 23 seconds\n\n\n\nUnfortunately this is how it looks when it goes wrong:\n\n\n$ ant beast -Dbeast.iters=10 -Dtestcase=TestVersion -Dtests.codec=foobar\n[...]\n-init-totals:\n\n-beast:\n  [beaster] Beast round: 1\n\nBUILD FAILED\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\common-build.xml:1352: The following error occurred while executing this line:\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\common-build.xml:1347: The following error occurred while executing this line:\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\common-build.xml:959: There were test failures: 1 suite, 0 tests, 1 suite-level error\n\nTotal time: 5 seconds\n\n\n\nAs you see, you get no idea what was wrong, nor get you a tests.seed on failure. This looks like caused by junit4 not logging the error messages with a log level of at minimum WARN, which you explained. Maybe all System.err stuff should be printed with error log level. ",
            "date": "2014-09-04T08:15:16+0000"
        },
        {
            "id": "comment-14121151",
            "author": "Uwe Schindler",
            "content": "New patch that also works around Robert's problem (its a ugly hack: it short circuits the submodule counting, which is not applicable here, because beasting should never be used to dive into subdirs):\n\n\n$ ant beast -Dbeast.iters=10 -Dtestcase=foobar\n[...]\n-init-totals:\n\n-beast:\n  [beaster] Beast round: 1\n\nBUILD FAILED\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\common-build.xml:1361: The following error occurred while executing this line:\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\common-build.xml:1356: The following error occurred while executing this line:\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\common-build.xml:1163: Beasting executed no tests (a typo in the filter pattern maybe?)\n\nTotal time: 3 seconds\n\n\n\nLet me find a better solution for this... ",
            "date": "2014-09-04T09:08:01+0000"
        },
        {
            "id": "comment-14121164",
            "author": "Dawid Weiss",
            "content": "> As you see, you get no idea what was wrong, nor get you a tests.seed on failure. \n\nYou always get the full test stream from this test listener:\n\n\n                <!-- Emits status on errors and failures only. -->\n                <junit4:report-text\n                    file=\"@{junit.output.dir}/tests-failures.txt\"\n\n\n\n> This looks like caused by junit4 not logging the error messages with a log level of at minimum WARN, which you explained. \n\nWell, I don't consider this a warning. Also, it'll be difficult to separate and display just the reproduce-info because it's part of a regular stream from a subprocess. You can always tail tests-failures.txt or tests-report.txt \u2013 it contains full streams from all tests. ",
            "date": "2014-09-04T09:25:15+0000"
        },
        {
            "id": "comment-14121201",
            "author": "Uwe Schindler",
            "content": "New patch:\nOn a BuildException, the beaster script logs contents of tests-failures.txt file. \n\nFYI, as the whole beasting is now silent, I can also revert the tophints stuff. We could also revert the whole patch of Robert, because all log is swallowed  Opinions?\n\nDawid Weiss: The tests-failures file is in UTF-8 or the default encoding of platform? I need this for the file.eachLine(charset...). ",
            "date": "2014-09-04T10:07:20+0000"
        },
        {
            "id": "comment-14121213",
            "author": "Dawid Weiss",
            "content": "UTF-8:\nhttps://github.com/carrotsearch/randomizedtesting/blob/master/junit4-ant/src/main/java/com/carrotsearch/ant/tasks/junit4/listeners/TextReport.java#L326 ",
            "date": "2014-09-04T10:23:19+0000"
        },
        {
            "id": "comment-14121222",
            "author": "Uwe Schindler",
            "content": "Thanks, so the patch is fine. Any comments about reverting the original patches here? The Ant-level silencer is in my opinion all we need, so we can remove the crazy <isset property=\"beast.iters\"/> everywhere. ",
            "date": "2014-09-04T10:31:58+0000"
        },
        {
            "id": "comment-14121224",
            "author": "Robert Muir",
            "content": "Thanks Uwe, it just makes it nicer and simplifies the build IMO. ",
            "date": "2014-09-04T10:37:18+0000"
        },
        {
            "id": "comment-14121228",
            "author": "Uwe Schindler",
            "content": "OK, I reverted the previous patches. The whole thing still works.\n\nI will now commit the revert and the new patch. ",
            "date": "2014-09-04T10:44:03+0000"
        },
        {
            "id": "comment-14121229",
            "author": "ASF subversion and git services",
            "content": "Commit 1622449 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1622449 ]\n\nLUCENE-5920: Revert previous commits (but leave the else attributes) ",
            "date": "2014-09-04T10:47:18+0000"
        },
        {
            "id": "comment-14121234",
            "author": "Uwe Schindler",
            "content": "New patch after revert. Now passes extra property down in antcall for the early-exit on wrong testcase pattern. ",
            "date": "2014-09-04T11:00:27+0000"
        },
        {
            "id": "comment-14121235",
            "author": "ASF subversion and git services",
            "content": "Commit 1622451 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1622451 ]\n\nLUCENE-5920: New beasting silencer, variant #2 ",
            "date": "2014-09-04T11:02:03+0000"
        },
        {
            "id": "comment-14121236",
            "author": "ASF subversion and git services",
            "content": "Commit 1622452 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622452 ]\n\nMerged revision(s) 1622449-1622451 from lucene/dev/trunk:\nLUCENE-5920: Revert previous commits (but leave the else attributes)\nLUCENE-5920: New beasting silencer, variant #2 ",
            "date": "2014-09-04T11:03:24+0000"
        },
        {
            "id": "comment-14121239",
            "author": "Uwe Schindler",
            "content": "OK, done. I did not reopen, so no \"Resolve\". ",
            "date": "2014-09-04T11:07:27+0000"
        },
        {
            "id": "comment-14121273",
            "author": "ASF subversion and git services",
            "content": "Commit 1622463 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1622463 ]\n\nLUCENE-5920: More elegant (groovy-like) task creation ",
            "date": "2014-09-04T11:53:25+0000"
        },
        {
            "id": "comment-14121275",
            "author": "ASF subversion and git services",
            "content": "Commit 1622464 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622464 ]\n\nMerged revision(s) 1622463 from lucene/dev/trunk:\nLUCENE-5920: More elegant (groovy-like) task creation ",
            "date": "2014-09-04T11:54:41+0000"
        },
        {
            "id": "comment-14332880",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:02:24+0000"
        }
    ]
}