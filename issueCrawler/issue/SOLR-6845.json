{
    "id": "SOLR-6845",
    "title": "Add buildOnStartup option for suggesters",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "SOLR-6679 was filed to track the investigation into the following problem...\n\n\nThe stock solrconfig provides a bad experience with a large index... start up Solr and it will spin at 100% CPU for minutes, unresponsive, while it apparently builds a suggester index.\n...\nThis is what I did:\n1) indexed 10M very small docs (only takes a few minutes).\n2) shut down Solr\n3) start up Solr and watch it be unresponsive for over 4 minutes!\n\nI didn't even use any of the fields specified in the suggester config and I never called the suggest request handler.\n\n\n..but ultimately focused on removing/disabling the suggester from the sample configs.\n\nOpening this new issue to focus on actually trying to identify the root problem & fix it.",
    "attachments": {
        "tests-failures.txt": "https://issues.apache.org/jira/secure/attachment/12693703/tests-failures.txt",
        "SOLR-6845.patch": "https://issues.apache.org/jira/secure/attachment/12689070/SOLR-6845.patch",
        "SOLR-6845_solrconfig.patch": "https://issues.apache.org/jira/secure/attachment/12708057/SOLR-6845_solrconfig.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-12-13T08:53:45+0000",
            "author": "Varun Thacker",
            "content": "Excerpt from the logs - \n\n\n16160 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.handler.component.SpellCheckComponent  \u2013 Initializing spell checkers\n16161 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.spelling.DirectSolrSpellChecker  \u2013 init: {name=default,field=text,classname=solr.DirectSolrSpellChecker,distanceMeasure=internal,accuracy=0.5,maxEdits=2,minPrefix=1,maxInspections=5,minQueryLength=4,maxQueryFrequency=0.01}\n16162 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.handler.component.SpellCheckComponent  \u2013 No queryConverter defined, using default converter\n16164 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.handler.component.SuggestComponent  \u2013 Initializing SuggestComponent\n16164 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.spelling.suggest.SolrSuggester  \u2013 init: {name=mySuggester,lookupImpl=FuzzyLookupFactory,dictionaryImpl=DocumentDictionaryFactory,field=cat,weightField=price,suggestAnalyzerFieldType=string}\n16164 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.spelling.suggest.SolrSuggester  \u2013 Dictionary loaded with params: {name=mySuggester,lookupImpl=FuzzyLookupFactory,dictionaryImpl=DocumentDictionaryFactory,field=cat,weightField=price,suggestAnalyzerFieldType=string}\n16164 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.common.cloud.ZkStateReader  \u2013 Load collection config from:/collections/solr6606\n16166 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.common.cloud.ZkStateReader  \u2013 path=/collections/solr6606 configName=solr6606 specified config exists in ZooKeeper\n16186 [coreLoadExecutor-5-thread-2] INFO  org.apache.solr.handler.ReplicationHandler  \u2013 Commits will be reserved for  10000\n16187 [searcherExecutor-6-thread-1] INFO  org.apache.solr.core.SolrCore  \u2013 QuerySenderListener sending requests to Searcher@6b1b4cac[solr6606_shard1_replica1] main{StandardDirectoryReader(segments_5q:2567:nrt _9g(4.10.2):C794000 _io(4.10.2):C760000 _sf(4.10.2):C796000 _yk(4.10.2):C543000 _ze(4.10.2):C72000 _zf(4.10.2):C1000 _zg(4.10.2):C2000 _zh(4.10.2):C3000 _zi(4.10.2):C3000 _zj(4.10.2):C2121 _zk(4.10.2):C2879 _zl(4.10.2):C3000 _zm(4.10.2):C2000)}\n16226 [searcherExecutor-6-thread-1] INFO  org.apache.solr.core.SolrCore  \u2013 [solr6606_shard1_replica1] webapp=null path=null params={event=firstSearcher&q=static+firstSearcher+warming+in+solrconfig.xml&distrib=false} hits=0 status=0 QTime=39 \n16227 [searcherExecutor-7-thread-1] INFO  org.apache.solr.core.SolrCore  \u2013 [collection1] webapp=null path=null params={event=firstSearcher&q=static+firstSearcher+warming+in+solrconfig.xml&distrib=false} hits=0 status=0 QTime=66 \n16227 [searcherExecutor-6-thread-1] INFO  org.apache.solr.core.SolrCore  \u2013 QuerySenderListener done.\n16227 [searcherExecutor-7-thread-1] INFO  org.apache.solr.core.SolrCore  \u2013 QuerySenderListener done.\n16227 [searcherExecutor-6-thread-1] INFO  org.apache.solr.handler.component.SpellCheckComponent  \u2013 Loading spell index for spellchecker: default\n16227 [searcherExecutor-7-thread-1] INFO  org.apache.solr.handler.component.SpellCheckComponent  \u2013 Loading spell index for spellchecker: default\n16228 [searcherExecutor-6-thread-1] INFO  org.apache.solr.handler.component.SpellCheckComponent  \u2013 Loading spell index for spellchecker: wordbreak\n16228 [searcherExecutor-7-thread-1] INFO  org.apache.solr.handler.component.SpellCheckComponent  \u2013 Loading spell index for spellchecker: wordbreak\n16228 [searcherExecutor-6-thread-1] INFO  org.apache.solr.handler.component.SuggestComponent  \u2013 Loading suggester index for: mySuggester\n16228 [searcherExecutor-7-thread-1] INFO  org.apache.solr.handler.component.SuggestComponent  \u2013 Loading suggester index for: mySuggester\n16229 [searcherExecutor-7-thread-1] INFO  org.apache.solr.spelling.suggest.SolrSuggester  \u2013 reload()\n16228 [searcherExecutor-6-thread-1] INFO  org.apache.solr.spelling.suggest.SolrSuggester  \u2013 reload()\n16229 [searcherExecutor-6-thread-1] INFO  org.apache.solr.spelling.suggest.SolrSuggester  \u2013 build()\n16229 [searcherExecutor-7-thread-1] INFO  org.apache.solr.spelling.suggest.SolrSuggester  \u2013 build()\n16249 [searcherExecutor-7-thread-1] INFO  org.apache.solr.core.SolrCore  \u2013 [collection1] Registered new searcher Searcher@2c8633e1[collection1] main{StandardDirectoryReader(segments_1:1:nrt)}\n\n\n\nThe SuggestComponent init's correctly. It's only when the firstSearcher event gets fired that the spellchecker and the suggester gets built. This is where the problem lies.\n\nWe should just comment out the <str name=\"q\">static firstSearcher warming in solrconfig.xml</str> query from the firstSearcher query list, just as how the queries are commented out from the newSearcher event listener. \n\n\nWe should also add a comment here saying that adding queries here does the following internally and would lead to longer load times. \n1. Builds the suggester, spellchecker and any other components which register itself to new searcher events.\n2. When an entry contains a sort/facet/function query and the field is not an docValues field then it UnInverts the fields and puts it into the FieldCache\n3. Adds entries to the other Solr caches.\n\nThe multiple reload and build commands is because I have 2 cores on my machine. ",
            "id": "comment-14245257"
        },
        {
            "date": "2014-12-15T18:58:51+0000",
            "author": "Hoss Man",
            "content": "We should just comment out the  <str name=\"q\">static firstSearcher warming in solrconfig.xml</str> query ...\n\nThis is still side stepping the root problem this issue was opened to address: why is hte /suggest handler so damn slow?\n\nWe don't need more baind-aid fixes that can be applied to the techproducts example configs to work-arround whatever fundemental problem exists - SOLR-6679 already applied enough of a band-aid for that.\n\n what we need is to understand:\n\n\twhy the hell is this suggester so damn slow to build it's dictionary even when the fields aren't used at all in the index?\n\twhy the does this suggester auto-register a firstSearcher/newSearcher event listener to build the dict w/o there being any sort of configuration option indicating that the solr-admin has requested it to build on firstSearcher (or on every searcher open if that's what/why this is happening)\n\n ",
            "id": "comment-14247039"
        },
        {
            "date": "2014-12-17T03:54:34+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "why the hell is this suggester so damn slow to build it's dictionary even when the fields aren't used at all in the index?\nI understand the reason of this is that the suggester still iterates across all docs in the index, trying to get the stored content of those fields. Even if the field is never present, this needs to be done. Most of the time in my tests is spent in InputIterator.next()\nwhy does this suggester auto-register a firstSearcher/newSearcher event listener to build the dict w/o there being any sort of configuration option indicating that the solr-admin has requested it to build on firstSearcher (or on every searcher open if that's what/why this is happening)\nThat's right, the suggester is building on startup and there is no way to disable this. We should add an option to enable/disable this, maybe a \"buildOnStartup\" conf option that could be \"false\" by default. I think it should still \"load\" the stored suggesters when present. ",
            "id": "comment-14249431"
        },
        {
            "date": "2014-12-17T19:18:53+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Trying to add some unit tests to this feature I found another issue. SuggestComponent and SpellcheckComponent rely on a firstSearcherListener to load (and in this case, also build) some structures. These firstSearcherListeners are registered on SolrCoreAware.inform(), however the first searcher listener task is only added to the queue of warming tasks if there is at least one listener registered at the time of the first searcher creation (before SolrCoreAware.inform() is ever called). See \nSolrCore.java\n        if (currSearcher == null && firstSearcherListeners.size() > 0) {\n          future = searcherExecutor.submit(new Callable() {\n            @Override\n            public Object call() throws Exception {\n              try {\n                for (SolrEventListener listener : firstSearcherListeners) {\n                  listener.newSearcher(newSearcher, null);\n                }\n              } catch (Throwable e) {\n                SolrException.log(log, null, e);\n                if (e instanceof Error) {\n                  throw (Error) e;\n                }\n              }\n              return null;\n            }\n          });\n        }\n\n\nI'll create a new Jira for this ",
            "id": "comment-14250350"
        },
        {
            "date": "2014-12-18T00:27:22+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Created SOLR-6864 ",
            "id": "comment-14250876"
        },
        {
            "date": "2014-12-24T21:11:05+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Here is a patch to add buildOnStartup. With buildOnStartup=false and buildOnCommit=true, the suggester is loaded if it already exist, but not built if it doesn't on startup. \nThe problem I see is that in regular core reload, searchers are open in a way that the \"newSearcherListeners\" are invoked, this means that even if buildOnStartup=false and buildOnCommit=true, a core reload would build the suggester if not found ",
            "id": "comment-14258524"
        },
        {
            "date": "2015-01-04T04:49:27+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I see now, the problem is that core reload creates a new core and then opens a new searcher, so reloading a core calls the firstSearcherListener and then the newSearcherListener. ",
            "id": "comment-14263757"
        },
        {
            "date": "2015-01-11T21:26:11+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "In this patch, I added a \u201cbuildOnStartup\u201d for the suggester that defaults to false. If this is not set, the suggester will load a dictionary if it exists, but won\u2019t create it if it doesn\u2019t.\n\n\"buildOnStartup\" will also build the suggester in case of a core reload. Users should be aware that in both, \u201cSolrCloud mode\u201d and with a \u201cmaster-slave\u201d setup, Solr may trigger a core reload internally, and if \u201cbuildOnStartup\u201d is set, the core reload will build the suggester (if it's not being stored). Unlike with the current code a core reload won\u2019t trigger a \u201cbuildOnCommit\u201d event. \n\nA side note is that, even if \u201cuseColdSearcher\u201d is set to \u201cfalse\u201d, in case of a core reload the suggester may be built after the first searcher is registered, the reason for this is that it is built using the second searcher created in the core reload process.\n ",
            "id": "comment-14273064"
        },
        {
            "date": "2015-01-20T21:29:14+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Here is a new patch. I saw that we were trying to load the suggester twice, once on the Suggester init and once in the searcher listener. I removed the load from the searcher listener. \nI also changed the default of the \"buildOnStartup\", instead of being always \"false\", it defaults to true if no suggester dictionary exists (if the storeDir is not set or if it's set but the suggester was never built). This is compatible with the behavior in 4.10. \nUnfortunately I didn't have time to put this change in 5.0, there are no major compatibility issues, the only one I see is that \"reload\" no longer builds if the dictionary is not present. I think this is correct and should be the behavior of 6.x, for 5.x I'll make the reload action build if no dictionary is present. ",
            "id": "comment-14284452"
        },
        {
            "date": "2015-01-21T00:11:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653410 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/trunk'\n[ https://svn.apache.org/r1653410 ]\n\nSOLR-6845: Add a ''buildOnStartup'' option for suggesters. (Tom\u00e1s Fern\u00e1ndez L\u00f6bbe) ",
            "id": "comment-14284693"
        },
        {
            "date": "2015-01-21T00:46:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653414 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/trunk'\n[ https://svn.apache.org/r1653414 ]\n\nSOLR-6845: Remove enable=false from the suggest request handler in the techproducts sample config. It is OK to use (and copy/paste this configuration) with buildOnStartup=false ",
            "id": "comment-14284921"
        },
        {
            "date": "2015-01-21T05:23:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653443 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653443 ]\n\nSOLR-6845: Add a ''buildOnStartup'' option for suggesters ",
            "id": "comment-14285186"
        },
        {
            "date": "2015-01-21T17:16:16+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Changed summary to reflect the actual change done ",
            "id": "comment-14285908"
        },
        {
            "date": "2015-01-21T21:01:44+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I just saw a local failure on trunk on org.apache.solr.handler.component.SuggestComponentTest.testDefaultBuildOnStartupStoredDict. The logs are attached and the stack trace is:\n\n  2> 786070 T7047 oas.SolrTestCaseJ4.assertQ ERROR REQUEST FAILED: xpath=//lst[@name='suggest']/lst[@name='suggest_doc_default_startup']/lst[@name='example']/int[@name='numFound'][.='0']\n  2>            xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2>    <response>\n  2>    <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">5</int></lst><lst name=\"suggest\"><lst name=\"suggest_doc_default_startup\"><lst name=\"example\"><int name=\"numFound\">2</int><arr name=\"suggestions\"><lst><str name=\"term\">example inputdata</str><long name=\"weight\">45</long><str name=\"payload\"/></lst><lst><str name=\"term\">example data</str><long name=\"weight\">40</long><str name=\"payload\"/></lst></arr></lst></lst></lst>\n  2>    </response>\n  2>\n  2>            request was:qt=/suggest&suggest.q=example&suggest.count=2&suggest.dictionary=suggest_doc_default_startup&wt=xml\n  2> 786071 T7047 oasc.SolrException.log ERROR REQUEST FAILED: qt=/suggest&suggest.q=example&suggest.count=2&suggest.dictionary=suggest_doc_default_startup&wt=xml:java.lang.RuntimeException: REQUEST FAILED: xpath=//lst[@name='suggest']/lst[@name='suggest_doc_default_startup']/lst[@name='example']/int[@name='numFound'][.='0']\n  2>            xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2>    <response>\n  2>    <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">5</int></lst><lst name=\"suggest\"><lst name=\"suggest_doc_default_startup\"><lst name=\"example\"><int name=\"numFound\">2</int><arr name=\"suggestions\"><lst><str name=\"term\">example inputdata</str><long name=\"weight\">45</long><str name=\"payload\"/></lst><lst><str name=\"term\">example data</str><long name=\"weight\">40</long><str name=\"payload\"/></lst></arr></lst></lst></lst>\n  2>    </response>\n  2>\n  2>            request was:qt=/suggest&suggest.q=example&suggest.count=2&suggest.dictionary=suggest_doc_default_startup&wt=xml\n  2>            at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:741)\n  2>            at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:715)\n  2>            at org.apache.solr.handler.component.SuggestComponentTest.testDefaultBuildOnStartupStoredDict(SuggestComponentTest.java:257)\n  2>            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\n\n\n\nant test  -Dtestcase=SuggestComponentTest -Dtests.method=testDefaultBuildOnStartupStoredDict -Dtests.seed=1AE9946D9D16B26E -Dtests.slow=true -Dtests.locale=en -Dtests.timezone=Asia/Istanbul -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n\n\n\nI tried a few times but couldn't reproduce it.  ",
            "id": "comment-14286254"
        },
        {
            "date": "2015-01-21T21:38:57+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I'll take a look ",
            "id": "comment-14286323"
        },
        {
            "date": "2015-01-22T04:47:21+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Also a fail in Jenkins: https://builds.apache.org/job/Lucene-Solr-Tests-5.x-Java7/2523/\nI can reproduce this fail by making the build slow. I'll commit a fix ",
            "id": "comment-14286953"
        },
        {
            "date": "2015-01-22T09:02:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653784 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/trunk'\n[ https://svn.apache.org/r1653784 ]\n\nSOLR-6845: Suggester tests start new cores instead of reloading ",
            "id": "comment-14287139"
        },
        {
            "date": "2015-01-22T09:13:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653789 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653789 ]\n\nSOLR-6845: Suggester tests start new cores instead of reloading ",
            "id": "comment-14287146"
        },
        {
            "date": "2015-01-22T09:15:17+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I changed the test to only start new cores instead of reloading as a temporary fix to avoid noise in Jenkins. I'll continue working to make the test work with reload again.  ",
            "id": "comment-14287148"
        },
        {
            "date": "2015-01-25T22:40:46+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654710 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/trunk'\n[ https://svn.apache.org/r1654710 ]\n\nSOLR-6845: Fixed Suggester's buildOnStartup in core reload and improved tests ",
            "id": "comment-14291293"
        },
        {
            "date": "2015-01-25T22:54:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654714 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1654714 ]\n\nSOLR-6845: Fixed Suggester's buildOnStartup in core reload and improved tests ",
            "id": "comment-14291299"
        },
        {
            "date": "2015-01-29T18:22:43+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Didn't see any Jenkins failures of this test since the last commit. I'll mark it as resolved ",
            "id": "comment-14297282"
        },
        {
            "date": "2015-01-30T04:15:02+0000",
            "author": "Varun Thacker",
            "content": "Hi Tom\u00e1s Fern\u00e1ndez L\u00f6bbe ,\n\nMinor documentation nit - In SuggestComponent , the comment on the BUILD_ON_STARTUP_LABEL variable needs to be modified to - \"SolrConfig label to identify boolean value to build suggesters on startup\" ",
            "id": "comment-14298176"
        },
        {
            "date": "2015-02-05T17:08:19+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Thanks Varun Thacker, fixed ",
            "id": "comment-14307559"
        },
        {
            "date": "2015-02-27T15:11:54+0000",
            "author": "Erick Erickson",
            "content": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe If I were to apply this patch to 4.10 do you see any inherent problems? I merged all the changes last night and it seems to run and index docs, the buildOnStartup parameter seems to be respected etc. Running unit tests now.\n\nMy responsibility if I try this of course, just asking if yo know of any reason this is a Bad Idea.\n\nThanks! ",
            "id": "comment-14340261"
        },
        {
            "date": "2015-02-27T16:54:22+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "No issues that I can think of, let's backport it. ",
            "id": "comment-14340366"
        },
        {
            "date": "2015-02-28T02:35:18+0000",
            "author": "Erick Erickson",
            "content": "Reopening for inclusion in 4.10.5 ",
            "id": "comment-14341241"
        },
        {
            "date": "2015-03-02T06:41:05+0000",
            "author": "Erick Erickson",
            "content": "Decided not to back-port, it was more complex than I thought. ",
            "id": "comment-14342837"
        },
        {
            "date": "2015-03-18T08:43:27+0000",
            "author": "Stephan Lagraulet",
            "content": "We will be glad to have this in 4.10.5 or at least on the 5.0 branch. \nIs there too much effort to backport this issue or is it risky? \nWe can contribute if needed because we really need this option to avoid very long startup times. ",
            "id": "comment-14366832"
        },
        {
            "date": "2015-03-29T18:44:51+0000",
            "author": "Varun Thacker",
            "content": "Hi Tom\u00e1s Fern\u00e1ndez L\u00f6bbe,\n\nWe should remove this comment from the solrconfig.xml file right? I have made the required change in the ref guide as well. ",
            "id": "comment-14385887"
        },
        {
            "date": "2015-03-30T16:29:59+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "We should remove this comment from the solrconfig.xml file right?\nI was sure I had remove the comment! Thanks for pointing that out. I'll remove it\nI have made the required change in the ref guide as well.\nThanks, I didn't do this initially because by the time I did this change the docs were still about 5.0, but now was a good time to fix that. ",
            "id": "comment-14386943"
        },
        {
            "date": "2015-03-30T19:24:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1670183 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/trunk'\n[ https://svn.apache.org/r1670183 ]\n\nSOLR-6845: Updated SuggestComponent comments in techproducts example configset ",
            "id": "comment-14387266"
        },
        {
            "date": "2015-03-30T20:19:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1670186 from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1670186 ]\n\nSOLR-6845: Updated SuggestComponent comments in techproducts example configset ",
            "id": "comment-14387328"
        },
        {
            "date": "2015-04-07T01:58:47+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Varun, I can't find the changes made to the ref guide, where did you make them? ",
            "id": "comment-14482409"
        },
        {
            "date": "2015-04-07T18:56:33+0000",
            "author": "Varun Thacker",
            "content": "Hi Tomas,\n\nI meant I removed the sentence which went like - the suggester is disabled by default  I didn't add the documentation for this param.\n\nAnyways thanks for catching that. Here is what I wrote up for it - \n\nbuildOnStartup: If true then the lookup data structure will be built when Solr starts or when the core is reloaded. If this parameter is not specified, the suggester will check if the lookup data structure is present on disk. If yes then it won't load up on startup. Enabling this to true could lead to the core talking longer to load as the suggester data structure needs to be built\n\n\nFeel free to edit it and add it to the ref guide else I'll add it tomorrow. ",
            "id": "comment-14483793"
        },
        {
            "date": "2015-04-08T04:07:31+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Added your paragraph with some modifications to the ref guide. Feel free to edit it there.  ",
            "id": "comment-14484677"
        },
        {
            "date": "2015-04-15T00:30:32+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495308"
        }
    ]
}