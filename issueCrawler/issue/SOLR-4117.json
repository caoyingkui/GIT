{
    "id": "SOLR-4117",
    "title": "IO error while trying to get the size of the Directory",
    "details": {
        "affect_versions": "6.0",
        "status": "Closed",
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "With SOLR-4032 fixed we see other issues when randomly taking down nodes (nicely via tomcat restart) while indexing a few million web pages from Hadoop. We do make sure that at least one node is up for a shard but due to recovery issues it may not be live.\n\nOne node seems to work but generates IO errors in the log and ZookeeperExeption in the GUI. In the GUI we only see:\n\nSolrCore Initialization Failures\n\n    openindex_f: org.apache.solr.common.cloud.ZooKeeperException:org.apache.solr.common.cloud.ZooKeeperException: \n\nPlease check your logs for more information\n\n\n\nand in the log we only see the following exception:\n\n\n2012-11-28 11:47:26,652 ERROR [solr.handler.ReplicationHandler] - [http-8080-exec-28] - : IO error while trying to get the size of the Directory:org.apache.lucene.store.NoSuchDirectoryException: directory '/opt/solr/cores/shard_f/data/index' does not exist\n        at org.apache.lucene.store.FSDirectory.listAll(FSDirectory.java:217)\n        at org.apache.lucene.store.FSDirectory.listAll(FSDirectory.java:240)\n        at org.apache.lucene.store.NRTCachingDirectory.listAll(NRTCachingDirectory.java:132)\n        at org.apache.solr.core.DirectoryFactory.sizeOfDirectory(DirectoryFactory.java:146)\n        at org.apache.solr.handler.ReplicationHandler.getIndexSize(ReplicationHandler.java:472)\n        at org.apache.solr.handler.ReplicationHandler.getReplicationDetails(ReplicationHandler.java:568)\n        at org.apache.solr.handler.ReplicationHandler.handleRequestBody(ReplicationHandler.java:213)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:144)\n        at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:240)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1830)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:476)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:276)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n        at org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:889)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:744)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2274)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)",
    "attachments": {
        "SOLR-4117.patch": "https://issues.apache.org/jira/secure/attachment/12560038/SOLR-4117.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Markus Jelsma",
            "id": "comment-13505391",
            "date": "2012-11-28T12:12:18+0000",
            "content": "This issue is the same as reported in SOLR-4032. It does not resolve itself, as it did before in SOLR-4032, when reloading a core or restarting the servlet container. The Zookeeper exception in the GUI is gone after restart so it's likely not related.\n\nedit: the index.properties file in both cores point to the correct index.LARGE_NUMBER directory but NRTDir tries ./data/index regardless. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13505507",
            "date": "2012-11-28T14:51:56+0000",
            "content": "I have another node now logging the same exception for a core that has 0 docs which is not the leader but clusterstate says the node is active and does not attempt recovery. To my surprise it has two index.NUMBER directories of different sizes and index.properties points to the largest directory.\n\nThe node won't come back up properly. Search and indexing works but accessing the GUI is impossible:\n\n2012-11-28 14:50:00,026 ERROR [solr.servlet.SolrDispatchFilter] - [http-8080-exec-6] - : null:org.apache.solr.common.SolrException: Error handling 'status' action \n        at org.apache.solr.handler.admin.CoreAdminHandler.handleStatusAction(CoreAdminHandler.java:724)\n        at org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(CoreAdminHandler.java:157)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:144)\n        at org.apache.solr.servlet.SolrDispatchFilter.handleAdminRequest(SolrDispatchFilter.java:372)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:181)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n        at org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:889)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:744)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2274)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)\nCaused by: org.apache.solr.common.SolrException: java.util.concurrent.RejectedExecutionException\n        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1674)\n        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1330)\n        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1265)\n        at org.apache.solr.handler.admin.CoreAdminHandler.getCoreStatus(CoreAdminHandler.java:996)\n        at org.apache.solr.handler.admin.CoreAdminHandler.handleStatusAction(CoreAdminHandler.java:710)\n        ... 18 more\nCaused by: java.util.concurrent.RejectedExecutionException\n        at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:1768)\n        at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:767)\n        at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:658)\n        at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:92)\n        at java.util.concurrent.Executors$DelegatedExecutorService.submit(Executors.java:603)\n        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1605)\n        ... 22 more\n\n\n "
        },
        {
            "author": "Eks Dev",
            "id": "comment-13505530",
            "date": "2012-11-28T15:19:14+0000",
            "content": "fwiw, we think we observed the following problem in simple master slave setup with NRTCachingDirectory... I am not sure it has something to do with issue, because ewe did not see this exception, anyhow   \n\non replication, slave gets the index from master and works fine, then on:\n1. graceful restart, the world looks fine \n2. kill -9 or such, solr does not start because an index gets corrupt (should actually not happen)\n\nWe speculate that solr now does replication directly to Directory implementation and does not ensure that replicated files get fsck-ed completely after replication. As far as I remember, replication was going to /temp (disk) and than moving files if all went ok. Working under assumption that everything is already persisted. Maybe this invariant does not hold any more and some explicit fsck is needed for caching directories? \n\nI might be completely wrong, we just observed symptoms in not really debug-friendly environment\n\nHere Exception after  \"hard\" restart:\n\nCaused by: org.apache.solr.common.SolrException: Error opening new searcher\n   at org.apache.solr.core.SolrCore.<init>(SolrCore.java:804)\n   at org.apache.solr.core.SolrCore.<init>(SolrCore.java:618)\n   at org.apache.solr.core.CoreContainer.createFromLocal(CoreContainer.java:973)\n   at org.apache.solr.core.CoreContainer.create(CoreContainer.java:1003)\n   ... 10 more\nCaused by: org.apache.solr.common.SolrException: Error opening new searcher\n   at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1441)\n   at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1553)\n   at org.apache.solr.core.SolrCore.<init>(SolrCore.java:779)\n   ... 13 more\nCaused by: java.io.FileNotFoundException: ...\\core0\\data\\index\\segments_1 (The system cannot find the file specified)\n   at java.io.RandomAccessFile.open(Native Method)\n   at java.io.RandomAccessFile.<init>(RandomAccessFile.java:233)\n   at org.apache.lucene.store.MMapDirectory.openInput(MMapDirectory.java:222)\n   at org.apache.lucene.store.NRTCachingDirectory.openInput(NRTCachingDirectory.java:232)\n   at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:281)\n   at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:56)\n   at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:668)\n   at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:52)\n   at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:87)\n   at org.apache.solr.core.StandardIndexReaderFactory.newReader(StandardIndexReaderFactory.java:34)\n   at org.apache.solr.search.SolrIndexSearcher.<init>(SolrIndexSearcher.java:120)\n   at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1417)\n....\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13505542",
            "date": "2012-11-28T15:29:35+0000",
            "content": "Do you mean fsync rather than fsck (isnt that a file system check?)\n\nThat did change in that we are now using the Directory's sync method - but it should still work the same as before...\n\n2 should not happen though - so we should dig in. I'm guessing it's not related to this issue, but we will see. "
        },
        {
            "author": "Eks Dev",
            "id": "comment-13505555",
            "date": "2012-11-28T15:36:15+0000",
            "content": "fsync of course, fsck was intended for my terminal window   "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13505581",
            "date": "2012-11-28T15:53:35+0000",
            "content": "Markus, I'm about to commit a fix to this issue - but I doubt it's the same as the issue you then mention in a comment. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13505584",
            "date": "2012-11-28T15:56:13+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1414773\n\nSOLR-4117: Retrieving the size of the index may use the wrong index dir if you are replicating.\n "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13505594",
            "date": "2012-11-28T16:02:12+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1414774\n\nSOLR-4117: Retrieving the size of the index may use the wrong index dir if you are replicating.\n "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13505600",
            "date": "2012-11-28T16:07:45+0000",
            "content": "Likely indeed. I'll check on this issue tomorrow and try to reproduce the other one, will open new issue if i can.\n\nThanks "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13508735",
            "date": "2012-12-03T13:50:13+0000",
            "content": "For some reason we're seeing this again on a node with today's trunk check out:\n\n\n2012-12-03 13:46:46,300 ERROR [handler.admin.CoreAdminHandler] - [http-8080-exec-10] - : IO error while trying to get the size of the Directory:org.apache.lucene.store.NoSuchDirectoryException: directory '/opt/solr/cores/core_b/data/index' does not exist\n        at org.apache.lucene.store.FSDirectory.listAll(FSDirectory.java:217)\n        at org.apache.lucene.store.FSDirectory.listAll(FSDirectory.java:240)\n        at org.apache.lucene.store.NRTCachingDirectory.listAll(NRTCachingDirectory.java:132)\n        at org.apache.solr.core.DirectoryFactory.sizeOfDirectory(DirectoryFactory.java:146)\n        at org.apache.solr.handler.admin.CoreAdminHandler.getIndexSize(CoreAdminHandler.java:1020)\n        at org.apache.solr.handler.admin.CoreAdminHandler.getCoreStatus(CoreAdminHandler.java:1000)\n        at org.apache.solr.handler.admin.CoreAdminHandler.handleStatusAction(CoreAdminHandler.java:711)\n        at org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(CoreAdminHandler.java:158)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:144)\n        at org.apache.solr.servlet.SolrDispatchFilter.handleAdminRequest(SolrDispatchFilter.java:372)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:181)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n        at org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:889)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:744)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2274)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13527194",
            "date": "2012-12-08T17:01:17+0000",
            "content": "Thanks Markus - another race around updating to the new index and looking for the size of the index. I'll fix this. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13527214",
            "date": "2012-12-08T17:57:03+0000",
            "content": "Here is a patch that does 2 things:\n\nIf we find the directory and see a file listed, but then get a file not found trying to access it (it was removed out from under us), just return a 0 size\n\nAlso, if we can't find the directory at all, try using the newIndexDir. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13527221",
            "date": "2012-12-08T18:20:08+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1418725\n\nSOLR-4117: harden size of directory code\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13527222",
            "date": "2012-12-08T18:28:38+0000",
            "content": "Mark, it seems like this is also likely to resolve SOLR-4135.  Can you look into that?\n\nI was seeing another issue in my log that Yonik thought might be tied to the disappearing file issue.  If I continue to get that after this patch, I will open another issue. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13530636",
            "date": "2012-12-13T03:22:46+0000",
            "content": "I think all of the changes in r1418725 got merged to 4x as part of r1420992...\n\nhttp://svn.apache.org/viewvc?view=revision&revision=1420992\n\n(or in any event: attempting to merge r1418725 into 4x as of r1421071 is a No-Op) "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610492",
            "date": "2013-03-22T16:13:16+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1414774\n\nSOLR-4117: Retrieving the size of the index may use the wrong index dir if you are replicating. "
        }
    ]
}