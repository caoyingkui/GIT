{
    "id": "SOLR-726",
    "title": "driver and datasources are not loaded using the multicore lib aware SolrResourceLoader",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "see http://www.nabble.com/dataimporthandler-and-mysql-connector-jar-td19146229.html\nThe jar containing the (jdbc) driver have to be present in the java classpath. Putting it in coreX/lib or in the shared lib dir of a multicore solr doesn't work",
    "attachments": {
        "SOLR-726.patch": "https://issues.apache.org/jira/secure/attachment/12389065/SOLR-726.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12626441",
            "date": "2008-08-28T05:52:54+0000",
            "content": "Marking this bug for 1.3 "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12626445",
            "date": "2008-08-28T06:22:25+0000",
            "content": "classloading is done using SolrCore#getResourceLoader()#findClass(name) "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12626645",
            "date": "2008-08-28T16:55:35+0000",
            "content": "Using SolrResourceLoader#findClass does not solve the problem. From the official documentation at http://java.sun.com/j2se/1.5.0/docs/guide/jdbc/getstart/drivermanager.html\n\n\nFor security reasons, the JDBC management layer will keep track of which class loader provided which driver. Then when the DriverManager class is opening a connection, it will use only drivers that come from the local file system or from the same class loader as the code issuing the request for a connection.\n\nSince the loading is done by SolrResourceLoader using a different class loader and the call to DriverManager.getConnection is made from a different one, a SQLException is thrown \u2013 \"java.sql.SQLException: No suitable driver\". "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12626845",
            "date": "2008-08-29T05:04:01+0000",
            "content": "A hackish work around to the class loader issue.\n\nThis patch tries to use SolrResourceLoader#findClass to load the Driver class. It tries to use DriverManager#getConnection. If that fails, we try to instantiate the Driver class and use the Driver#connect method directly bypassing the DriverManager. This workaround is documented in the JdbcDataSource class.\n\nI will commit this shortly. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12626871",
            "date": "2008-08-29T07:03:17+0000",
            "content": "Committed revision 690131.\n\nThanks Walter and Noble! "
        }
    ]
}