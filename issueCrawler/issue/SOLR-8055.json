{
    "id": "SOLR-8055",
    "title": "ArrayIndexOutOfBoundsException seen in SOLR on running ToParentBlockJoinQuery",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.0",
        "status": "Resolved",
        "resolution": "Won't Fix",
        "priority": "Major"
    },
    "description": "On running the following query with q=: and fq=(\n{!parent which=type:scrap v='visibility:show AND (stock:1)'}\n) we ran into the following exception :\n\njava.lang.ArrayIndexOutOfBoundsException: 33554431\\n\\tat\n    org.apache.lucene.util.FixedBitSet.get(FixedBitSet.java:150)\\n\\tat\n    org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer.nextDoc(ToParentBlockJoinQuery.java:284)\\n\\tat\n    org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:177)\\n\\tat\n    org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:148)\\n\\tat\n    org.apache.lucene.search.BulkScorer.score(BulkScorer.java:35)\\n\\tat\n    org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:592)\\n\\tat\n    org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:284)\\n\\tat\n    org.apache.solr.search.SolrIndexSearcher.getDocSetNC(SolrIndexSearcher.java:1264)\\n\\tat\n    org.apache.solr.search.SolrIndexSearcher.getPositiveDocSet(SolrIndexSearcher.java:951)\\n\\tat\n    org.apache.solr.search.SolrIndexSearcher.getProcessedFilter(SolrIndexSearcher.java:1109)\\n\\tat\n    org.apache.solr.search.SolrIndexSearcher.getDocListNC(SolrIndexSearcher.java:1630)\\n\\tat\n    org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1506)\\n\\tat\n    org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:586)\\n\\tat\n    org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:511)\\n\\tat\n    org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:227)\\n\\tat\n    org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:144)\\n\\tat\n    org.apache.solr.core.SolrCore.execute(SolrCore.java:2006)\\n\\tat\n    org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:777)\\n\\tat\n    org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:413)\\n\\tat\n    org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:204)\\n\\tat\n    org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\\n\\tat\n    org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\\n\\tat\n\n\n\nThis used to run perfectly fine before. We increased the memory for SOLR from 3000M to 4096M and ran Optimise again and things seemed to work fine. I want to understand if this can occur again and the steps we need to take to prevent it from  occurring",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-15T12:03:50+0000",
            "author": "Mikhail Khludnev",
            "content": "could you please check that queries are orthogonal:\nq=*:*&fq=visibility:show AND (stock:1)&fq=type:scrap ?\n\nDo you have deletes in the index? ",
            "id": "comment-14745305"
        },
        {
            "date": "2015-09-15T12:35:23+0000",
            "author": "Mikhail Khludnev",
            "content": "I suppose it's caused by deletes in the index. Deletes can be caused by duplicating uniqueKey.  ",
            "id": "comment-14745358"
        },
        {
            "date": "2015-09-15T12:37:32+0000",
            "author": "Shekhar Palta",
            "content": "type:scrap is the parent object which in turn has products as children which have the fields visibility and stock ",
            "id": "comment-14745364"
        },
        {
            "date": "2015-09-15T12:54:46+0000",
            "author": "Shekhar Palta",
            "content": "Yes, we do delete scraps that are greater than 15 days old. Is it important to delete the child docs as well? Will it create a problem? ",
            "id": "comment-14745397"
        },
        {
            "date": "2015-09-15T13:28:55+0000",
            "author": "Mikhail Khludnev",
            "content": "right. you have to delete whole block always.  ",
            "id": "comment-14745450"
        }
    ]
}