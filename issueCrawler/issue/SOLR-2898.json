{
    "id": "SOLR-2898",
    "title": "Support grouped faceting",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Support grouped faceting. As described in LUCENE-3097 (matrix counts).",
    "attachments": {
        "SOLR-2898.patch": "https://issues.apache.org/jira/secure/attachment/12503630/SOLR-2898.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Martijn van Groningen",
            "id": "comment-13149676",
            "date": "2011-11-14T15:18:53+0000",
            "content": "Attached initial patch that supports rudimentary grouped field facets for single valued and non tokenized string fields. Grouped facets isn't yet implemented for query / range and pivot facets. \n\nThis patch is compatible with trunk. To use it for all field facets use group.facet=true or specify it per field. See test in patch for more details.\n\nI just hacked some code in the SimpleFacets class. To support it for all types of facets will require a lot of changes in many places in this class. Currently I don't see another way... "
        },
        {
            "author": "Ian Grainger",
            "id": "comment-13165162",
            "date": "2011-12-08T11:36:06+0000",
            "content": "A thought on this problem - I have a workaround which involves separate facet queries for the grouped facets using a different sort (so matching grouped records are always first in the group if available).\n\nI don't know how this works internally, but might it be possible to add a sort to the facet query? Like: \nfacet.query={!sort=Monitor_ID+asc}Monitor_ID:[1+TO+9999]\n? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13165657",
            "date": "2011-12-08T22:55:19+0000",
            "content": "I don't completely follow. Lets say we group by Monitor_Model_ID (Monitor_ID would then be the unique id?) and facet by Brand how would facet.query help us the get grouped facets? As far as I know facets are independent of each other.  "
        },
        {
            "author": "Ian Grainger",
            "id": "comment-13165895",
            "date": "2011-12-09T06:54:52+0000",
            "content": "In my example I was grouping by some other field - so say I group by 'Company_ID' and then I want to find companies with low monitor IDs - as long as I'm using group.truncate (which I happen to be) I only want to find a group which has at least one matching value - so by using a sort by monitor ID ASC, if the group has any low monitor IDs they'll be the selected ones, and the facet counts will therefore be correct.\n\nI realise this doesn't fix the problem properly - but I was wondering if it was possible to use as a workaround (a specific sort per facet) as I don't know how it works internally. "
        },
        {
            "author": "Okke Klein",
            "id": "comment-13167234",
            "date": "2011-12-11T22:49:47+0000",
            "content": "Patch works well. Would it also work for facet.date, or do I have to wait for support for range queries?\n\n "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13167426",
            "date": "2011-12-12T09:24:25+0000",
            "content": "Nice to know that the patch works out in your environment! The current patch doesn't support range, date and pivot facet. \nThe grouped facet is only supports facet.field for string based fields that are not tokenized and are not multivalued. "
        },
        {
            "author": "Steven Heijtel",
            "id": "comment-13180282",
            "date": "2012-01-05T11:04:41+0000",
            "content": "I tried the patch, and it does work, thanks for that. Is there any expectations when this feature will be released and/or when range queries are expected? At least I've voted for it \n\n\nSomething that took me ages to understand, I would like to share with others. In contradiction to non grouped facets (sum of all facets) == (total of products with that property) is not the case if it is grouped. See the following objects:\n\nobject 1\n\n\tname: Phaser 4620a\n\tppm: 62\n\tproduct_range: 6\n\n\n\nobject 2\n\n\tname: Phaser 4620i\n\tppm: 65\n\tproduct_range: 6\n\n\n\nobject 3\n\n\tname: ML6512\n\tppm: 62\n\tproduct_range: 7\n\n\n\nIf I ask to group it on \"product_range\", then the total amount of groups is 2, but the facets for ppm are:\n\n62 --> 2\n65 --> 1\n\nIt completely makes sense, but in my case quite difficult to find out. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13180546",
            "date": "2012-01-05T17:13:55+0000",
            "content": " I tried the patch, and it does work, thanks for that. Is there any expectations when this feature will be released and/or when range queries are expected? At least I've voted for it \nNice! The idea I had in mind was to support grouped facets for all facet types and methods. However this requires a lot of changes in the current code (SimpleFacets class) and I think the code becomes even more complex then it already is. I was thinking about creating GroupedFacets class and then step-by-step support more facet types with grouping. But this is just an idea.\n\nThe counts makes sense, but sometimes difficult too understand. We have 2 groups (6, 7) and we have two distinct ppm values (62, 65). Value 62 occurs in both groups and value 65 in one group. So the counts are: 62=2 and 65=1. "
        },
        {
            "author": "Mark Desira",
            "id": "comment-13180565",
            "date": "2012-01-05T17:27:04+0000",
            "content": "Hi I am new to SOLR and was looking for (what seems to be) the function/patch in question.\n\nMy scenario is this:\n\nID :\tProductName :\t\tProductCategory\t:\tColour\n---------------------------------------------------\n1 :\tBatmanTShirt :\t\tT-Shirt\t:\t\tBlack\n2 :\tBatmanTShirt :\t\tT-Shirt\t:\t\tBlue\n3 :\tSupermanTShirt :\tT-Shirt\t:\t\tBlue\n4 :\tSpidermanTrousers :\tTrousers :\t\tRed\n5 :\tSpidermanTrousers :\tTrousers :\t\tBlack\n\nIf I use the usual faceting (on ProductCategory) in SOLR, I would get the following results:\n\nT-Shirt (3)\nTrousers (2)\n\nHowever what I want the facets to look like is the following:\n\nT-Shirt (2)\nTrousers (1)\n\nMeaning that I don't want the colour to generate (3) counts for T-Shirt and (2) counts for Trousers.\nI know that I can 'normalize' the document to hold multi-valued field for the colours however that would complicate my system a bit because I have other fields (such as 'Price' and 'Size') to include in the multi-valued field.\n\nWhat I would like to do is to sort of GROUP BY ProductName and ProductCategory, this would 'flatten' the rows to just 3; (2) for T-Shirt and (1) for Trousers; and then I apply the facet, resulting in what I require\n\nFrom what I'm understanding, this patch would work great for me am I right?\nIf so, could you point me to some tutorial on how can I apply this patch?\n\nThanks.\n\nP.S. Sorry for issuing multiple edits for this comment but I was attempting to make the 'Table' text monospaced, sadly without any success. (As you can see I'm new to wikis as well) "
        },
        {
            "author": "Steven Heijtel",
            "id": "comment-13181630",
            "date": "2012-01-06T21:54:54+0000",
            "content": "@martijn\nI've tried to understand the source code, but I really have no clue how it works. So I cannot help you with that. But I'll try to give you some moral support  \n\n@mark\nJust use grouping on \"ProductName\", and then using this patch you get the couts you want as far as I understand. Patching is not that difficult; just patch the source code with `patch -p0 < patchfile` and after that use this manual: http://dev.modmancer.com/index.php/2010/04/28/setting-up-solr-from-nightly-builds-svn/\n "
        },
        {
            "author": "Mark Desira",
            "id": "comment-13181782",
            "date": "2012-01-07T02:29:00+0000",
            "content": "Thanks Steven I will attempt that as soon as I am back.  "
        },
        {
            "author": "Mark Desira",
            "id": "comment-13183317",
            "date": "2012-01-10T15:10:43+0000",
            "content": "I have applied this patch as instructed and it seems to have worked. Just to clear one thing, does the faceting work according to the first group.field listed in the query string? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13183325",
            "date": "2012-01-10T15:18:27+0000",
            "content": "Yes, the grouped faceting works with the first group.field parameter. Other group.field parameters are ignored. "
        },
        {
            "author": "Mark Desira",
            "id": "comment-13183338",
            "date": "2012-01-10T15:45:36+0000",
            "content": "Thanks Martijn. One thing I noticed is that the 'post-group-faceting' is active in both cases when group.facet parameter is TRUE and also when FALSE. As long as the Group=TRUE parameter is present, post-group-faceting becomes active, even when the group.facet parameter is not specified. Is this behaviour as expected, or am I missing something? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13183344",
            "date": "2012-01-10T15:54:31+0000",
            "content": "No that shouldn't be the case. It should also check the group.facet parameter. I'll fix that. "
        },
        {
            "author": "Mark Desira",
            "id": "comment-13183346",
            "date": "2012-01-10T15:57:47+0000",
            "content": "Cool thanks let me know. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13196989",
            "date": "2012-01-31T15:52:38+0000",
            "content": "Updated patch to work with the latest version of trunk and added the group.facet parameter the I forgot to add in the previous patch. "
        },
        {
            "author": "Mark Desira",
            "id": "comment-13198692",
            "date": "2012-02-02T11:13:19+0000",
            "content": "Hi Martijn, is the added group.facet the check for facet.group.after parameter? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13211567",
            "date": "2012-02-19T22:07:49+0000",
            "content": "Attached a new patch that takes another approach. Patch contains the TermGroupFacetCollector class that performs the grouped faceting. Grouped faceting is now per segment instead of top level. Grouped faceting works the same as in the previous patch.\n\nI think this approach is cleaner and grouped faceting isn't just a hack any more.\n\nThe TermGroupFacetCollector collector is located in the grouping module. I'll open a new Lucene issue with the purpose of getting this collector committed to the grouping module. This issue will then depend on the new Lucene issue. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13211571",
            "date": "2012-02-19T22:14:29+0000",
            "content": "Hi Martijn, is the added group.facet the check for facet.group.after parameter?\nBetter late than never... Are you referring to the uncommitted FieldCollapse collapse.facet parameter? I think that isn't completely the same as this grouped faceting is trying to achieve. Take a look at LUCENE-3097 (matrix facets). "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13223666",
            "date": "2012-03-06T21:15:21+0000",
            "content": "Updated patch to latest changes in LUCENE-3802. I think it is time to commit this. Grouped faceting based on range and query  facets will be addressed in a different issue. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13224809",
            "date": "2012-03-07T22:51:38+0000",
            "content": "Committed to trunk. "
        },
        {
            "author": "Bjorn Hijmans",
            "id": "comment-13255514",
            "date": "2012-04-17T12:45:06+0000",
            "content": "Hi Martijn, any idea when range and query facets will be added? "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13258711",
            "date": "2012-04-21T01:03:44+0000",
            "content": "I am using Solr 3.6 and am trying to use grouping on products which can have many SKU's. The problem I am facing is that when I use group.truncate I am no longer able to use the statsComponent to get the high and low price ranges. Would it be an easy fix to only allow truncate exclusions so that some facets would be truncated and others would not? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13258815",
            "date": "2012-04-21T08:57:34+0000",
            "content": "Bjorn: Right now I don't have an idea when this will be added. If you want you can make a new Jira issue to support grouped range and query facets.\n\nDavid: The FacetComponent and StatsComponent operate on a DocSet computed by the QueryComponent. The QueryComponent creates either a ungrouped DocSet or a grouped DocSet when group.truncate is enabled. So instead of creating one DocSet, the QueryComponent then needs to generate two DocSets (grouped & ungrouped), so that the StatsComponent can operate on the ungrouped DocSet when group.truncate is enabled and the FacetComponent can operate on the grouped DocSet. This should be controlled with a special parameter. Maybe something like this: group.computeStats=GROUPED|UNGROUPED  "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13260763",
            "date": "2012-04-24T18:02:14+0000",
            "content": "I just realized that computing stats on an ungrouped docset still wouldn't work since I still need to do query facets on price ranges. I have created issue SOLR-3406 to address the problems described with not having the ability to use facet.query over a grouped docset. \n\nMartijn: This functionality is critical to my implementation of Solr and I would like to help develop a solution. You mention in a previous post\n\n\nThe idea I had in mind was to support grouped facets for all facet types and methods. However this requires a lot of changes in the current code (SimpleFacets class) and I think the code becomes even more complex then it already is. I was thinking about creating GroupedFacets class and then step-by-step support more facet types with grouping. But this is just an idea.\n\nHave you started on GroupedFacets? I don't see it in the trunk but wasn't sure if you had started something locally. I do see a GroupedFacetHit.class commited to trunk but I'm not sure if that is related.\n\nAt any rate I am new to Solr development. Do you think you could point me in the right direction or give me your vision of how you see this implementation happening.\n\nAlso to anybody reading this post that would like to see this feature implemented please vote for issue SOLR-3406 "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13261017",
            "date": "2012-04-24T21:10:18+0000",
            "content": "At any rate I am new to Solr development. Do you think you could point me in the right direction or give me your vision of how you see this implementation happening.\nSure. Lets do this in SOLR-3406 "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13261023",
            "date": "2012-04-24T21:18:14+0000",
            "content": "ok sounds good "
        }
    ]
}