{
    "id": "SOLR-1007",
    "title": "Use property values immediately after definition in every configuration files",
    "details": {
        "affect_versions": "1.3",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Requirement & Target\nthe follwing code cause a \"No system property or default value specified\" exception:\nsolr_home/solr.xml\n<solr>\n  <property name=\"foo\" value=\"blah\" />\n  <property name=\"bar\" value=\"${foo}\" />\n</solr>\n\n\n\nbecause the property foo won't be appended to context until method CoreContainer#readProperties(Config cfg, Node node) has been accomplished,\nthe method can't used it to fill the value of property bar.\n\nThe patch allow configuration files use defined property values immediately in the next property definition.\nAlso, base on the patch for issue SOLR-336, the mechanism works in every configuration files like solr.xml, and solrconfig.xml\n\n\nUse cases:\n\n\tdefine some long base dir at the begining of a configuration file\n\tmaps some JNDI values and refer them in other properties\n\n\n\nUsage:\ndefine two main cores and some test cores, two main cores share a same configuration, and test cores share another one.\nsolr_home/solr.xml\n<solr persistent=\"true\" sharedLib=\"lib\">\n\n  <property name=\"solr.solr.home\" value=\"java:comp/env/solr/home\" />\n\n  <property name=\"mainDir\" value=\"${solr.solr.home:./solr}/cores/main/\" />\n  <property name=\"testDir\" value=\"${solr.solr.home:./solr}/cores/test/\" />\n\t\n  <cores adminPath=\"/admin/cores\">\n    <core name=\"core1\" instanceDir=\"${mainDir}\" />\n    <core name=\"core2\" instanceDir=\"${mainDir}\" />\n    <core name=\"testcore1\" instanceDir=\"${testDir}\" />\n    ...\n  </cores>\n\n</solr>\n\n\n\nsolr_home/cores/main/conf/solrconfig.xml\n<config>\n  <!-- this will create two data dirs: solr_home/cores/main/data/core1 & solr_home/cores/main/data/core2 -->\n  <dataDir>${solr.core.instanceDir}/data/${solr.core.name}</dataDir>\n  ...\n</config>\n\n\n\nCoding notes: (including changes from issue SOLR-336)\n\n\n\tDOMUtil.java\n  public method substituteProperty(String value, Properties coreProperties)\n  method readProperties(Config cfg, Node node) use it to convert property values\n\n\n\n\n\tCoreContainer.java\n  move method readProperties(Config cfg, Node node) to Config.java\n  the moved method got a Config for the first argument already... so I think that will be ok\n\n\n\n\n\tConfig.java\n.\n\t\n\t\tpublic Properties readProperties(Node node)\n     create a context properties including just parsed properties, default JNDI properties and loader's core properties.\n     each property value must be converted by this using DOMUtil#substituteProperty and substituteJNDIProperties\n     before being appended to just parsed properties.\n.\n\t\tpublic Config(SolrResourceLoader loader, String name, InputStream is, String prefix)\n     create a config properties base on loader.getCoreProperties(), overwrite JNDI properties and read properties onto it\n     and pass it to DOMUtil.substituteProperties(doc, properties) instead of loader.getCoreProperties()\n     \n       this ensure the properties defined in a configuration file only works in the same configuration file.\n       I didn't change the core properties itself because I'm not very sure about its influence...\n       properties inheriting between files can be implemented by other patches like SOLR-646\n\n\t\tstatic final Properties DEFAULT_JNDI_PROPERTIES\n     default JNDI mappings. just mapped solr/home to solr.solr.home currently.\n.\n\t\tprivate String substituteJNDIProperty(String value)\n     convert a value string in JNDI format like java:comp/env/xxx into real value\n     but if you don't want it to be convert... I write ${:java:comp/env/xxx} now. ugly... any better solution?\n\t\tprivate Properties substituteJNDIProperties(Properties jndiProps)\n     convert all JNDI values in a Properties object\n.",
    "attachments": {
        "solr-1007(solr-336).patch": "https://issues.apache.org/jira/secure/attachment/12399531/solr-1007%28solr-336%29.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13604364",
            "date": "2013-03-16T18:56:54+0000",
            "content": "SPRING_CLEANING_2013 we can reopen if necessary.  "
        }
    ]
}