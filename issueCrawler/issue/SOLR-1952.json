{
    "id": "SOLR-1952",
    "title": "Bug when searching leading wildcard query",
    "details": {
        "affect_versions": "3.1",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Post/commit the following data for solr example:\n\n\n<add>\n  <doc>\n    <field name=\"id\">1</field>\n    <field name=\"cat\">ab</field>\n  </doc>\n  <doc>\n    <field name=\"id\">2</field>\n    <field name=\"cat\">cb</field>\n  </doc>\n  <doc>\n    <field name=\"id\">3</field>\n    <field name=\"cat\">cbd</field>\n  </doc>\n</add>\n\n\n\nthen query with leading wildcard:\n\nhttp://localhost:8983/solr/select/?q=cat%3A*b\n\nbut no results. This works in 1.4. I wrote the following lucene (using branch_3x) program which queries the same index and got two docs correctly:\n\n\npublic class TestWildcardQuery {\n\n  static final String INDEX = \"solr/example/solr/data/index\";\n  \n  public static void main(String[] args) throws Exception {\n    Directory dir = NIOFSDirectory.open( new File( INDEX ) );\n    IndexSearcher searcher = new IndexSearcher( dir, true );\n    QueryParser parser = new QueryParser( Version.LUCENE_31, \"cat\", new WhitespaceAnalyzer( Version.LUCENE_31 ) );\n    parser.setAllowLeadingWildcard( true );\n    //Query query = parser.parse( \"*b\" );\n    Query query = new WildcardQuery( new Term( \"cat\", \"*b\" ) );\n    TopDocs docs = searcher.search( query, 10 );\n    for( ScoreDoc scoreDoc : docs.scoreDocs ){\n      System.out.println( searcher.doc( scoreDoc.doc ).get( \"cat\" ) );\n    }\n    searcher.close();\n  }\n\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-12985482",
            "date": "2011-01-24T01:42:24+0000",
            "content": "Still seeing this issue Koji? I've converted your test to a Lucene test and written a Solr equivalent - but so far I seem to see correct behavior... "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12985487",
            "date": "2011-01-24T02:02:56+0000",
            "content": "Yes, I think it's gone by fixing recent ReversedWildcardFilter or something. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12985488",
            "date": "2011-01-24T02:15:16+0000",
            "content": "Perhaps related to SOLR-2108 ?\n\nUnfortunately, that one is only fixable in trunk... it uses the automaton stuff to fix the bug. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12985493",
            "date": "2011-01-24T02:37:02+0000",
            "content": "Duplicate of SOLR-2108 "
        }
    ]
}