{
    "id": "SOLR-9752",
    "title": "Reliable test failure in TestFieldCacheSort (Solr copy)",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Duplicate",
        "priority": "Major"
    },
    "description": "I found this to reliably fail on 6x, see the whole dump below. At\nleast the 4 times I tried it. I hit this running the full test suite\nfor SOLR-9166, but then reproduced it on a fresh 6x checkout. \n\nIt did NOT repro on trunk the one time I tried it there.\n\nOS X, Sierra\n\nHere's the test that failed, I didn't try other variants.\n\nant test  -Dtestcase=TestFieldCacheSort\n-Dtests.method=testFieldScoreReverse -Dtests.seed=8A982858396AE681\n-Dtests.slow=true -Dtests.locale=es-VE -Dtests.timezone=Asia/Baku\n-Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\n\n[junit4:pickseed] Seed property 'tests.seed' already defined: 8A982858396AE681\n   [junit4] <JUnit4> says ciao! Master seed: 8A982858396AE681\n   [junit4] Executing 1 suite with 1 JVM.\n   [junit4]\n   [junit4] Started J0 PID(19306@Ericks-MacBook-Pro.local).\n   [junit4] Suite: org.apache.solr.uninverting.TestFieldCacheSort\n   [junit4]   2> NOTE: reproduce with: ant test\n-Dtestcase=TestFieldCacheSort -Dtests.method=testFieldScoreReverse\n-Dtests.seed=8A982858396AE681 -Dtests.slow=true -Dtests.locale=es-VE\n-Dtests.timezone=Asia/Baku -Dtests.asserts=true\n-Dtests.file.encoding=UTF-8\n\n   [junit4] FAILURE 3.18s | TestFieldCacheSort.testFieldScoreReverse <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<0>\nbut was:<1>\n   [junit4]    > at\n__randomizedtesting.SeedInfo.seed([8A982858396AE681:F15FD36FC8A76C02]:0)\n   [junit4]    > at\norg.apache.solr.uninverting.TestFieldCacheSort.testFieldScoreReverse(TestFieldCacheSort.java:445)\n   [junit4]    > at java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene62):\n{value=FSTOrd50}\n, docValues:{}, maxPointsInLeafNode=1095,\nmaxMBSortInHeap=5.032597879580006,\nsim=RandomSimilarity(queryNorm=false,coord=crazy):\n{value=org.apache.lucene.search.similarities.BooleanSimilarity@5077995e}\n,\nlocale=es-VE, timezone=Asia/Baku\n   [junit4]   2> NOTE: Mac OS X 10.12 x86_64/Oracle Corporation\n1.8.0_45 (64-bit)/cpus=8,threads=1,free=243860576,total=257425408\n   [junit4]   2> NOTE: All tests run in this JVM: [TestFieldCacheSort]\n   [junit4] Completed [1/1 (1!)] in 6.14s, 1 test, 1 failure <<< FAILURES!\n   [junit4] Tests with failures [seed: 8A982858396AE681]:\n   [junit4]   -\norg.apache.solr.uninverting.TestFieldCacheSort.testFieldScoreReverse\n   [junit4] JVM J0:     0.57 ..     8.10 =     7.53s\n   [junit4] Execution time total: 8.10 sec.\n   [junit4] Tests summary: 1 suite, 1 test, 1 failure",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-11-11T16:43:47+0000",
            "author": "Yonik Seeley",
            "content": "Hopefully this is just a test bug and not a Lucene bug, but I don't see anything wrong with the test on first glance.\nThe test itself also has nothing to do with the fieldCache - it's testing sorting by score.\n\nMaybe it's something to do with this?\n\nsim=RandomSimilarity(queryNorm=false,coord=crazy):\n\n\nPerhaps some sort of crazy scoring can lead the scores of the two matching documents to be equal, and hence a sort by score won't yield the reverse order of a sort by reverse score (that's what the test is testing).\nSo perhaps this is just a little bit too much random craziness in the test framework that makes this particular test not always true. ",
            "id": "comment-15657484"
        },
        {
            "date": "2016-11-11T19:21:32+0000",
            "author": "Erick Erickson",
            "content": "I confess I was at the end of my endurance yesterday when I filed this, I didn't explore it at all so I'll believe you  ",
            "id": "comment-15657882"
        },
        {
            "date": "2016-11-13T13:49:24+0000",
            "author": "Steve Rowe",
            "content": "This is a duplicate of LUCENE-7555; the seed reported here no longer reproduces for me after the fix committed there.\n\nThis test, like several others (see LUCENE-7554, LUCENE-7556, LUCENE-7557, LUCENE-7558), makes assumptions about scoring that depends on the (randomized) similarity - this issue was exposed by the introduction of BooleanSimilarity a few days ago (LUCENE-5867).  See Michael McCandless's comment on LUCENE-7557 for more details. ",
            "id": "comment-15661516"
        }
    ]
}