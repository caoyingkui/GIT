{
    "id": "SOLR-4698",
    "title": "\"java.lang.OutOfMemoryError: Map failed\"  when run in JRE64",
    "details": {
        "affect_versions": "4.0",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "scripts and tools"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "we make solr run in tomcat. and now there are 10 million records desployed averagely in solrcloud which has 3 shards. each record's size is about 1.5k. \nfirst we used JRE32. then we found it was not fast enough when the current search request count reached 300. \nso we think maybe the memory assigned for solr is not enough. and we replace JRE32 with JRE64, and set \"JAVA_OPTS=\"-Xms2048m -Xmx5120m\"\" in $TOMCAT_HOME/bin/catalina.sh. but when we restart the solrcloud, we find it failed. the error log is below:\n2013-04-10 18:58:36,174 INFO org.apache.solr.core.SolrCore:847 - [metadata]  CLOSING SolrCore org.apache.solr.core.SolrCore@74a638fc\n2013-04-10 18:58:36,177 INFO org.apache.solr.core.SolrCore:1658 - [metadata] Closing main searcher on request.\n2013-04-10 18:58:36,178 ERROR org.apache.solr.core.CoreContainer:875 - Unable to create core: metadata\norg.apache.solr.common.SolrException: Error opening new searcher\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:721)\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:566)\n        at org.apache.solr.core.CoreContainer.create(CoreContainer.java:850)\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:534)\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:356)\n        at org.apache.solr.core.CoreContainer$Initializer.initialize(CoreContainer.java:308)\n        at org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:107)\n        at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:277)\n        at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:258)\n        at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:382)\n        at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:103)\n        at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4650)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5306)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)\n        at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1114)\n        at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1673)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)\nCaused by: org.apache.solr.common.SolrException: Error opening new searcher\n        at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1310)\n        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1422)\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:696)\n        ... 24 more\nCaused by: java.io.IOException: Map failed\n        at sun.nio.ch.FileChannelImpl.map(FileChannelImpl.java:748)\n        at org.apache.lucene.store.MMapDirectory.map(MMapDirectory.java:284)\n        at org.apache.lucene.store.MMapDirectory$MMapIndexInput.<init>(MMapDirectory.java:256)\n        at org.apache.lucene.store.MMapDirectory.openInput(MMapDirectory.java:224)\n        at org.apache.lucene.store.NRTCachingDirectory.openInput(NRTCachingDirectory.java:232)\n        at org.apache.lucene.codecs.lucene40.Lucene40PostingsReader.<init>(Lucene40PostingsReader.java:68)\n        at org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat.fieldsProducer(Lucene40PostingsFormat.java:316)\n        at org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader.<init>(PerFieldPostingsFormat.java:194)\n        at org.apache.lucene.codecs.perfield.PerFieldPostingsFormat.fieldsProducer(PerFieldPostingsFormat.java:233)\n        at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:107)\n        at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:57)\n        at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:62)\n        at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:783)\n        at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:52)\n        at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:87)\n        at org.apache.solr.core.StandardIndexReaderFactory.newReader(StandardIndexReaderFactory.java:34)\n        at org.apache.solr.search.SolrIndexSearcher.<init>(SolrIndexSearcher.java:119)\n        at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1286)\nat org.apache.solr.search.SolrIndexSearcher.<init>(SolrIndexSearcher.java:119)\n        at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1286)\n        ... 26 more\nCaused by: java.lang.OutOfMemoryError: Map failed\n        at sun.nio.ch.FileChannelImpl.map0(Native Method)\n        at sun.nio.ch.FileChannelImpl.map(FileChannelImpl.java:745)\n        ... 43 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "zhuojunjian",
            "id": "comment-13628907",
            "date": "2013-04-11T13:11:40+0000",
            "content": "no one can provide any idea? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717301",
            "date": "2013-07-23T18:47:47+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971017",
            "date": "2014-04-16T12:56:54+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Sebastian Wanisch",
            "id": "comment-15377108",
            "date": "2016-07-14T15:22:46+0000",
            "content": "This is not a bug. I guess your index is to big for allocating it in the virtual address space. You have to check that \u201culimit -v\u201d and \u201culimit -m\u201d both report \u201cunlimited\u201d on your system. See also this blog: \"How to configure my operating system and Java VM to make optimal use of MMapDirectory\" http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html\n\nThis issue can be closed! "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-15377147",
            "date": "2016-07-14T15:49:09+0000",
            "content": "Not a code issue. "
        }
    ]
}