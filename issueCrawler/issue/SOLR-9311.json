{
    "id": "SOLR-9311",
    "title": "solrcloud so many connections",
    "details": {
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.9",
        "status": "Resolved",
        "resolution": "Information Provided",
        "priority": "Major"
    },
    "description": "firstly, I do not know wether it is a bug or a wrong usage. if this is a wrong usage, I will opligize to disturb you, and tell me what the wrong usage is.\n\nWe are using Solrj 4.9.1 to connect to a Zookeeper. and the solr server version is 4.9.0 We are currently using CloudSolrServer as a singleton to operate index data, and I believe that solrj to zookeeper is a TCP connection, and zookeeper to solrcloud internal is actually a httpconnection.\n\nwe use the zabbix to monitor the solrcloud status, and we deploy solr in Wildfly(JBOSS), for example the http port is 8180, we find the number that connecting with solr on port 8180 is so high. for now  we find the number can be around 4000, that is too large.and we find that with the increasing connections, the query speed become slow. the CPU of the solr sever is unstable, and the speed to commit new index data becomes slow as well.\n\nbesides, the JDK version is 1.7.25 to running solr server.\n\non the other hand, we have 3 cores with 5 shards, and each shard with one leader and one replication. now the data account goes to be 100 million, and it is still growing up.\nplease see the screenshot of Zabbix in the attachments.\n\nplease help me, and looking forward to your reply.\n\nThanks.\nKent",
    "attachments": {
        "connections.png": "https://issues.apache.org/jira/secure/attachment/12818395/connections.png",
        "CPU.png": "https://issues.apache.org/jira/secure/attachment/12818397/CPU.png",
        "shards.png": "https://issues.apache.org/jira/secure/attachment/12818396/shards.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-07-16T14:38:21+0000",
            "author": "Junfeng Mu",
            "content": "shoud I use the solrj verson of 4.9.0 instead of 4.9.1?\n\nsolrj version requires strict agreement with the solr server version?\n\nThanks.\nKent ",
            "id": "comment-15380800"
        },
        {
            "date": "2016-07-16T14:49:18+0000",
            "author": "Junfeng Mu",
            "content": "and we find that when we shutdown the server (the caller requestor) , the connections on http port(8180 for example) closed  immediately. the solrj code of CloudSolrServer as below:\n\n    public synchronized static CloudSolrServer getSolrCloudReadServer() {\n        if (reviewSolrCloudReadServer == null) \n{\n            ModifiableSolrParams params = new ModifiableSolrParams();\n            params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 1000);\n            params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 100);\n            HttpClient client = HttpClientUtil.createClient(params);                        \n            LBHttpSolrServer lbServer = new LBHttpSolrServer(client);\n            lbServer.setConnectionTimeout(ReviewProperties.getCloudConnectionTimeOut());\n            lbServer.setSoTimeout(ReviewProperties.getCloudSoTimeOut());\n            reviewSolrCloudReadServer = new CloudSolrServer(ReviewProperties.getZkHost(),lbServer);\n            reviewSolrCloudReadServer.setDefaultCollection(ReviewProperties.getZkReviewConnection());\n            reviewSolrCloudReadServer.setZkClientTimeout(ReviewProperties.getZkClientTimeout());\n            reviewSolrCloudReadServer.setZkConnectTimeout(ReviewProperties.getZkConnectTimeout());\n        }\n        return reviewSolrCloudReadServer;\n    }\n\nbesides, the zookeeper version is 3.4.6.\n\nThanks.\nKent ",
            "id": "comment-15380809"
        },
        {
            "date": "2016-10-31T15:50:09+0000",
            "author": "Erick Erickson",
            "content": "Kent:\n\nRan across this kind of at random. I know there have been a number of improvements in this area in the 5.5.3 and 6.2 time-frames, with at least one additional improvement coming in the 6.3 (soon to be released) time frame.\n\nAt any rate, there is very little chance that any fixes would be back-ported to 4.x as development has long been stopped on that branch.\n\nSo what do you think about closing this ticket?\n\nBest,\nErick ",
            "id": "comment-15622527"
        },
        {
            "date": "2016-11-22T23:32:14+0000",
            "author": "Erick Erickson",
            "content": "No reply and this isn't likely to be addressed for 4.x so closing. ",
            "id": "comment-15688297"
        }
    ]
}