{
    "id": "LUCENE-6310",
    "title": "FilterScorer should delegate asTwoPhaseIterator",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Task"
    },
    "description": "FilterScorer is like FilterInputStream for a scorer. But today it doesn't delegate approximations, I think it should. Most things using this api are just modifying the score and so on.",
    "attachments": {
        "LUCENE-6310.patch": "https://issues.apache.org/jira/secure/attachment/12701556/LUCENE-6310.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14341396",
            "author": "Robert Muir",
            "date": "2015-02-28T07:18:50+0000",
            "content": "simple patch.\n\n\n\tFilteredQuery.LeapFrog uses ConjunctionDISI and works with approximations.\n\tFilteredQuery.QueryFirst returns the query as the approximation.\n\tCustomScoreQuery and a few other oddball scorers pass thru approximation support where they did not before.\n\n\n\nI think this is ok default behavior, given how FilterScorer is typically used.  "
        },
        {
            "id": "comment-14341406",
            "author": "Robert Muir",
            "date": "2015-02-28T07:49:31+0000",
            "content": "updated patch:\n\n\tcleanup FilterScorer to have a final next/advance/doc so there are no performance or correctness traps.\n\tfix FilteredQuery queryFirst impl: it needed matches(), but nothing tested this!\n\tput query with approximation support inside FilteredQuery in SearchEquivalenceTestBase\n\tcleanup reqexcl etc to no longer extend FilterScorer.\n\n "
        },
        {
            "id": "comment-14341409",
            "author": "Robert Muir",
            "date": "2015-02-28T07:59:28+0000",
            "content": "More updates:\n\n\tFilteredQuery.QueryFirst supports nested approximations (when the scorer itself is something like a phrase query).\n\tCustomScoreQuery cleanups (simpler FilterScorer again).\n\n "
        },
        {
            "id": "comment-14341416",
            "author": "Robert Muir",
            "date": "2015-02-28T08:29:14+0000",
            "content": "Better testing in SearchEquivalenceTestBase of filters. we randomly pick QWF or \"SlowWrapperFilter\" that acts like a legacy filter, and it sometimes supports bits(). "
        },
        {
            "id": "comment-14341424",
            "author": "Robert Muir",
            "date": "2015-02-28T08:43:09+0000",
            "content": "I think the asTwoPhaseIterator should be final too. otherwise I am happy. two-phase should now work thru customscorequery and legacy cached filters (or something not QWF). "
        },
        {
            "id": "comment-14341442",
            "author": "Adrien Grand",
            "date": "2015-02-28T09:38:37+0000",
            "content": "+1\n\nI think the asTwoPhaseIterator should be final too\n\nRight, it feels wrong to have nextDoc/advance final but not asTwoPhaseIterator. "
        },
        {
            "id": "comment-14341658",
            "author": "Robert Muir",
            "date": "2015-02-28T17:08:13+0000",
            "content": "updated patch with final asTwoPhaseIterator() "
        },
        {
            "id": "comment-14341706",
            "author": "Robert Muir",
            "date": "2015-02-28T18:25:00+0000",
            "content": "Update patch:\n\nRemove fragile test in join/ that relies upon how queries are intersected. This already had to use a \"FilterWrapper\" to disable adrien's optimizations for QWF. Now that we use ConjunctionDISI, we actually call nextDoc() here on the lead where we called advance() before. In general we shouldnt make these kinds of assumptions in tests.\n\nall tests pass. "
        },
        {
            "id": "comment-14342221",
            "author": "ASF subversion and git services",
            "date": "2015-03-01T13:27:32+0000",
            "content": "Commit 1663095 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1663095 ]\n\nLUCENE-6310: FilterScorer supports two-phase always, adds two-phase support to some long-tail scorers "
        },
        {
            "id": "comment-14342227",
            "author": "ASF subversion and git services",
            "date": "2015-03-01T13:50:41+0000",
            "content": "Commit 1663100 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1663100 ]\n\nLUCENE-6310: FilterScorer supports two-phase always, adds two-phase support to some long-tail scorers "
        },
        {
            "id": "comment-14495350",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:44+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}