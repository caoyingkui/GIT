{
    "id": "LUCENE-5749",
    "title": "analyzers should be further customizable to allow for better code reuse",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "modules/analysis"
        ],
        "affect_versions": "4.8.1",
        "status": "Open",
        "fix_versions": []
    },
    "description": "To promote code reuse, the customizability of the analyzers included with Lucene (e.g. EnglishAnalyzer) ought to be further improved. \n\nTo illustrate, it is currently difficult to specify general stemming behavior without having to modify each and every analyzer class. In our case, we had to change the constructors of every analyzer class to accept an AnalyzerOption argument. \n\nThe AnalyzerOption class has a getStemStrategy() method. StemStrategy is defined as follows:\n\npublic enum StemStrategy \n{ AGGRESSIVE,  LIGHT, NONE }\n; \n\nWe needed to modify over 20 or so Lucene classes. This is obviously not ideal from a code reuse and maintainability standpoint.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14026292",
            "author": "Robert Muir",
            "content": "Personally I don't think the analyzers should have all the options they have today: they should just be simple, practical examples.\n\nits really like 2 or 3 lines of code to make your own analyzer. \n\nMaybe the problem is that since Analyzer is java, people see it as code when its really just a definition. I would rather change the analyzers to just be default configurations in a text file or something so that people won't want to extend them anymore  ",
            "date": "2014-06-10T10:02:56+0000"
        },
        {
            "id": "comment-14026294",
            "author": "Jamie",
            "content": "Its not really two lines of code. There are many analyzers. ",
            "date": "2014-06-10T10:05:03+0000"
        },
        {
            "id": "comment-14026299",
            "author": "Robert Muir",
            "content": "Right, its zero lines of code actually. These analyzers are just \"default/example\" chains. They arent code.\nIts just not feasible or even wanted to add such options to them, its too difficult to maintain. The current analyzers already look hellacious because of the existing constraints like backwards compatibility that we have to lug around for years. \n\nPersonally, stuff like back compat on what are just default definitions, Versions, stopword options, etc totally discourages me from improving any of the existing analyzers (I would rather avoid the hassle), even though quite a few aren't in great shape and could use better defaults or algorithms. \n\nif you want to do something expert like change the default stemming algorithm, please define your own chain. Its really not that hard. ",
            "date": "2014-06-10T10:34:11+0000"
        },
        {
            "id": "comment-14026302",
            "author": "Jamie",
            "content": "Robert, I've already completed the exercise. It wasn't hard at all, just laborious and time consuming. There are something like twenty or more classes that need to be changed. ",
            "date": "2014-06-10T10:37:23+0000"
        }
    ]
}