{
    "id": "SOLR-11555",
    "title": "If the query terms reduce to nothing, filter(clause) produces an NPE whereas fq=clause does not",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.2.1",
            "7.3"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "",
    "attachments": {
        "SOLR-11555.patch": "https://issues.apache.org/jira/secure/attachment/12894226/SOLR-11555.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-26T21:37:00+0000",
            "content": "Patch with test. This gives the same behavior (albeit a slightly different explain) for filter(wdf:&) and fq=wdf:&. All it does is assign MatchNoDocsQuery to the internal q when a null q comes in to the c'tor.\n\nThe attached test succeeds, I have not yet run it through precommit and the full test suite, will do tonight and commit soon unless there are objections. ",
            "author": "Erick Erickson",
            "id": "comment-16221274"
        },
        {
            "date": "2017-10-26T22:07:00+0000",
            "content": "Hmmm, that's interesting... how did this null query come to be?  I didn't think our lucene qparser would ever return null.  If it can, I wonder if any other places could be hit by a NPE (and if we should fix it at a lower level) ",
            "author": "Yonik Seeley",
            "id": "comment-16221317"
        },
        {
            "date": "2017-10-26T22:39:30+0000",
            "content": "Fixing it at a lower level would certainly be preferable. I looked briefly at another couple of classes and it seems that the same kind of problem is possible in other places.\n\nbq: how did this null query come to be\nGuessing this is a rhetorical question, but answering anyway....\n\nWordDelimiter(Graph)FilterFactory got a single term that was all punctuation and removed them all. I don't know at this point whether an actual null was returned as the token or an empty string and/or if this behavior changed..... The test case exercises the situation though. ",
            "author": "Erick Erickson",
            "id": "comment-16221375"
        },
        {
            "date": "2017-10-26T23:12:23+0000",
            "content": "Guessing this is a rhetorical question\nNot really... I don't recall seeing null queries come out of the lucene query parser before, and there is code that should prevent that from happening.\nSolrQueryParser.parse() has the following code:\n\n      return res!=null ? res : newBooleanQuery().build();\n\n\nWhich could prob be replaced with MatchNoDocsQuery these days... ",
            "author": "Yonik Seeley",
            "id": "comment-16221412"
        },
        {
            "date": "2017-10-26T23:15:53+0000",
            "content": "Ah, I see - filter clause doesn't invoke the parser from the top level since it's part of the parser itself.  So we're good, and your fix is fine.  External callers won't see \"null\" coming out of our query parsers. ",
            "author": "Yonik Seeley",
            "id": "comment-16221425"
        },
        {
            "date": "2017-10-27T03:24:40+0000",
            "content": "Very related:  It's a shame that QParser.getQuery(...) and parse() can return a null query.  This leads to bugs since it's rare and this method doesn't even document this possibility.  Some call sites treat as the equivalent as MatchAllDocsQuery (e.g. fq is one) while others treat as equivalent to MatchNoDocsQuery (AnalyticsHandler is one), and others will blow up with NPE (e.g. BoolQParserPlugin, others). ",
            "author": "David Smiley",
            "id": "comment-16221660"
        },
        {
            "date": "2017-10-27T14:50:11+0000",
            "content": "Thanks Yonik and David!\n\nI'd feel a lot safer if we didn't have to catch this case wherever these are called. I'll poke around a bit and search for other places that are vulnerable. I suppose to do really safely any place calling these methods that already checks for null and does something else would have to continue to function as it does now.\n\nWon't happen today, but maybe this weekend. ",
            "author": "Erick Erickson",
            "id": "comment-16222485"
        },
        {
            "date": "2017-12-27T20:05:38+0000",
            "content": "Commit 05ab5e10ae2309a307951d753ec0c141b6c12f7d in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=05ab5e1 ]\n\nSOLR-11555: If the query terms reduce to nothing, filter(clause) produces an NPE whereas fq=clause does not ",
            "author": "ASF subversion and git services",
            "id": "comment-16304762"
        },
        {
            "date": "2017-12-27T20:11:01+0000",
            "content": "Commit a78db4b259551464ba252e54d84e95d6c456b461 in lucene-solr's branch refs/heads/branch_7x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a78db4b ]\n\nSOLR-11555: If the query terms reduce to nothing, filter(clause) produces an NPE whereas fq=clause does not\n\n(cherry picked from commit 05ab5e1) ",
            "author": "ASF subversion and git services",
            "id": "comment-16304768"
        },
        {
            "date": "2017-12-27T20:12:20+0000",
            "content": "Same patch with CHANGES.txt ",
            "author": "Erick Erickson",
            "id": "comment-16304771"
        },
        {
            "date": "2018-01-09T00:36:07+0000",
            "content": "Commit 4d919e2c2e34693a5cfa3cd2170ac3eb3ebdf465 in lucene-solr's branch refs/heads/branch_7_2 from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4d919e2 ]\n\nSOLR-11555: If the query terms reduce to nothing, filter(clause) produces an NPE whereas fq=clause does not ",
            "author": "ASF subversion and git services",
            "id": "comment-16317423"
        }
    ]
}