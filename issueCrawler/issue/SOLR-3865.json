{
    "id": "SOLR-3865",
    "title": "CloudSolrServer connection leak when using wrong zk connection string",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The problem lies in this bit of code:\n\n  public void connect() {\n    if (zkStateReader == null) {\n      synchronized (this) {\n        if (zkStateReader == null) {\n          try {\n            ZkStateReader zk = new ZkStateReader(zkHost, zkConnectTimeout,\n                zkClientTimeout);\n            zk.createClusterStateWatchersAndUpdate();\n            zkStateReader = zk;\n          } catch (InterruptedException e) {\n\n\n\nWhen the zkHost is something like \"localhost:2181/solr\" but /solr doesn't exist in solr you get a KeeperException$NoNodeException.\n\nUnfortunately at this point the ZkStateReader has already been created,\nand it's never assigned to zkStateReader so it's never closed, and somewhere along the way a zookeeper thread is leaked (verified using jstack \n{PID}\n|grep EventThread).\n\nThe solution would be to try zk.close() when there was an exception before you reach the line \"zkStateReader = zk\"",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Karel Vervaeke",
            "id": "comment-13460524",
            "date": "2012-09-21T14:36:27+0000",
            "content": "Fixed the bug description - sorry for the noise "
        }
    ]
}