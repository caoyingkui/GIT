{
    "id": "SOLR-5025",
    "title": "Implement true re-sharding for SolrCloud",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Wish",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Shard splitting is an incredibly nice thing to have, but it doesn't completely address the idea of re-sharding.\n\nLet's say that you currently have three shards, only your index is three or four times as big as you ever expected it to get when you first built it.  You've added nodes, which helps, but doesn't address the fundamental fact that each of your shards is too big for an individual server.  If you had created eight shards up front, everything would be smooth.  It's not possible with shard splitting to go from three equal size shards to eight equal size shards.\n\nA new feature to accomplish true re-sharding would solve this.  One implementation possibility:  Create a new collection with the new numShards, split all the documents accordingly to the new replicas, then rename/swap the collection and core names.\n\nThere are a number of sticky points to iron out regardless of the implementation method chosen, some of which could be really hairy.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-13704237",
            "date": "2013-07-10T05:47:42+0000",
            "content": "I looked around for an existing issue before filing this, didn't see one. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13704500",
            "date": "2013-07-10T12:32:51+0000",
            "content": "+1\n\nAnother implementation possibility: Re-partition the hash ring with the desired number of shards, then split each existing shard along the new partition boundaries.  This would require:\n\n\n\tthe ability to split shards at arbitrary points in the hash ring, creating unequally sized sub-shards\n\tthe ability to split shards into more than two (SOLR-5004)\n\tmerging new shards whose target section of the new hash ring partition falls across old shard boundary/ies\n\n\n\nIn addition to growing the number of shards in a collection, this strategy could also be used to reduce the number of shards. "
        },
        {
            "author": "Tomer Levi",
            "id": "comment-14185088",
            "date": "2014-10-27T12:22:53+0000",
            "content": "Another possible solution is to use HBase style sharding,\n   1. Let Solr automatically split a shard as it grows above some limit (number of documents/size in MB like HBase).\n   2. As we add more Solr instances to the cluster, Solr will auto balance itself by moving shards from one instance to the newly added instance. \n\n       For example:\n       ==========\n       -Let's say we initially started with 4 shards on 2 Solr instances.\n\n\tAt some point the Shards split into 8 shards.\n       -Later we added 1 more Solr instance (2+1=3)\n       -The automatic balance, will migrate 1 shards form each original instance to the new Sor instance.\n\n\n\n Eventually we would end up with:\n---------------------------------------------\nInstance 1 : 3 shards\nInstance 2: 3 shards\nInstance 3: 2 shards \n\nIn other words, instead of moving documents we can migrate entire shards using an automatic balancing. "
        },
        {
            "author": "Cassandra Targett",
            "id": "comment-15488022",
            "date": "2016-09-13T18:35:25+0000",
            "content": "I wonder if the Rebalance API in SOLR-9241 takes care of a lot of the ideas suggested here? "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-15488084",
            "date": "2016-09-13T18:58:57+0000",
            "content": "SOLR-9241 has an actual implementation that can accomplish the feature described here. "
        }
    ]
}