{
    "id": "LUCENE-5748",
    "title": "SORTED_NUMERIC dv type",
    "details": {
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ]
    },
    "description": "Currently for Strings you have SORTED and SORTED_SET, capable of single and multiple values per document respectively.\n\nFor multi-numerics, there are only a few choices:\n\n\tencode with NumericUtils into byte[]'s and store with SORTED_SET.\n\tencode yourself per-document into BINARY.\n\n\n\nBoth of these techniques have problems: \n\nSORTED_SET isn't bad if you just want to do basic sorting (e.g. min/max) or faceting counts: most of the bloat in the \"terms dict\" is compressed away, and it optimizes the case where the data is actually single-valued, but it falls apart performance-wise if you want to do more complex stuff like solr's analytics component or elasticsearch's aggregations: the ordinals just get in your way and cause additional work, deref'ing each to a byte[] and then decoding that back to a number. Worst of all, any mathematical calculations are off because it discards frequency (deduplicates).\n\nusing your own custom encoding in BINARY removes the unnecessary ordinal dereferencing, but you trade off bad compression and access: you have no real choice but to do something like vInt within each byte[] for the doc, which means even basic sorting (e.g. max) is slow as its not constant time. There is no chance for the codec to optimize things like dates with GCD compression or optimize the single-valued case because its just an opaque byte[].\n\nSo I think it would be good to explore a simple long[] type that solves these problems.",
    "attachments": {
        "LUCENE-5748.patch": "https://issues.apache.org/jira/secure/attachment/12649470/LUCENE-5748.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14025839",
            "author": "Robert Muir",
            "content": "Here's a prototype patch: just the default codec impl and simple support for sorting on multiple numeric values.\n\nI didn't implement any simpletext, direct, memory, etc or all the other stuff needed yet.\n\nHere's what i think is a minimal API:\n\n/**\n * A list of per-document numeric values, sorted \n * according to {@link Long#compare(long, long)}.\n */\npublic abstract class SortedNumericDocValues {\n  /** \n   * Positions to the specified document \n   */\n  public abstract void setDocument(int doc);\n  \n  /** \n   * Retrieve the value for the current document at the specified index. \n   * An index ranges from {@code 0} to {@code count()-1}. \n   */\n  public abstract long valueAt(int index);\n  \n  /** \n   * Retrieves the count of values for the current document. \n   * This may be zero if a document has no values.\n   */\n  public abstract int count();\n}\n\n\n ",
            "date": "2014-06-09T22:08:34+0000"
        },
        {
            "id": "comment-14026380",
            "author": "Adrien Grand",
            "content": "+1 I like it! ",
            "date": "2014-06-10T12:19:17+0000"
        },
        {
            "id": "comment-14028789",
            "author": "Robert Muir",
            "content": "Updated patch with impls for all codecs (4.9, disk, memory, direct, simpletext, etc), and with docs and tests. I think its ready.  ",
            "date": "2014-06-12T03:34:27+0000"
        },
        {
            "id": "comment-14028884",
            "author": "Shai Erera",
            "content": "Reviewed the patch, looks good. Maybe add a message to some of the UOEs and IllegalStateExcs? I'm +1 to commit anyway. ",
            "date": "2014-06-12T06:54:29+0000"
        },
        {
            "id": "comment-14028993",
            "author": "Robert Muir",
            "content": "Those exceptions match the exceptions of the code around them for consistency, e.g. they are consistent with what we do for all the other dv types. why have a special exception message that is different just for this type.\n\nmoreover, they are impossible to hit. For example a norms field just cannot be multi-valued, and segmentreader checks that the codec is only \"asked\" for a field if it actually has that type listed in fieldinfos. If something needs to be changed here, can you open a separate issue since its unrelated to this patch? ",
            "date": "2014-06-12T10:16:56+0000"
        },
        {
            "id": "comment-14029011",
            "author": "Shai Erera",
            "content": "As I said, +1 to commit anyway. I like exceptions w/ messages, but don't let it stop you from committing. The code is fine as it is already. ",
            "date": "2014-06-12T10:36:32+0000"
        },
        {
            "id": "comment-14029023",
            "author": "Michael McCandless",
            "content": "+1 ",
            "date": "2014-06-12T11:06:09+0000"
        },
        {
            "id": "comment-14029222",
            "author": "Adrien Grand",
            "content": "+1 ",
            "date": "2014-06-12T14:51:54+0000"
        },
        {
            "id": "comment-14029674",
            "author": "ASF subversion and git services",
            "content": "Commit 1602277 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1602277 ]\n\nLUCENE-5748: Add SORTED_NUMERIC docvalues type ",
            "date": "2014-06-12T19:40:38+0000"
        },
        {
            "id": "comment-14029770",
            "author": "ASF subversion and git services",
            "content": "Commit 1602286 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1602286 ]\n\nLUCENE-5748: Add SORTED_NUMERIC docvalues type ",
            "date": "2014-06-12T20:42:27+0000"
        }
    ]
}