{
    "id": "LUCENE-1310",
    "title": "Phrase query with term repeated 3 times requires more slop than expected",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.3.1,                                            2.3.2",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Consider a document with the text \"A A A\".\nThe phrase query \"A A A\" (exact match) succeeds.\nThe query \"A A A\"~1 (same document and query, just increasing the slop value by one) fails.\n\"A A A\"~2 succeeds again.\n\nIf the exact match succeeds, I wouldn't expect the same query but with more slop to fail.  The fault seems to require some term to be repeated at least three times in the query, but the three occurrences do not need to be adjacent.  I will attach a file that contains a set of JUnit tests that demonstrate what I mean.",
    "attachments": {
        "TestSloppyPhraseQuery.java": "https://issues.apache.org/jira/secure/attachment/12384342/TestSloppyPhraseQuery.java",
        "LUCENE-1310.1.patch": "https://issues.apache.org/jira/secure/attachment/12384809/LUCENE-1310.1.patch",
        "LUCENE-2.3.1-1310.patch": "https://issues.apache.org/jira/secure/attachment/12385000/LUCENE-2.3.1-1310.patch",
        "LUCENE-1310.patch": "https://issues.apache.org/jira/secure/attachment/12384774/LUCENE-1310.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-06-26T16:28:55+0000",
            "content": "I am too getting the error with the test. It is a bug indeed.\nI think I see where the problem is - working on it. ",
            "author": "Doron Cohen",
            "id": "comment-12608484"
        },
        {
            "date": "2008-06-26T18:05:36+0000",
            "content": "Patch with a fix.\n\nProblem was in the logic for advancing PhrasePositions that were pointing to exactly the same term in the document.\nNote that this advancing is required to avoid false matches (as was fixed in LUCENE-736).\nHowever must first advance the PhrasePosition whose offset (in the query) is the highest.\n\nAs a side effect of this fix sorting of the \"repeats\" array (at scorer initialization) is no longer required.\n\nGrant's test is also in the patch, slightly modified.\n\nGrant, can you give it a try and report here? ",
            "author": "Doron Cohen",
            "id": "comment-12608528"
        },
        {
            "date": "2008-06-27T03:57:37+0000",
            "content": "There is a potential NPE.  I am adding a patch (which should apply on top of the previous patch) that adds a test case and possible fix.\n\nI will continue testing this.  Thanks for looking at it, Doron. ",
            "author": "Grant Glouser",
            "id": "comment-12608648"
        },
        {
            "date": "2008-06-28T16:04:23+0000",
            "content": "You're right! And thanks for cacthing this!\nNPE is possible and I see it too with the new test. \nI think the suggested new fix is likely to miss additional matches in the same doc. \nI'll later post a test that shows this.\n\n(As a side comment, its useful to post patches named \"LUCENE-NNN.patch\" where NNN is the issue number.\nThis way JIRA shows which fix is the most recent very clearly, and also, being a complete patch, everyone can easily apply the entire patch.\nMore on this in the Wiki under HowToContribute.) ",
            "author": "Doron Cohen",
            "id": "comment-12609022"
        },
        {
            "date": "2008-06-28T16:29:18+0000",
            "content": "Updated patch with a fix for the NPE and with a test that fails with the previous fix for the NPE.\nThe point is to switch to the pp with higher (query) offset in case two pps are in the same (doc) position. ",
            "author": "Doron Cohen",
            "id": "comment-12609025"
        },
        {
            "date": "2008-06-28T20:19:08+0000",
            "content": "Previous patch might restore the queue wrongly - pop pp but put pp2.\nThis patch fixes that by returning the correct pp into the pq.\nHowever it is yet not perfect since the one pp returned to pq might not be the last one advanced.\nThis means pq could be sorted incorrectly with regard to repeating terms.\nI didn't manage to create a test case that fails due to this - testDoc4_Query3_All_Slops_Should_match in the test was the last trial to catch this.\nThe only perfect solution I see is to re-populate the queue when this happens but this is costly and I tend not to do it.\nOpen for suggestions...\n ",
            "author": "Doron Cohen",
            "id": "comment-12609047"
        },
        {
            "date": "2008-06-30T15:56:42+0000",
            "content": "Updated patch fixes this issue. \nIn case of repeating terms in the query, this might be slower than previous patch, but it is supposedly correct in all cases while the previous one was not guaranteed to be always correct. There are no performance implications for the more common case of no repeating terms in the query.\nI plan to commit this in a day or two. ",
            "author": "Doron Cohen",
            "id": "comment-12609271"
        },
        {
            "date": "2008-06-30T23:47:20+0000",
            "content": "termPositionsDiffer can return the PhrasePositions that was passed in (pp), which means you could be passing the same PhrasePositions to flip in both arguments.  But flip assumes that the arguments are different.  This can result in an ArrayIndexOutOfBoundsException in flip.  Perhaps just checking that pp2 != pp on line 76 would be sufficient to avoid this.\n\nI have not been able to come up with a simple test case that triggers this.  I have a complex one, but it uses a custom Analyzer. ",
            "author": "Grant Glouser",
            "id": "comment-12609406"
        },
        {
            "date": "2008-07-01T03:56:50+0000",
            "content": "You're right, Grant, good catch, thanks!\n(I'm sure had this check but lost it when refactoring flipping to a method)\nUpdated patch to follow. ",
            "author": "Doron Cohen",
            "id": "comment-12609436"
        },
        {
            "date": "2008-07-01T04:01:31+0000",
            "content": "Updated patch with required check (pp!=pp2) before flipping as Grant suggested. ",
            "author": "Doron Cohen",
            "id": "comment-12609438"
        },
        {
            "date": "2008-07-01T04:28:32+0000",
            "content": "same patch but for 2.3.1. ",
            "author": "Doron Cohen",
            "id": "comment-12609445"
        },
        {
            "date": "2008-08-03T15:54:22+0000",
            "content": "Committed to trunk.\n\nI was wondering if this should be backported to 2.3.1 and/or 2.3.2. \nIt is not a major bug so I think not, though it might be critical to some application.\nDidn't find a guideline for this in the wiki but I may be missing it? ",
            "author": "Doron Cohen",
            "id": "comment-12619339"
        },
        {
            "date": "2008-08-05T07:44:04+0000",
            "content": "Fixed, thanks for the review Grant! ",
            "author": "Doron Cohen",
            "id": "comment-12619809"
        }
    ]
}