{
    "id": "LUCENE-7010",
    "title": "Create MergePolicyWrapper",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/index"
        ],
        "labels": "",
        "fix_versions": [
            "trunk",
            "5.5"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "We currently have two MergePolicy implementations that are wrappers around another MP: SortingMergePolicy and UpgradeIndexMergePolicy. A MergePolicyWrapper will simplify building additional such wrapping MPs by delegating all method calls to the wrapped instance, and allowing implementations to override only what they need.\n\nAlso, this issue removes the final modifier from MP public methods so that they can be delegated properly. See LUCENE-7008 for a test failure that uncovered this issue.",
    "attachments": {
        "LUCENE-7010.patch": "https://issues.apache.org/jira/secure/attachment/12786011/LUCENE-7010.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15130293",
            "author": "Uwe Schindler",
            "date": "2016-02-03T12:07:44+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15130329",
            "author": "Shai Erera",
            "date": "2016-02-03T12:50:54+0000",
            "content": "Patch adds MergePolicyWrapper and modifies (quite a few) existing MPs to extend it. "
        },
        {
            "id": "comment-15130340",
            "author": "Uwe Schindler",
            "date": "2016-02-03T13:02:31+0000",
            "content": "Why this in NoMergePolicy?\n\n\n+  @Override\n+  public double getNoCFSRatio() {\n+    return super.getNoCFSRatio();\n+  }\n+  \n+  @Override\n+  public void setMaxCFSSegmentSizeMB(double v) {\n+    super.setMaxCFSSegmentSizeMB(v);\n+  }\n+  \n+  @Override\n+  public void setNoCFSRatio(double noCFSRatio) {\n+    super.setNoCFSRatio(noCFSRatio);\n+  }\n\n "
        },
        {
            "id": "comment-15130381",
            "author": "Shai Erera",
            "date": "2016-02-03T13:30:02+0000",
            "content": "Why this in NoMergePolicy?\n\nBecause TestNoMergePolicy asserts that all MP methods are overridden by NoMergePolicy. Since those methods have no actual effect on NoMP I've decided to delegate them to super. "
        },
        {
            "id": "comment-15130407",
            "author": "Uwe Schindler",
            "date": "2016-02-03T13:48:32+0000",
            "content": "Sorry I still don't get it! In your patch, TestMergePolicyWrapper  is the only place that checks if all methods are overriden, but NoMergePolicy extends MergePolicy and there is no TestNoMergePolicy. Could it be that your patch is missing a file?\n\nIn any case I dont understand why this test should exist at all for NoMergePolicy!?! "
        },
        {
            "id": "comment-15130479",
            "author": "Shai Erera",
            "date": "2016-02-03T14:34:52+0000",
            "content": "How can you not find TestNoMergePolicy? It's been existed in the code since NoMergePolicy was added. Here's the relevant test that I was talking about:\n\n\n  @Test\n  public void testMethodsOverridden() throws Exception {\n    // Ensures that all methods of MergePolicy are overridden. That's important\n    // to ensure that NoMergePolicy overrides everything, so that no unexpected\n    // behavior/error occurs\n    for (Method m : NoMergePolicy.class.getMethods()) {\n      // getDeclaredMethods() returns just those methods that are declared on\n      // NoMergePolicy. getMethods() returns those that are visible in that\n      // context, including ones from Object. So just filter out Object. If in\n      // the future MergePolicy will extend a different class than Object, this\n      // will need to change.\n      if (m.getName().equals(\"clone\")) {\n        continue;\n      }\n      if (m.getDeclaringClass() != Object.class && !Modifier.isFinal(m.getModifiers())) {\n        assertTrue(m + \" is not overridden ! \", m.getDeclaringClass() == NoMergePolicy.class);\n      }\n    }\n  }\n\n\n\nI don't mind removing this particular test, but it's there to ensure that if MP adds more methods in the future that NoMP should handle, we catch that. "
        },
        {
            "id": "comment-15130798",
            "author": "Shai Erera",
            "date": "2016-02-03T18:14:32+0000",
            "content": "Uwe Schindler do you still have concerns about it? I agree it looks silly that NoMP overrides methods just to call super(). So we have few options:\n\n\n\tI keep the overrides, but don't do anything in the setters and return 0 in the getters.\n\tWe drop these overrides and either tweak the test, or remove it.\n\n\n\nIf we need to change anything, I'd prefer to do the former. What do you think? "
        },
        {
            "id": "comment-15131301",
            "author": "Uwe Schindler",
            "date": "2016-02-03T22:47:38+0000",
            "content": "All fine. I was looking for a test in your file. I was not aware that there was already one. "
        },
        {
            "id": "comment-15131861",
            "author": "ASF subversion and git services",
            "date": "2016-02-04T07:26:13+0000",
            "content": "Commit 30455f728b304fb1b434df73b4f84d607e6941ce in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=30455f7 ]\n\nLUCENE-7010: add MergePolicyWrapper "
        },
        {
            "id": "comment-15131862",
            "author": "ASF subversion and git services",
            "date": "2016-02-04T07:27:42+0000",
            "content": "Commit 43508831b1eadd6610909faac4accd8007753bbb in lucene-solr's branch refs/heads/branch_5x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4350883 ]\n\nLUCENE-7010: add MergePolicyWrapper "
        },
        {
            "id": "comment-15131865",
            "author": "Shai Erera",
            "date": "2016-02-04T07:28:21+0000",
            "content": "Thanks Uwe Schindler, committed to trunk and 5x. "
        },
        {
            "id": "comment-15132026",
            "author": "ASF subversion and git services",
            "date": "2016-02-04T09:31:26+0000",
            "content": "Commit 0c4598d5f4629b515906b31b5977b11882bc944b in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0c4598d ]\n\nLUCENE-7010: add @param to ctor javadocs "
        },
        {
            "id": "comment-15132030",
            "author": "ASF subversion and git services",
            "date": "2016-02-04T09:32:05+0000",
            "content": "Commit 28ed648fbf92fb0c120f0c84d8c7de14772ca490 in lucene-solr's branch refs/heads/branch_5x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=28ed648 ]\n\nLUCENE-7010: add @param to ctor javadocs "
        },
        {
            "id": "comment-15132204",
            "author": "ASF subversion and git services",
            "date": "2016-02-04T11:49:59+0000",
            "content": "Commit e6d629d527fe316e0840e1d2fe5ab1d447ce0460 in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e6d629d ]\n\nLUCENE-7010: document protected field "
        },
        {
            "id": "comment-15132208",
            "author": "ASF subversion and git services",
            "date": "2016-02-04T11:50:43+0000",
            "content": "Commit 5919680482b63901e3c461f4e6369524290042a3 in lucene-solr's branch refs/heads/branch_5x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5919680 ]\n\nLUCENE-7010: document protected field "
        },
        {
            "id": "comment-15134471",
            "author": "ASF subversion and git services",
            "date": "2016-02-05T17:02:15+0000",
            "content": "Commit 30455f728b304fb1b434df73b4f84d607e6941ce in lucene-solr's branch refs/heads/lucene-6997 from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=30455f7 ]\n\nLUCENE-7010: add MergePolicyWrapper "
        },
        {
            "id": "comment-15134472",
            "author": "ASF subversion and git services",
            "date": "2016-02-05T17:02:17+0000",
            "content": "Commit 0c4598d5f4629b515906b31b5977b11882bc944b in lucene-solr's branch refs/heads/lucene-6997 from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0c4598d ]\n\nLUCENE-7010: add @param to ctor javadocs "
        },
        {
            "id": "comment-15134473",
            "author": "ASF subversion and git services",
            "date": "2016-02-05T17:02:18+0000",
            "content": "Commit e6d629d527fe316e0840e1d2fe5ab1d447ce0460 in lucene-solr's branch refs/heads/lucene-6997 from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e6d629d ]\n\nLUCENE-7010: document protected field "
        },
        {
            "id": "comment-15134539",
            "author": "ASF subversion and git services",
            "date": "2016-02-05T17:39:53+0000",
            "content": "Commit e6d629d527fe316e0840e1d2fe5ab1d447ce0460 in lucene-solr's branch refs/heads/lucene-6835 from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e6d629d ]\n\nLUCENE-7010: document protected field "
        }
    ]
}