{
    "id": "SOLR-9146",
    "title": "Parallel SQL engine should support >, >=, <, <=, <>, != syntax",
    "details": {
        "components": [
            "Parallel SQL"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "6.3"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "this gives expected result:\n\n     SELECT title_s, COUNT(*) as cnt\n        FROM movielens\n     WHERE genre_ss='action' AND rating_i='[4 TO 5]'\nGROUP BY title_s\nORDER BY cnt desc\n         LIMIT 5\n\n\nbut using >= 4 doesn't give same results (my ratings are 1-5):\n\n      SELECT title_s, COUNT(*) as cnt\n         FROM movielens\n      WHERE genre_ss='action' AND rating_i >= 4\nGROUP BY title_s\nORDER BY cnt desc\n          LIMIT 5\n\n\n\non the Solr side, I see queries forumlated as:\n\n2016-05-21 14:53:43.096 INFO  (qtp1435804085-1419) [c:movielens\ns:shard1 r:core_node1 x:movielens_shard1_replica1] o.a.s.c.S.Request\n[movielens_shard1_replica1]  webapp=/solr path=/export\nparams={q=((genre_ss:\"action\")+AND+(rating_i:\"4\"))&distrib=false&fl=title_s&sort=title_s+desc&wt=json&version=2.2}\nhits=2044 status=0 QTime=0\n\n\nwhich is obviously wrong ... \n\nIn general, rather than crafting an incorrect query that gives the\nwrong results, we should throw an exception stating that the syntax is\nnot supported.\n\nAlso, the ref guide should be updated to contain a known limitations section so users don't have to guess at what SQL features are supported by Solr.",
    "attachments": {
        "SOLR-9146.patch": "https://issues.apache.org/jira/secure/attachment/12831986/SOLR-9146.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-26T03:45:08+0000",
            "author": "Kevin Risden",
            "content": "\nAlso, the ref guide should be updated to contain a known limitations section so users don't have to guess at what SQL features are supported by Solr.\n\nI absolutely agree with this. Currently it would be easier to start with a what is supported section by taking the tests (TestSQLHandler and JDBCTest) as a place to start that list. ",
            "id": "comment-15301474"
        },
        {
            "date": "2016-10-06T14:47:24+0000",
            "author": "Kevin Risden",
            "content": "I had forgotten about this and finally had time to look at this closer. I am currently testing a patch that will at least make this start to work. The better fix would be to get the integration of Calcite in (SOLR-8593) so we can rely on that for parsing things we don't natively support. ",
            "id": "comment-15552116"
        },
        {
            "date": "2016-10-06T16:22:40+0000",
            "author": "Kevin Risden",
            "content": "Attaching a patch with some added tests. This at least makes rudimentary >, >=, <, <=, <>, != syntax work. I didn't go much further than checking strings and numbers work. ",
            "id": "comment-15552391"
        },
        {
            "date": "2016-10-06T16:31:19+0000",
            "author": "Kevin Risden",
            "content": "Timothy Potter / Joel Bernstein - Can you take a peek? ",
            "id": "comment-15552410"
        },
        {
            "date": "2016-10-06T16:49:18+0000",
            "author": "Joel Bernstein",
            "content": "Patch looks good!\n\nMaybe just a few tests running some queries with the new syntax. ",
            "id": "comment-15552459"
        },
        {
            "date": "2016-10-06T16:50:15+0000",
            "author": "Kevin Risden",
            "content": "Thanks I'll add some more tests that are actual queries instead of just the parsing piece. ",
            "id": "comment-15552463"
        },
        {
            "date": "2016-10-06T17:18:28+0000",
            "author": "Kevin Risden",
            "content": "Added some tests with actual query requests checking.\n\nI noticed something interesting about pure negative queries. If using /select handler (with limit) then pure negative queries work (https://wiki.apache.org/solr/NegativeQueryProblems). However the /export handler doesn't seem to have the same optimization for pure negative queries. Does this sound plausible Joel Bernstein? ",
            "id": "comment-15552564"
        },
        {
            "date": "2016-10-06T17:23:04+0000",
            "author": "Joel Bernstein",
            "content": "New patch looks great.\n\n+1 to commit.\n\nNot sure about the negative queries and the /export handler. The /export hander still uses the QueryComponent so in theory it would evaluate negative queries the same way. ",
            "id": "comment-15552581"
        },
        {
            "date": "2016-10-06T18:10:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 87bad0956079b3d6b5b634fa17c0ee057cb42161 in lucene-solr's branch refs/heads/master from Kevin Risden\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=87bad09 ]\n\nSOLR-9146: Parallel SQL engine should support >, >=, <, <=, <>, != syntax ",
            "id": "comment-15552695"
        },
        {
            "date": "2016-10-06T18:11:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b1a5c5f92e41f7180fdc0af5811bd4346a42af28 in lucene-solr's branch refs/heads/branch_6x from Kevin Risden\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b1a5c5f ]\n\nSOLR-9146: Parallel SQL engine should support >, >=, <, <=, <>, != syntax ",
            "id": "comment-15552698"
        },
        {
            "date": "2016-10-07T00:35:11+0000",
            "author": "Timothy Potter",
            "content": "+1 ... nice addition! ",
            "id": "comment-15553692"
        },
        {
            "date": "2016-11-01T17:32:03+0000",
            "author": "Cassandra Targett",
            "content": "Kevin Risden: I added a section to the Solr Ref Guide about supported WHERE operators at https://cwiki.apache.org/confluence/display/solr/Parallel+SQL+Interface#ParallelSQLInterface-SupportedWHEREOperators. However, I did not include '!=' because I didn't see it in the TestSQLHandler.java test. Let me know if it is supported even if it is not tested. If I should add other operators that are not supported, please let me know - I used a general list of operators and some feedback from the page comments.\n\nDue to time constraints, I did not try to cover every scenario demonstrated in the test, just wanted to add a section based on this specific issue. ",
            "id": "comment-15626087"
        },
        {
            "date": "2016-11-01T17:37:11+0000",
            "author": "Kevin Risden",
            "content": "Thanks Cassandra Targett! I'll double check the ref guide page. There are some caveats right now to the WHERE support (like one side needs to be a field.) Both sides being constants (5 < 10) or being fields (fielda > fieldb) are not supported. This hopefully gets addressed with SOLR-8593. I can add this to the ref guide page. I'm pretty sure '!=' works (even though it is not standard sql like <>) I'll double check. ",
            "id": "comment-15626102"
        },
        {
            "date": "2016-11-01T17:49:36+0000",
            "author": "Kevin Risden",
            "content": "Expanded the supported where operators to include some examples. Also added a note about the where clause requiring a field on one side of the predicate. ",
            "id": "comment-15626134"
        },
        {
            "date": "2016-11-01T18:48:57+0000",
            "author": "Cassandra Targett",
            "content": "Thanks so much for your help.  ",
            "id": "comment-15626307"
        },
        {
            "date": "2016-11-09T08:39:33+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650336"
        }
    ]
}