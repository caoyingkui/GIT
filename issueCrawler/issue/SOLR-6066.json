{
    "id": "SOLR-6066",
    "title": "CollapsingQParserPlugin + Elevation does not respects \"fq\" (filter query)",
    "details": {
        "affect_versions": "4.8",
        "status": "Closed",
        "fix_versions": [
            "4.9"
        ],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "QueryElevationComponent respects the \"fq\" parameter. But when use CollapsingQParserPlugin with QueryElevationComponent, additional \"fq\" has no effect.\n\nI use following test case to show this issue. (It will failed)\n\n\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"group_s\", \"group1\", \"category_s\", \"cat2\", \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", \"group_s\", \"group1\", \"category_s\", \"cat2\", \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc1));\n\n\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", \"group_s\", \"group2\", \"category_s\", \"cat1\", \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", \"group_s\", \"group2\", \"category_s\", \"cat1\", \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    //Test additional filter query when using collapse\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"YYYY\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"fq\", \"category_s:cat1\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"qf\", \"term_s\");\n    params.add(\"qt\", \"/elevate\");\n    params.add(\"elevateIds\", \"2\");\n    assertQ(req(params), \"*[count(//doc)=1]\",\n        \"//result/doc[1]/float[@name='id'][.='6.0']\");",
    "attachments": {
        "TestCollapseQParserPlugin.java": "https://issues.apache.org/jira/secure/attachment/12644644/TestCollapseQParserPlugin.java",
        "SOLR-6066.patch": "https://issues.apache.org/jira/secure/attachment/12659296/SOLR-6066.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Herb Jiang",
            "id": "comment-13996597",
            "date": "2014-05-13T16:43:25+0000",
            "content": "Add full testcase "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13997715",
            "date": "2014-05-14T16:23:16+0000",
            "content": "OK, I see the issue. The Elevated documents go into the result set no matter what with the CollapsingQParsePlugin. I've been meaning to re-work this part of code anyway, so I'll use this ticket to fix this problem and refactor.  "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14083269",
            "date": "2014-08-02T01:12:28+0000",
            "content": "I uploaded a patch. The change is basically to store the docId's in shared memory as they are collected and then perform the logic to append elvated doc to their correct positions (if the documents have been collected) in the finish method. This seems to be working for me for now until Joel refactors. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14083277",
            "date": "2014-08-02T01:27:29+0000",
            "content": "I wasn't sure if the collect method was threaded. If it is the code will need to be updated to use a thread safe collection instead of a HashSet "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14086954",
            "date": "2014-08-05T23:10:51+0000",
            "content": "My fix doesn't appear to be working in my production environment. Not sure what is wrong. Some products get elevated... others don't. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14086961",
            "date": "2014-08-05T23:15:13+0000",
            "content": "I think I see what's happening. For some reason it's only elevating if the id is the id of the group head "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14087024",
            "date": "2014-08-06T00:29:25+0000",
            "content": "I fixed the problem. I was only adding the docId to the hashSet if the document was the group head. I fixed that bug. Seems to be working. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14087040",
            "date": "2014-08-06T00:44:21+0000",
            "content": "Made a slight improvement to increase memory efficiency by only storing documents to be used in collect when we are boosting (boostDocs != null) "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14087273",
            "date": "2014-08-06T05:29:56+0000",
            "content": "Patch was made on the 4.7 git branch and also includes patch for SOLR-5773 "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14087667",
            "date": "2014-08-06T13:37:47+0000",
            "content": "Hi David,\n\nI'll be working with the svn repo for this. Can you create and svn diff of your patch that doesn't include SOLR-5773?\n\nI have some ideas on how to implement this change but I'd like to review your contribution first.\n\nthanks "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14088126",
            "date": "2014-08-06T19:47:52+0000",
            "content": "Attaching patch on SVN trunk "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14089148",
            "date": "2014-08-07T11:40:27+0000",
            "content": "Thanks David. It looks like you're on the right track. I planned on something with different data structures though. I need to clear a few things off my plate and then I'll put a patch up as well. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14127741",
            "date": "2014-09-09T23:04:59+0000",
            "content": "I found a bug but I'm not sure if it's caused by my patch. If you elevate a product while and index is running that is doing auto soft commits solr will return an exception until the index is committed. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14127757",
            "date": "2014-09-09T23:14:12+0000",
            "content": "David,\n\nCan you post this to the users list and include the stacktrace.\n\nthanks,\nJoel "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14127761",
            "date": "2014-09-09T23:15:34+0000",
            "content": "On second thought because it might be related to your patch, post the statcktrace here and I'll take a look.\n\nIf it turns out that it's not related your patch we'll open a ticket for it. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14127787",
            "date": "2014-09-09T23:36:55+0000",
            "content": "Also, some things to think about with your application.\n\nSolr provides a consistent view of the index for each query. So softCommits in the backround should not effect the execution of your query. \n\nSoft commits do open a new searcher though, and the CollapsingQParserPlugin relies on the Lucene FieldCache, which needs to be warmed when a new searcher is opened.\n\nSo adding a static warming query that exercises the CollapsingQParserPlugin will ensure that users will not see pauses after softCommits.\n\nIf you are softCommitting too frequently this can lead to overlapping searchers as they take time to open and warm. So be sure to space the softCommits far enough apart that you are not opening new searchers faster then they can be warmed.\n\nWhen you post you're stack trace, it should tell us what's happening though.  "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14127801",
            "date": "2014-09-09T23:41:52+0000",
            "content": "null:java.lang.IndexOutOfBoundsException: Index: 2, Size: 2\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:635)\n\tat java.util.ArrayList.get(ArrayList.java:411)\n\tat org.apache.solr.common.util.NamedList.getName(NamedList.java:131)\n\tat org.apache.solr.handler.component.QueryComponent.unmarshalSortValues(QueryComponent.java:1058)\n\tat org.apache.solr.handler.component.QueryComponent.mergeIds(QueryComponent.java:905)\n\tat org.apache.solr.handler.component.QueryComponent.handleRegularResponses(QueryComponent.java:695)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:674)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:323)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1916)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:768)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:415)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:205)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.valves.RequestFilterValve.process(RequestFilterValve.java:304)\n\tat org.apache.catalina.valves.RemoteAddrValve.invoke(RemoteAddrValve.java:82)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:314)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745) "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14127815",
            "date": "2014-09-09T23:53:10+0000",
            "content": "326255 [http-bio-8080-exec-1] ERROR org.apache.solr.servlet.SolrDispatchFilter  ? null:java.lang.ArrayIndexOutOfBoundsException: 2147483645\n\tat org.apache.lucene.util.packed.Packed8ThreeBlocks.get(Packed8ThreeBlocks.java:58)\n\tat org.apache.lucene.search.FieldCacheImpl$SortedDocValuesImpl.getOrd(FieldCacheImpl.java:1132)\n\tat org.apache.solr.search.CollapsingQParserPlugin$CollapsingScoreCollector.finish(CollapsingQParserPlugin.java:525)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1741)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1391)\n\tat org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:476)\n\tat org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:461)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:217)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1916)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:768)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:415)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:205)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.valves.RequestFilterValve.process(RequestFilterValve.java:304)\n\tat org.apache.catalina.valves.RemoteAddrValve.invoke(RemoteAddrValve.java:82)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:314)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745) "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14127850",
            "date": "2014-09-10T00:24:55+0000",
            "content": "Looks like you're running into this bug which was resolved in Solr 4.8:\n\nhttps://issues.apache.org/jira/browse/SOLR-6029 "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14127856",
            "date": "2014-09-10T00:29:02+0000",
            "content": "You can see the changes with this commit:\nhttps://svn.apache.org/viewvc?view=revision&revision=r1592880\n\nThe patch was put up there by the reporter, but the commit is slightly different.\n "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14128698",
            "date": "2014-09-10T16:40:30+0000",
            "content": "Thanks Joel I'll get it patched in and report back if I still notice any problems "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14129422",
            "date": "2014-09-11T00:16:51+0000",
            "content": "Got it patched in... my earlier comments about an error should be disregarded. I was doing the tests in a bad order. I'll report back if I find any more trouble. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14232262",
            "date": "2014-12-02T22:48:28+0000",
            "content": "Hi Joel,\n\nCurious if this is still in the works.\n\nThanks,\nDavid "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14232973",
            "date": "2014-12-03T13:01:22+0000",
            "content": "It is. I'm finishing up prepping Collapse and Expand for 5.0 (SOLR-6581). After that I'll carve out some time to work on this issue. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14274277",
            "date": "2015-01-12T22:17:07+0000",
            "content": "This issue is now resolved in Trunk and 5.0 as part of SOLR-6581.  "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14275757",
            "date": "2015-01-13T19:31:42+0000",
            "content": "is Trunk now on the 5x branch or is it still 4x? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14275820",
            "date": "2015-01-13T19:56:26+0000",
            "content": "Trunk is 6.x\n5.0 is being cut soon.\n\n4x (4.10.*) won't get any more work except for (possibly) critical bug fixes. For any JIRA that isn't \"fixed\", the \"Fix Version/s\" field is pretty meaningless, it usually reflects what the next version would be when the JIRA was entered.\n\nJoel Bernstein Can this JIRA be closed? "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14904852",
            "date": "2015-09-23T17:18:30+0000",
            "content": "Joel, \n\nWould this changes also fix the problems described in SOLR-6345? "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-14906357",
            "date": "2015-09-24T13:47:04+0000",
            "content": "No, SOLR-6345 wasn't addressed in SOLR-6581.\n\nThere is some significant work being done on the CollapsingQparserPlugin in SOLR-6168. It doesn't address SOLR-6345 but maybe it makes sense to give that issue some thought while CollapsingQParser plugin is being reviewed. Best bet is to contact LucidWorks. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-14906700",
            "date": "2015-09-24T17:32:40+0000",
            "content": "HelioSearch sent me a contract to do that work. I haven't agreed to it\nyet... You think it is better to contact LucidWorks instead?\n\nOn Thu, Sep 24, 2015 at 6:48 AM, Joel Bernstein (JIRA) <jira@apache.org>\n\n\n\n\n\u2013 \nDavid Boychuck\nSoftware Engineer Search, Team Lead\nBuild.com, Inc.  <http://corp.build.com/>\nSmarter Home Improvement\u2122\nP.O. Box 7990 Chico, CA 95927\nP: 800.375.3403\nF: 530.566.1893\ndboychuck@build.com | Network of Stores\n<http://www.build.com/index.cfm?page=help:networkstores&source=emailSignature> "
        }
    ]
}