{
    "id": "LUCENE-6569",
    "title": "MultiFunction.anyExists - creating FunctionValues[] objects for every document",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "In the class org.apache.lucene.queries.function.valuesource.MultiFunction there is the following method signature (line 52)\n\n     public static boolean allExists(int doc, FunctionValues... values) \n\nthis method is called from the class org.apache.lucene.queries.function.valuesource.DualFloatFunction (line 68)\n\n     public boolean exists(int doc) \n{\n        return MultiFunction.allExists(doc, aVals, bVals);\n     }\n\nBecause MultiFunction.allExists uses Java varargs syntax (\"...\") a new FunctionValues[] object will be created every time this call takes place.\n\nThe problem is that the call takes place in a document level function, which means that it will create new objects in the heap for every document in the query results.\n\nfor example if you use the following boost function (where ds and dc1 are both TrieDateField)\n\n     bf=min(ms(ds,dc1),604800000)\n\nYou will get extra objects created for each document in the result set, which has a big impact on performance and memory usage if you are searching a large result set.",
    "attachments": {
        "SOLR-7618.patch": "https://issues.apache.org/jira/secure/attachment/12736670/SOLR-7618.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-06-01T20:19:12+0000",
            "author": "Xu Zhang",
            "content": "It would be really nice if you upload a patch here. http://wiki.apache.org/solr/HowToContribute ",
            "id": "comment-14567930"
        },
        {
            "date": "2015-06-01T22:09:41+0000",
            "author": "Jacob Graves",
            "content": "added the patch. ",
            "id": "comment-14568112"
        },
        {
            "date": "2015-06-15T23:15:13+0000",
            "author": "Hoss Man",
            "content": "Great point Jacob.\n\nA few updates to your patch...\n\n\n\tfix formatting (we use 2 spaces for indents)\n\timproved javadocs & linkages\n\tadded equivilence testing between each method version (to future proof against someone changing one of these methods in the future and making them no longer behave consistently)\n\n\n ",
            "id": "comment-14587120"
        },
        {
            "date": "2015-06-15T23:26:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1685687 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1685687 ]\n\nLUCENE-6569: Optimize MultiFunction.anyExists and allExists to eliminate excessive array creation in common 2 argument usage ",
            "id": "comment-14587133"
        },
        {
            "date": "2015-06-16T01:00:46+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1685689 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1685689 ]\n\nLUCENE-6569: Optimize MultiFunction.anyExists and allExists to eliminate excessive array creation in common 2 argument usage (merge r1685687) ",
            "id": "comment-14587268"
        },
        {
            "date": "2015-06-16T01:06:10+0000",
            "author": "Hoss Man",
            "content": "Thanks! ",
            "id": "comment-14587271"
        },
        {
            "date": "2015-08-26T13:06:04+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Bulk close for 5.3.0 release ",
            "id": "comment-14713208"
        }
    ]
}