{
    "id": "SOLR-12055",
    "title": "Enable async logging by default",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "logging"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Reopened"
    },
    "description": "When SOLR-7887 is done, switching to async logging will be a simple change to the config files for log4j2. This will reduce contention and increase throughput generally and logging in particular.\n\nThere's a discussion of the pros/cons here: https://logging.apache.org/log4j/2.0/manual/async.html\n\nAn alternative is to put a note in the Ref Guide about how to enable async logging.\n\nI guess even if we enable async by default the ref guide still needs a note about how to disable it.....",
    "attachments": {
        "SOLR-12055.patch": "https://issues.apache.org/jira/secure/attachment/12937689/SOLR-12055.patch",
        "SOLR-12055-rollback.patch": "https://issues.apache.org/jira/secure/attachment/12939427/SOLR-12055-rollback.patch",
        "SOLR-12055-slh-interim1.patch": "https://issues.apache.org/jira/secure/attachment/12935472/SOLR-12055-slh-interim1.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-08T04:58:10+0000",
            "content": "If we enable it by default we should loudly point out one of the the downsides that could affect some users negatively - particularly anyone counting on logging for auditing. ",
            "author": "Mark Miller",
            "id": "comment-16466865"
        },
        {
            "date": "2018-05-08T14:47:35+0000",
            "content": "Mark Miller I'm changing my tune a bit on this, I'm less inclined to make it the default. On the issue of auditing, would that also apply to logging summary stats rather than individual messages in some cases?\n\nIn particular, depending on the resolution to SOLR-11934 and the like, we might dramatically reduce the number of log messages. \n\nSo here's what I'm thinking makes the most sense here:\n\n1> as part of the process we'll take a bunch of customer log files and figure out where the most frequent messages come from. The log file I looked at wasn't particularly representative so we need a better sample.\n\n2> where it makes sense, publish summary stats at INFO  level or change the level\n\n3> provide examples of how to turn on async logging (probably just commented-out sections of the log4j2.xml files) for those who want it. They can turn on async logging if they want, we should just make it easy rather than the default.\n\nWDYT? ",
            "author": "Erick Erickson",
            "id": "comment-16467500"
        },
        {
            "date": "2018-05-08T16:07:52+0000",
            "content": "I'm happy to provide you with some rather large logs from a 6.6.3 server that gets mostly updates and very few queries beyond load balancer health checks.  I also have 4.x servers that DO get queries and also produce large logs.  Since they're older versions, they will not have the improvements we've already made to reduce logging verbosity, but would hopefully provide insight for further verbosity reduction. ",
            "author": "Shawn Heisey",
            "id": "comment-16467620"
        },
        {
            "date": "2018-05-08T18:05:22+0000",
            "content": "Shawn:\n\nThat'd be great, but it'll probably be a week or more before I get back to this (going on vacation) so I'll circle back around at that point. ",
            "author": "Erick Erickson",
            "id": "comment-16467775"
        },
        {
            "date": "2018-05-08T22:57:38+0000",
            "content": "Linking SOLR-12120 which deals with an audit logging framework completely separate from Log4j. That framework has support for both synchronous and async audit logger implementations. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16468084"
        },
        {
            "date": "2018-05-26T07:58:34+0000",
            "content": "I think we should just note the warning about counting on our logging for audit logging in CHANGES - that is, errors during logging can fail silently. I don't know that it should stop of us from async logging by default if it's a nice improvement.\n\nWe def want to change it to async for tests at minimum - with many Solr instances often logging and all going through the same sync block, it's rather nasty with lots of blocking. ",
            "author": "Mark Miller",
            "id": "comment-16491559"
        },
        {
            "date": "2018-07-27T19:02:53+0000",
            "content": "We def want to change it to async for tests at minimum - with many Solr instances often logging and all going through the same sync block, it's rather nasty with lots of blocking.\nI tried doing this on my system and when I used the async logger all solr tests completed in 38 mins vs 42 minutes.\n\u00a0\nThere was an assert in\u00a0TestLogWatcher that failed which we might have to fix if we go async for tests.\u00a0\n\u00a0\nTo switch to the async logger I imply changed the\u00a0Root\u00a0tag to be AsyncRoot\n\u00a0\nCurious if others see less or more gains while running tests ",
            "author": "Varun Thacker",
            "id": "comment-16560152"
        },
        {
            "date": "2018-08-07T15:08:49+0000",
            "content": "I discussed performance and async for Solr with the log4j mailing list.  I'm told that changing Root to AsyncRoot and Logger to AsyncLogger in the configuration will fully switch us over to async.  When I have a moment, I will give it a try. ",
            "author": "Shawn Heisey",
            "id": "comment-16571815"
        },
        {
            "date": "2018-08-07T15:37:31+0000",
            "content": "Shawn Heisey Please feel free to just take this over if you want. I've been meaning to get to it for ages but life gets in the way. ",
            "author": "Erick Erickson",
            "id": "comment-16571851"
        },
        {
            "date": "2018-08-14T03:50:31+0000",
            "content": "Just to make sure I was comparing fairly, I did the following at the top level (on Linux):\n\nant clean\nant compile\nant jar\n\nThen I changed to the solr directory and did this:\n\ntime ant clean test\n\nThe test run used 3 JVMs.  In a shocking turn of events, all the tests passed on the first try, so it actually ran ALL of the tests!  Here are the results of the whole run:\n\n\nBUILD SUCCESSFUL\nTotal time: 67 minutes 55 seconds\n\nreal    67m56.567s\nuser    133m32.291s\nsys     12m22.014s\n\n\n\nThen I found all the log4j2.xml files and made some edits, which I will attach as an interim patch, and I will run the tests again.\n\n ",
            "author": "Shawn Heisey",
            "id": "comment-16579222"
        },
        {
            "date": "2018-08-14T03:53:15+0000",
            "content": "Made a typo when I created the diff.  Fixed, uploaded again. ",
            "author": "Shawn Heisey",
            "id": "comment-16579223"
        },
        {
            "date": "2018-08-14T12:10:22+0000",
            "content": "I finally had to give up trying for a good test run after the changes.  I did it a lot of times, there was a problem every time.  Finally I decided to run with -Dtests.haltonfailure=false so it would ignore failures and run every test.  Then I went to bed.  Here's the result:\n\n\nBUILD SUCCESSFUL\nTotal time: 66 minutes 54 seconds\n\n\n\nThere were some failures in core, which I haven't investigated yet to see if they're caused by the log4j config change.  This is entirely possible \u2013 they are logging tests.\n\n\n   [junit4] Tests with failures [seed: D8F6E7C3F7A92337]:\n   [junit4]   - org.apache.solr.handler.RequestLoggingTest.testLogBeforeExecuteWithRequestLogger\n   [junit4]   - org.apache.solr.handler.RequestLoggingTest.testLogBeforeExecuteWithCoreLogger\n   [junit4]   - org.apache.solr.logging.TestLogWatcher.testLog4jWatcher\n   [junit4]   - org.apache.solr.logging.TestLogWatcher.testLog4jWatcherRepeat\n\n\n\nI did not see any super-long heartbeats in the scrollback history of the ssh session.  Logging must take up a very small percentage of test time, since this test run was only a minute shorter than the benchmark.\n\nWhen I built the server and started it, solr.log looks like it's working correctly. ",
            "author": "Shawn Heisey",
            "id": "comment-16579705"
        },
        {
            "date": "2018-08-14T12:24:57+0000",
            "content": "My conclusion, which I told the log4j user list was probably going to be the case: switching to async is not going to be a magic bullet for the majority of users.  What it might do is offer better scalability for users who push the limits of Solr.  I think we should do it. ",
            "author": "Shawn Heisey",
            "id": "comment-16579731"
        },
        {
            "date": "2018-08-23T05:22:36+0000",
            "content": "I'm trying this out and the TestLogWatcher fails (RequestLoggingTest succeeded, but then I only ran it once). Interestingly the second test always fails, with the way TestLogWatcher is written that's always\u00a0testLog4jWatcherRepeat.\n\nBut if I rearrange it so testLog4jWatcherRepeat is first, then testLog4jWatcher fails.\n\nBoth tests do exactly the same thing before the failure.\nLogWatcher watcher = LogWatcher.newRegisteredLogWatcher(config, null);\n\nassertEquals(watcher.getLastEvent(), -1);\n\nlog.warn(\"This is a test message\");\n\nassertTrue(watcher.getLastEvent() > -1);\nthe last assertTrue fails. Over in LogWatcher there's an add method that never gets called for the failing test.\n\nAnyway, I'll look more tomorrow, any hints welcome of course. ",
            "author": "Erick Erickson",
            "id": "comment-16589702"
        },
        {
            "date": "2018-08-28T21:29:43+0000",
            "content": "What I think I'm seeing is that there is a lag between sending a log message and it gets written. Which is only to be expected when we go to async. So the test failure goes away with the following hack (and no, I'm not suggesting this as a \"fix\").\n\n\u00a0\n\n@Test\npublic void eoe() {\nLogWatcher watcher = LogWatcher.newRegisteredLogWatcher(config, null);\n\nassertEquals(watcher.getLastEvent(), -1);\n\nlog.warn(\"This is a test message\");\nassertTrue(watcher.getLastEvent() > -1);\n\nwatcher = LogWatcher.newRegisteredLogWatcher(config, null);\n\nassertEquals(watcher.getLastEvent(), -1);\n\nlog.warn(\"This is a test message\");\nlong last = -1;\nfor (int idx = 0; last == -1 && idx < 10; ++idx) {\n\u00a0 last = watcher.getLastEvent();\n\n\u00a0 System.out.println(\"lastEvent: \" + last);\n}\nassertTrue(watcher.getLastEvent() > -1);\n}\n\n\nAfter a few rounds, printing last changes from -1 to something > 1 and the test succeeds.\n\nI've poked around briefly and don't see anything to\u00a0insure that all sent messages have been recorded, nor anything to flush the queue. I'll keep digging but if anyone knows off the top of their head....\n\n\u00a0Interestingly, sleeping\u00a0fails (not that I like that solution either) and the first assert succeeds (although that may well be coincidence).\n\nDigging....\n\n\u00a0 ",
            "author": "Erick Erickson",
            "id": "comment-16595628"
        },
        {
            "date": "2018-08-28T22:50:46+0000",
            "content": "If we're going to implement a hack to make a test pass, can we just wait for five seconds before checking for the log event? ",
            "author": "Shawn Heisey",
            "id": "comment-16595687"
        },
        {
            "date": "2018-08-29T02:22:01+0000",
            "content": "In a word, \"no\". I tried that and the test doesn't pass. I've discovered other problems as well, basically I reformulated the three tests into one test that fires up a variable number (> 2) watchers and tries to insure that each one gets the expected message and... that fails. Watcher 1 gets messages intended for watcher 2 and the like.\n\nSo I have to figure out some way to positively tie the watchers to the messages I guess. ",
            "author": "Erick Erickson",
            "id": "comment-16595854"
        },
        {
            "date": "2018-08-29T20:53:37+0000",
            "content": "Patch for the problematic test. Haven't run precommit or full test suite yet. Haven't added warning to CHANGES.txt yet though.\n\nI'm not entirely fond of looping with small delays until the proper message is found, but given the fact that this is an async operation and I don't see an good way to get to the underlying logger implementation due to the abstractions, I think it's OK.\n\nIf I could get to the Log4J2 underlying logger class I could ask questions like \"have messages been processed yet\". But even then I don't see how that would be much different than the test loop because I'd have to, well, loop until a message had been received so what's the difference?\n\nUnless there are objections, I'll run the full precommit/test suite, beast the TestLogWatcher a bunch (with some tracing to see how many times the loop is executed) and if all that goes well check in Friday. ",
            "author": "Erick Erickson",
            "id": "comment-16596845"
        },
        {
            "date": "2018-09-01T03:39:12+0000",
            "content": "Commit 8e75f393b31c0ffae9a7187474efe382b5011601 in lucene-solr's branch refs/heads/master from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8e75f39 ]\n\nSOLR-12055: Enable async logging by default ",
            "author": "ASF subversion and git services",
            "id": "comment-16599516"
        },
        {
            "date": "2018-09-01T03:43:35+0000",
            "content": "Commit e7b449534344baf09f4824ad322f9a1e53300620 in lucene-solr's branch refs/heads/master from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e7b4495 ]\n\nSOLR-12055: Last patch had the entry in the wrong place in CHANGES.txt ",
            "author": "ASF subversion and git services",
            "id": "comment-16599517"
        },
        {
            "date": "2018-09-01T03:45:18+0000",
            "content": "Commit 0464be8cec8143687a34dd9bdf69567c7fb06522 in lucene-solr's branch refs/heads/branch_7x from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0464be8 ]\n\nSOLR-12055: Enable async logging by default\n\n(cherry picked from commit 8e75f393b31c0ffae9a7187474efe382b5011601) ",
            "author": "ASF subversion and git services",
            "id": "comment-16599518"
        },
        {
            "date": "2018-09-01T03:45:19+0000",
            "content": "Commit 3483086f9cade648b97fc3dc77ea8dd7d7e32790 in lucene-solr's branch refs/heads/branch_7x from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3483086 ]\n\nSOLR-12055: Last patch had the entry in the wrong place in CHANGES.txt\n\n(cherry picked from commit e7b449534344baf09f4824ad322f9a1e53300620) ",
            "author": "ASF subversion and git services",
            "id": "comment-16599519"
        },
        {
            "date": "2018-09-01T03:50:04+0000",
            "content": "Final patch attached with info in CHANGES.txt about async logging ",
            "author": "Erick Erickson",
            "id": "comment-16599521"
        },
        {
            "date": "2018-09-08T03:22:48+0000",
            "content": "Things have gone soooo wonky today,\u00a0more than a few\u00a0\"SuppressSysoutChecks\" messages in test failures and a bunch of other stuff.\u00a0I doubt the async logging is to blame for a majority of the other errors, but it's certainly adding to the noise. If this was all primarily async logging it should have been exploding all this week.\n\nHowever, given David Smiley's comments on the SuppresSysoutChecks error, the number of SuppressSysoutCheck errors I've seen today and\u00a0Andrzej Bialecki's comments on his edge-case with OOMs (SOLR-12753), I think this change should wait until after 7.5 is cut and we have some time to shake out the issues before this is in a release.\u00a0\n\nSynchronous logging has been working fine for 10 years. I'd rather wait a couple of months for this optimization to hit the street than rush it out the door and have failures in the wild.\n\nI'll back this change out on master and 7x momentarily. Any problems after midnight Pacific time (UTC-8) are \"something else\".\n\n\u00a0 ",
            "author": "Erick Erickson",
            "id": "comment-16607884"
        },
        {
            "date": "2018-09-08T03:39:40+0000",
            "content": "Rolling back all the changes for these two JIRAs, we'll get them all at once when we try async logging after 7.5 is cut. ",
            "author": "Erick Erickson",
            "id": "comment-16607887"
        },
        {
            "date": "2018-09-08T05:51:56+0000",
            "content": "Commit 3b62f23f72ed826d363b81826be9caf0a2edbd1b in lucene-solr's branch refs/heads/master from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3b62f23 ]\n\nSOLR-12055: Enable async logging by default - rollback ",
            "author": "ASF subversion and git services",
            "id": "comment-16607921"
        },
        {
            "date": "2018-09-08T06:03:05+0000",
            "content": "Commit 68beae49c80b9d7c8f1bf1c119b9acc02a3cf167 in lucene-solr's branch refs/heads/branch_7x from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=68beae4 ]\n\nSOLR-12055: Enable async logging by default - rollback\n\n(cherry picked from commit 3b62f23f72ed826d363b81826be9caf0a2edbd1b) ",
            "author": "ASF subversion and git services",
            "id": "comment-16607923"
        },
        {
            "date": "2018-09-12T15:23:46+0000",
            "content": "Forgot to attach the rollback patch last week, it's there now. People can probably ignore it.\n\nI'll be starting this up again today locally, although anyone with knowledge here please chime in. ",
            "author": "Erick Erickson",
            "id": "comment-16612321"
        }
    ]
}