{
    "id": "SOLR-8489",
    "title": "TestMiniSolrCloudCluster.createCollection to support extra & alternative collectionProperties",
    "details": {
        "components": [],
        "type": "Test",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "add optional collectionProperties map arg and use putIfAbsent instead of put with the map\n\tmove persistIndex i.e. solr.directoryFactory randomisation from the several callers to just-once in createCollection\n\n\n\nThese changes are refactors only and intended to not change the existing tests' behaviour.",
    "attachments": {
        "SOLR-8489.patch": "https://issues.apache.org/jira/secure/attachment/12780543/SOLR-8489.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-05T20:52:36+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1723162 from Christine Poerschke in branch 'dev/trunk'\n[ https://svn.apache.org/r1723162 ]\n\nSOLR-8489: TestMiniSolrCloudCluster.createCollection to support extra & alternative collectionProperties ",
            "id": "comment-15083763"
        },
        {
            "date": "2016-01-05T21:30:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1723170 from Christine Poerschke in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1723170 ]\n\nSOLR-8489: TestMiniSolrCloudCluster.createCollection to support extra & alternative collectionProperties (merge in revision 1723162 from trunk) ",
            "id": "comment-15083837"
        },
        {
            "date": "2016-01-06T01:42:26+0000",
            "author": "Steve Rowe",
            "content": "Compilation on branch_5x is failing while compiling TestMiniSolrCloudCluster.java.  See e.g. https://builds.apache.org/job/Lucene-Solr-Maven-5.x/1152/.\n\nant compile-test fails for me - Map.putIfAbsent() was added in Java8:\n\n\ncommon.compile-test:\n    [javac] Compiling 7 source files to /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/build/solr-core/classes/test\n    [javac] /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java:103: error: cannot find symbol\n    [javac]     collectionProperties.putIfAbsent(CoreDescriptor.CORE_CONFIG, \"solrconfig-tlog.xml\");\n    [javac]                         ^\n    [javac]   symbol:   method putIfAbsent(String,String)\n    [javac]   location: variable collectionProperties of type Map<String,String>\n    [javac] /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java:104: error: cannot find symbol\n    [javac]     collectionProperties.putIfAbsent(\"solr.tests.maxBufferedDocs\", \"100000\");\n    [javac]                         ^\n    [javac]   symbol:   method putIfAbsent(String,String)\n    [javac]   location: variable collectionProperties of type Map<String,String>\n    [javac] /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java:105: error: cannot find symbol\n    [javac]     collectionProperties.putIfAbsent(\"solr.tests.ramBufferSizeMB\", \"100\");\n    [javac]                         ^\n    [javac]   symbol:   method putIfAbsent(String,String)\n    [javac]   location: variable collectionProperties of type Map<String,String>\n    [javac] /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java:107: error: cannot find symbol\n    [javac]     collectionProperties.putIfAbsent(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.TieredMergePolicy\");\n    [javac]                         ^\n    [javac]   symbol:   method putIfAbsent(String,String)\n    [javac]   location: variable collectionProperties of type Map<String,String>\n    [javac] /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java:108: error: cannot find symbol\n    [javac]     collectionProperties.putIfAbsent(\"solr.tests.mergeScheduler\", \"org.apache.lucene.index.ConcurrentMergeScheduler\");\n    [javac]                         ^\n    [javac]   symbol:   method putIfAbsent(String,String)\n    [javac]   location: variable collectionProperties of type Map<String,String>\n    [javac] /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java:109: error: cannot find symbol\n    [javac]     collectionProperties.putIfAbsent(\"solr.directoryFactory\", (persistIndex ? \"solr.StandardDirectoryFactory\" : \"solr.RAMDirectoryFactory\"));\n    [javac]                         ^\n    [javac]   symbol:   method putIfAbsent(String,String)\n    [javac]   location: variable collectionProperties of type Map<String,String>\n    [javac] Note: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest.java uses unchecked or unsafe operations.\n    [javac] Note: Recompile with -Xlint:unchecked for details.\n    [javac] 6 errors\n\n ",
            "id": "comment-15084514"
        },
        {
            "date": "2016-01-06T11:38:13+0000",
            "author": "Christine Poerschke",
            "content": "Oops. Thanks for the \"Map.putIfAbsent() was added in Java8\" pointer. Will change TestMiniSolrCloudCluster.java branch_5x code to avoid putIfAbsent then. ",
            "id": "comment-15085443"
        },
        {
            "date": "2016-01-06T16:42:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1723364 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1723364 ]\n\nSOLR-8489: Fix java7 compilation errors ",
            "id": "comment-15085798"
        },
        {
            "date": "2016-01-06T20:43:36+0000",
            "author": "Christine Poerschke",
            "content": "Thanks Shalin Shekhar Mangar! (Myself only just now got around to this, sorry.) ",
            "id": "comment-15086248"
        }
    ]
}