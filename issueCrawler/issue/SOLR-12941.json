{
    "id": "SOLR-12941",
    "title": "IndexSizeTrigger and splitMethod=link problems",
    "details": {
        "type": "Bug",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "7.6,                                            master (8.0)"
    },
    "description": "IndexSizeTrigger\u00a0can be configured to use\u00a0splitMethod=link\u00a0(SOLR-12730), which uses hard-linking for creating sub-shards.\n\nHowever, if the trigger uses\u00a0aboveBytes condition the resulting sub-shards will not immediately decrease in size, until all of the deleted documents will be expunged (either by gradual merges or by explicit and costly expungeDeletes command). As a result the new sub-shards will still exceed the aboveBytes threshold, which will cause the trigger to keep generating new split requests.\n\nI see two options how to solve this:\n\n\tdisallow using aboveBytes with splitMethod=link. This unfortunately is a very desirable combination because it monitors the actual index size and uses the fast splitting method.\n\tcalculate an internal estimate of \"eventual index size\" for an index with deletions, and use this estimate when checking with aboveBytes\u00a0instead of the real index size. This of course introduces a potentially significant estimation error but allows to properly treat hard-linked sub-shards with deletions as (eventually) significantly smaller than the parent shard.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16672156",
            "content": "definitely do the latter (estimate eventual index size) by simply using a ratio of numDocs / maxDocs. ",
            "author": "David Smiley",
            "date": "2018-11-01T20:33:14+0000"
        },
        {
            "id": "comment-16672265",
            "content": "Another interesting failure that I and Shalin spotted while debugging test failures is that occasionally older commit points linger around for a while, and they throw off the size calculations too (because the actual directory size consists of all segments from the previous commit point plus all segments from the latest commit point).\n\nThe trigger should probably consider only the latest commit point because older ones will eventually be deleted. This will require adding a metric (gauge) to SolrCore to report the details of only the latest commit point. ",
            "author": "Andrzej Bialecki",
            "date": "2018-11-01T21:40:23+0000"
        }
    ]
}