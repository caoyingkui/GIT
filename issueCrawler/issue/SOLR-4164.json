{
    "id": "SOLR-4164",
    "title": "Result Grouping fails if no hits",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "components": [
            "SearchComponents - other",
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In SolrCloud, found a result grouping bug in the 4.0 release.\nA distributed result grouping request under SolrCloud got this result:\n\n\nDec 10, 2012 10:32:07 PM org.apache.solr.common.SolrException log\nSEVERE: null:java.lang.IllegalArgumentException: numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count\n        at org.apache.lucene.search.TopFieldCollector.create(TopFieldCollector.java:1120)\n        at org.apache.lucene.search.TopFieldCollector.create(TopFieldCollector.java:1069)\n        at org.apache.lucene.search.grouping.AbstractSecondPassGroupingCollector.<init>(AbstractSecondPassGroupingCollector.java:75)\n        at org.apache.lucene.search.grouping.term.TermSecondPassGroupingCollector.<init>(TermSecondPassGroupingCollector.java:49)\n        at org.apache.solr.search.grouping.distributed.command.TopGroupsFieldCommand.create(TopGroupsFieldCommand.java:128)\n        at org.apache.solr.search.grouping.CommandHandler.execute(CommandHandler.java:132)\n        at org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:339)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:206)",
    "attachments": {
        "SOLR-4164.patch": "https://issues.apache.org/jira/secure/attachment/12835131/SOLR-4164.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13531454",
            "date": "2012-12-13T20:42:12+0000",
            "content": "Lance: can you give us any more context into how you got this error? what did the request look like? what did the data look like?\n\nI tried writing a test to demonstrating the problem and failed to fail...\n\nCommitted revision 1421505.\nCommitted revision 1421510. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13531456",
            "date": "2012-12-13T20:44:17+0000",
            "content": "[trunk commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1421505\n\ngrouping tests of case where no docs match main query.  written while trying to repro SOLR-4164, but something is still missing "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13531505",
            "date": "2012-12-13T21:10:09+0000",
            "content": "[branch_4x commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1421510\n\ngrouping tests of case where no docs match main query.  written while trying to repro SOLR-4164, but something is still missing (merge r1421505) "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-13533675",
            "date": "2012-12-17T06:30:53+0000",
            "content": "I can't recreate it. It may have been another problem I was having: a shard server ran out of memory during the query and threw an exception to the distributor. Maybe the group query collection code ignores these remote exceptions? "
        },
        {
            "author": "Enrico Stahn",
            "id": "comment-13638724",
            "date": "2013-04-23T02:27:18+0000",
            "content": "This issue is still not solved with 4.2.1.\n\nAdd:\nKnown Limitations: The Grouping feature only works if groups are in the same shard.\n\nWe changed -DnumShards=2 to -DnumShards=1 and it's working since. "
        },
        {
            "author": "Webster Homer",
            "id": "comment-15178532",
            "date": "2016-03-03T20:09:42+0000",
            "content": "Found that if you set group.limit to -1 it will give the same failure. We had code that did this with the intent of getting all the documents in the roll up. We limit it to 500 so setting group.limit=500 was a decent work around. Still this worked fine with normal solr, only solrcloud had a problem "
        },
        {
            "author": "Cao Manh Dat",
            "id": "comment-15541879",
            "date": "2016-10-03T08:35:38+0000",
            "content": "This problem can happen when we set group.limit = -1 in distributed case. This bug doesn't happen in non distributed mode because inside Grouping we have this check\n\nint groupedDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\ngroupedDocsToCollect = Math.max(groupedDocsToCollect, 1);\n\n\nBut things will be much different in distributed case, so we should ask ourselves is group.limit = -1 is a valid value of group.limit in distributed mode? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-15542879",
            "date": "2016-10-03T17:06:26+0000",
            "content": "At a minimum, if distributed grouping doesn't work with group.limit=-1 then we should give a clean error saying so rather than an obtuse error.\n\nIIUC though, what Dat has found is that even in single node solr, group.limit=-1 doesn't give you \"unlimited\" groupping results \u2013 it silently re-writes the effective groupedDocsToCollect value to '1' ... I'm not sure why it does that instead of just giving an error, but if we can make distributed grouping behave the exact same way (and i'm not sure why we couldn't have the same Math.max(groupedDocsToCollect, 1); in the distributed code path) then we should. "
        },
        {
            "author": "Webster Homer",
            "id": "comment-15542906",
            "date": "2016-10-03T17:20:59+0000",
            "content": "I am certain that in Solr 4.10 non-cloud specifying -1 did roll up all matching documents. We certainly had more than 1 in the group.\nI agree that at a minimum that solr should be consistent and either throw an error or do something reasonable.\n\nIt would be nice to have a way to specify an unlimited roll up "
        },
        {
            "author": "Hoss Man",
            "id": "comment-15543822",
            "date": "2016-10-04T00:03:18+0000",
            "content": "I am certain that in Solr 4.10 non-cloud specifying -1 did roll up all matching documents. We certainly had more than 1 in the group.\n\nOk .. weird.  \n\nI see now I missread what Dat was saying ... in single node more getMax is returning maxDoc if docsPerGroup < 0 ... so that's where that unlimited behavior was coming from.\n\nIn general this smells like a very bad idea to me ... i'm really suprised/scared  group.limit=-1 has ever worked this way, because it would make it very easy to crash solr/clients depending on what how many docs are in each group being returned \u2013 this is the precise reason rows=-1 has never been supported for non-grouping searches.\n\nIn any case, since we can't support the same \"unlimited\" behavior in cloud mode, let's absolutely add a clear error message indicating that group.limit < 1 is the problem. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-15543928",
            "date": "2016-10-04T00:47:58+0000",
            "content": "I am certain that in Solr 4.10 non-cloud specifying -1 did roll up all matching documents.\n\nYep, I remember group.limit=-1 being explicitly supported when the feature was implemented.\n\nIIUC though, what Dat has found is that even in single node solr, group.limit=-1 doesn't give you \"unlimited\" groupping results \u2013 it silently re-writes the effective groupedDocsToCollect value to '1' \n\nLook at the code for getMax()... it does map -1 to the max possible.\n\ni'm really suprised/scared group.limit=-1 has ever worked this way, because it would make it very easy to crash solr/clients depending on what how many docs are in each group being returned\n\nThere's an argument against unlimited behavior by default.  But if one asks for everything back, one should get it.  \"-1\" is a common way to ask for this... facets, the term component, and graph expressions all use \"-1\" as unlimited.\n\nThe alternative is to pick a really high number out of a hat... which is more fragile since it may silently break applications in the future when they grow beyond that arbitrary number if it's not large enough (they will stop getting all the data, and that may not be an obvious error).\n\n\n\n "
        },
        {
            "author": "Cao Manh Dat",
            "id": "comment-15544083",
            "date": "2016-10-04T02:10:59+0000",
            "content": "Hi Yonik,\n\nIn this case group.limit kinda more like rows parameter in /select and we don't support for negative rows param now. Users should aware that get all documents from each group will be a problem ( especially when we have very few groups ). In opposite case when we have many groups so upper bound for group.limit to retrieve all the docs will be good enough? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-15544135",
            "date": "2016-10-04T02:40:11+0000",
            "content": "In this case group.limit kinda more like rows parameter in /select and we don't support for negative rows param now.\n\ngroup.limit=-1 does work (and has always worked) in non-distrib mode though (by design).  IIRC \"rows\" not supporting -1 was an oversight that I never got around to fixing.  A number of people have been surprised that this doesn't just work.\n\nIf group.limit=-1 is difficult to support in distributed mode for some reason (I don't know that part of the code), then I guess we'll have to live with different behavior in non-distrib vs distrib for now. "
        },
        {
            "author": "Cao Manh Dat",
            "id": "comment-15605487",
            "date": "2016-10-25T14:38:10+0000",
            "content": "Initial patch for this issue.\nYonik Seeley Please kindly review this patch. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-15608571",
            "date": "2016-10-26T14:15:54+0000",
            "content": "+1, looks good to me! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15609002",
            "date": "2016-10-26T16:57:07+0000",
            "content": "Commit 7794fbd13f1a0edfff8f121fb1c6a01075eeef6a in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7794fbd ]\n\nSOLR-4164: fix group.limit=-1 in distributed mode "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15609003",
            "date": "2016-10-26T16:57:17+0000",
            "content": "Commit 65f9b4dc4c209dfa06aa72386f6a9bbb67a5a667 in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=65f9b4d ]\n\nSOLR-4164: fix group.limit=-1 in distributed mode "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-15609013",
            "date": "2016-10-26T16:59:02+0000",
            "content": "Committed.  Thanks Dat! "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15650296",
            "date": "2016-11-09T08:38:51+0000",
            "content": "Closing after 6.3.0 release. "
        }
    ]
}