{
    "id": "SOLR-1539",
    "title": "XPathEntityProcessor timeout when stream=true",
    "details": {
        "affect_versions": "1.4",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When setting stream=true on XPathEntityProcessor a separate thread is created to read whatever Reader is being used for rows while the original thread pumps a BlockingQueue.  This design allows the Reader to be read even when DIH cannot process documents as quickly as they become available in the Reader.\n\nThis design has questionable value.  It adds complexity to the code with unclear benefits to the user.\n\nAt any rate, the code incorrectly uses the BlockingQueue API:\n\n1.  Arbitrarily sets a 10 second timeout and fails when this timeout elapses before a row becomes available.\n2.  Fails to check the return code when calling offer() to see if the item was successfully added or if the queue is full.\n3.  Fails to stop consuming the Reader even after an import has failed or been aborted.\n\nThe effect is that if a URL being processed pauses more than 10 seconds to think in between streaming rows, the XPathEntityProcessor fails.  Setting the readTimeout and connectionTimeout attributes on the dataSource does not address this bug because XPathEntityProcessor imposes its own timeout, hard-coded to 10 seconds.",
    "attachments": {
        "SOLR-1539.patch": "https://issues.apache.org/jira/secure/attachment/12423838/SOLR-1539.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Chris Eldredge",
            "id": "comment-12772594",
            "date": "2009-11-02T18:40:44+0000",
            "content": "Patch against r831980 including test cases. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12772863",
            "date": "2009-11-03T03:21:31+0000",
            "content": "so you wish the queue timeout to be configurable? or to make it longer? "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12772872",
            "date": "2009-11-03T04:12:36+0000",
            "content": "Why does it need a separate thread? "
        },
        {
            "author": "Chris Eldredge",
            "id": "comment-12773080",
            "date": "2009-11-03T15:04:24+0000",
            "content": "In reply to Noble Paul, the timeout in this code is likely an unintended side-effect of incorrectly using the BlockingQueue.  This code should not have any timeout at all.  My patch (attached) corrects the code so there will be no timeout in this component.\n\nIn replay to Lance Norskog, I'm not sure a separate thread provides any advantage.  In theory it allows the data stream to be consumed at a different rate than documents can be processed but once the queue limit is reached any advantage goes away.  The extra thread can probably be removed but I was trying to fix the bugs I found in the least invasive way. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12780930",
            "date": "2009-11-21T07:57:27+0000",
            "content": "committed r882852 "
        }
    ]
}