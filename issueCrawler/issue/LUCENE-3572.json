{
    "id": "LUCENE-3572",
    "title": "MultiIndexDocValues pretends it can merge sorted sources",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Nightly build hit this failure:\n\n\nant test-core -Dtestcase=TestSort -Dtestmethod=testReverseSort -Dtests.seed=791b126576b0cfab:-48895c7243ecc5d0:743c683d1c9f7768 -Dtests.multiplier=3 -Dargs=\"-Dfile.encoding=ISO8859-1\"\n\n    [junit] Testcase: testReverseSort(org.apache.lucene.search.TestSort):\tCaused an ERROR\n    [junit] expected:<[CEGIA]> but was:<[ACEGI]>\n    [junit] \tat org.apache.lucene.search.TestSort.assertMatches(TestSort.java:1248)\n    [junit] \tat org.apache.lucene.search.TestSort.assertMatches(TestSort.java:1216)\n    [junit] \tat org.apache.lucene.search.TestSort.testReverseSort(TestSort.java:759)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$3$1.evaluate(LuceneTestCase.java:523)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:149)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:51)\n\n\n\nIt's happening in the test for reverse-sort of a string field with DocValues, when the test had gotten SlowMultiReaderWrapper.\n\nI committed a fix to the test to avoid testing this case, but we need a better fix to the underlying bug.\n\nMultiIndexDocValues cannot merge sorted sources (I think?), yet somehow it's pretending it can (in the above test, the three subs had BYTES_FIXED_SORTED type, and the TypePromoter happily claims to merge these to BYTES_FIXED_SORTED; I think MultiIndexDocValues should return null for the sorted source in this case?",
    "attachments": {
        "LUCENE-3572.patch": "https://issues.apache.org/jira/secure/attachment/12503779/LUCENE-3572.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-11-15T11:33:28+0000",
            "content": "I think MultiIndexDocValues should return null for the sorted source in this case?\nafaik, this is what it does so I think this test should fail with a NPE no? ",
            "author": "Simon Willnauer",
            "id": "comment-13150391"
        },
        {
            "date": "2011-11-15T19:11:35+0000",
            "content": "OK I mis-diagnosed this!\n\nIndeed the MultiIndexDV.getSource().asSortedSource is returning null,\nbut then the FieldComparator was swapping in the default source (all\ndocs have empty byte[]) in this case, which I think is wrong.  Ie, I\nthink user should see a hard exception if they try to use this\nFieldComp on a field whose doc values cannot provide a sorted source.\n\nSo I made a small patch w/ that change (attached)... tests pass.  I'll\ncommit shortly. ",
            "author": "Michael McCandless",
            "id": "comment-13150685"
        },
        {
            "date": "2011-11-15T21:35:01+0000",
            "content": "+1 patch looks good to me ",
            "author": "Simon Willnauer",
            "id": "comment-13150792"
        }
    ]
}