{
    "id": "SOLR-9541",
    "title": "Support configurable authentication mechanism for internode communication",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3,                                            6.0",
        "status": "Closed",
        "resolution": "Not A Problem",
        "priority": "Major"
    },
    "description": "SOLR-7849 introduced PKI based authentication mechanism for internode communication. The main reason for introducing SOLR-7849 was,\n\n>> Relying on every Authentication plugin to secure the internode communication is error prone. \n\nAt Cloudera we are using Kerberos protocol for all communication without any issues (i.e. between client/server as well as server/server). We should make this internode authentication mechanism configurable (with default as PKI based mechanism). This will allow users to decide the appropriate authentication mechanism based on their security requirements.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-21T07:41:59+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Would you say PKI is less secure than, say, Kerberos? There is some value in the simplicity of this as well, no need to store any secrets in the configs etc? ",
            "id": "comment-15509086"
        },
        {
            "date": "2016-09-21T11:53:41+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "AFAIK, with the kerberos plugin enabled, all internode communication is done via Kerberos. Every solr node has a server principal and a client principal. To have it use PKI, we might need to add the support. ",
            "id": "comment-15509683"
        },
        {
            "date": "2016-09-21T12:03:13+0000",
            "author": "Noble Paul",
            "content": "\nWhat do you mean? The documentation says it clearly\n\n\nThis kicks in when there is any request going on between 2 Solr nodes. It is enabled only when the Authentication plugin does not wish to handle inter-node security (only BasicAuthPlugin as of now)  \n\n\n\nIf your AuthenticationPlugin implements HttpClientInterceptorPlugin, it can handle security of internode requests ",
            "id": "comment-15509706"
        },
        {
            "date": "2016-09-21T17:49:58+0000",
            "author": "Hrishikesh Gadre",
            "content": "Thanks for the feedback Noble Paul, Ishan Chattopadhyaya !\n\nAFAIK, with the kerberos plugin enabled, all internode communication is done via Kerberos. Every solr node has a server principal and a client principal. To have it use PKI, we might need to add the support.\n\nNo that is not really needed. Just having support for kerberos in all cases (client/server and server/server) is sufficient. \n\nWhat do you mean? The documentation says it clearly\n\nSorry I missed that documentation section because it is in the of basic authentication page which I didn't go through (mostly because I am interested in kerberos integration and have no plans to use the basic auth). Cassandra Targett May be we can add this information in the following page for better visibility?\n\nhttps://cwiki.apache.org/confluence/display/solr/Authentication+and+Authorization+Plugins \n\nI also reviewed the code again and now I think I understand the design better. BTW it looks like we initialize the PKIAuthenticationPlugin by default even when it is not used. Can we initialize PKIAuthenticationPlugin lazily (on-need basis) ? This will help us to avoid exposing an unsecured endpoint (to retrieve public-key) in case PKIAuthenticationPlugin is unused.\n\nAny thoughts? ",
            "id": "comment-15510649"
        },
        {
            "date": "2016-09-21T18:03:03+0000",
            "author": "Noble Paul",
            "content": "PKIAuthenticationPlugin is cheap. But not having it initialized can show up other errors in the rest API. The public-key is supposed to be always unsecured. There is no vulnerability in exposing your public key ",
            "id": "comment-15510689"
        },
        {
            "date": "2017-05-07T18:36:45+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Closing this, please re-open if you believe there is still work to do on this.\n\nPlease open a new JIRA for the proposal of disabling PKI in case another plugin explicitly handles inter-node. ",
            "id": "comment-15999987"
        }
    ]
}