{
    "id": "SOLR-8158",
    "title": "Analytics module not supporting multi-valued int values",
    "details": {
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Despite documentation in SOLR-5302 it is not possible execute olap request against multi-valued int field.\n\nIt does not matter whether field is docValues or not (full re-index between changes).\n\nSolr: 5.3.1\nLucene match version: 5.3.1\nSchema version: 1.5\n\nField definition:\n\n<field name=\"valueId\" type=\"int\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/> \n\n\n\nQuery:\n\nq=*:*&olap=true&olap.req1.stat.stat1=unique(valueId)\n\n\n\nError:\n\njava.lang.IllegalStateException: unexpected docvalues type SORTED_SET for field 'valueId' (expected=NUMERIC). Use UninvertingReader or index with docvalues. at org.apache.lucene.index.DocValues.checkField(DocValues.java:208) at org.apache.lucene.index.DocValues.getNumeric(DocValues.java:227) at org.apache.lucene.queries.function.valuesource.IntFieldSource.getValues(IntFieldSource.java:56) at org.apache.solr.analytics.statistics.MinMaxStatsCollector.setNextReader(MinMaxStatsCollector.java:50) at org.apache.solr.analytics.statistics.AbstractDelegatingStatsCollector.setNextReader(AbstractDelegatingStatsCollector.java:47) at org.apache.solr.analytics.accumulator.BasicAccumulator.doSetNextReader(BasicAccumulator.java:86) at org.apache.lucene.search.SimpleCollector.getLeafCollector(SimpleCollector.java:33) at org.apache.solr.analytics.request.AnalyticsStats.execute(AnalyticsStats.java:116) at org.apache.solr.handler.component.AnalyticsComponent.process(AnalyticsComponent.java:44) at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:277) at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143) at org.apache.solr.core.SolrCore.execute(SolrCore.java:2068) at org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:669) at org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:462) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:214) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:179) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577) at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127) at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215) at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110) at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) at org.eclipse.jetty.server.Server.handle(Server.java:499) at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310) at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257) at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540) at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635) at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555) at java.lang.Thread.run(Thread.java:745)",
    "attachments": {},
    "issue_links": {},
    "comments": []
}