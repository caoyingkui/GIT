{
    "id": "SOLR-8062",
    "title": "Solr should raise an exception if minRf is specified and not achieved for an update request",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "See discussion in SOLR-8034",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-16T15:29:18+0000",
            "author": "Mark Miller",
            "content": "My feeling is, if you asked for a min rep and it was not achieved, the request failed. We should not just hint to the client, but disrupt its flow. If you are using a min rep param, presumably, this is the behavior you would want. ",
            "id": "comment-14790554"
        },
        {
            "date": "2015-09-22T13:11:26+0000",
            "author": "Mark Miller",
            "content": "For 6 we might even want to consider having this set by default to the number of replicas and let users scale back to less safety instead of the reverse. ",
            "id": "comment-14902569"
        },
        {
            "date": "2015-09-22T16:32:36+0000",
            "author": "Anshum Gupta",
            "content": "I agree with this. Specially, considering that now LIR doesn't kick in if the minRF isn't  achieved, this makes all the more sense. ",
            "id": "comment-14902914"
        },
        {
            "date": "2015-11-08T13:58:38+0000",
            "author": "Shai Erera",
            "content": "I wanted to share a possible confusion on the user end, if we start throwing exceptions.\n\nSince Solr (and Lucene for that matter) is unable to rollback a specific update request, I believe that's the reason why 'minRF' is used only as a hint, and telling the user that the update request didn't achieve it. By not throwing the exception, the user/client couldn't think that the update request was unsuccessful, and in fact, I believe that in many cases the update itself did reach the failed replicas eventually.\n\nIf we start throwing an exception, I worry that users might think that the update request was unsuccessful as a whole. If they care, they might re-issue the request. But if they don't, then they might not realize that the update did get through, and even reach the failed replicas eventually. This might cause 'surprises' and inconsistency between what the user thinks is in the index and what isn't.\n\nI personally think that an exception is better than just a warning in the response, but wanted to raise this potential confusion, in case others have an opinion on it. Perhaps if we throw an explicit exception it will be easier to note by users, i.e. UpdateNotFullyAppliedException or something like that. It's not a total update failure, but it is some sort of failure cause we weren't able to meet the client's requirements. ",
            "id": "comment-14995639"
        },
        {
            "date": "2015-11-08T14:59:39+0000",
            "author": "Mark Miller",
            "content": "We have to throw an exception because the request as designed could not be completed. Of course we wil document what that exception means.  ",
            "id": "comment-14995655"
        }
    ]
}