{
    "id": "LUCENE-6325",
    "title": "improve perf and memory of FieldInfos.fieldInfo(int)",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Sub-task"
    },
    "description": "FieldInfos.fieldInfo(int) looks up a field by number and returns its FieldInfo.\nThis method is called per-field-per-doc in things like stored fields and vectors readers.\n\nUnfortunately, today this method is always backed by a TreeMap. In most cases a simple array is better, its faster and uses less memory.\n\nThese changes made significant difference in stored fields checkindex time with my test index (had only 10 fields). Maybe it helps merge as well.",
    "attachments": {
        "LUCENE-6325.patch": "https://issues.apache.org/jira/secure/attachment/12701875/LUCENE-6325.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14343167",
            "author": "Robert Muir",
            "date": "2015-03-02T13:55:42+0000",
            "content": "Here was my first patch (moved from LUCENE-6320).\n\nMaybe we can add some fieldinfos tests to exercise this directly, and maybe there is a way to simplify the scary logic too. "
        },
        {
            "id": "comment-14343179",
            "author": "Robert Muir",
            "date": "2015-03-02T14:17:22+0000",
            "content": "btw, as far as whether the \"sparse\" case is tested, i added \"assert false\" to this and ran core tests (no @Slow, no @Nightly):\n\n   [junit4] Tests with failures (first 10 out of 37):\n   [junit4]   - org.apache.lucene.index.TestStressIndexing2.testRandom\n   [junit4]   - org.apache.lucene.index.TestStressIndexing2.testRandomIWReader\n   [junit4]   - org.apache.lucene.index.TestStressIndexing2.testMultiConfig\n   [junit4]   - org.apache.lucene.codecs.asserting.TestAssertingStoredFieldsFormat.testMerge\n   [junit4]   - org.apache.lucene.search.TestSearcherManager.testSearcherManager\n   [junit4]   - org.apache.lucene.index.TestBinaryDocValuesUpdates.testDeleteUnusedUpdatesFiles\n   [junit4]   - org.apache.lucene.index.TestBinaryDocValuesUpdates.testManyReopensAndFields\n   [junit4]   - org.apache.lucene.index.TestBinaryDocValuesUpdates.testSegmentMerges\n   [junit4]   - org.apache.lucene.index.TestBinaryDocValuesUpdates.testMultipleDocValuesTypes\n   [junit4]   - org.apache.lucene.index.TestBinaryDocValuesUpdates.testUpdatesOrder\n\n\n\nSo I think its tested (there are several tests cranking fields like TestManyFields). But if we can do it better, I am all for that. "
        },
        {
            "id": "comment-14602888",
            "author": "Michael McCandless",
            "date": "2015-06-26T13:43:23+0000",
            "content": "+1, this looks like an easy, possibly high-impact win.\n\nI think we can be more aggressive about using the array: TreeMap has much more than 50% overhead, since it also needs Integer key and pointer to that key, and object overhead holding that key pointer and value pointer.  I think we can safely do this opto when it's > 10% of the space? "
        },
        {
            "id": "comment-14602916",
            "author": "Robert Muir",
            "date": "2015-06-26T14:02:21+0000",
            "content": "Mike, if you have time, can you do calculations and adjust the patch? You can take the issue too, i had basically given up on this. "
        },
        {
            "id": "comment-14602945",
            "author": "Michael McCandless",
            "date": "2015-06-26T14:33:25+0000",
            "content": "OK I can try to update this & commit... "
        },
        {
            "id": "comment-14603010",
            "author": "Michael McCandless",
            "date": "2015-06-26T15:08:15+0000",
            "content": "New patch, using dense array when > 1/16th of the numbers are used:\n\nEach TreeMap$Entry has object header (8 or 16 bytes), 5 pointers (4 or\n8 bytes), and a boolean (likely rounded up to 4 bytes), times 2 for\nall the inner nodes of the tree, plus the overhead of Integer (object\nheader, int), so net/net each entry in the TreeMap costs 68 - 124 bytes.\n\nThe array is 4 or 8 bytes per int. "
        },
        {
            "id": "comment-14603012",
            "author": "Michael McCandless",
            "date": "2015-06-26T15:08:32+0000",
            "content": "I think the patch is ready... "
        },
        {
            "id": "comment-14603039",
            "author": "Robert Muir",
            "date": "2015-06-26T15:26:18+0000",
            "content": "Thanks, can you change 16 to 16L? I don't want to think about overflowing. "
        },
        {
            "id": "comment-14603062",
            "author": "Michael McCandless",
            "date": "2015-06-26T15:41:20+0000",
            "content": "Thanks, can you change 16 to 16L?\n\nOh, good catch!  I'll fix ... "
        },
        {
            "id": "comment-14603065",
            "author": "Robert Muir",
            "date": "2015-06-26T15:43:13+0000",
            "content": "+1 to commit with that modification, thanks for doing the calculations here. "
        },
        {
            "id": "comment-14603085",
            "author": "ASF subversion and git services",
            "date": "2015-06-26T15:54:04+0000",
            "content": "Commit 1687789 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1687789 ]\n\nLUCENE-6325: use array for number -> FieldInfo lookup, except in very sparse cases "
        },
        {
            "id": "comment-14603101",
            "author": "ASF subversion and git services",
            "date": "2015-06-26T16:01:18+0000",
            "content": "Commit 1687792 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1687792 ]\n\nLUCENE-6325: use array for number -> FieldInfo lookup, except in very sparse cases "
        },
        {
            "id": "comment-14603106",
            "author": "Michael McCandless",
            "date": "2015-06-26T16:02:40+0000",
            "content": "Thanks Robert Muir! "
        },
        {
            "id": "comment-14713326",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:06:26+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}