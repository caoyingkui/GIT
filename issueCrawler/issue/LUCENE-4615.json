{
    "id": "LUCENE-4615",
    "title": "Remove Int/FloatArrayAllocator from facet module?",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Spinoff from LUCENE-4600.\n\nIt makes me nervous to have allocation tied to our public APIs ... and the ability for Int/FloatArrayAllocator to hold onto N arrays indefinitely makes me even more nervous.  I think we should just trust java/GC to do their job here and free the storage as soon as faceting is done.",
    "attachments": {
        "LUCENE-4615.patch": "https://issues.apache.org/jira/secure/attachment/12560383/LUCENE-4615.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-12-11T07:15:15+0000",
            "content": "This was required when we worked with a team that managed taxonomies with 5M+ nodes. Allocating those arrays (could be 20MB+) over and over for every search was expensive, and I think that it's expensive with today's JVMs too.\n\nI prefer that we keep these somewhere, and would like to propose the following:\n\n\n\tDon't make the allocators so visible on the API. I.e. today StandardFacetsAccumulator takes them in the constructor. Perhaps we can move it to a protected method?\n\t\n\t\tThen, only extensions would be exposed to it, and whoever extends SFA, or writes his own Accumulator, IMO should be allowed to reuse arrays.\n\t\n\t\n\n\n\n\n\tBy default, don't cache arrays. Today by default we reuse one array, and I think that for the common case, this is not needed.\n\n\n\nSo I do like to keep the option for extensions to reuse arrays, just because we've seen that it's needed in some cases. But I am +1 for 'hiding' that option somewhere, so that only experts that need it, will find it . ",
            "author": "Shai Erera",
            "id": "comment-13528747"
        },
        {
            "date": "2012-12-11T07:20:11+0000",
            "content": "Took a look in the code, the allocators are used mostly by FacetArrays, so perhaps that can be the abstraction level? I.e. we make FacetArrays expose API similar to acquire/release of int[]/float[]. The default impl would always allocate new, and discard in release. A ReusingFacetArrays would use the current allocators logic? ",
            "author": "Shai Erera",
            "id": "comment-13528751"
        },
        {
            "date": "2012-12-11T10:58:42+0000",
            "content": "This was required when we worked with a team that managed taxonomies with 5M+ nodes. Allocating those arrays (could be 20MB+) over and over for every search was expensive, and I think that it's expensive with today's JVMs too.\n\nOK.  Spooky!  I wonder if for such cases we should use native int[] hash map ... until the number of unique ords collected is \"big enough\" to warrant the non-sparse array.\n\n+1 for moving this abstraction to FacetArrays and making an optional/expert/not-the-default ReusingFacetArrays. ",
            "author": "Michael McCandless",
            "id": "comment-13528882"
        },
        {
            "date": "2012-12-11T13:24:18+0000",
            "content": "Patch replaces Int/FloatArrayAllocator by ArraysPool and introduces a new ReusingFacetArrays. StandardFacetsAccumulator takes FacetArrays (or none) instead of the allocators.\n\nThanks Gilad for helping to write this !\n\nAll tests pass. I think it's ready to commit ",
            "author": "Shai Erera",
            "id": "comment-13528954"
        },
        {
            "date": "2012-12-11T13:36:46+0000",
            "content": "+1\n\nWow, that was fast   Thanks guys!  ",
            "author": "Michael McCandless",
            "id": "comment-13528961"
        },
        {
            "date": "2012-12-11T13:54:35+0000",
            "content": "[trunk commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1420159\n\nLUCENE-4615: do not reuse facet aggregation arrays by default; added ReusingFacetArrays ",
            "author": "Commit Tag Bot",
            "id": "comment-13528972"
        },
        {
            "date": "2012-12-11T13:56:16+0000",
            "content": "[trunk commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1420162\n\nLUCENE-4615: ReusingFacetArrays was left out by mistake ",
            "author": "Commit Tag Bot",
            "id": "comment-13528974"
        },
        {
            "date": "2012-12-11T13:57:07+0000",
            "content": "Thanks for the review Mike. Committed to trunk and 4x. ",
            "author": "Shai Erera",
            "id": "comment-13528975"
        },
        {
            "date": "2012-12-11T14:02:10+0000",
            "content": "[branch_4x commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1420163\n\nLUCENE-4615: do not reuse facet aggregation arrays by default; added ReusingFacetArrays ",
            "author": "Commit Tag Bot",
            "id": "comment-13528981"
        }
    ]
}