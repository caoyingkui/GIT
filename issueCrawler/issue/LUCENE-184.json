{
    "id": "LUCENE-184",
    "title": "NullPointerException calling IndexSearcher.search().",
    "details": {
        "labels": "",
        "priority": "Blocker",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "IndexSearher.search() gets a NullPointerException. The demo SearchFiles.java \ngets this error, as does my own simple Search test problem (included below). I \nadded a stack trace, which gets...\n\n$ java Search\nQuery: foo\nSearching for: foo\n caught a class java.lang.NullPointerException\n with message: null\njava.lang.NullPointerException\n        at org.apache.lucene.search.IndexSearcher.explain\n(IndexSearcher.java:196)\n        at org.apache.lucene.search.Hits.getMoreDocs(Hits.java:93)\n        at org.apache.lucene.search.Hits.<init>(Hits.java:80)\n        at org.apache.lucene.search.Searcher.search(Searcher.java:71)\n        at org.apache.lucene.search.Searcher.search(Searcher.java:65)\n        at Search.main(Search.java:35)\n\n\nThe source for Search.java...\n\nimport java.io.*;\nimport java.util.*;\n\nimport org.apache.lucene.analysis.Analyzer;\nimport org.apache.lucene.analysis.standard.StandardAnalyzer;\nimport org.apache.lucene.document.Document;\nimport org.apache.lucene.search.Searcher;\nimport org.apache.lucene.search.IndexSearcher;\nimport org.apache.lucene.search.Query;\nimport org.apache.lucene.search.Hits;\nimport org.apache.lucene.queryParser.QueryParser;\n\nclass Search {\n\n        public static void main(String[] args) {\n\n                try {\n                        Searcher searcher = new IndexSearcher(\"psr_index\");\n                        Analyzer analyzer = new StandardAnalyzer();\n\n                        BufferedReader in = new BufferedReader(new \nInputStreamReader(System.in));\n                        while (true) {\n                                System.out.print(\"Query: \");\n                                String line = in.readLine();\n\n                                if (line.length() == -1)\n                                        break;\n\n                                Date startT = new Date();\n\n                                Query query = QueryParser.parse\n(line, \"description\", analyzer);\n                                System.out.println(\"Searching for: \" + \nquery.toString(\"description\"));\n\n                                Hits hits = searcher.search(query);\n\n                                Date endT = new Date();\n                                System.out.print(\"...found \" + hits.length() \n+ \" total matching listings; \");\n                                System.out.print(endT.getTime() - startT.getTime\n());\n                                System.out.println(\" milliseconds\\n\");\n\n                                final int HITS_PER_PAGE = 10;\n                                for (int start = 0; start < hits.length(); \nstart += HITS_PER_PAGE) {\n                                        int end = Math.min(hits.length(), start \n+ HITS_PER_PAGE);\n                                        for (int i = start; i < end; i++) {\n                                                Document doc = hits.doc;\n\n                                                String title = doc.get(\"title\");\n                                                String description = doc.get\n(\"description\");\n\n                                Hits hits = searcher.search(query);\n\n                                Date endT = new Date();\n                                System.out.print(\"...found \" + hits.length() \n+ \" total matching listings; \");\n                                System.out.print(endT.getTime() - startT.getTime\n());\n                                System.out.println(\" milliseconds\\n\");\n\n                                final int HITS_PER_PAGE = 10;\n                                for (int start = 0; start < hits.length(); \nstart += HITS_PER_PAGE) {\n                                        int end = Math.min(hits.length(), start \n+ HITS_PER_PAGE);\n                                        for (int i = start; i < end; i++) \n{\n                                                Document doc = hits.doc(i);\n\n                                                String title = doc.get(\"title\");\n                                                String description = doc.get\n(\"description\");\n\n                                                System.out.println(i + \". \" + \ntitle);\n                                                System.out.println(\"    - \" + \ndescription);\n                                        }\n\n                                        Date displayT = new Date();\n\n                                        System.out.print(\"\\n...results \ndisplayed in \");\n                                        System.out.print(displayT.getTime() - \nendT.getTime());\n                                        System.out.println(\" milliseconds\\n\");\n\n                                        if (hits.length() > end) \n{\n                                                System.out.print(\"more \n(y/n) ? \");\n                                                line = in.readLine();\n                                                if (line.length() == 0 || \nline.charAt(0) == 'n')\n                                                        break;\n                                        }\n\n                                        System.out.println(\"\\n\");\n                                        endT = new Date();\n                                }\n                        }\n\n                        searcher.close();\n\n                } catch (Exception e) \n{\n                        System.out.println(\" caught a \" + e.getClass() +\n                                \"\\n with message: \" + e.getMessage());\n                        e.printStackTrace();\n                }\n        }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2004-02-24T05:52:54+0000",
            "content": "In email you specify this is with JDK 1.3.0, which is known to have problems. \nPlease try JDK 1.3.1 or later.  If that doesn't fix things, please re-open the\nbug.  Thanks. ",
            "author": "cutting@apache.org",
            "id": "comment-12321574"
        }
    ]
}