{
    "id": "SOLR-1004",
    "title": "Optimizing the abort command in delta import",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I have seen that when abort command is called in a deltaImport, in DocBuilder.java, at doDelta functions it's just checked for abortion at the begining of collectDelta, after that function and at the end of collectDelta.\nThe problem I have found is that if there is a big number of documents to modify and abort is called in the middle of delta collection, it will not take effect until all data is collected.\nSame happens when we start deleteting or updating documents. In updating case, there is an abortion check inside buildDocument but, as it is called inside a \"while\" for all docs to update, it will keep going throw all docs of the bucle and skipping them.\nI propose to do an abortion check inside every loop of data collection and after calling build document in doDelta function.\n\nIn the case of modifing documents, the code in DocBuilder.java would look like:\n\n    while (pkIter.hasNext()) {\n      Map<String, Object> map = pkIter.next();\n      vri.addNamespace(DataConfig.IMPORTER_NS + \".delta\", map);\n      buildDocument(vri, null, map, root, true, null);\n      pkIter.remove();\n      //check if abortion\n      if (stop.get())\n      {\n            allPks = null ;\n            pkIter = null ;\n            return;\n        }     \n    }\n\nIn the case of document deletion (deleteAll function in DocBuilder): Just       if (stop.get())\n{ break ; }\n     at the end of every loop and call this just after deleteAll is called (in doDelta)\n      if (stop.get())\n      {\n            allPks = null;\n            deletedKeys = null;\n            return;\n\n       }\n\nFinally in collect delta:\n\n      while (true) {\n         //check for abortion\n         if (stop.get())\n{ return myModifiedPks; }\n         Map<String, Object> row = entityProcessor.nextModifiedRowKey();\n\n         if (row == null)\n           break;\n           ...\n\nAnd the same for delete-query collection and parent-delta-query collection\n\nI didn't atach de patch because is the first time I open an issue and don't know if you want to code it as I do. Just wanted to explain the idea and how I solved, I think it can be useful for other users.",
    "attachments": {
        "SOLR-1004.patch": "https://issues.apache.org/jira/secure/attachment/12400391/SOLR-1004.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12674495",
            "date": "2009-02-18T07:12:40+0000",
            "content": "Changes\n\n\tCheck for abort in nextModifiedRow detection\n\tCheck for abort in nextDeletedRow\n\tCheck in doDelta\n\tCheck getModifiedParentRowKey\n\n\n\nMarc, can you see the patch to ensure all your changes got in? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12674900",
            "date": "2009-02-19T05:43:37+0000",
            "content": "Committed revision 745742.\n\nThanks Marc! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775650",
            "date": "2009-11-10T15:51:56+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}