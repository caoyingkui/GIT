{
    "id": "SOLR-10395",
    "title": "NPE during spell check with result collation",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.2.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I'm getting a NullPointerException when using collation during spell check. This is the message I'm getting: Exception trying to re-query to check if a spell check possibility would return any hits.\n\nStack trace:\n\n2017-03-13 13:05:54.618 WARN (qtp472654579-84) [c:locatieserver s:dkk r:core_node4 x:locatieserver_dkk_replica2] o.a.s.s.SpellCheckCollator Exception trying to re-query to check if a spell check possibility would return any hits.\njava.lang.NullPointerException\nat org.apache.solr.spelling.SpellCheckCollator.collate(SpellCheckCollator.java:150)\nat org.apache.solr.handler.component.SpellCheckComponent.addCollationsToResponse(SpellCheckComponent.java:297)\nat org.apache.solr.handler.component.SpellCheckComponent.process(SpellCheckComponent.java:209)\nat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:295)\nat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:154)\nat org.apache.solr.core.SolrCore.execute(SolrCore.java:2089)\n...\n\n\n\nMy spell check config for this search handler:\n\n            <str name=\"spellcheck\">on</str>\n            <str name=\"spellcheck.dictionary\">suggest</str>\n            <str name=\"spellcheck.extendedResults\">false</str>\n            <str name=\"spellcheck.count\">5</str>\n            <str name=\"spellcheck.alternativeTermCount\">2</str>\n            <str name=\"spellcheck.maxResultsForSuggest\">3</str>\n            <str name=\"spellcheck.collate\">true</str>\n            <str name=\"spellcheck.collateExtendedResults\">true</str>\n            <str name=\"spellcheck.maxCollationTries\">5</str>\n            <str name=\"spellcheck.maxCollations\">3</str>\n\n\n\nThe field \"suggest\" is a field in the index, which is also (usually) queried with this search handler. The field is filled with lots of data created by edge ngrams, since it's intended usage is for an autocomplete field.\n\nThis issue is very similar to SOLR-8807, but the NPE is occurring one line in the code later (solr\\core\\src\\java\\org\\apache\\solr\\spelling\\SpellCheckCollator.java). As a result the patch attached to that issue probably won't work in my case.\n\n\n        try {\n          queryComponent.prepare(checkResponse);\n          if (docCollectionLimit > 0) {\n            int f = checkResponse.getFieldFlags();\n            checkResponse.setFieldFlags(f |= SolrIndexSearcher.TERMINATE_EARLY);            \n          }\n          queryComponent.process(checkResponse);\n          hits = (Integer) checkResponse.rsp.getToLog().get(\"hits\");\n        } catch (EarlyTerminatingCollectorException etce) {\n\n\n\nAlthough I'm using Solr 6.2.1, the source file is still identical to Solr 6.5.0.\n\nThe line causing my exception is when determining the hits. I've noticed the exception only occurs when no more than 2 alternatives are found, but when 3 alternatives (maxCollations) are found, the NPE isn't occurring.\n\nAs a workaround I could live for now with turning collations off. (Update: I've suppressed logging of these exceptions in log4j.properties.)\n\nPlease let me know if you need more information. Thanks!",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-31T12:09:53+0000",
            "content": "This is an odd code location for an NPE. I cannot see any nullable reassignments to either checkResponse, checkResponse.rsp, or checkResponse.rsp.getToLog in the current code base. Could you share the search request you're sending? Do you use any other search components or plugins in that request? ",
            "author": "Matthias Krueger",
            "id": "comment-15950763"
        },
        {
            "date": "2017-04-07T16:04:40+0000",
            "content": "The field is filled with lots of data created by edge ngrams, since it's intended usage is for an autocomplete field.\n\nThe collate functionality doesn't generally work with ngrams.  Before the collate functionality existed with its current features, users would use ngram fields to get phgrase-level spellchecking.  But the collation feature is intended to give phrase-level spell corrections without needing to index all the additional data.  So typically you'd use either ngrams or you'd use collate, but not both together.  If I were you, I'd also look using one of the Suggesters instead of spellcheck for suggestions.\n\nAside from this, it would be best if it didn't throw NPE!  Could you give an example of the full query parameters for a query that returns 2 results and succeeds?  Could you set \"maxCollations\" down from 3 to 2 and see if that causes it to fail?  If not, could you also provide an example that fails?  Possibly we can create a failing unit test, if I can know enough about what you're doing. ",
            "author": "James Dyer",
            "id": "comment-15961025"
        },
        {
            "date": "2017-04-11T11:39:16+0000",
            "content": "@Matthias: here is an example request: http://geodata.nationaalgeoregister.nl/locatieserver/suggest?q=matenweg%20beuningen&indent=on\nCurrently I'm suppressing the error messages on this server (3 Solr instances, running in a Solr Cloud configuration, using external Zookeepers), but I can still reproduce it on a test server.\n\nHere is the full configuration of the search handler:\n\n    <requestHandler name=\"/geosearch/suggest\" class=\"solr.SearchHandler\">\n        <lst name=\"invariants\">\n            <str name=\"defType\">llparser</str>\n            <str name=\"mm\">100%</str>\n            <str name=\"fl\">id,weergavenaam,type,score</str>\n            <str name=\"df\">suggest</str>\n            <!-- Highlighting defaults -->\n            <str name=\"hl\">on</str>\n            <str name=\"hl.fl\">suggest</str>\n            <str name=\"hl.fragsize\">255</str>\n            <str name=\"hl.encoder\">html</str>\n            <str name=\"hl.simple.pre\">&lt;b&gt;</str>\n            <str name=\"hl.simple.post\">&lt;/b&gt;</str>\n            <!-- Spell checking defaults -->\n            <str name=\"spellcheck\">on</str>\n            <str name=\"spellcheck.dictionary\">suggest</str>\n            <str name=\"spellcheck.extendedResults\">false</str>\n            <str name=\"spellcheck.count\">5</str>\n            <str name=\"spellcheck.alternativeTermCount\">2</str>\n            <str name=\"spellcheck.maxResultsForSuggest\">3</str>\n            <str name=\"spellcheck.collate\">true</str>\n            <str name=\"spellcheck.collateExtendedResults\">true</str>\n            <str name=\"spellcheck.maxCollationTries\">5</str>\n            <str name=\"spellcheck.maxCollations\">3</str>\n        </lst>\n        <lst name=\"defaults\">\n            <str name=\"wt\">json</str>\n            <str name=\"q.alt\">*:*</str>\n            <str name=\"rows\">10</str>\n            <str name=\"omitHeader\">true</str>\n            <!-- Boost exact matches -->\n            <str name=\"qf\">exacte_match^1 suggest^0.5 huisnummer^0.5 huisletter^0.5 huisnummertoevoeging^0.5</str>\n            <!-- Boost municipality above city above road above address -->\n            <str name=\"bq\">type:gemeente^1.5 type:woonplaats^1.5 type:weg^1.5 type:postcode^0.5 type:adres^1</str>\n            <!-- Sortering Politie was (invariant): typesortering asc, score desc, sortering asc, weergavenaam asc -->\n            <str name=\"sort\">score desc, sortering asc, weergavenaam asc</str>\n        </lst>\n        <!-- append spellchecking to our list of components -->\n        <arr name=\"last-components\">\n            <str>spellcheck</str>\n        </arr>\n    </requestHandler>\n\n\nWe're using Solr as a geocoder. With this you can enter the name of an address, post code, street, city/village or municipality, and you get information about matching objects back. In this case one street, one postal code, and one address. This street has only one address, so I'm getting 3 results, triggering the collation, and also the exception.\n\nQuery parser:\n\n  <queryParser name=\"llparser\" class=\"nl.kadaster.pdok.locatieserver.LatLonQueryParserPlugin\"/>\n\n\nThe purpose of the LatLonQueryParser is to convert custom parameters lat and lon to parameters so Solr can execute a geospatial search. This class is based on the ExtendedDismaxQParser. I'm just setting these new parameters (sort, pt, boost, and distance) to the request. I'm also changing the private field config during reflection. I've written this QP already a few years ago, for a different client. I should probably have reported this before. All of this only happens when the lat and lon parameters have been given. But, as far as I know, I'm not doing anything related to spellchecking.\n\nI'm not using any other plugins. ",
            "author": "Frank Steggink",
            "id": "comment-15964232"
        },
        {
            "date": "2017-04-11T11:48:10+0000",
            "content": "@James: here is an example returning only 2 results: http://geodata.nationaalgeoregister.nl/locatieserver/suggest?q=matenweg%20beuningen%20(type:weg%20or%20type:adres)&indent=on\n\nIt still throws the error. As you can see, it also gives suggestions for \"type\", \"or\", and \"adres\". This is due to synonyms, and filters in some analyzers.\n\nYou're right that it shouldn't be necessary to use collation when using ngrams. There might be a use case though, when someone mistypes a character. A smart client application could do some \"autocorrection\" on the fly.\n\nI'll check what happens when maxCollations is set to 2. ",
            "author": "Frank Steggink",
            "id": "comment-15964243"
        },
        {
            "date": "2017-04-11T12:33:51+0000",
            "content": "\nI've noticed the exception only occurs when no more than 2 alternatives are found, but when 3 alternatives (maxCollations) are found, the NPE isn't occurring.\n\nI don't know why I said that the NPE wasn't occurring, but it still appears in the Solr log. Also note that the collations array has always been empty.\n\nI've also set maxCollations to 2. I see suggestions being given with 2 results and also with 3 results, but not with 4 results. However, in all cases I'm still seeing the NPE. I did reload the collection, after I've pushed the new configuration to Zookeeper. ",
            "author": "Frank Steggink",
            "id": "comment-15964298"
        },
        {
            "date": "2017-04-11T13:08:03+0000",
            "content": "Frank Steggink  If you're using a custom QueryParser, you probably cannot use the default SpellingQueryConverter, but need to write one that pairs with the QueryParser you're using.\n\nBut an easier solution would be to use the \"spellcheck.q\" parameter, like this:\n\n/suggest?q=matenweg beuningen 0(type:weg or type:adres)&spellcheck.q=matenweg beuningen 0\n\n...but actually, for spellcheck to work well, you might need to <copyField /> your data to a field that is not analyzed with ngrams but just is split on whitespace and use that as the field you check spelling against.\n\nThe only real bug I see here is the lack of a good error message for cases like this.  The spellchecker is not meant to be used with custom query parsers or heavily-analyzed fields, so its not surprising to me you're running into trouble. ",
            "author": "James Dyer",
            "id": "comment-15964336"
        },
        {
            "date": "2017-04-11T13:21:03+0000",
            "content": "I've replaced the llparser in my search handler by edismax, in order to rule out that my custom code was somehow responsible for this. The NPE's are still showing up in my log files. ",
            "author": "Frank Steggink",
            "id": "comment-15964355"
        },
        {
            "date": "2017-04-11T13:25:44+0000",
            "content": "\nBut an easier solution would be to use the \"spellcheck.q\" parameter, like this:\n\n/suggest?q=matenweg beuningen 0(type:weg or type:adres)&spellcheck.q=matenweg beuningen 0\nWhat does the 0 do?\n\n\n...but actually, for spellcheck to work well, you might need to <copyField /> your data to a field that is not analyzed with ngrams but just is split on whitespace and use that as the field you check spelling against.\nGood idea. I think I'll disable the spell check as you've originally suggested.\n\n\nThe only real bug I see here is the lack of a good error message for cases like this. The spellchecker is not meant to be used with custom query parsers or heavily-analyzed fields, so its not surprising to me you're running into trouble.\nPerhaps my configuration is indeed triggering a rare condition causing the exception, but I agree that a better error message would help a lot. ",
            "author": "Frank Steggink",
            "id": "comment-15964359"
        },
        {
            "date": "2017-04-11T13:43:33+0000",
            "content": "Frank Steggink  \n\nWhat does the 0 do?\nI thought it was one of your query terms.  So it doesn't do anything.\n\ntriggering a rare condition\nIts not so rare and lots of people run into problems like this.  The spellcheck field needs intact keywords like the user enters to compare user input to possible corrections.  Heavy analysis like stemming and grams break this assumption.  The spellchecker also needs to extract the actual keywords from the query string without having access to the actual query parser that was used.  This is where the SpellingQueryConverter comes in.  But the SpellingQueryConverter has limitations.  The use of this class rather than getting the actual keywords from the real query parser is, in my opinion, a weakness of Solr's spellchecker.\n\nLooking a little closer, I think another way to work around this is to move the \"type\" part of the query to a \"fq\" and just query the user's keywords in the \"q\" parameter.  While I can't reproduce the NPE, I can get it to suggest for \"or\" and \"type\", which is also incorrect.  Once again, the SpellingQueryConverter assumes a query is either a boolean-type query or its a dismax-type query.  It doesn't know all the nuances of edismax. \n\nq=menweg beingen 0&fq=(type:weg OR type:adres) ",
            "author": "James Dyer",
            "id": "comment-15964381"
        }
    ]
}