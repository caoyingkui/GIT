{
    "id": "SOLR-11985",
    "title": "Allow percentage in replica attribute in policy",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling",
            "SolrCloud"
        ],
        "type": "New Feature",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Today we can only specify an absolute number in the 'replica' attribute in the policy rules. It'd be useful to write a percentage value to make certain use-cases easier. For example:\n\n// Keep a third of the the replicas of each shard in east region\n{\"replica\" : \"<34%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"east\"}\n// Keep two thirds of the the replicas of each shard in west region\n{\"replica\" : \"<67%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"west\"}\n\n\nToday the above must be represented by different rules for each collection if they have different replication factors. Also if the replication factor changes later, the absolute value has to be changed in tandem. So expressing a percentage removes both of these restrictions.\n\nThis feature means that the value of the attribute \"replica\" is only available just in time. We call such values \"computed values\" . The computed value for this attribute depends on other attributes as well. \n Take the following 2 rules\n\n//example 1\n{\"replica\" : \"<34%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"east\"}\n//example 2\n{\"replica\" : \"<34%\",  \"sysprop:region\": \"east\"}\n\n\nassume we have collection \"A\" with 2 shards and replicationFactor=3\n\nexample 1 would mean that the value of replica is computed as\n\n3 * 34 / 100 = 1.02\n\nWhich means for each shard keep less than 1.02 replica in east availability zone\n\n\u00a0\n\nexample 2 would mean that the value of replica is computed as\u00a0\n\n3 * 2 * 34 / 100 = 2.04\n\n\u00a0\n\nwhich means for each collection keep less than 2.04 replicas on east availability zone",
    "attachments": {
        "SOLR-11985.patch": "https://issues.apache.org/jira/secure/attachment/12927839/SOLR-11985.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-15T11:32:07+0000",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   3m 15s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   3m 55s \n  the patch passed  \n\n\n +1 \n  javac  \n   3m 55s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   3m 55s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   3m 55s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   3m 55s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  13m 50s \n  solrj in the patch passed.  \n\n\n  \n   \n  27m 52s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11985 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12927839/SOLR-11985.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 772e171 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/124/testReport/ \n\n\n modules \n C: solr/solrj U: solr/solrj \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/124/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16513682"
        },
        {
            "date": "2018-06-20T18:49:11+0000",
            "content": "Noble Paul What would happen if I had 5 replicas and\u00a03 zones for a shard? Is it possible to make a rule that balances the replicas on a shard as 2 on us-east-1a, 2 on us-east-1b, and 1 on us-east-1c? ",
            "author": "Jerry Bao",
            "id": "comment-16518480"
        },
        {
            "date": "2018-06-21T06:10:57+0000",
            "content": "If we already know the numbers, it's much better to hard code the numbers. Anyway in your case\n2 on us-east-1a = 40%\n2 on us-east-1b = 40%\n1 on us-east-1c = 20%\nSo, the rules would be as follows\n\n{\"replica\" : \"<41%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1a\"}\n{\"replica\" : \"<41%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1b\"}\n{\"replica\" : \"<21%\", \"shard\" : \"#EACH\", \"sysprop:region\": \" us-east-1c \"}\n\n ",
            "author": "Noble Paul",
            "id": "comment-16518960"
        },
        {
            "date": "2018-06-21T06:32:15+0000",
            "content": "Noble Paul that would mean each\u00a0shard would have to have the same amount of replicas, which might not be the case within a collection or among all collections; it would be nice if there were a set of policies that would evenly distribute a shard's replicas amongst a property without having to specify different rules per collection based on how many replicas each shard has.\n\nI agree that if all of the shards had the same number of replicas we could change the numbers, but that isn't always the case.\n\nDoes that make sense? ",
            "author": "Jerry Bao",
            "id": "comment-16518984"
        },
        {
            "date": "2018-06-21T21:57:33+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   3m 11s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   3m 12s \n  the patch passed  \n\n\n +1 \n  javac  \n   3m 12s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 37s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m 24s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m 24s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 101m 44s \n  core in the patch failed.  \n\n\n +1 \n  unit  \n   9m 45s \n  solrj in the patch passed.  \n\n\n  \n   \n 122m 45s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestTriggerIntegration \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestLargeCluster \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11985 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12928492/SOLR-11985.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 629081f \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/129/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/129/testReport/ \n\n\n modules \n C: solr/core solr/solrj U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/129/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16519806"
        },
        {
            "date": "2018-06-22T05:31:31+0000",
            "content": "that would mean each shard would have to have the same amount of replicas,...\n\nNo , this just means that you may have same ratio of replicas on each zone ",
            "author": "Noble Paul",
            "id": "comment-16520027"
        },
        {
            "date": "2018-06-22T18:32:06+0000",
            "content": "Given the way it was written, the concern I had was the following:\n\nOne collection has shards with 3 replicas and another collection has shards with 4 replicas. If I had the following set of rules...\n\n{\"replica\" : \"<33%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1a\"}\n{\"replica\" : \"<33%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1b\"}\n{\"replica\" : \"<33%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1c\"}\n\n\n\nMy concern was it would turn into\n\n{\"replica\" : \"<2\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1a\"}\n{\"replica\" : \"<2\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1b\"}\n{\"replica\" : \"<2\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1c\"}\n\n\nfor the collection with 3 replicas, and\n\n{\"replica\" : \"<3\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1a\"}\n{\"replica\" : \"<3\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1b\"}\n{\"replica\" : \"<3\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1c\"}\n\n\nfor the collection with 4 replicas. In the collection with 4 replicas, you could have 2 replicas on us-east-1a and 2 replicas on us-east-1b. What we really want is 1 on each before having the 4th replica on another zone. Due to the way the rules are set up, it treats them individually when they should be treated together; evenly balancing the replicas based on the number of zones available.\n\nWe could make it work by making different zone rules per collection, but that shouldn't be necessary. Rack awareness (which is what we're trying to achieve here), should be collection agnostic and apply against each collection. https://issues.apache.org/jira/browse/SOLR-12511 would help here. ",
            "author": "Jerry Bao",
            "id": "comment-16520669"
        },
        {
            "date": "2018-06-23T00:34:28+0000",
            "content": "for the collection with 4 replicas. In the collection with 4 replicas, you could have 2 replicas on us-east-1a and 2 replicas on us-east-1b. What we really want is 1 on each before having the 4th replica on another zone...\n\nIn reality that is what happens. it starts allotting one at a time and you end up with 1 on each zone and another one ends up in a random zone.\n\nBut the problem is that once you are already in a badly distributed cluster, it won't show any violations.\n\nOnce we are done with SOLR-12511, that ceases to be a problem. your rules will look like \n\n{\"replica\" : \"33%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1a\"}\n{\"replica\" : \"33%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1b\"}\n{\"replica\" : \"33%\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1c\"}\n\n\n\nthis means the effective policy for a shard with 4 replicas is \n\n{\"replica\" : \"1.33\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1a\"}\n{\"replica\" : \"1.33\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1b\"}\n{\"replica\" : \"1.33\", \"shard\" : \"#EACH\", \"sysprop:region\": \"us-east-1c\"}\n\n\n\nThis means that any zone with 0 replicas is a violation.  ",
            "author": "Noble Paul",
            "id": "comment-16520919"
        },
        {
            "date": "2018-06-24T01:12:59+0000",
            "content": "SOLR-12511 should definitely solve the issue I was speaking of .\n\n\nBut the problem is that once you are already in a badly distributed cluster, it won't show any violations.\n\nYep thats the problem I was hoping we can avoid. Balancing needs an in-between (such as either 2-3 replicas each machine) to be distributed, not a maximum/minimum. ",
            "author": "Jerry Bao",
            "id": "comment-16521322"
        },
        {
            "date": "2018-06-26T06:28:37+0000",
            "content": "Commit 1eb2676f27ad4f3913c0f9f43b08e8f3faf889a0 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1eb2676 ]\n\nSOLR-11985: Support percentage values in replica attribute in autoscaling policy\n\nSOLR-12511: Support non integer values for replica in autoscaling policy\n\nSOLR-12517: Support range values for replica in autoscaling policy ",
            "author": "ASF subversion and git services",
            "id": "comment-16523276"
        },
        {
            "date": "2018-06-26T06:30:02+0000",
            "content": "Commit 99e5cf914028ec65381be0e980139f471bd8fb2d in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=99e5cf9 ]\n\nSOLR-11985: Support percentage values in replica attribute in autoscaling policy\n\nSOLR-12511: Support non integer values for replica in autoscaling policy\n\nSOLR-12517: Support range values for replica in autoscaling policy ",
            "author": "ASF subversion and git services",
            "id": "comment-16523279"
        },
        {
            "date": "2018-06-26T12:49:14+0000",
            "content": "Commit 7fb36c59062275b3bcd810c6035c073798124e56 in lucene-solr's branch refs/heads/master from noble\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7fb36c5 ]\n\nSOLR-11985 :  Added a test for pecentage with replica type ",
            "author": "ASF subversion and git services",
            "id": "comment-16523678"
        },
        {
            "date": "2018-06-26T13:13:24+0000",
            "content": "Commit 17d253262cfc1ca24a13618aa1811b21342be267 in lucene-solr's branch refs/heads/branch_7x from noble\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=17d2532 ]\n\nSOLR-11985 :  Added a test for pecentage with replica type ",
            "author": "ASF subversion and git services",
            "id": "comment-16523703"
        },
        {
            "date": "2018-06-27T02:58:25+0000",
            "content": "Commit a929003f5b2792dedef6563203a86b99ac54e5df in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a929003 ]\n\nSOLR-11985: ref guide\n\nSOLR-12511: ref guide\n\nSOLR-12517: ref guide ",
            "author": "ASF subversion and git services",
            "id": "comment-16524499"
        },
        {
            "date": "2018-06-27T03:17:29+0000",
            "content": "Commit e2ac4ab4799322c573a9ada771b2c42ea1eb0b82 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e2ac4ab ]\n\nSOLR-11985: ref guide\n\nSOLR-12511: ref guide\n\nSOLR-12517: ref guide ",
            "author": "ASF subversion and git services",
            "id": "comment-16524514"
        },
        {
            "date": "2018-06-29T04:53:32+0000",
            "content": "Commit 62b9cbc6f9566b4a93462852698fb9d97d80b2fa in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=62b9cbc ]\n\nSOLR-11985: added validation and test ",
            "author": "ASF subversion and git services",
            "id": "comment-16527188"
        },
        {
            "date": "2018-06-29T04:54:48+0000",
            "content": "Commit cb7d6e9e13a4f07b7c01bd929252e80b4a56c388 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cb7d6e9 ]\n\nSOLR-11985: added validation and test ",
            "author": "ASF subversion and git services",
            "id": "comment-16527189"
        },
        {
            "date": "2018-09-25T06:05:36+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n -1 \n  patch  \n   0m  6s \n  SOLR-11985 does not apply to master. Rebase required? Wrong Branch? See https://wiki.apache.org/solr/HowToContribute#Creating_the_patch_file for help.  \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11985 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12928492/SOLR-11985.patch \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/185/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16626812"
        },
        {
            "date": "2018-09-26T02:01:35+0000",
            "content": "Noble Paul, can this issue be resolved?  It has a 7.5 CHANGES entry. ",
            "author": "Steve Rowe",
            "id": "comment-16628159"
        }
    ]
}