{
    "id": "SOLR-3742",
    "title": "group.func and group.facet do not work together",
    "details": {
        "affect_versions": "4.0-ALPHA,                                            4.0-BETA,                                            4.0,                                            4.0.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "When doing a search like \n\nhttp://localhost:8983/solr/select?group=true&group.func=product(fildname1,fieldname2)&group.facet=true&facet=true&facet.field=fieldname3\n\nan error is returned in response where facets are normally returned:\n\njava.lang.ArrayIndexOutOfBoundsException: 0 at org.apache.solr.request.SimpleFacets.getGroupedCounts(SimpleFacets.java:358) ...\n\nThe function used can be any function, not product only. There is no such error if group.facet is omitted or group.field is used instead of group.func. It seems that group.field parameter is expected to be defined when calculating grouped facets.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Ted Strauss",
            "id": "comment-13490209",
            "date": "2012-11-04T15:57:53+0000",
            "content": "Group faceting is implemented in SimpleFacets.java in the method - public int getGroupedFacetQueryCount(Query facetQuery)\n\nTo generate the facets for a field, FieldCache is maintained and iterated over. So for group faceting, a field cache is maintained for group.field. Similarly a function cache needs to be maintained to be iterated over to create facets and facet counts. Presently there is no function cache implemented in Lucene "
        }
    ]
}