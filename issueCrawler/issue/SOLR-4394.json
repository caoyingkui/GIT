{
    "id": "SOLR-4394",
    "title": "Add SSL tests and example configs",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We should provide some examples of running Solr+Jetty with SSL enabled, and have some basic tests using jetty over SSL",
    "attachments": {
        "SOLR-4394.patch": "https://issues.apache.org/jira/secure/attachment/12567488/SOLR-4394.patch",
        "SOLR-4394__phase2.patch": "https://issues.apache.org/jira/secure/attachment/12569972/SOLR-4394__phase2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13568368",
            "date": "2013-02-01T01:51:34+0000",
            "content": "Patch with the basics.  After applying this patch you need to run the following commends to generate the keystore...\n\n\ncd solr/example/etc/ && ./create-solrtest.keystore.sh\n\n\n\n(The keystore file can be committed in SVN, but as a binary file it can't be part of hte patch)\n\nThere is still a nocommit to randomize if/when we use SSL, and also some TODOs \u2013 in particular arround whether we ant to  consider promoting the SSL test logic up to SolrJettyTestBase so it's (randomly) used in more tests, but i wanted to put this out there as a starting point for discussion.   (and because i'm going offline for a week on vacation and i don't wnat to lose track of what i was doing)\n\nIf/when we get basics like this committed, we can then move towards some SSL related cloud tests for SOLR-3854\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13577370",
            "date": "2013-02-13T06:42:26+0000",
            "content": "revised patch...\n\n\n\tfixes nocommit by randomizing when we use SSL (50%)\n\tonly randomize SSL if none of the ssl related properties have already been explicitly set\n\timprove cleanup of properties that get set when randomizing ssl\n\tif the random logic decides to use ssl, then 50% of the time randomly require client auth\n\n\n\nThe client auth changes make this patch dependent on the changes in SOLR-4451 (using SystemDefaultHttpClient so solrj's httpclient pays attention to the javax.* props)\n\nthere is still a TODO about promoting the SSL randomization code up into SolrJettyTestBase, but i think it would be best to commit as is and let it soak for a few days and see if anyone notices problems running tests before randomizing SSL across all jetty related tests. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13577885",
            "date": "2013-02-13T19:58:24+0000",
            "content": "minor improvement based on something that haunted me in my dreams: don't silently ignore the choice to ignore ssl if the keystore doesn't exist \u2013 instead fail the test. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13578021",
            "date": "2013-02-13T23:06:37+0000",
            "content": "Committed revision 1445971.\n\ncurrent state commited to trunk.  my plan is to let this soak for a few days, make sure there no weird problems show up from using/setting these javax.* sys properties on any systems i don't have personal access to.\n\nassuming all goes well, i'll refactor the SSL randomization up to SolrJettyTestBase and merge back to 4x. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13578028",
            "date": "2013-02-13T23:20:13+0000",
            "content": "[trunk commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1445971\n\nSOLR-4394: Tests and example configs demonstrating SSL with both server and client certs "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13581493",
            "date": "2013-02-19T18:16:24+0000",
            "content": "Phase #2: promotes SSL randomization logic up to SolrJettyTestBase so all (non-distributed) jetty tests now randomly use SSL.\n\ni think this is solid, and ready to commit & backport to 4x "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13581723",
            "date": "2013-02-19T22:55:59+0000",
            "content": "phase#2 patch committed to trunk: r1447885\n\nCHANGES.txt updated on trunk to reflect 4x backmerge: r1447952\n\nmerge r1445971 + r1447885 + r1447952 to 4x: r1447956 "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13582828",
            "date": "2013-02-21T02:42:35+0000",
            "content": "[branch_4x commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1447956\n\nSOLR-4394: Tests and example configs demonstrating SSL with both server and client certs (merge r1445971 + r1447885 + r1447952) "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13582843",
            "date": "2013-02-21T02:42:47+0000",
            "content": "[trunk commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1447952\n\nSOLR-4394: move CHANGES entry in prep for backporting "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13582844",
            "date": "2013-02-21T02:42:48+0000",
            "content": "[trunk commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1447885\n\nSOLR-4394: phase 2, promoted SSL randomization logic up to SolrJettyTestBase "
        },
        {
            "author": "Ludovic Boutros",
            "id": "comment-13610991",
            "date": "2013-03-22T17:56:36+0000",
            "content": "Hi Hoss Man,\n\nSince the commit in the branch 4x, I have some trouble to run my unit tests which extends the SolrJettyTestBase.\nThe TEST_KEYSTORE variable initialization is crashing with an NPE in the loop:\n\nExternalPaths.java\nstatic String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File file;\n    try {\n      file = new File(\"solr/conf\");\n      if (!file.exists()) {\n        file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n      }\n    } catch (Exception e) {\n      // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n      file = new File(\".\");\n    }\n    File base = file.getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n\n\nCould you please create a public function getKeyStore that I could bypass like the getSolrHome function ?\n\n\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653728",
            "date": "2013-05-10T10:32:48+0000",
            "content": "Closed after release. "
        }
    ]
}