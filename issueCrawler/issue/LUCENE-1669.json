{
    "id": "LUCENE-1669",
    "title": "MMapDirectory on Windows silently fails to write to a file if also open for read",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/store"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Invalid",
        "status": "Resolved"
    },
    "description": "This is not a normal situation Lucene currently encounters, though we\nare discussing exactly this possibility in LUCENE-1313.\n\nI only hit it in digging down on a test failure in LUCENE-1658:\n\n\n    [junit] Testcase: testIndexAndMerge(org.apache.lucene.index.TestDoc):\tFAILED\n    [junit] junit.framework.AssertionFailedError:\n    [junit] \tat org.apache.lucene.index.FieldsWriter.addRawDocuments(FieldsWriter.java:249)\n    [junit] \tat org.apache.lucene.index.SegmentMerger.mergeFields(SegmentMerger.java:350)\n    [junit] \tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:139)\n    [junit] \tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:116)\n    [junit] \tat org.apache.lucene.index.TestDoc.merge(TestDoc.java:182)\n    [junit] \tat org.apache.lucene.index.TestDoc.testIndexAndMerge(TestDoc.java:117)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase.runTest(LuceneTestCase.java:88)\n\n\n\nThat failure happens on Windows 64bit, if you use MMapDirectory, and\nthe index is on a remote (CIFS) mount.\n\nThis test opens a SegmentReader against doc store files that\nIndexWriter still has open.\n\nI whittled it down to this test showing the root cause:\n\n\npublic void testMMapWriteRead() throws Exception {\n    MMapDirectory dir = new MMapDirectory(new File(\"readwrite\"), null);\n    //NIOFSDirectory dir = new NIOFSDirectory(new File(\"readwrite\"), null);\n    //SimpleFSDirectory dir = new SimpleFSDirectory(new File(\"readwrite\"), null);\n    IndexOutput out = dir.createOutput(\"one\");\n    out.writeLong(17);\n    out.flush();\n    // open the same file we are writing\n    dir.openInput(\"one\").close();\n    // write another long\n    out.writeLong(56);\n    out.close();\n    IndexInput in = dir.openInput(\"one\");\n    assertEquals(17, in.readLong());\n    assertEquals(56, in.readLong());\n    in.close();\n}\n\n\n\nNIOFSDir and SimpleFSDir pass the test fine, which is nice to know\n(for LUCENE-1313).  MMapDir passes fine on a local drive, but fails on\na remote CIFS mount.\n\nI'm not sure what's going on.  It seems like it could be a JRE bug \u2013\nbehavior shouldn't change on local vs remote drive.  I've only tested\nit with java 1.6.0_11.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-05-31T20:39:51+0000",
            "content": "In the mmap bug report (we know it) at http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4724038 one user states:\n\nSubmitted On 13-MAR-2006 \nsebastien.vauclair\nI am using the workaround shown bellow to unmap buffers.\n\nEverything works fine with multiple applications reading from the same growing local file, but there is a problem if the file is accessed using a Windows UNC path like \"//machine/c$/dir/file\": Buffer.get() returns 0 for some bytes near EOF in such files. \n\nThis bug is reproductible even with 127.0.0.1 as the machine.\n\nShould I open a new bug? I was not sure considering the workaround used to unmap has not been officially approved.\n\nNote: adding a 1 second sleep after the buffer has been GC'd fixes the problem - but that's of course not always acceptable.\n\nMaybe this is the cause? ",
            "author": "Uwe Schindler",
            "id": "comment-12714927"
        },
        {
            "date": "2009-06-01T00:41:33+0000",
            "content": "That sounds exactly like what I was hitting \u2013 getting 0 from readLong instead of the expected 56, in the above test.  Except, my test fails even before doing the hack... so it's not the hack that's causing it. ",
            "author": "Michael McCandless",
            "id": "comment-12714947"
        },
        {
            "date": "2013-03-16T19:22:55+0000",
            "content": "SPRING_CLEANING_2013. We can reopen if there's interest. Guessing this has been handled for a long time. ",
            "author": "Erick Erickson",
            "id": "comment-13604395"
        }
    ]
}