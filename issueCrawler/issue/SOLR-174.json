{
    "id": "SOLR-174",
    "title": "Add multi-param support to qf,pf,bf,bq",
    "details": {
        "affect_versions": "1.2",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "A quick patch that adds multi-params support for the listed dismax params.\n\nI opened an issue to get some feedback on the bq situation.  I left the subquery-extraction logic as in, applying it to each specified boost query.  I'm not sure this is still valid given coordFactor and such.",
    "attachments": {
        "multiparam.patch": "https://issues.apache.org/jira/secure/attachment/12352191/multiparam.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mike Klaas",
            "id": "comment-12476464",
            "date": "2007-02-28T00:24:07+0000",
            "content": "(also includes a two-line change to re-write queries prior to highlighting) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12476526",
            "date": "2007-02-28T05:53:46+0000",
            "content": "Mike: havne't looked into the patch, but what i was thinking would make sense for the bq issue back when i last thought about this, was to say:\n\n  if: more then one bq param is specified:\n     then: \n       foreach bq param value:\n         trim the value\n         if: the value is non blank\n            then: parse value as a query and add to the main query\n  else:\n     legacy behavior\n\n...that should be entirely backwards compatible, and gives people who really need a boolean query with a boost of 1 a way to force it (by adding a <null name=\"bq\" /> to their appended params)\n\n...we would just have to make sure it was clearly documented\n\nthoughts? "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12477060",
            "date": "2007-03-01T19:26:44+0000",
            "content": "That's fine with me.  I suspect too that anyone who knows lucene well enough and is trying to get such a precise query structure would feel comfortable tweaking dismax to create their own reqeust handler.\n\nI'll update the patch in a few minutes. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12477061",
            "date": "2007-03-01T19:27:54+0000",
            "content": "updated patch as per Hoss' comments.  This could use a once-over before committing. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12477820",
            "date": "2007-03-04T17:30:40+0000",
            "content": "Mike: patch reads nice and clean to me (didn't try applying though)\n\ntwo nits: \n\n1) it would be good to have a test of the case where a boolean with the default boost is specified in one bq, and a seperate blank bq is specified to force the first BQ to be treated as a single query\n\n2) let's assign  params.getParams(DMP.BQ) to a temp variable so we don't have to call it twice in three lines. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12478145",
            "date": "2007-03-05T20:22:44+0000",
            "content": "committed in r514851 "
        }
    ]
}