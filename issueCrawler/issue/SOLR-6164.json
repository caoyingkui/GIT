{
    "id": "SOLR-6164",
    "title": "Copy Fields Schema additions are not distributed to other nodes",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I took a closer look at the tests added in SOLR-6145, and the copy fields aren't being distributed \u2013 it just looks that way b/c we are adding the same copy field directive multiple times to random servers and by chance, they'll be added to all the servers.",
    "attachments": {
        "SOLR-6164.patch": "https://issues.apache.org/jira/secure/attachment/12650133/SOLR-6164.patch",
        "SOLR-6164v2.patch": "https://issues.apache.org/jira/secure/attachment/12650143/SOLR-6164v2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Gregory Chanan",
            "id": "comment-14029754",
            "date": "2014-06-12T20:29:12+0000",
            "content": "Here's a patch.  It does the following:\n\n\n\tThe ZkIndexSchemaReader now adds the copy fields to the managed schema from what is in Zk.  This is done by clearing the copy field info and recreating it.  That seemed more straightforward than trying to maintain the existing copy fields and diffing what is in Zk.\n\tImproves the existing tests in a few ways:\n\tInstead of a long sleep and then checking, we loop with short sleeps and exit as soon as we see success.\n\tCombines the put (add field), post (add field) and copy field test cases into one.  This ensures the commands \"play nicely\" together and reduces the amount of code / execution time.\n\tAdds more testing to the copy fields commands.  Randomly decide if the copy field source and dest will be an existing field, a new field, or a dynamic field.\n\n "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-14029815",
            "date": "2014-06-12T21:11:03+0000",
            "content": "Previous patch used its own Random rather than the RandomizedRunner's version. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14033988",
            "date": "2014-06-17T16:26:05+0000",
            "content": "+1, this looks great Gregory Chanan - the code to update copyfields just wasn't there at all previously.  I want to get this into the 4.9 release - I'll commit shortly.\n\nSeparately, ManagedIndexSchema.shallowCopy() is geared exclusively toward what addFields() needs - other modifications aren't dealt with.  I think it should be reworked to just shallowly copy everything, and then the pieces that need to be can be handled in the reloading code.  Not sure how to detect that reloading of any piece is required ... maybe some form of checksum over the sorted serialized pieces?  I guess just always reloading - as is currently done for both fields and copyFields now too - is at least correct, if not the most performant solution. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-14034130",
            "date": "2014-06-17T18:00:02+0000",
            "content": "Thanks for taking a look, Steve Rowe.\n\nI guess just always reloading - as is currently done for both fields and copyFields now too - is at least correct, if not the most performant solution.\n\nThat was my thought for this patch \u2013 get something in that works and we can refine later.  I think that the idea of a checksum over the serialized pieces is a good one, though of course there's a question of the granularity.  Here's a complementary optimization: let's say you have a checksum over all the copyFields and a single copy field is added.  As things are now, you'd have to recreate all the copy fields just to add a single one, though that may at least happen rarely.  It may make sense to put some unique identifier on each copyfield, so you can easily detect we already have that, so can just skip adding it.    It also makes implementing deleting fields/copyFields easier if we ever want to implement that.  Although this depends on what we decide in SOLR-6155 I guess; if only one copyfield is allowed, the src/dst becomes a unique identifier. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14034493",
            "date": "2014-06-17T22:23:46+0000",
            "content": "Gregory's patch with a CHANGES.txt entry; also cleaned up the test a little.\n\nCommitting shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14034495",
            "date": "2014-06-17T22:24:48+0000",
            "content": "Commit 1603300 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1603300 ]\n\nSOLR-6164: Copy Fields Schema additions are not distributed to other nodes "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14034502",
            "date": "2014-06-17T22:29:15+0000",
            "content": "Commit 1603301 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1603301 ]\n\nSOLR-6164: add eol-style property to TestCloudManagedSchemaConcurrent.java "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14034528",
            "date": "2014-06-17T22:47:08+0000",
            "content": "Commit 1603303 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1603303 ]\n\nSOLR-6164: Copy Fields Schema additions are not distributed to other nodes (merged trunk r1603300 and r1603301) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14034540",
            "date": "2014-06-17T22:53:22+0000",
            "content": "Commit 1603308 from Steve Rowe in branch 'dev/branches/lucene_solr_4_9'\n[ https://svn.apache.org/r1603308 ]\n\nSOLR-6164: Copy Fields Schema additions are not distributed to other nodes (merged trunk r1603300 and r1603301) "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14034542",
            "date": "2014-06-17T22:53:37+0000",
            "content": "Comitted to trunk, branch_4x and lucene_solr_4_9.\n\nThanks Gregory! "
        }
    ]
}