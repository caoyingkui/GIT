{
    "id": "SOLR-7254",
    "title": "NullPointerException thrown in the QueryComponent",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.1"
        ],
        "affect_versions": "4.10.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "In case of a distributed search, if we pass invalid query parameters (e.g. negative start value), then Solr returns internal server error (HTTP 500 response) due to following NullPointerException,\n\n{\n  \"responseHeader\":{\n    \"status\":500,\n    \"QTime\":6,\n    \"params\":{\n      \"indent\":\"true\",\n      \"start\":\"-1\",\n      \"q\":\":\",\n      \"wt\":\"json\"}},\n  \"error\":{\n    \"trace\":\"java.lang.NullPointerException\\n\\tat org.apache.solr.handler.component.QueryComponent.mergeIds(QueryComponent.java:1031)\\n\\tat org.apache.solr.handler.component.QueryComponent.handleRegularResponses(QueryComponent.java:715)\\n\\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:694)\\n\\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:324)\\n\\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\\n\\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1984)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:818)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:422)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:211)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\\n\\tat org.apache.solr.servlet.SolrHadoopAuthenticationFilter$2.doFilter(SolrHadoopAuthenticationFilter.java:272)\\n\\tat org.apache.hadoop.security.authentication.server.AuthenticationFilter.doFilter(AuthenticationFilter.java:592)\\n\\tat org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationFilter.doFilter(DelegationTokenAuthenticationFilter.java:277)\\n\\tat org.apache.hadoop.security.authentication.server.AuthenticationFilter.doFilter(AuthenticationFilter.java:555)\\n\\tat org.apache.solr.servlet.SolrHadoopAuthenticationFilter.doFilter(SolrHadoopAuthenticationFilter.java:277)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\\n\\tat org.apache.solr.servlet.HostnameFilter.doFilter(HostnameFilter.java:86)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\\n\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:861)\\n\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:606)\\n\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\",\n    \"code\":500}}\n\nThe root cause of this error is that in case of a distributed query, input validation is missing.\n\n(Non distributed version)\nhttps://github.com/apache/lucene-solr/blob/817303840fce547a1557e330e93e5a8ac0618f34/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java#L284\n\n(Distributed version)\nhttps://github.com/apache/lucene-solr/blob/817303840fce547a1557e330e93e5a8ac0618f34/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java#L691",
    "attachments": {
        "SOLR-7254.patch": "https://issues.apache.org/jira/secure/attachment/12705595/SOLR-7254.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-19T14:02:47+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Here's a patch to start things off. I haven't tested this as yet or added tests for this as yet. Hrishikesh Gadre, if you can knock up some tests for this, that would be great, else I will probably get to it some time. You can start at TestDistributedSearch. ",
            "id": "comment-14369342"
        },
        {
            "date": "2015-03-19T17:34:15+0000",
            "author": "Hrishikesh Gadre",
            "content": "Ramkumar Aiyengar Yes I am working on the test. I will update ASAP ",
            "id": "comment-14369765"
        },
        {
            "date": "2015-03-19T21:24:10+0000",
            "author": "Hrishikesh Gadre",
            "content": "Added a unit test for this scenario. (note I have commented out the test for rows parameter since it is not returning expected error).\n\nAlso since this error is caused by bad parameters (rather than query syntax error), I think we should be throwing SolrException (with errorCode = BAD_REQUEST). Also is QParser the correct place for these validations or should it be in QueryComponent#prepare(...) method ? ",
            "id": "comment-14370143"
        },
        {
            "date": "2015-03-19T21:30:35+0000",
            "author": "Yonik Seeley",
            "content": "Also is QParser the correct place for these validations or should it be in QueryComponent#prepare(...) method ?\n\n+1, Query component feels like the more natural place. ",
            "id": "comment-14370156"
        },
        {
            "date": "2015-03-19T21:37:08+0000",
            "author": "Hrishikesh Gadre",
            "content": "Ramkumar Aiyengar Yonik Seeley There few additional validations in QueryComponent#process method. e.g.\n\nhttps://github.com/apache/lucene-solr/blob/trunk/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java#L314\n\nThis validation does not get invoked in case of distributed search. Is this by design? If not, may be this should also go in the common validation code... ",
            "id": "comment-14370172"
        },
        {
            "date": "2015-03-19T21:53:39+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Actually I am not sure myself if QParser should be constructing the SortSpec object from request params \u2013 may be that should as such move elsewhere. But it makes sense to validate this at the time the object is created from URL params (which is where my changes currently are) than after the object is created? ",
            "id": "comment-14370199"
        },
        {
            "date": "2015-03-23T20:24:03+0000",
            "author": "Hrishikesh Gadre",
            "content": "Following changes made to the patch\n\n>> Removed redundant validation check in QueryComponent#process\n>> Fixed a unit test failure.\n\nRamkumar Aiyengar Yonik Seeley Should we commit this change and tackle the (possible) refactoring (from QueryParser to QueryComponent) as part of a different JIRA? ",
            "id": "comment-14376565"
        },
        {
            "date": "2015-03-23T21:17:23+0000",
            "author": "Yonik Seeley",
            "content": "The current patch causes TestGroupingSearch to fail.\nI haven't had a chance to look into whether this is just a bad test, or if grouping search actually supports \"-1\" as a valid value. ",
            "id": "comment-14376654"
        },
        {
            "date": "2015-03-23T21:23:19+0000",
            "author": "Yonik Seeley",
            "content": "OK, I confirmed through experimentation that grouped search does support \"-1\" to mean \"all groups\".  This means that the parsing of SortSpec does not have enough context to throw an exception, and it needs to be in QueryComponent (or some place that does have that context).\n\nFWIW, I've planned to support \"rows=-1\" to mean \"all rows\" for normal queries as well... just never got around to it. ",
            "id": "comment-14376673"
        },
        {
            "date": "2015-03-23T22:27:16+0000",
            "author": "Hrishikesh Gadre",
            "content": "Yonik Seeley Yes you are right. As per the SortSpec documentation, rows = -1 is acceptable (Check SortSpec#getCount() method docs). Following changes are made to the patch,\n>> Removed check for rows = -1 along with the unit test\n>> Refactored the validation code to QueryComponent#prepare method (instead of QParser).\n\nPlease take a look. ",
            "id": "comment-14376781"
        },
        {
            "date": "2015-03-23T22:47:41+0000",
            "author": "Yonik Seeley",
            "content": "Seems like the last patch is missing the tests that were in the previous patch? ",
            "id": "comment-14376831"
        },
        {
            "date": "2015-03-23T23:30:17+0000",
            "author": "Hrishikesh Gadre",
            "content": "Yonik Seeley OK. I updated the patch to check for rows = -1 in case of non-groupings search ",
            "id": "comment-14376905"
        },
        {
            "date": "2015-03-23T23:44:02+0000",
            "author": "Yonik Seeley",
            "content": "As per the SortSpec documentation, rows = -1 is acceptable\n\nLooks like rows=-1 for a non grouped search just acts like rows=0 right now.\nI guess we can leave that alone though, and just tackle the start=-1 issue. ",
            "id": "comment-14376927"
        },
        {
            "date": "2015-03-23T23:58:32+0000",
            "author": "Yonik Seeley",
            "content": "I updated the patch to check for rows = -1 in case of non-groupings search\n\nCrossed comments (I didn't refresh JIRA before I posted).  This should be fine too. ",
            "id": "comment-14376945"
        },
        {
            "date": "2015-03-24T20:05:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1668976 from Yonik Seeley in branch 'dev/trunk'\n[ https://svn.apache.org/r1668976 ]\n\nSOLR-7254: invalid start/rows should throw 400 rather than 500 error code ",
            "id": "comment-14378480"
        },
        {
            "date": "2015-03-24T20:08:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1668978 from Yonik Seeley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1668978 ]\n\nSOLR-7254: invalid start/rows should throw 400 rather than 500 error code ",
            "id": "comment-14378486"
        },
        {
            "date": "2015-03-24T22:03:29+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Thanks for getting to this Yonik.. ",
            "id": "comment-14378747"
        },
        {
            "date": "2015-04-15T00:30:47+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495361"
        }
    ]
}