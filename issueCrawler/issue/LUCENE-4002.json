{
    "id": "LUCENE-4002",
    "title": "Running tests with internal JVM diagnostic options (such as -verbose:*) will fail.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/test"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Passing JVM options that dump something to output streams before they are intercepted (-verbose:gc, -verbose:class) will break the communication\nbetween the runner and the master.\n\nCurrently junit4 communicates with forked processes via stdout or stderr (depending on the JVM and which stream the JVM uses to dump crash infos). This is done for efficiency since it's a natural blocking pipe between the two processes. I forgot that the jvm can:\n\n1) use process streams to dump verbose logs (gc, classes, jit),\n2) use process streams directly, bypassing System.* overrides, to dump warnings.\n\nThis can be solved my moving the communication layer to another pipe or to a socket. I'll play with the options.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-05-02T10:46:35+0000",
            "content": "Fixed by randomizedtesting 1.4.0 ",
            "author": "Dawid Weiss",
            "id": "comment-13266483"
        }
    ]
}