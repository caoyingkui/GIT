{
    "id": "SOLR-7003",
    "title": "Remove waitFlush boolean from SolrClients",
    "details": {
        "components": [
            "clients - java"
        ],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "The waitFlush boolean for commits isn't actually used. But for some reason, it was never marked deprecated in SolrServer (now called SolrClient). We should nuke it.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-20T16:59:13+0000",
            "author": "Hoss Man",
            "content": "since we never marked it deprecated in a 4.x release, i'm -0 on yanking it completley from SolrServer in 5.0 \u2013 that will cause a lot of confusion for people who get compilation errors with no idea what to use instead.\n\nHowever...\n\nsince we already marked SolrServer deprecated in 5.0, and made it subclass the new SolrClient, let's remove all waitFlush related methods from SolrClient, and push them down into the SolrServer subclasses with an additional deprecation/unused warning ",
            "id": "comment-14284010"
        },
        {
            "date": "2015-01-20T21:28:19+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Hoss, I started with your suggestion but deprecating or removing the waitFlush method are both very trappy because of method signatures like the following:\n\npublic UpdateResponse commit(boolean waitFlush, boolean waitSearcher, boolean softCommit) throws SolrServerException, IOException;\n\npublic UpdateResponse commit(boolean waitFlush, boolean waitSearcher) throws SolrServerException, IOException;\n\n\n\nIf I move the deprecated methods to SolrServer and remove waitFlush arguments from SolrClient then we basically overload the commit(boolean waitSearcher, boolean softCommit) method in SolrServer as commit(boolean waitFlush, boolean waitSearcher) which is completely not what the user needs. Similarly, if we remove the waitFlush parameter outright from SolrClient then the user will end up calling a softCommit when he intended to call a hard commit with waitSearcher=true.\n\nAbstractUpdateRequest has similar problems.\n\nAs a side note, we don't have a convenience method with openSearcher in SolrClient/SolrServer although we have one in AbstractUpdateRequest. ",
            "id": "comment-14284447"
        }
    ]
}