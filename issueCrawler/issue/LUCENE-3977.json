{
    "id": "LUCENE-3977",
    "title": "generated/duplicated javadocs are wasteful and bloat the release",
    "details": {
        "labels": "",
        "priority": "Blocker",
        "components": [
            "general/javadocs"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Some stats for the generated javadocs of 3.6:\n\n\t9,146 files\n\t161,872 KB uncompressed\n\t25MB compressed (this is responsible for nearly half of our binary release)\n\n\n\nThe fact we intentionally double our javadocs size with the 'javadocs-all' thing\nis truly wasteful and compression doesn't help at all. Just testing, i nuked 'all'\nand found:\n\n\t4,944 files\n\t81,084 KB uncompressed\n\t12.8MB compressed\n\n\n\nWe need to clean this up for 4.0. We only need to ship javadocs 'one way'.",
    "attachments": {
        "LUCENE-3977.patch": "https://issues.apache.org/jira/secure/attachment/12523497/LUCENE-3977.patch",
        "LUCENE-3977-triplication.patch": "https://issues.apache.org/jira/secure/attachment/12523077/LUCENE-3977-triplication.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-12T16:24:44+0000",
            "content": "We can save 10MB with this patch, which nukes the 'index'.\nI guarantee you nobody will miss it. Just click this thing and see how \nuseless it is (since its every method etc in all of lucene).\n\n\nIndex: common-build.xml\n===================================================================\n--- common-build.xml\t(revision 1310449)\n+++ common-build.xml\t(working copy)\n@@ -996,6 +996,7 @@\n           encoding=\"${build.encoding}\"\n           charset=\"${javadoc.charset}\"\n           docencoding=\"${javadoc.charset}\"\n+          noindex=\"true\"\n           author=\"true\"\n           version=\"true\"\n           use=\"true\"\n\n ",
            "author": "Robert Muir",
            "id": "comment-13252539"
        },
        {
            "date": "2012-04-12T22:00:54+0000",
            "content": "Besides the trivial patch above (which I think we should do), looking at the big picture\nwith the 2x duplication, I really think we should totally nuke these javadocs-all tasks.\n\nReally if we have different modules like contrib-analyzers, why can't they link to\nthe things they depend on (e.g. lucene-core) just like the solr javadocs do?\n\nThis is just a matter of fixing the build system and then working towards making\nour downloads reasonable right? ",
            "author": "Robert Muir",
            "id": "comment-13252897"
        },
        {
            "date": "2012-04-12T22:49:25+0000",
            "content": "Really if we have different modules like contrib-analyzers, why can't they link to the things they depend on (e.g. lucene-core) just like the solr javadocs do?\n\ni think the original argument in favor of having both styles was:\n\n\n\tthe all version makes it easy to see (in the left pane) all the classes that are available when people are working with the entire code base\n\tthe individual module versions, even when cross linked with eachother, make it easy to see exactly what is included in a single module (via the left pane)\n\n\n\nat this point in my life, i don't really have an opinion, as long as we include at least one copy in the bin release.\n\nWe can save 10MB with this patch, which nukes the 'index\n\noh god yes, i didn't even realize we were building that useless pile of crap ",
            "author": "Hoss Man",
            "id": "comment-13252944"
        },
        {
            "date": "2012-04-12T23:38:35+0000",
            "content": "\nat this point in my life, i don't really have an opinion, as long as we include at least one copy in the bin release\n\nWell I was thinking, the javadocs-all really tries to be what the 'individual modules' version is! It tries (and fails) to separate packages according to contrib modules that \"own\" them, but this is all screwed up, sure o.a.l.index.pruning is marked underneath the pruning module but the PruningReader is actually in o.a.l.index.\n\nThere are many other examples. So it seems to me that if they individual modules javadocs actually linked to each other correctly, then to the user it really gives us that same result, but without the duplication. Hell, if that still isn't good enough we could figure out some way to make 'massive useless class list' that links to all the correct places but I think thats not useful (thus, the crazy logic in build.xml to try to separate contribs into packages).\n\n\noh god yes, i didn't even realize we were building that useless pile of crap\n\nOk, I don't think this one is controversial: its an easy win, I'll commit it tonight or tomorrow (even though i still want to nuke the other 80MB from the duplication issue... thats harder)\n ",
            "author": "Robert Muir",
            "id": "comment-13252972"
        },
        {
            "date": "2012-04-18T05:07:11+0000",
            "content": "OK this issue is way worse than i thought originally, in the binary release,\nwe actually have 3x duplication for each module, lets take 'grouping as an example'\n\n\n\tthe grouping javadocs in docs/api/all\n\tthe grouping javadocs in docs/api/grouping\n\tthe lucene-grouping-javadocs.jar\n\n\n\nThis seems totally unnecessary and overkill to me. I dont think we need to include\nthe lucene-grouping-javadocs.jar in the binary packaging, since we already provide\nit unzipped: it only needs to be in the maven artifacts. Providing it both unzipped\nand zipped bloats the release.\n\nAs far as the javadocs-all stuff... I'm working on a patch  ",
            "author": "Robert Muir",
            "id": "comment-13256207"
        },
        {
            "date": "2012-04-18T05:21:13+0000",
            "content": "patch to remove the triplication (so its only duplication) by excluding these from the binary release (they only go into maven).\n\nBefore: \nrw-rw-r-  1 rmuir rmuir 82046115 2012-04-18 01:10 lucene-4.0-SNAPSHOT.zip\n\nAfter:\nrw-rw-r-  1 rmuir rmuir 69982949 2012-04-18 01:15 lucene-4.0-SNAPSHOT.zip ",
            "author": "Robert Muir",
            "id": "comment-13256209"
        },
        {
            "date": "2012-04-20T13:58:41+0000",
            "content": "here's a prototype (not ready for committing yet!)\n\n.zip binary release is reduced 12MB again:\nrw-rw-r-  1 rmuir rmuir 56883313 2012-04-20 09:53 lucene-4.0.0.zip\n\n.tgz (for reference):\nrw-rw-r-  1 rmuir rmuir 47958933 2012-04-20 09:53 lucene-4.0.0.tgz\n\nbasically all i did here is the core/ dependency: but i can easily fix the others, and then solr.\n\nthe idea is to remove javadocs-all, instead when you are in queries/ javadocs and click IndexReader it jumps you to core/.\n\nsolr would keep its 'define-javadoc-url' stuff, except instead of it pointing to whatever/whatever/api/all/ it would just point to whatever/whatever/api and be used as the prefix. ",
            "author": "Robert Muir",
            "id": "comment-13258263"
        },
        {
            "date": "2012-04-20T14:26:16+0000",
            "content": "updated patch, that generates relative links (i wrongly had linkOffline=true set) ",
            "author": "Robert Muir",
            "id": "comment-13258273"
        },
        {
            "date": "2012-04-20T14:37:38+0000",
            "content": "sorry, i had attached the wrong patch. ",
            "author": "Robert Muir",
            "id": "comment-13258280"
        },
        {
            "date": "2012-04-20T15:53:13+0000",
            "content": "Updated patch that improves our docs/api/index.html (the javadocs-index.html task), to also include the project description (from the ant file). \n\nI also tried to clean up these descriptions and make them useful. I think the index.html looks much more useful now, and this is really a possible way we can nuke the manually-maintained forrest index under src/site in the future (but not here). ",
            "author": "Robert Muir",
            "id": "comment-13258333"
        },
        {
            "date": "2012-04-20T16:13:55+0000",
            "content": "Personally I'd like them not to be in the binary release at all. I like when proj have separate d/l for Javadocs. Saves me from having to delete them. Or d/l them.  ",
            "author": "DM Smith",
            "id": "comment-13258348"
        },
        {
            "date": "2012-04-20T16:18:43+0000",
            "content": "DM: well thats always an option, however I think on this issue the goal is\nsimply to reduce from 3 copies (binary release) or 2 copies (website) of javadocs to only 1 copy.\n\nWe can then open up a followup issue if we really want to exclude them from the binary release,\nhowever as our primary (basically only) form of documentation, I'm not sure about that one...\n\nBut this issue won't make it any worse, only better. ",
            "author": "Robert Muir",
            "id": "comment-13258352"
        },
        {
            "date": "2012-04-20T17:09:25+0000",
            "content": "If I am not interested in any documentation, I prefer to download the jar files directly from http://repo1.maven.org! If I want a complete distro, I download the binary one and expect javadocs to be there. [move this comment to the not-yet-created new issue] ",
            "author": "Uwe Schindler",
            "id": "comment-13258380"
        },
        {
            "date": "2012-04-20T18:19:32+0000",
            "content": "It's funny \u2013 I feel the same way Uwe does but at the same time I absolutely never looked into off-line javadocs that I downloaded with distributions of open source projects. It's usually faster to just find these online. ",
            "author": "Dawid Weiss",
            "id": "comment-13258443"
        },
        {
            "date": "2012-04-20T19:11:12+0000",
            "content": "latest patch, found a few unrelated things:\n\n\tjoin module links to package-private classes\n\tMorfologikFilterFactory is in a solr/contrib, but the jar is added to lucene-libs (into the war) versus being plugged\n\n\n\nLucene parts here should work. Solr is not ready yet, need to define a macro as before so these contribs/test-framework/etc can add their own links. ",
            "author": "Robert Muir",
            "id": "comment-13258480"
        },
        {
            "date": "2012-04-20T21:01:37+0000",
            "content": "patch with solr->lucene links working too.\n\nI think this is ready to commit. ",
            "author": "Robert Muir",
            "id": "comment-13258587"
        },
        {
            "date": "2012-04-20T21:22:56+0000",
            "content": "+1 ",
            "author": "Uwe Schindler",
            "id": "comment-13258596"
        },
        {
            "date": "2012-04-20T21:46:29+0000",
            "content": "+1 Thanks for taking on these thankless tasks! ",
            "author": "Ryan McKinley",
            "id": "comment-13258608"
        }
    ]
}