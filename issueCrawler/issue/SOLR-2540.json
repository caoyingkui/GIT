{
    "id": "SOLR-2540",
    "title": "CommitWithin as an Update Request parameter",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.4",
            "4.0-ALPHA"
        ],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "It would be useful to support commitWithin HTTP GET request param on all UpdateRequestHandlers.\nThat way, you could set commitWithin on the request (for XML, JSON, CSV, Binary and Extracting handlers) with this syntax:\n\n\n  curl http://localhost:8983/solr/update/extract?literal.id=123&commitWithin=10000\n       -H \"Content-Type: application/pdf\" --data-binary @file.pdf\n\n\n\nPS: The JsonUpdateRequestHandler and BinaryUpdateRequestHandler already support this syntax.",
    "attachments": {
        "SOLR-2540-fix-tests.patch": "https://issues.apache.org/jira/secure/attachment/12494624/SOLR-2540-fix-tests.patch",
        "SOLR-2540-branch_3x-fix-tests.patch": "https://issues.apache.org/jira/secure/attachment/12494629/SOLR-2540-branch_3x-fix-tests.patch",
        "SOLR-2540.patch": "https://issues.apache.org/jira/secure/attachment/12480275/SOLR-2540.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13038648",
            "date": "2011-05-24T16:29:37+0000",
            "content": "First patch which solves this for XML, CSV, Extracting. No new tests added so far. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13083020",
            "date": "2011-08-11T09:05:41+0000",
            "content": "Anyone have comments to this? I'll try to add some tests and prepare for commit. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13097105",
            "date": "2011-09-05T10:15:48+0000",
            "content": "Updated patch with more tests. Will commit in a day or two "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13104790",
            "date": "2011-09-14T19:05:57+0000",
            "content": "the new ExtractingRequestHandlerTest.testCommitWithin method fails fairly reliable on multiple machines.\n\nNoted by sarowe on the dev list...\n\n\nSubject: Trunk test failure: ExtractingRequestHandlerTest.testCommitWithin() [was: [JENKINS-MAVEN]\n    Lucene-Solr-Maven-trunk #239: POMs out of sync]\n\nThis is 100% reproducible on my local machine (run from solr/contrib/extraction/):\n\nant test -Dtestcase=ExtractingRequestHandlerTest -Dtestmethod=testCommitWithin\n-Dtests.seed=-2b35f16e02bddd0d:5c36eb67e44fc16d:-54d0d485d6a45315\n\n\n\n...i can reproduce this failure everytime i try (regardless of seed) "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13105148",
            "date": "2011-09-15T06:41:14+0000",
            "content": "Tried reproducing on my Mac, with Java 1.6.0_26 and ant 1.8.2, but no success.\nAny clue on what environment I need to test at, or what in the test case is the problem? "
        },
        {
            "author": "Sami Siren",
            "id": "comment-13105247",
            "date": "2011-09-15T09:51:41+0000",
            "content": "I get a test failure on Linux/Fedora 14\n\njava -version says:\n\n\njava version \"1.6.0_24\"\nJava(TM) SE Runtime Environment (build 1.6.0_24-b07)\nJava HotSpot(TM) 64-Bit Server VM (build 19.1-b02, mixed mode)\n\n\n\nConsole output:\n\n\n    [junit] 15/09/2011 11:43:16 \u0635 org.apache.solr.SolrTestCaseJ4 assertQ\n    [junit] SEVERE: REQUEST FAILED: xpath=//*[@numFound='1']\n    [junit] \txml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">0</int></lst><result name=\"response\" numFound=\"0\" start=\"0\"></result>\n    [junit] </response>\n    [junit] \n    [junit] \trequest was:start=0&q=id:one&qt=standard&rows=20&version=2.2\n    [junit] 15/09/2011 11:43:16 \u0635 org.apache.solr.common.SolrException log\n    [junit] SEVERE: REQUEST FAILED: start=0&q=id:one&qt=standard&rows=20&version=2.2:java.lang.RuntimeException: REQUEST FAILED: xpath=//*[@numFound='1']\n    [junit] \txml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">0</int></lst><result name=\"response\" numFound=\"0\" start=\"0\"></result>\n    [junit] </response>\n    [junit] \n    [junit] \trequest was:start=0&q=id:one&qt=standard&rows=20&version=2.2\n    [junit] \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:389)\n    [junit] \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:363)\n    [junit] \tat org.apache.solr.handler.extraction.ExtractingRequestHandlerTest.testCommitWithin(ExtractingRequestHandlerTest.java:306)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [junit] \tat java.lang.reflect.Method.invoke(Method.java:597)\n    [junit] \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit] \tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit] \tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit] \tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit] \tat org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit] \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:148)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n    [junit] \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n    [junit] \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n    [junit] \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n    [junit] \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n    [junit] \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit] \tat org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit] \tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:768)\n    [junit] \n    [junit] NOTE: reproduce with: ant test -Dtestcase=ExtractingRequestHandlerTest -Dtestmethod=testCommitWithin -Dtests.seed=3746e79385edf73e:c0f1416de85bd9:2704bb4f54230c5d\n    [junit] 15/09/2011 11:43:17 \u0635 org.apache.solr.common.SolrException log\n    [junit] SEVERE: auto commit error...:java.lang.RuntimeException: org.apache.lucene.util.ThreadInterruptedException: java.lang.InterruptedException: sleep interrupted\n    [junit] \tat org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1138)\n    [junit] \tat org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:998)\n    [junit] \tat org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.java:339)\n    [junit] \tat org.apache.solr.update.CommitTracker.run(CommitTracker.java:184)\n    [junit] \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n    [junit] \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    [junit] \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    [junit] \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)\n    [junit] \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:206)\n    [junit] \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    [junit] \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    [junit] \tat java.lang.Thread.run(Thread.java:662)\n    [junit] Caused by: org.apache.lucene.util.ThreadInterruptedException: java.lang.InterruptedException: sleep interrupted\n    [junit] \tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:644)\n    [junit] \tat org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:84)\n    [junit] \tat org.apache.lucene.index.IndexReader.open(IndexReader.java:496)\n    [junit] \tat org.apache.lucene.index.IndexReader.open(IndexReader.java:455)\n    [junit] \tat org.apache.solr.core.StandardIndexReaderFactory.newReader(StandardIndexReaderFactory.java:38)\n    [junit] \tat org.apache.solr.search.SolrIndexSearcher.<init>(SolrIndexSearcher.java:144)\n    [junit] \tat org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1128)\n    [junit] \t... 11 more\n    [junit] Caused by: java.lang.InterruptedException: sleep interrupted\n    [junit] \tat java.lang.Thread.sleep(Native Method)\n    [junit] \tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:642)\n    [junit] \t... 17 more\n    [junit] \n    [junit] NOTE: test params are: codec=RandomCodecProvider: {timestamp=Pulsing(freqCutoff=13 minBlockSize=93 maxBlockSize=241), id=Memory, extractedContent=MockSep, stream_source_info=MockDocValuesCodec, stream_size=MockVariableIntBlock(baseBlockSize=27), stream_name=MockFixedIntBlock(blockSize=170), Content-Encoding=Memory, multiDefault=MockRandom, Content-Type=MockVariableIntBlock(baseBlockSize=27), intDefault=MockDocValuesCodec, resourceName=MockSep}, sim=RandomSimilarityProvider(queryNorm=true,coord=false): {}, locale=ar, timezone=Europe/Skopje\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [ExtractingRequestHandlerTest]\n    [junit] NOTE: Linux 2.6.35.13-92.fc14.x86_64 amd64/Sun Microsystems Inc. 1.6.0_24 (64-bit)/cpus=4,threads=1,free=96695616,total=125698048\n    [junit] ------------- ---------------- ---------------\n    [junit] Testcase: testCommitWithin(org.apache.solr.handler.extraction.ExtractingRequestHandlerTest):\tCaused an ERROR\n    [junit] Exception during query\n    [junit] java.lang.RuntimeException: Exception during query\n    [junit] \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:396)\n    [junit] \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:363)\n    [junit] \tat org.apache.solr.handler.extraction.ExtractingRequestHandlerTest.testCommitWithin(ExtractingRequestHandlerTest.java:306)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:148)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n    [junit] Caused by: java.lang.RuntimeException: REQUEST FAILED: xpath=//*[@numFound='1']\n    [junit] \txml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">0</int></lst><result name=\"response\" numFound=\"0\" start=\"0\"></result>\n    [junit] </response>\n    [junit] \n    [junit] \trequest was:start=0&q=id:one&qt=standard&rows=20&version=2.2\n    [junit] \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:389)\n    [junit] \n    [junit] \n    [junit] Test org.apache.solr.handler.extraction.ExtractingRequestHandlerTest FAILED\n\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13105387",
            "date": "2011-09-15T14:28:00+0000",
            "content": "Patch which fixes the commitWithin tests for Extracting and CSV handlers. The problem was that the test timed out on slow servers. We now only test that commiWtihin is set on AddUpdateCommand instead of actually indexing a document.\n\nThis patch must be applied AFTER SOLR-2540.patch "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13105403",
            "date": "2011-09-15T14:53:08+0000",
            "content": "The same patch for branch_3x "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13105429",
            "date": "2011-09-15T15:31:32+0000",
            "content": "Checked in fixes for trunk (r1171138) and 3x (r1171139) "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106194",
            "date": "2011-09-16T14:48:49+0000",
            "content": "bulk close for 3.4 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13106512",
            "date": "2011-09-16T15:17:24+0000",
            "content": "Hi Jan,\n\nBoth the trunk and the branch_3x Jenkins Maven builds failed last night because the Maven configuration for the solr/contrib/extraction/ module does not depend on solr-core test code, and you just introduced a new solr-core test class BufferingRequestProcessor, as well as test code in Solr Cell that uses this class.  \n\n(BTW, none of the other Solr modules depend on Solr test code in the Maven configuration.)\n\nApparently the Ant build system still includes solr-core test classes in the test classpath of the other Solr modules.  I think this should be fixed; Solr's test-framework makes this dependency obsolete.\n\nIn the short term, though, can we move the new BufferingRequestProcessor class from solr/core/src/test to solr/test-framework/src/java/?  That way, the Maven stuff will work again without having to jump through hoops like publishing a solr-core test jar and making other modules have a test dependency on it (that's the way it worked pre-test-framework). "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13106543",
            "date": "2011-09-16T15:51:01+0000",
            "content": "Hi,\n\nAh, will look at it again. And yes, the test system should be changed to detect such things during tests. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13106570",
            "date": "2011-09-16T16:23:42+0000",
            "content": "See new issue SOLR-2771, leaving this one closed.. "
        }
    ]
}