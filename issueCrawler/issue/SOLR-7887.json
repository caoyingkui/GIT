{
    "id": "SOLR-7887",
    "title": "Upgrade Solr to use log4j2 -- log4j 1 now officially end of life",
    "details": {
        "components": [],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The logging services project has officially announced the EOL of log4j 1:\n\nhttps://blogs.apache.org/foundation/entry/apache_logging_services_project_announces\n\nIn the official binary jetty deployment, we use use log4j 1.2 as our final logging destination, so the admin UI has a log watcher that actually uses log4j and java.util.logging classes.  That will need to be extended to add log4j2.  I think that might be the largest pain point to this upgrade.\n\nThere is some crossover between log4j2 and slf4j.  Figuring out exactly which jars need to be in the lib/ext directory will take some research.",
    "attachments": {
        "SOLR-7887-fix-maven-compilation.patch": "https://issues.apache.org/jira/secure/attachment/12917594/SOLR-7887-fix-maven-compilation.patch",
        "SOLR-7887-followup_1.patch": "https://issues.apache.org/jira/secure/attachment/12916236/SOLR-7887-followup_1.patch",
        "SOLR-7887_followup_2.patch": "https://issues.apache.org/jira/secure/attachment/12916272/SOLR-7887_followup_2.patch",
        "SOLR-7887-WIP.patch": "https://issues.apache.org/jira/secure/attachment/12807513/SOLR-7887-WIP.patch",
        "SOLR-7887.patch": "https://issues.apache.org/jira/secure/attachment/12906903/SOLR-7887.patch",
        "SOLR-7887-eoe-review.patch": "https://issues.apache.org/jira/secure/attachment/12912904/SOLR-7887-eoe-review.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-07T17:01:03+0000",
            "author": "Shawn Heisey",
            "content": "Here's another reason for upgrading.  It's not completely whether the \"insane\" performance is still seen when pairing with slf4j.\n\nhttp://www.grobmeier.de/log4j-2-performance-close-to-insane-20072013.html ",
            "id": "comment-14662085"
        },
        {
            "date": "2015-08-22T01:18:54+0000",
            "author": "Timothy Potter",
            "content": "I have an implementation of a LogWatcher for log4j2, so ping me when we get to this point and I'll submit a patch. ",
            "id": "comment-14707751"
        },
        {
            "date": "2015-08-22T01:30:18+0000",
            "author": "Shawn Heisey",
            "content": "so ping me when we get to this point and I'll submit a patch.\n\nThat would be awesome.  If you feel comfortable with all the mechanics, feel free to take over the issue entirely.  I'm willing to take it on, but I suspect I will be scratching my head and experimenting a lot, plus asking a lot of stupid questions on the log4j mailing list. \n\nWhat I'm hoping we can accomplish is replacing the log4j1 and the slf4j-log4j jars with appropriate replacements from log4j2 and keep the two existing watchers plus add a log4j2 watcher.  I won't be troubled too much if we can't make the v1 and v2 watchers coexist ... backward compatibility with existing binary setups is less important since we ditched the .war file. ",
            "id": "comment-14707766"
        },
        {
            "date": "2015-11-19T01:03:50+0000",
            "author": "Shawn Heisey",
            "content": "If there's significant support for logback instead of log4j2, we could go that route, but I think that staying within Apache is probably the best option. ",
            "id": "comment-15012512"
        },
        {
            "date": "2015-11-20T03:32:58+0000",
            "author": "Steve Davids",
            "content": "I believe the best argument for logback is that it is a native implementation for SLF4j since it is developed by the same group. Though, from both a configuration and performance perspective the two are very similar. It does seem the logging .properties files have been frowned upon with the preferred configuration method being the xml configuration (log4j2 xml is pretty similar to the logback xml configuration).\n\nThis is a pretty useful tool to convert the existing log4j.properties files over to a logback.xml configuration: http://logback.qos.ch/translator/\n\nSo, the log4j.properties translates to:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!-- For assistance related to logback-translator or configuration  -->\n<!-- files in general, please contact the logback user mailing list -->\n<!-- at http://www.qos.ch/mailman/listinfo/logback-user             -->\n<!--                                                                -->\n<!-- For professional support please see                            -->\n<!--    http://www.qos.ch/shop/products/professionalSupport         -->\n<!--                                                                -->\n<configuration>\n  <!-- Errors were reported during translation. -->\n  <!-- Could not find transformer for org.apache.log4j.EnhancedPatternLayout -->\n  <!-- Could not find transformer for org.apache.log4j.EnhancedPatternLayout -->\n  <appender name=\"file\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->\n    <File>${solr.log}/solr.log</File>\n    <layout class=\"org.apache.log4j.EnhancedPatternLayout\">\n      <ConversionPattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m</ConversionPattern>\n    </layout>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <maxIndex>9</maxIndex>\n      <FileNamePattern>${solr.log}/solr.log.%i</FileNamePattern>\n    </rollingPolicy>\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <MaxFileSize>4MB</MaxFileSize>\n    </triggeringPolicy>\n  </appender>\n  <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <layout class=\"org.apache.log4j.EnhancedPatternLayout\">\n      <ConversionPattern>%-4r %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n</ConversionPattern>\n    </layout>\n  </appender>\n  <logger name=\"org.apache.zookeeper\" level=\"WARN\"/>\n  <logger name=\"org.apache.hadoop\" level=\"WARN\"/>\n  <logger name=\"org.apache.solr.update.LoggingInfoStream\" level=\"OFF\"/>\n  <root level=\"INFO\">\n    <appender-ref ref=\"file\"/>\n    <appender-ref ref=\"CONSOLE\"/>\n  </root>\n</configuration>\n\n\n\nIt does a decent job but for this particular case the translator doesn't know org.apache.log4j.EnhancedPatternLayout should be translated from:\n\n    <layout class=\"org.apache.log4j.EnhancedPatternLayout\">\n      <ConversionPattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m</ConversionPattern>\n    </layout>\n\n\nto:\n\n    <encoder>\n      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m</pattern>\n    </encoder>\n\n\n(Note: default encoder is PatternLayoutEncoder)\n\nSo after that replacement it would actually end up looking like:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <appender name=\"file\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <File>${solr.log}/solr.log</File>\n    <encoder>\n      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m</pattern>\n    </encoder>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <maxIndex>9</maxIndex>\n      <FileNamePattern>${solr.log}/solr.log.%i</FileNamePattern>\n    </rollingPolicy>\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <MaxFileSize>4MB</MaxFileSize>\n    </triggeringPolicy>\n  </appender>\n  <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m</pattern>\n    </encoder>\n  </appender>\n  <logger name=\"org.apache.zookeeper\" level=\"WARN\"/>\n  <logger name=\"org.apache.hadoop\" level=\"WARN\"/>\n  <logger name=\"org.apache.solr.update.LoggingInfoStream\" level=\"OFF\"/>\n  <root level=\"INFO\">\n    <appender-ref ref=\"file\"/>\n    <appender-ref ref=\"CONSOLE\"/>\n  </root>\n</configuration>\n\n ",
            "id": "comment-15015143"
        },
        {
            "date": "2015-11-20T04:33:19+0000",
            "author": "Steve Davids",
            "content": "Looks like there is also a converter for log4j 1.x properties -> log4j 1.x xml here: http://log4j-props2xml.appspot.com/\n\nThen perform the xml migration as defined here: https://logging.apache.org/log4j/2.x/manual/migration.html ",
            "id": "comment-15015198"
        },
        {
            "date": "2015-12-23T17:24:58+0000",
            "author": "Shawn Heisey",
            "content": "Timothy Potter, I think it's time to work on this.  Your implementation of LogWatcher for log4j2 would be a prerequisite.  Should that be its own issue, or part of this one? ",
            "id": "comment-15069914"
        },
        {
            "date": "2015-12-23T17:49:52+0000",
            "author": "Pushkar Raste",
            "content": "@Shawn Heisey Current log4j 1.x config doesn't use async appenders which could be a performance bottleneck, if I you going to put together log4j2 configuration please consider using Async appenders. I know the down side of it is if application crashes you will lose some logs but disk I/O for logs would be greatly reduced if we use Async Appenders  ",
            "id": "comment-15069935"
        },
        {
            "date": "2015-12-23T18:12:39+0000",
            "author": "Shawn Heisey",
            "content": "Sure, we can give async a try.  I have seen this, so it was already on my radar:\n\nhttp://www.grobmeier.de/log4j-2-performance-close-to-insane-20072013.html ",
            "id": "comment-15069984"
        },
        {
            "date": "2015-12-23T18:31:46+0000",
            "author": "Shawn Heisey",
            "content": "If anyone has a complete LogWatcher implementation for logback, I'd also like to add that to Solr, so users would have another option without a ton of work. ",
            "id": "comment-15070014"
        },
        {
            "date": "2016-03-25T18:27:12+0000",
            "author": "Jeff Wartes",
            "content": "SOLR-7698 and SOLR-6377 both have attempts at logback watchers, I think.\n\nI'll also second the desire for async appenders, and I'd go further to suggest it as the default. Solr does a lot of logging, and this gets that work out of the critical path for query latency.  ",
            "id": "comment-15212210"
        },
        {
            "date": "2016-05-25T16:58:52+0000",
            "author": "Keith Laban",
            "content": "Has anyone been looking at this recently? I have a requirement to upgrade to log4j2 in our build of solr.\n\nSome other arguments I can think of for doing this in addition to async appenders is the ability to Regex filter different requests paths into separate log files instead of everything showing up in either server log or request log ",
            "id": "comment-15300420"
        },
        {
            "date": "2016-05-25T17:38:29+0000",
            "author": "Shawn Heisey",
            "content": "You can already do this in your local install by changing the slf4j and other logging jars in server/lib/ext.  You could probably put the new xml config file in server/resources, but I am not positive about that.  You might need to add a startup item to declare where the config is.  These directory locations assume a 5.x or later version.\n\nThe only downside is that if you do these things, you will lose access to logs in the admin UI. ",
            "id": "comment-15300491"
        },
        {
            "date": "2016-05-26T17:00:04+0000",
            "author": "Keith Laban",
            "content": "Is there any reason the the upgrade and patch Timothy Potter mentions above hasn't made into master? ",
            "id": "comment-15302432"
        },
        {
            "date": "2016-06-01T20:45:28+0000",
            "author": "Keith Laban",
            "content": "I took a stab at upgrading from log4j to log4j2, which includes porting over the work that Timothy Potter did over at https://github.com/lucidworks/solr-log4j2 .. Although I'm running into some issues. I'll do my best to document where I'm at so far.\n\nChanges so far: \n\n\n\tRemoved dependencies for log4j and slf4j-log4j12\n\tAdded log4j2 dependencies: log4j-api, log4j-core, log4j-slf4j-impl (new slf4j bridge)\n\tDeleted org.apache.solr.logging.log4j.* and added org.apache.solr.logging.log4j2.* from Tim's impl\n\tAdded Tim's Log4j2Watcher Test\n\tUpdated RequestLoggingTest and LoggingHandlerTest for log4j2\n\tUpdated SolrLogLayout for log4j2 (no tests?)\n\tUpdated log4j.properties in example/resources to log4j2.xml\n\tUpdate bin/solr to use new log4j2.xml and system property -Dlog4j.configurationFile\n\tThis build will compile and run and LogWatcher works in admin UI as expected\n\n\n\n\nThe problems i'm facing are:\n\n\n\tBringing in log4j2 dependencies for some reason is causing javac doclint to fail with errors like \"Invalid use of @throws\" in random places throughout solr. For the mean time i've changed lucene/common-build.xml to use <property name=\"javac.doclint.args\" value=\"-Xdoclint:none\"/> until I can figure out whats going on\n\tWhat finally railroaded me here is that HDFS uses log4j directly and tests which use HDFS fail during runtime with no class found exceptions. I tried including the log4j2-1.2 api as a stop-gap but the the nature of how hdfs uses log4j does not allow this as a fix.\n\n\n\nIf someone wants to jump in here and help out that would be great. I think this would be an big win for the next major release of solr.  ",
            "id": "comment-15311074"
        },
        {
            "date": "2016-06-01T21:29:18+0000",
            "author": "Shawn Heisey",
            "content": "I suspect that if you add log4j-jcl, commons-logging, log4j-1.2-api, and log4j-jul, you'll cover the three logging libraries which are used by dependencies.\n\nThe information on the runtime dependency page says that log4j-jcl requires commons logging ... which seems odd, because I would have expected it to implement commons logging like jcl-over-slf4j (which is in the stock lib/ext directory) does.\n\nEdit:  I just noticed that you mentioned log4j-1.2-api already, and that it didn't work.  I am not sure what to say about that. ",
            "id": "comment-15311153"
        },
        {
            "date": "2016-06-01T21:38:23+0000",
            "author": "Keith Laban",
            "content": "If you notice the first note here https://logging.apache.org/log4j/2.0/manual/migration.html\n\nThey must not access methods and classes internal to the Log4j 1.x implementation such as Appenders, LoggerRepository or Category's callAppenders method.\n\nUnfortunately, hdfs extends AppenderSkeleton which violates this rule causing the bridge solution not to work.\n\nAs far as I can tell there are only two soltuions:\n\n\n\tcontinue to bring in bring in log4j 1.2 \u2013 I think all of the packages have changed in the upgrade so that should hopefully work\n\thdfs/hadoop needs to upgrade to log4j2\n\n\n\nNot sure what other options there are ",
            "id": "comment-15311183"
        },
        {
            "date": "2016-06-02T16:12:27+0000",
            "author": "Shawn Heisey",
            "content": "I suspect that the log4j project would say that hadoop is using log4j incorrectly.\n\nMy gut reaction is that a HADOOP-NNNN issue needs to be filed, but I do not want to do that without discussing it with them first.  I am a member of far too many mailing lists already, but I may need to temporarily acquire another one. ",
            "id": "comment-15312552"
        },
        {
            "date": "2016-09-19T13:23:15+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "What happened here? Did anyone file a bug with Hadoop? Will the upgrade to Hadoop3 in SOLR-9515 help? ",
            "id": "comment-15503479"
        },
        {
            "date": "2017-08-11T04:31:34+0000",
            "author": "Varun Thacker",
            "content": "Did anyone file a bug with Hadoop? Will the upgrade to Hadoop3 in SOLR-9515 help?\n\nHADOOP-12956 should be the Jira that's tracking it on the hadoop side of things.  ",
            "id": "comment-16122824"
        },
        {
            "date": "2017-10-10T04:17:42+0000",
            "author": "Ralph Goers",
            "content": "If you need it, Log4j 2 could look into implementing AppenderSkeleton but it most likely would end up being a no-op so Hadoop's Appender might not do anything. That almost certainly doesn't matter since the appender would never be called by Log4j 2. If you can create a Log4j 2 Jira issue that identifies what Hadoop is trying to do perhaps we can find a way to accommodate it.\n\nAlso, please note that the doclint error was captured in https://issues.apache.org/jira/browse/LOG4J2-1925. It is caused by a bug in javac as documented in http://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8186647. Oracle has closed it as won't fix. The problem does not occur in Java 9. ",
            "id": "comment-16198147"
        },
        {
            "date": "2017-10-10T16:59:09+0000",
            "author": "Shawn Heisey",
            "content": "While looking into SOLR-11453, I attempted to get help from the log4j mailing list on creating a configuration to low slow queries to a separate file.\n\nTheir response was basically \"log4j1 is end of life, upgrade and we might be able to help.\"  This isn't really very helpful, but it's also a completely understandable position, so I'm looking at this issue again.\n\nI see that we have a WIP patch for implementing a new logwatcher, but I haven't looked at it closely yet.  If anyone who's looked at this upgrade has any helpful advice, please let me know. ",
            "id": "comment-16198964"
        },
        {
            "date": "2017-10-10T17:46:35+0000",
            "author": "Shawn Heisey",
            "content": "Keith Laban, as the author of the attached patch, this is going to you.  If Timothy Potter has anything to add, that would be welcome.\n\nIs it possible to have both the log4j1 watcher and the log4j2 watcher available at the same time?  I know this might not be possible, but if it is, that would be preferred.\n\nI haven't tried out the patch yet, but that is something I plan to do.  If the patch should be updated before I attempt it, please feel free to upload a new one. ",
            "id": "comment-16199064"
        },
        {
            "date": "2017-10-10T17:59:28+0000",
            "author": "Keith Laban",
            "content": "I haven't looked at this since my last update. It looks like the hadoop issue has not been resolved, so I imagine we would still be blocked on that integration.  ",
            "id": "comment-16199087"
        },
        {
            "date": "2017-12-21T22:20:06+0000",
            "author": "Shawn Heisey",
            "content": "I'm trying to get something done on this, but I cannot get the patch here to apply.  I will try it again on a Linux machine with the OS patch utility instead of git when I have a chance. ",
            "id": "comment-16300652"
        },
        {
            "date": "2017-12-21T22:27:19+0000",
            "author": "Shawn Heisey",
            "content": "It won't apply with the linux patch utility either.  I don't have time at the moment to attempt to apply it manually.  Any chance Keith Laban could create a new patch for master? ",
            "id": "comment-16300662"
        },
        {
            "date": "2017-12-22T01:37:37+0000",
            "author": "Erick Erickson",
            "content": "Shawn Heisey You might want to hold off a day or two until SOLR-11701 gets checked in as it's in the same ballpark, at least some of the slf4j stuff is in that patch. ",
            "id": "comment-16300829"
        },
        {
            "date": "2017-12-22T04:50:27+0000",
            "author": "Ralph Goers",
            "content": "Log4j 2.10.0 provides AppenderSkeleton in the log4j-1.2-api jar. I verified that it solves the Hadoop issue when I migrated Flume to Log4j 2. Also, I was informed that the reason Oracle closed the issue with doclint as they consider there to be workarounds - either don't use doclint or disable annotation processing. If you have no custom Log4j plugins and no other need for annotation processing you can disable it. ",
            "id": "comment-16300958"
        },
        {
            "date": "2017-12-22T17:42:27+0000",
            "author": "Shawn Heisey",
            "content": "Erick Erickson, I haven't been able to make any progress anyway, so that's no problem. ",
            "id": "comment-16301721"
        },
        {
            "date": "2018-01-19T23:15:07+0000",
            "author": "Varun Thacker",
            "content": "I spent a couple of hours updating this patch to master. It hasn't been fully tested but this needed to be done to test out what Ralph's suggestion.\n\n\u00a0\n\nKeith Laban is this still something that you'd be working on?\u00a0 ",
            "id": "comment-16332989"
        },
        {
            "date": "2018-01-20T17:06:39+0000",
            "author": "Varun Thacker",
            "content": "After adding\u00a0log4j-1.2-api - 2.10.10 in the latest patch, I don't get NoClassDef found errors with the hadoop tests ",
            "id": "comment-16333259"
        },
        {
            "date": "2018-01-20T17:47:28+0000",
            "author": "Erick Erickson",
            "content": "There's still a compile issue or two in the test framework not compiling (ant server dist), but for something I needed to test I hacked them out and compiled and ran Solr with this patch FWIW. ",
            "id": "comment-16333273"
        },
        {
            "date": "2018-01-20T18:51:00+0000",
            "author": "Shawn Heisey",
            "content": "General observation about the ivy versions:\n\nI don't think there should be separate version strings for each component in a multi-jar system like log4j.  It would be extremely unlikely for us to ever incorporate different versions of each of those components.\n\nFor dependencies like httpcomponents, separate strings do make sense, because that project actually does have entirely separate source repositories and releases for the different jars they maintain, and the latest version numbers do not always match.\n\nDigesting all that into advice, which you're free to take or ignore:\n\nI think that all of the log4j components should use a single property for their version, instead of having \"/log4j/log4j-api\", \"/log4j/log4j-core\", etc. ",
            "id": "comment-16333289"
        },
        {
            "date": "2018-01-22T05:10:28+0000",
            "author": "Varun Thacker",
            "content": "Latest patch folds in Shawn''s suggestions. It also fixes a couple of test cases that were failing.\n\nIt's still a WIP but I'm posting the latest state of the patch  ",
            "id": "comment-16333882"
        },
        {
            "date": "2018-01-22T09:09:29+0000",
            "author": "Varun Thacker",
            "content": "All loggers have been migrated . I'll begin reviewing correctness of the changes tomorrow  ",
            "id": "comment-16334064"
        },
        {
            "date": "2018-01-22T19:27:45+0000",
            "author": "Steve Rowe",
            "content": "I think that all of the log4j components should use a single property for their version, instead of having \"/log4j/log4j-api\", \"/log4j/log4j-core\", etc.\nFrom the latest patch:\n\n--- solr/solr-ref-guide/ivy.xml\t(date 1516411619000)\n[...]\n-    <dependency org=\"log4j\" name=\"log4j\" rev=\"${/log4j/log4j}\" conf=\"compile\"/>\n+    <dependency org=\"org.apache.logging.log4j\" name=\"log4j-api\" rev=\"${/log4j/log4j}\" conf=\"compile\"/>\n+    <dependency org=\"org.apache.logging.log4j\" name=\"log4j-core\" rev=\"${/log4j/log4j}\" conf=\"compile\"/>\n\n\nThis will fail precommit, which requires that all rev values are exactly ${/<org>/<name>}. The canonical way of dealing with shared versions is to declare a <prefix>.version property in ivy-versions.properties and then use it, rather than literal versions, as the value for the properties that should share it. E.g.:\n\ncom.carrotsearch.randomizedtesting.version = 2.5.3\n/com.carrotsearch.randomizedtesting/junit4-ant = ${com.carrotsearch.randomizedtesting.version}\n/com.carrotsearch.randomizedtesting/randomizedtesting-runner = ${com.carrotsearch.randomizedtesting.version}\n\n ",
            "id": "comment-16334774"
        },
        {
            "date": "2018-01-22T19:55:25+0000",
            "author": "Shawn Heisey",
            "content": "This will fail precommit, which requires that all rev values are exactly ${/<org>/<name>}.\n\nThis makes sense, and now I get why it's set up in a way that seemed insane to me, and I'm glad that there is a workaround. ",
            "id": "comment-16334807"
        },
        {
            "date": "2018-01-23T22:59:23+0000",
            "author": "Varun Thacker",
            "content": "Latest patch also adds the lmax-disruptor JAR for folks who want to use Async Logging \n\nDoing some local testing when I start Solr to use Async logging ( -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector )  I don't see the class name getting logged which is what I'll look into next.\n\n\n  INFO  - 2018-01-23 22:28:13.731; [   x:techproducts] ?; IndexWriter infoStream solr logging is enabled\n\n ",
            "id": "comment-16336507"
        },
        {
            "date": "2018-01-23T23:14:31+0000",
            "author": "Ralph Goers",
            "content": "Asynchronous logging disables retrieving the location information by default as collecting it is expensive and has to be done even if nothing will use it. It is enabled automatically under certain circumstances. See\u00a0http://logging.apache.org/log4j/2.x/manual/async.html#Location. ",
            "id": "comment-16336521"
        },
        {
            "date": "2018-01-23T23:31:38+0000",
            "author": "Varun Thacker",
            "content": "Thanks Ralph for that link. Makes perfect sense now. I'll let us tackle that in SOLR-11884\n\nSo this Jira is pretty close I'd say.. couple of small nocommits , add licenses and any other precommit issues , improve the CHANGES and include all the contributors here etc.\n\nI'll leave it for a couple of days for folks to maybe try out and give there thoughts on the patch  ",
            "id": "comment-16336547"
        },
        {
            "date": "2018-01-30T00:45:05+0000",
            "author": "Varun Thacker",
            "content": "Patch which adds licenses etc.\u00a0\n\nI am unsure what to put in disruptor-NOTICE.txt so it's currently empty.\n\nPre-commit is still failing which I'll investigate now.\u00a0\n\nif anyone has time to give it a spin on windows to confirm everything is running fine it would be great. ",
            "id": "comment-16344285"
        },
        {
            "date": "2018-02-08T01:17:40+0000",
            "author": "Varun Thacker",
            "content": "Steve and I were discussing it offline.\n\nThe current compilation issue with the latest patch seems to only happen after\u00a0SOLR-11658 got committed.\n\nZOOKEEPER-2829 introduced yetus but somehow only this issue seems to trigger it ( I don't know why )\u00a0\n\nAdding Yetus as a dependency locally solved the problem. I'll upload a patch in the next couple of days after taking another pass at it\u00a0\n\n\u00a0 ",
            "id": "comment-16356330"
        },
        {
            "date": "2018-02-16T21:35:32+0000",
            "author": "Erick Erickson",
            "content": "I have a report from the field when someone hacked in log4j2 by themselves that the Solr admin UI (logging portion) has some issues after upgrade, as in it's blank. So we need to be sure to test that.\n\nP.S. I assigned it to myself to insure it doesn't get lost, but if you want to take it back Varun Thacker, feel free. ",
            "id": "comment-16367907"
        },
        {
            "date": "2018-02-16T21:43:07+0000",
            "author": "Varun Thacker",
            "content": ">\u00a0I have a report from the field when someone hacked in log4j2 by themselves that the Solr admin UI (logging portion) has some issues after upgrade, as in it's blank. So we need to be sure to test that.\n\n\u00a0\n\nWe have a test for that. Check\u00a0Log4j2Watcher.\u00a0 I'm reassigning this to myself as I was planning on wrapping up this over the weekend\u00a0 ",
            "id": "comment-16367917"
        },
        {
            "date": "2018-02-21T06:56:42+0000",
            "author": "Varun Thacker",
            "content": "More updates to the patch.\n\nThere is a bug which i'm looking into next :\n\nWhen calling Log4j2Watcher#setLevel where category is \"org.apache.solr.update.processor\"\u00a0the LoggerConfig\u00a0 returned is \"root\" so if we set it to DEBUG then the root logger changes and not just the individual class/package\n\nLoggerConfig loggerConfig = getLoggerConfig(ctx, category);\n ",
            "id": "comment-16371018"
        },
        {
            "date": "2018-03-02T21:18:49+0000",
            "author": "Varun Thacker",
            "content": "Changing the log level dynamically is working fine in Log4j2Watcher\u00a0 with the latest patch.\n\n\u00a0\n\nI'll start looking at all the changes and seeing what else is missing ",
            "id": "comment-16384174"
        },
        {
            "date": "2018-03-02T22:41:54+0000",
            "author": "Shawn Heisey",
            "content": "This appears to turn off doclint checking for the entire project.  Or at least on the lucene part.  That doesn't seem like something we want to do in this issue. ",
            "id": "comment-16384267"
        },
        {
            "date": "2018-03-02T23:00:55+0000",
            "author": "Varun Thacker",
            "content": "Yeah I need to look into that. It's in my todo list.\u00a0\n\n\u00a0\n\nKeith had called out this in his change and it's an artifact of that currently.\n\n>\u00a0The problems i'm facing are:\n\n\tBringing in log4j2 dependencies for some reason is causing javac doclint to fail with errors like \"Invalid use of @throws\" in random places throughout solr. For the mean time i've changed lucene/common-build.xml to use\u00a0<property name=\"javac.doclint.args\" value=\"-Xdoclint:none\"/>\u00a0until I can figure out whats going on\n\n ",
            "id": "comment-16384285"
        },
        {
            "date": "2018-03-02T23:34:40+0000",
            "author": "Varun Thacker",
            "content": "Related Jira\u00a0LOG4J2-1925 ",
            "id": "comment-16384315"
        },
        {
            "date": "2018-03-03T02:55:16+0000",
            "author": "Varun Thacker",
            "content": "Updated patch and the review board\n\nChanges:\n\n\tAdd proc:none to \"javac.doclint.args\"\u00a0which means that compilation takes place without annotation processing.\u00a0\n\tOther small changes that make precommit pass now\n\n\n\n\u00a0\n\nSo I'll start reviewing the current state through review board since the patch has become quite large.\u00a0 ",
            "id": "comment-16384448"
        },
        {
            "date": "2018-03-03T03:45:30+0000",
            "author": "Ralph Goers",
            "content": "To be more accurate, the problem with doclint is related to http://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8186647. Oracle leaves you with 3 choices; a) disable doclint, b) disable annotation processing, c) use the Java 9 compiler. ",
            "id": "comment-16384457"
        },
        {
            "date": "2018-03-03T11:50:23+0000",
            "author": "Mikhail Khludnev",
            "content": "Today's patch has unnecessary changes in CHANGES.txt around  {{* SOLR-10307: }} ",
            "id": "comment-16384631"
        },
        {
            "date": "2018-03-04T02:11:48+0000",
            "author": "Erick Erickson",
            "content": "Patch with my reviewboard comments except the two that refer to log4j1.2, I'm not sure whether those are in there for back compat or not. Fixed up the CHANGES.txt issues I think too.\n\nSee: https://reviews.apache.org/r/65888/\n\n\n ",
            "id": "comment-16384935"
        },
        {
            "date": "2018-03-04T05:33:10+0000",
            "author": "Erick Erickson",
            "content": "I somehow didn't include disruptor-NOTICE.txt in my patch, included now.\n\nIf you have precommit failures and the like, here's a problem I had:\n\nlog4j-1.2.17.jar (and a couple of others) are no longer necessary. However, if you've built Solr sometime, even if you switch branches, you'll have some leftover symlinks in the following 4 directories that log4j-1.2.17.jar (and others) points to in your ivy cache.... which may not exist. Precommit will fail if they're not presetn.\n\nNOTE: I was being thorough and deleting my ivy cache to be sure we'd get everything properly, if I hadn't I wouldn't have this problem.\n\nsolr/core/lib/\nsolr/solr-ref-guide/lib/\nsolr/server/lib/ext/\nsolr/solrj/test-lib/\n\nSo I just removed everything in the 4 directories above and I'm back being able to run precommit.\n\nNOTE: compiling worked even with the symlinks pointing nowhere.\n\n ",
            "id": "comment-16384967"
        },
        {
            "date": "2018-03-05T05:06:46+0000",
            "author": "Erick Erickson",
            "content": "Here's what I have at this point. Everything is fine except one test failure (TestLogWatcher). But the odd thing is that it only fails when running 'ant test'. I can beast it over and over and over, I can run it individually or with test-nocompile etc. etc. etc.\n\nWe need to figure this out or BadApple it before committing, I'd prefer the former of course. ",
            "id": "comment-16385612"
        },
        {
            "date": "2018-03-05T05:58:54+0000",
            "author": "Erick Erickson",
            "content": "Unfortunately, I've been concentrating on getting unit tests to run and the like. With the current patch when I try to start a regular Solr instance I get:\n\n\n2018-03-04 21:58:00,789 main ERROR Unable to invoke factory method in class org.apache.logging.log4j.core.appender.RollingFileAppender for element RollingFile: java.lang.IllegalStateException: No factory method found for class org.apache.logging.log4j.core.appender.RollingFileAppender java.lang.IllegalStateException: No factory method found for class org.apache.logging.log4j.core.appender.RollingFileAppender\n\tat org.apache.logging.log4j.core.config.plugins.util.PluginBuilder.findFactoryMethod(PluginBuilder.java:229)\n\tat org.apache.logging.log4j.core.config.plugins.util.PluginBuilder.build(PluginBuilder.java:134)\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.createPluginObject(AbstractConfiguration.java:958)\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:898)\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:890)\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.doConfigure(AbstractConfiguration.java:513)\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.initialize(AbstractConfiguration.java:237)\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.start(AbstractConfiguration.java:249)\n\tat org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:545)\n\tat org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:617)\n\tat org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:634)\n\tat org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:229)\n\tat org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:153)\n\tat org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:45)\n\tat org.apache.logging.log4j.LogManager.getContext(LogManager.java:194)\n\tat org.apache.logging.log4j.spi.AbstractLoggerAdapter.getContext(AbstractLoggerAdapter.java:122)\n\tat org.apache.logging.slf4j.Log4jLoggerFactory.getContext(Log4jLoggerFactory.java:43)\n\tat org.apache.logging.log4j.spi.AbstractLoggerAdapter.getLogger(AbstractLoggerAdapter.java:46)\n\tat org.apache.logging.slf4j.Log4jLoggerFactory.getLogger(Log4jLoggerFactory.java:29)\n\tat org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:358)\n\tat org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:383)\n\tat org.apache.solr.util.SolrCLI.<clinit>(SolrCLI.java:227)\n\n2018-03-04 21:58:00,791 main ERROR Null object returned for RollingFile in Appenders.\n2018-03-04 21:58:00,799 main ERROR Unable to locate appender \"RollingFile\" for logger config \"root\" ",
            "id": "comment-16385637"
        },
        {
            "date": "2018-03-05T07:20:39+0000",
            "author": "Shawn Heisey",
            "content": "Patch didn't want to apply for me on my desktop.  Moved it to a Linux machine, and then it worked.  Building the server target and then running \"bin/solr start\", I see the same exception, but before that, the first two errors are different.  I trimmed most of the stacktraces out.  It acts like the property substitution isn't working properly ... I think the first message came directly from Java file code.\n\nI couldn't figure out which xml config file was being used.  Ultimately by experimenting I learned that it is using the one at server/scripts/cloud-scripts/log4j2.xml ... which doesn't seem right.\n\n\n2018-03-05 00:01:38,054 main ERROR Unable to create file ${sys:solr.solr.home}/../logs/solr.log java.io.IOException: No such file or directory\n        at java.io.UnixFileSystem.createFileExclusively(Native Method)\n        at java.io.File.createNewFile(File.java:1012)\n        at org.apache.logging.log4j.core.appender.rolling.RollingFileManager$RollingFileManagerFactory.createManager(RollingFileManager.java:628)\n\n\n\n\n2018-03-05 00:01:38,063 main ERROR Could not create plugin of type class org.apache.logging.log4j.core.appender.RollingFileAppender for element RollingFile: java.lang.IllegalStateException: ManagerFactory [org.apache.logging.log4j.core.appender.rolling.RollingFileManager$RollingFileManagerFactory@545997b1] unable to create manager for [${sys:solr.solr.home}/../logs/solr.log] with data [org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData@4cf4d528[pattern=${sys:solr.solr.home}/../logs/solr.%i.log.gz, append=true, bufferedIO=true, bufferSize=8192, policy=CompositeTriggeringPolicy(policies=[OnStartupTriggeringPolicy, SizeBasedTriggeringPolicy(size=4194304)]), strategy=DefaultRolloverStrategy(min=1, max=7, useMax=true), advertiseURI=null, layout=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n, filePermissions=null, fileOwner=null]] java.lang.IllegalStateException: ManagerFactory [org.apache.logging.log4j.core.appender.rolling.RollingFileManager$RollingFileManagerFactory@545997b1] unable to create manager for [${sys:solr.solr.home}/../logs/solr.log] with data [org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData@4cf4d528[pattern=${sys:solr.solr.home}/../logs/solr.%i.log.gz, append=true, bufferedIO=true, bufferSize=8192, policy=CompositeTriggeringPolicy(policies=[OnStartupTriggeringPolicy, SizeBasedTriggeringPolicy(size=4194304)]), strategy=DefaultRolloverStrategy(min=1, max=7, useMax=true), advertiseURI=null, layout=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n, filePermissions=null, fileOwner=null]]\n        at org.apache.logging.log4j.core.appender.AbstractManager.getManager(AbstractManager.java:115)\n\n ",
            "id": "comment-16385697"
        },
        {
            "date": "2018-03-05T07:23:46+0000",
            "author": "Shawn Heisey",
            "content": "Also, why is it using a path relative to solr.solr.home when solr.log.dir is defined by the script? ",
            "id": "comment-16385701"
        },
        {
            "date": "2018-03-05T07:24:41+0000",
            "author": "Varun Thacker",
            "content": "This might have been introduced with the latest changes made by Erick .. It was working fine before that . I'll check it out tomorrow morning ",
            "id": "comment-16385703"
        },
        {
            "date": "2018-03-05T10:29:58+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Varun, I wasn't sure if this issue would make it for 7.3 or not so I have committed SOLR-11957. Please use the new values for max size and max backups in your patch. ",
            "id": "comment-16385909"
        },
        {
            "date": "2018-03-05T17:53:29+0000",
            "author": "Erick Erickson",
            "content": "And.... This morning it doesn't even compile if you do a fresh pull from master. IIRC the last time I updated from master was yesterday afternoon, but that may not be entirely accurate.\n\nNOTE: If you want to work with trying to resolve dependencies, you need to delete all the jars in\nsolr/core/lib\nsolr/solr-ref-guide/lib\nsolr/server/lib/ext\nsolr/solrj-test-lib\n\nand delete ~/.ivy2/cache\n\nwhat happened to me was that I removed my ivy cache as a sanity check and precommit started failing. Eventually I found that even after \"ant clean-jars\", there were left-over soft links like:\n./solr/core/lib/slf4j-log4j12-1.7.24.jar -> /Users/Erick/.ivy2/cache/org.slf4j/slf4j-log4j12/jars/slf4j-log4j12-1.7.24.jar, apparently clean-jars doesn't remove things not in the dependencies, which makes sense.\n\nof course since I'd cleaned my ivy cache since /Users/Erick/.ivy2/cache/org.slf4j/slf4j-log4j12/jars/slf4j-log4j12-1.7.24.jar wasn't there. This did NOT show up until precommit though. Whether this is the root of my inability to start Solr is anybody's guess. And whether that's part of my current inability to compile (although it was working fine last night) is also a good question. Compilation over a current pull fails with:\n\n::::::::::::::::::::::::::::::::::::::::::::::\n[ivy:retrieve] \t\t::          UNRESOLVED DEPENDENCIES         ::\n[ivy:retrieve] \t\t::::::::::::::::::::::::::::::::::::::::::::::\n[ivy:retrieve] \t\t:: org.slf4j#slf4j-log4j12;${/org.slf4j/slf4j-log4j12}: not found\n[ivy:retrieve] \t\t:: log4j#log4j;${/log4j/log4j}: not found\n\n\nShawn Heisey\nAre you talking about one of the log4j2.xml files? If so, what I did was copy the same log4j2.xml file from into three places, example/resources, server/resources and server/scripts/cloud-scripts.\n\nNobody seems to know which of those three is used at what point so I decided to make them all the same. At least they'll be consistent. I'm perfectly open to changing them, but having all three do different things is confusing as you well know. Until SOLR-12008 is fully addressed, I'm opting for them all being the same, maybe a bad call...... ",
            "id": "comment-16386432"
        },
        {
            "date": "2018-03-05T18:34:36+0000",
            "author": "Shawn Heisey",
            "content": "Are you talking about one of the log4j2.xml files? \n\nI also noticed that there were multiple files, so I wanted to sanity check which xml file was being used for Solr startup.  I made a little change to the fileName parameter in what I assumed was the right one.  The filename in the exception didn't change.  What finally changed the exception message was modifying server/scripts/cloud-scripts/log4j2.xml, which was definitely a surprise.\n\nSolr 8.0-SNAPSHOT does start even with the multiple exceptions, and when it starts, the dashboard doesn't show a sysprop definition for the log4j config file.  I'm assuming it should be there.  It is there on my 6.6.2 dev server:\n\n-Dlog4j.configuration=file:/index/solr6/log4j.properties ",
            "id": "comment-16386500"
        },
        {
            "date": "2018-03-05T20:54:27+0000",
            "author": "Varun Thacker",
            "content": "Are you talking about one of the log4j2.xml files? If so, what I did was copy the\u00a0same\u00a0log4j2.xml file from into three places, example/resources, server/resources and server/scripts/cloud-scripts.\n\u00a0\n\nPlease don't do that as part of this scope. If you want to tackle that\u00a0SOLR-12008\u00a0is where we should be doing it\n\n\u00a0\n\nHere's why I feel strongly about not doing that in this patch:\n\n\u00a0\n\nCompare https://github.com/apache/lucene-solr/blob/master/solr/server/scripts/cloud-scripts/log4j.properties\u00a0and https://github.com/apache/lucene-solr/blob/master/solr/server/resources/log4j.properties\u00a0\n\nIt's totally different. One if supposed to run cloud script commands and ONLY has a console appender and NO file logger. Why add a file logger ? And that too the same file as the solr.log and potentially overwrite it?\u00a0\n\n\u00a0 ",
            "id": "comment-16386754"
        },
        {
            "date": "2018-03-07T06:20:33+0000",
            "author": "Erick Erickson",
            "content": "I backed out making the configs the same, and fixed the problem with compilation. What happened is that the check in for the prometheus-exporter had to have its dependencies updated just like a number of the other contribs.\n\nTestLogWatcher still fails, but only when run as part of the full test suite (or at least more commonly).\n\nIf we can get TestLogWatcher fixed and do some real-world tests I'll consider this patch ready to commit. I think we should wait until after 7.3 had been branched though to give it time to bake.\n\nThe test error isn't very informative:\n   [junit4] Suite: org.apache.solr.logging.TestLogWatcher\n   [junit4]   2> 2452861 WARN  (main) [    ] o.a.s.l.TestLogWatcher This is a test message\n   [junit4] FAILURE 0.01s J3 | TestLogWatcher.testLog4jWatcher <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError\n   [junit4]    > \tat org.apache.solr.logging.TestLogWatcher.testLog4jWatcher(TestLogWatcher.java:49)\n   [junit4] Completed [664/782 (5!)] on J3 in 0.04s, 1 test, 1 failure <<< FAILURES! ",
            "id": "comment-16389098"
        },
        {
            "date": "2018-03-07T23:05:25+0000",
            "author": "Erick Erickson",
            "content": "What appears to be happening is that the same appender is used in separate tests, which baffles me.\n\nEasy way to reproduce (and debug) is copy the single test in TestLogWatcher and rename it. Now even though we've allegedly created a new watcher, the log message is still added to the first one defined. Setting a breakpoint in LogWatcher.add() will show that the same instance is used in both tests.\n\nThe same problem does not occur in Log4j2WatcherTest and the invocation patterns are much different, so I'm digging in there but any help appreciated\nKeith Laban\nShawn Heisey\nVarun Thacker\nAny insights appreciated. ",
            "id": "comment-16390406"
        },
        {
            "date": "2018-03-08T03:02:57+0000",
            "author": "Erick Erickson",
            "content": "All right, I see what's happening even if I don't know what the proper fix is yet.\n\nin Log4J2Watcher, there's an inner class Log4j2Appender whose constructor calls:\nsuper(\"Log4j2WatcherAppender\", filter, null);\n\nHere's the stack trace where the above is a problem:\nAppenderControl.equals(185) [1]\nAppenderControArraySet.add(49)\nLoggerConfig.AddAppender(200)\n-------------------- the above in: org.apache.logging.log4j.core.config;\nLog4J2Watcher.registerListener(253)\nLogWatcher.newRegisteredLogWatcher(139).\n\n[1] equals() compares the name passed in by the \nsuper(\"Log4j2WatcherAppender\", filter, null);\ncall in Log4j2Appender and since there's already a \"Log4j2WatcherAppender\" in the list the new one is not put in the list and the second test fails since nothing is logged to the new watcher..\n\nIf I declare a stupid AtomicInteger and do this:\nsuper(\"Log4j2WatcherAppender\" + stupid.incrementAndGet(), filter, null);\nthen TestLogWatcher succeeds with the duplicated test method. I have yet to test the full test run to see if this also cures the original problem. This is just to see if my theory is correct, it's nothing like a proper fix.\n\nSo the question becomes \"what's the proper thing to do here?\" The name passed in may not be null, and doing some counter increment or similar trick seems like it could lead to a zillion appenders. ",
            "id": "comment-16390651"
        },
        {
            "date": "2018-03-09T05:06:15+0000",
            "author": "Erick Erickson",
            "content": "This should do it. I'll commit this after 7.3 is cut absent objections. I also created a new ReviewBoard with the new patch: https://reviews.apache.org/r/65998/\n\nAndrzej Bialecki  Shalin Shekhar Mangar I made changes to SolrSlf4jReporterTest. This was succeeding before because the subsequent calls to addAppender in createCoreContainer did nothing. You might want to take quick look.\n\nThe critical change is in Log4j2Watcher.java, line 251 where it now removes any appenders of the same name as the one being added. Prior to that change, any appenders being added with the same name were not actually added. Now the last appender for a particular name wins. This fixes the remaining test issues.\n\nAny manual testing would be greatly appreciated as I haven't done much of that yet, particularly the admin UI.\n ",
            "id": "comment-16392409"
        },
        {
            "date": "2018-03-09T06:26:19+0000",
            "author": "Varun Thacker",
            "content": "Any hints on what all has changes since the last patch I put out?\n\nThe size of the patches were in the 190kb range. Any clues as to what's changed that now it's 170 KB? It will make it much easier to review\n\n\u00a0\nAny manual testing would be greatly appreciated as I haven't done much of that yet, particularly the admin UI.\nI'll test it out\u00a0 ",
            "id": "comment-16392480"
        },
        {
            "date": "2018-03-09T17:15:01+0000",
            "author": "Erick Erickson",
            "content": "bq: The size of the patches were in the 190kb....\n\nYeah, that puzzled me too. \"All tests pass\". I took a look and the earlier patch has things like :\n\n19K Mar  9 10:03 audience-annotations-LICENSE-ASL.txt.\n\nThese are part of Yetus, so I'm guessing your patch has some cruft in it unrelated to log4j2. I took the yetus dependencies out as per Tom\u00e1s' comments. ",
            "id": "comment-16393194"
        },
        {
            "date": "2018-03-09T17:55:18+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "If you upload the new patch to the old code review it should allow people to easily view changes between the versions ",
            "id": "comment-16393282"
        },
        {
            "date": "2018-03-15T19:22:19+0000",
            "author": "Erick Erickson",
            "content": "Tom\u00e1s: \n\nThanks, but I can't upload a new diff to the Reviewboard that Varun opened. On the one I created there's an \"update\" button, whereas when I sign on there's nothing similar on Varun's that I can see.\n\nAnyway, I'll ping Alan about pushing this over the weekend unless there are objections.\n\nErick ",
            "id": "comment-16400988"
        },
        {
            "date": "2018-03-25T17:39:30+0000",
            "author": "Erick Erickson",
            "content": "I think it's ready!\n\nChris Hostetter (Unused): I had to change a bit of ivy-versions.properties, /log4j/log4j is never referenced in the places like solr/core/ivy.xml after this patch and precommit failed. Specifically where you broke out the \"org.log4j.major.version = 1.2\". I made a trivial change but just in case it affects the javadoc builds I thought I'd call it out.\n\n\n\tUpgraded to Log4J 2.11 rather than 2.10 since it's been released.\n\n\n\n\n\tThis requires LMAX-disruptor, which is licensed under Apache 2.0, but what should go in the disruptor-NOTICES.txt file? It's just a zero-byte file now. There is a disruptor-LICENSE-ASL.txt file with the full license.\n\n\n\n\n\tjar-checksums, precommit and test targets all completed successfully, even after clearing out my ivy cache and doing a clean-jars\n\n\n\nI'll commit this later today so we can start getting some mileage on it. ",
            "id": "comment-16413111"
        },
        {
            "date": "2018-03-25T17:59:47+0000",
            "author": "Varun Thacker",
            "content": "Thanks Erick!\u00a0\n\nI'm looking at the patch right now.\u00a0\n\nThe two things I did right away was , click on \"submit patch\" so that the automatic build validation can run against the latest patch . Secondly I updated the reviewboard with the latest patch ( https://reviews.apache.org/r/65888/diff/3/\u00a0)\u00a0 ",
            "id": "comment-16413115"
        },
        {
            "date": "2018-03-26T02:16:40+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 624d128b5e745d88adb54bc8505e96cdf6156209 in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=624d128 ]\n\nSOLR-7887: Upgrade Solr to use log4j2 \u2013 log4j 1 now officially end of life ",
            "id": "comment-16413279"
        },
        {
            "date": "2018-03-26T02:47:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit dea0fd3267689bbff045cde2762c9726096b3512 in lucene-solr's branch refs/heads/branch_7x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dea0fd3 ]\n\nSOLR-7887: Upgrade Solr to use log4j2 \u2013 log4j 1 now officially end of life\n\n(cherry picked from commit 624d128) ",
            "id": "comment-16413298"
        },
        {
            "date": "2018-03-26T02:48:50+0000",
            "author": "Erick Erickson",
            "content": "We should open separate issues for anything that comes up. ",
            "id": "comment-16413299"
        },
        {
            "date": "2018-03-26T04:20:13+0000",
            "author": "Varun Thacker",
            "content": "I validated two things from the Solr Admin UI\n\n\tERRORs and WARNs getting logged correctly\n\tChanging log levels dynamically works correctly. Changed it a few times thought the UI and toggled it around and the solr logs reflects it\n\n\n\n\u00a0\n\nA few comments from the patch.\n\n1. In\u00a0lucene/ivy-versions.properties we have something like this. Any reason we can't\u00a0set\u00a0org.log4j.major.version = 2.11.0 and don't use the minor version variable?\n\norg.log4j.major.version = 2.11\norg.log4j.minor.version = 0\norg.apache.logging.log4j.version = ${org.log4j.major.version}.${org.log4j.minor.version}\n\n2. After applying the patch , the CHANGES entry has a formatting issue . The upgrade section\u00a0shouldn't\u00a0contain the author names .\u00a0\n\n3. The CHANGES entry needs to reflect Log4J 2.11 instead of 2.10\n\n4. If you grep for \"log4j.properties\" the new dev-tools/eclipse/run*.sh files references them that needs to be updated.\u00a0 Also solr/contrib/prometheus-exporter/bin/solr-exporter*\u00a0references it.\n\n4. Same as 4, where those files need to use\u00a0-Dlog4j.configurationFile instead of\u00a0-Dlog4j.configuration . Additionally solr/bin/solr.cmd has one mention of\u00a0-Dlog4j.configuration which would need to be updated ass well.\n\nI'm still looking at the remaining of the patch and will post my second update in a bit\u00a0 ",
            "id": "comment-16413360"
        },
        {
            "date": "2018-03-26T05:15:43+0000",
            "author": "Erick Erickson",
            "content": "For <1>, Hoss introduced that for the documentation build process, so I left it.\n\nFor the rest, can you open a new JIRA or add a patch to fix this up since it's fresh in your mind?\n ",
            "id": "comment-16413382"
        },
        {
            "date": "2018-03-26T05:25:17+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I see <SizeBasedTriggeringPolicy size=\"4 MB\"/> in solr/server/resources/log4j2.xml instead of the new defaults in SOLR-11957. Also, what is the equivalent of the old MaxBackupIndex parameter and where is it configured in the new scheme of things? ",
            "id": "comment-16413395"
        },
        {
            "date": "2018-03-26T05:36:13+0000",
            "author": "Varun Thacker",
            "content": "5. In solr/contrib/prometheus-exporter/ivy.xml , why is the \"log4j-slf4j-impl\" dependency \"test\" and not \"compile\" ?\n\nExcerpt where this was changed \n\n- <dependency org=\"org.slf4j\" name=\"slf4j-log4j12\" rev=\"${/org.slf4j/slf4j-log4j12}\" conf=\"compile\"/>\n+ <dependency org=\"org.apache.logging.log4j\" name=\"log4j-slf4j-impl\" rev=\"${/org.apache.logging.log4j/log4j-slf4j-impl}\" conf=\"test\"/>\n\n6. The commit to JettySolrRunner.java seems like a cruft from a older patch?\n\n7. In solr/server/resources/log4j2.xml , we have added this\n\nfileName=\"${sys:solr.solr.home}/../logs/solr.log\"\n\nwhy is it \"solr.solr.home\" ? Shouldn't it be ${solr.log} ?\n\nFrom the older log4j.properties\n\nlog4j.appender.file.File=${solr.log}/solr.log\n\n\u00a0\n\n8. In solr/server/scripts/cloud-scripts/log4j2.xml , we have this line\n\n<Logger name=\"log4j.logger.org.apache.solr.common.cloud\" level=\"WARN\"/>\n\n\nthe \"log4j.logger\" should be excluded right?\n\n9.\u00a0Similarly in solr/solrj/src/test-files/log4j2.xml and solr/solrj/src/test-files/log4j.properties we need to fix this?\n\n<Logger name=\"log4j.logger.org.apache.solr.hadoop\" level=\"INFO\"/>\n\n\u00a0 ",
            "id": "comment-16413399"
        },
        {
            "date": "2018-03-26T06:07:36+0000",
            "author": "Varun Thacker",
            "content": "Thanks Shalin for pointing it out.\u00a0You're right we should fix that\n\nBefore the commit like you pointed out we were keep 10 copies. After the commit we store 7 as that's the default ( I manually tested this and verified it as well)\n\nFrom the docs ( https://logging.apache.org/log4j/2.x/manual/appenders.html#FileAppender ) - \"The maximum value of the counter. Once this values is reached older archives will be deleted on subsequent rollovers. The default value is 7.\n\"\n\nSo we need something like this for the log4j2.xml file\n\n...\n<Policies>\n <OnStartupTriggeringPolicy />\n <SizeBasedTriggeringPolicy size=\"32 MB\"/>\n</Policies>\n<DefaultRolloverStrategy max=\"10\"/>\n</RollingFile>\n...\n\n\n\n\u00a0\n\nSecondly, before the commit\u00a0we\u00a0were creating log files with this pattern :\u00a0\u00a0solr.log , solr.log.1 , solr.log.2\n\nAfter this commit the file names look like this : solr.log , solr.1.log.gz, solr.2.log.gz\n\nI think we can revert to the old way ?\n\n\u00a0 ",
            "id": "comment-16413411"
        },
        {
            "date": "2018-03-26T06:12:14+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Varun. Yes, we should preserve the file names because many users will have scripts and configuration to archive/delete/process these log files and changing the file name will break those. ",
            "id": "comment-16413416"
        },
        {
            "date": "2018-03-26T16:56:58+0000",
            "author": "Varun Thacker",
            "content": "Also I think we need to validate the command line\u00a0flags\u00a0:\u00a0rotate_solr_logs ,\u00a0SOLR_LOG_PRESTART_ROTATION\n\nBasically everything under \"Permanent Logging Settings\" http://lucene.apache.org/solr/guide/7_2/configuring-logging.html ",
            "id": "comment-16414126"
        },
        {
            "date": "2018-03-26T17:47:40+0000",
            "author": "Varun Thacker",
            "content": "\n\tMoved CHANGES entry from the Solr 7.3 section to 7.4\n\tFixed the CHANGES upgrade notes typos\n\tChanged references which were using log4j.properties to log4j2.xml\n\tChanged references which were using log4j.configuration to log4j.configurationFile\n\tFixed ref guide references pointing to the old log4j.properties file\n\tThe default log4j2.xml rotates log files at 32MB (instead of 4 ) and keeps 10 log files ( instead of 7) with the patch\n\tRevert the log pattern to use solr.log.N instead of solr.N.log.gz\n\tIn solr/contrib/prometheus-exporter/ivy.xml change dependency=log4j-slf4j-impl to use attribute compile and not test\n\tRevert cruft from JettySolrRunner\n\tlog4j2.xml now uses the solr.log as the sys prop for fileName/filePattern attribute\n\tFixed solr/server/scripts/cloud-scripts/log4j2.xml with the correct class pattern\n\tFixed solr/solrj/src/test-files/log4j2.xml with the correct class pattern\n\tFixed solr/contrib/ltr/src/test-files/log4j2.xml with the correct class pattern\n\tFixed solr/test-framework/src/test-files/log4j2.xml with the correct class pattern\n\n\n\nI'll commit this followup patch shortly\n\nI need to make another pass at the commit and see if we need to address more issues and post an additional patch.\n\nThis is are still broken:\n\n\tconfiguring-logging.adoc references {ivy-log4j-version} but I don't see the variable being set anywhere\n\n\n\nTODO:\nvalidate the command line flags : rotate_solr_logs , SOLR_LOG_PRESTART_ROTATION mentioned under \"Permanent Logging Settings\" http://lucene.apache.org/solr/guide/7_2/configuring-logging.html\nTom\u00e1s had a comment on the reviewboard which we never addressed : \"Right. And we already have lines for forbidding 1.2 jog4j and JUL. My point is that we need to add the new packages there. See file \"solr.txt\" under lucene/tools/forbiddenApis ",
            "id": "comment-16414215"
        },
        {
            "date": "2018-03-26T18:22:14+0000",
            "author": "Varun Thacker",
            "content": "Small update to the followup patch . the sys prop in the initial patch was solr.log , but it should have been solr.log.dir\n\nfileName=\"${sys:solr.log.dir}/solr.log\" ",
            "id": "comment-16414281"
        },
        {
            "date": "2018-03-26T18:32:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bea6e2307b92437085d45287ec15fd04e0e15c66 in lucene-solr's branch refs/heads/master from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bea6e23 ]\n\nSOLR-7887: Log4J2 upgrade fixes ",
            "id": "comment-16414295"
        },
        {
            "date": "2018-03-26T18:33:20+0000",
            "author": "Cassandra Targett",
            "content": "configuring-logging.adoc references {ivy-log4j-version} but I don't see the variable being set anywhere\n\nYou mean you can't find it in that file, or can't find where it's defined? If the former, see line #87 of configuring-logging.adoc. If the latter, see solr-ref-guide/src/_config.yml.template and solr-ref-guide/build.xml (or maybe just look at SOLR-12118). ",
            "id": "comment-16414296"
        },
        {
            "date": "2018-03-26T18:56:22+0000",
            "author": "Varun Thacker",
            "content": "You mean you can't find it in that file, or can't find where it's defined? If the former, see line #87 of configuring-logging.adoc. If the latter, see solr-ref-guide/src/_config.yml.template and solr-ref-guide/build.xml (or maybe just look at\u00a0SOLR-12118).\nThanks Cassandra for pointing it out. Looks like this commit will break the intention of how SOLR-12118 was supposed to work.\n\nQuick analysis:\n\nAs of current master ivy-versions.properties has this\n\norg.log4j.major.version = 2.11\norg.log4j.minor.version = 0\norg.apache.logging.log4j.version = ${org.log4j.major.version}.${org.log4j.minor.version}\n\n_config.yml.template has this\u00a0\n\nivy-log4j-version: \"${ivyversions.org.log4j.major.version}\"\n\nAnd here is the excerpt from configuring-logging.adoc\u00a0\n\nSolr uses http://logging.apache.org/log4j/{ivy-log4j-version}/[Log4J version {ivy-log4j-version}] for logging which is configured using `server/resources/log4j2.xml`.\n\nThe website\u00a0https://logging.apache.org/log4j/2.x/\u00a0has 2.x and not 2.11 . Earlier it used to be\u00a0https://logging.apache.org/log4j/1.2/\u00a0so this would have worked before the upgrade of Log4J\n\n\u00a0\n\ncc Hoss Man Erick Erickson\n\n\u00a0 ",
            "id": "comment-16414327"
        },
        {
            "date": "2018-03-26T19:22:47+0000",
            "author": "Varun Thacker",
            "content": "\u00a0validate the command line flags : rotate_solr_logs , SOLR_LOG_PRESTART_ROTATION mentioned under \"Permanent Logging Settings\"\u00a0http://lucene.apache.org/solr/guide/7_2/configuring-logging.html\n\"You can disable the automatic log rotation at startup by changing the setting\u00a0SOLR_LOG_PRESTART_ROTATION found in\u00a0bin/solr.in.sh\u00a0or\u00a0bin/solr.in.cmd\u00a0to false.\" .\n\nI think this feature will be broken by the commit because in the default log4j2.xml enables this by default\u00a0<OnStartupTriggeringPolicy />\n\nSo I think we should just remove this from the log4j2.xml and let\u00a0SOLR_LOG_PRESTART_ROTATION and the start script to it's rotation . Does that make sense Jan H\u00f8ydahl ? ",
            "id": "comment-16414402"
        },
        {
            "date": "2018-03-26T20:25:05+0000",
            "author": "Cassandra Targett",
            "content": "The website https://logging.apache.org/log4j/2.x/ has 2.x and not 2.11\n\nHeh, there's a trick!\n\nThis might break ivy-versions.properties, but one option is to change the versions to something like this:\n\n\norg.log4j.major.version = 2\norg.log4j.minor.version = 11.0\norg.apache.logging.log4j.version = ${org.log4j.major.version}.${org.log4j.minor.version}\n\n\n\nThen you could change the line in the Ref Guide to something like:\n\n\nSolr uses http://logging.apache.org/log4j/{ivy-log4j-version}.x/[Log4J] for logging which is configured using `server/resources/log4j2.xml`.\n\n\n\n(This would put the right link to docs, but omit the version in user display for the link.)\n\nThe goal of SOLR-12118 was to get links to 3rd party documentation in line with versions being used in Solr without per-release manual review/intervention. If, however, doing it is a burden or breaks other things, we can remove the variable from the URL and only use it in the display text for the link, like this:\n\n\nSolr uses http://logging.apache.org/log4j/[Log4J {ivy-log4j-version}] for logging which is configured using `server/resources/log4j2.xml`.\n\n\n\nIt would be OK if we dropped the minor version in that case, and it preserves the spirit of the variable. Users going to that link would have the information they need to know (from the link they just clicked on) the version of docs to look at should the Log4J community choose to publish their docs by more complete version again. If you think this is preferable, Varun Thacker, it's fine with me to change it this way instead. ",
            "id": "comment-16414474"
        },
        {
            "date": "2018-03-26T20:37:52+0000",
            "author": "Ralph Goers",
            "content": "FWIW, Log4j 2 has every release available on the web site. The most current is the link you referenced above - http://logging.apache.org/log4j/2.x/ - but if you want to reference a specific version of the website you can do it by using the specific release number such as http://logging.apache.org/log4j/log4j-2.11.0/. ",
            "id": "comment-16414486"
        },
        {
            "date": "2018-03-26T20:39:33+0000",
            "author": "Hoss Man",
            "content": "if you want to reference a specific version of the website you can do it by using the specific release number such as http://logging.apache.org/log4j/log4j-2.11.0/.\n\nding ding ding! ... that's the winner.  thank's for pointing out that URL structure Ralph, i had looked for something like that a while back but couldn't find it. ",
            "id": "comment-16414488"
        },
        {
            "date": "2018-03-26T20:58:02+0000",
            "author": "Steve Rowe",
            "content": "Java9 builds on Policeman Jenkins have been erroring out because of a limitation of the Java code that handles ant check-lib-versions: the InterpolatedProperties class does not handle recursive interpolation, i.e. properties that are not of the form /org/name that refer to other properties.  E.g. from https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/1596/:\n\n\nBUILD FAILED\n/home/jenkins/workspace/Lucene-Solr-7.x-Linux/build.xml:633: The following error occurred while executing this line:\n/home/jenkins/workspace/Lucene-Solr-7.x-Linux/build.xml:122: The following error occurred while executing this line:\n/home/jenkins/workspace/Lucene-Solr-7.x-Linux/lucene/build.xml:108: The following error occurred while executing this line:\n/home/jenkins/workspace/Lucene-Solr-7.x-Linux/lucene/tools/custom-tasks.xml:108: java.lang.IllegalArgumentException: named capturing group is missing trailing '}'\n\tat java.base/java.util.regex.Matcher.appendExpandedReplacement(Matcher.java:1052)\n\tat java.base/java.util.regex.Matcher.appendReplacement(Matcher.java:908)\n\tat org.apache.lucene.dependencies.InterpolatedProperties.interpolate(InterpolatedProperties.java:64)\n\tat org.apache.lucene.dependencies.InterpolatedProperties.load(InterpolatedProperties.java:50)\n\tat org.apache.lucene.validation.LibVersionsCheckTask.collectDirectDependencies(LibVersionsCheckTask.java:385)\n\tat org.apache.lucene.validation.LibVersionsCheckTask.execute(LibVersionsCheckTask.java:220)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.taskdefs.Sequential.execute(Sequential.java:68)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.taskdefs.MacroInstance.execute(MacroInstance.java:398)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:390)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:411)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:442)\n\tat org.apache.tools.ant.taskdefs.SubAnt.execute(SubAnt.java:302)\n\tat org.apache.tools.ant.taskdefs.SubAnt.execute(SubAnt.java:221)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:390)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:411)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:442)\n\tat org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:390)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:411)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:809)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\n\nThis ^^ was triggered by this line:\n\n\norg.apache.logging.log4j.version = ${org.log4j.major.version}.${org.log4j.minor.version}\n\n\n\nIIUC, the value will be replaced by a literal, in which case the limitation disallowing recursive property interpolation will no longer be an issue. ",
            "id": "comment-16414537"
        },
        {
            "date": "2018-03-26T21:13:43+0000",
            "author": "Varun Thacker",
            "content": "Follow-up patch2:\n\n\tThanks Ralph for pointing out the url structure. Patch merges and minor and major versions again and updates the ref guide to reflect the correct url structure ( untested )\n\tTo keep the behaviour of SOLR_LOG_PRESTART_ROTATION constant ( one could turn it off ) remove <OnStartupTriggeringPolicy /> from the default log4j2.xml ( tested manually )\n\n ",
            "id": "comment-16414576"
        },
        {
            "date": "2018-03-26T21:33:57+0000",
            "author": "Varun Thacker",
            "content": "Thanks Steve Rowe for pointing out.\n\nI need to fix a few more things that were missed out in the\u00a0initial\u00a0commit\u00a0There are still log4j.properties files in some of our tests.\u00a0\n\nI'll take a couple of hours and put a more thorough patch with all the fixes in one go\u00a0 ",
            "id": "comment-16414594"
        },
        {
            "date": "2018-03-26T21:47:49+0000",
            "author": "Erick Erickson",
            "content": "Did the follow-up patch make it to 7x? (everybody's a critic).... ",
            "id": "comment-16414612"
        },
        {
            "date": "2018-03-26T22:25:49+0000",
            "author": "Varun Thacker",
            "content": "Koji Sekiguchi while upgrading log4j.properties for\u00a0prometheus https://github.com/apache/lucene-solr/blob/master/solr/contrib/prometheus-exporter/conf/log4j.properties\u00a0, I see that it only has a CONSOLE appender . Any reason why it doesn't have a default file based appender as well ? If you are fine I plan on using https://github.com/apache/lucene-solr/blob/master/solr/server/resources/log4j2.xml\u00a0configuration for\u00a0prometheus as well in my subsequent patch.\n\n\u00a0\n\nThe second change I plan on making is while converting the log4j.properties from the test package to log4j2.xml use\u00a0SYSTEM_ERR instead of\u00a0SYSTEM_OUT ( what it uses currently )\n\nThe reason being all test packages today use\u00a0SYSTEM_ERR\u00a0( https://github.com/apache/lucene-solr/blob/branch_7_3/solr/solrj/src/test-files/log4j.properties#L5\u00a0for example ) and this seems to be the only package using\u00a0SYSTEM_OUT .\u00a0 Maybe it doesn't make a difference but atleast we'll standardize it ",
            "id": "comment-16414667"
        },
        {
            "date": "2018-03-26T22:37:35+0000",
            "author": "Shawn Heisey",
            "content": "I wonder if the changelog should indicate that this is a server-side change only, that it will not require them to update the logging in their projects that use SolrJ. ",
            "id": "comment-16414698"
        },
        {
            "date": "2018-03-26T22:39:48+0000",
            "author": "Varun Thacker",
            "content": "I wonder if the changelog should indicate that this is a server-side change only, that it will not require them to update the logging in their projects that use SolrJ\n+1 . The more clear we are the better. I'll fold that change into the patch I'm currently working on ",
            "id": "comment-16414700"
        },
        {
            "date": "2018-03-26T22:56:22+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Varun Thacker my intention with the SOLR_LOG_PRESTART_ROTATION feature was\u00a0as a workaround due to lacking startup rotation in log4j1. See my comment in SolrCLI line 4312:\nRotates solr.log before starting Solr. Mimics log4j2 behavior\nSince the current workaround is less than optimal, e.g. you need to update numbers in bin/solr script whenever you reconfigure log4j \u2013 I think we should start using log4j2's OnStartupTriggeringPolicy and simply delete the whole workaround, at least the SolrCLI#rotateSolrLogs, perhaps also the #removeOldSolrLogs since\u00a0it tries to delete timestamped\u00a0solr_log_* files which\u00a0were produced by an older version of Solr but not anymore. ",
            "id": "comment-16414724"
        },
        {
            "date": "2018-03-26T23:01:50+0000",
            "author": "Varun Thacker",
            "content": "Makes a lot of sense.\u00a0 I'm happy to tackle that but maybe we should break it into a separate Jira ? I say that because there could be someone who turned off\u00a0SOLR_LOG_PRESTART_ROTATION and if we remove this property altogether and with the latest changes will have to achieve the same by tweaking the log4j.xml file\u00a0 ",
            "id": "comment-16414735"
        },
        {
            "date": "2018-03-26T23:07:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 890dcb7d94d4932ded6186f393bdf280354ca647 in lucene-solr's branch refs/heads/branch_7x from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=890dcb7 ]\n\nSOLR-7887: Log4J2 upgrade fixes\n\n(cherry picked from commit bea6e23) ",
            "id": "comment-16414741"
        },
        {
            "date": "2018-03-26T23:08:20+0000",
            "author": "Varun Thacker",
            "content": "Did the follow-up patch make it to 7x? (everybody's a critic)....\nDone. Thanks for pointing it out. It forgot to push it after merging locally\u00a0 ",
            "id": "comment-16414742"
        },
        {
            "date": "2018-03-26T23:19:04+0000",
            "author": "Varun Thacker",
            "content": "Updated patch for the 2nd round of followups\n\n\tPatch merges and minor and major versions split for the log4j ivy version file and updates the ref guide to reflect the correct url structure\n\tThe prometheus contrib now uses log4j2.xml files ( needed for log4j2 ) instead of the older log4j.properties\n\n\n\nJava9 precommit passes with \"ant precommit -Dis.jenkins.build=true\"\n\nTom\u00e1s had a comment on the reviewboard which we never addressed : \"Right. And we already have lines for forbidding 1.2 jog4j and JUL. My point is that we need to add the new packages there. See file \"solr.txt\" under lucene/tools/forbiddenApis\n\nI'll look into that and if we need any changes I'll tackle that in a separate Jira\n\n- To keep the behaviour of SOLR_LOG_PRESTART_ROTATION consistent ( one could turn it off ) removed <OnStartupTriggeringPolicy /> from the default log4j2.xml as SOLR_LOG_PRESTART_ROTATION takes care of it\n\nNot doing this anymore after Jan's comments. Let's remove SOLR_LOG_PRESTART_ROTATION\u00a0as suggested. I'll create a separate Jira for that so that we can call it out in the CHANGES entry explicitly\u00a0 ",
            "id": "comment-16414760"
        },
        {
            "date": "2018-03-26T23:19:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bd429347b19ccee9eb8a72ad182f4332dad5eef4 in lucene-solr's branch refs/heads/master from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bd42934 ]\n\nSOLR-7887: Log4J2 upgrade fixes part 2 ",
            "id": "comment-16414761"
        },
        {
            "date": "2018-03-26T23:25:50+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 003be2da436f82abc0758e8aa0c69ec9e5fdc417 in lucene-solr's branch refs/heads/branch_7x from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=003be2d ]\n\nSOLR-7887: Log4J2 upgrade fixes part 2\n\n(cherry picked from commit bd42934) ",
            "id": "comment-16414769"
        },
        {
            "date": "2018-03-27T00:36:51+0000",
            "author": "Varun Thacker",
            "content": "Jan H\u00f8ydahl I created\u00a0SOLR-12144 to track the work to remove\u00a0SOLR_LOG_PRESTART_ROTATION\u00a0 ",
            "id": "comment-16414824"
        },
        {
            "date": "2018-03-27T01:30:30+0000",
            "author": "Shawn Heisey",
            "content": "Here's some data for the discussion about what file size to use to rotation:\n\nI used \"tail\" to give me the last 4194304 bytes of a log, and then the last 33554432 bytes of the same log.  It is the primary online server for our installation, serving as a shard aggregator for an index that spans two servers, with seven shards.\n\nThe query rate for the last fifteen minutes is 0.73 per second on one handler, and 0.06 per second on another handler.  The load balancer sends pings pretty frequently.  I did not check the query rate on the handler that the ping handler uses for its queries.  It is a separate handler so that those queries do not pollute the statistics for the \"real\" handlers.\n\nThe 4MB log covered times from 18:51:26.552 to 18:57:58.139, about six and a half minutes.  The 32MB log covered times from 18:01:23.375 to 18:58:13.886, which is almost an hour.\n\nKeep in mind that the query rate on this system is VERY VERY low.  Users that are handling 20-100 queries per second on each server are going to have a LOT more data logged in a given time period.\n\nMy queries tend to be REALLY large.  One of them that I just looked at had nearly 4000 bytes of URL parameters, and I have seen some approaching 20000 bytes.  When a query like this happens, it typically gets logged four times by each server.  The online primary system with the aggregating core has three shards, plus has to log once at the end for the aggregating core, and the other system has four shards.\n\nIn my logging config, I set log4j.appender.file.MaxFileSize to 2GB.  Which is a lot larger than I think Solr should use by default, but not outrageous for a really busy server.  I make it that big so that I don't have to look through a lot of logs to find info for a query that somebody had a problem with yesterday.\n\nIt would be really nice if the size could be configured in solr.in.sh.\n\nOn the subject of gzipping the rotated logs:  I like log rotation systems that take care of compressing old logs for me.  How about we do that change in master?  A new major version is a great time for a change like that. ",
            "id": "comment-16414870"
        },
        {
            "date": "2018-03-27T02:07:51+0000",
            "author": "Erick Erickson",
            "content": "SOLR-11934 is another place to discuss this I think. There are several thousand places we log messages, I suspect a lot of them could have their level changed, be removed, whatever.\n\nOr maybe we just need to get better about recommending WARN level (or even default to WARN?).\n\nBut that discussion is for 11934..... ",
            "id": "comment-16414901"
        },
        {
            "date": "2018-03-27T02:14:16+0000",
            "author": "Varun Thacker",
            "content": "How about we do that change in master? A new major version is a great time for a change like that.\n+1 to wait for 8.0 for that . It's a one line change so maybe we should create a separate\u00a0Jira for 8.0 and mark it as a blocker and when the release comes closer\u00a0address\u00a0it. That way we'll manage to keep the files in sync till then ",
            "id": "comment-16414905"
        },
        {
            "date": "2018-04-02T17:17:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 41a1cbe2c337d2415a0e52415f43c7aba1059fb8 in lucene-solr's branch refs/heads/master from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=41a1cbe ]\n\nSOLR-7887: Fix logging filePattern to use solr.log.X format ",
            "id": "comment-16422798"
        },
        {
            "date": "2018-04-04T01:57:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8d9d821c3416136ef3830e48e2d15fefbf3ef058 in lucene-solr's branch refs/heads/branch_7x from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8d9d821 ]\n\nSOLR-7887: Fix logging filePattern to use solr.log.X format\n\n(cherry picked from commit 41a1cbe) ",
            "id": "comment-16424856"
        },
        {
            "date": "2018-04-04T17:01:35+0000",
            "author": "Steve Rowe",
            "content": "Reopening to address Jenkins Maven builds' compilation failures for solr-core module, e.g. from https://builds.apache.org/job/Lucene-Solr-Maven-7.x/172/:\n\n\n     [mvn] [INFO] Error for project: Apache Solr Core (during install)\n     [mvn] [INFO] ------------------------------------------------------------------------\n     [mvn] [INFO] Compilation failure\n     [mvn] cannot access org.apache.yetus.audience.InterfaceAudience\n     [mvn]   class file for org.apache.yetus.audience.InterfaceAudience not found\n     [mvn] \n     [mvn] [INFO] ------------------------------------------------------------------------\n     [mvn] [INFO] For more information, run Maven with the -e switch\n     [mvn] [INFO] ------------------------------------------------------------------------\n     [mvn] [INFO] BUILD ERRORS\n     [mvn] [INFO] ------------------------------------------------------------------------\n     [mvn] [INFO] Total time: 53 seconds\n     [mvn] [INFO] Finished at: Wed Apr 04 00:54:42 UTC 2018\n     [mvn] [INFO] Final Memory: 297M/1626M\n     [mvn] [INFO] ------------------------------------------------------------------------\n\nBUILD FAILED\n/x1/jenkins/jenkins-slave/workspace/Lucene-Solr-Maven-7.x/build.xml:679: The following error occurred while executing this line:\n: Java returned: 1\n\n ",
            "id": "comment-16425862"
        },
        {
            "date": "2018-04-04T18:43:47+0000",
            "author": "Steve Rowe",
            "content": "I pulled out the yetus audience-annotations bits from the last patch on this issue that had them (from March 2nd), then tested that maven compilation worked with it, and that precommit was happy. All fine.\n\nBut something in the patch caught my eye:\n\ndiff --git a/lucene/common-build.xml b/lucene/common-build.xml\nindex 4fa59ac936..e13f09bd6d 100644\n--- a/lucene/common-build.xml\n+++ b/lucene/common-build.xml\n@@ -187,7 +187,8 @@\n   <property name=\"javadoc.noindex\" value=\"true\"/>\n \n   <property name=\"javadoc.doclint.args\" value=\"-Xdoclint:all -Xdoclint:-missing\"/>\n-  <property name=\"javac.doclint.args\" value=\"-Xdoclint:all/protected -Xdoclint:-missing\"/>\n+  <!---proc:none was added because of LOG4J2-1925 / JDK-8186647 -->\n+  <property name=\"javac.doclint.args\" value=\"-Xdoclint:all/protected -Xdoclint:-missing -proc:none\"/>\n   \n   <!-- Javadoc classpath -->\n   <path id=\"javadoc.classpath\">\n\n\nThis explains why Ant compilation works now (and didn't in earlier versions of the patch without this change): -proc:none turns off annotation processing, and the compilation failures are due to ZooKeeper's use of (Yetus) annotations.\n\nSo in SOLR-7887-fix-maven-compilation.patch I added this arg to the maven-compiler-plugin config, and now Maven compilation succeeds too.\n\nI'll commit this patch shortly. ",
            "id": "comment-16425998"
        },
        {
            "date": "2018-04-04T18:48:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 27e5c8dd31c027e358cd1a780ba155ed7e5822bb in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=27e5c8d ]\n\nSOLR-7887: fix maven compilation by turning off annotation processing ",
            "id": "comment-16426000"
        },
        {
            "date": "2018-04-04T18:48:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ef902f9d8e5808cb874604990c7df1230e51f28c in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ef902f9 ]\n\nSOLR-7887: fix maven compilation by turning off annotation processing ",
            "id": "comment-16426001"
        },
        {
            "date": "2018-04-04T18:51:33+0000",
            "author": "Steve Rowe",
            "content": "I'll leave the issue open until Jenkins Maven builds succeed. ",
            "id": "comment-16426004"
        },
        {
            "date": "2018-04-05T18:10:38+0000",
            "author": "Steve Rowe",
            "content": "Each of the master and branch_7x Maven jobs have succeeded twice, so resolving this issue again. ",
            "id": "comment-16427380"
        },
        {
            "date": "2018-04-09T22:10:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7009f1cade6bd959d920aaaf819129b939e2f97a in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7009f1c ]\n\nSOLR-12205,SOLR-7887: fix maven javadoc generation by removing unrecognized annotation processing directive ",
            "id": "comment-16431381"
        },
        {
            "date": "2018-04-09T22:10:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a12d3988740eed3932d92ae28f60449c2c564f53 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a12d398 ]\n\nSOLR-12205,SOLR-7887: fix maven javadoc generation by removing unrecognized annotation processing directive ",
            "id": "comment-16431383"
        }
    ]
}