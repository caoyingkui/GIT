{
    "id": "SOLR-175",
    "title": "Implement hl.formatter=interleave",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "highlighter"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Implement hl.formatter=interleave\nhttp://www.nabble.com/Better-highlighting-fragmenter-tf2916742.html#a8154466\n\nFrom Wunder:\n'''We tried several APIs and decided that the best was an array of\nString with the odd elements containing the strings that needed\nhighlighting. That made it really easy to step through and wrap\nhighlighted stuff with the right markup, while properly escaping\nany angle brackets in the source text. '''",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mike Klaas",
            "id": "comment-12477408",
            "date": "2007-03-02T18:53:08+0000",
            "content": "One thing to consider here is that every so often there are rumblings of new highlighter implementations in Lucene--especially ones that support proper highlighting of phrase/span queries (e.g. LUCENE-794).\n\nThat said, I don't think anything about that particular implementation would preclude this output format (assuming we can work in support for phrase highlights), but it is definitely something to keep in mind when adding new highlighter functionality. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12556903",
            "date": "2008-01-08T14:15:00+0000",
            "content": "We may want to use an \"expandable\" format that we can add new tags to later\n since some people have expressed a desire to get the offsets into the source text.\n\nSo instead of [\"foo\",\"bar\",\"baz\"] \n[  \n{s=\"foo\",off=156}\n, \n{s=\"bar\",off=...}\n, \n{s=\"baz\", off=...}\n ]\n\nThe other alternative would be parallel arrays (and move the tags for expandibility up a level)... so for each fragment:\n{  text=[\"foo\",\"bar\",\"baz\"]\n   offsets=[156,...,...]\n    score=1.414\n} "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13580216",
            "date": "2013-02-17T17:01:40+0000",
            "content": "Cleaning up old JIRAs, re-open if necessary. I think this can be done in 4.x? "
        }
    ]
}