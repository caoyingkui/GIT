{
    "id": "SOLR-2266",
    "title": "java.lang.ArrayIndexOutOfBoundsException in field cache when using a tdate field in a boost function with rord()",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "I have been testing a switch to long and tdate instead of int and date fields in the schema.xml for our Drupal integration.  This indexes fine, but search fails with a 500 error.\n\n\nINFO: [d7] webapp=/solr path=/select params={spellcheck=true&facet=true&facet.mincount=1&indent=1&spellcheck.q=term&json.nl=map&wt=json&rows=10&version=1.2&fl=id,entity_id,entity,bundle,bundle_name,nid,title,comment_count,type,created,changed,score,path,url,uid,name&start=0&facet.sort=true&q=term&bf=recip(rord(created),4,19,19)^200.0} status=500 QTime=4 \nDec 5, 2010 11:52:28 AM org.apache.solr.common.SolrException log\nSEVERE: java.lang.ArrayIndexOutOfBoundsException: 39\n        at org.apache.lucene.search.FieldCacheImpl$StringIndexCache.createValue(FieldCacheImpl.java:721)\n        at org.apache.lucene.search.FieldCacheImpl$Cache.get(FieldCacheImpl.java:224)\n        at org.apache.lucene.search.FieldCacheImpl.getStringIndex(FieldCacheImpl.java:692)\n        at org.apache.solr.search.function.ReverseOrdFieldSource.getValues(ReverseOrdFieldSource.java:61)\n        at org.apache.solr.search.function.TopValueSource.getValues(TopValueSource.java:57)\n        at org.apache.solr.search.function.ReciprocalFloatFunction.getValues(ReciprocalFloatFunction.java:61)\n        at org.apache.solr.search.function.FunctionQuery$AllScorer.<init>(FunctionQuery.java:123)\n        at org.apache.solr.search.function.FunctionQuery$FunctionWeight.scorer(FunctionQuery.java:93)\n        at org.apache.lucene.search.BooleanQuery$BooleanWeight.scorer(BooleanQuery.java:297)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:250)\n        at org.apache.lucene.search.Searcher.search(Searcher.java:171)\n        at org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1101)\n        at org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:880)\n        at org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:341)\n        at org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:182)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:195)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:131)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1316)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:338)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:241)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n        at com.acquia.search.HmacFilter.doFilter(HmacFilter.java:62)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)\n        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)\n        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)\n        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)\n        at org.mortbay.jetty.Server.handle(Server.java:285)\n        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)\n        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:821)\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:513)\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)\n        at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:226)\n        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)\n\n\n\nThe exception goes away if I remove the boost function param bf=recip(rord(created),4,19,19)^200.0\n\nOmitting the recip() doesn't help, so just bf=rord(created)^200.0 still causes the exception.\n\nIn this schema, \n\n\n <field name=\"created\" type=\"tdate\" indexed=\"true\" stored=\"true\"/>\n\n\n\nIn the prior schema:\n\n\n <field name=\"created\" type=\"date\" indexed=\"true\" stored=\"true\"/>\n\n\n\nThis seems somewhat related to:  SOLR-324 which is marked as fixed.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12967022",
            "date": "2010-12-05T21:20:07+0000",
            "content": "OK, here's my guess: it's probably due to multiple indexed values per field value.  ord/rord uses the StringIndex to get the ord values, which can't handle multiple indexed tokens per field value.\n\nThe \"tdate\" type has a precisionStep > 0, meaning it will index multiple values per field value to speed up range queries.\nIf you don't need faster range queries on this type, then use \"date\" instead of \"tdate\".\n\nBut the ideal fix here is to eliminate the use of ord/rord since they also use up more memory... sorting by \"created\" will instantiate a per-segment long[] FieldCache entry.\nIt would be nice if that could be reused for the function queries too.  This is the case if you use ms().\nhttp://wiki.apache.org/solr/FunctionQuery#ms "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539481",
            "date": "2016-10-02T01:37:10+0000",
            "content": "The underlying components have changed multiple times. If something like this is seen again, a new case can be opened. "
        }
    ]
}