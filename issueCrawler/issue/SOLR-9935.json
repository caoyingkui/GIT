{
    "id": "SOLR-9935",
    "title": "When hl.method=unified add support for hl.fragsize param",
    "details": {
        "components": [
            "highlighter"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.4"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "In LUCENE-7620 the UnifiedHighlighter is getting a BreakIterator that allows it to support the equivalent of Solr's hl.fragsize.  So lets support this on the Solr side.",
    "attachments": {
        "SOLR_9935_UH_fragsize.patch": "https://issues.apache.org/jira/secure/attachment/12845948/SOLR_9935_UH_fragsize.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-06T06:04:27+0000",
            "author": "David Smiley",
            "content": "Here's a patch.  The default fragsize chosen is 70 as that is the same used when the regex fragmenter (of the original Highlighter) is used in Solr.  These are both similar in that you typically want to shoot for a passage about a sentence in length.\n\nNote the regex fragmenter has a \"slop\" feature that is 60% of the fragsize... this is not (yet) supported by the UH's LengthGoalBreakIterator.\n\nWhen LUCENE-7620 lands (this weekend?), I plan to commit this immediately after. ",
            "id": "comment-15803683"
        },
        {
            "date": "2017-01-07T19:33:49+0000",
            "author": "David Smiley",
            "content": "Updated patch to account for API change in LUCENE-7620. Clarified the test a bit and some other related test methods.  I'll commit later today.  In CHANGES.txt I'll remove the note about UH not supporting hl.fragsize (yay).\n\nFeatures in the original highlighter that are not in the UH (as seen through Solr) are:\n\n\tinfluence passage scoring from boosts in the query\n\thl.mergeContiguous defaults to false.  In the UH, DefaultPassageFormatter always merges contiguous passages.\n\thl.alternateField and related options\n\thl.maxMultiValueToExamine (a performance circuit-breaker). Doesn't seem as pertinent to the UH as the original Highlighter.\n\tregex based Passage delineation option\n\thl.preserveMulti the original Highlighter supports \"true\" (false by default) but the UH doesn't do this.\n\n ",
            "id": "comment-15808026"
        },
        {
            "date": "2017-01-08T04:33:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 570880d3acb45c925e8dc77172e0725ab8ba07b8 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=570880d ]\n\nSOLR-9935: Add hl.fragsize support when using the UnifiedHighlighter ",
            "id": "comment-15808700"
        },
        {
            "date": "2017-01-08T04:34:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d195c2525b00ef6e12b88f838167475feb5d2d19 in lucene-solr's branch refs/heads/branch_6x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d195c25 ]\n\nSOLR-9935: Add hl.fragsize support when using the UnifiedHighlighter\n\n(cherry picked from commit 570880d) ",
            "id": "comment-15808704"
        },
        {
            "date": "2017-01-17T05:48:32+0000",
            "author": "David Smiley",
            "content": "While documenting the highlighters in the Solr Ref Guide, I overlooked that hl.fragsize of 0 is a special value to mean don't to any fragmenting.  I should add this as a special case to use the WholeBreakIterator.  Jim Ferenczi is it too late for 6.4? ",
            "id": "comment-15825492"
        },
        {
            "date": "2017-01-17T09:01:17+0000",
            "author": "Jim Ferenczi",
            "content": "I guess you can David. I'll create the first RC later today but if you feel that this change is safe you can push it now. ",
            "id": "comment-15825674"
        },
        {
            "date": "2017-01-17T13:08:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ed513fdee77b95379bed8f8d5f369fb0393fd364 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ed513fd ]\n\nSOLR-9935: UnifiedHighlighter, when hl.fragsize=0 don't do fragmenting ",
            "id": "comment-15826014"
        },
        {
            "date": "2017-01-17T13:09:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9224065cb2e07b8918041ebac8795bddfba71ac6 in lucene-solr's branch refs/heads/branch_6x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9224065 ]\n\nSOLR-9935: UnifiedHighlighter, when hl.fragsize=0 don't do fragmenting\n\n(cherry picked from commit ed513fd) ",
            "id": "comment-15826016"
        },
        {
            "date": "2017-01-17T13:23:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bbe4b08cc1fb673d0c3eb4b8455f23ddc1364124 in lucene-solr's branch refs/heads/branch_6_4 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bbe4b08 ]\n\nSOLR-9935: UnifiedHighlighter, when hl.fragsize=0 don't do fragmenting\n\n(cherry picked from commit 9224065) ",
            "id": "comment-15826039"
        },
        {
            "date": "2018-03-14T14:13:29+0000",
            "author": "Mohsen",
            "content": "Is this really resolved as of Solr 6.4? I tested with both Solr 6.4.1 and Solr 7.1 installations and none of them recognize hl.fragsize when unified method is used. ",
            "id": "comment-16398647"
        },
        {
            "date": "2018-03-15T20:27:38+0000",
            "author": "David Smiley",
            "content": "Yes it's resolved. What not obvious is that the semantics are not identical between the UH and the original Highlighter (and I forget what the FVH does here). The OH breaks at the word break following hl.fragsize chars, whereas the UH does so at the sentence (not word) break. Technically the UH's choice is configurable via hl.bs.type but as a practical matter it probably doesn't\u00a0make sense to use WORD or CHAR, since then the highlights\u00a0would never contain any words to the left of the highlighted word (based on how the UH uses the underlying BreakIterator).\n\nFragmenting is a rather difficult problem, I've found. \u00a0It's hard to satisfy everyone's desires. ",
            "id": "comment-16401070"
        }
    ]
}