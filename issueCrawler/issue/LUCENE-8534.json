{
    "id": "LUCENE-8534",
    "title": "Another case of Polygon tessellator going into an infinite loop",
    "details": {
        "components": [
            "modules/sandbox"
        ],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "affect_versions": "7.6,                                            master (8.0)",
        "labels": "",
        "priority": "Blocker",
        "type": "Bug"
    },
    "description": "Related to\u00a0LUCENE-8454, another case where tesselator\u00a0never returns when processing a polygon.",
    "attachments": {
        "bigPolygon.wkt": "https://issues.apache.org/jira/secure/attachment/12944702/bigPolygon.wkt",
        "LUCENE-8534.patch": "https://issues.apache.org/jira/secure/attachment/12944314/LUCENE-8534.patch",
        "image-2018-10-19-12-25-07-849.png": "https://issues.apache.org/jira/secure/attachment/12944703/image-2018-10-19-12-25-07-849.png"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16656428",
            "author": "Ignacio Vera",
            "content": "I had a go by comparing the result when not using the Morton optimisation and it seems the problem comes when checking if a candidate is ear\u00a0in Morton encoding.\n\nChanging conditions from >= to > seems to fix the problem and gives the same tessellation in both cases. Not sure if it is correct as I don't fully understand the maths yet but worthy sharing it.\u00a0\n\n\u00a0 ",
            "date": "2018-10-19T08:11:59+0000"
        },
        {
            "id": "comment-16656601",
            "author": "Ignacio Vera",
            "content": "Nope, I am trying with some big polygons and I still get into the same trouble :\n\n\u00a0\n\n ",
            "date": "2018-10-19T10:26:31+0000"
        },
        {
            "id": "comment-16657814",
            "author": "Ignacio Vera",
            "content": "I had another go and now I can easily reproduce the issue:\n\npublic void testSmallPolygonTessellation() throws Exception {\n  Polygon poly = GeoTestUtil.createRegularPolygon(0.0, 0.0, 1, 2500);\n  assertTrue(Tessellator.tessellate(poly).size() > 0);\n}\n\nNote that I am creating very tiny polygon with quite a lot of points. I think the logic expect all points to have different Morton values which is not the case here. Maybe the definition of point equality needs to be changed.\n\nNicholas Knize, WDYT?\n\n\u00a0\n\n\u00a0 ",
            "date": "2018-10-20T10:07:28+0000"
        },
        {
            "id": "comment-16663911",
            "author": "Ignacio Vera",
            "content": "Nicholas Knize attached is a patch with some findings:\n\n1.- Method Tesellator#isIntersectingPolygon seems incorrect as it only checks the intersection with the first edge. This seems to cause creation of invalid diagonals when splitting the polygon.\n\n2.- Method Tesellator#cureLocalIntersections produces incorrect ears. I think it needs to call the method above.\n\n3.- when splitting a polygon, it needs to resorted if using Morton indexing. It seems that for doing that the linked list needs to be reseted for Z values.\n\n\u00a0\n\nThis fixes the issues I had a\u00a0visual inspection of the tessellation and it is looking good.\n\n\u00a0 ",
            "date": "2018-10-25T15:28:39+0000"
        },
        {
            "id": "comment-16664370",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 17s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 15s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 15s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 15s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 15s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 15s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   4m 56s \n  sandbox in the patch passed.  \n\n\n  \n   \n  10m 18s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8534 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12945606/LUCENE-8534.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 8d10939 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/111/testReport/ \n\n\n modules \n C: lucene/sandbox U: lucene/sandbox \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/111/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-10-25T22:40:34+0000"
        },
        {
            "id": "comment-16672171",
            "author": "Nicholas Knize",
            "content": "Sorry for the delay on this Ignacio Vera and thanks for addressing these issues. The patch look good to me.  ",
            "date": "2018-11-01T20:45:37+0000"
        },
        {
            "id": "comment-16672639",
            "author": "ASF subversion and git services",
            "content": "Commit 6ae9aa2a320420537f85908a899dbb995f7802e4 in lucene-solr's branch refs/heads/master from iverase\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6ae9aa2 ]\n\nLUCENE-8534: Fix incorrect computation for triangles intersecting polygon edges in shape tessellation ",
            "date": "2018-11-02T06:42:12+0000"
        },
        {
            "id": "comment-16672640",
            "author": "ASF subversion and git services",
            "content": "Commit e0133e93af0dfc13d31903f0a82f33573e0e438f in lucene-solr's branch refs/heads/branch_7x from iverase\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e0133e9 ]\n\nLUCENE-8534: Fix incorrect computation for triangles intersecting polygon edges in shape tessellation ",
            "date": "2018-11-02T06:42:39+0000"
        }
    ]
}