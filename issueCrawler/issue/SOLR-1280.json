{
    "id": "SOLR-1280",
    "title": "Fields used update processor",
    "details": {
        "affect_versions": "None",
        "status": "Reopened",
        "fix_versions": [
            "6.0"
        ],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "When dealing with highly heterogeneous documents with different fields per document, it can be very useful to know what fields are present on the result documents from a search.  For example, this could be used to determine which fields make the best facets for a given query.",
    "attachments": {
        "SOLR-1280.patch": "https://issues.apache.org/jira/secure/attachment/12538226/SOLR-1280.patch",
        "FieldsUsedUpdateProcessorFactory.java": "https://issues.apache.org/jira/secure/attachment/12413481/FieldsUsedUpdateProcessorFactory.java"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erik Hatcher",
            "id": "comment-12731122",
            "date": "2009-07-14T20:51:28+0000",
            "content": "This is just a quick implementation to demonstrate a field being added dynamically which lists all the fields on a given document.\n\nTODO: Make this configurable to specify the field name and perhaps list fields (by pattern, possibly) to include or exclude. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13060824",
            "date": "2011-07-06T20:43:42+0000",
            "content": "Updated version that allows configuration of \"fields used\" field and a field name regex for matching "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13060826",
            "date": "2011-07-06T20:46:12+0000",
            "content": "In this update the config can be something like this:\n\n\n    <updateRequestProcessorChain name=\"fields_used\" default=\"true\">\n      <processor class=\"solr.processor.FieldsUsedUpdateProcessorFactory\">\n        <str name=\"fieldsUsedFieldName\">attribute_fields</str>\n        <str name=\"fieldNameRegex\">.*_attribute</str>\n      </processor>\n      <processor class=\"solr.LogUpdateProcessorFactory\" />\n      <processor class=\"solr.RunUpdateProcessorFactory\" />\n    </updateRequestProcessorChain>\n\n\n\nRegex was chosen to allow flexibility in matching field names for inclusion, but I think perhaps a better (more easily comprehended/configured) way would be to have a comma-separated list of field names that could contain a \"*\" for globbing, which should be about all the flexibility needed for this. "
        },
        {
            "author": "Mohammad",
            "id": "comment-13421191",
            "date": "2012-07-24T05:24:00+0000",
            "content": "This is functionality that would be useful in my project. I have no experience in java but I have studied the code and it looks straight forward and I could probably use it straight out of the box in my own solr build.  Has this been used in production by anyone? Has there been any issues? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13421434",
            "date": "2012-07-24T14:16:13+0000",
            "content": "(in a few days) I'm going to address this one by using the new script update processor and providing an example script that achieves this same thing without the need to add these classes inside Solr.\n\nMohammad - I'm unaware of this being used in production as-is, though this was distilled from the same idea being used at the Smithsonian.  Feel free to borrow this for your own application, though I won't be committing this to Solr but rather refactoring it to a script update processor example. "
        },
        {
            "author": "Mohammad",
            "id": "comment-13422044",
            "date": "2012-07-25T06:56:28+0000",
            "content": "That sounds awesome. I have found this jira issue about the script update processor (https://issues.apache.org/jira/browse/SOLR-1725) which relates to your comment. I plan to read it today and will do some further research on its uses. I will attempt to write the script myself (I am a new to solr) but I look forward to your implementation.\n\nIs there anything you can suggest I read? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13424256",
            "date": "2012-07-28T03:03:04+0000",
            "content": "Patch implementing the \"fields used\" technique using a JavaScript update processor. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13424257",
            "date": "2012-07-28T03:05:41+0000",
            "content": "I've added a patch that I'll commit to trunk and 4_x (with the script update processor chain commented out just like dedupe and langid is now) that implements this field used trick as a few (not so elegant, but straightforward standard JavaScript) lines using a regexes pattern (/attr_.*/). "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13424261",
            "date": "2012-07-28T03:39:13+0000",
            "content": "Committed a slightly updated (with CHANGES entry and more comments) version to trunk (r1366588) and 4_x (r1366589). "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13424262",
            "date": "2012-07-28T03:40:38+0000",
            "content": "Added this as a commented out pieces of a JavaScript update processor "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-14293667",
            "date": "2015-01-27T15:12:57+0000",
            "content": "Re-opening this issue to add this as a general purpose (Java-based) update processor.  As it is, what is in Solr proper now is a techproducts-specific update-script.js commented out snippet that achieves the same goal but more crudely. "
        }
    ]
}