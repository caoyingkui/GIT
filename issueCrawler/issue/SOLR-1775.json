{
    "id": "SOLR-1775",
    "title": "Replication of 300MB stops indexing for 5 seconds when syncing",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Cannot Reproduce"
    },
    "description": "When using Java replication in v1.4 and doing a sync from master to slave, the slave delays for about 5-10 seconds. When using rsync this does not occur.\n\nIs there a way to thread better or lower the priority to not impact queries when it is bringing over the index files from the master? Maybe a separate process?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12834088",
            "date": "2010-02-16T05:44:56+0000",
            "content": "The description is not clear. What do you mean by slave delays? is it that the slave does not accept any requests?\n\nThe replication has almost no perf impact on the slaves. It is an I/O bound and not CPU bound .  "
        },
        {
            "author": "Bill Bell",
            "id": "comment-12839318",
            "date": "2010-02-27T22:14:26+0000",
            "content": "I agree it is i/o bound. But when we sync using Java replication, the slave STOPS taking requests for about 5 seconds. I.E.\n\n1. The sync begins - initiated by the slave (the files are almost 1GB)\n2. The slave is still taking requests\n3. The slave completes the Sync\n4. The requests to the slave STOPS for 5 seconds.\n5. The slave continues taking requests\n\nI think the copy from one dir to another of a 1GB file is slowing down the machine - the i/o waits are like 50%. Is there a way to reduce the impact of the copy and switchover?\n "
        },
        {
            "author": "McClain Looney",
            "id": "comment-12969394",
            "date": "2010-12-08T17:52:30+0000",
            "content": "we are also seeing this behavior. it makes us very sad. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12969429",
            "date": "2010-12-08T19:07:04+0000",
            "content": "I think the copy from one dir to another of a 1GB file is slowing down the machine\n\nIt should be a move... we aren't copying are we?\nOr is the directory that the files are downloaded to on a different partition than the index? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12969446",
            "date": "2010-12-08T19:38:33+0000",
            "content": "Backup copies, but if I remember right, the java replication handler will attempt to rename - if that fails (going across drives/partitions), it does a copy? "
        },
        {
            "author": "McClain Looney",
            "id": "comment-12969455",
            "date": "2010-12-08T19:52:55+0000",
            "content": "We are definitely not holding our data on another partition  (as far as i can tell). interestingly, replication.properties seems to show that we had several failures right around the time of our last \"brown out\":\n\n#Replication details\n#Wed Dec 08 13:40:00 CST 2010\nreplicationFailedAtList=1291826400058,1291826100059,1291825800087,1291825500059,1291825200109,1291485000059,1291484700058,1291484400061,1291484100042\npreviousCycleTimeInSeconds=0\ntimesFailed=9\nindexReplicatedAtList=1291837200673,1291836911689,1291834200139,1291826700131,1291826400058,1291826100059,1291825800087,1291825500059,1291825200109,1291824302091\nindexReplicatedAt=1291837200673\nreplicationFailedAt=1291826400058\ntimesIndexReplicated=274\nlastCycleBytesDownloaded=11327528\n\nour index is about 17gb, our largest segment is 5.0gb "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539543",
            "date": "2016-10-02T02:15:27+0000",
            "content": "We no longer use this replication method. If a similar problem happens with new version of Solr, a new issue can be created reflecting modern specs. "
        }
    ]
}