{
    "id": "SOLR-7017",
    "title": "SolrParams.getParams should return 0-length array instead of null",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "It's a PITA to have code all over Solr littered with null checks for the response of SolrParams.getParams(String param).  Can't we just have it return a constant 0-length String array?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-22T15:46:25+0000",
            "author": "Noble Paul",
            "content": "yeah sure, just don't create a zero length array always ",
            "id": "comment-14287628"
        },
        {
            "date": "2015-01-22T15:55:32+0000",
            "author": "Yonik Seeley",
            "content": "A change like this has the potential to cause a lot of bugs, and it's a class that is highly likely to be used by many plugins (hence a back compat break as well).  If we did this, it should either go into 5.0, or not go into 5.x at all.  It's not the type of thing we should introduce in a point release. ",
            "id": "comment-14287636"
        },
        {
            "date": "2015-01-22T16:19:01+0000",
            "author": "David Smiley",
            "content": "If I was suggesting the reverse, making a method return null when it didn't before, I would whole-heartedly agree.  Nevertheless... fine; 6.0 it is. ",
            "id": "comment-14287667"
        },
        {
            "date": "2015-02-13T23:18:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1659709 from Erik Hatcher in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1659709 ]\n\nSOLR-7017: change web crawl usage example to use apache.org site ",
            "id": "comment-14320948"
        },
        {
            "date": "2015-02-13T23:20:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1659710 from Erik Hatcher in branch 'dev/trunk'\n[ https://svn.apache.org/r1659710 ]\n\nSOLR-7017: change web crawl usage example to use apache.org site ",
            "id": "comment-14320954"
        },
        {
            "date": "2015-02-13T23:22:04+0000",
            "author": "Erik Hatcher",
            "content": "oops, SOLR-7107 transposition mistake in my commit messages - sorry about that. ",
            "id": "comment-14320957"
        },
        {
            "date": "2016-02-29T19:59:08+0000",
            "author": "David Smiley",
            "content": "I've spent a fair amount of time recently working on this; there are many call sites to getParams and some of those gets simpler or are the same but need to change to check length > 0.  Just to review, the goals of a change here are:\n\n\tIf the code just needs to loop over the entries, then it can just do so java5 foreach loop (or otherwise) without a null check (avoid extra branch/indent & 2 lines of code).\n\t\n\t\tReduce bugs due to forgetting to check for null.  In some spots I found it could have NPE'ed due to parameters expected but not found; at least I thought so with a cursory look in some spots.\n\t\n\t\n\tif the code needs to ensure there are >0 entries then it just needs one condition, not 2 because of the null & zero len case.\n\t\n\t\tReduce bugs due to forgetting to check for both; only one is needed.\n\t\n\t\n\n\n\nSo basically, simpler code and fewer bugs.  Ease of compatibility with Java 8 Streams API too.\n\nBut this is a change with an impact to existing code alright; I can better appreciate Yonik's point now.\n\nBefore I continue and post a big patch, does this sound alright or would another approach seem better \u2013 add a getParamsNotNull() method perhaps? If we did that, perhaps further guarantee that getParams() never returns a zero-len array.  This would give a choice \u2013 the consuming code can call one or the other and it wouldn't have to check for both null and zero-len; it would pick one or the other if it needs to know if there's data.  If it doesn't need to know (just needs to loop) then it'd call the NotNull variation.  This would have a smaller impact on existing code, I think.  But it may not be bold enough  ",
            "id": "comment-15172497"
        },
        {
            "date": "2016-02-29T20:22:31+0000",
            "author": "Dean Gurvitz",
            "content": "I am only a newbie in the Solr community, but as a developer in general that sounds like a very good idea! ",
            "id": "comment-15172531"
        }
    ]
}