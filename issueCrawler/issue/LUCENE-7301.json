{
    "id": "LUCENE-7301",
    "title": "updateNumericDocValue mixed with updateDocument can cause data loss in some randomized testing",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.5.2",
            "5.6",
            "6.0.2",
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "SOLR-5944 has been held up by a while due to some extremely rare randomized test failures.\n\nIshan and I have been working on whitling those Solr test failures down, trying to create more isolated reproducable test failures, and i think i've tracked it down to a bug in IndexWriter when the client calls to updateDocument intermixed with calls to updateNumericDocValue AND IndexWriterConfig.setMaxBufferedDocs is very low (i suspect \"how low\" depends on the number of quantity/types of updates \u2013 but just got something that reproduced, and haven't tried reproducing with higher values of maxBufferedDocs and larger sequences of updateDocument / updateNumericDocValue calls.",
    "attachments": {
        "LUCENE-7301.patch": "https://issues.apache.org/jira/secure/attachment/12806266/LUCENE-7301.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15301207",
            "author": "Hoss Man",
            "date": "2016-05-26T00:32:38+0000",
            "content": "test demonstrating problem.\n\nwith the hardcoded setMaxBufferedDocs(3) this test fails on every seed i tried, but i suspect that number isn't magic and just has corollation with the number of updates in the test. "
        },
        {
            "id": "comment-15302178",
            "author": "Michael McCandless",
            "date": "2016-05-26T14:51:02+0000",
            "content": "Thanks Hoss Man I'll have a look!  Love the test name  "
        },
        {
            "id": "comment-15302187",
            "author": "Michael McCandless",
            "date": "2016-05-26T14:58:46+0000",
            "content": "OK test fails for me:\n\n\n1) testSomeSortOfWeirdFlushIssue(org.apache.lucene.index.TestNumericDocValuesUpdates)\njava.lang.AssertionError: expected:<30000000026> but was:<30000000015>\n\tat __randomizedtesting.SeedInfo.seed([CD2F76A9BDF7F337:4B62C8600B01B35]:0)\n\tat org.junit.Assert.fail(Assert.java:93)\n\tat org.junit.Assert.failNotEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:128)\n\tat org.junit.Assert.assertEquals(Assert.java:147)\n\tat org.apache.lucene.index.TestNumericDocValuesUpdates.testSomeSortOfWeirdFlushIssue(TestNumericDocValuesUpdates.java:121)\n\n\n\nIt fails on both 6.x and master ... so it's not related to index sorting (this was my first guess!). "
        },
        {
            "id": "comment-15304657",
            "author": "Hoss Man",
            "date": "2016-05-27T19:48:59+0000",
            "content": "I distilled testSomeSortOfWeirdFlushIssue down to the minimal set of operations that demonstrate the bug with only 2 docs, and cleaned up the docIds and values used so it's a bit easier to see at a glance what changed/expected for each doc...\n\n\n    writer.updateDocument       (new Term(\"id\",\"doc-1\"), doc(1, 1000000000L ));\n    writer.updateNumericDocValue(new Term(\"id\",\"doc-1\"), \"val\", 1000001111L );\n    writer.updateDocument       (new Term(\"id\",\"doc-2\"), doc(2, 2000000000L ));\n    writer.updateDocument       (new Term(\"id\",\"doc-2\"), doc(2, 2222222222L ));\n    writer.updateNumericDocValue(new Term(\"id\",\"doc-1\"), \"val\", 1111111111L );\n    writer.commit();\n\n\n\nI also added a much beefier \"testBiasedMixOfRandomUpdates\" which mixes a random assortment of addDocument, updateDocument, and updateNumericDocValue calls, using a randomly pre-assigned bias (so in one run, addDocument may happen more often then the other ops, but in the next run updateNumericDocValue may dominate the test)\n\ntestBiasedMixOfRandomUpdates falls a lot of the time, but not all of the time \u2013 seeds that fail seem to fail reliably, seeds that pass also seem to pass reliably. "
        },
        {
            "id": "comment-15304677",
            "author": "Michael McCandless",
            "date": "2016-05-27T20:02:54+0000",
            "content": "Thanks Hoss, I'm still digging here ... it seems to be something deep ... e.g. BufferedUpdatesStream. "
        },
        {
            "id": "comment-15305262",
            "author": "Michael McCandless",
            "date": "2016-05-28T09:51:26+0000",
            "content": "Phew, here's a tentative patch, I think fixing the bug.  Hoss Man can you test it with your Solr issue and see if it works?\n\nIt seems to pass your tests in this patch, and survives some distributed beasting...\n\nThe problem was in BufferedUpdatesStream: it was not applying accumulated (coalesced) updates in the correct order, and so older updates were incorrectly applying after newer ones.\n\nThis didn't matter for deleting documents, which the doc values update change \"piggy-packed\" on (if a document is to be deleted, it doesn't matter whether an earlier or later delete \"won\"), but for updates it does matter! "
        },
        {
            "id": "comment-15307704",
            "author": "Ishan Chattopadhyaya",
            "date": "2016-05-31T13:15:07+0000",
            "content": "Hoss Man can you test it with your Solr issue and see if it works?\nThanks Mike, the patch seems to have fixed the randomized failure for the SOLR-5944 that I was fighting against all this while. I shall do a bit more beasting later today to see if there are other failures. "
        },
        {
            "id": "comment-15308857",
            "author": "Ishan Chattopadhyaya",
            "date": "2016-05-31T23:29:25+0000",
            "content": "2000+ rounds of beasting the test (for the Solr integration), and they look good! +1 to the fix. "
        },
        {
            "id": "comment-15310440",
            "author": "Michael McCandless",
            "date": "2016-06-01T15:02:19+0000",
            "content": "Thanks for testing Ishan Chattopadhyaya, I'll clean up the patch and push soon. "
        },
        {
            "id": "comment-15310833",
            "author": "ASF subversion and git services",
            "date": "2016-06-01T18:27:54+0000",
            "content": "Commit 7b5d82607a491091d8cdec1269c9d6a088910528 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7b5d826 ]\n\nLUCENE-7301: ensure multiple doc values updates to one document within one update batch are applied in the correct order "
        },
        {
            "id": "comment-15310903",
            "author": "ASF subversion and git services",
            "date": "2016-06-01T19:04:30+0000",
            "content": "Commit 08949199065d863e9ed4d9080f0a42df641856f0 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0894919 ]\n\nLUCENE-7301: ensure multiple doc values updates to one document within one update batch are applied in the correct order "
        },
        {
            "id": "comment-15310907",
            "author": "Michael McCandless",
            "date": "2016-06-01T19:05:12+0000",
            "content": "Thank you Ishan Chattopadhyaya and Hoss Man! "
        },
        {
            "id": "comment-15334095",
            "author": "Steve Rowe",
            "date": "2016-06-16T16:18:12+0000",
            "content": "Reopening to backport to 6.0.2, 5.6, and 5.5.2. "
        },
        {
            "id": "comment-15334101",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T16:25:32+0000",
            "content": "Commit 05ac400f7a85c80e5f77708ac72ec4dce5e42cbb in lucene-solr's branch refs/heads/branch_5_5 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=05ac400 ]\n\nLUCENE-7301: ensure multiple doc values updates to one document within one update batch are applied in the correct order "
        },
        {
            "id": "comment-15334102",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T16:25:34+0000",
            "content": "Commit ba170fa830fdf0342e7e55aab2d8754d4d8a2135 in lucene-solr's branch refs/heads/branch_5x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ba170fa ]\n\nLUCENE-7301: ensure multiple doc values updates to one document within one update batch are applied in the correct order "
        },
        {
            "id": "comment-15334103",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T16:25:35+0000",
            "content": "Commit f121be688fab4254172c315ec21a891e8199e6e5 in lucene-solr's branch refs/heads/branch_5x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f121be6 ]\n\nLUCENE-7301: Remove misplaced 5.6 CHANGES entry "
        },
        {
            "id": "comment-15334104",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T16:25:36+0000",
            "content": "Commit e9ccc822bb8d606dba5385c409a5ea2804d6282c in lucene-solr's branch refs/heads/branch_6_0 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e9ccc82 ]\n\nLUCENE-7301: ensure multiple doc values updates to one document within one update batch are applied in the correct order "
        },
        {
            "id": "comment-15334105",
            "author": "ASF subversion and git services",
            "date": "2016-06-16T16:25:37+0000",
            "content": "Commit 078b607ff768ff47a81f4b8d1803b406b5dc39e6 in lucene-solr's branch refs/heads/branch_6_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=078b607 ]\n\nLUCENE-7301: Remove misplaced 6.0.1 CHANGES entry "
        },
        {
            "id": "comment-15336155",
            "author": "Michael McCandless",
            "date": "2016-06-17T14:03:02+0000",
            "content": "Steve Rowe can this be closed again (backport is done)? "
        },
        {
            "id": "comment-15336176",
            "author": "Steve Rowe",
            "date": "2016-06-17T14:09:20+0000",
            "content": "Yes, it can be resolved - I'll do that, thanks for the reminder.\n\nMichael McCandless, it looks to me like this was committed to branch_6x before branch_6_1 was created, and it's listed in the 6.1.0 section in CHANGES - shouldn't the fix version be 6.1 instead of 6.2? "
        },
        {
            "id": "comment-15336205",
            "author": "Michael McCandless",
            "date": "2016-06-17T14:25:32+0000",
            "content": "Sorry, yes this was fixed in 6.1 ... I edited the fix version.  Thanks Steve Rowe. "
        },
        {
            "id": "comment-15349800",
            "author": "Steve Rowe",
            "date": "2016-06-25T20:33:51+0000",
            "content": "Bulk close issues released with 5.5.2. "
        }
    ]
}