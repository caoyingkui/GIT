{
    "id": "SOLR-12748",
    "title": "OOM on Solr cloud example startup on master",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I was testing a fix for SOLR-11966 on master with SHA 89d598e9e891e87825d45aabea45e708a51ba860. My local state was admittedly dirty having cycled through many full cluster restarts including running embedded ZK then pointing Solr to an external ZK and cycling back again to embedded ZK. One one such restart after pointing solr back to embedded zk from an external one, the start script hanged for a while on the soft commit step and then the Solr went out of memory.\n\nI ran through the following commands during these tests:\n\ncd solr\nant server\n./bin/solr -e cloud -noprompt\n./bin/solr stop -all\n./bin/solr -e cloud -noprompt\n./bin/solr stop -all\n./bin/solr -e cloud -noprompt\n./bin/solr stop -all\n./bin/solr -c -p 8983 -s \"example/cloud/node1/solr/\" -z localhost:2181\n./bin/solr stop -all\n./bin/solr -c -p 8983 -s \"example/cloud/node1/solr/\" -z localhost:2181\n./bin/solr -c -p 7574 -s \"example/cloud/node2/solr/\" -z localhost:2181\n./bin/solr stop -all\n./bin/solr start -e cloud -noprompt\n\n\n\n\n*** [WARN] *** Your open file limit is currently 32768.  \n It should be set to 65000 to avoid operational disruption. \n If you no longer wish to see this warning, set SOLR_ULIMIT_CHECKS to false in your profile or solr.in.sh\nINFO  - 2018-09-06 08:51:41.989; org.apache.solr.util.configuration.SSLCredentialProviderFactory; Processing SSL Credential Provider chain: env;sysprop\n\nWelcome to the SolrCloud example!\n\nStarting up 2 Solr nodes for your example SolrCloud cluster.\n\nSolr home directory /home/shalin/work/oss/lucene-solr/solr/example/cloud/node1/solr already exists.\n/home/shalin/work/oss/lucene-solr/solr/example/cloud/node2 already exists.\n\nStarting up Solr on port 8983 using command:\n\"bin/solr\" start -cloud -p 8983 -s \"example/cloud/node1/solr\"\n\n*** [WARN] *** Your open file limit is currently 32768.  \n It should be set to 65000 to avoid operational disruption. \n If you no longer wish to see this warning, set SOLR_ULIMIT_CHECKS to false in your profile or solr.in.sh\nWaiting up to 180 seconds to see Solr running on port 8983 [|]  \nStarted Solr server on port 8983 (pid=20475). Happy searching!\n\n    \nStarting up Solr on port 7574 using command:\n\"bin/solr\" start -cloud -p 7574 -s \"example/cloud/node2/solr\" -z localhost:9983\n\n*** [WARN] *** Your open file limit is currently 32768.  \n It should be set to 65000 to avoid operational disruption. \n If you no longer wish to see this warning, set SOLR_ULIMIT_CHECKS to false in your profile or solr.in.sh\nWaiting up to 180 seconds to see Solr running on port 7574 [|]  \nStarted Solr server on port 7574 (pid=20843). Happy searching!\n\nINFO  - 2018-09-06 08:51:50.156; org.apache.solr.common.cloud.ConnectionManager; zkClient has connected\nINFO  - 2018-09-06 08:51:50.178; org.apache.solr.common.cloud.ZkStateReader; Updated live nodes from ZooKeeper... (0) -> (2)\nINFO  - 2018-09-06 08:51:50.197; org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider; Cluster at localhost:9983 ready\n\nCollection 'gettingstarted' already exists! Skipping collection creation step.\n\nEnabling auto soft-commits with maxTime 3 secs using the Config API\n\nPOSTing request to Config API: http://localhost:8983/solr/gettingstarted/config\n{\"set-property\":{\"updateHandler.autoSoftCommit.maxTime\":\"3000\"}}\n\n^CJava HotSpot(TM) 64-Bit Server VM warning: Exception java.lang.OutOfMemoryError occurred dispatching signal SIGINT to handler- the VM may need to be forcibly terminated\n\n\n\nAfter I saw the OOM warning, I used kill -3 to get thread dumps for both Solr processes and then had to manually kill both processes. It is also curious why the OOM killer script did not fire.",
    "attachments": {
        "logs.tar.gz": "https://issues.apache.org/jira/secure/attachment/12938573/logs.tar.gz"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-09-06T03:53:39+0000",
            "content": "Attaching console logs from both nodes. The console logs also have the full thread dump. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16605216"
        },
        {
            "date": "2018-09-06T03:55:15+0000",
            "content": "On Solr with port 8983, 5568 jetty threads were stuck on:\n\n\"qtp77269878-5619\" #5619 prio=5 os_prio=0 tid=0x00007f29081e9800 nid=0x265 runnable [0x00007f27c904f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:171)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:141)\n\tat org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)\n\tat org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)\n\tat org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:282)\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)\n\tat org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)\n\tat org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)\n\tat org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:165)\n\tat org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)\n\tat org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)\n\tat org.apache.solr.util.stats.InstrumentedHttpRequestExecutor.execute(InstrumentedHttpRequestExecutor.java:120)\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:111)\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\n\tat org.apache.solr.servlet.HttpSolrCall.remoteQuery(HttpSolrCall.java:617)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:499)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:377)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:323)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1634)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1317)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1219)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:219)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:531)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:352)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:281)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:762)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:680)\n\tat java.lang.Thread.run(Thread.java:748)\n\n ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16605218"
        }
    ]
}