{
    "id": "SOLR-9386",
    "title": "Upgrade Zookeeper to 3.4.10",
    "details": {
        "components": [],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Zookeeper 3.4.10 release should be happening fairly soon, and the ZK issue blocking incorporation into Solr (ZOOKEEPER-2383) has a 3.4.10-targetted patch that fixes the test failures problem noted on SOLR-8724.",
    "attachments": {
        "zookeeper-3.4.9-upgrade-tests-fail.patch": "https://issues.apache.org/jira/secure/attachment/12834300/zookeeper-3.4.9-upgrade-tests-fail.patch",
        "zookeeper-3.4.8-upgrade-tests-pass.patch": "https://issues.apache.org/jira/secure/attachment/12834295/zookeeper-3.4.8-upgrade-tests-pass.patch",
        "SOLR-9386-fix-clientPort-parsing.patch": "https://issues.apache.org/jira/secure/attachment/12865763/SOLR-9386-fix-clientPort-parsing.patch",
        "SOLR-9386.patch": "https://issues.apache.org/jira/secure/attachment/12822218/SOLR-9386.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-08-05T01:26:15+0000",
            "author": "Steve Rowe",
            "content": "Patch based on the most recent patch on SOLR-8724 (see comments there for details), with two new changes:\n\n\n\tDepends on ZK 3.4.9-SNAPSHOT (the version I built with a snapshot of ZK's branch-3.4 after patching with the patch on ZOOKEEPER-2383) - this will obviously need to be changed to 3.4.9 once it's released.\n\tZOOKEEPER-2141 removed a method from ZKDatabase and added a new one, so TestConfigSetAPIZkFailure.ForwardingZKDatabase needed to be modified to stop forwarding the former and start forwarding the latter.\n\n\n\nWith the exception of tests that also fail on unpatched master (I'll put details in another JIRA), all Solr core/solrj/contrib non-nightly tests succeed with this patch. ",
            "id": "comment-15408745"
        },
        {
            "date": "2016-08-05T13:19:50+0000",
            "author": "Steve Rowe",
            "content": "There is a ZK 3.4.9 release discussion thread here: http://markmail.org/message/hwfjfl5n5kitnzxy ",
            "id": "comment-15409433"
        },
        {
            "date": "2016-08-20T14:56:40+0000",
            "author": "Steve Rowe",
            "content": "Unfortunately it looks like ZOOKEEPER-2383 won't be included in the 3.4.9 release, which is now in the process of being produced. ",
            "id": "comment-15429406"
        },
        {
            "date": "2016-10-20T01:38:15+0000",
            "author": "Shawn Heisey",
            "content": "With an upgrade to 3.4.8, and some tweaking in SolrZKServer to remove code copied from zookeeper and let ZK itself handle the embedded server property parsing, tests pass.\n\nUpgrading to 3.4.9, I find that they have removed the convertLong method from ZKDatabase (without deprecation), which means that the overridden method must be removed from TestConfigSetAPIZkFailure.ForwardingZKDatabase.  When I do that, everything compiles, but a couple of tests fail.  I have no idea how to fix that problem.\n\nI will add a couple of patches. ",
            "id": "comment-15590467"
        },
        {
            "date": "2016-10-20T01:38:50+0000",
            "author": "Shawn Heisey",
            "content": "Patch upgrading to 3.4.8, with all tests passing. ",
            "id": "comment-15590469"
        },
        {
            "date": "2016-10-20T01:52:46+0000",
            "author": "Shawn Heisey",
            "content": "Patch upgrading to 3.4.9.  I've adjusted everything as best I can, but tests in TestConfigSetsAPIZkFailure are failing with this patch.  I do not know what's wrong. ",
            "id": "comment-15590490"
        },
        {
            "date": "2016-10-20T04:03:19+0000",
            "author": "Steve Rowe",
            "content": "I'm confused, Shawn Heisey - did you look at the patch I attached to this issue that made the same changes as you did? ",
            "id": "comment-15590704"
        },
        {
            "date": "2016-10-20T04:19:01+0000",
            "author": "Shawn Heisey",
            "content": "No, I hadn't looked at the patch.  I was already well into what I was doing on my own, then I figured I should look for an existing issue, and found this.  I uploaded my patches so they wouldn't get lost, then drove home from work, and I've just now sat back down at a computer. ",
            "id": "comment-15590739"
        },
        {
            "date": "2017-01-14T22:22:18+0000",
            "author": "Kevin Risden",
            "content": "It looks like the linked ZooKeeper issue is targeted for 3.4.10 and missed the 3.4.9 release? ",
            "id": "comment-15822971"
        },
        {
            "date": "2017-01-15T00:36:13+0000",
            "author": "Steve Rowe",
            "content": "Yeah I think we should wait for 3.4.10 ",
            "id": "comment-15822999"
        },
        {
            "date": "2017-01-15T00:38:43+0000",
            "author": "Steve Rowe",
            "content": "3.4.10 release thread: http://markmail.org/message/zfnlqe2j6bp2kozo ",
            "id": "comment-15823000"
        },
        {
            "date": "2017-01-16T16:41:36+0000",
            "author": "Kevin Risden",
            "content": "Updated the JIRA title and description to mention 3.4.10 instead of 3.4.9 ",
            "id": "comment-15824252"
        },
        {
            "date": "2017-03-03T18:45:33+0000",
            "author": "Frank Kelly",
            "content": "Is it rude of my to suggest we look at SOLR-8346 and focus efforts on Zookeeper 3.5?\n\nThere are a number of DNS issues fixed since 3.4.8 apparently that would be really awesome for our Production Solr Clusters\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-1576 fixed in 3.5.0\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-2171 fixed in 3.5.1 (dupe of https://issues.apache.org/jira/browse/ZOOKEEPER-2367)\n\nAlternatively is there any way to request those bugs be back ported? ",
            "id": "comment-15894836"
        },
        {
            "date": "2017-03-03T18:57:54+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "We first need the Apache ZooKeeper project to release a stable 3.5 version. They only have alpha releases for 3.5.x, the latest being 3.5.2-alpha. ",
            "id": "comment-15894852"
        },
        {
            "date": "2017-04-19T23:22:06+0000",
            "author": "Steve Rowe",
            "content": "ZK 3.4.10 was released and includes a fix for ZOOKEEPER-2383: https://zookeeper.apache.org/releases.html#news ",
            "id": "comment-15975738"
        },
        {
            "date": "2017-04-28T14:55:55+0000",
            "author": "Steve Rowe",
            "content": "Updated patch, upping ZK dep to 3.4.10.\n\nCompilation succeeds, and I looked at 3.4.10's sample zoo.cfg to see if there were changes we should include (there weren't any new ones).\n\nI'm going to run all tests and precommit.  Assuming nothing goes wrong, I want to commit this so it gets included in Solr 6.6. ",
            "id": "comment-15988955"
        },
        {
            "date": "2017-04-28T15:22:17+0000",
            "author": "Steve Rowe",
            "content": "precommit noticed I hadn't refreshed the zk jar's .sha1 file; this patch fixes the problem.\n\nWith this version of the patch, precommit and all Solr tests pass.\n\nCommitting shortly. ",
            "id": "comment-15988992"
        },
        {
            "date": "2017-04-28T15:25:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 303c2a083e27cba876b2e7abc05101f241388b18 in lucene-solr's branch refs/heads/branch_6x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=303c2a0 ]\n\nSOLR-9386: Upgrade Zookeeper to 3.4.10 ",
            "id": "comment-15988999"
        },
        {
            "date": "2017-04-28T15:25:46+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 57f17b111842729552f390dc653ffbaad0b4d658 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=57f17b1 ]\n\nSOLR-9386: Upgrade Zookeeper to 3.4.10 ",
            "id": "comment-15989000"
        },
        {
            "date": "2017-04-28T15:47:42+0000",
            "author": "Shawn Heisey",
            "content": "Steve Rowe, could we completely remove that parseProperties method from Solr code and just let ZK handle it?  I see that there's still some excedption handling code there after your change, but IMHO we should let ZK handle any problems or throw relevant exceptions.\n\nThere's another issue where somebody wanted to use a config option in the embedded zookeeper supported by 3.4 but not the the 3.2 version the parseProperties method was copied from ... so it didn't work. I can't seem to locate that issue now.  I'm pretty sure that in the patch for that issue, I completely removed the method and didn't have any problems. ",
            "id": "comment-15989049"
        },
        {
            "date": "2017-04-28T19:46:05+0000",
            "author": "Steve Rowe",
            "content": "Steve Rowe, could we completely remove that parseProperties method from Solr code and just let ZK handle it? I see that there's still some excedption handling code there after your change, but IMHO we should let ZK handle any problems or throw relevant exceptions.\n\nThe exception handling is for the case that there is a missing myid file, which I think is the ordinary case for embedded ZK.  That's why I left it in.\n\nI'll add some logging in the exception handling code and run a manual test to see if it gets invoked in that case. ",
            "id": "comment-15989359"
        },
        {
            "date": "2017-05-01T02:39:29+0000",
            "author": "Joel Bernstein",
            "content": "I'm currently getting the following error when starting Solr in cloud mode (bin/solr start -c) in master. Could be related to this ticket, but not sure.\n\n2017-05-01 02:36:29.297 ERROR (main) [   ] o.a.s.c.SolrCore null:java.lang.IllegalArgumentException: clientPort is not set\n        at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parseProperties(QuorumPeerConfig.java:314)\n        at org.apache.solr.cloud.SolrZkServerProps.parseProperties(SolrZkServer.java:321)\n        at org.apache.solr.cloud.SolrZkServer.parseConfig(SolrZkServer.java:88)\n        at org.apache.solr.core.ZkContainer.initZooKeeper(ZkContainer.java:83)\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:504)\n        at org.apache.solr.servlet.SolrDispatchFilter.createCoreContainer(SolrDispatchFilter.java:245)\n        at org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:169)\n        at org.eclipse.jetty.servlet.FilterHolder.initialize(FilterHolder.java:137)\n        at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:873)\n        at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)\n        at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)\n        at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)\n        at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:778)\n        at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)\n        at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)\n        at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)\n        at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:499)\n        at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:147)\n        at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:180)\n        at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:458)\n        at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:64)\n        at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)\n        at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)\n        at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)\n        at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:150)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:561)\n        at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:236)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131)\n        at org.eclipse.jetty.server.Server.start(Server.java:422)\n        at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:113)\n        at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)\n        at org.eclipse.jetty.server.Server.doStart(Server.java:389)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\n        at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1516)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1441)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n: ",
            "id": "comment-15990545"
        },
        {
            "date": "2017-05-01T13:42:38+0000",
            "author": "Steve Rowe",
            "content": "\nI'm currently getting the following error when starting Solr in cloud mode (bin/solr start -c) in master. Could be related to this ticket, but not sure.\n\n2017-05-01 02:36:29.297 ERROR (main) [ ] o.a.s.c.SolrCore null:java.lang.IllegalArgumentException: clientPort is not set\n\nPretty sure this ^ is caused by the ZK upgrade.  Reopening to address.\n\nPrior to this issue, Solr did its own parsing of zoo.cfg, but after this issue, Solr delegates to ZK's QuorumPeerConfig.parseProperties() to do so. ZK's method (unlike Solr's previous parsing code) requires that clientPort be specified in zoo.cfg.\n\nSolr's check for missing clientPort configuration (and setting to solrPort + 1000 if absent) is currently performed after parsing zoo.cfg.  I have a patch I'm testing that moves supplying a default clientPort to before QuorumPeerConfig.parseProperties(). ",
            "id": "comment-15990808"
        },
        {
            "date": "2017-05-01T13:55:44+0000",
            "author": "Steve Rowe",
            "content": "Patch moving default clientPort specification to before parsing of zoo.cfg. ",
            "id": "comment-15990820"
        },
        {
            "date": "2017-05-01T14:24:42+0000",
            "author": "Steve Rowe",
            "content": "All tests & precommit pass with SOLR-9386-fix-clientPort-parsing.patch, and bin/solr start -e cloud -noprompt works.\n\nCommitting shortly. ",
            "id": "comment-15990866"
        },
        {
            "date": "2017-05-01T14:28:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c44d0bc89c03de2a3a69a1765d70b8aa0d81b475 in lucene-solr's branch refs/heads/branch_6x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c44d0bc ]\n\nSOLR-9386: Move default clientPort specification to before calling QuorumPeerConfig.parseProperties(), which requires that clientPort be specified. ",
            "id": "comment-15990869"
        },
        {
            "date": "2017-05-01T14:28:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8c11f81a9505a0719e971ed6c54c9b6fc10bfa13 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8c11f81 ]\n\nSOLR-9386: Move default clientPort specification to before calling QuorumPeerConfig.parseProperties(), which requires that clientPort be specified. ",
            "id": "comment-15990870"
        },
        {
            "date": "2017-05-01T14:30:36+0000",
            "author": "Steve Rowe",
            "content": "Resolving as fixed.  Thanks Joel Bernstein for reporting the clientPort problem. ",
            "id": "comment-15990871"
        },
        {
            "date": "2017-05-01T18:02:00+0000",
            "author": "Joel Bernstein",
            "content": "This fixed the problem, thanks Steve Rowe! ",
            "id": "comment-15991196"
        },
        {
            "date": "2017-05-01T19:22:01+0000",
            "author": "Shawn Heisey",
            "content": "Steve Rowe, in newer ZK versions, standalone servers no longer require a myid file.  We shouldn't need to handle that any more.  I can't locate the ZOOKEEPER issue where that was changed, so I do not know what version made our standalone config work, but I'm pretty sure that 3.4.8 had it. ",
            "id": "comment-15991349"
        },
        {
            "date": "2017-05-01T19:27:40+0000",
            "author": "Steve Rowe",
            "content": "Steve Rowe, in newer ZK versions, standalone servers no longer require a myid file. We shouldn't need to handle that any more. I can't locate the ZOOKEEPER issue where that was changed, so I do not know what version made our standalone config work, but I'm pretty sure that 3.4.8 had it.\n\nI looked at the QuorumPeerConfig.parseConfiguration() code, and as you say, the existence of a myid file is only checked for when the number of servers is greater than one.\n\nHowever, there is other code that enables Solr's embedded ZK to participate in a quorum, so I think removing code that allows that would be a mistake.  I haven't tested setting up a quorum exclusively with embedded ZK in multiple Solr nodes, but I assume that's possible.  ",
            "id": "comment-15991357"
        },
        {
            "date": "2017-05-01T19:35:34+0000",
            "author": "Shawn Heisey",
            "content": "I haven't tested setting up a quorum exclusively with embedded ZK\n\nI am pretty sure that this is possible, by configuring the zoo_data and zoo.cfg just like you would for an external ensemble, including the myid file. ",
            "id": "comment-15991371"
        },
        {
            "date": "2017-05-01T19:39:31+0000",
            "author": "Steve Rowe",
            "content": "The machinery that we're talking about makes supplying the myid file unnecessary in the embedded ZK quorum case.  Perhaps if you think we should no longer enable that, it should be dealt with in another issue?  Seems orthogonal to me to upgrading ZK. ",
            "id": "comment-15991380"
        },
        {
            "date": "2017-05-01T20:16:48+0000",
            "author": "Shawn Heisey",
            "content": "Perhaps if you think we should no longer enable that, it should be dealt with in another issue?\n\nSounds reasonable.  Thanks for your effort here. ",
            "id": "comment-15991457"
        }
    ]
}