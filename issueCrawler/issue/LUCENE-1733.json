{
    "id": "LUCENE-1733",
    "title": "Term.compareTo returns unexpected results.  (field == other.field)",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "The ordering of terms is first by field, then by text.*/\n  public final int compareTo(Term other) \n{\n    if (field == other.field)\t\t\t  // fields are interned\n      return text.compareTo(other.text);\n    else\n      return field.compareTo(other.field);\n  }\n\nI am developing a custom query class. I had unexpected results time to time. When I debugged the code I found that  Term.compareTo() method returns inconsistent values.  AfterI changed field == other.field statement to field.equals(other.field) the problem was solved.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-07-03T17:12:41+0000",
            "content": "The field names in Term instances should always be interned... did you somehow use the package-protected  constructor Term(String fld, String txt, boolean intern)?  ",
            "author": "Yonik Seeley",
            "id": "comment-12727053"
        },
        {
            "date": "2009-07-03T18:11:49+0000",
            "content": "Thank you for the quick response. I realized that it was my mistake and\nclosed the issue. I should have asked to the mailing group before creating\nthe issue in Jira.\n\nThanks,\n\nAli\n\n ",
            "author": "Ali Oral",
            "id": "comment-12727074"
        }
    ]
}