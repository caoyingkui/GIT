{
    "id": "SOLR-12848",
    "title": "SolrJ does not use HTTP proxy anymore",
    "details": {
        "type": "Bug",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [
            "SolrJ"
        ],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "7.5"
    },
    "description": "SolrJ's HttpSolrClient ignores the HTTP proxy configuration from system properties http.proxyHost and http.proxyPort. This used to work with Solr 6.6.5.\n\nSolr 6.6.5 used org.apache.http.impl.client.SystemDefaultHttpClient under the hood, which took system properties for HTTP proxy config into account. The deprecated SystemDefaultHttpClient class was replaced as part of SOLR-4509. SolrJ now uses org.apache.http.impl.client.HttpClientBuilder#create to create an HttpClient, but it does not call #useSystemProperties on the builder. Because of that, the proxy configuration from system properties is ignored.",
    "attachments": {
        "SOLR-12848.patch": "https://issues.apache.org/jira/secure/attachment/12943254/SOLR-12848.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16645044",
            "content": "My thought is to have HttpClient always honor the appropriate system properties, like we did before when we used SystemDefaultHttpClient, rather than adding another configuration variable and method to our builders.  Any objections? ",
            "author": "Shawn Heisey",
            "date": "2018-10-10T14:28:13+0000"
        },
        {
            "id": "comment-16645063",
            "content": "After a quick examination of the code, I think the attached patch would fix this problem. ",
            "author": "Shawn Heisey",
            "date": "2018-10-10T14:42:11+0000"
        },
        {
            "id": "comment-16645067",
            "content": "Oops.  I've made a mistake there.  Will attach a new patch. ",
            "author": "Shawn Heisey",
            "date": "2018-10-10T14:43:01+0000"
        },
        {
            "id": "comment-16667014",
            "content": "Thanks for posting the patch, not sure how to install it now, if you can give me a hint ",
            "author": "Lis",
            "date": "2018-10-29T11:06:23+0000"
        },
        {
            "id": "comment-16667204",
            "content": "not sure how to install it now, if you can give me a hint\n\nYou can't install a patch on a binary download of Solr.  You have to obtain the source code for the specific version you want to patch, apply the patch, and then build Solr.\n\nhttps://wiki.apache.org/solr/HowToContribute\n\nThe wiki page linked above describes how to get the source code and figure out which branch you want.  It also has some information about working with patches, although it doesn't have any info on applying them with git, which I prefer to do when possible.  The basic method for that is to change directory to the root of the source code and then type \"git apply /path/to/XXXXX.patch\". ",
            "author": "Shawn Heisey",
            "date": "2018-10-29T13:31:33+0000"
        },
        {
            "id": "comment-16667210",
            "content": "Once you've got the patch applied, exactly how to proceed will depend on what you want to do.  Typing \"ant clean server\" in the solr directory will create a runnable server (bin/solr start works).  Typing \"ant clean package\" will create binary packages just like those you can download from the Solr website, but will likely have -SNAPSHOT in the version name. ",
            "author": "Shawn Heisey",
            "date": "2018-10-29T13:36:18+0000"
        }
    ]
}