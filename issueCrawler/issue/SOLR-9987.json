{
    "id": "SOLR-9987",
    "title": "Implement support for multi-valued DocValues in PointFields",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is not currently supported, and since PointFields can't use FieldCache, faceting, stats, etc is not supported on multi-valued point fields. Followup task of SOLR-8396",
    "attachments": {
        "SOLR-9987.patch": "https://issues.apache.org/jira/secure/attachment/12850668/SOLR-9987.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-19T02:12:04+0000",
            "content": "As discussed in SOLR-8396, we should use SortedNumericDocValues. There are already some (ignored) tests in TestPointFields for this feature, once it's available.  ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-15829169"
        },
        {
            "date": "2017-02-02T19:06:54+0000",
            "content": "Here is a first patch. Some nocommits and some tests are failing. This requires LUCENE-7673 ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-15850340"
        },
        {
            "date": "2017-02-09T20:38:26+0000",
            "content": "Here is another patch, with some more tests and support for multivalued stats (same feature support as single value). I think this is ready to commit ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-15860157"
        },
        {
            "date": "2017-02-11T06:03:06+0000",
            "content": "Wow you did a lot of work for this!  Thanks for doing this work.\n\nAs I skimmed through with curiosity, one thing caught my eye:\n\n+//            We should do this, but mincount=0 is currently the default\n+//            if (ft.isPointField() && mincount <= 0) {\n+//              throw new SolrException(ErrorCode.BAD_REQUEST, FacetParams.FACET_MINCOUNT + \" <= 0 is not supported on point types\");\n+//            }\n\n\n\nJudging from this and nearby code changes, if minCount is 0 then you make it 1 instead (for PointFields only); is this right?  This seems wrong to me.  I suspect we all agree that the default of 0 is unfortunate but ignoring it and pretending it's not in certain cases but not others seems wrong.  Instead, I propose that we make the default '1' for 7.0.  Obviously such a change would be in another issue. ",
            "author": "David Smiley",
            "id": "comment-15862241"
        },
        {
            "date": "2017-02-11T18:49:58+0000",
            "content": "Thanks for reviewing David. The issue is that facet.mincount=0 doesn't work currently (SOLR-10033), and it's not easy, since we don't have TermsEnum for PointFields. So yes, if the user sets facet.mincount=0 in the request I'm currently blindly changing it to 1, which is the same thing that happens today with TrieFields that have indexed=\"false\" and docValues=\"true\" (since SOLR-5260, before that we would throw an exception).\nAn extra issue is that currently by default in distributed facet requests, shard requests are always set to facet.mincount=0 (see SOLR-8988 and SOLR-9152). I don't want to put this exception back until the defaults change.  ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-15862490"
        },
        {
            "date": "2017-02-12T04:04:09+0000",
            "content": "Ugh; ok.  I was a watcher on SOLR-5260 but missed the implication.  \n\n+1 to commit then. ",
            "author": "David Smiley",
            "id": "comment-15862636"
        },
        {
            "date": "2017-02-13T17:49:11+0000",
            "content": "Commit 7dcf9de41f6435a741910a6367ef9fece11a588b in lucene-solr's branch refs/heads/master from Tomas Fernandez Lobbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7dcf9de ]\n\nSOLR-9987: Implement support for multi-valued DocValues in PointFields\nCC SOLR-8396 ",
            "author": "ASF subversion and git services",
            "id": "comment-15864073"
        },
        {
            "date": "2017-02-13T21:18:43+0000",
            "content": "Commit bc10fa67b641d0cfb9bd1954378019d4fc343ae8 in lucene-solr's branch refs/heads/branch_6x from Tomas Fernandez Lobbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bc10fa6 ]\n\nSOLR-9987: Implement support for multi-valued DocValues in PointFields\nCC SOLR-8396 ",
            "author": "ASF subversion and git services",
            "id": "comment-15864454"
        },
        {
            "date": "2017-02-13T21:18:54+0000",
            "content": "Commit 81b4288a2133dce87e0ac92da5f6e37dc28176f6 in lucene-solr's branch refs/heads/branch_6x from Tomas Fernandez Lobbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=81b4288 ]\n\nSOLR-8396, SOLR-9987, SOLR-10011: Move CHANGES entries from 7.0 to 6.5 ",
            "author": "ASF subversion and git services",
            "id": "comment-15864458"
        }
    ]
}