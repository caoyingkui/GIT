{
    "id": "SOLR-11326",
    "title": "CDCR bootstrap should not download tlog's from source",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.2"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "While analyzing two separate fails on SOLR-11278 I see that during bootstrap the tlog's from the source is getting download\n\n\nsnippet1:\n\n   [junit4]   2> 42931 INFO  (qtp1525032019-69) [n:127.0.0.1:53178_solr c:cdcr-source s:shard1 r:core_node1 x:cdcr-source_shard1_replica1] o.a.s.h.CdcrReplicatorManager Submitting bootstrap task to executor\n   [junit4]   2> 42934 INFO  (cdcr-bootstrap-status-32-thread-1-processing-n:127.0.0.1:53178_solr x:cdcr-source_shard1_replica1 s:shard1 c:cdcr-source r:core_node1) [n:127.0.0.1:53178_solr c:cdcr-source s:shard1 r:core_node1 x:cdcr-source_shard1_replica1] o.a.s.h.CdcrReplicatorManager Attempting to bootstrap target collection: cdcr-target shard: shard1 leader: http://127.0.0.1:53170/solr/cdcr-target_shard1_replica1/\n   [junit4]   2> 43003 INFO  (qtp1525032019-69) [n:127.0.0.1:53178_solr c:cdcr-source s:shard1 r:core_node1 x:cdcr-source_shard1_replica1] o.a.s.c.S.Request [cdcr-source_shard1_replica1]  webapp=/solr path=/replication params={qt=/replication&wt=javabin&version=2&command=indexversion} status=0 QTime=0\n   [junit4]   2> 43004 INFO  (recoveryExecutor-6-thread-1-processing-n:127.0.0.1:53170_solr x:cdcr-target_shard1_replica1 s:shard1 c:cdcr-target r:core_node1) [n:127.0.0.1:53170_solr c:cdcr-target s:shard1 r:core_node1 x:cdcr-target_shard1_replica1] o.a.s.h.IndexFetcher Master's generation: 12\n   [junit4]   2> 43004 INFO  (recoveryExecutor-6-thread-1-processing-n:127.0.0.1:53170_solr x:cdcr-target_shard1_replica1 s:shard1 c:cdcr-target r:core_node1) [n:127.0.0.1:53170_solr c:cdcr-target s:shard1 r:core_node1 x:cdcr-target_shard1_replica1] o.a.s.h.IndexFetcher Master's version: 1503514968639\n   [junit4]   2> 43004 INFO  (recoveryExecutor-6-thread-1-processing-n:127.0.0.1:53170_solr x:cdcr-target_shard1_replica1 s:shard1 c:cdcr-target r:core_node1) [n:127.0.0.1:53170_solr c:cdcr-target s:shard1 r:core_node1 x:cdcr-target_shard1_replica1] o.a.s.h.IndexFetcher Slave's generation: 1\n   [junit4]   2> 43004 INFO  (recoveryExecutor-6-thread-1-processing-n:127.0.0.1:53170_solr x:cdcr-target_shard1_replica1 s:shard1 c:cdcr-target r:core_node1) [n:127.0.0.1:53170_solr c:cdcr-target s:shard1 r:core_node1 x:cdcr-target_shard1_replica1] o.a.s.h.IndexFetcher Slave's version: 0\n   [junit4]   2> 43004 INFO  (recoveryExecutor-6-thread-1-processing-n:127.0.0.1:53170_solr x:cdcr-target_shard1_replica1 s:shard1 c:cdcr-target r:core_node1) [n:127.0.0.1:53170_solr c:cdcr-target s:shard1 r:core_node1 x:cdcr-target_shard1_replica1] o.a.s.h.IndexFetcher Starting replication process\n   [junit4]   2> 43041 INFO  (qtp1525032019-71) [n:127.0.0.1:53178_solr c:cdcr-source s:shard1 r:core_node1 x:cdcr-source_shard1_replica1] o.a.s.h.ReplicationHandler Adding tlog files to list: [{size=4649, name=tlog.0000000000000000000.1576549701811961856}, {size=4770, name=tlog.0000000000000000001.1576549702515556352}, {size=4770, name=tlog.0000000000000000002.1576549702628802560}, {size=4770, name=tlog.0000000000000000003.1576549702720028672}, {size=4770, name=tlog.0000000000000000004.1576549702799720448}, {size=4770, name=tlog.0000000000000000005.1576549702894092288}, {size=4770, name=tlog.0000000000000000006.1576549703029358592}, {size=4770, name=tlog.0000000000000000007.1576549703126876160}, {size=4770, name=tlog.0000000000000000008.1576549703208665088}, {size=4770, name=tlog.0000000000000000009.1576549703295696896}\n\n\n\nsnippet2:\n\n 17070    [junit4]   2> 677606 INFO  (qtp22544544-5725) [    ] o.a.s.h.CdcrReplicatorManager Attempting to bootstrap target collection: cdcr-target, shard: shard1^M\n 17071    [junit4]   2> 677608 INFO  (qtp22544544-5725) [    ] o.a.s.h.CdcrReplicatorManager Submitting bootstrap task to executor^M\n17091    [junit4]   2> 677627 INFO  (qtp22544544-5724) [    ] o.a.s.c.S.Request [cdcr-source_shard1_replica_n1]  webapp=/solr path=/replication params={qt=/replication&wt=javabin&version=2&command=indexversion} status=0 QTime=0^M\n 17092    [junit4]   2> 677628 INFO  (recoveryExecutor-1024-thread-1) [    ] o.a.s.h.IndexFetcher Master's generation: 12^M\n 17093    [junit4]   2> 677628 INFO  (recoveryExecutor-1024-thread-1) [    ] o.a.s.h.IndexFetcher Master's version: 1504127155366^M\n 17094    [junit4]   2> 677628 INFO  (recoveryExecutor-1024-thread-1) [    ] o.a.s.h.IndexFetcher Slave's generation: 1^M\n 17095    [junit4]   2> 677628 INFO  (recoveryExecutor-1024-thread-1) [    ] o.a.s.h.IndexFetcher Slave's version: 0^M\n 17096    [junit4]   2> 677628 INFO  (recoveryExecutor-1024-thread-1) [    ] o.a.s.h.IndexFetcher Starting replication process^M\n 17097    [junit4]   2> 677654 INFO  (qtp22544544-5725) [    ] o.a.s.h.ReplicationHandler Adding tlog files to list: [{size=4773, name=tlog.0000000000000000009}]^M\n 17098    [junit4]   2> 677655 INFO  (qtp22544544-5725) [    ] o.a.s.c.S.Request [cdcr-source_shard1_replica_n1]  webapp=/solr path=/replication params={generation=12&qt=/replication&wt=javabin&version=2&command=filelist} status=0 QTime=26^M\n 17099    [junit4]   2> 677656 INFO  (recoveryExecutor-1024-thread-1) [    ] o.a.s.h.IndexFetcher Number of files in latest index in master: 23^M\n 17100    [junit4]   2> 677656 INFO  (recoveryExecutor-1024-thread-1) [    ] o.a.s.h.IndexFetcher Number of tlog files in master: 1^M\n\n\n\n\nAlso here's the code comment which also says we don't need to download the tlog's\n\nCdcrRequestHandler.java\n        ModifiableSolrParams solrParams = new ModifiableSolrParams();\n        solrParams.set(ReplicationHandler.MASTER_URL, masterUrl);\n        // we do not want the raw tlog files from the source\n        solrParams.set(ReplicationHandler.TLOG_FILES, false);",
    "attachments": {
        "WITHOUT-FIX.patch": "https://issues.apache.org/jira/secure/attachment/12892776/WITHOUT-FIX.patch",
        "SOLR-11326.patch": "https://issues.apache.org/jira/secure/attachment/12885452/SOLR-11326.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-09-05T20:51:16+0000",
            "content": "Patch which ensures that tlog's won't be downloaded if the caller doesn't want to . All tests pass ",
            "author": "Varun Thacker",
            "id": "comment-16154286"
        },
        {
            "date": "2017-09-28T04:09:08+0000",
            "content": "Varun, some changes were done in IndexFetcher.java, due to which patch failed.\n\nUploading same but fresh patch applicable to master. ",
            "author": "Amrit Sarkar",
            "id": "comment-16183649"
        },
        {
            "date": "2017-10-17T20:04:01+0000",
            "content": "Is there any scenario where we need to download the tlogs? I don't see any use-case in master-slave / solrcloud or in cdcr . So why even have the option? \n\nToday in CDCR we explicitly ask the replication handler not to download the tlogs by doing this\n\n{[solrParams.set(ReplicationHandler.TLOG_FILES, false);}}\n\nBut the param is not respected. The patch actually fixes the issue. But why even keep such an option when we don't need it?\n\nDoes someone know the motivation of this in ReplicationHander::getFileList\n\n\n    // fetch list of tlog files only if cdcr is activated\n    if (solrParams.getBool(TLOG_FILES, true) && core.getUpdateHandler().getUpdateLog() != null\n        && core.getUpdateHandler().getUpdateLog() instanceof CdcrUpdateLog) {\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16208245"
        },
        {
            "date": "2017-10-17T20:15:34+0000",
            "content": "So why even have the option?\n\nLooking at CdcrReplicationHandlerTest I see when this is used. When the source replica comes up , it needs all the transaction logs from the leader in case of leader failure. This also explains why this code exists with default as \"true\"\n\n\n    // fetch list of tlog files only if cdcr is activated\n    if (solrParams.getBool(TLOG_FILES, true) && core.getUpdateHandler().getUpdateLog() != null\n        && core.getUpdateHandler().getUpdateLog() instanceof CdcrUpdateLog) {\n\n\n\nSo I think the patch is valid. \n\n\nAmrit Sarkar can we add a test to make sure this functionality doesn't break in the future? Maybe we could use a similar mechanism as CdcrReplicationHandlerTest#assertUpdateLogsEquals to make sure that a bootstrap doesn't download any tlogs in the target. \n\nLet's add a test and then we can wrap up this Jira ",
            "author": "Varun Thacker",
            "id": "comment-16208257"
        },
        {
            "date": "2017-10-18T12:17:24+0000",
            "content": "Varun Thacker,\n\nRoger that!\n\nI have uploaded two patches:\na) WITHOUT FIX and a test-method in CdcrBootstrapTest to prove tlogs get copied over to target when Bootstrap is completed.\nb) WITH FIX and test-method in CdcrBootstrapTest to prove tlogs DOESN'T get copied over to target when Bootstrap is completed.\n\nApart from the changes, I fixed the log lines in CdcrBootstrapTest, which was misleading.\n\nPLEASE NOTE: I have wrote the test on top of master branch and we have debugging code from SOLR-11467. If we remove the debugging code and apply this patch, it won't work. If we commit this and then try to remove SOLR-11467 debugging code, that patch won't work. Please let me know if we need to handle this in better way or I need to write the patch without SOLR-11467 debugging patch. ",
            "author": "Amrit Sarkar",
            "id": "comment-16209219"
        },
        {
            "date": "2017-10-18T22:34:07+0000",
            "content": "Made some tweaks to the patch. I think it's ready.\n\nI'll do another round of review and tests before committing it ",
            "author": "Varun Thacker",
            "id": "comment-16210208"
        },
        {
            "date": "2017-10-23T18:13:16+0000",
            "content": "Updated patch. The new test was just checking the number of tlogs that were downloaded. So I folded that condition in an existing test- testBootstrapWithSourceCluster .  ",
            "author": "Varun Thacker",
            "id": "comment-16215560"
        },
        {
            "date": "2017-10-25T04:58:17+0000",
            "content": "Varun, there was a small test bug in the patch. Fixed it, ran beasts of hundreds of rounds. This is ready to ship. ",
            "author": "Amrit Sarkar",
            "id": "comment-16218088"
        },
        {
            "date": "2017-10-25T21:30:32+0000",
            "content": "Commit cb20bbdd1fb6bde7edf00d397dc6a8dc200d40eb in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cb20bbd ]\n\nSOLR-11326: A bootstrap of a target cluster does not need to download the tlog files from the source cluster ",
            "author": "ASF subversion and git services",
            "id": "comment-16219555"
        },
        {
            "date": "2017-10-25T21:49:26+0000",
            "content": "Commit 914c42ab0da852c75b367f2826f45b41ef994cea in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=914c42a ]\n\nSOLR-11326: A bootstrap of a target cluster does not need to download the tlog files from the source cluster\n\n(cherry picked from commit cb20bbd) ",
            "author": "ASF subversion and git services",
            "id": "comment-16219603"
        },
        {
            "date": "2017-10-25T21:49:45+0000",
            "content": "Thanks Amrit! ",
            "author": "Varun Thacker",
            "id": "comment-16219604"
        }
    ]
}