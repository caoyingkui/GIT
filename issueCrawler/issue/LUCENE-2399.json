{
    "id": "LUCENE-2399",
    "title": "Add support for ICU's Normalizer2",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/other"
        ],
        "type": "New Feature",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "3.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "While there are separate Case Folding, Normalization, and Ignorable-removal filters in LUCENE-1488,\nthe new ICU Normalizer2 API does this all at once with nfkc_cf (based on the new NFKC_Casefold property in Unicode).\n\nThis is great, because it provides a ton of unicode functionality that is really needed.\nAnd the new Normalizer2 API takes CharSequence and writes to Appendable...",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--LUCENE-2399.patch": "https://issues.apache.org/jira/secure/attachment/12442032/ASF.LICENSE.NOT.GRANTED--LUCENE-2399.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-04-17T02:33:26+0000",
            "content": "This patch is so simple, instead of 3 hairy tokenfilters.\n\nI would like to commit tomorrow (upgrading our icu.jar in contrib/icu to 4.4), unless there are any objections. ",
            "author": "Robert Muir",
            "id": "comment-12858077"
        },
        {
            "date": "2010-04-17T02:58:23+0000",
            "content": "i made this filter final, to avoid a ticket from the policeman. ",
            "author": "Robert Muir",
            "id": "comment-12858081"
        },
        {
            "date": "2010-04-17T07:23:33+0000",
            "content": "Hurra! You used the StringBuilder as buffer to not create a new String instance each time and only need to copy the buffer. This could also be a good trick for the PatternReplaceFilter from Solr.\n\ni made this filter final, to avoid a ticket from the policeman. \n\nHow did you get the filter through the assert statement without final? Strange... ",
            "author": "Uwe Schindler",
            "id": "comment-12858104"
        },
        {
            "date": "2010-04-17T07:50:02+0000",
            "content": "I know, you were running the test without assertion from Eclipse! \n\n\n[junit] TokenStream implementation classes or at least their incrementToken() implementation must be final\n[junit] junit.framework.AssertionFailedError: TokenStream implementation classes or at least their incrementToken() implementation must be final\n[junit]     at org.apache.lucene.analysis.TokenStream.assertFinal(TokenStream.java:117)\n\n\n\nSo for me the assertion worked. The second patch of course works with icu-4_4.jar! So great and I am happy about the cool interfaces at CharTermAttribute.\n\nI just wanted to check that the my deputy sheriff did not miss something because of wrong instructions. ",
            "author": "Uwe Schindler",
            "id": "comment-12858108"
        },
        {
            "date": "2010-04-17T13:00:22+0000",
            "content": "I know, you were running the test without assertion from Eclipse!\n\nYes! So the assertion here worked perfectly!\n\nSo great and I am happy about the cool interfaces at CharTermAttribute.\n\nYes, I'm really excited about this. \nBesides just normalization, we get the ability to do \"best practice\" case folding (see the German and Greek examples in the test), normalization, and ignorable removal all in one simple filter, and, users can make their own .txt files for special mappings, run them through a tool, and use this filter with high performance:\n\nhttp://site.icu-project.org/design/normalization/custom\nhttp://userguide.icu-project.org/transforms/normalization ",
            "author": "Robert Muir",
            "id": "comment-12858130"
        },
        {
            "date": "2010-04-17T13:24:25+0000",
            "content": "I added some additional javadocs to try to explain the default behavior (nfkc_cf) ",
            "author": "Robert Muir",
            "id": "comment-12858132"
        },
        {
            "date": "2010-04-17T14:50:16+0000",
            "content": "I made the filter non-final, and only incrementToken final instead.\n\nThis way we can implement things like LUCENE-1343, which want to do things like removing accents in a way that respects normalization (e.g. removes decomposed and composed forms).\n\nSo we can just extend this, and pass along a statically loaded InputStream for the .nrm file to its ctor and be done with it.  ",
            "author": "Robert Muir",
            "id": "comment-12858149"
        },
        {
            "date": "2010-04-17T15:08:39+0000",
            "content": "Committed revision 935186. \n\nWill later discuss how we should expose this stuff in solr (maybe an ICU contrib for now?) as I want its faster Collation filter exposed there too  ",
            "author": "Robert Muir",
            "id": "comment-12858152"
        },
        {
            "date": "2010-05-06T12:20:59+0000",
            "content": "backported to 3.x, rev 941689 ",
            "author": "Robert Muir",
            "id": "comment-12864747"
        },
        {
            "date": "2011-03-30T15:50:17+0000",
            "content": "Bulk close for 3.1 ",
            "author": "Grant Ingersoll",
            "id": "comment-13013428"
        }
    ]
}