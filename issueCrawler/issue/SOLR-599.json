{
    "id": "SOLR-599",
    "title": "Lightweight SolrJ client",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "clients - java",
            "SolrJ"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "SolrJ provides a SolrServer implementation backed by commons-httpclient which introduces many dependency jars (commons-codec, commons-io and commons-logging). Apart from that SolrJ also uses StAX API for XML parsing which introduces dependencies like stax-api, stax and stax-utils.\n\nThis enhancement will add a SolrServer implementation backed by java.net.HttpUrlConnection and will use BinaryResponseParser as the default response parser. Using this basic implementation out of the box would require no dependencies on either commons-httpclient or StAX. The only dependency would be on solr-commons making this a very lightweight and distribution friendly Java client for Solr.",
    "attachments": {
        "SOLR-599.patch": "https://issues.apache.org/jira/secure/attachment/12405498/SOLR-599.patch",
        "SOLR-599-fix-for-SolrJ-on-GAE.patch": "https://issues.apache.org/jira/secure/attachment/12516555/SOLR-599-fix-for-SolrJ-on-GAE.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12605325",
            "date": "2008-06-16T15:48:46+0000",
            "content": "I thought commons-logging was only a dependency because HTTPClient used it. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12605335",
            "date": "2008-06-16T16:10:54+0000",
            "content": "Right, I'll edit the description (again) "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12607908",
            "date": "2008-06-25T09:28:54+0000",
            "content": "Removing fix version 1.3 since this feature can take a lot of time to implement the multi-part post functionality correctly. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12662325",
            "date": "2009-01-09T11:20:51+0000",
            "content": "With SOLR-865 coming in, we can use binary format for both searching and indexing. The solr-commons jar has already been removed and merged with the solrj jar. I think a lightweight client makes sense once again. The only gotcha is that we require slf4j as a dependency. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12699064",
            "date": "2009-04-15T05:27:41+0000",
            "content": "untested patch .  "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12709342",
            "date": "2009-05-14T10:02:19+0000",
            "content": "Marking for 1.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872493",
            "date": "2010-05-27T22:06:30+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043858",
            "date": "2011-06-03T16:47:25+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106491",
            "date": "2011-09-16T14:51:19+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Kayode Odeyemi",
            "id": "comment-13218304",
            "date": "2012-02-28T16:13:39+0000",
            "content": "Here's a working patch based off the above patch:\n\nhttps://github.com/charyorde/lucene-solr/blob/trunk/solr/solrj/src/java/org/apache/solr/client/solrj/impl/contrib/SimpleHttpSolrServer.java "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13218495",
            "date": "2012-02-28T19:13:30+0000",
            "content": "This is great, Kayode. Would you be willing to donate your code to Solr? If so, please upload the java file, or even better, a patch file, to this ticket, and tick the ASF license checkbox.\n\nThen we must decide how to package this. I think power users may still need the full commonsHTTP thing (if they require SSL support or other advanced stuff) but having an official client without all the deps would be nice. "
        },
        {
            "author": "Kayode Odeyemi",
            "id": "comment-13219133",
            "date": "2012-02-29T12:21:19+0000",
            "content": "Patch is attached as requested.\n\nHaving SolrJ without the deps will be great. \n\nIt is possible to extend this to include other advanced features. I can work with the built-in implementations that makes use of common httpclient to understand the integration, then come up with similar implementation for this.  "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13220972",
            "date": "2012-03-02T14:54:18+0000",
            "content": "I think we may need both, but for users not needing the extra power of commons-httpclient (such as SSL certificates) they could use the simple one and skip dependencies. Perhaps SolrJ could be split in two jars: solrj-core and solrj-extras, and have a policy that it's forbidden with external deps in core. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13221131",
            "date": "2012-03-02T18:23:30+0000",
            "content": "I think SimpleHttpSolrServer.java should just go in the same package/jar file, next to CommonsHttpSolrServer\n\nA client can remove the other .jar files if they don't want the HTTP dependencies "
        },
        {
            "author": "Kayode Odeyemi",
            "id": "comment-13221175",
            "date": "2012-03-02T19:13:28+0000",
            "content": "An initial spec on this will help us understand how to repackage SolrJ. We can leave room for more opinions on this before having a final go.\n\nsolrj-core will have to provide integration points for contribs in order to give access to internal core features. I think splitting SolrJ like this will help get more codes and ideas in and ultimately, Solr will benefit. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13221250",
            "date": "2012-03-02T20:33:14+0000",
            "content": "Here is an updated patch.  It fixes:\n\n\tlicense header\n\tspacing\n\tadds a test\n\n\n\nBUT the test fails with:\n\n1893 T23 C0 UPDATE [] webapp=/solr path=/update params={<delete><query>*:*</query></delete>=&wt=xml&version=2.2} {} 0 0\n1893 T23 C0 oasc.SolrException.log SEVERE org.apache.solr.common.SolrException: missing content stream\n\t\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:54)\n\t\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\t\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1540)\n\n\n\nAnyone want to take a look?\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412098",
            "date": "2012-07-11T22:25:59+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429746",
            "date": "2012-08-07T03:42:39+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13452202",
            "date": "2012-09-10T17:41:58+0000",
            "content": "moving all 4.0 issues not touched in a month to 4.1 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717136",
            "date": "2013-07-23T18:47:14+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971057",
            "date": "2014-04-16T12:57:02+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-16619784",
            "date": "2018-09-18T21:58:47+0000",
            "content": "SolrJ hasn't used commons-httpclient in a LONG time.  Both commons-httpclient and httpcomponents were included in 3.6, but commons-httpclient was removed in 4.0.\n\nThis is the full list of dependencies when solrj 7.4.0 is specified with a dependency manager:\n\n\ncommons-io-2.5.jar\ncommons-math3-3.6.1.jar\nhttpclient-4.5.3.jar\nhttpcore-4.4.6.jar\nhttpmime-4.5.3.jar\nzookeeper-3.4.11.jar\nstax2-api-3.1.4.jar\nwoodstox-core-asl-4.4.1.jar\nnoggit-0.8.jar\njcl-over-slf4j-1.7.24.jar\nslf4j-api-1.7.24.jar\n\n\n\nThere are XML and JSON libraries because SolrJ supports XML and JSON transfer formats.  If 7.x/8.x client objects are created with defaults and only the more mainstream methods are used, the XML and JSON dependencies could probably be removed, since SolrJ defaults to javabin transfer on both request and response.  If CloudSolrClient is not being used, then the zookeeper jar will not need to be included.\n\nThe decision to use the Apache httpclient was made a long time ago.  Now we are proceeding with a switch to the Jetty httpclient to get HTTP/2 support, which will greatly alter the dependency landscape.\n\nI'll leave the decision to others about whether we need a client based on Java's built-in http; my guess is that such a client is NOT needed.  The work related to HTTP/2 is being spearheaded by Cao Manh Dat and Mark Miller. "
        }
    ]
}