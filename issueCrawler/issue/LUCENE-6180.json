{
    "id": "LUCENE-6180",
    "title": "Make BitsSlice public (not package-private)",
    "details": {
        "resolution": "Won't Fix",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "org.apache.lucene.index.BitsSlice is a simple and generic utility class. I've found a need to use and it'd be nice if it were public but it's currently package-private.  It should go to the util package, and the constructor taking ReaderSlice cold be removed.\n\nIn Java 8, it'd be neat to have a Bits.subSlice default method simply calling-out to this but no big deal.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14275824",
            "author": "Michael McCandless",
            "date": "2015-01-13T19:59:19+0000",
            "content": "This is a rather internal class?  If we do move to util and make it public I think it should remain @lucene.internal?\n\nI also don't like that it ... encourages top-level reader usage.  Lucene only uses this for merging I think.\n\nWhat sort of times did you need to use it? "
        },
        {
            "id": "comment-14275840",
            "author": "David Smiley",
            "date": "2015-01-13T20:06:04+0000",
            "content": "In trunk, see NumberRangePrefixTreeFacets (in spatial module).  I'm using Bits acceptDocs as a way for the caller to articulate which docs should be counted.  The first method, compute, is the one doing this since this method does it at the index level.  The second method is named the same but works at the segment level and doesn't need it.  It's called by the first.\n\np.s. this class will be refactored/renamed to PrefixTreeFacetCounter soon.\n\nI'll put the relevant code here:\n\n//We collect per-leaf\n    final List<LeafReaderContext> leaves = context.leaves();\n    for (final LeafReaderContext leafCtx : leaves) {\n      //determine leaf acceptDocs\n      Bits leafAcceptDocs;\n      if (acceptDocs == null) {\n        leafAcceptDocs = leafCtx.reader().getLiveDocs();\n      } else if (leaves.size() == 1) {\n        leafAcceptDocs = acceptDocs;\n      } else {\n        leafAcceptDocs = new Bits() {//note: it'd be nice if Lucene's BitsSlice was public.\n\n          final int docBase = leafCtx.docBase;\n\n          @Override\n          public boolean get(int index) {\n            return acceptDocs.get(docBase + index);\n          }\n\n          @Override\n          public int length() {\n            return leafCtx.reader().maxDoc();\n          }\n        };\n      }\n\n      facets = compute(strategy, leafCtx, leafAcceptDocs, queryShape, facets);\n    }\n\n "
        },
        {
            "id": "comment-14276487",
            "author": "David Smiley",
            "date": "2015-01-14T05:11:00+0000",
            "content": "Closing. I'll change the API I'm working on to accept a Filter instead. "
        }
    ]
}