{
    "id": "SOLR-5216",
    "title": "Document updates to SolrCloud can cause a distributed deadlock.",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "",
    "attachments": {
        "SOLR-5216.patch": "https://issues.apache.org/jira/secure/attachment/12601748/SOLR-5216.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Tim Vaillancourt",
            "id": "comment-13760516",
            "date": "2013-09-06T18:59:57+0000",
            "content": "Hey guys,\n\nWe tested this patch and unfortunately encountered some serious issues a few hours of 500 update-batches/sec. Our update batch is 10 docs, so we are writing about 5000 docs/sec total, using autoCommit to commit the updates (no explicit commits).\n\nOur environment:\n\n\tSolr 4.3.1 w/SOLR-5216 patch.\n\tJetty 9, Java 1.7.\n\t3 solr instances, 1 per physical server.\n\t1 collection.\n\t3 shards.\n\t2 replicas (each instance is a leader and a replica).\n\tSoft autoCommit is 1000ms.\n\tHard autoCommit is 15000ms.\n\n\n\nAfter about 6 hours of stress-testing this patch, we see many of these stalled transactions (below), and the Solr instances start to see each other as down, flooding our Solr logs with \"Connection Refused\" exceptions, and otherwise no obviously-useful logs that I could see.\n\nI did notice some stalled transactions on both /select and /update, however. This never occurred without this patch.\n\nStack /select seems stalled on: http://pastebin.com/Y1NCrXGC\nStack /update seems stalled on: http://pastebin.com/cFLbC8Y9\n\nLastly, I have a summary of the ERROR-severity logs from this 24-hour soak. My script \"normalizes\" the ERROR-severity stack traces and returns them in order of occurrence.\n\nSummary of my solr.log: http://pastebin.com/pBdMAWeb\n\nThanks!\n\nTim Vaillancourt "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13764057",
            "date": "2013-09-11T06:44:15+0000",
            "content": "I think the only thing that this patch could possibly do is eliminate the deadlock, but allow for more threads. I only expect up to a 2x max use in threads, but it could be off and allow for more than that if there is some small bug I'm missing. In any case, I'm sure the idea is the right one for the deadlock. I worry the problems you get after many hours might be due to the sheer number of threads and requests. I worry about spending too much time trying to get this solution working though - it might be energy better spent changing things towards a better direction - SOLR-5232: SolrCloud should distribute updates via streaming rather than buffering. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13799545",
            "date": "2013-10-18T21:38:36+0000",
            "content": "I'm going to resolve this for 4.6 with SOLR-5232 - look forward to any help testing it out  "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13799577",
            "date": "2013-10-18T22:10:54+0000",
            "content": "Commit 1533649 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1533649 ]\n\nSOLR-5216: Document updates to SolrCloud can cause a distributed deadlock.\nSOLR-5232: SolrCloud should distribute updates via streaming rather than buffering. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13799585",
            "date": "2013-10-18T22:15:36+0000",
            "content": "Commit 1533652 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1533652 ]\n\nSOLR-5216: Document updates to SolrCloud can cause a distributed deadlock.\nSOLR-5232: SolrCloud should distribute updates via streaming rather than buffering. "
        },
        {
            "author": "Ricardo Merizalde",
            "id": "comment-13834628",
            "date": "2013-11-28T09:06:34+0000",
            "content": "Mark, can this issue affect SolrCloud deployments with a single shard? We've been running SolrCloud since April and we experienced an odd outage today we've never seen before. \n\nWe are currently running Solr 4.5.1 with 4 slaves and we use CloudSolrServer to send updates. The number of threads went from under 100 to almost 400 in each of the instances in less than one minute. The heap filled up quickly as well until they ran out of memory. It filled about 2GB worth of heap in a couple minutes. Of course, all four JVM started doing major collections one after another but couldn't free any heap memory.\n\nUnfortunately, we forgot to take thread dumps in the rush for recovering our site. All we have are the heap dumps.\n\nAlso, we do auto hard commits every 5 minutes or every 10k documents. \n\nWe'll be trying 4.6 soon, however I want to check if we are headed in the right direction. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13834886",
            "date": "2013-11-28T14:34:27+0000",
            "content": "This shouldn't affect single-shard setups. The deadlock,\nas I remember, showed up when lots of nodes split up\nincoming batches of documents to forward to lots of\nleaders. Since a single shard won't split up the documents,\nI doubt this is the root of what you're seeing.\n\nBut yeah, a stack trace would tell us for certain.\n\nAnd Mark committed SOLR-5232 which uses a different\nmechanism anyway.\n\nTo recap: I doubt this issue is a problem in single-shard\nsetups. "
        }
    ]
}