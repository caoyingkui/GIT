{
    "id": "LUCENE-7405",
    "title": "suffix tree + index",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "You can develop a global suffix tree for string fields. \nin this way when you are in a node of this tree you can know all nodes field instances with same prefix. \nThis criterion could be extended also to numeric field for compare all fields (or a subset to define before) of all documents.\ncomparing the relative positions of 2 nodes you can understand the order (<=>) in fast way. \nthis could be used for extend query comparation in dynamic way to different document type or fields in different documents. \nIt is important to define the subset where to apply this algorithm(example: for example : all document with properties 'name' & 'surname'  ). This could be used also for joining document of different times.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}