{
    "id": "SOLR-3874",
    "title": "Add time to live (TTL) for documents",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "allow user to set the time to live of documents, and solr automatically delete the documents that are not live!",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13461746",
            "date": "2012-09-24T11:44:26+0000",
            "content": "My first reaction is that this kind of functionality doesn't belong in Solr since Solr is really an engine. It seems simple enough for the application to include a \"delete_on\" date when indexing and your app to periodically issue a delete-by query something like delete_on:[* to NOW].... "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13461825",
            "date": "2012-09-24T14:27:28+0000",
            "content": "Could this be implemented as a contrib/plugin instead of core functionality?\n\nSuch a plugin would need two components:\n\n\tAn UpdateRequestProcessor looking for a \"ttl\" parameter on update requests, translating it to a timestamp to be indexed as a date in e.g. field ttl_d\n\tA background job periodically issuing a delete-query towards the ttl_d field\n\n\n\nThe first is already easy to make and to wire into your update handlers. I'm not sure what plugin API would fit best for the background job. Most of our plugin APIs are event driven. Should we create a generic \"Job\" plugin point that could be wired into solrconfig.xml as\n\n<job name=\"periodic_deleter\" class=\"foo.Deleter\">\n  <int name=\"pollinterval\">60000</int>\n  <str name=\"field\">ttl_d</str>\n</job>\n\n "
        },
        {
            "author": "jiangwen wei",
            "id": "comment-13463452",
            "date": "2012-09-26T01:35:52+0000",
            "content": "@ Erick Erickson, many customers have such requirment. if this is provided by solr, customers will gain great convenience. Some other projects also have such features, like hbase, MongoDB, elasticsearch.\n\n@Jan H\u00f8ydahl, thanks for your suggestion, we will consider it carefully. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13697477",
            "date": "2013-07-02T03:52:55+0000",
            "content": "Jan H\u00f8ydahl - I think that would work!\nAs for:\nI'm not sure what plugin API would fit best for the background job\n\nHow about this: http://search-lucene.com/m/lcEHUJevwS1&subj=Re+Start+custom+Java+component+on+Solr+start - would this work?\nSeems like a super simple way to get this nice feature into Solr. "
        },
        {
            "author": "Kranti Parisa",
            "id": "comment-13755915",
            "date": "2013-09-02T05:48:32+0000",
            "content": "We are doing what Erick Erickson suggested above, by using the timestamp. But I agree with others here, this would be a very nice feature to let Solr do that by configuring it. And I had a similar idea related to Caches SOLR-5080 (Please read comments for the problem statement) "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13923459",
            "date": "2014-03-07T02:46:44+0000",
            "content": "Dupe of SOLR-5795 "
        }
    ]
}