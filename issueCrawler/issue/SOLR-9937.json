{
    "id": "SOLR-9937",
    "title": "StandardDirectoryFactory::move never uses atomic implementation",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Duplicate",
        "priority": "Major"
    },
    "description": "Path path1 = ((FSDirectory) baseFromDir).getDirectory().toAbsolutePath();\n      Path path2 = ((FSDirectory) baseFromDir).getDirectory().toAbsolutePath();\n      \n      try {\n        Files.move(path1.resolve(fileName), path2.resolve(fileName), StandardCopyOption.ATOMIC_MOVE);\n      } catch (AtomicMoveNotSupportedException e) {\n        Files.move(path1.resolve(fileName), path2.resolve(fileName));\n      }\n\n\n\nBecause path1 == path2 this code never does anything and move always defaults to the less efficient implementation in DirectoryFactory.",
    "attachments": {
        "SOLR-9937.patch": "https://issues.apache.org/jira/secure/attachment/12846035/SOLR-9937.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-06T16:52:25+0000",
            "author": "Mike Drob",
            "content": "Mark Miller - you were last to touch this in SOLR-9902, care to take a look? ",
            "id": "comment-15804979"
        },
        {
            "date": "2017-01-06T17:45:09+0000",
            "author": "Mark Miller",
            "content": "Nice catch. I suppose we should look at getting in a testing for this.  ",
            "id": "comment-15805103"
        },
        {
            "date": "2017-01-06T19:58:35+0000",
            "author": "Mike Drob",
            "content": "The current behaviour is correct, but not optimal.efficient. Not sure what kind of testing you think we would benefit from.\n\nCould do a performance test where we try to move 1000 files using DirectoryFactory and then move 1000 using StandardDirectoryFactory and measure that the second is faster. But that still sounds like we'll run into a problem and false failures on somebody's hardware that I haven't thought about. ",
            "id": "comment-15805574"
        },
        {
            "date": "2017-01-06T21:09:48+0000",
            "author": "Mark Miller",
            "content": "No, the behavior is not correct, we want a move to provide resiliency for replication and a move means atomic file stuff we want to ensure is the default behavior. We need to make sure someone else doesn't break this after it's fixed. ",
            "id": "comment-15805747"
        },
        {
            "date": "2017-01-06T21:11:09+0000",
            "author": "Mark Miller",
            "content": "This issue not working creates the same problems SOLR-9901 intended to fix for HDFS. ",
            "id": "comment-15805754"
        },
        {
            "date": "2017-01-08T15:31:12+0000",
            "author": "Mark Miller",
            "content": "Another bug is that we didn't return even if the move worked - we did super.move after anyway. Both fixed as additional commits in SOLR-9902. ",
            "id": "comment-15809559"
        }
    ]
}