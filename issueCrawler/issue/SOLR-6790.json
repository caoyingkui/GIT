{
    "id": "SOLR-6790",
    "title": "Implement a leader-serves-reads flag",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Won't Fix",
        "priority": "Major"
    },
    "description": "ZooKeeper has a flag that allows you to disable leaders serving reads, from some basic indexing performance analysis, leaders have visibly higher CPU and heap usage. Here are some screen shots that show the difference between a leader and replica in a 1x2 collection with no query activity (just indexing):\n\nleader - http://www.dropmocks.com/mHoPUx\nreplica - http://www.dropmocks.com/mHoWpX\n\nThere's a clear difference in peak & avg CPU and heap usage. I'm guessing the difference would be even more pronounced if there were more replicas involved.\n\nSetting the leader-serves-reads=false allows the leader to only do indexing and serve no queries so long as there are other active replicas. I'm thinking this will be true by default but able to set to false per collection. Of course if only the leader is up, then it will serve reads.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-25T02:37:18+0000",
            "author": "Timothy Potter",
            "content": "Errrr ... no, I'm wrong  I had the graphs for the leader and replica switched, meaning there was higher load on the replica than on the leader in this case. That must be because there are more requests coming into the replica because batches sent to the leader are broken up and then many more batches are sent to the replica (via CUSS). I'll table this feature for now. ",
            "id": "comment-14223960"
        },
        {
            "date": "2014-11-25T02:37:49+0000",
            "author": "Timothy Potter",
            "content": "See last comment - turns out there is more load on the replica than on the leader due to how batching from leader to replica works. ",
            "id": "comment-14223961"
        }
    ]
}