{
    "id": "SOLR-1871",
    "title": "Function Query \"map\" variant that allows \"target\" to be an arbitrary ValueSource",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Currently, as documented at http://wiki.apache.org/solr/FunctionQuery#map, the \"target\" of a map must be a floating point constant. I propose that you should have at least the option of doing a map where the target is an arbitrary ValueSource.\n\nThe particular use case that inspired this is that I want to be able to control how missing date fields affected boosting. In particular, I want to be able to use something like this in my function queries:\n\n\nmap(mydatefield,0,0,ms(NOW))\n\n\n\nBut this might have other uses.\n\nI'll attach an initial implementation.",
    "attachments": {
        "SOLR-1871.patch": "https://issues.apache.org/jira/secure/attachment/12441204/SOLR-1871.patch",
        "ASF.LICENSE.NOT.GRANTED--SOLR-1871.patch": "https://issues.apache.org/jira/secure/attachment/12442008/ASF.LICENSE.NOT.GRANTED--SOLR-1871.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Chris Harris",
            "id": "comment-12855122",
            "date": "2010-04-08T20:02:24+0000",
            "content": "A first stab at this. In this implementation, we use copy and paste and create a wholly separate function, \"mapf\" (\"f\" because this map is more function-oriented).\n\nmapf is not as efficient as normal map when the target is a constant. If the target is a constant, you now have something like a LongConstValueSource where you used to have just a float. I haven't tried to measure the performance difference.\n\nRangeMapfFloatFunction.hashCode() may be messed up. It's based on RangeMapFloatFunction.hashCode(), but I threw this patch together without stopping to properly understand that. method first. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12855125",
            "date": "2010-04-08T20:09:38+0000",
            "content": "Yep, makes sense.  Some of the older FunctionQueries predate the ability of the parser to generalize more (one had to know if one was parsing a constant or a function).  It might make sense to generalize the map function rather than have two functions? "
        },
        {
            "author": "Chris Harris",
            "id": "comment-12855128",
            "date": "2010-04-08T20:16:05+0000",
            "content": "Clean up some sloppiness in RangeMapfFloatFunction, where target was still being treated as if it were a value type. "
        },
        {
            "author": "Chris Harris",
            "id": "comment-12855133",
            "date": "2010-04-08T20:33:32+0000",
            "content": "Yep, makes sense. Some of the older FunctionQueries predate the ability of the parser to generalize more (one had to know if one was parsing a constant or a function). It might make sense to generalize the map function rather than have two functions?\n\nYes, having a single map sounds less confusing from a user perspective.\n\nThe reason I started by forking map into map and mapf was that I was worried about performance; I assumed (apparently incorrectly?) that hard-coding certain things as float constants had been done as a performance optimization. Are you implying that the approach taken by this fmap code is probably fast enough to be the standard implementation of map?\n\nAnd what if it were taken to the extreme of making all arguments for all function queries ValueSource compatible? (That is, what if all functions used fp.parseValueSource() for all their arguments, and parsed none of them with fp.parseFloat()?) Does that start to sound inefficient? "
        },
        {
            "author": "Chris Harris",
            "id": "comment-12858009",
            "date": "2010-04-16T21:24:05+0000",
            "content": "Revised patch, with two changes:\n\n\tNow we modify the behavior of \"map\", rather than introducing a new \"mapf\" function.\n\tNow not only the \"target\" but also the \"defaultValue\" can be a ValueSource.\n\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13835741",
            "date": "2013-11-30T13:29:51+0000",
            "content": "2013 Old JIRA cleanup "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13836081",
            "date": "2013-12-01T18:03:27+0000",
            "content": "Patch updated to trunk.\n\nI found a bug in TestValueSources.assertHits which was using search(Query, int, sort) method and didn't actually calculate scores. The whole test therefore wasn't actually testing anything. I changed it to use the search(Query, Filter, int, Sort, boolean, boolean) method.\n\nThe javadoc for RangeMapFloatFunction also was a copy/paste from LinearFloatFunction. This patch fixes that as well. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13836284",
            "date": "2013-12-02T06:34:42+0000",
            "content": "This patch preserves backward compatibility in RangeMapFloatFunction constructor by wrapping a float target or default in a ConstValueSource. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13836365",
            "date": "2013-12-02T08:33:35+0000",
            "content": "Commit 1546926 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1546926 ]\n\nSOLR-1871: The 'map' function query accepts a ValueSource as target and default value "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13836366",
            "date": "2013-12-02T08:35:10+0000",
            "content": "Commit 1546927 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1546927 ]\n\nSOLR-1871: The 'map' function query accepts a ValueSource as target and default value "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13836367",
            "date": "2013-12-02T08:36:28+0000",
            "content": "Thanks Chris! "
        }
    ]
}