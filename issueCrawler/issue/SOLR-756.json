{
    "id": "SOLR-756",
    "title": "Make DisjunctionMaxQueryParser generally useful by supporting all query types.",
    "details": {
        "affect_versions": "1.3",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "This is an enhancement to the DisjunctionMaxQueryParser to work on all the query variants such as wildcard, prefix, and fuzzy queries, and to support working in \"AND\" scenarios that are not processed by the min-should-match DisMax QParser. This was not in Solr already because DisMax was only used for a very limited syntax that didn't use those features. In my opinion, this makes a more suitable base parser for general use because unlike the Lucene/Solr parser, this one supports multiple default fields whereas other ones (say Yonik's \n{!prefix}\n one for example, can't do dismax). The notion of a single default field is antiquated and a technical under-the-hood detail of Lucene that I think Solr should shield the user from by on-the-fly using a DisMax when multiple fields are used. \n(patch to be attached soon)",
    "attachments": {
        "SolrPluginUtilsDisMax.patch": "https://issues.apache.org/jira/secure/attachment/12389582/SolrPluginUtilsDisMax.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "David Smiley",
            "id": "comment-12628707",
            "date": "2008-09-05T19:26:46+0000",
            "content": "The patch file is only to be applied on SolrPluginUtils.java.  The patch file might need to be modified to remove the header that indicates the path to this file which is unique to my development system.\nTesting this would be a little tricky because this parser is only used by one QParser and it prohibits doing the type of queries that would exercise these changes.  I have tests on my system but they involve other things that I have not contributed (yet, any way). "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12630208",
            "date": "2008-09-11T14:41:19+0000",
            "content": "I think the whole point of dismax is to support a very limited subset of the query syntax right? I think you want to add a new queryparser not modify dismax... "
        },
        {
            "author": "David Smiley",
            "id": "comment-12630217",
            "date": "2008-09-11T15:03:20+0000",
            "content": "The DisjunctionMaxQueryParser in Solr does more than limit the user's syntax.  It offers the DisjunctionMax capability which is unique to this query parser, it has a boostingQuery, and a boostingFunctions capability too.  Furthermore, the DisjunctionMaxQueryParser prescribes a particular way of limiting the user's syntax that I think applications should be able to specify if they so choose.\n\nSure, I could \"write my own query parser\" but that's a pain... why should everyone who wants the DisMax capability have to write their own just because we don't want it to make assumptions about a limited syntax? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12630220",
            "date": "2008-09-11T15:10:41+0000",
            "content": "I am not suggesting that you maintain your own, but perhaps that a new queryparser would be a better option. I am not positive in my answer, and am only thinking out loud. I got the impression that dismax goes out of its way to escape as much as it can to avoid parse errors and allow copy paste of text type of uses. The functionality you mention appears all to be from components below the dismax parser.  In my mind, I like the idea of keeping dismax lean and mean and starting something else to become a kitchen sink - Lucene's queryparser became a bit of a kitchen sink and I think dismax looks to be coded so as to avoid some of the problems that can emerge from that... "
        },
        {
            "author": "David Smiley",
            "id": "comment-12630223",
            "date": "2008-09-11T15:27:06+0000",
            "content": "When anyone says \"dismax\", there is ambiguity because it might mean one of two things:\n\n\tSolrPluginUtils.DisjunctionMaxQueryParser which extends Solr's QueryParser which extends Lucene's QueryParser.  In this JIRA issue I've offered a patch to this file.  This code has to deal with the foundational capability of tapping into Lucene's DisjunctionMaxQuery so that multiple fields can be a default instead of Lucene's just one.  I believe this change isn't controversial compared to others, IMO.\n\tThe DisMaxQParserPlugin triggered with \"qt=dismax\" which uses the QueryParser mentioned above and does things like escape user syntax, ,boost various things, min-should-match, etc.  Issue SOLR-758 includes my patch to that.  I think this plugin is named poorly because dismax is just one thing it does.\n\n\n\nI suspect your comments might be more applicable to SOLR-758 than they are here.  Have you actually seen the source I attached?  Are you apposed to the changes I make in this issue? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12630231",
            "date": "2008-09-11T15:50:27+0000",
            "content": "Ah, your right, I've gotten a bit lost floating between these issues and the mailing list email that led me here.\n\nI am not opposed to anything you have done. Just enriching the issue with some discussion <g> My point is only what I have said, and as you say, while mildly connected to this issue, is more leveled at 758.\n\nI don't really have anything to say against this patch in particular, and I apologize for the confusion. Looking at the code, seems reasonable to me. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12645566",
            "date": "2008-11-06T20:25:53+0000",
            "content": "My colleagues and I have recently hit a similar wall \u2013 DisMax not allowing wildcards.\nI think Hoss will be the loudest (not in a negative sense) here, so here are some specific questions:\n\n\n\tare we OK with adding wildcard (and other) support to \"dismax\"?\n\tif yes, which part of \"dismax\" should that be added to? (David described the 2 meanings of \"dismax\")\n\n\n\nI've hit this wall a couple of times that I think it's worth thinking about how to get support for non-plain-keywords-only queries somethere in the DisMax area.  Like David, I too want to make use of the other functionality that already exists there, such as bf, ps, etc.\n\nThanks. "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-12751038",
            "date": "2009-09-03T14:13:14+0000",
            "content": "We are regularly hitting this wall and users are very frustrated by not being able to use wildcards becuase we wanted the other advantages of the dismax parser.\n\nAny chance to get some of these changes in 1.4? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12754337",
            "date": "2009-09-11T20:44:15+0000",
            "content": "at this stage in the process for 1.4, i think most committers are focusing on bug fixes and avoiding adding new features ... especially new features that have been added to existing functionality, so they could trigger new bugs in existing use cases.\n\nFWIW: \n\n\tthe patch doesn't seem to have any test cases demonstrating the new functionality, which makes me leary of committing\n\ti'm not certain just from skimming the patch, but it seems like this should break behavior for any existing users of DisjunctionMaxQueryParser who are expecting the field aliases to only affect getFieldQuery ... i could be wrong about that though.\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872527",
            "date": "2010-05-27T22:07:12+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12994772",
            "date": "2011-02-15T12:15:33+0000",
            "content": "I think this issue can be closed as it duplicates SOLR-1553, not? "
        },
        {
            "author": "David Smiley",
            "id": "comment-12995567",
            "date": "2011-02-16T23:03:13+0000",
            "content": "Jan, you refer to the Extended Dismax QParser \u2013 and the answer is no.  I think you intended to comment on SOLR-758.  This patch here, as I said in a comment above here https://issues.apache.org/jira/browse/SOLR-756?focusedCommentId=12630223&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12630223 only has to do with a specific improvement to SolrPluginUtils.java, that is an enabler for other improvements to DismaxQParser. According to Hoss, I need to add tests for this issue. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043844",
            "date": "2011-06-03T16:47:21+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106412",
            "date": "2011-09-16T14:50:58+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234625",
            "date": "2012-03-21T18:08:38+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717295",
            "date": "2013-07-23T18:47:46+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        }
    ]
}