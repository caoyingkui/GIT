{
    "id": "SOLR-6311",
    "title": "SearchHandler should use path when no qt or shard.qt parameter is specified",
    "details": {
        "affect_versions": "4.9",
        "status": "Closed",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When performing distributed searches, you have to specify shards.qt unless you're on the default /select path for your handler. As this is configurable, even the default search handler could be on another path. The shard requests should thus default to the path if no shards.qt was specified.",
    "attachments": {
        "SOLR-6311.patch": "https://issues.apache.org/jira/secure/attachment/12659216/SOLR-6311.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Steve Molloy",
            "id": "comment-14082643",
            "date": "2014-08-01T18:07:53+0000",
            "content": "This patch will use shards.qt if specified, default to qt if not, then default to path if both were omitted. "
        },
        {
            "author": "David Smiley",
            "id": "comment-14085234",
            "date": "2014-08-04T20:26:42+0000",
            "content": "Strong +1 from me; I have no idea why it wasn't this way from the beginning. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14085258",
            "date": "2014-08-04T20:39:33+0000",
            "content": "When performing distributed searches, you have to specify shards.qt unless you're on the default /select path for your handler.\n\nThis was by design, and we should consider very carefully before changing it.\nMost of the time, other handlers were used to add default parameters.  When this is the case, it's preferable to hit a bare /select handler for sub-requests as hitting the same handler again and adding defaults again will have a lot of side effects and sometimes produce incorrect distributed results.  The worst is when a handler specifies shards or something, and this causes an endless loop. "
        },
        {
            "author": "David Smiley",
            "id": "comment-14085293",
            "date": "2014-08-04T21:13:29+0000",
            "content": "Good point Yonik; I forgot about that.  It's not this simple then.  In general, the need to specify shards.qt is to ensure one's customized components (e.g. spellcheck) are registered; it's not for request parameters.  Perhaps the solution is to have a shard request ignore parameters specified in the request handler? "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14086237",
            "date": "2014-08-05T13:08:32+0000",
            "content": "Thanks Yonik, hadn't thought of that. I'll think about alternatives for this as. Our main usage of different handlers is for using different sets of components (the suggester in its own handler for autocomplete being an example), in which case it seems wrong to force the request to contain shards.qt for distributed searches when we're trying to hide the fact that it's distributed by using collections. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14089286",
            "date": "2014-08-07T14:47:20+0000",
            "content": "Haven't had much time to look into alternate solution yet, but for the point of default parameters. What is then the impact of having default parameters on /select handler itself? Is there some limitations on parameters that should be set as defaults in /select handler? Even example config comes with defaults and suggests that more can be added. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14314389",
            "date": "2015-02-10T16:09:43+0000",
            "content": "Same issue I stumbled upon trying to fix SOLR-4479.\n\nMost of the time, other handlers were used to add default parameters.\n\nTrue, but sometimes they also add search components so silently routing shard requests to /select is just plain wrong.\n\nSeems like maybe the the hook to determine if the path should be applied as the default for shards.qt is whether there are custom components defined on that instance of SearchHandler? Seems a little nuanced but better for new users than the current experience. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14314547",
            "date": "2015-02-10T18:06:52+0000",
            "content": "doesn't the initParam stuff noble added improve the situation with vanity handler paths that have defaults? and doesn't it play nice with distibuted requests? (so that it only adds the defaults on the initial request, not the per-shard requests \u2013 if not it should)\n\ni think we should just bite the bullet on making the switch...\n\nstraw man:\n\n\n\tmake behavior conditional on LUCENE_MATCH_VERSION\n\t\n\t\tif < X, shards.qt defaults to /select\n\t\tif > X, shards.qt defaults to current handler\n\t\n\t\n\tusers who want to upgrade LUCENE_MATCH_VERSION but still get legacy behavior for vanity handler defaults should make hte burden of adding shards.qt=/select to the \"invariants\" for each of their vanity handlers\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14314656",
            "date": "2015-02-10T18:52:45+0000",
            "content": "Hoss Man \nWith InitParams , the behavior is exacly similar as if we have specified the the config in the requestHandler itself\n\nBut, as you said, I expect users to configure a lot more paths with the useParams feature with each mapping to a SearchHandler itself but a different set of params and a nice descriptive name. Coupled with the fact that you can change the params themselves pretty easily it will be more common. So you may see paths like /bestproducts-by-rating /best-products-by-sale etc. \n\nSo it should not really hurt moving to shards.qt=qt\n\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-14316242",
            "date": "2015-02-11T14:19:50+0000",
            "content": "i think we should just bite the bullet on making the switch...\n\n+1 to that!  It should have been done this way to begin with. I consider it a bug that distributed requests were apparently hard-coded to use /select "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14316493",
            "date": "2015-02-11T16:39:41+0000",
            "content": "It should have been done this way to begin with. I consider it a bug that distributed requests were apparently hard-coded to use /select\n\nDefinitely not a bug.\n\nyou have to remember the context of how distributed search was added \u2013 prior to SolrCloud, you had to specify a \"shards\" param listing all of the cores you wanted to do a distributed search over, and the primary convinience mechanism for doing that was to register a handler like this...\n\n\n<requestHandler name=\"/my_handler\" class=\"solr.SearchHandler\"/>\n  <lst name=\"defaults\">\n    <str name=\"shards\">foo:8983/solr,bar:8983/solr</str>\n    <int name=\"rows\">100</int>\n  </lst>\n</requestHandler>\n\n\n\n...so the choice to have \"shards.qt\" default to \"/select\" instead of the current qt was extremely important to make distributed search function correctly for most users for multiple reasons:\n\n1) so that the shards param wouldn't cause infinite recursion\n2) so that the \"defaults\" wouldn't be automatically inherited by the per-shard requests\n\nBut now is not then \u2013 the default behavior of shards.qt should change to make the most sense given the features and best practice currently available in Solr.  SolrCloud solves #1, and IIUC useParams solves #2, so we can move forward. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14316751",
            "date": "2015-02-11T18:47:21+0000",
            "content": "I'm going with Hoss Man's suggestion of using the LUCENE_MATCH_VERSION and am targeting this fix for the 5.1 release. So my first inclination was to do:\n\n\nif (req.getCore().getSolrConfig().luceneMatchVersion.onOrAfter(Version.LUCENE_5_1_0)) {\n ...\n\n\n\nBut Version.LUCENE_5_1_0 is deprecated, so do I do this instead? \n\n\nif (req.getCore().getSolrConfig().luceneMatchVersion.onOrAfter(Version.LATEST)) {\n...\n\n\n\nI guess it's the deprecated thing that's throwing me off. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14316767",
            "date": "2015-02-11T18:56:08+0000",
            "content": "nm! If I look at branch5x, my question is answered  sometimes you have to look outside of trunk to see clearly! "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14316919",
            "date": "2015-02-11T20:24:42+0000",
            "content": "Patch that implements the conditional logic based on the luceneMatchVersion. I'm intending this fix to be included in 5.1. The TermVectorComponentDistributedTest test now works without specifying the shards.qt query param. Feedback welcome! "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-14316967",
            "date": "2015-02-11T20:57:58+0000",
            "content": "Definitely not a bug. you have to remember the context of how distributed search was added \n\nThanks for the history, makes it clearer why it was needed.\n\nBut now is not then\n\nIndeed, now distributed/SolrCloud is pretty much the norm...\n\nSo anyhow, patch with logic on version makes sense for me, so +1.  "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14320806",
            "date": "2015-02-13T21:42:30+0000",
            "content": "Commit 1659694 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1659694 ]\n\nSOLR-6311: SearchHandler should use path when no qt or shard.qt parameter is specified "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14320854",
            "date": "2015-02-13T22:13:28+0000",
            "content": "Commit 1659699 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1659699 ]\n\nSOLR-6311: SearchHandler should use path when no qt or shard.qt parameter is specified "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14495248",
            "date": "2015-04-15T00:30:15+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}