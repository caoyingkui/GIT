{
    "id": "LUCENE-4099",
    "title": "Remove generics from SpatialStrategy and remove SpatialFieldInfo",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/spatial"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Same time ago I added SpatialFieldInfo as a way for SpatialStrategys to declare what information they needed per request.  This meant that a Strategy could be used across multiple requests.  However it doesn't really need to be that way any more, Strategies are light to instantiate and the generics are just clumsy and annoying.\n\nInstead Strategies should just define what they need in their constructor.",
    "attachments": {
        "LUCENE-4099_remove_SpatialFieldInfo_and_put_fieldName_into_Strategy_instead_of_methods.patch": "https://issues.apache.org/jira/secure/attachment/12534573/LUCENE-4099_remove_SpatialFieldInfo_and_put_fieldName_into_Strategy_instead_of_methods.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-06-01T13:55:16+0000",
            "content": "Although the SpatialStrategies have become fairly lightweight; I'd like to see if there is a path forward that retains re-using SpatialStrategies across requests, sans the API awkwardness of SpatialFieldInfo as it is is implemented today.  Perhaps a SpatialStrategy can be created per field (although it may technically use more than one field) and then there's no need for SpatialFieldInfo or anything like it. ",
            "author": "David Smiley",
            "id": "comment-13287409"
        },
        {
            "date": "2012-06-01T13:58:11+0000",
            "content": "That can definitely happen.  I guess instead of being instantiated per request, I mean they will be instantiated per configuration.   ",
            "author": "Chris Male",
            "id": "comment-13287413"
        },
        {
            "date": "2012-07-03T06:39:35+0000",
            "content": "Here is a patch.  This is a major change to the API.  The SpatialFieldInfo and its subclasses are all gone, as well as the generics declarations on SpatialStrategy and SpatialStrategyTestCase.  Essentially the related functionality was inlined into each strategy.  There is a little duplication between TwoDoublesStrategy & BBoxStrategy to create a double and hold a configurable precisionStep.\n\nI could have simply put the String field name into each method argument position which took a fieldInfo, but instead I thought it nicer to put the field name into the Strategy instance itself.  It is initialized as the 2nd constructor argument.  This does tie a Strategy instance to a field, but I think that's fine and I'm quite happy with the overall affect. ",
            "author": "David Smiley",
            "id": "comment-13405664"
        },
        {
            "date": "2012-07-03T21:51:49+0000",
            "content": "This looks fine, it looks like the one impact is that the Strategy would be instanciated once for each field rather then once for each fieldType (in solr terms) ",
            "author": "Ryan McKinley",
            "id": "comment-13406089"
        },
        {
            "date": "2012-07-04T03:06:20+0000",
            "content": "It occurred to me that if Strategy is going to contain the field name, then it might as well contain isStored() & isIndexed() as well.\n\nOn the Solr side, I imagine the field type would do a lookup in a small HashMap of fieldName->Strategy.  I'm not sure what the concurrency model is but I figure it needs to be thread-safe. ",
            "author": "David Smiley",
            "id": "comment-13406250"
        },
        {
            "date": "2012-07-04T03:16:30+0000",
            "content": "I think we need to reconsider storing as part of the Strategys, the logic doesn't really make sense.  I'll open an issue. ",
            "author": "Chris Male",
            "id": "comment-13406251"
        },
        {
            "date": "2012-07-04T03:25:17+0000",
            "content": "LUCENE-4188 ",
            "author": "Chris Male",
            "id": "comment-13406253"
        },
        {
            "date": "2012-07-05T03:24:43+0000",
            "content": "Committed to trunk & 4x.\nAnd never-mind my thought on adding isIndexed & isStored, in light of LUCENE-4188. ",
            "author": "David Smiley",
            "id": "comment-13406829"
        }
    ]
}