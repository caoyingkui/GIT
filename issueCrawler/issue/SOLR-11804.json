{
    "id": "SOLR-11804",
    "title": "Test RankQuery in distributed mode",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Test",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Currently RankQuery is not tested in distributed mode. I added a few tests in `TestDistributedSearch` to check that it works properly.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-29T13:52:42+0000",
            "content": "GitHub user diegoceccarelli opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/296\n\n    SOLR-11804: Test RankQuery in distributed mode\n\n    Currently `RankQuery` is not tested in distributed mode. I added a few tests in `TestDistributedSearch` to check that it works properly.\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/bloomberg/lucene-solr SOLR-11804\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/296.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #296\n\n\ncommit 1591ec8e3c5e0cd670890642b34aba4eb22e0a99\nAuthor: Diego Ceccarelli <dceccarelli4@...>\nDate:   2017-12-29T13:51:04Z\n\n    SOLR-11804: Test RankQuery in distributed mode\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-16306291"
        },
        {
            "date": "2018-01-23T04:21:11+0000",
            "content": "Thanks Diego Ceccarelli. The patch looks good, although q=all only returns 2 docs, maybe the test can be improved by having a better query (that returns at least the re-rank amount of docs?). In line with that, even if in many cases (specially in this test) we only validate distributed vs non-distributed, I'd prefer if you checked something of the response, at least to make sure docs are coming back, maybe like:\n\n\u00a0\u00a0\u00a0 QueryResponse response = query(\"q\",facetQuery, \"rows\",100, \"facet\",\"true\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"facet.range\",tlong,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"facet.range.start\",200,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"facet.range.gap\",100,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"facet.range.end\",900,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"facet.range.other\",\"all\");\n\u00a0\u00a0\u00a0 assertEquals(tlong, response.getFacetRanges().get(0).getName());\n\u00a0\u00a0\u00a0 assertEquals(new Integer(6), response.getFacetRanges().get(0).getBefore());\n\u00a0\u00a0\u00a0 assertEquals(new Integer(5), response.getFacetRanges().get(0).getBetween());\n\u00a0\u00a0\u00a0 assertEquals(new Integer(2), response.getFacetRanges().get(0).getAfter());\n ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16335372"
        }
    ]
}