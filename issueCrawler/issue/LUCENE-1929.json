{
    "id": "LUCENE-1929",
    "title": "Highlighter doesn't support NumericRangeQuery or deprecated RangeQuery",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/highlighter"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.9.1"
        ],
        "affect_versions": "2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Sucks. Will throw a NullPointer exception. \n\nOnly NumericRangeQuery will throw the exception.\nRangeQuery just won't highlight.",
    "attachments": {
        "LUCENE-1929.patch": "https://issues.apache.org/jira/secure/attachment/12421233/LUCENE-1929.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-09-27T16:52:41+0000",
            "content": "So making NumericQuery Hilightable is not going to be so quick and easy - best first step is prob just make it be skipped, rather than throwing a NullPointer exception. Highlight support can come later. ",
            "author": "Mark Miller",
            "id": "comment-12760056"
        },
        {
            "date": "2009-09-27T17:00:26+0000",
            "content": "Does it throw a NPE for every \"unknown\" query type? Or is this because of it is a subclass of MTQ? ",
            "author": "Uwe Schindler",
            "id": "comment-12760060"
        },
        {
            "date": "2009-09-27T17:02:16+0000",
            "content": "I read what stands in SOLR-1221: It calls MTQ.getTerm() which is deprecated. The getTerm() method is moved downto the sub classes, so MTQ.getTerm() will be removed in 3.0. Because of this there was no intention to implement it in NumericRQ. ",
            "author": "Uwe Schindler",
            "id": "comment-12760061"
        },
        {
            "date": "2009-09-27T17:08:13+0000",
            "content": "Yeah - eventually (as in when getTerm() is removed), the Highlighter was going to have to deal with that anyway. Deprecated methods should still work though - so whether return null from getTerm is right or wrong, I dunno.\n\nBut thats the issue - except for TermRangeQuery, the Highlighter looks for the Field by calling getTerm and asking for the field - made the exception for TermRangeQuery, but not NumericRangeQuery - so it throw a nullpointer exception. Easy to sidestep in Lucene, more of a pain in Solr (as the plan is to release with 2.9.0) ",
            "author": "Mark Miller",
            "id": "comment-12760062"
        },
        {
            "date": "2009-09-27T17:20:36+0000",
            "content": "so whether return null from getTerm is right or wrong, I dunno.\n\nIn fact, its probably wrong - but at this point its a moot point. ",
            "author": "Mark Miller",
            "id": "comment-12760064"
        },
        {
            "date": "2009-09-27T17:36:28+0000",
            "content": "In fact, its probably wrong - but at this point its a moot point.\n\nIt can only return a \"pattern term\" if there is one. What is the pattern term for TermRangeQuery or NumericRangeQuery. Both return null and that is fine (and not a backwards break, as both classes are new in 2.9). That was exactly the discussion behind removing the getTerm() stuff from MTQ.\n\nSolr could maybe remove the NRQ from the highligter query. ",
            "author": "Uwe Schindler",
            "id": "comment-12760066"
        },
        {
            "date": "2009-09-27T17:41:11+0000",
            "content": "I realize the difficulties - I wasn't blaming you for the problem - but it is/was a problem.\n\nWe deprecated getTerm() because of the problem (I think I did it? Don't remember though).\n\nHowever, unless it was documented to return null, just deprecating it doesn't really fix things. Code thats trying to use it on the base MultiTermQuery isn't going\nto be checking if its null unless its documented as such.\n\nI agree its screwed and it will be nice when its gone.\n\nLike I said, its a moot point. But I'll argue any point, moot or not  ",
            "author": "Mark Miller",
            "id": "comment-12760067"
        },
        {
            "date": "2009-09-27T17:45:05+0000",
            "content": "and not a backwards break, as both classes are new in 2.9\n\nI didn't claim its back compat break - but any method on a base class than can return null really needs to be documented as such. I should have caught that and done a better doc job on MulitTermQuery. I'm not claiming back compat issues, I'm claiming its wrong.\n\nOn a side note, its a bummer we seem to have lost the history on RangeQuery. ",
            "author": "Mark Miller",
            "id": "comment-12760068"
        },
        {
            "date": "2009-09-27T17:49:05+0000",
            "content": "On a side note, its a bummer we seem to have lost the history on RangeQuery.\n\nNo we didn't. As RangeQuery is just a wrapper and will be removed in 3.0, I renamed the old RangeQuery to the new TermRangeQuery (so the history is there) and created a new class RangeQuery for the BW compatibility. This is better than loosing the history in 3.0. ",
            "author": "Uwe Schindler",
            "id": "comment-12760070"
        },
        {
            "date": "2009-09-27T17:50:33+0000",
            "content": "Ah, thanks - didn't catch that. Wondered how it could happen - looked weird. Faint memory of the whole thing returning though. ",
            "author": "Mark Miller",
            "id": "comment-12760071"
        },
        {
            "date": "2009-09-27T17:54:49+0000",
            "content": "I wasn't blaming you for the problem\n\nIn fact, now that I can see the history to remember, if you go back and look, I am completely to blame  ",
            "author": "Mark Miller",
            "id": "comment-12760072"
        },
        {
            "date": "2009-09-27T17:58:55+0000",
            "content": "Another option to fix Solr's highlighter is to fix this in lucene and release solr with 2.9.0, but an updated highlighter package. As it is contrib, that shouldn't be a problem?\n\nIn my opinion, the whole highlighter stuff should somehow be implemented without tons of instanceof checks (thats really wired). Maybe we extend Query by some highligther addons in future. I think we had an issue about that? ",
            "author": "Uwe Schindler",
            "id": "comment-12760074"
        },
        {
            "date": "2009-09-27T18:04:12+0000",
            "content": "Another option to fix Solr's highlighter is to fix this in lucene and release solr with 2.9.0, but an updated highlighter package. As it is contrib, that shouldn't be a problem?\n\nThats a good point and prob the way to go.\n\nIn my opinion, the whole highlighter stuff should somehow be implemented without tons of instanceof checks (thats really wired). Maybe we extend Query by some highligther addons in future. I think we had an issue about that?\n\nYes - would be wonderful to lose all of the instanceOf - its just kind of legacy - how its worked in the past. Getting away from it would be fantastic. ",
            "author": "Mark Miller",
            "id": "comment-12760076"
        },
        {
            "date": "2009-10-04T17:48:26+0000",
            "content": "The 2.9.1 fix ",
            "author": "Mark Miller",
            "id": "comment-12762037"
        },
        {
            "date": "2009-10-13T14:10:49+0000",
            "content": "This is fixed also in trunk, but different where MTQ.getTerm() is not available (LUCENE-1977) ",
            "author": "Uwe Schindler",
            "id": "comment-12765082"
        },
        {
            "date": "2009-10-19T17:26:33+0000",
            "content": "Mark is this one reading to go into 2.9.1? ",
            "author": "Michael McCandless",
            "id": "comment-12767392"
        },
        {
            "date": "2009-10-19T17:29:28+0000",
            "content": "Yeah - sorry - has been for some time. I can commit it shortly. ",
            "author": "Mark Miller",
            "id": "comment-12767394"
        },
        {
            "date": "2009-11-07T14:57:30+0000",
            "content": "Bulk close all 2.9.1 issues. ",
            "author": "Michael McCandless",
            "id": "comment-12774609"
        }
    ]
}