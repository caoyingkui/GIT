{
    "id": "SOLR-11691",
    "title": "v2 api for CREATEALIAS fails if given a list with more than one element",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "v2 API"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.2"
        ],
        "affect_versions": "master (8.0)",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Successful, correct:\n\n\n{\n  \"create-alias\" : {\n    \"name\": \"testalias1\",\n    \"collections\":[\"collection1\"]\n  }\n}\n\n\n\nSuccessful, but wrong:\n\n{\n  \"create-alias\" : {\n    \"name\": \"testalias1\",\n    \"collections\":[\"collection1,collection2\"]\n  }\n}\n\n\n\nFails, but should work based on details in _introspect:\n\n{\n  \"create-alias\" : {\n    \"name\": \"testalias2\",\n    \"collections\":[\"collection1\",\"collection2\"]\n  }\n}\n\n\n\nThe error returned is:\n\n{\n    \"responseHeader\": {\n        \"status\": 400,\n        \"QTime\": 25\n    },\n    \"Operation createalias caused exception:\": \"org.apache.solr.common.SolrException:org.apache.solr.common.SolrException: Can't create collection alias for collections='[collection1, collection2]', '[collection1' is not an existing collection or alias\",\n    \"exception\": {\n        \"msg\": \"Can't create collection alias for collections='[collection1, collection2]', '[collection1' is not an existing collection or alias\",\n        \"rspCode\": 400\n    },\n    \"error\": {\n        \"metadata\": [\n            \"error-class\",\n            \"org.apache.solr.common.SolrException\",\n            \"root-error-class\",\n            \"org.apache.solr.common.SolrException\"\n        ],\n        \"msg\": \"Can't create collection alias for collections='[collection1, collection2]', '[collection1' is not an existing collection or alias\",\n        \"code\": 400\n    }\n}\n\n\n\nwhereas \n\nGET localhost:8981/api/c\n\n\n\nyields\n\n\n{\n    \"responseHeader\": {\n        \"status\": 0,\n        \"QTime\": 0\n    },\n    \"collections\": [\n        \"collection2\",\n        \"collection1\"\n    ]\n}\n\n\n\nIntropsection shows:\n\n     \"collections\": {\n         \"type\": \"array\",\n         \"description\": \"The list of collections to be known as this alias.\",\n          \"items\": {\n              \"type\": \"string\"\n           }\n      },\n\n\n\nBasically the property is documented as an array, but parsed as a string (I suspect it's parsed as a list but then the toString value of the list is used, but haven't checked). We have a conflict between what is natural for expressing a list in JSON (an array) and what is natural for expressing a list as a parameter (comma separation). I'm unsure how best to resolve this, as it's a question of making \"direct translation\" to v2 work vs making v2 more natural. I tend to favor accepting an array and therefore making v2 more natural which would be more work, but want to know what others think. From a back compatibility perspective, that direction also makes this clearly a bug fix rather than a breaking change since it doesn't match the _introspect documentation. I also haven't tried looking at old versions to find any evidence as to whether the documented form worked previously... so I don't know if this is a regression or if it never worked.",
    "attachments": {
        "SOLR-11691.patch": "https://issues.apache.org/jira/secure/attachment/12900987/SOLR-11691.patch",
        "repro.sh": "https://issues.apache.org/jira/secure/attachment/12900986/repro.sh"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-07T00:28:23+0000",
            "content": "I've attached a patch to correct this behavior.  With this patch, CREATEALIAS now supports a proper JSON array [\"a\", \"b\"], as well as the previously accepted formats (comma-delimited values, and comma-delimited values inside a JSON array).\n\nAlso attached is a bash script reproducing the problem (and exhibiting the correct behavior when the patch has been applied).\n ",
            "author": "Jason Gerlowski",
            "id": "comment-16281178"
        },
        {
            "date": "2017-12-07T05:13:12+0000",
            "content": "Thanks Gus Heck for the detailed bug report and thanks Jason Gerlowski for contributing a solution and reproducibility script!  \n\nI guess I'm okay with the overall approach of having CreateAliasCmd do this JSON parsing although it feels as though it should be on the v2 side somehow (which I am not familiar with so can't point you at a particular class).  Noble Paul do you have an opinion?\n\nAssuming we stay the course... can we make this patch detect that it's JSON and if so parse it properly?  See Utils.fromJSON etc.  Your solution of stripping the brackets and quotes is a bit hokey.  And I'm not sure why you used commons-lang3 to call StringUtils when Solr has equivalents in StrUtils. ",
            "author": "David Smiley",
            "id": "comment-16281340"
        },
        {
            "date": "2017-12-07T05:31:56+0000",
            "content": "untested patch , isn't this better ",
            "author": "Noble Paul",
            "id": "comment-16281352"
        },
        {
            "date": "2017-12-07T13:52:17+0000",
            "content": "Not to turn my back on my work, but let's go with Noble's solution.  I didn't realize that we could get the collections as a List from ZkNodeProps, and could avoid monkeying around with removing brackets, etc.\n\nMy bad. ",
            "author": "Jason Gerlowski",
            "id": "comment-16281864"
        },
        {
            "date": "2017-12-07T15:31:27+0000",
            "content": "I tweaked it slightly and added a formal test.  Thanks Noble Paul.\n\nAdrien Grand shall I commit this to 7.2?  It's a bug but not a serious one. ",
            "author": "David Smiley",
            "id": "comment-16282004"
        },
        {
            "date": "2017-12-07T15:39:34+0000",
            "content": "The patch looks low risk (but I'm not familiar with this part of the code, so I could be wrong) so I'd say +1 to backport to 7.2. ",
            "author": "Adrien Grand",
            "id": "comment-16282012"
        },
        {
            "date": "2017-12-07T15:56:12+0000",
            "content": "Commit 5448274f26191a9882aa5c3020e3cbdcbf93551c in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5448274 ]\n\nSOLR-11691: Bug: V2 requests for create-alias didn't work when the collections param was an array. ",
            "author": "ASF subversion and git services",
            "id": "comment-16282045"
        },
        {
            "date": "2017-12-07T15:57:23+0000",
            "content": "Commit fe8dca8ea2ef9f58d106e109e2d02c0423e508c4 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fe8dca8 ]\n\nSOLR-11691: Bug: V2 requests for create-alias didn't work when the collections param was an array.\n\n(cherry picked from commit 5448274) ",
            "author": "ASF subversion and git services",
            "id": "comment-16282047"
        },
        {
            "date": "2017-12-07T15:58:25+0000",
            "content": "Commit d17d331ec06f31c1abb625f53d3a0450e0c1c83c in lucene-solr's branch refs/heads/branch_7_2 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d17d331 ]\n\nSOLR-11691: Bug: V2 requests for create-alias didn't work when the collections param was an array.\n\n(cherry picked from commit fe8dca8) ",
            "author": "ASF subversion and git services",
            "id": "comment-16282049"
        }
    ]
}