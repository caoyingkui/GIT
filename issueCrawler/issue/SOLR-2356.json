{
    "id": "SOLR-2356",
    "title": "indexing using DataImportHandler does not use entire CPU capacities",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "When I use a DataImportHandler to index a large number of documents (~35M), cpu usage doesn't go over than 100% cpu (i.e. just one core).\nWhen I configure 4 threads for the <entity> tag, the cpu usage is splitted to 25% per core but never use 400% of cpu (i.e 100% of the 4 cores)\n\nI use solr embedded with jetty server.\nIs there a way to tune this feature in order to use all cores and improve indexing performances ?\nBecause for the moment, an extra script (PHP) gives better indexing performances than DIH.\n\nthanks",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Roman",
            "id": "comment-13641692",
            "date": "2013-04-25T11:41:20+0000",
            "content": "Why this issue is marked as minor? Data import can bee speeded up to 5-10 times on most machines. It seems pretty important. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13641944",
            "date": "2013-04-25T16:48:18+0000",
            "content": "Roman, patches are welcome.  If you know how to fix it, get the source code and go for it, then upload the patch.  The issue is more than two years old, so if it were an easy fix, the people that really know DIH would have fixed it already.  You can use the SolrJ library to write a multi-threaded application to import data.  If the design is solid, it could ultimately become the basis for a new DIH.\n\nIt used to be possible to configure multiple threads in the DIH config, but that was removed in 4.x because it was unstable.  Also, it didn't really help, as the issue reporter found.  It will probably take a complete redesign to fix this issue, and DIH is a contrib module, not part of the main Solr code.  That is why this is marked minor. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13642219",
            "date": "2013-04-25T21:07:29+0000",
            "content": "In my opinion, DIH should be completely redesigned as a standalone webapp. It is a major design flaw that it is a RequestHandler within a Solr Core/collection.\n\nAs a standalone web app it could easily be deplyed on its own, talk to multiple collections and be parallellized. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13642576",
            "date": "2013-04-26T04:22:54+0000",
            "content": "In my opinion, DIH should be completely redesigned as a standalone webapp. It is a major design flaw that it is a RequestHandler within a Solr Core/collection.\n\nActually, DIH started as a standalone webapp inside AOL. We changed it because we didn't want to duplicate the schema in two places and also because we wanted to have it available by default in Solr installations. Another web app means you need to procure hardware, plan capacity/failover, create firewall holes etc\n\nAs a standalone web app it could easily be deplyed on its own, talk to multiple collections and be parallellized.\n\nTalking to multiple collections was never a goal for DIH \u2013 I'm not sure what value it will bring. The multi-threading support in DIH can use a lot of improvement for sure. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13642626",
            "date": "2013-04-26T06:09:03+0000",
            "content": "Actually, DIH started as a standalone webapp inside AOL. We changed it because we didn't want to duplicate the schema in two places and also because we wanted to have it available by default in Solr installations.  Another web app means you need to procure hardware, plan capacity/failover, create firewall holes etc\n\nEven if it were a standalone app, I would still run it on the same hardware that runs Solr, though I might run it on the secondary servers that aren't normally seeing query load.\n\nWhy would you need to have the schema in two places?  My DIH config doesn't mention any field names, because all Solr field names match the MySQL field names.  Even if they didn't, I'm not sure why it would be any different than any other SolrJ client, which doesn't need to have a copy of the schema.\n\nTalking to multiple collections was never a goal for DIH \u2013 I'm not sure what value it will bring. \n\nI've got a sharded index; currently production is on version 3.5.0.  Full rebuilds are done with DIH because my SolrJ application can't touch it for indexing speed.  It does fine for keeping the index up to date with once-a-minute updates, but for indexing millions of documents per shard, DIH beats it handily even though it's only single-threaded.\n\nIf I could put all the DIH stuff into one central place, it might make it easier to manage.  I do intend to look at the DIH code to see how it manages to run so fast, so I can hopefully improve my own code, but I can never find the time. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13642655",
            "date": "2013-04-26T07:58:49+0000",
            "content": "Put in in example/webapps/dih.war and it would live by default in http://localhost:8983/dih/ - same host, same port...\nNow that we have the new schema REST API, it could get the schema from there to validate correct fields etc.\nUsing the Collections API, a standalone app could ask user which collection to index a certain table into.\n\nAnd it could support automated full reindex without downtime and even with schema change: 1) create a new collection 2) index everything from scratch 3) swap/alias the new using the old name 4) delete the old collection. More flexible "
        },
        {
            "author": "Alexey Serba",
            "id": "comment-13645001",
            "date": "2013-04-29T22:56:10+0000",
            "content": "It seems like bottleneck in colby's case is database connection and indexing records from a single database result set using multiple threads won't help that much (unless you have really CPU intensive analysis process).\n\nIn my opinion, DIH should be completely redesigned as a standalone webapp. It is a major design flaw that it is a RequestHandler within a Solr Core/collection.\n+1 "
        }
    ]
}