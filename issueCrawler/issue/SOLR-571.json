{
    "id": "SOLR-571",
    "title": "LRUCache autowarmCount should support percentages",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "a recent thread reminded me of an old idea that never got implemented...\n\nthe autowarmCount for LRUCaches should support \"percentages\" which get evaluated relative the current size of the cache when warming happens.  \n\nin this way, a Solr instance might be configured with autowarmCount=\"50%\" to autowarm the top half of the queries ... a master machine might be configured this way to give some autowarming if it is inadvertently being queried, but things won't be maintained in the caches in perpetuity ... each subsequent cache instance would have fewer and fewer of the \"old\" queries warmed automatically.",
    "attachments": {
        "SOLR-571.patch": "https://issues.apache.org/jira/secure/attachment/12442696/SOLR-571.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12595851",
            "date": "2008-05-10T20:15:32+0000",
            "content": "Yep, great idea, and should be fairly simple to implement. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12858778",
            "date": "2010-04-20T07:27:05+0000",
            "content": "if someone has a large number of unique queries, will it not take too  long to commit. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-12859050",
            "date": "2010-04-20T20:26:33+0000",
            "content": "I don't understand why it could take longer to commit than when using an absolute value instead of a percentage.\nThe number of items sent from the old cache to the new cache will depend on the size of the old cache and on the configured percentage. If someone uses a big percentage (like 75% or 100%) on a big cache, it might take long, but it will be pretty much the same of using a very big number on autowarmCount attribute on the same cache.\nAm I missing something? I can't see a problem here. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12859120",
            "date": "2010-04-20T23:14:57+0000",
            "content": "I can't see a problem here. \n\nme neither.\n\nNoble: the percentages will be evaluated relative the current size of the cache \u2013 for a full cache, setting to 100% won't be any slower then setting autowarmCount == size.\n\nwhat this changes is that people can set autowarmCount=\"50%\" and then if the box stops serving queries, there will be a gradualdrop off in the number of items inserted into hte cache due to autowarming after each successive commit "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12859211",
            "date": "2010-04-21T05:45:52+0000",
            "content": "S\\o 50%is the 50% of cache size. so it should be finite. \nOK got it "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-12860348",
            "date": "2010-04-23T18:50:18+0000",
            "content": "On the attached patch, I modified classes LRUCache and FastLRUCache adding the capability of using a percentage value in the \"autowarmCount\" parameter. The percentage value gets evaluated with the current size of the \"old\" cache when warming the new cache.\nI also added some tests of the new functionality. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12861589",
            "date": "2010-04-27T22:26:26+0000",
            "content": "Tomas: thanks for taking a crack at this, your patch (particularly the tests) are much appreciated!\n\nI'm not keen on proliferating the amount of cut/paste between LRUCache and FastLRUCache, so i refactored your new code into a baseclass.  i also felt uncomfortable overloading the same int value to be both a number and a percentage depending on the value of a different boolean, so i also refactored that into an immutable reference class that abstracts the logic.\n\nrevised patch attached, i'll commit as soon as i finish running all the tests "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12861598",
            "date": "2010-04-27T22:41:56+0000",
            "content": "Committed revision 938708. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-12862340",
            "date": "2010-04-29T18:42:36+0000",
            "content": "Excellent. Since this was my first patch for Solr, I didn't want to modify too much code just for a little functional change. Next time I'll feel freer to do it if it's necessary. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12862343",
            "date": "2010-04-29T18:47:12+0000",
            "content": "Since this was my first patch for Solr, I didn't want to modify too much code just for a little functional change. \n\nYour instincts were correct \u2013 patches should try to remain focused, so a major refactoring of the two classes would have confused the issue, but if you find yourself adding the same method to two different classes in a patch, refactoring it into a utility method to make it clear to the patch reader that the functionality really is identical is a good idea \u2013 it helps point the way to subsequent refactorings (like the super class i added). "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872827",
            "date": "2010-05-28T03:32:22+0000",
            "content": "\nCorrecting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        }
    ]
}