{
    "id": "LUCENE-4438",
    "title": "Lucene40StoredFieldsReader's constructor calls close() instead of IOUtils.closeWhileHandlingException in its finally block",
    "details": {
        "components": [],
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "4.0",
        "priority": "Minor",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "It would be nice to have automated tests for this kind of things (similarly to the check-forbidden-api task).\n\nHere is the discussion I just had with Uwe on IRC:\n\n15:32 < jpountz> ThetaPh1: I just saw that Lucene40StoredFieldsReader's constructor calls close in its finally block. I think it is wrong since close might throw an IOE (should be catched), am I \n                 correct? If yes, then is it something we could test with ASM (similarly to the forbidden API checks)?\n15:32 <@ThetaPh1> it does not use IOUtils?\n15:33 <@ThetaPh1> we cannot check this with asm easily\n15:33 <@ThetaPh1> we could only forbid calling Closeable.close() and exclude IOUtils from that\n15:34 <@ThetaPh1> so the correct fix is to use IOUtils when clsoing\n15:34 <@ThetaPh1> it also checks for null and suppresses exceptions\n15:36 < jpountz> ThetaPh1: no, it does no\n15:36 <@ThetaPh1> its a bug :-)\n15:36 <@ThetaPh1> but not serious\n15:36 <@ThetaPh1> for local files it never throws exceptions\n15:36 < jpountz> ok\n15:37 < jpountz> I think catching calls to Closeable.close would already be nice\n15:37 <@ThetaPh1> but we might think about disallowing Closeable.close()\n15:37 < jpountz> I'll open an issue\n15:37 <@ThetaPh1> we can add that as a separate check-forbidden-apis file\n15:37 <@ThetaPh1> but exclude IOUtils from the fileset\n15:37 <@ThetaPh1> unfortunately all tests do this\n15:38 <@ThetaPh1> so i would restriuct this to non-tests, too",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-09-26T13:47:25+0000",
            "content": "\n[15:44]\tThetaPh1: jpountz: problem\n[15:44]\tThetaPh1: super.close() in a subclass\n[15:44]\tThetaPh1: this should be allowed\n[15:46]\tThetaPh1: so the forbidden-apis checker cannot handle that without a special case\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13463814"
        },
        {
            "date": "2012-09-26T13:51:43+0000",
            "content": "We could at least investigate the list?\n\nAlso, unlike when writing (MockIndexOutputWrapper.java), we never throw random \nexceptions from MockIndexInputWrapper.java when random exceptions are enabled.\n\nSo any such bugs currently wont be found. ",
            "author": "Robert Muir",
            "id": "comment-13463817"
        },
        {
            "date": "2013-07-23T18:44:21+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13716922"
        },
        {
            "date": "2014-04-16T12:54:29+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970772"
        }
    ]
}