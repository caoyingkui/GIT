{
    "id": "LUCENE-8277",
    "title": "Better validate CodecReaders in addIndexes",
    "details": {
        "components": [],
        "status": "Open",
        "resolution": "Unresolved",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Minor",
        "type": "Improvement"
    },
    "description": "The discussion at LUCENE-8264 made me wonder that we should apply the same checks to addIndexes(CodecReader)  that we apply at index time if the input reader is not a SegmentReader such as:\n\n\tpositions are less than the maximum position\n\toffsets are going forward\n\n\n\nAnd maybe also check that the API is implemented correctly, eg. terms, doc ids and positions are returned in order?",
    "attachments": {
        "LUCENE-8277.patch": "https://issues.apache.org/jira/secure/attachment/12920821/LUCENE-8277.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16452947",
            "author": "Michael McCandless",
            "content": "+1; it's otherwise a way for \"corrupted\" indices to be created. ",
            "date": "2018-04-25T19:40:15+0000"
        },
        {
            "id": "comment-16452995",
            "author": "Simon Willnauer",
            "content": "+1 ",
            "date": "2018-04-25T20:06:16+0000"
        },
        {
            "id": "comment-16454401",
            "author": "Adrien Grand",
            "content": "Here is an example of what I had in mind. SegmentMerger runs CheckIndex with slow checks disabled on readers that do not implement SegmentReader. ",
            "date": "2018-04-26T15:31:04+0000"
        }
    ]
}