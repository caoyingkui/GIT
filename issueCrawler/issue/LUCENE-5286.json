{
    "id": "LUCENE-5286",
    "title": "data races in org.apache.lucene.queryParser.QueryParserTokenManager",
    "details": {
        "components": [
            "core/queryparser"
        ],
        "fix_versions": [],
        "affect_versions": "3.6.2",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Hi, \n\nWe ran a dynamic detector on Lucene and found quite a number of races in org.apache.lucene.queryParser.QueryParserTokenManager when an instance of this class is shared by multiple threads. Almost all field variables of this class are racey, e.g., curChar, curLexState jjnewStateCnt jjmatchedPos jjmatchedKind. \n\nFor example, methods \"jjMoveStringLiteralDfa0_3\" and \"getNextToken\" can be executed by different threads at the same time with no synchronization. The read and write to \"curChar\" at lines 65 and 1174 may corrupt the parser.\n\n63  private int More jjMoveStringLiteralDfa0_3()\n64  {\n65     switch(curChar)\n66     {\n\n\n1164public Token More getNextToken() \n1165{\n1166  Token matchedToken;\n1167  int curPos = 0;\n1168\n1169  EOFLoop :\n1170  for (;\n1171  {\n1172   try\n1173   \n{\n1174      curChar = input_stream.BeginToken();\n1175   }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-10-16T02:12:09+0000",
            "content": "FYI: QueryParser documents that its not thread-safe.\nIf you tried to use it in multiple threads, you would encounter a number of other issues (not just these)\n\n\n * <p>Note that QueryParser is <em>not</em> thread-safe.</p> \n\n ",
            "author": "Robert Muir",
            "id": "comment-13796334"
        }
    ]
}