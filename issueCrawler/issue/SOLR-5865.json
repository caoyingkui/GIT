{
    "id": "SOLR-5865",
    "title": "Provide a MiniSolrCloudCluster to enable easier testing",
    "details": {
        "affect_versions": "4.7,                                            6.0",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Today, the SolrCloud tests are based on the LuceneTestCase class hierarchy, which has a couple of issues around support for downstream projects:\n\n\n\tIt's difficult to test SolrCloud support in a downstream project that may have its own test framework.  For example, some projects have support for different storage backends (e.g. Solr/ElasticSearch/HBase) and want tests against each of the different backends.  This is difficult to do cleanly, because the Solr tests require derivation from LuceneTestCase, while the other don't\n\tThe LuceneTestCase class hierarchy is really designed for internal solr tests (e.g. it randomizes a lot of parameters to get test coverage, but a downstream project probably doesn't care about that).  It's also quite complicated and dense, much more so than a downstream project would want.\n\n\n\nGiven these reasons, it would be nice to provide a simple \"MiniSolrCloudCluster\", similar to how HDFS provides a MiniHdfsCluster or HBase provides a MiniHBaseCluster.",
    "attachments": {
        "SOLR-5865.patch": "https://issues.apache.org/jira/secure/attachment/12634870/SOLR-5865.patch",
        "SOLR-5865addendum2.patch": "https://issues.apache.org/jira/secure/attachment/12635879/SOLR-5865addendum2.patch",
        "SOLR-5865addendum.patch": "https://issues.apache.org/jira/secure/attachment/12635672/SOLR-5865addendum.patch",
        "SOLR-5865wait.patch": "https://issues.apache.org/jira/secure/attachment/12636794/SOLR-5865wait.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Gregory Chanan",
            "id": "comment-13935835",
            "date": "2014-03-14T23:53:36+0000",
            "content": "Here's a patch that implements a MiniSolrCloudCluster and a simple test exercising it.  The test doesn't use the normal LuceneTestCase test class hierarchy, because that is one of the motivations for the MiniSolrCloudCluster: that downstream projects will want to use their own test framework.\n\nOne limitation on the test currently is it does not start a MiniDFSCluster, as the code necessary for that lives in solr/core rather than the test framework.  I'm not 100% sure why that is, but if no one has an objection I'll go ahead and make that change in a later patch.\n\nTo demonstrate to myself that this is useful, I implemented one of the Apache Sentry tests using this test framework rather than AbstractFullDistribZkTestBase.  See the current state of the test here: https://github.com/apache/incubator-sentry/blob/644e8be346a152e43fa435b9adbb47ce6b3e3e91/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/AbstractSolrSentryTestBase.java.  This was pretty straightforward, with the exception of getting the MiniDFSCluster stuff correct, as mentioned above. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13936239",
            "date": "2014-03-15T16:30:26+0000",
            "content": "Looks great!\n\n+      // We could upload the minimum set of files rather than the directory, but that requires keeping the list up to date\n+      ZkController.uploadToZK(zkClient, new File(configDir), ZkController.CONFIGS_ZKNODE + \"/\" + configName);\n\nThe main reason most of the cloud tests have gone with specifying which config files to put in zk was that uploading the entire directory of test configs was damn slow and then repeated for all cloud tests.\n\nA better solution at some point would be a new test config folder just for solrcloud. We already have a lot of configs, but we could probably merge some things into this - like the common solrconfig and schema that almost all cloud tests use anyway. If we kept it to one set, I think it would be an improvement for cloud tests. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13936431",
            "date": "2014-03-16T04:54:19+0000",
            "content": "Thanks for taking a look, Mark.\n\nI get that having all the tests upload the files is burdensome.  I figured because this is just one test (and probably the only one outside of the test hierarchy, by design) that was preferable to maintaining a list in multiple places (the set of files for the hierarchy tests and this one).  I like your solution of separating out the solrcloud configs best, though.  I'll take a look at how feasible that is. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13938836",
            "date": "2014-03-18T05:26:35+0000",
            "content": "Yup, no worries - that can certainly be another issue. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13939835",
            "date": "2014-03-18T21:34:32+0000",
            "content": "I filed SOLR-5879 for the config directory idea. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13939837",
            "date": "2014-03-18T21:34:55+0000",
            "content": "Here's a version of the patch that uploads the individual config files to ZooKeeper. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13940107",
            "date": "2014-03-19T03:11:04+0000",
            "content": "Commit 1579116 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1579116 ]\n\nSOLR-5865: Provide a MiniSolrCloudCluster to enable easier testing. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13940109",
            "date": "2014-03-19T03:19:58+0000",
            "content": "Commit 1579118 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1579118 ]\n\nSOLR-5865: Provide a MiniSolrCloudCluster to enable easier testing. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13940169",
            "date": "2014-03-19T04:57:09+0000",
            "content": "Fails the forbidden APIs check:\n[forbidden-apis] Forbidden method invocation: java.util.Random#<init>() [Use RandomizedRunner's random instead]\n[forbidden-apis]   in org.apache.solr.cloud.TestMiniSolrCloudCluster (TestMiniSolrCloudCluster.java:67) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13940185",
            "date": "2014-03-19T05:10:51+0000",
            "content": "Commit 1579135 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1579135 ]\n\nSOLR-5865: Don't use random for now, un@Ignore test, clear static in afterClass. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13940187",
            "date": "2014-03-19T05:12:26+0000",
            "content": "Commit 1579137 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1579137 ]\n\nSOLR-5865: Don't use random for now, un@Ignore test, clear static in afterClass. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13940529",
            "date": "2014-03-19T14:54:05+0000",
            "content": "Commit 1579247 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1579247 ]\n\nSOLR-5865: Ignore test for the moment. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13940531",
            "date": "2014-03-19T14:54:52+0000",
            "content": "Commit 1579248 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1579248 ]\n\nSOLR-5865: Ignore test for the moment. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13940886",
            "date": "2014-03-19T19:25:27+0000",
            "content": "Did the test fail?  Need me to look at anything, Mark? "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13941133",
            "date": "2014-03-19T23:02:49+0000",
            "content": "I think the issue is that the System properties are not cleared and can have effects on later tests.  Here's a version that clears them...I was able to run all the unit tests successfully with this applied.  Mind giving this a spin, Mark? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13941857",
            "date": "2014-03-20T15:50:02+0000",
            "content": "Thanks Greg - I think the main issue is the zkHost sys prop - I've added the following as well:\n\n    System.clearProperty(\"solr.solrxml.location\");\n    System.clearProperty(\"zkHost\");\n\nThat's one complication of avoiding the test framework - normally there are checks applied for this type of thing and the test will fail if you violate it and tell which sys props were not reset or which threads were not stopped, etc. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13941873",
            "date": "2014-03-20T15:57:19+0000",
            "content": "Can you just use SystemPropertiesRestoreRule? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13941876",
            "date": "2014-03-20T15:59:22+0000",
            "content": "I think the main issue is the zkHost sys pro\n\nHmm - that is not it either - the MiniSolrCloudCluster will clear those on shutdown as well. I'm still seeing some leakage somehow though.\n\nCan you just use SystemPropertiesRestoreRule?\n\nLet me give a try. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13941910",
            "date": "2014-03-20T16:30:30+0000",
            "content": "Commit 1579679 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1579679 ]\n\nSOLR-5865: Un@Ignore test again. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13941914",
            "date": "2014-03-20T16:31:20+0000",
            "content": "Commit 1579682 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1579682 ]\n\nSOLR-5865: Un@Ignore test again. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13942015",
            "date": "2014-03-20T17:33:05+0000",
            "content": "Hmm - nope, I can still see something. It's just becoming rarer. I think this one is from threads leaking past the end of the test. The test framework has a linger for this and attempted interrupts (linger has shown to be especially important for zk tests, which has threads that can seem to linger for a while after shutdown). "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13942330",
            "date": "2014-03-20T21:37:37+0000",
            "content": "Hmm, at this point may make more sense to not try to get the test to work outside of the test hierarchy completely.  We could try to recreate the minimum set of what we need there (SystemPropertiesRestoreRules and ThreadLeakScopes) but that may change in the test hierarchy itself, requiring just this test to update.  The important thing, I think, is that we don't require the complete SolrCloud test hierarchy, e.g. AbstractFullDistribZkTestBase and the like.\n\nThe question then, is whether we rely on LuceneTestCase or SolrTestCaseJ4.  LuceneTestCase is arguably better, because we know we don't rely on anything solr-specific for the test, although the downside is we may have to update it to keep in sync with the SolrTestCaseJ4.  I don't have a strong preference either way.\n\nI messed around with that a little bit and I have a patch that seems to work with just LuceneTestCase \u2013 I had to import the a couple of rules from SolrTestCaseJ4, but not much.  I haven't run the full suite though, so I'm not 100% sure it's kosher.\n "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13942358",
            "date": "2014-03-20T21:51:40+0000",
            "content": "Here's a patch that depends on LuceneTestCase.  As I mentioned above, I haven't run the whole suite with this. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13943121",
            "date": "2014-03-21T15:00:08+0000",
            "content": "Commit 1579951 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1579951 ]\n\nSOLR-5865: Testing improvements. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13943123",
            "date": "2014-03-21T15:02:11+0000",
            "content": "Commit 1579952 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1579952 ]\n\nSOLR-5865: Testing improvements. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13943190",
            "date": "2014-03-21T16:09:18+0000",
            "content": "Thanks Greg! "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13947242",
            "date": "2014-03-25T22:11:33+0000",
            "content": "Thanks for handling this Mark.\n\nI haven't seen this fail on trunk, but when backporting it to solr 4.4 I do see some failures.  They seem related to creating a collection and acting on it immediately; some of the existing tests use \"waitForRecoveriesToFinish\" before proceeding in this situation.  I'm unclear if this is necessary or not but at least with solr 4.4 it seems to alleviate the  issues.  I'll upload a patch that adds that to the test.  As an aside, is there a JIRA or documentation that address the waitForRecoveriesToFinish issue? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13947261",
            "date": "2014-03-25T22:23:54+0000",
            "content": "I haven't seen this fail on trunk\n\nI have seen it fail a least a handful of times on the public jenkins cluster, but not often. It should be in the email archives. It fails more consistently on trunk on my private jenkins server. So it's def an issue in both cases (4.4 code and trunk).\n\nIt's not unexpected that you need waitForRecoveriesToFinish to ensure the collection is useable - all the tests have been using it for some time - but it's also not very desirable. To my knowledge there is no JIRA issue for improving this yet.\n\nIdeally, when a collection call returns, the collection is useable at that time. "
        },
        {
            "author": "Gregory Chanan",
            "id": "comment-13947272",
            "date": "2014-03-25T22:27:03+0000",
            "content": "Great, thanks for the data Mark.\n\nIf I get some time in the near future I'll investigate/file a jira around the waitForRecoveriesToFinish issue. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13982600",
            "date": "2014-04-27T23:25:55+0000",
            "content": "Close issue after release of 4.8.0 "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14061324",
            "date": "2014-07-14T22:00:11+0000",
            "content": "GitHub user softwaredoug opened a pull request:\n\n    https://github.com/apache/camel/pull/218\n\n    Solr Component: Solr Cloud Support, HTTPS support, many many test updates to support.\n\n    New SolrCloud producer. Can be used with\n\n         solrCloud://localhost:8983?zkHost=localhost:8123/solr&collection=collection1\n\n    Solr producer can also be used with HTTPS via solrs:\n\n         solrs://localhost:8983\n\n    Most of the changes in this patch have to do with test updates to support these changes. The test updates run all the existing camel-solr tests against all three possible Solr endpoints: normal HTTP Solr server, an HTTPS Solr Server, and an embedded Solr Cloud cluster. The latter utilizes Solr 4.8's [MiniSolrCloudCluster](https://issues.apache.org/jira/browse/SOLR-5865) support to create an embedded Solr Cloud cluster for testing.\n\n    Additional updates have to do with reorganizing and updating the solr configurations to support Solr 4 and updates required for Solr Cloud support.\n\n    Let me know if you have any questions!\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/o19s/camel master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/camel/pull/218.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #218\n\n\ncommit 54fb275c7fa8b3ff7ef308ece9081b0b780abc38\nAuthor: Doug Turnbull <softwaredoug@gmail.com>\nDate:   2014-04-26T18:08:35Z\n\n    Initial commit\n\ncommit 2d0cb27e525e9f9e0a11c9bbe2c23c0472187d62\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-04-26T18:24:36Z\n\n    Merge branch 'master' of https://github.com/o19s/camel\n\n    Conflicts:\n    \t.gitignore\n\ncommit 31ec7e5b1dab20bc38b32ae6c70cb36e0723e850\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-04-28T20:49:04Z\n\n    Add https server to tests\n\ncommit 2485a7f0510ef69b06e3abacd205926ce5d02bb8\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-04-29T01:41:28Z\n\n    Allow loose SSL client validation for testing\n\ncommit e7f4ada8e54bd97d27cfdf58d251e0b7760c7edb\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-04-29T02:19:04Z\n\n    Setup https solrj client correctly\n\ncommit 19999722e93f66d0f71efe8b88d76cd32f0f8f4c\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-04-29T17:44:29Z\n\n    Try to get solrcloud test fixtures\n\ncommit 1a0d6fa00beeb5366cec8f2a24bb2e0b5e2861be\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-05-02T16:04:59Z\n\n    Migrate to Solr 4.8. Fix test solr config to reflect updates.\n\ncommit b0c1a0ea6996c3cbd86e3a39fb18d9c1cadf430e\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-06-17T01:03:49Z\n\n    Get SolrCloudFixture working\n\ncommit eeb434e5062881ad1d48705b6e3098bd6bbbdbf2\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-06-17T02:06:09Z\n\n    Different data dir per solr runner\n\ncommit a41a8583fa20353a30d4a1ffebfcfe130e577a58\nAuthor: Scott Stults <sstults@o19s.com>\nDate:   2014-06-27T05:17:50Z\n\n    During the CSV file test the content type was assigned as \"application/octet-stream\". Solr needs this to be \"text/csv\" or similar.\n\ncommit 320a0232bdbed8495b03c61acd2859a4b3243c42\nAuthor: Scott Stults <sstults@o19s.com>\nDate:   2014-06-27T05:50:15Z\n\n    Removing unused dependency\n\ncommit 1ad4708f81d4d71c4724900cf077bd3c8a63661b\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-07-14T21:17:16Z\n\n    Cloud tests work (but they fail)\n\ncommit e01347c07a26a7a5728f7809529f092216e22a7a\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-07-14T21:25:11Z\n\n    Get zkHost correctly when constructing test endpoint (a test passes!)\n\ncommit 684d6051c48611418cc879114bbb87ae06220ada\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-07-14T21:52:01Z\n\n    Merge branch 'master' of github.com:o19s/camel\n\n    Conflicts:\n    \tparent/pom.xml\n\ncommit 08a1654469faa4a9eeca163072c4653f7d681278\nAuthor: Doug Turnbull <dturnbull@o19s.com>\nDate:   2014-07-14T21:58:55Z\n\n    Added solrCloud SPI, all tests pass.\n\n "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14061967",
            "date": "2014-07-15T11:41:59+0000",
            "content": "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/camel/pull/218 "
        }
    ]
}