{
    "id": "LUCENE-7572",
    "title": "Cache the hashcode of the doc values terms queries",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "6.4",
            "7.0"
        ]
    },
    "description": "DocValuesNumbersQuery and DocValuesTermsQuery can potentially wrap a large number of terms so it would help if we cached their hashcode.",
    "attachments": {
        "LUCENE-7572.patch": "https://issues.apache.org/jira/secure/attachment/12840262/LUCENE-7572.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15690419",
            "date": "2016-11-23T15:31:22+0000",
            "content": "Here is a patch. DocValuesTermsQuery and DocValuesNumbersQuery now compute a hashCode in constant time. DocValuesTermsQuery was also switched to PrefixCodedTerms to be more consistent with TermsQuery and DocValuesNumbersQuery switched to a hash set of primitive longs to avoid having to box all terms. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15694532",
            "date": "2016-11-25T01:05:20+0000",
            "content": "Looks nice Adrien.\n\nI like the addition of LongHashSet into Lucene.  Maybe it should be public and go into the util package?  Did you consider simply ripping off the one from HPPC?\n\nCan you please remind me on why PrefixCodedTerms exists instead of an FST?  Granted it's not quite the same. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15696236",
            "date": "2016-11-25T16:29:17+0000",
            "content": "Maybe it should be public and go into the util package?\n\nThis set implementation is quite limited, for instance it does not support modifications after creation. I am not against making it reusable but I'd like to wait for other use-cases for this class first, maybe there won't be any.\n\nDid you consider simply ripping off the one from HPPC?\n\nThat is another idea indeed. The thing that made me decide against it is that it would pull close to 1k lines of code as well as several classes from hppc like AbstractLongCollection, LongSet, etc. I think that would be a good idea if we needed a more complete set implementation on top of longs, which doesn't seem to be the case today.\n\nCan you please remind me on why PrefixCodedTerms exists instead of an FST?\n\nPrefixCodedTerms should be more compact (this might depend on the efficiency of suffix compression by the FST for the given data) and cheaper to build. On the other hand, the FST has more features, like the ability to do lookups. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15696309",
            "date": "2016-11-25T17:00:48+0000",
            "content": "RE LongHashSet: makes sense.\n\nRE PrefixCodedTerms: wow I didn't know it could be more compact than an FST!  I thought the FST reigned supreme here.  Would you mind adding some JavaDocs to PrefixCodedTerms to say this?  I do see it definitely has a subset of FST features.\n\nI was looking at PrefixCodedTerms a bit and I see some minor things that could be improved.  The presence of \"delGen\" seems out of place having nothing directly to do with this utility class's job; probably bolted on for BufferedUpdatesStream's convenience.  And RAMFile shouldn't depend on RAMDirectory for the sole reason of buffer size increase notification; instead it could take a callback lambda.  Of course these are both separate issues from this one. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15705397",
            "date": "2016-11-29T14:13:23+0000",
            "content": "Would you mind adding some JavaDocs to PrefixCodedTerms to say this?\n\nI will do that.\n\nThe presence of \"delGen\" seems out of place having nothing directly to do with this utility class's job\n\nAgreed. If something needs a delGen, it should create another object that wraps a PrefixCodedTerms instance and the delGen.\n\nAnd RAMFile shouldn't depend on RAMDirectory\n\nAgreed too, even though that one is a bit less annoying to me since the RAMDir and the constructor that sets it are both pkg-private. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15751784",
            "date": "2016-12-15T16:24:34+0000",
            "content": "Commit ea1569e2914f9ba914b582a0801d6cb83a29529b in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ea1569e ]\n\nLUCENE-7572: Cache the hash code of doc values queries. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15751795",
            "date": "2016-12-15T16:30:40+0000",
            "content": "Commit 9a72bd871ec684f186c7818ff1582fc1d1fe5f3f in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9a72bd8 ]\n\nLUCENE-7572: Cache the hash code of doc values queries. ",
            "author": "ASF subversion and git services"
        }
    ]
}