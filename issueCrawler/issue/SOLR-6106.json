{
    "id": "SOLR-6106",
    "title": "Sometimes all the cores on a SolrCloud node cannot find their config when intializing the ManagedResourceStorage storageIO impl",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Had one of my many nodes have problems initializing all cores due to the following problem. It was resolved by restarting the node (hence the minor classification).\n\n2014-05-21 20:39:17,898 [coreLoadExecutor-4-thread-27] ERROR solr.core.CoreContainer  - Unable to create core: small46_shard1_replica1\norg.apache.solr.common.SolrException: Could not find config name for collection:small46\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:858)\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:641)\n\tat org.apache.solr.core.CoreContainer.create(CoreContainer.java:556)\n\tat org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:261)\n\tat org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:253)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\nCaused by: org.apache.solr.common.SolrException: Could not find config name for collection:small46\n\tat org.apache.solr.rest.ManagedResourceStorage.newStorageIO(ManagedResourceStorage.java:99)\n\tat org.apache.solr.core.SolrCore.initRestManager(SolrCore.java:2339)\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:845)\n\t... 10 more",
    "attachments": {
        "SOLR-6106_prelim.patch": "https://issues.apache.org/jira/secure/attachment/12646334/SOLR-6106_prelim.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Timothy Potter",
            "id": "comment-14006171",
            "date": "2014-05-22T17:35:27+0000",
            "content": "This is just a preliminary patch to help troubleshoot this issue if it comes up again (little more logging in a few places). There's definitely something very wrong here as I see the following events in my log:\n\n2014-05-21 20:34:36,735 [coreLoadExecutor-4-thread-27] INFO  common.cloud.ZkStateReader  - Load collection config from:/collections/small46\n2014-05-21 20:34:36,735 [coreLoadExecutor-4-thread-25] INFO  common.cloud.ZkStateReader  - Updating collection state at /collections/small393/state from ZooKeeper... \n2014-05-21 20:34:36,736 [coreLoadExecutor-4-thread-27] INFO  common.cloud.ZkStateReader  - path=/collections/small46 configName=cloud specified config exists in ZooKeeper\n\n...\n\n2014-05-21 20:39:17,898 [coreLoadExecutor-4-thread-27] ERROR solr.core.CoreContainer  - Unable to create core: small46_shard1_replica1\norg.apache.solr.common.SolrException: Could not find config name for collection:small46\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:858)\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:641)\n\tat org.apache.solr.core.CoreContainer.create(CoreContainer.java:556)\n\tat org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:261)\n\tat org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:253)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\nCaused by: org.apache.solr.common.SolrException: Could not find config name for collection:small46\n\tat org.apache.solr.rest.ManagedResourceStorage.newStorageIO(ManagedResourceStorage.java:99)\n\tat org.apache.solr.core.SolrCore.initRestManager(SolrCore.java:2339)\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:845)\n\n\nI also noticed that the ManagedResourceStorage could get the path it needed from the ZkSolrResourceLoader, so this patch fixes that as well. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14006462",
            "date": "2014-05-22T20:58:06+0000",
            "content": "This looks to be caused by full GC pauses during initialization. Here's the GC log (notice the timestamp=2014-05-22T20:25:22.313+0000):\n{Heap before GC invocations=2 (full 0):\ngarbage-first heap total 12582912K, used 7548927K [0x00000004e0000000, 0x00000007e0000000, 0x00000007e0000000)\nregion size 4096K, 1843 young (7548928K), 14 survivors (57344K)\ncompacting perm gen total 262144K, used 27401K [0x00000007e0000000, 0x00000007f0000000, 0x0000000800000000)\nthe space 262144K, 10% used [0x00000007e0000000, 0x00000007e1ac27f0, 0x00000007e1ac2800, 0x00000007f0000000)\nNo shared spaces configured.\n2014-05-22T20:25:22.313+0000: 21.646: [GC pause (young)\nDesired survivor size 484442112 bytes, new threshold 15 (max 15)\nage 1: 21958624 bytes, 21958624 total\nage 2: 19212720 bytes, 41171344 total\n, 37.5640490 secs]\n[Parallel Time: 37554.2 ms, GC Workers: 13]\n[GC Worker Start (ms): Min: 21646.8, Avg: 21646.9, Max: 21647.1, Diff: 0.4]\n[Ext Root Scanning (ms): Min: 1.9, Avg: 2.2, Max: 2.8, Diff: 0.9, Sum: 28.3]\n[Update RS (ms): Min: 0.0, Avg: 0.0, Max: 0.1, Diff: 0.1, Sum: 0.1]\n[Processed Buffers: Min: 0, Avg: 3.1, Max: 25, Diff: 25, Sum: 40]\n[Scan RS (ms): Min: 0.1, Avg: 0.5, Max: 0.6, Diff: 0.5, Sum: 6.2]\n[Object Copy (ms): Min: 37550.4, Avg: 37550.7, Max: 37550.9, Diff: 0.5, Sum: 488159.3]\n[Termination (ms): Min: 0.0, Avg: 0.1, Max: 0.1, Diff: 0.1, Sum: 1.0]\n[GC Worker Other (ms): Min: 0.0, Avg: 0.2, Max: 0.4, Diff: 0.3, Sum: 2.1]\n[GC Worker Total (ms): Min: 37553.3, Avg: 37553.6, Max: 37554.0, Diff: 0.7, Sum: 488197.1]\n[GC Worker End (ms): Min: 59200.4, Avg: 59200.6, Max: 59200.8, Diff: 0.4]\n[Code Root Fixup: 0.6 ms]\n[Clear CT: 1.3 ms]\n[Other: 8.0 ms]\n[Choose CSet: 0.0 ms]\n[Ref Proc: 5.0 ms]\n[Ref Enq: 0.1 ms]\n[Free CSet: 2.1 ms]\n[Eden: 7316.0M(7316.0M)->0.0B(1312.0M) Survivors: 56.0M->924.0M Heap: 7372.0M(12.0G)->1062.0M(12.0G)]\nHeap after GC invocations=3 (full 0):\ngarbage-first heap total 12582912K, used 1087488K [0x00000004e0000000, 0x00000007e0000000, 0x00000007e0000000)\nregion size 4096K, 231 young (946176K), 231 survivors (946176K)\ncompacting perm gen total 262144K, used 27401K [0x00000007e0000000, 0x00000007f0000000, 0x0000000800000000)\nthe space 262144K, 10% used [0x00000007e0000000, 0x00000007e1ac27f0, 0x00000007e1ac2800, 0x00000007f0000000)\nNo shared spaces configured.\n}\n[Times: user=0.00 sys=485.51, real=37.56 secs]\nIn the Solr log at the time:\n2014-05-22 20:25:22,312 [main-EventThread] INFO common.cloud.ZkStateReader - A cluster state change: WatchedEvent state:SyncConnected type:NodeDataChanged path:/collections/small128/state, has occurred - updating...\n... ~37 second full GC pause ...\n2014-05-22 20:25:59,908 [coreLoadExecutor-4-thread-5] INFO solr.update.LoggingInfoStream - [IW][coreLoadExecutor-4-thread-5]: return reader version=15668 reader=StandardDirectoryReader(segments_1r:15668:nrt _5fr(4.8):C38\n49733 _2d8(4.8):C132181 _49y(4.8):C113312 _5uq(4.8):C569483 _5o1(4.8):C246764 _65f(4.8):C110028 _5x7(4.8):C72968 _694(4.8):C327388 _6ny(4.8):C313130 _6ep(4.8):C86927 _6je(4.8):C62493 _6m9(4.8):C7507 _6n6(4.8):C7995 _6qd(4.\n8):C5291 _6nx(4.8):C7520 _6ph(4.8):C45366 _6oq(4.8):C15213 _6op(4.8):C6507 _6pt(4.8):C12728/293:delGen=1 _6pn(4.8):C3802 _6pj(4.8):C3837 _6pl(4.8):C3624 _6q3(4.8):C2896/200:delGen=1)\nSo the ZK session is now expired ... and later in the log we have:\n2014-05-22 20:26:00,633 [main-EventThread] INFO common.cloud.ConnectionManager - Our previous ZooKeeper session was expired. Attempting to reconnect to recover relationship with ZooKeeper...\n2014-05-22 20:26:00,634 [coreLoadExecutor-4-thread-19] ERROR solr.rest.ManagedResourceStorage - Failed to verify znode at /configs/cloud due to: org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /configs/cloud\norg.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /configs/cloud\nat org.apache.zookeeper.KeeperException.create(KeeperException.java:127)\nat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\nat org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)\nat org.apache.solr.common.cloud.SolrZkClient$4.execute(SolrZkClient.java:226)\nat org.apache.solr.common.cloud.SolrZkClient$4.execute(SolrZkClient.java:223)\nat org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:73)\nat org.apache.solr.common.cloud.SolrZkClient.exists(SolrZkClient.java:223)\nat org.apache.solr.rest.ManagedResourceStorage$ZooKeeperStorageIO.configure(ManagedResourceStorage.java:187)\nat org.apache.solr.rest.ManagedResourceStorage.newStorageIO(ManagedResourceStorage.java:114)\nat org.apache.solr.core.SolrCore.initRestManager(SolrCore.java:2339)\nat org.apache.solr.core.SolrCore.<init>(SolrCore.java:845)\nat org.apache.solr.core.SolrCore.<init>(SolrCore.java:641)\nat org.apache.solr.core.CoreContainer.create(CoreContainer.java:556)\nat org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:261)\nat org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:253)\nat java.util.concurrent.FutureTask.run(FutureTask.java:262)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\nat java.util.concurrent.FutureTask.run(FutureTask.java:262)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\nat java.lang.Thread.run(Thread.java:744) "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14039130",
            "date": "2014-06-20T18:18:58+0000",
            "content": "Only occurs if a full GC pause causes the ZK session to expire during server initialization (when there are many cores). There's not much you can do with this other than restart (with more memory or better GC settings). "
        }
    ]
}