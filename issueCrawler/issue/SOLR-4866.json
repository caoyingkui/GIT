{
    "id": "SOLR-4866",
    "title": "FieldCache insanity when field is used in both faceting and grouping in distributed search (distributed grouping uses SortedDocValues)",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Faceting on a fieldX, either single node or distributed, uses the FieldType of fieldX to fetch a type based array of field values.  Grouping on fieldX uses the same type based arrays in single node solr instances \u2013 but when using distributed grouping, the multipass grouping logic uses SortedDocValues from the FieldCache for fieldX, resulting in \"field cache insanity\" if you also facet on this field, or execute a query against a single shard.\n\nThis descrepency can be observed in the example cnfigs by executing a simple grouping query, and then also executing a distributed grouping query...\n\nhttp://localhost:8983/solr/select?q=*:*&group=true&group.field=popularity\nhttp://localhost:8983/solr/select?q=*:*&group=true&group.field=popularity&shards=localhost:8983/solr\nhttp://localhost:8983/solr/admin/mbeans?stats=true&key=fieldCache\n\n\n\nBackground: http://markmail.org/thread/7gctyh6vn3eq5jso",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13668580",
            "date": "2013-05-28T19:21:45+0000",
            "content": "Sannier, i was unable to reproduce the problem you described using 4.2.1 (or 4.3, or the current trunk).\n\nSteps i tried to reproduce problem...\n\n1) modified 4.2.1 example such that the \"int\" fieldType and \"popularity\" field matched your merchantid exactly...\n\n\n-    <fieldType name=\"int\" class=\"solr.TrieIntField\" precisionStep=\"0\" positionIncrementGap=\"0\"/>\n+    <fieldType name=\"int\" class=\"solr.TrieIntField\" precisionStep=\"0\" positionIncrementGap=\"0\" sortMissingLast=\"true\"/>\n\n\n\n2) started up solr, indexed the example data, and confirmed empty fieldCaches...\n\n\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ java -jar post.jar *.xml\n...\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ curl -sS \"http://localhost:8983/solr/admin/mbeans?stats=true&key=fieldCache&wt=json&indent=true\" | grep \"entries_count\\|insanity_count\"\n          \"entries_count\":0,\n          \"insanity_count\":0}}},\n\n\n\n3) used both grouping and faceting on the popularity field, then checked the fieldcache insanity count..\n\n\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ curl -sS \"http://localhost:8983/solr/select?q=*:*&facet=true&facet.field=popularity\" > /dev/null\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ curl -sS \"http://localhost:8983/solr/select?q=*:*&group=true&group.field=popularity\" > /dev/null\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ curl -sS \"http://localhost:8983/solr/admin/mbeans?stats=true&key=fieldCache&wt=json&indent=true\" | grep \"entries_count\\|insanity_count\"\n          \"entries_count\":4,\n          \"insanity_count\":0}}},\n\n\n\n4) re-indexed a few docs to ensure i'd get multiple segments (in case that was neccessary to reproduce) and checked the insanity count again...\n\n\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ java -jar post.jar sd500.xml \n...\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ curl -sS \"http://localhost:8983/solr/select?q=*:*&group=true&group.field=popularity\" > /dev/null\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ curl -sS \"http://localhost:8983/solr/select?q=*:*&facet=true&facet.field=popularity\" > /dev/null\nhossman@frisbee:~/lucene/lucene-4.2.1_tag/solr/example/exampledocs$ curl -sS \"http://localhost:8983/solr/admin/mbeans?stats=true&key=fieldCache&wt=json&indent=true\" | grep \"entries_count\\|insanity_count\"\n          \"entries_count\":8,\n          \"insanity_count\":0}}},\n\n\n\n...still no sign of \"insanity\"\n\nSo i suspect there must be something else going on in your setup? are you sure you don't have any other types of queries that might be using hte field cache in an inconsistent way?\n\n(FWIW: even though i couldn't reproduce the insanity inconsistency you described, i'm still confuse/suspicious about hte number of field cache entries created for each segment when accessing a single field ... so i'm going to try dig into that a little bit to verify there is no related bug there \u2013 it might be expected given the way FieldCache and DocValues have evolved, but i'd like to verify that) "
        },
        {
            "author": "Sannier Elodie",
            "id": "comment-13669086",
            "date": "2013-05-29T08:16:06+0000",
            "content": "The problem occurs when I launch 2 times each query :\n\n[sanniere@funlevel-dx conf]$ curl -sS \"http://localhost:8080/searchsolrnodefr/fr_blue/select?q=:&group=true&group.field=merchantid\" > /dev/null\n[sanniere@funlevel-dx conf]$ curl -sS \"http://localhost:8080/searchsolrnodefr/fr_blue/select?q=:&facet=true&facet.field=merchantid\" > /dev/null\n[sanniere@funlevel-dx conf]$ curl -sS \"http://localhost:8080/searchsolrnodefr/fr_blue/select?q=:&group=true&group.field=merchantid\" > /dev/null\n[sanniere@funlevel-dx conf]$ curl -sS \"http://localhost:8080/searchsolrnodefr/fr_blue/select?q=:&facet=true&facet.field=merchantid\" > /dev/null\n\nI don't have any other types of queries that use the field cache in an inconsistent way.\n\nMy custom SearchHandler is used only if I add the qt=kelkoo parameter.\n\n\nElodie "
        },
        {
            "author": "Sannier Elodie",
            "id": "comment-13669122",
            "date": "2013-05-29T09:48:38+0000",
            "content": "I'm reproducing the problem with the 4.2.1 example with 2 shards.\n\n1) started up solr shards, indexed the example data, and confirmed empty fieldCaches\n[sanniere@funlevel-dx example]$ java -Dbootstrap_confdir=./solr/collection1/conf -Dcollection.configName=myconf -DzkRun -DnumShards=2 -jar start.jar\n[sanniere@funlevel-dx example2]$ java -Djetty.port=7574 -DzkHost=localhost:9983 -jar start.jar\n\n2) used both grouping and faceting on the popularity field, then checked the fieldcache insanity count\n[sanniere@funlevel-dx example]$ curl -sS \"http://localhost:8983/solr/select?q=:&group=true&group.field=popularity\" > /dev/null\n[sanniere@funlevel-dx example]$ curl -sS \"http://localhost:8983/solr/select?q=:&facet=true&facet.field=popularity\" > /dev/null\n[sanniere@funlevel-dx example]$ curl -sS \"http://localhost:8983/solr/admin/mbeans?stats=true&key=fieldCache&wt=json&indent=true\" | grep \"entries_count|insanity_count\"\n          \"entries_count\":10,\n          \"insanity_count\":2,\n\n          \"insanity#0\":\"VALUEMISMATCH: Multiple distinct value objects for SegmentCoreReader(owner=_g(4.2.1):C1)+popularity\\n\\t'SegmentCoreReader(owner=_g(4.2.1):C1)'=>'popularity',class org.apache.lucene.index.SortedDocValues,0.5=>org.apache.lucene.search.FieldCacheImpl$SortedDocValuesImpl#12129794\\n\\t'SegmentCoreReader(owner=_g(4.2.1):C1)'=>'popularity',int,null=>org.apache.lucene.search.FieldCacheImpl$IntsFromArray#12298774\\n\\t'SegmentCoreReader(owner=_g(4.2.1):C1)'=>'popularity',int,org.apache.lucene.search.FieldCache.NUMERIC_UTILS_INT_PARSER=>org.apache.lucene.search.FieldCacheImpl$IntsFromArray#12298774\\n\",\n          \"insanity#1\":\"VALUEMISMATCH: Multiple distinct value objects for SegmentCoreReader(owner=_f(4.2.1):C9)+popularity\\n\\t'SegmentCoreReader(owner=_f(4.2.1):C9)'=>'popularity',int,org.apache.lucene.search.FieldCache.NUMERIC_UTILS_INT_PARSER=>org.apache.lucene.search.FieldCacheImpl$IntsFromArray#16648315\\n\\t'SegmentCoreReader(owner=_f(4.2.1):C9)'=>'popularity',int,null=>org.apache.lucene.search.FieldCacheImpl$IntsFromArray#16648315\\n\\t'SegmentCoreReader(owner=_f(4.2.1):C9)'=>'popularity',class org.apache.lucene.index.SortedDocValues,0.5=>org.apache.lucene.search.FieldCacheImpl$SortedDocValuesImpl#1130715\\n\"}}},\n    \"HIGHLIGHTING\",{},\n    \"OTHER\",{}]}\n\nElodie "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13681525",
            "date": "2013-06-12T19:09:18+0000",
            "content": "I'm reproducing the problem with the 4.2.1 example with 2 shards.\n\nElode, awesome \u2013 thank you for helping figure out how to reproduce this.\n\nYes, the crux of hte problem seems to be exclusively with doing distributed searching.  specifically...\n\n\n\tFaceting using the fc or fcs methods, regardless of wether it's a single node or a distributed search, uses the basic type array based FieldCache for the field you are faceting on (ie: \"IntsFromArray\" for popularity)\n\tGrouping uses two different types of FieldCaches depending on whether you are doing a single node grouping request, or the more complicated multi-phase distributed grouping request:\n\t\n\t\tsingle node: type based array\n\t\tdistributed: SortedDocValues\n\t\n\t\n\n\n\nI'm not totally familiar with the grouping code, but I didn't see any obvious indication that this way a \"mistake\" ... I think this is an example of the type of situation where we different data is needed for the two different grouping algorithms and it means accepting some \"insane\" redundancy  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13681529",
            "date": "2013-06-12T19:14:50+0000",
            "content": "\n but I didn't see any obvious indication that this way a \"mistake\" ... I think this is an example of the type of situation where we different data is needed for the two different grouping algorithms and it means accepting some \"insane\" redundancy \n\nStrongly disagree. Please note, there is no guarantee insanity will always be supported. The algorithm should be fixed instead. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13681532",
            "date": "2013-06-12T19:16:48+0000",
            "content": "updating summary and revising description based on narrowing down the root of the discrepancy "
        }
    ]
}