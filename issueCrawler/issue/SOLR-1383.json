{
    "id": "SOLR-1383",
    "title": "Replication causes master to fail to delete old index files",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "I have developed a way to make replication leave old index files in the master's data/index directory. It is timing-dependent. A sequence of commands runs correctly or fails, depending on the timing between the commands.\n\nHere is the test scenario:\nStart a master and slave version of the Solr distributed example. I used 8080 for the slave. (See example/etc/jetty.xml)\nBe sure to start with empty solr/data/index files on both master and slave.\nOpen the replication administration jsp on the slave ( http://localhost:8080/solr/admin/replication/index.jsp )\nDisable polling.\n\nIn a text window, go to the example/exampledocs directory and run this script\n\nfor x in *.xml\ndo\n\techo $x\n\tsh post.sh $x\n\tsleep 15\n\tcurl \"http://localhost:8080/solr/replication?command=fetchindex\"\ndone\n\n\n\nThis prints each example file, indexes it, and does a replication command. At the end of this exercise, the master and slave solr/data/index files will be identical.\n\nNow, kill master & slave, remove the solr/index/data directories, and start over.  This time, remove the sleep command from the script. In my environment, old Lucene index files were left in the master's data/index. Here is what is left in the master data/index. \n The segments_? files are random across runs, but the index files left over are consistent.\n\nNote (courtesy of the Linux 'ls -l /proc/PID/fd' command) that the old files are not kept open by the master solr; they are merely left behind.\n\n\nIn the master server:\n\n% ls solr/data/index\n\n_0.fdt  _1.prx  _2.tvx  _4.nrm  _5.tii  _7.frq  _8.tvd  _a.tvx  _c.nrm\n_0.fdx  _1.tii  _3.fdt  _4.prx  _5.tis  _7.nrm  _8.tvf  _b.fdt  _c.prx\n_0.fnm  _1.tis  _3.fdx  _4.tii  _6.fdt  _7.prx  _8.tvx  _b.fdx  _c.tii\n_0.frq  _2.fdt  _3.fnm  _4.tis  _6.fdx  _7.tii  _a.fdt  _b.fnm  _c.tis\n_0.nrm  _2.fdx  _3.frq  _4.tvd  _6.fnm  _7.tis  _a.fdx  _b.frq  segments.gen\n_0.prx  _2.fnm  _3.nrm  _4.tvf  _6.frq  _8.fdt  _a.fnm  _b.nrm  segments_8\n_0.tii  _2.frq  _3.prx  _4.tvx  _6.nrm  _8.fdx  _a.frq  _b.prx  segments_9\n_0.tis  _2.nrm  _3.tii  _5.fdt  _6.prx  _8.fnm  _a.nrm  _b.tii  segments_a\n_1.fdt  _2.prx  _3.tis  _5.fdx  _6.tii  _8.frq  _a.prx  _b.tis  segments_b\n_1.fdx  _2.tii  _4.fdt  _5.fnm  _6.tis  _8.nrm  _a.tii  _c.fdt  segments_c\n_1.fnm  _2.tis  _4.fdx  _5.frq  _7.fdt  _8.prx  _a.tis  _c.fdx  segments_d\n_1.frq  _2.tvd  _4.fnm  _5.nrm  _7.fdx  _8.tii  _a.tvd  _c.fnm\n_1.nrm  _2.tvf  _4.frq  _5.prx  _7.fnm  _8.tis  _a.tvf  _c.frq\n\n\n\n\n% ls -l /proc/PID/fd\n\nlr-x------ 1 root root 64 Aug 25 22:52 137 -> /index/master/solr/data/index/_a.tis\nlr-x------ 1 root root 64 Aug 25 22:52 138 -> /index/master/solr/data/index/_a.frq\nlr-x------ 1 root root 64 Aug 25 22:52 139 -> /index/master/solr/data/index/_a.prx\nlr-x------ 1 root root 64 Aug 25 22:52 140 -> /index/master/solr/data/index/_a.fdt\nlr-x------ 1 root root 64 Aug 25 22:52 141 -> /index/master/solr/data/index/_a.fdx\nlr-x------ 1 root root 64 Aug 25 22:52 142 -> /index/master/solr/data/index/_a.tvx\nlr-x------ 1 root root 64 Aug 25 22:52 143 -> /index/master/solr/data/index/_a.tvd\nlr-x------ 1 root root 64 Aug 25 22:52 144 -> /index/master/solr/data/index/_a.tvf\nlr-x------ 1 root root 64 Aug 25 22:52 145 -> /index/master/solr/data/index/_a.nrm\nlr-x------ 1 root root 64 Aug 25 22:52 72 -> /index/master/solr/data/index/_b.tis\nlr-x------ 1 root root 64 Aug 25 22:52 73 -> /index/master/solr/data/index/_b.frq\nlr-x------ 1 root root 64 Aug 25 22:52 74 -> /index/master/solr/data/index/_b.prx\nlr-x------ 1 root root 64 Aug 25 22:52 76 -> /index/master/solr/data/index/_b.fdt\nlr-x------ 1 root root 64 Aug 25 22:52 78 -> /index/master/solr/data/index/_b.fdx\nlr-x------ 1 root root 64 Aug 25 22:52 79 -> /index/master/solr/data/index/_b.nrm\nlr-x------ 1 root root 64 Aug 25 22:52 80 -> /index/master/solr/data/index/_c.tis\nlr-x------ 1 root root 64 Aug 25 22:52 81 -> /index/master/solr/data/index/_c.frq\nlr-x------ 1 root root 64 Aug 25 22:52 82 -> /index/master/solr/data/index/_c.prx\nlr-x------ 1 root root 64 Aug 25 22:52 83 -> /index/master/solr/data/index/_c.fdt\nlr-x------ 1 root root 64 Aug 25 22:52 84 -> /index/master/solr/data/index/_c.fdx\nlr-x------ 1 root root 64 Aug 25 22:52 85 -> /index/master/solr/data/index/_c.nrm\n\n\nIn the slave server:\n\n% ls solr/data/index\n\n_a.fdt  _a.tvd  _b.prx  _c.prx\n_a.fdx  _a.tvf  _b.tii  _c.tii\n_a.fnm  _a.tvx  _b.tis  _c.tis\n_a.frq  _b.fdt  _c.fdt  lucene-d81c111653e4c4883a6fbd7e2effd596-n-write.lock\n_a.nrm  _b.fdx  _c.fdx  segments.gen\n_a.prx  _b.fnm  _c.fnm  segments_d\n_a.tii  _b.frq  _c.frq\n_a.tis  _b.nrm  _c.nrm\n\n\n\n% ls -l /proc/PID/fd\n\nlr-x------ 1 root root 64 Aug 25 22:57 139 -> /index/slave/solr/data/index/_a.tis\nlr-x------ 1 root root 64 Aug 25 22:57 140 -> /index/slave/solr/data/index/_a.frq\nlr-x------ 1 root root 64 Aug 25 22:57 141 -> /index/slave/solr/data/index/_a.prx\nlr-x------ 1 root root 64 Aug 25 22:57 142 -> /index/slave/solr/data/index/_a.fdt\nlr-x------ 1 root root 64 Aug 25 22:57 143 -> /index/slave/solr/data/index/_a.fdx\nlr-x------ 1 root root 64 Aug 25 22:57 144 -> /index/slave/solr/data/index/_a.tvx\nlr-x------ 1 root root 64 Aug 25 22:57 145 -> /index/slave/solr/data/index/_a.tvd\nlr-x------ 1 root root 64 Aug 25 22:57 146 -> /index/slave/solr/data/index/_a.tvf\nlr-x------ 1 root root 64 Aug 25 22:57 147 -> /index/slave/solr/data/index/_a.nrm\nlr-x------ 1 root root 64 Aug 25 22:57 4 -> /index/slave/solr/data/index/_b.tis\nlr-x------ 1 root root 64 Aug 25 22:57 75 -> /index/slave/solr/data/index/_b.frq\nlr-x------ 1 root root 64 Aug 25 22:57 76 -> /index/slave/solr/data/index/_b.prx\nlr-x------ 1 root root 64 Aug 25 22:57 77 -> /index/slave/solr/data/index/_b.fdt\nlr-x------ 1 root root 64 Aug 25 22:57 78 -> /index/slave/solr/data/index/_b.fdx\nlr-x------ 1 root root 64 Aug 25 22:57 79 -> /index/slave/solr/data/index/_b.nrm\nlr-x------ 1 root root 64 Aug 25 22:57 80 -> /index/slave/solr/data/index/_c.tis\nlr-x------ 1 root root 64 Aug 25 22:57 81 -> /index/slave/solr/data/index/_c.frq\nlr-x------ 1 root root 64 Aug 25 22:57 82 -> /index/slave/solr/data/index/_c.prx\nlr-x------ 1 root root 64 Aug 25 22:57 83 -> /index/slave/solr/data/index/_c.fdt\nlr-x------ 1 root root 64 Aug 25 22:57 84 -> /index/slave/solr/data/index/_c.fdx\nlr-x------ 1 root root 64 Aug 25 22:57 85 -> /index/slave/solr/data/index/_c.nrm\nlrwx------ 1 root root 64 Aug 25 22:57 86 -> /index/slave/solr/data/index/lucene-d81c111653e4c4883a6fbd7e2effd596-n-write.lock",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12747857",
            "date": "2009-08-26T09:32:05+0000",
            "content": "The files are reserved for replication (10 secs) . if you do commits very frequently, say 5 times in 10 secs you end up keeping all the old index files on the disk. if you restart solr or do a commit again after sometime (10 secs or more) they will get cleaned up. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12747936",
            "date": "2009-08-26T13:21:38+0000",
            "content": "Seems like this is by design.  Marking as invalid, but can reopen if needed. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12748139",
            "date": "2009-08-26T20:50:27+0000",
            "content": "The files are reserved for replication for X amount of time. This makes sense, but- shouldn't they go away at the end of the timer, or after the replication is finished? After all, they are not part of a snapshot. Shouldn't the snapshot client say \"I'm done with them?\".\n\nI understand about the problems involved in this; it seems like there's a hole in the state sequences.\n\n\n\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12748257",
            "date": "2009-08-27T04:39:07+0000",
            "content": "his makes sense, but- shouldn't they go away at the end of the timer, or after the replication is finished\n\nReplicationHandler does not take care of cleaning up the index. That is left to Lucene. Whenever the next IndexWriter#open happens it should cleanup all the unreserved indexcommits. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12748682",
            "date": "2009-08-28T06:01:42+0000",
            "content": "I checked again- the files do not go away. Not after another commit, not after restarting solr.  \n\nThe replication commit reservation code definitely has a bug. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12748688",
            "date": "2009-08-28T06:28:00+0000",
            "content": "he files do not go away. Not after another commit, not after restarting solr.\n\nAll the old files are necessary for the index to work. The latest commit is not the only one that is used. You do an optimize and the old files will go away "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12748964",
            "date": "2009-08-28T19:54:56+0000",
            "content": "The old files did go away after an optimize. Thank you.\n\nRestarting did not remove them. I suggest that old index files should be removed after all runtime requirements for them disappear. They should definitely be removed by restarting. Restarting Solr should cure all runtime problems; this includes extra files.\n\nThere are a lot of Solr sites that want continuous propagation from data source to indexing to query. If they use Java replication to poll continuously for updates, it will leave vast amounts of junk files behind. \n\nThe current functionality is fine for a Solr 1.4 release, but this issue should be fixed after that. Please reopen it and mark it for 1.5.\n\nThanks. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12748968",
            "date": "2009-08-28T20:08:59+0000",
            "content": "I suggest that old index files should be removed after all runtime requirements for them disappear.\n\nHow do you know this isn't happening? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12749076",
            "date": "2009-08-29T04:35:02+0000",
            "content": "Lance. let me suggest you one thing.\n\n\n\tdisable replicationhandler\n\trun your program\n\tcheck the file list in the index\n\trepeat the same set of operations with replictaion on. and see if there is any difference in the no:of files\n\n "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12749190",
            "date": "2009-08-29T21:50:56+0000",
            "content": "Here is an attempt at a completely described test scenario. This test scenario requires a Linux system or other system that supports the /proc/PROCESSID/fd feature.\n\n----------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\nDo a full checkout and build of the Solr 1.4 trunk.\nMake two copies of the example directory: call them 'master' and 'slave'.\nIn slave/etc/jetty.xml, change port #8983 to port #8080. It is in two places in the file.\n\nIn master/solr/conf/solrconfig.xml, uncomment this block:\n\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\" >\n    <lst name=\"master\">\n        <str name=\"replicateAfter\">commit</str>\n         <str name=\"confFiles\">schema.xml,stopwords.txt</str>\n    </lst>\n</requestHandler>\n\n\n\nIn slave/solr/conf/solrconfig.xml, uncomment this block:\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n    <lst name=\"slave\">\n        <str name=\"masterUrl\">http://localhost:8983/solr/replication</str>\n        <str name=\"pollInterval\">00:00:60</str>\n     </lst>\n</requestHandler>\n\n\nNow, in both master/ and slave/, run 'java -jar start.jar'. The master and slave solr should be running. You can test this by loading the urls http://localhost:8983/solr/admin and http://localhost:8080/solr/admin .\n\nIn a text window, go to the example/exampledocs directory and run this script\n\n\nfor x in *.xml\ndo\n\techo $x\n\tsh post.sh $x\n\tsleep 10\n\tcurl \"http://localhost:8080/solr/replication?command=fetchindex\"\n\tsleep 10\ndone\n\n\n\nThis prints each example file, indexes it, and does a replication command. At the end of this script, the master and slave solr/data/index files will be identical.\n\nNow, kill master & slave Solr instances, remove the solr/index/data directories, and restart them. Save the process IDs of the master and slave java processes.\n\nRun the test script without sleep breaks:\n\nfor x in *.xml\ndo\n\techo $x\n\tsh post.sh $x\n\tcurl \"http://localhost:8080/solr/replication?command=fetchindex\"\ndone\n\n\n\nAt this point you should now have a small set of files in the slave solr/data/index/ directory. Their names will probably start with _a, _b,and _c. The master solr/data/index/ directory will have these files and also older files starting _0, _1, _2 on up. These are older-generation files in the Lucene index and should be deleted at some point. \n\nOn the master do 'ls -l /proc/PID/fd' where PID is the process ID of the master Java process. This shows all of the open file descriptors of the process. The old files (starting _0, _1, _2 etc) are not held open by the master process. The master Java process only holds open the same index files that are in the slave solr/data/index/. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12749191",
            "date": "2009-08-29T22:07:16+0000",
            "content": "The above test scenario should be a complete description of the problem.\n\nGiven the design requirements for Java Replication, there are four actions that might cause these older unused files (starting with _0, _1, _2 etc.) to be removed:\n1) Timers in the master replication code should time out and eventually remove the files.\n2) A new replication call from the slave to the master.\n3) A commit on the master.\n4) An optimize on the master. \n\nMy findings are that first three do not make the old unused unopened Lucene index files go away. They only go away when the master's index is optimized. \n\nWould someone else please run the above test scenario?  \n\nThanks!\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12749376",
            "date": "2009-08-31T04:48:59+0000",
            "content": "Lance. This is quite expected. But if you wait for sometime and  (10 secs) and do an add and commit these files must go away.\n\nIn a real life scenario, if you have very frequent updates , it should not end end after 10-20 updates . So any commit after the reserve-time should clean up the index.\n\nif your commits are small and frequent you can reduce the commitReserveDuration as follows \n\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\" >\n    <lst name=\"master\">\n        <str name=\"replicateAfter\">commit</str>\n         <!-- 1 second reserve instead of the default 10 sec -->\n         <str name=\"commitReserveDuration\">00:00:01</str>\n    </lst>\n</requestHandler>\n\n\n\nThis should ensure that the index get cleaned up more frequently\n "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12749609",
            "date": "2009-08-31T20:24:07+0000",
            "content": "This change to the commitReserveDuration did make a difference.\n\nIn one test run, it did exactly what we want it to: the master & slave data directories had matching and current indexes.\n\nIn another test run, the same configuration failed in a new way: the master directory looked exactly as it should, but the slave data directory wound up with two index snapshot folders. They contained completely separate copies of the same index. There was no solr/data/index folder, only the two snapshots. I did not remember to get the contents of the index.properties and replication.properties files; mea culpa.  \n\nHere is a full listing under the slave solr/data directory:\n\nls -l /index/slave/solr/data/*\n-rw-r--r-- 1 root root   75 Aug 31 15:12 /index/slave/solr/data/index.properties\n-rw-r--r-- 1 root root  107 Aug 31 15:12 /index/slave/solr/data/replication.properties\n\n/index/slave/solr/data/index.20090829060632:\ntotal 120\n-rw-r--r-- 1 root root 4542 Aug 29 18:06 _a.fdt\n-rw-r--r-- 1 root root  132 Aug 29 18:06 _a.fdx\n-rw-r--r-- 1 root root  150 Aug 29 18:06 _a.fnm\n-rw-r--r-- 1 root root 1369 Aug 29 18:06 _a.frq\n-rw-r--r-- 1 root root   84 Aug 29 18:06 _a.nrm\n-rw-r--r-- 1 root root 1842 Aug 29 18:06 _a.prx\n-rw-r--r-- 1 root root  112 Aug 29 18:06 _a.tii\n-rw-r--r-- 1 root root 7158 Aug 29 18:06 _a.tis\n-rw-r--r-- 1 root root   23 Aug 29 18:06 _a.tvd\n-rw-r--r-- 1 root root  149 Aug 29 18:06 _a.tvf\n-rw-r--r-- 1 root root  260 Aug 29 18:06 _a.tvx\n-rw-r--r-- 1 root root  305 Aug 29 18:06 _b.fdt\n-rw-r--r-- 1 root root   12 Aug 29 18:06 _b.fdx\n-rw-r--r-- 1 root root   71 Aug 29 18:06 _b.fnm\n-rw-r--r-- 1 root root   64 Aug 29 18:06 _b.frq\n-rw-r--r-- 1 root root    7 Aug 29 18:06 _b.nrm\n-rw-r--r-- 1 root root   90 Aug 29 18:06 _b.prx\n-rw-r--r-- 1 root root   35 Aug 29 18:06 _b.tii\n-rw-r--r-- 1 root root  697 Aug 29 18:06 _b.tis\n-rw-r--r-- 1 root root  648 Aug 29 18:06 _c.fdt\n-rw-r--r-- 1 root root   20 Aug 29 18:06 _c.fdx\n-rw-r--r-- 1 root root  111 Aug 29 18:06 _c.fnm\n-rw-r--r-- 1 root root  244 Aug 29 18:06 _c.frq\n-rw-r--r-- 1 root root   10 Aug 29 18:06 _c.nrm\n-rw-r--r-- 1 root root  366 Aug 29 18:06 _c.prx\n-rw-r--r-- 1 root root   51 Aug 29 18:06 _c.tii\n-rw-r--r-- 1 root root 1504 Aug 29 18:06 _c.tis\n-rw-r--r-- 1 root root  700 Aug 29 18:06 segments_d\n\n/index/slave/solr/data/index.20090831031246:\ntotal 120\n-rw-r--r-- 1 root root 4542 Aug 31 15:12 _a.fdt\n-rw-r--r-- 1 root root  132 Aug 31 15:12 _a.fdx\n-rw-r--r-- 1 root root  150 Aug 31 15:12 _a.fnm\n-rw-r--r-- 1 root root 1369 Aug 31 15:12 _a.frq\n-rw-r--r-- 1 root root   84 Aug 31 15:12 _a.nrm\n-rw-r--r-- 1 root root 1842 Aug 31 15:12 _a.prx\n-rw-r--r-- 1 root root  112 Aug 31 15:12 _a.tii\n-rw-r--r-- 1 root root 7158 Aug 31 15:12 _a.tis\n-rw-r--r-- 1 root root   23 Aug 31 15:12 _a.tvd\n-rw-r--r-- 1 root root  149 Aug 31 15:12 _a.tvf\n-rw-r--r-- 1 root root  260 Aug 31 15:12 _a.tvx\n-rw-r--r-- 1 root root  305 Aug 31 15:12 _b.fdt\n-rw-r--r-- 1 root root   12 Aug 31 15:12 _b.fdx\n-rw-r--r-- 1 root root   71 Aug 31 15:12 _b.fnm\n-rw-r--r-- 1 root root   64 Aug 31 15:12 _b.frq\n-rw-r--r-- 1 root root    7 Aug 31 15:12 _b.nrm\n-rw-r--r-- 1 root root   90 Aug 31 15:12 _b.prx\n-rw-r--r-- 1 root root   35 Aug 31 15:12 _b.tii\n-rw-r--r-- 1 root root  697 Aug 31 15:12 _b.tis\n-rw-r--r-- 1 root root  648 Aug 31 15:12 _c.fdt\n-rw-r--r-- 1 root root   20 Aug 31 15:12 _c.fdx\n-rw-r--r-- 1 root root  111 Aug 31 15:12 _c.fnm\n-rw-r--r-- 1 root root  244 Aug 31 15:12 _c.frq\n-rw-r--r-- 1 root root   10 Aug 31 15:12 _c.nrm\n-rw-r--r-- 1 root root  366 Aug 31 15:12 _c.prx\n-rw-r--r-- 1 root root   51 Aug 31 15:12 _c.tii\n-rw-r--r-- 1 root root 1504 Aug 31 15:12 _c.tis\n-rw-r--r-- 1 root root    0 Aug 31 15:12 lucene-85d8fe7216d62d59a3790bf2bb8c5e2b-n-write.lock\n-rw-r--r-- 1 root root  700 Aug 31 15:12 segments_d\n\n/index/slave/solr/data/spellchecker:\ntotal 8\n-rw-r--r-- 1 root root 20 Aug 25 23:37 segments.gen\n-rw-r--r-- 1 root root 32 Aug 25 23:37 segments_1\n\n\n "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775855",
            "date": "2009-11-10T15:52:13+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}