{
    "id": "SOLR-8207",
    "title": "Add \"Nodes\" view to the Admin UI \"Cloud\" tab",
    "details": {
        "components": [
            "Admin UI"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The various sub-tabs of the \"Cloud tab\" were designed before anyone was making real use of SolrCloud, and when we didn't really know the use-cases we would need to support. I would argue that, whilst they are pretty (and clever) they aren't really fit for purpose (with the exception of tree view).\n\nIssues:\n\n\tRadial view doesn't scale beyond a small number of nodes/collections\n\tPaging on the graph view is based on collections - so a collection with many replicas won't be subject to pagination\n\tThe Dump feature is kinda redundant and should be removed\n\tThere is now a major overlap in functionality with the new Collections tab\n\n\n\nWhat I'd propose is that we:\n\n\tpromote the tree tab to top level\n\tremove the graph views and the dump tab\n\tadd a new Nodes tab\n\n\n\nThis nodes tab would complement the collections tab - showing nodes, and their associated replicas/collections. From this view, it would be possible to add/remove replicas and to see the status of nodes. It would also be possible to filter nodes by status: \"show me only up nodes\", \"show me nodes that are in trouble\", \"show me nodes that have leaders on them\", etc.\n\nPresumably, if we have APIs to support it, we might have a \"decommission node\" option, that would ensure that no replicas on this node are leaders, and then remove all replicas from the node, ready for it to be removed from the cluster.",
    "attachments": {
        "nodes.png": "https://issues.apache.org/jira/secure/attachment/12934806/nodes.png",
        "nodes-tab-real.png": "https://issues.apache.org/jira/secure/attachment/12920289/nodes-tab-real.png",
        "SOLR-8207_shardstate.patch": "https://issues.apache.org/jira/secure/attachment/12935049/SOLR-8207_shardstate.patch",
        "node-compact.png": "https://issues.apache.org/jira/secure/attachment/12921742/node-compact.png",
        "image-2018-08-10-10-33-08-290.png": "https://issues.apache.org/jira/secure/attachment/12935105/image-2018-08-10-10-33-08-290.png",
        "SOLR-8207.patch": "https://issues.apache.org/jira/secure/attachment/12934257/SOLR-8207.patch",
        "nodes-tab.png": "https://issues.apache.org/jira/secure/attachment/12914858/nodes-tab.png",
        "node-toggle-row-numdocs.png": "https://issues.apache.org/jira/secure/attachment/12921754/node-toggle-row-numdocs.png",
        "node-details.png": "https://issues.apache.org/jira/secure/attachment/12921743/node-details.png",
        "node-hostcolumn.png": "https://issues.apache.org/jira/secure/attachment/12921776/node-hostcolumn.png",
        "SOLR-8207_underscores.patch": "https://issues.apache.org/jira/secure/attachment/12934810/SOLR-8207_underscores.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-26T10:19:42+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Yes, it makes sense to re-think this. Nodes view is a great idea. Why not also rename the tab from Cloud to \"Cluster\"? And the \"Tree\" tab is really \"Zookeeper\" isn't it?  ",
            "id": "comment-14973984"
        },
        {
            "date": "2015-10-26T10:35:27+0000",
            "author": "Upayavira",
            "content": "s/nodes/cluster/ sounds sensible, as does s/tree/zookeeper/.\n\nNote, I'm proposing to remove the current graph views. They're clever and attractive, but given the scale we're seeing people using Solr for, I don't believe they are particularly functional. ",
            "id": "comment-14973999"
        },
        {
            "date": "2015-10-26T14:28:10+0000",
            "author": "Erick Erickson",
            "content": "If it's not a hassle, I'd like to keep the graph views for a while. A lot of people rely on them for a quick overview of the cluster. Admittedly for a cluster with 500 replicas it's pretty cluttered, but I'd like to see people's reaction to the new layout but not take away what we're accustomed to quite yet.\n\nThe radial view surely should go even though I'm going to try to use it to make an image for a t-shirt....\n\nIf keeping the graph view causes more work, then go ahead and remove it of course. We still have the old UI if people really miss it. ",
            "id": "comment-14974286"
        },
        {
            "date": "2015-10-26T14:50:46+0000",
            "author": "Upayavira",
            "content": "Erick Erickson I can see your argument for keeping it. If we were to remove it straight away, we'd need to be sure it functions well straight-away for such large environments. \n\nWe can win big time just by allowing filtering (only hosts that are having problems, only hosts that have no replicas, only hosts that have more than 5 replicas, etc) - things that we can't do right now via the current UI.\n\nI think the right thing to do is to build this out and try it out on trunk, and see what reaction we get. Once 5.4 goes out, we should start to see trunk/5x diverge more, with risky/large UI changes baking on trunk for a while first. ",
            "id": "comment-14974320"
        },
        {
            "date": "2015-10-26T23:48:56+0000",
            "author": "Mark Miller",
            "content": "I don't think it should go either - it could be replaced, but otherwise I think it should stay until someone improves it.\n\nA table view will be the best view, but I think this kind of graph view is still a great option.\n\nThe radial view is also cool, just mostly useless in practice. ",
            "id": "comment-14975367"
        },
        {
            "date": "2018-03-16T13:12:56+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Attached is a suggestion for rearrangement, renaming Cloud-Cluster, Adding new \"nodes\" tab, renaming Tree->Zookeeper, renaming Graph->Collections:\n\n\n\nWhat data to present in columns can be discussed, but this is what \"Cerebro\" shows. Using the metrics API we could also pull historic data and make a small graph in each table cell. When you click on node name you could get a menu to go to the node, view all metrics for node, decommission node etc. When you click on number of shards column, you could expand to list the actual replicas on that node etc ",
            "id": "comment-16401853"
        },
        {
            "date": "2018-03-16T13:41:05+0000",
            "author": "David Smiley",
            "content": "+1 I like the renames a lot, plus the node table statistics. \u00a0\n\nPerhaps an \"action\" column with a gear icon might suggests steps you can take. ",
            "id": "comment-16401915"
        },
        {
            "date": "2018-03-16T14:24:26+0000",
            "author": "Cassandra Targett",
            "content": "I'm glad you picked this up, Jan, I was looking at it earlier this morning wishing I had time to work on it.\n\nI'm mostly on board with your suggestions, but have a couple of thoughts:\n\n\n\tI think we should avoid renaming \"Tree\" to \"ZooKeeper\".\n\t\n\t\tThere is a strong perception that in order to use Solr at all, you must also learn ZK on Day One, which adds to the perception that Solr is difficult to use and manage. To counteract this, we should in general move to considering all the ZK-specific stuff as an implementation detail and present it to users as such. Our guiding principle should be that users perceive their interactions with the system as being primarily with Solr (via APIs, CLI, etc.)\u00a0to the extent that it's\u00a0possible for us to make it appear that way, and Solr should seamlessly handle whatever it needs to put/remove/etc into ZK to distribute it around a cluster (there are obvious obstacles to this being reality 100% of the time, but the way I've thought of it is you should only need to learn ZK once you're well-versed in how everything else works, not just to create your first collection or simply enable basic authentication). This isn't about hiding ZK necessarily, it's about making Solr easier to learn and manage over time. This principle is why we did the _default\u00a0configset stuff, and why you can now enable auth via bin/solr\u00a0(there is for sure a lot more to do in this area).\n\t\tWhat would a better name be? All that said, I don't have a good suggestion at the ready. If we think about what the Tree view is meant to do - provide access to global and collection-level configurations - perhaps that suggests alternatives...\"Configs\" springs to mind as an obvious choice, but feels weak. I'm not sure if the position I stated is at all controversial, but perhaps there are other ideas out there.\n\t\n\t\n\tThe Nodes view has some interesting data on it as you've conceived of it, and the status of each node is important information for sure. I think it would be nice if it could show the names and states of the shards that are on each node. Maybe that should be a secondary view for that screen? Something like, click the # of shards and a list pops up? The graph view, which you've renamed Collections (+1 IMO), would show where replicas are from the POV of each collection, but if I'm looking at a node that's perhaps trending unhealthy, I'd want to see from the node POV what's on each node.\n\n ",
            "id": "comment-16401967"
        },
        {
            "date": "2018-03-16T17:15:42+0000",
            "author": "Mark Miller",
            "content": "I think we should avoid renaming \"Tree\" to \"ZooKeeper\".\n\n+1 - I'm not against a rename, but there must be a better one for Solr that is not impl related. ",
            "id": "comment-16402212"
        },
        {
            "date": "2018-03-20T13:45:08+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "A little note. What we mean by \"node\" here will be one Solr instance. As the most common usecase is to have one solr node per server, this will work well. For users having multiple Solr nodes per server, then some information like load, disk usage etc will probably be the same between them.\n\nWe should also consider an alternative view adding a \"server\" column and allow grouping by server, so one easily can see what nodes are co-located on the same server if you e.g. want to decommission a physical server. More wireframe designs with more details must follow. ",
            "id": "comment-16406342"
        },
        {
            "date": "2018-03-20T13:54:56+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "+1 - I'm not against a rename, but there must be a better one for Solr that is not impl related.\nPerhaps \"State\"? Configs are part of the cluster->state...\nI think it would be nice if it could show the names and states of the shards that are on each node. Maybe that should be a secondary view for that screen? Something like, click the # of shards and a list pops up?\nAgree, expanding on click to show all shard/replica names, and then being able to initiate some action on each of the replicas, or \"jump\" to the Collections view expanded on that replica - we must think about the overlap between the screens...\nThe graph view, which you've renamed Collections (+1 IMO), would show where replicas are from the POV of each collection\nThe \"Graph\" view currently lets you see the graph for each collection -> shards -> replicas and their state and a link to that replica. I don't plan to get rid of that view after the rename, but I want to include a tabular view of collections in addition. Perhaps though tabs along the top of the view, or using two different left-hand menu tabs \"Collections\" and \"Collections (graph)\"? ",
            "id": "comment-16406358"
        },
        {
            "date": "2018-04-14T23:08:41+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "For the new \"Nodes\" view, I am whipping up a patch and currently draw the whole table from the CLUSTERSTATUS info. But when trying to pull system/metrics info from other nodes we of course bump into CORS issues. There are two ways to work around\u00a0this:\n\n\tAdd CORS support to Solr's Jetty, automatically allowing all host names\u00a0in a cluster\n\tAdd some /api/proxy endpoint that will proxy requests from the UI to other nodes. Example:\n\n/api/proxy?node=192.168.0.3:8983_solr&endpoint=/api/node/system&params=foo\n\n\n\n\nI think the proxy approach is preferable since it will then also work if you only have access to one Solr node in a cluster, or you access Admin UI through ssh forwarding, where real host/IPs don't resolve from the client network. There are challenges with the proxy approach as well, as it needs to strictly allow only requests to whitelisted nodes that exist in ZK. It also needs to handle authentication, simplest is to always use PKI when talking to other nodes. Authorization must perhaps validate its permission rules relative to the resolved endpoint in addition to the /proxy/ one so this does not become a loophole to allow any action once authenticated. And finally, the handler should have config to lock down proxying to certain methods (only GET by default) and to certain endpoints.\n\nEDIT: A third option is to add a new parameter\u00a0&node to each API where\u00a0the Admin UI needs info for other\u00a0nodes than the local. E.g. /api/node/system?node=192.168.0.3:8983_solr ",
            "id": "comment-16438537"
        },
        {
            "date": "2018-04-15T23:07:05+0000",
            "author": "Upayavira",
            "content": "Your third option seems best to me. You don't want to explicitly proxy. You want to ask your local node for information that it happens to need to get from other nodes, but that happens behind the scenes, based upon a node name. ",
            "id": "comment-16438866"
        },
        {
            "date": "2018-04-16T07:35:48+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Your third option seems best to me\nAgree. I'll start with that. It will also work ootb with authorization permissions etc, and we only need this for a couple of end points to start with. ",
            "id": "comment-16439072"
        },
        {
            "date": "2018-04-20T20:36:20+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Thanks for working on this Jan H\u00f8ydahl. Since the title in this Jira is pretty open, I'd like to take the opportunity to express my wishes  (maybe some of these deserve their own Jiras):\n\n\n\tI\u2019d like the controls in the Graph section to be on top (only at the top or maybe duplicated). Every time I want to use some of the nice filters the UI offers like \u201cShow me degraded collections\u201d I need to scroll to the bottom, do the change, and then scroll up to start looking at the results of my filter. This can be a lot of scrolling if you have collections with many shards and many replicas.\n\tI\u2019d like to have a \u201crefresh\u201d button, or some way to update the view with the latest real information, otherwise you can only refresh the page, which drops the filters (this is already SOLR-11559, but putting it here for completeness)\n\tI\u2019d like to be able to link to a specific filter (i.e. I want to share a link to the cloud tab but that shows a specific collection that I filtered by name). Right now the filters can\u2019t take parameters from the URL I believe.\n\tI\u2019d like to be able to display more information of the replicas/shards than just ip:port and replica state (this is SOLR-11558)\n\tSimilar to the filters in the Graph tab, I\u2019d like to be able to link to a specific znode in the tree (or be able to reload the page and remain on the same znode in the UI)\n\tIt would be nice to have an Overseer stats page in the Cloud section, showing some of the data returned by OVERSEERSTATUS\n\n\n\nAlso :\n+1 to s/Graph/Collections/\n+1 to remove the Dump section\n+1 to remove the Graph (Radial) section ",
            "id": "comment-16446334"
        },
        {
            "date": "2018-04-20T21:16:45+0000",
            "author": "Erick Erickson",
            "content": "Oh, and anything you see having to do with optimizing indexes, please remove it. I missed the one that comes in stand-alone mode under \"core admin\" (SOLR-12253) ",
            "id": "comment-16446376"
        },
        {
            "date": "2018-04-23T14:42:10+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Ok, I got a bit further, see GitHub Pull Request #360\u00a0for code. The screenshot below is a live view of data captured from 6 nodes running on my Mac:\n\n\tProxying SystemInofHandler call and MetricsHandler call through localhost to all other Solr nodes\n\tPulling various data and metrics from the APIs and plotting in the table\n\t\n\t\tUnder node name is server-level data such as OS, version, JVM, physical RAM, CPUs\n\t\tUptime is JVM uptime for this Solr node\n\t\tLoad, CPU & heap as reported by system handler (per-process)\n\t\tDisk is based on CONTAINER.fs.totalSpace - not per core. Not sure if we get solr.data.dir space here as well as solr.solr.home space??\n\t\tGC is number of major collections (solr.jvm.gc.ConcurrentMarkSweep.countper)\u00a05min since JVM start and the same for minor collections (solr.jvm.gc.ParNew.count)\n\t\tRequests is from solr.jetty.org.eclipse.jetty.server.handler.DefaultHandler.get-requests, i.e. not per core but for jetty overall, and we show requests per minute 1min rate and 95 percentile latency\n\t\tCollections and cores simply list what runs on the node. Cores link to the Admin of that node.\n\t\n\t\n\tSome mouse-overs (title attr) for more details on many metrics. Plan to also create a CSS popup with the raw JSON for each node\n\n\n\n\n\nTODO:\n\n\tLimit number of collections/cores displayed, now all are listed\n\tAdd a refresh button\n\tAdd possibility to sort by other columns\n\tAdd some graphical gauges in place of the percentages??\n\tShould the collection names link somewhere?\n\tShould we show #docs somewhere? Per core or per node? As well as avg size/doc?\n\n\n\nFeel free to take it for a spin by cloning the Github fork or checking out the patch file ",
            "id": "comment-16448243"
        },
        {
            "date": "2018-05-03T11:08:42+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Next iteration:\n\n\tLimits number of collections and cores shown to 3\n\tAdds refresh button\n\tAdds \"Details\" button, with expanded info\n\t\n\t\tShows all collection and core names\n\t\tShows disk usage graphs for each core\n\t\tMore info about node in left column\n\t\tHeap details\n\t\n\t\n\n\n\n\u00a0\n\nCompact (standard view):\n\n\n\nDetailed view: ",
            "id": "comment-16462281"
        },
        {
            "date": "2018-05-03T11:28:19+0000",
            "author": "Upayavira",
            "content": "Looking great!\n\nA few thoughts.\n\n\tYou clearly have a table in there. Have you looked at making it responsive?\n\tRather than having a 'detail' check box, could you make clicking on a row expand that row's detail?\n\tAre the references to collections and cores clickable? Would be great if they could take you to that collection or core on the relevant host directly\n\n\n\nOtherwise, looking really good!\n\n\u00a0 ",
            "id": "comment-16462295"
        },
        {
            "date": "2018-05-03T11:47:42+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "It's just a simple table modelled after the one in \"Suggestions\" tab.\n\nYea, would probably be better with per-row detail view.\n\nThe collection and core references are clickable and takes you to that collection in the collections tab. ",
            "id": "comment-16462317"
        },
        {
            "date": "2018-05-03T12:12:21+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "It was quite easy to toggle details per row, so I put in that, and changed the toggle button on top to expand/collapse all nodes.\nThis version also adds more details per node in details view:\n\n\tnumDocs, deletedDocs, warmupTime per core\n\ttotal num docs and avg size/doc per node\n\n\n\n ",
            "id": "comment-16462347"
        },
        {
            "date": "2018-05-03T12:15:52+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Feel free to check out the GitHub PR and play with this yourselves, and if you wish, contribute changes, better styling, more details, whatever.\n\nI think we have approached a place where the new view is useful as is even if it is not responsive, lacks column sorting, pulls a bit too much metrics data etc. All of this can be improved in followup issues. ",
            "id": "comment-16462353"
        },
        {
            "date": "2018-05-03T14:28:06+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "A small refactor:\n\n\tAdded a separate \"host\" column for host-specific details\n\tIf a host has multiple nodes, the host-info will span those rows. This gives a very good overview for those that run multiple nodes per host.\n\tNow the node column only shows port/context, jvm & solr version, JVM uptime\n\tThe load column is removed and instead put as detail on host column\n\tYou can expand/collapse each node individually, expanding details on host level also expands first node (since it's same html table row)\n\n\n\n\n\nI'm uncertain about whether the CPU column could also be moved to host-level, but it says it is per-JVM so I keep it per-node for now. ",
            "id": "comment-16462522"
        },
        {
            "date": "2018-05-03T14:36:24+0000",
            "author": "Erick Erickson",
            "content": "Jan:\n\nI don't know whether you'll do anything with the \"segments.js\" file, the link that shows each segment and has a shaded section of each bar shows the ratio for deleted docs. It's wildly out of proportion and I'm changing it as part of LUCENE-7976. \n\nHere's the change in case you are also changing that bit of code, line 44 in the current segments.js file:\n\nsegment.deletedDocSize = Math.floor((segment.delCount / (segment.delCount + segment.totalSize)) * segment.totalSize);\n\nshould be\n\nsegment.deletedDocSize = Math.floor((segment.delCount / segment.size) * segment.totalSize);\n\nIt's not a big deal, I can reconcile if there are merge conflicts and you get there first, just FYI.\n\nFWIW,\nErick\n ",
            "id": "comment-16462532"
        },
        {
            "date": "2018-05-04T09:10:13+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Erick, I'm not touching the segments part. ",
            "id": "comment-16463597"
        },
        {
            "date": "2018-05-04T09:14:00+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Ok, I put up a public demo for anyone who wants to try:\n\nhttp://34.242.41.243:9000/solr/#/~cloud?view=nodes\n\nYou can even create new collections and index data, but each node\u00a0only has 256m RAM so don't push it \n\nKnown bugs:\n\n\tBuggy table if no collections, need to detect \"empty\" nodes\n\tIf a core has no data, we fail parsing INDEX.sizeInBytes properly\n\tIf a node has no cores, JS attempting to sort list of cores fails\n\n ",
            "id": "comment-16463603"
        },
        {
            "date": "2018-05-05T02:14:48+0000",
            "author": "David Smiley",
            "content": "Looking very nice Jan! \u00a0It's sweet to see this info being made so accessible.\n\n\tthe large fonts for CPU/Heap/Disk seem uncalled for; it gives the appearance that it's super important and maybe trying to tell me about a problem\n\tit's not visually evident that clicking stuff will do something.\n\n ",
            "id": "comment-16464572"
        },
        {
            "date": "2018-05-06T02:58:05+0000",
            "author": "Shawn Heisey",
            "content": "Thanks for looking into making improvements!  There's some really good info being shown here.\n\nSome thoughts after looking at screenshots:\n\n\n\tI think that perhaps \"refresh\" would be a better label than \"reload\".  There is potential for confusion with the reload action on core/collection APIs.  Having different buttons to reload the collections might be a nice addition.\n\tWhat is the percentage on the disk column \u2013 free or used?  Unless the nodes being reported on the screenshots are extremely small VMs or containers, I think that the 91 or 92 percent shown there must be percent free.  It is my opinion that without text indicating which one is displayed, it should be percent used, not percent free, as is the case for other columns like Heap.  If consensus is that percent free is more useful for disk space, then it should say \"free\" somewhere.\n\tI wasn't sure what the GC numbers meant until I read the comments more closely.  If I'm reading the info correctly, it's number of collections for a five minute period, averaged over the whole JVM uptime.  Unless request traffic is fairly uniform 24 hours per day, this does not seem like a very useful number to me.  I do not know if the JVM can access GC data for a smaller timeframe.  If not, it might not be possible to provide better information here.\n\tIf the table only includes one request rate, I think I would prefer to see the 15 minute rate rather than the 1 minute rate.  Maybe that's just me. \n\n ",
            "id": "comment-16464969"
        },
        {
            "date": "2018-05-06T08:41:00+0000",
            "author": "Upayavira",
            "content": "Great comments from Shawn. A few more after playing with that link\n\n\u00a0* If you click on a node cell, it only opens up the first instance row, not all for that node.\n \u00a0* If the window is too narrow, something odd happens with the text in the right-hand column\n\n\n\nOtherwise, loving the breadth of info that is presented there. ",
            "id": "comment-16465024"
        },
        {
            "date": "2018-05-06T16:42:28+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Thanks all for looking at this and giving such constructive feedback!\n\nDavid Smiley:\n\n\tthe large fonts for CPU/Heap/Disk seem uncalled for; it gives the appearance that it's super important and maybe trying to tell me about a problem\n\n\nI'd love for someone to do better styling of this, but I just think it creates a nice visual \u00a0I planned to use colors to warn about dangerous numbers, such as RED for >80% full disk or >80% CPU, and orange\u00a0for >50%. Wdyt?\n\n\tit's not visually evident that clicking stuff will do something.\n\n\nGood point. Will update the CSS with some underlining, colour change and perhaps pointer change. Or perhaps we have a global css style that can be applied to all the links here.\n\nShawn Heisey:\nI think that perhaps \"refresh\" would be a better label than \"reload\"\nDefinitely, will change that.\n\u00a0 Having different buttons to reload the collections might be a nice addition\nIn the next iteration I plan to add context-sensitive menus to many of these cells, so e.g. clicking collection name could have an option to reload, clicking a core name could have an option to delete etc.\nWhat is the percentage on the disk column \u2013 free or used?\nDisk is used %, just like CPU is. If you mouse-over (check the demo link) you'll see details of total disk, free etc. It may be an idea to replace the disk percentage (or all percentage numbers) with a horizontal bar instead, where the bar changes colour to orange/red at critical levels?\n[GC...] Unless request traffic is fairly uniform 24 hours per day, this does not seem like a very useful number to me. I do not know if the JVM can access GC data for a smaller timeframe. If not, it might not be possible to provide better information here.\nThat were the only numbers I found in current metrics API. I agree that if it is possible to get, say, last-15-minutes numbers that would be much better. Andrzej Bialecki ?\nIf the table only includes one request rate, I think I would prefer to see the 15 minute rate rather than the 1 minute rate.\nYea, just picked something, could very well be that 15min rate makes more sense. Can change that \n\nUpayavira:\nIf you click on a node cell, it only opens up the first instance row, not all for that node.\nThat's by design, since the ng-click\u00a0is on the <tr>. However, it could be nice if clicking the \"host\" cell would expand all node rows on that same host. Guess that means that we need to move the ng-click from tr to the <td> level to be able to call different functions? Btw - now if you click a collection/core name, the details view gets expanded first and then the link is clicked/followed. Is there any way to disable the ng-click handler for the <a> inside that cell?\nIf the window is too narrow, something odd happens with the text in the right-hand column\nYou mean the line wraps? The alternative I guess is to specify a min-width on that column? ",
            "id": "comment-16465219"
        },
        {
            "date": "2018-05-06T19:27:13+0000",
            "author": "Andrzej Bialecki",
            "content": "That were the only numbers I found in current metrics API. I agree that if it is possible to get, say, last-15-minutes numbers that would be much better.\n\nThis is the information that we get directly from GarbageCollectorMXBean and it consists of a counter (how many times the particular GC algo has run since JVM was started) and the cumulative \"elapsed time\" for the algo. I'm not sure how the \"last 5 min stats\" was calculated here in the patch. No other information is currently collected by the metrics API - these are just momentary readings (gauges) from the MXBeans that are presented via metrics API.\n\nHaving said that, it's pretty simple to create a Meter or a Timer for each of these GC beans and register them as new metrics - then we will get 1-, 5- and 15-min averages for each GC, as well as a histogram of timings (which can be approximated from deltas in cumulative time). ",
            "id": "comment-16465265"
        },
        {
            "date": "2018-05-06T19:51:04+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Other plans on my list\n\n\tLimit size of metrics fetched, i.e. ask for only those we need, will be important for clusters with many nodes\n\t\n\t\tHere is a suggested prefix filter that seems to work well: http://34.242.41.243:9000/solr/admin/metrics?prefix=CONTAINER.fs,org.eclipse.jetty.server.handler.DefaultHandler.get-requests,gc.,INDEX.sizeInBytes,SEARCHER.searcher.numDocs,SEARCHER.searcher.deletedDocs,SEARCHER.searcher.warmupTime\u00a0\n\t\n\t\n\tIntroduce paging and fetch info for at most\u00a010 servers/nodes at a time\n\tAdd a filter search box to filter on node name (could also filter on collection)\n\n ",
            "id": "comment-16465278"
        },
        {
            "date": "2018-05-06T19:56:37+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I'm not sure how the \"last 5 min stats\" was calculated here in the patch\nThe patch prints \"Minor: 0.17/5m\", which is \"per 5 min\", not last 5 min. But since this is since JVM start which could be months ago, this value is not very useful at this time.\nit's pretty simple to create a Meter or a Timer for each of these GC beans and register them as new metrics...\nGreat! My proposal is then\u00a0to remove the GC column for now and instead create a new Jira (SOLR-12318) which adds some new 1-, 5-, 15-min avg metrics for use in a new GC column. ",
            "id": "comment-16465281"
        },
        {
            "date": "2018-05-07T00:48:32+0000",
            "author": "David Smiley",
            "content": "RED for >80% full disk or >80% CPU, and orange\u00a0for >50%. Wdyt?\n+1 ",
            "id": "comment-16465326"
        },
        {
            "date": "2018-05-07T11:08:41+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New commit with changes:\n\n\tClickable links change background colour when hovered, and also has a thin dotted underline\n\tPercentage numbers change colour: <60%: green, 60-80%: orange, >80%: red\n\tMinimum width of the last \"cores\" column, prevents funny line wrap\n\tRemoved GC column (see SOLR-12318)\n\tPulls only necessary data from Metrics API (parameterised prefix)\n\tUses standard \"System\" angularJS service, but parameterised for \"nodes\"\n\tClicking host cell now toggles details for all nodes on that host\n\tRenamed \"reload\" button to \"Refresh\"\n\tChanged heading \"Disk\" to \"Disk usage\" to clarify that the percentage is used, not free\n\tNow showing req15minRate instead of req1minRate for the RPM (this is all requests, on all handlers, i.e. search, update, admin..)\n\n\n\nThis can be tested at http://34.253.124.99:9000/solr/#/~cloud ",
            "id": "comment-16465795"
        },
        {
            "date": "2018-05-07T20:21:45+0000",
            "author": "Cassandra Targett",
            "content": "I didn't get a chance to give feedback last week, but I agree with much that was said, and the new changes look good IMO.\n\nI do think the numbers are still a bit large, but the colors are a fine mitigation of that if you think they are better with a larger font. IOW, with the color variation I don't have strong opinions about it. Another couple years and I'll need the numbers that big anyway!\n\nOne thing that's a little confusing still is the fact that clicking on the numbers - which otherwise have no indication that they are clickable - opens up the more detailed stats. My first intuition was to click the Node name which is clearly clickable, but that opens up the Solr Admin for that node. That's fine, but how do we tell the user there is more to the stats portion? Maybe a carat icon in the cell that holds the first metric that shows the cell expands? It would be too much maybe to have it in all 3 cells in one row, but the first one would get the point across that more is there, hopefully without being too cluttered. WDYT? ",
            "id": "comment-16466430"
        },
        {
            "date": "2018-05-07T20:38:55+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "One thing that's a little confusing still is the fact that clicking on the numbers - which otherwise have no indication that they are clickable - opens up the more detailed stats\nThat's how things get when the whole table cell has an on-click action attached. I plan to add some mouseover-bgcolor change to the whole row to indicate that something will happen. But I'm not married to this click-anywhere style. Could just as well replace this with\u00a0a simple (expand details...) link at the bottom of the \"Node\" column and a (expand details for all...) link in the \"Host\" column. Or some graphical symbol.\n\nI'd be thrilled if someone with a nose for the visuals could take a stab at clarifying this and more... ",
            "id": "comment-16466442"
        },
        {
            "date": "2018-05-09T18:46:58+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "A question: Should we keep the \"Tree\" (collections) view as default when the Cluster/Cloud tab is opened, or should this new \"Nodes\" tab be the default to show like currently in the patch? ",
            "id": "comment-16469286"
        },
        {
            "date": "2018-05-09T18:54:21+0000",
            "author": "Upayavira",
            "content": "How about making it default for Solr 8.0? It is definitely a better panel than the graph one, but perhaps good to maintain consistency through minor versions?\n\n\u00a0 ",
            "id": "comment-16469296"
        },
        {
            "date": "2018-05-09T19:05:37+0000",
            "author": "Varun Thacker",
            "content": "A question: Should we keep the \"Tree\" (collections) view as default when the Cluster/Cloud tab is opened, or should this new \"Nodes\" tab be the default to show like currently in the patch?\n+1 to change the default to the \"nodes\" tab. Can we change the key name from \"Cores\" to \"Replicas\" maybe?\u00a0 ",
            "id": "comment-16469321"
        },
        {
            "date": "2018-05-09T19:29:20+0000",
            "author": "Varun Thacker",
            "content": "Hi Jan,\n\nUnder the heap section we have\u00a0\n\nUsed: 125.6Mb\nTotal: 245.4Mb\nFree: 119.8Mb\n\nInstead of displaying \"Free\" would displaying \"Max\" be more useful ?\u00a0\n\nFrom the metrics API the max of this JVM is\u00a0\"memory.heap.max\":257294336 .\u00a0 This would help indicate to the user he's running pretty close to the limit?\n\n\u00a0\n\nUnder the Host tab, showing RAM used might bring more pain than gain? I can imagine people going like \"oh i'm running out of memory\" , but then we'll have to point them to Uwe's MMap blog?\u00a0 ",
            "id": "comment-16469362"
        },
        {
            "date": "2018-05-10T00:47:56+0000",
            "author": "Shawn Heisey",
            "content": "Comparing that information to the main dashboard in the admin UI, here are my thoughts:\n\nI think that physical RAM usage should not be shown in the Solr admin UI, unless it comes with a note saying that it is usually completely normal for total RAM usage to be near 100 percent.  Some users do panic when they see the physical memory usage.\n\nThe numbers that are most useful for heap are the numbers shown on the main dashboard.  Free is NOT one of those numbers.  It shows how much heap is actually used, the current size of the heap, and the max size of the heap.  The current and max heap sizes are typically the same, unless the user has explicitly configured both -Xms and -Xmx.\n\nSide note, possibly for a new issue: Running a 7.3 example, I noticed that there is mouseover text for the three numbers on the \"JVM-Memory\" dashboard graph.  Two the mouseovers are shown in bytes, but the third is shown as MB.  I think they should all use the same scale. ",
            "id": "comment-16469774"
        },
        {
            "date": "2018-05-10T20:08:41+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "How about making it default for Solr 8.0\nAgree\nCan we change the key name from \"Cores\" to \"Replicas\" maybe?\u00a0\nYea, guess that's the official term in cloud setting, will change\n[heap]\u00a0 Instead of displaying \"Free\" would displaying \"Max\" be more useful ?\u00a0\n\u00a0Sure, we can display \"Max\" and \"Used\" and pct used.\nI think that physical RAM usage should not be shown in the Solr admin UI\nIn a debugging setting it is useful to know how much physical RAM is on each server. One of the more common mistakes I see is to allocate 15G to JVM when you have 16G physical. So I want to display amount of physical mem. Knowing this and the max heap we normally know about how much free physical mem is left for caching, if Solr is the only major application running on the host. Still, for consistency I thin we should also show \"used\" number, and explain how to interpret in the ref guide and perhaps mouseover. ",
            "id": "comment-16471035"
        },
        {
            "date": "2018-05-10T21:13:23+0000",
            "author": "Shawn Heisey",
            "content": "In a debugging setting it is useful to know how much physical RAM is on each server.\n\nThat's an excellent point.  I see no reason not to include the RAM size.  It's the used/available information that causes support headaches.  If the information about how much RAM is allocated is shown (both on the dashboard and this new cloud info), it should include a note that says 100% usage is often not a cause for concern. ",
            "id": "comment-16471125"
        },
        {
            "date": "2018-05-11T11:19:01+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "it should include a note that says 100% usage is often not a cause for concern.\nI wish there was a pure Java way to get the file-cache RAM number (as displayed in linux \"free\" command). Then we could plot Max physical RAM and a calculated \"available\" number calculated from\u00a0\"free + cached\". The Linux \"free\" command has an \"available\" column which effectively is this. We could even then plot the three number (used, cache, free) with different colour in the \"Physical memory\" bar. ",
            "id": "comment-16471758"
        },
        {
            "date": "2018-06-06T08:12:28+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Pushed an update to the PR:\n\n\tup to date with master\n\tTests for the info and metrics handler proxying\n\tReturns 400 error if nodes= parameter used in non-cloud mode\n\n\n\nWorking on the paging and filtering logic ",
            "id": "comment-16502975"
        },
        {
            "date": "2018-08-01T12:17:17+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Back from holidays. Pushed and update with filtering on node / collection name working and catch up with master\n\n\u00a0 ",
            "id": "comment-16565204"
        },
        {
            "date": "2018-08-01T13:26:55+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Fixed paging.\n\n\tNext/prev buttons now show up at right places, even when filtered by node name.\n\tReset to first page if filters change\n\tRemoved 'health' filter. You can only filter by host/node or collection\n\tClarified that paging is per host, not per node\n\tAlways display filtering input boxes\n\n\n\nPushed changes to AWS, please test again at\u00a0http://34.253.124.99:9000/solr/#/~cloud\u00a0\n\nHint: Try to\u00a0type \"filter\" in collections filter to narrow down to the one node that has that collection. Try to filter node names by IP address or port number ",
            "id": "comment-16565314"
        },
        {
            "date": "2018-08-01T13:38:20+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Added ng-model-options='{ debounce: 500 }' to all input boxes to avoid reloading all metrics for every keystroke in filter input boxes. ",
            "id": "comment-16565336"
        },
        {
            "date": "2018-08-01T13:48:49+0000",
            "author": "Cassandra Targett",
            "content": "+1 Jan, it's looking great IMO. I can't think of any substantive feedback at the moment.\n\nIf no one else has any major issues with the current state, I think it would be great if we could get it into the next release (7.5). If more ideas come up later, we can iterate on those in later versions. ",
            "id": "comment-16565350"
        },
        {
            "date": "2018-08-01T20:37:38+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Thanks for the feedback. I intend to commit to master asap and then get it into 7.5.\n\nIf anyone have time to look at the code in AdminHandlersProxy, especially security aspects, that would be great. Here's an outline of the logic, is it water proof?\n\n\tIf the\u00a0'nodes' parameter is not present in a call to systemInfo and metrics\u00a0handler, then the logic is exactly as before.\n\tIf 'nodes' param is there, then AdminHandlersProxy code is executed, parsing nodes string as comma separated list of nodeNames\n\tIf any nodeName is malformed, we throw an exception. Also if one of the node names does not exist in live_nodes from zk, we exit. I.e. there should be no way to inject bogus URL or node names not part of cluster\n\tThen the request is fanned-out\u00a0by AdminHandlersProxy to all nodes in the list and returned in a combined response for consumption by \"nodes\" tab in Admin UI.\n\tThere's no upper-bound on the number of nodes that can be requested at a time, but for \"Nodes tab\" use typically it will be 10, only the ones rendered per page. If nodes=all is specified, then all live_nodes are consulted.\u00a0Would it make sense to limit the number of nodes in some way? There is a 10s timeout for each request, and the worst ting that could happen in a system with huge number of nodes is that thins take too much time or times out.\n\n\n\nI also like feedback on the approach for parallell sub-queries to all the nodes in a loop using Futures. See method AdminHandlersProxy#callRemoteNode which will construct a new SolrClient per sub request:\n\nHttpSolrClient solr = new HttpSolrClient.Builder(baseUrl.toString()).build();\n\n\nThere is no way to inject an arbitrary URL in there from the API. I tested with basic Auth enabled and it seemed to work, indicating that the sub requests use PKI authentication or something? Anything that looks shaky? ",
            "id": "comment-16565951"
        },
        {
            "date": "2018-08-01T21:45:19+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Starting on the RefGuide work for this patch.\n\n\tI think there is consensus to rename \"Cloud\" tab as \"Cluster\". Shout out if we should wait until later for this.\n\t\n\t\tI am not renaming the URL, e.g. it will continue to have the link\u00a0http://localhost:8983/solr/#/~cloud\n\t\tShould we rename refguide file\u00a0cloud-screens.adoc as well, or just give it a new title \"Cluster screens\", and fix other places in the guide mentioning it by its old name?\n\t\tAre there instructions somewhere to produce the cluster state needed to replicate the \"Graph\" and \"Tree\" screenshots now that the tab name changes?\n\t\tNow that we call the tab \"Cluster\", would it make more sense to move the \"Cluster Suggestions\" tab (autoscaling) from top-level to a sub tab of \"Cluster\"?\n\t\n\t\n\tAlso consensus to remove the \"Radial\" graph. I'll remove that screenshot from the guide and any other mention.\n\n\n\nFirst draft of refguide patch attached. ",
            "id": "comment-16566036"
        },
        {
            "date": "2018-08-02T09:23:08+0000",
            "author": "Upayavira",
            "content": "You said above that you would keep the link as ~cloud. I would suggest that that is likely to create confusion in the future. How about change the active link to ~cluster, but make ~cloud work too, or make ~cloud a redirect to ~cluster? That way, anyone who expects the old URL to work won't be disappointed, yet at the same time the UI is consistent within itself? ",
            "id": "comment-16566528"
        },
        {
            "date": "2018-08-02T09:59:03+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Ideally we'd rename the URL part, the refGuide page names (and thus URLs) etc. A redirect from ~cloud to ~cluster would help.\n\nThe term \"Cloud tab\" or \"Cloud view\" is quite familiar to many, and this change would surely also affect a bunch of docs, blog posts, books, training courses etc out there, begging the question if it is worth it \n\nI spin off the menu tab renaming into its own issue in SOLR-12613 and propose to commit that only for master branch, not 7.x ",
            "id": "comment-16566566"
        },
        {
            "date": "2018-08-02T13:35:57+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New push to PR\n\n\tReverted to existing \"Cloud\" naming for the UI menu, after spinning that rename off in SOLR-12613\n\tRemoved more remnants of radial graph code\n\tFix a failing test and removed some logging and\u00a0nocommit\n\tMade \"Graph\" tab the default again (will be flipped in 8.0 by SOLR-12614)\n\tAdded Reference Guide screenshot and description for the new nodes screen\n\tMerge in\u00a0latest master\n\tPrecommit passes\n\n\n\nThe test suite fails of course \u00a0but I cannot see any of the failures being related to this patch.\n\nBTW: Here's a preview of the edits to RefGuide page \"Cloud Screens\" including the new screenshot: https://github.com/cominvent/lucene-solr/blob/solr8207-ui-nodes-tab/solr/solr-ref-guide/src/cloud-screens.adoc\u00a0 ",
            "id": "comment-16566793"
        },
        {
            "date": "2018-08-02T14:16:18+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Question regarding JavaScript / ECMAscript version we can use in Admin UI. My IntelliJ barfs on this \"arrow\" syntax (in cloud.js)\u00a0when configured with ECMAscript 5.1:\n\nfilteredNodes = node_keys.filter(nod => nod.indexOf($scope.nodeFilter) !== -1);\n\nIf I change to ECMAscript6, then it validates OK. ES6 came in 2015 and is supported by modern browsers. So do we have any policies on what version we MUST stick to in the Admin UI? ",
            "id": "comment-16566855"
        },
        {
            "date": "2018-08-02T22:56:12+0000",
            "author": "Upayavira",
            "content": "Because we don't transpile our sources, we need to use a very basic JavaScript. To use later stuff, we would need to add a transpile stage to our build process. That wouldn't be a bad thing, we could add modification too, but it would be a reasonable size task. ",
            "id": "comment-16567560"
        },
        {
            "date": "2018-08-02T23:06:09+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "What does \"very basic\" mean here? Version 5.1 perhaps? Then I need to revert my use of let\u00a0and const to var as well... ",
            "id": "comment-16567563"
        },
        {
            "date": "2018-08-03T07:40:44+0000",
            "author": "Upayavira",
            "content": "Yes, no const or let.\n\nOr, we add a transpile stage, which gets you the lot of it, and other benefits, and needs to be done at some point. It may help with Angular 2 migration too. ",
            "id": "comment-16567898"
        },
        {
            "date": "2018-08-03T08:22:27+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New push to PR:\n\n\tRevert let/const back to \"var\"\n\tChange arrow operator to anonymous functions to comply with ES5\n\n\n\nI noticed the use of let keyword also in stream.js, opening\u00a0SOLR-12619 for this. ",
            "id": "comment-16567946"
        },
        {
            "date": "2018-08-03T09:51:21+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Is it perhaps wise to wait until 8.0 to remove the Graph (radial) view? I can move those changes to a separate issue... ",
            "id": "comment-16568024"
        },
        {
            "date": "2018-08-03T11:19:45+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "New push:\n\n\tDo not remove Graph (radial) as part of this patch (See\u00a0SOLR-12620\u00a0for removal in 8.0)\n\tReformat refguide page with sub headings, makes it more readable\n\tCorrect\u00a0refguide wording which still said that \"Nodes\" is default view\n\n\n\nPrecommit passes. Will commit to master branch today. ",
            "id": "comment-16568107"
        },
        {
            "date": "2018-08-03T11:58:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 17a02c1089b80ee358a5dc6692cb443d9b4c9b01 in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=17a02c1 ]\n\nSOLR-8207: Add \"Nodes\" view to the Admin UI \"Cloud\" tab, listing nodes and key metrics ",
            "id": "comment-16568129"
        },
        {
            "date": "2018-08-03T20:58:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f97a28017e952472e482951a3274e70a344cbf39 in lucene-solr's branch refs/heads/branch_7x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f97a280 ]\n\nSOLR-8207: Add \"Nodes\" view to the Admin UI \"Cloud\" tab, listing nodes and key metrics\n\n(cherry picked from commit 17a02c1) ",
            "id": "comment-16568751"
        },
        {
            "date": "2018-08-08T12:27:40+0000",
            "author": "Andrzej Bialecki",
            "content": "On master when I create an empty collection (0 docs) with a bunch of replicas I get the following view, which seems broken (see the \"Replicas\" column):\n\n ",
            "id": "comment-16573144"
        },
        {
            "date": "2018-08-08T12:39:28+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "You found a bug, congrats!\n\nAppears that this UI does not work for collection/core names with underscores in them. Probably because we try to shorten the replica name from coll_shard1_replica1_n1 to coll_s1r1, with a simple splitting on underscore... Will try to fix ",
            "id": "comment-16573157"
        },
        {
            "date": "2018-08-08T13:09:15+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I have a fix in\u00a0SOLR-8207_underscores.patch\n\nThe thing was that when building the key to lookup\u00a0in the metrics JSON, we replaced the two first\u00a0underscores in node-name with dots, while what we needed was to replace the two last. The metrics key name is on format solr.core.with_underscore.shard1.replica_n1. The patch uses regex replace...\n\nWorks here, will commit if you agree Andrzej Bialecki  ",
            "id": "comment-16573208"
        },
        {
            "date": "2018-08-08T13:21:29+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Updated the patch with a fix to the logic that generates replica \"label\" as well, making it more robust. If a collection had _shard in its name (not unthinkable) then the replica label would be weird. ",
            "id": "comment-16573223"
        },
        {
            "date": "2018-08-08T13:25:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6845bbff55707ca219fd29f9c4d3d9e3c20175ec in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6845bbf ]\n\nSOLR-8207: Collections with underscores in name no longer cause a crash the Cloud->Nodes UI ",
            "id": "comment-16573226"
        },
        {
            "date": "2018-08-08T13:27:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 98fab3ee2ed7191dce250039fe3bcdc2cc2242f7 in lucene-solr's branch refs/heads/branch_7x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=98fab3e ]\n\nSOLR-8207: Collections with underscores in name no longer cause a crash the Cloud->Nodes UI\n\n(cherry picked from commit 6845bbf) ",
            "id": "comment-16573227"
        },
        {
            "date": "2018-08-08T16:28:39+0000",
            "author": "Andrzej Bialecki",
            "content": "The regex could be a bit tighter in the replica_.(\\d+) part - instead of any char (.) it should probably use replica_[ntp]?(\\d+). The reason for ? is that I only recently fixed a bug in SplitShardCmd where the names of sub-replicas would be missing the replica type character, and I'm not 100% sure there aren't other places like that  ",
            "id": "comment-16573455"
        },
        {
            "date": "2018-08-08T17:08:27+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Also shards, when splitted are called shard1_1_1... ",
            "id": "comment-16573521"
        },
        {
            "date": "2018-08-08T19:33:32+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "The reason for ? is that I only recently fixed a bug in SplitShardCmd where the names of sub-replicas would be missing the replica type character,\nHmm, could that be the case if people have created a collection in Solr 6 and then upgrade to Solr 7?\nAlso shards, when splitted are called shard1_1_1\nAha. What would be the Metric key name for such a shard Andrzej Bialecki ? Supposing it is:\n\nsolr.core.with_underscore.shard1_1_1.replica_n1\n\n...then the perfect\u00a0regex replace\u00a0would\u00a0be:\n\nreplace(/(.*?)_(shard(\\d+_?)+)_(replica_[ntp]?\\d+)/, '\\$1.\\$2.\\$4')\n\n ",
            "id": "comment-16573745"
        },
        {
            "date": "2018-08-08T19:43:23+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I just realised that the old syntax for node names is collection_shard1_replica1 without an underscore between replica and the number. So if we were to support\u00a0old and new style (don't know if we need to?), then it would be something like:\n\n(.*?)_(shard(\\d+_?)+)_(replica_?[ntp]?\\d+)\n\n ",
            "id": "comment-16573754"
        },
        {
            "date": "2018-08-09T01:01:40+0000",
            "author": "Gavin",
            "content": "Move issue from deprecated 'In  Progress' back to 'Open' ",
            "id": "comment-16574148"
        },
        {
            "date": "2018-08-09T12:30:50+0000",
            "author": "Andrzej Bialecki",
            "content": "Jan H\u00f8ydahl we allow at least one collection with '.' in the name, namely .system . For this collection the metric registry name looks like this: solr.core..system.shard1.replica_n1 (notice two dots).\n\nIn other words, collection names may contain separator chars in either core name (where '_' is used) or registry name (where '.' is used) so the best approach is to build a regex that chops off the front and end parts of the name that follow stricter patterns, and then what's left in the middle is the collection name, however weird\u00a0it may be \n\n\u00a0Aha. What would be the Metric key name for such a shard Andrzej Bialecki ? Supposing it is: solr.core.with_underscore.shard1_1_1.replica_n1\n\nYes, that's correct. So is the following:\n\nsolr.core.with_underscore.and.dots.shard1_1_1.replica_1\n\n\n(which additionally exhibits a bug present in < 7.5 where replica names after split didn't have the replica type char). ",
            "id": "comment-16574776"
        },
        {
            "date": "2018-08-09T22:14:03+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Uploaded another patch in\u00a0SOLR-8207_shardstate.patch\u00a0which\n\n\tFurther improves the regex to support\u00a0..._shard_x_y_z_replica_1\u00a0style cores, i.e. with complex shard numbers and with missing replicaType character. It also plays well with\u00a0Solr6 style node names _shard1_replica1.\n\tDo not display replicas for inactive shards (that you get after a split)\n\tIf a replica has a state other than \"active\" (such as recovering), display the state in parenthesis after shard name. We could have used the same graphics and circles with colours as in the graph view, but I just make it dead simple for now\n\n\n\nAndrzej Bialecki : Dots or other chars in collection names works with this regex, tested with collections \".system\" as well as \".coll_with_underscores\", and it all works fine both for looking up metrics and for creating a display label.\n\nWill commit this tomorrow if I don't hear any objections. Thanks Tom\u00e1s Fern\u00e1ndez L\u00f6bbe for pointing out the split shard naming which also caused me to discover the need for hiding inactive shards. ",
            "id": "comment-16575469"
        },
        {
            "date": "2018-08-09T22:53:08+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "About not showing inactive shards/replicas, perhaps that is a bit brutal? I was thinking that you'll se the inactive shards in both the Collection tab and in the Graph view so we don't need to clutter it here. But then inactive shards also consume disk space, so it could perhaps be useful to include them in the\u00a0\"Disk usage\" column. And with the latest patch we show (inactive) next to the\u00a0name in the replica column so it is quite clear which ones are the live ones.\n\nWDYT? Show or hide replicas from inactive shards? ",
            "id": "comment-16575522"
        },
        {
            "date": "2018-08-10T05:59:13+0000",
            "author": "Andrzej Bialecki",
            "content": "IMHO they should be visible. Replicas from inactive shards still consume resources - not only on disk but they are also loaded as regular SolrCore-s and you can still use them if you access their direct URLs. There's a ScheduledTrigger configured by default that periodically checks for these inactive shards and deletes them when their TTL expires (2 days). ",
            "id": "comment-16575781"
        },
        {
            "date": "2018-08-10T08:39:21+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Agree. So I uploaded a simplified version of the latest patch\u00a0SOLR-8207_shardstate.patch\u00a0which\n\n\tDisplays inactive shards, but with state appended to display-label\n\tIf core-state is not active, then core-state is shown in the label, e.g. foo_shard1_replica_n1_(recovering) or if shard-state is not active, then the shard-state is\u00a0added instead (since core-state in this case would\u00a0be 'active').\n\tThis same display label\u00a0is shown both in the replicas column and in the disk-space graphs. See screenshot\n\n\n\n\n\n\u00a0\n\nPS: Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\u00a0What is the logic behind numbering of replicas? A new collection will have _replica_n1, _n2 etc, but after a split the new replicas are named things like _n0, _n5, _n6, _n11, _n12 etc. I cannot see the rule here since _n3, _n4 are not used, neither _n7 - _n10. ",
            "id": "comment-16575942"
        },
        {
            "date": "2018-08-10T08:51:00+0000",
            "author": "Upayavira",
            "content": "If a shard is not active, then make it grey as well as labelling it? ",
            "id": "comment-16575965"
        },
        {
            "date": "2018-08-10T08:57:29+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "The graph view uses strikethrough for \"inactive\" and grey for \"gone\", so if anything those would be the markups to use? But then again, this view is not primarily for displaying all the states. We could of course go all in and use red, orange and add a legend box as for graph. But I think for the scope of 7.5 and this bugfix patch I'll leave it as a simple label. Then we can open other JIRAs to make the UI more fancy or more interactive in later releases. ",
            "id": "comment-16575971"
        },
        {
            "date": "2018-08-10T11:17:51+0000",
            "author": "Andrzej Bialecki",
            "content": "I'm not sure if this fits the scope of this ticket, but we need to make sure the UI can display clusters with 1000-s of nodes and 1000-s of collections and replicas, without choking or crashing the browser. ",
            "id": "comment-16576122"
        },
        {
            "date": "2018-08-10T11:30:30+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I have put som effort into this:\n\n\tPaging 10 hosts\u00a0at a time, i.e. even if you have 1000 nodes, only 10 will be queried for status/metrics at a time\nIf you have 1000's of nodes on one single host name, then there may be issues, since we page per host and not per node\n\tAll collections and replicas per node will be filled in the HTML page, but only the first few will be shown by default until expanding. When expanding, all collections/replicas on that node will be shown. If you have 1000 collections, I assume that those will be spread across more than one node \u00a0\n\tIf you have 1000 collections, each with multi shards and replicas, I can imagine that the CLUSTERSTATUS command will take quite some time and result in a huge JSON. But that is only fetched on page load, not on paging through the nodes, filtering by name or clicking \"refresh\".\n\n ",
            "id": "comment-16576137"
        },
        {
            "date": "2018-08-13T10:47:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 767223ddd3726e0e7463b27aa1a50713ac696c06 in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=767223d ]\n\nSOLR-8207: Nodes view support for shard_1_1_1 format and replica1, replica_1 format. Show core state in label if not 'active' ",
            "id": "comment-16578095"
        },
        {
            "date": "2018-08-13T10:47:52+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 06e6f68f7a4e0ba60a62868dab2cd12c90830c78 in lucene-solr's branch refs/heads/branch_7x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=06e6f68 ]\n\nSOLR-8207: Nodes view support for shard_1_1_1 format and replica1, replica_1 format. Show core state in label if not 'active'\n\n(cherry picked from commit 767223d) ",
            "id": "comment-16578097"
        }
    ]
}