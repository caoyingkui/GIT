{
    "id": "SOLR-1529",
    "title": "NullPointerException in LogUpdateProcessorFactory.java when deleting by query *only*",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The problem occurs when a RequestUpdate has deletions that are all *byQuery (as opposed to *byId). The variable 'deletes' is in this case never initialized and will cause a NullPointerException in some cases (where the number of deletions are high enough).",
    "attachments": {
        "logger.patch": "https://issues.apache.org/jira/secure/attachment/12423439/logger.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Asmodean",
            "id": "comment-12770879",
            "date": "2009-10-28T10:23:45+0000",
            "content": "Simple patch that will avoid the NullPointerException, but doesn't fix the issue. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12770987",
            "date": "2009-10-28T16:41:15+0000",
            "content": "I'm not at a machine where i can try to reproduce this, but i want to try and understand the severity ... looking at LogUPdateProcessorFactory via viewvc, I believe what this bug is reporting is that if a single request includes more then 8 (maxNumToLog) deleteByQuery directives, w/o including any deleteById directives, then the logger will generate an NPE.  (regardless of how many docs were deleted)\n\nWhich means something like this would probably be a way to recreate it in the example...\n\n\njava -Ddata=args -jar post.jar \"<delete><query>X</query><query>X</query>\n           <query>X</query><query>X</query><query>X</query><query>X</query>\n           <query>X</query><query>X</query><query>X</query></delete>\"\n\n\n\n... and adding a single <id> entry (even if bogus, or possibly blank) would work arround the problem....\n\n\n\njava -Ddata=args -jar post.jar \"<delete><query>X</query><query>X</query>\n             <query>X</query><query>X</query><query>X</query><query>X</query>\n             <query>X</query><query>X</query><query>X</query><id /></delete>\"\n\njava -Ddata=args -jar post.jar \"<delete><query>X</query><query>X</query>\n             <query>X</query><query>X</query><query>X</query><query>X</query>\n             <query>X</query><query>X</query><query>X</query><id>NOT_A_REAL_ID</id></delete>\"\n\n\n\n...is that all correct?\n\nQuestions should influence whether we consider this a show stopper for 1.4...\n\n\n\tDoes the update succeed in spite of the NPE, or does the entire update fail?\n\tIs this bug new in 1.4, or will it also occur in 1.3 (skimming viewvc for the 1.3 tag it looks like this bug has been around for a while)\n\n\n\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12771004",
            "date": "2009-10-28T17:18:54+0000",
            "content": "Does the update succeed in spite of the NPE, or does the entire update fail?\n\nThe deletes should still succeed - the logger chains before it does stuff.\n\nIs this bug new in 1.4, or will it also occur in 1.3 (skimming viewvc for the 1.3 tag it looks like this bug has been around for a while)\n\nIt does indeed look like it's been around since the beginning (7/07) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12771228",
            "date": "2009-10-29T01:00:10+0000",
            "content": "In case it wasn't clear - I don't consider this a 1.4 showstopper. "
        },
        {
            "author": "Asmodean",
            "id": "comment-12771372",
            "date": "2009-10-29T10:12:44+0000",
            "content": "Just to clarify from our point of view:\n\nWhat our client using the Solr web application see when it processes a request (... containing more than 8 *byQuery and no *byId) is an exception (we cant differentiate between types of errors, we simply get an exception and have to rollback). It might for example look like the following sample code:\n\nPSEUDO-CODE\n\n\ntry {\n  while (hasMoreDeletesToProcessFromOurApplication) {\n    if (requestBatchMaxSizeReached) {\n      break;\n    }\n\n    request.deleteByQuery(...)\n  }\n\n  request.process(solrServer)\n  solServer.commit()\n} catch (Exception e) {\n  // SolrServerException or IOException\n\n  solrServer.rollback();\n  throw e;\n}\n\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12771470",
            "date": "2009-10-29T16:45:52+0000",
            "content": "Thanks, I just committed your patch (though I had to apply it by hand). "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775916",
            "date": "2009-11-10T15:52:18+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}