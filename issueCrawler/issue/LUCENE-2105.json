{
    "id": "LUCENE-2105",
    "title": "Lucene does not support Unicode Normalization Forms",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/analysis"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.0",
        "resolution": "Duplicate",
        "status": "Resolved"
    },
    "description": "Lucene should bring terms in their Unicode normalization form (http://unicode.org/reports/tr15/), probably NFKC.\n\nE.g., currently words that contain ligatures such as \"fi\", \"fl\", \"ff\", or \"ffl\" cannot be found in certain documents (try to find \"undefined\" in http://www.open-std.org/jtc1/sc22/WG14/www/docs/n1256.pdf).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-12-03T13:13:48+0000",
            "content": "Is this a duplicate or solved by LUCENE-1488? It provides for an ICUNormalizationFilter that looks like it will do the trick.\n\nThe only problem with LUCENE-1488 solving the problem is that it won't be solved in core or without a 3-rd party library.\n\nI may be wrong, but as I understand it, complete Unicode normalization is the responsibility of the user of Lucene. As pointed out in the JavaDoc for ICUNormalizationFilter, sometimes it needs to be place within the chain of filters and not merely before tokenization. ",
            "author": "DM Smith",
            "id": "comment-12785302"
        },
        {
            "date": "2009-12-03T14:29:59+0000",
            "content": "right there is a Filter in LUCENE-1488 for efficient unicode normalization. It implements .quickCheck() and works on char[]\n\nThe only other alternative is the JDK6 impl, which would be a lot less efficient, String-based and only .isNormalized(), no .quickCheck()\n\nIf people want me to break up LUCENE-1488 into smaller pieces and do them one piece at a time, we could go this route because the NormalizationFilter there IMHO is very clear, efficient, and will not change.\n\nOn the other hand I like the idea of consistency in solving that issue as a whole, as Normalization interacts with other processes such as Case Folding. ",
            "author": "Robert Muir",
            "id": "comment-12785341"
        },
        {
            "date": "2009-12-03T14:34:10+0000",
            "content": "Duplicate of LUCENE-1215 (JDK 6 Impl) and LUCENE-1488 (ICU Impl) ",
            "author": "Robert Muir",
            "id": "comment-12785342"
        }
    ]
}