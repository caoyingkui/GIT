{
    "id": "SOLR-9459",
    "title": "Upgrade dependencies",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Hello,\n\nmy project has more than 400 dependencies and I'm trying to ban the usage of commons-collecrtions and commons-lang in favor of org.apache.commons:commons-collection4 and org.apache.commons:commons-lang3. Unfortunately out of the 400 dependencies only solr is still using the old collections and lang dependencies which are more than 6 years old.\n\nIs there a specific reason for that? Can you please update to the latest versions:\n\nhttp://repo1.maven.org/maven2/org/apache/commons/commons-lang3/\nhttp://repo1.maven.org/maven2/org/apache/commons/commons-collections4/\nhttp://repo1.maven.org/maven2/org/apache/commons/commons-configuration2/\nhttp://repo1.maven.org/maven2/org/apache/commons/commons-io/",
    "attachments": {
        "commons-lang3.patch": "https://issues.apache.org/jira/secure/attachment/12826262/commons-lang3.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-08-30T22:48:46+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Agree. Here's an initial patch for upgrading to commons-lang3 ",
            "id": "comment-15450371"
        },
        {
            "date": "2016-08-31T10:33:28+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "That patch does not work, cause some of Solr's dependencies require commons-lang on the classpath, e.g. org.apache.hadoop.fs.Path.\n\nSo even if we upgrade Solr as a whole to commons-lang3, we will still need to require commons-lang for the HDFS stuff. We could try to avoid having commons-lang in core, but then we'd have to factor out HdfsDirectory*, HdfsBackup*, HdfsTransactionLog mm from core into a separate HDFS contrib? ",
            "id": "comment-15451862"
        },
        {
            "date": "2016-08-31T10:57:21+0000",
            "author": "Alan Woodward",
            "content": "Tom Winch and I had a go at factoring the HDFS classes out in https://github.com/apache/lucene-solr/pull/34, but Mark Miller had some concerns - maybe worth looking at again? ",
            "id": "comment-15451911"
        },
        {
            "date": "2016-08-31T11:11:23+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user janhoy commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/34\n\n    I think we should continue the work towards factoring out HDFS as a separate module. We can get rid of old versions of `commons-*` dependencies that the hadoop jars require as well, ref https://issues.apache.org/jira/browse/SOLR-9459.\n\n    And instead of making Solr core bigger and bigger due to fear of user inconvenience, we should improve the user experience of installing Solr plugins -> `bin/solr plugin install hdfs` -> DONE  and then start moving lots of stuff *out* from core. ",
            "id": "comment-15451938"
        },
        {
            "date": "2016-08-31T11:15:00+0000",
            "author": "Petar Tahchiev",
            "content": "Speaking of dependencies and HDFS, I start EmbeddedSolrServerFactory in my project and here's how I define my dependencies:\n\n        <dependency>\n            <groupId>org.springframework.data</groupId>\n            <artifactId>spring-data-solr</artifactId>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpclient</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpcore</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpmime</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>slf4j-api</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>jcl-over-slf4j</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>commons-io</groupId>\n                    <artifactId>commons-io</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.commons</groupId>\n                    <artifactId>commons-lang3</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.springframework.data</groupId>\n                    <artifactId>spring-data-commons</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.solr</groupId>\n                    <artifactId>solr-solrj</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.solr</groupId>\n            <artifactId>solr-dataimporthandler</artifactId>\n            <version>${solr.version}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>slf4j-api</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.hadoop</groupId>\n                    <artifactId>hadoop-auth</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.hadoop</groupId>\n                    <artifactId>hadoop-common</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpcore</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.hadoop</groupId>\n                    <artifactId>hadoop-hdfs</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.hadoop</groupId>\n                    <artifactId>hadoop-annotations</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.google.guava</groupId>\n                    <artifactId>guava</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.googlecode.concurrentlinkedhashmap</groupId>\n                    <artifactId>concurrentlinkedhashmap-lru</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpclient</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>javax.mail</groupId>\n                    <artifactId>mail</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>joda-time</groupId>\n                    <artifactId>joda-time</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>commons-codec</groupId>\n                    <artifactId>commons-codec</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>commons-cli</groupId>\n                    <artifactId>commons-cli</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>commons-configuration</groupId>\n                    <artifactId>commons-configuration</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>commons-lang</groupId>\n                    <artifactId>commons-lang</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>commons-io</groupId>\n                    <artifactId>commons-io</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>commons-fileupload</groupId>\n                    <artifactId>commons-fileupload</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-continuation</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-deploy</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-http</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-io</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-jmx</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-security</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-server</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-util</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-webapp</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-xml</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-servlet</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.eclipse.jetty.orbit</groupId>\n                    <artifactId>javax.servlet</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.codehaus.woodstox</groupId>\n                    <artifactId>wstx-asl</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>log4j</groupId>\n                    <artifactId>log4j</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>javax.activation</groupId>\n                    <artifactId>activation</artifactId>\n                </exclusion>\n\n\n\nand it still works. This brings the question - are you sure all those dependencies are required? They have compile scope - is this relevant? Can we also upgrade to log4j2 or even better use a log-neutral API like SLF4J or commons? What is guava doing there (together with commons- jars)? Can we upgrade from joda-time to java8 time? Can we provide a separate module solr-embedded with minimum dependencies for people that just want to run embedded solr? ",
            "id": "comment-15451946"
        },
        {
            "date": "2016-08-31T11:24:27+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I think it makes sense to keep Solr's core slim and keep dependencies up to date. If you know you'll only ever use a subset of the features you could get away with defining your set of dependency jars that you pull in as you do with Embedded. But Embedded Solr is not really supported anymore, so don't hold your breath for any new features  ",
            "id": "comment-15451960"
        },
        {
            "date": "2016-08-31T11:34:20+0000",
            "author": "Petar Tahchiev",
            "content": "My point exactly - keep Solr's core slim and keep dependencies up to date. How come Embedded Solr is not supported any more? It is still in the repo: https://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer.java I use it during development and testing (for production we have a separate solr instance). ",
            "id": "comment-15451981"
        },
        {
            "date": "2016-08-31T11:36:20+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Click on the link I provided to the RefGuide, and it explains why  ",
            "id": "comment-15451990"
        },
        {
            "date": "2016-08-31T12:03:32+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "But Embedded Solr is not really supported anymore\n\nThat's just not true. It is not recommended for most normal cases. It is used to build indexes with hadoop. It is part of our public solrj API and hasn't been deprecated. It is definitely supported. ",
            "id": "comment-15452051"
        },
        {
            "date": "2016-08-31T12:07:33+0000",
            "author": "Petar Tahchiev",
            "content": "That's what I was hoping for  What a relief  ",
            "id": "comment-15452059"
        },
        {
            "date": "2016-08-31T12:47:16+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user markrmiller commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/34\n\n    Sorry, still have the same objection. I am not really on board with this,\n    \"let's make core as slim as possible and put pressure on devs to not use\n    libs.\" This is not Lucene and it's not 2001. The HDFS libs are small and\n    will soon be smaller when there is a client only lib. Library harmonization\n    reqs don't just go away because of contribs. No reason to make HDFS a\n    contrib instead of first class IMO.\n\n\n\tMark\n\n\n\n    On Wed, Aug 31, 2016 at 7:11 AM Jan H\u00f8ydahl <notifications@github.com>\n    wrote:\n\n    > I think we should continue the work towards factoring out HDFS as a\n    > separate module. We can get rid of old versions of commons-* dependencies\n    > that the hadoop jars require as well, ref\n    > https://issues.apache.org/jira/browse/SOLR-9459.\n    >\n    > And instead of making Solr core bigger and bigger due to fear of user\n    > inconvenience, we should improve the user experience of installing Solr\n    > plugins -> bin/solr plugin install hdfs -> DONE  and then start moving\n    > lots of stuff out from core.\n    >\n    > \u2014\n    > You are receiving this because you were mentioned.\n    > Reply to this email directly, view it on GitHub\n    > <https://github.com/apache/lucene-solr/pull/34#issuecomment-243732614>,\n    > or mute the thread\n    > <https://github.com/notifications/unsubscribe-auth/AAbZFHD0pBgENuF_4oT0raEWe_pjqwc2ks5qlWFdgaJpZM4ISC4l>\n    > .\n    >\n    \u2013 \n\n\tMark\n    about.me/markrmiller\n\n\n ",
            "id": "comment-15452142"
        },
        {
            "date": "2016-08-31T13:17:14+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I didn't say that it is deprecated. But we have earlier actively discouraged using the embedded mode for production if not absolutely necessary. See http://wiki.apache.org/solr/EmbeddedSolr\n\nPetar Tahchiev's use for development and testing is well within recommended use of Embedded, so not really an issue for him. However there should be really good reason for choosing Embedded for production - that would be a special case, and, as the wiki page says \"less flexible, harder to support, not as well tested\". ",
            "id": "comment-15452216"
        }
    ]
}