{
    "id": "SOLR-6519",
    "title": "In trunk change Solr's DirectoryFactory.create method to take LockFactory",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Because of NIO2 changes and the corresponding workaround, it is impossible now to create a Directory and \"hope\" that the lock factory directory is not created. Especially if you want some non-standard lock factory, this blows up.\n\nThe problem is: The lock dir is now created in ctor. As workaround I made all factories set NoLockFactory initially through ctor (see SOLR-6518), but this is just a workaround for incorrect API design.\n\nIn fact the main problem is just stupid: Why does protected CachingDirectoryFactory.create() not take the lock factory? I think its because of backwards compatibility, but with Solr 5.0 we can change this.\n\nIn future we want to make the lock factory non-mutable in Directory, so this is an important change. In addition, injectLockFactory looks horrible, this code is a h\u00e4ckidy-hick-hack!",
    "attachments": {
        "SOLR-6519.patch": "https://issues.apache.org/jira/secure/attachment/12668760/SOLR-6519.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-14133836",
            "date": "2014-09-15T12:29:30+0000",
            "content": "Attached is a patch refactoring DirectoryFactory in Solr 5.0:\n\n\tinjectLockFactory was removed, it was a very ugly hack\n\tthe abstract create() method now takes a LockFactory instance, that is used to pass to ctor. Some directory implementations may ignore it.\n\tI added createLockFactory(9 protected method, that has a default implementation for standard file systems lock factories. It only does not allow HdfsLockFactory, instead throws an Exception. HdfsDirectory ofverrides this method and allows to create one with correct configuration. RAMDirectoryFactory only allows \"single\" as lock factory, other settings are refused.\n\n\n\nJust one Question: If you don't configure a lock type, it currently falls back to \"simple\" as default (for backwards compatibility). For Solr 5, we should change this default to \"native\". Any comments?\n\nMark Miller: Can you look at the HDFS stuff, I was not able to test this on Windows.\n\nAll tests pass. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14133860",
            "date": "2014-09-15T12:55:38+0000",
            "content": "New patch with more refactorings...\n\nAll test pass. I changed the default lockfactory for FS-based directories to \"native\". "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14135198",
            "date": "2014-09-16T09:38:03+0000",
            "content": "New patch: The last one missed to set the lock factory on HDFSDirectory.\n\nIt's ready to commit. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14137498",
            "date": "2014-09-17T16:30:48+0000",
            "content": "Commit 1625644 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1625644 ]\n\nSOLR-6519: Make DirectoryFactory#create() take LockFactory "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14137651",
            "date": "2014-09-17T18:00:56+0000",
            "content": "I'm seeing reproducible test failures on trunk that seem related to this change...\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=CoreMergeIndexesAdminHandlerTest -Dtests.method=testMergeIndexesCoreAdminHandler -Dtests.seed=A61E329DCBF0FF41 -Dtests.slow=true -Dtests.locale=pt -Dtests.timezone=Pacific/Pago_Pago -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.05s | CoreMergeIndexesAdminHandlerTest.testMergeIndexesCoreAdminHandler <<<\n   [junit4]    > Throwable #1: org.apache.solr.common.SolrException: SolrCore 'collection1' is not available due to init failure: Unrecognized lockType: single\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([A61E329DCBF0FF41:6374CDE1159B9BFA]:0)\n   [junit4]    > \tat org.apache.solr.core.CoreContainer.getCore(CoreContainer.java:745)\n   [junit4]    > \tat org.apache.solr.handler.admin.CoreMergeIndexesAdminHandlerTest.testMergeIndexesCoreAdminHandler(CoreMergeIndexesAdminHandlerTest.java:81)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: org.apache.solr.common.SolrException: Unrecognized lockType: single\n   [junit4]    > \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:889)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:651)\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14137667",
            "date": "2014-09-17T18:09:40+0000",
            "content": "another seed, full stack...\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=CoreMergeIndexesAdminHandlerTest -Dtests.method=testMergeIndexesCoreAdminHandler -Dtests.seed=CD7BE4551EE0F637 -Dtests.slow=true -Dtests.locale=zh_SG -Dtests.timezone=Asia/Calcutta -Dtests.file.encoding=US-ASCII\n   [junit4] ERROR   0.05s | CoreMergeIndexesAdminHandlerTest.testMergeIndexesCoreAdminHandler <<<\n   [junit4]    > Throwable #1: org.apache.solr.common.SolrException: SolrCore 'collection1' is not available due to init failure: Unrecognized lockType: single\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([CD7BE4551EE0F637:8111B29C08B928C]:0)\n   [junit4]    > \tat org.apache.solr.core.CoreContainer.getCore(CoreContainer.java:745)\n   [junit4]    > \tat org.apache.solr.handler.admin.CoreMergeIndexesAdminHandlerTest.testMergeIndexesCoreAdminHandler(CoreMergeIndexesAdminHandlerTest.java:81)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: org.apache.solr.common.SolrException: Unrecognized lockType: single\n   [junit4]    > \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:889)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:651)\n   [junit4]    > \tat org.apache.solr.core.CoreContainer.create(CoreContainer.java:491)\n   [junit4]    > \tat org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:255)\n   [junit4]    > \tat org.apache.solr.core.CoreContainer$1.call(CoreContainer.java:249)\n   [junit4]    > \tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n   [junit4]    > \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n   [junit4]    > \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n   [junit4]    > \t... 1 more\n   [junit4]    > Caused by: org.apache.solr.common.SolrException: Unrecognized lockType: single\n   [junit4]    > \tat org.apache.solr.core.StandardDirectoryFactory.createLockFactory(StandardDirectoryFactory.java:73)\n   [junit4]    > \tat org.apache.solr.core.CachingDirectoryFactory.get(CachingDirectoryFactory.java:350)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.getNewIndexDir(SolrCore.java:275)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.initIndex(SolrCore.java:487)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:793)\n   [junit4]    > \t... 8 more\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14137692",
            "date": "2014-09-17T18:23:13+0000",
            "content": "Hi,\nI know why this happens:\nIn the new impl (after removing the hacky) injectLockFactory, I only added the \"useful\" ones to each DirectoryFactory:\n\n\tHDFS only supports \"none\" or \"hdfs\"\n\tStandardDirectoryFactory only supports \"simple\", \"native\", \"none\"\n\tRAMDirectoryFactory only supports \"single\"\n\tMockDirectoryFactory ignores the factory completely, it uses what test framework chooses\n\n\n\nI did not know that there was some additional randomization! For me the tests passed - strange. We have 2 opinions:\n\n\tAdd back \"single\" to StandardDirectoryFactory (which is a bit strange), but Hoss mentioned on IRC, if somebody has a separate directory for every solr instance. It is still risky!\n\tChange the randomization\n\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14137706",
            "date": "2014-09-17T18:29:23+0000",
            "content": "Commit 1625724 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1625724 ]\n\nSOLR-6519: Add back \"single\" lock factory type to StandardDirectoryFactory (to prevent test randomization from failing). Should be discussed in separate issue. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14137708",
            "date": "2014-09-17T18:30:08+0000",
            "content": "For now I will support \"single\" again for StandardDirectoryFactory, so tests don't fail. Its a risky setting, but if we want to keep it for now, I am fine.\n\nI committed this. I will open anther issue to circulate about \"single\" vs. disk based directory. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14137713",
            "date": "2014-09-17T18:36:13+0000",
            "content": "Commit 1625731 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1625731 ]\n\nSOLR-6519: Also allow \"single\" for HDFS "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332976",
            "date": "2015-02-23T05:02:54+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}