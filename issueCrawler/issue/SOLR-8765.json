{
    "id": "SOLR-8765",
    "title": "Enforce required parameters in SolrJ Collection APIs",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Several Collection API commands have required parameters.  We should make these constructor parameters, to enforce setting these in the API.",
    "attachments": {
        "SOLR-8765-revert-behavior.patch": "https://issues.apache.org/jira/secure/attachment/12800874/SOLR-8765-revert-behavior.patch",
        "SOLR-8765.patch": "https://issues.apache.org/jira/secure/attachment/12790710/SOLR-8765.patch",
        "SOLR-8765-splitshard.patch": "https://issues.apache.org/jira/secure/attachment/12792595/SOLR-8765-splitshard.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-01T11:52:30+0000",
            "author": "Alan Woodward",
            "content": "Patch.\n\nThis is a backwards-break for the API, but I think that's fine for 6.0? ",
            "id": "comment-15173649"
        },
        {
            "date": "2016-03-02T22:09:41+0000",
            "author": "Jason Gerlowski",
            "content": "I've been poking around in that code a bit recently, so I thought I might take a look at your patch.  It looked good to me.\n\nThe only tweak I'd suggest is that you might be able to move the validateName IAE message String into SolrIdentifierValidator as a constant.  Ostensibly, that message is useful for anything that calls into SIV, so I'd say there's value in extracting it to there (rather than having every caller have their own slightly different error message).\n\nArguably, that's not related to this JIRA at all though.  So take my suggestion with a grain of salt.\n\nLooks good to me! ",
            "id": "comment-15176577"
        },
        {
            "date": "2016-03-07T19:59:02+0000",
            "author": "Alan Woodward",
            "content": "This has missed 6.0, so here's a patch that deprecates the constructors instead.  It also:\n\n\tadds some static factory methods to help distinguish between different use-cases for some requests\n\tadds a whole bunch of javadoc\n\tadds some pre-request validation, so that we can catch badly-formed requests before they're sent to a Solr instance.\n\n\n\nThe patch applies on top of SOLR-8782. ",
            "id": "comment-15183589"
        },
        {
            "date": "2016-03-09T12:51:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 55c595a9dcea7d3426e7dcc2690324624287b204 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=55c595a ]\n\nSOLR-8765: Enforce required parameters in SolrJ Collections API ",
            "id": "comment-15187050"
        },
        {
            "date": "2016-03-09T13:04:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c1277cda1116a44b3371a3fa8364cc2032e14273 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c1277cd ]\n\nSOLR-8765: Enforce required parameters in SolrJ Collections API ",
            "id": "comment-15187061"
        },
        {
            "date": "2016-03-09T13:05:01+0000",
            "author": "Alan Woodward",
            "content": "Thanks for the review Jason! ",
            "id": "comment-15187062"
        },
        {
            "date": "2016-03-09T21:16:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f24810bdf1e8b1949970ce743373794e0b1ffc96 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f24810b ]\n\nSOLR-8765: Throw SolrException rather than IAE on name validation ",
            "id": "comment-15188050"
        },
        {
            "date": "2016-03-09T21:16:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8b408be7a2960a5f5a371cc6acb5af3e15b31344 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8b408be ]\n\nSOLR-8765: Throw SolrException rather than IAE on name validation ",
            "id": "comment-15188051"
        },
        {
            "date": "2016-03-10T00:57:27+0000",
            "author": "Jason Gerlowski",
            "content": "IMO, Id rather have SolrIdentifierValidator return boolean than SolrException. SolrException is intended to be used on the server side, as it can be converted into a status code. That aspect of the exception doesn't make a ton of sense being used on the client/Solr J side.\n\n(Disclaimer, when I first wrote SolrIdentifierValidator, I had it throwing SolrException. I was then converted after talking to Anshum about the downsides of using it client-side) ",
            "id": "comment-15188416"
        },
        {
            "date": "2016-03-10T01:06:46+0000",
            "author": "Anshum Gupta",
            "content": "Alan Woodward Having the validator return a boolean value seem much better to me than to return the input value in case of successful validation. What was the reason behind changing that behavior. ",
            "id": "comment-15188426"
        },
        {
            "date": "2016-03-10T09:07:27+0000",
            "author": "Alan Woodward",
            "content": "Everywhere that was actually using the validator had exactly the same pattern:\n\nname = inputname;\nif (!SolrIdentifierValidator.validate(name))\n  throw IllegalArgumentException(\"exactly the same error message\");\n\n\nso it seemed to make sense to me to pull that into the method.  The boolean method is still in SolrIdentifierValidator, although it's now private, but I can make it public again if that helps things.\n\nre changing the Exception type, I agree that it's not ideal, but keeping it as IAE ended up losing information when exceptions were propagated in TestCollectionAPI.  Looking at it again, though, this is mainly due to the tests there not using CollectionsAdminRequests explicitly, so there's no client-side checking.  I'll see if I can change it back again. ",
            "id": "comment-15188937"
        },
        {
            "date": "2016-03-10T17:31:41+0000",
            "author": "Anshum Gupta",
            "content": "I am sure that the validator response was used to throw either the SolrException of the IAE depending upon where it was. I am still not convinced with that particular change of switching the return type and calling the single validate method. Let us keep that as it was.\n\nAlso, returning boolean allows us to change the logging, or the behavior in case of failed validation. We could still do that by catching the exception, but why even return something on success, the original code returned nothing from the validation method (void) and seems like your change partially reverts back to the old code. ",
            "id": "comment-15189600"
        },
        {
            "date": "2016-03-10T20:07:33+0000",
            "author": "Anshum Gupta",
            "content": "This seems to have also broken split shard. I am assuming you relied on the ref guide, which says that the shard name is mandatory for SPLITSHARD, but that's not true when split.key param is used. I'll fix this and also fix the documentation. ",
            "id": "comment-15189865"
        },
        {
            "date": "2016-03-10T22:15:05+0000",
            "author": "Anshum Gupta",
            "content": "Reopening to fix split shard and other open issues. ",
            "id": "comment-15190062"
        },
        {
            "date": "2016-03-10T22:15:38+0000",
            "author": "Anshum Gupta",
            "content": "Patch that applies over SOLR-8790 so that this could be tested. ",
            "id": "comment-15190065"
        },
        {
            "date": "2016-03-11T00:51:13+0000",
            "author": "Anshum Gupta",
            "content": "SOLR-8790 has been committed. The previous patch had an issue that's been fixed in this one. The constructor for SplitShard request didn't set the value of collection name.\nRunning tests. I'll commit this right after they pass. ",
            "id": "comment-15190256"
        },
        {
            "date": "2016-03-11T00:55:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b0caca3b60b8653a5b2539c39455bf06bcc407bf in lucene-solr's branch refs/heads/master from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b0caca3 ]\n\nSOLR-8765: Fix CollectionAdminRequest.SplitShard to accept requests without the 'shard' parameter ",
            "id": "comment-15190258"
        },
        {
            "date": "2016-03-11T01:11:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bc41158648fc031cc1fe7b07ed62f5f140854f59 in lucene-solr's branch refs/heads/branch_6x from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bc41158 ]\n\nSOLR-8765: Fix CollectionAdminRequest.SplitShard to accept requests without the 'shard' parameter ",
            "id": "comment-15190275"
        },
        {
            "date": "2016-03-16T22:41:50+0000",
            "author": "Anshum Gupta",
            "content": "Alan Woodward when do you plan on reverting the SolrIdentifierValidator.validate usage and behavior to not throw an exception directly? If you don't have the time, I can take care of it. ",
            "id": "comment-15198341"
        },
        {
            "date": "2016-03-17T08:42:33+0000",
            "author": "Alan Woodward",
            "content": "I'll try and get to it tomorrow (UK time) ",
            "id": "comment-15199163"
        },
        {
            "date": "2016-03-17T20:51:00+0000",
            "author": "David Smiley",
            "content": "I think this issue introduced a possible problem, very likely unintended as it's easy to overlook.  This is a new convenience method we are to use (or a like-kind constructor):\n\n  public static Create createCollection(String collection, String config, int numShards, int numReplicas) {\n\n\nNotice that numShards is a primitive int.  And notice that Create.numShards is an object Integer.  the setNumShards method is deprecated so I'll overlook that as I'm not to call it.  So how am I supposed to use this for the implicit router in which my intent is to manage the shards myself, without setting numShards?  Perhaps we shall have a separate convenience method & constructor expressly for the implicit router? ",
            "id": "comment-15200349"
        },
        {
            "date": "2016-03-17T21:15:27+0000",
            "author": "Anshum Gupta",
            "content": "numShards shouldn't be mandatory and so the constructor should have excluded that. I think we need tests for all of this else we wouldn't know what's even broken.\nIdeally, something that randomizes the getting of CollectionsAdminRequest objects through the deprecated constructor and the new approach would be good, but that could be a lot of effort to manage a deprecated API, so guess we should just add more tests for the new API. ",
            "id": "comment-15200403"
        },
        {
            "date": "2016-03-17T22:07:15+0000",
            "author": "Alan Woodward",
            "content": "I'd say add another factory method for the implicit router case.  The point of adding these methods is to make it a lot clearer in the API how you should use these parameters, and what combinations are allowed and which aren't.\n\nOn tests, my plan was to gradually cut over the existing tests that use the deprecated API to the new methods, fixing stuff as I go.  That's why this is targeted at 6.1, to give time to work out the wrinkles. ",
            "id": "comment-15200484"
        },
        {
            "date": "2016-03-19T02:02:30+0000",
            "author": "David Smiley",
            "content": "add another factory method for the implicit router case\n+1 ",
            "id": "comment-15202505"
        },
        {
            "date": "2016-03-29T23:11:15+0000",
            "author": "Anshum Gupta",
            "content": "Do you want me to fix this?  ",
            "id": "comment-15217035"
        },
        {
            "date": "2016-04-19T16:43:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7be7e8beb965714dd1fb1b85f711e9c8a882d088 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7be7e8b ]\n\nCHANGES.txt corrections - new features go in the New Features section (SOLR-8782, SOLR-8765, SOLR-8842) ",
            "id": "comment-15248142"
        },
        {
            "date": "2016-04-19T16:44:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 423ec098504836ccd9b6e742a5b93c7b40cb0aa3 in lucene-solr's branch refs/heads/master from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=423ec09 ]\n\nCHANGES.txt corrections - new features go in the New Features section (SOLR-8782, SOLR-8765, SOLR-8842) ",
            "id": "comment-15248146"
        },
        {
            "date": "2016-04-26T21:08:07+0000",
            "author": "Anshum Gupta",
            "content": "Alan Woodward here's a patch that reverts the behavior. I plan to commit this soon but I just wanted to be sure that I'm not missing something that you see. ",
            "id": "comment-15258922"
        },
        {
            "date": "2016-04-27T14:38:01+0000",
            "author": "Alan Woodward",
            "content": "Hey Anshum, sorry for not getting to this sooner.  Patch looks fine. ",
            "id": "comment-15260261"
        },
        {
            "date": "2016-05-19T16:59:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3bb4b0629825187a1ee11d2a691edddaa5d5d4a4 in lucene-solr's branch refs/heads/branch_6_0 from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3bb4b06 ]\n\nSchemaManager waits correctly for replicas to be notified of a new change\n\nFor branch_6_0: Modified TestManagedSchemaAPI.java to use old-style CollectionAdminRequest.Reload, since CollectionAdminRequest.reloadCollection() from SOLR-8765 will land in 6.1. ",
            "id": "comment-15291514"
        },
        {
            "date": "2016-09-29T18:16:48+0000",
            "author": "Cassandra Targett",
            "content": "Alan Woodward Where are we with this issue? It seems to be finished from the comments, but there has been enough back & forth that I'm not sure. ",
            "id": "comment-15533575"
        },
        {
            "date": "2016-09-30T07:51:52+0000",
            "author": "Alan Woodward",
            "content": "There are still gaps in the API, but I'm fixing them as I go in SOLR-9132, so I'll mark this as resolved. ",
            "id": "comment-15535344"
        }
    ]
}