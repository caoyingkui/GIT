{
    "id": "SOLR-9560",
    "title": "Solr should check max open files and other ulimits and refuse to start if they are set too low",
    "details": {
        "components": [],
        "type": "Wish",
        "labels": "",
        "fix_versions": [
            "7.3"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Solr should check max open files and other ulimits and refuse to start if they are set too low. Specifically:\n\n\tmax open files should be at least 32768\n\tmax memory size and virtual memory should both be unlimited",
    "attachments": {
        "SOLR-9560.patch": "https://issues.apache.org/jira/secure/attachment/12876698/SOLR-9560.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-26T11:24:04+0000",
            "author": "Noble Paul",
            "content": "We should just show a splash screen when we start solr with suboptimal environment settings. If we fail to start this will be a bad experience for the casual user who downloads and plays with Solr on his laptop\n\n\n***************************************************************\n*    The Max fopen files is too low. set it bigger            *\n***************************************************************\n\n ",
            "id": "comment-15522777"
        },
        {
            "date": "2016-09-26T12:47:56+0000",
            "author": "David Smiley",
            "content": "Good idea Noble; I like that better. ",
            "id": "comment-15522957"
        },
        {
            "date": "2016-09-26T16:04:46+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Perhaps we could have a bin/solr start -prod switch which turns on a bunch of best-practice settings, such as enforcing file-handles, requiring 64-bit Java, disabling stream handler, logging at WARN level, refusing to run as root user, increasing log4j.appender.file.MaxFileSize, refusing to start with default SSL/BasicAuth passwords etc... I've seen many misconfigured prod-systems running OOTB settings  ",
            "id": "comment-15523464"
        },
        {
            "date": "2017-03-13T16:44:21+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Moving to 6.5, since 6.4 has already been released. ",
            "id": "comment-15907802"
        },
        {
            "date": "2017-03-22T12:08:41+0000",
            "author": "Vineet Sureka",
            "content": "Hi Ishan, Shall I take this up? I am relatively new to open source project contributions. This seems to be a good ticket to start with. ",
            "id": "comment-15936184"
        },
        {
            "date": "2017-03-22T12:14:38+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Sure, Vineet. FYI, https://wiki.apache.org/solr/HowToContribute ",
            "id": "comment-15936187"
        },
        {
            "date": "2017-07-11T20:33:36+0000",
            "author": "Rohit",
            "content": "Adding patch with following features:\n\nOS: Linux\nBasic checks for\n1. max open file (-n)\n2. Max memory size and virtual memory size\n\nIt logs a warning in case the parameters are less than the recommended values:\n\nWARN: Current Settings[User=Username]: Open File(-n)=10240, max memory size(-m)=unlimited, virtual memory(-v)=unlimited\nWARN: Please ensure max open file(-n) is more than 32768 and [max memory(-m), virtual memory(-v) are set to unlimited], refer ULIMIT man page or, Solr Ref Guide\n\nPlease review and let me know for any suggestions. ",
            "id": "comment-16082918"
        },
        {
            "date": "2017-07-11T21:08:05+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "\n Current Settings[OK]: Open... \n\n\nI don't think we should log that when settings are acceptable. Also, for sake of consistency with other parts of the script, lets print \"WARNING\" instead of \"WARN\". ",
            "id": "comment-16082988"
        },
        {
            "date": "2017-07-12T03:48:18+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Rohit. I think a better way to implement something like this would be to call a Java executable class which can do comparisons and print out warnings. It has two advantages:\n\n\tWe don't need to do the implementation twice (once for bin/solr, again for bin/solr.cmd)\n\tThere are certain things we can do in a standard way in Java such as finding free disk space\n\tLater that class can be used by a running Solr instance to expose violations via API \u2013 perhaps the Metrics API is apt here.\n\n\n\nAlso I think you can get most of these interesting values via JMX but if not, it is easy to pass the values from the script to the java class. ",
            "id": "comment-16083393"
        },
        {
            "date": "2017-12-01T20:51:49+0000",
            "author": "Erick Erickson",
            "content": "Shalin Shekhar Mangar Hmm, on a quick search I don't see a good way to get the ulimit information in Java. So are you suggesting that the script do the ulimit (or whatever) and pass the variables to the Java executable?\n\nIf that's the case, I don't see how that would work with an API. What am I missing here? ",
            "id": "comment-16274958"
        },
        {
            "date": "2017-12-25T21:30:49+0000",
            "author": "Erick Erickson",
            "content": "Note if we want to follow Shalin's suggestion we can open a new JIRA, perhaps one that would include a larger list of recommendations. ",
            "id": "comment-16303394"
        }
    ]
}