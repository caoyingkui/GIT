{
    "id": "LUCENE-7102",
    "title": "LatLonPoint newDistanceSort fails with \"sort missing first\"",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "The distance sort comparator creates bounding boxes when the priority queue is full, to speed up sorting.\n\nBut with missing values (which we don't test), they can be e.g. -Inf/+Inf and we do the wrong thing (e.g. try to make illegal infinite bounding boxes).",
    "attachments": {
        "LUCENE-7102.patch": "https://issues.apache.org/jira/secure/attachment/12793351/LUCENE-7102.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15193691",
            "author": "Robert Muir",
            "date": "2016-03-14T17:29:40+0000",
            "content": "Here is a patch (with tests for missing, and different missingValues).\n\nFirst we restrict missingValue to either Double.POSITIVE_INFINITY (missing values last) and Double.NEGATIVE_INFINITY (missing values first). This keeps things simpler and will allow for more optimizations.\n\nIn either case we can just bound Integer.MIN_VALUE .. Integer.MAX_VALUE for each dimension:\n\n\t+Inf means we've filled the priority queue with only missing values, so any possible value competes.\n\t-Inf means at this point, only missing values can possibly compete anymore (and only if you have another comparator). I don't think we should do anything tricky to optimize this case.\n\n "
        },
        {
            "id": "comment-15193725",
            "author": "Michael McCandless",
            "date": "2016-03-14T17:43:05+0000",
            "content": "+1, nice catch.\n\nI'm not sure we should even allow \"sort missing first\"... "
        },
        {
            "id": "comment-15193733",
            "author": "Robert Muir",
            "date": "2016-03-14T17:46:53+0000",
            "content": "I thought about this too, but we can do this separately if we want? \n\nEither way, i don't think we should pass +/- infinite radius to the geo functions. "
        },
        {
            "id": "comment-15193793",
            "author": "ASF subversion and git services",
            "date": "2016-03-14T18:09:04+0000",
            "content": "Commit 0f949c815343c853499d518e7d565d642d93ce63 in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0f949c8 ]\n\nLUCENE-7102: LatLonPoint.newDistanceSort fails with \"sort missing first\" "
        },
        {
            "id": "comment-15193802",
            "author": "ASF subversion and git services",
            "date": "2016-03-14T18:13:19+0000",
            "content": "Commit a6fe1c0b155ff464d0596289bb209eef99c269d3 in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a6fe1c0 ]\n\nLUCENE-7102: LatLonPoint.newDistanceSort fails with \"sort missing first\" "
        },
        {
            "id": "comment-15279093",
            "author": "Hoss Man",
            "date": "2016-05-10T22:11:36+0000",
            "content": "\nManually correcting fixVersion per Step #S5 of LUCENE-7271 "
        }
    ]
}