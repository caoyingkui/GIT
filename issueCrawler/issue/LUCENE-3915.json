{
    "id": "LUCENE-3915",
    "title": "Add Japanese filter to replace term attribute with readings",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "3.6,                                            4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Koji and Robert are working on LUCENE-3888 that allows spell-checkers to do their similarity matching using a different word than its surface form.\n\nThis approach is very useful for languages such as Japanese where the surface form and the form we'd like to use for similarity matching is very different.  For Japanese, it's useful to use readings for this \u2013 probably with some normalization.",
    "attachments": {
        "LUCENE-3915.patch": "https://issues.apache.org/jira/secure/attachment/12519820/LUCENE-3915.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-24T21:06:09+0000",
            "content": "Find attached a draft patch that replaces term attributes with readings.  I saw in Ohtani-san's Twitter feed that Koji had checked this functionality into lucene-gosen and I'm providing a similar patch here hoping to support the Japanese spell-checking work.\n\nThis patch can also convert katakana readings to romaji and it might make sense to use a romaji representation to do the spell-checking.  We probably also need to deal with misspellings turning into several tokens, and that we need to recompose them using their readings before we do matching.\n\nJust some thoughts... ",
            "author": "Christian Moen",
            "id": "comment-13237674"
        },
        {
            "date": "2012-03-24T21:16:00+0000",
            "content": "looks good!\n\nwe should also do a little optimization\nto the romanization method... \n\nwe can make instead of String f(String kana)\nand then it making its own stringbuilder,\nthen toStringing that, it can be f(Appendable sb, Charsequence kana)\nand we just pass termAtt.setEmpty() as the 'sb'. ",
            "author": "Robert Muir",
            "id": "comment-13237683"
        },
        {
            "date": "2012-03-25T03:09:44+0000",
            "content": "updated patch with this optimization. ",
            "author": "Robert Muir",
            "id": "comment-13237768"
        },
        {
            "date": "2012-03-25T10:58:53+0000",
            "content": "Thanks, Robert.\n\nI'm thinking it could be useful to expand this filter with an option that controls how the reading is actually being used.  I see two primary cases for this:\n\n\n\tUse the reading as the term attribute\n\tUse the reading as a synonym\n\n\n\nThe latter option can be useful for certain applications where we'd like to be able to search by reading and get kanji matches.\n\nExpanding further on this scenario, we would then probably want to support readings in several scripts:\n\n\n\tRomaji (Hepburn)\n\tHiragana\n\tKatakana\n\n\n\nThis filter should be optional and available as tool to support these applications \u2013 and of course the on-going Japanese spell-check work.\n\nThoughts? ",
            "author": "Christian Moen",
            "id": "comment-13237826"
        },
        {
            "date": "2012-03-25T11:09:32+0000",
            "content": "\nThe latter option can be useful for certain applications where we'd like to be able to search by reading and get kanji matches.\n\nThese apps can just copy their text to another field with a different analysis chain (particularly with this filter as-is) and search on both or whatever to get this behavior. This is just as efficient as adding a bunch of code to do the same thing, but keeps all of our analysis much simpler.\n ",
            "author": "Robert Muir",
            "id": "comment-13237830"
        },
        {
            "date": "2012-03-25T13:48:08+0000",
            "content": "Thanks, Robert.  Understood.\n\nI'll run tests and commit this shortly. ",
            "author": "Christian Moen",
            "id": "comment-13237863"
        },
        {
            "date": "2012-03-25T14:18:01+0000",
            "content": "Committed revision 1305046 on trunk.  Backporting to branch_3x. ",
            "author": "Christian Moen",
            "id": "comment-13237874"
        },
        {
            "date": "2012-03-25T14:46:46+0000",
            "content": "Committed revision 1305051 and 1305052 to branch_3x. ",
            "author": "Christian Moen",
            "id": "comment-13237886"
        },
        {
            "date": "2012-03-25T14:50:38+0000",
            "content": "Thanks, Robert and Koji! ",
            "author": "Christian Moen",
            "id": "comment-13237887"
        }
    ]
}