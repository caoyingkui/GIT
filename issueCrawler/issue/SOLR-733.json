{
    "id": "SOLR-733",
    "title": "Refactor or expose methods processDelete(), processUpdate(), readDoc() in XmlUpdateRequestHandler",
    "details": {
        "affect_versions": "1.3",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Wish",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We are extending the functionality of XmlUpdateRequestHandler in our application with a couple simple changes, but because the processDelete(), processUpdate(), readDoc() are package-private, we've had to copy most of XmlUpdateRequestHandler, whether we changed any parts or not. Can those be made more pluggable?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Brian Whitman",
            "id": "comment-12626324",
            "date": "2008-08-27T21:12:22+0000",
            "content": "We also had to do this to write a requesthandler that maintains original dates on overwrite adds. But then I found this: http://wiki.apache.org/solr/UpdateRequestProcessor - does the updateRequestProcessor solve your problem?\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12626368",
            "date": "2008-08-27T23:43:08+0000",
            "content": "this is an improvement, not a bug, so even if someone provides a patch we're not going to try and squeeze it in for 1.3. "
        },
        {
            "author": "Aaron Whittier",
            "id": "comment-12626658",
            "date": "2008-08-28T17:25:52+0000",
            "content": "I don't think the UpdateRequestProcessor will let me do what I want. Let me describe what we're trying to do - maybe I can do it easily without cloning XmlUpdateRequestHandler.\n\nWe want to add additional data to the XML <doc> tag, a <RichContent> tag which has a couple attributes, and whose contents are textual data. We want to translate this data into different text and then attach it to one of the lucene fields in the SolrInputDocument, which can then be processed normally. What I want, I think, is to be able to override the readDoc() method in XmlUpdateRequestHandler.\n\nDoes that make sense? I could easily be missing a simple solution, as I'm new to Solr. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12626668",
            "date": "2008-08-28T17:48:08+0000",
            "content": "I think that is possible with UpdateRequestProcessor.\n\nInstead of adding a custom tag to the XML, add them as normal fields (metadata1, 2, ...) which will be added to SolrInputDocument. In the processAdd method you will get access to the value by using SolrInputDocument#getValue(String field). Use them in whatever way you want, remove them from SolrInputDocument and add the final processed text to a new field using SolrInputDocument#addField and finally pass on for indexing by calling super.processAdd(SolrInputDocument). "
        },
        {
            "author": "Aaron Whittier",
            "id": "comment-12626701",
            "date": "2008-08-28T19:08:50+0000",
            "content": "Ah, fantastic - that works very well. Thanks! "
        }
    ]
}