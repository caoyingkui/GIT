{
    "id": "LUCENE-5520",
    "title": "ArrayIndexOutOfBoundException in ToChildBlockJoinQuery when there's a deleted parent without any children",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "modules/join"
        ],
        "affect_versions": "4.2,                                            4.7",
        "status": "Closed",
        "fix_versions": [
            "4.7.1",
            "4.8",
            "6.0"
        ]
    },
    "description": "This problem is found in lucene 4.2.0 and reproduced in 4.7.0\n\nIn our app when we delete a document we always delete all the children. \nBut not all parents have children. The exception happen for us when the parent without children is deleted.",
    "attachments": {
        "LUCENE-5220.patch": "https://issues.apache.org/jira/secure/attachment/12634139/LUCENE-5220.patch",
        "working patch.patch": "https://issues.apache.org/jira/secure/attachment/12634104/working%20patch.patch",
        "TestBlockJoin.patch": "https://issues.apache.org/jira/secure/attachment/12634103/TestBlockJoin.patch",
        "testout.txt": "https://issues.apache.org/jira/secure/attachment/12634105/testout.txt",
        "non working patch.patch": "https://issues.apache.org/jira/secure/attachment/12634102/non%20working%20patch.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13931422",
            "author": "Sally Ang",
            "content": "I've attached a patch for TestBlockJoin.java in file TestBlockJoin.patch\nWithout any modification it reproduces the error that happened on our application.\n\nAttached is another patch for ToChildBlockJoinQuery.java that passes all the original test and my additional test 'working patch.patch'\nWhat this patch did is just add another check so that if the parent doesn't have any child we continue to the next parent.\n     if (acceptDocs != null && !acceptDocs.get(childDoc)) {\n       if (childDoc < parentDoc) \n{\n         continue nextChildDoc;\n       }\n else \n{\n         continue;\n       }\n     }\n\nWhat I'm confused is with this other patch 'non working patch.patch', it passes all the test including my test except testRandom.\nHere what I do is before checking for deleted childDoc I checked if the parent is deleted, if it is deleted we just go to the next parent.\n            if (acceptDocs != null) {\n         System.out.println(\"parent doc \" + parentDoc + \" is alive: \" + acceptDocs.get(parentDoc));\n              if (!acceptDocs.get(parentDoc)) \n{\n                continue;\n              }\n            }\n\n            childDoc = 1 + parentBits.prevSetBit(parentDoc-1);\n\n            if (acceptDocs != null && !acceptDocs.get(childDoc)) \n{\n              continue nextChildDoc;\n            }\n\nattached in 'testout.txt' is the output of testRandom\nThese lines show we have 6 deleted parents\n[junit4:junit4]   1> DELETE parentID=40\n[junit4:junit4]   1> DELETE parentID=49\n[junit4:junit4]   1> DELETE parentID=54\n[junit4:junit4]   1> DELETE parentID=77\n[junit4:junit4]   1> DELETE parentID=102\n[junit4:junit4]   1> DELETE parentID=104\n\nBut somehow there are more parent doc that has their acceptDocs bit set to false.\n[junit4:junit4]   1> parent doc 29 is alive: false\n[junit4:junit4]   1> parent doc 40 is alive: false\n[junit4:junit4]   1> parent doc 56 is alive: false\n[junit4:junit4]   1> parent doc 95 is alive: false\n[junit4:junit4]   1> parent doc 99 is alive: false\n[junit4:junit4]   1> parent doc 122 is alive: false\n[junit4:junit4]   1> parent doc 141 is alive: false\n[junit4:junit4]   1> parent doc 150 is alive: false\n[junit4:junit4]   1> parent doc 2 is alive: false\n[junit4:junit4]   1> parent doc 20 is alive: false\n[junit4:junit4]   1> parent doc 38 is alive: false\n[junit4:junit4]   1> parent doc 87 is alive: false\n[junit4:junit4]   1> parent doc 43 is alive: false\n[junit4:junit4]   1> parent doc 59 is alive: false\n[junit4:junit4]   1> parent doc 78 is alive: false\n[junit4:junit4]   1> parent doc 82 is alive: false\n\nIs it right for me to assume acceptDocs.get(docId) return true if the docId is not deleted and false if it is deleted?\nCan we use the first working patch? ",
            "date": "2014-03-12T05:36:09+0000"
        },
        {
            "id": "comment-13931665",
            "author": "Michael McCandless",
            "content": "Unfortunately, we are not allowed to check acceptDocs with parent docIDs: that bitset is only \"valid\" for child documents.  This is because the primary search is against children, and IndexSearcher could pass a Filter \"down low\" as the acceptDocs.\n\nThis also means that your app really must delete all child documents for a given parent, if you never want to see that parent; but really it's best to delete parent + all children, whenever you want to delete.\n\nI have an idea for a possible fix ... I'll test and post a patch. ",
            "date": "2014-03-12T11:44:33+0000"
        },
        {
            "id": "comment-13931668",
            "author": "Michael McCandless",
            "content": "Sally, could you try this patch?\n\nI added a check, when we try to jump to the first child for a given doc, to detect the case when that parent has 0 child docs, and then continue in the parent loop if so. ",
            "date": "2014-03-12T11:46:06+0000"
        },
        {
            "id": "comment-13932804",
            "author": "Sally Ang",
            "content": "I've tried the patch. It work for us. ",
            "date": "2014-03-13T02:37:33+0000"
        },
        {
            "id": "comment-13933024",
            "author": "Michael McCandless",
            "content": "Thanks Sally, I'll commit this fix. ",
            "date": "2014-03-13T09:09:37+0000"
        },
        {
            "id": "comment-13933053",
            "author": "ASF subversion and git services",
            "content": "Commit 1577076 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1577076 ]\n\nLUCENE-5520: fix AIOOBE from ToChildBlockJoinQuery when a parent has no children ",
            "date": "2014-03-13T09:50:40+0000"
        },
        {
            "id": "comment-13933055",
            "author": "ASF subversion and git services",
            "content": "Commit 1577078 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1577078 ]\n\nLUCENE-5520: fix AIOOBE from ToChildBlockJoinQuery when a parent has no children ",
            "date": "2014-03-13T09:51:45+0000"
        },
        {
            "id": "comment-13933056",
            "author": "Michael McCandless",
            "content": "Thanks Sally! ",
            "date": "2014-03-13T09:52:02+0000"
        },
        {
            "id": "comment-13938245",
            "author": "Robert Muir",
            "content": "reopening for 4.7.1 backport ",
            "date": "2014-03-17T19:20:52+0000"
        },
        {
            "id": "comment-13938249",
            "author": "ASF subversion and git services",
            "content": "Commit 1578525 from Robert Muir in branch 'dev/branches/lucene_solr_4_7'\n[ https://svn.apache.org/r1578525 ]\n\nLUCENE-5520: fix AIOOBE from ToChildBlockJoinQuery when a parent has no children ",
            "date": "2014-03-17T19:22:40+0000"
        },
        {
            "id": "comment-13957766",
            "author": "Steve Rowe",
            "content": "Bulk close 4.7.1 issues ",
            "date": "2014-04-02T15:04:53+0000"
        }
    ]
}