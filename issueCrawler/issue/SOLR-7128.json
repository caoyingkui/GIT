{
    "id": "SOLR-7128",
    "title": "Two phase distributed search is fetching extra fields in GET_TOP_IDS phase",
    "details": {
        "components": [
            "search"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "4.10.4",
            "5.1",
            "6.0"
        ],
        "affect_versions": "4.10.2,                                            4.10.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Critical"
    },
    "description": "Pablo Queixalos reported this to me privately so I am creating this issue on his behalf.\n\n\nWe found an issue in versions 4.10.+ (4.10.2 and 4.10.3 for sure).\n\nWhen processing a two phase distributed query with an explicit fl parameter, the two phases are well processed, but the GET_TOP_IDS retrieves the matching documents fields, even if a GET_FIELDS shard request is getting executed just after.\n\n/solr/someCollectionCore?collection=someOtherCollection&q=:&debug=true&fl=id,title\n=> id is retrieved during GET_TOP_IDS phase that's ok:: it's our uniqueKeyField\n=> title is also retrieved during GET_TOP_IDS phase, that's not ok.\n\nI'm able to reproduce this. This is pretty bad performance bug that was introduced in SOLR-5768 or it's subsequent related issues. I plan to fix this bug and add substantial tests to assert such things.",
    "attachments": {
        "SOLR-7128-addendum.patch": "https://issues.apache.org/jira/secure/attachment/12701358/SOLR-7128-addendum.patch",
        "SOLR-7128.patch": "https://issues.apache.org/jira/secure/attachment/12700273/SOLR-7128.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-02-23T22:11:39+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This was introduced in SOLR-6796.\n\nHere's a test which exposes this issue. \n\n\tI created a TrackingShardHandlerFactory which can record shard requests sent from any node. There are a few helper methods to get requests by shard and by purpose.\n\tThe new test TestTwoPhaseDistributedQuery uses this factory to assert the fields which are being requested in GET_TOP_IDS phase.\n\n\n\nI will likely move the TrackingShardHandlerFactory into its own issue because it is helpful for other distributed tests as well. I also need to decouple it from the MiniSolrCloudCluster abstraction. I found a problem in MiniSolrCloudCluster too and opened SOLR-7146\n\nI'm working on a fix. ",
            "id": "comment-14333886"
        },
        {
            "date": "2015-02-24T00:43:16+0000",
            "author": "Hoss Man",
            "content": "I had a lot of feedback/ideas about the TrackingShardHandlerFactory, but not a lot of feedback/comments/ideas about the root issue here, so i went ahead and filed SOLR-7147 for you. ",
            "id": "comment-14334174"
        },
        {
            "date": "2015-02-25T20:38:19+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This patch fixes the bug and modifies the DistributedQueryComponentOptimizationTest to use the TrackingShardHandlerFactory introduced in SOLR-7147. I removed the TestTwoPhaseDistributedQuery test that I had introduced earlier.\n\nThis test now asserts that every distrib.singlePass query:\n\n\tMakes exactly 'numSlices' number of shard requests\n\tMakes no GET_FIELDS requests\n\tMust request the unique key field from shards\n\tMust request the score if 'fl' has score or sort by score is requested\n\tRequests all fields that are present in 'fl' param\n\n\n\nIt also asserts that every regular two phase distribtued search:\n\n\tMakes at most 2 * 'numSlices' number of shard requests\n\tMust request the unique key field from shards\n\tMust request the score if 'fl' has score or sort by score is requested\n\tRequests no fields other than id and score in GET_TOP_IDS request\n\tRequests exactly the fields that are present in 'fl' param in GET_FIELDS request and no others\n\n\n\nand also asserts that:\n\n\tEach query which requests id or score or both behaves exactly like a single pass query\n\n ",
            "id": "comment-14337134"
        },
        {
            "date": "2015-02-26T04:22:40+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Updated patch. I moved my earlier Jira comment about the kind of assertions being made in this test to the Javadocs of the test method.\n\nAll tests pass. ant precommit passes. I'll commit this shortly. ",
            "id": "comment-14337848"
        },
        {
            "date": "2015-02-26T05:32:45+0000",
            "author": "Erick Erickson",
            "content": "Shalin:\n\nI was looking at the fact that two-phase distributed search also decompresses the doc to get the ID to pass back to the aggregator on the first pass, on the surface I don't see why all the fields that need to be passed back can't be taken from indexed terms, i.e. the ID and sort criteria for each doc better be indexed terms. see: https://issues.apache.org/jira/browse/SOLR-6888, and one comment was that https://issues.apache.org/jira/browse/SOLR-6810 would take care of this.\n\nJust wondering how this issue relates to those two for my background.\n\nThanks! ",
            "id": "comment-14337915"
        },
        {
            "date": "2015-02-26T06:30:44+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I reverted some of my changes to QueryComponent because I realised the duplicate field names aren't really a problem because SolrReturnFields maintains a Set of them. My logic not to add duplicate 'id' fields was just making it more complicated for no reason. However, I feel that it could be simplified more but perhaps some other time. ",
            "id": "comment-14337975"
        },
        {
            "date": "2015-02-26T06:35:40+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Erick, this is a different bug. The bug is that the complete list of fields from the 'fl' param were being requested in the first phase of distributed search. Really only id and/or score is required in this first phase with the current distributed search algorithm.\n\nHow those fields are actually retrieved by a shard is the subject of SOLR-6888 and whether id is really required to be fetched at all is the subject of SOLR-6810. ",
            "id": "comment-14337984"
        },
        {
            "date": "2015-02-26T06:50:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662366 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1662366 ]\n\nSOLR-7128: Two phase distributed search is fetching extra fields in GET_TOP_IDS phase ",
            "id": "comment-14338005"
        },
        {
            "date": "2015-02-26T06:52:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662367 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662367 ]\n\nSOLR-7128: Two phase distributed search is fetching extra fields in GET_TOP_IDS phase ",
            "id": "comment-14338011"
        },
        {
            "date": "2015-02-27T10:04:49+0000",
            "author": "Michael McCandless",
            "content": "Shalin Shekhar Mangar looks like this is done?  Is the fix low-risk?  Since I haven't managed to cut a 4.10.4 yet (various fun Lucene issues...) maybe it makes sense to backport for 4.10.4? ",
            "id": "comment-14339960"
        },
        {
            "date": "2015-02-27T13:44:23+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Hoss prodded me privately about the duplicate field names being requested in shard requests (thanks Hoss!) so I refactored the field modifying logic so that duplicates aren't possible. I also added more tests with no 'fl', fl=* and fl=*,score in both single pass and regular search. ",
            "id": "comment-14340130"
        },
        {
            "date": "2015-02-27T15:52:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662729 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1662729 ]\n\nSOLR-7128: Make sure fields aren't duplicated in shard requests ",
            "id": "comment-14340311"
        },
        {
            "date": "2015-02-27T15:56:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662730 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662730 ]\n\nSOLR-7128: Make sure fields aren't duplicated in shard requests ",
            "id": "comment-14340314"
        },
        {
            "date": "2015-02-27T19:37:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662802 from shalin@apache.org in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1662802 ]\n\nSOLR-7128: Two phase distributed search is fetching extra fields in GET_TOP_IDS phase ",
            "id": "comment-14340688"
        },
        {
            "date": "2015-02-27T19:42:28+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Since I haven't managed to cut a 4.10.4 yet (various fun Lucene issues...) maybe it makes sense to backport for 4.10.4?\n\nThanks for waiting Michael McCandless! The test actually took some time to back-port because of so many changes in Solr's test suite between 4.x and 5.0.\n\nNote to anyone who reviews my 4.10 commit \u2013 I had to change the solr-trackingshardhandler.xml to use the old style solr.xml otherwise it wouldn't load collection1. Since there was no time to find/fix any bugs, I chose the easy way and changed the format of solr.xml itself. I verified that the TestTrackingShardHandler factory still tests the right things and passes. ",
            "id": "comment-14340694"
        },
        {
            "date": "2015-03-05T15:36:28+0000",
            "author": "Michael McCandless",
            "content": "Bulk close for 4.10.4 release ",
            "id": "comment-14348910"
        }
    ]
}