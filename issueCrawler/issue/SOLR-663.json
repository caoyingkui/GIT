{
    "id": "SOLR-663",
    "title": "Allow multiple files for stopwords, protwords and synonyms",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Allow multiple files separated by comma (escaped by backslash) for StopFilterFactory, EnglishPorterFilterFactory, KeepWordFilterFactory and SynonymFilterFactory",
    "attachments": {
        "SOLR-663.patch": "https://issues.apache.org/jira/secure/attachment/12386986/SOLR-663.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12617307",
            "date": "2008-07-27T16:30:36+0000",
            "content": "Added StrUtils#splitFileNames for the split logic. I chose to add another method because the escaping backslash had to be removed from the file names which the existing splitSmart methods didn't provide. Added test for this method in TestUtils.java\n\nAdded logic to load multiple files in\n\n\tEnglishPorterFilterFactory\n\tSynonymFilterFactory\n\tKeepWordFilterFactory\n\tStopFilterFactory\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12618246",
            "date": "2008-07-30T08:12:08+0000",
            "content": "Committed revision 680935. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12693871",
            "date": "2009-03-30T18:29:31+0000",
            "content": "Shalin,\n\nI'm not sure I am following the logic in this patch, specifically around:\n\n        java.io.File keepWordsFile = new File(wordFiles);\n        if (keepWordsFile.exists()) {\n          List<String> wlist = loader.getLines(wordFiles);\n          words = StopFilter.makeStopSet(\n              (String[])wlist.toArray(new String[0]), ignoreCase);\n        } else  {\n          List<String> files = StrUtils.splitFileNames(wordFiles);\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            words.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n\n\n\nWhen is the if clause above executed?  Seems like the most likely case is that people are just using a file in solr/conf and it is relative, so the exists() method call will never be true, since the current working directory is likely to be two levels up?\n\nAlso, why the need for separate cases anyway?  Isn't the single file case just a degenerate case of the multiple files version?\n\nSee also SOLR-1095, where I am working on some fixes to this, but I want to make sure I capture your understanding first.\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12693879",
            "date": "2009-03-30T19:07:05+0000",
            "content": "Seems like the most likely case is that people are just using a file in solr/conf and it is relative, so the exists() method call will never be true, since the current working directory is likely to be two levels up?\n\nYou are right Grant. It is a bug. It will never be executed unless an absolute path is specified. The reason it worked is because the splitSmart took care of the single file relative path case. Do you want me to re-open this issue? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12693882",
            "date": "2009-03-30T19:16:58+0000",
            "content": "I have a fix for it along w/ the changes to SOLR-1095, so let's just note it here and on that issue. "
        }
    ]
}