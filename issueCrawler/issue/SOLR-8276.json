{
    "id": "SOLR-8276",
    "title": "Atomic updates & RTG don't work with non-stored docvalues",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "4.10.4,                                            5.4",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Currently, for atomic updates, the non-stored docvalues fields are neither (a) carried forward to updated document, nor (b) do operations like \"inc\" work on them. Also, RTG of documents containing such fields doesn't return those fields if the document is fetched from the index.",
    "attachments": {
        "SOLR-8276.patch": "https://issues.apache.org/jira/secure/attachment/12771692/SOLR-8276.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-11T04:13:01+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Adding a patch that populates the non-stored, non-multivalued docvalues fields during the atomic updates.\n\nI couldn't test for multivalued non-stored docvalues fields, since I got the following exception during the field() function query on a multivalued field: can not use FieldCache on multivalued field: intdvMulti. Am I missing something obvious?\n\nI think doing this for non-multivalued fields itself is an improvement, and that the case of multivalued fields can be dealt with separately. ",
            "id": "comment-14999922"
        },
        {
            "date": "2015-11-13T09:40:42+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Better patch updated. ",
            "id": "comment-15003776"
        },
        {
            "date": "2015-11-13T17:03:04+0000",
            "author": "Yonik Seeley",
            "content": "I couldn't test for multivalued non-stored docvalues fields, since I got the following exception during the field() function query on a multivalued field: can not use FieldCache on multivalued field: intdvMulti. Am I missing something obvious?\n\nSince function queries don't support multi-valued fields, we should go through docValues API instead? ",
            "id": "comment-15004292"
        },
        {
            "date": "2015-11-14T10:21:13+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "I was kind of hoping not to redo all the low level conversions like Float.intBitsToFloat((int)arr.get(doc)) (this example from FloatFieldSource) all over again and hence was hoping to use the functions and get away without doing it. However, since multivalued docValues aren't accessible that way, I have three choices:\n\n\tDo the single valued fields using the function queries and the multivalued fields using the docValues API (will also require this low level conversions for non long docvalues). Or,\n\tDo both singly and multi valued fields using docValues API and do the low level conversions for both. Or,\n\tDo single valued fields using function queries, and extend functions queries to support multivalued docvalues and use it.\n\n\n\nYonik Seeley Any preference? Right now, I'm thinking of going with 1 now, and when/if function queries can be made to support multivalued fields later, then switch to 3. Does that sound good? (I am fine going option 2 route as well). Also, are there any performance implications I am overlooking when using value sources as opposed to docvalues API directly? ",
            "id": "comment-15005302"
        },
        {
            "date": "2015-11-14T10:26:04+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Maybe however way we do it here, we might want to do it the same way for SOLR-8220? ",
            "id": "comment-15005310"
        },
        {
            "date": "2015-11-14T13:56:21+0000",
            "author": "Yonik Seeley",
            "content": "I think doing it whatever way is easiest for now is fine... it's implementation, not interface. ",
            "id": "comment-15005404"
        },
        {
            "date": "2015-11-19T11:03:11+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Moved over code from here to SOLR-8220's patch. Now this is as simple as calling the right method in the SolrIndexSearcher.\n\nUpdated the patch here, it still contains the test. ",
            "id": "comment-15013337"
        },
        {
            "date": "2015-11-20T21:09:02+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Adding a test for single valued non-stored docValues field, to ensure it is carried forward during atomic updates. ",
            "id": "comment-15018797"
        },
        {
            "date": "2015-12-27T12:24:46+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Updating the patch with latest changes introduced in SOLR-8220.\nTODO: Add a test for pure RTG for docs with non-stored DV fields.\n\nShalin Shekhar Mangar, Yonik Seeley Can you please review this? Thanks. ",
            "id": "comment-15072137"
        },
        {
            "date": "2015-12-28T13:27:52+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "+1 LGTM ",
            "id": "comment-15072718"
        },
        {
            "date": "2015-12-28T21:41:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1722009 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1722009 ]\n\nSOLR-8276: Atomic updates and realtime-get do not work with non-stored docvalues ",
            "id": "comment-15073172"
        },
        {
            "date": "2015-12-28T21:54:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1722011 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1722011 ]\n\nSOLR-8276: Atomic updates and realtime-get do not work with non-stored docvalues ",
            "id": "comment-15073182"
        },
        {
            "date": "2015-12-28T21:55:43+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Yonik and Ishan! ",
            "id": "comment-15073185"
        }
    ]
}