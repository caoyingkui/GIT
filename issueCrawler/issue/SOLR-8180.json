{
    "id": "SOLR-8180",
    "title": "Missing logging dependency in solrj-lib for SolrJ",
    "details": {
        "components": [
            "SolrJ"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.4"
        ],
        "affect_versions": "6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "When using DBVisualizer, SquirrelSQL, or Java JDBC with the Solr JDBC driver, an additional logging dependency must be added otherwise the following exception occurs:\n\n\norg.apache.solr.common.SolrException: Unable to create HttpClient instance. \n\tat org.apache.solr.client.solrj.impl.HttpClientUtil$HttpClientFactory.createHttpClient(HttpClientUtil.java:393)\n\tat org.apache.solr.client.solrj.impl.HttpClientUtil.createClient(HttpClientUtil.java:124)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.<init>(CloudSolrClient.java:196)\n\tat org.apache.solr.client.solrj.io.SolrClientCache.getCloudSolrClient(SolrClientCache.java:47)\n\tat org.apache.solr.client.solrj.io.sql.ConnectionImpl.<init>(ConnectionImpl.java:51)\n\tat org.apache.solr.client.solrj.io.sql.DriverImpl.connect(DriverImpl.java:108)\n\tat org.apache.solr.client.solrj.io.sql.DriverImpl.connect(DriverImpl.java:76)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat com.onseven.dbvis.h.B.D.\uffc4\uff81(Z:1548)\n\tat com.onseven.dbvis.h.B.F$A.call(Z:1369)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n\tat org.apache.solr.client.solrj.impl.HttpClientUtil$HttpClientFactory.createHttpClient(HttpClientUtil.java:391)\n\t... 16 more\nCaused by: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory\n\tat org.apache.http.impl.client.CloseableHttpClient.<init>(CloseableHttpClient.java:58)\n\tat org.apache.http.impl.client.AbstractHttpClient.<init>(AbstractHttpClient.java:287)\n\tat org.apache.http.impl.client.DefaultHttpClient.<init>(DefaultHttpClient.java:128)\n\tat org.apache.http.impl.client.SystemDefaultHttpClient.<init>(SystemDefaultHttpClient.java:116)\n\t... 21 more",
    "attachments": {
        "SOLR-8180.patch": "https://issues.apache.org/jira/secure/attachment/12767781/SOLR-8180.patch",
        "SOLR_8180_jcl_over_slf4j.patch": "https://issues.apache.org/jira/secure/attachment/12774731/SOLR_8180_jcl_over_slf4j.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-21T15:30:49+0000",
            "author": "Erick Erickson",
            "content": "Joel Bernstein just making sure you see this, another patch by Kevin ",
            "id": "comment-14967319"
        },
        {
            "date": "2015-10-21T16:29:59+0000",
            "author": "Joel Bernstein",
            "content": "Yeah, I saw this earlier. But it confused me a little. This is a Solrj dependency that for some reason does not come as part of the solrj-lib. I was wondering if there is a dependency conflict. Chris Hostetter (Unused), wondering if you knew the background on the logging dependancies? ",
            "id": "comment-14967400"
        },
        {
            "date": "2015-10-22T03:52:01+0000",
            "author": "Shawn Heisey",
            "content": "I believe that the primary resource requiring commons-logging is HttpClient.  I haven't checked to see if it is required by any other dependencies.\n\nThe commons-logging dependency will normally be satisfied by the jars pulled in for logging \u2013 those other than slf4j-api, which is included in the .war file for Solr and solrj-lib for SolrJ.  For the Solr server, this is satisfied by jcl-over-slf4j-1.7.7.jar ... which you can find in the Solr download at server/lib/ext, with the other logging jars.  That jar captures calls to commons-logging and directs them through slf4j, which then sends them to whatever logging framework is bound.\n\nSince 4.3, the bundled example server has used log4j 1.2 as the binding.  Versions prior to 4.3 used java.util.logging, and the logging jars were bundled in the .war file.\n\nIf the user wants to actually use commons-logging for their slf4j binding, then they would not use jcl-over-slf4j-1.7.7.jar ... they would use the actual commons-logging jar and its dependencies.  An additional jar would be required to redirect log4j through slf4j.\n\nSome generic info about slf4j logging and Solr:\n\nhttps://wiki.apache.org/solr/SolrLogging\n\nJust like the Solr server, SolrJ requires additional logging jars not included in solrj-lib.  The reason they are not included there is because we do not know what kind of logging the user wants.  They are free to choose whatever meets their needs.  This probably needs a mention in the docs. ",
            "id": "comment-14968473"
        },
        {
            "date": "2015-10-22T04:10:07+0000",
            "author": "Shawn Heisey",
            "content": "I updated the wiki page that I linked so it mentions SolrJ and logging jars.  The reference guide may need editing as well. ",
            "id": "comment-14968502"
        },
        {
            "date": "2015-10-22T13:11:25+0000",
            "author": "Kevin Risden",
            "content": "I understand that configuring logging can be specific to ones application. However using the JDBC part SolrJ out of the box with something like DBVisualizer/SquirrelSQL shouldn't require finding more log jars to start.\n\nIt looks like commons-logging can be replaced with jcl-over-slf4j and then everything out of the box would go through slf4j. It currently looks like with SolrJ that part of the logging goes through commons-logging from the httpclient and the rest is through slf4j.\n\nWould it make sense to have jcl-over-slf4j included by default in solrj-lib instead of trying to include commons-logging? This seems like it would match closer to what Solr server does out of the box. ",
            "id": "comment-14969134"
        },
        {
            "date": "2015-10-22T13:59:18+0000",
            "author": "David Smiley",
            "content": "I agree with you Kevin.  Throughout Solr's releases, my SolrJ using search apps have had to monkey with its logging dependencies due to either missing log dependencies, or to correct erroneous dependencies.  +1 to jcl-over-slf4j.  What do you think Steve Rowe? ",
            "id": "comment-14969190"
        },
        {
            "date": "2015-10-22T14:31:46+0000",
            "author": "Steve Rowe",
            "content": "+1 to jcl-over-slf4j. \n\nTo be clear, we're talking about adding this in two places, right?:\n\n\n\tdist/solrj-lib/ in the binary distribution\n\tAs a non-optional dependency in the solrj POM\n\n\n\n+1 to the above ",
            "id": "comment-14969236"
        },
        {
            "date": "2015-10-22T17:53:17+0000",
            "author": "David Smiley",
            "content": "Yes; +1 to that.  I'll keep this on my backlog until I have time to if someone doesn't get it done first.  Should be simple. ",
            "id": "comment-14969542"
        },
        {
            "date": "2015-10-22T17:58:38+0000",
            "author": "Kevin Risden",
            "content": "Updated title and description based on the comments. ",
            "id": "comment-14969548"
        },
        {
            "date": "2015-10-22T18:11:18+0000",
            "author": "Kevin Risden",
            "content": "in solr/solrj/ivy.xml there are two slf4j dependencies tagged for test only.\n\n\n    <dependency org=\"org.slf4j\" name=\"jcl-over-slf4j\" rev=\"${/org.slf4j/jcl-over-slf4j}\" conf=\"test\"/>\n    <dependency org=\"org.slf4j\" name=\"slf4j-log4j12\" rev=\"${/org.slf4j/slf4j-log4j12}\" conf=\"test\"/>\n\n\n\nShould they both be included in solrj-lib or only jcl-over-slf4j based on what was discussed above? It would be changing the conf to compile.\n\nI'm not sure what issues would come up if slf4j-log4j12 were to be included. It would make the default logging be log4j but at least there would be a concrete implementation.\n\nI'm not sure if changing ivy.xml would also change the SolrJ POM. ",
            "id": "comment-14969566"
        },
        {
            "date": "2015-10-22T18:39:54+0000",
            "author": "Shawn Heisey",
            "content": "If those jars are included, jul-to-slf4j and the true log4j jar are also very likely required. ",
            "id": "comment-14969620"
        },
        {
            "date": "2015-10-22T18:46:02+0000",
            "author": "Steve Rowe",
            "content": "I'm not sure if changing ivy.xml would also change the SolrJ POM.\n\nIt's supposed to automagically, but there has been special handling in the past around logging jars, so I'm not sure it'll work without undoing that if it's still there. ",
            "id": "comment-14969631"
        },
        {
            "date": "2015-10-22T22:37:57+0000",
            "author": "Kevin Risden",
            "content": "If there are no test dependencies in solr/solrj/ivy.xml I receive the following error stating that \"solr/solrj/test-lib does not exist\" when running \"ant test\" in solr/solrj:\n\n\nBUILD FAILED\n/home/travis/build/risdenk/lucene-solr/solr/build.xml:246: The following error occurred while executing this line:\n/home/travis/build/risdenk/lucene-solr/solr/common-build.xml:516: The following error occurred while executing this line:\n/home/travis/build/risdenk/lucene-solr/lucene/common-build.xml:796: The following error occurred while executing this line:\n/home/travis/build/risdenk/lucene-solr/lucene/common-build.xml:810: The following error occurred while executing this line:\n/home/travis/build/risdenk/lucene-solr/lucene/common-build.xml:1944: /home/travis/build/risdenk/lucene-solr/solr/solrj/test-lib does not exist.\n\n\n\nIf I duplicate the two slf4j test dependencies and add them also as compile then the \"ant test\" works. ",
            "id": "comment-14970032"
        },
        {
            "date": "2015-11-29T07:33:25+0000",
            "author": "David Smiley",
            "content": "Here's a patch.\nMost contribs had only one test dependency, this one.  Now that it's gone, these test-lib directory can go away and some extra lines in these build.xml's were removed.  I decided to leave the \"test\" configuration declaration line in these ivy.xml's.\n\nI'm having an issue with my maven build right now before it gets to some of these contribs; not likely related to this patch.  My ant build is running now.  I'd appreciate someone else running the maven build too.\n\nOn an unrelated note, I noticed the Maven build output complained on each test that, essentially, -XX:MaxPermSize=256M doesn't do anything in Java 8.  I'd like to do a lone commit on trunk only to remove that from the parent pom.xml.template. ",
            "id": "comment-15030828"
        },
        {
            "date": "2015-11-30T05:59:30+0000",
            "author": "David Smiley",
            "content": "Updating patch to revert me deleting too much in dataimporthandler-extras.  The ant build passes.\n\nOn my machine, the maven build fails on the TestRecoveryHdfs test for some reason or another (not investigated yet).  Also the morfologik one does but I fixed that locally due to what appears to be a pom that needs to be updated \u2013 reported to LUCENE-6833 already. ",
            "id": "comment-15031360"
        },
        {
            "date": "2015-11-30T07:40:31+0000",
            "author": "Uwe Schindler",
            "content": "On an unrelated note, I noticed the Maven build output complained on each test that, essentially, -XX:MaxPermSize=256M doesn't do anything in Java 8. I'd like to do a lone commit on trunk only to remove that from the parent pom.xml.template.\n\nYes, this is not needed on Java 8, so we should remove it in trunk. On branch_5x, Ant build is a bit better, because it detects Java version and only enables permgen on Java 7. Not sure if this works easily with Maven (maybe profiles help)... ",
            "id": "comment-15031445"
        },
        {
            "date": "2015-11-30T07:46:43+0000",
            "author": "Uwe Schindler",
            "content": "On my machine, the maven build fails on the TestRecoveryHdfs test for some reason or another (not investigated yet).\n\nKnown problem. This is one reason why the ASF Jenkins Maven builds pass -DskipTests to the Maven build. There is an issue open, don't know issue number... It also applies to the mapreduce/morphlines contribs, also fail only in Maven but not Ant. I have the feeling this is some surefire incompatibility. ",
            "id": "comment-15031452"
        },
        {
            "date": "2015-11-30T15:32:36+0000",
            "author": "David Smiley",
            "content": "Thanks for your input Uwe.  So this explains why the maven build always seems to pass on Jenkins.  Perhaps we should have some sort of annotation for a test to flag that it can should be skipped during a maven build.\n\nAny way, I plan to commit this patch tomorrow if I don't get any further feedback to the contrary. ",
            "id": "comment-15031964"
        },
        {
            "date": "2015-12-01T18:12:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1717481 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1717481 ]\n\nSOLR-8180: jcl-over-slf4j is officially a solrj/solr dependency now; not marked optional in a POM. ",
            "id": "comment-15034238"
        },
        {
            "date": "2015-12-01T18:14:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1717483 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1717483 ]\n\nSOLR-8180: jcl-over-slf4j is officially a solrj/solr dependency now; not marked optional in a POM. ",
            "id": "comment-15034244"
        },
        {
            "date": "2015-12-01T19:02:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1717497 from David Smiley in branch 'dev/branches/lucene_solr_5_4'\n[ https://svn.apache.org/r1717497 ]\n\nSOLR-8180: jcl-over-slf4j is officially a solrj/solr dependency now; not marked optional in a POM. ",
            "id": "comment-15034367"
        }
    ]
}