{
    "id": "LUCENE-7918",
    "title": "Give access to members of a composite shape",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [
            "modules/spatial3d"
        ],
        "fix_versions": [
            "6.6",
            "7.1",
            "master (8.0)"
        ]
    },
    "description": "Hi Karl Wright,\n\nI hope this is my last point in my wish list. In order to serialize objects I need to access the members of a composite geoshape. This is currently not possible so I was wondering if it is possible to add to more methods to the class GeoCompositeMembershipShape:\n\npublic int size()\npublic GeoMembershipShape getShape(int index)\n\nThanks,\n\nIgnacio",
    "attachments": {
        "LUCENE-7918.patch": "https://issues.apache.org/jira/secure/attachment/12880617/LUCENE-7918.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16114212",
            "date": "2017-08-04T10:18:10+0000",
            "content": "Hi Ignacio Vera,\nA word of warning: There's a great deal of concern when we add to the public API of anything in Lucene.  This has to be thought out carefully.  The addition of GeoCompositeAreaShape was barely OK, and caused precommit errors that I was scrambling around to fix for seven hours yesterday.\n\nI would therefore like to revisit the public method signature of GeoCompositeAreaShape as part of this request.  The public API for GeoCompositeAreaShape should accept GeoAreaShape for its add method, and the public API for GeoCompositeMembershipShape should accept GeoMembershipShape for its add method.  I strongly suggest that both of these classes be derived from a base class with package scope that has protected methods in it only, and some care is made to keep the public API consistent with the classes that define them.  For example, your getShape() method needs to return GeoAreaShape for GeoCompositeAreaShape, and GeoMembershipShape for GeoCompositeMembershipShape.  Does this make sense?\n\nFinally, the patch has to pass \"ant precommit\" (runnable only at the topmost level of the Lucene/Solr tree).  Unfortunately due to a bug in one of the checks I cannot run this on my setup so I will need to rely on you to do it before a patch can be committed.\n\nThanks!! ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16114330",
            "date": "2017-08-04T12:56:03+0000",
            "content": "Hi Karl Wright,\n\nI am sorry of hearing that. I will be running the precommit in this patch although it seems I am getting the same errors as you are getting (Lots of  Unescaped symbol \"->\" on line #). I will try to see if I can fix it somewhat.\n\nI think I found a good solution. I am using Generic abstract classes and the exposing in the API the concretization of those classes. I attach the solution in case you have any comments.\n\nI wonder if it makes sense to have a generic interface for those composite classes\n\nAnother issue I am having, is that I am not sure what I should do with the toString() methods.\n\nThanks again!\n\nIgnacio ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16114380",
            "date": "2017-08-04T13:45:50+0000",
            "content": "Ignacio Vera, there is no requirement in Lucene that all classes need a toString() method, but I do find it is very helpful, and all the concrete object classes in Geo3D have one.  So I think that the composite classes should too.  They can rely on the members' toString() methods as needed. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16114386",
            "date": "2017-08-04T13:50:14+0000",
            "content": "Ignacio Vera I like the generics approach very much; I just want to be sure it passes precommit before going ahead.  And yes, I'm seeing exactly what you're seeing with the precommit.  ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16115481",
            "date": "2017-08-05T18:24:58+0000",
            "content": "Ignacio Vera, I've been looking at the build.xml code for the top-level project.  I think we can do a fair approximation of \"ant precommit\" on the lucene side of the tree by doing the following:\n\n\ncd lucene\nant documentation-lint validate\n\n\n\nThis works for me generally.  Would you like to give it a try on your new code?  I will give it a try tomorrow if I don't hear from you.  Thanks!\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16115482",
            "date": "2017-08-05T18:30:25+0000",
            "content": "I'm also seeing build warnings compiling this code, e.g.:\n\n\n    [javac] C:\\wipgit\\lucene4\\lucene-solr\\lucene\\spatial3d\\src\\test\\org\\apache\\lucene\\spatial3d\\geom\\GeoPolygonTest.java:978: warning: [cast] redundant cast to\nGeoPolygon\n    [javac]     GeoPolygon polygon = (GeoPolygon)((GeoCompositePolygon)GeoPolygo\nnFactory.makeGeoPolygon(PlanetModel.SPHERE, points)).shapes.get(0);\n    [javac]                          ^\n    [javac] C:\\wipgit\\lucene4\\lucene-solr\\lucene\\spatial3d\\src\\test\\org\\apache\\lucene\\spatial3d\\geom\\GeoPolygonTest.java:997: warning: [cast] redundant cast to GeoPolygon\n    [javac]     GeoPolygon polygon = (GeoPolygon)((GeoCompositePolygon)GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points,Collections.singletonList(hole))).shapes.get(0);\n    [javac]                          ^\n    [javac] C:\\wipgit\\lucene4\\lucene-solr\\lucene\\spatial3d\\src\\test\\org\\apache\\l\nucene\\spatial3d\\geom\\GeoPolygonTest.java:1009: warning: [cast] redundant cast to\n GeoPolygon\n    [javac]     GeoPolygon polygon = (GeoPolygon)((GeoCompositePolygon)GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points)).shapes.get(0);\n    [javac]                          ^\n    [javac] C:\\wipgit\\lucene4\\lucene-solr\\lucene\\spatial3d\\src\\test\\org\\apache\\lucene\\spatial3d\\geom\\GeoPolygonTest.java:1028: warning: [cast] redundant cast to GeoPolygon\n    [javac]     GeoPolygon polygon = (GeoPolygon)((GeoCompositePolygon)GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points,Collections.singletonList(hole))).shapes.get(0);\n    [javac]                          ^\n    [javac] 4 warnings\n\n\n\nI'll fix those if it passes precommit. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16115488",
            "date": "2017-08-05T18:44:45+0000",
            "content": "Ignacio Vera, didn't pass documentation-lint.  This is what it said:\n\n\n     [exec] file:///build/docs/spatial3d/org/apache/lucene/spatial3d/geom/GeoBaseCompositeAreaShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]\n     [exec] file:///build/docs/spatial3d/org/apache/lucene/spatial3d/geom/GeoCompositePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]\n     [exec] file:///build/docs/spatial3d/org/apache/lucene/spatial3d/geom/GeoCompositeAreaShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]\n     [exec] file:///build/docs/spatial3d/org/apache/lucene/spatial3d/geom/GeoCompositeMembershipShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoBaseCompositeShape.html\n     [exec]\n     [exec] Broken javadocs links were found! Common root causes:\n     [exec] * A typo of some sort for manually created links.\n     [exec] * Public methods referencing non-public classes in their signature.\n\n\n\nCan you fix and resubmit your patch? ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16115691",
            "date": "2017-08-06T07:50:59+0000",
            "content": "Also, Ignacio Vera, Steve Rowe just committed a fix for \"ant precommit\", so you can use that now.  Thanks! ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16116089",
            "date": "2017-08-07T05:56:38+0000",
            "content": "Hi Karl Wright,\n\nthanks for the tips. I was able to run precommit and actually had a hard time to make it succeed. It seems I had to declare public the abstract class GeoBaseCompositeShape. This is because it holds the ublic methods for a composite.\n\nMaybe we should add a new class called GeoComposite with those methods and then have the abstract class protected.\n\nAttached new patch that should pass precommit.  ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16116233",
            "date": "2017-08-07T08:14:10+0000",
            "content": "Hi Ignacio Vera, I think this looks pretty good actually.  The new API exposure is minimal, but all public classes in geom should be annotated with \"lucene-experimental\" to be sure we can change them if we need to.\n\nAlso, you have a number of unnecessary casts in GeoPolygonTest:\n\n\n-    GeoPolygon polygon = (GeoPolygon)((GeoCompositePolygon)GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points)).shapes.get(0);\n+    GeoPolygon polygon = ((GeoCompositePolygon)GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points)).shapes.get(0);\n     GeoPolygon polygonConcave = GeoPolygonFactory.makeGeoConcavePolygon(PlanetModel.SPHERE,points);\n     assertEquals(polygon,polygonConcave);\n\n\n\nThere's no need to cast to a GeoPolygon; the output of makeGeoPolygon is already a GeoPolygon.\n\nI think you're almost there; one more pass and we're good. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16116335",
            "date": "2017-08-07T09:39:16+0000",
            "content": "New version attached with \"lucene-experimental\" for public classes and \"lucene-internal\"  for protected ones.\n\nThe casting of Geopolygon is removed from the test. No warnings when compiling and precommit seems happy.\n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16116427",
            "date": "2017-08-07T11:01:56+0000",
            "content": "Commit 18e1b40b1c4a15379da865fef05f9a58a2dbdcbf in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=18e1b40 ]\n\nLUCENE-7918: Revamp the API for composites so that it's generic and useful for many kinds of shapes.  Committed (as was LUCENE-7906) on behalf of Ignacio Vera. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16116429",
            "date": "2017-08-07T11:03:40+0000",
            "content": "Commit e3f5aed562b2e398a40ea85ee8264d28fc0e023b in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e3f5aed ]\n\nLUCENE-7918: Revamp the API for composites so that it's generic and useful for many kinds of shapes.  Committed (as was LUCENE-7906) on behalf of Ignacio Vera. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16116431",
            "date": "2017-08-07T11:04:31+0000",
            "content": "Commit 7d1c7e757668337ec33bc543c9718320fd6974fe in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7d1c7e7 ]\n\nLUCENE-7918: Revamp the API for composites so that it's generic and useful for many kinds of shapes.  Committed (as was LUCENE-7906) on behalf of Ignacio Vera. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16116433",
            "date": "2017-08-07T11:07:02+0000",
            "content": "Thanks again for the contribution!\nEverything is now committed. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16116448",
            "date": "2017-08-07T11:21:25+0000",
            "content": "Thanks for your support! I hope these new features of the library are useful (sure for me!). ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16121306",
            "date": "2017-08-10T09:14:58+0000",
            "content": "Hi Karl Wright,\n\nI found an small issue with the composite shapes. I think this issue existed before so not sure if the behavior is intended. The problem comes from the way equality is defined in GeoBaseCompositeShape, in particular the return in line 119:\n\n<code>\nreturn super.equals(o) && shapes.equals(other.shapes);\n</code>\n\nI think the call to the parent class should be removed or equals will only return true if it is the same instance:\n\n\n<code>\nreturn shapes.equals(other.shapes);\n</code>\n\nWhat do you think?\n\nCheers,\n\nI.\n\n\n\n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16121460",
            "date": "2017-08-10T11:00:42+0000",
            "content": "I agree; that code is incorrect and definitely should not be there.  I can fix without a patch. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16121463",
            "date": "2017-08-10T11:09:25+0000",
            "content": "Note one thing as well. If you remove that, the following case will be true:\n\n1. Create a GeoCompositeMembershipShape\n2. Create a GeoCompositeAreaShape\n3. add the same shapes to the composites:\n\nThen both are equal, is that right? or should be add equals methods to the other composites?\n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16121465",
            "date": "2017-08-10T11:10:18+0000",
            "content": "Commit 84d8385fb9fa3f794d5e473219ca6b5b2abee5f2 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=84d8385 ]\n\nLUCENE-7918: Fix incorrect equals method. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16121468",
            "date": "2017-08-10T11:11:35+0000",
            "content": "Commit 75a7e2e2c5cee70a476cecf9421ec1e6e30574df in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=75a7e2e ]\n\nLUCENE-7918: Fix incorrect equals method. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16121469",
            "date": "2017-08-10T11:12:29+0000",
            "content": "Commit fc431f685440033ba0d91b4624966b03dcefc86e in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fc431f6 ]\n\nLUCENE-7918: Fix incorrect equals method. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16121470",
            "date": "2017-08-10T11:13:15+0000",
            "content": "Latest minor issue has been fixed for all the listed branches. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16121483",
            "date": "2017-08-10T11:20:40+0000",
            "content": "Ignacio Vera, you can always verify that the types of the two classes are identical (using this.getClass() and other.getClass()), but in the case of generics that does not help you.  You instead would want to have the type check (using instanceof) in the derived class, since generics only mean anything at compile time.\n\nSo if you wanted to close that hole, both the derived classes would need equals methods with instanceof checks and calls to super.equals().  You are free to submit a patch that does this but I'm not too alarmed about this. \n\nPlease note that I also removed the super.hashCode() invocation since that seemed broken in exactly the same way. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16121501",
            "date": "2017-08-10T11:34:36+0000",
            "content": "Thanks for the quick fix Karl Wright! I am not too alarmed either \nIf I find the time I will submit a patch as I think it is a better behavior and as you said close the hole. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16207448",
            "date": "2017-10-17T11:04:16+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar"
        }
    ]
}