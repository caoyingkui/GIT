{
    "id": "LUCENE-6565",
    "title": "Is it ok for IndexWriter.prepareCommit to be an NRT-visible change?",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Task"
    },
    "description": "Because of LUCENE-6523, IndexWriter.prepareCommit is now an NRT-visible change. For instance the following test would fail:\n\n\nDirectory dir = newDirectory();\nIndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\nw.addDocument(new Document());\nDirectoryReader reader = DirectoryReader.open(w, true);\nassertNull(DirectoryReader.openIfChanged(reader)); // ok\nw.prepareCommit();\nassertNull(DirectoryReader.openIfChanged(reader)); // fails",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14594704",
            "author": "Michael McCandless",
            "date": "2015-06-20T18:00:21+0000",
            "content": "I suspect this is not right: NRT readers should not \"see\" that prepareCommit (but not the 2nd phase commit) had been called, and should only see the event once the 2nd phase (commit) succeeds.\n\nAnd I suspect if you reopen your NRT reader after prepareCommit, then you commit, then if you try to reopen the NRT reader it will see no changes from the 2nd phase yet will still see the old segments_N file.\n\nHowever, this is tricky to fix, because of how prepareCommit forks (clones) the SegmentInfos, allowing concurrent indexing changes while the 2nd commit phase runs likely slowly (fsync), and because we use a single linear comparable (the long SIS.getVersion) to correspond to changes ... but I don't yet see a simple way to fix this, and I'd rather not make this part of IW any more complex. "
        }
    ]
}