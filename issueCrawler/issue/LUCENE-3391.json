{
    "id": "LUCENE-3391",
    "title": "Make EasySimilarityProvider a full-fledged class",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/query/scoring",
            "general/javadocs"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "flexscoring branch"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "The EasySimilarityProvider in TestEasySimilarity would be a good candidate for a full-fledged class. Both DefaultSimilarity and BM25Similarity have their own providers, which are effectively the same,so I don't see why we couldn't add one generic provider for convenience.",
    "attachments": {
        "LUCENE-3391.patch": "https://issues.apache.org/jira/secure/attachment/12491196/LUCENE-3391.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-08-22T12:16:01+0000",
            "content": "EasySimilarityProvider added. ",
            "author": "David Mark Nemeskey",
            "id": "comment-13088644"
        },
        {
            "date": "2011-08-22T12:22:19+0000",
            "content": "Hinted at EasySimilarityProvider in the package javadoc. ",
            "author": "David Mark Nemeskey",
            "id": "comment-13088651"
        },
        {
            "date": "2011-08-22T12:51:19+0000",
            "content": "Got rid of BM25SimilarityProvider. ",
            "author": "David Mark Nemeskey",
            "id": "comment-13088667"
        },
        {
            "date": "2011-08-22T14:02:14+0000",
            "content": "a few comments:\n\n\tI think we should avoid the generics here? also I think the private sim should be final.\n\tIf the idea is to use for non-vector space sims, I think we should return 1 for coord() by default? in my tests it sometimes totally hoses the ranking for e.g. probabilistic models.\n\tWe can also rethink the naming in that regard? its just a Similarity provider that always returns the same similarity?\n\n ",
            "author": "Robert Muir",
            "id": "comment-13088705"
        },
        {
            "date": "2011-08-22T14:54:14+0000",
            "content": "(1) I was also hesitant to add the generics, because I wasn't sure about the warnings it gave. So I'll remove that happily.\n(2) And I guess the method parameter in queryNorm?\n(3) I'm pretty bad at naming things, so I'd take your advice in this.  Is BasicSimilarityProvider OK? ",
            "author": "David Mark Nemeskey",
            "id": "comment-13088743"
        },
        {
            "date": "2011-08-22T15:25:31+0000",
            "content": "Fixed the issues you mentioned. ",
            "author": "David Mark Nemeskey",
            "id": "comment-13088759"
        },
        {
            "date": "2011-08-23T13:15:02+0000",
            "content": "Thanks David! ",
            "author": "Robert Muir",
            "id": "comment-13089439"
        }
    ]
}