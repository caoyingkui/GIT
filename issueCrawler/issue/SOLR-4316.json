{
    "id": "SOLR-4316",
    "title": "Admin UI - SolrCloud - extend core options to collections",
    "details": {
        "affect_versions": "4.1",
        "status": "Closed",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There are a number of sections available when you are looking at a core in the UI - Ping, Query, Schema, Config, Replication, Analysis, Schema Browser, Plugins / Stats, and Dataimport are the ones that I can see.\n\nA list of collections should be available, with as many of those options that can apply to a collection,  If options specific to collections/SolrCloud can be implemented, those should be there too.",
    "attachments": {
        "cores menu open.png": "https://issues.apache.org/jira/secure/attachment/12749216/cores%20menu%20open.png",
        "solrcloud-admin-ui-menu.png": "https://issues.apache.org/jira/secure/attachment/12659684/solrcloud-admin-ui-menu.png",
        "collection-overview-panel.png": "https://issues.apache.org/jira/secure/attachment/12752758/collection-overview-panel.png",
        "schema-browser.png": "https://issues.apache.org/jira/secure/attachment/12752783/schema-browser.png",
        "collections menu open.png": "https://issues.apache.org/jira/secure/attachment/12749215/collections%20menu%20open.png",
        "two-selectors.png": "https://issues.apache.org/jira/secure/attachment/12749214/two-selectors.png",
        "SOLR-4316.patch": "https://issues.apache.org/jira/secure/attachment/12659980/SOLR-4316.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-13557571",
            "date": "2013-01-18T20:28:49+0000",
            "content": "If you have SolrCloud enabled, IMHO the list should have collapsible sections for collections and cores, with collections open and cores collapsed. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13561591",
            "date": "2013-01-24T12:37:44+0000",
            "content": "If this is significant work, perhaps we can start with the Query interface on this issue and open new issues for other functionality. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13561596",
            "date": "2013-01-24T12:47:33+0000",
            "content": "Clarification on why I filed this issue:\n\nIf SolrCloud is enabled and you have a distributed index, you can currently open up the admin interface and send queries to one core.  You can't send them to an entire collection.  From what I was told when helping someone on IRC, it sounds like Solr 4.0.0 used the collection name as the core name, so perhaps 4.0.0 could do this, but 4.1 has collection_shardN_replicaN for the core name.\n\nWhile I was thinking about this, I looked at the other things you can do on a core and figured that most of them might be useful on a collection.  While it is a good idea to implement as much functionality as possible, perhaps this one issue should be about queries. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13578971",
            "date": "2013-02-15T05:53:39+0000",
            "content": "If SolrCloud is enabled and you have a distributed index, you can currently open up the admin interface and send queries to one core. You can't send them to an entire collection.\n\nThat's not right. You query the whole collection unless you pass the param distrib=false. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13579324",
            "date": "2013-02-15T17:04:38+0000",
            "content": "That's not right. You query the whole collection unless you pass the param distrib=false.\n\nVery interesting!  That's not what I would have expected ... which IMHO violates the principle of least surprise.  If the core has the same name as the collection, then it's not a violation of that principle, and from what I understand, a 4.0.0 install does name the cores the same as the collection.  I have not actually used 4.0.0 myself.\n\nIf cores are going to continue with the 4.1 method of having distinct names from the collection, then I think a request to a core should not go cloud-wide unless you specifically request that with an option.\n\nUsers who have never touched Solr before using SolrCloud of course have no expectations about how things work, and probably will appreciate this behavior.  It would be a similar situation for experienced users that have never tried the shards parameter.\n\nUsers like me that have distributed experience with older versions would be very surprised by this behavior, and will be looking for a \"collections\" section in the admin UI \u2013 which is exactly what happened when I first started working with SolrCloud. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13579328",
            "date": "2013-02-15T17:07:57+0000",
            "content": "It's how most distributed systems work. You hit one node, it queries your cluster by default - not just that one node. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13579329",
            "date": "2013-02-15T17:09:27+0000",
            "content": "If you decide that the current request-to-shard behavior is preferable to changing things, then I think that the query UI needs a highly visible notice that requests to that shard will actually go to the entire collection unless they make distrib=false, and there needs to be a checkbox for that parameter.\n\nEither way, I think it's a good idea to make collections available as entities within the UI. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13585446",
            "date": "2013-02-24T18:06:14+0000",
            "content": "a checkbox for that parameter.\n\nI think it would be cool if someone added that.\n\nI think it's a good idea to make collections available as entities within the UI.\n\nI think the right first step is to add a UI for the collections API - similar to the one for the CoreAdmin API.\n\nFor UI stuff though, I've been depending on the kindness of one stranger mostly  "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13636818",
            "date": "2013-04-19T20:04:52+0000",
            "content": "As Mark Miller says, getting the collections API into the GUI is a first step.  The number one thing I would like to see is interactive CREATE functionality.  The number two thing I'd like to see is DELETE functionality, with the right amount of \"are you sure you want to do this?\" prompting.\n\nThis comment is part of an effort to close old issues that I have reported.  Search tag: elyograg2013springclean "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13636823",
            "date": "2013-04-19T20:08:41+0000",
            "content": "I should have put that comment on SOLR-4388.  That has been done. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717239",
            "date": "2013-07-23T18:47:35+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971121",
            "date": "2014-04-16T12:57:13+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14084996",
            "date": "2014-08-04T18:05:43+0000",
            "content": "I am going to put up a patch shortly which will:\n\n\tRefactor the UI into core specific and collection specific features,\n\tProvide a drop down for available collections and local cores\n\tAdd a simple collection overview page\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14085003",
            "date": "2014-08-04T18:08:56+0000",
            "content": "Here's how the new menu looks like in SolrCloud. In non-solrcloud installations, the admin menu would look the same as it does today. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14085009",
            "date": "2014-08-04T18:11:02+0000",
            "content": "Sweet! Long overdue change. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14085114",
            "date": "2014-08-04T19:07:31+0000",
            "content": "The UI looks pretty good.  I have one concern.  Because I nearly always have a hi-res display, this won't really affect me, but I thought it worthwhile to mention:\n\nUsers of low-res displays might appreciate having one dropdown with both collections and cores, similar to what we have on the schema browser for Fields, DynamicFields, and Types.  This would be particularly important when we make the UI compatible with mobile browsers \u2013 SOLR-4794. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14085129",
            "date": "2014-08-04T19:14:29+0000",
            "content": "Users of low-res displays might appreciate having one dropdown with both collections and cores, similar to what we have on the schema browser for Fields, DynamicFields, and Types. \n\nI know Shawn but right now you can have a collection and a core named the same e.g. \"collection1\". How would you choose one over the other? I think, eventually, we want to move away from the local core concept in the UI and navigate to individual cores from a collection view but I want to take small baby steps right now.\n\nThat reminds me that the current menu has a fixed height I guess because on lower resolutions, one cannot scroll to the bottom of the menu. Instead, part of the menu is just cut off below the viewport and becomes unreachable.  This is something that we should fix anyways. This is especially a problem during workshop/demos because the projectors have low resolution. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14086920",
            "date": "2014-08-05T22:39:58+0000",
            "content": "This patch adds a collection drop down and segregates collection specific views from core specific views.\n\nThe path to core specific views is changed to #/~core/core_name/ and the path used earlier for these views e.g. #/collection1/ is now used for collection specific views.\n\nThe menu is unchanged if Solr is not running in cloud mode.\n\nThe collection dashboard shows basic collection stats such as replicationFactor, maxShardsPerNode, total number of nodes and document counts (overall and per-shard). This is not even close to finished yet because as you can see after you apply the patch, the dashboard page still shows remnants from my copy/paste of core dashboard.\n\nI need to work on SOLR-6325 before I can finish this dashboard.\n\nIn the meanwhile, if anyone has ideas on how to present/visualize this information, please feel free to leave a comment with your ideas. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14111379",
            "date": "2014-08-26T21:39:13+0000",
            "content": "Stefan Matheis (steffkes) suggested that we combine the two selection boxes for collection and local cores into one but group them together just as how the Analysis page shows a single selection box with field names and field types.\n\nI have gone back and forth on this. It isn't hard to implement because it takes just a \"optgroup\" html element to group both types together. But after a lot of thought I am leaning towards keeping these two separate because:\n\n\tImagine \"collection1\" which is both a collection as well as a core name. Once the user has already selected one of them there is no way to indicate what has been selected (except the fact that different options show depending on what's selected)\n\tThe Analysis page shows field types and names together but they're also functionally equivalent with respect to that page. However, different functions apply on collections and cores.\n\n\n\nThe cons of having two selection boxes is that it takes more screen space and we turn on scrolling only when the viewport size is smaller (or it is resized to be smaller). "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14111431",
            "date": "2014-08-26T22:08:42+0000",
            "content": "Imagine \"collection1\" which is both a collection as well as a core name\n\nAt some point, we just need to make this illegal.\n\nI could go either way on the selection boxes I think. Keep leaning towards keeping them separate too. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14111742",
            "date": "2014-08-27T02:04:57+0000",
            "content": "At some point, we just need to make this illegal.\n\nI like this idea.  It's probably best to do it in 5.0, even though I'd really want it in released code yesterday!  Having cores and collections named the same causes confusion. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-14112122",
            "date": "2014-08-27T10:33:39+0000",
            "content": "1. Imagine \"collection1\" which is both a collection as well as a core name. Once the user has already selected one of them there is no way to indicate what has been selected (except the fact that different options show depending on what's selected)\n\nThat's right, we already have the problem, that there is no place on the screen where you can see the complete core-/collection-name (in case it gets truncated because it's to long for the dropdown ..)\n\nOne idea a coworker had: Add another line (mentioning 'core' or 'collection', depending on the choice) on top of the current label. we would have to extend the library we use (chosen) to make that happen, because right now it is prepared to show one line (which is by default the label of the selected option from the dropdown).\n\nin case the name is something thoughtfully selected (like collection1 ;>) that would look a little bit odd, since it would say\ncollection\ncollection1\nbut i guess, that would be acceptable? "
        },
        {
            "author": "Upayavira",
            "id": "comment-14652384",
            "date": "2015-08-03T19:58:55+0000",
            "content": "I started playing with this yesterday. I started mocking up Shalin's patch in Angular. The patch as he showed it in the screenshot is pretty easy - two dropdowns, and submenus below those dropdowns. \n\nThe issue I stumbled upon was actually URL structure rather than the dropdowns.\n\nWe have:\nhttp://localhost:8983/solr/#/~xyz     for a page 'xyz' that is not core specific.\nhttp://localhost:8983/solr/#/core1/tab1  for a page that is specific to a particular core.\n\nHow do we represent, in a URL, a link to a page that is specific to a particular collection?\n\nDo we need something like:\n\nhttp://localhost:8983/solr/#/@collection1/tab1  (using some marker (e.g. @) to signify a collection\n\nOr do we just say that, for example:\n\nhttp://localhost:8983/solr/#/assets/analysis  <-- is a collection page, because analysis is collection specific\nhttp://localhost:8983/solr/#/assets/segments <-- is a core page, because segment info is core specific\n\nThoughts? "
        },
        {
            "author": "Upayavira",
            "id": "comment-14653367",
            "date": "2015-08-04T09:40:07+0000",
            "content": "I'm inclined to use the latter approach. Let each page decide whether the thing after the #/ is a core name or a collection name. We do that already in standard Solr URLs. \n\nEither we let each page decide, if the page only works with cores or with collections, or we check for a collection first, and if we don't find one, we fall back to a core. \n\nThe schema browser really is the only tab we have at the moment that is ambiguous - the schema is shared across a collection, but the term info is core specific. In my first pass I'll make it core specific. Later we could have it on both, with a flag telling us which, and if you click \"show term info\" on the collections page, it'll give you a list of replicas to try it on.\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-14661438",
            "date": "2015-08-07T07:27:59+0000",
            "content": "Patch that separates out collection specific tabs from core specific tabs, when in cloud mode "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14661444",
            "date": "2015-08-07T07:32:49+0000",
            "content": "The schema browser really is the only tab we have at the moment that is ambiguous - the schema is shared across a collection, but the term info is core specific\n\nRight but schema really only belongs in a cloud tab. The term info is index specific. Perhaps we can rename the existing Segment Info page to \"Index Info\" and add the Field Selector + Term Info in there? "
        },
        {
            "author": "Upayavira",
            "id": "comment-14709099",
            "date": "2015-08-24T11:05:32+0000",
            "content": "I've mulled on this quite a bit. What you say makes a huge amount of sense - a collection focused \"schema\" tab and a core focused \"index\" tab.\n\nHowever, that's a reasonable amount of work, and I'd rather get this feature out before I engage with creating two very new panes, and all the issues of interlinking them.\n\nHow's about, in the meantime, when in cloud mode, I add an annotation close to the \"load terms\" button saying \"terms will be loaded from the XYZ core and do not represent the whole collection\".\n\nWould that work? Then, if people are happy with that, I can complete this task and get on with working on the collections API tab in SOLR-4388. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14709479",
            "date": "2015-08-24T15:43:15+0000",
            "content": "bq: Would that work? Then, if people are happy with that, I can complete this task and get on with working on the collections \n\nLet's do the minimum necessary to cut over to the new Angular JS version. I think it's important to get people using that version, flush out any lingering issues then move on with improvements rather than wait for new functionality.\n\nFWIW "
        },
        {
            "author": "Upayavira",
            "id": "comment-14709508",
            "date": "2015-08-24T16:01:08+0000",
            "content": "My take is ever so slightly different - I'd like to do the absolute minimum to make it worth people's time to switch over to the new one.\n\nTo my mind, that is this ticket and SOLR-4388. If we have both of these in place as new features, and have covered SOLR-7856 then I'd be happy to proceed to make it default. Still aiming for all that for 5.4.\n\ni.e. if we're gonna make things worse for people (some lingering bugs) we might as well also make it a little better (new features). "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14709521",
            "date": "2015-08-24T16:10:04+0000",
            "content": "\nHowever, that's a reasonable amount of work, and I'd rather get this feature out before I engage with creating two very new panes, and all the issues of interlinking them.\nHow's about, in the meantime, when in cloud mode, I add an annotation close to the \"load terms\" button saying \"terms will be loaded from the XYZ core and do not represent the whole collection\".\n\nSounds good to me. The reason why I was never able to complete this issue was because it required me to create a completely new page (Collection Dashboard) so let's shoot for progress first and perfection after. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14716728",
            "date": "2015-08-27T14:10:36+0000",
            "content": "Shalin Shekhar Mangar you challenged me. I agree with the need for a collection dashboard (I'd already noted it in a comment in the code). So, I have knocked one together, and attached a screenshot and patch to this ticket. It shows just what is available via the collections API CLUSTERSTATUS option, with open/closable shards and replicas. The \"Core\" link under a replica should be clickable, too. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14716771",
            "date": "2015-08-27T14:33:38+0000",
            "content": "Upayavira - thanks! Looks good and we can always add more in time! +1 "
        },
        {
            "author": "Upayavira",
            "id": "comment-14716893",
            "date": "2015-08-27T15:46:22+0000",
            "content": "On the schema browser page, I've opted for a simple message (see schema-browser.png screenshot) saying \"N.B. Loaded from a single core - not from the whole collection.\"\n\nThis is, IMO, good enough to consider this ticket complete. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14717127",
            "date": "2015-08-27T17:35:26+0000",
            "content": "I will commit this in the next day or two, unless anyone objects. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14721069",
            "date": "2015-08-29T11:28:38+0000",
            "content": "Commit 1698459 from Upayavira in branch 'dev/trunk'\n[ https://svn.apache.org/r1698459 ]\n\nSOLR-4316 add a collections dropdown alongside cores dropdown "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14721070",
            "date": "2015-08-29T11:30:49+0000",
            "content": "Commit 1698460 from Upayavira in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1698460 ]\n\nSOLR-4316 add a collections dropdown alongside cores dropdown "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14721203",
            "date": "2015-08-29T18:29:17+0000",
            "content": "Commit 1700064 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1700064 ]\n\nSOLR-4316: Fix precommit failures "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14721204",
            "date": "2015-08-29T18:29:49+0000",
            "content": "Commit 1700065 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700065 ]\n\nSOLR-4316: Fix precommit failures "
        }
    ]
}