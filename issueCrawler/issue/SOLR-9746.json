{
    "id": "SOLR-9746",
    "title": "Eclipse project broken due to duplicate package-info.java in LTR contrib",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "The eclipse project generated through ant eclipse seems to be broken, since there are errors complaining duplicate resources. The problem is that the following files have the same package and class names:\n\n./solr/core/src/java/org/apache/solr/response/transform/package-info.java\n./solr/contrib/ltr/src/java/org/apache/solr/response/transform/package-info.java\n./solr/core/src/java/org/apache/solr/search/package-info.java\n./solr/contrib/ltr/src/java/org/apache/solr/search/package-info.java\n\n\n\nNot sure if the idea project is affected.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-11-10T14:20:42+0000",
            "author": "Uwe Schindler",
            "content": "This is a clear bug in the package structure! This will lead to problems with Java 9's module system (once we migrate to it), too. It should generally be avoided to have same Java package in different JAR files / modules. I'd suggest to rename the packages in ltr to have \"ltr\" in its name. If the package names are the same to work around package-protected access, this is likely to break with Java 9, too where each modular JAR file gets its own classloader.\n\nI know we have some modules in Lucene that also share packages, but we should work on fixing them. This also causes problems with generating Javadocs, because it causes broken links. ",
            "id": "comment-15654160"
        },
        {
            "date": "2016-11-11T19:18:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 86a515789f6e4626d71480c7fdf38c33b71ded93 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=86a5157 ]\n\nSOLR-8542, SOLR-9746: prefix solr/contrib/ltr's search and response.transform packages with ltr ",
            "id": "comment-15657876"
        },
        {
            "date": "2016-11-11T19:21:54+0000",
            "author": "Christine Poerschke",
            "content": "... I'd suggest to rename the packages in ltr to have \"ltr\" in its name. ...\n\n>> Done.\n\n... If the package names are the same to work around package-protected access ...\n\n>> The package names were made the same only with the intention that then no solrconfig.xml changes would be required if ltr graduates from solr/contrib to solr/core. However, the same effect should similarly so be achievable and more clearly so via something like this as part of graduation\n\n# solr/contrib/.../LTRQParserPlugin.java\n  package org.apache.solr.ltr.search;\n- public class LTRQParserPlugin extends QParserPlugin implements ... {\n- ...\n- }\n+ @Deprecated // use {@link org.apache.solr.search.LTRQParserPlugin} instead\n+ public class LTRQParserPlugin extends org.apache.solr.search.LTRQParserPlugin {\n+ }\n\n+ #solr/core/.../LTRQParserPlugin.java\n+ package org.apache.solr.search;\n+ public class LTRQParserPlugin extends QParserPlugin implements ... {\n+ ...\n+ }\n\n\n\n... I know we have some modules in Lucene that also share packages, but we should work on fixing them. ...\n\n>> Interesting. I had a quick look around but couldn't find obvious examples, assuming .../abc/util and .../xyz/util would be considered to not share? If it doesn't exist already, shall we create a list of modules that would need attention then? ",
            "id": "comment-15657885"
        },
        {
            "date": "2016-11-11T19:23:35+0000",
            "author": "Christine Poerschke",
            "content": "Thanks Ishan Chattopadhyaya for reporting this. ",
            "id": "comment-15657890"
        },
        {
            "date": "2016-11-11T21:29:53+0000",
            "author": "Alexandre Rafalovitch",
            "content": "If I understood the question correctly, then the following is the list of (non-test) java packages that appear in different directory roots. Package name first, root second. Alternatively, I could do a similar test against the shipped jars, if that's too much noise. I know I definitely have seen some duplication at that point as well.\n\norg/apache/lucene/analysis/icu - ./lucene/analysis/icu/src/java/\norg/apache/lucene/analysis/icu - ./lucene/analysis/icu/src/tools/java/\norg/apache/lucene/analysis/ja/util - ./lucene/analysis/kuromoji/src/java/\norg/apache/lucene/analysis/ja/util - ./lucene/analysis/kuromoji/src/tools/java/\norg/apache/lucene/analysis/standard - ./lucene/analysis/common/src/java/\norg/apache/lucene/analysis/standard - ./lucene/analysis/common/src/tools/java/\norg/apache/lucene/analysis/standard - ./lucene/core/src/java/\norg/apache/lucene/codecs - ./lucene/backward-codecs/src/java/\norg/apache/lucene/codecs - ./lucene/core/src/java/\norg/apache/lucene/codecs/lucene50 - ./lucene/backward-codecs/src/java/\norg/apache/lucene/codecs/lucene50 - ./lucene/core/src/java/\norg/apache/lucene/codecs/lucene60 - ./lucene/backward-codecs/src/java/\norg/apache/lucene/codecs/lucene60 - ./lucene/core/src/java/\norg/apache/lucene/codecs/lucene62 - ./lucene/backward-codecs/src/java/\norg/apache/lucene/codecs/lucene62 - ./lucene/core/src/java/\norg/apache/lucene/collation - ./lucene/analysis/common/src/java/\norg/apache/lucene/collation - ./lucene/analysis/icu/src/java/\norg/apache/lucene/collation/tokenattributes - ./lucene/analysis/common/src/java/\norg/apache/lucene/collation/tokenattributes - ./lucene/analysis/icu/src/java/\norg/apache/lucene/document - ./lucene/core/src/java/\norg/apache/lucene/document - ./lucene/misc/src/java/\norg/apache/lucene/document - ./lucene/sandbox/src/java/\norg/apache/lucene/index - ./lucene/core/src/java/\norg/apache/lucene/index - ./lucene/misc/src/java/\norg/apache/lucene/search - ./lucene/core/src/java/\norg/apache/lucene/search - ./lucene/misc/src/java/\norg/apache/lucene/search - ./lucene/sandbox/src/java/\norg/apache/lucene/spatial - ./lucene/spatial-extras/src/java/\norg/apache/lucene/spatial - ./lucene/spatial/src/java/\norg/apache/lucene/spatial/util - ./lucene/spatial-extras/src/java/\norg/apache/lucene/spatial/util - ./lucene/spatial/src/java/\norg/apache/lucene/store - ./lucene/core/src/java/\norg/apache/lucene/store - ./lucene/misc/src/java/\norg/apache/lucene/util/fst - ./lucene/core/src/java/\norg/apache/lucene/util/fst - ./lucene/misc/src/java/\norg/apache/solr/handler/component - ./solr/contrib/analytics/src/java/\norg/apache/solr/handler/component - ./solr/core/src/java/\norg/apache/solr/handler/dataimport - ./solr/contrib/dataimporthandler-extras/src/java/\norg/apache/solr/handler/dataimport - ./solr/contrib/dataimporthandler/src/java/\norg/apache/solr/response - ./solr/contrib/velocity/src/java/\norg/apache/solr/response - ./solr/core/src/java/\norg/apache/solr/schema - ./solr/contrib/analysis-extras/src/java/\norg/apache/solr/schema - ./solr/core/src/java/\norg/apache/solr/update/processor - ./solr/contrib/langid/src/java/\norg/apache/solr/update/processor - ./solr/core/src/java/ ",
            "id": "comment-15658231"
        },
        {
            "date": "2016-11-11T21:43:20+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Indeed, Alexandre. It seems that the difference between these cases and the LTR case was that the package-info.java file was duplicated in the LTR contrib. Perhaps just removing it from the contrib may have done the needful as well?\n\nEdit: Re-read Uwe's comment, and the committed fix seems the best long term. ",
            "id": "comment-15658256"
        },
        {
            "date": "2016-11-11T21:46:35+0000",
            "author": "Uwe Schindler",
            "content": "Hi,\n\nas said before, I would not share packages between JAR files. This is a problem when we make the Lucene/Solr packages real Java 9 modules using module-info.java. Currently it is not a problem because the legacy JAR files use the legacy Java 9 classloader (all in one). But once they get modules every JAR files has its own classloader and the module system disallows to export same package (private packages are fine).\n\nSo in short: We should avoid sharing packages and not add new shared ones! So the fix used here is fine. ",
            "id": "comment-15658266"
        },
        {
            "date": "2016-12-08T18:44:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 252c6e9385ba516887543eb1968c8654b35b2b81 in lucene-solr's branch refs/heads/branch_6x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=252c6e9 ]\n\nSOLR-8542, SOLR-9746: prefix solr/contrib/ltr's search and response.transform packages with ltr ",
            "id": "comment-15733035"
        }
    ]
}