{
    "id": "SOLR-11758",
    "title": "Missing boolVal implementation in FloatDocValues",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In case of DoubleDocValues, boolVal(int doc) has been implemented but this is missing in case FloatDocValues.\n\nImpact: For any DocValues which extends FloatDocValues and doesn't implement boolVal(int doc), parent boolVal in FucntionValues would be called.\n\nboolVal implementation in FunctionValues\n\n  @Override\n  public boolean boolVal(int doc) throws IOException {\n    return intVal(doc) != 0;\n  }\n\n\n\nLet me know if I can work on it",
    "attachments": {
        "SOLR-11758.patch": "https://issues.apache.org/jira/secure/attachment/12902405/SOLR-11758.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-15T16:47:37+0000",
            "content": "I have attached the patch. This contains the fix along with simple test which would fail without this fix. ",
            "author": "Munendra S N",
            "id": "comment-16292789"
        },
        {
            "date": "2017-12-15T17:01:57+0000",
            "content": "Adding further details to explain the need for this.\nI wanted to boost some documents by fixed value if they match some condition\n\n\nif(and(query($qq1),query($qq2)),500,0)\n\n\nHere, problem was that even when document matched these condition it was not getting boosted. Even though query($qq1) and query($qq2) both returned non-zero positive values (both values were < 1).\nIn this case, I could have also used exists which would solve but I wanted to know the reason for such behavior.\n\nOn debugging, I found that FloatDocValues which is base class for QueryDocValues doesn't implement boolVal method, hence, boolVal of FunctionValues is called.\nIdeally, FloatDocValues should have an implementation to override boolValue like how it is done in DoubleDocValues.\n ",
            "author": "Munendra S N",
            "id": "comment-16292817"
        },
        {
            "date": "2018-01-06T03:50:39+0000",
            "content": "Nice catch!\n\nI expanded on your test a bit to prove that all of the numeric DocValue abstract FunctionValue classes follow the same expected semantics for boolVal() and added some sanity check tests at the solr level of the specific type of failure you encountered.\n\nI'll commit soon unless anyone else spots any problems. ",
            "author": "Hoss Man",
            "id": "comment-16314349"
        },
        {
            "date": "2018-01-06T20:05:40+0000",
            "content": "Commit a6cd4ac41941f1d8bfc5b2e5267c8bdec1b62b56 in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a6cd4ac ]\n\nSOLR-11758: Fixed FloatDocValues.boolVal to correctly return true for all values != 0.0F\n\n(cherry picked from commit d03cb44de73bb29e16a3ab927ee57d6eb916789a) ",
            "author": "ASF subversion and git services",
            "id": "comment-16314881"
        },
        {
            "date": "2018-01-06T20:05:42+0000",
            "content": "Commit d03cb44de73bb29e16a3ab927ee57d6eb916789a in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d03cb44 ]\n\nSOLR-11758: Fixed FloatDocValues.boolVal to correctly return true for all values != 0.0F ",
            "author": "ASF subversion and git services",
            "id": "comment-16314882"
        },
        {
            "date": "2018-01-06T20:06:17+0000",
            "content": "Thanks Munendra! ",
            "author": "Hoss Man",
            "id": "comment-16314883"
        },
        {
            "date": "2018-01-09T11:46:47+0000",
            "content": "Hoss Man\nThank you for reviewing, improving and committing the patch ",
            "author": "Munendra S N",
            "id": "comment-16318298"
        }
    ]
}