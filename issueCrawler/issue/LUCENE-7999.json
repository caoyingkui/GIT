{
    "id": "LUCENE-7999",
    "title": "Invalid segment file name",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "7.0",
        "status": "Closed",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ]
    },
    "description": "After really long and intensive index usage its possible to overflow counter that used to generate new segment name that will not satisfy validation criteria:\n\nCaused by: java.lang.IllegalArgumentException: invalid codec filename '-zik0zk_Lucene54_0.dvm', must match: _[a-z0-9]+(.)?\\..\n    at org.apache.lucene.index.SegmentInfo.checkFileNames(SegmentInfo.java:280)\n    at org.apache.lucene.index.SegmentInfo.addFiles(SegmentInfo.java:262)\n    at org.apache.lucene.index.SegmentInfo.setFiles(SegmentInfo.java:256)\n    at org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4080)\n    at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3655)\n    at org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n    at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)",
    "attachments": {
        "segmentName.patch": "https://issues.apache.org/jira/secure/attachment/12893028/segmentName.patch",
        "LUCENE-7999.patch": "https://issues.apache.org/jira/secure/attachment/12893619/LUCENE-7999.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16210836",
            "date": "2017-10-19T10:18:06+0000",
            "content": "Please see suggested patch that change type of `counter` field that is used to generate new segment name to long instead of int to prevent overflow. ",
            "author": "Mykhailo Demianenko"
        },
        {
            "id": "comment-16210891",
            "date": "2017-10-19T11:36:55+0000",
            "content": "Thanks Mykhailo for reporting this! We will look into it. I think the indexCreatedVersion must be changed accoring to the branch, we commit this to. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16214924",
            "date": "2017-10-23T10:13:29+0000",
            "content": "Patch looks good; thank you Mykhailo Demianenko!  Very impressive you hit the limit of int in segment file names!  I'm curious: how often do you refresh/commit and how long lived was this index?\n\nI don't think you should check the index created version for this logic.  Instead, you should add a new static final version constant at the top of SegmentInfos.java, e.g. LUCENE_72 (since 7.1 is already released), and fix VERSION_CURRENT to point to that constant.  Then fix the write method to always writeLong (maybe we should use writeVLong?).  Then fix the readCommit method to use the (currently unused) format variable to switch to readInt or readVLong.  See e.g. the 6.x version of SegmentInfos.java which does have switching based on that format. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16215997",
            "date": "2017-10-23T22:54:06+0000",
            "content": "Updated patch: add new VERSION_72 version field; write and read VLong(s); use format to determine index format ",
            "author": "Mykhailo Demianenko"
        },
        {
            "id": "comment-16216025",
            "date": "2017-10-23T23:17:38+0000",
            "content": "Thank you! Michael McCandless Unfortunately I do not have precise information on how old this particular index was (most probably a couple of years). But yes we refresh indexes quite a lot since we need to ensure that readers always see the latest available snapshot of the data. ",
            "author": "Mykhailo Demianenko"
        },
        {
            "id": "comment-16217148",
            "date": "2017-10-24T15:58:54+0000",
            "content": "Thanks Mykhailo Demianenko, patch looks good; I'll commit shortly.  It still amazes me you were able to exhaust this integer; Toke Eskildsen worked this out to \"That is 12 flushes per second in 5 years!\" ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16217293",
            "date": "2017-10-24T17:13:56+0000",
            "content": "Commit ea36f5040c3730d1e410eda76ad7ae3ecbbe68a1 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ea36f50 ]\n\nLUCENE-7999: upgrade int to long for tracking the counter for the next segment name to prevent overflow ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16217300",
            "date": "2017-10-24T17:16:26+0000",
            "content": "Commit 4c5ce2d646ba6c44aab19dab725fb74a98df4134 in lucene-solr's branch refs/heads/branch_7x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4c5ce2d ]\n\nLUCENE-7999: upgrade int to long for tracking the counter for the next segment name to prevent overflow ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16217301",
            "date": "2017-10-24T17:16:48+0000",
            "content": "Thank you Mykhailo Demianenko! ",
            "author": "Michael McCandless"
        }
    ]
}