{
    "id": "SOLR-6561",
    "title": "LBHttpSolrServer's aliveCheckExecutor is leaking connection when ResponseParser is null",
    "details": {
        "affect_versions": "4.10",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "LBHttpSolrServer's aliveCheckExecutor is leaking connection when ResponseParser is null.\nWe are providing search as a service and our Solr setup is not directly exposed to clients. We are setting parser to null and then passing on the InputStream, received from Solr server, as it is to our clients.\nThe LBHttpSolrServer.checkAZombieServer() is no closing connection in this case.\n\nI think something like following needs to be there. Not the exact code.\nif (zombieServer.solrServer.getParser() == null)\n\tis = (InputStream) resp.getResponse().get(\"stream\");\n\tis.close();\n}\n\nThis is blocker for us. I will test this out locally and update this bug report. But, we can't deploy that in production till we get official fix.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Sudhan Moghe",
            "id": "comment-14147375",
            "date": "2014-09-25T05:08:03+0000",
            "content": "We have changed our handling and not setting parser to null. We are using a ResponseParser on the lines of NoOpResponseParser. So, this bug is not affecting us anymore. "
        }
    ]
}