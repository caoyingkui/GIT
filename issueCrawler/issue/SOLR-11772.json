{
    "id": "SOLR-11772",
    "title": "Use JDBC-bind variables for DIH to improve performance with oracle db",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I just reduced the time for my full-import (solr 6.0.1) on an oracle-database for 1.4mio documents from 36 hours to 5 hours by setting the oracle session-parameter \"CURSOR_SHARING=FORCE\".\nHere I found one with the same problem:\nhttp://lucene.472066.n3.nabble.com/Optimizing-Dataimport-from-Oracle-cursor-sharing-changing-oracle-session-parameters-td4350601.html\n\nI have 1.4 mio documents and for every document i need 12 queries to collect sub-information for the actual document.\nThis makes about 17mio sql-Statements to oracle for a full-import.\n\nAs DIH doesn't use bind-variables (https://docs.oracle.com/cd/B28359_01/appdev.111/b28765/addfunc.htm#TDPJD210), every select looks \"different\" for oracle and a full parse (analyze statement, get optimal query-plan,..) has to be done 17mio times.\n\nBy setting the session parameter \"CURSOR_SHARING=FORCE\", which can be done in an on_logon_trigger, oracle replaces all literals ins SQL with bind-variables and then can skip the hard-parse.\n\nThis reduced my full-import-time from 36 hours to 5 hours. (With this you get only 13 different sql-statements compared to 17mio different statements before.\n\nAs oracle states, that setting the CURSOR_SHARING=FORCE is only a workaround, it would be fine when DIH would use bind-variables for the variables.\n\nCharly",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-18T14:19:24+0000",
            "content": "Do you have a patch?  If so, does the patch use Oracle-specific code, or is it generic JDBC?  If the JDBC driver is NOT Oracle's driver (user has mysql, postgres, sql server, etc), does following Oracle's recommendation cause bad performance?\n\nIs it possible to set the cursor-sharing parameter in the jdbc url?  If it is, then no code changes are needed.\n\nIf you can rearrange your SQL queries (using JOIN, VIEW, etc) so DIH can make one query instead of 17 million, then DIH is probably going to go faster. ",
            "author": "Shawn Heisey",
            "id": "comment-16295047"
        },
        {
            "date": "2017-12-20T08:03:41+0000",
            "content": "Hi Shawn!\nNo, I don't have a patch - I didn't analyze the DIH-Code. I found out by monitoring the oracle db.\nChanging the sql-statements to statements with bind-variables should be jdbc-standard and not oracle-driver-specific. Therefore it should work with all sql-databases. But I don't know if other databases would also benefit in performance.\n\nTo set the cursor-sharing-parameter in the jdbc-url is not possible. \nBut to place the parameter in the after-logon-trigger of the db-user is a working solution - but a workaround.This modified db-user should be used only for Solr-DIH!\n\nRearranging the statements (using joins) would be possible, but I think would raise the overall execution-time.\n\nI don't have a problem when DIH won't change to jdbc-bind-variables, as I know a workaround for us now.\nMaybe this Issue can help others to solve Solr performance-issues with DIH and oracle-db.\n\nCharly ",
            "author": "Karl Zweim\u00fcller",
            "id": "comment-16298040"
        },
        {
            "date": "2017-12-20T17:28:39+0000",
            "content": "I have absolutely no idea how to do what you've suggested.  We would need either detailed information about how to modify JDBC code, or a patch.\n\nThe page you referenced that includes Java code appears to be Oracle-specific.  It would not be possible to incorporate that code into Solr, because Solr does not include any JDBC drivers, and probably never will.  We leave the choice of driver up to the user, so they can use any version of any driver that's compatible with the Java version they're using. ",
            "author": "Shawn Heisey",
            "id": "comment-16298781"
        }
    ]
}