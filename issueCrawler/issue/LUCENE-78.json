{
    "id": "LUCENE-78",
    "title": "AND NOT queries not working",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Incomplete",
        "status": "Closed"
    },
    "description": "I upgraded to the build from 01/25/2003 from 1.2 RC4 and found that AND NOT\nqueries behave just like AND queries i.e., the NOT is ignored. I am using the\nquery parser to run searches. \n\nThis should be fairly easy to repeat on any search index and should not require\nany sample code. Note that I did a complete rebuild of the lucene search index\nafter upgrading.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2003-02-23T16:32:56+0000",
            "content": "Are you certain that AND NOT queries are not working?\nI am questioning this bug report because TestQueryParser unit tests include AND\nNOT queries, and the tests are passing.  This only shows that the QueryParser is\nworking, but it is possible that the bug is elsewhere.\nIf this is trully a bug, please reopen the bug report and attach some code that\ndemonstrates the bug.\n\nHere, try this:\n\nimport junit.framework.*;\nimport org.apache.lucene.index.*;\nimport org.apache.lucene.analysis.*;\nimport org.apache.lucene.analysis.standard.*;\nimport org.apache.lucene.store.*;\nimport org.apache.lucene.document.*;\nimport org.apache.lucene.search.*;\nimport org.apache.lucene.queryParser.*;\n\npublic class AndNotTest extends TestCase {\n    Directory dir = new RAMDirectory();\n    String testText = \"This is a test. (abc) Is there a bug OR not?\n\\\"Question\\\"! xyz xyz\";\n\n    public AndNotTest(String tn) \n{\n        super(tn);\n    }\n\n    protected void setUp() throws Exception \n{\n        IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true);\n        Document doc = new Document();\n        doc.add(Field.Text(\"contents\", testText));\n        writer.addDocument(doc);\n        writer.optimize();\n        writer.close();\n    }\n\n    private boolean doQuery(String queryString) throws Exception \n{\n        Searcher searcher = new IndexSearcher(dir);\n        Analyzer analyzer = new StandardAnalyzer();\n        Query query = QueryParser.parse(queryString, \"contents\", analyzer);\n        System.out.println(query.toString());\n        Hits hits = searcher.search(query);\n        searcher.close();\n        return (hits.length() == 1);\n    }\n\n    public void testAndNot() throws Exception \n{\n        assertFalse(doQuery(\"test AND NOT bug\"));\n    }\n}\n\n\nIf you run this, you will see something like this:\n\nrunning AndNotTest\n.+contents:test -contents:bug\n\nTime: 0.973\n\nOK (1 test)\n\nSo it looks like this is not a bug. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321183"
        }
    ]
}