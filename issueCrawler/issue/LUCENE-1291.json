{
    "id": "LUCENE-1291",
    "title": "Allow leading wildcard in table searcher",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/other"
        ],
        "type": "Wish",
        "fix_versions": [],
        "affect_versions": "2.3.1",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "It would be nice to have a boolean property on TableSearcher for allowing leading wildcard in query, which could be off by default.\n\n            MultiFieldQueryParser parser = new MultiFieldQueryParser(fields, analyzer);\n            parser.setAllowLeadingWildcard(this.allowLeadingWildcard);\n            Query query = parser.parse(searchString);\n\n+ setter and field for \"allowLeadingWildcard\"\n\nSnippet is from http://www.koders.com/java/fid94A4BBC5CC6609930A88583480AA66B32EBB08E3.aspx?s=TableSearcher#L53, lines 245-246.\n\n\n\nAnother approach would be to have a protected factory-method for creating the parser, which can be overridden:\n\nprotected Parser createParser(fields, analyzer) {\n  return new MultiFieldQueryParser(fields, analyzer);\n} \n\nand \n\n  Query query = createParser(fields, analyzer).parse(searchString);",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2008-05-20T20:29:50+0000",
            "content": "for anyone else who may be confused: this seems to relate to the contrib/swing package ",
            "author": "Hoss Man",
            "id": "comment-12598453"
        },
        {
            "date": "2008-05-21T12:35:13+0000",
            "content": "Yeah, sorry. The class in question is \n\norg.apache.lucene.swing.models.TableSearcher ",
            "author": "Peter Backlund",
            "id": "comment-12598631"
        },
        {
            "date": "2011-01-27T10:21:20+0000",
            "content": "Long inactivity. If this still interests anyone, please reopen and post a patch. ",
            "author": "Shai Erera",
            "id": "comment-12987479"
        }
    ]
}