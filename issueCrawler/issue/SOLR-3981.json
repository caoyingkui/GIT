{
    "id": "SOLR-3981",
    "title": "docBoost is compounded on copyField",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "As noted by Toke in a comment on SOLR-3875...\n\nhttps://issues.apache.org/jira/browse/SOLR-3875?focusedCommentId=13482233&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13482233\n\n\nWhile boosting of multi-value fields is handled correctly in Solr 4.0.0, boosting for copyFields are not. A sample document:\n\n<add><doc boost=\"10.0\">\n  <field name=\"id\">Insane score Example. Score = 10E9 </field>\n  <field name=\"name\">Document boost broken for copyFields</field>\n  <field name=\"manu\" >video ThomasEgense and Toke Eskildsen</field>\n  <field name=\"manu_id_s\">Test</field>\n  <field name=\"cat\">bug</field>\n  <field name=\"features\">something else</field>\n  <field name=\"keywords\">bug</field>\n  <field name=\"content\">bug</field>\n  </doc></add>\n\n\nThe fields name, manu, cat, features, keywords and content gets copied to text and a search for thomasegense matches the text-field with query explanation\n\n70384.67 = (MATCH) weight(text:thomasegense in 0) [DefaultSimilarity], result of:\n  70384.67 = fieldWeight in 0, product of:\n    1.0 = tf(freq=1.0), with freq of:\n      1.0 = termFreq=1.0\n    0.30685282 = idf(docFreq=1, maxDocs=1)\n    229376.0 = fieldNorm(doc=0)\n\n\nIf the two last fields keywords and content are removed from the sample document, the score is reduced by a factor 100 (docBoost^2).\n\n(This is a continuation of some of the problems caused by the changes made when the concept of docBoost was eliminated from the underly IndexWRiter code, and overlooked due to the lack of testing of docBoosts at the solr level - SOLR-3885))",
    "attachments": {
        "SOLR-3981.patch": "https://issues.apache.org/jira/secure/attachment/12550557/SOLR-3981.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13482765",
            "date": "2012-10-23T22:33:58+0000",
            "content": "Toke suggested in SOLR-3875...\n\n\nOne solution would be to keep track of used fields (directly specified as well as copyFields) and only assign the full boost once per document. If the number of unique fields/document is low, a simple list would probably be the fastest and with low GC impact. For a higher number of unique fields, a Set might be better. An optimization would be to only create the tracking structure once a boost != 1.0f is encountered and only store the fields with boost != 1.0f, so that an update without boosts would not get a performance penalty.\n\nI was thinking that a more straight forward solution would be to build up the entire \"Document\" w/o any regard to the docBoost, and then only at the end loop over the fields in that Document and multiple the docBoost if it's indexed & !omitNorms \u2013 but then i realized that at that level there is no general way to \"set\" the boost.\n\nI'm working on a patch with a test demonstrating the problem ... that may help inform an appropriate solution. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13482847",
            "date": "2012-10-24T00:08:27+0000",
            "content": "patch wit hteh test i was working on, as well as a fix...\n\nthe Document itself can serve as the \"set\" to keep track of which field names have already been added.  because the final boost for the field name is the product of the individual boosts, we don't have to ensure that the (solr) docBoost and (solr) fieldBoost(s) are combined into the first value of each copyField \u2013 we just have to ensure that each is only used once.  (multiple copyFields with the same dest will result in them being multiplied in the final dest field's norm but that's always been true)\n\ni'm still running the full test suite, and i want to work on a test that actually indexes a doc and inspects the encoded norms just to be certain i'm not missing something. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13482906",
            "date": "2012-10-24T01:58:29+0000",
            "content": "i want to work on a test that actually indexes a doc and inspects the encoded norms just to be certain i'm not missing something.\n\nUpdated patch adds this to the test \u2013 kludgy to reach this deep into the lucene code in the solr test, but do-able.  \n\nUnfortunately the test fails because the decoded norms from the index wind up being way lower then the expected values.  \n\nAt first i thought it was just because i forgot to factor in the term length in my expected norm, but even taking that into account the numbers are still way off.  i'm guessing either i don't understand something about the new 4.0 APIs for getting the DocValues/Norms, or i've got some trivially silly bug that i'm blind too because i've been staring at it too long.\n\nI'd appreciate a second set of eyes. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13482915",
            "date": "2012-10-24T02:17:37+0000",
            "content": "that adoc() you are using doesnt work with boosts. (I found this from another test) "
        },
        {
            "author": "Toke Eskildsen",
            "id": "comment-13483047",
            "date": "2012-10-24T07:25:28+0000",
            "content": "Thank you for investigating this so quickly, Hoss.\n\nApplying the boosts once from all source fields for a given copyField destination seems a bit strange to me, but since it is old behaviour, I understand that it cannot be changed. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13483508",
            "date": "2012-10-24T19:37:42+0000",
            "content": "that adoc() you are using doesnt work with boosts. (I found this from another test)\n\nGrr... thanks rmuir, never would have even thought to check that ... easy fix.\n\nApplying the boosts once from all source fields for a given copyField destination seems a bit strange to me, but since it is old behaviour, I understand that it cannot be changed.\n\nright ... copyField has always copied the field boosts, the bug here is the compounded docBoost.\n\nFWIW: we could add a ton more options to copyField to give more fine grained control over stuff like this as feature improvements if you'd like to file some Jiras for feature impreovements along those lines \u2013 but personally i think: a) update processors make more sense for stuff like this; b) people to move away from doc/field boosts and start doing more with functions on numeric fields (and ultimately DocValues fields) where you have a lot more control of this stuff "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13483514",
            "date": "2012-10-24T19:44:02+0000",
            "content": "updated patch to include fix for the test-harness.  Still running exhaustive tests "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13483561",
            "date": "2012-10-24T20:28:18+0000",
            "content": "tests & precommit look good ... unless anyone spots any problems i'll commit later today. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13483739",
            "date": "2012-10-24T23:51:57+0000",
            "content": "Committed revision 1401916. - trunk\nCommitted revision 1401920. - 4x "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610648",
            "date": "2013-03-22T16:24:03+0000",
            "content": "[branch_4x commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1401920\n\nSOLR-3988: Fixed SolrTestCaseJ4.adoc(SolrInputDocument) to respect field and document boosts\n\nSOLR-3981: Fixed bug that resulted in document boosts being compounded in <copyField/> destination fields\n\n(merge r41401916)\n\n\n\n\n "
        }
    ]
}