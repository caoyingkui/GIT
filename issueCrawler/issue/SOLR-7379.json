{
    "id": "SOLR-7379",
    "title": "RptWithGeometrySpatialField",
    "details": {
        "components": [
            "spatial"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "5.2"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "We should add a Solr spatial FieldType that uses the new CompositeSpatialStrategy. Essentially this enabled geometry backed shapes for accuracy combined with the grid indexes of RPT for speed.",
    "attachments": {
        "SOLR-7379__RptWithGeometrySpatialField.patch": "https://issues.apache.org/jira/secure/attachment/12729774/SOLR-7379__RptWithGeometrySpatialField.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-10T21:11:59+0000",
            "author": "David Smiley",
            "content": "This one will be a tad more interesting than simply extending the abstract spatial field type as it should have these features:\n\n\treference RPT field type via dynamicField pattern or no asterisk for explicitly referencing an existing field.  createField should probably route through the other field Type (like a kind of internal copyField) or maybe it's overkill and could simply call the createField on the underlying Strategy.\n\t\n\t\tCome to think of it, BBoxField & PointVector ought to be able to work similarly (reference field completely instead of by pattern) but that's not part of this issue.\n\t\tnote: SDV (SerializedDVStrategy) probably doesn't deserve it's own field type but we can internally create one.\n\t\n\t\n\tSerializedDVStrategy could be subclassed to override makeShapeValueSource to be backed by a SolrCache.\n\t\n\t\tWe could cast to JtsGeometry if possible to call index() which uses JTS PreparedGeometry to speedup the checks.  When it first puts it into the cache it might not do this but on successfull fetch from the cache it could do this \u2013 which has no effect if it's already cached. It's thread-safe.\n\t\n\t\n\n ",
            "id": "comment-14490375"
        },
        {
            "date": "2015-05-01T16:03:01+0000",
            "author": "David Smiley",
            "content": "Here's a patch.  Notes:\n\n\tI chose the name RptWithGeometrySpatialField; feedback welcome.  It inherits the same schema attribute options as the RPT field but strictly speaking doesn't subclass that field type.\n\t\n\t\tI overrode the default distErrPct at indexing time to be 0.15.\n\t\n\t\n\tCompatibility with heatmaps.\n\tUses a SolrCache if you define one in solrconfig.xml.\n\tIncludes some getters on Lucene spatial's CompositeSpatialStrategy.\n\n\n\nI was tempted, and attempted to subclass the Rpt field type which would have made the initialization less error prone & simple, and would have made heatmap compatibility work without issue.  But it started becoming an ugly hack.  The approach in this patch is perhaps a hack in that it contains another fieldType and deals with some initialization quirks in init(); but there isn't much to it.  Another option is to do like BBoxField's component numeric fields... though I don't love that it requires more definitions for the user to make in the schema.  But maybe that's a better trade-off, all things considered (it wouldn't have required the modification to heatmap here).\n\nThe cache is very interesting.  Typically, a SolrCache gets blown away on every commit.  But using a NoOpRegenerator, it will effectively get re-instated.  But that can only be used for caching certain types of things and may require the code using the cache to facilitate this working \u2013 so don't expect it to work on the FilterCache, for example. The trick I do here is a special key to the cache that is comprised of a weak reference to a LeafReader segment core key, plus the segment-local docId.  Unfortunately these cache entries won't eagerly clean themselves up if the segment becomes unreachable; however, it shouldn't stick around long if an LRU cache is used, since those entries won't be used again.  The cache should be configured similar to the following, assuming a hypothetical field named \"geom\":\n\n<cache name=\"perSegSpatialFieldCache_geom\"\n           class=\"solr.LRUCache\"\n           size=\"256\"\n           initialSize=\"0\"\n           autowarmCount=\"100%\"\n           regenerator=\"solr.NoOpRegenerator\"/>\n\n\nThe 2nd and subsequent successful cache lookups will be the fastest for polygons in particular, since on the 1st cache hit, JtsGeometry.index() is called on it (if it is of that type). ",
            "id": "comment-14523373"
        },
        {
            "date": "2015-05-19T21:07:10+0000",
            "author": "David Smiley",
            "content": "I'll commit this tonight.  I'll classify this feature as experimental so that it can get more usage.   ",
            "id": "comment-14551226"
        },
        {
            "date": "2015-05-20T00:32:16+0000",
            "author": "Viktor Gal",
            "content": "i'll try to give it a go today... ",
            "id": "comment-14551554"
        },
        {
            "date": "2015-05-21T13:04:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1680862 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1680862 ]\n\nSOLR-7379: Spatial RptWithGeometrySpatialField (based on CompositeSpatialStrategy) ",
            "id": "comment-14554244"
        },
        {
            "date": "2015-05-21T13:16:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1680869 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1680869 ]\n\nSOLR-7379: Spatial RptWithGeometrySpatialField (based on CompositeSpatialStrategy) ",
            "id": "comment-14554260"
        },
        {
            "date": "2015-05-21T13:18:26+0000",
            "author": "David Smiley",
            "content": "Thanks Viktor Gal for kicking the tires. ",
            "id": "comment-14554262"
        },
        {
            "date": "2015-06-15T21:44:02+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close for 5.2.0. ",
            "id": "comment-14586889"
        }
    ]
}