{
    "id": "SOLR-12122",
    "title": "nodes expression should support multiValued walk target",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "streaming expressions"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The nodes streaming expression has a walk\u00a0argument that articulates a pair of Solr fields of the form\u00a0traversalFrom->traversalTo. \u00a0It assumed that they are not multiValued. \u00a0It appears not difficult\u00a0to add multiValued support to traversalTo; that's what this issue is about.\n\nSee\u00a0http://lucene.472066.n3.nabble.com/Using-multi-valued-field-in-solr-cloud-Graph-Traversal-Query-td4324379.html\n\nNote: gatherNodes appears to be the older name which is still supported. It's more commonly known as nodes.  graph-traversal.adoc documents it",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-03-19T20:15:06+0000",
            "content": "AFAICT, in GatherNodesStream, line ~579 tuple.getString(traverseTo) can use getStrings(), and we loop over each value.  It appears we should also take care to apply the metrics logic once.  That's about it.  WDYT Joel Bernstein?\n\nIn Solr 7.3, multiValued docValue fields are finally sortable.  That used to be an obstacle.\n\nAs an aside: I'm very disappointed in the extreme lack of comments in the streaming expressions module.  At least I'm judging from org.apache.solr.client.solrj.io.graph package.  It makes code especially hard to read for those who didn't write it.  As a random example, Strings are used as keys into maps/sets but not documented what those strings are when the field name is non-obvious (e.g. List<Map<String,Node>> graph  \u2013 alrighty).  If I end up reviewing new code going in that is similarly under-documented, I'll have to throw down a -1 flag. ",
            "author": "David Smiley",
            "id": "comment-16405369"
        },
        {
            "date": "2018-03-20T00:16:13+0000",
            "content": "Point taken on the comments. No more new expressions are going in until a refactoring takes place. I will add javadoc as part of this refactoring. The point of the refactoring is to make it easier for other people to contribute. There is also a very large documentation effort underway to provide a user guide for the Math Expressions. You can the see the work in progress here:\n\nhttps://github.com/joel-bernstein/lucene-solr/blob/math_expressions_documentation/solr/solr-ref-guide/src/math-expressions.adoc\n\nThere is a vast amount of functionality now in Streaming Expressions. My main focus for the 7.4 release is refactoring and documenting.\n\n\u00a0\n\n\u00a0 ",
            "author": "Joel Bernstein",
            "id": "comment-16405627"
        },
        {
            "date": "2018-03-20T00:31:18+0000",
            "content": "There are two issues to consider with adding multi-value hops.\n\n1) Currently nodes are uniqued before any logic is applied. The unique operation relies on the sort coming from the /export handler. Another technique for uniquing nodes will need to be applied in the mult-value scenario.\n\n2) We may not want to do an exhaustive pull of all the values from multi-valued fields. We could consider using the significantTerms stream which works on multi-valued fields already and limits the results based on a statistical analysis.\u00a0\n\nThe original code does a traditional breadth first traversal retrieving all nodes in its path. Using significant terms would limit that walk to only significant nodes. ",
            "author": "Joel Bernstein",
            "id": "comment-16405645"
        }
    ]
}