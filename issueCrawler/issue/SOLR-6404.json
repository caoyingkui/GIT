{
    "id": "SOLR-6404",
    "title": "Solr WebGui does not correctly prefill query parameters",
    "details": {
        "affect_versions": "4.9",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "In my custom application that sends requests to Solr, I log the Solr query requests for debugging purposes.\n\nTo do so, I append the original query parameters from my SolrJ select request (see org.apache.solr.client.solrj.SolrQuery) to my Solr WebGui URL like this:\n\nString debuggingUrl = \"http://my-machine-name:8080/Solr/#/MyCore/query?\" + String.valueOf(solrQuery) + \"&debugQuery=on\";\n\nWhen the debuggingUrl is later opened in a web browser, the query parameters are conveniently prefilled in the textfields of the form and the query can be sent and analyzed.\nGreat features. Saved me a lot of time when I was finetuning my queries.\n\nUnfortunately, not all parameters that occur in my debuggingUrl are taken over in the web form correctly.\nNot knowing the full range of possible parameters, I have not performed an exhaustive test, but I can confirm that the following currently fail:\n\n[a]\ndefType=edismax\nThere is a check box named \"edismax\" in the form, but the box is not pre-checked, while it actually should be.\n\n[b]\ndebugQuery=on\nThere is a check box named \"debugQuery\" in the form, but the box is not pre-checked, while it actually should be.\n\n[c]\nq.op=AND\nThere is no text field or check box or dropdown item named \"q.op\".\nNot even after checking on \"dismax\" and \"edismax\" which both offer additional parameters to be set.\nHowever, there should be input option to set this parameter and it should be preset when \"q.op=AND\" is defined in the URL.\n\nThe parameters listed as [a], [b] and [c] are important to my use case, that's why I noticed that they are not correctly handled.\nHowever, there might be others that are missing or incorrectly handled.\n\nThe issue described above can be reproduced using the following URL on a standard example Solr instance on Jetty.\n\nhttp://localhost:8983/solr/#/collection1/query?q=Maxtor%20Samsung&fl=id,name,features&wt=json&indent=true&defType=edismax&q.op=AND&debugQuery=on",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-14106800",
            "date": "2014-08-22T12:50:13+0000",
            "content": "Jakob that's correct, the current functionality is pretty simple and works only for textfields (not checkboxes, which would be what defType & debugQuery are using) and in case that a field with the very same name exists (which isn't true for q.op).\n\nthat's the relevant part of the code:\n\nhttp://svn.apache.org/viewvc/lucene/dev/trunk/solr/webapp/web/js/scripts/query.js?view=markup#l209\nfor( var key in context.params )\n{\n  if( 'string' === typeof context.params[key] )\n  {\n    fields++;\n    $( '[name=\"' + key + '\"]', query_form )\n      .val( context.params[key] );\n  }\n}\n\n\na possible extension would be, to check if the field is a checkbox (rather than a textfield) and enable/disable it based on the given value. all fields that don't have an matching field could be combined into the \"Raw Query Parameters\" which is currently the only possibility to send various data from the Query UI\n\nso, to know for which fields that currently works .. have a look at http://svn.apache.org/viewvc/lucene/dev/trunk/solr/webapp/web/tpl/query.html?view=markup and search for name=\" "
        }
    ]
}