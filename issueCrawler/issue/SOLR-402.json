{
    "id": "SOLR-402",
    "title": "JSON response support",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "The Solrj java client was missing response support for JSON.  I added an JSONResponseParser class and the necessary changes elsewhere to support it.  I'm attaching the patch file.",
    "attachments": {
        "jsonPatch.patch": "https://issues.apache.org/jira/secure/attachment/12368727/jsonPatch.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "AABones",
            "id": "comment-12538939",
            "date": "2007-10-30T22:58:13+0000",
            "content": "json response patch "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12543411",
            "date": "2007-11-18T21:23:49+0000",
            "content": "It looks like this patch is not really a JSON parser, it is more like a \"raw\" parser.  Rather then parsing the the response into a NamedList, it just puts the output into the named list:\n\nNamedList<Object> named = new NamedList<Object>();\nnamed.add( \"json\", sb.toString() );\nreturn named;\n\n\nPerhaps what you really want is RawResponseParser that just passes back the string?\n\nIf we do a JSON parser, I think it should actually parse the response into a NamedList \u2013 QueryResponse only works if the NamedList is accuratly matched.  \n\nYonik has an interesting JSON parser at http://svn.apache.org/repos/asf/labs/noggit/ \u2013 perhaps we should try that? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12549683",
            "date": "2007-12-08T10:59:46+0000",
            "content": "Here's a more general purpose ResponseParser implementation.\n\n\npublic class RawResponseParser implements ResponseParser {\n  private String writerType;\n\n  public RawResponseParser(String writerType) {\n    this.writerType = writerType;\n  }\n\n  public String getWriterType() {\n    return writerType;\n  }\n\n  public NamedList<Object> processResponse(Reader in) {\n    NamedList<Object> data = new NamedList<Object>();\n    try {\n      StringBuffer raw = new StringBuffer();\n      char[] b = new char[16384];\n      int n;\n\n      // Read a block. If it gets any chars, append them.\n      while ((n = in.read(b)) > 0) {\n        raw.append(b, 0, n);\n      }\n\n\n      data.add(\"raw\", raw.toString());\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"parsing error\", e);\n    }\n\n    return data;\n  }\n}\n\n\n\nPerhaps instead of \"raw\" it could use writerType as the key value? "
        },
        {
            "author": "praveen",
            "id": "comment-12721721",
            "date": "2009-06-19T10:06:08+0000",
            "content": "Could anyone please provide the patch for latest version SolrJ ?.\nIn the Previous Release \"ResponseParser\" was an Interface. Now it has been modified to an Abstract class "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13606299",
            "date": "2013-03-19T13:00:34+0000",
            "content": "No need for JSON parsing in SolrJ. Closing outdated issue.\n\nSPRING_CLEANING_2013 "
        }
    ]
}