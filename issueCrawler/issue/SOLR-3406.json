{
    "id": "SOLR-3406",
    "title": "Support grouped range and query facets.",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA",
            "6.0"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Need the ability to support grouped range and query facets. Grouped facet fields have already been implemented in SOLR-2898 but we still need the ability to compute grouped range and query facets.",
    "attachments": {
        "SOLR-2898-backport.patch": "https://issues.apache.org/jira/secure/attachment/12524565/SOLR-2898-backport.patch",
        "SOLR-3406.patch": "https://issues.apache.org/jira/secure/attachment/12524347/SOLR-3406.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Martijn van Groningen",
            "id": "comment-13261030",
            "date": "2012-04-24T21:23:07+0000",
            "content": "I just realized that computing stats on an ungrouped docset still wouldn't work since I still need to do query facets on price ranges. \nI don't follow this completely. If you use query or range facets this just should work, right? Or are you using group.facet or group.truncate in the same request?\n\nHave you started on GroupedFacets?\nNope. I created group facet collector in the Lucene grouping module which is used by Solr in the SimpleFacets.\n\nIf I remember correctly both query facets and range facets in Solr are queries being executed on a top level searcher. For each queries a count is computed (based on the facet and main query result) and put in the response. For range facets multiple queries are executed based on the start, end and gap. I think grouped variant just needs to compute a grouped count for each query being executed. There are already collectors in the grouping module that compute a grouped count for a query. \n\nThe only thing I'm worried about is caching. For each query or range facet a docset is computed and this stored in the filter cache and possible used for future requests. This docset is intersected with the docset matching with the main query, which result in the count being used in the response. We would need to do something similar. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13261038",
            "date": "2012-04-24T21:31:00+0000",
            "content": "\nYes I am using group.truncate since facet.query doesn't have grouping functionality yet.\n\nWe could start on grouped facet queries since this really is my main priority. \n\nDo you use IRC or any other type of IM software to communicate? Might make development easier. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13261140",
            "date": "2012-04-24T23:31:44+0000",
            "content": "\nThere are already collectors in the grouping module that compute a grouped count for a query.\n\nDo you mean that this grouping is already functional on facet.query ? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13261381",
            "date": "2012-04-25T07:51:17+0000",
            "content": "Do you use IRC or any other type of IM software to communicate? Might make development easier.\nI'm usually in #lucene and #lucene-dev on IRC\n\nDo you mean that this grouping is already functional on facet.query?\nThe TermAllGroupsCollector implementation can be used to compute the counts. It only needs to be integrated in the Solr facet code. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13261861",
            "date": "2012-04-25T18:04:46+0000",
            "content": "\nThe TermAllGroupsCollector implementation can be used to compute the counts. It only needs to be integrated in the Solr facet code.\n\nDo you mean the TermGroupFacetCollector ? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13262012",
            "date": "2012-04-25T19:58:58+0000",
            "content": "Do you mean the TermGroupFacetCollector ?\nThat collector is used for computing grouped facets for a field. A query facet is just a query that executed \"inside\" the main query and for this query the hit count is computed as if it is a facet. That is why I think TermAllGroupsCollector can be used to compute this hit count.\n\nDid you already have a chance to create some code? If so create a patch and attach it to this issue. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262028",
            "date": "2012-04-25T20:18:17+0000",
            "content": "yes but it's not doing what I expect. I will attach it. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262036",
            "date": "2012-04-25T20:23:33+0000",
            "content": "I attached it... maybe you can tell me if I'm going in the right direction. I am a bit overwhelmed by the codebase  "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262062",
            "date": "2012-04-25T20:44:10+0000",
            "content": "I think i got it working once I actually did the search. I added this line \n\n\nsearcher.search(new MatchAllDocsQuery(), base.getTopFilter(), collector);\n\n "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13262064",
            "date": "2012-04-25T20:46:35+0000",
            "content": "Yeah it is a large code base \n\nI updated your patch. You are in the right direction. Inside the getGroupedFacetQueryCount method a query is executed that returns a group count. This count is put into the response. \n\nI modified your test changes as well and it the grouped query faceting seems to work in the test. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13262065",
            "date": "2012-04-25T20:47:51+0000",
            "content": "I was just a bit too late! Nice work. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262108",
            "date": "2012-04-25T21:18:31+0000",
            "content": "Which patches would I have to apply to get this functionality to work in Solr 3.6 "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262136",
            "date": "2012-04-25T21:33:58+0000",
            "content": "Added another junit test "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262233",
            "date": "2012-04-25T23:15:59+0000",
            "content": "Adding jUnit test for testing facet.query ranged queries "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13262533",
            "date": "2012-04-26T11:38:41+0000",
            "content": "Which patches would I have to apply to get this functionality to work in Solr 3.6\nHmmm... The TermAllGroupsCollector class is also available in 3.6 (in the grouping contrib). I guess the logic you're doing in your patch can also be done in 3.6 code base. I think the attached patches will not apply, because of changes in trunk that have never been backported. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262755",
            "date": "2012-04-26T17:15:02+0000",
            "content": "So I would not be able to apply patch SOLR-3406.patch and SOLR-2898.patch to Solr 3.6 for facet.field and facet.query grouping? "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262842",
            "date": "2012-04-26T18:51:20+0000",
            "content": "What would it take to get the changes in SOLR-2898 backported? I have tried but am not having any success. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262911",
            "date": "2012-04-26T19:43:03+0000",
            "content": "I have attached a patch for the backport. It looks like the TermGroupFacetCollector will need to be re-written so that it is compatible with solr 3.6 "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13262980",
            "date": "2012-04-26T19:53:23+0000",
            "content": "Yep the TermGroupFacetCollector isn't backported. That is why SOLR-2898 was never backported. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13262983",
            "date": "2012-04-26T19:57:31+0000",
            "content": "Do you think TermGroupFacetCollector could be rewritten so that it is compatible with 3.6 ? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13262992",
            "date": "2012-04-26T20:04:01+0000",
            "content": "Yes it can be rewritten, but why do you want to this? Is this for internal usage? Solr 3.6 was the major last 3.x release. The 3.x release line is now in maintenance mode. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13263087",
            "date": "2012-04-26T20:19:29+0000",
            "content": "Yes it would be for internal usage. Is there an ETA for the release of 4.0? I need the functionality provided in 4.0 for facet grouping but my company will not want to run an experimental build of Solr.  "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13263105",
            "date": "2012-04-26T20:32:17+0000",
            "content": "Nope not really. A branch4x will be created first in Subversion and then a 4.0-alpha version is released (this will be an official release). If everything goes as planned this should happen within a month or 2.  "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13266046",
            "date": "2012-05-01T20:30:35+0000",
            "content": "will this be committed and released in the alpha? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13294734",
            "date": "2012-06-13T23:52:56+0000",
            "content": "Martijn: can you triage this for 4.0?  commit if you think it's ready, otherwise remove the fix version? "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13294847",
            "date": "2012-06-14T07:06:53+0000",
            "content": "Sure. I think what is in here can be committed. The only thing that needs work is caching. Right now no when facet.query in combination with group.facet=true is used, caching doesn't take place. I think this can be fixed in a new issue that refers to this issue. In the meantime the patch in this issue can get committed. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13393702",
            "date": "2012-06-18T07:18:04+0000",
            "content": "Updated patch to also support facet.range parameter. "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-13393703",
            "date": "2012-06-18T07:18:50+0000",
            "content": "Committed to trunk and branch4x. "
        }
    ]
}