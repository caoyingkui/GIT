{
    "id": "SOLR-6085",
    "title": "Suggester crashes when prefixToken is longer than surface form",
    "details": {
        "affect_versions": "4.7.1,                                            4.8",
        "status": "Closed",
        "fix_versions": [
            "4.7.3",
            "4.10.3",
            "5.0",
            "6.0"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "AnalyzingInfixSuggester class fails when is queried with a \u00df character (ezsett) used in German, but it doesn't happen for all data or for all words containing this character. The exception reported is the following: \n\n<response>\n<lst name=\"responseHeader\">\n<int name=\"status\">500</int>\n<int name=\"QTime\">18</int>\n</lst>\n<lst name=\"error\">\n<str name=\"msg\">String index out of range: 5</str>\n<str name=\"trace\">\njava.lang.StringIndexOutOfBoundsException: String index out of range: 5 at java.lang.String.substring(String.java:1907) at org.apache.lucene.search.suggest.analyzing.AnalyzingInfixSuggester.addPrefixMatch(AnalyzingInfixSuggester.java:575) at org.apache.lucene.search.suggest.analyzing.AnalyzingInfixSuggester.highlight(AnalyzingInfixSuggester.java:525) at org.apache.lucene.search.suggest.analyzing.AnalyzingInfixSuggester.createResults(AnalyzingInfixSuggester.java:479) at org.apache.lucene.search.suggest.analyzing.AnalyzingInfixSuggester.lookup(AnalyzingInfixSuggester.java:437) at org.apache.lucene.search.suggest.analyzing.AnalyzingInfixSuggester.lookup(AnalyzingInfixSuggester.java:338) at org.apache.solr.spelling.suggest.SolrSuggester.getSuggestions(SolrSuggester.java:181) at org.apache.solr.handler.component.SuggestComponent.process(SuggestComponent.java:232) at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:217) at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135) at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:241) at org.apache.solr.core.SolrCore.execute(SolrCore.java:1916) at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:780) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:427) at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:217) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419) at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137) at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557) at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231) at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075) at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384) at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193) at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135) at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255) at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154) at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116) at org.eclipse.jetty.server.Server.handle(Server.java:368) at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489) at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53) at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:942) at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1004) at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640) at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235) at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72) at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264) at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608) at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543) at java.lang.Thread.run(Thread.java:744)\n</str>\n<int name=\"code\">500</int>\n</lst>\n</response>\n\n\n\nWith this query\n\nhttp://localhost:8983/solr/suggest_de?suggest.q=gie\u00df  (for gie\u00dfen, which is actually in the data)\n\nThe problem seems to be that we use ASCIIFolding to unify ss and \u00df, which are both valid alternatives in German. \n\nLooking at the code we found that string limits are not properly checked for the method involved in the exception:\n\n\nprotected void addPrefixMatch(StringBuilder sb, String surface, String analyzed, String prefixToken) {\n    // TODO: apps can try to invert their analysis logic\n    // here, e.g. downcase the two before checking prefix:\n    sb.append(\"<b>\");\n    sb.append(surface.substring(0, prefixToken.length()));\n    sb.append(\"</b>\");\n    if (prefixToken.length() < surface.length()) {\n      sb.append(surface.substring(prefixToken.length()));\n    }\n  }\n\n\n\nFor example, when surface is \"da\u00df\" and prefixToken is \"dass\", surface.substring will fail.\n\nA possible solution would be:\n\n\nprotected void addPrefixMatch(StringBuilder sb, String surface, String analyzed, String prefixToken) {\n    // TODO: apps can try to invert their analysis logic\n    // here, e.g. downcase the two before checking prefix:\n    sb.append(\"<b>\");\n    if(prefixToken.length() > surface.length()){\n      sb.append(surface);\n    }\n    else\n    {\n      sb.append(surface.substring(0, prefixToken.length()));\n    }\n    sb.append(\"</b>\");\n    if (prefixToken.length() < surface.length()) {\n      sb.append(surface.substring(prefixToken.length()));\n    }\n  }",
    "attachments": {
        "SOLR-6085.patch": "https://issues.apache.org/jira/secure/attachment/12680150/SOLR-6085.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-14186776",
            "date": "2014-10-28T12:56:06+0000",
            "content": "Hi, is this still an issue?\n\nWould you be able to write a patch with a failing JUnit test case and your proposed solution and attach to this issue? (http://wiki.apache.org/solr/HowToContribute#Generating_a_patch) "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-14201995",
            "date": "2014-11-07T12:36:38+0000",
            "content": "Attaching patch (trunk) with a testcase that provokes the bug and a simple fix. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-14202001",
            "date": "2014-11-07T12:41:57+0000",
            "content": "Jorge Ferr\u00e1ndez Can you test the patch in your environment? "
        },
        {
            "author": "Jorge Ferr\u00e1ndez",
            "id": "comment-14202498",
            "date": "2014-11-07T19:15:01+0000",
            "content": "Yes, sure. I will test it next week. I will post the results when I have them.\n\nThank you very much for the patch. I apologize because I don't have much time to do it. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14207807",
            "date": "2014-11-12T08:25:33+0000",
            "content": "Commit 1638711 from janhoy@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1638711 ]\n\nSOLR-6085: Suggester crashes when prefixToken is longer than surface form "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14207810",
            "date": "2014-11-12T08:30:08+0000",
            "content": "Commit 1638712 from janhoy@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1638712 ]\n\nSOLR-6085: Suggester crashes when prefixToken is longer than surface form (merge) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14207814",
            "date": "2014-11-12T08:38:33+0000",
            "content": "Commit 1638716 from janhoy@apache.org in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1638716 ]\n\nSOLR-6085: Suggester crashes when prefixToken is longer than surface form (backport) "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-14207823",
            "date": "2014-11-12T08:47:50+0000",
            "content": "Fixed, Jorge Ferr\u00e1ndez you may now build the lucene_solr_4_10 branch if you like to test it "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332738",
            "date": "2015-02-23T05:01:38+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}