{
    "id": "SOLR-10085",
    "title": "SQL result set fields should be ordered by the field list",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "faceting"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "6.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I'm trying out the Streaming Expressions in Solr 6.3.0. \n\nCurrently, I'm facing the issue of not being able to get the fields in the result-set to be displayed in the same order as what I put in the query.\n\nFor example, when I execute this query:\n\n http://localhost:8983/solr/collection1/stream?expr=facet(collection1,\n      q=\":\",\n      buckets=\"id,cost,quantity\",\n      bucketSorts=\"cost desc\",\n      bucketSizeLimit=100,\n      sum(cost), \n      sum(quantity),\n      min(cost), \n      min(quantity),\n      max(cost), \n      max(quantity),\n      avg(cost), \n      avg(quantity),\n      count)&indent=true\n\n\nI get the following in the result-set.\n\n   {\n  \"result-set\":{\"docs\":[\n\t\n{\n    \"min(quantity)\":12.21,\n    \"avg(quantity)\":12.21,\n    \"sum(cost)\":256.33,\n    \"max(cost)\":256.33,\n    \"count(*)\":1,\n    \"min(cost)\":256.33,\n    \"cost\":256.33,\n    \"avg(cost)\":256.33,\n    \"quantity\":12.21,\n    \"id\":\"000001\",\n    \"sum(quantity)\":12.21,\n    \"max(quantity)\":12.21}\n,\n\t\n{\n    \"EOF\":true,\n    \"RESPONSE_TIME\":359}\n]}}\n\n\nThe fields are displayed randomly all over the place, instead of the order sum, min, max, avg as in the query. This may cause confusion to user who look at the output.  Possible improvement to display the fields in the result-set in the same order as the query",
    "attachments": {
        "SOLR-10085.patch": "https://issues.apache.org/jira/secure/attachment/12858903/SOLR-10085.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-02-01T16:14:30+0000",
            "content": "There's no guarantee of field order in the tuple. Fields can be added to the tuple at any point in the stream (consider a select after a rollup after a facet after a search). There's no way to know that the user wants a particular order of the fields in the tuple.\n\nBeyond that, order of fields in json is not guaranteed. So while the stream handler could try to re-order the fields in the tuple, there is no guarantee that the serializer (or the client's deserializer) will honor that.\n\nFrom RFC 7159 -The JavaScript Object Notation (JSON) Data Interchange Format: An object is an unordered collection of zero or more name/value pairs, where a name is a string and a value is a string, number, boolean, null, object, or array. ",
            "author": "Dennis Gove",
            "id": "comment-15848571"
        },
        {
            "date": "2017-02-01T16:21:50+0000",
            "content": "I'm wondering if we can enforce field ordering by using a LinkedHashMap in the Tuples returned by the SelectStream. But we would also probably need to use a LinkedHashMap in the SolrStream as well to maintain the order on parallell requests. I believe Kevin Risden did some work on this at one point for the JDBC driver, but it appears that it wasn't committed. ",
            "author": "Joel Bernstein",
            "id": "comment-15848576"
        },
        {
            "date": "2017-02-01T16:56:01+0000",
            "content": "I tried to go down that road of LinkedHashMap for the JDBC driverbut it just seemed no right. You can replace the HashMap implementation behind the scenes but that doesn't guarantee that fields will be inserted in the right order. For the JDBC driver ended up returning a list of fields and the order they should be in from the select. They are presented correctly on the JDBC side when requested by name or position. ",
            "author": "Kevin Risden",
            "id": "comment-15848622"
        },
        {
            "date": "2017-02-01T16:56:48+0000",
            "content": "One thought I had but haven't tested is does the fl parameter allow for specifying the order of fields? Is it possible that fl would work with the streaming expression? ",
            "author": "Kevin Risden",
            "id": "comment-15848623"
        },
        {
            "date": "2017-03-10T19:03:09+0000",
            "content": "With the Apache Calcite release having the fields out of order on direct requests to /sql is more of an issue. This is because by default the aggregate fields are referred to like this: $EXPR1. The 1 is the column number in the field list. So having aggregate fields out of order makes it very difficult to just read the results from /sql without using field aliases. \n\nI think that we can maintain the field order for responses from /sql by making some small changes. These changes would only effect the output from /sql, not /stream or /graph.\n\nThe basic approach would be to make instance variables for the field list and alias list in the Tuple class. Then change the Tuple.writeMap method to iterate the field list when it writes out the fields. If the field list is null, it will simply iterate the internal map as it does now.\n\nThe field list in the Tuple class could be populated inside of the SQLHandler. In the StreamHandler this field list would not be populated.\n\nI'll take a crack at implementing this an change the name of this ticket to be about SQL instead of streaming. ",
            "author": "Joel Bernstein",
            "id": "comment-15905558"
        },
        {
            "date": "2017-03-13T19:04:59+0000",
            "content": "Updated the ticket to reflect the focus on SQL output only. The work done in this ticket will make it possible though to maintain order in streaming as well. We can open another ticket to discuss the streaming implementation. ",
            "author": "Joel Bernstein",
            "id": "comment-15922745"
        },
        {
            "date": "2017-03-15T18:37:11+0000",
            "content": "tests are passing with the latest patch. ",
            "author": "Joel Bernstein",
            "id": "comment-15926731"
        },
        {
            "date": "2017-03-15T19:07:52+0000",
            "content": "Added a simple test for field order ",
            "author": "Joel Bernstein",
            "id": "comment-15926778"
        },
        {
            "date": "2017-03-15T23:25:39+0000",
            "content": "Commit b46e09c79f849d9211b3de235788bbf32d7aa84b in lucene-solr's branch refs/heads/master from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b46e09c ]\n\nSOLR-10085: SQL result set fields should be ordered by the field list ",
            "author": "ASF subversion and git services",
            "id": "comment-15927163"
        },
        {
            "date": "2017-03-15T23:54:50+0000",
            "content": "Commit 1bf01577748da82a394f3c64a2af68d5d8ae4ac2 in lucene-solr's branch refs/heads/branch_6x from Joel Bernstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1bf0157 ]\n\nSOLR-10085: SQL result set fields should be ordered by the field list ",
            "author": "ASF subversion and git services",
            "id": "comment-15927216"
        },
        {
            "date": "2017-03-30T12:47:14+0000",
            "content": "Commit 09373aaa0875b8ae2bb795d5dfafbdb1450546cc in lucene-solr's branch refs/heads/branch_6x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=09373aa ]\n\nSOLR-10046: remove CHANGES.txt entry\n\n(Reverses unintentional add alongside SOLR-10085 and SOLR-10254 CHANGES.txt update.) ",
            "author": "ASF subversion and git services",
            "id": "comment-15948986"
        },
        {
            "date": "2017-03-30T12:48:42+0000",
            "content": "Commit 4d3e94befcb5ea361ceff1fcff1bdc3e6166fdf1 in lucene-solr's branch refs/heads/branch_6_5 from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4d3e94b ]\n\nSOLR-10046: remove CHANGES.txt entry\n\n(Reverses unintentional add alongside SOLR-10085 and SOLR-10254 CHANGES.txt update.) ",
            "author": "ASF subversion and git services",
            "id": "comment-15948992"
        }
    ]
}