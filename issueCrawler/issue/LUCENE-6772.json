{
    "id": "LUCENE-6772",
    "title": "MultiCollector should catch CollectionTerminatedException",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.4"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "If you wrap two collectors in a MultiCollector and one of them terminates early, then it will also make the other one terminate since MultiCollector propagates the CollectionTerminatedException.",
    "attachments": {
        "LUCENE-6772.patch": "https://issues.apache.org/jira/secure/attachment/12753743/LUCENE-6772.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14727205",
            "author": "Adrien Grand",
            "date": "2015-09-02T11:37:27+0000",
            "content": "Here is a patch.\n\nI also verified that it did not hurt performance by modifying luceneutil a bit so that it runs two collectors, and ran on wikimedium1m. This change doesn't make any difference:\n\ndiff --git a/src/main/perf/SearchTask.java b/src/main/perf/SearchTask.java\nindex 188638d..d46071c 100644\n--- a/src/main/perf/SearchTask.java\n+++ b/src/main/perf/SearchTask.java\n@@ -32,7 +32,7 @@ import org.apache.lucene.facet.range.LongRangeFacetCounts;\n import org.apache.lucene.facet.taxonomy.FastTaxonomyFacetCounts;\n import org.apache.lucene.index.StorableField;\n import org.apache.lucene.index.StoredDocument;\n-import org.apache.lucene.search.Collector;\n+import org.apache.lucene.search.*;\n import org.apache.lucene.search.FieldDoc;\n import org.apache.lucene.search.IndexSearcher;\n import org.apache.lucene.search.Query;\n@@ -221,7 +221,11 @@ final class SearchTask extends Task {\n           getFacetResultsMsec = (System.nanoTime() - t0)/1000000.0;\n         }\n       } else if (s == null) {\n-        hits = searcher.search(q, topN);\n+        TotalHitCountCollector c1 = new TotalHitCountCollector();\n+        TopScoreDocCollector c2 = TopScoreDocCollector.create(10);\n+        searcher.search(q, MultiCollector.wrap(c1, c2));\n+        hits = c2.topDocs();\n+        //hits = searcher.search(q, topN);\n         if (doHilite) {\n           hilite(hits, state, searcher, q);\n         }\n\n\n\n                    TaskQPS baseline      StdDev   QPS patch      StdDev                Pct diff\n                  Fuzzy1      130.31     (17.1%)      121.84     (17.1%)   -6.5% ( -34% -   33%)\n              AndHighMed      745.89      (6.7%)      730.00      (6.4%)   -2.1% ( -14% -   11%)\n             AndHighHigh      188.09      (2.7%)      184.12      (5.0%)   -2.1% (  -9% -    5%)\n                  Fuzzy2       41.15     (12.6%)       40.34     (12.7%)   -2.0% ( -24% -   26%)\n              AndHighLow     1621.12      (8.5%)     1594.15      (8.7%)   -1.7% ( -17% -   16%)\n                 Prefix3      441.43     (10.4%)      434.16      (9.7%)   -1.6% ( -19% -   20%)\n                 Respell      146.15      (8.7%)      144.38      (8.4%)   -1.2% ( -16% -   17%)\n                HighTerm      567.69      (5.9%)      561.25      (7.7%)   -1.1% ( -13% -   13%)\n             MedSpanNear      115.47      (4.3%)      114.23      (4.7%)   -1.1% (  -9% -    8%)\n               OrHighMed      310.01      (7.5%)      307.18      (7.3%)   -0.9% ( -14% -   14%)\n               LowPhrase     1915.84      (7.6%)     1911.45      (5.2%)   -0.2% ( -12% -   13%)\n                MatchAll      123.15      (2.3%)      122.95      (3.5%)   -0.2% (  -5% -    5%)\n               OrHighLow      190.67      (7.3%)      190.43      (8.9%)   -0.1% ( -15% -   17%)\n                  IntNRQ       45.37      (5.4%)       45.37      (5.6%)    0.0% ( -10% -   11%)\n            HighSpanNear      107.41      (8.9%)      107.47      (4.2%)    0.1% ( -12% -   14%)\n                 LowTerm     3068.58     (12.6%)     3074.91      (9.4%)    0.2% ( -19% -   25%)\n        HighSloppyPhrase       97.20      (4.7%)       97.49      (5.0%)    0.3% (  -9% -   10%)\n                Wildcard      549.64      (9.8%)      551.62      (9.7%)    0.4% ( -17% -   21%)\n              OrHighHigh      220.99      (9.1%)      221.84      (7.2%)    0.4% ( -14% -   18%)\n                 MedTerm     1210.22      (6.4%)     1216.69      (6.5%)    0.5% ( -11% -   14%)\n             LowSpanNear      383.33      (9.9%)      386.49      (7.7%)    0.8% ( -15% -   20%)\n         MedSloppyPhrase      210.81      (8.0%)      212.89      (3.9%)    1.0% ( -10% -   13%)\n         LowSloppyPhrase      332.48      (6.2%)      337.41      (4.7%)    1.5% (  -8% -   13%)\n               MedPhrase      300.05      (6.6%)      305.93      (6.2%)    2.0% ( -10% -   15%)\n              HighPhrase      119.23      (5.3%)      122.03      (5.1%)    2.3% (  -7% -   13%)\n\n "
        },
        {
            "id": "comment-14730702",
            "author": "ASF subversion and git services",
            "date": "2015-09-04T12:13:46+0000",
            "content": "Commit 1701231 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1701231 ]\n\nLUCENE-6772: MultiCollector now handles CollectionTerminatedException. "
        },
        {
            "id": "comment-14730707",
            "author": "ASF subversion and git services",
            "date": "2015-09-04T12:17:04+0000",
            "content": "Commit 1701233 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1701233 ]\n\nLUCENE-6772: MultiCollector now handles CollectionTerminatedException. "
        }
    ]
}