{
    "id": "SOLR-465",
    "title": "Add configurable DirectoryProvider so that alternate Directory implementations can be specified via solrconfig.xml",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Solr is presently hard-coded to use the FSDirectory implementation in Lucene.  Other Directory implementations are possible.  This patch creates a new DirectoryProvider interface and extends SolrCore to load an implementation of it from solrconfig.xml (if specified).  If not specified, then it will fallback to the FSDirectory.\n\nA DirectoryProvider plugin can be configured in solrconfig.xml with the following XML:\n   <directoryProvider class=\"class.name\">\n      <!-- Parameters as required by the implementation -->\n   </directoryProvider>\n\nThis patch was created against solr trunk checked out on 11/20/2007.  Most of it is new code and should apply cleanly or with minor relocation.  If it does not, let me know and I will update.",
    "attachments": {
        "SOLR-465.patch": "https://issues.apache.org/jira/secure/attachment/12388994/SOLR-465.patch",
        "solr-directory-provider.patch": "https://issues.apache.org/jira/secure/attachment/12373836/solr-directory-provider.patch",
        "SOLR-465-fixes.patch": "https://issues.apache.org/jira/secure/attachment/12402651/SOLR-465-fixes.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "TJ Laurenzo",
            "id": "comment-12561703",
            "date": "2008-01-23T15:09:37+0000",
            "content": "Patch to add DirectoryProvider configurability to Solr. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12566343",
            "date": "2008-02-06T21:26:01+0000",
            "content": "i haven't looked at the patch, but i just wanted to point out that  SOLR-465 and SOLR-243 should be dealt with holistically so that the solutions to each of the use cases work well together.\n\n(ie: perhaps DirectoryProvider should be a property of an IndexReaderFactory) "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12626084",
            "date": "2008-08-27T11:45:08+0000",
            "content": "New patch.\n\nUpdates things to trunk, tweaks things to be more like latest SOLR-243, adds a unit test to make sure alternate DirectoryFactory is used.\n\nLooks like we will want to use an alternate Directory for UNIX systems due to LUCENE-753 (which in the end adds a new Directory implementation called org.apache.lucene.store.NIOFSDirectory). Makes sense to fit this issue into that.\n\nOnce Lucene is up to date, I'll add a new patch that returns a directory based on the OS from the default Factory.\n\n\n\tMark\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12637633",
            "date": "2008-10-07T20:23:23+0000",
            "content": "I've worked a bit on updating this to trunk, but it has a bit of overlap with solr-243, so if either are going in, it will be much easier to finish the other after. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12642453",
            "date": "2008-10-24T12:36:11+0000",
            "content": "Updated to trunk and now uses NIOFSDirectory if non-windows OS is detected. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12645348",
            "date": "2008-11-05T22:36:54+0000",
            "content": "Patch looks good to me - I'll commit shortly. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12645638",
            "date": "2008-11-07T00:39:25+0000",
            "content": "Thanks guys, I just committed this. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12646782",
            "date": "2008-11-12T02:54:16+0000",
            "content": "Sorry guys, this patch isnt right for NIODirectory. You can't control the directory that way. Will have to think of something else...at worst users will have to select with a java property rather than auto getting the good stuff. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12647002",
            "date": "2008-11-12T19:06:14+0000",
            "content": "Hmmm, can you expand on what's wrong? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12647008",
            "date": "2008-11-12T19:17:31+0000",
            "content": "You will get an FSDirectory no matter which OS. Open is a static method that pulls from a system property for the directory impl to use. So its not broken per say (you can set the property and get the right stuff), but you wont get the NIOFSDirectory automatically on non windows like the code implies. I'm going to try and make it workable at the Lucene level without the sys property is my hope. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12647022",
            "date": "2008-11-12T19:43:07+0000",
            "content": "But couldn't one start the container with the appropriate system property pointing to the new NIOFSDirectory class and \"turn on\" NIOFSDirectory (or any other Directory) that way? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12647027",
            "date": "2008-11-12T19:51:28+0000",
            "content": "But couldn't one start the container with the appropriate system property pointing to the new NIOFSDirectory class and \"turn on\" NIOFSDirectory (or any other Directory) that way?\n\nWhy not specify in solrconfig.xml?\n\nAnother question I had was \u2013 Is it possible to use RAMDirectory too? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12647034",
            "date": "2008-11-12T20:04:19+0000",
            "content": "But couldn't one start the container with the appropriate system property pointing to the new NIOFSDirectory class and \"turn on\" NIOFSDirectory (or any other Directory) that way?\n\nYes. Thats why I say its not really broken.  It will still work, and you can still change the impl...but the code implies you will get the right impl for the right OS, and you won't without using that system property. Hoping to make that pain go away.\n\nWhy not specify in solrconfig.xml?\n\nPossibly...I think automatic has a lot of allure though...\n\nIs it possible to use RAMDirectory too?\n\nThe factory returns a Directory, so it is in that sense...it may have other ramifications though depending on what solr assumes. Don't know off hand. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12647704",
            "date": "2008-11-14T19:26:17+0000",
            "content": "reopening.  LUCENE-1451 has been committed, adding public constructors to FSDirectory and subclasses. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12647899",
            "date": "2008-11-15T21:28:44+0000",
            "content": "Possibly...I think automatic has a lot of allure though...\nAutomatic is great. I was only referring to using solrconfig.xml instead of system property for this. I see now that this system property is used by Lucene and not Solr.\n\nJust for my understanding, now Solr uses NIOFSDirectory automatically but only on non-windows platforms, is that correct? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12647902",
            "date": "2008-11-15T22:02:47+0000",
            "content": "Thats the hope once we upgrade to a Lucene with LUCENE-1451, but right now its not possible to auto do it - you have to set the system property. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12649340",
            "date": "2008-11-20T11:41:01+0000",
            "content": "LUCENE-1451 has been committed. So all we need is to upgrade the lucene jars in the solr lib, right?\n\nIf there are no objections, I'll do that today. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12649344",
            "date": "2008-11-20T11:44:08+0000",
            "content": "We will need a tiny new patch as well...ill put it up as soon as the jars are upgraded . "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12649467",
            "date": "2008-11-20T20:23:23+0000",
            "content": "I have upgraded Lucene jars to r719351 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12651584",
            "date": "2008-11-28T15:22:53+0000",
            "content": "Sorry, this fell off my radar. I'll post another patch to finish this up this weekend. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12651896",
            "date": "2008-12-01T01:15:41+0000",
            "content": "Committed.  Thanks Mark! "
        },
        {
            "author": "Andrey Klochkov",
            "id": "comment-12683832",
            "date": "2009-03-20T10:27:42+0000",
            "content": "I tried to use custom Directory implementation which doesn't use file system and found that there are some places in the Solr code which don't let to do this 'cause they instantiate FSDirectory. Here is my patch, please review it and apply if it's Ok. I don't have rights to re-open the issue. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12685410",
            "date": "2009-03-21T03:16:46+0000",
            "content": "Hmmm... yes, this does seem to be an oversight.\n\nthe root issue seems to be that there is still a SolrIndexWriter constructor that takes a IndexDeletionPolicy but does not take a DirectoryFactory. \n\nthe latest patch seems to be adding yet another constructor (that takes both) and modifies the callers of the existing IndexDeletionPolicy method to use the new one ... but since the IndexDeletionPolicy code was added after 1.3 we can just change it.\n\nIt also seems like it might be a good idea to add some logging to SolrIndexWriter.getDirectory(String,SolrIndexConfig) warning people when legacy code is being used that might not be respecting their DirectoryFactory.\n\nreopening, assigning to Yonik to review since he & Miller worked on this originally "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12702173",
            "date": "2009-04-24T00:25:03+0000",
            "content": "Bah, those constructors came in after this patch - they should be the issues reopened! \n\nI'll put up a patch changing it. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12703633",
            "date": "2009-04-28T13:13:25+0000",
            "content": "changes made "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12703777",
            "date": "2009-04-28T18:15:55+0000",
            "content": "Sorry, missed UpdateHandler in that last patch - new patch to fix. Eclipse is both a blessing and a curse  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12703793",
            "date": "2009-04-28T19:15:48+0000",
            "content": "Thanks Mark, committed. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12703899",
            "date": "2009-04-29T00:14:02+0000",
            "content": "I should have also changed the SolrCore use of SolrIndexWriter to create an index to use a non deprecated SolrIndexWriter constructor. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12715282",
            "date": "2009-06-01T22:16:00+0000",
            "content": "I committed a changed version of the FSDirectory today to Lucene trunk (LUCENE-1658). The ctor/class name of the default directory impl is now SimpleFSDirectory vs. NIOFSDirectory and MMapDirectory. All three dirs can no instantiated by a one-arg and two-arg ctor (File[, LockFactory]).\n\nFSDirectory will get abstract in 3.0 and so cannot be instantiated (only protected ctor). It is now also a factory, to choose automatically the best variant for the platform: FSDirectory.open(File[, LockFactory]) "
        }
    ]
}