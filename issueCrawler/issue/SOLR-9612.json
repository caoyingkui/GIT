{
    "id": "SOLR-9612",
    "title": "Stored field access should be avoided when it's not needed",
    "details": {
        "components": [
            "Response Writers",
            "search"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.7",
            "7.0"
        ],
        "affect_versions": "6.0,                                            6.1,                                            6.2",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "This is a small enhancement. (unneeded stored access spend 5% in my profile result)\nAll fields which is written in fl parameter(some of them are only doc values not stored) are iterated over from stored fields and it's inefficient. Further when fl parameters are only docValues, we should avoid accessing stored.\n\nI'm going to update a conservative patch.\nThis patch exclude nonStoredDocValues fields from stored field list, and if we don't need access stored, we skip it.\nWhat 'conservative' means is that when schema is dynamically changed this patch not change behaviors.(ex. stored field 'a' is removed from schema, and user search fl=a, then a is returned from DocStreamer.)\nBut I'm not sure how should solr behaves when schema is dynamically changed.\n\nI think better approach is \nEach fields are classified 3 types from schema and process each.\n\n\tstored                           -> fetch from stored\n\tnonStoredDocValues   -> fetch from docValues\n\tunknown                      -> error or lazy field(distinguishable?)\nBut this might break backward compatibility.(like mentioned above)\n\n\n\nAny comments are welcome.",
    "attachments": {
        "SOLR-9612.patch": "https://issues.apache.org/jira/secure/attachment/12832249/SOLR-9612.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-08T05:57:28+0000",
            "author": "Takahiro Ishikawa",
            "content": "updated ",
            "id": "comment-15557303"
        },
        {
            "date": "2016-10-08T16:36:19+0000",
            "author": "Erick Erickson",
            "content": "Hmm, how does this relate to SOLR-8220? In particular, what happens if you specify \"useDocValuesAsStored\" (see the discussion at SOLR-8220).\n\nI haven't looked deeply into this so that link may be off base. But this work may already be done.... ",
            "id": "comment-15558274"
        },
        {
            "date": "2016-10-09T14:59:46+0000",
            "author": "Takahiro Ishikawa",
            "content": "No, this issue is different from SOLR-8220. This issue only focuses on performance but SOLR-8220 focuses on functionality.\nSOLR-8220 enables to return field values from docValues, but always seek the fields from stored first.\nMy suggestion is when you know some fields are only from docValues, you don't need to seek the fields from stored and should skip.\n\n\"useDocValuesAsStored\" is handled in getNonStoredDVs, and this issue doesn't intend to change the behavior.\nSee below how to handle \"useDocValuesAsStored\".\nhttps://github.com/apache/lucene-solr/blob/branch_6_0/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java#L877-L886 ",
            "id": "comment-15560120"
        },
        {
            "date": "2017-03-13T16:49:12+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Moving to 6.5, since 6.4 has already been released. ",
            "id": "comment-15907823"
        }
    ]
}