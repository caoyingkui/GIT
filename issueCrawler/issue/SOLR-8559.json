{
    "id": "SOLR-8559",
    "title": "FCS facet performance optimization",
    "details": {
        "components": [
            "faceting"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5"
        ],
        "affect_versions": "5.5,                                            6.0",
        "status": "Closed",
        "resolution": "Implemented",
        "priority": "Major"
    },
    "description": "While profiling a large collection (multi-sharded billions of documents), I found that a fast (5-10ms query) which had no matches would take 20-30 seconds when doing facets even when facet.mincount=1\n\nProfiling made it apparent that with facet.method=fcs 99% of the time was spent here.\n\nqueue.udpateTop gets called numOfSegments*numTerms, the worst case when every term is in every segment. This formula doesn't take into account whether or not any of the terms have a positive count with respect to the docset.\n\nThese optimizations are aimed to do two things:\n\n\n\tWhen mincount>0 don't include segments which all terms have zero counts. This should significantly speed up processing when terms are high cardinality and the matching docset is small\n\tFIXED TODO optimization: when mincount>0 move segment position the next non zero term value.\n\n\n\nboth of these changes will minimize the number of called needed to the slow updateTop call.",
    "attachments": {
        "solr-8559.patch": "https://issues.apache.org/jira/secure/attachment/12782743/solr-8559.patch",
        "SOLR-8559-4-10-4.patch": "https://issues.apache.org/jira/secure/attachment/12783210/SOLR-8559-4-10-4.patch",
        "SOLR-8559.patch": "https://issues.apache.org/jira/secure/attachment/12783209/SOLR-8559.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-19T14:57:21+0000",
            "author": "Dennis Gove",
            "content": "Are you able to create a test for this specific enhancement? Or if not, are there existing tests covering this code I can specifically check after applying the patch? ",
            "id": "comment-15106833"
        },
        {
            "date": "2016-01-19T15:52:10+0000",
            "author": "Dennis Gove",
            "content": "Rebased off trunk. Keith will upload a 5x backport. ",
            "id": "comment-15106896"
        },
        {
            "date": "2016-01-19T18:55:55+0000",
            "author": "Keith Laban",
            "content": "I have not written a specific test, but running TestRandomDVFaceting with a coverage tool shows complete coverage for code in this patch ",
            "id": "comment-15107196"
        },
        {
            "date": "2016-01-19T19:02:08+0000",
            "author": "Keith Laban",
            "content": "trunk patch applies cleanly to branch_5x ",
            "id": "comment-15107207"
        },
        {
            "date": "2016-01-19T22:41:50+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1725638 from dpgove@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1725638 ]\n\nSOLR-8559: FCS facet performance optimization\n\nSignificantly speeds up processing when terms are high cardinality and the matching docset is small. \nWhen facet minCount > 0 and the number of matching documents is small (or 0) this enhancement \nprevents considering terms which have a 0 count. Also includes change to move to the next non-zero \nterm value when selecting a segment position. ",
            "id": "comment-15107604"
        },
        {
            "date": "2016-01-19T22:42:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1725639 from dpgove@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1725639 ]\n\nSOLR-8559: FCS facet performance optimization\n\nSignificantly speeds up processing when terms are high cardinality and the matching docset is small. \nWhen facet minCount > 0 and the number of matching documents is small (or 0) this enhancement \nprevents considering terms which have a 0 count. Also includes change to move to the next non-zero \nterm value when selecting a segment position. ",
            "id": "comment-15107607"
        },
        {
            "date": "2016-01-19T22:43:18+0000",
            "author": "Dennis Gove",
            "content": "Patch applied to both trunk and branch_5x. ",
            "id": "comment-15107608"
        },
        {
            "date": "2016-01-19T22:49:08+0000",
            "author": "Keith Laban",
            "content": "added 4.10.4 patch as well ",
            "id": "comment-15107617"
        },
        {
            "date": "2016-01-19T22:51:13+0000",
            "author": "Dennis Gove",
            "content": "Thanks for this performance optimization, Keith! ",
            "id": "comment-15107620"
        },
        {
            "date": "2016-01-22T21:20:27+0000",
            "author": "Keith Laban",
            "content": "After a doing some performance testing, this change shows about 4 orders of magnitudes speed improvement.\n\nFor a collection with 100M documents a query matching 2,675 documents and 1,964 unique terms (facet.mincount=1&facet.limit=-1&facet.method=fcs) sped up query performance from 11664ms (11 seconds) to 30ms.  ",
            "id": "comment-15113100"
        },
        {
            "date": "2016-01-22T21:36:17+0000",
            "author": "David Smiley",
            "content": "Dennis Gove Please update the \"Fix Version/s:\" when resolving issues to the particular non-trunk release this is fixed on.  5.5?  It's multi-valued; and including trunk is generally implied, I usually omit that.  Also, I forget where I saw this but I think we're always supposed to mark issues as \"Resolved\" (not Closed) and then at the next release it gets bulk-updated to Closed by the RM.\n\nAnd thanks for getting this in  ",
            "id": "comment-15113133"
        },
        {
            "date": "2016-01-22T21:44:42+0000",
            "author": "Dennis Gove",
            "content": "Thanks, Dave. I think I've been marking issues as closed. I'll keep this in mind going forward. ",
            "id": "comment-15113160"
        }
    ]
}