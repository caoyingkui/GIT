{
    "id": "SOLR-11770",
    "title": "NPE in tvrh if no field is specified and document doesn't contain any fields with term vectors",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "6.6.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "It looks like if tvrh request doesn't contain fl parameter and document doesn't have any fields with term vectors then Solr returns NPE.\n\nRequest: tvrh?shards.qt=/tvrh&fq=field%3Avalue&wt=json&q=id%3A123&tv.tf=true.\n\nOn our 'old' schema we had some fields with termVectors and even more fields with position data. In our new schema we tried to remove unused data so we dropped a lot of position data and some term vectors.\n\nOur documents are 'sparsely' populated - not all documents contain all fields.\n\nAbove request was returning fine for our 'old' schema and returns 500 for our 'new' schema - on exactly same Solr (6.6.2).\n\nStack trace:\n\n2017-12-18 01:15:00.958 ERROR (qtp255041198-46697) [c:test s:shard3 r:core_node11 x:test_shard3_replica1] o.a.s.h.RequestHandlerBase java.lang.NullPointerException\n       at org.apache.solr.handler.component.TermVectorComponent.process(TermVectorComponent.java:324)\n       at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:296)\n       at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:173)\n       at org.apache.solr.core.SolrCore.execute(SolrCore.java:2482)\n       at org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:723)\n       at org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:529)\n       at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:361)\n       at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:305)\n       at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1691)\n       at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582)\n       at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n       at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n       at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n       at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)\n       at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512)\n       at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n       at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)\n       at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n       at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n       at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n       at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n       at org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\n       at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n       at org.eclipse.jetty.server.Server.handle(Server.java:534)\n       at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320)\n       at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)\n       at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\n       at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\n       at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n       at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\n       at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\n       at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\n       at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)\n       at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)\n       at java.lang.Thread.run(Thread.java:748)",
    "attachments": {
        "SOLR-11770.patch": "https://issues.apache.org/jira/secure/attachment/12934351/SOLR-11770.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-11T05:24:50+0000",
            "content": "On another note:\n\nIf I switch my <uniqueKey> field from stored=\"true\", docValues=\"false\" to \nstored=\"false\", docValues=\"true\" the output changes. It seems like having the ID field present in docValues should allow it to be returned.\n\nWith stored=false, docValues=true:\n  \"termVectors\":[]}\n\n\nWith stored=true, docValues=false:\n\"termVectors\":[\n    \"GB18030TEST\",[\n      \"uniqueKey\",\"GB18030TEST\"],\n    \"SP2514N\",[\n      \"uniqueKey\",\"SP2514N\"],\n    \"6H500F0\",[\n      \"uniqueKey\",\"6H500F0\"],\n    \"F8V7067-APL-KIT\",[\n      \"uniqueKey\",\"F8V7067-APL-KIT\"],\n    \"IW-02\",[\n      \"uniqueKey\",\"IW-02\"],\n    \"MA147LL/A\",[\n      \"uniqueKey\",\"MA147LL/A\",\n      \"includes\",[\n        \"cable\",[],\n        \"earbud\",[],\n        \"headphones\",[],\n        \"usb\",[]]],\n    \"adata\",[\n      \"uniqueKey\",\"adata\"],\n    \"apple\",[\n      \"uniqueKey\",\"apple\"],\n    \"asus\",[\n      \"uniqueKey\",\"asus\"],\n    \"ati\",[\n      \"uniqueKey\",\"ati\"]]}\n ",
            "author": "Erick Erickson",
            "id": "comment-16321719"
        },
        {
            "date": "2018-01-11T16:33:23+0000",
            "content": "There is a related story for 'tvrh needs stored unique key': https://issues.apache.org/jira/browse/SOLR-11792 ",
            "author": "Nikolay Martynov",
            "id": "comment-16322508"
        },
        {
            "date": "2018-07-18T16:49:36+0000",
            "content": "Just curious, what do people actually use TVRH for? \u00a0Purely diagnostics or some greater production purpose? ",
            "author": "David Smiley",
            "id": "comment-16548071"
        },
        {
            "date": "2018-08-04T00:07:03+0000",
            "content": "Here's a patch. The fix for TVRH isn't very interesting, but there are a couple of things I'd like to draw your attention to David Smiley and Cao Manh Dat in particular.\n\n1> I had to make several methods in RetrieveFieldOptimizer public to use them outside the package RFO is defined in. I consider this a stopgap until we tackle SOLR-12625.\n\n2> Along the way I randomized the stored/docValues fields for \"schema.xml\" for my TVRH test. The defaults are as they are now so it \"shouldn't change anything\". HOWEVER:\n\n2a> I screwed it up on the first attempt and set both to \"true\" by default the first time, and then QueryElevationComponentTest started failing. The fix (which seems safe, but isn't really complete) is in BaseEditorialTransformer. Anyone interested please take a look. All tests pass.\n\n2b> It's scary that turning on docValues=true stored=true causes this kind of unintended consequence, how many others are lurking around? I propose we randomize the two environment variables you'll see in schema.xml in this patch in the framework and flush out any more. This presupposes that the three valid combinations should all be supported (stored=false,docValues=false doesn't make sense).\n\nI'll commit this in over the weekend probably, the interesting work will be in SOLR-12625.... ",
            "author": "Erick Erickson",
            "id": "comment-16568939"
        },
        {
            "date": "2018-08-07T03:05:05+0000",
            "content": "Commit 96e8392921792b9ec281c28f28f49b50f998ceed in lucene-solr's branch refs/heads/master from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=96e8392 ]\n\nSOLR-11770: NPE in tvrh if no field is specified and document doesn't contain any fields with term vectors ",
            "author": "ASF subversion and git services",
            "id": "comment-16571068"
        },
        {
            "date": "2018-08-07T03:05:57+0000",
            "content": "Commit 08ca54f1f89eb98f6a3238f0f91c1f8383c12119 in lucene-solr's branch refs/heads/master from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=08ca54f ]\n\nSOLR-11770: NPE in tvrh if no field is specified and document doesn't contain any fields with term vectors, forgot to add CHANGES.txt ",
            "author": "ASF subversion and git services",
            "id": "comment-16571069"
        },
        {
            "date": "2018-08-07T03:30:26+0000",
            "content": "Commit 21e8a84296cf3ba15879beee1f77809a2ce9544b in lucene-solr's branch refs/heads/branch_7x from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=21e8a84 ]\n\nSOLR-11770: NPE in tvrh if no field is specified and document doesn't contain any fields with term vectors\n\n(cherry picked from commit 96e8392921792b9ec281c28f28f49b50f998ceed) ",
            "author": "ASF subversion and git services",
            "id": "comment-16571083"
        },
        {
            "date": "2018-08-07T03:30:27+0000",
            "content": "Commit 5a7cb7ed3dba0c31afa58365c115530625b91ad7 in lucene-solr's branch refs/heads/branch_7x from Chris Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5a7cb7e ]\n\nSOLR-11770: NPE in tvrh if no field is specified and document doesn't contain any fields with term vectors, forgot to add CHANGES.txt\n\n(cherry picked from commit 08ca54f1f89eb98f6a3238f0f91c1f8383c12119) ",
            "author": "ASF subversion and git services",
            "id": "comment-16571084"
        },
        {
            "date": "2018-08-07T03:31:28+0000",
            "content": "Also fixes SOLR-11792 ",
            "author": "Erick Erickson",
            "id": "comment-16571086"
        },
        {
            "date": "2018-10-23T17:08:32+0000",
            "content": "Looking at this code now in BaseEditorialTransformer.  Shouldn't the String case be similar to IndexableField in using ft.readableToIndexed?  The field type dictates the transformation. ",
            "author": "David Smiley",
            "id": "comment-16660984"
        }
    ]
}