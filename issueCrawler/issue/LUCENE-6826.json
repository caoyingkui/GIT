{
    "id": "LUCENE-6826",
    "title": "java.lang.ClassCastException: org.apache.lucene.index.TermsEnum$2 cannot be cast to org.apache.lucene.index.MultiTermsEnum when adding indexes",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.2.1",
        "components": [
            "core/index"
        ],
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "We are using addIndexes and FilterCodecReader tricks as part of index migration.\n\nWhether FilterCodecReader tricks are required to reproduce this is uncertain, but in any case, when migrating a particular index, I saw this exception:\n\n\njava.lang.ClassCastException: org.apache.lucene.index.TermsEnum$2 cannot be cast to org.apache.lucene.index.MultiTermsEnum\n\tat org.apache.lucene.index.MappedMultiFields$MappedMultiTerms.iterator(MappedMultiFields.java:65)\n\tat org.apache.lucene.codecs.blocktree.BlockTreeTermsWriter.write(BlockTreeTermsWriter.java:426)\n\tat org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsWriter.write(PerFieldPostingsFormat.java:198)\n\tat org.apache.lucene.codecs.FieldsConsumer.merge(FieldsConsumer.java:105)\n\tat org.apache.lucene.index.SegmentMerger.mergeTerms(SegmentMerger.java:193)\n\tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:95)\n\tat org.apache.lucene.index.IndexWriter.addIndexes(IndexWriter.java:2519)\n\n\n\nTermsEnum$2 appears to be TermsEnum.EMPTY. The place where it creates it is here:\n\nMultiTermsEnum#reset:\n\n    if (queue.size() == 0) {\n      return TermsEnum.EMPTY;   // <- this is not a MultiTermsEnum\n    } else {\n      return this;\n    }\n\n\n\nA quick hack would be for MappedMultiFields to check for TermsEnum.EMPTY specifically before casting, but there might be some way to avoid the cast entirely and that would obviously be a better idea.",
    "attachments": {
        "Lucene6826.java": "https://issues.apache.org/jira/secure/attachment/12765323/Lucene6826.java"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14944708",
            "author": "Michael McCandless",
            "date": "2015-10-06T08:44:17+0000",
            "content": "Hmm, no good ... I think we first need a small test case exposing this.\n\nI think it should only happen if you have a FilterCodecReader that has filters a field by providing no terms in the TermsEnum?\n\nI.e. I think Lucene (at least the default codec) would normally not write a field if it has 0 terms. "
        },
        {
            "id": "comment-14944724",
            "author": "Trejkaz",
            "date": "2015-10-06T08:49:40+0000",
            "content": "One of the fields, our test indexes all have the same value, which happens to be the value we filter out, and then the contents of that filtered stream get merged with another field. It might not be too hard to mock up a test case with similar behaviour, will see what I can do tomorrow. "
        },
        {
            "id": "comment-14944738",
            "author": "Michael McCandless",
            "date": "2015-10-06T08:55:19+0000",
            "content": "Thank you Trejkaz! "
        },
        {
            "id": "comment-14946182",
            "author": "Trejkaz",
            "date": "2015-10-07T03:35:50+0000",
            "content": "This test creates an index with one document which contains a value which does not match the filter. It then migrates the index in a fashion that just filters out the values, we don't want, which becomes all values in that field, which triggers the error.\n\nThe first half of the day I tried to reproduce the exact same thing from scratch with no success - it happily migrated. This version comes from working code, simplified as far as possible without removing the issue, so it could turn out that there is a subtle bug in my code as well. "
        },
        {
            "id": "comment-14946468",
            "author": "Michael McCandless",
            "date": "2015-10-07T07:57:13+0000",
            "content": "Thanks Trejkaz, I'll have a look... "
        },
        {
            "id": "comment-14947582",
            "author": "ASF subversion and git services",
            "date": "2015-10-07T21:04:06+0000",
            "content": "Commit 1707387 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1707387 ]\n\nLUCENE-6826: add explicit check for TermsEnum.EMPTY to avoid ClassCastException "
        },
        {
            "id": "comment-14947585",
            "author": "ASF subversion and git services",
            "date": "2015-10-07T21:05:26+0000",
            "content": "Commit 1707388 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1707388 ]\n\nLUCENE-6826: fix java7 compilation "
        },
        {
            "id": "comment-14947589",
            "author": "ASF subversion and git services",
            "date": "2015-10-07T21:06:38+0000",
            "content": "Commit 1707390 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1707390 ]\n\nLUCENE-6826: add explicit check for TermsEnum.EMPTY to avoid ClassCastException "
        },
        {
            "id": "comment-14947590",
            "author": "Michael McCandless",
            "date": "2015-10-07T21:07:25+0000",
            "content": "Thanks Trejkaz! "
        }
    ]
}