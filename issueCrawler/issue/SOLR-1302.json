{
    "id": "SOLR-1302",
    "title": "Fun with Distances - Add Distance functions for a variety of things",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.5",
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There are many distance functions that are useful to have:\n\n1. Great Circle (lat/lon) and other geo distances\n2. Euclidean (Vector)\n3. Manhattan (Vector)\n4. Cosine (Vector)\n\nFor the vector ones, the idea is that the fields on a document can be used to determine the vector.",
    "attachments": {
        "SOLR-1302.patch": "https://issues.apache.org/jira/secure/attachment/12424907/SOLR-1302.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Chris A. Mattmann",
            "id": "comment-12777648",
            "date": "2009-11-13T20:43:04+0000",
            "content": "Hey Grant,\n\nI'd love to help on this issue \u2013 do you have a preference regarding which one of the above 4 that you'd like to work on? All of them? 2 of them?\n\nLet me know \u2013 I'd be happy to write 1 or 2 of them...\n\nCheers,\nChris "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12777676",
            "date": "2009-11-13T21:41:28+0000",
            "content": "I've got Haversine implemented (great circle), and RadianFunction (convert a val to radians).  I'll put up a patch shortly. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12777710",
            "date": "2009-11-13T22:47:31+0000",
            "content": "Haversine implementation, RadianFunction and DegreeFunction.  Also small refactorings in other places to better support doubles to avoid losing precision for as long as possible.\n\nNext up:  Euclidean and SquaredEuclidean "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12777727",
            "date": "2009-11-13T23:13:56+0000",
            "content": "Note, we may want to mod this to work more with a Field Type that represents a Point.  This depends on SOLR-1131. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12777841",
            "date": "2009-11-14T08:38:18+0000",
            "content": "Adds in SquaredEuclideanFunction and EuclideanFunction distance functions in addition to the others.  Both can calculate the Euclidean distance on an n-dimensional vector made up of the fields of a document.  See the unit test (DistanceFunctionTest) for an example. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12777854",
            "date": "2009-11-14T09:44:03+0000",
            "content": "No need for all of these classes for one offs of distance.  Implement general Lp_Space Vector distance function + a special case for the squared euclidean distance (which isn't really a distance, but is still useful.)\n\nSee http://en.wikipedia.org/wiki/Lp_space\n\nEuclidean distance is dist(2, valuesources...), while Manhattan is (dist(1, valuesources...).  Handles some powers as special cases for improved speed.\n\nThis pretty much enables Solr to do some pretty cool stuff when it comes to vector calculations.\n\nSee the tests for how to use.  Will add Wiki later. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12777856",
            "date": "2009-11-14T09:44:35+0000",
            "content": "I believe this is ready to commit, but am going to sleep on it. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12777932",
            "date": "2009-11-14T14:21:48+0000",
            "content": "Wiki updated: http://wiki.apache.org/solr/FunctionQuery with documentation on all of these functions.  I think this is ready to go, will likely commit tomorrow. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12777969",
            "date": "2009-11-14T17:14:33+0000",
            "content": "Committed revision 836216. "
        },
        {
            "author": "Chris Male",
            "id": "comment-12778247",
            "date": "2009-11-16T08:05:48+0000",
            "content": "Hi Grant,\n\nWhat sort of performance do these functions have for calculating the distances for say 100k docs?\n\nThanks, "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12778308",
            "date": "2009-11-16T12:08:07+0000",
            "content": "Still benchmarking.  I think there are two other things that are needed for performance: \n1.  Filtering (see the frange stuff)\n2. Caching of function results w/in a single search for use between filtering, scoring and sorting "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12778312",
            "date": "2009-11-16T12:11:21+0000",
            "content": "That being said, my anecdotal tests show them to be pretty fast over ~68K docs.  I'm going to load up the entire Open Street Map planet at some point this week and then I can run real tests. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12778904",
            "date": "2009-11-17T14:32:59+0000",
            "content": "Adding geohash Haversine distance requires being able to pass in string literals "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12778949",
            "date": "2009-11-17T15:50:09+0000",
            "content": "I'm going to close this, as I've implemented a bunch of them, with the exception of cosine.  If someone wants to do that one, they can open a new issue. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12781489",
            "date": "2009-11-23T17:23:53+0000",
            "content": "Added strdist - string distance, too, which uses the Lucene spell checker distance measures for calculating things like edit distance, etc. between two strings. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12834933",
            "date": "2010-02-17T19:07:45+0000",
            "content": "Looking over the source of DistanceUtils#vectorDistance, it seems like there is a bug with calculating infinite norm:\n\nExisting code:\n\nfor (int i = 0; i < vec1.length; i++) {\n        result = Math.max(vec1[i], vec2[i]);\n}\n\n\n\nShouldn't that be:\n\nfor (int i = 0; i < vec1.length; i++) {\n        result = Math.max(result, Math.max(vec1[i], vec2[i]));\n}\n\n "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12834940",
            "date": "2010-02-17T19:16:29+0000",
            "content": "Yep, good catch Shalin.  You want to fix? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12834950",
            "date": "2010-02-17T19:26:54+0000",
            "content": "Done. Committed revision 911153. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872680",
            "date": "2010-05-27T23:01:34+0000",
            "content": "\nCorrecting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013040",
            "date": "2011-03-30T15:45:22+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}