{
    "id": "SOLR-2245",
    "title": "MailEntityProcessor Update",
    "details": {
        "affect_versions": "1.4,                                            1.4.1",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This patch addresses a number of issues in the MailEntityProcessor contrib-extras module.\n\nThe changes are outlined here:\n\n\tAdded an 'includeContent' entity attribute to allow specifying content to be included independently of processing attachments\n     e.g. <entity includeContent=\"true\" processAttachments=\"false\" . . . /> would include message content, but not attachment content\n\tAdded a synonym called 'processAttachments', which is synonymous to the mis-spelled (and singular) 'processAttachement' property. This property functions the same as processAttachement. Default= 'true' - if either is false, then attachments are not processed. Note that only one of these should really be specified in a given <entity> tag.\n\tAdded a FLAGS.NONE value, so that if an email has no flags (i.e. it is unread, not deleted etc.), there is still a property value stored in the 'flags' field (the value is the string \"none\")\nNote: there is a potential backward compat issue with FLAGS.NONE for clients that expect the absence of the 'flags' field to mean 'Not read'. I'm calculating this would be extremely rare, and is inadviasable in any case as user flags can be arbitrarily set, so fixing it up now will ensure future client access will be consistent.\n\tThe folder name of an email is now included as a field called 'folder' (e.g. folder=INBOX.Sent). This is quite handy in search/post-indexing processing\n\tThe addPartToDocument() method that processes attachments is significantly re-written, as there looked to be no real way the existing code would ever actually process attachment content and add it to the row data\n\n\n\nTested on the 3.x trunk with a number of popular imap servers.",
    "attachments": {
        "SOLR-2245.zip": "https://issues.apache.org/jira/secure/attachment/12460479/SOLR-2245.zip",
        "SOLR-2245.patch": "https://issues.apache.org/jira/secure/attachment/12459956/SOLR-2245.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Peter Sturge",
            "id": "comment-12934800",
            "date": "2010-11-23T10:54:20+0000",
            "content": "This latest version of the updated MailEntityProcessor adds a few new features:\n\n1. Incorporated SOLR-1958 (exception if fetchMailsSince isn't specified) into this patch\n2. Added a hacky version of delta mail retrieval for scheduled import runs:\n       The new property is called 'deltaFetch'. If 'true', the first time the import is run, it will read the 'fetchMailsSince' property and import as normal\n       On subsequent runs (within the same process session), the import will only fetch mail since the last run.\n       Because it uses a runtime system property to hold the last_index_time, and there is currently no persistence, if/when the server is restarted, the last_index_time is not saved and the original fetchMailsSince value is used.\n       I couldn't find exposed APIs for the dataimport.properties file (all the methods are private or pkg protected), persistence is not included in this patch version\n3. Added support for including shared folders in the import\n4. Added support for including personal folders (other folders) in the import\n\nA typical <entity> element in data-config.xml might look something like this:\n\n    <entity name=\"email\"\n      user=\"user@mydomain.com\" \n      password=\"userpwd\" \n      host=\"imap.mydomain.com\" \n      fetchMailsSince=\"2010-08-01 00:00:00\" \n      deltaFetch=\"true\"\n      include=\"\"\n      exclude=\"\"\n      recurse=\"false\"\n      folders=\"INBOX,Inbox,inbox\"\n      includeContent=\"true\"\n      processAttachments=\"true\"\n      includeOtherUserFolders=\"true\"\n      includeSharedFolders=\"true\"\n      batchSize=\"100\"\n      processor=\"MailEntityProcessor\"\n      protocol=\"imap\"/>\n\n  "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12935897",
            "date": "2010-11-25T22:36:39+0000",
            "content": "This patch update does a more proper delta-import implementation, rather than the kludge used in the previous version.\nMailEntityProcessor with this patch is useful for importing emails 'en-masse' the first time 'round, then only new mails after that.\n\nBehaviour:\n\n\tIf you send a full-import command, then the 'fetchMailsSince' property specified in data-config.xml will always be used.\n\tIf you send a delta-import command, the 'fetchMailsSince' property specified in data-config.xml is used for the first call only.\n  Subsequent delta-import commands will use the time since the last index update.\n\n\n\nThere are significant code changes in this version. So much so, that I've included the complete MailEntityProcessor source as well as a PATCH file.\n\nThis version doesn't use the persistent last_index_time functionality of dataimport.properties (i.e. it's delta only for the life of the solr process). If I get some free cycles, I'll try to put this in. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12935898",
            "date": "2010-11-25T22:39:42+0000",
            "content": "Forgo to mention...\nBecause this now supports delta-import commands, the 'deltaFetch' attribute is no longer needed and is not used. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12936137",
            "date": "2010-11-27T00:14:11+0000",
            "content": "Tested on the 3.x trunk ...\n3.x or trunk or both? Just 3.x is fine; \n\nPlease add 'in-reply-to' to the fetched & stored headers. This is necessary to reconstruct mail threads.\n\nAlso, please add or update the unit tests.\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12994797",
            "date": "2011-02-15T14:17:58+0000",
            "content": "Thanks Peter,\nIf we can get someone who knows more DIH stuff to add some tests, we can get this committed! "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12994847",
            "date": "2011-02-15T15:51:27+0000",
            "content": "I've been meaning to get back to this, as I have made some local updates to this that help performance.\nCould you give me some feedback on these 2 questions please - it would be really useful:\n\n\tIs there a \"committer's standard\" or similar spec that describes what tests should be included, and if so, could you point me to it please?\n      I can then make sure I include appropriate tests\n\tIs there a time-frame for committing for this or next release?\n      I have a product release of my own coming fup or beg-March, so if I know the time-scales, I can plan accordingly.\n\n\n\nThanks!\nPeter "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043768",
            "date": "2011-06-03T16:46:58+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106319",
            "date": "2011-09-16T14:50:34+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234669",
            "date": "2012-03-21T18:08:48+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717356",
            "date": "2013-07-23T18:47:58+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-13879395",
            "date": "2014-01-23T02:54:05+0000",
            "content": "Updated the patch to work with latest rev in branch_4x ... will get running on trunk tomorrow. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-13940079",
            "date": "2014-03-19T02:24:47+0000",
            "content": "Updated patch built against trunk that builds upon Peter's work. Specifically, this patch does:\n\n1) revived unit test that uses GreenMail as an embedded imap server during unit testing.\n\n2) added a new dependency on the Sun Gmail Java mail extensions, which support true server-side filtering; the performance gains in processing large folders is significant, especially for delta processing. Currently, the only server-side gmail filter is the after: filter but more can be added as needed.\n\n3) I also fixed an issue with the ClassLoader and Java Activation API where some messages were not being processed correctly unless the Thread's context class loader is the one that loaded the activation classes. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13970972",
            "date": "2014-04-16T12:56:46+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-13975979",
            "date": "2014-04-21T20:17:20+0000",
            "content": "I'm working on another patch that adds tests for delta processing. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14048268",
            "date": "2014-06-30T22:44:56+0000",
            "content": "Here's an updated patch that's close to being ready for commit. However, I've changed a few things in the implementation but I believe it still meets the spirit of Peter's original work. Mainly, this patch removes support for the delta-import command and instead only does full-import with support for using the last_index_time from the previous run as the value for the fetchMailsSince filter. \n\nThe delta-import stuff is really for importing updates to existing rows and the MailEntityProcessor was sort of hijacking that behavior. More to the point, I couldn't get the DocBuilder#collectDelta code to work with the rows generated by the MailEntityProcessor#nextModifiedRowKey. Put simply, nextModifiedRowKey was returning new mails that occurred after the fetchMailsSince date filter and the DocBuilder was processing them like they were updates to pre-existing rows.\n\nThus, I felt is better to just support full-import and then have the code set the fetchMailsSince filter based on the last_index_time set by the DIH framework, which gets persisted in dataimport.properties. Of course if that property is not set, then the code falls back to fetchMailsSince from the config. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14049082",
            "date": "2014-07-01T17:13:47+0000",
            "content": "Commit 1607147 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1607147 ]\n\nSOLR-2245: Numerous improvements to the MailEntityProcessor "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14049505",
            "date": "2014-07-02T01:14:53+0000",
            "content": "Commit 1607221 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1607221 ]\n\nSOLR-2245: Add sha1 files for greenmail, gimap, and sun java mail. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14050776",
            "date": "2014-07-02T22:00:59+0000",
            "content": "Commit 1607489 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1607489 ]\n\nSOLR-2245: Reverting due to unclear license for greenmail "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14050785",
            "date": "2014-07-02T22:06:40+0000",
            "content": "Tim, I have reverted your commit because the licensing terms for greenmail aren't clear. Their website says ASL 2.0 but I peeked into some of their source files and all of them have a header saying that they are licensed according to LGPL. This is a red flag and we need to tread carefully. There are plenty of ASL projects using greenmail and maybe I am just being paranoid but after consulting with Steve Rowe, I thought it safer to just revert the commit and get more clarity on the licensing issue.\n\nExample:\nhttp://grepcode.com/file/repo1.maven.org/maven2/com.icegreen/greenmail/1.3.1b/com/icegreen/greenmail/store/MailMessageAttributes.java "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14050810",
            "date": "2014-07-02T22:28:47+0000",
            "content": "Redhat apparently had the same licensing realization as you, Shalin, though from a different perspective (AFAIK they aren't bound by ASL compatibility):\n\n\n\tthe bug they filed with the greenmail project (no response): https://sourceforge.net/p/greenmail/bugs/8/\n\tthe Redhat bugzilla issue: https://bugzilla.redhat.com/show_bug.cgi?id=1059805\n\tthe \"Fedora hosted\" tracker issue: https://fedorahosted.org/fpc/ticket/392\n\n\n\nThe third link has lots of info, though mostly related to issues around whether it was okay to accept an effective partial fork of Apache James. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14050875",
            "date": "2014-07-02T23:45:29+0000",
            "content": "FWIW: \n\n\n\teverything but the source headers seems to agree that greenmail is ASL licensed...\n\t\n\t\tSF.net license label added by project maintainer: http://sourceforge.net/projects/greenmail/ -> http://sourceforge.net/directory/license:apache2/\n\t\tproject website: http://www.icegreen.com/greenmail/ -> http://www.apache.org/licenses/LICENSE-2.0.txt\n\t\tmaven pom.xml: http://sourceforge.net/p/greenmail/code/HEAD/tree/trunk/pom.xml#l18\n\t\tlicense.txt shpped with project: http://sourceforge.net/p/greenmail/code/HEAD/tree/trunk/license.txt\n\t\n\t\n\tfrom what i can tell, even files copied verbatim from Apache James, w/o any modifications, have the exact same LGPL copyright header - which smells like a straight up IDE generated header mistake to me.\n\tthere is a feedback page on the icegreen.com domain that links to contact details on another site \u2013 i suppose you could try reaching out to the dev that way: http://www.icegreen.com/greenmail/feedback.html -> http://waelchatila.com/pages/consulting.html\n\tgreenmail appears to be the epitome of a completely dead project \u2013 any resolution of this issue that involves on waiting for developer response / action is probably a bad idea...\n\t\n\t\tLatest code commit: 2010-06-03 http://sourceforge.net/p/greenmail/code/HEAD/tree/\n\t\tissue tracker contains 8 bug reports going back to 2009-03-15, none of which have ever recieved a comment from any project developer: http://sourceforge.net/p/greenmail/bugs/\n\t\tmost recent mailing list postings from project dev:\n\t\t\n\t\t\tlatest reply to user list from a dev: Jan 2010 - http://sourceforge.net/p/greenmail/mailman/message/24321407/\n\t\t\tlatest release announcement list message: Dec 2007 - http://sourceforge.net/p/greenmail/mailman/greenmail-announcement/\n\t\t\n\t\t\n\t\tproject website has a \"blog\" link that redirects to another domain (same as contact details) where most recent \"greenmail\" blog is 1.3 release announcement from 2007: http://www.icegreen.com/articles -> http://waelchatila.com/ -> http://waelchatila.com/tags/greenmail/\n\t\n\t\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14050897",
            "date": "2014-07-03T00:12:00+0000",
            "content": "ASF projects I found that depend on greenmail for testing purposes - there are probably others - here are the pom.xml files that have this dependency:\n\n\n\tApache Syncope: http://svn.apache.org/repos/asf/syncope/trunk/pom.xml\n\tApache Geronimo: https://svn.apache.org/repos/asf/geronimo/javamail/trunk/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/pom.xml\n\tApache OODT: http://svn.apache.org/repos/asf/oodt/trunk/protocol/imaps/pom.xml\n\tApache Oozie: https://git-wip-us.apache.org/repos/asf?p=oozie.git;a=blob;f=pom.xml;h=bad1e0fbee619f2e5020733792c4a09256b69dcf;hb=master\n\tApache Axis2: http://svn.apache.org/repos/asf/axis/axis2/java/core/trunk/modules/transport/mail/pom.xml\n\n\n "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14051457",
            "date": "2014-07-03T13:55:43+0000",
            "content": "Thanks for digging into this guys! I have no affinity towards GreenMail, other than it was very easy to use from JUnit. Is CDDL 1.0 suitable? If so, this MockJavaMail project looks promising too: https://java.net/projects/mock-javamail "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14051460",
            "date": "2014-07-03T14:01:11+0000",
            "content": "Is CDDL 1.0 suitable?\n\nIt's suitable, but in the second tier in terms of desirability. Really only matters if license is the deciding factor for some reason though. It's suitable if it's correctly handled in NOTICES and such. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14051477",
            "date": "2014-07-03T14:07:32+0000",
            "content": "Is CDDL 1.0 suitable?\n\nCDDL 1.0 is fine. The limitation here is that it must be listed correctly in the NOTICE.txt file. We have other JAR files with this license, the most common one is servlet-api.jar, but there are also others. See the NOTICE.txt:\n\n\nJavaMail API 1.4.1: https://glassfish.dev.java.net/javaee5/mail/\nLicense: Common Development and Distribution License (CDDL) v1.0 (https://glassfish.dev.java.net/public/CDDLv1.0.html)\n\nJavaBeans Activation Framework (JAF): http://java.sun.com/products/javabeans/jaf/index.jsp\nLicense: Common Development and Distribution License (CDDL) v1.0 (https://glassfish.dev.java.net/public/CDDLv1.0.html)\n\nJersey Core: https://jersey.java.net/\nLicense: Common Development and Distribution License (CDDL) v1.0 (https://glassfish.dev.java.net/public/CDDLv1.0.html)\n\nServlet-api.jar and javax.servlet-*.jar are under the CDDL license, the original\nsource code for this can be found at http://www.eclipse.org/jetty/downloads.php\n\n\n\nSee also: http://www.apache.org/legal/3party.html (Category B: Reciprocal Licenses) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14051696",
            "date": "2014-07-03T17:14:54+0000",
            "content": "FYI: Even though it looks like we are going to avoid greenmail, i filed LEGAL-206 to track the impacts on other ASF projects. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14054236",
            "date": "2014-07-07T22:12:26+0000",
            "content": "Here's a patch for trunk that removes the use of GreenMail, so unfortunately, at this point we're no better off from a unit testing perspective.\n\nI tried the aforementioned mock JavaMail stuff and it is too forgiving / assumes too much to be useful for testing a lot of the MailEntityProcessor logic.\n\nAlso, I found the hupa mock sub-project in Apache James and that looked promising, see: http://james.apache.org/hupa/apidocs/org/apache/hupa/server/mock/package-summary.html. However, after spending several hours trying to get that to work, I had quite a mess trying to work around issues. For instance, the MailEntityProcessor depends on imapFolder.getType to return a valid value, but the hupa MockIMAPFolder only returns 0 (just throws the given type during create away). GreenMail was very clean and allowed for testing all functionality needed by MailEntityProcessor, hupa seemed buggy / half implemented.\n\nAt this point, I have bigger issues to concentrate on. Let me know if we think we want to commit this patch as-is with @Ignores in the unit test. The improvements to the MailEntityProcessor would be nice to have. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14060024",
            "date": "2014-07-13T06:55:44+0000",
            "content": "At this point, I have bigger issues to concentrate on. Let me know if we think we want to commit this patch as-is with @Ignores in the unit test. The improvements to the MailEntityProcessor would be nice to have.\n\n+1 to commit. I have looked through the patch and these are nice improvements. Let's commit this and open another issue to add a test. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14061115",
            "date": "2014-07-14T19:49:17+0000",
            "content": "Let's commit this and open another issue to add a test.\n\n+1\n\nAlternatives to greenmail mentioned on the dev mailing list thread I started with the five ASF projects mentioned on LEGAL-206: \n\n\n\tjavamail-mock2: https://github.com/salyh/javamail-mock2\n\tSubEtha SMTP: https://code.google.com/p/subethasmtp/\n\n\n "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14061132",
            "date": "2014-07-14T19:59:24+0000",
            "content": "javamail-mock2 actually looks very promising! I'll kick the tires on it tomorrow AM and regardless of outcome, will commit to trunk (with or without unit test) "
        },
        {
            "author": "jmlucjav",
            "id": "comment-14061242",
            "date": "2014-07-14T21:04:16+0000",
            "content": "\nSubEtha SMTP: https://code.google.com/p/subethasmtp/\n\nSubEthaSmtp works really well, but, I guess here it is of no use, as he needs an Imap server, and subetha only does smtp, right? "
        }
    ]
}