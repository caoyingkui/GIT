{
    "id": "SOLR-874",
    "title": "Dismax parser exceptions on trailing OPERATOR",
    "details": {
        "affect_versions": "1.3",
        "status": "Open",
        "fix_versions": [
            "6.0"
        ],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Dismax is supposed to be immune to parse exceptions, but alas it's not:\n\nhttp://localhost:8983/solr/select?defType=dismax&qf=name&q=ipod+AND\n\nkaboom!\n\nCaused by: org.apache.lucene.queryParser.ParseException: Cannot parse 'ipod AND': Encountered \"<EOF>\" at line 1, column 8.\nWas expecting one of:\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    \"(\" ...\n    \"*\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    \"[\" ...\n    \"{\" ...\n    <NUMBER> ...\n    <TERM> ...\n    \"*\" ...\n\n\tat org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:175)\n\tat org.apache.solr.search.DismaxQParser.parse(DisMaxQParserPlugin.java:138)\n\tat org.apache.solr.search.QParser.getQuery(QParser.java:88)",
    "attachments": {
        "SOLR-874.patch": "https://issues.apache.org/jira/secure/attachment/12413482/SOLR-874.patch",
        "SOLR-874-1.3.patch": "https://issues.apache.org/jira/secure/attachment/12425657/SOLR-874-1.3.patch",
        "SOLR-874-1.4.1.patch": "https://issues.apache.org/jira/secure/attachment/12469975/SOLR-874-1.4.1.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-12649505",
            "date": "2008-11-20T22:18:40+0000",
            "content": "Support for AND and OR escaping needed - only I hate to see a scan for AND and OR on every term for every query just to support this...but to quote Erik: \"dismax is not to generate a parse error\", so I guess it can't be helped?\n\nMy real dream would be to get those darn unprecedent working AND and OR oddities out of Lucene syntax... "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-12730492",
            "date": "2009-07-13T20:23:25+0000",
            "content": "I get the same sort of exception with a leading operator and the dismax handler.\n\n\nJul 13, 2009 1:47:06 PM org.apache.solr.common.SolrException log\nSEVERE: org.apache.solr.common.SolrException:\norg.apache.lucene.queryParser.ParseException: Cannot parse 'OR vti OR bin OR vti OR aut OR author OR dll': Encountered \" <OR> \"OR \"\" at line\n1, column 0.\nWas expecting one of:\n   <NOT> ...\n   \"+\" ...\n   \"-\" ...\n   \"(\" ...\n   \"*\" ...\n   <QUOTED> ...\n   <TERM> ...\n   <PREFIXTERM> ...\n   <WILDTERM> ...\n   \"[\" ...\n   \"{\" ...\n   <NUMBER> ...\n   <TERM> ...\n   \"*\" ...\n\n       at org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:110)\n       at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:174)\n       at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:131) "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-12730513",
            "date": "2009-07-13T21:07:23+0000",
            "content": "possibly a fix could be rolled into this existing method in SolrPluginUtils.java ?\n\n\n  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n\n\nThis seems only to be called from:\n\norg/apache/solr/search/DisMaxQParser.java:156:      userQuery = SolrPluginUtils.stripIllegalOperators(userQuery).toString(); "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-12731134",
            "date": "2009-07-14T21:26:26+0000",
            "content": "Here's a simple patch that escapes with a \\.  It prevents the exception, however, this fails to match and/or/not (after removing those from the stopwords file) so it's clearly not quite right.\n "
        },
        {
            "author": "Michael Haag",
            "id": "comment-12731292",
            "date": "2009-07-15T06:00:16+0000",
            "content": "Peter, thanks for keeping our support group in the loop on this  \nissue.  Just to make sure I understand:  your patch below would work  \nok for Acquia hosted search since our dismax handler config doesn't  \nmake use of boolean expressions anyway.  Correct?\n\n   -m\n\n\nOn Jul 14, 2009, at 5:27 PM, Peter Wolanin (JIRA) wrote:\n\n\n     [ https://issues.apache.org/jira/browse/SOLR-874?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel \n  ]\n\nPeter Wolanin updated SOLR-874:\n-------------------------------\n\n    Attachment: SOLR-874.patch\n\nHere's a simple patch that escapes with a \\.  It prevents the  \nexception, however, this fails to match and/or/not (after removing  \nthose from the stopwords file) so it's clearly not quite right.\n\n\n\n\n\u2013 \nThis message is automatically generated by JIRA.\n-\nYou can reply to this email to add a comment to the issue online.\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12736640",
            "date": "2009-07-29T14:20:49+0000",
            "content": "There is also a problem with && and || "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-12771932",
            "date": "2009-10-30T12:49:23+0000",
            "content": "Anyone have an approach for this bug so we can get it fixed before 1.4 is done? "
        },
        {
            "author": "Jake Brownell",
            "id": "comment-12774484",
            "date": "2009-11-06T23:19:44+0000",
            "content": "I've also observed dismax blow up if the query starts with more than a single dash, e.g. --john grisham. It doesn't appear to mind multiple leading dashes elsewhere in the query string. "
        },
        {
            "author": "Chris Darroch",
            "id": "comment-12780760",
            "date": "2009-11-20T20:50:33+0000",
            "content": "Hi, I'm one of the httpd devs but I thought I'd throw in this patch for Solr 1.3 (I'll try to make one for trunk later) which handles a number of the issues raised in this report for us.\n\nFirst, & and | are escaped, and the dismax logic is changed a little so that if the various query-munging methods return a blank string, we fall back to using the configured default query.\n\nNext, consecutive + or - chars are flattened to a single char; this handles cases where a user might accidentally type --foo when they just mean -foo.\n\nStrings of mixed + and - chars are removed, since we have no way of knowing the user's intent without something like +-foo or similar.\n\nTogether these two steps handle one of the reported cases where the query starts with multiple + or - operators.\n\nAny remaining + or - chars which trail the last term, or which have whitespace on their right side, are removed.  Our users found it puzzling in the extreme that a search on \"questions 1 - 10\" explicitly excluded results with \"10\" in them, because \"- 10\" is treated as -10.  So we just remove any + or - operators which aren't right up against the following term.\n\nFinally, we escape AND, OR, and NOT when they appear outside of quotes, and remove any trailing unmatched quote.  This changes the previous behaviour which removes all quotes if they aren't perfectly balanced; we felt this was more in line with what users expect if they mistype and enter an extra quote char.\n\nSo far I haven't been able to generate any Lucene query parser exceptions with this code, but it doesn't mean it's perfect, obviously \u2013 there may still be some way to slip an invalid Lucene query past it.  But I'm cautiously optimistic that it covers all or most of the issues raised so far in the thread. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872470",
            "date": "2010-05-27T22:05:59+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Geoffrey Young",
            "id": "comment-12916606",
            "date": "2010-09-30T18:59:46+0000",
            "content": "I stumbled on this bug while researching something else, but we've hit the \"trailing AND\" condition as well...\n\nI just want to add the following use case for this fix:\n\n  Portland, OR\n\nwhatever fix is implemented properly account for and handle cases where the trailing operator isn't an operator at all  "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-12920739",
            "date": "2010-10-13T20:01:55+0000",
            "content": "It seems that a bare double quote mark also causes an exception. "
        },
        {
            "author": "Johannes",
            "id": "comment-12989376",
            "date": "2011-02-01T20:37:41+0000",
            "content": "This is a version of the patch that works against the 1.4.1 branch. \nAll our local tests indicates that it works as intended. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12989744",
            "date": "2011-02-02T18:55:29+0000",
            "content": "Johannes - thanks!  Test cases look thorough from a glance.   Kinda hairy stuff in there, so give me a few days to scratch my head and review this, but something worthwhile getting fixed finally.  \n\nMany other commenters on this issue - maybe we can get a few more folks to try this out and confirm it fixes their cases too.  \n "
        },
        {
            "author": "James Gilliland",
            "id": "comment-13018502",
            "date": "2011-04-11T18:48:58+0000",
            "content": "I don't know if its directly related to this issue but I found the same error with people searching for \"foo AND - AND bar\" "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043776",
            "date": "2011-06-03T16:47:00+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106399",
            "date": "2011-09-16T14:50:54+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13144038",
            "date": "2011-11-04T14:05:13+0000",
            "content": "Bump. Apologies for letting this issue collect dust.   Any +1's or -1's to the patches?  I'll aim to commit within a week after a deeper review barring any objections. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412075",
            "date": "2012-07-11T22:25:55+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429898",
            "date": "2012-08-07T03:44:07+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Alexander S.",
            "id": "comment-13442059",
            "date": "2012-08-26T08:36:16+0000",
            "content": "Hi, sorry for asking this here, but is the next error related to this issue?\n\nAug 26, 2012 8:36:24 AM org.apache.solr.common.SolrException log\nSEVERE: org.apache.solr.common.SolrException\n        at org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:134)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:165)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1376)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:365)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:260)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:405)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:279)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:515)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:300)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n        at java.lang.Thread.run(Thread.java:679)\nCaused by: org.apache.lucene.queryParser.ParseException: Cannot parse '\"hgps\" \"hhho\" \"hhrh\"  ...truncated...  \"kidney stones\" \"kidney transplant\" \"kidney trafq=type:Tweet': Lexical error at line 1, column 6783.  Encountered: <EOF> after : \"\\\"kidney trafq=type:Tweet\"\n        at org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:216)\n        at org.apache.solr.search.LuceneQParser.parse(LuceneQParserPlugin.java:79)\n        at org.apache.solr.search.QParser.getQuery(QParser.java:143)\n        at org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:105)\n        ... 21 more\nCaused by: org.apache.lucene.queryParser.TokenMgrError: Lexical error at line 1, column 6783.  Encountered: <EOF> after : \"\\\"kidney trafq=type:Tweet\"\n        at org.apache.lucene.queryParser.QueryParserTokenManager.getNextToken(QueryParserTokenManager.java:1229)\n        at org.apache.lucene.queryParser.QueryParser.jj_ntk(QueryParser.java:1772)\n        at org.apache.lucene.queryParser.QueryParser.Term(QueryParser.java:1555)\n        at org.apache.lucene.queryParser.QueryParser.Clause(QueryParser.java:1317)\n        at org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:1274)\n        at org.apache.lucene.queryParser.QueryParser.TopLevelQuery(QueryParser.java:1234)\n        at org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:206)\n        ... 24 more\n\n\n\n\"kidney trafq=\" should be \"kidney transplantation\" fq='type:Tweet', so it looks like the query string was truncated.\n\nAnd this one also looks very similar\nhttp://mail-archives.apache.org/mod_mbox/lucene-solr-user/201203.mbox/%3C007b01ccf78e$9171c1f0$b45545d0$@gmail.com%3E\n\nBest,\nAlex "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13548410",
            "date": "2013-01-09T11:33:29+0000",
            "content": "I started to dig into this for 4.1, but it's hairier than I thought with edge cases that need to be accounted for.  Moving this to 5.0 since I won't have time to deal with this for 4.1, sorry. "
        }
    ]
}