{
    "id": "SOLR-924",
    "title": "Solr: Making finalizers call super.finalize() wrapped in try..finally block",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "contrib - DataImportHandler",
            "replication (java)"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There are some occurences of finalizers in the code base. While the presence of them is debatable and discussed in a separate JIRA - the ones that are retained are better off wrapped around a try .. finally block to recursively call the finalizer of the super class for proper resource usage unwinding , (in case finalizers get invoked ).",
    "attachments": {
        "SOLR-924.patch": "https://issues.apache.org/jira/secure/attachment/12396242/SOLR-924.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Karthik K",
            "id": "comment-12657180",
            "date": "2008-12-16T21:59:08+0000",
            "content": "The following classes have their try .. finally clause implemented in finalizers set up for recursive call. \n\nIndex: contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/JdbcDataSource.java\nIndex: src/java/org/apache/solr/update/SolrIndexWriter.java\nIndex: src/java/org/apache/solr/core/SolrCore.java\nIndex: src/java/org/apache/solr/core/CoreContainer.java\nIndex: src/common/org/apache/solr/common/util/ConcurrentLRUCache.java "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12657293",
            "date": "2008-12-17T05:35:03+0000",
            "content": "Why do we need to call a super.finalize() when the super class is java.lang.Object ?\n\nIt achieves no purpose\n\n\n "
        },
        {
            "author": "Karthik K",
            "id": "comment-12657421",
            "date": "2008-12-17T15:25:24+0000",
            "content": "Not all of them seems to inherit from Object ( JdbcDataSource inherits from DataSource<?> ).  SolrIndexWriter from IndexWriter  etc.  So - to ensure proper cleanup of resources - we need to be having the try .. finally block around finalizers.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12657669",
            "date": "2008-12-18T04:34:49+0000",
            "content": "DataSource<?> is just an interface defined as an abstract class. For others it may be worth it.\n\nWe do not have to be religious about this. if the superclass is doing something in the finalize then it is worth adding this or else we can drop it "
        },
        {
            "author": "Karthik K",
            "id": "comment-12657675",
            "date": "2008-12-18T05:09:29+0000",
            "content": "\n\n\n DataSource<?> is just an interface defined as an abstract class. For others it may be worth it.\n\n\n\n\n\nI believe we might as well be consistent when making changes instead of excluding based on specific super class implementation.  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12657702",
            "date": "2008-12-18T07:40:06+0000",
            "content": "What Kay is suggesting is a pretty well established \"best practice\" .. even if you know the super class has an empty finalize method it's still a good idea to call super.finalize() in a finally block because you have no garuntee someone else won't modify the implementation of the super class in a future version.  even when you subclass Object, super.finalize() is a good idea to protect yourself against yourself: future refactoring could inject a new super class (which could then gain a non-trivial finalize method)\n\ni really see no downside to the patch "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12658320",
            "date": "2008-12-20T20:03:46+0000",
            "content": "Committed revision 728336.\n\nthanks Kay. "
        },
        {
            "author": "Karthik K",
            "id": "comment-12658331",
            "date": "2008-12-20T23:01:10+0000",
            "content": "Thanks HossMan for committing the same.  "
        }
    ]
}