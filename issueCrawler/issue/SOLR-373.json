{
    "id": "SOLR-373",
    "title": "Build a JDBC driver to access Solr",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "search",
            "update"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Hello!\n\nWould it be a good thing to have a JDBC driver to access Solr? This would help people only knowing SQL syntax. And you can use things like Hibernate on top of that. Maybe this is a good alternative to Solrj. In the first run I would not allow any joins.\n\nI think of a SQL syntax like\n\nSELECT * FROM SOLR WHERE name='Albert' OR name='Einstein'\n\nwhich gets translated to a Solr query like\n\nq=name:Albert OR name:Einstein&fl=*\n\nWhat do you think?\n\nCU\nThomas",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yousef Ourabi",
            "id": "comment-12532478",
            "date": "2007-10-04T16:44:14+0000",
            "content": "Thomas,\n[ I'm not a solr-dev, these are just my thoughts / opinions ] \n\nI think that's a really horrible idea. That would promote the idea that solr is a relational database, and not a search index (inverted index).  Here are my\n\n>> This would help people only knowing SQL syntax\nI think the query syntax is actually simpler than sql, anyone can pick it up in an hour or so of playing around with the documentation.\n\n>> In the first run I would not allow any joins.\nThat's the entire point of a relational database, see first paragraph, solr/lucene is not a relational database.\n\n-Yousef "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12543408",
            "date": "2007-11-18T21:07:57+0000",
            "content": "What do you see as the value for a JDBC driver?  Are there good examples of packages that would \"just work\" if solr had a JDBC driver?\n\nBeyond a toy examples, stuffing a solr response into rows/columns will get very limiting very fast.   "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12554616",
            "date": "2007-12-27T21:47:09+0000",
            "content": "I'll close the issue now...  feel free to re-open it if you have a patch.\n\nIn the future, it may be a good idea to pass ideas through the user groups to get some initial feedback. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12554927",
            "date": "2007-12-29T16:03:34+0000",
            "content": "Actually, a fun exercise around this might be interesting and might be more suitable for Lucene, a SQL SELECT to Lucene Query converter.  I'm not sure if there is a real need for this, but it might be interesting to do this, and new ideas may come up during the development. "
        },
        {
            "author": "Ian Holsman",
            "id": "comment-12571293",
            "date": "2008-02-22T07:24:01+0000",
            "content": "another alternative would be to use something like sphinx (http://www.sphinxsearch.com/).\nWhile it isn't lucene, it might be better for your needs. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15541292",
            "date": "2016-10-03T01:30:19+0000",
            "content": "JDBC is now implemented as of Solr 6. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15541694",
            "date": "2016-10-03T06:50:03+0000",
            "content": "Closing as \"Duplicate\" instead of \"Later\" "
        }
    ]
}