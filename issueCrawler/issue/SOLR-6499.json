{
    "id": "SOLR-6499",
    "title": "Log warning about multiple update request handlers",
    "details": {
        "affect_versions": "4.10",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Solr 4.10.0 logs the following warning upon startup:\n\n\nWARN  - 2014-09-09 17:49:11.455; org.apache.solr.core.RequestHandlers; Multiple requestHandler registered to the same name: /update ignoring: org.apache.solr.handler.UpdateRequestHandler\n\n\n\nI've just started the Solr example with bin/solr start to get this warning in example/logs/solr.log\n\nI don't know if this indicates a real problem but it seems everything works fine despite the warning.",
    "attachments": {
        "SOLR-6499.patch": "https://issues.apache.org/jira/secure/attachment/12667922/SOLR-6499.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-14129079",
            "date": "2014-09-10T20:52:42+0000",
            "content": "This is because the \"/update\" handler was made implicit SOLR-6302 (so even if it's not in your solrconfig.xml, it will be created) but was also left in the example solrconfig.xml (for the reasons noted in the SOLR-6302 comments.\n\n\n\nIn general the problem is that since we now have implicit request handlers, we need to update the existing logic in RequestHandlers.java that checks for redundant handler definitions to be smart enough to know the difference between two handlers defined in solrconfig.xml with the same name, and a handler defined in solrconfig.xml which is intended to override an implicit handler. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14129090",
            "date": "2014-09-10T20:58:09+0000",
            "content": "noble: can you follow up with this? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14129473",
            "date": "2014-09-11T01:19:44+0000",
            "content": "I shall fix this right away "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14129519",
            "date": "2014-09-11T02:08:15+0000",
            "content": "Commit 1624181 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1624181 ]\n\nSOLR-6499 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14129529",
            "date": "2014-09-11T02:15:19+0000",
            "content": "Commit 1624182 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1624182 ]\n\nSOLR-6499 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14129531",
            "date": "2014-09-11T02:17:23+0000",
            "content": "Commit 1624183 from Noble Paul in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1624183 ]\n\nSOLR-6499 "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14315016",
            "date": "2015-02-10T21:49:12+0000",
            "content": "This is a problem in the 4.10.x releases, something that got overlooked because of the timing on the branch_4x commit.  We should backport this to the 4_10 branch so that any future 4.x releases will have the fix.\n\nIf a user is trying to override the implicit /update handler in 4.10.x versions with different config options, they will either need to apply this patch or see if there's a workaround.  For users wanting to change the update chain, they may be able to simply use default=\"true\" when defining the new chain. "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332912",
            "date": "2015-02-23T05:02:34+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}