{
    "id": "SOLR-12520",
    "title": "Switch DateRangeField from NumberRangePrefixTree to LongRange",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Since graduating Range field types in LUCENE-7740 we should consider switching SOLR's DateRangeField from using NumberRangePrefixTree in the spatial-extras module to LongRange in lucene-core. Not only will this provide a nice performance improvement but nothing will depend on NumberRangePrefixTree so it can be deprecated and removed. To maintain backcompat we could consider refactoring it from spatial-extras to SOLR and then removing it once the switch to LongRange is complete.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-26T17:46:56+0000",
            "content": "It remains to be seen how DateRangeField (NumberRangePrefixTreeStrategy + DateRangePrefixTree) compares to LongRange for realistic queries.  By realistic queries, I mean for a query such as find all indexed ranges intersecting a particular month \u2013 or similar simple intervals.  DateRangePrefixTree is deliberately aligned to useful/meaningful units of time we humans work in (at least in the Gregorian Calendar) that allow for queries to sometimes amount to visiting one term, or perhaps more terms but not a ton.  Both Lucene Points codec + the legacy numeric trie stuff it replaced were agnostic of this.  I expect that LongRange will have better indexing characteristics but that's not what's being optimized for in DateRangeField.\n\nAnother intentional purpose of DateRangeField was to allow fast faceting using the underlying terms.  That was never wired into Solr though, and there was a bug or something to be worked out. ",
            "author": "David Smiley",
            "id": "comment-16524051"
        }
    ]
}