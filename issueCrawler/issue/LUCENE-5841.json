{
    "id": "LUCENE-5841",
    "title": "Remove FST.Builder.FreezeTail interface",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/codecs"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ]
    },
    "description": "The FST Builder has a crazy-hairy interface called FreezeTail, which is only\nused by BlockTreeTermsWriter to find appropriate prefixes\n(i.e. containing enough terms or sub-blocks) to write term blocks.\n\nBut this is really a silly abuse ... it's cleaner and likely\nfaster/less GC for BTTW to compute this itself just by tracking the\nterm ordinal where each prefix started in the pending terms/blocks.  The\ncode is also insanely hairy, and this is at least a baby step to try\nto make it a bit simpler.\n\nThis also makes it very hard to experiment with different formats at\nwrite-time because you have to get your new formats working through\nthis strange FreezeTail.",
    "attachments": {
        "LUCENE-5841.patch": "https://issues.apache.org/jira/secure/attachment/12657319/LUCENE-5841.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14071525",
            "author": "Michael McCandless",
            "content": "Patch, fixing BTTW (and its forks) to do their own term -> block\nassignment w/o abusing FST.Builder, and then entirely removing the\nFreezeTail API from FST.Builder. ",
            "date": "2014-07-23T09:02:58+0000"
        },
        {
            "id": "comment-14071563",
            "author": "Han Jiang",
            "content": "It is really great to see this interface removed! ",
            "date": "2014-07-23T09:39:38+0000"
        },
        {
            "id": "comment-14071931",
            "author": "Michael McCandless",
            "content": "New patch, I just changed PendingTerm class to use byte[] not BytesRef to hold the term to save some silly garbage.  I think it's ready.\n\nAlso I ran a \"merge intensive\" perf test from Rob, first building a geonames index with lots of segments (using NoMergePolicy), and then using SerialMergeScheduler measuring how long forceMerge(1) takes, and the patch makes this a bit faster: from ~95 seconds for trunk to ~87 seconds with this change, or ~8% faster. ",
            "date": "2014-07-23T16:43:53+0000"
        },
        {
            "id": "comment-14072000",
            "author": "Robert Muir",
            "content": "Nice results. I see this tail-freezing as a hotspot frequently. ",
            "date": "2014-07-23T17:30:26+0000"
        },
        {
            "id": "comment-14073308",
            "author": "ASF subversion and git services",
            "content": "Commit 1613161 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1613161 ]\n\nLUCENE-5841: simplify how block tree terms dict assigns terms to blocks ",
            "date": "2014-07-24T15:46:57+0000"
        },
        {
            "id": "comment-14073476",
            "author": "ASF subversion and git services",
            "content": "Commit 1613235 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1613235 ]\n\nLUCENE-5841: simplify how block tree terms dict assigns terms to blocks ",
            "date": "2014-07-24T18:23:43+0000"
        },
        {
            "id": "comment-14089064",
            "author": "ASF subversion and git services",
            "content": "Commit 1616448 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1616448 ]\n\nLUCENE-5841: make sure final term blocks are the right size ",
            "date": "2014-08-07T09:32:22+0000"
        },
        {
            "id": "comment-14089070",
            "author": "ASF subversion and git services",
            "content": "Commit 1616450 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1616450 ]\n\nLUCENE-5841: make sure final term blocks are the right size ",
            "date": "2014-08-07T09:37:29+0000"
        }
    ]
}