{
    "id": "SOLR-5507",
    "title": "Admin UI - Refactoring using AngularJS",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "On the LSR in Dublin, i've talked again to Upayavira and this time we talked about Refactoring the existing UI - using AngularJS: providing (more, internal) structure and what not ;>\n\nHe already started working on the Refactoring, so this is more a 'tracking' issue about the progress he/we do there.\n\nWill extend this issue with a bit more context & additional information, w/ thoughts about the possible integration in the existing UI and more (:",
    "attachments": {
        "SOLR5507.patch": "https://issues.apache.org/jira/secure/attachment/12689883/SOLR5507.patch",
        "SOLR5507.patch.gz": "https://issues.apache.org/jira/secure/attachment/12697509/SOLR5507.patch.gz",
        "SOLR-5507.patch": "https://issues.apache.org/jira/secure/attachment/12621541/SOLR-5507.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Upayavira",
            "id": "comment-13837602",
            "date": "2013-12-03T11:37:29+0000",
            "content": "I have experimented with a simple clean rewrite, code visible here: https://github.com/upayavira/lucene-solr/tree/trunk\nor more particularly here: https://github.com/upayavira/lucene-solr/tree/trunk/solr/webapp/web\n\nThis has proven, to me at least, that an AngularJS based admin UI could be much cleaner, more concise, and easier to maintain.\n\nNow, we are exploring how we might transition from a Sammy based UI to an Angular based one, as the option of a complete rewrite followed by a swap-out really isn't practical. Thus, we'd need the ability somehow to run Sammy and Angular side-by-side for a while, implement new stuff using Angular, and gradually port over existing functionality to Angular as and when. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13859441",
            "date": "2013-12-31T11:06:22+0000",
            "content": "+1, I have been thinking the same thing lately, as I found extending the current UI to be pretty hard to do when I added doc additions.\n\nUpayavira, might be nice to put up a patch, if you can. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13859442",
            "date": "2013-12-31T11:08:11+0000",
            "content": "One of the things I would really love to see is the ability to plug in/inject new UI components.  Imagine if we had a plugin framework that could ship the back-end functionality as well as the admin piece.  After the plugin gets installed and registered, the admin piece slots in automatically. "
        },
        {
            "author": "Upayavira",
            "id": "comment-13859445",
            "date": "2013-12-31T11:18:54+0000",
            "content": "I have a prototype of a complete rewrite, that shows the technology can create clean code even on something as complex as the analysis pane.\n\nHowever, I'm stalled on the topic of how to manage a transition between the two technologies, without requiring a hard-switch between them, as that would likely be way too tough to manage.\n\nSo, we need to work out a way for the two technologies to play nicely together as an intermediate step - that's what I'm grappling with right now. "
        },
        {
            "author": "Yago Riveiro",
            "id": "comment-13859451",
            "date": "2013-12-31T11:39:26+0000",
            "content": "Upayavira, What are the reasons for keeping the two UIs working together?\n\nI understand that rewrite the whole UI is a epic task, but the time that we will spend thinking and implementing a way to have the new and the old UI working together can be used to finish the new and release it with a new release of Solr.\n\nAlso, in this transition, we will generate (most probably) new bugs and artefacts. With a point of time where we switch between both, all bugs will be about new UI. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13859456",
            "date": "2013-12-31T11:49:54+0000",
            "content": "I see know reason to keep them working together.  Do the new UI on trunk, leave the existing one on 4.x.  We have no back compat requirements for UI, AFAIK. "
        },
        {
            "author": "Upayavira",
            "id": "comment-13859461",
            "date": "2013-12-31T12:01:10+0000",
            "content": "There is a lot of code there. I have limited volunteer time. I could imagine it taking 3-6mths to get through it all. Open source development works best if the work can be done piecemeal, so we need to find a way to facilitate that, rather than getting 3/4 of the way through a 6mth project which then stalls through lack of developer time.\n\nPersonally, I think this would be a fun project, that would benefit Solr. I'd love to see us find a way to make it happen. "
        },
        {
            "author": "Upayavira",
            "id": "comment-13859463",
            "date": "2013-12-31T12:04:44+0000",
            "content": "The best way to keep something in development is to have something that is usable most of the time. If we crack that, then the transition between old and new is a set of simpler, small manageable steps, rather than a major project requiring planning/etc. "
        },
        {
            "author": "Yago Riveiro",
            "id": "comment-13859465",
            "date": "2013-12-31T12:06:31+0000",
            "content": "Ok, seems a valid argument .\n\nIf you release de code and some guide line about the architecture of the new UI, we can work in this new feature and see it in Solr soon. "
        },
        {
            "author": "Upayavira",
            "id": "comment-13859466",
            "date": "2013-12-31T12:08:53+0000",
            "content": "I'll try to put some time aside this weekend to mess further. Either with a concurrent Sammy/Angular, or a pure Angular trunk version (which I've got going already, in a hacky way). "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13859549",
            "date": "2013-12-31T16:24:09+0000",
            "content": "I see know reason to keep them working together. Do the new UI on trunk, leave the existing one on 4.x. We have no back compat requirements for UI, AFAIK.\n\nBut the best way to help find bugs in the new UI, and to encourage people to help add features, is to get it in the hands of users in releases.\n\nWhat we did with the current UI during the 3.x/4.x time frame was to have both UI code bases going under diff paths \u2013 the old JSP based UI used \"/admin\" while the new UI just used \"/\" ... you could do the same thing with an angular based UI, pick any path (maybe even \"/experimental_ui\" and anchor the new work there - commit to both trunk and the 4x branch, and start publicizing it to new users even in the 4.x releases.  if it takes off, and people like it then we eventually update trunk to mv \"/experimental_ui\" to \"/\" and remove the current stuff\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-13859566",
            "date": "2013-12-31T16:54:48+0000",
            "content": "Hoss - that could work - so long as folks do new feature development on both, or on the new one only. I'll try and come up with a patch to get this started. "
        },
        {
            "author": "Kranti Parisa",
            "id": "comment-13859692",
            "date": "2013-12-31T20:52:55+0000",
            "content": "This is cool. I was thinking on the same stuff.\n\nIt would be awesome to add a section on the Admin UI to display the CUSTOM INSTANCE INFO. \nFor example\n\nInstance: INDEXER\nVersion/Release Number: 1.0.1\nand more..\n\nThese values could be read from solrconfig.xml or so. Solr could be installed as INDEXER (Master) and QUERYENGINE (Slave) on different data centers with different versions in a typical production environment.\n\nIt would be nice to have a facility to write some custom info into solrconfig.xml or so during the installation and that can be displayed right on the Solr Admin UI.\n "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13862230",
            "date": "2014-01-04T07:07:52+0000",
            "content": "\nOne of the things I would really love to see is the ability to plug in/inject new UI components. Imagine if we had a plugin framework that could ship the back-end functionality as well as the admin piece. After the plugin gets installed and registered, the admin piece slots in automatically.\n\nSimilar to this, if this new admin UI lent itself to people packaging different things with Solr and having information about them easily exposed in the admin UI, that may result in livelier ecosystem around Solr. "
        },
        {
            "author": "Upayavira",
            "id": "comment-13862242",
            "date": "2014-01-04T08:23:36+0000",
            "content": "i.e. allow some of the JS etc to be defined in solrconfig or equivalent, allowing for more natural extension points. Interesting idea.\n\nAnd here's one to annoy Stefan. I'd really like to see if we can use Bootstrap. That is, overlay Stefan's visuals on top of a Bootstrap (or Bootstrap style) CSS. This, in my view, would also make it much easier for non-visual devs to make decent UI components by just copying stuff that already works. "
        },
        {
            "author": "Yago Riveiro",
            "id": "comment-13862393",
            "date": "2014-01-04T19:39:24+0000",
            "content": "+1 for use bootstrap.\n\nWith an UI tool library with components to use \"as is\" and a plugin system,  we will see a lot of new stuff inside the UI and this is good for the community.\n "
        },
        {
            "author": "Kranti Parisa",
            "id": "comment-13862486",
            "date": "2014-01-05T03:46:02+0000",
            "content": "+1 for plugin/component capabilities. That would bring in lot of creativity and many useful features. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13862556",
            "date": "2014-01-05T13:41:30+0000",
            "content": "Just for the record, the VelocityResponseWriter has always supported templates coming from the \"resource loader\", meaning that templates can be packaged into plugin .jar files and they are then accessible by name using the v.template parameter.  The idea was to allow 3rd party plugins to ship with UI as well as behavior. "
        },
        {
            "author": "Upayavira",
            "id": "comment-13862689",
            "date": "2014-01-05T23:42:49+0000",
            "content": "First pass. This patch works alongside the existing UI. It:\n\n\n\tbrings in a basic Angular framework\n\tenables the 'cores' menu\n\tstarts getting the main 'index' page infrastructure ready.\n\n\n\nA lot more to come, but hopefully this gives folks an idea of what it might look like.\n\nI imagine at the point where we scrap the old one and switch, we'll move all the files out of angular directories to one level up.\n\nMy next task is to get the index page actually working correctly. The work involved is really understanding what all the necessary parts are on the existing page, and porting it over to the new framework. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14257235",
            "date": "2014-12-23T17:16:46+0000",
            "content": "There is a ton of stuff we need to do to make this \"modern\" and \"cloud friendly\". I created SOLR-6082 as an umbrella some time ago, there are some JIRAs linked to that one as well, so I figure to link it in here.\n\nThis really is an epic task, I should think that using the experimental_ui end point (or whatever) would be a great place to start and would allow multiple people to contribute. Personally I have no objection to checking in just the framework that doesn't actually do anything then iterate. Others may beg to differ of course.\n\nOne thing that's been on my mind; the current Admin UI has its roots in the single-server days, with SolrCloud added on. Is there a clean way to make SolrCloud support a first-class citizen? For instance, what would be really cool is to be able to see all your servers whether or not they had a collection, ctrl_click on, say, 3 of them and be able to create a collection on those three..... Clicking a configset say... you see where this is going ... "
        },
        {
            "author": "Upayavira",
            "id": "comment-14259352",
            "date": "2014-12-27T11:44:28+0000",
            "content": "I've started working on this. I suspect it could be easier than I thought.\n\nSee: https://github.com/upayavira/solr-angular-ui/tree/solr5507 in solr/webapp/web. If you load http://localhost:8983/solr/index.html, you'll see the new UI, which is currently extremely bare-bones, just supporting some basic service calls. Next task is to get the wrapper HTML up and working, then make paging work, then start working through each page one at a time.\n\nto Erick Erickson: Your comments are good. My aim is to replicate the functionality of the existing UI, at least to get a reasonable distance into that, and then allow us to think about what sort of UI we really want. For example, if you start up a Solr with no cores or collections, you should be prompted with a page offering to create one for you. No idea when 5.0 is due to arrive, but I'm gonna try and run quickly with this in the hope that we can have some funky new UI features to help make 5.0 more special - working alongside the bin/solr stuff. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14259440",
            "date": "2014-12-27T18:07:37+0000",
            "content": "Upayavira Grabbed the code from your fork and compiled. The index.html URL gives me just a json response. Which is fine if that's what you expect, I know it's still very early going. I'm wondering though whether I'm missing a library or something, in which case I'll just be patient \n\nHere's a thought though. IMO, the biggest shortcoming of the current UI is that it's not SolrCloud-friendly. What do you think about prioritizing spiffy new SolrCloud-friendly stuff before replicating the current functionality? True, people would be flipping back and forth between the two for a while, but spiffy new cloud stuff would add functionality...\n\nIt's up to the people doing the work of course, this is just a comment from the \"peanut gallery\", people doing the work get to decide ...\n\nEither way, the infrastructure needs to be in place first I'd guess. Thanks for taking this on!\n\nWheeeee! Here we go! "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-14259455",
            "date": "2014-12-27T18:55:56+0000",
            "content": "This issue has gotten confused. Please clarify the summary and description to inform readers whether the intention is:\n\n1. Simply \"refactor\" the implementation to make the code more maintainable and extensible.\n2. Add features to the existing UI to cater to advanced users.\n3. Revamp the UI itself to cater to new and novice users.\n4. Replace the existing UI or supplement it with two UI's, one for novices (guides them through processes) and one for experts (access more features more easily.)\n\nIOW, what are the \"requirements\" here?\n\nI'm not opposed to any of the above, but the original issue summary and description seemed more focused on the internal implementation rather than the externals of a new UI. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14259493",
            "date": "2014-12-27T21:20:37+0000",
            "content": "The way I see it, this ticket is about changing the underlying infrastructure to be one that is more amenable to extension.\n\nAny other features/extensions that this should make possible will occur within their own tickets.\n\nWhether we go for a complete rewrite, then add new features, or do a partial rewrite, or what, who knows, but as you are suggesting, Jack Krupansky, this ticket is merely relating to the feature-for-feature rewrite.  All I ask, though, is that you forgive the occasional burst of ebullient enthusiasm! "
        },
        {
            "author": "Upayavira",
            "id": "comment-14259524",
            "date": "2014-12-27T23:57:46+0000",
            "content": "The code on github ( https://github.com/upayavira/solr-angular-ui/tree/solr5507 in solr/webapp/web ) just got waaaay better. The paging is there (in principle) and the first page - the index page, with the graphs on the right, is implemented. This should be a feature for feature match.\n\nI shall just work down, one page at a time now. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-14259525",
            "date": "2014-12-27T23:59:45+0000",
            "content": "Do you know how you are planning to address the admin-extra pages? They are useful but had issues with global style resets, so were not used much. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14259529",
            "date": "2014-12-28T00:14:30+0000",
            "content": "Personally, I hope they will go away quietly. Beyond that, I haven't thought about it yet. This will be much more extensible, so perhaps we just allow people to add new pages as and when.\n\nWhat have people used them for, and what are 'global style resets'? "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-14259532",
            "date": "2014-12-28T00:21:18+0000",
            "content": "Well, the benefits were that they were a file with the collection config, so that was - theoretically - an easy way to do a collection-specific add-on, including extra pages in the menu tree. I am not sure if having Admin UI in AngularJS will by itself solve the same use case. Unless you building-in some fancy magic router.\n\nAs to the global style resets, the default CSS was  AFAIK resetting all the styles (headers, etc). So, if you just wanted a quick admin-extra page, your font was set to 12 points and so were all your headers. So, it was fairly painful. The solution would have been to have the CSS styles reset scoped so it did not affect the included extra pages. But nobody ever worked on it. I am not sure if there was even a JIRA. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14259635",
            "date": "2014-12-28T13:39:54+0000",
            "content": "Erick Erickson please feel free to make a dependent issue for your SolrCloud enhancement, it is a good idea that shouldn't be lost. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-14259657",
            "date": "2014-12-28T15:33:50+0000",
            "content": "All I ask, though, is that you forgive the occasional burst of ebullient enthusiasm!\n\nNo need for it to be forgiven... all ebullient enthusiasm is always welcome and encouraged. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14259692",
            "date": "2014-12-28T18:18:46+0000",
            "content": "My desire here is for the really annoying error messages to go away if the files are misplaced...\n\nI have no real feel for whether they are useful enough to try to keep around anyway, up to the people doing the work of course. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14259729",
            "date": "2014-12-28T21:42:21+0000",
            "content": "Upayavira Added a comment to SOLR-6082 about prioritization, I think that's enough.\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-14261118",
            "date": "2014-12-30T14:23:59+0000",
            "content": "index and logging pages complete on the github branch. The only difference I can see is the fact that column widths are different on the logging page. Otherwise, it should be a feature-for-feature match. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14263256",
            "date": "2015-01-02T21:46:42+0000",
            "content": "\"Connection lost\" functionality implemented. It intercepts errors on all HTTP requests, and shows a \"connection lost\" dialog. It continues to retry, until, when it succeeds, shows a \"connection recovered\" message and then proceeds where it left off.\n\n\"loading\" functionality is there in the backend, and shows ugly on the front end. I'd appreciate ideas as to how to show that we are \"loading\" some data. I've got a spinning circle (see the logging page), but am not yet sure where to put it!\n\n\"http errors\" - non-timeouts should give an error message at the top of the page with a red 'exception' heading.\n\nUnlike pretty much everything else I've done, this is new code, not a simple refactoring of the existing, so I would appreciate some folks trying it out. Kill Solr - restart it, make Solr return http errors, see if they display well. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14263261",
            "date": "2015-01-02T21:57:44+0000",
            "content": "Attached a patch, against branch_5x when this project started (a few weeks ago). Created in git, I believe will apply to SVN checkout with:\n\ncd $workspace/solr/webapp/web\npatch -p0 < SOLR5507.patch "
        },
        {
            "author": "Upayavira",
            "id": "comment-14265954",
            "date": "2015-01-06T11:00:49+0000",
            "content": "Status:\n\n\tMain page: complete excepting searchable cores dropdown\n\tDashboard: complete\n\tLogging: complete\n\tLogging levels: requires jstree impl or replacement\n\tCore admin: partially done\n\tJava properties: not done\n\tThread Dump: complate\n\tOverview: partial\n\tAnalysis: not done\n\tData import: not done\n\tDocuments: not done\n\tFiles: not done\n\tPing: not done\n\tPlugins/stats: not done\n\tQuery: not done\n\tReplication: not done\n\tSchema Browser: not done\n\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-14276801",
            "date": "2015-01-14T11:20:35+0000",
            "content": "Query tab is done.\n\nAnyone willing to commit this, so that more folks can play/find bugs? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14277109",
            "date": "2015-01-14T15:58:03+0000",
            "content": "And here I was just wondering what I'd do today after I finish up a document....\n\nLet me give it a quick spin. Some questions:\n\n> I'm assuming that this doesn't affect the current admin UI so it's optional in that sense, right?\n> The patch from the 2nd is the current one? \n> Let's assume that by the time 5.1 rolls around we don't want to show this for some reason, say we want to polish more. Can we make this change invisible by just removing index.html or other simple step that leaves the bulk of the code there but just doesn't allow people to find it?\n\nShalin just set the 5.0 RC label, which means the timing is fortuitous as we can put it on both trunk and 5.1 and have time for it to bake.\n\nSo, assuming there are no objections I'll commit this Real Soon Now (maybe today, but I'm always over-optimistic) and open an umbrella JIRA for additional work. I'm guessing that you can think of about a dozen sub-JIRAs off the top of your head, maybe we can get some additional fingers on keyboards once the structure is in place.. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14277492",
            "date": "2015-01-14T19:16:22+0000",
            "content": "Erick,\n\nI have been careful to keep it alongside the current admin UI, which is unaffected.\n\nVisit http://localhost:8983/solr/index.html to see the new one.\n\nThe only change that would be done to make this the real one is to make it render index.html, not admin.html at the root /solr/ URL.\n\nI can upload a new patch. I have been working off my github fork, which contains the latest.\n\nRemoving index.html will make this invisible, as you suggest.\n\nAs to sub-tasks, what I'm finding is that there are some JS libraries used, such as jstree, or chosen, which I haven't yet made play nicely with Angular, although I'm getting better at it. Those are clear tasks that could be undertaken by others.\n\nMy plan is to keep giving this a few hours a day until the whole thing is done.\n\nThanks for jumping on this!\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-14277493",
            "date": "2015-01-14T19:16:24+0000",
            "content": "Erick,\n\nI have been careful to keep it alongside the current admin UI, which is unaffected.\n\nVisit http://localhost:8983/solr/index.html to see the new one.\n\nThe only change that would be done to make this the real one is to make it render index.html, not admin.html at the root /solr/ URL.\n\nI can upload a new patch. I have been working off my github fork, which contains the latest.\n\nRemoving index.html will make this invisible, as you suggest.\n\nAs to sub-tasks, what I'm finding is that there are some JS libraries used, such as jstree, or chosen, which I haven't yet made play nicely with Angular, although I'm getting better at it. Those are clear tasks that could be undertaken by others.\n\nMy plan is to keep giving this a few hours a day until the whole thing is done.\n\nThanks for jumping on this!\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14277524",
            "date": "2015-01-14T19:31:55+0000",
            "content": "yeah, an updated patch would be helpful, keeps track of what we commit \nwith the JIRA for one thing, and makes my life easier for another \n "
        },
        {
            "author": "Upayavira",
            "id": "comment-14277893",
            "date": "2015-01-14T23:38:00+0000",
            "content": "attached patch containing latest state of play, with query pane working "
        },
        {
            "author": "Upayavira",
            "id": "comment-14278130",
            "date": "2015-01-15T02:25:33+0000",
            "content": "Discovered there was a gitignore further up preventing my lib directory from getting into git, which also broke the patch. I've uploaded a new patch that has the JS dependencies included. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14278208",
            "date": "2015-01-15T03:50:50+0000",
            "content": "Two questions:\n\n1> there is a top-level README.txt that is new to your fork included in the patch. I've removed it from my copy. Is that OK?\n2> at the top level, the .gitignore file has two new entries, /solr/example and /solr/server. I'm guessing this file should not be changed at this point.\n\nI'll put up a patch with the two above changes if they're appropriate before I commit the code.\n\nWhen I build and go to the admin page, I see two errors about \"SolrCore initialization errors, please check your logs\" but no errors in the relevant log file. I started with 'bin/solr start -e techproducts'\n\nNone of the links on the page do anything.\n\nThe old admin UI does, however, show a valid techproducts core with what I'd expect.\n\nI suspect I'm missing some dependencies. I applied the 1.43M patch above (just double checked).\n\nSo let's assume it is a dependency problem, where would I look? And would it be helpful to chat tomorrow? I have to leave here by 9:30 PST for the rest of the day, and there's a chance I'll be on a con call but we can try.\n\nIf that won't work, how about Friday? "
        },
        {
            "author": "Upayavira",
            "id": "comment-14278454",
            "date": "2015-01-15T09:08:51+0000",
            "content": "Ping me. I've been developing against git, and haven't yet tried to import directly into an SVN checkout. I'll give it a go and see what works/breaks. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14280515",
            "date": "2015-01-16T17:15:41+0000",
            "content": "Fixing a small typo that was breaking the app on other people's browsers "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14281536",
            "date": "2015-01-17T20:51:53+0000",
            "content": "Removed bogus README.txt file and what I think are inadvertent entries in .gitignore. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14281548",
            "date": "2015-01-17T21:03:42+0000",
            "content": "OK, this compiles and shows new stuff. As Upayavira mentions, it's not complete by any means, but the structure is in place.\n\nSo my question is where to go from here. Upayavira has a Git repo he's working with.\nThere are at least three ways to take this forward:\n\n1> Work with Upayavira's Git repo, he'd have to volunteer to keep it current and all that.\n2> Create an SVN branch for ongoing work.\n3> Just check this in, close this JIRA and work with sub JIRAs and maybe an umbrella JIRA.\n\nI kind of like this last as that would keep things from getting too far out of date. Case in point:\n> The attached patch fails precommit because all the new files don't have the \n    proper svn:eol-style bits set, which is easy to fix.\n> Even with the eol-style problem fixed, it fails precommit with\n   /lucene/common-build.xml:1830: Rat problems were found! no idea what \n   this is trying to tell me, what the heck is rat?\n\nThis is not my day to have precommit play nice.\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-14282044",
            "date": "2015-01-19T00:41:33+0000",
            "content": "Regarding README and gitignore, README is intended for a github audience, and gitignore helps me out during dev. They will be excluded from future patches.\n\nRat is telling you that we have files in the tree without correct license headers. I found one (index.js) which I have fixed in my git repo.\n\nThere's also a heap of stuff there that needs attributing correctly - 90% is stuff that is in the current admin UI but that we didn't identify as dependencies that we should have been listing somewhere. Sorting this out is on my todo list, I'll make sure that before we merge this anywhere, licensing is handled correctly. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14285747",
            "date": "2015-01-21T15:13:31+0000",
            "content": "Status:\nMain page: complete\nDashboard: complete\nLogging: complete\nLogging levels: complete\nCloud/tree: not done\nCloud/graph: not done\nCloud/radial graph: not done\nCloud/dump: not done\nCore admin: complete\nJava properties: complete\nThread Dump: complete\nOverview: partial\nAnalysis: complete\nData import: not done\nDocuments: not done\nFiles: not done\nPing: not done\nPlugins/stats: not done\nQuery: complete (excepting storing params in URL)\nReplication: not done\nSchema Browser: not done\n\nCompleted: 9/21 "
        },
        {
            "author": "Upayavira",
            "id": "comment-14287405",
            "date": "2015-01-22T13:20:57+0000",
            "content": "Erick,\n\nFirstly, I think we should just commit this to trunk. It sits alongside the current admin UI without interrupting it, so no issues. \n\nSecondly, let me know how you do the pre-commit steps - am I in a position to do it also? If so, I'll see if I can resolve the RAT issues. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14288034",
            "date": "2015-01-22T19:17:20+0000",
            "content": "Upayavira:\n\nYep, this is on my list, but it's been a busy week. May be this weekend before I can go there.\n\nIf we commit it to trunk, I should think we might as well commit it to 5x too, assuming we can easily disable it before a 5.1 comes out if we need to.\n\nprecommit is just a target for ant, so just doing an \"ant precommit\" from the root will run it. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14292997",
            "date": "2015-01-27T05:27:46+0000",
            "content": "Patch just cleans up the svn-eolstyle warnings. FYI, the command to do that is:\nsvn propset svn:eol-style native file_path\na body has to get through that to get to the rat errors. Below are the files reported with \"Unknown Licenses:\"\n\nUpayavira:\nIn case you're wondering why I'm not checking these in, the Jenkins builds will fail if the precommit step fails. I notice these are MIT licenses, perhaps we can just add that license to the list of known good ones? I confess I have no clue how though...\n\n\n  /Users/Erick/apache/trunk_5507/solr/webapp/web/css/angular/chosen.css\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/js/angular/controllers/index.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular-cookies.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular-cookies.min.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular-resource.min.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular-route.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular-route.min.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular-sanitize.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular-sanitize.min.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/angular.min.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/chosen.jquery.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/chosen.jquery.min.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/chosen.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/jquery-2.1.3.min.js\n      [rat]   /Users/Erick/apache/trunk_5507/solr/webapp/web/lib/ngtimeago.js "
        },
        {
            "author": "Upayavira",
            "id": "comment-14307462",
            "date": "2015-02-05T16:04:35+0000",
            "content": "I've managed to get RAT to be happy locally.\n\nTo run rat on the webapp alone, enter solr/webapp and run 'ant rat-sources'.\n\nMy source files are currently mid-development, so I will submit a new Rat-friendly patch when get to my next milestone.\n\nNote, rather than adding headers to all of the AngularJS files, I'm proposing to add this patch to lucene/common-build.xml, under the RAT, MIT license section:\n\n      <!-- AngularJS -->\n        <pattern substring=\" License: MIT\"/> "
        },
        {
            "author": "Upayavira",
            "id": "comment-14312395",
            "date": "2015-02-09T16:18:25+0000",
            "content": "Patch that keeps RAT happy - I have executed (cd solr/webapp; ant rat-sources) without complaint.\n\nTo achieve this I added license headers to all of the library files. I also opted to add licenses to each AngularJS library file, rather than modify lucene/common-build.\n\nThis patch also includes a functionally correct cloud/tree page. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14312808",
            "date": "2015-02-09T20:25:40+0000",
            "content": "Passes precommit, I took a quick look at it and the bits you've done already seem to be in place, but can't do any more looking until tomorrow.\n\nSo, let's say this passes the unit tests. I think it would be best to create a bunch of sub-JIRAs for further improvements rather than continue to revise this patch. I suppose we could also create additional patches that are the delta for other work (with different labels), it's just that what I don't want to to is keep re-applying the changes contained in this patch as that's a sticky wicket.... "
        },
        {
            "author": "Upayavira",
            "id": "comment-14312993",
            "date": "2015-02-09T22:17:10+0000",
            "content": "Great that precommit works!\n\nI am generating these patches with a diff between a base git hash and my latest commit. Once you commit a patch, I will move the hash I use as a base. I'll need to do that regardless of whether we continue with this one ticket, or split into multiples. Thus, patches that I submit will always be deltas against the current state of SVN - I'll keep that easy for you. "
        },
        {
            "author": "Upayavira",
            "id": "comment-14314034",
            "date": "2015-02-10T11:33:41+0000",
            "content": "Cloud tab is almost there. Just need to complete the 'debug/dump' and clipboard copying. (uploaded new patch) "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14321687",
            "date": "2015-02-14T20:21:24+0000",
            "content": "Upayavira:\n\nOK, back after traveling and caught up. I'm running this through precommit and test now. Should I check it in afterwards or do you have something else you want to do first? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14330347",
            "date": "2015-02-21T17:00:46+0000",
            "content": "Upayavira Should I commit this or do you have something else to add for the first cut?\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-14330429",
            "date": "2015-02-21T21:01:13+0000",
            "content": "I have nothing more yet, hopefully more next week, so commit away. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14333023",
            "date": "2015-02-23T05:43:56+0000",
            "content": "Patch with CHANGES.txt entry. I'm going to close this after the 5x gets checked in later tonight, let's open more JIRAs and relate them to this one. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14333024",
            "date": "2015-02-23T05:45:09+0000",
            "content": "Commit 1661606 from Erick Erickson in branch 'dev/trunk'\n[ https://svn.apache.org/r1661606 ]\n\nSOLR-5507: Admin UI - Refactoring using AngularJS "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14333042",
            "date": "2015-02-23T06:31:17+0000",
            "content": "Thanks Upayavira! Let's open up associated JIRAs, the patches for this one will get harder to untangle if we add more I think. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14333043",
            "date": "2015-02-23T06:32:40+0000",
            "content": "Commit 1661607 from Erick Erickson in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1661607 ]\n\nSOLR-5507: Admin UI - Refactoring using AngularJS "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14495384",
            "date": "2015-04-15T00:30:53+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}