{
    "id": "SOLR-433",
    "title": "MultiCore and SpellChecker replication",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "4.1"
        ],
        "components": [
            "replication (scripts)",
            "spellchecker"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "With MultiCore functionality coming along, it looks like we'll need to be able to:\n  A) snapshot each core's index directory, and\n  B) replicate any and all cores' complete data directories, not just their index directories.\n\nPulled from the \"spellchecker and multi-core index replication\" thread - http://markmail.org/message/pj2rjzegifd6zm7m\n\nOtis:\n\nI think that makes sense - distribute everything for a given core, not just its index.  And the spellchecker could then also have its data dir (and only index/ underneath really) and be replicated in the same fashion.\n\nRight?\n\nRyan:\n\nYes, that was my thought.  If an arbitrary directory could be distributed, then you could have\n\n  /path/to/dist/index/...\n  /path/to/dist/spelling-index/...\n  /path/to/dist/foo\n\nand that would all get put into a snapshot.  This would also let you put multiple cores within a single distribution:\n\n  /path/to/dist/core0/index/...\n  /path/to/dist/core0/spelling-index/...\n  /path/to/dist/core0/foo\n  /path/to/dist/core1/index/...\n  /path/to/dist/core1/spelling-index/...\n  /path/to/dist/core1/foo",
    "attachments": {
        "SOLR-433_unified.patch": "https://issues.apache.org/jira/secure/attachment/12387440/SOLR-433_unified.patch",
        "RunExecutableListener.patch": "https://issues.apache.org/jira/secure/attachment/12376029/RunExecutableListener.patch",
        "solr-433.patch": "https://issues.apache.org/jira/secure/attachment/12376028/solr-433.patch",
        "spellindexfix.patch": "https://issues.apache.org/jira/secure/attachment/12376125/spellindexfix.patch",
        "SOLR-433.patch": "https://issues.apache.org/jira/secure/attachment/12387745/SOLR-433.patch",
        "SOLR-433-r698590.patch": "https://issues.apache.org/jira/secure/attachment/12390843/SOLR-433-r698590.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Doug Steigerwald",
            "id": "comment-12558031",
            "date": "2008-01-11T17:15:51+0000",
            "content": "Is anyone looking into this? "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12558064",
            "date": "2008-01-11T18:45:22+0000",
            "content": "I don't think so, Doug.  If you are asking if you should start working on this and contribute a patch, by all means, please!  "
        },
        {
            "author": "Doug Steigerwald",
            "id": "comment-12558068",
            "date": "2008-01-11T19:03:40+0000",
            "content": "It's on our TODO list here if no one was working on it yet.  I'll see what we can get done based on the comments in the description. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12558528",
            "date": "2008-01-14T07:31:24+0000",
            "content": "as i recall, most of the scripts currently take a \"-d data_dir\" option ... and then use makethe following assumptions...\n  1) ${data_dir}/index is what gets snapshooted/snapinstalled\n  2) ${data_dir}/snapshot* is the pattern for naming snapshots.\n\na good way to evolve the scripts would probably be to have an alternate set of options ... maybe \"-D dir\" and \"-S snapshots\" that assumes ${dir} is where all the data to be snapshooted/snapinstalled lives, and ${snapshots} is where all snapshoots live.\n\n(except i think some of the scripts already have a -D .. snappuller or snapcleaner maybe?)\n\nalternate idea: we don't have to add a command line option at all ... support for something like this could require special scripts.conf options. "
        },
        {
            "author": "Doug Steigerwald",
            "id": "comment-12570712",
            "date": "2008-02-20T15:11:58+0000",
            "content": "We have a ctl script that controls all of the functions and makes sure we don't run some things on the slaves (ie, snappuller, snapinstaller, rsyncd stuff).\n\nWe pass it a core and an index type:\n\n./snapctl -a [rsyncd-enable/snappuller/snapinstaller/etc] -c core0 -i spell\n\n\nspell is the name of our spellcheck index.  Default index is 'index'.\n\nThis is testing well in QA right now.  Hopefully this will help others out and maybe we'll have something similar committed soon.\n\nHere's the basics of our snapctl script.  It's really tailored to our environment, so I probably won't post it as is.\n\n$SOLR_BIN=/home/dsteiger/apps/solr/solr/bin\n$CORES_PATH=/home/dsteiger/local/solr/cores\n$CORE=core0 # from -c arg, default is 'null'\n$INDEX=spell  # from -i arg, default is 'index'\n$SOLR_LOGS=/home/dsteiger/apps/solr/logs # symlinked to somewhere else\n# $MASTER_HOST is determined based on environment (devel/qa/prod) from the scripts.conf\n\n$SOLR_BIN/rsyncd-enable\n\n$SOLR_BIN/rsyncd-disable\n\n$SOLR_BIN/rsyncd-start -d $CORES_PATH\n\n$SOLR_BIN/rsyncd-stop\n\n$SOLR_BIN/snappuller-enable\n\n$SOLR_BIN/snappuller-disable\n\n$SOLR_BIN/snapshooter -d $CORES_PATH/$CORE/data -i $INDEX\n\n$SOLR_BIN/snappuller -M $MASTER_HOST -S $SOLR_LOGS/clients -D $CORES_PATH/$CORE/data -d $CORES_PATH/$CORE/data -z -c $CORE -i $INDEX\n\n$SOLR_BIN/snapinstaller -M $MASTER_HOST -S $SOLR_LOGS/clients -d $CORES_PATH/$CORE/data -c $CORE -i $INDEX\n\n$SOLR_BIN/snapcleaner -D 1 -d $CORES_PATH/$CORE/data -i $INDEX\n\n\n\n\nWe also modified core.RunExecutableListener to be able to pass the core name to out snapctl script.\n\n\n    <listener event=\"postCommit\" class=\"core.RunExecutableListener\">\n        <str name=\"exe\">./solr/bin/snapctl</str>\n        <str name=\"dir\">.</str>\n        <bool name=\"wait\">true</bool>\n        <bool name=\"coreName\">true</bool>\n        <arr name=\"args\"><str>-a snapshooter</str><str>-i index</str></arr>\n    </listener>\n    <listener event=\"postOptimize\" class=\"core.RunExecutableListener\">\n        <str name=\"exe\">./solr/bin/snapctl</str>\n        <str name=\"dir\">.</str>\n        <bool name=\"wait\">true</bool>\n        <bool name=\"coreName\">true</bool>\n        <arr name=\"args\"> <str>-a snapshooter</str> </arr>\n    </listener>\n\n\n\nGoing to attach patch to RunExecutableListener we're using. "
        },
        {
            "author": "Doug Steigerwald",
            "id": "comment-12570716",
            "date": "2008-02-20T15:20:41+0000",
            "content": "Should work.  Had to pull changes out of a separate class I write to create this patch. "
        },
        {
            "author": "Doug Steigerwald",
            "id": "comment-12571046",
            "date": "2008-02-21T14:03:38+0000",
            "content": "This may be better suited as another bug, or even posted in the lucene project, but I also made a small patch for the lucene spellchecker.\n\nHitting the spellcheck request handler with a reopen command wasn't working after we installed a new spell index snapshot.  Searcher was being created for the new index, but not a reader.\n\nAlso, if you rebuild the spell index after it has already been built, it cleans out the index.  You then have to send it a rebuild again to actually rebuild the index.  Frequency of words in the spell index seemed to remain constant when rebuilding the spell index multiple times. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12571501",
            "date": "2008-02-22T18:08:32+0000",
            "content": "You definitely want to put this in a separate JIRA issue and in Lucene's JIRA where you'll find a few similar issues already. "
        },
        {
            "author": "Jeremy Hinegardner",
            "id": "comment-12617694",
            "date": "2008-07-29T04:59:11+0000",
            "content": "If this patch works for folks, I would like to see it committed and put in the nightly snapshot.  Or at least the RunExecutableListener.patch and solr-433.patch.\n\nIf there is any more work here, I'd be happy to work on it.   "
        },
        {
            "author": "Jeremy Hinegardner",
            "id": "comment-12619391",
            "date": "2008-08-04T00:27:31+0000",
            "content": "I've combined solr-433.patch and RunExecutableListener.patch into a single patch against svn trunk.  This also fixes a syntax bug in RunExecutableListener where super(core); was not invoked. "
        },
        {
            "author": "Jonathan Lee",
            "id": "comment-12620430",
            "date": "2008-08-06T21:23:07+0000",
            "content": "I'm interested in using this patch to replicate the spell index, but I am not using multiple cores.  The scripts in the patch do not work for single core setups since it makes an assumptions that the core name will appear in the rsync path.\n\nI am attaching another version of the patch which makes a few changes:\n\n\tsnapcleaner, snapshooter, and snappuller are backwards compatible with the naming convention used by the current scripts\n\tFixed a few small bugs where static strings were used instead of the corresponding variables\n\tAvoid assuming that an executable will accept a '-c' parameter to specify the core name.  Instead, allow a RunExecutableListener to be conditionally executed for specified cores. RunExecutableListener now accepts a <arr name=\"cores\"> parameter. You would need to add a listener for each core. For example:\n\n<listener event=\"postOptimize\" class=\"core.RunExecutableListener\">\n    <arr name=\"cores\"> <str>core0</str> </arr>\n    <str name=\"exe\">solr/bin/snapshooter</str>\n    <str name=\"dir\">.</str>\n    <arr name=\"args\"> <str>-d /usr/local/solr/core0/data</str> </arr>\n</listener>\n<listener event=\"postOptimize\" class=\"core.RunExecutableListener\">\n    <arr name=\"cores\"> <str>core1</str> </arr>\n    <str name=\"exe\">solr/bin/snapshooter</str>\n    <str name=\"dir\">.</str>\n    <arr name=\"args\"> <str>-d /usr/local/solr/core1/data</str> </arr>\n</listener>\n\n\n(Another reasonable alternative to this might also be to accept variables like ${SOLR_CORE} in <args> and <env> which are resolved by RunExecutableListener.)\n\tRemoved the '-c' parameter from snappuller, replacing it instead with the '-r' option to specify an rsync module. This allows us to not assume the location of the core's data path. Instead we would add a new module to rsyncd.conf for each core. e.g.\n\n...\n[core0]\n    path = /usr/local/solr/core0/data\n    comment = core0\n[core1]\n    path = /usr/local/solr/core1/data\n    comment = core1\n...\n\n\nthen use:\n\n./snappuller -r core0\n\n\n\n\n "
        },
        {
            "author": "Jonathan Lee",
            "id": "comment-12620656",
            "date": "2008-08-07T16:06:26+0000",
            "content": "(patch from comment https://issues.apache.org/jira/browse/SOLR-433?focusedCommentId=12620430#action_12620430) "
        },
        {
            "author": "Nicolas Lalev\u00e9e",
            "id": "comment-12634171",
            "date": "2008-09-24T15:38:52+0000",
            "content": "The patch that works the best for me is the last one, Jonathan's one, as I run Solr with only one core but with two spellchecker indexes.\n\n\tI have fixed in that patch the snapcleaner when called to explicitely clean the main index (./snapcleaner -i index).\n\tI also fixed every \"USAGE\" printing.\n\tand I have included the patch on RunExecutableListener and a little simplified it (it can now access to the solr core instance).\n\n "
        },
        {
            "author": "Stephane Bailliez",
            "id": "comment-12636273",
            "date": "2008-10-02T02:17:40+0000",
            "content": "Note that on the last patches, the grep to retrieve the snapshot is incorrect:\n\n\nls ${data_dir}|grep \"${snap_prefix}\\.\"|grep -v wip|sort -r|head -1\n\n\n\nwould always retrieve the latest one on the ls, it needs to be with an anchor in the grep for the prefix otherwise it will never update the index snapshot (since 'snapshot' is present in every snapshot of index)\n\n\nls ${data_dir}|grep \"^${snap_prefix}\\.\"|grep -v wip|sort -r|head -1\n\n\n\nshould be changed in snappuller and snapinstaller "
        },
        {
            "author": "Jonathan Lee",
            "id": "comment-12636372",
            "date": "2008-10-02T15:20:14+0000",
            "content": "Includes Stephane's fixes for snappuller & snapinstaller and some minor edits  "
        },
        {
            "author": "Chris Haggstrom",
            "id": "comment-12648036",
            "date": "2008-11-16T21:32:39+0000",
            "content": "I've been using the patch submitted by Jonathan Lee on 10-02-08 for replicating a spelling directory in addition to the index, and it works very well for that purpose.\n\nI'm attaching a slightly modified patch that allows the snapshooter \"-c\" option to work with an index or spelling directory that is not named \"index\".\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12670780",
            "date": "2009-02-05T15:10:11+0000",
            "content": "Marking for 1.5 "
        },
        {
            "author": "Jeremy Hinegardner",
            "id": "comment-12763719",
            "date": "2009-10-08T21:46:34+0000",
            "content": "I've updated the patch to apply cleanly against trunk. "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12787155",
            "date": "2009-12-07T22:10:47+0000",
            "content": "Are the existing patches for multiple cores or only for spellchecking? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872468",
            "date": "2010-05-27T22:05:57+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043804",
            "date": "2011-06-03T16:47:09+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106383",
            "date": "2011-09-16T14:50:50+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234662",
            "date": "2012-03-21T18:08:46+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13485864",
            "date": "2012-10-29T06:50:52+0000",
            "content": "I think this is no longer needed, since spellchecker no longer needs a separate index.  Resolving as Won't Fix. "
        }
    ]
}