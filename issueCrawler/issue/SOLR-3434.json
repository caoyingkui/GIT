{
    "id": "SOLR-3434",
    "title": "CSVRequestHandler does not trim header when using header=true&trim=true",
    "details": {
        "affect_versions": "3.6",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "when using header=true&trim=true the field names in the header row are not trimmed.\n\nthis is consistent with the documentation, but that doesn't mean it makes sense.\n\nwould be good to change this so trim=true also applied to the header row (at least by default)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13267994",
            "date": "2012-05-04T01:02:14+0000",
            "content": "Odd, it works fine for me, but I did have to remove the spaces after the header names. Is there anything else in the log file?\n\nOh, and it is usually better if the first time you have a problem, you bring it up on the user's list rather than a JIRA, you tend to get faster responses there. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13268040",
            "date": "2012-05-04T02:09:33+0000",
            "content": "but I did have to remove the spaces after the header names\n\nThat right there seems to be the crux of hte issue.\n\nThe header=true parsing is working fine, but the devil is in the detail of the docs for the \"trim\" option...\n\nhttp://wiki.apache.org/solr/UpdateCSV#trim\n\nIf true remove leading and trailing whitespace from values. ...\n\n...it was only ever designed to trim the values, not the names of the fields in the header.\n\nusing the 3.6 example, you can see this clearly with data like...\n\n\n|foo_s   |book_d_i   |id           |name_id_i\n|--------|-----------|-------------|-----------\n|20120420|      15600|   2070469502|      12787\n|20120420|      64400|   2070469503|      12787\n\n\n\nWhich, when using header=true, generates a very clear error...\n\n\nSEVERE: org.apache.solr.common.SolrException: undefined field: \"foo_s   \"\n\tat org.apache.solr.schema.IndexSchema.getField(IndexSchema.java:1261)\n\tat org.apache.solr.handler.CSVLoader.prepareFields(CSVRequestHandler.java:290)\n\n\n\nI suspect the reason the david didn't get this kind of an error with his fields is because of a \"*\" dynamicField.\n\nI'm not sure that there is really a bug here since it's working as documented, but i think it would certainly make sense to enhance the handler to also trim the header if trim=true. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13268043",
            "date": "2012-05-04T02:16:03+0000",
            "content": "Two other things i wanted to explicitly note:\n\n\n\tthe error message that david is getting (\"Document is missing mandatory uniqueKey field: \"jq_idn\") is most likely because of the \"*\" dynamicField i mentioned \u2013 all of the fields in the file are getting added with the verbatim field name (ie: \"jq_idn_______\") so then there is an error when the required fields aren't found\n\teven if/when the header logic is improved to also trim, this file would still likelye not do what you expect because of that second line (consisting of many \"------\" values) ... the loader will also try to index that line as a document, so if any of your field types have any constraints on them (ie: numbers or dates) that row will fail \u2013 you'll need to use the \"skipLines\" option to ignore it\n\tyou could work around this header triming issue by listing the field names explicitly (using the \"fieldnames\" param, in addition to using skipLines=2\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13268044",
            "date": "2012-05-04T02:19:09+0000",
            "content": "\nedited summary & trimed down description to reduce verbosity\n\noriginal issue description with formatting fixes\nThe documentation says:\nheader\ntrue if the first line of the CSV input contains field or column names. The default is header=true. If the fieldnames parameter is absent, these field names will be used when adding documents to the index.\n\nMy command:\n\n/usr/bin/curl  --proxy \"\"   'http://localhost:8983/solr/update/csv?commit=true&debug=true&separator=|&escape=\\&trim=true&header=true&overwrite=true'  --data-binary @/tmp/file_with_header.txt   -H 'Content-type:text/plain; charset=utf-8'\n\n\n\nMy data file (/tmp/file_with_header.txt) :\n\n|busdate |book_id    |jq_idn       |name_id\n|--------|-----------|-------------|-----------\n|20120420|      15600|   2070469502|      12787\n|20120420|      64400|   2070469503|      12787\n|20120420|     100000|   2070469501|      12787\n|20120420|      60000|   2070469504|      12787\n|20120420|      60000|   2070538002|      12787\n|20120420|     206501|   2070538003|      12787\n|20120420|     199418|   2070538004|      12787\n|20120420|       7000|   2070538005|      12787\n\n\n\nschema.xml: (tried different variations)\n\n    897    <field name=\"jq_idn\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"false\" /> \n   1005    <uniqueKey>jq_idn</uniqueKey>\n\n\n\nStack trace:\n\nSEVERE: org.apache.solr.common.SolrException: Document is missing mandatory uniqueKey field: jq_idn\n        at org.apache.solr.update.UpdateHandler.getIndexedId(UpdateHandler.java:118)\n        at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:229)\n        at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:61)\n        at org.apache.solr.update.processor.LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:115)\n        at org.apache.solr.handler.CSVLoader.doAdd(CSVRequestHandler.java:416)\n        at org.apache.solr.handler.SingleThreadedCSVLoader.addDoc(CSVRequestHandler.java:431)\n        at org.apache.solr.handler.CSVLoader.load(CSVRequestHandler.java:393)\n        at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:58)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:244)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1376)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:365)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:260)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n        at org.mortbay.jetty.Server.handle(Server.java:326)\n        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:945)\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n        at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)\n        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n\n\n "
        },
        {
            "author": "david babits",
            "id": "comment-13268386",
            "date": "2012-05-04T14:06:34+0000",
            "content": "Thank you Hoss and Erick for your help.\n\nI trimmed all headers, still can't get it to work.\n\ndynamicField commented out:\n\ntrim=true&header=true&skipLines=1:\n=>undefined field: \"--------\"\n\ntrim=true&header=true&skipLines=2:\n=>undefined field: \"20120420\"\n\ndynamicField uncommented: <dynamicField name=\"*\" type=\"ignored\" multiValued=\"true\" />:\n=>Document is missing mandatory uniqueKey field: jq_idn\n\nThe field is in the file. Does skipLines=2 also skip the header ? "
        },
        {
            "author": "david babits",
            "id": "comment-13268391",
            "date": "2012-05-04T14:11:03+0000",
            "content": "    993    <!-- uncomment the following to ignore any fields that don't already match an existing\n    994         field name or dynamic field, rather than reporting them as an error.\n    995         alternately, change the type=\"ignored\" to some other type e.g. \"text\" if you want\n    996         unknown fields indexed and/or stored by default   -->\n\nTried what the doc suggests:\n<dynamicField name=\"*\" type=\"text\" multiValued=\"true\" />\n\nGot: \nSEVERE: org.apache.solr.common.SolrException: Unknown fieldtype 'text' specified on field *\n        at org.apache.solr.schema.IndexSchema.readSchema(IndexSchema.java:511) "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13268420",
            "date": "2012-05-04T15:06:53+0000",
            "content": "1> You should not need the dynamic field.\n2> pare down your CSV file and remove the spaces from the first line, and remove the second line\n   OR\n   specify skipLines=2 and, as Hoss said, explicitly define your fields on your URL using the fieldnames parameter (http://wiki.apache.org/solr/UpdateCSV#fieldnames) "
        },
        {
            "author": "david babits",
            "id": "comment-13268456",
            "date": "2012-05-04T15:35:40+0000",
            "content": "Yes, specifying fieldnames works, and worked yesterday too, I forgot to mention it.\n\nTo close this out:\nMy goal is to accept a random file, generated by extract from a database, and load it into Solr.\nDatabase extract comes with fields aligned, hence the white space in the header and values.\nI do not know the fieldnames ahead of time, so I was hoping to specify header=true&trim=true and have Solr take care of parsing.\nThis proved not to work.\nSince I have to massage the data anyway to remove spaces, I might as well parse out the header line at the same time using sed and construct fieldnames variable.\n\nI also found that I need <dynamicField name=\"*\" type=\"string\" multiValued=\"true\" /> since I do not know header up front, and can't rely on _s etc, and it wouldn't work otherwise.\n\nSo, trim=true&header=false&skipLines=2&fieldnames=$fieldnames\nThis is the workaround. \n\nMy opinion is:  'trim' should be true by default, and certainly apply to both data and header, although I understand it would break backward-compatibility.\n\nThanks again for your help. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13268506",
            "date": "2012-05-04T16:25:50+0000",
            "content": "My opinion is: 'trim' should be true by default, and certainly apply to both data and header, although I understand it would break backward-compatibility.\n\nIMO, we should always trim the headers - the CSV loader certainly never intended to support fieldnames with leading or trailing whitespace.... this was simply just a case of lacking any examples that added whitespace.\n\nAs for your other problem, it seems like we also need a skipLinesAfterHeader option? "
        },
        {
            "author": "david babits",
            "id": "comment-13268672",
            "date": "2012-05-04T20:07:03+0000",
            "content": "I don't think skipLinesAfterHeader is needed.\nskipLines should do, I believe implicitly skipLines=1 when header=true, which is what the docs seem to say.\nWhat's needed is an example, in addition to the docs.\nMy use case is generic - this is how the data looks when extracted from database(using isql in my case), so it shouldn't take a newbie 2 days of trial-and-error to figure out how to load it into solr, an example along with necessary schema.xml change would go a long way.\n\n\nskipLines\n\nSpecifies the number of lines in the input stream to discard before the CSV data starts (including the header, if present). Default is skipLines=0.\n "
        }
    ]
}