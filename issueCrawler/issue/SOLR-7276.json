{
    "id": "SOLR-7276",
    "title": "Add a Boolean Post Filter QParserPlugin",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "This plugin enables existing post filter implementations to be combined using Boolean logic. It works by building a \"parse tree\" of referenced Post Filters. When a document is sent to the collect( ) method of the BooleanPostFilter, it is sent to all of the delegates that point to a local Collector that sets a flag if the DelegatingCollector calls its collect method. After all of the delegates have been polled, the parse tree output determines if the document should be ultimately collected.\n\nThe syntax for the post filter is like this:\n\nfq={!bool expr=\"(($foo OR $bar) NOT $baz)\"}&foo={!foo ...}&bar={!bar ... }&baz={!baz ...}\n\n\nWhere \"foo\", \"bar\" and \"baz\" are all post filters.",
    "attachments": {
        "SOLR-7276.patch": "https://issues.apache.org/jira/secure/attachment/12705946/SOLR-7276.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-06-22T19:34:07+0000",
            "author": "Erik Hatcher",
            "content": "Here's a new patch that changes a few things:\n\n\n\tinstead of local `expr` parameter for \n{!bool}, switched to `v` so that the expression can work outside the curly brackets as `{!bool}\n<expression>`\n\tAdded throwing of SolrException in createParser rather than returning null when there's an error\n\tTrimmed a bunch of unnecessary stuff from the test solrconfig\n\n\n ",
            "id": "comment-14596512"
        },
        {
            "date": "2015-06-22T19:36:23+0000",
            "author": "Erik Hatcher",
            "content": "Question, in #shouldCollect(), should it really default to returning true if there is an illegal operator encountered?  Seems like false should be the default action (though arguably it can't get to this part of the code anyway):\n\n\n      LOG.debug( \"shouldn't get here! returning true\" );\n      return true;\n\n ",
            "id": "comment-14596517"
        },
        {
            "date": "2015-06-22T19:40:01+0000",
            "author": "Erik Hatcher",
            "content": "Another question - should we stick with $dollar-sign-prefixed values in the expressions?   It's dangerously close to the macro substitution feature that uses ${curly-bracket-reference}.  In these expressions the only non-operator tokens will be parameter references, right?  So maybe an expression could simply be `fq={!bool}(foo OR bar) NOT baz` without dollar-signs? ",
            "id": "comment-14596524"
        },
        {
            "date": "2015-08-26T13:14:24+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Bulk move to 5.4 after 5.3 release. ",
            "id": "comment-14713376"
        }
    ]
}