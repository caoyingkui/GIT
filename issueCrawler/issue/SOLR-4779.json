{
    "id": "SOLR-4779",
    "title": "Deprecate shareSchema in favor of sharing named config sets",
    "details": {
        "affect_versions": "4.4,                                            6.0",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "While working on SOLR-4478 it occurred to me that sharing schemas should be superseded by sharing named config sets. I pinged the dev list and there's enough interest in this that a JIRA is in order to continue the discussion.\n\nThis may just happen as part of SOLR-4478.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13652611",
            "date": "2013-05-09T01:02:30+0000",
            "content": "it's important to remember what exactly shareSchema=\"true\" means under the hood.\n\nfunctiaonlly the effect was that you got the exact same IndexSchema object for all cores whose schema.xml path was the same \u2013 it helps reduce the memory overhead and speeds up the loading of cores in situations where you have a lot of cores using identical schemas.\n\nre-using config sets in SolrCloud may be a viable replacement for sharing schemas such that the config option is no longer needed \u2013 but the question should still remain whether that will still support the optimization of having a single IndexSchema object for each core that re-uses the same config set.\n\n(And of course: the question of what happens with mutable schemas when shared is something that should be considered ... i have no idea what happens today) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13652638",
            "date": "2013-05-09T01:26:05+0000",
            "content": "(And of course: the question of what happens with mutable schemas when shared is something that should be considered)\n\nSeems like all cores sharing the same physical file should get the updates.\nThis should already work in cloud mode, but I have a feeling non-cloud mode doesn't.\n\nIt's probably also the case that the schema API should be able to specify a named config set to operate on. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13652659",
            "date": "2013-05-09T01:54:52+0000",
            "content": "One thing I'm really curious about with either method:  What happens if you modify your schema (and upload a new config set if SolrCloud) and then reload some (but not all) of the cores/collections?  Will you have two objects until all are reloaded?  Is an actual restart required for that? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13652674",
            "date": "2013-05-09T02:11:31+0000",
            "content": "@Hoss:\nYep, what I'm trying to do is share the same object, in this case both the schema and config file. It actually takes quite a while to load the config. What's not clear to me at all is whether the SolrConfig object is shareable, but I'm looking at that.\n\n@Yonik:\nAll things being equal, all cores sharing the config set would get the updates to both schema and core, but probably not until they were reloaded if they were currently loaded when the change was made.\n\n@Shawn:\nReally good question. I think the answer would be that there would temporarily be two objects, each core would have a reference to an underlying object that would eventually go away after the last core sharing that config set was reloaded. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13652681",
            "date": "2013-05-09T02:20:36+0000",
            "content": "All things being equal, all cores sharing the config set would get the updates to both schema and core, but probably not until they were reloaded\n\nThat was my point - IMO, I would consider that a bug.  It would be nice if all cores sharing a named config would also share the same exact schema object.  This would address the issue of changes, as well as  the issue of memory use for massive numbers of cores. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13652686",
            "date": "2013-05-09T02:37:11+0000",
            "content": "\n(And of course: the question of what happens with mutable schemas when shared is something that should be considered)\n\nSeems like all cores sharing the same physical file should get the updates.\nThis should already work in cloud mode, but I have a feeling non-cloud mode doesn't.\n\nMutable schemas don't work with shared schema in multi-core mode right now.  I need to write tests for that and merge back the (partial and unconnected) code I had but that got disappeared in Mark Miller's changes to CoreContainer.\n\nIt's probably also the case that the schema API should be able to specify a named config set to operate on.\n\nCan't find the issue now, but somewhere there was a discussion about this, and I think I suggested REST API URLs like solr/configs/(name)/schema/(request-path).  Then solrconfig access might be solr/configs/(name)/solrconfig/(request-path). "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13652867",
            "date": "2013-05-09T10:57:19+0000",
            "content": "bq: It would be nice if all cores sharing a named config would also share the same exact schema object. \n\nRight. That's the intent. But I was assuming that changes would require a constructing a new IndexSchema object. But cores all have a reference to whatever schema object they had when created. So 10 cores could be sharing the same object, but then the schema changes and we create a new one. For some time we have two schema objects hanging around and as cores reload they'd get the new one.\n\nBut that just proves I should look through the code first. SolrCore has a setLatestSchema method  that replaces the current schema with a new one. So it looks like the stage is set to just spin through the cores and replace the current schema with the new one in the cache when it changes. Then it should work like you're saying.\n\nGlad you pointed that out... "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13729891",
            "date": "2013-08-05T20:22:36+0000",
            "content": "I may be able to get to this Real Soon Now, but not before we get named config sets in place.\n\nBut the situation will be awkward. There was a discussion about how sharing a solrconfig object is fraught with all kinds of places to screw it up. So now imagine we go ahead and integrate sharing the schema with config sets. Now changing a config set does what? Reloads the schema file but not the solrconfig file? Spins through all the open cores and causes them to reload (easy, but yuuuuck). And how would all that get triggered in the first place?\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13754756",
            "date": "2013-08-30T14:54:40+0000",
            "content": "Unless we carry the named config sets forward in non-SolrCloud mode, this JIRA won't be implemented either. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14108269",
            "date": "2014-08-24T04:51:31+0000",
            "content": "What do people think about closing this \"won't fix\"? It seems to me that if/when we move\nto ZK being the \"one source of truth\", then this kind of goes away.\n\nWhat I can guarantee is that I won't work on this any time in the foreseeable future. If\nthe consensus is to keep it open, I'll just un-assign it.\n\nOf course if anyone else wants to grab it, feel free. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14203734",
            "date": "2014-11-09T02:25:37+0000",
            "content": "This JIRA is being superseded by other JIRAs "
        }
    ]
}