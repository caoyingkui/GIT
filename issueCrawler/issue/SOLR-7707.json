{
    "id": "SOLR-7707",
    "title": "Add StreamExpression Support to RollupStream",
    "details": {
        "components": [
            "SolrJ"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "This ticket is to add Stream Expression support to the RollupStream as discussed in SOLR-7560.\n\nProposed expression syntax for the RollupStream (copied from that ticket)\n\n\nrollup(\n  someStream(....),\n  over=\"fieldA, fieldB, fieldC\",\n  min(fieldA),\n  max(fieldA),\n  min(fieldB),\n  mean(fieldD),\n  sum(fieldC)\n)\n\n\n\nThis requires making the *Metric types Expressible but I think that ends up as a good thing. Would make it real easy to support other options on metrics like excluding outliers, for example find the sum of values within 3 standard deviations from the mean could be \n\nsum(fieldC, limit=standardDev(3))\n\n\n (note, how that particular calculation could be implemented is left as an exercise for the reader, I'm just using it as an example of adding additional options on a relatively simple metric).\nAnother option example is what to do with null values. For example, in some cases a null should not impact a mean but in others it should. You could express those as\n\nmean(fieldA, replace(null, 0))  // replace null values with 0 thus leading to an impact on the mean\nmean(fieldA, includeNull=\"true\") // nulls are counted in the denominator but nothing added to numerator\nmean(fieldA, includeNull=\"false\") // nulls neither counted in denominator nor added to numerator\nmean(fieldA, replace(null, fieldB), includeNull=\"true\") // if fieldA is null replace it with fieldB, include null fieldB in mean\n\n\nso on and so forth.",
    "attachments": {
        "SOLR-7707.patch": "https://issues.apache.org/jira/secure/attachment/12742817/SOLR-7707.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-06-30T12:34:42+0000",
            "author": "Dennis Gove",
            "content": "Adds expression support to RollupStream. \n\nNote: I have added a ParallelRollupStream test but I cannot get it to pass. I feel as though I've forgotten a required change to make it work with ParallelStream. ",
            "id": "comment-14608217"
        },
        {
            "date": "2015-06-30T13:43:53+0000",
            "author": "Joel Bernstein",
            "content": "Ok, thanks Dennis. I'll take a look at the ParallelStream test. ",
            "id": "comment-14608288"
        },
        {
            "date": "2015-07-02T23:18:00+0000",
            "author": "Dennis Gove",
            "content": "I found the problem.\n\nThere is a test class called CountStream. In some of the test files (particularly solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-streaming.xml) the function name \"count\" was mapped to that Stream. However, now with a count metric I was also mapping the count function name to CountMetric.\n\nFor the moment I have corrected this by renaming CountStream to RecordCountStream and commented out the mapping in the solrconfig-streaming.xml file. I chose to change this one because it is a class in the test suite and not, apparently, used outside of testing.\n\nHowever, this brings up an interesting question. Should we allow conflicting names across streams and metrics. Right now both the mapping for function name to Stream or Metric is stored in the same Map and as such we we are not allowing the conflict of names - ie, both a stream and metric cannot share the same function name. However, should we allow that?\n\nI believe the answer, for clarity, is no. If you assign the string \"count\" to CountMetric then you cannot also assign it to CountStream. This will allow users to know what \"count(....)\" means without having to know the context. For example, allowing \"count\" to map to both could result in confusion in the following\n\n\nrollup(\n  count(search(....)),\n  min(fieldA),\n  count(fieldB)\n)\n\n ",
            "id": "comment-14612670"
        },
        {
            "date": "2015-07-03T04:08:53+0000",
            "author": "Joel Bernstein",
            "content": "Looks like your patch is a commit or two behind svn trunk. Take a look at:\n\nhttps://svn.apache.org/repos/asf/lucene/dev/trunk/solr/core/src/java/org/apache/solr/handler/SQLHandler.java\n\nYou'll see it already has the MultipleFieldComparator, StreamComparator incorporated. Wondering if the git repo is falling to far behind.\n ",
            "id": "comment-14612810"
        },
        {
            "date": "2015-07-03T04:22:52+0000",
            "author": "Dennis Gove",
            "content": "Looks like I cut my branch from trunk before those changes were committed. I'll go through some rebasing tomorrow and post up a new patch. Sorry about that. ",
            "id": "comment-14612814"
        },
        {
            "date": "2015-07-03T12:23:10+0000",
            "author": "Joel Bernstein",
            "content": "No problem, I'm still wrapping up SOLR-7441. ",
            "id": "comment-14613162"
        },
        {
            "date": "2015-07-03T14:15:25+0000",
            "author": "Dennis Gove",
            "content": "New correctly based patch attached. ",
            "id": "comment-14613211"
        },
        {
            "date": "2015-07-03T18:17:38+0000",
            "author": "Joel Bernstein",
            "content": "Patch looks great! \n\nI switched over the SQLHandler to use Streaming Expressions as the parallel transport format and it's extremely compact compared to string encoded object serialization.\n\n\n ",
            "id": "comment-14613374"
        },
        {
            "date": "2015-07-04T13:45:47+0000",
            "author": "Joel Bernstein",
            "content": "Patch with all tests passing and pre-commit passing ",
            "id": "comment-14613848"
        },
        {
            "date": "2015-07-04T14:24:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1689168 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1689168 ]\n\nSOLR-7707: Add StreamExpression Support to RollupStream ",
            "id": "comment-14613855"
        },
        {
            "date": "2015-08-09T20:57:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1694910 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1694910 ]\n\nSOLR-7707: Updated CHANGES.txt ",
            "id": "comment-14679343"
        },
        {
            "date": "2015-08-09T20:58:44+0000",
            "author": "Joel Bernstein",
            "content": "Release with Solr 6 ",
            "id": "comment-14679344"
        }
    ]
}