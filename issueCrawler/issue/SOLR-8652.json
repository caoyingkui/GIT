{
    "id": "SOLR-8652",
    "title": "Implement Statement.setMaxRows()",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.0",
        "status": "Resolved",
        "resolution": "Implemented",
        "priority": "Minor"
    },
    "description": "This is used by DbVisualizer to limit the number of rows returned by the query. The implementation will add a limit clause if one is not already included in the query.",
    "attachments": {
        "SOLR-8652.patch": "https://issues.apache.org/jira/secure/attachment/12786692/SOLR-8652.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-07T01:43:23+0000",
            "author": "Joel Bernstein",
            "content": "Patch and simple test. Testing manually with Dbvisualizer. ",
            "id": "comment-15136091"
        },
        {
            "date": "2016-02-07T01:46:53+0000",
            "author": "Kevin Risden",
            "content": "How about wrapping the stream with a limit stream instead of the risky checking the SQL for the word limit? ",
            "id": "comment-15136092"
        },
        {
            "date": "2016-02-07T02:01:56+0000",
            "author": "Joel Bernstein",
            "content": "The limit clause changes the underlying implementation. If it's not included Solr will stream the entire result set using the /export handler. This also ensures that people use the more permissive /select handler for simple selects, which will produce fewer errors and allows the inclusion of scores and text fields in the result set. ",
            "id": "comment-15136095"
        },
        {
            "date": "2016-02-07T02:06:28+0000",
            "author": "Kevin Risden",
            "content": "My concern here is that there could be columns or collections that have the name limit. This would break the logic that just checks the limit word is in the SQL statement. ",
            "id": "comment-15136097"
        },
        {
            "date": "2016-02-07T02:09:42+0000",
            "author": "Joel Bernstein",
            "content": "Good point. I'll split on whitespace and check the 2nd to last token. ",
            "id": "comment-15136098"
        },
        {
            "date": "2016-02-07T02:38:26+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ba20faa9557cdd56d6a696d702fb5a62d9d43f74 in lucene-solr's branch refs/heads/master from jbernste\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ba20faa ]\n\nSOLR-8652: Implement Statement.setMaxRows() ",
            "id": "comment-15136102"
        },
        {
            "date": "2016-02-07T02:38:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 75a81795b8c8370cc754b60801fc33cc020efb30 in lucene-solr's branch refs/heads/master from jbernste\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=75a8179 ]\n\nSOLR-8652: Check if second to last token is limit to test for limit clause ",
            "id": "comment-15136103"
        },
        {
            "date": "2016-02-07T02:38:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3d47612b04dae27080a5960088aa5e7303f14874 in lucene-solr's branch refs/heads/master from jbernste\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3d47612 ]\n\nSOLR-8652: Lower case the limit clause ",
            "id": "comment-15136104"
        }
    ]
}