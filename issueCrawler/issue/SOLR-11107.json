{
    "id": "SOLR-11107",
    "title": "make the threshold for zombie servers of LBHttpSolrClient configurable",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "clients - java"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "LBHttpSolrClient treats a server as a zombie if it receives abnormal response from the server. Servers in bad status are detected by this scheme.\n\nHowever, healthy servers can be treated as a zombie because even healthy servers sometimes returns server error. For example, if we submit a range query with bad syntax (like [a TO 1]), servers return 500 server error and the servers are treated as zombies. To make matters worse, in SolrCloud mode, all the servers in a cluster become zombies by retry if we do not set numServersToTry. Even if we set some small number to numServersToTry, several evil requests can rob the client of load balancing function.\n\nServers should return 400 when they receive bad request but it may be difficult to fix all. Therefore, it is useful to enable relaxing the threshold for treating a server as a zombie. The implemented solution judges zombies by how many times in a row a server returns bad response not by whether a server returns bad response even once.",
    "attachments": {
        "SOLR-11107.patch": "https://issues.apache.org/jira/secure/attachment/12877766/SOLR-11107.patch"
    },
    "issue_links": {},
    "comments": []
}