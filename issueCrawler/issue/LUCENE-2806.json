{
    "id": "LUCENE-2806",
    "title": "ArrayIndexOutOfBoundsException thrown from TermScorer.score while doing a regular index search.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.0.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "java.lang.ArrayIndexOutOfBoundsException: 51064\n\torg.apache.lucene.search.TermScorer.score(TermScorer.java:130)\n\torg.apache.lucene.search.TopScoreDocCollector$InOrderTopScoreDocCollector.collect(TopScoreDocCollector.java:47)\n\torg.apache.lucene.search.TermScorer.score(TermScorer.java:78)\n\torg.apache.lucene.search.TermScorer.score(TermScorer.java:70)\n\torg.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:212)\n\torg.apache.lucene.search.Searcher.search(Searcher.java:67)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2010-12-07T09:31:26+0000",
            "content": "Can you please post a patch with a short test case that reproduces the bug? If not, can you please describe the environment: index size, num docs, query used etc.\n\nFrom TermScorer's code, the AIOOBE can be thrown if the 'freq' is larger than the scoreCache array size, however there is an if validating that freq is smaller than the array size, so I don't get it ... ",
            "author": "Shai Erera",
            "id": "comment-12968643"
        },
        {
            "date": "2010-12-07T09:42:11+0000",
            "content": "I used SimpleAnalyzer to build the index. There are totally 240,000+\ndocuments (multiple fielded documents).\nI use SimpleAnalyzer to generate the query. The query has two fields to\nsearch like this: field1:searchstring* AND field2:searchstring2. The first\none has a regular expression '*' at the end of the query string. To match\nobtain matches when the query string is not entered completely. The query\nstring is a single word appended with a '', say like 'field1:glamour AND\ntype:document'.\nI run this query on the index and it throws this error.\n\nCould you please tell me what 'freq' is? Is the frequency of a word or is it\nan array?\n\nThanks,\nSoujanya\n\n ",
            "author": "Soujanya",
            "id": "comment-12968647"
        },
        {
            "date": "2010-12-07T09:59:16+0000",
            "content": "Ok \u2013 I looked at 3x source code, but I see you marked the issue as 3.0.3 and that TermScorer's lines are different between 3x and 3.0.3. The offending line looks like:\n\n\n    return norms == null ? raw : raw * SIM_NORM_DECODER[norms[doc] & 0xFF]; // normalize for field\n\n\n\nAnd it can be thrown by either invalid access to the 'norms' array, or the SIM_NORM_DECODER array. Are you using a custom Similarity maybe? I think it's less likely that the invalid access is caused from the 'norms' array, as it is allocated in the size of the index (one norm per document).\n\nAre you able to rebuild the index? If so, I'd suggest to rebuild it and add all content as ANALYZED_NO_NORMS to disable norms. If the AIOOBE still happens, then we know it's from the SIM_NORM_DECODER, otherwise it's from the norms[] array.\n\nAlso, does it happen in other queries too? Maybe to remove some noise, remove the field:word* part and only keep the type:document part? Trying to minimize the query down to few select terms to ease on the debugging.\n\nCan you perhaps post the index here? ",
            "author": "Shai Erera",
            "id": "comment-12968654"
        }
    ]
}