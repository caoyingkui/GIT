{
    "id": "LUCENE-5577",
    "title": "Temporary folder and file management (and cleanup facilities)",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ]
    },
    "description": "This is a spinoff of the work Mark Miller, Uwe and me have initiated in SOLR-5914. \n\nThe core concept is this:\n\n\n\tevery test should create its temporary folders and files in a sub-folder of one, easily identifiable, parent.\n\n\n\n\n\tthe parent folder is named after the test class, with [org.apache.] removed for brevity. the folder name includes the master seed and a generated sequence integer, if needed, to easily demarcate different runs (and identify which run produced which files).\n\n\n\n\n\ttemporary folder/ file creation routines should be available in LTC, so that no additional imports/ fiddling is needed.\n\nLTC#createTempDir()\nLTC#createTempDir(String prefix)\nLTC#createTempFile()\nLTC#createTempFile(String prefix, String suffix)\n\n\nNote the absence of \"create a temporary file/dir under a given directory\" method. These shouldn't be needed since any temporary folder created by the above is guaranteed to be empty. If one still needs temporary file creation use createTempDir() and then relevant File class methods.\n\n\n\n\n\tany temporary folders and files should be removable at the end of the suite (class), if all tests completes successfully. Failure to remove any files should be marked as an error (will manifest itself on windows if one leaves open file handles).\n\n\n\n\n\tthere should be a way to temporarily mark a class to circumvent the above check (SuppressTempFileChecks annotation for known offenders). Annotating a class with SuppressTempFileChecks will still attempt to remove temporary files, but will not cause an error if this fails. Any files that couldn't be deleted will be printed to stdout with an appropriate message.\n\n\n\n\n\tthere should be a way for developers to leave temporary files on disk for further inspection (even in case of successful runs). The following system properties will work:\n\n        \"tests.leavetmpdir\" /* default */,\n        \"tests.leaveTemporary\" /* ANT tasks's (junit4) flag. */,\n        \"tests.leavetemporary\" /* lowercase version of the above */,\n        \"solr.test.leavetmpdir\" /* Solr's legacy property for backcompat */))",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13960227",
            "author": "Dawid Weiss",
            "content": "I think the code is pretty much ready (against trunk). I left it in SVN at:\n\nhttps://svn.apache.org/repos/asf/lucene/dev/branches/solr5914\n\nWould like to commit shortly, it's a fairly sizeable patch and I wouldn't want it to go out of sync. ",
            "date": "2014-04-04T18:21:08+0000"
        },
        {
            "id": "comment-13960298",
            "author": "Mark Miller",
            "content": "Have not looked at the code yet, but +1 beautiful.  ",
            "date": "2014-04-04T19:10:20+0000"
        },
        {
            "id": "comment-13961022",
            "author": "ASF subversion and git services",
            "content": "Commit 1585028 from dweiss@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1585028 ]\n\nLUCENE-5577: Temporary folder and file management (and cleanup facilities) ",
            "date": "2014-04-05T09:17:23+0000"
        },
        {
            "id": "comment-13961023",
            "author": "ASF subversion and git services",
            "content": "Commit 1585029 from dweiss@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1585029 ]\n\nLUCENE-5577: Added javadocs and minor renames. ",
            "date": "2014-04-05T09:24:19+0000"
        },
        {
            "id": "comment-13961025",
            "author": "Dawid Weiss",
            "content": "Mark, Uwe - do you know how to backport this to 4.x other than by manual labor? The patch is pretty extensive and I'm not really familiar with svn (looking for something like git's rebase). ",
            "date": "2014-04-05T09:31:44+0000"
        },
        {
            "id": "comment-13961034",
            "author": "Dawid Weiss",
            "content": "Nevermind, got it. ",
            "date": "2014-04-05T09:59:45+0000"
        },
        {
            "id": "comment-13961037",
            "author": "ASF subversion and git services",
            "content": "Commit 1585035 from dweiss@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1585035 ]\n\nLUCENE-5577: Temporary folder and file management (and cleanup facilities) ",
            "date": "2014-04-05T10:09:45+0000"
        },
        {
            "id": "comment-13961061",
            "author": "ASF subversion and git services",
            "content": "Commit 1585052 from dweiss@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1585052 ]\n\nLUCENE-5577: the cleanup code didn't cleanup after itself... ",
            "date": "2014-04-05T11:44:41+0000"
        },
        {
            "id": "comment-13961062",
            "author": "ASF subversion and git services",
            "content": "Commit 1585053 from dweiss@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1585053 ]\n\nLUCENE-5577: the cleanup code didn't cleanup after itself... ",
            "date": "2014-04-05T11:45:23+0000"
        },
        {
            "id": "comment-13982543",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:25:40+0000"
        }
    ]
}