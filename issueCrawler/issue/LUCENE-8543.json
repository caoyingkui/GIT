{
    "id": "LUCENE-8543",
    "title": "Add QueryBuilder support for explicitly building SpanNearQuery and/or inOrder=true",
    "details": {
        "components": [
            "core/queryparser"
        ],
        "status": "Open",
        "resolution": "Unresolved",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Minor",
        "type": "New Feature"
    },
    "description": "QueryBuilder has historically built phrases according to the semantics of (Multi)PhraseQuery (which incorporates the concept of order, but allows for negative offsets in calculating slop/edit distance).\n\nLUCENE-8531 corrected a bug that substituted SpanNearQuery (inOrder=true) implementation for graph phrase queries despite the fact that\u00a0for slop > 0 the semantics of SpanNearQuery (inOrder=[true|false]) differ from the semantics of (Multi)PhraseQuery.\n\nInspired by (but not related to) LUCENE-8531, this issue considers the likelihood that there are some common use cases for which SpanNearQuery semantics may be preferable to the semantics of PhraseQuery. The distinction between the two is clearer for the inOrder=true case of SpanNearQuery, which disallows negative offsets in calculating slop/edit distance.\n\nThe logic for building SpanNearQuery is already present in QueryBuilder; perhaps QueryBuilder could expose that logic so that it can be leveraged in cases that explicitly desire SpanNearQuery (and associated semantics).",
    "attachments": {},
    "issue_links": {},
    "comments": []
}