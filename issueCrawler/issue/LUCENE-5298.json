{
    "id": "LUCENE-5298",
    "title": "Allow aggregating facets by any ValueSource",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "New Feature",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Facets can be aggregated today by counting them, aggregating by summing their association values, or summing the scores of the documents. Applications can write their own FacetsAggregator to compute the value of the facet in other ways. Following the new expressions module, I think it will be interesting to allow aggregating facets by arbitrary expressions, e.g. _score * sqrt(price) where 'price' is an NDV field. I'd like to explore allowing any ValueSource to be passed in and write a ValueSourceFacetsAggregator.",
    "attachments": {
        "LUCENE-5298.patch": "https://issues.apache.org/jira/secure/attachment/12611819/LUCENE-5298.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-11-03T13:33:10+0000",
            "content": "Patch adds ValueSourceFacetRequest which takes a ValueSource and creates a FacetsAggregator which aggregates by the values returned from ValueSource for documents. The app needs to specify whether the ValueSource requires document scores, and a matching aggregator is created accordingly.\n\nAlso added an example to demo/ of aggregating by an expression.\n\nNote that this adds a dependency of facet/ on queries/ because ValueSource and FunctionValues are there. If they'll move the core/ one day, we can remove the dependency. ",
            "author": "Shai Erera",
            "id": "comment-13812363"
        },
        {
            "date": "2013-11-03T13:47:40+0000",
            "content": "Same patch only renamed to SumValueSourceFacetRequest and improved its javadocs. ",
            "author": "Shai Erera",
            "id": "comment-13812373"
        },
        {
            "date": "2013-11-03T17:38:19+0000",
            "content": "+1, looks cool.\n\nI agree we should investigate the functionvalues stuff (maybe a followup issue to look at these apis?) Its making the dependency situation complex just because the abstract API is where it is today. Instead we could do the usual trick like analysis and have some mock stuff for testing and so on. ",
            "author": "Robert Muir",
            "id": "comment-13812427"
        },
        {
            "date": "2013-11-03T18:15:21+0000",
            "content": "In order to compile, we need to have ValueSource and FunctionValues under core/ (same package though I think?). We can also think about moving FunctionQuery too, though that's less of an issue, as you can always test using a CustomScoreQuery with a CustomScoreProvider which computes the score from the ValueSource (if you're interested in a score-dependent ValueSource). And it's quite easy to implement a MockValueSource. I agree though that we should do that under a different issue. Is that what you had in mind? ",
            "author": "Shai Erera",
            "id": "comment-13812441"
        },
        {
            "date": "2013-11-03T19:34:45+0000",
            "content": "yes, exactly. because of where the abstract API is (mis)placed there are many unnecessary and confusing dependencies. we should eliminate the suggest/ dependencies on expressions and queries, the expressions/ on queries, the grouping/ dependency on queries, the spatial/ dependency on queries, its a mess. ",
            "author": "Robert Muir",
            "id": "comment-13812459"
        },
        {
            "date": "2013-11-03T19:48:34+0000",
            "content": "ok I opened LUCENE-5325. ",
            "author": "Shai Erera",
            "id": "comment-13812463"
        },
        {
            "date": "2013-11-03T19:57:37+0000",
            "content": "Commit 1538431 from Shai Erera in branch 'dev/trunk'\n[ https://svn.apache.org/r1538431 ]\n\nLUCENE-5298: add SumValueSourceFacetRequest ",
            "author": "ASF subversion and git services",
            "id": "comment-13812464"
        },
        {
            "date": "2013-11-03T20:01:07+0000",
            "content": "Commit 1538433 from Shai Erera in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1538433 ]\n\nLUCENE-5298: add SumValueSourceFacetRequest ",
            "author": "ASF subversion and git services",
            "id": "comment-13812465"
        },
        {
            "date": "2013-11-03T20:15:47+0000",
            "content": "Committed to trunk and 4x. ",
            "author": "Shai Erera",
            "id": "comment-13812471"
        },
        {
            "date": "2013-11-03T20:54:30+0000",
            "content": "Commit 1538445 from Shai Erera in branch 'dev/trunk'\n[ https://svn.apache.org/r1538445 ]\n\nLUCENE-5298: add missing svn:eol-style ",
            "author": "ASF subversion and git services",
            "id": "comment-13812483"
        },
        {
            "date": "2013-11-03T20:55:50+0000",
            "content": "Commit 1538446 from Shai Erera in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1538446 ]\n\nLUCENE-5298: add missing svn:eol-style ",
            "author": "ASF subversion and git services",
            "id": "comment-13812484"
        },
        {
            "date": "2013-11-04T11:06:25+0000",
            "content": "Commit 1538551 from Shai Erera in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1538551 ]\n\nLUCENE-5298: suppress 3x codec ",
            "author": "ASF subversion and git services",
            "id": "comment-13812751"
        },
        {
            "date": "2013-11-07T07:52:42+0000",
            "content": "Commit 1539541 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1539541 ]\n\nLUCENE-5298: Maven config: add new lucene-queries dependency to the lucene-facet module; add new lucene-queries and lucene-expressions dependencies to the lucene-demo module ",
            "author": "ASF subversion and git services",
            "id": "comment-13815747"
        }
    ]
}