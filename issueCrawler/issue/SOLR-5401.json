{
    "id": "SOLR-5401",
    "title": "In Solr's ResourceLoader, add a check for @Deprecated annotation in the plugin/analysis/... class loading code, so we print a warning in the log if a deprecated factory class is used",
    "details": {
        "affect_versions": "3.6,                                            4.5",
        "status": "Resolved",
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "While changing an antique 3.6 schema.xml to Solr 4.5, I noticed that some factories were deprecated in 3.x and were no longer available in 4.x (e.g. \"solr._Language_PorterStemFilterFactory\"). If the user would have got a notice before, this could have been prevented and user would have upgraded before.\n\nIn fact the factories were @Deprecated in 3.6, but the Solr loader does not print any warning. My proposal is to add some simple code to SolrResourceLoader that it prints a warning about the deprecated class, if any configuartion setting loads a class with @Deprecated warning. So we can prevent that problem in the future.",
    "attachments": {
        "SOLR-5401.patch": "https://issues.apache.org/jira/secure/attachment/12610899/SOLR-5401.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13808281",
            "date": "2013-10-29T18:38:12+0000",
            "content": "Patch.\n\nIf anybody has an idea how to check inside a test case that something was printed to the Solr logger, please tell me! "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13808288",
            "date": "2013-10-29T18:42:52+0000",
            "content": "Don't know about solr but for other logging frameworks you attach a listener to the root logger (or the one you're interested in), intercept any log messages, then detach the listener and analyze the forked log contents. Works like a charm for Log4j, don't know if other frameworks have this. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13808292",
            "date": "2013-10-29T18:47:18+0000",
            "content": "Solr has a logging admin API that will return recent log entries.\n\nFor example:\n\n\ncurl \"http://localhost:8983/solr/admin/logging?threshold=WARN&test&since=0&indent=true\"\n\n\n\nMore examples and the API parameters are in the admin API section of my e-book that is currently in progress, but that isn't out yet. The source code is currently your best guide: org.apache.solr.handler.admin.LoggingHandler.\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13808297",
            "date": "2013-10-29T18:48:43+0000",
            "content": "Jack Krupansky: This test has no Solr running at all, so no way to access this. I think Dawid's idea is a good one, because the testing in solr already uses log4j. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13808541",
            "date": "2013-10-29T22:24:39+0000",
            "content": "I think it is too much work for such a stupid test. I think I keep everything as in the patch. The test verifies that just nothing breaks. Everything else would be more complicated than the functionality added.  "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13808551",
            "date": "2013-10-29T22:37:09+0000",
            "content": "I suspect that all the needed logic is sprinkled throughout the Solr logging API. Yes, probably way too much effort for this one test, but it would be good to have lots of other Solr features fully test their error and warning handling, so eventually this piece of test infrastructure would be valuable. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13809177",
            "date": "2013-10-30T14:56:41+0000",
            "content": "Commit 1537119 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1537119 ]\n\nSOLR-5401: SolrResourceLoader logs a warning if a deprecated (factory) class is used in schema or config "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13809183",
            "date": "2013-10-30T14:59:29+0000",
            "content": "Commit 1537122 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1537122 ]\n\nMerged revision(s) 1537119 from lucene/dev/trunk:\nSOLR-5401: SolrResourceLoader logs a warning if a deprecated (factory) class is used in schema or config "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13810086",
            "date": "2013-10-31T10:11:37+0000",
            "content": "Jack Krupansky: I will open another issue to make something for capturing log output from tests available in the solr-testframework package. If this is done, we can add the check for this issue. For now, the whole thing works and already prints some warnings in the dfeault Solr config, which should be cleaned up to be deprecation free (see SOLR-5404). "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13810107",
            "date": "2013-10-31T10:43:54+0000",
            "content": "It would be better to add some form of a callback listener instead of capturing the whole thing. Solr logs are huge so capturing in memory will very likely OOM on many machines... "
        }
    ]
}