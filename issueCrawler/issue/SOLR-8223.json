{
    "id": "SOLR-8223",
    "title": "Take care not to accidentally swallow OOMErrors",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "4.10.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "This was first noticed with 4.10.3, but it looks like it still applies to trunk. There are a few places in the code where we catch Throwable and then don't check for OOM or rethrow it. This behaviour means that OOM kill scripts won't run, and the JVM can get into an undesirable state.",
    "attachments": {
        "SOLR-8223.patch": "https://issues.apache.org/jira/secure/attachment/12769628/SOLR-8223.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-29T20:55:53+0000",
            "author": "Mike Drob",
            "content": "Attaching a patch that fixes an instance in CoreContainer and LIRThread. ",
            "id": "comment-14981258"
        },
        {
            "date": "2015-11-02T17:50:18+0000",
            "author": "Christine Poerschke",
            "content": "Small change, looks reasonable to me.\n\nre: the CoreContainer change being to RuntimeException whereas the LeaderInitiatedRecoveryThread change is to Exception - just curious re: why the difference? The class hierarchy being Throwable -> Error -> VirtualMachineError -> OutOfMemoryError and Throwable -> Exception -> RuntimeException both changes will stop swallowing the OOMError but the CoreContainer will also stop catching non-RuntimeException Exceptions, so just curious re: the distinction.\n ",
            "id": "comment-14985609"
        },
        {
            "date": "2015-11-02T18:03:05+0000",
            "author": "Mike Drob",
            "content": "In CoreContainer, zkSys.registerInZk doesn't declare any checked exceptions, so we can narrow the scope to catching only unchecked ones. This might help us notice API or compatibility changes in the future.\n\nIn LeaderInitiatedRecoveryThread, client.request declares both SolrServerException and IOException so we still have to handle them in some way. The existing code did not make a distinction between those and RuntimeException, so I made the minimal changes I could. It would have been reasonable to catch (IOException | SolrServerException | RuntimeException e) but I didn't think of that at the time and I'm not sure it really adds much value. ",
            "id": "comment-14985647"
        },
        {
            "date": "2015-11-02T19:28:28+0000",
            "author": "Christine Poerschke",
            "content": "Makes sense. Thanks for explaining. ",
            "id": "comment-14985842"
        },
        {
            "date": "2015-11-04T17:07:59+0000",
            "author": "Mike Drob",
            "content": "Christine Poerschke - do you think this is good to commit, or are there other changes you think it should have? I tried to figure out what kind of meaningful tests I could add, but couldn't come up with anything that was non-trivial and useful. ",
            "id": "comment-14989925"
        },
        {
            "date": "2015-11-04T17:12:40+0000",
            "author": "Christine Poerschke",
            "content": "I think this is good to commit. (Won't get to it today though.) ",
            "id": "comment-14989937"
        },
        {
            "date": "2015-11-05T17:03:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1712817 from Christine Poerschke in branch 'dev/trunk'\n[ https://svn.apache.org/r1712817 ]\n\nSOLR-8223: Avoid accidentally swallowing OutOfMemoryError (in LeaderInitiatedRecoveryThread.java or CoreContainer.java) ",
            "id": "comment-14991992"
        },
        {
            "date": "2015-11-05T18:28:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1712842 from Christine Poerschke in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1712842 ]\n\nSOLR-8223: Avoid accidentally swallowing OutOfMemoryError (in LeaderInitiatedRecoveryThread.java or CoreContainer.java) (merge in revision 1712817 from trunk) ",
            "id": "comment-14992189"
        },
        {
            "date": "2015-11-06T09:31:20+0000",
            "author": "Christine Poerschke",
            "content": "Thanks Mike! ",
            "id": "comment-14993423"
        }
    ]
}