{
    "id": "LUCENE-5839",
    "title": "Regex bug in AnalyzingQueryParser",
    "details": {
        "type": "Bug",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "core/queryparser"
        ],
        "affect_versions": "4.9",
        "status": "Open",
        "fix_versions": []
    },
    "description": "Dennis Walter recently pointed out this bug on dev@lucene.apache.org:\n\n\"  // gobble escaped chars or find a wildcard character \n  private final Pattern wildcardPattern = Pattern.compile(\"(.)|([?*]+)\");\n\nThe first group will match a literal dot (\".\"), while its intention seems to be to match a backslash and a single character. So the expression should instead be \"(\\\\\\\\.)|([?*]+)\"  \"",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14068511",
            "author": "ASF GitHub Bot",
            "content": "GitHub user tballison opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/67\n\n    LUCENE-5839: Fix regex in AnalyzingQueryParser\n\n    LUCENE-5839: Fix regex in AnalyzingQueryParser\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/tballison/lucene-solr trunk\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/67.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #67\n\n\ncommit 1eac4382dd1ee7a4319096499335d7f7f28f526a\nAuthor: tballison <tallison@mitre.org>\nDate:   2014-07-21T13:22:38Z\n\n    Fix regex in AnalyzingQueryParser\n\n ",
            "date": "2014-07-21T13:35:12+0000"
        },
        {
            "id": "comment-14068520",
            "author": "Tim Allison",
            "content": "Created edge case to test this.\n\nLUCENE-5504 is a cleaner way to go to deal with this.\n\nWhile looking at the code again, I noticed that AnalyzingQueryParser is using the superclass' getXQuery.  This will have the effect of lowercasing whatever happens after analysis.  If someone's analyzer is upcasing, AnalyzingQueryParser will fail.  I can submit another patch to fix this, but I think something along the lines of LUCENE-5504 is a better way to go. ",
            "date": "2014-07-21T13:39:51+0000"
        }
    ]
}