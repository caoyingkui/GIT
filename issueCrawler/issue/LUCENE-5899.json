{
    "id": "LUCENE-5899",
    "title": "shenandoah GC can cause \"ClassCastException: org.apache.lucene.codecs.MappingMultiDocsEnum cannot be cast to org.apache.lucene.index.DocsAndPositionsEnum\"",
    "details": {
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "core/codecs"
        ],
        "affect_versions": "4.9",
        "status": "Open",
        "fix_versions": []
    },
    "description": "User report of bizare ClassCastException when running some lucene code with the (experimental) shenandoah GC\n\n\nException in thread \"Lucene Merge Thread #0\" org.apache.lucene.index.MergePolicy$MergeException: java.lang.ClassCastException: org.apache.lucene.codecs.MappingMultiDocsEnum cannot be cast to org.apache.lucene.index.DocsAndPositionsEnum\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:545)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:518)\nCaused by: java.lang.ClassCastException: org.apache.lucene.codecs.MappingMultiDocsEnum cannot be cast to org.apache.lucene.index.DocsAndPositionsEnum\n\tat org.apache.lucene.codecs.PostingsConsumer.merge(PostingsConsumer.java:127)\n\tat org.apache.lucene.codecs.TermsConsumer.merge(TermsConsumer.java:110)\n\tat org.apache.lucene.codecs.FieldsConsumer.merge(FieldsConsumer.java:72)\n\tat org.apache.lucene.index.SegmentMerger.mergeTerms(SegmentMerger.java:399)\n\tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:112)\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4163)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3759)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:405)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:482)\n\n\n\n\n\nException in thread \"Lucene Merge Thread #0\" org.apache.lucene.index.MergePolicy$MergeException: java.io.IOException: Invalid vLong detected (negative values disallowed)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:545)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:518)\nCaused by: java.io.IOException: Invalid vLong detected (negative values disallowed)\n\tat org.apache.lucene.store.DataInput.readVLong(DataInput.java:193)\n\tat org.apache.lucene.codecs.blocktree.BlockTreeTermsReader.<init>(BlockTreeTermsReader.java:169)\n\tat org.apache.lucene.codecs.lucene41.Lucene41PostingsFormat.fieldsProducer(Lucene41PostingsFormat.java:441)\n\tat org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader.<init>(PerFieldPostingsFormat.java:197)\n\tat org.apache.lucene.codecs.perfield.PerFieldPostingsFormat.fieldsProducer(PerFieldPostingsFormat.java:254)\n\tat org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:120)\n\tat org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:107)\n\tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:143)\n\tat org.apache.lucene.index.ReadersAndUpdates.getReaderForMerge(ReadersAndUpdates.java:668)\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4099)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3759)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:405)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:482)\n\n\n\n\nException in thread \"Lucene Merge Thread #0\" org.apache.lucene.index.MergePolicy$MergeException: java.lang.NullPointerException\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:545)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:518)\nCaused by: java.lang.NullPointerException\n\tat org.apache.lucene.codecs.blocktree.BlockTreeTermsReader.<init>(BlockTreeTermsReader.java:169)\n\tat org.apache.lucene.codecs.lucene41.Lucene41PostingsFormat.fieldsProducer(Lucene41PostingsFormat.java:441)\n\tat org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader.<init>(PerFieldPostingsFormat.java:197)\n\tat org.apache.lucene.codecs.perfield.PerFieldPostingsFormat.fieldsProducer(PerFieldPostingsFormat.java:254)\n\tat org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:120)\n\tat org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:107)\n\tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:143)\n\tat org.apache.lucene.index.ReadersAndUpdates.getReaderForMerge(ReadersAndUpdates.java:668)\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4099)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3759)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:405)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:482)\nException in thread \"Lucene Merge Thread #0\" org.apache.lucene.index.MergePolicy$MergeException: java.lang.NullPointerException\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:545)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:518)\nCaused by: java.lang.NullPointerException\n\tat org.apache.lucene.codecs.MappingMultiDocsAndPositionsEnum.reset(MappingMultiDocsAndPositionsEnum.java:50)\n\tat org.apache.lucene.codecs.TermsConsumer.merge(TermsConsumer.java:188)\n\tat org.apache.lucene.codecs.FieldsConsumer.merge(FieldsConsumer.java:72)\n\tat org.apache.lucene.index.SegmentMerger.mergeTerms(SegmentMerger.java:399)\n\tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:112)\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4163)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3759)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:405)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:482)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14108536",
            "author": "Michael McCandless",
            "content": "Hi Littlestar, that's a spooky exception, can you provide a test case showing how you hit it?  Or describe what led up to it? ",
            "date": "2014-08-24T20:19:42+0000"
        },
        {
            "id": "comment-14108841",
            "author": "Littlestar",
            "content": "I test lucene on shenandoah with big memory + bigdata(128G, 1.2T).   \nhttp://openjdk.java.net/jeps/189\nhttp://icedtea.classpath.org/hg/shenandoah/\n\nIt throws above exception.\nI see the luence code, I think the exception is ok.\nBecause org.apache.lucene.codecs.MappingMultiDocsEnum is not instanceof  org.apache.lucene.index.DocsAndPositionsEnum. ",
            "date": "2014-08-25T07:22:14+0000"
        },
        {
            "id": "comment-14108849",
            "author": "Uwe Schindler",
            "content": "If it works with other garbage collectors it is more likely a bug in Shenandoah. The other one, G1GC, also has many bugs and throws crazy exceptions in some cases (like a NullPointerException where nothing can be null).\n\nFrom my view at the code, the casts are correct, it is just something Hotspot fails to handle correctly.\n\nPlease open bug report at Oracle. We have not yet tested Lucene with this GC, because it is not yet part of official JDK9 preview releases. ",
            "date": "2014-08-25T07:32:02+0000"
        },
        {
            "id": "comment-14109390",
            "author": "Hoss Man",
            "content": "I've updated the summary & description to make it more clear what circumstances this happens in.\n\nLittlestar: it would be very helpful if you could provide some explicit details on what exactly you mean by \"test lucene\" ... is this test code you wrote? were you running \"ant test\" from the lucene distribution? ... which test threw this exception? does it reproduce reliably?\n\nif you do open a JDK bug regarding this, please link to this issue, and then post the resulting bug # back here as a comment as well. ",
            "date": "2014-08-25T17:50:05+0000"
        },
        {
            "id": "comment-14110144",
            "author": "Littlestar",
            "content": "I post a mail to shenandoah develop maillist\nMARK here. http://icedtea.classpath.org/pipermail/shenandoah/2014-August/000163.html\n\nThanks. ",
            "date": "2014-08-26T01:39:33+0000"
        },
        {
            "id": "comment-14113502",
            "author": "Littlestar",
            "content": "I test again, there are some strange exception\n\norg.apache.lucene.index.MergePolicy$MergeException: java.lang.NullPointerException\norg.apache.lucene.index.MergePolicy$MergeException: java.io.IOException: Invalid vLong detected (negative values disallowed)\n\nI post at top. ",
            "date": "2014-08-28T07:44:18+0000"
        }
    ]
}