{
    "id": "SOLR-2664",
    "title": "Disable/enable autocommit on the fly",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "There are occasions when although autocommit is configured, it would be desirable to disable it temporarily - for instance when batch adding/updating a set of documents which should be committed atomically (e.g. a set of price changes).\n\nThe patch adds <disableAutoCommit/> and </enableAutoCommit> commands to XMLUpdateHandler, and also adds a disableAutoCommit=true|false attribute to the <add> element - this will disable autocommit until the terminating </add> at the end of the XML document is reached.\n\nAt present, the autocommit state will not survive a core reload.\n\nIt should be possible to extend this functionality to SolrJ, CSVUpdatehandler ( and JSONUpdateHandler ?)",
    "attachments": {
        "SOLR-2664.patch": "https://issues.apache.org/jira/secure/attachment/12486931/SOLR-2664.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Simon Rosenthal",
            "id": "comment-13067326",
            "date": "2011-07-18T21:49:16+0000",
            "content": "Patch added "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13081976",
            "date": "2011-08-09T22:35:48+0000",
            "content": "bq It should be possible to extend this functionality to SolrJ, CSVUpdatehandler ( and JSONUpdateHandler ?)\n\nWe should do this out of the gate I think - this command should be available consistently. "
        },
        {
            "author": "Simon Rosenthal",
            "id": "comment-13089690",
            "date": "2011-08-23T19:38:52+0000",
            "content": "In working on extending the functionality to SolrJ/CSV/JSON, I've seen some shortcomings and ambiguities in the initial API I was working on.\n\nhere's a clearer approach:\n\nThe anticipated use case would be to disable autocommits temporarily during update processing from a content stream (or from a server.add() in solrJ). So for /update handlers where a content stream is specified, append the parameter &deferAutoCommit=true to the URL. Autocommits will be disabled while the content stream is processed, and automatically re-enabled at the end of processing (regardless of success or failure). This will also be a recognized attribute in an <add> element for solr XML processing.\n\nAdditionally, no content stream is specified,  one can specify the single operations /update?disableAutoCommit=true and subsequently /update/enableAutoCommit=true, in the same way as you can specify commit as the only parameter. However  you're on your own if you do the one without the other....\n\nSolrJ will have new server#disableAutoCommit and server#enableAutocommit methods, and also  add(doc, boolean deferAutoCommit).\n\n\n\n\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13089760",
            "date": "2011-08-23T21:03:32+0000",
            "content": "Rather than disabling autoCommit globally (for all clients), shouldn't it just disable it for that particular client?  A different client may be adding some time sensitive documents.\n\nWe could add a \"batch=true\" that is a higher level concept, and does the following:\n\n\twon't trigger autocommits\n\tupdates aren't guaranteed to be seen by real-time-get (and thus logging all of the document stored fields wouldn't be necessary)\n\n\n\nAnother random thought: if an explicit \"commit=true\" is specified in the URL, perhaps auto commit could be disabled? That could either take the place of a \"batch\" parameter, or at least imply \"batch=true\". "
        },
        {
            "author": "Simon Rosenthal",
            "id": "comment-13089783",
            "date": "2011-08-23T21:34:07+0000",
            "content": "Rather than disabling autoCommit globally (for all clients), shouldn't it just disable it for that particular client? A different client may be adding some time sensitive documents.\n\nThat's a much better approach! I like the \"batch\" parameter. Is it in fact now possible to autocommit (or not, in this case) only for a particular content stream/batch, when multiple ones are being indexed simultaneoulsy ?  (my understanding has always been that commits/autocommits were global in effect).\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13089793",
            "date": "2011-08-23T21:48:00+0000",
            "content": "I don't think it is possible - I think with Yonik's idea, all clients would have to coordinate, or you wouldn't really be guaranteed to have a batch you could avoid committing. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13168877",
            "date": "2011-12-13T23:39:48+0000",
            "content": "I'm not sure i really understand the \"batch\" suggestion, but if the general idea of the overall issue is that in some solr instances, some clients know they don't need autocommit, the clean solution (in my mind) would be for these solr instances to be configured such that...\n\n\n\tthere is not a global autocommit for the update handler\n\tthere is a default commitWithin value configured for all of the Update RequestHandlers (ie \"/update\", \"/update/javabin\", etc...)\n\n\n\n...making requests default to \"auto commit\" within a configured time frame, but clients that don't want that can override by specifying commitWithin=-1 in the request.\n\nthat would satisfy all of the requested functionality w/o new code complexity right?  (and most importantly to my mind: wouldn't introduce new stateful behavior in Solr preventing autocommit that clients could trigger w/o Solr admins realizing/understanding/allowing) "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717298",
            "date": "2013-07-23T18:47:47+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971029",
            "date": "2014-04-16T12:56:56+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}