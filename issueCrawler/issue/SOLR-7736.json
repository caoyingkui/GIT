{
    "id": "SOLR-7736",
    "title": "Add a test for ZkController.publishAndWaitForDownStates",
    "details": {
        "components": [
            "SolrCloud",
            "Tests"
        ],
        "type": "Test",
        "labels": "",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Add a test for ZkController.publishAndWaitForDownStates so that bugs like SOLR-6665 do not occur again. A test exists but it is not correct and currently disabled via AwaitsFix.",
    "attachments": {
        "consoleFull-2462-ZkControllerTest.txt.gz": "https://issues.apache.org/jira/secure/attachment/12917110/consoleFull-2462-ZkControllerTest.txt.gz",
        "ZkController.failure.txt": "https://issues.apache.org/jira/secure/attachment/12917825/ZkController.failure.txt",
        "SOLR-7736.patch": "https://issues.apache.org/jira/secure/attachment/12916270/SOLR-7736.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-06-30T08:58:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1688405 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1688405 ]\n\nSOLR-7736: Point to the correct jira issue for awaits fix ",
            "id": "comment-14607973"
        },
        {
            "date": "2015-06-30T09:02:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1688406 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1688406 ]\n\nSOLR-7736: Point to the correct jira issue for awaits fix ",
            "id": "comment-14607980"
        },
        {
            "date": "2015-08-26T13:14:26+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Bulk move to 5.4 after 5.3 release. ",
            "id": "comment-14713387"
        },
        {
            "date": "2018-03-07T19:03:43+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Reopening since this still fails ",
            "id": "comment-16390040"
        },
        {
            "date": "2018-03-07T19:04:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 23765a9ff952e48a7892e5b140ec4c645f2de7b6 in lucene-solr's branch refs/heads/master from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=23765a9 ]\n\nSOLR-12028, SOLR-7736: testPublishAndWaitForDownStates always fails ",
            "id": "comment-16390042"
        },
        {
            "date": "2018-03-07T19:06:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit dc9b511f7815c8a95e88d55e523e9c28e3299a3a in lucene-solr's branch refs/heads/branch_7x from Tom\u00e1s Fern\u00e1ndez L\u00f6bbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dc9b511 ]\n\nSOLR-12028, SOLR-7736: testPublishAndWaitForDownStates always fails ",
            "id": "comment-16390046"
        },
        {
            "date": "2018-03-26T21:04:41+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "This patch fixes the test. We create the cluster in such a way that the pre SOLR-6665 code fails the test but passes after. I'm still not happy with this because the method under test always times out in the successful outcome but it will have to do due to time constraints. ",
            "id": "comment-16414546"
        },
        {
            "date": "2018-03-27T04:58:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ecb94ba4422d1ed70bd368e7aa562012cc3853ba in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ecb94ba ]\n\nSOLR-7736: Fix ZkController.publishAndWaitForDownStates ",
            "id": "comment-16415025"
        },
        {
            "date": "2018-03-27T05:22:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9b4d16963775f1a465f93542aef3eabc1e105afe in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9b4d169 ]\n\nSOLR-7736: Fix ZkController.publishAndWaitForDownStates\n\n(cherry picked from commit ecb94ba) ",
            "id": "comment-16415040"
        },
        {
            "date": "2018-03-31T16:32:39+0000",
            "author": "Mikhail Khludnev",
            "content": "https://builds.apache.org/job/Lucene-Solr-Tests-master/2462/\n\nFAILED:  junit.framework.TestSuite.org.apache.solr.cloud.ZkControllerTest\n\nError Message:\n1 thread leaked from SUITE scope at org.apache.solr.cloud.ZkControllerTest:     1) Thread[id=10780, name=OverseerAutoScalingTriggerThread-72373776421355522-127.0.0.1:8983_solr-n_0000000001, state=RUNNABLE, \nStack Trace:\ncom.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE scope at org.apache.solr.cloud.ZkControllerTest:\n   1) Thread[id=10780, name=OverseerAutoScalingTriggerThread-72373776421355522-127.0.0.1:8983_solr-n_0000000001, state=RUNNABLE, group=Overseer autoscaling triggers]\n        at java.lang.ClassLoader.findLoadedClass0(Native Method)\n        at java.lang.ClassLoader.findLoadedClass(ClassLoader.java:1038)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:406)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n        at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:613)\n        at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:738)\n        at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:164)\n        at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:141)\n\nattaching consoleFull-2462-ZkControllerTest.txt.gz ",
            "id": "comment-16421383"
        },
        {
            "date": "2018-03-31T16:57:30+0000",
            "author": "Mikhail Khludnev",
            "content": "the problem looks as follows: we have OverseerAutoScalingTriggerThread spining in the same error \n\n   [junit4]   2&gt; 2650914 ERROR (OverseerAutoScalingTriggerThread-72373776421355522-127.0.0.1:8983_solr-n_0000000001) [    ] o.a.s.c.a.OverseerTriggerThread A ZK error has occurred\n   [junit4]   2&gt; java.io.IOException: org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /autoscaling.json\n   [junit4]   2&gt;     at org.apache.solr.client.solrj.impl.ZkDistribStateManager.getAutoScalingConfig(ZkDistribStateManager.java:183) ~[java/:?]\n   [junit4]   2&gt;     at org.apache.solr.client.solrj.cloud.DistribStateManager.getAutoScalingConfig(DistribStateManager.java:83) ~[java/:?]\n   [junit4]   2&gt;     at org.apache.solr.cloud.autoscaling.OverseerTriggerThread.run(OverseerTriggerThread.java:127) [java/:?]\n   [junit4]   2&gt;     at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]\n   [junit4]   2&gt; Caused by: org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /autoscaling.json\n   [junit4]   2&gt;     at org.apache.zookeeper.KeeperException.create(KeeperException.java:130) ~[zookeeper-3.4.11.jar:3.4.11-37e277162d567b55a07d1755f0b31c32e93c01a0]\n   [junit4]   2&gt;     at org.apache.zookeeper.KeeperException.create(KeeperException.java:54) ~[zookeeper-3.4.11.jar:3.4.11-37e277162d567b55a07d1755f0b31c32e93c01a0]\n   [junit4]   2&gt;     at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1215) ~[zookeeper-3.4.11.jar:3.4.11-37e277162d567b55a07d1755f0b31c32e93c01a0]\n   [junit4]   2&gt;     at org.apache.solr.common.cloud.SolrZkClient.lambda$getData$5(SolrZkClient.java:340) ~[java/:?]\n   [junit4]   2&gt;     at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:60) ~[java/:?]\n   [junit4]   2&gt;     at org.apache.solr.common.cloud.SolrZkClient.getData(SolrZkClient.java:340) ~[java/:?]\n   [junit4]   2&gt;     at org.apache.solr.client.solrj.impl.ZkDistribStateManager.getAutoScalingConfig(ZkDistribStateManager.java:176) ~[java/:?]\n   [junit4]   2&gt;     ... 3 more\n\n\nThat Zk session expiration is a separate question. As I remember in some places a session is restored, there are a lot of methods where SessionExpiredException fallen through, and I don't fully understand why. There a other questions about root case. I want to tackle just interruption problem so far. It seems like this spin can not be interrupted by the thread lingering.  \n ",
            "id": "comment-16421394"
        },
        {
            "date": "2018-03-31T17:05:08+0000",
            "author": "Mikhail Khludnev",
            "content": "Attaching SOLR-7736.patch which just letting interrupt OverseerAutoScalingTriggerThread.  ",
            "id": "comment-16421400"
        },
        {
            "date": "2018-04-01T11:56:54+0000",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n -1 \n  test4tests  \n   0m  0s \n  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m  9s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   3m 15s \n  the patch passed  \n\n\n +1 \n  javac  \n   3m 15s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   3m 15s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   3m 15s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   3m 16s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  88m 17s \n  core in the patch failed.  \n\n\n  \n   \n  98m 18s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.ScheduledMaintenanceTriggerTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-7736 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12917112/SOLR-7736.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / b4a83ff \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_152 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/31/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/31/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/31/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "id": "comment-16421634"
        },
        {
            "date": "2018-04-01T12:30:13+0000",
            "author": "Mikhail Khludnev",
            "content": "org.apache.solr.cloud.autoscaling.ScheduledMaintenanceTriggerTest.testInactiveShardCleanup fails to me on master without patch as well. \n\nAha. It's ok since it's a BadApple! ",
            "id": "comment-16421637"
        },
        {
            "date": "2018-04-01T15:39:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a4789db47788daeef0ba2ab426b4047d2fa47070 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a4789db ]\n\nSOLR-7736: break OverseerTriggerThread when interrupted. ",
            "id": "comment-16421694"
        },
        {
            "date": "2018-04-01T15:41:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a2fcb8c9ed4a8e7fd0c23829c089573558a987f0 in lucene-solr's branch refs/heads/branch_7x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a2fcb8c ]\n\nSOLR-7736: break OverseerTriggerThread when interrupted. ",
            "id": "comment-16421695"
        },
        {
            "date": "2018-04-02T03:38:57+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Mikhail Khludnev! ",
            "id": "comment-16421914"
        },
        {
            "date": "2018-04-06T07:03:14+0000",
            "author": "Mikhail Khludnev",
            "content": "attaching the excerpt from https://builds.apache.org/job/PreCommit-SOLR-Build/39/console\u00a0ZkController.failure.txt\nIt goes like this: \n\n   [junit4]   2> 499911 INFO  (TEST-ZkControllerTest.testReadConfigName-seed#[BC856CC565039E77]) [n:127.0.0.1:8983_solr\n  ] o.a.s.c.s.i.ZkClientClusterStateProvider Cluster at 127.0.0.1:40606/solr ready\n   [junit4]   2> 499916 INFO  (TEST-ZkControllerTest.testReadConfigName-seed#[BC856CC565039E77]) [n:127.0.0.1:8983_solr\n  ] o.a.s.c.ZkController Register node as live in ZooKeeper:/live_nodes/127.0.0.1:8983_solr\n   [junit4]   2> 499919 INFO  (OverseerStateUpdate-73578760132362243-127.0.0.1:8983_solr-n_0000000000) [    ] o.a.s.c.c.Z\nkStateReader Updated live nodes from ZooKeeper... (0) -> (1)\n   [junit4]   2> 499919 INFO  (TEST-ZkControllerTest.testReadConfigName-seed#[BC856CC565039E77]) [n:127.0.0.1:8983_solr\n  ] o.a.s.c.Overseer Overseer (id=73578760132362243-127.0.0.1:8983_solr-n_0000000000) closing\n   [junit4]   2> 499920 INFO  (OverseerStateUpdate-73578760132362243-127.0.0.1:8983_solr-n_0000000000) [    ] o.a.s.c.Ove\nrseer Overseer Loop exiting : 127.0.0.1:8983_solr\n   [junit4]   2> 499920 ERROR (OverseerCollectionConfigSetProcessor-73578760132362243-127.0.0.1:8983_solr-n_0000000000) [\n    ] o.a.s.c.OverseerTaskProcessor Unable to prioritize overseer\n   [junit4]   2> java.lang.InterruptedException: null\n   [junit4]   2>        at java.lang.Object.wait(Native Method) ~[?:1.8.0_152]\n   [junit4]   2>        at java.lang.Object.wait(Object.java:502) ~[?:1.8.0_152]\n   [junit4]   2>        at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1409) ~[zookeeper-3.4.11.jar:3.4\n.11-37e277162d567b55a07d1755f0b31c32e93c01a0]\n   [junit4]   2>        at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1100) ~[zookeeper-3.4.11.jar:3.4.11-37e27\n7162d567b55a07d1755f0b31c32e93c01a0]\n   [junit4]   2>        at org.apache.solr.common.cloud.SolrZkClient.lambda$exists$3(SolrZkClient.java:316) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:60) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.common.cloud.SolrZkClient.exists(SolrZkClient.java:316) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.cloud.OverseerNodePrioritizer.prioritizeOverseerNodes(OverseerNodePrioritizer.\njava:60) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.cloud.OverseerTaskProcessor.run(OverseerTaskProcessor.java:178) [java/:?]\n   [junit4]   2>        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]\n   [junit4]   2> 499934 WARN  (OverseerExitThread) [    ] o.a.s.c.Overseer I'm exiting, but I'm still the leader\n   [junit4]   2> 499939 INFO  (OverseerExitThread) [    ] o.a.s.c.OverseerElectionContext I am going to be the leader 127.0.0.1:8983_solr\n   [junit4]   2> 499940 INFO  (OverseerExitThread) [    ] o.a.s.c.Overseer Overseer (id=73578760132362243-127.0.0.1:8983_solr-n_0000000001) starting\n   [junit4]   2> 499948 ERROR (OverseerAutoScalingTriggerThread-73578760132362243-127.0.0.1:8983_solr-n_0000000001) [    ] o.a.s.c.a.OverseerTriggerThread A ZK error has occurred\n   [junit4]   2> java.io.IOException: org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /autoscaling.json\n   [junit4]   2>        at org.apache.solr.client.solrj.impl.ZkDistribStateManager.getAutoScalingConfig(ZkDistribStateManager.java:183) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.client.solrj.cloud.DistribStateManager.getAutoScalingConfig(DistribStateManager.java:83) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.cloud.autoscaling.OverseerTriggerThread.run(OverseerTriggerThread.java:131) [java/:?]\n   [junit4]   2>        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]\n   [junit4]   2> Caused by: org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /autoscaling.json\n   [junit4]   2>        at org.apache.zookeeper.KeeperException.create(KeeperException.java:130) ~[zookeeper-3.4.11.jar:3.4.11-37e277162d567b55a07d1755f0b31c32e93c01a0]\n   [junit4]   2>        at org.apache.zookeeper.KeeperException.create(KeeperException.java:54) ~[zookeeper-3.4.11.jar:3.4.11-37e277162d567b55a07d1755f0b31c32e93c01a0]\n   [junit4]   2>        at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1215) ~[zookeeper-3.4.11.jar:3.4.11-37e277162d567b55a07d1755f0b31c32e93c01a0]\n   [junit4]   2>        at org.apache.solr.common.cloud.SolrZkClient.lambda$getData$5(SolrZkClient.java:340) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:60) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.common.cloud.SolrZkClient.getData(SolrZkClient.java:340) ~[java/:?]\n   [junit4]   2>        at org.apache.solr.client.solrj.impl.ZkDistribStateManager.getAutoScalingConfig(ZkDistribStateMan\nthen it start spining in session expired. At the end, the leak of the Overseer is detected and OverseerAutoScalingTriggerThread.\nI have two questions: may it happen that the first \"exiting\" Overseer leaks? Can't OverseerAutoScalingTriggerThread restore the expired session? UPD No, ZkController is responsible for reconnect and restart. \n\nfollowup SOLR-12200\n\u00a0 ",
            "id": "comment-16428043"
        },
        {
            "date": "2018-04-06T08:10:25+0000",
            "author": "Mikhail Khludnev",
            "content": "it seems like the similar leak: https://builds.apache.org/job/Lucene-Solr-NightlyTests-7.x/193/ ",
            "id": "comment-16428082"
        },
        {
            "date": "2018-04-13T22:17:47+0000",
            "author": "Varun Thacker",
            "content": "\nlog.warn(\"Interrupted\");\n\nShould we make this a little more descriptive : like \"Exiting OverseerTriggerThread\" ?\n\nShould we break when we catch this InterruptedException?\n\ntry {\n  refreshAutoScalingConf(new AutoScalingWatcher());\n} catch (ConnectException e) {\n  log.warn(\"ZooKeeper watch triggered for autoscaling conf, but Solr cannot talk to ZK: [{}]\", e.getMessage());\n} catch (InterruptedException e) {\n  // Restore the interrupted status\n  Thread.currentThread().interrupt();\n  log.warn(\"Interrupted\", e);\n}\n\n\u00a0 ",
            "id": "comment-16438007"
        },
        {
            "date": "2018-04-13T22:49:46+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I think we should just return in this particular case. No need to continue processing in that particular case (the updateLock.lockInterruptibly(); will generate another InterruptedException that will be logged (again) and break the while, but no need to wait for that I think.\n\nWhile looking at this particular class I noticed that other things my throw InterruptedExceptions that we are just swallowing, like:\n\nscheduledTriggers.add(entry.getValue());\n\nor\n\nList<String> markers = stateManager.listData(ZkStateReader.SOLR_AUTOSCALING_NODE_LOST_PATH);\n\nthis throws Exception and we catch and log it, but that exception could actually be an InterruptedException. Maybe we should change some of those methods to throw exception types more specific than Exception (Including InterruptedException), that way it will be harder to miss it ",
            "id": "comment-16438035"
        }
    ]
}