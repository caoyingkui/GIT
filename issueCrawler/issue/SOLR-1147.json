{
    "id": "SOLR-1147",
    "title": "Updating configuration files through HTTP",
    "details": {
        "affect_versions": "1.3,                                            1.4,                                            1.5",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Current behaviour :\n\nIf one wants to update a configuration file placed in Solr's conf dir, direct edition of the file is mandatory. Currently the process is : \n\n\tReplace the concerned configuration file in Solr's conf dir\n\tCommit.\n\n\n\nA commit triggers a reload of the configurations files, as long as their associated components are registered to this event. This can be achieved for a searchComponent as follows : \n\n\n    <str name=\"refreshOnCommmit\">true</str> \n\n\n\nSide question : how to register other types of components to the commit event ?\n\nUse case :\n\nAs a system using Solr, i would find handy to be able to push an updated configuration file through HTTP.\nThis would remove the currently mandatory requirement of having a direct access to configuration files, allowing more distributed architectures. This would also increase the components' added value by making them dynamic, configuration-wise.\n\n\nPossible design :\n\nA new requestHandler, taking as parameter : \n\n\tthe name of the file to update\n\toptionnally if a backup of the previous version of the file is to be done ( cf replicationHandler )\n\n\n\nOpen questions :\n\n\n\tShould reloading the new configuration keep using the \"reload on commit\" feature ?",
    "attachments": {
        "QueryElevationAdministrationRequestHandler.java": "https://issues.apache.org/jira/secure/attachment/12407339/QueryElevationAdministrationRequestHandler.java"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Nicolas Pastorino",
            "id": "comment-12706400",
            "date": "2009-05-06T12:47:04+0000",
            "content": "The attached RequestHandler could be a solution to the problematic presented above. Please note that the API usage may be awkward, as well as the way Java is leveraged. That's my first Solr extension  And yes, there are quite a few unresolved things, spottable through the 'TODO' and 'FIXME' annotations.\n\nIt was tested against Solr's trunk, and seems to be working. The new Elevate configuration is to be passed, as an XML string, in the \"elevate-configuration\" request parameter.\n "
        },
        {
            "author": "Nicolas Pastorino",
            "id": "comment-12708391",
            "date": "2009-05-12T10:30:25+0000",
            "content": "This is an updated version of the one initially attached to this issue.\nFollowing advises received on the solr-user ML ( thread : \"QueryElevationComponent : hot update of elevate.xml\" ), the new version is replication-proof. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12709241",
            "date": "2009-05-14T01:49:29+0000",
            "content": "I'm +1 for the idea of being able to push elevate config (and really other config files, too!) from a remote system into Solr.\nI only skimmed the patch.\nIt would be good to add a unit test.  Could you do that?\nYou'll also want to add the ASL on top of the source code.  It may also be good to remove eZ publish references from the Javadoc (having that in the javadoc doesn't really help developers using Solr)\nIs that \"\" at the end of QueryElevationAdministrationRequestHandler.class + \"\"  really needed?\nPlease note the bit about the code formatting here:\nhttp://wiki.apache.org/solr/HowToContribute#head-59ae13df098fbdcc46abdf980aa8ee76d3ee2e3b\n\nThanks! "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12710263",
            "date": "2009-05-18T03:48:55+0000",
            "content": "Pushing conf files into Solr is fine. But doing it just for QueryElevationComponent is probably not a good idea.  "
        },
        {
            "author": "Nicolas Pastorino",
            "id": "comment-12710285",
            "date": "2009-05-18T06:31:09+0000",
            "content": "It indeed sounds like a potentially more generic feature. Should this end-up in dedicated request Handler, which receives as parameters :\n\n\tthe name of the concerned searchComponent, or other 'module' using a configuration file\n\tthe updated configuration\n\n\n\nAnd passes along the updated configuration to the concerned 'module' in some way ? Should an existing interface be extended in order to comprize the necessary methods, or should this be handled with inheritance here, an abstract class presenting the 'updateConfiguration( ... )' method ? There probably are quite a few other approaches on this.\n\nThanks for your participation to this ! "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12710293",
            "date": "2009-05-18T07:20:15+0000",
            "content": "what it would probably need are\n\n\tthe name of the file\n\n\n\nand the handler can save it in the conf dir. It does not have to know which component this file belong to.  "
        },
        {
            "author": "Nicolas Pastorino",
            "id": "comment-12710312",
            "date": "2009-05-18T08:19:06+0000",
            "content": "Simpler, indeed. Lower-level.\nShould some versioning and/or backup on configuration files be implemented too ?\n\nOn the software-design part of it : should this be a plain requestHandler ? \nI propose myself for being the \"little hands\" coding this, if this is acceptable for all of you, after all design points are sorted out of course. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12710315",
            "date": "2009-05-18T08:27:41+0000",
            "content": "I guess a plain RequestHandler should do.\n\nbackup can be an option. the replicationHandler already does that. you can rename the old file as file-name.yyyyMMddhhmmss .\n "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12710397",
            "date": "2009-05-18T16:18:46+0000",
            "content": "Nicolas - I think it may make sense to edit and rename/redescribe this issue now, if you are going to make this more generic. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12710612",
            "date": "2009-05-19T05:07:23+0000",
            "content": "it may make sense to edit and rename/redescribe this issue\n\n+1 "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13604391",
            "date": "2013-03-16T19:20:50+0000",
            "content": "Being able to update all the various configs without \n1> having to restart Solr\n2> editing through <insert favorite editor here>\n\nwould help with ease-of-use. Maybe the new admin UI could be enhanced to do this? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16067383",
            "date": "2017-06-28T22:38:44+0000",
            "content": "Closing ancient issue. Now superseded by e.g. pushing files to ZK and various managed filters through REST. "
        }
    ]
}