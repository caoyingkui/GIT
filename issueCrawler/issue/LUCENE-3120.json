{
    "id": "LUCENE-3120",
    "title": "span query matches too many docs when two query terms are the same unless inOrder=true",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "spinoff of user list discussion - SpanNearQuery - inOrder parameter.\n\nWith 3 documents:\n\n\t\"a b x c d\"\n\t\"a b b d\"\n\t\"a b x b y d\"\n\n\n\nHere are a few queries (the number in parenthesis indicates expected #hits):\n\n\nThese ones work as expected:\n\n\t(1)  in-order, slop=0, \"b\", \"x\", \"b\"\n\t(1)  in-order, slop=0, \"b\", \"b\"\n\t(2)  in-order, slop=1, \"b\", \"b\"\n\n\n\nThese ones match too many hits:\n\n\t(1)  any-order, slop=0, \"b\", \"x\", \"b\"\n\t(1)  any-order, slop=1, \"b\", \"x\", \"b\"\n\t(1)  any-order, slop=2, \"b\", \"x\", \"b\"\n\t(1)  any-order, slop=3, \"b\", \"x\", \"b\"\n\n\n\nThese ones match too many hits as well:\n\n\t(1)  any-order, slop=0, \"b\", \"b\"\n\t(2)  any-order, slop=1, \"b\", \"b\"\n\n\n\nEach of the above passes when using a phrase query (applying the slop, no in-order indication in phrase query).\n\nThis seems related to a known overlapping spans issue - non-overlapping Span queries - as indicated by Hoss, so we might decide to close this bug after all, but I would like to at least have the junit that exposes the behavior in JIRA.",
    "attachments": {
        "LUCENE-3120.patch": "https://issues.apache.org/jira/secure/attachment/12479744/LUCENE-3120.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-05-19T09:15:53+0000",
            "content": "Attached test case demonstrating the bug. ",
            "author": "Doron Cohen",
            "id": "comment-13036078"
        },
        {
            "date": "2011-05-19T09:17:46+0000",
            "content": "Thanks for raising this. ",
            "author": "Greg Tarr",
            "id": "comment-13036080"
        },
        {
            "date": "2011-05-19T20:24:32+0000",
            "content": "Updated patch with fixed test to not depend on analysis module. ",
            "author": "Doron Cohen",
            "id": "comment-13036429"
        },
        {
            "date": "2011-05-19T22:29:03+0000",
            "content": "comment i made on the mailing list regarding this topic...\n\n\nthe crux of hte issue (as i recall) is that there is really no conecptual reason to why a query for \"'john' near 'john', in any order, with slop of Z\" shouldn't match a doc that contains only one instance of \"john\" ... the first SpanTermQuery says \"i found a match at position X\" the second SpanTermQuery says \"i found a match at position Y\" and the SpanNearQuery says \"the differnece between X and Y is less then Z\" therefore i have a match. (The SpanNearQuery can't fail just because X and Y are the same \u2013 they might be two distinct term instances, with differnet payloads perhaps, that just happen to have the same position).\n\nHowever: if true==inOrder case works because the SpanNearQuery enforces that \"X must be less then Y\" so the same term can't ever match twice.  ",
            "author": "Hoss Man",
            "id": "comment-13036538"
        },
        {
            "date": "2011-05-19T22:32:15+0000",
            "content": "What we might want to consider is a new option on SpanNearQuery that would mandate that the spans not overlap.\n\nPaul Elschot described the general form of this idea once as an numeric option to specify a minimum distance between the subspans (so the default, as implemented today, for inOrder==true would be minPositionDistance=1; and the default for inOrder==false would be minPositionDistance=0)\n\n ",
            "author": "Hoss Man",
            "id": "comment-13036540"
        },
        {
            "date": "2011-06-03T16:40:42+0000",
            "content": "bulk move 3.2 -> 3.3 ",
            "author": "Robert Muir",
            "id": "comment-13043547"
        },
        {
            "date": "2012-03-23T20:28:21+0000",
            "content": "Bulk changing fixVersion 3.6 to 4.0 for any open issues that are unassigned and have not been updated since March 19.\n\nEmail spam suppressed for this bulk edit; search for hoss20120323nofix36 to identify all issues edited ",
            "author": "Hoss Man",
            "id": "comment-13237030"
        },
        {
            "date": "2013-07-23T18:44:28+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13716962"
        },
        {
            "date": "2014-04-16T12:54:27+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970760"
        },
        {
            "date": "2014-09-17T04:02:29+0000",
            "content": "A user came across this \"odd\" behavior, attached a simple test case that was written before I came across this ticket which demonstrates the discrepancy. ",
            "author": "Steve Davids",
            "id": "comment-14136739"
        }
    ]
}