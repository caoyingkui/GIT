{
    "id": "SOLR-10031",
    "title": "ReplicationHandler path traversal vulnerability",
    "details": {
        "labels": "",
        "priority": "Blocker",
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "fix_versions": [
            "5.5.4",
            "6.4.1",
            "7.0"
        ],
        "affect_versions": "6.4",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Fra: Mark Thomas <markt@apache.org>\nEmne: Fwd: Apache Solr - security vulnerability (path traversal attack)\nDato: 24. januar 2017 kl. 13.14.36 CET\nTil: private@lucene.apache.org\nKopi: \"security@apache.org\" <security@apache.org>\nSvar til: private@lucene.apache.org\n\nDear Apache Lucene PMC,\n\nThe security vulnerability report has been received by the Apache\nSecurity Team and is being passed to you for action.\n\nPlease take careful note of the following:\n\n\tThis information is private and should be treated accordingly. The\nissue must not be discussed on a public mailing list, it must not be\nadded to a public bug tracker, etc.\n\tThe Lucene PMC is responsible for resolving this issue. The security\nteam is here to provide help and advice but the responsibility to do the\nwork lies with the Lucene PMC.\n\n\n\nYou may find the \"ASF Project Security for Committers\" [1] a useful\nreference. This e-mail represents step three of that process. Step 4\nshould be completed asap.\n\nKind regards,\n\nMark\n\n\n[1] http://www.apache.org/security/committers.html\n\n\n-------- Forwarded Message --------\nSubject: \tApache Solr - security vulnerability (path traversal attack)\nDate: \tMon, 23 Jan 2017 11:27:19 -0800\nFrom: \tHrishikesh Gadre <gadre.solr@gmail.com>\nTo: \tsecurity@apache.org\nCC: \tHrishikesh Gadre <gadre.solr@gmail.com>\n\n\n\nHi,\n\nWe found a path manipulation security vulnerability in Apache Solr after\nrunning HPE Fortify static code analyzer on the Solr codebase.\n\nHere is a brief description of this issue,\n\n\n\tApache Solr provides a \"replication\" handler which supports operations\nrelated to querying the state of an index as well as copying files\nassociated with the index.\n\n\n\nhttps://cwiki.apache.org/confluence/display/solr/Index+Replication\n<https://cwiki.apache.org/confluence/display/solr/Index+Replication>\n\nThis handler supports an HTTP API\n(/replication?command=filecontent&file=<file_name>) which is vulnerable\nto path traversal attack. Specifically, this API does not perform any\nvalidation of the user specified file_name parameter. This can allow an\nattacker to download any file readable to Solr server process even if\nit is not related to the actual Solr index state.\nhttps://www.owasp.org/index.php/Path_Traversal\n\nI have verified this with the Solr version 6.3. But I believe this\nvulnerability to be present for much longer (going back to v 4.10.x) . I\nam currently working on the fix. Please let me know the process to\nsubmit a patch for this.\n\nThanks\nHrishikesh",
    "attachments": {
        "SOLR-10031_branch5_5.patch": "https://issues.apache.org/jira/secure/attachment/12849758/SOLR-10031_branch5_5.patch",
        "SOLR-10031.patch": "https://issues.apache.org/jira/secure/attachment/12849292/SOLR-10031.patch",
        "path_traversal_fix.patch": "https://issues.apache.org/jira/secure/attachment/12849293/path_traversal_fix.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-25T13:39:53+0000",
            "content": "Patch with test.\n\nI have not tested explicitly that you can actually get files from parent folders with an unpatched system, is that necessary? The fix throws an HTTP 403 if file name is absolute or contains \"..\", or if it is not a legal file name. Should we add other checks? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15837749"
        },
        {
            "date": "2017-01-25T13:45:30+0000",
            "content": "Just saw that the reporter also prepared a similar patch (attached path_traversal_fix.patch). ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15837755"
        },
        {
            "date": "2017-01-25T13:49:56+0000",
            "content": "I like your patch more, especially the whole \"legacy\" Stack class looks not good. This one uses Path class, which would allow to implement the whole thing much easier. ",
            "author": "Uwe Schindler",
            "id": "comment-15837762"
        },
        {
            "date": "2017-01-25T14:05:29+0000",
            "content": "I see that my patch will throw an error for file names validly containing the string sequence ... It would be nicer to detect only if the whole path segment is exactly \"..\". I'll post a patch which uses Path.forEach( action ) for this ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15837781"
        },
        {
            "date": "2017-01-25T14:11:03+0000",
            "content": "New patch which loops path components. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15837786"
        },
        {
            "date": "2017-01-25T14:25:58+0000",
            "content": "+1\n\nThe only difference to the bug reporter's patch is that he uses a stack to look if it \"really escapes\". But I think we should simply forbid all \"..\" anywhere in patch. If somebody tries to use this it is always some break-in attack. ",
            "author": "Uwe Schindler",
            "id": "comment-15837806"
        },
        {
            "date": "2017-01-25T14:31:50+0000",
            "content": "Another difference is that Hrishikesh's test only tests the FILE param, while the same vulnerability is in cf and tlogFile too. And I also disallow absolute paths, though I'm not sure if that is allowed in new File(path, file) anyway. His checks are in the calling code while mine is in the DirectoryFileStream constructor, guess as low as possible is a good thing. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15837812"
        },
        {
            "date": "2017-01-25T14:36:35+0000",
            "content": "Absolute paths should definitely be disallowed! ",
            "author": "Uwe Schindler",
            "id": "comment-15837822"
        },
        {
            "date": "2017-01-25T14:48:00+0000",
            "content": "New patch that does not reveal the vulnerability in the CHANGES entry ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15837847"
        },
        {
            "date": "2017-01-25T15:10:37+0000",
            "content": "For the record, the vulnerability is ACK'ed and we have requested a CVE.\n\nIt could be argued whether it is a real vulnerability since we recommend a firewalled setup, and the user running Solr should have limited privileges.. But there are enough installs where IT employees may have HTTP access to a Solr instance but are not allowed file-system access to the same box, so this one is a bit special. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15837877"
        },
        {
            "date": "2017-01-25T15:28:45+0000",
            "content": "FYI, I just made the following proposal for the future on the private@lao list, which should also prevent issues like this:\n\n\nI think this issue should be seen as a first request for running Apache Solr in a security manager with a suitable prolicy file (like we do in tests). Elasticsearch has gone this route and I like that very much!\n\nSolr should install the security manager and policy in its main() methods before Jetty is starting. There it should restrict access to the installation folder, maybe we can even go further. It should also prevent stuff like calling System.exit() from plugins. This is especially important for all stuff that may execute java code (like Javascript in DIH or similar). ",
            "author": "Uwe Schindler",
            "id": "comment-15837909"
        },
        {
            "date": "2017-01-26T07:53:21+0000",
            "content": "CVE received from Mark Cox:\n\nHi, please use\n\nCVE-2017-3163\n\nMark ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15839392"
        },
        {
            "date": "2017-01-26T07:57:05+0000",
            "content": "Trying to understand the next step in the process. The policy says the commit message should not reveal the security breach until after release. But can we mention it in CHANGES.txt? How else's will people be aware of the importance of the fix? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15839395"
        },
        {
            "date": "2017-01-26T08:30:48+0000",
            "content": "Have a more generic message including a reference to this issue. But don't say what exactly was wrong. Don't mention the CVE number. ",
            "author": "Uwe Schindler",
            "id": "comment-15839414"
        },
        {
            "date": "2017-01-26T10:54:11+0000",
            "content": "So if we don't mention that a security issue was fixed anywhere in the released artifacts, then we do the release and rewrite the commit message, fine. But how do we communicate to the users/downloaders that this release actually fixes the given CVE? We can do it in the release announcement of course, and perhaps in the refGuide which is (currently) released after the binaries (although later on the refGuide will be released together).\n\nI see that ES has a separate security fixes webpage, perhaps that is a solution, so that people monitoring whether they should upgrade Solr due to CVEs could have one place to look it up? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15839555"
        },
        {
            "date": "2017-01-26T11:37:35+0000",
            "content": "When doing the same with the issues about remote code injection (XXE attachs) in OpenOffice/MS-Office documents (it was SVN times), I did the following (was mainly on project POI, but also affected TIKA and Solr):\n\n\tI committed stuff using the issue ID, not mentioning the security issue. I just said: \"Issue XXX. Restricted external entity resolving.\"\n\tIn the announcement on the web page I added the CVE numbers, the same in the announcement mail (you can still see those in the Solr News page, POI News page): https://lucene.apache.org/solr/news.html#18-august-2014-recommendation-to-update-apache-poi-in-apache-solr-480-481-and-490-installations, https://poi.apache.org/changes.html#Summary-N11D34\n\tAfter the release, I changed the SVN commit messages (not sure if you can do this in Git, without breaking checkouts).\n\tThe CVE numbers were added to the issue (which were public) afterwards.\n\n\n\nI think the most important thing is to have the release notes especially mention the  issue and CVE numbers and tell user: \"hey upgrade, there is an issue\". ",
            "author": "Uwe Schindler",
            "id": "comment-15839593"
        },
        {
            "date": "2017-01-26T15:16:44+0000",
            "content": "Ok, I have not run full tests and precommit with this yet. Have to go now, feel free to take over for a while so we can get it in 6.4.1 in time (without revealing that this JIRA contains a CVE on the public dev-list) ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15839842"
        },
        {
            "date": "2017-01-26T15:19:28+0000",
            "content": "OK, if you have some time you can commit the stuff, otherwise I will do this before Adrien spins 6.4.1. ",
            "author": "Uwe Schindler",
            "id": "comment-15839851"
        },
        {
            "date": "2017-01-26T22:57:04+0000",
            "content": "Passing precommit. Cannot get test suite to ever pass 100% but the failures are not related, and running only TestReplicationHandler succeeds. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15840610"
        },
        {
            "date": "2017-01-27T18:55:59+0000",
            "content": "The replication handler is one of the implicit plugins now, previously presumably it always needed to be configured in solrconfig.xml (and some of the test files still do that e.g. this one).\n\nMight it be worth mentioning somehow somewhere (afterwards) that the replication handler is configurable and that configuring a (custom) ReplicationHandler class with the fix would be an interim way of getting the fix without the upgrade?\n\nWe would be sending a mixed message then though, whereas \"upgrade recommended\" is a clear message and anyone wishing to build and deploy a custom patched replication handler would probably have that idea by themselves anyhow. ",
            "author": "Christine Poerschke",
            "id": "comment-15843325"
        },
        {
            "date": "2017-01-27T20:35:41+0000",
            "content": "Hmm, are you thinking about people using 5.5.3, which is also a \"supported\" version. I think perhaps that once we acknowledge it as a security risk we should consider plugging the hole in 5.x with a 5.5.4 bugfix release. It's a small patch which should be easy enough to backport.\n\nPerhaps this should be coordinated so 5.x people have a true quick upgrade path once the announcement is made?\n\nWe could also create a Wiki page for the CVE explaining what the risk is, how to exploit it and how to work around it if you cannot upgrade, such as turning off replication  if you don't use it, making sure no untrusted clients have access to the /replication endpoint etc. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15843458"
        },
        {
            "date": "2017-01-27T21:55:11+0000",
            "content": "Attaching patch backport to 5_5. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15843545"
        },
        {
            "date": "2017-01-28T00:14:42+0000",
            "content": "New patch crediting Hrishikesh Gadre and removing unnecessary positive test. Think this is ready to go in ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15843688"
        },
        {
            "date": "2017-01-29T21:31:43+0000",
            "content": "Committed\nmaster: 6f598d24692a89da9b5b671be6cf4b947aa39266\nbranch_6x: 7088137d52256354a52ed86547b9faa0e7042934\nbranch_6_4: 3a4f885b18bc963a8326c752bd229497908f1dbc\nbranch_5_5: ae789c252687dc8a18bfdb677f2e6cd14570e4db ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15844677"
        },
        {
            "date": "2017-01-30T23:44:54+0000",
            "content": "Resolving since all code has landed in the branches.\n\nReminder: Post release we need to make a security announcement, make this JIRA public and rewrite the GIT commit log. msg. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15846161"
        },
        {
            "date": "2017-02-15T22:53:00+0000",
            "content": "Reopening to make public ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15868755"
        },
        {
            "date": "2017-02-15T22:54:57+0000",
            "content": "Issue made public now that ANNOUNCEMENT is made and 5.5.4 includes the fix. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15868759"
        }
    ]
}