{
    "id": "SOLR-11009",
    "title": "FacetModule throws NullPointerException when all shard requests fail with shards.tolerant=true",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Facet Module"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.6",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "FacetModule uses FacetMerger.Context for preserving the information of shards during the distributed search. This context is created as null first, and will be initialized when the first response is returned from one of shards.\nhttps://github.com/apache/lucene-solr/blob/releases/lucene-solr/6.6.0/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java#L280\n\nIf shards.tolerant=true is set as the request, this initializing code may not be called if shard returns some errors. Therefore, if all shards fail to get results, the context will remain null.\nhttps://github.com/apache/lucene-solr/blob/releases/lucene-solr/6.6.0/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java#L275\n\nAfter that, in the STAGE_GET_FIELDS phase, FacetModule checks if there are any refinements possible by using the context. Unfortunately, because the context can be null as noted above, this check may end with NullPointerException.\nhttps://github.com/apache/lucene-solr/blob/releases/lucene-solr/6.6.0/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java#L183\n\nYou can reproduce this error by following steps.\n1. set socketTimeout of shardHandlerFactory to very short (for example, 10ms).\n2. do facet search with shards.tolerant=true\n\nThe solution is very simple, just add null check before touching the context.",
    "attachments": {
        "SOLR-11009.patch": "https://issues.apache.org/jira/secure/attachment/12875728/SOLR-11009.patch"
    },
    "issue_links": {},
    "comments": []
}