{
    "id": "SOLR-10869",
    "title": "Make StatelessScriptUpdateProcessorFactory as Runtime URP; take params(s) with request",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "update"
        ],
        "type": "Sub-task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "We are trying to get rid of processor definitions in SolrConfig for all URPs and take parameters in the request itself.\n\nStatelessScriptUpdateProcessorFactory will be able to execute by sample curl like below:\n\n\ncurl -X POST -H Content-Type: application/json  http://localhost:8983/solr/test/update/json/docs?processor=StatelessScript&script.file=1.js&script.file=2.js&script.file=3.js&script.params=keyA:valueA&script.params=keyB:valueB&script.params=keyC:valueC&script.engine= rhino&commit=true --data-binary { \"id\" : \"1\" , \"title_s\" : \"title_random\" }\n\n\n\nAll the param(s) for this URP available can be passed as request handler param(s). The scripts will be executed in the order the parameters are received.\n\nConfiguration for StatelessScriptUpdateProcessorFactory in solrconfig.xml is optional. Backcompat is intact.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-11T09:31:34+0000",
            "content": "I have a question on the implementation of this:\n\nThere are two instances where we are initialising the script engines initEngines(...); \n\n1. In the inform(...) via SolrCoreAware (plugin), which will be executed right after factory.init() with empty request and response =>\n\nSolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n    try {\n      initEngines(req, rsp);\n    } catch (Exception e) {\n      String msg = \"Unable to initialize scripts: \" + e.getMessage();\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      req.close();\n    }\n\n\n\n2. and then with request and response in getInstance() again =>\n\n@Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    List<EngineInfo> scriptEngines = null;\n    scriptEngines = initEngines(req, rsp);\n    return new ScriptUpdateProcessor(req, rsp, scriptEngines, next);\n  }\n\n\n\ninitEngines(...) have =>\n\ntry {\n        Reader scriptSrc = scriptFile.openReader(resourceLoader);\n        try {\n          engine.eval(scriptSrc);\n        } catch (ScriptException e) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                  \"Unable to evaluate script: \" + \n                                  scriptFile.getFileName(), e);\n        } finally {\n          IOUtils.closeQuietly(scriptSrc);\n        }\n      }\n\n\nSo the initEngines(...) is called at inform(...) to validate the scripts at startup of core and there's no other motive to it? ",
            "author": "Amrit Sarkar",
            "id": "comment-16045879"
        },
        {
            "date": "2017-06-11T11:15:35+0000",
            "content": "So the initEngines(...) is called at inform(...) to validate the scripts at startup of core and there's no other motive to it?\n\nLooks like it, yeah.\n\nI think the parameter prefix is best as \"script\" rather than \"statelessscript\".   \"script.script\" is funny though, so maybe it should be \"script.file\"? ",
            "author": "Erik Hatcher",
            "id": "comment-16045905"
        },
        {
            "date": "2017-06-11T11:57:44+0000",
            "content": "Thanks Erik Hatcher \n\n\nI think the parameter prefix is best as \"script\" rather than \"statelessscript\". \"script.script\" is funny though, so maybe it should be \"script.file\"?\n\nFair. \"script.file\", \"script.engine\" and \"script.params\" seems neat. I will go forward with this for now. ",
            "author": "Amrit Sarkar",
            "id": "comment-16045921"
        },
        {
            "date": "2017-06-13T02:52:41+0000",
            "content": "Please check that we don't introduce new attack vectors.  i.e. \"script.file\" should only resolve to an existing script in conf/...\n\n+1 to remove the \"stateless\" from the name!  I've hated that needless verbosity. ",
            "author": "David Smiley",
            "id": "comment-16047359"
        }
    ]
}