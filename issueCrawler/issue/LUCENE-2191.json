{
    "id": "LUCENE-2191",
    "title": "rename Tokenizer.reset(Reader) to Tokenizer.setReader(Reader)",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "in TokenStream there is a reset() method, but the method in Tokenizer used to set a new Reader is called reset(Reader).\n\nin my opinion this name overloading creates a lot of confusion, and we see things like reset(Reader) calling reset() even in StandardTokenizer...\n\nSo I think this would be some work to fulfill all the backwards compatibility, but worth it because when you look at the existing reset(Reader) and reset() code in various tokenizers, or the javadocs for Tokenizer, its pretty confusing and inconsistent.",
    "attachments": {
        "LUCENE-2191.patch": "https://issues.apache.org/jira/secure/attachment/12501864/LUCENE-2191.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-01-12T12:00:55+0000",
            "content": "The transition to the new name still has a problem even with VirtualMethod from LUCENE-2188:\nIf we delegate from the new method to the deprecated one when a subclass overrides the deprecated one, we produce a endless loop:\n\n\tConsumer calls setReader()\n\tsetReader() detects that reset() was overridden and delegates to reset()\n\treset() calls super.reset();\n\tthe default impl of reset() in the base class delegates to setReader() for backwards compatibility (and it must do this in all cases, because the overridden reset() must call the super class' setReader like super.setReader() would do).\n\n\n\nThis problem can only be solved by a thread local boolean that prevents delegation if setReader() was called twice in the same thread. At the moment, I have no other solution without inspecting the call stack... ",
            "author": "Uwe Schindler",
            "id": "comment-12799167"
        },
        {
            "date": "2011-01-27T10:12:34+0000",
            "content": "I think we should simply do this in trunk (4.0), no backwards problems! reset(Reader) is the wrong name and confuses people (especially if it should include reset() or not - correct is that it should not also call reset() - I fixed lots of Tokenizers like StandardTokenizer to conform to this) ",
            "author": "Uwe Schindler",
            "id": "comment-12987475"
        },
        {
            "date": "2011-11-01T22:38:48+0000",
            "content": "Uwe: I'm starting to agree. as much as I would like to minimize user-facing API changes for 4.0, it seems that this might be worth the break. ",
            "author": "Robert Muir",
            "id": "comment-13141708"
        },
        {
            "date": "2011-11-01T22:47:16+0000",
            "content": "patch for trunk, just doing a rename ",
            "author": "Robert Muir",
            "id": "comment-13141715"
        },
        {
            "date": "2011-11-01T23:14:51+0000",
            "content": "Thanks. 3.x is more complicated, as we need very sophisticated VirtualMethod... ",
            "author": "Uwe Schindler",
            "id": "comment-13141743"
        },
        {
            "date": "2012-07-16T01:50:40+0000",
            "content": "updated patch to trunk: I think we should do this while we can still change APIs. ",
            "author": "Robert Muir",
            "id": "comment-13414822"
        },
        {
            "date": "2012-07-16T13:24:07+0000",
            "content": "+1 Commit thats, in 4.0 we have no backwards issues, so this is easy.\n\nTokenizer.setReader(Reader) is the only reasonable method name. reset() is something you have to call in all cases! ",
            "author": "Uwe Schindler",
            "id": "comment-13415101"
        },
        {
            "date": "2012-07-16T14:42:16+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13415186"
        },
        {
            "date": "2012-07-16T14:43:11+0000",
            "content": "+1 ",
            "author": "Chris Male",
            "id": "comment-13415188"
        }
    ]
}