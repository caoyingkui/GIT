{
    "id": "LUCENE-4904",
    "title": "Sorter API: Make NumericDocValuesSorter able to sort in reverse order",
    "details": {
        "components": [],
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Trivial",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Today it is only able to sort in ascending order.",
    "attachments": {
        "LUCENE-4904.patch": "https://issues.apache.org/jira/secure/attachment/12577811/LUCENE-4904.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-04-04T18:59:16+0000",
            "content": "Maybe instead of fixing NumericDVSorter, we can have a ReverseSortSorter (must have a better name!) which wraps any Sorter and reverses the DocMap? ",
            "author": "Shai Erera",
            "id": "comment-13622664"
        },
        {
            "date": "2013-04-04T19:30:32+0000",
            "content": "That's another option. I have no strong feeling towards any of them. ",
            "author": "Adrien Grand",
            "id": "comment-13622691"
        },
        {
            "date": "2013-04-09T15:13:25+0000",
            "content": "I hacked this up real quickly, so I could be missing something. Patch adds a ReverseOrderSorter which wraps a Sorter and on sort() returns a DocMap that reverses whatever the wrapped Sorter DocMap returned.\n\nI still didn't figure out how to plug that sorter with existing tests, so it could be this approach doesn't work. Will look at it later. ",
            "author": "Shai Erera",
            "id": "comment-13626703"
        },
        {
            "date": "2013-04-09T17:51:32+0000",
            "content": "Added ReverseOrderSorter to IndexSortingTest (was after all very easy), which uncovered a bug in my original implementation. It's now working and tests are happy.\n\nI basically think this is ready, would appreciate some review. ",
            "author": "Shai Erera",
            "id": "comment-13626877"
        },
        {
            "date": "2013-04-09T18:13:31+0000",
            "content": "Patch on latest trunk (previous one had issues applying). ",
            "author": "Shai Erera",
            "id": "comment-13626905"
        },
        {
            "date": "2013-04-09T19:24:29+0000",
            "content": "We can add this ReverseOrderSorter, but as far as NumericDocValuesSorter is concerned, I would rather have the abstraction at the level of the DocComparator rather than the Sorter. This would allow Sorter.sort(int,DocComparator) to quickly return null without allocating (potentially lots of) memory for the doc maps if the reader is already sorted. Additionally, this would allow for more readable diagnostics (such as \"DocValues(fieldName,desc)\" instead of \"Reverse(DocValues(fieldName,asc))\". ",
            "author": "Adrien Grand",
            "id": "comment-13626982"
        },
        {
            "date": "2013-04-10T03:21:03+0000",
            "content": "Fair enough. It was quite easy to modify NumericDVSorter. Patch adds another ctor which takes a boolean ascending, and integrates it with the test.\n\nThis got me thinking if ascending/descending should be on the Sorter.sort API, but I think it shouldn't because someone can dangerously sort some segments in ascending and others in descending order. Better, I think, if it's a consistent decision for all segments. What do you think? ",
            "author": "Shai Erera",
            "id": "comment-13627427"
        },
        {
            "date": "2013-04-10T08:58:47+0000",
            "content": "This got me thinking if ascending/descending should be on the Sorter.sort API\n\nI think it shouldn't for the reasons you mentioned.\n\nThe patch looks good to me, +1 to commit! ",
            "author": "Adrien Grand",
            "id": "comment-13627619"
        },
        {
            "date": "2013-04-10T10:12:10+0000",
            "content": "I am also wondering if I should keep ReverseOrderSorter, because implementing reverse in numeric is so trivial, that ReverseOrderSorter becomes just another sorter to maintain... I think I'll remove it ",
            "author": "Shai Erera",
            "id": "comment-13627649"
        },
        {
            "date": "2013-04-10T10:14:10+0000",
            "content": "It is OK for me. ",
            "author": "Adrien Grand",
            "id": "comment-13627653"
        },
        {
            "date": "2013-04-10T10:56:48+0000",
            "content": "Committed to trunk and 4x. ",
            "author": "Shai Erera",
            "id": "comment-13627676"
        },
        {
            "date": "2013-05-10T10:33:57+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13654081"
        }
    ]
}