{
    "id": "LUCENE-7569",
    "title": "TestIndexSorting failures",
    "details": {
        "labels": "",
        "priority": "Blocker",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "6.4",
            "7.0"
        ]
    },
    "description": "My Jenkins found two reproducing seeds on branch_6x - these look different, but the failures happened on consecutive nightly runs:\n\n\nChecking out Revision 535bf59a3b239f5c7bcd8c00f3e452c9b5e9b539 (refs/remotes/origin/branch_6x)\n[...]\n  [junit4] Suite: org.apache.lucene.index.TestIndexSorting\n   [junit4]   2> ??? 18, 2016 9:50:39 AM com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\n   [junit4]   2> WARNING: Uncaught exception in thread: Thread[Lucene Merge Thread #0,5,TGRP-TestIndexSorting]\n   [junit4]   2> org.apache.lucene.index.MergePolicy$MergeException: java.lang.AssertionError: nextValue=4594289799775307848 vs previous=4606302611760746829\n   [junit4]   2>        at __randomizedtesting.SeedInfo.seed([5F8898DCABBFD056]:0)\n   [junit4]   2>        at org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:668)\n   [junit4]   2>        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:648)\n   [junit4]   2> Caused by: java.lang.AssertionError: nextValue=4594289799775307848 vs previous=4606302611760746829\n   [junit4]   2>        at org.apache.lucene.codecs.asserting.AssertingDocValuesFormat$AssertingDocValuesConsumer.addSortedNumericField(AssertingDocValuesFormat.java:152)\n   [junit4]   2>        at org.apache.lucene.codecs.DocValuesConsumer.mergeSortedNumericField(DocValuesConsumer.java:470)\n   [junit4]   2>        at org.apache.lucene.codecs.DocValuesConsumer.merge(DocValuesConsumer.java:243)\n   [junit4]   2>        at org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter.merge(PerFieldDocValuesFormat.java:153)\n   [junit4]   2>        at org.apache.lucene.index.SegmentMerger.mergeDocValues(SegmentMerger.java:167)\n   [junit4]   2>        at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:111)\n   [junit4]   2>        at org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4320)\n   [junit4]   2>        at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3897)\n   [junit4]   2>        at org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n   [junit4]   2>        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n   [junit4]   2> \n   [junit4]   2> NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestIndexSorting -Dtests.method=testRandom3 -Dtests.seed=5F8898DCABBFD056 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=he -Dtests.timezone=Canada/Central -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   14.9s J5  | TestIndexSorting.testRandom3 <<<\n   [junit4]    > Throwable #1: org.apache.lucene.store.AlreadyClosedException: this IndexWriter is closed\n   [junit4]    >        at org.apache.lucene.index.IndexWriter.ensureOpen(IndexWriter.java:748)\n   [junit4]    >        at org.apache.lucene.index.IndexWriter.ensureOpen(IndexWriter.java:762)\n   [junit4]    >        at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1566)\n   [junit4]    >        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1315)\n   [junit4]    >        at org.apache.lucene.index.TestIndexSorting.testRandom3(TestIndexSorting.java:2019)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.lang.AssertionError: nextValue=4594289799775307848 vs previous=4606302611760746829\n   [junit4]    >        at org.apache.lucene.codecs.asserting.AssertingDocValuesFormat$AssertingDocValuesConsumer.addSortedNumericField(AssertingDocValuesFormat.java:152)\n   [junit4]    >        at org.apache.lucene.codecs.DocValuesConsumer.mergeSortedNumericField(DocValuesConsumer.java:470)\n   [junit4]    >        at org.apache.lucene.codecs.DocValuesConsumer.merge(DocValuesConsumer.java:243)\n   [junit4]    >        at org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter.merge(PerFieldDocValuesFormat.java:153)\n   [junit4]    >        at org.apache.lucene.index.SegmentMerger.mergeDocValues(SegmentMerger.java:167)\n   [junit4]    >        at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:111)\n   [junit4]    >        at org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4320)\n   [junit4]    >        at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3897)\n   [junit4]    >        at org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n   [junit4]    >        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)Throwable #2: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=1115, name=Lucene Merge Thread #0, state=RUNNABLE, group=TGRP-TestIndexSorting]\n   [junit4]    > Caused by: org.apache.lucene.index.MergePolicy$MergeException: java.lang.AssertionError: nextValue=4594289799775307848 vs previous=4606302611760746829\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([5F8898DCABBFD056]:0)\n   [junit4]    >        at org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:668)\n   [junit4]    >        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:648)\n   [junit4]    > Caused by: java.lang.AssertionError: nextValue=4594289799775307848 vs previous=4606302611760746829\n   [junit4]    >        at org.apache.lucene.codecs.asserting.AssertingDocValuesFormat$AssertingDocValuesConsumer.addSortedNumericField(AssertingDocValuesFormat.java:152)\n   [junit4]    >        at org.apache.lucene.codecs.DocValuesConsumer.mergeSortedNumericField(DocValuesConsumer.java:470)\n   [junit4]    >        at org.apache.lucene.codecs.DocValuesConsumer.merge(DocValuesConsumer.java:243)\n   [junit4]    >        at org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter.merge(PerFieldDocValuesFormat.java:153)\n   [junit4]    >        at org.apache.lucene.index.SegmentMerger.mergeDocValues(SegmentMerger.java:167)\n   [junit4]    >        at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:111)\n   [junit4]    >        at org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4320)\n   [junit4]    >        at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3897)\n   [junit4]    >        at org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n   [junit4]    >        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n   [junit4]   2> NOTE: leaving temporary files on disk at: /var/lib/jenkins/jobs/Lucene-Solr-Nightly-6.x/workspace/lucene/build/core/test/J5/temp/lucene.index.TestIndexSorting_5F8898DCABBFD056-001\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene62): {docs=PostingsFormat(name=Direct), norms=PostingsFormat(name=Direct), positions=PostingsFormat(name=Memory doPackFST= false), id=PostingsFormat(name=Direct), term_vectors=PostingsFormat(name=LuceneFixedGap)}, docValues:{multi_valued_long=DocValuesFormat(name=Lucene54), double=DocValuesFormat(name=Direct), foo=DocValuesFormat(name=Lucene54), numeric=DocValuesFormat(name=Direct), positions=DocValuesFormat(name=Lucene54), multi_valued_numeric=DocValuesFormat(name=Asserting), float=DocValuesFormat(name=Memory), int=DocValuesFormat(name=Asserting), long=DocValuesFormat(name=Memory), points=DocValuesFormat(name=Asserting), sorted=DocValuesFormat(name=Direct), multi_valued_double=DocValuesFormat(name=Asserting), docs=DocValuesFormat(name=Asserting), multi_valued_string=DocValuesFormat(name=Asserting), norms=DocValuesFormat(name=Asserting), bytes=DocValuesFormat(name=Asserting), binary=DocValuesFormat(name=Direct), id=DocValuesFormat(name=Asserting), multi_valued_int=DocValuesFormat(name=Direct), multi_valued_bytes=DocValuesFormat(name=Direct), multi_valued_float=DocValuesFormat(name=Memory), term_vectors=DocValuesFormat(name=Direct)}, maxPointsInLeafNode=1312, maxMBSortInHeap=5.376962888308618, sim=RandomSimilarity(queryNorm=true,coord=yes): {positions=DFR I(ne)3(800.0), id=IB LL-L3(800.0), term_vectors=DFR I(ne)B3(800.0)}, locale=he, timezone=Canada/Central\n   [junit4]   2> NOTE: Linux 4.1.0-custom2-amd64 amd64/Oracle Corporation 1.8.0_77 (64-bit)/cpus=16,threads=1,free=132261744,total=508559360\n   [junit4]   2> NOTE: All tests run in this JVM: [TestFixedBitSet, TestSearchAfter, TestMinShouldMatch2, TestStopFilter, TestMmapDirectory, TestAutomaton, TestTransactions, TestMultiLevelSkipList, TestForUtil, TestFieldType, TestIntBlockPool, TestNumericRangeQuery64, TestBoolean2, Test2BPositions, TestDemo, TestSpanBoostQuery, TestSpanMultiTermQueryWrapper, TestCharsRefBuilder, TestIOUtils, TestAllFilesHaveChecksumFooter, TestMaxTermFrequency, TestConjunctionDISI, TestIndexWriterMerging, TestPackedInts, TestLucene50StoredFieldsFormat, TestGeoEncodingUtils, TestGeoUtils, Test2BPoints, Test2BSortedDocValuesFixedSorted, TestDocValues, TestExceedMaxTermLength, TestExitableDirectoryReader, TestFilterDirectoryReader, TestIndexSorting]\n   [junit4] Completed [345/441 (1!)] on J5 in 39.46s, 43 tests, 1 error <<< FAILURES!\n\n\n\n\nChecking out Revision 500f6c7875be31c34ca68c58f850b7e64fd049a9 (refs/remotes/origin/branch_6x)\n[...]\n   [junit4] Suite: org.apache.lucene.index.TestIndexSorting\n   [junit4]   2> NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestIndexSorting -Dtests.method=testRandom3 -Dtests.seed=5D1E2D97B0777D5C -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=fi-FI -Dtests.timezone=America/Tegucigalpa -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR    245s J3  | TestIndexSorting.testRandom3 <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: segment has indexSort=<float: \"float\">! missingValue=0.38226813,<sortedset: \"multi_valued_bytes\">! selector=MIN,<int: \"id\"> but docID=75 sorts after docID=76\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([5D1E2D97B0777D5C:FFC6634DD485545A]:0)\n   [junit4]    >        at org.apache.lucene.index.CheckIndex.testSort(CheckIndex.java:876)\n   [junit4]    >        at org.apache.lucene.index.CheckIndex.checkIndex(CheckIndex.java:756)\n   [junit4]    >        at org.apache.lucene.util.TestUtil.checkIndex(TestUtil.java:300)\n   [junit4]    >        at org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:865)\n   [junit4]    >        at org.apache.lucene.util.IOUtils.close(IOUtils.java:89)\n   [junit4]    >        at org.apache.lucene.util.IOUtils.close(IOUtils.java:76)\n   [junit4]    >        at org.apache.lucene.index.TestIndexSorting.testRandom3(TestIndexSorting.java:2087)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: leaving temporary files on disk at: /var/lib/jenkins/jobs/Lucene-Solr-Nightly-6.x/workspace/lucene/build/core/test/J3/temp/lucene.index.TestIndexSorting_5D1E2D97B0777D5C-001\n   [junit4]   2> NOTE: test params are: codec=CheapBastard, sim=RandomSimilarity(queryNorm=true,coord=no): {positions=DFR I(F)BZ(0.3), id=IB SPL-DZ(0.3), term_vectors=DFR I(ne)3(800.0)}, locale=fi-FI, timezone=America/Tegucigalpa\n   [junit4]   2> NOTE: Linux 4.1.0-custom2-amd64 amd64/Oracle Corporation 1.8.0_77 (64-bit)/cpus=16,threads=1,free=252779544,total=525336576\n   [junit4]   2> NOTE: All tests run in this JVM: [TestBooleanRewrites, TestSearchForDuplicates, TestSwappedIndexFiles, TestClassicSimilarity, TestNeverDelete, TestAllFilesCheckIndexHeader, TestBooleanScorer, TestPayloads, TestDelegatingAnalyzerWrapper, TestWeakIdentityMap, TestRollingBuffer, TestParallelCompositeReader, TestExitableDirectoryReader, TestCollectionUtil, TestLegacyNumericUtils, TestBagOfPostings, TestNot, TestPhrasePrefixQuery, TestSimpleExplanationsWithFillerDocs, TestPriorityQueue, TestBlockPostingsFormat2, TestIntroSorter, FiniteStringsIteratorTest, TestIndexWriterReader, TestNumericRangeQuery64, TestDeletionPolicy, TestBooleanOr, TestSloppyPhraseQuery, TestNRTThreads, TestPolygon, TestPolygon2D, TestDocValues, TestFilterDirectoryReader, TestIndexSorting]\n   [junit4] Completed [431/441 (1!)] on J3 in 263.65s, 43 tests, 1 error <<< FAILURES!",
    "attachments": {
        "LUCENE-7569.patch": "https://issues.apache.org/jira/secure/attachment/12840397/LUCENE-7569.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15689969",
            "date": "2016-11-23T12:27:00+0000",
            "content": "This looks like bad ... I think we need to fix before a 6.4 release.  I'm out this week but will look once I'm back. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15690219",
            "date": "2016-11-23T14:20:35+0000",
            "content": "I am looking at it. Seems like a bug when sorting multi_valued doc values. ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15690321",
            "date": "2016-11-23T14:59:22+0000",
            "content": "Two more reproducing master failures this morning on my Jenkins - yet again different looking from the above two:\n\n\n   [junit4] Suite: org.apache.lucene.index.TestIndexSorting\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestIndexSorting -Dtests.method=testNumericAlreadySorted -Dtests.seed=5B46AEF84DF052B2 -Dtests.slow=true -Dtests.locale=sq-AL -Dtests.timezone=America/Boise -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.33s J1 | TestIndexSorting.testNumericAlreadySorted <<<\n   [junit4]    > Throwable #1: org.apache.lucene.store.AlreadyClosedException: refusing to delete any files: this IndexWriter hit an unrecoverable exception\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([5B46AEF84DF052B2:C0B19080E8433B08]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.ensureOpen(IndexFileDeleter.java:345)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deleteFiles(IndexFileDeleter.java:696)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.decRef(IndexFileDeleter.java:594)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.checkpoint(IndexFileDeleter.java:533)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.checkpoint(IndexWriter.java:2461)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.publishFlushedSegment(IndexWriter.java:2519)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue$FlushTicket.publishFlushedSegment(DocumentsWriterFlushQueue.java:198)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue$FlushTicket.finishFlush(DocumentsWriterFlushQueue.java:213)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket.publish(DocumentsWriterFlushQueue.java:249)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue.innerPurge(DocumentsWriterFlushQueue.java:116)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(DocumentsWriterFlushQueue.java:138)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriter.flushAllThreads(DocumentsWriter.java:663)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.java:2981)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:3189)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:3154)\n   [junit4]    > \tat org.apache.lucene.index.TestIndexSorting.assertNeedsIndexSortMerge(TestIndexSorting.java:207)\n   [junit4]    > \tat org.apache.lucene.index.TestIndexSorting.testNumericAlreadySorted(TestIndexSorting.java:220)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.lang.AssertionError: expected:<true> but was:<false>\n   [junit4]    > \tat org.apache.lucene.index.TestIndexSorting$AssertingNeedsIndexSortCodec$1$1.merge(TestIndexSorting.java:106)\n   [junit4]    > \tat org.apache.lucene.index.SegmentMerger.mergePoints(SegmentMerger.java:173)\n   [junit4]    > \tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:122)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4295)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3872)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestIndexSorting -Dtests.method=testMissingStringLast -Dtests.seed=5B46AEF84DF052B2 -Dtests.slow=true -Dtests.locale=sq-AL -Dtests.timezone=America/Boise -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.02s J1 | TestIndexSorting.testMissingStringLast <<<\n   [junit4]    > Throwable #1: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=1099, name=Lucene Merge Thread #21, state=RUNNABLE, group=TGRP-TestIndexSorting]\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([5B46AEF84DF052B2:97AABDB63457F0AE]:0)\n   [junit4]    > Caused by: org.apache.lucene.index.MergePolicy$MergeException: java.lang.AssertionError: expected:<true> but was:<false>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([5B46AEF84DF052B2]:0)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:668)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:648)\n   [junit4]    > Caused by: java.lang.AssertionError: expected:<true> but was:<false>\n   [junit4]    > \tat org.apache.lucene.index.TestIndexSorting$AssertingNeedsIndexSortCodec$1$1.merge(TestIndexSorting.java:106)\n   [junit4]    > \tat org.apache.lucene.index.SegmentMerger.mergePoints(SegmentMerger.java:173)\n   [junit4]    > \tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:122)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4295)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3872)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n   [junit4]   2> N\u00ebn 22, 2016 9:51:06 MD com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\n   [junit4]   2> WARNING: Uncaught exception in thread: Thread[Lucene Merge Thread #21,5,TGRP-TestIndexSorting]\n   [junit4]   2> org.apache.lucene.index.MergePolicy$MergeException: java.lang.AssertionError: expected:<true> but was:<false>\n   [junit4]   2> \tat __randomizedtesting.SeedInfo.seed([5B46AEF84DF052B2]:0)\n   [junit4]   2> \tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:668)\n   [junit4]   2> \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:648)\n   [junit4]   2> Caused by: java.lang.AssertionError: expected:<true> but was:<false>\n   [junit4]   2> \tat org.junit.Assert.fail(Assert.java:93)\n   [junit4]   2> \tat org.junit.Assert.failNotEquals(Assert.java:647)\n   [junit4]   2> \tat org.junit.Assert.assertEquals(Assert.java:128)\n   [junit4]   2> \tat org.junit.Assert.assertEquals(Assert.java:147)\n   [junit4]   2> \tat org.apache.lucene.index.TestIndexSorting$AssertingNeedsIndexSortCodec$1$1.merge(TestIndexSorting.java:106)\n   [junit4]   2> \tat org.apache.lucene.index.SegmentMerger.mergePoints(SegmentMerger.java:173)\n   [junit4]   2> \tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:122)\n   [junit4]   2> \tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4295)\n   [junit4]   2> \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3872)\n   [junit4]   2> \tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n   [junit4]   2> \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n   [junit4]   2> \n   [junit4]   2> NOTE: leaving temporary files on disk at: /var/lib/jenkins/jobs/Lucene-Solr-tests-master/workspace/lucene/build/core/test/J1/temp/lucene.index.TestIndexSorting_5B46AEF84DF052B2-001\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {docs=PostingsFormat(name=LuceneVarGapFixedInterval), norms=PostingsFormat(name=LuceneVarGapFixedInterval), positions=PostingsFormat(name=LuceneFixedGap), id=PostingsFormat(name=LuceneVarGapFixedInterval), term_vectors=PostingsFormat(name=LuceneVarGapFixedInterval)}, docValues:{multi_valued_long=DocValuesFormat(name=Asserting), double=DocValuesFormat(name=Direct), foo=DocValuesFormat(name=Asserting), numeric=DocValuesFormat(name=Direct), positions=DocValuesFormat(name=Asserting), float=DocValuesFormat(name=Lucene70), multi_valued_numeric=DocValuesFormat(name=Direct), int=DocValuesFormat(name=Direct), long=DocValuesFormat(name=Lucene70), points=DocValuesFormat(name=Lucene70), sorted=DocValuesFormat(name=Direct), multi_valued_double=DocValuesFormat(name=Direct), docs=DocValuesFormat(name=Direct), multi_valued_string=DocValuesFormat(name=Direct), norms=DocValuesFormat(name=Direct), bytes=DocValuesFormat(name=Direct), binary=DocValuesFormat(name=Direct), id=DocValuesFormat(name=Direct), multi_valued_int=DocValuesFormat(name=Lucene70), multi_valued_bytes=DocValuesFormat(name=Direct), multi_valued_float=DocValuesFormat(name=Asserting), term_vectors=DocValuesFormat(name=Direct)}, maxPointsInLeafNode=334, maxMBSortInHeap=7.219802986877661, sim=RandomSimilarity(queryNorm=true): {positions=IB LL-L3(800.0), id=IB LL-LZ(0.3), term_vectors=DFR I(n)1}, locale=sq-AL, timezone=America/Boise\n   [junit4]   2> NOTE: Linux 4.1.0-custom2-amd64 amd64/Oracle Corporation 1.8.0_77 (64-bit)/cpus=16,threads=1,free=228810400,total=484966400\n   [junit4]   2> NOTE: All tests run in this JVM: [TestNoMergePolicy, TestBytesStore, Test2BPostingsBytes, TestNGramPhraseQuery, TestBooleanQuery, FiniteStringsIteratorTest, TestPointQueries, TestDateTools, TestSortedSetDocValues, TestPerFieldPostingsFormat2, TestCharFilter, TestDirectoryReader, TestNativeFSLockFactory, TestSortRandom, TestPrefixRandom, TestStandardAnalyzer, TestBytesRefHash, TestSimpleExplanationsOfNonMatches, TestAutomaton, TestTimSorter, TestFilterDirectoryReader, TestRollingBuffer, TestMaxPosition, TestNamedSPILoader, TestDuelingCodecsAtNight, TestPositiveScoresOnlyCollector, TestBooleanOr, TestAllFilesHaveCodecHeader, TestElevationComparator, TestStressAdvance, TestPhraseQuery, TestBKD, TestSparseFixedBitDocIdSet, TestCodecs, TestIndexWriterReader, TestArrayUtil, TestSegmentTermEnum, TestIndexingSequenceNumbers, TestSpanTermQuery, TestTermsEnum2, TestSwappedIndexFiles, TestHighCompressionMode, TestWeakIdentityMap, TestBinaryDocument, TestIndexableField, TestGrowableByteArrayDataOutput, TestStringHelper, TestForTooMuchCloning, TestTermdocPerf, TestSnapshotDeletionPolicy, TestDocValues, TestDeterminism, TestCollectionUtil, TestSort, TestMultiTermsEnum, TestPackedInts, TestFastCompressionMode, TestRAMDirectory, TestFlex, TestParallelReaderEmptyIndex, TestBinaryDocValuesUpdates, TestSpanNotQuery, TestBytesRefAttImpl, TestTerms, TestComplexExplanations, TestTermScorer, TestPositionIncrement, TestDirectoryReaderReopen, TestDelegatingAnalyzerWrapper, Test2BPoints, TestIntsRef, TestMergeSchedulerExternal, TestFlushByRamOrCountsPolicy, TestTrackingDirectoryWrapper, TestSynonymQuery, Test2BSortedDocValuesOrds, TestStressNRT, TestAutomatonQueryUnicode, TestMultiLevelSkipList, TestDirectory, TestBoostQuery, Test2BBinaryDocValues, TestTopFieldCollector, TestParallelCompositeReader, TestCharsRefBuilder, TestSPIClassIterator, TestIndexedDISI, TestGeoEncodingUtils, TestIndexSorting]\n   [junit4] Completed [193/438 (1!)] on J1 in 11.31s, 47 tests, 2 errors <<< FAILURES!\n\n ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-15691060",
            "date": "2016-11-23T19:03:01+0000",
            "content": "Thanks Use account \"steve_rowe\" instead. We've investigated this with Adrien Grand and found the issue. The index sorting during the merge uses a SortingLeafReader which uses a cache per thread for the doc value readers. This breaks the merging of SortedSetDocValues and SortedNumericDocValues since we need to iterate two instances in parallel of these doc values during the merge (see DocValuesConsumer.mergeSortedNumericField). Adrien Grand's idea to fix this bug is to rewrite the SortingLeafReader to a SortingCodecReader. The SortingCodecReader would never use the same instance when creating a DocValues reader. The bug is only in 6x since in master the doc value readers are now iterators that are re-created when getDocValues is called.\nThe second issue about already sorted index is just a test bug that appears when the random merge policy picks a merge factor of 2. \nI'll send a patch for these two issues shortly. The first issue is problematic though because it means that indices that use index sorting (on any field, multivalued or not) in 6x are not able to merge multivalued doc values properly.  ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15691080",
            "date": "2016-11-23T19:11:40+0000",
            "content": "This comment somehow got added twice to the issue, so I deleted the duplicate.\n\n ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-15692649",
            "date": "2016-11-24T08:38:46+0000",
            "content": "Commit 63fd2e834c6d02e4f2bc2009c2a563cdb02a5978 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=63fd2e8 ]\n\nLUCENE-7569: Disable the test until it is fixed. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15692845",
            "date": "2016-11-24T10:02:27+0000",
            "content": "It turns out that the problem is a just a test bug related to MockRandomMergePolicy. This merge policy is only used in tests and randomly wraps the reader to be merged in a SlowCodecReaderWrapper in order to deactivate the bulk merging. The test pass if I add a MergeReaderWrapper around the original reader. This makes index sorting happy since the docvalues instances are now re-created each time.\nBottom line is that merging of multi-valued docvalues works fine even when index sorting is on except in these tests where the MockRandomMergePolicy disables the bulk merge. \nI've attached a patch that fixes this bug and the other test bug on testNumericAlreadySorted. The patch is for the master branch (since testNumericAlreadySorted should also fail on this branch) but the backport should be straightforward.  ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15693029",
            "date": "2016-11-24T11:28:10+0000",
            "content": "Ugh, thank you Jim Ferenczi and Adrien Grand for digging on these failures!  I'm so happy with the DV changes in master we don't have this thread-local API trappiness anymore.\n\nI had hit this originally on back port and fixed (I think?) the sorted numeric case by passing a separate toMerge2 to the mergeSortedNumericField ... I'm not sure why I didn't realize we must do so as well for the sorted set case.  Maybe we can just add the toMerge2 for the sorted set case as well?  I think a new SortingCodecReader would also work well... ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15693216",
            "date": "2016-11-24T12:52:44+0000",
            "content": "Commit eb51ebc0e96d9b973a4e534795c620132b7cb0d2 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eb51ebc ]\n\nLUCENE-7569: Fix test failures due to merging using cached doc values instances. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15693240",
            "date": "2016-11-24T13:02:28+0000",
            "content": "Thank you Jim Ferenczi, I just pushed your patch. I opened LUCENE-7573 for the SORTED_SET issue.\n\nI am leaving this issue open since the other failure that Steve reported looks unrelated and still reproduces on master: ant test  -Dtestcase=TestIndexSorting -Dtests.method=testNumericAlreadySorted -Dtests.seed=5B46AEF84DF052B2 -Dtests.slow=true -Dtests.locale=sq-AL -Dtests.timezone=America/Boise -Dtests.asserts=true -Dtests.file.encoding=UTF-8. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15693248",
            "date": "2016-11-24T13:04:48+0000",
            "content": "I'm not sure why I didn't realize we must do so as well for the sorted set case. \n\nI am not sure it is needed. The iterations are stateless in 6x since it's just an iteration over the docids and the norm ids and we call setDocument on the underlying doc values reader each time we need to access it ? ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15693259",
            "date": "2016-11-24T13:11:39+0000",
            "content": "Sorry I had not understood the patch fixed the master failure too! Closing now. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15693261",
            "date": "2016-11-24T13:11:58+0000",
            "content": "Commit be74f4f7a7f808487489c315e616745fbad56186 in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=be74f4f ]\n\nLUCENE-7569: Fix index sorting test failures. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15695345",
            "date": "2016-11-25T09:10:51+0000",
            "content": "I opened https://issues.apache.org/jira/browse/LUCENE-7574 for the recent failures. Sorry for the noise. ",
            "author": "Jim Ferenczi"
        }
    ]
}