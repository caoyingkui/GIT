{
    "id": "SOLR-7405",
    "title": "Update ref guide curl examples to eliminate Content-Type",
    "details": {
        "components": [
            "documentation"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "SOLR-7217 added a special work arround to solr to autodetect the correct content-type if the user-agent indicates curl is in use and the content-type specified is the curl default (\"application/x-www-form-urlencoded\")\n\nwhile this is certianly a nice to have convenience for people who forget to specify a Content-Type when using curl, there was quite a bit of back and forth on the ref guide TODO page about wether all example curl calls in the ref guide should explicitly take advantage of this for brevity.\n\nI'm opening this issue in the interest of having a more structured place for this discussion.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-15T21:49:24+0000",
            "author": "Hoss Man",
            "content": "\nPrevious Comments made in the ref guide TODO page...\n\nhttps://cwiki.apache.org/confluence/display/solr/Internal+-+TODO+List\n\nHoss:\n\nWe shouldn't update our example curl calls to remove the Content-Type \u2013 since this auto-detect logic is specific to curl, it will likely confuse people when they see HTTP calls to solr (via curl) working fine w/o Content-TYpe, but suddenly the (seemingly) exact same HTTP request call fails if they do it from some other from whatever language library they are using that has some other default Content-Type.\n\n\tin other words; having this default auto-detec behavior is nice, but our example client calls should still encourage people to do the right thing, and being explicit in their HTTP requests\n\n\n\nYonik:\n\nI disagree - I think we should remove the content-type from our examples using curl.\n\n\tThis is really a curl-specific \"fix\" - curl adds a content-type even when you don't specify one and you give it a body\n\tWe should actually go further in Solr and auto-detect when there is no content-type (that was the original intention)\n\tPeople aren't writing their own HTTP protocols and they have no idea what headers are or are not sent when they use \"curl\", and i'd argue that people using lower level http libs will know what they are doing.\n\tIt just adds excess noise to our examples - people know if they are looking at JSON or XML\n\n\n\nNoble:\n\nI'm +1 for removing the content-type headers. We are increasingly making JSON POST as the only way to invoke the new APIs. We should not pollute the documentation with redundant information\n\nCassandra:\n\nAt this point, we have a large number of other features that need documentation for 5.1 instead of hunting through all our pages of documentation for curl commands that may use content-type. Personally, I think this is at best a minor change in terms of impact on users, and should be low on our list until more important features are well and completely documented.\n\nNoble:\n\nIt should be OK to postpone the task to a later release , as long as we reach a consensus on how to go about with this\n ",
            "id": "comment-14497067"
        },
        {
            "date": "2015-04-15T21:49:49+0000",
            "author": "Hoss Man",
            "content": "\nHere is a concrete example of the type of scenerio i'm confident we'll see if we update the ref guide to include a lot of example \"curl\" calls that do not explicitly set the Content-Type header...\n\n\n\nLet's suppose we have the following example in our ref guide (it's a real example from this existing page, but with the Content-Type removed per what yonik's suggestion) ...\n\nhttps://cwiki.apache.org/confluence/display/solr/Uploading+Data+with+Index+Handlers\n\n\ncurl -X POST 'http://localhost:8983/solr/my_collection/update?json.command=false' --data-binary '\n{\n  \"id\": \"1\",\n  \"title\": \"Doc 1\"\n}'\n\n\n\nA novice developer, who knows nothing about Solr, or curl, tweaks the URL in this example to match their Solr server & collection, sees that it works, and fairly easily intuits that -X POST means it's a POST request, and that -data-binary is the POST body.\n\nThis developer then goes off and uses the basic HTTP library of the langauge they are using for their application to try and send the same command to solr \u2013 for the sake of argument, let's assume they are using python.  They write the following code...\n\n\nfrom httplib2 import Http\nfrom pprint import pprint\nh = Http()\ndata = \"\"\nresp, content = h.request(\"http://localhost:8983/solr/gettingstarted/update?json.command=false\", \n                          \"POST\", \n                          body=\"{ \\\"id\\\": \\\"1\\\", \\\"title\\\": \\\"Doc 1\\\"}\")\npprint(resp)\npprint(content)\n\n\n\n...and it doesn't work.  instead of getting a happy status code they get an HTTP 415 error and a message about \"Missing ContentType\"\n\nSo our developer is already confused.  Maybe they give up.  Maybe they are intuitive enough to realize based on the error message that they need to add this line to their h.request() method call...\n\nheaders = {'Content-type': 'application/json'},\n\n\n...at which point their code will start to work, but it stil confuses the hell out of them and gives them a bad taste in their mouth (why did Solr work with the curl w/o a content-type, but not with their code? what other seemingly straight forward things will break in weird ways like this?)\n\nEven worse: let's assume that instead of immediately guessing that they needed to add a \"Content-Type\" header to their request, they try to be smart and use a proxy or a wiresniffer to try and compare the request coming from curl vs the request coming from their application \u2013 or they searh the curl docs to figure out what default Content-Type it's sending \u2013 to see what the differences are between the example request that works, and their request that doesn't.\n\nWhat they are going to find is that curl is sending a default of \"Content-Type: application/x-www-form-urlencoded\" \u2013 suggesting that Solr expects \"application/x-www-form-urlencoded\" to be specified even when the data is JSON ... which should rightly scare the shit out of any developer considering using a system: \"WHy does solr expect an obviously broken Content-Type and give an error if it's not specified???\"\n\nIf they actually try to add this bogus \"application/x-www-form-urlencoded\" to their python code, it still won't work \u2013 now they are going to get a really perplexing 400 error response with the message \"missing content stream\"\n\nAt this point, i know i would sure as shit give up.\n\n\n ",
            "id": "comment-14497069"
        },
        {
            "date": "2015-04-15T21:53:05+0000",
            "author": "Hoss Man",
            "content": "My vote is we resolve this issue as \"Not a Problem\" and continue to use an explicit Content-TYpe in all curl commands in the ref guide. ",
            "id": "comment-14497074"
        },
        {
            "date": "2015-04-15T22:03:34+0000",
            "author": "Steve Rowe",
            "content": "My vote is we resolve this issue as \"Not a Problem\" and continue to use an explicit Content-TYpe in all curl commands in the ref guide.\n\n+1 ",
            "id": "comment-14497099"
        },
        {
            "date": "2015-04-15T23:22:34+0000",
            "author": "Anshum Gupta",
            "content": "+1 on not fixing this now for sure. \nIt's a nice feature/convenience to have for people using curl and we could note that somewhere in the ref guide e.g. say \"Solr auto-detects the content type for curl and so it is not essential to specify the content type when using curl\" but removing this from all examples would lead to information loss w.r.t to the ref guide. For the sake of ref-guide users, I think it's good to have the command as a super-set instead of a reduced version.\nThe only way I could think of removing all mentions of content type from the example curl commands is if we have a page that explains what to do when Solr asks for a content type, also explaining why is that the behavior.  ",
            "id": "comment-14497298"
        },
        {
            "date": "2015-04-16T01:58:15+0000",
            "author": "Yonik Seeley",
            "content": "...and it doesn't work. instead of getting a happy status code they get an HTTP 415 error and a message about \"Missing ContentType\"\n\nIf they were able to look at an example using curl and translate that into some other low-level HTTP lib without any other errors, they are pretty damned good!\nAnd then get get an error message that tells them exactly what's wrong.  Seems pretty ideal.  \n\nAt the end of the day: they may be \"confused\" why it worked with curl w/o specifying the content-type, but they won't be confused about what they need to do to make it work.  That's the important part.\n\nThere are a million different things that people can potentially be \"confused\" about - but it really comes down to being practical.   The whole point to auto-detecting the content type with curl was to simplify our examples, focus on what the example is actually trying to demonstrate, and help make things more concise.  We can have a separate web page for making solr work with various HTTP libraries... that's not the common case.\n\nAnyway, my original comment on omitting content-type was not a mandate, but a \"hey, you can do this now if you want\".  I certainly intend to omit the content type for most JSON examples that I write, as I feel it's the right trade-off for what I'm trying to achieve with the docs.  Others can make their own choice. ",
            "id": "comment-14497452"
        },
        {
            "date": "2015-04-16T08:46:14+0000",
            "author": "Noble Paul",
            "content": "We need to understand that the curl examples are what people usually type by hand . Any attempt to minimize the amount of work will be appreciated by users . \n\nI'm +1 for eliminating the redundant header information  ",
            "id": "comment-14497780"
        },
        {
            "date": "2015-04-16T09:02:51+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I'm with Yonik here. We're talking about documentation, and we can clearly document the content-type requirement for HTTP POST, as well as the simplified way of using cURL. In the very first cURL example in the refguide we can include content-type, but then introduce the shorter notation in an info-box and stick to the short form for the rest of the refguide. ",
            "id": "comment-14497796"
        }
    ]
}