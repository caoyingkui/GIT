{
    "id": "SOLR-10096",
    "title": "Parallel SQL not returning the correct results for count distinct aggregation",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Parallel SQL"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "While trying to compare the results of this perf exp. blogged here:\nhttps://www.periscopedata.com/blog/use-subqueries-to-count-distinct-50x-faster.html\n\nI tried this with 6.3 and it only returns the dashboard_id's:\n\n\nselect dashboard_id, count(distinct user_id) as ct from time_on_site_logs group by dashboard_id\n\n\n\nResults: (where is ct?)\n\n{\"result-set\":{\"docs\":[\n{\"dashboard_id\":0},\n{\"dashboard_id\":2},\n{\"dashboard_id\":5},\n{\"dashboard_id\":6},\n{\"dashboard_id\":8},\n{\"dashboard_id\":10},\n{\"dashboard_id\":12},\n{\"dashboard_id\":13},\n{\"dashboard_id\":14},\n{\"dashboard_id\":15},\n...\n\n\n\nSo I dropped the alias for count(distinct user_id) and got the wrong results (i.e. it's not applying the distinct for user_id's):\n\n{\"result-set\":{\"docs\":[\n{\"count(*)\":8288,\"dashboard_id\":0},\n{\"count(*)\":7392,\"dashboard_id\":2},\n{\"count(*)\":23800,\"dashboard_id\":5},\n{\"count(*)\":25032,\"dashboard_id\":6},\n{\"count(*)\":8960,\"dashboard_id\":8},\n{\"count(*)\":7840,\"dashboard_id\":10},\n{\"count(*)\":17192,\"dashboard_id\":12},\n\n\n\nSo I'm guessing this isn't a supported syntax yet?\n\nAlso, probably a different issue, but I then tried this query:\n\nselect distinct dashboard_id, user_id from time_on_site_logs\n\n\nand it took ~70 secs (m3.xlarge), which is very surprising because this streaming expression (which basically does the initial query above):\n\nselect(rollup(facet(time_on_site_logs, q=\"*:*\", buckets=\"dashboard_id,user_id\", bucketSizeLimit=2000, bucketSorts=\"dashboard_id asc\",count(*)), over=\"dashboard_id\", count(*)), dashboard_id,count(*) as unique_users)\n\n\nReturns in ~1.5 secs ... that's a huge difference in performance.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-02-03T20:56:40+0000",
            "content": "Count distinct isn't supported yet. I believe this is working in the Calcite implementation, but I'll check on this. ",
            "author": "Joel Bernstein",
            "id": "comment-15852114"
        },
        {
            "date": "2017-02-03T20:59:59+0000",
            "content": "About the performance issue you were seeing. The SQL query is likely in map_reduce mode which is the default for the SQL interface. If you switch to aggregationMode=facet you'll likely see comparable performance to the expression you reference.\n\nYou can improve your map_reduce throughput by adding workers so it will parallelize the distinct operation. ",
            "author": "Joel Bernstein",
            "id": "comment-15852119"
        }
    ]
}