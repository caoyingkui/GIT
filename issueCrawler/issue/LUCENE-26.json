{
    "id": "LUCENE-26",
    "title": "Wildcard query only accepts 1 or more characters for prefixes (not 0 or more)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When using the WildcardQuery class to do a wildcard search with the wildcard at\nthe end of the string, the wildcard is treated as \"1 or more\" characters. This\nis inconsistent with other wildcard behaviour, and undesirable. The correct\nbehaviour is for the wildcard to represent 0 or more characters.\n\nThe error is due to a problem in the wildcard comparison method in\norg.apache.lucene.search.WildcardTermEnum.\n\nPatch to follow.",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--WildcardTermEnum.java.diff": "https://issues.apache.org/jira/secure/attachment/12312188/ASF.LICENSE.NOT.GRANTED--WildcardTermEnum.java.diff",
        "ASF.LICENSE.NOT.GRANTED--WildcardTest.java": "https://issues.apache.org/jira/secure/attachment/12312189/ASF.LICENSE.NOT.GRANTED--WildcardTest.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2002-04-03T16:28:03+0000",
            "content": "Created an attachment (id=1465)\nFixes the bug by providing a correct, commented replacement for the 'wildcardEquals' method ",
            "author": "Lee Mallabone",
            "id": "comment-12321033"
        },
        {
            "date": "2002-04-04T00:12:44+0000",
            "content": "Hm, I can't duplicate the behaviour you describe.\nI have an index with a few travel-related entries.\nWhen I search for travel I get 1 match containing \"Land a hot travel deal ....\"\nWhen I search for travel* I get 2 matches.  The first one is the same as the one\nabove, and the second one contains \"Travelocity.com\" in the indexed field.\n\nDoesn't the fact that a search for travel* matches entries that contain only the\nterm \"travel\", and no other terms with \"travel\" as their base, confirm that\nwildcards work properly, matching zero or more characers, even when used at the\nend of the query string? ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321034"
        },
        {
            "date": "2002-04-04T15:51:51+0000",
            "content": "Is that definitely using the WildcardQuery class? I know the query parser\ndefaults to using PrefixQuery for wildcards at the end of the term. In\nPrefixQuery, the bug does not seem to be present. However, I'm able to search\nfor words in my indexes, get results, then search again using WildcardQuery with\na * character at the end, and get zero results.  ",
            "author": "Lee Mallabone",
            "id": "comment-12321035"
        },
        {
            "date": "2002-04-05T00:11:14+0000",
            "content": "Could you please provide a class that is a simple self-enclosing test case \nthat demonstrates this? ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321036"
        },
        {
            "date": "2002-04-05T17:05:47+0000",
            "content": "Created an attachment (id=1488)\nSimple piece of code that demonstrates an incorrect search result when doing a wildcard search. ",
            "author": "Lee Mallabone",
            "id": "comment-12321037"
        },
        {
            "date": "2002-04-10T11:07:57+0000",
            "content": "Thank you, I applied the patch (well, pasted it, as I couldn't get patch to apply the \ndiff). ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321038"
        },
        {
            "date": "2013-09-11T14:00:03+0000",
            "content": "Commit 1521851 from Andi Vajda in branch 'pylucene/trunk'\n[ https://svn.apache.org/r1521851 ]\n\nfixed bug PYLUCENE-26 (Martin Anon) ",
            "author": "ASF subversion and git services",
            "id": "comment-13764321"
        }
    ]
}