{
    "id": "LUCENE-8457",
    "title": "geo3d test failure",
    "details": {
        "components": [
            "modules/spatial3d"
        ],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "6.7",
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "[junit4] Suite: org.apache.lucene.spatial3d.TestGeo3DPoint\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 doc=96 is contained by shape but is outside the returned XYZBounds\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 unquantized=[lat=1.4812439919751819, lon=-3.141592653589793([X=-0.08923495159694257, Y=-1.0928129784526471E-17, Z=0.9937907331608504])]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 quantized=[X=-0.08923495170440254, Y=-2.3309121299774915E-10, Z=0.9937907329903598]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 doc=284 is contained by shape but is outside the returned XYZBounds\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 unquantized=[lat=1.3177235852557188, lon=-3.141592653589793([X=-0.24987216435732065, Y=-3.060051462762141E-17, Z=0.9661839699711411])]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 quantized=[X=-0.24987216431220738, Y=-2.3309121299774915E-10, Z=0.9661839700741824]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 doc=448 is contained by shape but is outside the returned XYZBounds\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 unquantized=[lat=1.373550879519168, lon=-3.141592653589793([X=-0.19555555347329456, Y=-2.3948648261655927E-17, Z=0.9785415796969477])]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 quantized=[X=-0.19555555342162367, Y=-2.3309121299774915E-10, Z=0.9785415795083489]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 doc=568 is contained by shape but is outside the returned XYZBounds\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 unquantized=[lat=1.4147644427264174, lon=3.141592653589793([X=-0.15506432607243328, Y=1.8989903058654687E-17, Z=0.985720859148803])]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 quantized=[X=-0.15506432593490593, Y=2.3309121299774915E-10, Z=0.9857208592622259]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 doc=596 is contained by shape but is outside the returned XYZBounds\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 unquantized=[lat=1.4949759718464255, lon=3.141592653589793([X=-0.07557968098734905, Y=9.255841440173507E-18, Z=0.9949148423009544])]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 quantized=[X=-0.07557968106487689, Y=2.3309121299774915E-10, Z=0.9949148424036222]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 doc=724 is contained by shape but is outside the returned XYZBounds\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 unquantized=[lat=1.3420318470804882, lon=-3.141592653589793([X=-0.2263058688809343, Y=-2.7714475795329682E-17, Z=0.9719352310654573])]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 quantized=[X=-0.2263058688153078, Y=-2.3309121299774915E-10, Z=0.9719352309632839]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 doc=726 is contained by shape but is outside the returned XYZBounds\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 unquantized=[lat=1.5087080502478558, lon=-3.141592653589793([X=-0.06191034463338769, Y=-7.581830538938776E-18, Z=0.995852579168158])]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 quantized=[X=-0.0619103447691941, Y=-2.3309121299774915E-10, Z=0.9958525790757079]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 doc=1090 is contained by shape but is outside the returned XYZBounds\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 unquantized=[lat=1.5015273600939123, lon=3.141592653589793([X=-0.0690598132897715, Y=8.45738792950325E-18, Z=0.9953854835156319])]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 \u00a0 \u00a0 quantized=[X=-0.06905981308929354, Y=2.3309121299774915E-10, Z=0.9953854833983399]\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 shape=GeoNorthRectangle: \\{planetmodel=PlanetModel.WGS84, bottomlat=1.2487354264870392(71.54726966617622), leftlon=0.0(0.0), rightlon=3.5181789305199657E-12(2.0157680429064372E-10)}\n\n\u00a0\u00a0 [junit4] \u00a0 1> \u00a0 bounds=XYZBounds: [xmin=-1.0E-9 xmax=0.31591984670875706 ymin=-1.0010000000000002E-9 ymax=1.0011114625449057E-9 zmin=0.9467800037525481 zmax=0.9977622930221051]\n\n\u00a0\u00a0 [junit4] \u00a0 2> NOTE: reproduce with: ant test\u00a0 -Dtestcase=TestGeo3DPoint -Dtests.method=testGeo3DRelations -Dtests.seed=BBEC483AC10CC8FE -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=th-TH-u-nu-thai-x-lvariant-TH -Dtests.timezone=Egypt -Dtests.asserts=true -Dtests.file.encoding=UTF-8",
    "attachments": {
        "LUCENE-8457.patch": "https://issues.apache.org/jira/secure/attachment/12935975/LUCENE-8457.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16583424",
            "author": "Ignacio Vera",
            "content": "I think the failure can be reduced to the test attached. The test creates a XYZSolid from the bounds of a shape. Therefore if a point is within the shape, it must be with in the XYZSolid which it is not the case. ",
            "date": "2018-08-17T06:21:22+0000"
        },
        {
            "id": "comment-16583505",
            "author": "ASF subversion and git services",
            "content": "Commit 9e54e3e9b4cef2fa0569fdd342bff653dc7a093a in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9e54e3e ]\n\nLUCENE-8457: Add disabled unit test demonstrating the problem. ",
            "date": "2018-08-17T07:44:34+0000"
        },
        {
            "id": "comment-16583506",
            "author": "ASF subversion and git services",
            "content": "Commit ca2bc73c85e5cf607c2323ece63260d0226b5025 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ca2bc73 ]\n\nLUCENE-8457: Add disabled unit test demonstrating the problem. ",
            "date": "2018-08-17T07:45:32+0000"
        },
        {
            "id": "comment-16583546",
            "author": "ASF subversion and git services",
            "content": "Commit 9b62e208d7efa4000a5e7dde2c509ef12e42b51e in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9b62e20 ]\n\nLUCENE-8457: Add disabled unit test demonstrating the problem. ",
            "date": "2018-08-17T07:46:07+0000"
        },
        {
            "id": "comment-16584685",
            "author": "Karl Wright",
            "content": "Analysis:\n\nLeft and right planes are pretty near identical, but not quite, so the shape is a very narrow one that probably has some in-set points on the planet that are directly opposite the narrow wedge that is created.  These should, however, be captured with the bounds computations.\n\nThe basic Lagrangian bounds computation is coming up with decent bounding points, but they're getting thrown away because they're not within the GeoNorthRectangle shape:\n\n\n   [junit4]   1> shape = GeoNorthRectangle: {planetmodel=PlanetModel.WGS84, bottomlat=1.2487354264870392(71.54726966617622), leftlon=0.0(0.0), rightlon=3.5181789305199657E-12(2.0157680429064372E-10)}\n   [junit4]   1> Computing +/- X bounds for plane [A=0.0, B=0.0, C=1.0, D=-0.9467800047525483, side=1.0]\n   [junit4]   1>  add points [X=-0.31591984570875703, Y=0.0, Z=0.9467800047525481] and [X=0.31591984570875703, Y=0.0, Z=0.9467800047525481]\n   [junit4]   1> Computing +/- X bounds for plane [A=0.0, B=-1.0, C=0.0, D=0.0, side=-1.0]\n   [junit4]   1>  add points [X=-1.0011188539924791, Y=-0.0, Z=0.0] and [X=1.0011188539924791, Y=0.0, Z=-0.0]\n   [junit4]   1> Computing +/- X bounds for plane [A=3.5181789305199657E-12, B=-1.0, C=0.0, D=0.0, side=1.0]\n   [junit4]   1>  add points [X=-1.0011188539924791, Y=-3.522115259062634E-12, Z=0.0] and [X=1.0011188539924791, Y=3.522115259062634E-12, Z=-0.0]\n   [junit4]   1> solid = StandardXYZSolid: {planetmodel=PlanetModel.WGS84, isWholeWorld=false, minXplane=[A=1.0, B=0.0, C=0.0, D=1.0E-9, side=1.0], maxXplane=[A=1.0, B=0.0, C=0.0, D=-0.31591984670875706, side=-1.0], minYplane=[A=0.0, B=1.0, C=0.0, D=1.0010000000000002E-9, side=1.0], maxYplane=[A=0.0, B=1.0, C=0.0, D=-1.0011114625449057E-9, side=-1.0], minZplane=[A=0.0, B=0.0, C=1.0, D=-0.9467800037525481, side=1.0], maxZplane=[A=0.0, B=0.0, C=1.0, D=-0.9977622930221051, side=-1.0]}\n\n\n\nThe intersection bounds computation also needs to be considered in this case because it's designed to capture points on the antipodes.  For some reason that's not capturing the antipodes in this case in the bounds.  Figuring out why would be the next step.\n\nAn alternative would be to finally go ahead and install backing planes for all shapes that had the potential to be very narrow.  That would meet user expectations better but there's a severe price: the propagation of backing planes to many geo3d shapes that currently don't compute them. ",
            "date": "2018-08-18T07:11:09+0000"
        },
        {
            "id": "comment-16584733",
            "author": "Karl Wright",
            "content": "Either one of these should have succeeded and been \"in set\":\n\n\n   [junit4]   1> Computing +/- X bounds for plane [A=0.0, B=-1.0, C=0.0, D=0.0, side=-1.0]\n   [junit4]   1>  add points [X=-1.0011188539924791, Y=-0.0, Z=0.0] and [X=1.0011188539924791, Y=0.0, Z=-0.0]\n   [junit4]   1> Computing +/- X bounds for plane [A=3.5181789305199657E-12, B=-1.0, C=0.0, D=0.0, side=1.0]\n   [junit4]   1>  add points [X=-1.0011188539924791, Y=-3.522115259062634E-12, Z=0.0] and [X=1.0011188539924791, Y=3.522115259062634E-12, Z=-0.0]\n\n\n\nThis is because either point in both cases is supposedly on the plane in question, and that part is in-set except perhaps at the antipodes, where the slop amount of 1e-12 is important for judging in-set or out-of-set.  But zero of the above points are considered \"in set\" for the purpose of bounds computation!  So clearly numerical rounding issues are preventing this. ",
            "date": "2018-08-18T10:04:56+0000"
        },
        {
            "id": "comment-16584743",
            "author": "Karl Wright",
            "content": "Disregard the above; I was under the mistaken impressing that the shape being looked at crossed the equator.  It doesn't.  In fact, it's confined to the north polar region exclusively, so the lagrangian computation's results being excluded are perfectly reasonable.\n\nThe point being found to be \"in set\" but not within bounds is this one:\n\n\n   [junit4]   1> point=[lat=1.4812439919751819, lon=-3.141592653589793([X=-0.08923495159694257, Y=-1.0928129784526471E-17, Z=0.9937907331608504])]\n\n\n\nThis represents a place in the antipodes of the shape, and is in-set because of the narrowness of that shape.  The points that are used to compute the bounds, though, are exclusively the end points:\n\n\n   [junit4]   1> LLHC = [lat=1.2487354264870392, lon=0.0([X=0.3159198457087565, Y=0.0, Z=0.9467800047525483])] LRHC = [lat=1.2487354264870392, lon=3.5181789305199657E-12([X=0.3159198457087565, Y=1.1114625449056655E-12, Z=0.9467800047525483])]\n\n\n\nSince those obviously are not going to do it (they both have positive X), then we must rely on the intersection bounds computation to find points for the bounds.  This computation is not finding a point with sufficient minus X value to capture the antipodes \u2013 I still need to determine why.\n ",
            "date": "2018-08-18T10:35:26+0000"
        },
        {
            "id": "comment-16584763",
            "author": "Karl Wright",
            "content": "The intersection computation looks like it's producing points, but they are outside of the GeoNorthRectangle and thus being rejected:\n\n\n   [junit4]   1> Finding intersection bounds\n   [junit4]   1> Z biggest\n   [junit4]   1> Point1: (0.0 9.999999999999998E-13 -0.9977622920221051)\n   [junit4]   1> Point2: (-0.0 9.999999999999998E-13 0.9977622920221051)\n   [junit4]   1> Point1: (0.5684759187914333 9.999999999999998E-13 -0.8212966026816061)\n   [junit4]   1> Point2: (0.5684759187914333 9.999999999999998E-13 0.8212966026816061)\n   [junit4]   1> Point1: (-0.5684759187914333 -9.999999999999998E-13 -0.8212966026816061)\n   [junit4]   1> Point2: (-0.5684759187914333 -9.999999999999998E-13 0.8212966026816061)\n   [junit4]   1> Point1: (0.0 -9.999999999999998E-13 -0.9977622920221051)\n   [junit4]   1> Point2: (-0.0 -9.999999999999998E-13 0.9977622920221051)\n\n\n\nThe code adds a delta of MINIMUM_RESOLUTION to each of the two planes' D values and computes intersections with the planet.  But if the point of intersection is outside the original shape, then the points are tossed away.  Still verifying what shape discards what point.\n\nThe overall issue is that the logic is flawed: for the intersection bounds determination, we either accept points outside the shape, or we do things differently and use backing planes.  The former situation will lead to bounds which are much larger than they need to be, and the latter will lead to the need to create and use backing planes ubiquitously.\n ",
            "date": "2018-08-18T13:57:27+0000"
        },
        {
            "id": "comment-16584795",
            "author": "ASF subversion and git services",
            "content": "Commit 30f64d778ab218c276e5014f9c00437a128f64a7 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=30f64d7 ]\n\nLUCENE-8457: Use backing planes for all potentially narrow GeoBBox shapes. ",
            "date": "2018-08-18T14:45:33+0000"
        },
        {
            "id": "comment-16584797",
            "author": "ASF subversion and git services",
            "content": "Commit 5c01505be63ae885e9a25e153086142a65a4efa6 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5c01505 ]\n\nLUCENE-8457: Use backing planes for all potentially narrow GeoBBox shapes. ",
            "date": "2018-08-18T14:46:12+0000"
        },
        {
            "id": "comment-16584799",
            "author": "ASF subversion and git services",
            "content": "Commit 34a176480af6e628a9d74b0b424ae529fd9f7392 in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=34a1764 ]\n\nLUCENE-8457: Use backing planes for all potentially narrow GeoBBox shapes. ",
            "date": "2018-08-18T14:46:45+0000"
        },
        {
            "id": "comment-16584802",
            "author": "ASF subversion and git services",
            "content": "Commit d8ba1b16619d9ced93557d695951a3b05432ddd0 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d8ba1b1 ]\n\nLUCENE-8457: turn off debugging output for test ",
            "date": "2018-08-18T14:54:03+0000"
        },
        {
            "id": "comment-16584803",
            "author": "ASF subversion and git services",
            "content": "Commit 63796242c5c650cc8848380afdb2ff19faa2a5ec in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6379624 ]\n\nLUCENE-8457: turn off debugging output for test ",
            "date": "2018-08-18T14:54:38+0000"
        },
        {
            "id": "comment-16584804",
            "author": "ASF subversion and git services",
            "content": "Commit f2670586f697498eb1f19f22b33684c02a2842b0 in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f267058 ]\n\nLUCENE-8457: turn off debugging output for test ",
            "date": "2018-08-18T14:55:03+0000"
        },
        {
            "id": "comment-16584836",
            "author": "ASF subversion and git services",
            "content": "Commit d6e1d4a4bacc29e1587ff30ebf8e6279f4b4d5f0 in lucene-solr's branch refs/heads/master from iverase\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d6e1d4a ]\n\nLUCENE-8457: turn off more debugging output for test ",
            "date": "2018-08-18T16:35:05+0000"
        },
        {
            "id": "comment-16584837",
            "author": "ASF subversion and git services",
            "content": "Commit f9fc4d4d2855f4485cb6aac56ca66032dc664d8d in lucene-solr's branch refs/heads/branch_7x from iverase\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f9fc4d4 ]\n\nLUCENE-8457: turn off more debugging output for test ",
            "date": "2018-08-18T16:35:22+0000"
        },
        {
            "id": "comment-16584838",
            "author": "ASF subversion and git services",
            "content": "Commit 5b6c7c5e25cb050ddcadcbe67349fbe8cd3543f9 in lucene-solr's branch refs/heads/branch_6x from iverase\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5b6c7c5 ]\n\nLUCENE-8457: turn off more debugging output for test ",
            "date": "2018-08-18T16:35:41+0000"
        }
    ]
}