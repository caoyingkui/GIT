{
    "id": "SOLR-7572",
    "title": "hard commits with waitSearcher=true occasionally returns without waiting leading to inconsistent views of the index.",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10.3",
        "status": "Resolved",
        "resolution": "Cannot Reproduce",
        "priority": "Major"
    },
    "description": "Another observed behavior while working with a customer, possibly related to SOLR-7571. Again, assigning to myself but feel free to take it.\n\nIssuing a commit (openSearcher=true) sometimes returns immediately and does not actually work as expected.\n\nHere's the process. \n> Index a bunch of documents with timestamp=T1. Some time later update many (but not all) of those documents with a more recent timestamp=T2.\n> issue a hard commit waitSearcher=true\n> Issue a query ...fq=timestamp:[* TO T1]\n\nThe return count includes many (all?) records with timestamp=T1. Simply waiting for \"a while\" and re-issuing the query will eventually return the correct number of docs.\n\nautocommits are disabled here, i.e. hard commits are happening with openSearcher=false and soft commits are disabled in solrconfig.xml. There are no other clients sending commit messages.\n\nOf course this is not reproducible at will and whether it's related to the client firehosing updates to Solr I don't know yet.\n\nTo pursue this I'm hoping to set up a \"firehose\" test scenario and see how many of these I can reproduce.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-05-19T19:50:20+0000",
            "author": "Erick Erickson",
            "content": "Not entirely sure whether all there are related to firehosing updates at Solr or not, but they were all seen in the same environment. ",
            "id": "comment-14551097"
        },
        {
            "date": "2015-05-26T22:00:57+0000",
            "author": "Erick Erickson",
            "content": "I've written a test program that hammers a cluster with updates and I'm not able to reproduce this yet so I'm not quite sure how to make progress on these. I'll be tweaking/running the test harness for a while to see what I can see. ",
            "id": "comment-14559960"
        },
        {
            "date": "2015-05-30T21:36:28+0000",
            "author": "Vijay Sekhri",
            "content": "Our suspicion here is that some default setting or the setting in solr.xml for socket and connection timeout for distribute message may be cause this . Ideally we could have 2 different timeout setting for commit types of message vs regular document update message. Latter would bet set to in millisecond to a few seconds but former could be upto minutes. Having only one timeout setting for both types of update message (commit and doc update) cannot server both use cases. Setting a higher timeout can yield to OOM during indexing but will let commit finish successfully. Setting it to lower timeout can let indexing finish successfully but commit can timeout.\n\nGive a try by decreasing the time in your test harness to a very low level  ",
            "id": "comment-14566211"
        },
        {
            "date": "2016-01-20T21:46:21+0000",
            "author": "Erick Erickson",
            "content": "Closing a few tickets out on the theory that improvements since 4.10 have taken care of this situation. We're seeing very high indexing rates in numbers of clients with recent Solr releases not exhibit this problem. We can open new JIRAs if we see this again. ",
            "id": "comment-15109519"
        }
    ]
}