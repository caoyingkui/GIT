{
    "id": "SOLR-5543",
    "title": "solr.xml duplicat eentries after SWAP 4.6",
    "details": {
        "affect_versions": "4.6",
        "status": "Closed",
        "fix_versions": [
            "4.6.1",
            "4.7",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We are having issues with SWAP CoreAdmin in 4.6.\n\nUsing legacy solr.xml we issue a COreodmin SWAP, and we want it persistent. It has been running flawless since 4.5. Now it creates duplicate lines in solr.xml.\n\nEven the example multi core schema in doesn't work with persistent=\"true\" - it creates duplicate lines in solr.xml.\n\n <cores adminPath=\"/admin/cores\">\n    <core name=\"autosuggest\" loadOnStartup=\"true\" instanceDir=\"autosuggest\" transient=\"false\"/>\n\n    <core name=\"citystateprovider\" loadOnStartup=\"true\" instanceDir=\"citystateprovider\" transient=\"false\"/>\n\n    <core name=\"collection1\" loadOnStartup=\"true\" instanceDir=\"collection1\" transient=\"false\"/>\n\n    <core name=\"facility\" loadOnStartup=\"true\" instanceDir=\"facility\" transient=\"false\"/>\n\n    <core name=\"inactiveproviders\" loadOnStartup=\"true\" instanceDir=\"inactiveproviders\" transient=\"false\"/>\n\n    <core name=\"linesvcgeo\" instanceDir=\"linesvcgeo\" loadOnStartup=\"true\" transient=\"false\"/>\n\n    <core name=\"linesvcgeofull\" instanceDir=\"linesvcgeofull\" loadOnStartup=\"true\" transient=\"false\"/>\n\n    <core name=\"locationgeo\" loadOnStartup=\"true\" instanceDir=\"locationgeo\" transient=\"false\"/>\n\n    <core name=\"market\" loadOnStartup=\"true\" instanceDir=\"market\" transient=\"false\"/>\n\n    <core name=\"portalprovider\" loadOnStartup=\"true\" instanceDir=\"portalprovider\" transient=\"false\"/>\n\n    <core name=\"practice\" loadOnStartup=\"true\" instanceDir=\"practice\" transient=\"false\"/>\n\n    <core name=\"provider\" loadOnStartup=\"true\" instanceDir=\"provider\" transient=\"false\"/>\n\n    <core name=\"providersearch\" loadOnStartup=\"true\" instanceDir=\"providersearch\" transient=\"false\"/>\n\n    <core name=\"tridioncomponents\" loadOnStartup=\"true\" instanceDir=\"tridioncomponents\" transient=\"false\"/>\n\n    <core name=\"linesvcgeo\" instanceDir=\"linesvcgeo\" loadOnStartup=\"true\" transient=\"false\"/>\n\n    <core name=\"linesvcgeofull\" instanceDir=\"linesvcgeofull\" loadOnStartup=\"true\" transient=\"false\"/>\n</cores>",
    "attachments": {
        "SOLR-5543.patch": "https://issues.apache.org/jira/secure/attachment/12618787/SOLR-5543.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Alan Woodward",
            "id": "comment-13848448",
            "date": "2013-12-14T20:57:33+0000",
            "content": "This patch adds an explicit #swap(CoreContainer, CoreDescriptor, CoreDescriptor) method to CoreLocator.  CoreContainer.swap() was just using persist, which ended up adding two new entries to the end of the cores list but never clearing them out.  This wasn't being picked up in tests because the SolrXMLCoreLocator deduplicated them in discovery (by a happy accident). "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13848456",
            "date": "2013-12-14T21:11:20+0000",
            "content": "Commit 1550969 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1550969 ]\n\nSOLR-5543: Core Swaps result in duplicate entries in solr.xml "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13848457",
            "date": "2013-12-14T21:12:28+0000",
            "content": "Commit 1550970 from Alan Woodward in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1550970 ]\n\nSOLR-5543: Core Swaps result in duplicate entries in solr.xml "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13848458",
            "date": "2013-12-14T21:13:02+0000",
            "content": "Thanks Bill! "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13850584",
            "date": "2013-12-17T15:46:53+0000",
            "content": "Alan Woodward ... I hear we're doing a 4.6.1 in the near future.  IMHO this is a strong candidate for backporting.\n\nInteresting detail, which I don't think needs to change your patch at all:  My 'full index rebuild' process does seven core swaps.  It appears that the duplication introduced by a core swap is eliminated by a subsequent core swap \u2013 there were only extra entries for the last core swapped. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13850591",
            "date": "2013-12-17T15:54:19+0000",
            "content": "It doesn't seem to actually make a difference to the running application, because the ConfigSolr object deduplicates the entries internally, which is also why it only writes out the latest swap (the current set, plus the two extra core definitions).  But it makes it confusing for people who are editing solr.xml offline. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13851329",
            "date": "2013-12-18T03:49:44+0000",
            "content": "The reason I think it's critical to include in 4.6.1 is this:  Although everything works perfectly after the problem appears, as soon as you restart Solr, the duplicate entries cause exceptions and cores don't start up properly.  That was my experience when I upgraded my dev server to the released 4.6.0, rebuilt the index (resulting in seven core swaps), and then later restarted Solr for some config changes.  It's not standard procedure to restart Solr after rebuilding, but it does occasionally happen.  It happens a LOT on my dev server, where I try out new configs.\n\nIf I were to do a PERSIST CoreAdmin action after each swap, would it effectively fix the problem even on an unpatched 4.6.0?\n\nTL;DR: I do have the ability to instead do a \"persist all\" after all of the swaps, because I separately create and track per-server objects for CoreAdmin SolrJ calls.  Although I end up with 28 HttpSolrServer objects for updates and queries with my production build application, I only create one CoreAdmin server object for each host/port combination, instead of an additional 28 objects.  I don't know what the incremental size of HttpSolrServer objects is, but I do try to be careful about memory. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13867142",
            "date": "2014-01-09T22:03:50+0000",
            "content": "With a verbal OK from Mark Miller via IRC, I am backporting the fix for this issue to 4.6.1.\n\nBoth precommit and tests in solr/ are passing.  The commits for trunk and branch_4x have no code changes, I'm just moving the CHANGES.txt entry. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867155",
            "date": "2014-01-09T22:09:04+0000",
            "content": "Commit 1556965 from Shawn Heisey in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1556965 ]\n\nSOLR-5543: Backport to 4.6 branch, for 4.6.1 release. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867167",
            "date": "2014-01-09T22:17:17+0000",
            "content": "Commit 1556968 from Shawn Heisey in branch 'dev/trunk'\n[ https://svn.apache.org/r1556968 ]\n\nSOLR-5543: move changes entry from 4.7.0 to 4.6.1. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13867170",
            "date": "2014-01-09T22:19:13+0000",
            "content": "Commit 1556969 from Shawn Heisey in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1556969 ]\n\nSOLR-5543: Move changes entry from 4.7.0 to 4.6.1 (merge trunk r1556968) "
        }
    ]
}