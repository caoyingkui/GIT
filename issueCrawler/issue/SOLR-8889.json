{
    "id": "SOLR-8889",
    "title": "SolrCloud deleteById is broken when router.field is set",
    "details": {
        "components": [
            "SolrCloud",
            "SolrJ"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "If you set router.field on your collection to shard by something other than the ID, then deleting documents by ID fails some of the time (how much depends on how sharded the collection is).  I suspect that it'd work if the IDs provided when deleting by ID were prefixed using the composite key syntax \u2013 \"routekey!id\" though I didn't check.  This is terrible.  Internally Solr should broadcast to all the shards if there is no composite key prefix.\n\nSome affected code is UpdateRequest.getRoutes.",
    "attachments": {
        "SOLR_8889_investigation.patch": "https://issues.apache.org/jira/secure/attachment/12795051/SOLR_8889_investigation.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-23T20:07:35+0000",
            "author": "David Smiley",
            "content": "Attached is a patch.  It does not fix the bug, it's a modification to ShardSplitTest (one of the very few places even testing router.field) to experiment with observing the behavior.  The patch as-is passes but you may notice the variable numFoundAfterDelById is not 100 - 3 (100 docs - 3 deleted by id), it's more than that. ",
            "id": "comment-15209065"
        },
        {
            "date": "2016-03-23T21:05:27+0000",
            "author": "David Smiley",
            "content": "It seems deleteById given an id prefixed by the route field value (and an exclaimation) doesn't work \u2013 as I experiment with the test.  It probably doesn't work because even though the request will likely get to the right shard, the ID is simply not the wright ID to delete since it's prefixed and not the actual document ID value. ",
            "id": "comment-15209170"
        },
        {
            "date": "2016-03-24T01:32:05+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "This could be same as SOLR-7384. I remember fixing some of this in SOLR-5890, but afair I forgot to version the deleteById commands (when sent from leader to replica), and SOLR-7384 was opened due to that. ",
            "id": "comment-15209549"
        },
        {
            "date": "2016-03-24T01:34:44+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Internally Solr should broadcast to all the shards if there is no composite key prefix.\n\nI remember wanting to do this in SOLR-5890, but we took a conscious decision not to, in that issue. Please see: https://issues.apache.org/jira/browse/SOLR-5890?focusedCommentId=14264525&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14264525 ",
            "id": "comment-15209552"
        },
        {
            "date": "2016-03-24T01:39:35+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Given that we are near 6.0, we might be at a better position to introduce this change and not worry about backcompat. SOLR-6910 ",
            "id": "comment-15209555"
        },
        {
            "date": "2016-03-24T05:52:31+0000",
            "author": "David Smiley",
            "content": "RE broadcast:  There might not be enough time for the 6.0 release to make it broadcast, but be my guest to go for it if you have the time.  An exception is reasonable if we can't do the right thing; it's way better then silently doing the wrong thing!  In the case of the implicit router, I don't think a delete should be broadcast because it's a do-it-yourself router requiring you to know where to send things by definition.  That said, the ability to explicitly tell Solr to broadcast would be a nice convenience feature, apart from this issue.\n\nI looked at some of the related issues you pointed at.  Arguably this issue is the same as SOLR-5890 but IMO SOLR-5890 isn't \"done\" because it only helps for those people who know about UpdateRequest.setRoute \u2013 and few would notice that given the SolrClient.deleteById method.  Indeed I did try setRoute and it works (yay) but, wow, what a gotcha for those that don't know.\n\nEven with UpdateRequest.setRoute() working (I tweaked my patch to try it and observe it worked), I see a bug, verified via debugging & stepping through.  CloudSolrClient fails to honor the route and thus sends the delete-by-id requests based on hashing the ID (wrong).  Interestingly, ultimately it appears Solr on the server side somehow knows what to do since the test passes.  What happens is, CSC.directUpdate calls UpdateRequest.getRoutes.  At line 288 when it calls router.getTargetSlice, it does not provide \"route\" from the map.  Doh!  So instead it hashes on the ID (what CompositeIdRouter falls back on).\n\nAlso, don't you think the MDC.put & MDC.remove (line 603 & 611) should be moved to be within the callable, not outside? Right?\n\nAs an aside, I don't see why the route must end in an exclamation \u2013 that's weird and easy to forget.  I forgot the first time and didn't get it to work.  That's another gotcha, we should perhaps automatically add one?  Noble Paul do you know why it's this way?  If I recall, you added this feature. ",
            "id": "comment-15209810"
        },
        {
            "date": "2016-03-24T06:03:34+0000",
            "author": "Noble Paul",
            "content": "That's another gotcha, we should perhaps automatically add one?\n\nYes. totally\n ",
            "id": "comment-15209824"
        },
        {
            "date": "2018-05-23T22:46:18+0000",
            "author": "Jay",
            "content": "David Smiley, Ishan Chattopadhyaya: is there a solution for this issue. I have a multisharded, implicity routing in my setup and also do lot of deletes. Is there an alternative to using deleteById.\u00a0\n\nTested\u00a0 in both solr5.3 & solr 6.6.3.\n\nThanks\n\n\u00a0 ",
            "id": "comment-16488144"
        },
        {
            "date": "2018-05-24T04:39:04+0000",
            "author": "Shawn Heisey",
            "content": "Jay, I've been following your thread on the mailing list.  Using deleteByQuery runs the risk of big pauses when merges happen, but I think it might avoid the problems described on this issue.\n\nSOLR-5890 seems to say that if you explicitly send a deleteById request to a core that's a replica of the correct shard, rather than sending it to the collection, and if all IDs in the delete are on that shard, deleteById might work.  (For SolrJ, that would require using HttpSolrClient rather than CloudSolrClient)\n\nThe actual change for SOLR-5890 looks promising (using the _route_ parameter), but then SOLR-7384 appears to indicate that it doesn't actually work correctly.\n\nMore than one of the issues touching on this problem has mentioned broadcasting the delete to all shards as a workaround or a solution, but it seems that this hasn't actually been implemented.  One idea, which I admit is a drastic notion, is to implement a parameter that would force deleteById on SolrCloud to send the delete to all shards. ",
            "id": "comment-16488408"
        }
    ]
}