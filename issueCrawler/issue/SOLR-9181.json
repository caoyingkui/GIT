{
    "id": "SOLR-9181",
    "title": "ZkStateReaderTest failure",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "https://builds.apache.org/job/Lucene-Solr-Tests-6.x/243/",
    "attachments": {
        "stdout": "https://issues.apache.org/jira/secure/attachment/12816348/stdout",
        "stderr": "https://issues.apache.org/jira/secure/attachment/12816347/stderr",
        "SOLR-9181-2.patch": "https://issues.apache.org/jira/secure/attachment/12816297/SOLR-9181-2.patch",
        "SOLR-9181.patch": "https://issues.apache.org/jira/secure/attachment/12807720/SOLR-9181.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-02T12:24:48+0000",
            "author": "Alan Woodward",
            "content": "This is a test bug, I think.  There's a race when a collection is migrated from state format 1 to state format 2, where the state reader may briefly see the collection removed from collectionstate.json before it sees the new collection/state.json znode.  The test fails to take that into account, and assumes that clusterState.getCollection() will always return a DocCollection object.  It can be fixed by using waitForState() instead of polling.  I'll put up a patch shortly. ",
            "id": "comment-15312222"
        },
        {
            "date": "2016-06-02T13:48:22+0000",
            "author": "Alan Woodward",
            "content": "Patch.  This also uncovered a couple of bugs in the collection state watcher API to do with collections in state format 1:\n\n\tformat-1-collections wouldn't trigger notifications on updates if they hadn't already been registered\n\tregistering a watcher on a format-1 collection wouldn't check the current state if the collection wasn't already watched\n\n ",
            "id": "comment-15312320"
        },
        {
            "date": "2016-06-03T14:13:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 950fd913354912f9c84a07dcf60258726d6d6f4f in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=950fd91 ]\n\nSOLR-9181: Fix test bug in ZkStateReaderTest ",
            "id": "comment-15314162"
        },
        {
            "date": "2016-06-03T14:13:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 0cfe43164a95de530907de4818b32891f62a95f8 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0cfe431 ]\n\nSOLR-9181: Fix test bug in ZkStateReaderTest ",
            "id": "comment-15314163"
        },
        {
            "date": "2016-06-03T19:37:35+0000",
            "author": "Alan Woodward",
            "content": "I'm seeing a whole bunch of failures after this, and can reproduce via beasting locally - digging now. ",
            "id": "comment-15314662"
        },
        {
            "date": "2016-06-04T10:05:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1e2ba9fe9be84f0b5defe4965735eae892fabf7b in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1e2ba9f ]\n\nRevert \"SOLR-9181: Fix test bug in ZkStateReaderTest\"\n\nThis reverts commit 950fd913354912f9c84a07dcf60258726d6d6f4f. ",
            "id": "comment-15315440"
        },
        {
            "date": "2016-06-04T10:06:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3595b9ab2e51a6e040915db98d48d242197c151e in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3595b9a ]\n\nRevert \"SOLR-9181: Fix test bug in ZkStateReaderTest\"\n\nThis reverts commit 0cfe43164a95de530907de4818b32891f62a95f8. ",
            "id": "comment-15315441"
        },
        {
            "date": "2016-06-04T10:07:13+0000",
            "author": "Alan Woodward",
            "content": "Reverting this while I work out what's broken. ",
            "id": "comment-15315442"
        },
        {
            "date": "2016-06-07T10:44:50+0000",
            "author": "Alan Woodward",
            "content": "Turns out that ZkStateReaderTest is very helpful for finding bugs and races in the collection state watcher implementation!  This patch fixes the following:\n\n\tnotifications were being run before constructState() was called, which meant that threads waiting on notifications could see stale state if they then called .getClusterState().  Notifications are now always run afterwards.\n\tDocCollection.equals() didn't take into account state formats, so a migration from state format 1 to state format 2 could sometimes not fire a notification\n\tWhen choosing which state format 1 collections should be notified, the code checked to see if there was a watcher on the collection.  This lead to a race, where a watch could be set after the legacy state change had fired, but before constructState() was called, so that it would check against stale state but not be notified of the new state.  The code now just raises notifications for all changed collections.\n\n\n\nBeasting ZkStateReaderTest for several thousand iterations now passes consistently, so I think this should sort out the issues.  I'm pretty sure that the final point above is also the reason for the failures in SOLR-9189. ",
            "id": "comment-15318276"
        },
        {
            "date": "2016-06-07T18:49:37+0000",
            "author": "Scott Blum",
            "content": "Hi Alan Woodward!  I'm about to upload a slightly different patch to fix a few nits, but I did notice a potential problem:  most callers of refreshLegacyClusterState() throw away the results.  In certain code paths, observers of collections in the legacy format won't see any changes even though our in-memory rep is updated. ",
            "id": "comment-15319107"
        },
        {
            "date": "2016-06-07T19:06:09+0000",
            "author": "Scott Blum",
            "content": "Patch updated, just a few tweaks. ",
            "id": "comment-15319140"
        },
        {
            "date": "2016-06-08T21:53:13+0000",
            "author": "Alan Woodward",
            "content": "Here's an attempt to clean this up a bit.  Notifications are now fired from constructState(), which takes a map of changed collections.  This should ensure that a) we always take into account what has changed, and b) we fire notifications on every state updated.  Tests pass under beasting. ",
            "id": "comment-15321505"
        },
        {
            "date": "2016-06-09T10:20:25+0000",
            "author": "Alan Woodward",
            "content": "Given that we're still finding timing-related bugs in this code, I think it might be a good idea to remove the .waitForState() and .registerCollectionStateWatcher() methods from 6.1, and push it all back to 6.2? ",
            "id": "comment-15322310"
        },
        {
            "date": "2016-06-09T17:28:13+0000",
            "author": "Scott Blum",
            "content": "I think I'd probably leave the APIs there, but maybe mark them experimental in 6.1 and just not have the rest of Solr rely on them yet? ",
            "id": "comment-15322917"
        },
        {
            "date": "2016-06-09T20:31:26+0000",
            "author": "Scott Blum",
            "content": "BTW, I have to admit I'm stalling on reviewing the update because there's no easy way to compare two patch files except to patch each one in turn and diff the result... ",
            "id": "comment-15323283"
        },
        {
            "date": "2016-07-01T15:13:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 057c317a9d781a15eb9b47341d247d9a98902f24 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=057c317 ]\n\nSOLR-9181: Fix some races in ZkStateReader collection watch updates ",
            "id": "comment-15359113"
        },
        {
            "date": "2016-07-01T15:14:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cefab1dffc514309734699d0031e7e08aac24dfc in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cefab1d ]\n\nSOLR-9181: Fix some races in ZkStateReader collection watch updates ",
            "id": "comment-15359115"
        },
        {
            "date": "2016-07-01T15:14:37+0000",
            "author": "Alan Woodward",
            "content": "Meant to commit this for 6.1, and it completely dropped off my radar.  Oh well... ",
            "id": "comment-15359117"
        },
        {
            "date": "2016-07-03T20:33:53+0000",
            "author": "Steve Rowe",
            "content": "Around the cefab1dfff commit under this issue, my Jenkins master Lucene/Solr test job went from about 50% overall job failure rate (i.e. at least one test failure in a run - this unfortunately has been the case for quite some time) to nearly 100% failures (28 runs with at least one failure out of 29 runs) - see the trend here <http://jenkins.sarowe.net/job/Lucene-Solr-tests-master/buildTimeTrend>.  I think Policeman and ASF Jenkins are seeing increases in failure rates too but I haven't counted yet. The few failing tests I attempted with don't reproduce.  The ZK reader and writer tests seem to be failing quite a bit more often now, but that's anecdotal; I didn't look at the numbers.  \n\nSo I stopped all other jobs on my Jenkins and did a brute force search for which commit to blame, by pinning 7 jobs each at a different non-trivial commit in the suspect time frame - you can see these jobs here: <http://jenkins.sarowe.net/view/Enabled/>.  Each job has run about 20 times now, and c3fab1dfff stands out as failing signficantly more often:\n\n\n\n\npush date/time (UTC)\nissue\ncommit\nfailures\nruns\n% failures\n\n\n29 Jun 18:27\nSOLR-9246\n1ae0d8d6\n6\n19\n32%\n\n\n30 Jun 06:40\nSOLR-9216\n1dc7480b\n10\n19\n53%\n\n\n30 Jun 09:52\nSOLR-9264\n015e0fc1\n10\n19\n53%\n\n\n30 Jun 17:02\nSOLR-8787\n0a15699c\n11\n20\n55%\n\n\n01 Jul 07:46\nSOLR-9262\n51fde1cb\n11\n20\n55%\n\n\n01 Jul 13:07\nSOLR-9076\n2c96c91d\n9\n19\n47%\n\n\n01 Jul 15:13\nSOLR-9181\ncefab1df\n13\n19\n68%\n\n\n\n ",
            "id": "comment-15360671"
        },
        {
            "date": "2016-07-03T20:35:58+0000",
            "author": "Alan Woodward",
            "content": "Thanks Steve.  I'll take a look at this tomorrow. ",
            "id": "comment-15360672"
        },
        {
            "date": "2016-07-04T08:09:51+0000",
            "author": "Alan Woodward",
            "content": "OK, I've gone through the logs for a number of these test failures, and what they all have in common is a ZK session expiry causing the cluster state to not be properly updated.  What I can't work out though is why these expiries are happening - the timestamps on the logs don't show any pauses, and there's nothing as far as I can tell that's changed in the zk code itself. ",
            "id": "comment-15360995"
        },
        {
            "date": "2016-07-04T08:15:39+0000",
            "author": "Alan Woodward",
            "content": "Also, I get no failures on local beasting, so it's presumably something to do with contention on the slow-ish Jenkins machines. ",
            "id": "comment-15361002"
        },
        {
            "date": "2016-07-05T09:47:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e6e0765e864132185549e91a64d76fcac63f7335 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e6e0765 ]\n\nSOLR-9181: Add some logging to ZkStateReader to try and debug test failures ",
            "id": "comment-15362296"
        },
        {
            "date": "2016-07-05T14:17:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 521764ffa572650f9e8c8b4ac5c0dba7ba5ee5e3 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=521764f ]\n\nSOLR-9181: More logging ",
            "id": "comment-15362540"
        },
        {
            "date": "2016-07-05T14:18:39+0000",
            "author": "Alan Woodward",
            "content": "I've added some logging, and I think that this is a race somewhere between refreshCollectionList() and forceUpdateCollection(), where a new lazy collection is being added halfway through the update.  Still digging... ",
            "id": "comment-15362541"
        },
        {
            "date": "2016-07-05T14:28:04+0000",
            "author": "Alan Woodward",
            "content": "Got it - if I stick a Thread.sleep() in refreshCollectionList() then the ZkStateWriterTest errors reproduce for me.  It looks as though forceUpdateCollection() needs to hold both the general update lock and the collections list update lock, although I'm going to beast this for a while to make sure that this doesn't deadlock anywhere.\n\nThis still leaves the ZkStateReaderTest failures.  I think these are caused by notifications using potentially stale DocCollection states, rather than the the latest state available.  I'm beasting tests locally now, and will commit the fix to master shortly and see if  it actually works. ",
            "id": "comment-15362555"
        },
        {
            "date": "2016-07-05T15:10:32+0000",
            "author": "Erick Erickson",
            "content": "Alan Woodward\n\nI was looking at this too fearing that my recent changes might have introduced yet another problem (insert rant about windows here) and found that the NPE in testExternalCollectionWatchedNotWatched could be avoided by adding a wait if any of these were null around line 166\n\nassertTrue(reader.getClusterState().getCollectionRef(\"c1\").isLazilyLoaded()\n\nFYI. Didn't log which of the above, but I assume the getCollectionRef(\"c1\") returned null. Not pursuing this further, but the NPE is quite reproducible on my machine. I can beast your patch if that'd help, let me know. ",
            "id": "comment-15362611"
        },
        {
            "date": "2016-07-05T20:37:58+0000",
            "author": "Alan Woodward",
            "content": "Here's a patch which should solve the issue - if you could beast it Erick that would be great!  Am travelling the next couple of days, but I'll commit it if I get half-decent wifi anywhere. ",
            "id": "comment-15363184"
        },
        {
            "date": "2016-07-05T22:38:33+0000",
            "author": "Erick Erickson",
            "content": "Besting now.\n\nI'm assuming I should just apply your most recent patch (SOLR-9181-2) to a current master... ",
            "id": "comment-15363403"
        },
        {
            "date": "2016-07-06T00:57:28+0000",
            "author": "Erick Erickson",
            "content": "No luck, still getting:\nERROR   0.32s | ZkStateReaderTest.testExternalCollectionWatchedNotWatched <<<\n   [junit4]    > Throwable #1: java.lang.NullPointerException\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([D27D8A51F09E7A68:D9C67B7DA1C78CC1]:0)\n   [junit4]    > \tat org.apache.solr.cloud.overseer.ZkStateReaderTest.testExternalCollectionWatchedNotWatched(ZkStateReaderTest.java:167)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\nFull log attached in a minute. ",
            "id": "comment-15363561"
        },
        {
            "date": "2016-07-08T08:00:15+0000",
            "author": "Alan Woodward",
            "content": "Think I've got it now - there was one case in forceUpdateCollection() where constructState() wasn't being called.  I'm going to commit this to master and watch for the next few hours, and then backport. ",
            "id": "comment-15367373"
        },
        {
            "date": "2016-07-08T09:02:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit be8d56ada69c885342bfae80d73f9f5b89c11504 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=be8d56a ]\n\nSOLR-9181: Fix race in constructState() and missing call in forceUpdateCollection() ",
            "id": "comment-15367420"
        },
        {
            "date": "2016-07-08T13:30:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 60232cd028e41c427b686a6cab720ac3989ba289 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=60232cd ]\n\nSOLR-9181: Add some logging to ZkStateReader to try and debug test failures ",
            "id": "comment-15367672"
        },
        {
            "date": "2016-07-08T13:30:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 86d8d3a937802f47add8408bdd05117ec0fc2137 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=86d8d3a ]\n\nSOLR-9181: More logging ",
            "id": "comment-15367674"
        },
        {
            "date": "2016-07-08T13:30:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit fda3d8b7c2069d9cbd2445b397e9cceb38851be6 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fda3d8b ]\n\nSOLR-9181: Fix race in constructState() and missing call in forceUpdateCollection() ",
            "id": "comment-15367675"
        },
        {
            "date": "2016-08-26T14:00:26+0000",
            "author": "Michael McCandless",
            "content": "Bulk close resolved issues after 6.2.0 release. ",
            "id": "comment-15439039"
        }
    ]
}