{
    "id": "SOLR-2080",
    "title": "Create a Related Search Component",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Similar to spell checking, it is often useful to be able to, given a search, get back related searches, as determined by some model (perhaps external, perhaps internal \u2013 as in a different core).  For now, I'm not concerned with the process of adding queries to the model.  \n\nSo, for example, given the query \"television\", this component might return: LCD tvs, plasma tvs, HDTV, etc.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Grant Ingersoll",
            "id": "comment-12913690",
            "date": "2010-09-22T18:07:15+0000",
            "content": "It occurs to me that what we have evolving here between spell check, suggestions and this is a baseline SuggesterComponent.  In one way or another, they all are doing the same thing, it's just the dictionary that is used that is different.   It is thus likely worthwhile to refactor a little bit here (while still keeping the back compat) a slightly more generic framework that doesn't presume names like <spellchecker> and instead switches to <suggester>, of which we have 3 different things: spell checking, auto-suggest, related search. "
        },
        {
            "author": "Cameron",
            "id": "comment-13124396",
            "date": "2011-10-10T18:54:58+0000",
            "content": "Any progress on this feature? I'm curious as to how one would build a feature like this without the need for external data such as logs. "
        }
    ]
}