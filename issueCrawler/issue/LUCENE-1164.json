{
    "id": "LUCENE-1164",
    "title": "Improve how ConcurrentMergeScheduler handles too-many-merges case",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.4"
        ],
        "affect_versions": "2.3",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "CMS now lets you set \"maxMergeThreads\" to control max # simultaneous\nmerges.\n\nHowever, when CMS hits that max, it still allows further merges to\nrun, by running them in the foreground thread.  So if you set this max\nto 1, and use 1 thread to add docs, you can get 2 merges running at\nonce (which I think is broken).\n\nI think, instead, CMS should pause the foreground thread, waiting\nuntil the number of merge threads drops below the limit.  Then, kick\noff the backlog merge in a thread and return control back to primary\nthread.",
    "attachments": {
        "LUCENE-1164.patch": "https://issues.apache.org/jira/secure/attachment/12374803/LUCENE-1164.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-02-05T18:46:14+0000",
            "content": "Attached patch.  I plan to commit in a day or two... ",
            "author": "Michael McCandless",
            "id": "comment-12565847"
        }
    ]
}