{
    "id": "SOLR-12294",
    "title": "System collection - Lazy loading mechanism not working for custom UpdateProcessors",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "UpdateRequestProcessors"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "7.3",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Hi all,\n\nI'm facing an issue regarding custom code inside a .system-collection and starting up a Solr Cloud cluster.\n\nI thought, like its stated in the documentation, that in case using the .system collection custom code is lazy loaded, because it can happen that a collection that uses custom code is initialized before the .system collection is up and running.\n\nI did all the necessary configuration and while debugging, I can see that the custom code is wrapped via a PluginBag$LazyPluginHolder. So far its seems good, but I still get Exceptions when starting the Solr Cloud with the following errors:\n\nSolrException: Blob loading failed: .no active replica available for .system collection...\n\nIn my case I'm using custom code for a couple of UpdateProcessors. So it seems, that this lazy mechanism is not working well for UpdateProcessors.\n\nInside the calzz LazyPluginHolder the comment says:\n\n\"A class that loads plugins Lazily. When the get() method is invoked the Plugin is initialized and returned.\"\n\nWhen a core is initialized and you have a custom UpdateProcessor, the get-method is invoked directly and the lazy loading mechanism tries to get the custom class from the MemClassLoader, but in most scenarios the system collection is not up and the above Exception is thrown...\n\nSo maybe it\u2019s the case that for UpdateProcessors while initializing a core, the routine is not implemented optimal for the lazy loading mechanism?\n\n\u00a0\n\nHere are the steps to reproduce the issue:\n\n\tUnpack solr 7.3.0\n 1.1 Add SOLR_OPTS=\"$SOLR_OPTS -Denable.runtime.lib=true\" to solr.in.sh\n 1.2 Start Solr with -c option\n\tSetup .system collection:\n 2.1 Upload custom test jar --> curl -X POST -H 'Content-Type: application/octet-stream' --data-binary @<path to custom jar>/update-processor-0.0.1-SNAPSHOT.jar http://<your solr>/solr/.system/blob/test_blob\n 2.2 Alter maxShardsPerNode --> .../admin/collections?action=MODIFYCOLLECTION&collection=.system&maxShardsPerNode=2\n 2.2 Add Replica to .system collection --> .../admin/collections?action=ADDREPLICA&collection=.system&shard=shard1\n\tSetup test collection:\n 3.1 Upload test conf to ZK --> ./zkcli.sh -zkhost <your ZK host> -cmd upconfig -confdir <your config dir> -confname test_conf\n 3.2 Create a test1 collection with commented UP-chain inside solrconfig.xml via Admin UI\n 3.3 Add blob to test collection --> curl http://<your Solr>/solr/test1/config -H 'Content-type:application/json' -d '{\"add-runtimelib\": { \"name\":\"test_blob\", \"version\":1 }}'\n 3.4 Uncomment the UP-chain and upload test-conf again --> ./zkcli.sh -zkhost <your ZK host> -cmd upconfig -confdir <your config dir> -confname test_conf\n 3.5 Reload test1 collection\n 3.6 Everything should work as expected now (no erros are shown)\n\tRestart SOLR\n 4.1 Now you can see: SolrException: Blob loading failed: No active replica available for .system collection\n\n\n\nExpected: The lazy loading mechanism should work for UpdateProcessors inside core init routine, but it isn't due to above Exception.\n\nSometimes you are lucky and the test1 collection will be initialize after the .system collection. But in ~90% of the time this isn't the case...\n\nLet me know if you need further details here,\n\n\u00a0\n\nJohannes",
    "attachments": {
        "solrconfig.xml": "https://issues.apache.org/jira/secure/attachment/12921258/solrconfig.xml",
        "schema.xml": "https://issues.apache.org/jira/secure/attachment/12921257/schema.xml",
        "no_active_replica_available.png": "https://issues.apache.org/jira/secure/attachment/12921260/no_active_replica_available.png",
        "update-processor-0.0.1-SNAPSHOT.jar": "https://issues.apache.org/jira/secure/attachment/12921259/update-processor-0.0.1-SNAPSHOT.jar"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-15T08:21:45+0000",
            "content": "Is there anything I can do to put more light on that issue here?\nI already wrote to the email user list, but there was also no reaction so far.\n\nThis is a critical behaviour for us, stopping us to use the system collection feature at all!\n\nIs it possible that someone look into the config files, just to make sure I configured the feature correctly? ",
            "author": "Johannes Brucher",
            "id": "comment-16475485"
        },
        {
            "date": "2018-05-23T14:26:21+0000",
            "content": "sorry, you can't specify a chain like that if you need it to be dynamically loaded , however you can specify a request parameter processor=testUP and it will work. remove the < updateRequestProcessorChain  > definition altogether and just specify the < updateProcessor > ",
            "author": "Noble Paul",
            "id": "comment-16487342"
        },
        {
            "date": "2018-05-23T15:04:54+0000",
            "content": "Noble Paul thank you for your reply!\n After your comment I looked into the Solr Ref guide: https://lucene.apache.org/solr/guide/7_3/update-request-processors.html#update-processors-in-solrcloud\n Because I was pretty sure that in Cloud you can still use processorChains.\n\nAnd that is really the case, BUT:\n\nYou have to name it \"updateProcessorChain\" and not \"updateRequestProcessorChain\"!!!\n That changed the whole behaviour und every time I restarted the Cloud, the exception is never thrown again!\n\nI guess using \"updateProcessorChain\" utilize a different core init routine and that routine is using the lazy loading mechanism correctly.\n\nCassandra Targett Maybe it's worth to highlight the difference between \"updateProcessorChain\" and \"updateRequestProcessorChain\" in the Ref Guide and that it seems that in Cloud you have to use \"updateProcessorChain\" to be safe here!\n\n\u00a0\n\nThanks all!\n\nJohannes ",
            "author": "Johannes Brucher",
            "id": "comment-16487421"
        },
        {
            "date": "2018-05-23T15:18:20+0000",
            "content": "cloud can use updateProcessorChain or\u00a0updateRequestProcessorChain\n\nthis is an implementation detail about the dynamic class loading\n\n(I have updated the comment) ",
            "author": "Noble Paul",
            "id": "comment-16487455"
        },
        {
            "date": "2018-05-24T05:45:18+0000",
            "content": "This is a known issue. It will be fixed in the next release. You can use the workaround I have given in the comment ",
            "author": "Noble Paul",
            "id": "comment-16488458"
        },
        {
            "date": "2018-05-24T08:04:39+0000",
            "content": "perform the following operations. Do not edit/uncomment anything in the solrconfig.xml\n\nThe following will register your update processor. \n\n{\n curl http://<your Solr>/solr/test1/config -H 'Content-type:application/json' -d '{\"create-updateProcessor\" : {\n\t\"class\":\"com.test.update.processor.TestUpdateProcessorFactory\" ,\n\t\"name\":\"testURP\",\n\t\"runtimeLib\":\"true\"\n}'\n\n\n\n\ncurl http://<your Solr>/solr/test1/update/json/docs?processor=testURP -H 'Content-type:application/json' -d '{\n\"id\":1,\n\"desc_s\": \"Test URP\"\n}'\n\n\n\n\n ",
            "author": "Noble Paul",
            "id": "comment-16488610"
        },
        {
            "date": "2018-05-25T08:24:32+0000",
            "content": "Thanks for all your effort Noble Paul!!!\nIt's now working for us without any exceptions or errors!\n\nYou can close the ticket in my opinion.\n\n\u00a0\n\nRegards, Johannes ",
            "author": "Johannes Brucher",
            "id": "comment-16490403"
        },
        {
            "date": "2018-05-25T09:04:47+0000",
            "content": "This is a bug and I shall fix it anyway ",
            "author": "Noble Paul",
            "id": "comment-16490442"
        },
        {
            "date": "2018-05-25T14:10:05+0000",
            "content": "Commit b86a4c9297476738cc8b0fa1291c70b352e03035 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b86a4c9 ]\n\nSOLR-12294: jar file required for the testcase ",
            "author": "ASF subversion and git services",
            "id": "comment-16490769"
        },
        {
            "date": "2018-05-25T14:13:39+0000",
            "content": "Commit e49eaf2f5425acb11bebb225b5dc59c4118cd298 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e49eaf2 ]\n\nSOLR-12294: jar file required for the testcase ",
            "author": "ASF subversion and git services",
            "id": "comment-16490773"
        },
        {
            "date": "2018-05-25T14:25:53+0000",
            "content": "Commit 18ad8d137afa8e2017f4121ddced4d630b1c86a1 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=18ad8d1 ]\n\nSOLR-12294: update processors loaded from runtime jars fail to load if they are specified in an update processor chain ",
            "author": "ASF subversion and git services",
            "id": "comment-16490794"
        },
        {
            "date": "2018-05-26T02:32:38+0000",
            "content": "I think this is causing an IDE fail in eclipse for me - TestURP having a different declared package than where it lives. Havn't followed this issue so don't know what that is how to best work around it. ",
            "author": "Mark Miller",
            "id": "comment-16491471"
        },
        {
            "date": "2018-05-26T02:35:52+0000",
            "content": "Yes, this is a problem but we don't have a choice. If I keep it in the correct package, it gets compiled and it's there in the class path and I can't test the runtime class loading feature ",
            "author": "Noble Paul",
            "id": "comment-16491472"
        },
        {
            "date": "2018-05-26T05:20:12+0000",
            "content": "Well we have to do something or it breaks proper IDE integration, eclipse doesn't behave right, I'm not sure about intellij. I can't work properly with eclipse if the project has an error in it. If it can't be worked around in what you did, we have to work around it with our IDE support. Just breaking proper support for an IDE knowingly is not an option. ",
            "author": "Mark Miller",
            "id": "comment-16491513"
        },
        {
            "date": "2018-05-26T05:23:42+0000",
            "content": "There were a few other Java files in that folder. Are you suggesting that only this one has a problem? ",
            "author": "Noble Paul",
            "id": "comment-16491516"
        },
        {
            "date": "2018-05-26T05:46:30+0000",
            "content": "It's the only file I see an error in - as the package declaration doesn't match the folder structure. I think if we need a file like that we need a new test-files folder that does not get setup as src folders for our IDE support. ",
            "author": "Mark Miller",
            "id": "comment-16491523"
        },
        {
            "date": "2018-05-28T05:04:30+0000",
            "content": "Commit 4e12546b02ecfc9b142a026dcaca9996234a409d in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4e12546 ]\n\nSOLR-12294: changed the package of the test file ",
            "author": "ASF subversion and git services",
            "id": "comment-16492268"
        },
        {
            "date": "2018-05-28T05:07:32+0000",
            "content": "Commit 40eb83980085179a2034bb51949d4ac5efdadffe in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=40eb839 ]\n\nSOLR-12294: update processors loaded from runtime jars fail to load if they are specified in an update processor chain ",
            "author": "ASF subversion and git services",
            "id": "comment-16492272"
        },
        {
            "date": "2018-05-28T05:07:49+0000",
            "content": "Commit 341cf50c4347a9ac9a3f3fb6ae2ada48f31159d6 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=341cf50 ]\n\nSOLR-12294: update processors loaded from runtime jars fail to load if they are specified in an update processor chain ",
            "author": "ASF subversion and git services",
            "id": "comment-16492273"
        },
        {
            "date": "2018-05-28T05:08:48+0000",
            "content": "Commit dc0dc1d6e3947114362f0104f8c8ae51e8e1ba36 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dc0dc1d ]\n\nSOLR-12294: changed the package of the test file ",
            "author": "ASF subversion and git services",
            "id": "comment-16492274"
        },
        {
            "date": "2018-06-25T19:38:34+0000",
            "content": "Noble Paul - this could be resolved, correct? Fixed for 7.4? ",
            "author": "Cassandra Targett",
            "id": "comment-16522726"
        }
    ]
}