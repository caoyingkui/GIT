{
    "id": "SOLR-6594",
    "title": "deprecate the one action only APIs for schema editing",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "with SOLR-6476 done and committed , we have more than one way of writing to schema . Having two different ways of doing the same thing is counter productive . \n\nI would like to mark them as deprecated and the calls to those APIs will succeed but will give a deprecation message in the output.  The read APIs would continue to be the same , though .\n\nDetails: the following operations have been deprecated as of Solr 5.5, and support for them will be removed in Solr 6.0: \n\n\tCreate new field(s): POST to /collection/schema/fields or PUT to /collection/schema/fields/fieldname\n\tCreate new dynamic field(s): POST to /collection/schema/dynamicfields or PUT to /collection/schema/dynamicfields/glob\n\tCreate new field type(s): POST to /collection/schema/fieldtypes or PUT to /collection/schema/fieldtypes/name\n\tCreate new copyField rule(s): POST to /collection/schema/copyfields.\n\n\n\nNote that all of the above operations can instead be performed using the bulk schema API, documented since the 5.0 Solr ref guide here: https://cwiki.apache.org/confluence/display/solr/Schema+API\n\nTo be clear, read-only GET operations on the above-mentioned endpoints will not be changed, deprecated or removed - they will continue to return information about fields, dynamicFields, fieldTypes, and copyField rules, respectively.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2014-10-13T13:14:33+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "+1\n\nWe are close to a 5.0 release so we should start deprecating the other APIs. ",
            "id": "comment-14169268"
        },
        {
            "date": "2014-10-14T16:04:21+0000",
            "author": "Steve Rowe",
            "content": "I think it would be very weird from the Schema API consumers' POV to remove existing write access while leaving read access in place for the fine-grained endpoints.\n\nAlso, having separate read- and write-side REST API endpoints seems bad to me. ",
            "id": "comment-14171108"
        },
        {
            "date": "2014-10-14T17:05:12+0000",
            "author": "Noble Paul",
            "content": "There are already many end points in schema API which are not editable . It is OK in REST to have some end points which are GET only and other 'verbs' are disabled . \n\nI would even go as far to say that the individual end points were made necessary because of the write path requirements. Users would not find it a lot difficult to extract the required data from the whole schema also.  \n\nIt may be more weird to have multiple ways to perform the exact same operation. It will put a heavy burden on future developers to ensure that the same functionality is implemented in both end points and they are also consistent. \n\nI can't imagine what value add will a user get in doing the following \n\ncurl http://localhost:8983/solr/collection1/schema/fields -X POST -H 'Content-type:application/json' --data-binary '\n[\n    {\n        \"name\":\"department\",\n        \"type\":\"string\",\n        \"docValues\":\"true\",\n        \"default\":\"no department\",\n        \"copyFields\": [ \"catchall\" ]\n    }\n]'\n\n\ninstead of\n\n\ncurl http://localhost:8983/solr/collection1/schema -X POST -H 'Content-type:application/json' --data-binary '\n{\n    \"add-field\" : {\n        \"name\":\"department\",\n        \"type\":\"string\",\n        \"docValues\":\"true\",\n        \"default\":\"no department\",\n        \"copyFields\": [ \"catchall\" ]\n    }\n}\n\n\n\nI would say this is more code (25 java files) to maintain for the future developers and more APIs to support.  ",
            "id": "comment-14171219"
        },
        {
            "date": "2014-10-15T18:28:48+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I believe that a simple bulk API can satisfy all requirements for a schema API and we should no longer attempt to have additional fine-grained end points for writes. I am not against fine-grained read endpoints but even that can be satisfied by a bulk API which allows filtering. In future, I wouldn't want to write/maintain APIs for bulk and individual operations \u2013 I'm assuming a config API will probably add at least ten fine-grained APIs if we go that way. ",
            "id": "comment-14172730"
        },
        {
            "date": "2014-11-13T19:21:02+0000",
            "author": "Timothy Potter",
            "content": "+1 ... I'd like to see the code get cleaned up to just use the bulk API with a \"shim\" that maps the old endpoints to the bulk API automatically. The shim should be deprecated but left in-place for a while existing apps that use the specific endpoints and responses from the fine-grained endpoints should include a deprecation warning.\n\nNew functionality should only be implemented in the bulk API. ",
            "id": "comment-14210187"
        },
        {
            "date": "2016-02-09T23:13:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2184a7baf6e47f99b7a637836a736c3439b69125 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2184a7b ]\n\nSOLR-6594 Mark old schema APIs as deprecated ",
            "id": "comment-15139980"
        },
        {
            "date": "2016-02-09T23:23:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 890497b08184688361d0e9c2dd0725d9117dca12 in lucene-solr's branch refs/heads/branch_5x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=890497b ]\n\nSOLR-6594 Mark old schema APIs as deprecated ",
            "id": "comment-15139986"
        },
        {
            "date": "2016-02-25T12:58:12+0000",
            "author": "Noble Paul",
            "content": "To be clear, read-only GET operations on the above-mentioned endpoints will not be changed, deprecated or removed - they will continue to return information about fields, dynamicFields, fieldTypes, and copyField rules, respectively.\n\nWe need to add these support . I have opened SOLR-8736 ",
            "id": "comment-15167167"
        }
    ]
}