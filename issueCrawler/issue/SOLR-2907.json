{
    "id": "SOLR-2907",
    "title": "java.lang.IllegalArgumentException: deltaQuery has no column to resolve to declared primary key pk='ITEM_ID, CATEGORY_ID'",
    "details": {
        "affect_versions": "3.4",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler",
            "Schema and Analysis"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "We are using solr for our site and ran into this error in our own schema and I was able to reproduce it using the dataimport example code in the solr project.  We do not get this error in SOLR 1.4 only started seeing it as we are working to upgrade to 3.4.0.  It fails when delta-importing linked tables.\n\nComplete trace:\nNov 18, 2011 5:21:02 PM org.apache.solr.handler.dataimport.DataImporter doDeltaImport\nSEVERE: Delta Import Failed\njava.lang.IllegalArgumentException: deltaQuery has no column to resolve to declared primary key pk='ITEM_ID, CATEGORY_ID'\n\tat org.apache.solr.handler.dataimport.DocBuilder.findMatchingPkColumn(DocBuilder.java:849)\n\tat org.apache.solr.handler.dataimport.DocBuilder.collectDelta(DocBuilder.java:900)\n\tat org.apache.solr.handler.dataimport.DocBuilder.collectDelta(DocBuilder.java:879)\n\tat org.apache.solr.handler.dataimport.DocBuilder.doDelta(DocBuilder.java:285)\n\tat org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:179)\n\tat org.apache.solr.handler.dataimport.DataImporter.doDeltaImport(DataImporter.java:390)\n\tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:429)\n\tat org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:408)\n\nI used this dataConfig from the wiki on the data import:\n\n<dataConfig>\n    <dataSource driver=\"org.hsqldb.jdbcDriver\" url=\"jdbc:hsqldb:./example-DIH/hsqldb/ex\" user=\"sa\" />\n    <document>\n\n   <entity  name=\"item\" pk=\"ID\" \n   \t\t\tquery=\"select * from item\" \n            deltaImportQuery=\"select * from item where ID=='${dataimporter.delta.id}'\"\n            deltaQuery=\"select id from item where last_modified > '${dataimporter.last_index_time}'\">\n\n            <entity name=\"item_category\" pk=\"ITEM_ID, CATEGORY_ID\"\n                    query=\"select CATEGORY_ID from item_category where ITEM_ID='${item.ID}'\"\n                    deltaQuery=\"select ITEM_ID, CATEGORY_ID from item_category where last_modified > '${dataimporter.last_index_time}'\"\n                    parentDeltaQuery=\"select ID from item where ID=${item_category.ITEM_ID}\">\n\n        \t\t<entity name=\"category\" pk=\"ID\"\n                        query=\"select DESCRIPTION as cat from category where ID = '${item_category.CATEGORY_ID}'\"\n                        deltaQuery=\"select ID from category where last_modified > '${dataimporter.last_index_time}'\"\n                        parentDeltaQuery=\"select ITEM_ID, CATEGORY_ID from item_category where CATEGORY_ID=${category.ID}\"/>\n            \t</entity>\n        </entity>\n\n    </document>\n</dataConfig>\n\nTo reproduce use the data config from above and set the dataimport.properties last update times to before the last_modifed date in the example data.  I my case I had to set the year to 1969.  Then run a delta-import and the exception occurs.  Thanks.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Adam Lane",
            "id": "comment-13153345",
            "date": "2011-11-19T02:17:17+0000",
            "content": "Here is a link to the exact part of the documentation where the example is given on how to delta link tables but unfortunately doesn't work in the latest version:\n\nhttps://wiki.apache.org/solr/DataImportHandler#Using_delta-import_command "
        },
        {
            "author": "Adam Lane",
            "id": "comment-13209845",
            "date": "2012-02-16T22:46:52+0000",
            "content": "Upgraded to 3.5 and confirmed same problem. "
        },
        {
            "author": "Adam Lane",
            "id": "comment-13210748",
            "date": "2012-02-18T01:56:35+0000",
            "content": "FYI: Found an alternate way of doing delta here in this thread that is much faster.  Please refer to this until the bug is fixed or wiki pages are changed.\n\nhttps://mail-archives.apache.org/mod_mbox/lucene-solr-user/201008.mbox/%3C9F8B39CB3B7C6D4594293EA29CCF438B01702F22@ICQ-MAIL.icq.il.office.aol.com%3E "
        },
        {
            "author": "Cory Berg",
            "id": "comment-13418038",
            "date": "2012-07-19T04:02:33+0000",
            "content": "Hi All,\n\nSaw this exact issue today in Solr 3.6.  The issue is in findMatchingPkColumn.  When I debugged this for a similar case, I noticed that the pk passed in during the case below will be the string \"ITEM_ID, CATEGORY_ID\".  However on the line that actually compares the pk to the returned fields, they will of course not match, because the returned keys are \"ITEM_ID\" and \"CATEGORY_ID\".  Ergo, multiple comma-separated pks, as given in the Solr DIH Wiki, will not work.  The fix appears to be to parse out the pks in order to satisfy the comparison, or to munge the actual returned column names so that the match is forced, but this is much uglier.  I will attempt a fix for my own purposes you are welcome to it if interested. "
        },
        {
            "author": "Cory Berg",
            "id": "comment-13418046",
            "date": "2012-07-19T04:18:28+0000",
            "content": "I suppose the other valid point here is - what is the intended design of the \"pk\" field in this context?  It seems unclear in relation to delta queries. "
        },
        {
            "author": "Hector Hurtarte",
            "id": "comment-13678966",
            "date": "2013-06-09T07:31:52+0000",
            "content": "Using Solr 4.2.1 and the issue is still there "
        },
        {
            "author": "Aaron Greenspan",
            "id": "comment-13702973",
            "date": "2013-07-09T06:19:08+0000",
            "content": "I just ran into this in Solr 4.3.0. The error message is extremely confusing. The situation I encountered involved an SQL query where there WAS an \"id\" field defined in the main \"query\" query, as well as a \"field\" with column=\"id\" and name=\"id\" and yet I would keep getting the error...\n\ndeltaQuery has no column to resolve to declared primary key pk='id'\n\nIt turns out that what this really means is that a useless field called \"id\" (or whatever the primary key is set to) also has to be in the \"deltaQuery\" query itself, even if you never reference a field called \"id\" from the deltaQuery (which I don't). I only reference a field called something else, e.g. blahid, from the deltaQuery. Why deltaQuery needs this redundant field when it's apparently never used is beyond me. Or if there is a good reason, this error message should definitely be changed given that this has been an open ticket for two years. "
        },
        {
            "author": "Mustafa Da\u015fg\u0131n",
            "id": "comment-13894502",
            "date": "2014-02-07T13:28:33+0000",
            "content": "Hi all,\n\nIn Solr 4.6.0 the same problem.. "
        },
        {
            "author": "Harsha B V",
            "id": "comment-13970428",
            "date": "2014-04-16T05:03:42+0000",
            "content": "Hi all,\n\nI am using Solr 4.8.0 and had faced the same problem but with some trial and error I was able to SOLVE the problem.\n\nIn my schema.xml I have:\n<field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\"/> \n<field name=\"name\" type=\"text_general\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>\n<field name=\"last_modified\" type=\"date\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>\nunique key is set as:\n<uniqueKey>id</uniqueKey>\n\nIn my data-config.xml I have:\n<dataConfig>\n    <dataSource name=\"ds1\" type=\"JdbcDataSource\"\n    driver=\"oracle.jdbc.OracleDriver\"\n    url=\"jdbc:oracle:thin:@blah.blah\"\n    user=\"blah blah\"\n    password=\"blah blah\"/>\n\n\t<script>  \n\t\t<![CDATA[ \n\t\tfunction removeNullDateFields(row) { \n\t\t\tvar std_date = row.get('last_modified');\n\n\t\t\tif (std_date === null || true === std_date.isEmpty() || std_date === '') \n{\n                row.remove('last_modified');\n            }\n\t\t\treturn row;\n\t\t} \n\t\t]]>  \n    </script>\n\n\t<document name=\"search_doc\">\n\t\t<entity name=\"search\" pk=\"ID\"\t\t\n\t\t\t\tquery=\"Select \n\t\t\t\t\t\t\tstd.studentID,\n\t\t\t\t\t\t\tstd.studentName,\n\t\t\t\t\t\t\tstd.last_modified\n\t\t\t\t\t\tFrom student std\"\n\t\t\t\tdeltaImportQuery=\"Select \n\t\t\t\t\t\t\tstd.studentID,\n\t\t\t\t\t\t\tstd.studentName,\n                                                        std.last_modified\n\t\t\t\t\t\tFrom student std where studentID='${dataimporter.delta.ID}'\"\n                deltaQuery=\"select studentID as ID from student where to_char(last_modified, 'YYYY-MM-DD HH24:MI:SS') > '${dataimporter.last_index_time}'\"\n\t\t\t\tdeletedPkQuery=\"select deleted_id as ID FROM delete_status WHERE to_char(deleted_date, 'YYYY-MM-DD HH24:MI:SS') > '${dataimporter.last_index_time}'\"\n\t\t\t\tdataSource=\"ds1\" transformer=\"DateFormatTransformer,script:removeNullDateFields\">\n            <field column=\"STUDENTID\" name=\"id\"/>\n\t\t\t<field column=\"STUDENTNAME\" name=\"name\"/>\n\t\t\t<field column=\"LAST_MODIFIED\" name=\"last_modified\" xpath=\"/RDF/item/date\" dateTimeFormat=\"yyyy-MM-dd HH:mm:ss\"/>\n        </entity>\n\t</document>\n</dataConfig>\n\nAs you can see, \n--> I have used the entity's 'pk' attribute and set the value as \"ID\" (In capital letters - uniqueKey value)\n--> Use the same \"ID\" in 'deltaImportQuery' as ${dataimporter.delta.ID}\n--> \"ID\" must be used as it is in 'deltaQuery' select statement as \"select ID from ...\" \n\t(if you different name for ID column in database, then use 'as' keyword in select statement. In my case I had 'studentID' as primary key in student table. So I used it as  \"select  studentID as ID from ...\"\n--> The same applies to 'deletedPkQuery'\n\nAt present its working fine for me. Any updation in database is reflected in Solr as well.\n\nSee if this helps. Cheers!!!\n "
        },
        {
            "author": "Aleksandr Ivanov",
            "id": "comment-14151734",
            "date": "2014-09-29T14:32:11+0000",
            "content": "Hi to everyone. I've had this problem. But I've solved it by adding  name of field (ITEM_ID and CATEGORY_ID) in schema.xml file on server to (just after </fields>): \n<uniqueKey>ITEM_ID</uniqueKey>\n<uniqueKey>CATEGORY_ID</uniqueKey>\nBut I think the main problem is using wrong value for pk= in data-config.xml file.\nYou should use TemplateTransformer, in root entity. Something like this:\n<entity name=\"account\" datasource=\"MyDS\" pk=\"id\" transformer=\"TemplateTransformer\" rootEntity=\"true\" ...>\n...\n<field column=\"ITEM_ID\" name=\"item_id\" />\n<field column=\"CATEGORY_ID\" name=\"cid\"\n<field column=\"id\" name=\"id\" template=\"${account.item_id}_${account.cid}\"  // and it should be \"123_232e23\"\n...\n</entity>\n "
        },
        {
            "author": "Ho\u00e0ng M\u1ea1nh H\u01b0ng",
            "id": "comment-14282354",
            "date": "2015-01-19T10:23:54+0000",
            "content": "Same problem with solr 4.10.2 "
        },
        {
            "author": "sunil jadhav",
            "id": "comment-14303404",
            "date": "2015-02-03T15:07:51+0000",
            "content": "Thanks Mate. You saved my DAY. Your suggestion did worked after spending almost 6 hours on figuring out the resolution !!!! "
        },
        {
            "author": "Reynolds gonzales",
            "id": "comment-14355370",
            "date": "2015-03-10T18:16:32+0000",
            "content": "Someone find the solution to the problem. could share the configuration files of the running example. Thank You. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14355468",
            "date": "2015-03-10T18:56:00+0000",
            "content": "The primary key (pk) in the DIH is only relevant within DIH.  I think that if you define it as \"ITEM_ID, CATEGEORY_ID\" that you would have to have a column in the SELECT results named with that literal string, including the comma.\n\nThe \"pk\" field in DIH does NOT need to be the same as the uniqueKey in Solr.\n\nAs far as I'm aware, Solr does not have the ability to use two fields for uniqueKey, so it does not make any sense to have the DIH pk be two columns.  It should be one database column, possibly created with the \"AS\" keyword in the SQL.\n\nThe column named in the \"pk\" field must exist in the results for all of the queries that DIH sends to the database - query, deltaQuery, and deltaImportQuery.  This was not a requirement for Solr 3.x, but it is a requirement for Solr 4.x. "
        }
    ]
}