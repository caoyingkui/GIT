{
    "id": "LUCENE-6069",
    "title": "compile with compact profiles",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "6.0",
        "components": [
            "general/build"
        ],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Task"
    },
    "description": "If we clean up the 'alignment' calculator in RamUsageEstimator, we can compile core with compact1, and the rest of lucene (except tests) with compact2.",
    "attachments": {
        "LUCENE-6069.patch": "https://issues.apache.org/jira/secure/attachment/12698056/LUCENE-6069.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14222132",
            "author": "Uwe Schindler",
            "date": "2014-11-22T19:35:50+0000",
            "content": "I can fix RAMUsageEstimator to not hard depend on ManagementFactory. "
        },
        {
            "id": "comment-14315939",
            "author": "Robert Muir",
            "date": "2015-02-11T10:13:00+0000",
            "content": "I'm going to work on this. I'll start by simply removing this alignment (no need for reflection).\n\nLucene is a search engine, not a ram calculator. "
        },
        {
            "id": "comment-14315968",
            "author": "Uwe Schindler",
            "date": "2015-02-11T10:34:07+0000",
            "content": "Sorry, I forgot about this issue  "
        },
        {
            "id": "comment-14315972",
            "author": "Robert Muir",
            "date": "2015-02-11T10:36:06+0000",
            "content": "Here is a patch fixing this, its unnecessary. all of lucene is compiled with compact3 by default, with lucene-core only requiring compact1. \n\nI will cleanup the unsafe usage here in ramusageestimator in another issue, that's also a problem. "
        },
        {
            "id": "comment-14316000",
            "author": "Robert Muir",
            "date": "2015-02-11T10:43:49+0000",
            "content": "Improved patch. its compact2 everywhere, with core/ as compact1.\n\nFixes a queryparser test that was using the \"wrong\" Query (javax.management.Query instead of o.a.l.search.Query)\n\nI think its ready. "
        },
        {
            "id": "comment-14316012",
            "author": "Uwe Schindler",
            "date": "2015-02-11T10:45:29+0000",
            "content": "I fixed it already, patch coming soon. 2 line change "
        },
        {
            "id": "comment-14316013",
            "author": "Robert Muir",
            "date": "2015-02-11T10:48:02+0000",
            "content": "The thing is, i dont think we should be using all this unsafe shit, etc in a static block in the start of our code.\n\nWe are a search engine not a ram calculator. This code is risky and unnecessary. "
        },
        {
            "id": "comment-14316016",
            "author": "Uwe Schindler",
            "date": "2015-02-11T10:50:53+0000",
            "content": "Patch for ManagementFactory "
        },
        {
            "id": "comment-14316018",
            "author": "Uwe Schindler",
            "date": "2015-02-11T10:51:16+0000",
            "content": "This is not involving unsafe "
        },
        {
            "id": "comment-14316021",
            "author": "Robert Muir",
            "date": "2015-02-11T10:52:55+0000",
            "content": "Its true the code in question doesnt call unsafe, but there is other code here calling unsafe (and other hacks), and i think its just silly, and for theoretical cases, and we aren't a ram calculator... "
        },
        {
            "id": "comment-14316024",
            "author": "Robert Muir",
            "date": "2015-02-11T10:56:03+0000",
            "content": "I argue there is zero value to this managementfactory code in question. As the comment says, on hotspot its 8. And the code only works for hotspot!\n\nLets keep it clean. Unless there is specific objections, I'd like to commit my patch in a few days. "
        },
        {
            "id": "comment-14316028",
            "author": "Uwe Schindler",
            "date": "2015-02-11T10:57:31+0000",
            "content": "I know. But instead of removing functionality can we just stick with my patch - a 2 line change removing the ManagamentFactory dependency? If you run on a mobile phone with compact profile it just assumes \"8\" - otherwise it works as before.\n\nRemoving that is just another thing, but we already rely on more or less exact calculations for Accountable. This makes a lot of difference for Accountable reports (we dont calculate dynamically by refelction, but we sum up constants everywhere). So we should do our best to get the \"constants\" as exact as possible.\n\nIn fact your patch was not removing completely, the Enum constant was still kept alive and so on. So lets keep what we have, just make it optional. "
        },
        {
            "id": "comment-14316034",
            "author": "Robert Muir",
            "date": "2015-02-11T11:00:00+0000",
            "content": "I think we should clean it up more. Sorry, your patch wont even work. You also need to fix the \"test\" that doesn't actually test anything (it apparently just prints, and its tests are @Ignored)\n\nSorry man, i don't mean to be rude, but all this is really crap. "
        },
        {
            "id": "comment-14316038",
            "author": "Uwe Schindler",
            "date": "2015-02-11T11:02:04+0000",
            "content": "What do you mean with Test? I did not change any test. To really test the optional stuff, I added an AssertionError temporaily to the catch block and ran all tests. Worked as it should. So it did not fail. "
        },
        {
            "id": "comment-14316043",
            "author": "Uwe Schindler",
            "date": "2015-02-11T11:05:13+0000",
            "content": "Sorry man, i don't mean to be rude, but all this is really crap.\n\nWhy? I maintained the code very carefully with Dawid. Please don't call my code crap, this hurts, really! I agree, it is hard to test something that may not be available, but I will look into it to make a test that has a hard check for this.\n\nSorry for beeing to late on this issue, I fixed it in 5 minutes, I am very sorry. But don't let us remove functionality that works and helps for our accounting fetaures. In fact this code does not even use any unsafe APIs this is just a perfectly legal way to get this constant. So I am -1 to remove it, sorry. "
        },
        {
            "id": "comment-14316044",
            "author": "Robert Muir",
            "date": "2015-02-11T11:05:36+0000",
            "content": "See my patch. its only 9kb. just look at it!\nMy patch actually compiles all src and tests with compact1/compact2.\n\nThe broken \"Test\" of this ramusagestimator, StressRamUsageEstimator, (which is not a test, doesnt assert anything, and is @Ignore by default), its a violation too.\n\nAnd just like the relevant code in RamUsageEstimator, its useless!!!!!! "
        },
        {
            "id": "comment-14316048",
            "author": "Robert Muir",
            "date": "2015-02-11T11:07:39+0000",
            "content": "\nSorry for beeing to late on this issue, I fixed it in 5 minutes, I am very sorry\n\nAgain, you didnt fix it, its not complete. The fake \"test\" needs to also be fixed/removed, like my patch.\n\n\nIn fact this code does not even use any unsafe APIs this is just a perfectly legal way to get this constant. So I am -1 to remove it, sorry.\n\nSo you will prevent lucene from being used on more platforms, when the code in question DOES NOTHING, just becausse you think your code, that DOES NOTHING is awesome? "
        },
        {
            "id": "comment-14316051",
            "author": "Uwe Schindler",
            "date": "2015-02-11T11:08:58+0000",
            "content": "\nThe broken \"Test\" of this ramusagestimator, StressRamUsageEstimator, (which is not a test, doesnt assert anything, and is @Ignore by default), its a violation too.\nAnd just like the relevant code in RamUsageEstimator, its useless!!!!!!\n\nThis is not part of this issue.\n\nSorry for all that. I looked at you patch, its perfectly fine. I just want to you to merge my patch for RamUsageEstimator into yours - thats all. "
        },
        {
            "id": "comment-14316053",
            "author": "Robert Muir",
            "date": "2015-02-11T11:11:41+0000",
            "content": "Its part of the issue! The issue is to support compact profiles with compilation.\n\nBoth RAMUsageEstimator, and its test (which does not actually test anything!) are problematic. "
        },
        {
            "id": "comment-14316054",
            "author": "Uwe Schindler",
            "date": "2015-02-11T11:11:58+0000",
            "content": "So you will prevent lucene from being used on more platforms, when the code in question DOES NOTHING, just becausse you think your code, that DOES NOTHING is awesome?\n\nIt does nothing on some platforms and falls back to defaults. It just tries to get the correct constant. What's your problem with that?\nThe broken test is another issue, sorry about that. "
        },
        {
            "id": "comment-14316057",
            "author": "Robert Muir",
            "date": "2015-02-11T11:14:08+0000",
            "content": "Fine, we can merge the reflection call.\n\nBut when it comes to unsafe (another issue), I will attack this much more aggressively. I will call VOTEs or whatever is necessary to remove those unsafe usages. "
        },
        {
            "id": "comment-14316059",
            "author": "Robert Muir",
            "date": "2015-02-11T11:16:03+0000",
            "content": "\nThe broken test is another issue, sorry about that.\n\nJust to repeat, its not \"another issue\" but very much a part of this issue. "
        },
        {
            "id": "comment-14316349",
            "author": "Michael McCandless",
            "date": "2015-02-11T15:22:09+0000",
            "content": "+1 to compile with compact profiles.\n\nI think in general Lucene should use as minimal APIs as are truly needed to get indexing and searching done.\n\nE.g., this same \"Occam's razor\" philosophy has served us well in pruning back the Directory API over time.\n\nAlso, this motivation is completely separate from claims that this change might help \"abusive\" use cases, like mobile. "
        },
        {
            "id": "comment-14316387",
            "author": "Uwe Schindler",
            "date": "2015-02-11T15:47:57+0000",
            "content": "+1 To Robert's patch here, with the reflection I provided as separate patch!\n\nThe reflection will be needed for the nuke of Unsafe anyways, because we need HotspotMXBean to detect reference size (which is still important, I just reviewed the code using all parts using the constant from RAMUsageEstimator). If one runs on compact profile on 64 bit without HotspotBean it will just assume that a refenece pointer is 8 bytes. If its uses compressed Oops we just calculate the size of arrays wrong (by factor of 2).\n\nIn my opinion: We should have good constants for huge systems, because with heap sizes around several gigabytes, the memory reporting by Lucene/Solr/Elasticsearch should not be wrong by factor 2 for some structures. I don't care about static object headers or alignments, if they are wrong - it has less effect (because we generally have few huge objects in FST/Filter/DocValues).\n\nIf you use compact profile on some platform, the ram usage reporting is in most cases not so interesting, because you are already limited by the platform... "
        },
        {
            "id": "comment-14316395",
            "author": "Robert Muir",
            "date": "2015-02-11T15:51:19+0000",
            "content": "Updated patch: this one is a compromise, i use Uwe's changes for RamUsageEstimator + my changes for build and tests.\n\ntests pass. "
        },
        {
            "id": "comment-14318504",
            "author": "Uwe Schindler",
            "date": "2015-02-12T16:33:02+0000",
            "content": "Patch with the conflicting changes in RUE removed (already done in LUCENE-6239). "
        },
        {
            "id": "comment-14318535",
            "author": "Robert Muir",
            "date": "2015-02-12T16:55:20+0000",
            "content": "+1 to commit! "
        },
        {
            "id": "comment-14318542",
            "author": "Uwe Schindler",
            "date": "2015-02-12T16:57:58+0000",
            "content": "+1 to commit in trunk! Maybe add some good CHANGES.txt so its public like \"Lucene Core is Compact profile\" "
        },
        {
            "id": "comment-14318548",
            "author": "Robert Muir",
            "date": "2015-02-12T16:59:31+0000",
            "content": "You can commit, if you want. its is your latest patch. Can we backport the tests changes only to branch_5x? "
        },
        {
            "id": "comment-14318674",
            "author": "Uwe Schindler",
            "date": "2015-02-12T18:12:43+0000",
            "content": "OK, will do this. I will now run the whole build, to validate all is fine with Java 8. "
        },
        {
            "id": "comment-14318690",
            "author": "ASF subversion and git services",
            "date": "2015-02-12T18:22:10+0000",
            "content": "Commit 1659347 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1659347 ]\n\nLUCENE-6069: Lucene Core now gets compiled with Java 8 \"compact1\" profile, all other modules with \"compact2\". "
        },
        {
            "id": "comment-14318699",
            "author": "Uwe Schindler",
            "date": "2015-02-12T18:26:00+0000",
            "content": "Thanks Robert!\nI also backported the test changes to get rid of crazy stuff. "
        },
        {
            "id": "comment-14318704",
            "author": "ASF subversion and git services",
            "date": "2015-02-12T18:27:35+0000",
            "content": "Commit 1659349 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1659349 ]\n\nLUCENE-6069: Backport the test changes to 5.x "
        }
    ]
}