{
    "id": "LUCENE-7601",
    "title": "Make DocIdMerger.next() unspecified when exhausted",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Task",
        "components": [],
        "fix_versions": [
            "7.0"
        ]
    },
    "description": "Right now there is a comment saying NOTE: it's annoying that caller is allowed to call us again even after we returned null before, but when I throw an exception in that condition, no tests fail. So maybe we can get rid of this protection now and just make next() unspecified after exhaustion, like DocIdSetIterator?",
    "attachments": {
        "LUCENE-7601.patch": "https://issues.apache.org/jira/secure/attachment/12844300/LUCENE-7601.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15768323",
            "date": "2016-12-21T22:13:10+0000",
            "content": "Here is a patch. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15768506",
            "date": "2016-12-21T23:47:35+0000",
            "content": "+1 ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15770811",
            "date": "2016-12-22T19:00:39+0000",
            "content": "Commit 30a52277dea16f4d15c40a0ec17f69076242496d in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=30a5227 ]\n\nLUCENE-7601: Make DocIdMerger.next() unspecified when exhausted. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15770816",
            "date": "2016-12-22T19:02:03+0000",
            "content": "I only pushed to master since the problem is on 6.x, since we wrap the docidmerger in a Java Iterator and have asserting classes that make sure hasNext and next behave correctly on an exhausted iterator. ",
            "author": "Adrien Grand"
        }
    ]
}