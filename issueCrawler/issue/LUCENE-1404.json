{
    "id": "LUCENE-1404",
    "title": "NPE in NearSpansUnordered.isPayloadAvailable()",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/query/scoring"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.4",
            "2.9"
        ],
        "affect_versions": "2.4",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Using RC1 of lucene 2.4 resulted in null pointer exception with some constructed SpanNearQueries\n\nImplementation of isPayloadAvailable() (results in exception)\n\n public boolean isPayloadAvailable() {\n   SpansCell pointer = min();\n   do {\n     if(pointer.isPayloadAvailable()) {\n       return true;\n     }\n     pointer = pointer.next;\n   } while(pointer.next != null);\n\n   return false;\n  }\n\n\n\n\"Fixed\" isPayloadAvailable()\n\n public boolean isPayloadAvailable() {\n   SpansCell pointer = min();\n   while (pointer != null) {\n     if(pointer.isPayloadAvailable()) {\n       return true;\n     }\n     pointer = pointer.next;\n   }\n\n   return false;\n  }\n\n\n\nException produced:\n\n  [junit] java.lang.NullPointerException\n    [junit]     at org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.access$300(NearSpansUnordered.java:65)\n    [junit]     at org.apache.lucene.search.spans.NearSpansUnordered.isPayloadAvailable(NearSpansUnordered.java:235)\n    [junit]     at org.apache.lucene.search.spans.NearSpansOrdered.shrinkToAfterShortestMatch(NearSpansOrdered.java:246)\n    [junit]     at org.apache.lucene.search.spans.NearSpansOrdered.advanceAfterOrdered(NearSpansOrdered.java:154)\n    [junit]     at org.apache.lucene.search.spans.NearSpansOrdered.next(NearSpansOrdered.java:122)\n    [junit]     at org.apache.lucene.search.spans.SpanScorer.next(SpanScorer.java:54)\n    [junit]     at org.apache.lucene.search.Scorer.score(Scorer.java:57)\n    [junit]     at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:137)\n    [junit]     at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:113)\n    [junit]     at org.apache.lucene.search.Hits.getMoreDocs(Hits.java:113)\n    [junit]     at org.apache.lucene.search.Hits.<init>(Hits.java:80)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:50)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:40)\n    [junit]     at com.attivio.lucene.SpanQueryTest.search(SpanQueryTest.java:79)\n    [junit]     at com.attivio.lucene.SpanQueryTest.assertHitCount(SpanQueryTest.java:75)\n    [junit]     at com.attivio.lucene.SpanQueryTest.test(SpanQueryTest.java:67)\n\n\n\nwill attach unit test that causes exception (and passes with updated isPayloadAvailable())",
    "attachments": {
        "SpanQueryTest.java": "https://issues.apache.org/jira/secure/attachment/12390776/SpanQueryTest.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-09-23T19:20:01+0000",
            "content": "unit test that causes exception attached ",
            "author": "Tim Smith",
            "id": "comment-12633854"
        },
        {
            "date": "2008-09-23T22:37:20+0000",
            "content": "I can confirm this... I'll commit to 2.4 & 2.9.  Thanks Tim! ",
            "author": "Michael McCandless",
            "id": "comment-12633945"
        },
        {
            "date": "2008-09-24T09:47:45+0000",
            "content": "Committed revision 698487 on trunk and 698488 on 2.4 branch.  Thanks Tim! ",
            "author": "Michael McCandless",
            "id": "comment-12634081"
        }
    ]
}