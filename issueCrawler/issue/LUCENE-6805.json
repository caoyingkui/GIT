{
    "id": "LUCENE-6805",
    "title": "Add a general purpose readonly interace to BitSet",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "5.0,                                            5.2",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "BitSet has many more readonly methods compared to Bits. Similarly, BitSet has many more write methods compared to MutableBits.\n\nThis Jira issue is to add a new ImmutableBits interface to BitSet that includes all ready only methods of BitSet.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14906645",
            "author": "Selva Kumar",
            "date": "2015-09-24T16:59:16+0000",
            "content": "it will be much easier to refactor our application with this readonly interface. "
        },
        {
            "id": "comment-14909653",
            "author": "Paul Elschot",
            "date": "2015-09-27T08:34:09+0000",
            "content": "I had the same problem when trying to provide an EliasFanoDocIdSet as a BitSet.\nI ended up using an UnsupportedOperationException for the methods that modify the set.\nPerhaps the nextSetBit and prevSetBit methods (and maybe some others) should move from BitSet to  Bits to make this easier?\n\nAside: EliasFanoDocIdSet has meanwhile been removed from trunk (LUCENE-6484), there is a version available at LUCENE-5627. "
        },
        {
            "id": "comment-14909665",
            "author": "Adrien Grand",
            "date": "2015-09-27T09:20:27+0000",
            "content": "If this would be useful for your application, maybe this interface should live in your application? Then you could either fork or wrap Lucene's bit sets if you want them to back this interface? I would like to avoid adding more abstractions if we don't need them in Lucene itself.\n\nAlso I think it's fine to just throw UnsupportedOperationExceptions if write operations are not supported. This is very similar to what collections returned by Java's Collections.unmodifiable* methods do. "
        }
    ]
}