{
    "id": "SOLR-3281",
    "title": "TestCSVResponseWriter fails on IBM JRE",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Looks like something is depending on HashSet order or something silly.",
    "attachments": {
        "SOLR-3281.patch": "https://issues.apache.org/jira/secure/attachment/12520089/SOLR-3281.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Robert Muir",
            "id": "comment-13239345",
            "date": "2012-03-27T09:33:48+0000",
            "content": "\n [junit] Testsuite: org.apache.solr.response.TestCSVResponseWriter\n    [junit] Testcase: testCSVOutput(org.apache.solr.response.TestCSVResponseWriter):\tCaused an ERROR\n    [junit] expected:<[id,foo_b,foo_d,foo_s,foo_f,foo_i,foo_dt,foo_l,v_ss,v2_ss]\n    [junit] > but was:<[foo_i,v2_ss,foo_l,v_ss,foo_dt,foo_b,foo_s,foo_d,id,foo_f]\n    [junit] >\n    [junit] org.junit.ComparisonFailure: expected:<[id,foo_b,foo_d,foo_s,foo_f,foo_i,foo_dt,foo_l,v_ss,v2_ss]\n    [junit] > but was:<[foo_i,v2_ss,foo_l,v_ss,foo_dt,foo_b,foo_s,foo_d,id,foo_f]\n    [junit] >\n    [junit] \tat org.junit.Assert.assertEquals(Assert.java:125)\n    [junit] \tat org.junit.Assert.assertEquals(Assert.java:147)\n    [junit] \tat org.apache.solr.response.TestCSVResponseWriter.testCSVOutput(TestCSVResponseWriter.java:102)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)\n    [junit] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n    [junit] \tat java.lang.reflect.Method.invoke(Method.java:611)\n    [junit] \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    [junit] \tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit] \tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    [junit] \tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:63)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$SubclassSetupTeardownRule$1.evaluate(LuceneTestCase.java:754)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$InternalSetupTeardownRule$1.evaluate(LuceneTestCase.java:670)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:69)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$TestResultInterceptorRule$1.evaluate(LuceneTestCase.java:591)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:75)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$SaveThreadAndTestNameRule$1.evaluate(LuceneTestCase.java:642)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    [junit] \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:164)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:57)\n    [junit] \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    [junit] \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    [junit] \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    [junit] \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    [junit] \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:63)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:75)\n    [junit] \tat org.apache.lucene.util.StoreClassNameRule$1.evaluate(StoreClassNameRule.java:38)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:69)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    [junit] \tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)\n    [junit] \n    [junit] \n    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0.405 sec\n    [junit] \n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestCSVResponseWriter -Dtestmethod=testCSVOutput -Dtests.seed=5ceee60f8bd8b2d2:-17c681fed75466cd:ba18a5d78613224 -Dargs=\"-Dfile.encoding=UTF-8\"\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestCSVResponseWriter -Dtestmethod=testCSVOutput -Dtests.seed=5ceee60f8bd8b2d2:-17c681fed75466cd:ba18a5d78613224 -Dargs=\"-Dfile.encoding=UTF-8\"\n    [junit] NOTE: test params are: codec=Appending, sim=RandomSimilarityProvider(queryNorm=true,coord=true): {}, locale=ja, timezone=Europe/Paris\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [SampleTest, TestPluginEnable, TestSolrCoreProperties, CommonGramsFilterFactoryTest, TestBeiderMorseFilterFactory, TestCollationKeyRangeQueries, TestCzechStemFilterFactory, TestDelimitedPayloadTokenFilterFactory, TestGermanStemFilterFactory, TestIndonesianStemFilterFactory, TestJapaneseBaseFormFilterFactory, TestJapanesePartOfSpeechStopFilterFactory, TestJapaneseTokenizerFactory, TestKStemFilterFactory, TestMultiWordSynonyms, TestNorwegianLightStemFilterFactory, TestNorwegianMinimalStemFilterFactory, TestPortugueseStemFilterFactory, TestRussianFilters, TestSlowSynonymFilter, TestStemmerOverrideFilterFactory, TestThaiWordFilterFactory, TestTypeTokenFilterFactory, TestUAX29URLEmailTokenizerFactory, FullSolrCloudDistribCmdsTest, LeaderElectionIntegrationTest, ZkNodePropsTest, ZkSolrClientTest, IndexReaderFactoryTest, TestCodecSupport, TestCoreContainer, TestPropInjectDefaults, TestQuerySenderListener, TestQuerySenderNoQuery, JsonLoaderTest, MoreLikeThisHandlerTest, StandardRequestHandlerTest, XsltUpdateRequestHandlerTest, ShowFileRequestHandlerTest, DebugComponentTest, QueryElevationComponentTest, FastVectorHighlighterTest, SimpleFacetsTest, TestCSVResponseWriter]\n    [junit] NOTE: Linux 3.0.0-14-generic x86/IBM Corporation 1.6.0 (32-bit)/cpus=8,threads=13,free=19121216,total=60067840\n    [junit] ------------- ---------------- ---------------\n    [junit] TEST org.apache.solr.response.TestCSVResponseWriter FAILED\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13239346",
            "date": "2012-03-27T09:37:15+0000",
            "content": "This is this assert: \n\n// test SOLR-2970 not returning non-stored fields by default\nassertEquals(\"id,foo_b,foo_d,foo_s,foo_f,foo_i,foo_dt,foo_l,v_ss,v2_ss\\n\"\n  , h.query(req(\"q\",\"id:3\", \"wt\",\"csv\", \"csv.header\",\"true\", \"fl\",\"*\", \"rows\",\"0\")));\n\n\n\nI think because it uses fl=* that this is a bug assuming some order when its not\nnecessarily defined? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13239914",
            "date": "2012-03-27T20:31:36+0000",
            "content": "Hmm, this was fixed on 3_x branch some time back, for some reason not on trunk, see SOLR-2970, https://issues.apache.org/jira/secure/attachment/12511009/SOLR-2970-3x-fixtest.patch "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13239930",
            "date": "2012-03-27T20:40:57+0000",
            "content": "Thanks for digging that up Jan: that explains it!\n\nDo you want to take this? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13239932",
            "date": "2012-03-27T20:43:38+0000",
            "content": "It should be a usual merge branch3x -> trunk? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13239937",
            "date": "2012-03-27T20:48:50+0000",
            "content": "I think so, but Jan seems most familiar with the issue... that's all. "
        }
    ]
}