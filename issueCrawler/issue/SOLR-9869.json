{
    "id": "SOLR-9869",
    "title": "MiniSolrCloudCluster does not always remove jettys from running list after stopping them",
    "details": {
        "components": [
            "Tests"
        ],
        "type": "Test",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "MiniSolrCloudCluster has two stopJettySolrRunner methods that behave differently.\n\nThe int version calls jettys.remove(index); to remove the now stopped jetty from the list of running jettys.\nThe version that takes a JettySolrRunner, however, does not modify the running list.\n\nThis can cause calls to getReplicaJetty to fail after a call to stop because we will try to get the base url of a stopped jetty.",
    "attachments": {
        "SOLR-9869.patch": "https://issues.apache.org/jira/secure/attachment/12843482/SOLR-9869.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-15T21:46:37+0000",
            "author": "Mike Drob",
            "content": "Patch available. ",
            "id": "comment-15752602"
        },
        {
            "date": "2016-12-20T15:52:41+0000",
            "author": "Mike Drob",
            "content": "Alan Woodward - it looks like you were the one to add this flavor of stop method in SOLR-7180. Do you have any thoughts on the patch? ",
            "id": "comment-15764507"
        },
        {
            "date": "2016-12-20T19:21:15+0000",
            "author": "Alan Woodward",
            "content": "IIRC it's to avoid ConcurrentModificationExceptions during parallel shutdown, but we can avoid that I think by just calling jetty.stop() directly in the shutdown() lambdas rather than calling the stop method. ",
            "id": "comment-15765014"
        },
        {
            "date": "2016-12-20T20:21:25+0000",
            "author": "Mike Drob",
            "content": "Oh, good point. I just looked into this and found that the jettys list is already a COWList after your work in SOLR-8255. I think that means this change is safe? ",
            "id": "comment-15765149"
        },
        {
            "date": "2017-01-05T20:20:22+0000",
            "author": "Mike Drob",
            "content": "Alan Woodward - any additional thoughts on this? ",
            "id": "comment-15802419"
        },
        {
            "date": "2017-01-14T00:28:56+0000",
            "author": "Mike Drob",
            "content": "Bump - this is behaviour is potentially a trap for anybody writing unit tests. ",
            "id": "comment-15822565"
        },
        {
            "date": "2017-01-14T09:20:26+0000",
            "author": "Alan Woodward",
            "content": "Hey, sorry, this dropped off my radar.  Can you add an example test that shows the behaviour the patch should help to prevent? ",
            "id": "comment-15822767"
        },
        {
            "date": "2017-01-17T18:29:33+0000",
            "author": "Mike Drob",
            "content": "I couldn't get this test to work as part of existing MiniSolrCloudClusterTest, so had to add a new test file for it. While doing that, I figured out a different way to fix the specific issue I was having, but think the original issue is still important. Both are fixed in the patch. ",
            "id": "comment-15826557"
        },
        {
            "date": "2017-01-23T10:35:14+0000",
            "author": "Alan Woodward",
            "content": "I got a test failure when running this locally:\n\n[10:20:04.308] ERROR   8.38s J0 | TestMiniSolrCloudCluster.testStopAllStartAll <<<\n   > Throwable #1: java.lang.ArrayIndexOutOfBoundsException: 4\n   >    at __randomizedtesting.SeedInfo.seed([3F4B441AB7975037:49755B69F6A0FD18]:0)\n   >    at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:387)\n   >    at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:396)\n   >    at java.util.Collections$UnmodifiableList.get(Collections.java:1309)\n   >    at org.apache.solr.cloud.TestMiniSolrCloudCluster.testStopAllStartAll(TestMiniSolrCloudCluster.java:345)\n\n\nSo it looks as though we still need to deal with concurrent removals? ",
            "id": "comment-15834238"
        }
    ]
}