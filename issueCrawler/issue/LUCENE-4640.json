{
    "id": "LUCENE-4640",
    "title": "JapaneseCharFilter can't be reusable",
    "details": {
        "components": [
            "modules/analysis"
        ],
        "fix_versions": [],
        "affect_versions": "4.0",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Not A Problem",
        "status": "Closed"
    },
    "description": "com.hulu.lucene.analysis.JapaneseCharFilter is used in JPRomajiAnalyzer\nbut incrementToken() can't be reusable.\n-------------------------------------------------\n                     if (!isEnd) { //can't be false when analyzer.tokenStream(...) is called\n\t\t\tif (input.incrementToken()) {\n\t\t\t\tString reading = readingAttr.getReading();\n\t\t\t\tif (reading == null) \n{\n\t\t\t\t\treading = new String(termAttr.buffer());\n\t\t\t\t}\n\t\t\t\tif(reading != null) {\n\t\t\t\t\treading = JapaneseStringTools.getRomanization(reading.trim());\n\t\t\t\t\treading = StringTools.removeAccentCharacter(reading);\n\t\t\t\t\tfor (int i = 0; i < reading.length(); i++) \n{\n\t\t\t\t\t\tchars.add(reading.charAt(i));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tisEnd = false;\n\t\t\t} else \n{\n\t\t\t\tisEnd = true;\n\t\t\t}\n\t\t}\n\t\tif (chars.size() > 0 || isEnd == false) {\n\t\t\tif (chars.size() > 0) \n{\n\t\t\t\tchar ch = chars.poll();\n\t\t\t\ttermAttr.setEmpty().append(ch);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n--------------------------------------------------\nSo i can't the call analyzer.tokenStream for the same field twice.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-12-20T10:06:30+0000",
            "content": "This java package is not shipped with Lucene, please contact the creator or the com.hulu java package, the code seems to belong to that code. ",
            "author": "Uwe Schindler",
            "id": "comment-13536909"
        },
        {
            "date": "2012-12-20T10:09:27+0000",
            "content": "By the way: the code you have posted contains a bug and is inefficient: reading = new String(termAttr.buffer()); - this will create a string with garbage at the end, use termAttr.toString(). ",
            "author": "Uwe Schindler",
            "id": "comment-13536911"
        }
    ]
}