{
    "id": "SOLR-11217",
    "title": "Mathematical notation not supported in Solr Ref Guide",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "documentation"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Resolved"
    },
    "description": "The template used to build the Solr Ref Guide from the asciidoctor pages removes the needed javascript for mathematical notation. \n\nWhen building the webpage, asciidoctor puts a tag like the one below at the bottom of the html\n\n\n<script src=\"#{cdn_base}/mathjax/2.6.0/MathJax.js?config=TeX-MML-AM_HTMLorMML\"></script>\n\n\n\nand some other tags as well.\n\nHowever these are not included in the sections that are inserted into the template, so they are left out and the mathematical notation is not converted to MathJax that can be viewed in a browser.\n\nThis can be tested by adding any stem notation in an asciidoctor solr-ref-page, such as the following text:\n\n\nasciimath:[sqrt(4) = 2].",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-08-09T18:49:45+0000",
            "content": "I hadn't realized until now that Asciidoctor had stem notation support built into it. According to Asciidoctor docs (http://asciidoctor.org/docs/user-manual/#activating-stem-support), it's as simple as adding a :stem: attribute to a page (or globally, which we would prefer). If I add that to a page and use Asciidoctor itself to convert the page to HTML it works well.\n\nIn order to support it for Jekyll, we'd change the attribute slightly to :page-stem:. Note we're not using Asciidoctor's converters to build our HTML, we're using Jekyll's with a plugin from the Asciidoctor project to allow Jekyll to support AsciiDoc formatted files. Adding the attribute to the page front-matter (the stuff at the top of each file), however, has no impact whatsoever.\n\nIt may be that this is not yet supported, or we need to add something as an extension or plugin to Jekyll, or we may need to modify the templates as in your suggestion. I've asked the jekyll-asciidoc project what their recommendation is: https://github.com/asciidoctor/jekyll-asciidoc/issues/163\n ",
            "author": "Cassandra Targett",
            "id": "comment-16120453"
        },
        {
            "date": "2017-08-09T19:12:42+0000",
            "content": "OK, got a quick reply. The Asciidoctor part is working properly if :stem: is added to the page front-matter in the sense that it wraps the notation in markup for MathJax to do its part rendering it. So, we need to add MathJax to our templates as you thought.\n\nThe question now is how to add it - I tried a couple of variations of simply adding it as a script in the header or page template, but it's going to be a little bit more complex than that. I'll see if I can find time in the coming days to work some more on getting this to work. ",
            "author": "Cassandra Targett",
            "id": "comment-16120485"
        },
        {
            "date": "2017-08-09T19:55:42+0000",
            "content": "I figured out how to make it work. Not what I was supposed to do today  but it was a compelling question. I'll add more info on the changes in a bit, just didn't want anyone else to work on it as an open question. ",
            "author": "Cassandra Targett",
            "id": "comment-16120559"
        },
        {
            "date": "2017-08-10T03:52:18+0000",
            "content": "I haven't committed anything for this, although the HTML support is relatively straightforward. It's the PDF support that's going to be a pain.\n\nHTML\n\nWe can add a MathJax javascript to our templates that will render stem notations properly. It supports using latexmath and asciimath as macros or blocks, or a generic stem macro/block that defaults to asciimath if the more specific form is not used. There are only a couple minor changes to our templates for this - add a new JS-based _include file, make sure that's included in the header, and make sure _config.yml is updated to allow stem processing.\n\nPDF\n\nMathJax is browser-based, so won't work for PDFs and another solution is required.\n\nThe Asciidoctor project includes a asciidoctor-mathematical project. The PDF tool we use (asciidoctor-pdf) supports this, but there are several limitations:\n\n\tasciidoctor-mathematical has a long list of dependencies and font requirements. It took a couple tries at getting these worked out, and the list is different for different OS's. Any one of these could be an issue for Jenkins, which is subject to INFRA's policies.\n\tit's not integrated with asciidoctor-ant, which we use for the build. This means Jenkins and anyone who wants to build on their local machine needs all the dependencies locally to build the PDF (which is true today for the HTML version also, but Jekyll has a many fewer dependencies). However, asciidoctor-ant should support using it as an extension, assuming we put it in the right place.\n\tasciidoctor-mathematical makes images for the math and inserts those in the PDF. These images are also saved as separate .png files (could also support SVG if preferred). If these are not properly compressed, I suspect they could make the PDF really large (if there are more than 1 or 2 of these).\n\tit only supports latexmath, and not asciimath. If you preface any notation with anything other than latexmath it doesn't work.\n\n\n\nI don't know the extent you and others want to use stem notations in the Ref Guide, so can't guess if we can live with all of this. There doesn't seem to be anything in the works for asciimath support, so we will always need to use latexmath. And we'll be even farther from the goal of figuring out how to allow anyone to build the Ref Guide without all the dependencies. ",
            "author": "Cassandra Targett",
            "id": "comment-16121014"
        },
        {
            "date": "2017-08-10T15:41:18+0000",
            "content": "I originally used some notation in the analytics component documentation, but I removed that section eventually. It just caused me quite a bit of pain trying to figure it out, and wanted to save others from it in the future. \n\nGiven how cumbersome the PDF solution is, disallowing mathematical notation might be the right move. Since I don't see very many places where it would be useful. However some ML components might find it useful.  ",
            "author": "Houston Putman",
            "id": "comment-16121807"
        },
        {
            "date": "2018-02-01T20:33:36+0000",
            "content": "I'm going to resolve this since there's been no change to the state of things in the past several months. I think there will be a day when it's easier, but we'll file a new issue if that day arrives. ",
            "author": "Cassandra Targett",
            "id": "comment-16349210"
        }
    ]
}