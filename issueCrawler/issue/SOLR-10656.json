{
    "id": "SOLR-10656",
    "title": "Collection re-registering after deletion",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.5.1",
        "resolution": "Not A Problem",
        "status": "Resolved"
    },
    "description": "Taking a single node down in a multi-node solr cloud cluster and then issuing a delete collection command will succeed with a HTTP 200. The collection will be removed from ZK and the data files removed from the active nodes. Once the downed node is brought back into the cluster the deleted collection re-registers it self with zookeeper and is actively queryable.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-10T03:49:32+0000",
            "content": "Check whether you have legacyCloud=true (or not set at all) in your cluster properties. This is a behavior that has changed, set legacyCloud=false and the replicas will not re-register themselves.\n ",
            "author": "Erick Erickson",
            "id": "comment-16003993"
        },
        {
            "date": "2017-05-10T16:55:55+0000",
            "content": "Looks like Solr 6.5.x defaults to true for the legacyCloud option if not defined. Thank you for the hint on tracking it down. \n\nhttps://github.com/apache/lucene-solr/blob/branch_6_5/solr/core/src/java/org/apache/solr/cloud/Overseer.java#L760\n\nThis issue can be closed, just unexpected behavior.  ",
            "author": "Victor Igumnov",
            "id": "comment-16005007"
        }
    ]
}