{
    "id": "LUCENE-5251",
    "title": "New Dictionary Implementation for Suggester consumption",
    "details": {
        "components": [
            "core/search"
        ],
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "New Feature",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "With the vast array of new suggester, It would be nice to have a dictionary implementation that could feed the suggesters terms, weights and (optionally) payloads from the lucene index.\n\nThe idea of this dictionary implementation is to grab stored documents from the index and use user-configured fields for terms, weights and payloads.\n\nuse-case: If you have a document with three fields \n\n\tproduct_id\n\tproduct_name\n\tproduct_popularity_score\n\n\n\nthen using this implementation would enable you to have a suggester for product_name using the weight of product_popularity_score and return you the payload of product_id, with which you can do further processing on (example: construct a url etc).",
    "attachments": {
        "LUCENE-5251.patch": "https://issues.apache.org/jira/secure/attachment/12606216/LUCENE-5251.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-10-01T23:11:14+0000",
            "content": "Uploaded initial patch with tests ",
            "author": "Areek Zillur",
            "id": "comment-13783457"
        },
        {
            "date": "2013-10-02T14:36:47+0000",
            "content": "This is a great idea!\n\nHmm, the patch duplicates files, i.e. DocumentDictionary.java and DocumentDictionaryTest.java appear twice; looks like git included some extra local revisions or something?\n\nUnfortunately, the older suggesters do an instanceof check for TermFreqPayloadIterator and refuse to build() if so, since they don't support payloads, which means they can't be used w// DocumentDictionary?  Maybe we should fix those to instead fail if payload() is ever non-null; and maybe we should nuke the separate iterator and just add payload() to TermFreqIterator?  (We can do all this separately...).\n\nMaybe you should pull the payload from StorableField.binaryValue() instead of new BytesRef(StorableField.stringValue())?  Maybe javadoc that all fields are required (cannot be sparse) for every document.\n\nYou already check that weight cannot be null, so you don't need the extra null check after that? ",
            "author": "Michael McCandless",
            "id": "comment-13784013"
        },
        {
            "date": "2013-10-02T21:16:59+0000",
            "content": "Hey Michael,\n\nThanks for reviewing the patch! \n\nThe patch does not duplicate the files but shows two git commits on the new files. The first one was the actual implementation + tests and the second one removes all the debug printlns that were put in for inspection. (someday I will try to use svn ). It does look confusing.\n\nI am aware of that problem and was thinking along the same lines, have ONLY TermFreqPayloadIterator (maybe should be named something like EntryIterator? as there will be no TermFreqIterator and co) and have it accepted for all the suggester and let the suggester throw exceptions if it does not support payload/weight. I would be happy to open up an issue and work on it!\n\nI will upload another patch incorporating all your other comments!\n\n\n ",
            "author": "Areek Zillur",
            "id": "comment-13784444"
        },
        {
            "date": "2013-10-02T23:08:57+0000",
            "content": "Uploaded patch (merged commits).\n\n\tupdated javadocs to note that fields supplied are required for all documents\n\tfor payload and field try to get binaryValues if available; fallback to stringValue if not\n\tgotten rid of redundant null checks\n\n ",
            "author": "Areek Zillur",
            "id": "comment-13784605"
        },
        {
            "date": "2013-10-03T10:53:28+0000",
            "content": "The patch does not duplicate the files but shows two git commits on the new files.\n\nOK, got it.  That's cool; it's nice to see the separate revisions\nspelled out.  I just wish \"patch\" or \"svn patch\" did the right thing\nhere...\n\nThank you for merging commits on the new patch \n\n\nI am aware of that problem and was thinking along the same lines, have ONLY TermFreqPayloadIterator (maybe should be named something like EntryIterator? as there will be no TermFreqIterator and co) and have it accepted for all the suggester and let the suggester throw exceptions if it does not support payload/weight. I would be happy to open up an issue and work on it!\n\nThat would be awesome!  I agree we should do this separately... for\nthis issue I think we just document that it works only with the\n\"newer\" suggesters?\n\nNew patch looks great, thanks Areek!  Some comments:\n\n\n\tFor the \"field\", I think we should use .stringValue() not\n    .binaryValue()?  Ie, an app would typically have stored a\n    StringField?  (But for payloadField, I think it should be\n    .binaryValue()).\n\n\n\n\n\tIf the payload field exists, but its .binaryValue() is null, I\n    think we should throw an IAE too?\n\n\n\n\n\tMaybe use RandomIndexWriter in the tests?  (It's more evil.) The\n    only issue is, you should then also set a .newLogMergePolicy()\n    onto those IndexWriterConfigs, else eventually you'll get the\n    AlcoholicMergePolicy and the docIDs will be in a different order\n    than how you indexed and the test will [falsely] fail.\n\n ",
            "author": "Michael McCandless",
            "id": "comment-13784977"
        },
        {
            "date": "2013-10-04T07:10:14+0000",
            "content": "Thanks for the quick review! I will upload a patch soon, incorporating the suggested changes. ",
            "author": "Areek Zillur",
            "id": "comment-13785956"
        },
        {
            "date": "2013-10-07T05:18:44+0000",
            "content": "Uploaded new patch (diff rather than git patch):\n\n\tfield is expected to have stringvalue(); payload is expected to binaryValue()\n\tthrow IAE if any of the fields do not have the desired value (including weight)\n\tUse RandomIndexWriter for tests!\n\tAdded documentation that DocumentDictionary will not work with older suggesters\n\n\n\nI also opened another issue (https://issues.apache.org/jira/browse/LUCENE-5260) to make the new Dictionary work for the older suggesters!  ",
            "author": "Areek Zillur",
            "id": "comment-13787908"
        },
        {
            "date": "2013-10-07T14:22:25+0000",
            "content": "Patch looks great!  I think it's basically done ... I found just minor things:\n\nMaybe change the javadoc to say \"Dictionary with terms, weights and optionally payload information taken from stored fields in a Lucene index\"?\n\nAlso, that list under the NOTE: is not HTML, so it will render in the browser incorrectly.  Maybe make it a <ul> ... <li> ... </ul>?\n\nIt's also not compatible w/ AnalyzingInfixSuggester (which refuses to look at payloads), at least until we fix LUCENE-5260. ",
            "author": "Michael McCandless",
            "id": "comment-13788181"
        },
        {
            "date": "2013-10-08T02:25:35+0000",
            "content": "Patch Uploaded\n\n\tChanged Javadoc as suggested and noted AnalyzingInfix suggester incompatibility\n\tUsed valid html for listing\n\n\n\nMichael Thanks for the quick reviews! ",
            "author": "Areek Zillur",
            "id": "comment-13788840"
        },
        {
            "date": "2013-10-08T11:25:26+0000",
            "content": "Commit 1530229 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1530229 ]\n\nLUCENE-5251: add DocumentDictionary ",
            "author": "ASF subversion and git services",
            "id": "comment-13789119"
        },
        {
            "date": "2013-10-08T11:28:52+0000",
            "content": "Commit 1530231 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1530231 ]\n\nLUCENE-5251: add DocumentDictionary ",
            "author": "ASF subversion and git services",
            "id": "comment-13789124"
        },
        {
            "date": "2013-10-08T11:29:51+0000",
            "content": "Thanks Areek, I just committed this!\n\nI just had to fix one assert in testWithDeletions; it didn't hold up under beasting.\n\nAnd fixed up a few things on backporting to 4.x ... ",
            "author": "Michael McCandless",
            "id": "comment-13789125"
        },
        {
            "date": "2013-10-09T06:33:56+0000",
            "content": "Thanks for committing the patch, Michael!  ",
            "author": "Areek Zillur",
            "id": "comment-13790079"
        },
        {
            "date": "2013-12-30T13:19:49+0000",
            "content": "Commit 1554207 from Michael McCandless in branch 'dev/branches/lucene5376'\n[ https://svn.apache.org/r1554207 ]\n\nLUCENE-5376, LUCENE-5251: expose DocumentDictionary (to build suggestor from stored documents) in demo server ",
            "author": "ASF subversion and git services",
            "id": "comment-13858785"
        }
    ]
}