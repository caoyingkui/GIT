{
    "id": "SOLR-12591",
    "title": "Ensure ParseDateFieldUpdateProcessorFactory can be used instead of ExtractionDateUtil",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "ParseDateFieldUpdateProcessorFactory should ideally be able to handle the cases that ExtractionDateUtil does in the \"extraction\" contrib module. \u00a0Tests should be added, ported\u00a0from patches in SOLR-12561 that enhance TestExtractionDateUtil to similarly ensure the URP is tested.  Additionally the default configSet's configuration of this URP should be expanded to include the patterns parsed by the extract contrib.\n\nOnce this issue is complete, it should be appropriate to gut date time parsing out of the \"extraction\" contrib module \u2013 a separate issue (see SOLR-12593).",
    "attachments": {
        "SOLR-12591.patch": "https://issues.apache.org/jira/secure/attachment/12935608/SOLR-12591.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-08-07T18:47:34+0000",
            "content": "Is this ticket up for grabs, or are you working on it since it is assigned to you David Smiley? ",
            "author": "Bar Rotstein",
            "id": "comment-16572148"
        },
        {
            "date": "2018-08-07T18:56:40+0000",
            "content": "Oh awesome; I'm glad you're interested in it Bar.  I have not started working on it.\n\nI think in this issue we will almost certainly need to add a \"lenient\" boolean flag to ParseDateFieldUpdateProcessorFactory.  Hmmm; I'm really wondering if lenient is true, then will \"Z\" pattern work with an older config (someone who didn't update config even though our upgrade notes tell them to)?  Interesting experiment to do. ",
            "author": "David Smiley",
            "id": "comment-16572160"
        },
        {
            "date": "2018-08-07T19:53:41+0000",
            "content": "Oh yes it will be a very interesting experiment.\n\nHopefully I'll have time to get to it this weekend. ",
            "author": "Bar Rotstein",
            "id": "comment-16572226"
        },
        {
            "date": "2018-08-10T15:55:53+0000",
            "content": "I'm really wondering if lenient is true, then will \"Z\" pattern work with an older config\nI tried running the tests under ParsingFieldUpdateProcessorsTest with parsers set to SMART and LENIENT modes, and both test cases produced similar results.\nEven under these two modes the parser cannot handle the \"Z\" using the old configuration. ",
            "author": "Bar Rotstein",
            "id": "comment-16576477"
        },
        {
            "date": "2018-08-10T15:57:38+0000",
            "content": "I have been trying to decide where the lenient configuration should be placed. Would the mode be specified globally, or separately for each format?\nWDYT? ",
            "author": "Bar Rotstein",
            "id": "comment-16576484"
        },
        {
            "date": "2018-08-10T17:20:36+0000",
            "content": "Another question that has come to mind, is whether the URP should mimic DateExtractionUtil, and provide a public API to build a DateFormatter, or whether the formatters used should be strictly be only the ones provided in the configuration? ",
            "author": "Bar Rotstein",
            "id": "comment-16576607"
        },
        {
            "date": "2018-08-10T18:09:52+0000",
            "content": "\"lenient\" boolean can be global to the URP (spanning formats).  This is consistent with the existing default/override timezone setting, and is rather simple.\n\nI don't think the URP should try and be some public API.  I don't think there's a need for that in Solr.  We can change our mind in the future if a use-case presents itself. ",
            "author": "David Smiley",
            "id": "comment-16576661"
        },
        {
            "date": "2018-08-11T09:41:51+0000",
            "content": "There is another small detail that I am not sure about.\nIn ExtractionDateUtil the date is added to the document with type Instance, while the URP adds the date as a Date type.\nThe toString() method in each type slightly differ.\nIs it OK to save the parsed fields as a Date, even though the XML returned by them is different? (since ExtractionDateUtil saves a String representation of Instant?)\nPerhaps this could be addressed in SOLR-12593, where we could use the .toInstant() method of the Date object in some way,\nto mimic the behavior found in SolrContentLoader?\n\nInstant date = ExtractionDateUtil.parseDate(val, dateFormats); // may throw\nresult = date.toString();//ISO format\n\n ",
            "author": "Bar Rotstein",
            "id": "comment-16577109"
        },
        {
            "date": "2018-08-11T11:28:08+0000",
            "content": "After thinking about this for a bit, it seems to me as if having a single point of date extraction as well as a single string format(Date#toString) for dates in Solr would be for the better.\n Although, I must admit, I am fairly new to this. Perhaps someone with more experience could provide his opinion.\n David Smiley, WDYT? ",
            "author": "Bar Rotstein",
            "id": "comment-16577145"
        },
        {
            "date": "2018-08-11T14:32:43+0000",
            "content": "org.apache.solr.handler.extraction.SolrContentHandler#transformValue is placing the ISO instant format String back onto the document, not an Instance object.  You're correct the URP puts a Date object on the doc; that's what it should do (avoids further parsing).  It will ultimately find its way into DatePointField.createField and used directly.  Again after SOLR-12593, the SolrContentHandler will be doing no date processing whatsoever.  There will be only one place where a configurable list of date/time patterns are processed \u2013 this URP.  Someone using SolrContentHandler will be expected to use the URP.\n\nIn some future issue that I don't think has been filed, it would be nice to use Instant basically everywhere and avoid Date. ",
            "author": "David Smiley",
            "id": "comment-16577197"
        },
        {
            "date": "2018-08-11T14:53:06+0000",
            "content": "Alright it seems like the way forward is to currently put the Date into the document instead of the String.\nOne thing that should be documented is the different Date String format that will be returned due to this change.\nThough this probably belongs in SOLR-12593 ",
            "author": "Bar Rotstein",
            "id": "comment-16577206"
        },
        {
            "date": "2018-08-11T16:16:50+0000",
            "content": "Hey David Smiley,\nI just filed a PR.\nWould be lovely if you could take a look at it.\nThanks in advance. ",
            "author": "Bar Rotstein",
            "id": "comment-16577227"
        },
        {
            "date": "2018-08-15T02:50:11+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   3m 15s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   3m 50s \n  the patch passed  \n\n\n +1 \n  javac  \n   3m 50s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   3m 50s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   3m 50s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   3m 50s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  77m 20s \n  core in the patch failed.  \n\n\n  \n   \n  87m 58s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12591 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12935608/SOLR-12591.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 0d89ff2 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/162/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/162/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/162/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16580654"
        },
        {
            "date": "2018-08-15T04:04:24+0000",
            "content": "Commit ec01cc981c0ff221c79014f3665fd21c227d5651 in lucene-solr's branch refs/heads/master from Bar Rotstein\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ec01cc9 ]\n\nSOLR-12591: ParseDateFieldUpdateProcessorFactory: Use \"lenient\" and strip surrounding quotes.\nMore tests, ported from \"extract\" contrib stuff. ",
            "author": "ASF subversion and git services",
            "id": "comment-16580694"
        },
        {
            "date": "2018-08-15T04:05:39+0000",
            "content": "I enhanced the docs a bit to reflect these changes.\nThanks Bar! ",
            "author": "David Smiley",
            "id": "comment-16580696"
        },
        {
            "date": "2018-08-16T19:16:36+0000",
            "content": "Commit a661ebc6dfc0aa00161bde402edb7171d390f076 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a661ebc ]\n\nSOLR-12591: Avoid JDK 9 bug with certain timezones like AKDT; test with EDT.\nAlso standardized on single 'z' in the test patterns, which is equivalent to triple. ",
            "author": "ASF subversion and git services",
            "id": "comment-16582962"
        },
        {
            "date": "2018-08-29T18:17:52+0000",
            "content": "Commit 18874a6e36b1930bc7437ee3f1095912b1d20a95 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=18874a6 ]\n\nSOLR-12591: Expand default configSet's date patterns to subsume those of extract contrib ",
            "author": "ASF subversion and git services",
            "id": "comment-16596677"
        },
        {
            "date": "2018-08-29T18:27:58+0000",
            "content": "I committed a large portion of PR #438 for SOLR-12593 that had to do with modifying the default configSet to subsume the patterns handled by the \"extraction\" contrib.  That aspect seemed very distinct and seemed to fit with this issue well.\n\nI made some further edits from the PR.  Instead of [ ]d or the day in asctime() I went with ppd which for practical purposes is the same (tests pass both ways; \"leniency\" surely contributing to that) but in principle is more true to asctime()'s format.  I made some other minor renaming and comment tweaking in the test too.  I wanted to put a comment somewhere as to where these patterns are coming from but didn't know where to do so and I forgot. ",
            "author": "David Smiley",
            "id": "comment-16596692"
        },
        {
            "date": "2018-08-30T13:54:11+0000",
            "content": "Commit 4096decd8f6e496d2307d4c1c4eccefbfcd8f74a in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4096dec ]\n\nSOLR-12591: ParseDateField URP should default to \"en_US\" locale (not ROOT) which is implied by common formats.\nShould fix Java 9,10,11 test fails; Java 8 continues to work. ",
            "author": "ASF subversion and git services",
            "id": "comment-16597486"
        }
    ]
}