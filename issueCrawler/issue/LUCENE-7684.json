{
    "id": "LUCENE-7684",
    "title": "MemoryIndex should store payloads per-field",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Improvement",
        "components": [],
        "fix_versions": []
    },
    "description": "Currently MemoryIndex will store payloads for all fields, or for none.  It would be useful instead for it to store them per-field.",
    "attachments": {
        "LUCENE-7684.patch": "https://issues.apache.org/jira/secure/attachment/12851846/LUCENE-7684.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15859411",
            "date": "2017-02-09T12:01:59+0000",
            "content": "Here is a patch implementing this.  Payloads are detected by checking for a PayloadAttribute when adding a TokenStream to the MemoryIndex.  If terms have already been added with no payload, then an exception is thrown - I think this is a reasonable restriction, as you should generally use the same Analyzer for all values in a multivalued field.\n\nI also needed to make FieldInfo.setStorePayloads() public. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15859688",
            "date": "2017-02-09T15:52:17+0000",
            "content": "+1 looks good! ",
            "author": "Martijn van Groningen"
        },
        {
            "id": "comment-15859926",
            "date": "2017-02-09T18:04:59+0000",
            "content": "+1 Looks good to me too.\n\nBy the way, I had added this storePayloads boolean option in LUCENE-6155 (as part of adding payload support that previously wasn't there).  My thinking was that one might want to disable capturing payloads if the consumer of the MemoryIndex didn't need them. It's not a big deal though; payloads are fairly custom.  ",
            "author": "David Smiley"
        }
    ]
}