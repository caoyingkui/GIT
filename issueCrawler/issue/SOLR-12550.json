{
    "id": "SOLR-12550",
    "title": "ConcurrentUpdateSolrClient doesn't respect timeouts for commits and optimize",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Patch Available"
    },
    "description": "We're in a situation where we need to optimize some of our collections. These optimizations are done with waitSearcher=true as a simple throttling mechanism to prevent too many collections from being optimized at once.\n\nWe're seeing these optimize commands return without error after 10 minutes but well before the end of the operation. Our Solr logs show errors with socketTimeout stack traces. Setting distribUpdateSoTimeout to a higher value has no effect.\n\nSee the links section for my patch.\n\nIt turns out that ConcurrentUpdateSolrClient delegates commit and optimize commands to a private HttpSolrClient but fails to pass along its builder's timeouts to that client.\n\nA patch is attached in the links section.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-12T22:21:49+0000",
            "content": "By the way, I have not investigated why the optimize() command returns without an error despite the fact that it did not complete normally.  ",
            "author": "Marc Morissette",
            "id": "comment-16542261"
        },
        {
            "date": "2018-07-12T23:51:59+0000",
            "content": "Without seeing exactly what code you've written and what configuration options you have, it is difficult to determine whether this is a bug or a usage problem.  Can you provide those details?  We will also need to know the Solr version, and may need logs from the server.  Without the Solr version, we can't even start looking at source code.\n\nThis should have been brought up on the mailing list or IRC channel before opening an issue in Jira.  If it turns out that it's actually a bug, then Jira is appropriate.\n\nNote:  ConcurrentUpdateSolrClient is not a good choice for production index updating.  It swallows all indexing errors, so your Solr server could be completely down and all document updates that you send will appear to your program to have succeeded. ",
            "author": "Shawn Heisey",
            "id": "comment-16542336"
        },
        {
            "date": "2018-07-13T00:43:53+0000",
            "content": "Shawn Heisey I am going to assume you didn't see that a patch with a unit test is attached to this bug (It's in the links section. It looks Github has stopped adding comments when a new pull request is detected).\n\nAlso, maybe I wasn't clear in my description but we don't use ConcurrentUpdateSolrClient in our client code. The issue is in SolrCloud itself where timeouts may occur in the ConcurrentUpdateSolrClient Solr uses to relay commit and optimize commands to its shards. ",
            "author": "Marc Morissette",
            "id": "comment-16542374"
        }
    ]
}