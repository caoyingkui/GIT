{
    "id": "SOLR-6369",
    "title": "duplicate json key \"echoParams\" should be removed in ping-response",
    "details": {
        "affect_versions": "4.9",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "Apparently the /admin/ping handler will duplicate the echoParams key in the json-response.\n\n$ curl -s http://localhost:8983/solr/test-node-client/admin/ping?wt=json\n{\"responseHeader\":{\"status\":0,\"QTime\":2,\"params\":{\"df\":\"text\",\"echoParams\":\"all\",\"rows\":\"10\",\"echoParams\":\"all\",\"wt\":\"json\",\"q\":\"solrpingquery\",\"distrib\":\"false\"}},\"status\":\"OK\"}\n\n\nHaving \"echoParams\":\"all\" twice in that response doesn't really make sense?\n\nStrictly speaking this is allowed in the json spec, so it is not a violation in principle\nhttp://stackoverflow.com/questions/21832701/does-json-syntax-allow-duplicate-keys-in-an-object\n\nHowever there are some json-parse implementations out there that want to map this into hashtables and are not silently overwriting the key with the last seen value, but are throwing errors in the process.\n\nTo those a cleanup of the json response would make life somewhat easier.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-14095702",
            "date": "2014-08-13T16:54:25+0000",
            "content": "However there are some json-parse implementations out there that want to map this into hashtables and are not silently overwriting the key with the last seen value, but are throwing errors in the process.\n\nThis is why the json response format has always supported a \"json.nl\" param so that clients who are using broken json parsers can choose to get an array (or array or arrays) instead if they wish...\n\nhttps://wiki.apache.org/solr/SolJSON#JSON_specific_parameters\n\nNote: there is nothing special here about the ping response handler, or echoParams ... this is something that can come up in many cases in the solr response structure if your JSON parser can't handle repeated keys. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14095732",
            "date": "2014-08-13T17:15:20+0000",
            "content": "It does bring up an question of why the key was repeated though.\nThis doesn't seem to happen for \"normal\" request handlers... is it something specific to the ping request handler?\nexample:\nhttp://localhost:8983/solr/query?q=*:*&fq=inStock:true&fq=popularity:10&echoParams=all\n\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":1,\n    \"params\":{\n      \"echoParams\":\"all\",\n      \"df\":\"text\",\n      \"indent\":\"true\",\n      \"wt\":\"json\",\n      \"fq\":[\"inStock:true\",\n        \"popularity:10\"],\n      \"q\":\"*:*\"}},\n  \"response\":{\"numFound\":0,\"start\":0,\"docs\":[]\n  }}\n\n\n\nActually, I can't duplicate the double \"echoParams\" with the /admin/ping handler either...  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14095759",
            "date": "2014-08-13T17:29:13+0000",
            "content": "Actually, I can't duplicate the double \"echoParams\" with the /admin/ping handler either... \n\nt's entirely dependent on your config.\n\nPingRequestHandler takes it's request params, and any configured defaults/invariants/appends it has and uses them when proxying to another local request ... so if you've got a default echoParams on ping, and you proxy to something else with an echoParams default ... there's 2 of them. "
        },
        {
            "author": "Marc Portier",
            "id": "comment-14095910",
            "date": "2014-08-13T18:46:03+0000",
            "content": "Thx for the clarification. "
        },
        {
            "author": "Charles Reitzel",
            "id": "comment-14254819",
            "date": "2014-12-20T15:37:58+0000",
            "content": "Per RFC 7159, \"The names within an object SHOULD be unique.\"   This is SHOULD in the RFC sense, which means you should have a really good reason for not doing it.  This is why a majority of JSON implementations (All javascript implementations, JAXB, Jackson, Gson, XStream, etc.) will either barf or silently drop all but one of the values.\n\nAlso, as per the clarification above, this behavior is found in most (all?) solr operations, not just ping.   Any default parameters (not just wt) overridden on the request appear duplicated in the response.  Try this with a request handler configured with a facet field.   If a different facet field is presented with the request, you get duplicate facets in the output.  Not just duplicated params in the response header.   So, it appears, there is something deeper going on that needs fixing.\n\nhttp://tools.ietf.org/html/rfc7159#section-4 "
        },
        {
            "author": "Charles Reitzel",
            "id": "comment-14254832",
            "date": "2014-12-20T16:14:13+0000",
            "content": "More specifically, some metadata about which params are single-valued could be used to merge the parameters.  Any single-valued param presented in the request should replace any/all configured values.  My guess is that the duplicated response body parts, e.g. duplicated facets, is a by-product of duplicated parameters and, thus, correctly merging the parameters would correct the response body as well. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14254836",
            "date": "2014-12-20T16:29:16+0000",
            "content": "Yes, I think this bug was caused by SOLR-6780, but it's been fixed. "
        },
        {
            "author": "Charles Reitzel",
            "id": "comment-14254970",
            "date": "2014-12-20T22:13:19+0000",
            "content": "Great, thanks for getting back.  We're running 4.10.2 right now.  But I will verify next time we update.  It's currently only an issue for us in a couple test paths.  We've been dropping default parameters for different reasons. "
        }
    ]
}