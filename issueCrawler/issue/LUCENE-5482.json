{
    "id": "LUCENE-5482",
    "title": "improve default TurkishAnalyzer",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "modules/analysis"
        ],
        "affect_versions": "4.7",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ]
    },
    "description": "Add a TokenFilter that strips characters after an apostrophe (including the apostrophe itself).",
    "attachments": {
        "LUCENE-5482.patch": "https://issues.apache.org/jira/secure/attachment/12631812/LUCENE-5482.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13916137",
            "author": "Ahmet Arslan",
            "content": "This is similar to ClassicFilter that removes 's from the end of words. But ClassicFilter is useful for English language only and has nothing to do with Turkish. Because it only removes 's and 'S. In Turkish different character sequences may come after an apostrophe. e.g. 'nin, 'a, 'nin, '\u00fc etc.\n\nIn Turkish, apostrophe is used to separate suffixes from proper names (continent, sea, river, lake, mountain, upland, proper names related to religion and mythology). For example Van G\u00f6l\u00fc\u2019ne (meaning: to Lake Van). ",
            "date": "2014-02-28T18:28:13+0000"
        },
        {
            "id": "comment-13916149",
            "author": "Robert Muir",
            "content": "+1, i saw your paper (very nice) on this and think it would be a great addition to lucene! ",
            "date": "2014-02-28T18:34:04+0000"
        },
        {
            "id": "comment-13916189",
            "author": "Ahmet Arslan",
            "content": "This patch adds a new TokenFilter named ApostropheFilter.  ",
            "date": "2014-02-28T19:00:49+0000"
        },
        {
            "id": "comment-13916193",
            "author": "Ahmet Arslan",
            "content": "Thank you for your interest Robert Muir ! Here is the paper in case anyone interested. It's more like a solr writeup though.  ",
            "date": "2014-02-28T19:04:36+0000"
        },
        {
            "id": "comment-13916199",
            "author": "Uwe Schindler",
            "content": "Hi,\nyour patch contains unrelated changes in analysis' modules root folder (adding of a useless classpath). Can you fix this?\nAlso, because you add new functionality, TurkishAnalyzer should only add the new TokenFilter, if matchVersion is at least LUCENE_48. ",
            "date": "2014-02-28T19:10:43+0000"
        },
        {
            "id": "comment-13916200",
            "author": "Ahmet Arslan",
            "content": "It is possible to achieve described behavior with following existing filters. (without a custom filter) Any thoughts on which way is preferred?\n\n\n <filter class=\"solr.PatternReplaceFilterFactory\" pattern=\"(.*)'(.*)\" replacement=\"$1\"/>\n\n\n\n\n\n <filter class=\"solr.PatternCaptureGroupFilterFactory\" pattern=\"(.*)'\" preserve_original=\"false\" />\n\n ",
            "date": "2014-02-28T19:12:13+0000"
        },
        {
            "id": "comment-13916205",
            "author": "Robert Muir",
            "content": "I prefer the explicit filter you have now!  ",
            "date": "2014-02-28T19:15:35+0000"
        },
        {
            "id": "comment-13916207",
            "author": "Uwe Schindler",
            "content": "This should also work:\n\n<filter class=\"solr.PatternReplaceFilterFactory\" pattern=\"'(.*)\" replacement=\"\"/>\n\n ",
            "date": "2014-02-28T19:18:00+0000"
        },
        {
            "id": "comment-13916211",
            "author": "Ahmet Arslan",
            "content": "Thanks for looking into this Uwe Schindler. I wanted to use QueryParser in TestTurkishAnalyzer.java but I am not familiar with ant. I want to include a checkMatch(String text, String qString) method that checks this : \"this query string\" should retrieve \"this document text\" \n\nI added this but not sure this is correct.\n\n   \n<path id=\"classpath\">\n    <path refid=\"base.classpath\"/>\n    <pathelement path=\"${queryparser.jar}\"/>\n  </path>\n\n  ",
            "date": "2014-02-28T19:19:12+0000"
        },
        {
            "id": "comment-13916215",
            "author": "Robert Muir",
            "content": "Generally speaking its enough to just do assertAnalyzesTo/tokenStreamContents in unit tests. it keeps everything simple and easier to debug than integration-like tests.\n\nThats why we don't depend on queryparser in any of the tests today. ",
            "date": "2014-02-28T19:24:03+0000"
        },
        {
            "id": "comment-13916218",
            "author": "Uwe Schindler",
            "content": "We should not add an additional dependency to the query parser module! I would remove this test, we generally don't add such type of tests. Use BaseTokenStreamTestCase as base class for your test and use the various assert methods to check if the token stream is what you expect. Feeding IndexWriter with your tokens and executing a search is not really a \"unit test\" anymore. We have enough tests for the indexing. ",
            "date": "2014-02-28T19:24:24+0000"
        },
        {
            "id": "comment-13916233",
            "author": "Ahmet Arslan",
            "content": "useless class path chance and test case removed.  ",
            "date": "2014-02-28T19:34:25+0000"
        },
        {
            "id": "comment-13916238",
            "author": "Robert Muir",
            "content": "This looks great Ahmet: As Uwe mentioned, i think the only change we need is the condition in TurkishAnalyzer:\n\nif matchVersion.onOrAfter(Version.LUCENE_48) {\n // do new stuff, include the new filter\n} else {\n // do old stuff\n}\n\n\n\nOtherwise, this change looks ready to me. ",
            "date": "2014-02-28T19:36:50+0000"
        },
        {
            "id": "comment-13916245",
            "author": "Robert Muir",
            "content": "Oh one other thing that would be nice, if you could add some javadocs to the public classes? \n\nThe factories typically have an example of its use (see some of the others). For the filter itself, maybe just a simple description of what it does, and a reference to your paper would be good (since you have done experiments and so on). ",
            "date": "2014-02-28T19:39:03+0000"
        },
        {
            "id": "comment-13916274",
            "author": "Ahmet Arslan",
            "content": "if matchVersion.onOrAfter(Version.LUCENE_48)\nI tried this but there is no LUCENE_48 in trunk. ",
            "date": "2014-02-28T19:54:26+0000"
        },
        {
            "id": "comment-13916281",
            "author": "Robert Muir",
            "content": "Thats a bug. I will take care of it right now! ",
            "date": "2014-02-28T19:56:50+0000"
        },
        {
            "id": "comment-13916286",
            "author": "ASF subversion and git services",
            "content": "Commit 1573059 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1573059 ]\n\nLUCENE-5482: add missing constant ",
            "date": "2014-02-28T20:00:42+0000"
        },
        {
            "id": "comment-13916287",
            "author": "ASF subversion and git services",
            "content": "Commit 1573061 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1573061 ]\n\nLUCENE-5482: remove wrong text from this, its not the latest ",
            "date": "2014-02-28T20:01:36+0000"
        },
        {
            "id": "comment-13916288",
            "author": "Robert Muir",
            "content": "Thanks for pointing that out, you should see the constant now. ",
            "date": "2014-02-28T20:02:06+0000"
        },
        {
            "id": "comment-13916324",
            "author": "Ahmet Arslan",
            "content": "Java doc for public classes added\nVersion.LUCENE_48 check  added to TurkishAnalyzer ",
            "date": "2014-02-28T20:24:34+0000"
        },
        {
            "id": "comment-13916328",
            "author": "Ahmet Arslan",
            "content": "Should we add this if check to TestTurkishAnalyzer too?\n\n\n if(matchVersion.onOrAfter(Version.LUCENE_48))   \n // check apostrophes \n\n ",
            "date": "2014-02-28T20:26:38+0000"
        },
        {
            "id": "comment-13916336",
            "author": "Robert Muir",
            "content": "No its ok, because we only instantiate analyzers with the latest version ",
            "date": "2014-02-28T20:30:43+0000"
        },
        {
            "id": "comment-13916342",
            "author": "Ahmet Arslan",
            "content": "Great, Thanks for guidance and comments! ",
            "date": "2014-02-28T20:36:01+0000"
        },
        {
            "id": "comment-13916348",
            "author": "ASF subversion and git services",
            "content": "Commit 1573066 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1573066 ]\n\nLUCENE-5482: Improve default TurkishAnalyzer ",
            "date": "2014-02-28T20:41:34+0000"
        },
        {
            "id": "comment-13916355",
            "author": "Uwe Schindler",
            "content": "Cool, thanks!\n+1 to commit ",
            "date": "2014-02-28T20:46:16+0000"
        },
        {
            "id": "comment-13916362",
            "author": "ASF subversion and git services",
            "content": "Commit 1573074 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1573074 ]\n\nLUCENE-5482: Improve default TurkishAnalyzer ",
            "date": "2014-02-28T20:50:14+0000"
        },
        {
            "id": "comment-13916364",
            "author": "Robert Muir",
            "content": "Thanks Ahmet!\n\nI made one addition: I also inserted this filter into the text_tr chain in the solr example. ",
            "date": "2014-02-28T20:50:34+0000"
        },
        {
            "id": "comment-13982536",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:25:39+0000"
        }
    ]
}