{
    "id": "SOLR-4577",
    "title": "The collections API should return responses (sucess or failure) for each node it attempts to work with.",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.2.1",
            "4.3",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This is when the command itself is successful on the node, but then we need a report of the sub command result on each node.\n\nThere is some code that sort of attempts to do this that came in with the collection api response contribution, but it's not really working currently.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-13602436",
            "date": "2013-03-14T17:04:40+0000",
            "content": "I like this idea.  The few times I've used the collections API to create new collections, I know it worked, but the barebones response didn't say so.  This may be implicit here, but I think the response needs to include a top-level success or failure as well as per node/core. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13602491",
            "date": "2013-03-14T17:51:03+0000",
            "content": "Thanks for the feedback Shawn. SOLR-4576 will solve the top level case - an error there will cause an exception.\n\nHere is what I currently have for a response format:\n\n\n  {responseHeader={status=0,QTime=3063},\n  failure={127.0.0.1:49301_vipe%2Fx=org.apache.solr.common.SolrException:Error CREATEing SolrCore 'halfcollection_shard1_replica1': Core with name 'halfcollection_shard1_replica1' already exists.},\n  success={127.0.0.1:41247_vipe%2Fx={responseHeader={status=0,QTime=3029},core=halfcollection_shard2_replica1,saved=/tmp/org.apache.solr.cloud.CollectionsAPIDistributedZkTest-jetty1-1363283260454/solr.xml}}}\n\n "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13602742",
            "date": "2013-03-14T21:04:21+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1456683\n\nSOLR-4574: The Collections API will silently return success on an unknown ACTION parameter.\nSOLR-4576: Collections API validation errors should cause an exception on clients and otherwise act as validation errors with the Core Admin API.\nSOLR-4577: The collections API should return responses (success or failure) for each node it attempts to work with.  "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13602872",
            "date": "2013-03-14T23:12:17+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1456710\n\nSOLR-4574: The Collections API will silently return success on an unknown ACTION parameter.\nSOLR-4576: Collections API validation errors should cause an exception on clients and otherwise act as validation errors with the Core Admin API.\nSOLR-4577: The collections API should return responses (success or failure) for each node it attempts to work with.  "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13604369",
            "date": "2013-03-16T18:59:37+0000",
            "content": "Of course, I would have preferred if you had used the solutions to \"Typed exception propagation\" and \"Finegrained error propagation\" (SOLR-3382) to be found in the patch for SOLR-3178. Then there would be support for propagating typed exceptions across the wire and for such an exception to contain a list of success/exception per sub-operation (Core API operations in this case).\n\nThen the response could be an actual typed exception with typed sub-exceptions for sub-operations that went wrong - e.g.\nCollectionCreateException\n\n\tshard1_replica1: CoreAlreadyExistsException\n\tshard1_replica2: \"success\"\n\tshard2_replica1: NoSpaceLeftOnDeviceException\n\tshard2_replica2: NoRouteToNodeException\n\n\n\nInstead of exceptions always being SolrException and everything else is to be found out by inspecting text or parsed JSON/XML containing text-stuff only. No actual typed exceptions propagated and thrown at client-side.\n\nIn SOLR-3178 this those features returning typed exception with typed sub-exceptions (one for each sub-operation carried out unsuccessfully) is used around optimistic locking errors on multidocument update requests (where the update of some documents can go well, while update of other documents fail e.g. due to version problems), but the exception propagation and sub-exception system was intentionally designed general purpose, because it is obvious that there will be a lot of cases, in a distributed system like this, where an operation will result i several sub-operations, where each of those can fail/succeed independently, and where you would like to be able to provide the original client with a finegrained \"result/report\" back - an object/exception hierarchy to inspect and not a bunch of text to parse.\n\nOf course, at serialized/transport level, the solution does not do anything SolrJ/Java-specific, because the client might not be SolrJ/Java, but if it is, exceptions with sub-exception are automatically created and thrown.\n\nJust a FRIENDLY note/reminder that this category of \"issues\" already have a generic and powerful solution waiting to be used - in the great  SOLR-3178 patch "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13604375",
            "date": "2013-03-16T19:06:01+0000",
            "content": "I'd love to see a holistic improvement to how errors are handled and returned by Solr. It certainly deserves it's own issue. Until then, it makes sense to have this work like the rest of Solr does. "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13604918",
            "date": "2013-03-18T07:20:39+0000",
            "content": "I provided my attempt at a holistic solution in SOLR-3178, with a separate issue SOLR-3382 on the part of response-includes-response-for-each-subrequest. Unfortunately it is merged in with all the other improvements in SOLR-3178. I would like to try to dig out the parts related to exception-propagation and inclusion of sub-request results/exceptions. If you want? "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13606008",
            "date": "2013-03-19T03:44:32+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1458104\n\nSOLR-4574:  Move CHANGES entry.\nSOLR-4576:  Move CHANGES entry.\nSOLR-4577:  Move CHANGES entry. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13606013",
            "date": "2013-03-19T03:44:50+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1458105\n\nSOLR-4574:  Move CHANGES entry.\nSOLR-4576:  Move CHANGES entry.\nSOLR-4577:  Move CHANGES entry. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13607080",
            "date": "2013-03-20T00:10:25+0000",
            "content": "I would like to try to dig out the parts related to exception-propagation and inclusion of sub-request results/exceptions. If you want?\n\nI would be interested in this. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653739",
            "date": "2013-05-10T10:32:49+0000",
            "content": "Closed after release. "
        }
    ]
}