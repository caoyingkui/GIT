{
    "id": "SOLR-2179",
    "title": "unregistered searchers not closed",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "A searcher that has not yet been registered is not tracked anywhere and may not be closed if the core is closed.",
    "attachments": {
        "SOLR-2179.patch": "https://issues.apache.org/jira/secure/attachment/12457624/SOLR-2179.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12922759",
            "date": "2010-10-19T22:32:23+0000",
            "content": "I've been seeing some strange errors in the tests, and I noticed that it was all very short tests that didn't do any queries that were the problem.\n\nSo the core starts up, asynchronously  a searcher is created + warmed, and then the core is shut down before that searcher is even registered (or the core has a reference to it to close it).\n\nThis doesn't seem particularly easy to solve, unless you completely synchronize the reader.reopen() + new searcher creation. "
        },
        {
            "author": "Chris Male",
            "id": "comment-12922779",
            "date": "2010-10-19T23:15:41+0000",
            "content": "Is the searcher registered pre or post warming? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12922807",
            "date": "2010-10-20T00:56:18+0000",
            "content": "Basically, the idea is to wait for the search executor to finish before closing the main searcher.\n\nHere's the patch:\n\n\tcloses the search executor before closing the last registered searcher\n\tmoves the close hook calls first, and catches any exceptions thrown by them\n\n\n\nNew comments in the code explain a little more:\n\n+      // Since we waited for the searcherExecutor to shut down,\n+      // there should be no more searchers warming in the background\n+      // that we need to take care of.\n+      //\n+      // For the case that a searcher was registered *before* warming\n+      // then the searchExecutor will throw an exception when getSearcher()\n+      // tries to use it, and the exception handling code should close it.\n+      closeSearcher();\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12922817",
            "date": "2010-10-20T01:45:28+0000",
            "content": "Committed.\nThis doesn't really represent that serious of an issue - but it's nice to get it out of the way so that it doesn't mask more serious ones.\n\nWith this patch, all of the remaining searcher leaks look to be taken care of. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013183",
            "date": "2011-03-30T15:45:48+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}