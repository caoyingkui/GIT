{
    "id": "SOLR-3163",
    "title": "FacetComponent returns list of alternate name, value instead of map for counts in JSON responses",
    "details": {
        "affect_versions": "3.5",
        "status": "Closed",
        "fix_versions": [
            "3.5"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "Facet counts for facet.field come back in JSON format like this (a list of name and values, where even positions are keys and odd positions are values).\n\n\n  \"facet_counts\":{\n    \"facet_fields\":{\n      \"u_idx\":[\n        \"section\",39663,\n        \"adam\",6211,\n        \"image\",3840,\n        \"slideshow\",2480],\n      ...\n\nunlike facet.query facet counts, which come back like this (a map of name value pairs).\n\n\n    \"facet_queries\":\nUnknown macro: {      \"u_reviewdate} \n,\n\nThis is only for wt=json. With wt=xml, the two formats look similar.\n\n\n<lst name=\"facet_queries\">\n  <int name=\"u_reviewdate:[NOW-6MONTH TO NOW]\">42</int>\n  <int name=\"u_reviewdate:[NOW-1YEAR TO NOW-6MONTHS]\">1561</int>\n  <int name=\"u_reviewdate:[NOW-2YEAR TO NOW-1YEAR]\">3017</int>\n  <int name=\"u_reviewdate:[NOW-5YEAR TO NOW-2YEAR]\">1538</int>\n  <int name=\"u_reviewdate:[NOW-100YEAR TO NOW-5YEAR]\">47</int>\n</lst>\n\n<lst name=\"facet_fields\">\n  <lst name=\"u_idx\">\n    <int name=\"section\">39663</int>\n    <int name=\"adam\">6211</int>\n    <int name=\"image\">3840</int>\n    <int name=\"slideshow\">2480</int>\n  </lst>\n\nI believe this is because of the use of NamedList for this data structure in FacetCountsComponent, SimpleOrderedMap should be used instead. This will produce results of facet_field counts like a map in JSON format (and keep the XML output the same).\n\n\n  \"facet_counts\":{\n    \"facet_fields\":{\n      \"u_idx\":[\n        \"section\":39663,\n        \"adam\":6211,\n        \"image\":3840,\n        \"slideshow\":2480],\n      ...\n\nThis makes it consistent across different kinds of facets and is easier to consume on the client.\n\nThere is the concern about backward compatibility (ie users are already consuming the incorrect/inconsistent format so we can't change it), but if that is not as important as consistency and ease of use, then I can supply a patch for this.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13216510",
            "date": "2012-02-25T18:03:02+0000",
            "content": "I believe this is because of the use of NamedList for this data structure in FacetCountsComponent, SimpleOrderedMap should be used instead. \n\nThe use of NamedList (i.e. order is more important than access by key) was deliberate.  Many JSON clients do not preserve order (or at least they didn't back when I made this decision), and order mattered to many people.\n\nhttp://wiki.apache.org/solr/SolJSON#JSON_specific_parameters\n\nThere's no right answer here... just different trade-offs.\nIs this still the best default?  I'd like to hear what others think about the pain of using an alternating array vs the pain of having to re-sort because the JSON parser didn't preserve the order. "
        },
        {
            "author": "Sujit Pal",
            "id": "comment-13216511",
            "date": "2012-02-25T18:27:23+0000",
            "content": "Ok, I understand. I already have a workaround to parse the NamedList as it is, so I am not blocked. Just seemed inconsistent, but now I understand why. And for those that need it, one can probably use the json.nl=map parameter. Shall I close the bug? "
        },
        {
            "author": "Sujit Pal",
            "id": "comment-13219448",
            "date": "2012-02-29T19:38:59+0000",
            "content": "This is a known feature and not a bug to preserve order. Closing. "
        }
    ]
}