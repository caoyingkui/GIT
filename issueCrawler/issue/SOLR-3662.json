{
    "id": "SOLR-3662",
    "title": "core reload can go back in time",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-BETA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Reloading a core can cause the new core to have an older view of the index than the old core.",
    "attachments": {
        "SOLR-3662.patch": "https://issues.apache.org/jira/secure/attachment/12537453/SOLR-3662.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13419808",
            "date": "2012-07-21T12:05:56+0000",
            "content": "This patch improves a number of areas related to reload:\n\n\tthe VersionInfo class was holding onto a SolrCore reference (which is used to look up versions in the index)\n\ton a reload, the old core is passed to the constructor and if a writer was open in the core state, it's used to open the first reader so that we see changes in the writer (and hence don't go back in time with respect to NRT readers in the previous core)\n\tupdate handler (which is no longer a singleton per writer) synchronizes on the core state instance instead\n\n\n\nWith these changes, TestReload now passes "
        }
    ]
}