{
    "id": "SOLR-8166",
    "title": "Introduce possibility to configure ParseContext in ExtractingRequestHandler/ExtractingDocumentLoader",
    "details": {
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "5.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Actually there is no possibility to hand over some additional configuration by document extracting with ExtractingRequestHandler/ExtractingDocumentLoader.\n\nFor example I need to put org.apache.tika.parser.pdf.PDFParserConfig with \"extractInlineImages\" set to true in ParseContext to trigger extraction/OCR recognizing of embedded images from pdf. \n\nIt would be nice to have possibility to configure created ParseContext due xml-config file like TikaConfig does.\n\nI would suggest to have following:\n\nsolrconfig.xml:\n  <requestHandler name=\"/update/extract\" class=\"org.apache.solr.handler.extraction.ExtractingRequestHandler\">\n    <str name=\"parseContext.config\">parseContext.config</str>\n  </requestHandler>\n\nparseContext.config:\n\n<entries>\n  <entry class=\"org.apache.tika.parser.pdf.PDFParserConfig\" value=\"org.apache.tika.parser.pdf.PDFParserConfig\">\n    <property name=\"extractInlineImages\" value=\"true\"/>\n  </entry>\n</entries>",
    "attachments": {
        "SOLR-8166.patch": "https://issues.apache.org/jira/secure/attachment/12770669/SOLR-8166.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-16T09:00:05+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user abinet opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/206\n\n    SOLR-8166 provide config for tika's ParseContext\n\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/abinet/lucene-solr origin/branch_5x\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/206.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #206\n\n\ncommit 1fb220f28e77bac4f9e2c99ffc6f4412aeaa013b\nAuthor: Andriy Binetsky <abinetsky@olmero.ch>\nDate:   2015-10-16T08:54:53Z\n\n    SOLR-8166 provide config for tika's ParseContext\n\n ",
            "id": "comment-14960389"
        },
        {
            "date": "2015-10-16T09:08:05+0000",
            "author": "Uwe Schindler",
            "content": "Hi,\nwe disallow using setAccessible inside reflection throughout Lucene/Solr (cause is Java 9 where this is veeeery limited), so your patch would not pass the code quality checks (forbidden-apis).\nI would suggest to add a ParseContextFactory that you can specify in your config and that has to be supplied by the user, implemented as native Java code by the user (using Solr's plugin mechanism).\n\nAlternatively add setters for all ParseContext methods in your parser. ",
            "id": "comment-14960399"
        },
        {
            "date": "2015-10-16T09:14:50+0000",
            "author": "Uwe Schindler",
            "content": "You are alos using the wrong classloader for doing this stuff. This will break with Solr plugins. You have to pass the SolrResourceLoader down to your parser and this one has to call the class loading methods it provides. Don't use native Classloaders. ",
            "id": "comment-14960411"
        },
        {
            "date": "2015-10-16T14:24:53+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user abinet commented on the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#issuecomment-148731447\n\n     \tSOLR-8166 provide config for tika's ParseContext\n    I would still prefer to modify existing ExtractingDocumentLoader rather then provide additional plugin with factory. \n    setAccessible is awoided now \n    And core.resourceClassloader is used ",
            "id": "comment-14960777"
        },
        {
            "date": "2015-10-17T17:30:39+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#discussion_r42311681\n\n    \u2014 Diff: solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingRequestHandler.java \u2014\n    @@ -79,6 +81,20 @@ public void inform(SolrCore core) \n{\n               throw new SolrException(ErrorCode.SERVER_ERROR, e);\n             }\n           }\n    +\n    +      String parseContextConfigLoc = (String) initArgs.get(PARSE_CONTEXT_CONFIG);\n    +      if (parseContextConfigLoc != null) {\n    +        File parseContextConfigFile = new File(parseContextConfigLoc);\n    +        if (parseContextConfigFile.isAbsolute() == false) {\n    +          parseContextConfigFile = new File(core.getResourceLoader().getConfigDir(), parseContextConfigFile.getPath());\n    \u2014 End diff \u2013\n\n    Please dont create a file instance here, because with Zookeeper there is no config directory available. Just use the ResourceLoader methods to load the config file as InputStream (using RL#getResource()). Just pass this input stream to the XML parser. ",
            "id": "comment-14961998"
        },
        {
            "date": "2015-10-17T17:31:46+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#discussion_r42311693\n\n    \u2014 Diff: solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingRequestHandler.java \u2014\n    @@ -79,6 +81,20 @@ public void inform(SolrCore core) \n{\n               throw new SolrException(ErrorCode.SERVER_ERROR, e);\n             }\n           }\n    +\n    +      String parseContextConfigLoc = (String) initArgs.get(PARSE_CONTEXT_CONFIG);\n    +      if (parseContextConfigLoc != null) {\n    +        File parseContextConfigFile = new File(parseContextConfigLoc);\n    +        if (parseContextConfigFile.isAbsolute() == false) \n{\n    +          parseContextConfigFile = new File(core.getResourceLoader().getConfigDir(), parseContextConfigFile.getPath());\n    +        }\n    +        try {\n    +          parseContextConfig = new ParseContextConfig(parseContextConfigFile, core.getResourceLoader().getClassLoader());\n    \u2014 End diff \u2013\n\n    I would directly pass the resourceloader and not the classloader. Resourceloader has easy-to-use methods to load classes, too. ",
            "id": "comment-14961999"
        },
        {
            "date": "2015-10-17T17:32:11+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#discussion_r42311704\n\n    \u2014 Diff: solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ParseContextConfig.java \u2014\n    @@ -0,0 +1,113 @@\n    +package org.apache.solr.handler.extraction;\n    +\n    +/*\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\n    + * contributor license agreements.  See the NOTICE file distributed with\n    + * this work for additional information regarding copyright ownership.\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\n    + * (the \"License\"); you may not use this file except in compliance with\n    + * the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +import javax.xml.parsers.DocumentBuilder;\n    +import javax.xml.parsers.DocumentBuilderFactory;\n    +import java.io.File;\n    +import java.lang.reflect.Field;\n    +import java.lang.reflect.Method;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import org.apache.tika.parser.ParseContext;\n    +import org.w3c.dom.Document;\n    +import org.w3c.dom.Element;\n    +import org.w3c.dom.NamedNodeMap;\n    +import org.w3c.dom.Node;\n    +import org.w3c.dom.NodeList;\n    +\n    +public class ParseContextConfig {\n    +  private Map<Class, Object> entries = new HashMap<>();\n    +\n    +  public ParseContextConfig() {\n    \u2014 End diff \u2013\n\n    Please remove unused constructors. ",
            "id": "comment-14962000"
        },
        {
            "date": "2015-10-17T17:32:52+0000",
            "author": "Uwe Schindler",
            "content": "I left some comments on the pull request. ",
            "id": "comment-14962002"
        },
        {
            "date": "2015-10-17T17:33:54+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#discussion_r42311723\n\n    \u2014 Diff: solr/contrib/extraction/src/test-files/log4j.properties \u2014\n    @@ -0,0 +1,31 @@\n    +#  Logging level\n    \u2014 End diff \u2013\n\n    Please revert changes to this file. They are unrelated. ",
            "id": "comment-14962003"
        },
        {
            "date": "2015-10-17T17:34:55+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#discussion_r42311743\n\n    \u2014 Diff: solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ParseContextConfigTest.java \u2014\n    @@ -0,0 +1,54 @@\n    +package org.apache.solr.handler.extraction;\n    +\n    +/*\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\n    + * contributor license agreements.  See the NOTICE file distributed with\n    + * this work for additional information regarding copyright ownership.\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\n    + * (the \"License\"); you may not use this file except in compliance with\n    + * the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +import org.apache.tika.parser.ParseContext;\n    +import org.apache.tika.parser.pdf.PDFParserConfig;\n    +import org.apache.xerces.dom.DocumentImpl;\n    +import org.junit.Test;\n    +import org.w3c.dom.Element;\n    +\n    +import static org.junit.Assert.*;\n    +\n    +public class ParseContextConfigTest {\n    \u2014 End diff \u2013\n\n    Please subclass SolrTestCaseJ4, dont create plain tests, as those don't use the test framework, which does additional checks. ",
            "id": "comment-14962004"
        },
        {
            "date": "2015-10-17T17:35:39+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#discussion_r42311748\n\n    \u2014 Diff: solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ParseContextConfig.java \u2014\n    @@ -0,0 +1,113 @@\n    +package org.apache.solr.handler.extraction;\n    +\n    +/*\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\n    + * contributor license agreements.  See the NOTICE file distributed with\n    + * this work for additional information regarding copyright ownership.\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\n    + * (the \"License\"); you may not use this file except in compliance with\n    + * the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +import javax.xml.parsers.DocumentBuilder;\n    +import javax.xml.parsers.DocumentBuilderFactory;\n    +import java.io.File;\n    +import java.lang.reflect.Field;\n    +import java.lang.reflect.Method;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import org.apache.tika.parser.ParseContext;\n    +import org.w3c.dom.Document;\n    +import org.w3c.dom.Element;\n    +import org.w3c.dom.NamedNodeMap;\n    +import org.w3c.dom.Node;\n    +import org.w3c.dom.NodeList;\n    +\n    +public class ParseContextConfig {\n    +  private Map<Class, Object> entries = new HashMap<>();\n    +\n    +  public ParseContextConfig() \n{\n    +  }\n    +\n    +  public ParseContextConfig(Element element, ClassLoader loader) throws Exception \n{\n    +    extract(element, loader);\n    +  }\n    +\n    +  public ParseContextConfig(Document document, ClassLoader loader) throws Exception \n{\n    +    this(document.getDocumentElement(), loader);\n    +  }\n    +\n    +  public ParseContextConfig(String fileName, ClassLoader loader) throws Exception \n{\n    +    this(getBuilder().parse(fileName), loader);\n    +  }\n    +\n    +  public ParseContextConfig(File file, ClassLoader loader) throws Exception \n{\n    +    this(getBuilder().parse(file), loader);\n    +  }\n    +\n    +  private static DocumentBuilder getBuilder() throws Exception \n{\n    +      return DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    +  }\n    +\n    +  private void extract(Element element, ClassLoader loader) throws Exception {\n    +    final NodeList xmlEntries = element.getElementsByTagName(\"entry\");\n    +    for (int i = 0; i < xmlEntries.getLength(); i++) {\n    +      final NamedNodeMap xmlEntryAttributes = xmlEntries.item.getAttributes();\n    +      final String className = xmlEntryAttributes.getNamedItem(\"class\").getNodeValue();\n    +      final String implementationName = xmlEntryAttributes.getNamedItem(\"value\").getNodeValue();\n    +\n    +      final NodeList xmlProperties = ((Element)xmlEntries.item).getElementsByTagName(\"property\");\n    +\n    +        final Class<?> interfaceClass = loader.loadClass(className);\n    +        final Class<?> implementationClass = loader.loadClass(implementationName);\n    +        final Object instance = implementationClass.newInstance();\n    +\n    +        for (int j = 0; j < xmlProperties.getLength(); j++) {\n    +          final Node xmlProperty = xmlProperties.item(j);\n    +          final NamedNodeMap xmlPropertyAttributes = xmlProperty.getAttributes();\n    +\n    +          final String propertyName = xmlPropertyAttributes.getNamedItem(\"name\").getNodeValue();\n    +          final String propertyValue = xmlPropertyAttributes.getNamedItem(\"value\").getNodeValue();\n    +\n    +          final Field declaredField = interfaceClass.getDeclaredField(propertyName);\n    +          final Class<?> type = declaredField.getType();\n    +          final Method declaredMethod = interfaceClass.getDeclaredMethod(\"set\" + propertyName.substring(0, 1).toUpperCase() + propertyName.substring(1, propertyName.length()), type);\n    \u2014 End diff \u2013\n\n    This does not work in Turkey!  Don't use String#toUpper/LowerCase() without giving a Locale (Locale.ROOT is needed here) ",
            "id": "comment-14962005"
        },
        {
            "date": "2015-10-23T06:19:50+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user abinet commented on the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#issuecomment-150487320\n\n    I fixed all issues you mentioned. It is also possible to use PropertyUtils from Apache commons-beanutils but we need to introduce new dependency then. ",
            "id": "comment-14970519"
        },
        {
            "date": "2015-10-23T07:36:32+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#issuecomment-150497999\n\n    Hi,\n    a useful alternative to using commons-beanutils is using the JDK internal bean classes. See https://github.com/apache/lucene-solr/blob/trunk/solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java#L166-L232 for an example. We read the properties of MXBeans in the SystemInfoHandler here. You can get a BeanInfo from the class and then use the property descriptors to get/set properties. And that is what you are doing.\n    Because the JDK code is partly buggy for historical reasons, make sure to use the correct flags added with JDK 7 when inspecting and getting the property descriptors (disabling caches which are broken). ",
            "id": "comment-14970593"
        },
        {
            "date": "2015-11-04T15:59:46+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user abinet commented on the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#issuecomment-153773456\n\n    All done. it it clean enough for merge? ",
            "id": "comment-14989781"
        },
        {
            "date": "2015-11-04T17:03:26+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#issuecomment-153793014\n\n    Hey, yes exactly like that  I will review that later. Give me a day or two, I am looking in merging it. ",
            "id": "comment-14989914"
        },
        {
            "date": "2015-11-04T19:54:46+0000",
            "author": "Uwe Schindler",
            "content": "Hi,\nI cleaned up your PR (removed changes from unrelated files, refactored the config loading and type checking a bit) and attached as a patch here. I will commit soon.\n\nI changed the name of the attribute used for the implementation class to \"impl=\" instead of \"value=\", which seems wrong.\n\nI also added the remaining native types to your type converter (float, byte, short). ",
            "id": "comment-14990276"
        },
        {
            "date": "2015-11-04T20:06:32+0000",
            "author": "Uwe Schindler",
            "content": "Slightly simplified patch. I was able to remove the long chain of ifs for guessing property type. The Java Beans Framework does this automatically, so we can set/get properties as String easily using the same beans API. ",
            "id": "comment-14990298"
        },
        {
            "date": "2015-11-04T20:13:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1712629 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1712629 ]\n\nSOLR-8166: Introduce possibility to configure ParseContext in ExtractingRequestHandler/ExtractingDocumentLoader ",
            "id": "comment-14990309"
        },
        {
            "date": "2015-11-04T20:17:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1712632 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1712632 ]\n\nMerged revision(s) 1712629 from lucene/dev/trunk:\nSOLR-8166: Introduce possibility to configure ParseContext in ExtractingRequestHandler/ExtractingDocumentLoader\nThis closes Github PR #206 ",
            "id": "comment-14990316"
        },
        {
            "date": "2015-11-04T20:18:14+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user uschindler commented on the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#issuecomment-153850780\n\n    Hi, this was merged into SVN. Can you close the pull request, the automatic close did not work... ",
            "id": "comment-14990318"
        },
        {
            "date": "2015-11-04T20:20:28+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user abinet commented on the pull request:\n\n    https://github.com/apache/lucene-solr/pull/206#issuecomment-153851266\n\n    Hi, thank you for support and cooperation. I'll close pull request. ",
            "id": "comment-14990325"
        },
        {
            "date": "2015-11-04T20:20:28+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user abinet closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/206 ",
            "id": "comment-14990326"
        },
        {
            "date": "2015-11-04T20:22:08+0000",
            "author": "Uwe Schindler",
            "content": "Thanks Andriy! ",
            "id": "comment-14990330"
        },
        {
            "date": "2015-11-04T22:32:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1712677 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1712677 ]\n\nSOLR-8166: Add some null checks ",
            "id": "comment-14990581"
        },
        {
            "date": "2015-11-04T22:33:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1712678 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1712678 ]\n\nMerged revision(s) 1712677 from lucene/dev/trunk:\nSOLR-8166: Add some null checks ",
            "id": "comment-14990587"
        }
    ]
}