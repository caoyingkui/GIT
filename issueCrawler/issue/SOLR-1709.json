{
    "id": "SOLR-1709",
    "title": "Distributed Date and Range Faceting",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This patch is for adding support for date facets when using distributed searches.\n\nDate faceting across multiple machines exposes some time-based issues that anyone interested in this behaviour should be aware of:\nAny time and/or time-zone differences are not accounted for in the patch (i.e. merged date facets are at a time-of-day, not necessarily at a universal 'instant-in-time', unless all shards are time-synced to the exact same time).\nThe implementation uses the first encountered shard's facet_dates as the basis for subsequent shards' data to be merged in.\nThis means that if subsequent shards' facet_dates are skewed in relation to the first by >1 'gap', these 'earlier' or 'later' facets will not be merged in.\nThere are several reasons for this:\n\n\tPerformance: It's faster to check facet_date lists against a single map's data, rather than against each other, particularly if there are many shards\n\tIf 'earlier' and/or 'later' facet_dates are added in, this will make the time range larger than that which was requested\n        (e.g. a request for one hour's worth of facets could bring back 2, 3 or more hours of data)\n    This could be dealt with if timezone and skew information was added, and the dates were normalized.\nOne possibility for adding such support is to [optionally] add 'timezone' and 'now' parameters to the 'facet_dates' map. This would tell requesters what time and TZ the remote server thinks it is, and so multiple shards' time data can be normalized.\n\n\n\nThe patch affects 2 files in the Solr core:\n  org.apache.solr.handler.component.FacetComponent.java\n  org.apache.solr.handler.component.ResponseBuilder.java\n\nThe main changes are in FacetComponent - ResponseBuilder is just to hold the completed SimpleOrderedMap until the finishStage.\nOne possible enhancement is to perhaps make this an optional parameter, but really, if facet.date parameters are specified, it is assumed they are desired.\nComments & suggestions welcome.\n\nAs a favour to ask, if anyone could take my 2 source files and create a PATCH file from it, it would be greatly appreciated, as I'm having a bit of trouble with svn (don't shoot me, but my environment is a Redmond-based os company).",
    "attachments": {
        "FacetComponent.java": "https://issues.apache.org/jira/secure/attachment/12429740/FacetComponent.java",
        "SOLR-1709.patch": "https://issues.apache.org/jira/secure/attachment/12476407/SOLR-1709.patch",
        "ResponseBuilder.java": "https://issues.apache.org/jira/secure/attachment/12429741/ResponseBuilder.java",
        "SOLR-1709_distributed_date_faceting_v3x.patch": "https://issues.apache.org/jira/secure/attachment/12471062/SOLR-1709_distributed_date_faceting_v3x.patch",
        "SOLR-1709_3x.patch": "https://issues.apache.org/jira/secure/attachment/12510821/SOLR-1709_3x.patch",
        "solr-1.4.0-solr-1709.patch": "https://issues.apache.org/jira/secure/attachment/12436092/solr-1.4.0-solr-1709.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jason Rutherglen",
            "id": "comment-12797898",
            "date": "2010-01-08T04:04:27+0000",
            "content": "Tim,\n\nThanks for the patch...\n\nas I'm having a bit of trouble with svn (don't shoot me, but my environment is a Redmond-based os company).\n\nTortoiseSVN works well on Windows, even for creating patches.  Have you tried it?  \n "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12797957",
            "date": "2010-01-08T09:43:08+0000",
            "content": "I've heard of Tortoise, I'll give that a try, thanks.\n\nOn the time-zone/skew issue, perhaps a more efficient approach would be a 'push' rather than 'pull' - i.e.:\n\nRequesters would include an optional parameter that told remote shards what time to use as 'NOW', and which TZ to use for date faceting.\nThis would avoid having to translate loads of time strings at merge time.\n\nThanks,\nPeter "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12797974",
            "date": "2010-01-08T10:40:11+0000",
            "content": "Sorry, guys, can't get svn to create a patch file correctly on windows, so I'm attaching the source files here. With some time, which at the moment I don't have, I'm sure I could get svn working. Rather than anyone have to wait for me to get the patch file created, I thought it best to get the source uploaded, so people can start using it.\nThanks, Peter "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12798163",
            "date": "2010-01-08T20:18:02+0000",
            "content": "Requesters would include an optional parameter that told remote shards what time to use as 'NOW', and which TZ to use for date faceting. This would avoid having to translate loads of time strings at merge time.\n\nI was thinking the same thing ... as long as the \"coordinator\" evaluated any DateMath in the facet.date.start and facet.date.end params before executing the sub-requests to the shards, the ranges coming back from the individual shards should all be in sync. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12798170",
            "date": "2010-01-08T20:34:56+0000",
            "content": "I haven't checked the patch, but it seems like we should take a generic approach to NOW...\nThe first time NOW is used anywhere in the request (and is not passed in as a request argument), either a thread local or something in the request context should be set to the current time.  Subsequent references to NOW would yield the first value set.\nThis would allow NOW to be referenced more than once in the same request with consistent results.\n\nPassing in \"NOW\" as a request parameter would simply set it explicitly... the question is, who (which solr component) should be responsible for that? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12798203",
            "date": "2010-01-08T22:17:27+0000",
            "content": "Date formatting and parsing also tend to be surprisingly expensive.\nSo if we support passing NOW as a date string, it would be nice to also support standard milliseconds.  That can also be easier for clients to generate rather than trying to figure out how to get the correct date format.  Perhaps that should even be an addition to the standard datemath syntax. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12798233",
            "date": "2010-01-08T23:12:11+0000",
            "content": "Definitely true! \u2013 messing about with Date strings isn't great for performance.\n\nAs the NOW parameter would be for internal request use only (i.e. not for the indexer, not for human consumption), could it not just be an epoch long? The adjustment math should then be nice and quick (no string/date parsing/formatting; at worst just one Date.getTimeInMillis() call if the time is stored locally as a string). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12798243",
            "date": "2010-01-08T23:21:45+0000",
            "content": "Seems useful enough that setting NOW should be advertised (i.e. not just an internal call).  For example, it would be a convenient way to keep the rest of your request the same, but check how the current date affects your date boosting strategies.  NOW isn't just for date faceting, but for anything that uses date math.\n\nAs for the format, 20091231 is ambiguous if you want flexible dates... is it a date or milliseconds?\nI first thought of a prefix (ms:123456789) but it makes it look like a field query.\nIt might be safest to make it unambiguous somehow... postfix with ms?  123456789ms "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12798411",
            "date": "2010-01-09T22:04:29+0000",
            "content": "Yonik,\n\nYes, I can see what you mean that of course NOW will affect anything date-related to a given query.\nI'm wondering whether the passing of 'NOW' to shards should be a separate issue/patch from this one (e.g. something like 'Time Sync to Remote Shards'), as its scope and ramifications go far beyond simply distributed date faceting.\nThe whole area of code relating to date math is one that I'm not familiar with, but do let me know if there's anything you'd like me to look at. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12803397",
            "date": "2010-01-21T18:09:15+0000",
            "content": "Updated version of FacetComponent.java after more testing and sync with FacetParams.FACET_DATE_NOW (see SOLR-1729).\nFor use with the 1.4 trunk (along with the existing ResponseBuilder.java in this patch). "
        },
        {
            "author": "Thomas Hammerl",
            "id": "comment-12833861",
            "date": "2010-02-15T15:57:31+0000",
            "content": "Unfortunately, I am not able to apply this patch. I get the following compile error:\n\n\n[javac] /home/systemone/Desktop/solr-1.4/src/java/org/apache/solr/handler/component/ResponseBuilder.java:138: cannot find symbol\n[javac] symbol  : class TermsHelper\n[javac] location: class org.apache.solr.handler.component.TermsComponent\n[javac]   TermsComponent.TermsHelper _termsHelper;\n[javac]\n\n\n\nWhat I've done basically is download the attached sources and apply the following commands:\n\n\nsvn co http://svn.apache.org/repos/asf/lucene/solr/tags/release-1.4.0/ solr-1.4.0\ncp FacetComponent.java solr-1.4.0/src/java/org/apache/solr/handler/component/\ncp ResponseBuilder.java solr-1.4.0/src/java/org/apache/solr/handler/component/\ncd solr-1.4.0\nant package\n\n\n\nI also tried to apply the patch to the 1.4 branch at http://svn.apache.org/repos/asf/lucene/solr/branches/branch-1.4/ resulting in the same compile error.\n\nAny help would be very appreciated. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12834222",
            "date": "2010-02-16T14:10:32+0000",
            "content": "Hi Thomas,\n\nHmmm...TermsHelper is an inner class inside TermsComponent.\nIn the code base that I have, this class exists within TermsComponent. I've just had a look on the http://mirrors.dedipower.com/ftp.apache.org/lucene/solr/1.4.0/ mirror, and the TermsComponent doesn't have this inner class.\n\nNot sure where the difference is, as I would have got my codebase from the same set of mirrors as you (unless some mirrors are out-of-sync?). \n\nTermsComponent hasn't changed in this patch, so I don't know much about this class. One thing to try is to diff the 2 files above with your 1.4 codebase, and merge the changes into your codebase. The differences should be very easy to see.\n\nThis does highlight the very good policy for putting patch files as attachments rather than source files. This is my fault, as we don't use svn in our (win) environment, and Tortoise SVN crashes explorer64, so i'm not able to make compatible diff files - sorry.\n\nIf you do create a couple of diff files, it would be very kind of you if you could post it up on this issue for others?\n\nThanks! "
        },
        {
            "author": "Thomas Hammerl",
            "id": "comment-12834714",
            "date": "2010-02-17T10:02:57+0000",
            "content": "Hi Peter!\n\nThanks for your advice! I have simply removed the introduced _termsHelper member variable in ResponseBuilder.java from the patch since it was not used anywhere. Now everything compiles fine with the code base from http://svn.apache.org/repos/asf/lucene/solr/tags/release-1.4.0/. I have attached a patch file in unified diff format. "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12929760",
            "date": "2010-11-08T22:00:50+0000",
            "content": "Hi Peter Sturge,\n\nwhat are the limitations of this patch? only that earlier + later isn't supported?\n\nWhat are the issues before commiting this into trunk? "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12929786",
            "date": "2010-11-08T22:44:32+0000",
            "content": "Hi Peter,\n\nThanks for your message. There's of course the issue of 'now' as described in some of the above comments. This is perhaps a little ancillary to this issue, but not totally irrelevant.\n\nThe issue of time zone/skew on distributed shards is currently handled by SOLR-1729 by passing a 'facet.date.now=<epochtime>' parameter in the search query. This is then used by the particapating shards to use as 'now'. Of course, there are a number of ways to skin that one, but this is a straightforward solution that is backward compatible and still easy to implement in client code.\n\nNote that the facet.date.now change is not part of this patch - see SOLR-1729 for a separate patch for this parameter. (kept separate because it's, strictly speaking, a separate issue generally for distributed search)\n\nIt's not that eariler/later aren't supported - the date facet 'edges' are fine, it's just the patch will 'quantize the ends' of the start/end date facets if the time is skewed from the calling server. This is where SOLR-1729 comes into play, so that this doesn't happen.\n\n   As this is a pre-3x/4x branch patch, the testing is a bit limited on the latest trunk(s). Having said that, I have this (and SOLR-1729) building/running fine on my svn 3x branch release copy.\nAny other questions, or info you need, please do let me know.\n\nThanks!\nPeter "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12965841",
            "date": "2010-12-01T20:48:49+0000",
            "content": "Hi Peter,\n\nsorry for getting so late back.\n\nI'm relative sure now that I'll need that patch (also Jake from solandra was asking when this patch will be ready )\n\nSo, I will need to apply SOLR-1729 and then this patch to the 3x branch or even without SOLR-1729 (not necessary in my case)?\n\nRegards,\nPeter. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12966031",
            "date": "2010-12-02T09:21:13+0000",
            "content": "It's a good idea to apply SOLR-1729 in any case, as it caters for any\ntime skew in documents and between machines.\nWithout it, result counts 'on the edges' could be incorrect. 1729 is\nquite 'passive', in that if you don't specify a 'FACET_DATE_NOW'\nparameter int he request, it runs as without the patch.\n\nIn terms of readiness, we've been using these patches in production\nenvironments for months now. (We use it with the 3.x trunk branch)\n\nYonik, et al. were talking about a more general update with regards\nhow NOW is configured on a machine (since it is used in places other\nthan just date facets), and this is the\n'extra' work to be done, but things work fine as they are for disti\ndate faceting.\n\nThanks,\nPeter\n\n\n\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-12986832",
            "date": "2011-01-26T03:39:05+0000",
            "content": "Peter, do you have any inclination to port this to 3x or trunk which is using the new numerical range faceting for doing double duty for numbers & dates? "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12987533",
            "date": "2011-01-27T12:50:10+0000",
            "content": "Hi David,\n\nI thought this was for the 3x branch, but I still get confused since the all the names changed.\nAre you finding this patch not working on 3x? (remember also to apply SOLR-1729)\n\nI've not tried this on trunk, as there has been a lot of flux in this area in the recent past. As I've not tried it, I'm not sure how this patch works on trunk - possibly requiring a manual merge.\n\nPeter "
        },
        {
            "author": "David Smiley",
            "id": "comment-12987691",
            "date": "2011-01-27T18:23:18+0000",
            "content": "I'm just trying to prod this along so that it can get committed.  One problem is that you didn't provide a patch here, you provided whole source files.  Long ago in 2010 I carefully figured out what changes you did and patched my Solr trunk.  Using the same patch I created for that, I did it by hand for 3x just now.  And there are no tests.  If you don't have an interest in pushing this along further than I could invest some effort in a couple weeks or so to provide missing elements that should make it amicable to committers.  I could also make it work for numeric ranges which looks straight forward. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12988013",
            "date": "2011-01-28T09:51:02+0000",
            "content": "Hi David,\n\nYes, at the time my patching wasn't working (Windows env for my sins), so I thought it would be better to make the source available than not. Thomas H. kindly did turn it into a udiff patch last year.\nI agree it would be good to include this functionality (along with SOLR-1729 + Yonik's recent 'NOW' changes).\nI have a product release coming up in a few weeks, so I won't have many cycles before then. Of course it would be great if you have any time to invest making this more 'commitable'.\nI admit because I'm not a Solr commiter, I'm not as familiar with the requirements. If you can let me know the 'missing elements', I'm happy to look at contributing what's needed, or if you prefer, divide up the tasks that need doing.\n\nMany thanks,\nPeter "
        },
        {
            "author": "David Smiley",
            "id": "comment-12994667",
            "date": "2011-02-15T05:49:53+0000",
            "content": "This is a patch for v3.1.  It includes a test. Thanks to Solr's excellent test infrastructure, it was actually very easy to test.\n\nNow that said, I suspect that facet.date is going to be deprecated in favor of facet.range (which supports dates and numbers) \u2013 SOLR-1240. Facet.range does not support faceting yet. I'll take a look at porting this patch and providing a test. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12994716",
            "date": "2011-02-15T09:17:45+0000",
            "content": "Hi David,\n\nThank you thank you thank you for working on this and providing tests - your efforts are very much appreciated!\n\nFor deprecation of facet.date, I suspect it probably shouldn't be deprecated until a fully-fledged replacement is ready, ported and committed, but if SOLR-1240 can functionally slot-in (including the 'NOW' stuff in SOLR-1729), that's great.\n\nMany thanks,\nPeter "
        },
        {
            "author": "Bill Bell",
            "id": "comment-12994853",
            "date": "2011-02-15T15:57:40+0000",
            "content": "1 vote for 3.1 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13020165",
            "date": "2011-04-15T02:15:04+0000",
            "content": "I finally got a chacne to really look at this today.   The deprecation of date faceting is obviously a big factor here \u2013 but thanks to the work peter and david already did, i was able to figure out how to enhance the code and tests to also work for the newer generic range faceting (believe it or not, i've never looked at the internals of any of the distributed components until now)\n\nOverview of changes in this patch...\n\n\tapplies to trunk (but i expect backporting this to 3x should be straight forward)\n\teliminate some warnings by using stronger typing on the generics\n\trename some variables for simpler readability\n\teliminate the new public methods in ResponseBuilder, use new properties in FacetInfo instead (this seems more consistent with the existing distributed faceting code)\n\tadds facet_range support\n\tadds some more tests\n\n\n\n...any comments/concerns?  \n\n(Peter: was there any particular reason you chose to update ResponseBuilder directly instead of using FacetInfo? i want to make sure i'm not overlooking something) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13020449",
            "date": "2011-04-15T22:01:25+0000",
            "content": "I just realized SOLR-1729 is only on trunk, and backporting it to 3x may be kind of invasive.\n\nso i'm removing 3.2 from the fix version for now .. we can revisit it, but i'm concerned about including this patch as it stands w/o the universal \"NOW\" concept.\n\nobviously that patch can still be used on 3x w/o the distributed NOW support (particularly now that it works with facet.range) but we might want to make it more assertive about dealing with shards that return inconsistent ranges "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-13020802",
            "date": "2011-04-17T14:28:02+0000",
            "content": "Updating ResponseBuilder rather than FacetInfo really came from tracing the references through the hierarchy - so, I don't think anything is missed by moving this to FacetInfo props, and should provide better encapsulation.\nDeprecating data faceting in favour of generic range faceting should be fine, as long as there exists a clear path to easily move from 'the way we were' with date facets, to 'the way it will be' (range faceting). It would be a shame to break clients that rely on the existing date facet parameters/syntax, so I guess if they're mapped to range (I think some of this is in 3.x already?), that would be good.\n\nThanks "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13022378",
            "date": "2011-04-20T21:34:23+0000",
            "content": "Deprecating data faceting in favour of generic range faceting should be fine...\n\nthat ship has sailed, it was already deprecated in 3.1. facet.range supports everything facet.date supported, with nearly identical query params, and a slightly different response structure (it's now easier to parse because the counts are distinct from the meta values)\n\nmy point was just that since facet.date has alreayd been deprecated, it made no sense to add distributed support for it unlesswe also added distributed support for facet.rang \u2013 but since you already did the work, there's no harm in having both.\n\nI've committed this to trunk for 4x.  as i mentioned before, i'm leary of backporting to 3x unless SOLR-1729 is also backported.  so i'm resolving for now and we can reopen if/when that happens\n\nThanks to Peter and David for their perseverance and prodding (and tests!) to help get this committed.  \n\nCommitted revision 1095517.\n\n "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-13022697",
            "date": "2011-04-21T09:23:44+0000",
            "content": "Yes, the deprecation story makes sense.\n\nRegarding SOLR-1729, I'm pretty sure this already works for 3x (it was originally created on/for the 3x branch). I guess Yonik's NOW changes were destined for trunk, but I've been using the current SOLR-1729 patch on 3x branch and is working fine in production environments.\n\nThanks\nPeter "
        },
        {
            "author": "David Smiley",
            "id": "comment-13028028",
            "date": "2011-05-03T05:29:36+0000",
            "content": "IMO this can go on branch 3x.  Users don't have to use \"NOW\" in date faceting, they can use an explicit date assuming they are even doing date faceting (vs numeric range faceting). And even if \"NOW\" is used, the bug condition is relatively minor (no crash or exception, just some slightly off numbers) and furthermore limited to a small time window assuming you round it like \"NOW/DAY\". "
        },
        {
            "author": "Rohit Gupta",
            "id": "comment-13116610",
            "date": "2011-09-28T17:10:54+0000",
            "content": "I am trying to apply the patch to solr 3.1 and solr 3.4 but in both case its not working. While applying the patch on 3.1 I am getting the error that the patch is outdated.\n\n\nWhile in 3.4 the folder structure is different. "
        },
        {
            "author": "Rohit Gupta",
            "id": "comment-13116715",
            "date": "2011-09-28T19:26:40+0000",
            "content": "I guess i was working on the wrong file(under tags), checked out branch with the revision specified in the branch field and works fine.\n\nBut I am migrating with 3.4 as suggested on the solr site, how can I get a patch for that version. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13117606",
            "date": "2011-09-29T21:00:12+0000",
            "content": "Rohit:\n\nWhat didn't work when you just tried to apply the patch to 3.4? "
        },
        {
            "author": "Rohit Gupta",
            "id": "comment-13119143",
            "date": "2011-10-03T05:46:26+0000",
            "content": "Hi Erick,\n\nI am not sure, but I think the package structure has changes in 3.4, that what is causing the problem. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13119325",
            "date": "2011-10-03T14:15:33+0000",
            "content": "Right, that's true. I think there's a script for changing patches to reflect the new packaging, see: https://issues.apache.org/jira/browse/SOLR-2452. It should be located in <solr_home>/dev-tools/scripts. But I confess I haven't used it so you probably want to look at it first.\n\nErick "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13186915",
            "date": "2012-01-16T13:34:17+0000",
            "content": "I am planning to backport this to 3.x any objections - I will look into SOLR-1729 too "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-13187108",
            "date": "2012-01-16T19:29:30+0000",
            "content": "The original patch was actually for 3.x, so it should be relatively easy to port it \nI suppose there's likely to be some code changes 'post 3.x', so these would be the only thing to bear in mind when [re] back porting.\n\nMany thanks!\nPeter "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13187546",
            "date": "2012-01-17T09:18:05+0000",
            "content": "here is a patch created from my merge. I checked other commits to FacetComponent to make sure I got all the subsequent changes that are relevant. \n\nI think this is ready, I will commit later today "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13187548",
            "date": "2012-01-17T09:18:31+0000",
            "content": "reopen for backport to 3x "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13187554",
            "date": "2012-01-17T09:34:12+0000",
            "content": "backported to 3x in revision 1232359 "
        },
        {
            "author": "Alejandro Marqu\u00e9s",
            "id": "comment-13256419",
            "date": "2012-04-18T10:19:36+0000",
            "content": "Should the facet.mincount parameter work with distributed date faceting?\n\nI have two Solr servers (http://localhost:8090/solr1/ and http://localhost:8090/solr2/) each one with part of the docs from exampledocs\n\nIf I make the next query:\nhttp://localhost:8090/solr1/select/?q=*%3A*&version=2.2&start=0&rows=10&indent=on&facet=true&facet.mincount=1&facet.date=manufacturedate_dt&facet.date.start=2005-05-01T00:00:00Z&facet.date.end=2006-05-00T00:00:00Z&facet.date.gap=%2B1MONTH\n\nThe mincount parameter works properly, however, if I add the shards parameter (shards=localhost:8090/solr1,localhost:8090/solr2 or even shards=localhost:8090/solr1):\nhttp://localhost:8090/solr1/select/?q=*%3A*&version=2.2&start=0&rows=10&indent=on&shards=localhost:8090/solr1,localhost:8090/solr2&facet=true&facet.mincount=1&facet.date=manufacturedate_dt&facet.date.start=2005-05-01T00:00:00Z&facet.date.end=2006-05-00T00:00:00Z&facet.date.gap=%2B1MONTH\n\nmincount parameter is being ignored retrieving facets with 0 results.\n\nShould the mincount parameter work as in the single search or it is not supported for date facets?\n\nThanks in advance "
        }
    ]
}