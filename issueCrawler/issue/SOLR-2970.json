{
    "id": "SOLR-2970",
    "title": "CSV ResponseWriter returns fields defined as stored=false in schema",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "Response Writers"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "1. Add &wt=csv to a query\n2. You get columns for non-stored fields",
    "attachments": {
        "SOLR-2970-3x-fixtest.patch": "https://issues.apache.org/jira/secure/attachment/12511009/SOLR-2970-3x-fixtest.patch",
        "SOLR-2970.patch": "https://issues.apache.org/jira/secure/attachment/12507540/SOLR-2970.patch",
        "SOLR-2970-3x.patch": "https://issues.apache.org/jira/secure/attachment/12510987/SOLR-2970-3x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13170277",
            "date": "2011-12-15T15:22:41+0000",
            "content": "This simple patch (for trunk) fixes it "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13170302",
            "date": "2011-12-15T15:52:46+0000",
            "content": "The other side of the coin is that if a client asks for x,y,z they may be expecting those columns in that order.\n\nIMO, the problem is more about CSV not having a native representation for null/missing (i.e. if you ask for a sparse field, you will get zero length strings for the missing values too). "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13170307",
            "date": "2011-12-15T16:01:02+0000",
            "content": "The same solution seems to be valid for 3.x.\nI don't see any side effects of always skipping fields which are not stored? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13170315",
            "date": "2011-12-15T16:10:53+0000",
            "content": "Take the example:\n\nQuery: http://localhost:8983/solr/ac/select/?q=*%3A*&wt=csv\nid,subtext,textphon,textng,score,action,value,textnge,type,textsuggest,popularity\na1,\"Born 1898, author of Narnia\",,,1023.9588,search,author_facet,,author,C.S. Lewis,256\na2,Swedish fake author,,,799.97003,search,author_facet,,author,Carl Larsson,200\na3,Norwegian famous author,,,359.992,search,author_facet,,author,Petter Dass,90\n\n\n\nFields textphon, textng and textnge are not stored. After the patch, we get:\n\nQuery: http://localhost:8983/solr/ac/select/?q=*%3A*&wt=csv\nid,subtext,score,action,value,type,textsuggest,popularity\na1,\"Born 1898, author of Narnia\",1023.9588,search,author_facet,author,C.S. Lewis,256\na2,Swedish fake author,799.97003,search,author_facet,author,Carl Larsson,200\na3,Norwegian famous author,359.992,search,author_facet,author,Petter Dass,90\n\n\n\nYou can still ask for specific fields in any order:\n\n\nQuery: http://localhost:8983/solr/ac/select?q=*:*&wt=csv&fl=type,subtext,id\ntype,subtext,id\nauthor,\"Born 1898, author of Narnia\",a1\nauthor,Swedish fake author,a2\nauthor,Norwegian famous author,a3\n\n\n\nIs it ever correct to return non-stored fields? "
        },
        {
            "author": "Chris A. Mattmann",
            "id": "comment-13170357",
            "date": "2011-12-15T17:28:14+0000",
            "content": "I ran into this when I was putting together the original patch for SOLR-1925, and believe that indeed the order of a field requested is important. And yes, as Yonik put it, CSV doesn't seem to have a native representation for null.\n\nWhat about a configuration parameter (perhaps attached to the request) to identify a \"placeholder\" for missing or non-stored values? We see this a lot in science data, when the data quality flag specifies that we should put in a fill value. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13170377",
            "date": "2011-12-15T18:04:24+0000",
            "content": "Query: http://localhost:8983/solr/ac/select/?q=*%3A*&wt=csv\n\nAh, thanks for the example Jan.  I didn't realize those non-stored fields were returned by default!\n\nIs it ever correct to return non-stored fields?\n\nIf the user explicitly asks for the non-stored field, it can be OK to still return it.  It's less a matter of correctness and more a matter of what's most useful.\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13170440",
            "date": "2011-12-15T19:38:43+0000",
            "content": "So there are two distinct issues here\nA) CSV attempts to return fields which are not stored - which is bound to always return blank value\nB) When returning a stored field which has no value (null) for a document, there is no way to distinguish that from the empty string case\n\nI think B) should have its own JIRA.\n\nFor A), I still cannot see any usecase where you want to ask for a non-stored field in the CSV output, even if you ask for it explicitly - since it will always be null/empty. If you ask the XML or JSON writer for a non-stored field, you never get it no matter what - it formally does not exist in this context. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13170876",
            "date": "2011-12-16T10:01:24+0000",
            "content": "Created SOLR-2974 for B)\n\nI see that today you can explicitly specify non-existing fields in field-list and they will all end up in the response, e.g. &wt=csv&fl=id,type,foo,nonexisting\n\nIf this is useful in some cases then let's continue to support it - coupled with the improvement in SOLR-2974\nBut the default case when \"fl\" is not specified, or specified as \"*\", CSV writer should output only the stored fields. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13170888",
            "date": "2011-12-16T10:30:07+0000",
            "content": "Updated patch which will respect explicit \"fl\" but output only stored fields for the default or \"*\" case "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13170890",
            "date": "2011-12-16T10:33:29+0000",
            "content": "Hmm, seems as the CSV writer does not support returning functions as fields either.\nhttp://localhost:8983/solr/ac/select/?q=*%3A*&wt=xml&fl=log(popularity) works but\nhttp://localhost:8983/solr/ac/select/?q=*%3A*&wt=csv&fl=log(popularity) does not\nBut I can spin that off as a separate issue as well, and focus on fixing this one bug "
        },
        {
            "author": "Dan Hertz",
            "id": "comment-13171585",
            "date": "2011-12-17T15:00:26+0000",
            "content": "When using fl=*, is it possible to include an option to output all the field data (stored and not stored)? I ask, because the CSV ResponseWriter is very useful to back up and/or transfer data between solr indexes and spreadsheets/databases.\n\nPerhaps default to stored fields, but provide an option to export all fields (without having to specify each field name)? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13171948",
            "date": "2011-12-18T22:12:13+0000",
            "content": "Dan, the problem is that non-stored fields are not stored  So they cannot be output. Even if it could be possible to un-invert indexed fields, that is, IMHO, not a task for the CSV writer. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13186789",
            "date": "2012-01-16T09:04:09+0000",
            "content": "Updated patch with test case.\nThink this approaches ready for commit. Comments? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13186796",
            "date": "2012-01-16T09:14:36+0000",
            "content": "Added CHANGES.txt entry to patch (assuming it will be committed in 3.x) "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13188483",
            "date": "2012-01-18T14:53:53+0000",
            "content": "Patch for 3.x "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13188486",
            "date": "2012-01-18T14:57:17+0000",
            "content": "Committed to trunk and 3x "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13188532",
            "date": "2012-01-18T16:20:29+0000",
            "content": "jan, I think we just had a failure related to this commit can you look into this: https://builds.apache.org/job/Lucene-Solr-tests-only-3.x-java7/1570/ "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13188540",
            "date": "2012-01-18T16:44:07+0000",
            "content": "Looking... "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13188552",
            "date": "2012-01-18T17:03:43+0000",
            "content": "Committed the attached fix to the test. On my MacBook, the order of fields for \"*\" was different than on build server, so test passed locally.. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13239983",
            "date": "2012-03-27T21:51:56+0000",
            "content": "Committed test fix to trunk, rev 1306025 "
        }
    ]
}