{
    "id": "LUCENE-7826",
    "title": "Support to unload FST's .tip into memory,make load or unload configuable!.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "New Feature",
        "components": [
            "core/FSTs",
            "core/store"
        ],
        "fix_versions": []
    },
    "description": "in real case,we use lucene index many documents. But some machine have not much memory.,once documents reach up to tens of billion,lucene can not start because of no enough memory. Most of the memry cost is FST;s .tip content.\nSo I want to pull my change on lucene core to make load FST's .tip into memory become configurable!\nWhat do you think?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16008210",
            "date": "2017-05-12T14:23:40+0000",
            "content": "You could do this in your own custom codec, but I don't think we should expose this behavior in Lucene's default codec.  Typically the RAM usage for .tip is manageable.\n\nCan you describe the 10s of billions of documents that you are indexing?  You need to use sharding for that (a single Lucene index can index at most ~2.1 billion documents).  What is the total unique term account?\n\nAnother thing you could do is increase the block size of the on-disk terms (see the minTermBlockSize and maxTermBlockSize params to Lucene50PostingsFormat.  These are easy knobs to turn to decrease heap needed by .tip, but increase term lookup cost (since more scanning will be needed). ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16009585",
            "date": "2017-05-14T04:05:52+0000",
            "content": "I disagree on an \"unload\" as the issue title suggests but I do think the FST should be lazily loaded to be more NRT friendly, and to use less memory when some fields aren't always accessed.  I recently did this in fact and could share the patch.  It'd be a separate issue I think. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-16009946",
            "date": "2017-05-15T03:05:12+0000",
            "content": "@Michael McCandless \nthanks\uff0c\u201dsee the minTermBlockSize and maxTermBlockSize params to Lucene50PostingsFormat\u201c is a good idea.. Thanks very much! \n\nBut if I want to move data to cold data machine. I could not change the builed ffst content because such 2 params is used for write.\nMay be I should change for myself!\n\n@David Smiley\ncould you share your patch? ",
            "author": "Xibao"
        }
    ]
}