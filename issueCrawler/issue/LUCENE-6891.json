{
    "id": "LUCENE-6891",
    "title": "Lucene60DimensionalFormat should use block prefix coding when writing values",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "Today we write the whole value for every doc in one leaf block in the BKD tree, but that's crazy because the whole point of that leaf block is all the docs inside it have values that are very close together.\n\nSo I changed this to write the common prefix for the whole block up front in each block.  This requires more index-time and search-time work, but gives nice index size reductions:\n\nOn the 2D (London, UK) lat/lon benchmark:\n\n\tIndexing time was a wee bit slower (743 -> 747 seconds)\n\tIndex size was ~11% smaller (704 MB -> 630 MB)\n\tQuery time was ~7% slower (2.84 sec -> 3.05 sec)\n\tHeap usage is the same\n\n\n\nOn the 1D (just \"lat\" from the above test) benchmark:\n\n\tIndexing time was a wee bit slower (363 -> 364 sec)\n\tIndex size was ~23% smaller (472 MB -> 363 MB)\n\tQuery time was a wee bit slower (5.39 -> 5.41 sec)\n\tHeap usage is the same\n\n\n\nIndex time can be a bit slower since there are two passes now per leaf block (first to find the common prefix per dimension, and second pass must then strip those prefixes).\n\nQuery time is slower because there's more work per hit that needs value filtering, i.e. collating the suffixes onto the prefixes, per dimension.  This affects 2D much more than 1D because 1D has fewer leaf blocks that need filtering (typically 0, 1 or 2, unless there are many duplicate values in the index).\n\nI suspect the index size savings is use-case dependent, e.g. if you index a bunch of ipv4 addresses along with a few ipv6 addresses, you'd probably see sizable savings.\n\nI also suspect the more docs you index, the greater the savings, because the cells will generally be smaller.\n\nNet/net I think the opto is worth it, even if it slows query time a bit.",
    "attachments": {
        "LUCENE-6891.patch": "https://issues.apache.org/jira/secure/attachment/12771721/LUCENE-6891.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15000244",
            "author": "Michael McCandless",
            "date": "2015-11-11T11:11:41+0000",
            "content": "Patch, tests/precommit passes, I think it's ready. "
        },
        {
            "id": "comment-15008442",
            "author": "ASF subversion and git services",
            "date": "2015-11-17T10:22:28+0000",
            "content": "Commit 1714749 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1714749 ]\n\nLUCENE-6891: use prefix coding when writing dimensional values in each leaf block "
        }
    ]
}