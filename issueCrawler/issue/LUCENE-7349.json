{
    "id": "LUCENE-7349",
    "title": "NIOFS and SimpleFSDirectory may leak files if Channel#size() throws an exception",
    "details": {
        "resolution": "Not A Problem",
        "affect_versions": "6.0,                                            6.1",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.1.1",
            "6.2"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "We call Channel#size() inside the NIOFSIndexInput ctor but ignore the fact that it can throw an IOException. I ran into this due to a ClosedByInterrupt exception which we explicitly state don't support. This can also happen due to \nan IOException and we should at least not leak a file handle in such a case.",
    "attachments": {
        "LUCENE-7349.patch": "https://issues.apache.org/jira/secure/attachment/12812145/LUCENE-7349.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15341568",
            "author": "Robert Muir",
            "date": "2016-06-21T11:04:51+0000",
            "content": "I don't think the test is correct: it interrupts (which closes, no leak!). Its just that MockFS is confused, as it does not support this interrupting. close() is called on a then already-closed handle, which does nothing, except then mockfs is \"aware\" of it.\n\nI do think that the code change is correct: size() can throw an exception for other reasons. "
        },
        {
            "id": "comment-15341573",
            "author": "Simon Willnauer",
            "date": "2016-06-21T11:07:46+0000",
            "content": "sorry for bothering "
        }
    ]
}