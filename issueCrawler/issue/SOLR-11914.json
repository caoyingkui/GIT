{
    "id": "SOLR-11914",
    "title": "Remove/move questionable SolrParams methods",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrJ"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Map<String, Object> getAll(Map<String, Object> sink, Collection<String> params) \nIs only used by the CollectionsHandler, and has particular rules about how it handles multi-valued data that make it not very generic, and thus I think doesn't belong here.  Furthermore the existence of this method is confusing in that it gives the user another choice against it use versus toMap (there are two overloaded variants).\n\nSolrParams toFilteredSolrParams(List<String> names)\nIs only called in one place, and something about it bothers me, perhaps just the name or that it ought to be a view maybe.\n\nstatic Map<String,String> toMap(NamedList params)\nIsn't used and I don't like it; it doesn't even involve a SolrParams!  Legacy of 2006.\n\nstatic Map<String,String[]> toMultiMap(NamedList params)\nIt doesn't even involve a SolrParams! Legacy of 2006 with some updates since. Used in some places. Perhaps should be moved to NamedList as an instance method.",
    "attachments": {
        "SOLR-11914.patch": "https://issues.apache.org/jira/secure/attachment/12919219/SOLR-11914.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-16T13:05:17+0000",
            "content": "Here's a patch.\n\n\ttoMap, toMultiMap: Marked deprecated. There is some code affected in streaming expressions: FacetStream, SqlStream, TimeSeriesStream, GatherNodesStream. Most of the cases here looked very odd to me \u2013 a params was being converted to a Map to a NamedList and then back to a SolrParams. Oooookaaay. Dennis Gove could you take a look? You touched some of this before. I removed that round-tripping, and in several places took advantage of the new SolrParams.stream() method.\n\ttoFilteredSolrParams: Marked deprecated. Modified the only caller in SolrCore.preDecorateResponse to do filtering on the fly via a SolrParams inner class impl. The notion of filtering params based on the param name does sound useful but I think it could be added in a better way in the future as a view and with a more flexible predicate.\n\tgetAll: Marked deprecated. Copied these to CollectionsHandler as static package-protected methods called \"copy\". I moved the test to TestCollectionAPIs.java which is a so-so spot (none others in the package looked better); I didn't feel like creating a new test class just for this test.\n\t\n\t\tCollectionsHandler.forEach: removed this utility method which I added a month or two ago. Now that SolrParams implement Iterable, the desire for this utility is low.\n\t\n\t\n\ttoSolrParams(NamedList): Marked deprecated and moved the implementation to NamedList as an instance method. The impl now redirects to NamedList. I left a nocommit to remind me to adjust all callers (of which there are a ton \u2013 40?) but didn't want to make this patch hard to read. I added some javadocs to toSolrParams... the null handling seems inconsistent.\n\tMapWriter: added some docs & comments technically unrelated to the issue\n\n\n\nNoble Paul I'd appreciate a review since I know you were involved in some of these methods. ",
            "author": "David Smiley",
            "id": "comment-16439410"
        },
        {
            "date": "2018-04-16T23:50:56+0000",
            "content": "I agree with\u00a0David Smiley - the code in the streaming classes\u00a0appears to be an oddly round-about way of doing things. The changes you've made here appear to be a much better approach. ",
            "author": "Dennis Gove",
            "id": "comment-16440179"
        },
        {
            "date": "2018-04-21T04:11:55+0000",
            "content": "The latest patch adds a tiny bit more comments, and I adjusted all callers of SolrParams.toSolrParams(nl) to instead call nl.toSolrParams() (which is a ton of places). \u00a0I plan to commit early next week. ",
            "author": "David Smiley",
            "id": "comment-16446623"
        },
        {
            "date": "2018-04-22T00:50:03+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 3 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m 37s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m 31s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m 31s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 24s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 11s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 11s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   0m 45s \n  clustering in the patch passed.  \n\n\n +1 \n  unit  \n   0m 35s \n  langid in the patch passed.  \n\n\n -1 \n  unit  \n  55m 17s \n  core in the patch failed.  \n\n\n +1 \n  unit  \n   4m 36s \n  solrj in the patch passed.  \n\n\n  \n   \n  69m 18s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.AutoAddReplicasPlanActionTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11914 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12920134/SOLR-11914.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 8f296d0 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_152 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/64/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/64/testReport/ \n\n\n modules \n C: solr/contrib/clustering solr/contrib/langid solr/core solr/solrj U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/64/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16447054"
        },
        {
            "date": "2018-04-23T07:36:31+0000",
            "content": "+1 David Smiley ",
            "author": "Noble Paul",
            "id": "comment-16447676"
        },
        {
            "date": "2018-04-23T17:26:56+0000",
            "content": "Commit 1409ab8f84ab0949b1da095f03dc94d3b74db5cf in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1409ab8 ]\n\nSOLR-11914: Deprecated some SolrParams methods.\n\n\ttoSolrParams(nl) moved to a NamedList method, which is more natural.\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16448504"
        },
        {
            "date": "2018-04-23T17:27:33+0000",
            "content": "Commit 9e36c51e6575a8d750ddc62683c528df197f2833 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9e36c51 ]\n\nSOLR-11914: Deprecated some SolrParams methods.\n\n\ttoSolrParams(nl) moved to a NamedList method, which is more natural.\n\n\n\n(cherry picked from commit 1409ab8) ",
            "author": "ASF subversion and git services",
            "id": "comment-16448505"
        },
        {
            "date": "2018-04-23T17:37:04+0000",
            "content": "I'm unsure of what to do RE master branch.  I could commit their removal here & now.  If so, I could add an upgrade note to 8.0, or simply not bother; the loss of the methods is no big deal.  Or do nothing at all now, waiting till some future 8.0 upgrade to remove all deprecated stuff en-masse. ",
            "author": "David Smiley",
            "id": "comment-16448525"
        }
    ]
}