{
    "id": "SOLR-9187",
    "title": "Support dates and booleans in /export handler, support boolean DocValues fields",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Since these can be DV fields it seems like it should. The first-level problem is that SortingResponseWriter doesn't check for date types as a legal export value. Whether there are repercussions elsewhere I don't know yet.",
    "attachments": {
        "SOLR-9187.patch": "https://issues.apache.org/jira/secure/attachment/12808436/SOLR-9187.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-04T17:18:59+0000",
            "author": "Erick Erickson",
            "content": "Assigned to myself, but if anyone else wants to pick it up feel free. ",
            "id": "comment-15315581"
        },
        {
            "date": "2016-06-06T00:55:50+0000",
            "author": "Erick Erickson",
            "content": "While looking at this I didn't see any reason the booleans shouldn't be exportable too, so while I was in the code for Dates I added Booleans. ",
            "id": "comment-15316101"
        },
        {
            "date": "2016-06-06T18:28:00+0000",
            "author": "Erick Erickson",
            "content": "Running through precommit and test now, I think it's ready if I get through those. ",
            "id": "comment-15316931"
        },
        {
            "date": "2016-06-07T04:58:51+0000",
            "author": "Erick Erickson",
            "content": "There was a problem with the previous patch, this one fixes it.\n\nI'm probably going to let this settle for a day or so then check it in unless there are objections. ",
            "id": "comment-15317852"
        },
        {
            "date": "2016-06-11T18:09:35+0000",
            "author": "Erick Erickson",
            "content": "Alan Woodward: I'm about to commit this patch and running afoul of  SOLR-9176. \n\nThe root is this line in SimpleFacets:\n       /* Always use filters for booleans... we know the number of values is very small. */\n       if (type instanceof BoolField) \n\nFor a DV-only field it defaults to FacetMethod.ENUM which doesn't work.\n\nI can get around it by something like this (still testing):\n       if (type instanceof BoolField && (field.indexed() == true || field.hasDocValues() == false)) \n\nI'm always suspicious of increasingly complex tests like this. So my question is whether this optimization should be removed? Or just keep it with additional clauses? I'm coming down on the side of leaving it in, but wanted to get your thoughts (or anyone else who wants to chime in of course).\n\nThe other thing I wanted to check is whether it's better to compute facets from the indexed values or the DV fields when both are set. My supposition is that the ENUM method on the indexed fields is the better choice since it'll then cache the results.\n ",
            "id": "comment-15325985"
        },
        {
            "date": "2016-06-11T18:36:09+0000",
            "author": "Erick Erickson",
            "content": "All tests pass now, I'll be checking it in sometime this afteroon ",
            "id": "comment-15326005"
        },
        {
            "date": "2016-06-11T23:05:51+0000",
            "author": "Alan Woodward",
            "content": "I think that code was always there, it's just been moved into its own method.  Your solution sounds reasonable though. ",
            "id": "comment-15326073"
        },
        {
            "date": "2016-06-12T00:33:40+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 79d1b8c22768b6c902a4e880698733277796820c in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=79d1b8c ]\n\nSOLR-9187: Support dates and booleans in /export handler, support boolean DocValues fields ",
            "id": "comment-15326106"
        },
        {
            "date": "2016-06-12T00:35:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f1c74bb250fb285b9fb2fe1e96a361fd0ed92ab2 in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f1c74bb ]\n\nSOLR-9187: Support dates and booleans in /export handler, support boolean DocValues fields ",
            "id": "comment-15326108"
        },
        {
            "date": "2016-06-12T00:38:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 844ca4a348e282b5f857aa7ce4de6f9781766ef9 in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=844ca4a ]\n\nSOLR-9187: Support dates and booleans in /export handler, support boolean DocValues fields ",
            "id": "comment-15326109"
        },
        {
            "date": "2016-06-12T00:54:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bc86c1015c96a1764ae0909bac256ee2cd498dd0 in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bc86c10 ]\n\nSOLR-9187: Support dates and booleans in /export handler, support boolean DocValues fields ",
            "id": "comment-15326113"
        },
        {
            "date": "2016-06-12T02:01:43+0000",
            "author": "Erick Erickson",
            "content": "Also fixes SOLR-7264 ",
            "id": "comment-15326138"
        },
        {
            "date": "2016-08-26T14:00:42+0000",
            "author": "Michael McCandless",
            "content": "Bulk close resolved issues after 6.2.0 release. ",
            "id": "comment-15439051"
        },
        {
            "date": "2016-09-07T17:18:23+0000",
            "author": "Colvin Cowie",
            "content": "Hi, I've just picked up 6.2.0. It seems that the change to toExternal() in BoolField now means that booleans without DocValues return null, which then turns into Boolean.FALSE in toObject() regardless of whether the value is true or false.\n\ne.g. with this schema, facet counts are correct, the returned values are wrong.\n\n<field name=\"f_EVE64\" type=\"boolean\" indexed=\"true\" stored=\"true\" required=\"false\" multiValued=\"false\"/>\n<fieldType name=\"boolean\" class=\"solr.BoolField\" sortMissingLast=\"true\"/>\n\n\n\n\"response\":{\"numFound\":2,\"start\":0,\"maxScore\":1.0,\"docs\":[\n      {\n        \"id\":\"124\",\n        \"f_EVE64\":false,\n        \"_version_\":1544828487600177152},\n      {\n        \"id\":\"123\",\n        \"f_EVE64\":false,\n        \"_version_\":1544828492458229760}]\n  },\n  \"facet_counts\":{\n    \"facet_queries\":{},\n    \"facet_fields\":{\n      \"f_EVE64\":[\n        \"false\",1,\n        \"true\",1]},\n\n\nCould toExternal() perhaps fallback to how it originally behaved? e.g.\n\nif (f.binaryValue() == null) {\n      return indexedToReadable(f.stringValue());\n}\n\n ",
            "id": "comment-15471202"
        },
        {
            "date": "2016-09-08T13:16:29+0000",
            "author": "Pavan Shetty",
            "content": "As suggested in devel mailing list i am updating this here...\n\nBinary Response Writer Issue in solr version 6.2.0 :\n\nI downloaded solr version 6.2.0 (6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:41:37) and installed my core.\n\nIn my schema.xml i have an field like following :\n\n<field name=\"stock_status\" type=\"boolean\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>\n\nNow i am accessing this field using SolrJ (6.1.0). But i am always getting false value for above field even though it contains true boolean value. This is happening for all boolean fields.\n\nhttp://localhost:8983/solr...wt=javabin&version=2 HTTP/1.1\n\nIt is working fine in other response writer.\n\nIf i change the solr version to 6.1.0, with same SolrJ, it starts working. So clearly this is a bug in version 6.2.0.\n\nThis is my first mail and issue report, so please correct me.\n\nThanks,\n\nPavan ",
            "id": "comment-15473838"
        },
        {
            "date": "2016-09-08T17:27:55+0000",
            "author": "Hoss Man",
            "content": "Since this change has already been released, commenting here on bugs it may have introduced isn't the best idea \u2013 too easy to get lost, and any fix has to be tracked in a new issue anyway.\n\nI've created SOLR-9490 to track these new reports from Colvin Cowie and Pavan Shetty ",
            "id": "comment-15474479"
        }
    ]
}