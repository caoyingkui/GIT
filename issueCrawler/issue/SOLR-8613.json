{
    "id": "SOLR-8613",
    "title": "SolrJ JDBC - SQL queries with limit do not fail when a bad column is provided",
    "details": {
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "This was found exporting SOLR-8602. Without a limit, the query fails with unable to read the first tuple due to a bad column being provided. When using a limit, there is no error and the column is returned as all nulls.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-28T13:58:24+0000",
            "author": "Kevin Risden",
            "content": "This isn't requires for SOLR-8502, but just added there to keep track of it. Can be moved out to SOLR-8125 if it makes sense. ",
            "id": "comment-15121502"
        },
        {
            "date": "2016-01-28T14:09:58+0000",
            "author": "Kevin Risden",
            "content": "See comments around here: https://issues.apache.org/jira/browse/SOLR-8602?focusedCommentId=15120719&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15120719 ",
            "id": "comment-15121520"
        },
        {
            "date": "2016-01-29T15:09:46+0000",
            "author": "Kevin Risden",
            "content": "Joel Bernstein This might be related to the differences with and without a limit. SOLR-8285 ",
            "id": "comment-15123557"
        },
        {
            "date": "2016-01-29T15:37:20+0000",
            "author": "Joel Bernstein",
            "content": "SOLR-8285 will clear up some of the differences around NULL field handling. But invalid fields will continue to be accepted by the /select handler. The /export handler has a step which throws an exception for an invalid field. The /select handler quietly ignores invalid fields, either by design or just because it's always been that way. ",
            "id": "comment-15123605"
        },
        {
            "date": "2016-01-29T15:42:26+0000",
            "author": "Joel Bernstein",
            "content": "I think the resolution of this ticket will involve checking for valid fields during the SQL parse. We can easily do this once the SQL Catalog is put in place to support the JDBC driver and the eventual SQL Optimizer. ",
            "id": "comment-15123614"
        },
        {
            "date": "2017-03-05T01:31:44+0000",
            "author": "Kevin Risden",
            "content": "I think this is resolved with SOLR-8593. Calcite is checking valid columns before executing the plan. ",
            "id": "comment-15896012"
        }
    ]
}