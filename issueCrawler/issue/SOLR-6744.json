{
    "id": "SOLR-6744",
    "title": "fl renaming / alias of uniqueKey field generates null pointer exception in SolrCloud configuration",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.2.1",
            "6.3",
            "7.0"
        ],
        "affect_versions": "4.10.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "If trying to rename the uniqueKey field using 'fl' in a distributed query (ie: SolrCloud config), an NPE is thrown.\n\nThe workarround is to redundently request the uniqueKey field, once with the desired alias, and once with the original name\n\nExample...\n\nhttp://localhost:8983/solr/cloudcollection/select?q=*%3A*&wt=xml&indent=true&fl=key:id\n\nWork around:\n\nhttp://localhost:8983/solr/cloudcollection/select?q=*%3A*&wt=xml&indent=true&fl=key:id&fl=id\n\nError w/o work around...\n\n\n<response><lst name=\"responseHeader\"><int name=\"status\">500</int><int name=\"QTime\">11</int><lst name=\"params\"><str name=\"q\">*:*</str><str name=\"indent\">true</str><str name=\"fl\">key:id</str><str name=\"wt\">xml</str></lst></lst><lst name=\"error\"><str name=\"trace\">java.lang.NullPointerException\n\tat org.apache.solr.handler.component.QueryComponent.returnFields(QueryComponent.java:1257)\n\tat org.apache.solr.handler.component.QueryComponent.handleRegularResponses(QueryComponent.java:720)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:695)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:324)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1967)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:777)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:418)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:207)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:368)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:942)\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1004)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)\n\tat org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n\tat java.lang.Thread.run(Thread.java:745)\n</str><int name=\"code\">500</int></lst></response>",
    "attachments": {
        "SOLR-6744.patch": "https://issues.apache.org/jira/secure/attachment/12821042/SOLR-6744.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-12-04T21:48:47+0000",
            "author": "Hoss Man",
            "content": "i edited the summary & description a bit to fix up the formatting and point out the workaround (as noted by Jeon Woosung on the mailing list)\n\nthe root issue is that the the distributed processing code relies on the uniqueKey field to rectify & merge information from each shard across the various distributed process from shards, and the NPE comes from trying to do this lookup on the uniqueKey field name. ",
            "id": "comment-14234685"
        },
        {
            "date": "2015-02-13T21:31:20+0000",
            "author": "Aaron McMillin",
            "content": "I have this problem in 4.9.0 ",
            "id": "comment-14320790"
        },
        {
            "date": "2015-09-25T10:08:25+0000",
            "author": "laigood",
            "content": "I have this problem in 5.2.1 ",
            "id": "comment-14907886"
        },
        {
            "date": "2016-07-29T13:56:38+0000",
            "author": "Andrew Kuchling",
            "content": "The bug is still present in Solr 6.1. ",
            "id": "comment-15399369"
        },
        {
            "date": "2016-07-29T17:58:21+0000",
            "author": "Mike Drob",
            "content": "Attaching a patch for master that addresses this + includes a test.\n\nHoss Man - can you take a look? ",
            "id": "comment-15399761"
        },
        {
            "date": "2016-07-29T18:51:58+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I think the fix looks good. Maybe it would be better to check for the rename of the id field outside of the loop instead?\nAlso, it would be nice if the test would also validate that the \"id\" field is not included in the returned fields. ",
            "id": "comment-15399848"
        },
        {
            "date": "2016-07-29T19:29:08+0000",
            "author": "Mike Drob",
            "content": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe - I'll update the test to check for no id field returned.\n\nMoving the check outside of the loop helped me to catch another bug where we could rename id to something else, and then another field to id and Solr would still be looking in the wrong place.\n\nThere are some comments in SolrReturnFields that indicate multiple renames might be possible, like id->foo->bar. I wasn't able to figure out the syntax for making that happen but that might be something worth investigating in a follow-on issue. Seems esoteric enough to safely skip for now. ",
            "id": "comment-15399891"
        },
        {
            "date": "2016-07-29T19:55:58+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Many tests fail with the latest patch with NPE. Would you mind taking a look at that?\n\nSeems esoteric enough to safely skip for now.\nYes, I agree ",
            "id": "comment-15399919"
        },
        {
            "date": "2016-08-25T22:08:43+0000",
            "author": "Mike Drob",
            "content": "Had time to get back to this, the null pointer was caused by a missing initialization on the rename map. This should be good now. ",
            "id": "comment-15437806"
        },
        {
            "date": "2016-08-26T23:11:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b3d12d265bb389f1ec239e8a96f044f7b89c01b1 in lucene-solr's branch refs/heads/master from Tomas Fernandez Lobbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b3d12d2 ]\n\nSOLR-6744: Consider uniqueKey rename when handling shard responses in distributed search ",
            "id": "comment-15440145"
        },
        {
            "date": "2016-08-26T23:27:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 43d03430b9d63d77168098a72ff219b746aa3939 in lucene-solr's branch refs/heads/branch_6x from Tomas Fernandez Lobbe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=43d0343 ]\n\nSOLR-6744: Consider uniqueKey rename when handling shard responses in distributed search ",
            "id": "comment-15440184"
        },
        {
            "date": "2016-08-26T23:29:03+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Thanks Mike! I did a trivial change (only assign the \"renameFields\" if there are any renames) and committed.  ",
            "id": "comment-15440188"
        },
        {
            "date": "2016-09-12T01:36:34+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Re-opening to backport to 6.2.1 ",
            "id": "comment-15482744"
        },
        {
            "date": "2016-09-21T03:03:28+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.2.1 release ",
            "id": "comment-15508550"
        },
        {
            "date": "2016-10-21T07:16:47+0000",
            "author": "Klas Gesias",
            "content": "I found something that may be related to this. Tested this standalone for 4.10.4 and 4.8.1. Solrcloud 4.10.4.\n\nI made some slight simplifications on the queries to make it easier to read. \n\nIn single core mode I can do this, have an alias with id and pick the name aswell\nhttp://localhost:8983/solr/select/?q=*.*&fl=id:django_id&fl=name\n\nGives: \n{\"responseHeader\":{\"params\":{\"q\":\":\",\"fl\":\"id:django_id\"} ,\"response\":{\"numFound\":8101, \"docs\":[{\"id\":\"2875206\", \"name\": \"some_name\"},{\"id\":\"2875205\", \"name\": \"other_name\"} ]}\n\nWhen in SolrCloud mode however I get some behavior I do not really grasp, if I specify only id:django_id I get the fields \nRequest: \nhttp://solrcloud:8988/solr/select/?q=*.*&fl=id:django_id\ngives\n\nResponse:\n{\"responseHeader\":{\"params\":{\"q\":\"*:*\",\"fl\":\"id:django_id\"}},\"response\":{\"numFound\":284,\"start\":0,\"maxScore\":1.0,\"docs\":[{\"id\":\"product.66\"},{\"id\":\"product.69\"}...]}}\nWhere \"product.69\" is really the \"id\" not \"django_id\" which I tried to alias into the \"id\" field. So it totally ignores my alias request. I could type anything after \":\", I could write \"id:spamalot\" and it would still return the \"id\" field and id-value. \n\nBut if I add one or more fl fields when trying to alias the id:django_id, I get no documents at all! I do get hits but I am pretty certain they are not the correct amount and no documents are retrieved. \nRequest:\nhttp://solrcloud:8988/solr/select/?q=*.*&fl=id:django_id&fl=name\n\nResponse:\n{\"responseHeader\":{\"params\":{\"q\":\"*:*\",\"fl\":[\"id:django_id\",\"name\"]}},\"response\":{\"numFound\":274,\"maxScore\":1.0,\"docs\":[]}}\n\nIs this a known and expected behaviour? If I do not use aliases this does not happen at all.  ",
            "id": "comment-15594319"
        },
        {
            "date": "2016-10-21T14:34:24+0000",
            "author": "Mike Drob",
            "content": "Klas Gesias - Yes, I think it's the same issue. There were two parts to this JIRA: field renaming id to something else causes an error, and renaming something else to id returns the wrong results.\n\nAt this point it is a known bug in older versions, and fixed to behave properly in 6.2.1+ ",
            "id": "comment-15595259"
        },
        {
            "date": "2016-10-23T11:19:12+0000",
            "author": "Klas Gesias",
            "content": "Mike Drob I understand, thanks for making the time to come back here and verify! ",
            "id": "comment-15599536"
        }
    ]
}