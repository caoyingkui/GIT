{
    "id": "LUCENE-3256",
    "title": "Consolidate CustomScoreQuery, ValueSourceQuery and BoostedQuery",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Lucene's CustomScoreQuery and Solr's BoostedQuery do essentially the same thing: they boost the scores of Documents by the value from a ValueSource.  BoostedQuery does this in a direct fashion, by accepting a ValueSource. CustomScoreQuery on the other hand, accepts a series of ValueSourceQuerys.  ValueSourceQuery seems to do exactly the same thing as FunctionQuery.\n\nWith Lucene's ValueSource being deprecated / removed, we need to resolve these dependencies and simplify the code.\n\nTherefore I recommend we do the following things:\n\n\n\tMove CustomScoreQuery (and CustomScoreProvider) to the new Queries module and change it over to use FunctionQuerys instead of ValueSourceQuerys.\n\tDeprecate Solr's BoostedQuery in favour of the new CustomScoreQuery.  CSQ provides a lot of support for customizing the scoring process.\n\tMove and consolidate all tests of CSQ and BoostedQuery, to the Queries module and have them test CSQ instead.",
    "attachments": {
        "LUCENE-3256.patch": "https://issues.apache.org/jira/secure/attachment/12484595/LUCENE-3256.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-29T00:18:28+0000",
            "content": "As part of this, I am going to move the seemingly useful FieldScoreQuery to the new module too and change it to work with FunctionQuery and the new ValueSources. ",
            "author": "Chris Male",
            "id": "comment-13056908"
        },
        {
            "date": "2011-06-29T05:34:55+0000",
            "content": "First patch which does the above.  I'm leaving FieldScoreQuery alone since its a little broken and doesn't support Numeric encoded fields.\n\nEverything compiles but some tests fail. ",
            "author": "Chris Male",
            "id": "comment-13057009"
        },
        {
            "date": "2011-06-29T05:35:22+0000",
            "content": "Command for running patch:\n\n\nsvn move lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.java modules/queries/src/java/org/apache/lucene/queries/function/\nsvn move lucene/src/java/org/apache/lucene/search/function/CustomScoreProvider.java modules/queries/src/java/org/apache/lucene/queries/function/\nsvn --parents mkdir modules/queries/src/test/org/apache/lucene/queries/function/\nsvn move lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery.java modules/queries/src/test/org/apache/lucene/queries/function/\n\n ",
            "author": "Chris Male",
            "id": "comment-13057010"
        },
        {
            "date": "2011-06-29T06:14:47+0000",
            "content": "New patch which addresses the scoring problem in BoostedQuery.\n\nEverything compiles and passes. ",
            "author": "Chris Male",
            "id": "comment-13057025"
        },
        {
            "date": "2011-06-29T13:46:15+0000",
            "content": "I'm not sure if we should change the implementation of BoostedQuery to use CustomScoreQuery.  It's going to be slower as it goes through more levels of indirection.  The edismax parser creates BoostedQuery instances (as does the boost qparser), so this is going to be a heavily used implementation and should be optimized.  Having a specific BoosgtedQuery is even nicer for debugging purposes where the toString is simpler and more specific.\n\nActually, looking closer at CustomScoreQuery, I don't even see why it's not more generic... why does it require ValueSourceQueries and not just combine the scores of arbitrary queries?  It already just operates on scorers and doesn't seem to use value sources at all. ",
            "author": "Yonik Seeley",
            "id": "comment-13057232"
        },
        {
            "date": "2011-06-29T22:15:04+0000",
            "content": "\nI'm not sure if we should change the implementation of BoostedQuery to use CustomScoreQuery. It's going to be slower as it goes through more levels of indirection. The edismax parser creates BoostedQuery instances (as does the boost qparser), so this is going to be a heavily used implementation and should be optimized. Having a specific BoosgtedQuery is even nicer for debugging purposes where the toString is simpler and more specific.\n\nVery valid point.  I will make BoostedQuery a 1st class construct.\n\n\nActually, looking closer at CustomScoreQuery, I don't even see why it's not more generic... why does it require ValueSourceQueries and not just combine the scores of arbitrary queries? It already just operates on scorers and doesn't seem to use value sources at all.\n\nFor the life of me I'm sure it used to do just that.  I'll open an issue to make the change.\n\nThanks for your review Yonik! ",
            "author": "Chris Male",
            "id": "comment-13057515"
        },
        {
            "date": "2011-06-30T00:19:10+0000",
            "content": "New patch which incorporates Yonik's thoughts.  BoostedQuery is now a 1st class construct and pushed to the module.  CustomScoreQuery now accepts arbitrary Querys as scorers.\n\nEverything is jigged around a little again, since CSQ isn't specifically tied to FunctionQuery (except on the test level).\n\nCommand is coming up.\n\nThis one is ready to go. ",
            "author": "Chris Male",
            "id": "comment-13057564"
        },
        {
            "date": "2011-06-30T00:19:38+0000",
            "content": "Command for patch is:\n\n\nsvn move lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/src/java/org/apache/lucene/search/function/CustomScoreProvider.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move solr/src/java/org/apache/solr/search/function/BoostedQuery.java modules/queries/src/java/org/apache/lucene/queries/function/\nsvn --parents mkdir modules/queries/src/test/org/apache/lucene/queries/function\nsvn move lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery.java modules/queries/src/test/org/apache/lucene/queries/\n\n ",
            "author": "Chris Male",
            "id": "comment-13057565"
        },
        {
            "date": "2011-06-30T02:31:38+0000",
            "content": "Committed revision 1141366. ",
            "author": "Chris Male",
            "id": "comment-13057581"
        }
    ]
}