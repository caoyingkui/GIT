{
    "id": "LUCENE-7619",
    "title": "Add WordDelimiterGraphFilter",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "6.5",
            "7.0"
        ]
    },
    "description": "Currently, WordDelimiterFilter doesn't try to set the posLen attribute and so it creates graphs like this:\n\n\n\nbut with this patch (still a work in progress) it creates this graph instead:\n\n\n\nThis means (today) positional queries when using WDF at search time are buggy, but since we fixed LUCENE-7603, with this change here you should be able to use positional queries with WDGF.\n\nI'm also trying to produce holes properly (removes logic from the current WDF that swallows a hole when whole token is just delimiters).\n\nSurprisingly, it's actually quite easy to tweak WDF to create a graph (unlike e.g. SynonymGraphFilter) because it's already creating the necessary new positions, and its output graph never has side paths, except for single tokens that skip nodes because they have posLen > 1.  I.e. the only fix to make, I think, is to set posLen properly.  And it really helps that it does its own \"new token buffering + sorting\" already.",
    "attachments": {
        "before.png": "https://issues.apache.org/jira/secure/attachment/12845517/before.png",
        "LUCENE-7619.patch": "https://issues.apache.org/jira/secure/attachment/12845519/LUCENE-7619.patch",
        "after.png": "https://issues.apache.org/jira/secure/attachment/12845518/after.png"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15798017",
            "date": "2017-01-04T11:36:50+0000",
            "content": "Initial dirty, work-in-progress, overly verbose patch ... it's still buggy in some cases but the basic idea is working.  I also moved FlattenGraphFilter under oal.analysis.core from .synonym. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15798952",
            "date": "2017-01-04T18:20:22+0000",
            "content": "Wow, I did not think WDF would ever be fixed to produce correct positions, this is very exciting! ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15810645",
            "date": "2017-01-09T04:27:21+0000",
            "content": "Very cool! ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15818087",
            "date": "2017-01-11T11:44:12+0000",
            "content": "Another iteration ... I think this one is very close, except there are some failing test cases for AnalyzingInfixSuggester.\n\nI changed how WordDelimiterGraphFilter buffers its tokens, to store the absolute start/end position (instead of pos inc) and use that for sorting all buffered tokens before returning them.  I think this simplified the code somewhat.\n\nI also added a fun random test with a slowWDF method that emulates WordDelimiterGraphFilter slowly but hopefuly bug-free and compares it on random strings vs. the real thing.\n\nFinally, I fixed TokenStreamToAutomaton to use the ending posInc, instead of \"cheating\" by looking at the ending offsets. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15818668",
            "date": "2017-01-11T15:47:05+0000",
            "content": "Another iteration; I think it's ready.  I added an option to TS2G to optionally (default off) interpret an ending offset gap as a hole ... ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15826260",
            "date": "2017-01-17T15:38:18+0000",
            "content": "Commit 637915b890d9f0e5cfaa6887609f221029327a25 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=637915b ]\n\nLUCENE-7619: add WordDelimiterGraphFilter (replacing WordDelimiterFilter) to produce a correct token stream graph when splitting words ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15826278",
            "date": "2017-01-17T15:45:46+0000",
            "content": "Commit 4e4ec082caa7c1fc8fca24ddfb6a8633a4ae9506 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4e4ec08 ]\n\nLUCENE-7619: add WordDelimiterGraphFilter (replacing WordDelimiterFilter) to produce a correct token stream graph when splitting words ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15826992",
            "date": "2017-01-17T22:57:43+0000",
            "content": "Commit 0bdcfc291fceab26e1c62a7e9791ce417671eacd in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0bdcfc2 ]\n\nLUCENE-7619: don't let offsets go backwards ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15826995",
            "date": "2017-01-17T23:00:46+0000",
            "content": "Commit 03ffb1287d9908f8e1bb1417b7f18ca4645f209f in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=03ffb12 ]\n\nLUCENE-7619: don't let offsets go backwards ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15888747",
            "date": "2017-02-28T19:40:54+0000",
            "content": "Hello Michael McCandless\n\n+1 \n\nMany thanks for fixing this!\n\nI am using WordDelemeterFilter (which often breaks phrase queries on words with puntuations). I am currently using Lucene 6.4.1 in production. Can you please suggest which classes I should patch on Lucene 6.4.1 to use this feature. Patching just WordDelimiterGraphFilter and using it in token stream instead of WordDelemeterFilter be fine? or there are any other dependent classes which I have to patch (please provide list if there are other classes too) ? \n\nOnce Lucene 6.5 is released i will upgrade to Lucene 6.5 so i will get better tested fix, but for now i would like to patch Lucene 6.4.1 if patch is compitible and simple. ",
            "author": "Jigar Shah"
        },
        {
            "id": "comment-15890134",
            "date": "2017-03-01T13:13:10+0000",
            "content": "Hi Jigar Shah, besides WDGF itself, there have also been a number of changes to the query parser, to properly consume a graph and build the correct queries, e.g. LUCENE-7702, LUCENE-7699, LUCENE-7698, LUCENE-7638, etc.\n\nIt may be simpler for you to test a snapshot build of Lucene 6.5.0? ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15892428",
            "date": "2017-03-02T15:34:38+0000",
            "content": "I will go for snapshot for now. Thanks for suggesting direction \n\nMany Thanks! ",
            "author": "Jigar Shah"
        },
        {
            "id": "comment-16506535",
            "date": "2018-06-08T20:29:24+0000",
            "content": "RE TokenStreamToAutomaton and finalOffsetGapAsHole, shouldn't this be ignored when preservePositionIncrements==false?  In other words, I think finalOffsetGapAsHole should only have an effect when preservePositionIncrements. ",
            "author": "David Smiley"
        }
    ]
}