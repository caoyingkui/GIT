{
    "id": "LUCENE-6769",
    "title": "Various codec formats' testRandomExceptions() are failing with unexpected FileNotFoundException",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "From https://builds.apache.org/job/Lucene-Solr-NightlyTests-5.x/934/ (I'll attach the full Jenkins consoleText, which has a bunch of exception output):\n\n\n  [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLucene46SegmentInfoFormat -Dtests.method=testRandomExceptions -Dtests.seed=DE5D0B60FB3DAD54 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/x1/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=de -Dtests.timezone=America/Sao_Paulo -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.53s J1 | TestLucene46SegmentInfoFormat.testRandomExceptions <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: hit unexpected FileNotFoundException: file=_5k.si\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([DE5D0B60FB3DAD54:B67265A46533F4F4]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deleteFile(IndexFileDeleter.java:753)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deletePendingFiles(IndexFileDeleter.java:530)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.refresh(IndexFileDeleter.java:456)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3680)\n   [junit4]    > \tat org.apache.lucene.index.SerialMergeScheduler.merge(SerialMergeScheduler.java:40)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.maybeMerge(IndexWriter.java:1929)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(IndexWriter.java:4731)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriter$MergePendingEvent.process(DocumentsWriter.java:695)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4757)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4748)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1476)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1254)\n   [junit4]    > \tat org.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions(BaseIndexFileFormatTestCase.java:429)\n   [junit4]    > \tat org.apache.lucene.index.BaseSegmentInfoFormatTestCase.testRandomExceptions(BaseSegmentInfoFormatTestCase.java:48)\n\n[...]\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLucene46FieldInfoFormat -Dtests.method=testRandomExceptions -Dtests.seed=DE5D0B60FB3DAD54 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/x1/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=sr_BA -Dtests.timezone=Asia/Tashkent -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.48s J0 | TestLucene46FieldInfoFormat.testRandomExceptions <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: hit unexpected FileNotFoundException: file=_5k.si\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([DE5D0B60FB3DAD54:B67265A46533F4F4]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deleteFile(IndexFileDeleter.java:753)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deletePendingFiles(IndexFileDeleter.java:530)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.refresh(IndexFileDeleter.java:456)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3680)\n   [junit4]    > \tat org.apache.lucene.index.SerialMergeScheduler.merge(SerialMergeScheduler.java:40)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.maybeMerge(IndexWriter.java:1929)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(IndexWriter.java:4731)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriter$MergePendingEvent.process(DocumentsWriter.java:695)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4757)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4748)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1476)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1254)\n   [junit4]    > \tat org.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions(BaseIndexFileFormatTestCase.java:429)\n   [junit4]    > \tat org.apache.lucene.index.BaseFieldInfoFormatTestCase.testRandomExceptions(BaseFieldInfoFormatTestCase.java:50)\n\n\n\nFrom https://builds.apache.org/job/Lucene-Solr-NightlyTests-5.x/939/ (again, I'll attach the consoleText):\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLucene46SegmentInfoFormat -Dtests.method=testRandomExceptions -Dtests.seed=1A10EDD0B2491A33 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/x1/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=fr -Dtests.timezone=BET -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.20s J2 | TestLucene46SegmentInfoFormat.testRandomExceptions <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: hit unexpected FileNotFoundException: file=_3g.si\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([1A10EDD0B2491A33:723F83142C474393]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deleteFile(IndexFileDeleter.java:753)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deletePendingFiles(IndexFileDeleter.java:530)\n   [junit4]    > \tat org.apache.lucene.index.IndexFileDeleter.deleteNewFiles(IndexFileDeleter.java:733)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.deleteNewFiles(IndexWriter.java:4700)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4218)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3664)\n   [junit4]    > \tat org.apache.lucene.index.SerialMergeScheduler.merge(SerialMergeScheduler.java:40)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.maybeMerge(IndexWriter.java:1929)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(IndexWriter.java:4731)\n   [junit4]    > \tat org.apache.lucene.index.DocumentsWriter$MergePendingEvent.process(DocumentsWriter.java:695)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4757)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4748)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1476)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1254)\n   [junit4]    > \tat org.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions(BaseIndexFileFormatTestCase.java:429)\n   [junit4]    > \tat org.apache.lucene.index.BaseSegmentInfoFormatTestCase.testRandomExceptions(BaseSegmentInfoFormatTestCase.java:48)\n\n\n\nFrom http://jenkins.thetaphi.de/job/Lucene-Solr-5.x-Linux/13710/ (which has since expired on Policeman Jenkins - below is from http://markmail.org/message/dw4hvvpreyr4jimi):\n\n\nBuild: http://jenkins.thetaphi.de/job/Lucene-Solr-5.x-Linux/13710/\nJava: 64bit/jdk1.7.0_80 -XX:+UseCompressedOops -XX:+UseG1GC\n\n1 tests failed.\nFAILED:\norg.apache.lucene.codecs.blocktree.TestLucene40BlockFormat.testRandomExceptions\n\nError Message:\nhit unexpected FileNotFoundException: file=_9.si\n\nStack Trace:\njava.lang.AssertionError: hit unexpected FileNotFoundException: file=_9.si\n\tat __randomizedtesting.SeedInfo.seed([E3D1B260C7119B4B:8BFEDCA4591FC2EB]:0)\n\tat\norg.apache.lucene.index.IndexFileDeleter.deleteFile(IndexFileDeleter.java:753)\n\tat\norg.apache.lucene.index.IndexFileDeleter.deletePendingFiles(IndexFileDeleter.java:530)\n\tat org.apache.lucene.index.IndexFileDeleter.refresh(IndexFileDeleter.java:456)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3680)\n\tat\norg.apache.lucene.index.SerialMergeScheduler.merge(SerialMergeScheduler.java:40)\n\tat org.apache.lucene.index.IndexWriter.maybeMerge(IndexWriter.java:1929)\n\tat\norg.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(IndexWriter.java:4731)\n\tat\norg.apache.lucene.index.DocumentsWriter$MergePendingEvent.process(DocumentsWriter.java:695)\n\tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4757)\n\tat org.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4748)\n\tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1476)\n\tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1254)\n\tat\norg.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions(BaseIndexFileFormatTestCase.java:429)\n\tat\norg.apache.lucene.index.BasePostingsFormatTestCase.testRandomExceptions(BasePostingsFormatTestCase.java:86)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1627)\n\tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:836)\n\tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:872)\n\tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:886)\n\tat\norg.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n\tat\norg.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat\norg.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n\tat\norg.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat\norg.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat\ncom.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n\tat\ncom.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:798)\n\tat\ncom.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:458)\n\tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:845)\n\tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:747)\n\tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:781)\n\tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:792)\n\tat\norg.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat\norg.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n\tat\ncom.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n\tat\ncom.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n\tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat\norg.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n\tat\norg.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat\norg.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat\norg.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n\tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat\ncom.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n\tat java.lang.Thread.run(Thread.java:745)\n\nBuild Log:\n[...truncated 4475 lines...]\n   [junit4] Suite: org.apache.lucene.codecs.blocktree.TestLucene40BlockFormat\n   [junit4]   1> Unexpected exception: dumping fake-exception-log:...\n   [junit4]   1> \n   [junit4]   1> TEST: got expected fake exc:a random IOException (_7.cfe)\n   [junit4]   1> java.io.FileNotFoundException: a random IOException (_7.cfe)\n   [junit4]   1> \tat\norg.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:458)\n   [junit4]   1> \tat\norg.apache.lucene.store.MockDirectoryWrapper.createOutput(MockDirectoryWrapper.java:548)\n   [junit4]   1> \tat\norg.apache.lucene.store.LockValidatingDirectoryWrapper.createOutput(LockValidatingDirectoryWrapper.java:44)\n   [junit4]   1> \tat\norg.apache.lucene.store.TrackingDirectoryWrapper.createOutput(TrackingDirectoryWrapper.java:43)\n   [junit4]   1> \tat\norg.apache.lucene.store.TrackingDirectoryWrapper.createOutput(TrackingDirectoryWrapper.java:43)\n   [junit4]   1> \tat\norg.apache.lucene.codecs.lucene40.Lucene40CompoundWriter.close(Lucene40CompoundWriter.java:163)\n   [junit4]   1> \tat\norg.apache.lucene.codecs.lucene40.Lucene40CompoundReader.close(Lucene40CompoundReader.java:160)\n   [junit4]   1> \tat\norg.apache.lucene.codecs.lucene40.Lucene40CompoundFormat.write(Lucene40CompoundFormat.java:53)\n   [junit4]   1> \tat\norg.apache.lucene.index.IndexWriter.createCompoundFile(IndexWriter.java:4680)\n   [junit4]   1> \tat\norg.apache.lucene.index.DocumentsWriterPerThread.sealFlushedSegment(DocumentsWriterPerThread.java:492)\n   [junit4]   1> \tat\norg.apache.lucene.index.DocumentsWriterPerThread.flush(DocumentsWriterPerThread.java:459)\n   [junit4]   1> \tat\norg.apache.lucene.index.DocumentsWriter.doFlush(DocumentsWriter.java:503)\n   [junit4]   1> \tat\norg.apache.lucene.index.DocumentsWriter.flushAllThreads(DocumentsWriter.java:615)\n   [junit4]   1> \tat\norg.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:423)\n   [junit4]   1> \tat\norg.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:86)\n   [junit4]   1> \tat\norg.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions(BaseIndexFileFormatTestCase.java:459)\n   [junit4]   1> \tat\norg.apache.lucene.index.BasePostingsFormatTestCase.testRandomExceptions(BasePostingsFormatTestCase.java:86)\n   [junit4]   1> \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]   1> \tat\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n   [junit4]   1> \tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]   1> \tat java.lang.reflect.Method.invoke(Method.java:606)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1627)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:836)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:872)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:886)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n   [junit4]   1> \tat\norg.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:798)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:458)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:845)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:747)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:781)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:792)\n   [junit4]   1> \tat\norg.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n   [junit4]   1> \tat\norg.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n   [junit4]   1> \tat\ncom.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n   [junit4]   1> \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   1> \n   [junit4]   2> NOTE: reproduce with: ant test\n-Dtestcase=TestLucene40BlockFormat -Dtests.method=testRandomExceptions\n-Dtests.seed=E3D1B260C7119B4B -Dtests.multiplier=3 -Dtests.slow=true\n-Dtests.locale=en_IE -Dtests.timezone=America/Virgin -Dtests.asserts=true\n-Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.04s J0 | TestLucene40BlockFormat.testRandomExceptions <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: hit unexpected\nFileNotFoundException: file=_9.si\n   [junit4]    > \tat\n__randomizedtesting.SeedInfo.seed([E3D1B260C7119B4B:8BFEDCA4591FC2EB]:0)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexFileDeleter.deleteFile(IndexFileDeleter.java:753)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexFileDeleter.deletePendingFiles(IndexFileDeleter.java:530)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexFileDeleter.refresh(IndexFileDeleter.java:456)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3680)\n   [junit4]    > \tat\norg.apache.lucene.index.SerialMergeScheduler.merge(SerialMergeScheduler.java:40)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexWriter.maybeMerge(IndexWriter.java:1929)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(IndexWriter.java:4731)\n   [junit4]    > \tat\norg.apache.lucene.index.DocumentsWriter$MergePendingEvent.process(DocumentsWriter.java:695)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4757)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexWriter.processEvents(IndexWriter.java:4748)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1476)\n   [junit4]    > \tat\norg.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1254)\n   [junit4]    > \tat\norg.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions(BaseIndexFileFormatTestCase.java:429)\n   [junit4]    > \tat\norg.apache.lucene.index.BasePostingsFormatTestCase.testRandomExceptions(BasePostingsFormatTestCase.java:86)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: leaving temporary files on disk at:\n/home/jenkins/workspace/Lucene-Solr-5.x-Linux/lucene/build/backward-codecs/test/J0/temp/lucene.codecs.blocktree.TestLucene40BlockFormat_E3D1B260C7119B4B-001\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene53): {},\ndocValues:{}, sim=RandomSimilarityProvider(queryNorm=false,coord=crazy):\n{body=DFR I(F)1, f_DOCS_AND_FREQS_AND_POSITIONS=IB LL-D3(800.0), field=DFR\nI(ne)B1, f_DOCS=DFR I(F)LZ(0.3), f_DOCS_AND_FREQS=DFR I(n)B2,\nf_DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS=DFR I(ne)L1, titleTokenized=IB\nLL-L2}, locale=en_IE, timezone=America/Virgin\n   [junit4]   2> NOTE: Linux 3.19.0-26-generic amd64/Oracle Corporation 1.7.0_80\n(64-bit)/cpus=12,threads=1,free=196792272,total=525336576\n   [junit4]   2> NOTE: All tests run in this JVM: [TestReuseDocsEnum,\nTestMaxPositionInOldIndex, TestLucene40TermVectorsFormat,\nTestLucene40SegmentInfoFormat, TestLucene42NormsFormat,\nTestBackwardsCompatibility, TestBitVector, TestLucene40PostingsFormat,\nTestLucene40BlockFormat]\n   [junit4] Completed [19/30] on J0 in 3.12s, 31 tests, 1 failure <<< FAILURES!\n\n\n\nMichael McCandless previously looked at a couple of these: http://markmail.org/message/ogykur7itwihn36q and http://markmail.org/message/tmh2ul74esybvwvr.\n\nMichael McCandless noted when fixing one from July (from https://mail-archives.apache.org/mod_mbox/lucene-dev/201507.mbox/%3CCAL8PwkYXTs8cxgS1r_uBoFx6M7EvJezVsRg__64y7ZWO8PmzTA@mail.gmail.com%3E - oddly this email is not findable in markmail.org's archive):\n\n\nI just committed a fix.  This was caused by a new assert from\nLUCENE-6616, basically making IndexWriter more picky such that a codec\nis not allowed to have created a file if in fact it didn't create it.\n\nIn this case the SimpleTextSIFormat was claiming to have created a\nfile (si.addFile) before createOutput succeeded, but then createOutput\nhit an exc (and the Directory impl took care of removing the file\nitself)...",
    "attachments": {
        "Lucene-Solr-NightlyTests-5.x-934-consoleText.txt": "https://issues.apache.org/jira/secure/attachment/12752799/Lucene-Solr-NightlyTests-5.x-934-consoleText.txt",
        "Lucene-Solr-NightlyTests-5.x-939-consoleText.txt": "https://issues.apache.org/jira/secure/attachment/12752798/Lucene-Solr-NightlyTests-5.x-939-consoleText.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14717026",
            "author": "Steve Rowe",
            "date": "2015-08-27T16:44:46+0000",
            "content": "attaching two runs' consoleText-s "
        },
        {
            "id": "comment-14717047",
            "author": "Michael McCandless",
            "date": "2015-08-27T16:54:03+0000",
            "content": "oddly this email is not findable in markmail.org's archive\n\nI've also seen some recent emails missing from markmail.org ... bad.  We should ask them to re-index  "
        },
        {
            "id": "comment-14717083",
            "author": "Steve Rowe",
            "date": "2015-08-27T17:12:32+0000",
            "content": "On the ASF Infra mailing list, several Apache project members have noted the problem.  Three days ago one of them mentioned that five days previously they sent a message to the MarkMail discussion mailing list (i.e. eight days ago), but at that point there had been no reply.   The last archived post for that list is from four years ago: http://markmail.org/search/list:org.markmail.discuss.\n\nAnd the \"Feedback\" link is broken.\n\nRIP MarkMail?  That would be sad. "
        },
        {
            "id": "comment-14717143",
            "author": "Michael McCandless",
            "date": "2015-08-27T17:42:55+0000",
            "content": "RIP MarkMail? That would be sad.\n\nOh no that would be sad. "
        },
        {
            "id": "comment-14717145",
            "author": "ASF subversion and git services",
            "date": "2015-08-27T17:43:43+0000",
            "content": "Commit 1698201 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1698201 ]\n\nLUCENE-6769: don't claim to have created a file until createOutput in fact succeeded "
        },
        {
            "id": "comment-14717147",
            "author": "Michael McCandless",
            "date": "2015-08-27T17:44:29+0000",
            "content": "I can't repro these failures, but I think I found the cause of the Lucene40/Lucene46 failures, I just committed a fix ... but let's leave this open to see if Jenkins agrees. "
        },
        {
            "id": "comment-14717200",
            "author": "Steve Rowe",
            "date": "2015-08-27T18:11:14+0000",
            "content": "I sent the following through MarkLogic's \"Contact Us\" form (http://www.marklogic.com/company/contact-us/):\n\n\nThe feedback link on Markmail.org <http://markmail.org/docs/feedback.xqy> is broken: I get a 500 Internal Server Error.  Nobody from MarkLogic is responding on the Markmail.org discussion list, and the most recent post in the archive for that list is from four years ago <http://markmail.org/search/list:org.markmail.discuss>.  I'm attempting to contact you through this form because I can't find another alternative.\n\nThe problem several people on projects at the Apache Software Foundation have noted, myself included (I'm an Apache member and a member of the Lucene PMC): Markmail.org is missing some emails from its archive.  Here's one example I noticed, dated 14 July 2015, that should be in the org.apache.lucene.java-dev archive, but is not: \n\n<https://mail-archives.apache.org/mod_mbox/lucene-dev/201507.mbox/%3CCAL8PwkYXTs8cxgS1r_uBoFx6M7EvJezVsRg__64y7ZWO8PmzTA@mail.gmail.com%3E>\n\nMaybe you need to reindex? "
        },
        {
            "id": "comment-14717427",
            "author": "Michael McCandless",
            "date": "2015-08-27T20:09:30+0000",
            "content": "Thanks Steve Rowe! "
        },
        {
            "id": "comment-14719324",
            "author": "Steve Rowe",
            "date": "2015-08-28T15:10:39+0000",
            "content": "ASF Jenkins found a failure in TestIndexWriterOutOfFileDescriptors https://builds.apache.org/job/Lucene-Solr-Tests-5.x-Java7/3463/ from a random IOException, so I initially thought that it might not be related to this issue:\n\n\n[junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestIndexWriterOutOfFileDescriptors -Dtests.method=test -Dtests.seed=E47F9D72A7E8EF8E -Dtests.multiplier=2 -Dtests.slow=true -Dtests.locale=fr_CH -Dtests.timezone=America/Miquelon -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] ERROR   2.50s J0 | TestIndexWriterOutOfFileDescriptors.test <<<\n   [junit4]    > Throwable #1: java.lang.IllegalStateException: this writer hit an unrecoverable error; cannot commit\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([E47F9D72A7E8EF8E:6C2BA2A809148276]:0)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.java:2791)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:2977)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.shutdown(IndexWriter.java:1080)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1123)\n   [junit4]    > \tat org.apache.lucene.index.TestIndexWriterOutOfFileDescriptors.test(TestIndexWriterOutOfFileDescriptors.java:87)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.io.IOException: a random IOException (_r_Lucene50_0.tim)\n   [junit4]    > \tat org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)\n   [junit4]    > \tat org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)\n   [junit4]    > \tat org.apache.lucene.codecs.blocktree.BlockTreeTermsReader.<init>(BlockTreeTermsReader.java:150)\n   [junit4]    > \tat org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.fieldsProducer(Lucene50PostingsFormat.java:446)\n   [junit4]    > \tat org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader.<init>(PerFieldPostingsFormat.java:261)\n   [junit4]    > \tat org.apache.lucene.codecs.perfield.PerFieldPostingsFormat.fieldsProducer(PerFieldPostingsFormat.java:341)\n   [junit4]    > \tat org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:104)\n   [junit4]    > \tat org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)\n   [junit4]    > \tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:145)\n   [junit4]    > \tat org.apache.lucene.index.ReadersAndUpdates.getReaderForMerge(ReadersAndUpdates.java:617)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4020)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3664)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n   [junit4]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n   [junit4]   2> NOTE: leaving temporary files on disk at: /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-Tests-5.x-Java7/lucene/build/core/test/J0/temp/lucene.index.TestIndexWriterOutOfFileDescriptors_E47F9D72A7E8EF8E-001\n   [junit4]   2> NOTE: test params are: codec=DummyCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=DUMMY, chunkSize=1, maxDocsPerChunk=6, blockSize=4), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=DUMMY, chunkSize=1, blockSize=4)), sim=RandomSimilarityProvider(queryNorm=true,coord=yes): {titleTokenized=DFR I(F)B2, body=DFR GZ(0.3)}, locale=fr_CH, timezone=America/Miquelon\n   [junit4]   2> NOTE: Linux 3.13.0-52-generic amd64/Oracle Corporation 1.7.0_72 (64-bit)/cpus=4,threads=1,free=157853504,total=274726912\n   [junit4]   2> NOTE: All tests run in this JVM: [TestNativeFSLockFactory, TestSetOnce, TestTerms, TestByteBlockPool, TestFieldType, TestStringHelper, TestIndexFileDeleter, TestIntBlockPool, TestSpanNotQuery, TestSnapshotDeletionPolicy, TestUnicodeUtil, TestDeterminism, TestFieldReuse, TestIOUtils, TestTerm, TestSegmentReader, TestCustomSearcherSort, TestCodecHoldsOpenFiles, TestDisjunctionMaxQuery, TestRegexpRandom2, TestByteArrayDataInput, TestPersistentSnapshotDeletionPolicy, TestAllFilesHaveChecksumFooter, TestRollingBuffer, TestManyFields, TestSimilarityBase, TestUniqueTermCount, TestDocBoost, Test2BPostings, TestIndexWriterDeleteByQuery, TestIndexWriterConfig, TestAllFilesHaveCodecHeader, TestBlendedTermQuery, TestIndexWriterOnJRECrash, TestLucene50FieldInfoFormat, TestDirectoryReader, TestShardSearching, TestTermScorer, TestDocValuesScoring, Test2BBinaryDocValues, TestWindowsMMap, TestNeverDelete, TestDocValues, TestMaxPosition, TestPayloadNearQuery, TestDoc, TestNumericRangeQuery64, TestCollectionUtil, TestDocument, TestSpansAdvanced, TestFilterIterator, TestDirectory, TestSpanCollection, TestFilterDirectory, TestDefaultSimilarity, TestSearchForDuplicates, TestIndexWriter, TestPositionIncrement, TestParallelTermEnum, TestPrefixFilter, TestMultiPhraseEnum, TestVirtualMethod, TestBlockPostingsFormat2, TestIndexWriterCommit, TestBinaryDocValuesUpdates, TestIndexWriterDelete, TestUTF32ToUTF8, TestSpanTermQuery, TestPerFieldDocValuesFormat, TestAddIndexes, TestMultiMMap, TestSearcherManager, TestDeletionPolicy, TestIndexWriterMergePolicy, TestTimeLimitingCollector, TestTopDocsMerge, TestIndexWriterUnicode, TestArrayUtil, TestPhraseQuery, TestComplexExplanations, TestPagedBytes, TestSegmentTermDocs, TestPerFieldPostingsFormat2, TestIndexWriterOnDiskFull, TestCustomNorms, TestPostingsOffsets, TestTransactionRollback, TestFlex, TestRAMDirectory, TestMultiPhraseQuery, TestLazyProxSkipping, TestOmitPositions, TestParallelLeafReader, TestBytesRefHash, TestIndexInput, TestNearSpansOrdered, TestScorerPerf, TestSpansAdvanced2, TestBooleanQuery, TestSortRandom, TestSentinelIntSet, TestMultiLevelSkipList, TestCheckIndex, TestFieldValueFilter, TestSpanMultiTermQueryWrapper, TestCompiledAutomaton, TestPrefixQuery, TestTotalHitCountCollector, TestBooleanScorer, TestSpanFirstQuery, TestNoMergeScheduler, TestIndexWriterLockRelease, TestRollback, TestCloseableThreadLocal, MultiCollectorTest, TestSimpleAttributeImpl, TestPositiveScoresOnlyCollector, TestReusableStringReader, TestLucene50CompoundFormat, TestLucene53NormsFormat, TestCodecUtil, TestDocInverterPerFieldErrorInfo, TestExitableDirectoryReader, TestFilterDirectoryReader, TestIndexReaderClose, TestIndexWriterFromReader, TestIndexWriterOutOfFileDescriptors]\n   [junit4] Completed [359/411] on J0 in 2.51s, 1 test, 1 error <<< FAILURES!\n\n\n\nA single run on my OS X laptop didn't fail, but the first beasting round with the above seed (dups=4, iters=10) failed twice with FileNotFoundException:\n\n\n  [beaster]   2> NOTE: reproduce with: ant test  -Dtestcase=TestIndexWriterOutOfFileDescriptors -Dtests.method=test -Dtests.seed=E47F9D72A7E8EF8E -Dtests.multiplier=2 -Dtests.slow=true -Dtests.locale=fr_CH -Dtests.timezone=America/Miquelon -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n  [beaster] [10:54:05.256] ERROR   5.33s J2 | TestIndexWriterOutOfFileDescriptors.test {#0 seed=[E47F9D72A7E8EF8E:6C2BA2A809148276]} <<<\n  [beaster]    > Throwable #1: java.lang.IllegalStateException: this writer hit an unrecoverable error; cannot commit\n  [beaster]    > \tat __randomizedtesting.SeedInfo.seed([E47F9D72A7E8EF8E:6C2BA2A809148276]:0)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.java:2791)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:2977)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.shutdown(IndexWriter.java:1080)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1123)\n  [beaster]    > \tat org.apache.lucene.index.TestIndexWriterOutOfFileDescriptors.test(TestIndexWriterOutOfFileDescriptors.java:87)\n  [beaster]    > \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  [beaster]    > \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n  [beaster]    > \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n  [beaster]    > \tat java.lang.reflect.Method.invoke(Method.java:606)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1627)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:836)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:872)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:886)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n  [beaster]    > \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:798)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:458)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:845)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:747)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:781)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:792)\n  [beaster]    > \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n  [beaster]    > \tat java.lang.Thread.run(Thread.java:745)\n  [beaster]    > Caused by: java.io.FileNotFoundException: a random IOException (_n.nvm)\n  [beaster]    > \tat org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:458)\n  [beaster]    > \tat org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)\n  [beaster]    > \tat org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)\n  [beaster]    > \tat org.apache.lucene.store.MockDirectoryWrapper.openChecksumInput(MockDirectoryWrapper.java:1009)\n  [beaster]    > \tat org.apache.lucene.codecs.lucene53.Lucene53NormsProducer.<init>(Lucene53NormsProducer.java:58)\n  [beaster]    > \tat org.apache.lucene.codecs.lucene53.Lucene53NormsFormat.normsProducer(Lucene53NormsFormat.java:82)\n  [beaster]    > \tat org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:111)\n  [beaster]    > \tat org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)\n  [beaster]    > \tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:145)\n  [beaster]    > \tat org.apache.lucene.index.ReadersAndUpdates.getReaderForMerge(ReadersAndUpdates.java:617)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4020)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3664)\n  [beaster]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n  [beaster]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n  [beaster]   2> NOTE: leaving temporary files on disk at: /Users/sarowe/svn/lucene/dev/branches/branch_5x/lucene/build/core/test/J2/temp/lucene.index.TestIndexWriterOutOfFileDescriptors_E47F9D72A7E8EF8E-001\n  [beaster]   2> NOTE: test params are: codec=DummyCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=DUMMY, chunkSize=1, maxDocsPerChunk=6, blockSize=4), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=DUMMY, chunkSize=1, blockSize=4)), sim=RandomSimilarityProvider(queryNorm=true,coord=yes): {body=DFR GZ(0.3), titleTokenized=DFR I(F)B2}, locale=fr_CH, timezone=America/Miquelon\n  [beaster]   2> NOTE: Mac OS X 10.10.5 x86_64/Oracle Corporation 1.7.0_71 (64-bit)/cpus=8,threads=1,free=150186288,total=211812352\n  [beaster]   2> NOTE: All tests run in this JVM: [TestIndexWriterOutOfFileDescriptors]\n  [beaster]   2> NOTE: reproduce with: ant test  -Dtestcase=TestIndexWriterOutOfFileDescriptors -Dtests.method=test -Dtests.seed=E47F9D72A7E8EF8E -Dtests.multiplier=2 -Dtests.slow=true -Dtests.locale=fr_CH -Dtests.timezone=America/Miquelon -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n  [beaster] [10:54:54.695] ERROR   2.34s J2 | TestIndexWriterOutOfFileDescriptors.test {#0 seed=[E47F9D72A7E8EF8E:6C2BA2A809148276]} <<<\n  [beaster]    > Throwable #1: java.lang.IllegalStateException: this writer hit an unrecoverable error; cannot commit\n  [beaster]    > \tat __randomizedtesting.SeedInfo.seed([E47F9D72A7E8EF8E:6C2BA2A809148276]:0)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.java:2791)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:2977)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.shutdown(IndexWriter.java:1080)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1123)\n  [beaster]    > \tat org.apache.lucene.index.TestIndexWriterOutOfFileDescriptors.test(TestIndexWriterOutOfFileDescriptors.java:87)\n  [beaster]    > \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  [beaster]    > \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n  [beaster]    > \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n  [beaster]    > \tat java.lang.reflect.Method.invoke(Method.java:606)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1627)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:836)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:872)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:886)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n  [beaster]    > \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:798)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:458)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:845)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:747)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:781)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:792)\n  [beaster]    > \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n  [beaster]    > \tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n  [beaster]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:365)\n  [beaster]    > \tat java.lang.Thread.run(Thread.java:745)\n  [beaster]    > Caused by: java.io.FileNotFoundException: a random IOException (_n.nvm)\n  [beaster]    > \tat org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:458)\n  [beaster]    > \tat org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)\n  [beaster]    > \tat org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)\n  [beaster]    > \tat org.apache.lucene.store.MockDirectoryWrapper.openChecksumInput(MockDirectoryWrapper.java:1009)\n  [beaster]    > \tat org.apache.lucene.codecs.lucene53.Lucene53NormsProducer.<init>(Lucene53NormsProducer.java:58)\n  [beaster]    > \tat org.apache.lucene.codecs.lucene53.Lucene53NormsFormat.normsProducer(Lucene53NormsFormat.java:82)\n  [beaster]    > \tat org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:111)\n  [beaster]    > \tat org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)\n  [beaster]    > \tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:145)\n  [beaster]    > \tat org.apache.lucene.index.ReadersAndUpdates.getReaderForMerge(ReadersAndUpdates.java:617)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4020)\n  [beaster]    > \tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3664)\n  [beaster]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:588)\n  [beaster]    > \tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:626)\n  [beaster]   2> NOTE: leaving temporary files on disk at: /Users/sarowe/svn/lucene/dev/branches/branch_5x/lucene/build/core/test/J2/temp/lucene.index.TestIndexWriterOutOfFileDescriptors_E47F9D72A7E8EF8E-002\n  [beaster]   2> NOTE: test params are: codec=DummyCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=DUMMY, chunkSize=1, maxDocsPerChunk=6, blockSize=4), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=DUMMY, chunkSize=1, blockSize=4)), sim=RandomSimilarityProvider(queryNorm=true,coord=yes): {body=DFR GZ(0.3), titleTokenized=DFR I(F)B2}, locale=fr_CH, timezone=America/Miquelon\n  [beaster]   2> NOTE: Mac OS X 10.10.5 x86_64/Oracle Corporation 1.7.0_71 (64-bit)/cpus=8,threads=1,free=128790824,total=211812352\n  [beaster]   2> NOTE: All tests run in this JVM: [TestIndexWriterOutOfFileDescriptors, TestIndexWriterOutOfFileDescriptors]\n\n\n\nSo that's weird. "
        },
        {
            "id": "comment-14720278",
            "author": "Michael McCandless",
            "date": "2015-08-28T17:24:06+0000",
            "content": "Thanks Steve Rowe, this is a different failure: that FNFE is a randomly created one by this test.  Really the test should use MockDirectoryWrapper.FakeIOException to prevent confusion like this. "
        },
        {
            "id": "comment-14720283",
            "author": "Michael McCandless",
            "date": "2015-08-28T17:26:53+0000",
            "content": "Actually, this is MockDirectoryWrapper.maybeThrowIOExceptionOnOpen, and it looks like it's intentionally throwing FNFE or NSFE to tickle and code we have that specifically handles these exceptions ... so we should leave it.  But still this failure is different from the original ones on this issue ... "
        },
        {
            "id": "comment-14974940",
            "author": "Steve Rowe",
            "date": "2015-10-26T20:13:41+0000",
            "content": "Never got a response from them, but somebody else at the ASF asked MarkLogic about the situation on Twitter and got this reply: https://twitter.com/wikier/status/643682546551779328 "
        },
        {
            "id": "comment-14976072",
            "author": "Michael McCandless",
            "date": "2015-10-27T09:24:00+0000",
            "content": "Thanks for the update Steve Rowe. "
        }
    ]
}