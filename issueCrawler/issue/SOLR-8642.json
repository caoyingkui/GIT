{
    "id": "SOLR-8642",
    "title": "SOLR allows creation of collections with invalid names",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "6.0",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Some of my colleagues and I recently noticed that the CREATECOLLECTION API will create a collection even when invalid characters are present in the name.\n\nFor example, consider the following reproduction case, which involves creating a collection with a space in its name:\n\n\n$ <clean checkout of SOLR master/trunk>\n$ bin/solr start -e cloud -noprompt\n    ...\n$ curl -i -l -k -X GET \"http://localhost:8983/solr/admin/collections?action=CREATE&name=getting+started&numShards=2&replicationFactor=2&maxShardsPerNode=2&collection.configName=gettingstarted\"\nHTTP/1.1 200 OK\nContent-Type: application/xml; charset=UTF-8\nTransfer-Encoding: chunked\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">299</int></lst><lst name=\"failure\"><str>org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException:Error from server at http://127.0.1.1:8983/solr: Error CREATEing SolrCore 'getting started_shard2_replica2': Unable to create core [getting started_shard2_replica2] Caused by: Invalid core name: 'getting started_shard2_replica2' Names must consist entirely of periods, underscores and alphanumerics</str><str>org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException:Error from server at http://127.0.1.1:7574/solr: Error CREATEing SolrCore 'getting started_shard2_replica1': Unable to create core [getting started_shard2_replica1] Caused by: Invalid core name: 'getting started_shard2_replica1' Names must consist entirely of periods, underscores and alphanumerics</str><str>org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException:Error from server at http://127.0.1.1:7574/solr: Error CREATEing SolrCore 'getting started_shard1_replica1': Unable to create core [getting started_shard1_replica1] Caused by: Invalid core name: 'getting started_shard1_replica1' Names must consist entirely of periods, underscores and alphanumerics</str><str>org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException:Error from server at http://127.0.1.1:8983/solr: Error CREATEing SolrCore 'getting started_shard1_replica2': Unable to create core [getting started_shard1_replica2] Caused by: Invalid core name: 'getting started_shard1_replica2' Names must consist entirely of periods, underscores and alphanumerics</str></lst>\n</response>\n$ \n$ curl -i -l -k -X GET \"http://localhost:8983/solr/admin/collections?action=CLUSTERSTATUS&wt=json&indent=true\"\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=UTF-8\nTransfer-Encoding: chunked\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":6},\n  \"cluster\":{\n    \"collections\":{\n     ...\n      \"getting started\":{\n        \"replicationFactor\":\"2\",\n        \"shards\":{\n          \"shard1\":{\n            \"range\":\"80000000-ffffffff\",\n            \"state\":\"active\",\n            \"replicas\":{}},\n          \"shard2\":{\n            \"range\":\"0-7fffffff\",\n            \"state\":\"active\",\n            \"replicas\":{}}},\n        \"router\":{\"name\":\"compositeId\"},\n        \"maxShardsPerNode\":\"2\",\n        \"autoAddReplicas\":\"false\",\n        \"znodeVersion\":1,\n        \"configName\":\"gettingstarted\"},\n    \"live_nodes\":[\"127.0.1.1:8983_solr\",\n      \"127.0.1.1:7574_solr\"]}}\n\n\n\nThe commands/responses above suggest that Solr creates the collection without checking the name.  It then goes on to create the cores for the collection, which fails and returns the error seen above.\n\nI verified this by doing a curl -i -l -k \"http://localhost:8983/solr/admin/cores; as expected the cores were not actually created.  (This is probably thanks to Erick's work on SOLR-8308).\n\nThis bug is a problem because it will create collections which can never be backed up with actual cores.\n\nSeems like the same name-verification that 8308 added to cores should also be applied to collections.",
    "attachments": {
        "SOLR-8642.patch": "https://issues.apache.org/jira/secure/attachment/12786558/SOLR-8642.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-04T14:39:56+0000",
            "author": "Jason Gerlowski",
            "content": "I plan on adding a patch to fix this issue later on today. ",
            "id": "comment-15132401"
        },
        {
            "date": "2016-02-04T15:41:09+0000",
            "author": "Shawn Heisey",
            "content": "Technically speaking, we do not have any name enforcement (things like collections, cores, fields).  We have a list of recommendations, but I do not know how well these are relayed in the documentation.\n\nI believe that there should be strict enforcement of valid characters in identifiers.  See SOLR-8110. ",
            "id": "comment-15132456"
        },
        {
            "date": "2016-02-04T16:48:07+0000",
            "author": "Jason Gerlowski",
            "content": "Oh hmm.  That's a little surprising, given the error message that gets spat out by the create-core failure:\n\n\"Invalid core name: 'getting started_shard2_replica2' Names must consist entirely of periods, underscores and alphanumerics\"\n\n(text taken from description above, bolding added for emphasis)\n\nThe message above seems to imply that this is a hard requirement, and not just a recommendation (for cores at least).  This might be a recent development though. (edit: it appears this check/message is recent.  Was added 2 days ago in SOLR-8308).  Regardless of the current behavior, I share your opinion that these should be requirements. ",
            "id": "comment-15132556"
        },
        {
            "date": "2016-02-04T16:51:13+0000",
            "author": "Shawn Heisey",
            "content": "Interesting.  I was not aware that any enforcement had been added.  Solr is updated constantly by people all over the world, though, so sometimes things slip in that I do not notice. ",
            "id": "comment-15132559"
        },
        {
            "date": "2016-02-04T17:01:55+0000",
            "author": "Erick Erickson",
            "content": "Getting something half-done then failing when it's preventable is silly. re: the discussion in 8110 I don't even really see a reason to wait for collection names. We aren't breaking existing installs, just erroring out early on create statements.\n\nSo in the Collections API, we have\nCREATE\nCREATEALIAS.\n\nI don't see any problem with taking the regex defined in SOLR-8308 and using it for name validation in the above two methods at least.\n\nProbably want to move it into some utility class.\n ",
            "id": "comment-15132586"
        },
        {
            "date": "2016-02-04T17:17:15+0000",
            "author": "Jason Gerlowski",
            "content": "Agreed; it seems trappy to let this behavior stay as is.\n\nI planned on doing exactly what Erick suggested above, on master, and branch_5x.  Was aiming to get to it when I get off work later.\n\nDo we also want to make sure these are requirements for the v2/ APIs as well?  To be honest I'm not familiar enough with them to say how identifiers are treated there (they might already have strict-enforcement of identifiers).  Or maybe the code path is shared, and there's really no distinction here.  Shouldn't be tough to look up, but I can't get to it right now.  Just thought I'd raise the question in the meantime. ",
            "id": "comment-15132618"
        },
        {
            "date": "2016-02-05T20:51:36+0000",
            "author": "Jason Gerlowski",
            "content": "First attempt at a fix.\n\nA few comments:\n\n\tpulled the identifier-validation logic into a separate class (had to tweak the message a bit to make it more generic)\n\tadded tests to TestCollectionAPI.java.  Not sure this is the best place, but it does the job.  Still getting used to figuring out where tests belong.\n\thaven't yet looked into whether this has any interaction with the v2 APIs.\n\n ",
            "id": "comment-15134954"
        },
        {
            "date": "2016-02-05T21:38:26+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for the patch Jason.\n\nHere's some feedback:\n\n\tWhy don't we just throw SolrException from validateCoreName instead?\n\tIn CollectionsHandler, we don't need another wrapper method if we do what I've suggested in the point above.\n\tJust a minor suggestion, can you log the core/collection name in square brackets?\n\n\n\nThe rest looks fine to me.\nI am not really familiar with the v2 APIs at this point and haven't looked at what needs to change but I can take a look at that as well unless someone who's familiar with that confirms that it wouldn't impact v2. ",
            "id": "comment-15135056"
        },
        {
            "date": "2016-02-05T22:10:22+0000",
            "author": "Jason Gerlowski",
            "content": "Thanks for the quick feedback Anshum.\n\nA few thoughts/responses:\n\n\tI initially avoided throwing SolrException in SolrIdentifierValidator because I was wary of tying that method call to the HTTP response a user gets.  Just wanted to avoid it from a separation of concerns perspective.  But looking at the final product, it is kindof distasteful to need to wrap the method call everywhere to catch the IAE and rethrow a SolrException.  I've changed this behavior per your suggestion.\n\tDone\n\tDone\n\n\n\nAlso, I forgot to mention in my last comment that this is a trunk/master patch.  That was probably assumed, but just wanted to clarify. ",
            "id": "comment-15135128"
        },
        {
            "date": "2016-02-06T00:58:03+0000",
            "author": "Jason Gerlowski",
            "content": "Fixed a small mistake caught by the tests.  All tests pass locally for me now. ",
            "id": "comment-15135375"
        },
        {
            "date": "2016-02-07T23:03:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f77feb718a4c93516ea65f4418514202206f2703 in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f77feb7 ]\n\nSOLR-8642: SOLR allows creation of collections with invalid names ",
            "id": "comment-15136507"
        },
        {
            "date": "2016-02-07T23:11:58+0000",
            "author": "Erick Erickson",
            "content": "Final patch with CHANGES.txt ",
            "id": "comment-15136512"
        },
        {
            "date": "2016-02-08T01:41:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 43309a4e76a4ff63dc7ac1b31ace2ec7da777734 in lucene-solr's branch refs/heads/branch_5x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=43309a4 ]\n\nSOLR-8642: SOLR allows creation of collections with invalid names ",
            "id": "comment-15136553"
        },
        {
            "date": "2016-02-08T01:41:50+0000",
            "author": "Erick Erickson",
            "content": "Thanks Jason! ",
            "id": "comment-15136554"
        },
        {
            "date": "2016-02-10T22:06:56+0000",
            "author": "Jason Gerlowski",
            "content": "So, two questions now that I've gotten a little distance from this:\n\n\n\tThis JIRA added verification to CREATECOLLECTION and CREATEALIAS.  Should we also be adding this sort of verification to CREATESHARD?  It takes a \"shard\" parameter that is probably subject to the same pitfalls that collection names are.  Maybe this is a different issue, and it shouldn't be lumped in with collection names.  Just wanted to bring it up.  Happy to spin that discussion off into a separate JIRA if needed.\n\n\n\n\n\tWhen I initially looked at the regex, I was surprised that hyphens (\"-\") aren't allowed.  Seems like a common character to disallow.  Does anyone know of a JIRA where I can read more about where the recommendations came from?  Just curious to see how the recommendations arose.\n\n ",
            "id": "comment-15141786"
        },
        {
            "date": "2016-02-10T22:23:28+0000",
            "author": "Shawn Heisey",
            "content": "I was surprised that hyphens (\"-\") aren't allowed.\n\nI use hyphens in some of my core names, but only for the shards on one of my three indexes.\n\nIf it makes sense to exclude them, then please don't let my mistake change that plan.  I can change my names. ",
            "id": "comment-15141821"
        },
        {
            "date": "2016-02-10T23:37:53+0000",
            "author": "Jason Gerlowski",
            "content": "I guess that's the question I'm actually asking: does rejecting names with hyphens make sense?  I'm sure there was a reason that the Solr recommendations warned against using hyphens when they were initially written.  Does anyone know what that rationale was, whether it's still valid, or where I could go to read up on it?\n\nI don't have anything for or against them in names personally.  Just wanted to double-check (if I can) that we're not being unnecessarily restrictive.\n\n(Sorry for bringing this up after the fact by the way; probably should've looked into this before uploading my patch.) ",
            "id": "comment-15141956"
        },
        {
            "date": "2016-02-11T17:21:13+0000",
            "author": "Erick Erickson",
            "content": "bq: I guess that's the question I'm actually asking: does rejecting names with hyphens make sense?\n\nIMO, yes. It's just too easy to have the hyphens confused with the MUST_NOT operation. Sure, it may not be a problem with core specifications, but why risk it?\n\nbq: Should we also be adding this sort of verification to CREATESHARD?\n\nI should think so, we should do it under a separate JIRA though IMO.\n ",
            "id": "comment-15143087"
        },
        {
            "date": "2016-02-11T18:20:39+0000",
            "author": "Jason Gerlowski",
            "content": "Thanks for the clarification Erick.  I'll file a separate JIRA and upload a patch when I get off work today. ",
            "id": "comment-15143192"
        },
        {
            "date": "2016-02-24T15:06:30+0000",
            "author": "Mark Miller",
            "content": "This type of change is a little scary in terms of back compat. There are lot of systems that could create collection automatically, for example, via a script and use collection aliases to juggle collections (eg create and remove them). They could easily be using things like hyphens (which I don't agree should ever have been decided as invalid anyway, but unrelated). A change like this in a point release should probably have just stuck to chars we know are an issue, especially with 6 so close to release. ",
            "id": "comment-15163155"
        },
        {
            "date": "2016-03-28T14:51:33+0000",
            "author": "Yago Riveiro",
            "content": "Hi,\n\nI can't believe that I can't use a hyphen to create my collections ... I have thousand of collection with hyphens and basically I have a automatic system that creates the collections on the fly, and codebase that relay in collection names.\n\nSorry but this change can't be done without a API that allow rename a collection.\n\nI can't upgrade to 5.5 because I can't create collections. This kind of changes can't go in the middle of a major release. This enforcing should be optional.\n\nIn 4.x someone decides that DocValues in disk doesn't make sense and deprecated it in the middle of a major release, 10T of data to optimize to wipe the Disk format to use de \"default\" and 3 month to do it without downtime. Now I can create collections because someone \"decides\" that hyphens are not allowed. (I use Solr since 3.x, no problems with hyphens).\n\nSorry but this is annoying level 9999. ",
            "id": "comment-15214269"
        },
        {
            "date": "2016-03-28T22:16:15+0000",
            "author": "Jason Gerlowski",
            "content": "Sorry to hear that this is causing so much trouble for you Yago.  There's been a general consensus that this JIRA was a bit overzealous, and that hyphens should be allowed in collection/core/shard names.  There was already a discussion of this on the related SOLR-8725.  I'd recommend reading the discussion there.\n\nTo summarize, that JIRA culminated in a patch which allows hyphens in names.  Anshum Gupta merged this on master, and branch_6x.  There was also a consensus that the change should be back-ported to the next 5x point release.  But there hasn't been a 5x point release since then, so there's no immediate relief for your concern.\n\nI'm keeping tabs on this to make sure it gets in if/when the community decides on doing another 5x release.  Or at least so I can bug a committer about looking at it.\n\nHope that addresses some of your concerns, or at least brings this down to annoying level 9998 for you : )  Sorry again for the trouble. ",
            "id": "comment-15214997"
        },
        {
            "date": "2016-03-28T22:40:22+0000",
            "author": "Yago Riveiro",
            "content": "This can be used to learn something that I did with linux some time ago. When we releases and API, we release legacy, because people will develop a codebase using it (this include the wrong behaviours).\n\nIf the API is broken, people like me will be in troubles. This is the reason to see system calls with the same name and a number in the end and are deprecated like 10 years later.\n\nImprovements are good, And I believe that this is doing for a good reason, but without tools that allow people to migrate from older behaviours are not useful.\n\nSolr should have an LTS version, or at least don't introduce BC in a major release. It's not the first time that I pass for this situation, and every time that I need to explain to my boss that something is broken in our current version but we can't upgrade because other thing is broken in next version, I feel his assassin instinct  \n\nAnnoying level to 9997 ",
            "id": "comment-15215025"
        },
        {
            "date": "2016-03-30T15:23:10+0000",
            "author": "harcor",
            "content": "I agree with Yago,  you can not just change the pattern for the collection name at will.   I am sure the \"space\" in the name is a good idea to enforce but a \"word delimiter\" like a dash or underscore should be valid. ",
            "id": "comment-15218134"
        }
    ]
}