{
    "id": "LUCENE-389",
    "title": "MatchAllDocsQuery to return all documents",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "It would be nice to have a type of query just return all documents from an index.",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--MatchAllDocsQuery.java": "https://issues.apache.org/jira/secure/attachment/12312626/ASF.LICENSE.NOT.GRANTED--MatchAllDocsQuery.java",
        "ASF.LICENSE.NOT.GRANTED--NullQuery.java": "https://issues.apache.org/jira/secure/attachment/12312624/ASF.LICENSE.NOT.GRANTED--NullQuery.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2005-05-18T10:50:16+0000",
            "content": "Created an attachment (id=15064)\nNullQuery, which just returns all documents in the index each with initial\nscore of 1.0f\n\nAn implementation of a \"NUllQuery\" that returns all documents in the index each\nwith initial score of 1.0f. ",
            "author": "John Wang",
            "id": "comment-12322390"
        },
        {
            "date": "2005-05-19T01:39:09+0000",
            "content": "Created an attachment (id=15074)\nNulQuery, which just returns all documents in the index, each with initial\nscore of 1,0f\n\nForgot the same before attaching  ",
            "author": "John Wang",
            "id": "comment-12322391"
        },
        {
            "date": "2005-05-19T02:59:10+0000",
            "content": "A query returning all docs can indeed be useful on occasion, it was the subject \nof some recent messages on the java-user list. \n\nSome remarks: \n\n\tMatchAllDocsQuery might be a better name, NullQuery could also to suggest\n  not matching any docs at all (which can also be useful on occasion btw.) \n\tThe scorer uses an int[] for all the non deleted docs which can be\n  a rather high burden on memory and initialisation. This could be avoided \n  by using the information on deleted docs from the reader directly \n  in the scorer. \n\tThe score value is a constant, and queries with this property are\n  currently under discussion on java-dev. This might become a special \n  case of the filters discussed there. \n\n\n\nRegards, \nPaul Elschot    ",
            "author": "Paul Elschot",
            "id": "comment-12322392"
        },
        {
            "date": "2005-05-21T01:37:46+0000",
            "content": "Created an attachment (id=15092)\nmade changes as specified by previous suggestions.\n\nExcellent points!\nBoth 1) and 2) are fixed as specified.\n\nI am not sure I understand #3. ",
            "author": "John Wang",
            "id": "comment-12322393"
        },
        {
            "date": "2005-07-09T07:19:48+0000",
            "content": "I think there is a bug in the skipTo() method of the Scorer.  Shouldn't the \nfirst line be:\n\n_count = target - 1;\n\nBecause next() will automatically increment _count.\n\nAs it stands, skipTo() will actually skip over target, which is wrong. ",
            "author": "Tony Smith-Grieco",
            "id": "comment-12322394"
        },
        {
            "date": "2005-08-21T21:27:11+0000",
            "content": "Thanks, I just committed this class plus a test case. I also added Tony's \nsuggested fix, removed the underscores from the variable names and removed the \ncall the super().  ",
            "author": "Daniel Naber",
            "id": "comment-12322395"
        }
    ]
}