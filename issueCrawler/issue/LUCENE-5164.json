{
    "id": "LUCENE-5164",
    "title": "Remove the OOM catching in SimpleFSDirectory and NIOFSDirectory",
    "details": {
        "components": [],
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Followup from LUCENE-5161:\nIn former times we added the OOM cactching in NIOFSDir and SimpleFSDir because nobody understand why the OOM could happen on FileChannel.read() or SimpleFSDir.read(). By reading the Java code its easy to understand (it allocates direct buffers with same size as the requested length to read). As we have chunking now reduce to a few kilobytes it cannot happen anymore that we get spurious OOMs.\n\nIn fact we might hide a real OOM! So we should remove it.\n\nI am also not sure if we should make chunk size configureable in FSDirectory at all! It makes no sense to me (it was in fact only added for people that hit the OOM to fine-tune).\n\nIn my opinion we should remove the setter in trunk and keep it deprecated in 4.x. The buf size is then in trunk equal to the defaults from LUCENE-5161.",
    "attachments": {
        "LUCENE-5164-4x.patch": "https://issues.apache.org/jira/secure/attachment/12597340/LUCENE-5164-4x.patch",
        "LUCENE-5164.patch": "https://issues.apache.org/jira/secure/attachment/12597322/LUCENE-5164.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-08-10T14:49:50+0000",
            "content": "+1 to remove the OOM-catching and remove the setter completely from trunk! ",
            "author": "Robert Muir",
            "id": "comment-13735930"
        },
        {
            "date": "2013-08-10T14:53:17+0000",
            "content": "We should also make SimpleIndexOutput use the chunk size, too. Because it uses the same code in the JDK (it allocates direct buffer before writing!) ",
            "author": "Uwe Schindler",
            "id": "comment-13735931"
        },
        {
            "date": "2013-08-10T15:14:30+0000",
            "content": "Here is the code of RandomAccessFile's native part that explains why the OOM happens there: http://hg.openjdk.java.net/jdk6/jdk6/jdk/file/dffaa68042cd/src/share/native/java/io/io_util.c\n\nIn fact, when the byte[] is larger than 8 Kilobytes it mallocs a buffer. Otherwise it use a buffer from call stack. This malloc has the same effect as the direct buffer in FileChannel.read().\n\nSo we really need the same chunking for write and set the chunk size to 8 Kilobytes W8hcih is done in Robert's previous commit), just not explicit! So we should insert 8192 as number into FSDirectory. ",
            "author": "Uwe Schindler",
            "id": "comment-13735936"
        },
        {
            "date": "2013-08-10T17:48:07+0000",
            "content": "Patch:\n\n\tdeprecates the readChunk size\n\tuses the chunck size also for writing in FSIndexOutput\n\tunfucks the read loops in Simple and NIO to be easier to understand (uses Math.min instead crazy ifs).\n\tunfucks FSIndexOutput.close() and use IOUtils.\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13735979"
        },
        {
            "date": "2013-08-10T18:03:57+0000",
            "content": "More cleanups. ",
            "author": "Uwe Schindler",
            "id": "comment-13735982"
        },
        {
            "date": "2013-08-10T19:46:43+0000",
            "content": "Fix wrong visibility of flushBuffer method in FSIndexOutput ",
            "author": "Uwe Schindler",
            "id": "comment-13736012"
        },
        {
            "date": "2013-08-10T20:59:48+0000",
            "content": "Hide the extra FSIndexOutput constructor again, as it is only used to support deprecated chunkSize. ",
            "author": "Uwe Schindler",
            "id": "comment-13736031"
        },
        {
            "date": "2013-08-11T03:52:35+0000",
            "content": "This is already a fixed buffer in base class! ",
            "author": "Uwe Schindler",
            "id": "comment-13736178"
        },
        {
            "date": "2013-08-11T04:20:40+0000",
            "content": "New patch:\n\n\tRemves the chunking in FSIndexOutput\n\tLower BufferedIndexOutput.DEFAULT_BUFFER_SIZE to 8192 bytes: This prevents RandomAccessFile from malloc on every write!\n\tUnfuck the read loops in SimpleFSDir and NIOFSDir\n\tUse IOUtils when close FSIndexOutput\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13736184"
        },
        {
            "date": "2013-08-11T04:29:17+0000",
            "content": "In my opinion, the chunking should be done in the base class (BufferedIndexInput) already, so we an remove the chunking in NIOFS and SimpleFS. There is no reason to have the code here.\n\nI will work later on that. ",
            "author": "Uwe Schindler",
            "id": "comment-13736185"
        },
        {
            "date": "2013-08-11T10:23:08+0000",
            "content": "New patch:\n\n\tThe NIOFS read loop was further cleaned up and simplified by using the ByteBuffer tracking.\n\tThe setter/getter in FSDirectory are no no-ops (deprecated)\n\tEvery implementation has its own chunk size, which fits the underlying IO layer. For RandomAccessFile this is 8192 bytes\n\n\n\nI decided not to put the chunking into Buffered*, as it is still separate and complicates code of Buffered* even more. ",
            "author": "Uwe Schindler",
            "id": "comment-13736246"
        },
        {
            "date": "2013-08-11T11:11:56+0000",
            "content": "Improved test in TestDirectory that ensures if chunking is working correctly.\n\nThis is now ready. ",
            "author": "Uwe Schindler",
            "id": "comment-13736255"
        },
        {
            "date": "2013-08-11T12:04:51+0000",
            "content": "Explicitely pass buffer size as CHUNK_SIZE to BufferedIndexOutput for FSDirectory. ",
            "author": "Uwe Schindler",
            "id": "comment-13736267"
        },
        {
            "date": "2013-08-11T14:17:27+0000",
            "content": "New patch again, this time with better reuse of NIOFS' ByteBuffer! ",
            "author": "Uwe Schindler",
            "id": "comment-13736285"
        },
        {
            "date": "2013-08-11T14:27:04+0000",
            "content": "Commit 1512937 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1512937 ]\n\nLUCENE-5164: Fix default chunk sizes in FSDirectory to not be unnecessarily large (now 8192 bytes); also use chunking when writing to index files. FSDirectory#setReadChunkSize() is now deprecated and will be removed in Lucene 5.0 ",
            "author": "ASF subversion and git services",
            "id": "comment-13736288"
        },
        {
            "date": "2013-08-11T14:47:53+0000",
            "content": "Patch for 4.x (as the merging was complicated, because of many changes - Java 7) ",
            "author": "Uwe Schindler",
            "id": "comment-13736293"
        },
        {
            "date": "2013-08-11T14:52:01+0000",
            "content": "Commit 1512949 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1512949 ]\n\nMerged revision(s) 1512937 from lucene/dev/trunk:\nLUCENE-5164: Fix default chunk sizes in FSDirectory to not be unnecessarily large (now 8192 bytes); also use chunking when writing to index files. FSDirectory#setReadChunkSize() is now deprecated and will be removed in Lucene 5.0 ",
            "author": "ASF subversion and git services",
            "id": "comment-13736294"
        },
        {
            "date": "2013-08-11T14:56:28+0000",
            "content": "Commit 1512951 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1512951 ]\n\nLUCENE-5164: Remove deprecated stuff in trunk. ",
            "author": "ASF subversion and git services",
            "id": "comment-13736295"
        },
        {
            "date": "2013-08-11T14:57:12+0000",
            "content": "Thanks Robert and Grant for the fruitful discussions! ",
            "author": "Uwe Schindler",
            "id": "comment-13736297"
        },
        {
            "date": "2013-10-05T10:19:31+0000",
            "content": "4.5 release -> bulk close ",
            "author": "Adrien Grand",
            "id": "comment-13787159"
        }
    ]
}