{
    "id": "SOLR-10452",
    "title": "setQueryParams should be deprecated in favor of SolrClientBuilder methods",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrJ"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Now that builders are in place for SolrClients, the setters used in each SolrClient can be deprecated, and their functionality moved over to the Builders. This change brings a few benefits:\n\n\n\tunifies SolrClient configuration under the new Builders. It'll be nice to have all the knobs, and levers used to tweak {{SolrClient}}s available in a single place (the Builders).\n\treduces SolrClient thread-safety concerns. Currently, clients are mutable. Using some SolrClient setters can result in erratic and \"trappy\" behavior when the clients are used across multiple threads.\n\n\n\nThis subtask endeavors to change this behavior for the setQueryParams setter on all SolrClient implementations.",
    "attachments": {
        "SOLR-10452.patch": "https://issues.apache.org/jira/secure/attachment/12876219/SOLR-10452.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-08T11:14:59+0000",
            "content": "The next of the deprecate-SolrClient-setter JIRAs.  (FYI Anshum Gupta since you've reviewed other JIRAs in this set)\n\nTests and precommit pass.. ",
            "author": "Jason Gerlowski",
            "id": "comment-16079091"
        },
        {
            "date": "2017-07-10T15:04:34+0000",
            "content": "Jason Gerlowski I just glanced through it and don't think we should move the queryParams to the builder. Anything that needs flexibility post-construction i.e. might need to be changed post construction of the client shouldn't be part of the builder. Let me know if you think otherwise. ",
            "author": "Anshum Gupta",
            "id": "comment-16080462"
        },
        {
            "date": "2017-07-10T16:29:18+0000",
            "content": "I think I agree in part, but not in the whole.\n\nAnything that needs flexibility post-construction ... shouldn't be part of the builder\n\nThough I tried to do them both in the attached patch, deprecating the setter, and adding a builder method are conceptually separate things.  IMO even if we don't deprecate the setter, adding this method to the builder still makes sense.  (Users probably find it a bit unintuitive that we allow setting some options with a builder, but then require others to be specified with a setter after creation.)\n\ni.e. might need to be changed post construction of the client\n\nI'm surprised to hear you say that this is more likely to change than some other properties already present in the builders (timeouts, response parsers, base urls, etc.).  But this is likely just a failure of imagination on my part; I'm admittedly not familiar with all use cases here.  If you think it's reasonable for users to change this during execution (as opposed to creating a different client with the new options), then I'll of course defer to your judgment.  Though I'm curious if there's a use case the requires changing this that I'm forgetting/missing.\n\nIn that case though, would you mind weighing in over on SOLR-8975 (or here) about which other setters you have this concern with? I'd hoped to add builder methods for many of these setters (and optionally deprecate the setters themselves).  I'd like to get a clearer picture of which ones would still make sense for this in your opinion.\n\nMy guess is that the following setters are probably exempt from your concern above, as they are related to finding/authenticating/connecting to a Solr/ZK setup and are unlikely to change frequently are runtime.\n\n\tsetBaseURL,\n\tsetBasicAuthHeader\n\tsetFollowRedirects\n\tsetZkConnectTimeout\n\tsetZkClientTimeout\n\tsetAliveCheckInterval\n\n\n\nThere might be others that are exempt, but I'll defer to your judgment on that. ",
            "author": "Jason Gerlowski",
            "id": "comment-16080608"
        }
    ]
}