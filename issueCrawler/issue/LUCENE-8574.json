{
    "id": "LUCENE-8574",
    "title": "ExpressionFunctionValues should cache per-hit value",
    "details": {
        "components": [],
        "status": "Open",
        "resolution": "Unresolved",
        "fix_versions": [],
        "affect_versions": "7.5,                                            master (8.0)",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "The original version of ExpressionFunctionValues\u00a0had a simple per-hit cache, so that nested expressions that reference the same common variable would compute the value for that variable the first time it was referenced and then use that cached value for all subsequent invocations, within one hit.\u00a0 I think it was accidentally removed in LUCENE-7609?\n\nThis is quite important if you have non-trivial expressions that reference the same variable multiple times.\n\nE.g. if I have these expressions:\n\nx = c + d\nc = b + 2 \nd = b * 2\n\nThen evaluating x should only cause b's value to be computed once (for a given hit), but today it's computed twice.\u00a0 The problem is combinatoric if b then references another variable multiple times, etc.\n\nI think to fix this we just need to restore the per-hit cache?",
    "attachments": {
        "LUCENE-8574.patch": "https://issues.apache.org/jira/secure/attachment/12949422/LUCENE-8574.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16698038",
            "author": "Robert Muir",
            "content": "+1, I remember jack added this explicitly to prevent the situation where the same subexpr gets called multiple times for the same document and it wastefully recomputes the whole thing more than once. ",
            "date": "2018-11-25T01:42:11+0000"
        },
        {
            "id": "comment-16698127",
            "author": "Alan Woodward",
            "content": "There's a top-level cache in ExpressionValueSource but I think I missed the per-hit cache.\u00a0 It should be easy enough to add a caching DoubleValues implementation and wrap each variable. ",
            "date": "2018-11-25T10:53:31+0000"
        },
        {
            "id": "comment-16698172",
            "author": "Robert Muir",
            "content": "I don't think we need any caching DoubleValues implementation. We can just simply put the code back. ",
            "date": "2018-11-25T13:32:17+0000"
        },
        {
            "id": "comment-16698188",
            "author": "Robert Muir",
            "content": "Hopefully this is enough? If we have to handle the case where advanceExact() is called over and over again we have to add 'currentDoc' back too so it works more like jack's original cache. But we should avoid adding abstractions here that will make things harder on the compiler. ",
            "date": "2018-11-25T14:01:22+0000"
        },
        {
            "id": "comment-16699316",
            "author": "Michael McCandless",
            "content": "+1, patch looks good. ",
            "date": "2018-11-26T17:19:31+0000"
        }
    ]
}