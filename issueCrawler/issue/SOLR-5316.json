{
    "id": "SOLR-5316",
    "title": "Solr 4.2.1 LotsOfCores new options",
    "details": {
        "affect_versions": "4.2.1,                                            4.7",
        "status": "Open",
        "fix_versions": [
            "4.2.1"
        ],
        "components": [
            "multicore"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The SOLR-5316.patch is for the lotsofcores use case: a large number of homogeneous cores with frequent loading/unloading. The new Cores options are:\n\n\tdefaultLoadOnStartup : true by default\n\tdefaultTransient : false by default\n  In this way, you can change the default attributes value for all cores.\n  The lotsofcores use case requires to have defaultLoadOnStartup = false and defaultTransient = true\n\t\"numBuckets\" to create a subdirectory based on a hash on the corename % numBuckets in the core Datadir, because all cores cannot live in the same directory\n\t\"auto\" with 2 differents values :\n    1) createLoad: create, if not exist, and load the core on the fly on\n    the first incoming request (update, select).\n    2) onlyLoad: load the core on the fly on the first incoming request\n    (update, select), if exist on disk\n    The auto option uses an additional cores option named baseDataDir to automatically generate the dataDir of each core and uses the \"numBucket\" option if exists. All the cores have the same solr config defined in the solr_home/conf.\n\tdiscoverOnDemand : false by default. If enabled, the discovery and loading of cores at the solr startup are disabled and a new option named coreDiscovery in the STATUS action is available to discover on demand all the cores in the coreRootDirectory (only add the cores descriptions)\n\tnoCorePropertiesFile : false by default. If enabled, don't use anymore the core.properties file, a core will be detected on disk based on the file segments.gen\n\n\n\nThe unload command was also modified in order to handle the non loaded transient cores, to be able to apply for example the deleteIndex, deleteDataDir options.\n\nI added some Junit tests.\n\nAn example of solr.xml:\n<solr>\n  <str name=\"shareSchema\">schema.xml</str>\n  <int name=\"transientCacheSize\">5000</int>\n  <str name=\"coreRootDirectory\">solr_home/data</str>\n  <str name=\"baseDataDir\">solr_home/data</str>\n  <int name=\"numBuckets\">100</int>\n  <str name=\"auto\">createLoad</str>\n  <str name=\"defaultLoadOnStartup\">false</str>\n  <str name=\"defaultTransient\">true</str>\n  <bool name=\"discoverOnDemand\">true</bool>\n  <bool name=\"noCorePropertiesFile\">true</bool>\n</solr>\n\nThe patch SOLR-5316.patch in attachment is for svn solr branch_4X (revision number 1556554)\n\n---------------\n\nThe patch solr-4.2.1.patchLOTSOFCORES is for the lotsofcores use case, including some modification : \n\n\tby default, all cores have loadOnStartup=\"false\" and transient=\"true\" attributes\n\tthe create admin command can register a lazy core (to take into account the transientCacheSize option)\n\tadd transient cores persistency\n\thandle unload admin command for never launched transient cores (non active cores)\n\n\n\nTo improve performance, we use this Solr patched version with the persistence disabled.\nIn this way, Solr is working with a solr.xml file without any core entries, because it's useless in our use case (with the new Auto option for the cores)\n\nThe new Cores options :\n\n\t\"numBuckets\" to create a subdirectory based on a hash on the corename\n% numBuckets in the core Datadir, because all cores cannot live in the \nsame directory\n\t\"Auto\" with 3 differents values :\n1) false : default behaviour\n2) createLoad : create, if not exist, and load the core on the fly on \nthe first incoming request (update, select).\n3) onlyLoad : load the core on the fly on the first incoming request \n(update, select), if exist on disk\n\n\n\nThe Auto option uses an additional cores option named baseDataDir to automatically generate the dataDir of each core and uses the \"numBucket\" option if exists.",
    "attachments": {
        "solr-4.2.1.patchLOTSOFCORES": "https://issues.apache.org/jira/secure/attachment/12607361/solr-4.2.1.patchLOTSOFCORES",
        "SOLR-5316.patch": "https://issues.apache.org/jira/secure/attachment/12629398/SOLR-5316.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13789427",
            "date": "2013-10-08T17:40:23+0000",
            "content": "I'm not quite sure when I'll be able to look at this, I've got a pretty busy couple of weeks coming up. Anyone who wants to assign it to themselves feel free, but I don't want it to get lost. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13828951",
            "date": "2013-11-21T13:49:29+0000",
            "content": "olivier:\n\nSorry it took so long for me to get to this, it's been a busy month.\n\n1> I can't apply the patch successfully to current code. Quite a bit changed between 4.2 and even 4.4. Could you make this patch work against a current version of Solr? In particular, much of the persistence code is different, especially since we're preparing to deprecate defining cores in solr.xml and going toward auto-discovery mode.\n\n2> Please use the standard Java camelcase naming conventions, e..g 'Auto' should be 'auto'\n\n3> The convention is to just name the patch for the JIRA, i.e. SOLR-5316.patch. Upload subsequent patches with the same name, newer ones will appear in blue and older ones in gray. That makes it easy to know which one is most recent.\n\n4> There are tabs in the code, the convention is 2 spaces. There are configuration files for Eclipse and IntelliJ, along with instructions on how to add them to your environment here: http://wiki.apache.org/solr/HowToContribute#Development_Environment_Tips\n\nTry running \"ant precommit\" after the changes, that'll point out things like tabs etc.\n\nThanks! "
        },
        {
            "author": "olivier soyez",
            "id": "comment-13903397",
            "date": "2014-02-17T17:23:51+0000",
            "content": "I have run \"ant precommit\" after the changes in SOLR-5316.patch, and it's OK "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14261477",
            "date": "2014-12-30T20:45:45+0000",
            "content": "Olivier:\n\nI'm really sorry it's taken me this long to look more closely, well the heck with the excuses...\n\nAnyway, I think I'm going to pass on committing this one. It's not a problem with the code, I looked it over (although not in excruciating detail), and it looks quite good.\n\nRather, I think it introduces more complexity than I'm comfortable introducing at this point for a not-very-common use-case AFAIK. Especially as Zookeeper as \"the one source of truth\" is out there somewhere on the horizon.\n\nSo I'm making it unassigned, perhaps someone else might want to pick this up.\n "
        },
        {
            "author": "olivier soyez",
            "id": "comment-14270849",
            "date": "2015-01-09T10:28:58+0000",
            "content": "Erik:\nI understand, thank you for your feedback! "
        }
    ]
}