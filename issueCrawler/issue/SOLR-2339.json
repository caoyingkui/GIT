{
    "id": "SOLR-2339",
    "title": "No error reported when sorting on a multiValued field",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In the past, Solr has relied on the underlying FieldCache to throw an error in situations where sorting on a field was not possible.  however LUCENE-2142 has changed this, so that FieldCache never throws an error.\n\nIn order to maintain the functionality of past Solr releases (ie: error when users attempt to sort on a field that we known will produce meaningless results) we should add some sort of check at the Solr level.",
    "attachments": {
        "SOLR-2339.patch": "https://issues.apache.org/jira/secure/attachment/12470011/SOLR-2339.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12987888",
            "date": "2011-01-28T02:17:40+0000",
            "content": "I'm not sure the best way to go about this ... we could reimplement the basic termcount vs doccount check that use to be done at a higher level before using the FieldCache \u2013 but that may be overkill and i'm not convinced we need to behave in exactly the same way as before.\n\nAt a minimum we should probably start logging a warning if someone does a sort on a field that is configured to be multiValued=true.\n\nAlternately: we could consider adding a property to the StringIndex and DocTermsIndex classes (on their respective branches) so that FieldCache could indicate when it suspects there may be a problem (using simple doccount < termcount, or something more complex if it's easy), and Solr could error/log if that property is set. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12989016",
            "date": "2011-02-01T03:06:13+0000",
            "content": "yonik pointed out on IRC that the main motivation behind LUCENE-2142 could easily apply to solr users as well...\n\nSo this means... you could happily think all is good, until some day, well into production, once you've updated enough docs, suddenly the check will catch you and throw an unhandled exception, stopping all searches [that need to sort by this string field] in their tracks. It's not gracefully degrading.\n\n...arguing that for solr users as well: the loss of this particular check is a feature and not a bug.\n\ni feel like the user bases and use cases are different enough that the \"default\" behavior should be different \u2013 but not enough to fight strongly for it.\n\nif anyone else has an opinion, please comment \u2013 for now i'm going to just tackle the case where there is not doubt you have a problem: sorting on a multiValued field \n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12989498",
            "date": "2011-02-02T02:48:26+0000",
            "content": "patch that forces failure for multivalued fields, along with an example of how i think we should call this behavior change out in CHANGES.txt\n\nthis uncovered a lot of tests that were missusing fields declared as multivalued \u2013 BasicDistributedZkTest and TestDistributedSearch are still failing in this patch, largely because i'm so confused about how they work it's not even clear to me what schema.xml file they are using to try and fix it. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12989499",
            "date": "2011-02-02T02:52:20+0000",
            "content": "I should have mentioned when i attached the patch: the approach i took here was to add a \"void checkSortability()\" method to SchemaField that tests isMultivalued \u2013 i also moved the \"is this field indexed?\" check here (it use to be part of QueryParsing.parseSortSpec) and changed all the out of hte box FieldTypes to call this method in their getSortField implementation \u2013 this way we have acommon (documented) hook point where we can add future helper tests for things that don't make sense of in sorting, but it's still up to the FieldType to decide what to do if someone wants to make a really exotic one (RandomSortField for example doesn't even care if it's indexed).\n\nIf anyone has any better suggestions please chime in. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12989500",
            "date": "2011-02-02T02:55:06+0000",
            "content": "It also occurs to me that we should probably put this same check in for dealing with ValueSources that are FieldCache based ... not in ValueSource.getSortField, but in FieldType.getValueSource for the affected FieldTypes. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12989929",
            "date": "2011-02-03T00:51:20+0000",
            "content": "Updated patch that fixes the remaining sort related test failures.\n\nTestDistributedSearch and BasicDistributedZkTest were fundementally flawed in that they expected to get deterministic sort orderings on fields that they were deliberately putting multiple values into (ie: not just sorting on a multivalued field; sorting on a multivalued field that was actually used to store multiple values for each doc)\n\nI'm amazed they ever passed.  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12990367",
            "date": "2011-02-03T23:16:30+0000",
            "content": "i spun of the ValueSource issue into SOLR-2348 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12990369",
            "date": "2011-02-03T23:20:23+0000",
            "content": "narrowing issue summary to be specific about multiValued fields since that's all we've decided to tackle for now. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12990378",
            "date": "2011-02-03T23:39:09+0000",
            "content": "Committed revision 1067030. - trunk\n\nStill working on the backport to 3x (this is hte first time svn has ever given me a \"Tree conflict\" for a file)  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12990397",
            "date": "2011-02-04T00:11:20+0000",
            "content": "Committed revision 1067042.\n\nbackported to 3x "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013108",
            "date": "2011-03-30T15:45:33+0000",
            "content": "Bulk close for 3.1.0 release "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13034492",
            "date": "2011-05-17T01:48:04+0000",
            "content": "Guys,\n\nHow are we going to support sorting on multiValued fields?\n\nWould a function work for this? "
        }
    ]
}