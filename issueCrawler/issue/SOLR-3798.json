{
    "id": "SOLR-3798",
    "title": "copyField logic in LukeRequestHandler is primitive, doesn't work well with dynamicFields",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "looking into SOLR-3795 i realized there is a much bigger problem with how LukeRequestHandler tries to get copyfield info for fields and dynamicFields the same way, and it just doesn't work.\n\nsee the patch in SOLR-3795 for a commented out example of a test that still fails (ie: trying to get the \"copySource\" info for a dynamicField)",
    "attachments": {
        "SOLR-3798.patch": "https://issues.apache.org/jira/secure/attachment/12571327/SOLR-3798.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Steve Rowe",
            "id": "comment-13588992",
            "date": "2013-02-28T01:17:23+0000",
            "content": "This patch fixes the issue and uncomments the commented out test added in SOLR-3795, which passes (after fixing a typo).\n\nThe issue is in IndexSchema, which issn't properly tracking dynamic fields, rather than in LukeRequestHandler. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13589841",
            "date": "2013-02-28T19:31:25+0000",
            "content": "I've been thinking about a related problem: reporting of what I'm calling \"undeclared explicit fields\".\n\nIn the schema, fields can be either <field> (aka concrete, aka explicit), or <dynamicField> (aka pattern, aka regex, aka prototype).\n\nThere is also a third kind of thing that can be introduced by a <copyField>: an undeclared explicit field (UEF).  Here's an example from test-files/solr/collection1/conf/schema15.xml:\n\n\n<field name=\"copyfield_source\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>\n...\n<dynamicField name=\"*_ss\"  type=\"string\"  indexed=\"true\"  stored=\"true\" multiValued=\"true\"/>\n...\n<copyField source=\"copyfield_source\" dest=\"copyfield_dest_ss\"/>\n\n\n\ncopyfield_dest_ss isn't declared anywhere else in the schema - this is an instruction to use the (first matching) dynamic field type *_ss when copying copyfield_source to UEF copyfield_dest_ss.\n\nThe schema.xml in solr/example has another one of these, though this could be rewritten to instead use dest=\"*_s\" and still function the same:\n\n\n<dynamicField name=\"*_s\"  type=\"string\"  indexed=\"true\"  stored=\"true\" />\n...\n<copyField source=\"author\" dest=\"author_s\"/>\n\n\n\nIn my (so far limited ad hoc) testing, I can't see undeclared explicit fields in reported copyfield sources or destinations.\n\nI think schema info reports (LukeRequestHandler and the new schema info requests I'm working on in SOLR-3250) should include UEFs in their reports. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13591456",
            "date": "2013-03-02T17:38:42+0000",
            "content": "After chatting with Hoss on #lucene-dev IRC, I understand copyFields a little better.  Hoss argued that \"undeclared explicit field\" is an inaccurate description of the \"third kind of thing\" I was referring to, and I agree.\n\nA hopefully better characterization - something like this should be on the wiki:\n\n\n<copyField> source or dest values can be either field names or dynamic field references.\n\nA dynamic field reference is either an exact <dynamicField> name, or a pattern that accepts a subset of the language accepted by the pattern for a referenced dynamic field.  Subset pattern syntax is the same as that for dynamic field names (\"*string\" or \"string*\"), with the additional possibility of excluding the asterisk (\"string\").\n\nA <copyField> source subset pattern operates as a filter: instead of triggering a field copy for all field names matched by the referenced dynamic field pattern, only those that match the subset pattern will trigger a field copy.\n\nA <copyField> dest subset pattern operates in two ways: the target field's type is drawn from the referenced <dynamicField>; and the target field name is generated using the subset pattern as a template, unless the subset pattern excludes the asterisk, in which case the subset pattern itself becomes the target field name.\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13591583",
            "date": "2013-03-03T01:02:17+0000",
            "content": "Returning to the subject of this issue  ... with the previously attached patch, I can see dynamic field copySource info in the response from /admin/luke?show=shema, but not in all combinations of possible <copyField> source and dest value types.  \n\nThe current situation, with the patch applied:\n\n\n\n\ncase #\nsource value type\ndest value type\nExample\nIn /admin/luke?show=schema reponse?\nSchema parse succeeds?\n\n\n1\n<field> name\n<field> name\n<copyField source=\"title\" dest=\"text\"/>\nYes\nYes\n\n\n2\n<field> name\n<dynamicField> name\n<copyField source=\"title\" dest=\"*_s\"/>\nN/A\nNo: \"copyField only supports a dynamic destination if the source is also dynamic\"\n\n\n3\n<field> name\nsubset pattern\n<copyField source=\"title\" dest=\"*_dest_sub_s\"/>\nN/A\nNo: \"copyField only supports a dynamic destination if the source is also dynamic\"\n\n\n4\n<field> name\nsubset pattern no asterisk\n<copyField source=\"title\" dest=\"dest_sub_no_ast_s\"/>\nYes\nYes\n\n\n\u00a0\n\n\n5\n<dynamicField> name\n<field> name\n<copyField source=\"*_i\" dest=\"title\"/>\nYes\nYes\n\n\n6\n<dynamicField> name\n<dynamicField> name\n<copyField source=\"*_i\" dest=\"*_s\"/>\nYes\nYes\n\n\n7\n<dynamicField> name\nsubset pattern\n<copyField source=\"*_i\" dest=\"*_dest_sub_s\"/>\nN/A\nNo: \"copyField dynamic destination must match a dynamicField.\"\n\n\n8\n<dynamicField> name\nsubset pattern no asterisk\n<copyField source=\"*_i\" dest=\"dest_sub_no_ast_s\"/>\nYes\nYes\n\n\n\u00a0\n\n\n9\nsubset pattern\n<field> name\n<copyField source=\"*_src_sub_i\" dest=\"title\"/>\nYes\nYes\n\n\n10\nsubset pattern\n<dynamicField> name\n<copyField source=\"*_src_sub_i\" dest=\"*_s\"/>\nYes\nYes\n\n\n11\nsubset pattern\nsubset pattern\n<copyField source=\"*_src_sub_i\" dest=\"*_dest_sub_s\"/>\nN/A\nNo: \"copyField dynamic destination must match a dynamicField.\"\n\n\n12\nsubset pattern\nsubset pattern no asterisk\n<copyField source=\"*_src_sub_i\" dest=\"dest_sub_no_ast_s\"/>\nNo\nYes\n\n\n\u00a0\n\n\n13\nsubset pattern no asterisk\n<field> name\n<copyField source=\"src_sub_no_ast_i\" dest=\"title\"/>\nYes\nYes\n\n\n14\nsubset pattern no asterisk\n<dynamicField> name\n<copyField source=\"src_sub_no_ast_i\" dest=\"*_s\"/>\nN/A\nNo: \"copyField only supports a dynamic destination if the source is also dynamic\"\n\n\n15\nsubset pattern no asterisk\nsubset pattern\n<copyField source=\"src_sub_no_ast_i\" dest=\"*_dest_sub_s\"/>\nN/A\nNo: \"copyField only supports a dynamic destination if the source is also dynamic\"\n\n\n16\nsubset pattern no asterisk\nsubset pattern no asterisk\n<copyField source=\"src_sub_no_ast_i\" dest=\"dest_sub_no_ast_s\"/>\nNo\nYes\n\n\n\n\n\nHoss pointed out that cases 2 and 3 are expected failures, since Solr doesn't have a source name template to use when generating the destination field name.\n\nHowever, I think it's a bug that cases 7, 11, 14 and 15 cause Solr to puke - there's no reason I can see to disallow them.\n\nCases 12 and 16 are directly relevant to this issue, since they are successfully parsed, but aren't returned in LukeRequestHandler's report.\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13592665",
            "date": "2013-03-04T21:42:18+0000",
            "content": "In the latest patch on SOLR-4503, I've included a dynamic copy field refactoring in IndexSchema.java that fixes cases 7, 11, 14, and 15 from the above table - with that patch, the Solr schema parse succeeds for those cases.\n\nBut LukeRequestHandler's response can only carry those cases where at least one of the source or the dest is a declared field or dynamic field name, so its current implementation won't handle cases 11, 12, 15, or 16.  I think LukeRequestHandler should split out copyField info, something like the way I did it on SOLR-4503, so that subset patterns can be reported. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13594366",
            "date": "2013-03-06T04:54:30+0000",
            "content": "[trunk commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1453161\n\nSOLR-4503: Add REST API methods to get schema information: fields, dynamicFields, fieldTypes, and copyFields.  Restlet 2.1.1 is integrated and is used to service these requests.\nAlso fixes bugs in dynamic copyField logic described in SOLR-3798.\nAlso fixes a bug with proxied SolrCloud requests (SOLR-4210) when using the GET method. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13594383",
            "date": "2013-03-06T05:24:29+0000",
            "content": "[branch_4x commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1453162\n\nSOLR-4503: Add REST API methods to get schema information: fields, dynamicFields, fieldTypes, and copyFields.  Restlet 2.1.1 is integrated and is used to service these requests.\nAlso fixes bugs in dynamic copyField logic described in SOLR-3798.\nAlso fixes a bug with proxied SolrCloud requests (SOLR-4210) when using the GET method.\n(merged trunk r1453161) "
        }
    ]
}