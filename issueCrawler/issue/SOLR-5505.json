{
    "id": "SOLR-5505",
    "title": "LoggingInfoStream not usabe in a multi-core setup",
    "details": {
        "affect_versions": "4.6",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "multicore"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "LoggingInfoStream that was introduced in SOLR-4977 does not log any core context.\n\nPreviously this was possible by encoding this into the infoStream's file path.\n\nThis means in a multi-core setup it is very hard to distinguish between the infoStream messages for different cores.\n\nLoggingInfoStream should be automatically configured to prepend the core name to log messages.",
    "attachments": {
        "SOLR-5505.patch": "https://issues.apache.org/jira/secure/attachment/12616108/SOLR-5505.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shikhar Bhushan",
            "id": "comment-13831937",
            "date": "2013-11-25T21:35:21+0000",
            "content": "This should be a simple patch, SolrIndexConfig can propagate the core name to the LoggingInfoStream constructor so that it's available for logging. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13832672",
            "date": "2013-11-26T15:33:42+0000",
            "content": "sounds good Shikhar, do you have a patch? "
        },
        {
            "author": "Shikhar Bhushan",
            "id": "comment-13832802",
            "date": "2013-11-26T17:52:58+0000",
            "content": "I'll create a patch today "
        },
        {
            "author": "Shikhar Bhushan",
            "id": "comment-13834095",
            "date": "2013-11-27T20:06:53+0000",
            "content": "Attaching patch against trunk.\n\nIt does something different than what I proposed earlier:\n\na) LoggingInfoStream constructor takes the slf4j Logger instance to be used as a constructor param.\n\nb) SolrIndexConfig checks if there is a \"loggerName\" configuration attribute on the \"infoStream\" tag, and if so this is used as the name for the Logger. Otherwise, the previous default of the LoggingInfoStream class name is used. This will enable users to manage the log output using their logging subsystem, e.g. the formatting pattern, to what log file etc.\n\nb) Additionally, I removed logging of the thread name from within LoggingInfoStream, since this is commonly configured at the level of the formatting patter for a logger. "
        },
        {
            "author": "Ryan Ernst",
            "id": "comment-13837389",
            "date": "2013-12-03T06:29:13+0000",
            "content": "Thanks for the patch Shikhar.  A couple thoughts:\n\n\tThis forces anyone trying to use the LoggingInfoStream to provide a loggerName in solrconfig.  Could the LIS constructor instead continue using the local logger if null is passed in?   Or have an alternate zero argument constructor? This way the log4j.properties settings under solr/example/resources are still relevant.\n\tYou should also update the example solrconfig.xml to include info about the new setting.\n\tCould you make the simple case better, where there is only a single log file, by adding a prefix option to LIS, and adding the core name?\n\n "
        },
        {
            "author": "Shikhar Bhushan",
            "id": "comment-13837860",
            "date": "2013-12-03T16:29:33+0000",
            "content": "Hi Ryan,\n\n\n\tIf the loggerName attribute is missing, it defaults to the fully-qualified class name of LoggingInfoStream (see default value used for getting the attribute).\n\n\n\n\n\tI will update the example solrconfig.xml, good call!\n\n\n\n\n\tEven if the logs are being sent to the same file, the logger name is almost always part of the formatter configuration. For the solrconfig.xml perhaps a good example would be\n\n<infoStream loggerName=\"org.apache.solr.update.LoggingInfoStream.${solr.core.name}\">true</infoStream>\n\n\n\n\n\n(I think that actually will substitute core name correctly, will check...). "
        },
        {
            "author": "Shikhar Bhushan",
            "id": "comment-13838061",
            "date": "2013-12-03T19:19:48+0000",
            "content": "attaching patch with updated example solrconfig.xml "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971148",
            "date": "2014-04-16T12:57:17+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}