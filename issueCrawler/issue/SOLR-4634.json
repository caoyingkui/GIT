{
    "id": "SOLR-4634",
    "title": "Fix test bugs in Javascript tests to work with Java 8's Mozilla-Rhino-replacement \"Nashorn\"",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "the new Java 8 builds have replaced \"Mozilla Rhino\" JavaScript engine with \"Nashorn\" (http://openjdk.java.net/projects/nashorn/). The tests assume that a specific java type is returned, which is not guaranteed and Rhino-specific. Instead it should only cast to java.lang.Number and not to a specific type. The reason for the difference: Javascript is typeless, it only knows numbers, but not double/integer/...\n\nThe other bug is not explainable to me, I think its some other problem. Il will fix the first one.\n\n\nThe following tests fail, mostly with \"java.lang.Integer cannot be casted to java.lang.Double\":\n\n\n\torg.apache.solr.update.processor.ScriptEngineTest.testEvalText\n\torg.apache.solr.update.processor.ScriptEngineTest.testPut\n\torg.apache.solr.update.processor.ScriptEngineTest.testEvalReader\n\n\n\nThose fail with some assert problem (method not found, I think the javascript is bogus):\n\n\n\torg.apache.solr.update.processor.StatelessScriptUpdateProcessorFactoryTest.testSingleScript\n\torg.apache.solr.update.processor.StatelessScriptUpdateProcessorFactoryTest.testMultipleScripts",
    "attachments": {
        "SOLR-4634.patch": "https://issues.apache.org/jira/secure/attachment/12575142/SOLR-4634.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13611491",
            "date": "2013-03-23T00:48:31+0000",
            "content": "This patch fixes both issues and another tye error in DIH:\n\n\tThe fix was to cast to Number and not expect a specific number type\n\tIn DIH there was a wrong String type expected\n\tthe problem with assertNotNull not found was a preexisting bug in the script: It tried to call a static method (Assert.assertNotNull) on an instance, which is not allowed by \"corect\" javascript. I fixed this by directly using org.junit.Assert.\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13611494",
            "date": "2013-03-23T00:55:47+0000",
            "content": "Committed to 4.x and trunk. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13611506",
            "date": "2013-03-23T01:14:15+0000",
            "content": "Thanks Uwe! "
        }
    ]
}