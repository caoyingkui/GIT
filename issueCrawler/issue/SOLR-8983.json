{
    "id": "SOLR-8983",
    "title": "Failed Collection CREATE call should cleanup the cluster state before returning",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5.1",
            "6.0.1",
            "6.1"
        ],
        "affect_versions": "5.5,                                            6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "In case of a failed collection creation call, the cluster state is updated leaving an entry for the failed collection. This is also returned by the LIST command, allowing the users to believe that the collection exists.\n\nCREATE call should cleanup in case of a failed attempt at creating the collection.",
    "attachments": {
        "SOLR-8983-test.patch": "https://issues.apache.org/jira/secure/attachment/12798625/SOLR-8983-test.patch",
        "SOLR-8983.patch": "https://issues.apache.org/jira/secure/attachment/12799022/SOLR-8983.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-04-14T01:20:20+0000",
            "author": "Anshum Gupta",
            "content": "Here's a test that highlights the issue. Will work on a patch so that this gets into 5.5.1. ",
            "id": "comment-15240379"
        },
        {
            "date": "2016-04-15T22:07:32+0000",
            "author": "Anshum Gupta",
            "content": "Patch with test ",
            "id": "comment-15243737"
        },
        {
            "date": "2016-04-16T01:49:25+0000",
            "author": "Anshum Gupta",
            "content": "Ignore that patch, though I'd want to do this but it would break existing apps as it would throw an exception instead of returning a \"failure\" map. I'll post an updated patch. ",
            "id": "comment-15243941"
        },
        {
            "date": "2016-04-18T07:14:59+0000",
            "author": "Anshum Gupta",
            "content": "I'll commit this first thing tomorrow morning, before starting the back-ports for 5.5.1. ",
            "id": "comment-15245231"
        },
        {
            "date": "2016-04-18T08:28:32+0000",
            "author": "Anshum Gupta",
            "content": "Had to increase the socket time out for one of the tests as it involved cleaning up of a collection and so had started to take longer. ",
            "id": "comment-15245304"
        },
        {
            "date": "2016-04-18T09:36:22+0000",
            "author": "Varun Thacker",
            "content": "Hi Anshum,\n\nPatch looks good!\n\nFew comments on the patch:\n\n1. Can we move the test to not use AbstractFullDistribZkTestBase and use SolrCloudTestCase instead? It should make the test a lot faster in my experience. The current test on my machine took 55s . \n2. In testCreateCollectionCleanup() after we confirm that the collection doesn't exist via the LIST api call, can we try to create a collection without the bogus dataDir param to make sure it gets created successfully.\n3. Maybe we can randomize what param we pass wrongly? We can try with a wrong configName , try with legacyCloud=false etc. It might trigger different artifacts which get left behind to give better test coverage?\n4. A separate test which uses more than one replica so that we know all the cores were cleaned up properly?\n5. In OverseerCollectionMessageHandler there is one INFO and one WARN statement with a similar message. Maybe we should just put across a message like \"failed to create collection. Cleaning up artifacts ..\" ?\n6. The cleanup delete operation does not pass along the async param which might have been used.\n7. Slightly unrelated but in createCollection instead of catching Exception, catching IOException should be enough and we don't even need to catch SolrException ? ",
            "id": "comment-15245369"
        },
        {
            "date": "2016-04-18T16:02:34+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for taking a look Varun!\n\nCan we move the test to not use AbstractFullDistribZkTestBase and use SolrCloudTestCase instead? It should make the test a lot faster in my experience. The current test on my machine took 55s . \nsure\n\nIn testCreateCollectionCleanup() after we confirm that the collection doesn't exist via the LIST api call, can we try to create a collection without the bogus dataDir param to make sure it gets created successfully.\nThere are other tests that check for exactly that, I think we can skip that and save time here.\n\nMaybe we can randomize what param we pass wrongly? We can try with a wrong configName , try with legacyCloud=false etc. It might trigger different artifacts which get left behind to give better test coverage?\nwrong configName etc,  fail fast i.e. without creating any core. If they don't they should. There are wrong config name issues that we could simulate e.g. create a collection, and during the process, force remove the config from zk so that a core creation fails but I think that isn't something that we should include with this issue.\n\nA separate test which uses more than one replica so that we know all the cores were cleaned up properly?\nYes, but I think the deleteCollection would already be testing the same. We just reuse the code.\n\nIn OverseerCollectionMessageHandler there is one INFO and one WARN statement with a similar message. Maybe we should just put across a message like \"failed to create collection. Cleaning up artifacts ..\" ?\nwarn ? Can you point me to it? Here's what I see:\nFailure\nlog.error(\"Cleaning up collection [\" + collectionName + \"].\" ); and\nlog.info(\"Cleaned up collection [\" + collectionName + \"].\");\n\n\nSuccess\nlog.debug(\"Finished create command on all shards for collection: \"\n            + collectionName);\n\n\nThe cleanup delete operation does not pass along the async param which might have been used.\nI thought about that but decided against passing that param. Is there a reason why you would want to pass that along? We aren't passing/appending the core responses and if the request was async, the user already received a response about request submission.\n\nSlightly unrelated but in createCollection instead of catching Exception, catching IOException should be enough and we don't even need to catch SolrException ?\n+1, but I didn't want to include it here. I ideally wanted to fail fast  and throw an exception from here (see my previous patches) but that would change the behavior for end users so decided against it for now.\n ",
            "id": "comment-15245903"
        },
        {
            "date": "2016-04-18T16:11:05+0000",
            "author": "Anshum Gupta",
            "content": "Change the CreateCollectionCleanupTest to extend SolrCloudTestCase. ",
            "id": "comment-15245912"
        },
        {
            "date": "2016-04-18T16:58:44+0000",
            "author": "Varun Thacker",
            "content": "Hi Anshum,\n\nAwesome. The test now runs in 34s vs 55s ! Most of the time was spent waiting for the collection to come up live\n\n\n6435 INFO  (qtp1682863192-26) [n:127.0.0.1:59727_solr    ] o.a.s.h.a.CollectionsHandler Wait for new collection to be active for at most 30 seconds. Check all shard replicas\n36507 ERROR (qtp1682863192-26) [n:127.0.0.1:59727_solr    ] o.a.s.h.a.CollectionsHandler Timed out waiting for new collection's replicas to become ACTIVE with timeout=30\n\n\n\nMaybe since we know the collection is going to fail pass a custom solrXML string to MiniSolrCloudCluster which has  a smaller createCollectionWaitTimeTillActive ? \n\nIs there a reason why you would want to pass that along? We aren't passing/appending the core responses and if the request was async, the user already received a response about request submission.\n\nI guess adding the async param would make the call more resilient for longer delete times?\n\nwe don't even need to catch SolrException\n\nI think we shouldn't change that . Sorry for the noise. It makes sense to catch it and throw it back so that the caller is informed correctly about a runtime exception.\n\nOther changes look good! Thanks ",
            "id": "comment-15246004"
        },
        {
            "date": "2016-04-18T18:02:19+0000",
            "author": "Anshum Gupta",
            "content": "The test now runs in 12s on my machine. Thanks Varun \nI think we should slowly and gradually start doing this to more of our tests. ",
            "id": "comment-15246185"
        },
        {
            "date": "2016-04-18T18:19:10+0000",
            "author": "Anshum Gupta",
            "content": "updated patch that improves the logging to explicitly mention artifacts cleanup for a failed create collection request ",
            "id": "comment-15246231"
        },
        {
            "date": "2016-04-18T18:33:48+0000",
            "author": "Varun Thacker",
            "content": "+1 . Looks good! ",
            "id": "comment-15246271"
        },
        {
            "date": "2016-04-18T19:24:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 84a6ff697e78cc944067bf7e196533dff7d88b8e in lucene-solr's branch refs/heads/master from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=84a6ff6 ]\n\nSOLR-8983: Cleanup clusterstate in case of a failed CREATE collection call ",
            "id": "comment-15246379"
        },
        {
            "date": "2016-04-18T20:10:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 55de1ba539ca16b0b68de4ad8280d41e3e4bc60d in lucene-solr's branch refs/heads/branch_6x from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=55de1ba ]\n\nSOLR-8983: Cleanup clusterstate in case of a failed CREATE collection call ",
            "id": "comment-15246438"
        },
        {
            "date": "2016-04-19T18:59:46+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f5d84b6fce82df87c8bb8a0d585ff32e5a9fcd66 in lucene-solr's branch refs/heads/branch_5x from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f5d84b6 ]\n\nSOLR-8983: Cleanup clusterstate in case of a failed CREATE collection call ",
            "id": "comment-15248422"
        },
        {
            "date": "2016-04-19T19:02:09+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b727111732417871050c80fd7f598f78e1729a2e in lucene-solr's branch refs/heads/branch_5_5 from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b727111 ]\n\nSOLR-8983: Cleanup clusterstate in case of a failed CREATE collection call ",
            "id": "comment-15248427"
        },
        {
            "date": "2016-05-19T17:06:59+0000",
            "author": "Steve Rowe",
            "content": "Reopening to backport to 6.0.1. ",
            "id": "comment-15291524"
        },
        {
            "date": "2016-05-19T17:13:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4f9159744c914f881f422f1da8ecef5e0e25cfb6 in lucene-solr's branch refs/heads/branch_6_0 from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4f91597 ]\n\nSOLR-8983: Cleanup clusterstate in case of a failed CREATE collection call\n\nFor branch_6_0: Modified CreateCollectionCleanupTest.java to use old-style CollectionAdminRequest.Create and .List, since SOLR-8976 will land in 6.1. ",
            "id": "comment-15291538"
        },
        {
            "date": "2016-05-19T17:16:57+0000",
            "author": "Steve Rowe",
            "content": "Replying here because I can't change the commit message: SOLR-8976 is not relevant - I meant that SOLR-8765 will land in 6.1. ",
            "id": "comment-15291549"
        },
        {
            "date": "2016-05-20T11:11:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5856dcf5082b2016f94c63cf697fa9f5a44ab303 in lucene-solr's branch refs/heads/branch_6_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5856dcf ]\n\nSOLR-8983: backport to branch_6_0 the required new cloud-minimal configset, originally committed on branch_6x under SOLR-8782 ",
            "id": "comment-15293192"
        },
        {
            "date": "2016-05-28T13:38:23+0000",
            "author": "Steve Rowe",
            "content": "Bulk close issues included in the 6.0.1 release. ",
            "id": "comment-15305359"
        }
    ]
}