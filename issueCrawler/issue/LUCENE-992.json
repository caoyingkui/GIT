{
    "id": "LUCENE-992",
    "title": "IndexWriter.updateDocument is no longer atomic",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "2.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Spinoff from LUCENE-847.\n\nNing caught that as of LUCENE-843, we lost the atomicity of the delete\n+ add in IndexWriter.updateDocument.\n\nNing suggested a simple fix: move the buffered deletes into\nDocumentsWriter and let it do the delete + add atomically.  This has a\nnice side effect of also consolidating the \"time to flush\" logic in\nDocumentsWriter.",
    "attachments": {
        "LUCENE-992.patch": "https://issues.apache.org/jira/secure/attachment/12365099/LUCENE-992.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-09-04T18:33:17+0000",
            "content": "Attached patch.\n\nI added a unit test that runs 2 indexing threads (calling\nupdateDocument) and 2 reader threads and asserts in the reader threads\nthat the number of documents never changes.\n\nI also slightly changed the exception semantics in IndexWriter:\npreviously if a disk full (or other) exception was hit when flushing\nthe buffered docs, the buffered deletes were retained but the\npartially flushed buffered docs (if any) were discarded.  I think this\nwas actually a bug because the buffered deletes must also be discarded\nsince they refer to document numbers that are no longer valid.  So I\nchanged it to also clear buffered deletes on exception, and had to\nchange one unit test (TestIndexWriterDelete) to match this. ",
            "author": "Michael McCandless",
            "id": "comment-12524818"
        },
        {
            "date": "2007-09-06T01:29:10+0000",
            "content": "The patch looks good! A few comments and/or observations:\n\n\n\taddDocument(Document doc, Analyzer analyzer, Term delTerm): is it better to name it updateDocument?\n\n\n\n\n\tI didn't check all the variable accesses in DocumentsWriter, but it seems abort() should lock for some of the variables it accesses. Or make abort() a synchronized method.\n\n\n\n\n\tObservation: Large documents will block small documents from being flushed if addDocument of large documents is called before that of small ones. This is not the case before LUCENE-843.\n\n\n\n> I also slightly changed the exception semantics in IndexWriter:\n> previously if a disk full (or other) exception was hit when flushing\n> the buffered docs, the buffered deletes were retained but the\n> partially flushed buffered docs (if any) were discarded.\n\n\n\tObservation: Before LUCENE-843, both buffered docs and buffered deletes were retained when such an exception occurs. Now both buffered docs and buffered deletes would be discared if an exception is hit.\n\n ",
            "author": "Ning Li",
            "id": "comment-12525271"
        },
        {
            "date": "2007-09-06T09:16:30+0000",
            "content": "\n>  - addDocument(Document doc, Analyzer analyzer, Term delTerm): is it\n>    better to name it updateDocument?\n\nGood, I'll make that change.\n\n> - I didn't check all the variable accesses in DocumentsWriter, but\n>   it seems abort() should lock for some of the variables it\n>   accesses. Or make abort() a synchronized method.\n\nOK I will make abort synchronized.\n\n> - Observation: Large documents will block small documents from being\n>   flushed if addDocument of large documents is called before that of\n>   small ones. This is not the case before LUCENE-843.\n\nRight, when multiple documents are in flight at once (because multiple\nthreads are adding documents), the documents must be flushed in order\nof docID.  Each one grabs a unique (sequential) docID at the start\n(synchronized), does the indexing un-synchronized, then flushes\n(synchronized) but only if it is that documents \"turn\" to flush (ie it\nis the next docID to be written).  So if a large doc grabs docID\nfirst, then a small doc comes through, it's possible for small docs to\nfinish indexing before large doc does in which case small docs are\nbuffered, waiting for large doc to flush first.\n\n> I also slightly changed the exception semantics in IndexWriter:\n> previously if a disk full (or other) exception was hit when flushing\n> the buffered docs, the buffered deletes were retained but the\n> partially flushed buffered docs (if any) were discarded.\n\n> - Observation: Before LUCENE-843, both buffered docs and buffered\n>   deletes were retained when such an exception occurs. Now both\n>   buffered docs and buffered deletes would be discared if an exception\n>   is hit.\n\nRight, altough if the exception is hit after the commit point (eg,\nwhile building the compound file) then the buffered docs & deletes\nare added to the index.\n\nI plan to commit this in a day or two. ",
            "author": "Michael McCandless",
            "id": "comment-12525377"
        }
    ]
}