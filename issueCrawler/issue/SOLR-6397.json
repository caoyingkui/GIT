{
    "id": "SOLR-6397",
    "title": "zkcli script put/putfile should allow overwriting an existing znode's data",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "zkcli doesn't allow me to update a znode that already exists, perhaps using a -f (force) flag?\n\nCurrently, if I want to putfile for a znode that already exists, results in:\n\nException in thread \"main\" org.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode = NodeExists for /clusterstate.json\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:119)\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n\tat org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)\n\tat org.apache.solr.common.cloud.SolrZkClient$6.execute(SolrZkClient.java:273)\n\tat org.apache.solr.common.cloud.SolrZkClient$6.execute(SolrZkClient.java:270)\n\tat org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:73)\n\tat org.apache.solr.common.cloud.SolrZkClient.create(SolrZkClient.java:270)\n\tat org.apache.solr.cloud.ZkCLI.main(ZkCLI.java:268)\n\n\nThe workaround is to use ZooKeeper's command-line set command with \"`cat <file>`\"",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-14104463",
            "date": "2014-08-20T20:04:14+0000",
            "content": "Yeah, I think it's just an oversight. I'd probably go without requiring -f myself. "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14163567",
            "date": "2014-10-08T14:51:02+0000",
            "content": "Fix is trivial - I'll get this one done today while waiting on tests to run "
        },
        {
            "author": "Marcelo Rodrigues",
            "id": "comment-14238192",
            "date": "2014-12-08T18:20:08+0000",
            "content": "If this client instance has a \"setData\" method:\nSolrZkClient zkClient = null;\n\nhow about including a \"makepath\" call in case the znode doesn't exist and replace the \"create\" call with \"setData\"?\nelse if (line.getOptionValue(CMD).equals(PUT)) {\n...\nzkClient.create(arglist.get(0).toString(), arglist.get(1).toString().getBytes(\"UTF-8\") // replace it here\n\nApologies in advance for the intrusive comment, just an idea. "
        },
        {
            "author": "Gili Nachum",
            "id": "comment-14239474",
            "date": "2014-12-09T14:45:20+0000",
            "content": "One workaround is to delete the znode (cmd clear) then put it in place again (cmd putfile). "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14258434",
            "date": "2014-12-24T18:44:04+0000",
            "content": "Commit 1647828 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1647828 ]\n\nSOLR-6397: zkcli script put/putfile should allow overwriting an existing znode's data "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14258516",
            "date": "2014-12-24T21:00:57+0000",
            "content": "Commit 1647842 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1647842 ]\n\nSOLR-6397: zkcli script put/putfile should allow overwriting an existing znode's data "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14333007",
            "date": "2015-02-23T05:03:03+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}