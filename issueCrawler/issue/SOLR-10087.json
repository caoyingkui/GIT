{
    "id": "SOLR-10087",
    "title": "StreamHandler should be able to use runtimeLib jars",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "StreamHandler currently can't uses jars that via the runtimeLib and Blob Store api. This is because the StreamHandler uses core.getResourceLoader() instead of core.getMemClassLoader() for loading classes.\n\nAn example of this working with the fix is here: https://github.com/risdenk/solr_custom_streaming_expressions\n\nSteps:\n\n# Inspired by https://cwiki.apache.org/confluence/display/solr/Adding+Custom+Plugins+in+SolrCloud+Mode\n\n# Start Solr with enabling Blob Store\n./bin/solr start -c -f -a \"-Denable.runtime.lib=true\"\n\n# Create test collection\n./bin/solr create -c test\n\n# Create .system collection\ncurl 'http://localhost:8983/solr/admin/collections?action=CREATE&name=.system'\n\n# Build custom streaming expression jar\n(cd custom-streaming-expression && mvn clean package)\n\n# Upload jar to .system collection using Blob Store API (https://cwiki.apache.org/confluence/display/solr/Blob+Store+API)\ncurl -X POST -H 'Content-Type: application/octet-stream' --data-binary @custom-streaming-expression/target/custom-streaming-expression-1.0-SNAPSHOT.jar 'http://localhost:8983/solr/.system/blob/test'\n\n# List all blobs that are stored\ncurl 'http://localhost:8983/solr/.system/blob?omitHeader=true'\n\n# Add the jar to the runtime lib\ncurl 'http://localhost:8983/solr/test/config' -H 'Content-type:application/json' -d '{\n   \"add-runtimelib\": { \"name\":\"test\", \"version\":1 }\n}'\n\n# Create custom streaming expression using work from SOLR-9103\n# Patch from SOLR-10087 is required for StreamHandler to load the runtimeLib jar\ncurl 'http://localhost:8983/solr/test/config' -H 'Content-type:application/json' -d '{\n  \"create-expressible\": {\n    \"name\": \"customstreamingexpression\",\n    \"class\": \"com.test.solr.CustomStreamingExpression\",\n    \"runtimeLib\": true\n  }\n}'\n\n# Test the custom streaming expression\ncurl 'http://localhost:8983/solr/test/stream?expr=customstreamingexpression()'",
    "attachments": {
        "SOLR-10087.patch": "https://issues.apache.org/jira/secure/attachment/12850481/SOLR-10087.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-02-01T20:51:01+0000",
            "content": "Noble Paul Cao Manh Dat Dennis Gove Joel Bernstein - Thoughts on this? ",
            "author": "Kevin Risden",
            "id": "comment-15848908"
        },
        {
            "date": "2017-02-01T20:59:58+0000",
            "content": "I'm hesitant about the ability to post binaries into Solr - I feel like it's a huge security concern. That said, this feature isn't adding the ability to post binaries, just the ability to make use of posted binaries in streaming. If the ability to post binaries is something that is already considered safe and/or the benefits outweigh the drawbacks, then I don't see any reason why streaming shouldn't support it. ",
            "author": "Dennis Gove",
            "id": "comment-15848918"
        },
        {
            "date": "2017-02-01T21:04:00+0000",
            "content": "The ability to add binaries is protected by a system property and has to be explicitly enabled. Additionally, the jars can be signed if required. https://cwiki.apache.org/confluence/display/solr/Adding+Custom+Plugins+in+SolrCloud+Mode ",
            "author": "Kevin Risden",
            "id": "comment-15848924"
        },
        {
            "date": "2017-02-01T21:29:04+0000",
            "content": " I believe all components should be dynamically loadable. Kevin Risden , please explain (in description) how users can register a streaming expression plugin and use it if the class is loaded from a runtime jar\n\n\nDennis Gove We have taken extreme caution in protecting the system while using libraries posted from outside\n\n1) user has to enable it explicitly from command line\n2) user can optionally choose to enforce that the binaries are signed by a certain private key ",
            "author": "Noble Paul",
            "id": "comment-15848959"
        },
        {
            "date": "2017-02-01T22:37:58+0000",
            "content": "Noble Paul Added in the description how to register a custom streaming expression with a runtime jar. ",
            "author": "Kevin Risden",
            "id": "comment-15849050"
        },
        {
            "date": "2017-02-01T23:08:21+0000",
            "content": "Thanks Kevin Risden\n\nI guess we should cut down he steps more . I plan to implement SOLR-7955 so that one step to create the ..system collection is gone. Can we have a well known package such as solr.streamingexp.customexpr automatically map to an expressible called  customexpr. So, user can effectively eliminate that step as well.  ",
            "author": "Noble Paul",
            "id": "comment-15849080"
        },
        {
            "date": "2017-02-02T01:14:37+0000",
            "content": "I think the current steps aren't that bad. We can debate changing the process in a different JIRA. This was opened as a one line change that enables jars to be loaded. Without the change jars can't be loaded at all from the blob store. ",
            "author": "Kevin Risden",
            "id": "comment-15849218"
        },
        {
            "date": "2017-02-02T01:18:11+0000",
            "content": "Totally agree. Th is ticket should limit the scope to the description and we should close this ",
            "author": "Noble Paul",
            "id": "comment-15849224"
        },
        {
            "date": "2017-02-02T01:21:04+0000",
            "content": "I think this is a good addition. ",
            "author": "Dennis Gove",
            "id": "comment-15849228"
        },
        {
            "date": "2017-02-02T15:01:44+0000",
            "content": "Commit db987b810cd9acaae3fae891ef07258b09d4d94b in lucene-solr's branch refs/heads/master from Kevin Risden\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=db987b8 ]\n\nSOLR-10087: StreamHandler should be able to use runtimeLib jars ",
            "author": "ASF subversion and git services",
            "id": "comment-15850021"
        },
        {
            "date": "2017-02-02T15:02:17+0000",
            "content": "Commit e457613e6ec9fa258f9fd170b00dec58547e51e6 in lucene-solr's branch refs/heads/branch_6x from Kevin Risden\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e457613 ]\n\nSOLR-10087: StreamHandler should be able to use runtimeLib jars ",
            "author": "ASF subversion and git services",
            "id": "comment-15850023"
        },
        {
            "date": "2017-02-08T17:55:07+0000",
            "content": "Kevin Risden The JDBCStream class load drivers from outside. It would be nice if you could load it from runtimelib jars as well ",
            "author": "Noble Paul",
            "id": "comment-15858310"
        },
        {
            "date": "2017-02-08T21:00:42+0000",
            "content": "Noble Paul - Can you open a new JIRA issue for that? ",
            "author": "Kevin Risden",
            "id": "comment-15858536"
        },
        {
            "date": "2017-02-08T21:07:10+0000",
            "content": "Kevin Risden opened SOLR-10105 ",
            "author": "Noble Paul",
            "id": "comment-15858547"
        },
        {
            "date": "2017-03-30T18:03:31+0000",
            "content": "Kevin Risden: are the instructions in the description of this issue still accurate after it was committed? Asking for the Ref Guide, unless perhaps you think we should skip documenting this. ",
            "author": "Cassandra Targett",
            "id": "comment-15949517"
        },
        {
            "date": "2017-03-30T21:25:48+0000",
            "content": "Cassandra Targett - I'm 90% sure the instructions are still accurate. I haven't had a chance to try it with the new Solr release though. ",
            "author": "Kevin Risden",
            "id": "comment-15949872"
        },
        {
            "date": "2017-03-31T14:34:06+0000",
            "content": "Kevin Risden - I just tried it with your example project, and everything goes smoothly until creating the custom expression with create-expressible. I get an error like:\n\n\nmsg=Error trying to proxy request for url: http://192.168.0.110:7574/solr/test/config,trace=org.apache.solr.common.SolrException: Error trying to proxy request for url: http://192.168.0.110:7574/solr/test/config\n\n\n\nAnd then in the stack trace: Caused by: java.net.SocketException: Bad file descriptor. I'm using 6.5.0 that was just released. I have a feeling this is something I'm doing wrong since I'm not well-versed in blob store, but adding info in case you see a bug. ",
            "author": "Cassandra Targett",
            "id": "comment-15951017"
        },
        {
            "date": "2017-03-31T18:07:02+0000",
            "content": "Hmmm I'll try to try it later today if I get a few minutes. I'll update by github project to use the new 6.5.0 release and remove the custom jar I had placed in the project. ",
            "author": "Kevin Risden",
            "id": "comment-15951410"
        },
        {
            "date": "2017-03-31T19:06:51+0000",
            "content": "Cassandra Targett - I updated the repo https://github.com/risdenk/solr_custom_streaming_expressions to use Solr 6.5.0 and had no issues. Bad file descriptor is a weird error to be getting. ",
            "author": "Kevin Risden",
            "id": "comment-15951506"
        }
    ]
}