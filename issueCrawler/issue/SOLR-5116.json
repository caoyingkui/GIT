{
    "id": "SOLR-5116",
    "title": "Rewrite field:* as if field:[* TO *] so field type can optimize",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "query parsers"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The queries field:* and field:[* TO *] are semantically equivalent but the latter is potentially must faster since the field type can intercept it to return a more optimal implementation than a brute force scan of the terms.  The trie numeric fields do this.  The spatial ones don't but they could be rewritten easily to do so.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Jack Krupansky",
            "id": "comment-13729577",
            "date": "2013-08-05T15:38:18+0000",
            "content": "Is that really going to be faster that doing the filter query that was discussed?\n\nAnd... supposedly the filter query was going to be faster for the negative form, -field:*, at least that's what Uwe originally led me to believe. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13729578",
            "date": "2013-08-05T15:39:26+0000",
            "content": "But I am a solid +1 for making Solr handle \"\" and \"-\" queries efficiently, and automatically. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13729696",
            "date": "2013-08-05T17:37:41+0000",
            "content": "By raising that question, I think you're conflating issues that should be kept separate.  Leave caching of such queries to SOLR-5093.  To sorta answer that question, a bitset in the filter cache is almost always going to be faster than nearly any other query. Of course it's got to be queried the first time.  And Solr caches filter queries in normalized to their \"positive\" form; a negative query will re-use it. "
        }
    ]
}