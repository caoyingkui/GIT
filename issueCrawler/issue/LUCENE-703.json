{
    "id": "LUCENE-703",
    "title": "Change QueryParser to use ConstantScoreRangeQuery in preference to RangeQuery by default",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/queryparser"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "2.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Change to QueryParser to default to using new ConstantScoreRangeQuery in preference to RangeQuery\nfor range queries. This implementation is generally preferable because it \na) Runs faster \nb) Does not have the scarcity of range terms unduly influence score \nc) avoids any \"TooManyBooleanClauses\" exception.\n\nHowever, if applications really need to use the old-fashioned RangeQuery and the above\npoints are not required then the  \"useOldRangeQuery\" property can be used to revert to old behaviour.\n\nThe patch includes extra Junit tests for this flag and all other Junit tests pass",
    "attachments": {
        "patch.diff": "https://issues.apache.org/jira/secure/attachment/12343960/patch.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2006-10-30T21:59:18+0000",
            "content": "Change to QueryParser and associated JUnit test ",
            "author": "Mark Harwood",
            "id": "comment-12445726"
        },
        {
            "date": "2006-10-31T18:33:37+0000",
            "content": "Looks OK to me.... Solr has had this from the start, but it was unclear if Lucene folks wanted to break scoring backward compatibility (including disabling index-time boosts). ",
            "author": "Yonik Seeley",
            "id": "comment-12445991"
        },
        {
            "date": "2006-11-01T15:19:35+0000",
            "content": "In my opinion the positives of this change outweigh the negatives but  is it worth consulting the java-user mailing list and canvassing  opinion before committing? ",
            "author": "Mark Harwood",
            "id": "comment-12446267"
        },
        {
            "date": "2006-11-01T23:06:48+0000",
            "content": "If we're going to do this, do we want to add support for \"*\" like SolrQueryParser has...\n\nhttps://svn.apache.org/viewvc/incubator/solr/trunk/src/java/org/apache/solr/search/SolrQueryParser.java?view=markup\n\nie...\n\n   fieldName:[a TO *]\n   fieldName:[* TO z] ",
            "author": "Hoss Man",
            "id": "comment-12446400"
        },
        {
            "date": "2006-11-03T07:10:40+0000",
            "content": "I'm too tired to look at the patch, but I am +1 for this change in principal.  Voted for it in JIRA, too. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12446837"
        },
        {
            "date": "2006-11-14T21:54:54+0000",
            "content": "So two +1s for this patch and no objections so far.  \n\nLast call - if there's no more comments I'll commit this later. ",
            "author": "Mark Harwood",
            "id": "comment-12449813"
        }
    ]
}