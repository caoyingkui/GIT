{
    "id": "LUCENE-3900",
    "title": "Make BaseTokenStreamTestCase.checkRandomData more debuggable",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "This thing has gotten meaner recently, but if it fails, it can be tough to debug.\n\nI feel like usually we just look at whatever analyzer failed, and completely review the code\nand look for any smells until it passes \n\nSo I think instead we can possibly make this easier if this does something like:\n\ntry { \n ...checks... \n} catch (Throwable t) { \n  BaseTokenException e = new BaseTokenException(randomInputUsed, randomParamter1, randomParameter2); \n  e.setInitCause(t); \n  throw e; \n}\n\n\n\nThen you could have a useful exception with the input string that caused the fail,\ninformation about whether or not charfilter/mockreaderwrapper/whatever were used, etc,\nas well as the initial problem as root cause.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-21T16:00:30+0000",
            "content": "+1! ",
            "author": "Michael McCandless",
            "id": "comment-13234446"
        }
    ]
}