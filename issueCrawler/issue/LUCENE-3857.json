{
    "id": "LUCENE-3857",
    "title": "exceptions from other threads in beforeclass/etc do not fail the test",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Lots of tests create indexes in beforeClass methods, but if an exception is thrown from another thread\nit won't fail the test... e.g. this test passes:\n\npublic class TestExc extends LuceneTestCase {\n  @BeforeClass\n  public static void beforeClass() {\n    new Thread() {\n      public void run() {\n        throw new RuntimeException(\"boo!\");\n      }  \n    }.start();\n  }\n  \n  public void test() { }\n}\n\n\n\nthis is because the uncaught exception handler is in setup/teardown",
    "attachments": {
        "LUCENE-3857.patch": "https://issues.apache.org/jira/secure/attachment/12517608/LUCENE-3857.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-08T15:01:06+0000",
            "content": "This is solved by 3808 but I can also fix it on the trunk if you need a temporary fix. ",
            "author": "Dawid Weiss",
            "id": "comment-13225237"
        },
        {
            "date": "2012-03-08T21:02:43+0000",
            "content": "A patch against the trunk extracting uncaught exceptions management to a class and test rule.\n\nThere are tiny differences to previous implementations \u2013 the exception is logged to stderr at the time it is thrown and parent handler is NOT invoked (because it'd cause double detection and the default handler's job is only to dump the stack).\n\nI will commit immediately? ",
            "author": "Dawid Weiss",
            "id": "comment-13225505"
        }
    ]
}