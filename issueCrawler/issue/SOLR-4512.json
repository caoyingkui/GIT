{
    "id": "SOLR-4512",
    "title": "/browse GUI: Extra URL params should be sticky",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [
            "contrib - Velocity"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Sometimes you want to experiment with extra query parms in Velocity \"/browse\". But if you modify the URL it will be forgotten once you click anything in the GUI.\n\nWe need a way to make them sticky, either generate all the links based on the current actual URL, or add a checkbox which reveals a new input field where you can write all the extra params you want appended",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Erik Hatcher",
            "id": "comment-14265609",
            "date": "2015-01-06T03:06:00+0000",
            "content": "After experimenting with the new param sets feature from SOLR-6770, and knowing how tricky it would be to be more clever within the templates to deal with all this URL stickiness issue, I'm of the opinion that to make parameters sticky with /browse we can do this with /config/params REST API.  I'm proving this out with the data_driven_schema_configs and the example/films stuff and will be committing that work in the next day or two and closing this issue along with that example.   "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-14272335",
            "date": "2015-01-10T04:32:30+0000",
            "content": "I'm going to close with this technique as my recommendation for making parameters \"sticky\" to any request handler.  \n\nHere's how the data driven config defines the /browse handler:\n\n\n <requestHandler name=\"/browse\" class=\"solr.SearchHandler\" useParams=\"query,facets,velocity,browse\">\n\n\n\nThese param sets get defined in /conf/params.json, which can be done through API calls like this:\n\n\ncurl http://localhost:8983/solr/films/config/params -H 'Content-type:application/json'  -d '{\n\"update\" : {\n  \"facets\": {\n    \"facet.field\":\"genre\"\n    }\n  }\n}'\n\n\n\nUsing this technique allows not only params to be used across request handlers, but makes this \"sticky\" desire in /browse straightforward to deal with.  I left an empty/undefined \"browse\" param set in there that can be used to attach UI only types of parameters, such as this:\n\n\ncurl http://localhost:8983/solr/films/config/params -H 'Content-type:application/json'  -d '{\n\"set\" : {\n  \"browse\": {\n    \"hl\":\"on\",\n    \"hl.fl\":\"name\"\n    }\n  }\n}'\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14272553",
            "date": "2015-01-10T15:41:46+0000",
            "content": "Or should we just precreate all the params and give different requests with different useParams .just put the default option in the requesthandler and the rest can be done at request time\n "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332766",
            "date": "2015-02-23T05:01:48+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}