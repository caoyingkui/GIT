{
    "id": "LUCENE-6150",
    "title": "Remove staleFiles set and onIndexOutputClosed from FSDirectory",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/store"
        ],
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Task"
    },
    "description": "Hi,\nthe \"hack\" to keep track of files written to in FSDirectory, to filter them when calling sync is heavily broken. Michael McCandless already opened an issue, which was abandoned then.\n\nIn fact handling this in FSDirectory is a hack and broken! If IndexWriter is itsself not able to correctly handle tracking the files, it is also his repsonsibilty to do this. We already have a class that can do this: TrackingDirectoryWrapper. IndexWriter should use an instance of this class to track those stale files (until the problem is solved).\n\nI would like to keep FSDirectory clean from this, especially, as this is broken anyways: If somebody has another directory impl like HDFS or Infinispan, the problem still persists. The base directory should throw an IOException if trying to sync a file that does not exist!",
    "attachments": {
        "LUCENE-6150.patch": "https://issues.apache.org/jira/secure/attachment/12689683/LUCENE-6150.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14262157",
            "author": "Uwe Schindler",
            "date": "2014-12-31T12:57:38+0000",
            "content": "It could be that the problem is already solved and we can simply remove the stale files map: LUCENE-5570 "
        },
        {
            "id": "comment-14262161",
            "author": "Uwe Schindler",
            "date": "2014-12-31T13:13:07+0000",
            "content": "This removes the staleFiles set from FSDirectory. We already have enough tests that ensures that we have no longer any files that were deleted before. If we still miss some files, FSDirectory should not silently ignore those deleted files and throw IOException.\n\nI ran all tests with FSDirectory enabled and got no failures because of synced files that do not exist.\n\nI would like to commit this and let it bake to discover any bugs caused by not correctly tracking written files. But as MockDir already tracks this I am confident.\n\nMaybe Michael McCandless can give some more insight! "
        },
        {
            "id": "comment-14262170",
            "author": "Robert Muir",
            "date": "2014-12-31T13:41:31+0000",
            "content": "I think mike's concern was to avoid huge amount of fsync calls? Maybe especially on windows since everyone is clueless about what windows does ----> afraid things might be slower.\n\nI mean to me this is the OS's job to be a no-op for the ones we have \"already synced\": it knows there are no modifications to those. If windows gets slower, thats windows problem.\n\n+1 to the patch. "
        },
        {
            "id": "comment-14262177",
            "author": "Uwe Schindler",
            "date": "2014-12-31T13:48:06+0000",
            "content": "I think, if Mike's concern is still there, he should implement this in IndexWriter directly by using a TrackingDirectoryWrapper. It is for sure not the responsibility of FSDirectory to keep track. "
        },
        {
            "id": "comment-14262369",
            "author": "Uwe Schindler",
            "date": "2014-12-31T19:21:06+0000",
            "content": "This is also quite intersting to get insights on Windows: http://winntfs.com/2012/11/29/windows-write-caching-part-2-an-overview-for-application-developers/ "
        },
        {
            "id": "comment-14262524",
            "author": "Michael McCandless",
            "date": "2015-01-01T10:18:20+0000",
            "content": "+1 to simply remove this tracking (Uwe Schindler's patch) entirely!  fsync really should be fast if the file was already forced to disk. "
        },
        {
            "id": "comment-14262526",
            "author": "Uwe Schindler",
            "date": "2015-01-01T10:39:17+0000",
            "content": "Thanks Mike for confirmation! I will commit this and we will se the impact in your nightly benchmark, so I think we are fine.\n\nIf it is really a problem, I would like to \"simplify\" the tracking (remove the onIndexOutputClosed callback - that was the most annoying thing, because it makes the API horrible, because the tracking is not hidden). In fact, the tracking on close is not needed here. Its enough to simply add the filename to the set while opeining the output, then it can be completely private to the impl in FSDirectory. "
        },
        {
            "id": "comment-14262527",
            "author": "ASF subversion and git services",
            "date": "2015-01-01T10:43:31+0000",
            "content": "Commit 1648812 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1648812 ]\n\nLUCENE-6150: Remove staleFiles set and onIndexOutputClosed() from FSDirectory "
        },
        {
            "id": "comment-14262528",
            "author": "ASF subversion and git services",
            "date": "2015-01-01T10:45:53+0000",
            "content": "Commit 1648813 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1648813 ]\n\nMerged revision(s) 1648812 from lucene/dev/trunk:\nLUCENE-6150: Remove staleFiles set and onIndexOutputClosed() from FSDirectory "
        },
        {
            "id": "comment-14332612",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:00:57+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}