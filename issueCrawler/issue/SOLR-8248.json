{
    "id": "SOLR-8248",
    "title": "Log a query as soon as it comes in and assign a unique id to it",
    "details": {
        "components": [
            "Server"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "Often times when there is an OutOfMemory error Solr fails to log details about query that might have caused it. Solr doesn't provide enough information to investigate the root cause in such case. \n\nWe can log a query as soon as it comes in and reference it by it's unique id to log details like Hits, Status and QTime  when query finishes.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-07T20:33:02+0000",
            "author": "Jason Gerlowski",
            "content": "From a novice's perspective, this seems like a useful improvement, +1.  Though maybe there's performance-issues, or other things preventing this that I don't know about. ",
            "id": "comment-14995400"
        },
        {
            "date": "2015-11-07T21:10:42+0000",
            "author": "Yonik Seeley",
            "content": "It's definitely useful for debugging... I added something similar for debugging updates in LogUpdateProcessor:\n    if (logDebug) \n{ log.debug(\"PRE_UPDATE \" + cmd.toString() + \" \" + req); }\n\nBut logging is certainly costly, so it probably shouldn't be enabled by default.  It would also make life slightly harder for basic log analysis by requiring correlation by the id. ",
            "id": "comment-14995408"
        },
        {
            "date": "2015-11-08T15:27:33+0000",
            "author": "Mike Drob",
            "content": "Does SOLR-6919 get you most of the way there? ",
            "id": "comment-14995675"
        },
        {
            "date": "2015-12-22T23:21:38+0000",
            "author": "Pushkar Raste",
            "content": "SOLR-6919 logs REST request, however request may get modified based on the solr config. \n\nYonik Seeley I do agree that correlating query would be a problem (especially in multi sharded envirnment), other alternative is to log query twice and control logging query the first time if a flag is turned on. This however would also increase disk footprint of log files a lot. \n\nIs there a reason Solr doesn't use log4j2 or logback as these are supposed to faster than log4j  ",
            "id": "comment-15068898"
        },
        {
            "date": "2015-12-23T02:03:26+0000",
            "author": "Shawn Heisey",
            "content": "Is there a reason Solr doesn't use log4j2 or logback as these are supposed to faster than log4j \n\nBoring TL;DR history:\n\nFor most of its history, Solr has been using slf4j logging (from slf4j.org), bound to java.util.logging.\n\nIn version 4.3, logging jars were removed from the war file, moved to jetty's lib/ext folder, and the binding was changed to log4j 1.2.  I do not know why the older log4j was chosen, perhaps it was simply a familiar library.  Speculation says that part of it may have come from loyalty to a fellow Apache project, and the fact that the library on slf4j.org does not support log4j2.\n\nJust this year, log4j 1.x was declared completely end of life, so we have an issue to upgrade the binding to log4j2 (still using slf4j within Solr), but this is not a simple drop-in replacement.  Code changes will likely be required to keep the Logging tab in the admin UI working.  Jar changes will also be required. ",
            "id": "comment-15069029"
        },
        {
            "date": "2015-12-23T17:02:35+0000",
            "author": "Pushkar Raste",
            "content": "slfj and log4j2 do well go together, check this out https://logging.apache.org/log4j/2.0/log4j-slf4j-impl/index.html\nand log4j2 too is a apache project, so we still would be loyal to apache foundation \n\nHere is an article that compares log4j, logback and log4j2 \n\nI understand that there will be lot of work involved in moving to log4j2 but that would be justified given that it has significant performance benefits over log4j and and the fact that log4j 1.x is resting in peace ",
            "id": "comment-15069873"
        },
        {
            "date": "2015-12-23T17:23:05+0000",
            "author": "Shawn Heisey",
            "content": "SOLR-7887 is the issue to upgrade log4j.  Feel free to join in there. ",
            "id": "comment-15069907"
        }
    ]
}