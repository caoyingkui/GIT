{
    "id": "LUCENE-212",
    "title": "FileInputStream never closed in HTMLParser",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/examples"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "HTMLParser.java contains this code: \n\n  public HTMLParser(File file) throws FileNotFoundException \n{ \n    this(new FileInputStream(file)); \n  }\n \n\nThis FileInputStream should be closed with the close() method, as there's no \nguarantee that the garbage collection will run and do this for you. I don't \nknow how to fix this without changing the API to take a FileInputStream \ninstead of a File, as the call to this() must be the first thing in the \nconstructor, i.e. you cannot create the stream, call this(...), and then close \nthe stream.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2004-08-07T02:29:51+0000",
            "content": "I just committed a fix for this. It's maybe hardly a bug, as this is just a \ndemo, but people copy+paste the code so it's important to get it right. \n ",
            "author": "Daniel Naber",
            "id": "comment-12321684"
        }
    ]
}