{
    "id": "LUCENE-3953",
    "title": "Using many fields in filters, sorts causes OOM",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "I have an index with ~1M documents, and many uniquely named fields. Each document only has a few fields populated, but there is a large set of dynamic fields across all docs. In other words, theres many sparse fields.\n\nEventually the jvm will fall over due to OOM errors, because lucene's fieldCache grows without bounds. Adding more heap does not help.",
    "attachments": {
        "FieldCacheLimitPatch.patch": "https://issues.apache.org/jira/secure/attachment/12521409/FieldCacheLimitPatch.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-04T21:16:09+0000",
            "content": "Patch for lucene-solr core 4.0 ",
            "author": "Des Lownds",
            "id": "comment-13246740"
        },
        {
            "date": "2012-04-04T21:19:26+0000",
            "content": "I would appreciate feedback on the attached patch, which uses a size limited LinkedHashMap for innercache if the system property \"lucene.fieldCache.maxFields\" is set. If the property is not set, system uses old behavior. ",
            "author": "Des Lownds",
            "id": "comment-13246744"
        },
        {
            "date": "2012-04-04T22:53:26+0000",
            "content": "imports fixed. Patch applies to lucene-solr 4.0 checked out from http://svn.apache.org/repos/asf/lucene/dev/trunk ",
            "author": "Des Lownds",
            "id": "comment-13246817"
        },
        {
            "date": "2016-10-17T13:09:10+0000",
            "content": "This looks like a very old issue with the underlying code/implementation changed/hardened several times.\n\nIs this reproducible/relevant to the latest Lucene? ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-15582205"
        },
        {
            "date": "2016-10-17T13:26:33+0000",
            "content": "This looks mostly due to FieldCache storing data in a dense way. Now that FieldCache has been replaced with doc values, you would need many more fields in order to trigger OOMEs, but disk usage and indexing speed would still suffer from these sparse fields. I think we can consider it as fixed in master (7.0) thanks to the new sparse APIs for doc values and the new doc values format.\n\nThat said, it is still advised to have dense fields whenever possible. We made sparse fields more cost-efficient, but there is still a penalty compared to dense fields. ",
            "author": "Adrien Grand",
            "id": "comment-15582257"
        }
    ]
}