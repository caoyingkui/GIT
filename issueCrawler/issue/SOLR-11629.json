{
    "id": "SOLR-11629",
    "title": "CloudSolrClient.Builder should accept a zk host",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Today we need to create an empty builder and then wither pass zkHost or withSolrUrl\n\nSolrClient solrClient = new CloudSolrClient.Builder().withZkHost(\"localhost:9983\").build();\nsolrClient.request(updateRequest, \"gettingstarted\");\n\n\n\nWhat if we have two constructors , one that accepts a zkHost and one that accepts a SolrUrl .\n\nThe advantages that I can think of are:\n\n\tIt will be obvious to users that we support two mechanisms of creating a CloudSolrClient . The SolrUrl option is cool and applications don't need to know about ZooKeeper and new users will learn about this . Maybe our example's on the ref guide should use this?\n\tToday people can set both zkHost and solrUrl  but CloudSolrClient can only utilize one of them\n\n\n\nHttpClient's Builder accepts the host \n\nHttpSolrClient client = new HttpSolrClient.Builder(\"http://localhost:8983/solr\").build();\nclient.request(updateRequest, \"techproducts\");",
    "attachments": {
        "SOLR-11629.patch": "https://issues.apache.org/jira/secure/attachment/12897277/SOLR-11629.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-10T17:52:22+0000",
            "content": "I like the idea here, but it's a little tricky for CloudSolrClient, since zk-host and Solr-URL are both String values.\n\nJava won't let you have two constructors, with the same signature, so the straightforward approach won't compile:\n\n\npublic Builder(String solrUrl) {...}\npublic Builder(String zkHost) {...}\n\n\n\nWe could do something fancier, like introduce SolrUrl and ZkHost String-subtypes, but that would require uses to wrap their String-literal in a new SolrUrl(\"....\") declaration just to work around the type system.  Would clarify which parameters were \"required\", but also adds some user-irritation.  I'm ambivalent on whether or not it's worth it.\n\nIf no code solution presents itself here, maybe our best bet is just some Javadoc improvement. ",
            "author": "Jason Gerlowski",
            "id": "comment-16247844"
        },
        {
            "date": "2017-11-11T20:37:06+0000",
            "content": "Would would this look?\n\n\npublic Builder(List<String> solrUrls, ) {...}\npublic Builder(List<String> zkHost, Optional<String> chroot) {...}\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16248647"
        },
        {
            "date": "2017-11-12T11:45:52+0000",
            "content": "Ah, that would work.  I hadn't thought of bringing in the chroot to distinguish the constructors.  Good idea. ",
            "author": "Jason Gerlowski",
            "id": "comment-16248833"
        },
        {
            "date": "2017-11-13T03:52:25+0000",
            "content": "Attached patch follows the String/Optional approach you suggested above.  It also switches over any use of the no-arg CloudSolrClient.Builder ctor, and replaces it with the appropriate new-ctor-usage.\n\nI've marked the no-arg constructor, and the setters for the now-ctor-provided params as deprecated, as I think that was the intention here.\n\nTests and precommit pass. ",
            "author": "Jason Gerlowski",
            "id": "comment-16249083"
        },
        {
            "date": "2017-11-14T18:54:29+0000",
            "content": "Hi Jason,\n\nThanks for picking it up!\n\nSorry I've been tied up with work past few days. Things should get better in the next couple of days for me to fully review and commit it.\n\nSo esentially we added 4 Builders here:\n\n1.   public Builder(List<String> solrUrls) {\n2.   public Builder(List<String> zkHosts, Optional<String> zkChroot) {\n3.   public Builder(String zkHost, Optional<String> zkChroot) {\n4.   public Builder(ClusterStateProvider stateProvider) {\n\n\n\nDo we need 3? We could just add a simple Javadoc line in 2 on how to create a singleton list?\nDo we need 4? I guess if you implement your own ClusterStateProvider which would certainly be an expert use case. So a) we don't add it for now unless someone explicitly asks for it or b) document it as experts only?\n\nWhat are your thoughts on these? Apart from this if we add Javadocs to the Builders I should be able to review it Thursday/Friday and commit it if the rest of the patch looks good. ",
            "author": "Varun Thacker",
            "id": "comment-16251951"
        },
        {
            "date": "2017-11-14T18:59:31+0000",
            "content": "I like #1 & #2, lets not have #3 or #4. ",
            "author": "David Smiley",
            "id": "comment-16251965"
        },
        {
            "date": "2017-11-16T11:49:32+0000",
            "content": "The attached patch gets rid of builder ctors (3) and (4), as suggested.  I also added some Javadocs to the remaining constructors.\n\nTests and precommit pass. ",
            "author": "Jason Gerlowski",
            "id": "comment-16255183"
        },
        {
            "date": "2017-11-22T19:49:29+0000",
            "content": "Thanks Jason for the patch! I think we're very close. I've noted some of the minor changes I made on top of your patch. I want to address one doubt mentioned below before committing it\n\n\n\tFor example changed final List<String> hosts = new ArrayList<String>(); to use automatic type inference\n\tSpaces between the for and the curly bracket : for(int i=0 . Been following Mike's advise\n\tIn testZkConnectionStringConstructorWithValidChroot got rid of the unecessary clientChroot variable\n\tSome reordering of import ordering intellij on the clean unused shortcut\n\tMinor changes to the CloudSolrClient jdocs\n\tChanged the wording of the deprecation warning for CloudSolrClient::withClusterStateProvider\n\n\n\n\nIn solrUrls approach should we add only one url only? Maybe we should be adding all solr urls ? \n\n+    public CloudSolrClientBuilder(MiniSolrCloudCluster cluster) {\n+      if (random().nextBoolean()) {\n+        this.zkHosts.add(cluster.getZkServer().getZkAddress());\n+      } else {\n+        this.solrUrls.add(cluster.getRandomJetty(random()).getBaseUrl().toString());\n+      }\n\n\n\nOn a side note we should randomize b/w the zkhost || solrUrls for all tests. The solrUrls approach has very less test coverage ",
            "author": "Varun Thacker",
            "id": "comment-16263238"
        },
        {
            "date": "2017-11-22T22:45:44+0000",
            "content": "org.apache.solr.SolrTestCaseJ4.CloudSolrClientBuilder#withCluster could very well accept all the URLs.  Perhaps it should be a random subset? ",
            "author": "David Smiley",
            "id": "comment-16263493"
        },
        {
            "date": "2018-02-17T21:23:23+0000",
            "content": "Hi Jason Gerlowski you've done the bulk of the work here.\u00a0Feel free to assign it to yourself if you plan on wrapping this up and committing it.\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16368368"
        },
        {
            "date": "2018-02-17T21:33:33+0000",
            "content": "Sure thing.  I had lost track of it, but am happy to take it across the finish line.  Thanks for the reminder. ",
            "author": "Jason Gerlowski",
            "id": "comment-16368371"
        },
        {
            "date": "2018-03-07T19:35:54+0000",
            "content": "Updated Varun's patch on top of the latest code.  Gave CloudSolrClientBuilder(MiniSolrCloudCluster) a tweak so that solrUrl population is a little more random as Varun/David mentioned.\n\nRunning the tests/precommit now.  Plan on committing later this afternoon. ",
            "author": "Jason Gerlowski",
            "id": "comment-16390084"
        },
        {
            "date": "2018-03-07T19:39:07+0000",
            "content": "Can we please not use com.google.common.collect.Lists when there are perfectly good substitutes in the JDK's Collections class? ",
            "author": "David Smiley",
            "id": "comment-16390088"
        },
        {
            "date": "2018-03-07T19:45:47+0000",
            "content": "Sure, will update later. ",
            "author": "Jason Gerlowski",
            "id": "comment-16390091"
        },
        {
            "date": "2018-03-10T15:54:50+0000",
            "content": "Commit 971bd26df6ecfa9c266910a8008a2dad52d4443a in lucene-solr's branch refs/heads/master from Jason Gerlowski\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=971bd26 ]\n\nSOLR-11629: Add new CloudSolrClient.Builder ctors\n\nCloudSolrClient.Builder can be pointed at a Solr cluster in two ways: a\nZK connection string, or one or more Solr base URLs.  One of these two\nvalues must be provided to create a working CloudSolrClient.\n\nSince these values are required, this commit introduces two new ctors,\none for each means of CloudSolrClient setup.  It deprecates the existing\nno-arg CloudSolrClient ctor.\n\nTogether, these changes make it clearer to our users that these options\nare required (and mutually exclusive). ",
            "author": "ASF subversion and git services",
            "id": "comment-16394236"
        },
        {
            "date": "2018-03-10T16:12:10+0000",
            "content": "Commit 1d55336d0f50ddc4fcbabfa94b62a8cebb285306 in lucene-solr's branch refs/heads/branch_7x from Jason Gerlowski\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1d55336 ]\n\nSOLR-11629: Add new CloudSolrClient.Builder ctors\n\nCloudSolrClient.Builder can be pointed at a Solr cluster in two ways: a\nZK connection string, or one or more Solr base URLs.  One of these two\nvalues must be provided to create a working CloudSolrClient.\n\nSince these values are required, this commit introduces two new ctors,\none for each means of CloudSolrClient setup.  It deprecates the existing\nno-arg CloudSolrClient ctor.\n\nTogether, these changes make it clearer to our users that these options\nare required (and mutually exclusive). ",
            "author": "ASF subversion and git services",
            "id": "comment-16394245"
        }
    ]
}