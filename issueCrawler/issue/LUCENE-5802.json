{
    "id": "LUCENE-5802",
    "title": "SpatialStrategy DocValues & FieldType customizability",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "modules/spatial"
        ],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "The SpatialStrategy API is a simple facade to index spatial data and query by it in a consistent way, hiding the implementation.  For indexing data, it has one applicable method:\n\npublic abstract Field[] createIndexableFields(Shape shape);\n\n\nThe base abstraction provides no further configuration. BBoxStrategy and PointVectorStrategy have a way to set the precisionStep of the underlying Double trie fields.  But none have a way to use Floats, and none have a way to specify the use of DocValues (and which type).  Perhaps there are other plausible nobs to turn.  It is actually more than just indexing since at search time it may have to change accordingly (e.g. search difference between Float & Double). PrefixTreeStrategy is likely to soon deprecate/remove any applicability here (see LUCENE-5692).\n\nIf there is no change that could reasonably be made to SpatialStrategy itself, what is the pattern that BBoxStrategy and others should use?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14049633",
            "author": "David Smiley",
            "content": "The solution may be providing a FieldType in constructors to applicable Strategies.  There might be a utility class to facilitate generating queries (e.g. one that switches on the type borrowing similar code from Solr's TrieField) and other stuff. ",
            "date": "2014-07-02T05:14:35+0000"
        }
    ]
}