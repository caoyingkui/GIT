{
    "id": "LUCENE-7443",
    "title": "Enforcing BooleanClause.Occur.FILTER before CustomScoreQuery",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "6.2",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "I have a BooleanQuery including a BooleanClause.Occur.MUST clause and a BooleanClause.Occur.FILTER clause. I then use the BooleanQuery in a CustomScoreQuery. It seems that the filtering constraint is not enforced before calculating the score in CustomScoreQuery and is enforced after the calculation. This can cause performance issues, since CustomScoreQuery may perform costly operations to rescore the BooleanQuery results. If the filter is enforced before rescoring, much less documents may require rescoring in CustomScoreQuery, and it does not make sense to spend a lot of processing for documents we know will be filtered out.\nMore details:\nThe BooleanQuery is used as subQuery in the following constructor, and a costly scoringQuery is used which is more rational to calculate it only when the results of subQuery is not trivially filtered out because of the FILTER in subQuery.\n  public CustomScoreQuery(Query subQuery, FunctionQuery scoringQuery) {",
    "attachments": {},
    "issue_links": {},
    "comments": []
}