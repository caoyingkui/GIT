{
    "id": "SOLR-7950",
    "title": "Invalid auth scheme configuration of Http client when using Kerberos (SPNEGO)",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "4.10.3,                                            6.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "When using kerberos authentication mechanism (SPNEGO auth scheme), the Apache Http client is incorrectly configured with all auth schemes (e.g. Basic, Digest, NTLM, Kerberos, Negotiate etc.) instead of just 'Negotiate'. \n\nThis issue was identified after configuring Solr with both Basic + Negotiate authentication schemes simultaneously. The problem in this case is that Http client is configured with Kerberos credentials and the default (and incorrect) auth scheme configuration prefers Basic authentication over Kerberos. Since the basic authentication credentials are missing, the authentication and as a result the Http request fails. (I ran into this problem while creating a collection where there is an internal communication between Solr servers).\n\nThe root cause for this issue is that, AbstractHttpClient::getAuthSchemes() API call prepares an AuthSchemeRegistry instance with all possible authentication schemes. Hence when we register the SPNEGO auth scheme in Solr codebase, it overrides the previous configuration for SPNEGO - but doesn't remove the other auth schemes from the client configuration. Please take a look at relevant code snippet.\n\nhttps://github.com/apache/lucene-solr/blob/trunk/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientConfigurer.java#L80\n\nA trivial fix would be to prepare a new AuthSchemeRegistry instance configured with just SPENGO mechanism and set it in the HttpClient.",
    "attachments": {
        "solr-7950.patch": "https://issues.apache.org/jira/secure/attachment/12751591/solr-7950.patch",
        "solr-7950-v2.patch": "https://issues.apache.org/jira/secure/attachment/12752569/solr-7950-v2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-20T18:25:28+0000",
            "author": "Gregory Chanan",
            "content": "https://github.com/apache/lucene-solr/blob/trunk/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientConfigurer.java#L80\n\npress \"y\" when linked these so you get a static sha, i.e. https://github.com/apache/lucene-solr/blob/f9799d3b7f62405b96480dead52c5611e99ab3e7/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientConfigurer.java#L80 ",
            "id": "comment-14705499"
        },
        {
            "date": "2015-08-20T21:22:17+0000",
            "author": "Hrishikesh Gadre",
            "content": "Please find the patch for this issue attached. ",
            "id": "comment-14705780"
        },
        {
            "date": "2015-08-24T19:35:21+0000",
            "author": "Gregory Chanan",
            "content": "Patch looks correct to me; not sure I understand the symptoms though.\n\nThis issue was identified after configuring Solr with both Basic + Negotiate authentication schemes simultaneously. The problem in this case is that Http client is configured with Kerberos credentials and the default (and incorrect) auth scheme configuration prefers Basic authentication over Kerberos. Since the basic authentication credentials are missing, the authentication and as a result the Http request fails. (I ran into this problem while creating a collection where there is an internal communication between Solr servers).\n\nWe don't support Basic + Negotiate now, right?  So we need another solr patch to expose the underlying problem?\n\nThere's no fall back mechanism?  E.g. if you fail basic you can fall back to SPNego?  Or can you prefer SPNego over basic? ",
            "id": "comment-14709922"
        },
        {
            "date": "2015-08-26T20:49:40+0000",
            "author": "Hrishikesh Gadre",
            "content": "Gregory Chanan\n\n>>We don't support Basic + Negotiate now, right? So we need another solr patch to expose the underlying problem?\n\nYes that is correct. I identified this issue while working on LDAP integration (Please refer to  HADOOP-12082). I don't think we use the Hadoop security framework in Solr. So we may have to introduce Basic authentication scheme (in addition to SPNEGO) in Solr by some other way.\n\n>>There's no fall back mechanism?\n\nNo. When server supports multiple authentication schemes, client needs to pick one scheme to use (based on list of preferences). The default configuration prefers BASIC scheme over SPENGO. Hence the client attempts to use basic auth scheme. But since the username/password credentials are not configured - the authentication fails. With my patch, we explicitly configure client to use SPNEGO.\n\n>>Or can you prefer SPNego over basic?\n\nYes. This can be done by adding SPNEGO before BASIC in the preference list. Here is how the default preferences are initialized.\n\nhttp://grepcode.com/file/repo1.maven.org/maven2/org.apache.httpcomponents/httpclient/4.4.1/org/apache/http/impl/client/AbstractHttpClient.java#AbstractHttpClient.createAuthSchemeRegistry%28%29\n\nI think when we configure HttpClientUtil with Krb5HttpClientConfigurer, we intend to use Kerberos authentication mechanism on the client side. Hence I think just configuring one auth scheme (SPNEGO in this case) is preferable than SPNEGO & BASIC\n\nI have also updated the patch to fix a unit test failure. ",
            "id": "comment-14715487"
        },
        {
            "date": "2015-08-26T20:57:37+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "So we may have to introduce Basic authentication scheme (in addition to SPNEGO) in Solr by some other way.\nWe already have basic auth, https://cwiki.apache.org/confluence/display/solr/Basic+Authentication+Plugin\nHowever, we still don't have it working together as yet.\n\nI don't think we use the Hadoop security framework in Solr.\nThe hadoop-auth's kerberos authentication filters are used. The support for delegation tokens still isn't there. ",
            "id": "comment-14715499"
        },
        {
            "date": "2015-08-26T21:41:54+0000",
            "author": "Gregory Chanan",
            "content": "+1.\n\nPatch looks good and thanks for the explanation.  It sounds like from what Ishan is saying there may be some more work integrating the HADOOP-12082 change with Solr's own Basic Auth Plugin, but that can be done in another jira. ",
            "id": "comment-14715574"
        },
        {
            "date": "2015-08-27T00:00:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1698037 from gchanan@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1698037 ]\n\nSOLR-7950: Invalid auth scheme configuration of Http client when using Kerberos (SPNEGO) ",
            "id": "comment-14715776"
        },
        {
            "date": "2015-08-27T00:02:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1698039 from gchanan@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1698039 ]\n\nSOLR-7950: Invalid auth scheme configuration of Http client when using Kerberos (SPNEGO) ",
            "id": "comment-14715777"
        },
        {
            "date": "2015-08-27T00:03:13+0000",
            "author": "Gregory Chanan",
            "content": "Thanks for the patch Hrishikesh, committed to Trunk and 5x. ",
            "id": "comment-14715778"
        }
    ]
}