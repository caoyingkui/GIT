{
    "id": "SOLR-2725",
    "title": "TieredMergePolicy and expungeDeletes behaviour",
    "details": {
        "affect_versions": "3.3,                                            3.4,                                            3.5,                                            3.6",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "During executing a commit with expungeDeletes I noticed there were still a lot of segments left.\nHowever there were still ~30 segments left with deletes after the commit finished.\n\nAfter looking in SolrIndexConfig class I noticed that TieredMergePolicy#setExpungeDeletesPctAllowed isn't invoked.\nI think the following statements in SolrIndexConfig#buildMergePolicy method will purge all deletes:\n\ntieredMergePolicy.setExpungeDeletesPctAllowed(0);\n\n \nThis also reflects the behavior of Solr 3.1 / 3.2\n\nAfter some discussion on IRC setting expungeDeletesPctAllowed always to zero isn't best for performance:\nhttp://colabti.org/irclogger/irclogger_log/lucene-dev?date=2011-08-20#l120\n\nI think we should add an option to solrconfig.xml that allows users to set this option to whatever value is best for them:\n\n<expungeDeletesPctAllowed>0</expungeDeletesPctAllowed>\n\n\n\nAlso having a expungeDeletesPctAllowed per commit command would be great:\n\n<commit waitFlush=\"false\" waitSearcher=\"false\" expungeDeletes=\"true\" expungeDeletesPctAllowed=\"0\"/>",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Martijn van Groningen",
            "id": "comment-13233389",
            "date": "2012-03-20T13:03:39+0000",
            "content": "Removed 3.6 from fix versions. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13475182",
            "date": "2012-10-12T17:28:35+0000",
            "content": "This is probably an unnecessary comment, but I wanted to be sure that when this is implemented, it's done as a double/float so that values significantly less than 1% are possible.  It looks like the underlying mechanism is already set up this way:\n\n  private double forceMergeDeletesPctAllowed = 10.0; "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13507838",
            "date": "2012-12-01T02:07:40+0000",
            "content": "It occurred to me that in addition to allowing solrconfig.xml to set this value, that it should also be available via SolrJ.  Which brings up SOLR-1487. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13702817",
            "date": "2013-07-09T02:46:11+0000",
            "content": "The above URL to the IRC conversation around this doesn't work any more.\n\nThis seems almost like an oversight, no?  Or is there a reason why Solr doesn't expose this? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13702837",
            "date": "2013-07-09T03:26:43+0000",
            "content": "Just as an FYI, setExpungeDeletesPctAllowed is now setReclaimDeletesWeight.\n\nIn any case, setters are already supported via the general solrconfig class loading mechanism, so I don't think there is anything to do here.\n\n\n<double name=\"reclaimDeletesWeight\">0</double>\n\n\n "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13705415",
            "date": "2013-07-11T02:50:04+0000",
            "content": "Seems this is no longer an issue. Resolving. "
        }
    ]
}