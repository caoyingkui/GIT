{
    "id": "SOLR-7249",
    "title": "Solr engine misses null-values in \"OR null\" part for eDisMax parser",
    "details": {
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Solr engine misses null-values in \"OR null\" part for eDisMax parser\nFor example, I have following query:\n\n((: AND -area:[* TO *]) OR area:[100 TO 300]) AND objectId:40105451\n\nfull query path visible in Solr Admin panel is\n\nselect?q=((%3AAND-area%3A%5B*TO*%5D)+OR+area%3A%5B100+TO+300%5D)+AND+objectId%3A40105451&wt=json&indent=true\n\ndebug part of response is below:\n--------------------------------------\n\"rawquerystring\": \"((: AND -area) OR area:[100 TO 300]) AND objectId:40105451\",\n    \"querystring\": \"((: AND -area) OR area:[100 TO 300]) AND objectId:40105451\",\n    \"parsedquery\": \"+((+MatchAllDocsQuery(:) -text:area) area:[100 TO 300]) +objectId:40105451\",\n    \"parsedquery_toString\": \"((: -text:area) area:[100 TO 300]) +objectId: \\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0013\\u000fkk\",\n    \"explain\": \n{\n      \"40105451\": \"\\n14.3509865 = (MATCH) sum of:\\n  0.034590688 = (MATCH) product of:\\n    0.069181375 = (MATCH) sum of:\\n      0.069181375 = (MATCH) sum of:\\n        0.069181375 = (MATCH) MatchAllDocsQuery, product of:\\n          0.069181375 = queryNorm\\n    0.5 = coord(1/2)\\n  14.316396 = (MATCH) weight(objectId: \\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0013\\u000fkk in 1109978) [DefaultSimilarity], result of:\\n    14.316396 = score(doc=1109978,freq=1.0), product of:\\n      0.9952025 = queryWeight, product of:\\n        14.38541 = idf(docFreq=1, maxDocs=1300888)\\n        0.069181375 = queryNorm\\n      14.38541 = fieldWeight in 1109978, product of:\\n        1.0 = tf(freq=1.0), with freq of:\\n          1.0 = termFreq=1.0\\n        14.38541 = idf(docFreq=1, maxDocs=1300888)\\n        1.0 = fieldNorm(doc=1109978)\\n\"\n    }\n,\n    \"QParser\": \"LuceneQParser\",\n...\n--------------------------------------\n\nso, it should return record if area between 100 and 300 or area not declared.\n\nit works ok for default parser, but when I set \"edismax\" checkbox checked in Solr admin panel - it returns nothing (\"area\" for objectId=40105451 is null). \n\nRequest path is following\nselect?q=((%3AAND-area%3A%5B*TO*%5D)+OR+area%3A%5B100+TO+300%5D)+AND+objectId%3A40105451&wt=json&indent=true&defType=edismax&stopwords=true&lowercaseOperators=true\n\ndebug response is below\n--------------------------------------\n \"rawquerystring\": \"((: AND -area) OR area:[100 TO 300]) AND objectId:40105451\",\n    \"querystring\": \"((: AND -area) OR area:[100 TO 300]) AND objectId:40105451\",\n    \"parsedquery\": \"((((+DisjunctionMaxQuery((text::)) -DisjunctionMaxQuery((text:area))) area:[100 TO 300]) +objectId:40105451))/no_coord\",\n    \"parsedquery_toString\": \"(((+(text::) -(text:area)) area:[100 TO 300]) +objectId: \\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0013\\u000fkk)\",\n    \"explain\": {},\n    \"QParser\": \"ExtendedDismaxQParser\",\n    \"altquerystring\": null,\n    \"boost_queries\": null,\n    \"parsed_boost_queries\": [],\n    \"boostfuncs\": null,\n--------------------------------------\n\nHowever, when I move query from \"q\" field to \"q.alt\" field - it works ok, query is\n\nselect?wt=json&indent=true&defType=edismax&q.alt=((%3AAND-area%3A%5B*TO*%5D)+OR+area%3A%5B100+TO+300%5D)+AND+objectId%3A40105451&stopwords=true&lowercaseOperators=true\n\nnote, asterisks are not saved by editor, refer to http://stackoverflow.com/questions/29059460/solr-misses-or-null-query-when-parsing-by-edismax-parser\nif needed more accurate syntax",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-16T15:56:02+0000",
            "author": "Jack Krupansky",
            "content": "It's best to pursue this type of issue on the Solr user list first.\n\nHave you added debugQuery=true to your request and looked at the parsed_query in the response? That shows how your query is actually interpreted.\n\nYou wrote \"AND -area\", but that probably should be \"NOT area\" or simply \"-area\". ",
            "id": "comment-14363383"
        },
        {
            "date": "2015-03-16T15:58:24+0000",
            "author": "Erick Erickson",
            "content": "Please raise usage issues on the user's list before raising a JIRA to confirm that what you're seeing is really a code issue. If so then raise a JIRA.\n\nIn this case, attach &debug=query to the output and you'll see that the parsed output is very much different than what you expect. It is not surprising at all that the output from a standard query is different than that from edismax as edismax is spreading the terms across a bunch of fields as clauses. ",
            "id": "comment-14363391"
        },
        {
            "date": "2015-03-16T22:15:12+0000",
            "author": "Arsen Li",
            "content": "Jack, Erick, sorry for my ignorance. SOLR/Apache community/site is big, so I bit lost here \n\nI updated issue description by adding both parsers debug output (only most meaningful part)\nAlso, I am bit confused seeing that both parsers showing me \"text:area\" in debug (not sure is this expected or not)\n\nJack, thanks for the point about \"-area\", I tried different cases - same result (LuceneQParser finds needed record, ExtendedDismaxQParser - not)\n\nPS: going to raise this issue on users list as should be done before. ",
            "id": "comment-14364071"
        },
        {
            "date": "2015-03-17T20:12:13+0000",
            "author": "Erick Erickson",
            "content": "Hmmm, this appears the same as SOLR-3377, but that bug was fixed in 4.0-BETA. Possibly a regression? ",
            "id": "comment-14365962"
        }
    ]
}