{
    "id": "SOLR-10657",
    "title": "optimize join domain switch when join field has already been narrowed",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Facet Module"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "A contrived example... facet by user, and then have that users reviews as a sub-facet.  For each bucket, the join.to (user) field will have a single exact value and the join query can be optimized to a field query.\n\n\n myfacet : {\n  type: terms,\n  field : user,\n  facet : {\n    genres : {\n      type: terms, field:genre\n      domain : { join:{from: user, to: review_user} },\n [...]\n\n\n\nRelated: another thing I've thought about in the past is ways to use the current bucket \"value\" (or a parents bucket value) in queries for example.  A late-binding context sensitive term query (or query parser) is one potential way to implement some of this.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}