{
    "id": "SOLR-9477",
    "title": "UpdateRequestProcessors ignore child documents",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.2,                                            7.0",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "UpdateRequestProcessors completely ignore child documents. The only exception is AddSchemaFieldsUpdateProcessorFactory. The rest seem to be completely unaware that SolrInputDocument has getChildDocuments() or related methods.\n\nEasy test (on Solr 6.2):\n\nThis works (with IDs auto-assigned and field names generated):\n\nbin/solr create -c childtest\nbin/post -c childtest -type application/json -format solr -d '[{\"a\":1,\"b\":2}]'\n\n\n\nThis fails as the second/third command, with \"missing ID field\":\n\nbin/post -c childtest -type application/json -format solr -d '[{\"a\":1,\"b\":2,\"_childDocuments_\":[{\"c\":3,\"d\":4}]}]'\n\n\n\nThe message:\n\nSimplePostTool version 5.0.0\nPOSTing args to http://localhost:8983/solr/childtest/update...\nSimplePostTool: WARNING: Solr returned an error #400 (Bad Request) for url: http://localhost:8983/solr/childtest/update\nSimplePostTool: WARNING: Response: {\"responseHeader\":{\"status\":400,\"QTime\":4},\"error\":{\"metadata\":[\"error-class\",\"org.apache.solr.common.SolrException\",\"root-error-class\",\"org.apache.solr.common.SolrException\"],\"msg\":\"[doc=null] missing required field: id\",\"code\":400}}\nSimplePostTool: WARNING: IOException while reading response: java.io.IOException: Server returned HTTP response code: 400 for URL: http://localhost:8983/solr/childtest/update\nCOMMITting Solr index changes to http://localhost:8983/solr/childtest/update...\nTime spent: 0:00:00.042\n\n\n\nI also verified it with BlankRemoving URP. I think this is a global problem.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-06T22:43:40+0000",
            "author": "Anshum Gupta",
            "content": "That's how things are right now. I am not sure if all update processors should apply to children, so my patches (that I use at my work) are per-processor. There might be processors that only want root level updates, so unless we have a way of defining that in the config, it would make sense to handle it differently for each processor.\n\nP.S: I intend to put those patches here but just didn't get around to doing that. ",
            "id": "comment-15468849"
        },
        {
            "date": "2016-11-11T22:57:40+0000",
            "author": "Manoj Lawrence",
            "content": "Alexandre Rafalovitch This is my first involvement in the JIRA board here. If this is not where we add use cases for the above bug, let me know I will move it to the appropriate location.\n\nWe use dataimporthandler to fetch data from DB2. The tablespace is limited in our organisation (not under my control), so if I join couple of large tables it can't handle more than 1 million records.\nSo, we wanted to split the queries based on certain column values. And to avoid repeating the query in mutiple entities, with different where clauses, I decided to use DIH's ability to have nested entities. This way I am able to split the query into some 20 parts for 12 million records.\n\nThat's where this issue with URP not supporting child entity fields is proving to be roadblock for my solution. ",
            "id": "comment-15658432"
        },
        {
            "date": "2016-11-11T23:13:45+0000",
            "author": "David Smiley",
            "content": "Manoj Lawrence DIH nested entities doesn't translate to sub-documents unless you were to set child=\"true\", and I don't see why you would do that in your use-case. ",
            "id": "comment-15658468"
        },
        {
            "date": "2016-11-12T14:46:20+0000",
            "author": "Manoj Lawrence",
            "content": "David Smiley Thanks David, that resolved my (non) issue with URP. It didn't occur to me to remove child=true or set it to false. ",
            "id": "comment-15659757"
        },
        {
            "date": "2018-07-04T16:32:07+0000",
            "author": "Vasili Logvinov",
            "content": "I found workaround for myself.\n\n<dataConfig>\n <script>\n <![CDATA[\n function GenerateId(row){\n row.put('id', java.util.UUID.randomUUID().toString());\n return row;\n }\n ]]>\n </script>\n <document>\n <entity name=\"parent\" pk=\"id\" query=\".......\">\n <entity name=\"child\" pk=\"id\" child=\"true\" query=\".......\" transformer=\"script:GenerateId\">\n </entity>\n </entity>\n </document>\n </dataConfig> ",
            "id": "comment-16532935"
        }
    ]
}