{
    "id": "LUCENE-120",
    "title": "Mixed case and keyword fields don't mix?",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/queryparser"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "Forgive me if this is expected behavior, but I can't find it cited anywhere...\n\nUsing Lucene 1.3-rc1, I indexed a document (with StandardAnalyzer) with a\nkeyword field \"member\" and a value \"testOwner\". I then attempted to retrieve\nthat document via the query \"member:testOwner\", and I got zero results. I was\nable to retrieve the document via another query (against another field) and saw\nthat Lucene had correctly stored \"testOwner\" as the value of \"member\".\n\nSo, I puttered around with other queries. The following queries work:\n\nmember:test?wner\nmember:test*\n\nThe following queries do not work:\n\nmember:testOwner\nmember:testowner\nmember:testO*\nmember:testO?ner\n\nIf I switch my index to make the member field be stored instead of keyword,\nsearching on member:testOwner works fine. So, something about having a\nmixed-case value for a keyword field fails on the query. That surprised me,\nsince keyword fields are untokenized \u2013 if anything, I'd've expected keyword to\nhandle mixed-case better.\n\nIn case it matters, this is J2SE build 1.4.0_01-ea-b02 on Windows 2000.\n\nThanks!",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2003-07-01T00:20:09+0000",
            "content": "Keyword fields are un-tokenized when indexed, but are tokenized by the query\nparser.  The query parser operates independently of an index, so it doesn't know\nthat your field is a keyword field. ",
            "author": "cutting@apache.org",
            "id": "comment-12321329"
        }
    ]
}