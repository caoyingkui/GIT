{
    "id": "LUCENE-4491",
    "title": "Make analyzing suggester more flexible",
    "details": {
        "components": [
            "modules/other"
        ],
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "4.1",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Today we have a analyzing suggester that is bound to a single key. Yet, if you want to have a totally different surface form compared to the key used to find the suggestion you either have to copy the code or play some super ugly analyzer tricks. For example I want to suggest \"Barbar Streisand\" if somebody types \"strei\" in that case the surface form is totally different from the analyzed form. \n\nEven one step further I want to embed some meta-data in the suggested key like a user id or some type my surface form could look like \"Barbar Streisand|15\". Ideally I want to encode this as binary and that might not be a valid UTF-8 byte sequence.\n\nI'm actually doing this in production and my only option was to copy the analyzing suggester and some of it's related classes.",
    "attachments": {
        "LUCENE-4491.patch": "https://issues.apache.org/jira/secure/attachment/12549966/LUCENE-4491.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-10-19T09:29:33+0000",
            "content": "this patch moves all the explicit bytes to char conversions into protected methods, adds a TermFreqIterator#surfaceForm method and opens up LookupResult for subclassing. I also added a test that shows the possibilities for custom extension. All tests pass. ",
            "author": "Simon Willnauer",
            "id": "comment-13479906"
        },
        {
            "date": "2012-10-19T09:33:56+0000",
            "content": "it doesnt make sense to me to have a surface form at all on TermFreqIterator.\n\nThis is an iterator of terms + freqs... 'surface form' is a concept only within analyzing suggester. ",
            "author": "Robert Muir",
            "id": "comment-13479911"
        },
        {
            "date": "2012-10-19T09:41:52+0000",
            "content": "This is an iterator of terms + freqs... 'surface form' is a concept only within analyzing suggester.\nfair enough. maybe we could use the Attribute API for this? I had this in mind too but this was the simplest thing I could do so I started with this. ",
            "author": "Simon Willnauer",
            "id": "comment-13479914"
        },
        {
            "date": "2012-10-19T10:51:36+0000",
            "content": "next iteration. I remove the surfaceForm getter from TermFreqIter and added Attribute support to the it instead. Now we also have a SurfaceFromAttribute in the o.a.l.suggest.analyzing package that is respected by the AnalyzingSuggester. This looks much cleaner now. ",
            "author": "Simon Willnauer",
            "id": "comment-13479947"
        },
        {
            "date": "2012-10-19T13:32:37+0000",
            "content": "What exactly is this 'surface form' here? Its confusing me because TermFreqIterator is terms and freqs.\n\nsurface form is a concept inside analyzing suggester: so its confusing me to have a surface form on the termFreqIter,\ndoesnt matter really if its an attribute or not.\n ",
            "author": "Robert Muir",
            "id": "comment-13480018"
        },
        {
            "date": "2012-10-19T14:07:55+0000",
            "content": "I'm trying to boil down what you are actually doing with this surface form here?\n\nIs this issue really about wanting to add additional metadata attached to the suggestions? ",
            "author": "Robert Muir",
            "id": "comment-13480041"
        },
        {
            "date": "2012-10-19T18:43:25+0000",
            "content": "ok so what this really boils down to is that I am working around the current api and its limitations. Maybe we tackles this from the other direction and make our API better to make distinctions between the different suggester impls. here are a couple of things I think we should tackle:\n\n\tTo begin with I think it is really hard to have a common interface for all our different impls. We should flatten out the hierarchy and make dedicated / impl specific interfaces before we abstract (this might not be possible)\n\tLookup is a really bad name lets get rid of this\n\tall the methods that apply to mutable impls should go away\n\twe should separate building the suggester and the \"suggest\" impl. Most impls are immutable (FST ones) and they should not need to be pushed into a mutable interface.\n\tBuilding should be impl specific ie. you should maybe even need to pass keys in order and we can provide utils?\n\tBuilding should be much simpler. the TermFreqIterator is bogus here. FST suggestors should provide builders that have methods like FSTSuggestBuilder.put(BytesRef, long weight) that we can overload like AnalyzingSuggestBuilder.put(BytesRef input, BytesRef output, weight) <-- this would solve this issue btw.\n\tall FST suggester impls should require the FST or an inputstream as ctor args to enforce immutability.\n\n\n\nlet do this is in a sep issue and rip this all apart. ",
            "author": "Simon Willnauer",
            "id": "comment-13480239"
        },
        {
            "date": "2012-10-19T19:53:37+0000",
            "content": "+1 ",
            "author": "Robert Muir",
            "id": "comment-13480322"
        },
        {
            "date": "2013-02-28T19:33:11+0000",
            "content": "Similar to the suggestion above for simplifying Suggester builder, spell check builder needs to be simplified - I am facing a issue similar to: http://thread.gmane.org/gmane.comp.jakarta.lucene.solr.user/57004/focus=57030 ",
            "author": "Nikhil Gupta",
            "id": "comment-13589844"
        },
        {
            "date": "2013-07-23T18:44:31+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13716972"
        },
        {
            "date": "2014-04-16T12:54:28+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970764"
        }
    ]
}