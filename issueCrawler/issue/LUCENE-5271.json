{
    "id": "LUCENE-5271",
    "title": "A slightly more accurate SloppyMath distance",
    "details": {
        "components": [
            "modules/other"
        ],
        "fix_versions": [
            "4.7",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Minor",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "SloppyMath, intriduced in LUCENE-5258, uses earth's avg. (according to WGS84) ellipsoid radius as an approximation for computing the \"spherical\" distance. (The TO_KILOMETERS constant).\n\nWhile this is pretty accurate for long distances (latitude wise) this may introduce some small errors while computing distances close to the equator (as the earth radius there is larger than the avg.)\n\nA more accurate approximation would be taking the avg. earth radius at the source and destination points. But computing an ellipsoid radius at any given point is a heavy function, and this distance should be used in a scoring function.. So two optimizations are optional - \n\n\tPre-compute a table with an earth radius per latitude (the longitude does not affect the radius)\n\tInstead of using two point radius avg, figure out the avg. latitude (exactly between the src and dst points) and get its radius.",
    "attachments": {
        "LUCENE-5271.patch": "https://issues.apache.org/jira/secure/attachment/12607727/LUCENE-5271.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-10-10T02:30:19+0000",
            "content": "A proposed solution as per described.\nPlease note it is not ready for commit as it breaks one of the tests derived for ES/Solr (as a result of the improved accuracy). ",
            "author": "Gilad Barkai",
            "id": "comment-13791119"
        },
        {
            "date": "2013-11-17T20:57:02+0000",
            "content": "Adapted tests to the more accurate distance method.\nPatch is ready. ",
            "author": "Gilad Barkai",
            "id": "comment-13824951"
        },
        {
            "date": "2013-12-03T07:54:44+0000",
            "content": "Thanks for the patch Gilad.  A couple comments:\n\n\tIf the lat/lon values are large, then the index would be out of bounds for the table.  Today it will not error.  Since these are just doubles being passed in, I think it should still work?\n\tWhy was this test removed? assertEquals(314.40338, haversin(1, 2, 3, 4), 10e-5);\n\tCould you move the 2 * radius computation into the table?\n\tI know this is an already existing problem, but could you move the division by 2 from h1/h2 to h?\n\n ",
            "author": "Ryan Ernst",
            "id": "comment-13837432"
        },
        {
            "date": "2013-12-08T08:26:46+0000",
            "content": "Ryan, thanks for looking at this.\n\nIf the lat/lon values are large, then the index would be out of bounds for the table\nNice catch! I did not check for values over 90 degs Lat. Added a % with the the table's size.\n\nWhy was this test removed? assertEquals(314.40338, haversin(1, 2, 3, 4), 10e-5)\nWell the test's result are wrong  The new more accurate method gets other results.  I added other test instead:\n\n    double earthRadiusKMs = 6378.137;\n    double halfCircle = earthRadiusKMs * Math.PI;\n    assertEquals(halfCircle, haversin(0, 0, 0, 180), 0D);\n\n\nWhich computes half earth circle on the equator using both the harvestin and a simple circle equation using Earth's equator radius.\nIt differs in over 20KMs from the old harvesin result btw.\n\nCould you move the 2 * radius computation into the table?\nAwesome! renamed the table to diameter rather than radius. \n\nI know this is an already existing problem, but could you move the division by 2 from h1/h2 to h?\nDone. ",
            "author": "Gilad Barkai",
            "id": "comment-13842455"
        },
        {
            "date": "2014-01-15T01:20:48+0000",
            "content": "Commit 1558259 from Ryan Ernst in branch 'dev/trunk'\n[ https://svn.apache.org/r1558259 ]\n\nLUCENE-5271: A slightly more accurate SloppyMath distance ",
            "author": "ASF subversion and git services",
            "id": "comment-13871483"
        },
        {
            "date": "2014-01-15T01:57:01+0000",
            "content": "Commit 1558264 from Ryan Ernst in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1558264 ]\n\nLUCENE-5271: A slightly more accurate SloppyMath distance ",
            "author": "ASF subversion and git services",
            "id": "comment-13871519"
        },
        {
            "date": "2014-01-15T02:33:21+0000",
            "content": "Thanks Gilad! ",
            "author": "Ryan Ernst",
            "id": "comment-13871555"
        },
        {
            "date": "2014-02-19T19:21:38+0000",
            "content": "Cool! ",
            "author": "David Smiley",
            "id": "comment-13905917"
        }
    ]
}