{
    "id": "LUCENE-3986",
    "title": "Support running tests with a simple, non-asserting (and possibly shared) Random",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/test"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Not A Problem",
        "status": "Resolved"
    },
    "description": "Robert asked for it. Calling random() (and its methods) can obscure memory visibility issues (because random() is thread local, context-sensitive, etc.). An option (or randomly selected mode) of running with a simple Random (static/ test method level only) would simulate the framework as it was before (reading \u2013 possibly non-reproducible thread races but at the same time testing memory visibility issues in the core code).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-11T23:03:46+0000",
            "content": "bulk cleanup of 4.0-ALPHA / 4.0 Jira versioning. all bulk edited issues have hoss20120711-bulk-40-change in a comment ",
            "author": "Hoss Man",
            "id": "comment-13412307"
        },
        {
            "date": "2012-08-07T03:41:25+0000",
            "content": "rmuir20120906-bulk-40-change ",
            "author": "Robert Muir",
            "id": "comment-13429705"
        },
        {
            "date": "2013-07-23T18:44:25+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13716944"
        },
        {
            "date": "2014-04-16T12:54:27+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970757"
        },
        {
            "date": "2015-07-16T14:22:49+0000",
            "content": "I don't think this is a problem in practice.\n\nTests that do very heavy random ops should fork their own local random anyway, with a randomized seed. This requires explicit ThreadLocalRandom anyway because Random has a synchronized method.\n\nIf we returned a non-coordinated Random from the randomizedtesting package the only thing it would tell us is that something failed (the failure wouldn't be reproducible). I don't want to integrate this into the library, it opens a lot of abuse use cases. ",
            "author": "Dawid Weiss",
            "id": "comment-14629805"
        }
    ]
}