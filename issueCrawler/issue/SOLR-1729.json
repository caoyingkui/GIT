{
    "id": "SOLR-1729",
    "title": "Date Facet now override time parameter",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This PATCH introduces a new query parameter that tells a (typically, but not necessarily) remote server what time to use as 'NOW' when calculating date facets for a query (and, for the moment, date facets only) - overriding the default behaviour of using the local server's current time.\n\nThis gets 'round a problem whereby an explicit time range is specified in a query (e.g. timestamp:[then0 TO then1]), and date facets are required for the given time range (in fact, any explicit time range). \nBecause DateMathParser performs all its calculations from 'NOW', remote callers have to work out how long ago 'then0' and 'then1' are from 'now', and use the relative-to-now values in the facet.date.xxx parameters. If a remote server has a different opinion of NOW compared to the caller, the results will be skewed (e.g. they are in a different time-zone, not time-synced etc.).\nThis becomes particularly salient when performing distributed date faceting (see SOLR-1709), where multiple shards may all be running with different times, and the faceting needs to be aligned.\n\nThe new parameter is called 'facet.date.now', and takes as a parameter a (stringified) long that is the number of milliseconds from the epoch (1 Jan 1970 00:00) - i.e. the returned value from a System.currentTimeMillis() call. This was chosen over a formatted date to delineate it from a 'searchable' time and to avoid superfluous date parsing. This makes the value generally a programatically-set value, but as that is where the use-case is for this type of parameter, this should be ok.\n\nNOTE: This parameter affects date facet timing only. If there are other areas of a query that rely on 'NOW', these will not interpret this value. This is a broader issue about setting a 'query-global' NOW that all parts of query analysis can share.\n\nSource files affected:\nFacetParams.java   (holds the new constant FACET_DATE_NOW)\nSimpleFacets.java  getFacetDateCounts() NOW parameter modified\n\nThis PATCH is mildly related to SOLR-1709 (Distributed Date Faceting), but as it's a general change for date faceting, it was deemed deserving of its own patch. I will be updating SOLR-1709 in due course to include the use of this new parameter, after some rfc acceptance.\n\nA possible enhancement to this is to detect facet.date fields, look for and match these fields in queries (if they exist), and potentially determine automatically the required time skew, if any. There are a whole host of reasons why this could be problematic to implement, so an explicit facet.date.now parameter is the safest route.",
    "attachments": {
        "UnInvertedField.java": "https://issues.apache.org/jira/secure/attachment/12436098/UnInvertedField.java",
        "solr-1.4.0-solr-1729.patch": "https://issues.apache.org/jira/secure/attachment/12436099/solr-1.4.0-solr-1729.patch",
        "SOLR-1729.patch": "https://issues.apache.org/jira/secure/attachment/12466062/SOLR-1729.patch",
        "SimpleFacets.java": "https://issues.apache.org/jira/secure/attachment/12431035/SimpleFacets.java",
        "SOLR-1729_3x.patch": "https://issues.apache.org/jira/secure/attachment/12510718/SOLR-1729_3x.patch",
        "FacetParams.java": "https://issues.apache.org/jira/secure/attachment/12431036/FacetParams.java"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Peter Sturge",
            "id": "comment-12803349",
            "date": "2010-01-21T16:27:12+0000",
            "content": "These are the source files affected for this patch.\nApologies for not creating a PATCH file - my tortoise svn is not working for creating patch files.\nIf anyone would like to create a patch from these, that would be extraordinarily kind of you!\n\nDiff: (trunk: 1.4 Release)\nFacetParams.java:\nAdd at line 179:\n  /**\n\n\tString that tells the date facet counter what time to use as 'now'.\n\t\n\tThe value of this parameter, if it exists, must be a stringified long\n\tof the number of milliseconds since the epoch (milliseconds since 1 Jan 1970 00:00).\n\tSystem.currentTimeMillis() provides this.\n\t\n\tThe DateField and DateMathParser work out their times relative to 'now'.\n\tBy default, 'now' is the local machine's System.currentTimeMillis().\n\tThis parameter overrides the local value to use a different time.\n\tThis is very useful for remote server queries where the times on the querying\n\tmachine are skewed/different than that of the date faceting machine.\n\tThis is a date.facet global query parameter (i.e. not per field)\n\t@see DateMathParser\n\t@see DateField\n   */\n  public static final String FACET_DATE_NOW = \"facet.date.now\";\n\n\n\nSimpleFacets.java:\nChange at line 551:\n\n\tfinal Date NOW = new Date();\n+     final Date NOW = new Date(params.get(FacetParams.FACET_DATE_NOW) != null ? Long.parseLong(params.get(\"facet.date.now\")) : System.currentTimeMillis());\n\n "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12803568",
            "date": "2010-01-22T01:42:04+0000",
            "content": "This is a wider-ranging problem than just date facets.  If I am indexing data to several cores I might want to override the NOW tiime for each core. Or a distributed search that uses (NOW/HOUR). And then there's logging. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12803860",
            "date": "2010-01-22T20:49:26+0000",
            "content": "I agree there are wider issues that relate to this \u2013 this particular patch addresses the time sync issue for allowing distributed date facets to happen.\nIn this case, you must have multiple cores using the same NOW for all, so that your date facets are consistent. In fact, it doesn't really matter which now you use, as long they're all the same \u2013 the caller setting the now value makes the most sense.\n\nFor other time-related queries, this might not be the case, but as you rightly pointed out, these are not addressed here. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12805313",
            "date": "2010-01-27T01:46:35+0000",
            "content": "(e.g. they are in a different time-zone, not time-synced etc.).\n\ntime-zones should be irrelevant since all calculations are done in UTC ... lack of time-sync is a legitimate concern, but the more serious problem is distributed requests and network lag.  Even if all of the boxes have synchronized clocks, they might not all get queried at the exact same time, and multiple requets might be made to a single server for different phrases of the distributed request that expect to get the same answers.\n\nIt should be noted that while adding support to date faceting for this type of \"when is now?\" is certainly necessary to make distributed date faceting work sanely, it is not sufficient ... unless filter queries that use date math also respect it the counts returned from date faceting will still potentially be non-sensical. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12805995",
            "date": "2010-01-28T17:29:14+0000",
            "content": "...they might not all get queried at the exact same time\n\nI suppose this is what the explicit 'NOW' is meant to resolve - staggered/lagged receipt/response, and, in an erzatz fashion, discrepencies in local time sync. Since the passed-in 'NOW' is relative only to the epoch, network latency is handled, and time-sync on any given server is assumed to be correct.\n\n...multiple requets might be made to a single server for different phrases of the distributed request that expect to get the same answers.\n\nAs long as the same code path is followed for such requests, it should honour the same (passed-in) 'NOW'. Are there scenarios where this is not the case? In which case, yes, these would need to be addressed.\n\n...unless filter queries that use date math also respect it the counts returned from date faceting will still potentially be non-sensical.\n\nDefinitely filter queries will need to get/use/honour the same 'NOW' as its corresponding query, otherwise anarchy will quickly ensue.\nCan you point me toward the class(es) where filter queries' date math lives, and I'll have a look? As filter queries are cached separately, can you think of any potential caching issues relating to filter queries? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12828846",
            "date": "2010-02-02T23:50:51+0000",
            "content": "Peter: I think you may have misconstrued my comments \u2013 they were not criticisms of your patch, they were a clarification of why the functionality you are proposing is important.\n\nCan you point me toward the class(es) where filter queries' date math lives\n\nit's all handled internally by DateField, at which point it has no notion of the request \u2013 I believe this is why yonik suggested using a ThreadLocal variable to track a consistent \"NOW\" that any method anywhere in Solr could use (if set) for the current request ... then we just need something like SolrCore to set it on each request (or accept it as a parm if specified)\n\nAs filter queries are cached separately, can you think of any potential caching issues relating to filter queries?\n\nThe cache keys for things like that are the Query objects themselves, and at that point the DateMath strings (including \"NOW\") have already been resolved into realy time values so that shouldn't be an issue. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12829043",
            "date": "2010-02-03T12:00:52+0000",
            "content": "Hi Chris,\nThanks for your comments - I hope I didn't sound like your comments were taken wrongly - I absolutely count on comments from you and other experts to make sure I'm not missing some important functionality and/or side effect. You know the code base far better than I, so its great that you take the time to point out all the different bits and peices that need addressing.\n\nI can certainly understand the need to address the 'core-global' isssues raised by you and Yonik for storing a ThreadLocal 'query-global' 'NOW'.\nI suppose the main issue in implementing the thread-local route is that we'd have to make sure we found every place in the query core that references now, and point those references to the new variable? If the 'code-at-large' [hopefully] always calls the date math routines for finding 'NOW', great, it should be relatively straightforward. If there are any stray e.g. System.currentTimeMillis(), then it's a bit more fiddly, but still do-able.\n\nit's all handled internally by DateField\nSounds like DateField would the best candidate for holding the ThreadLocal? The query handler code can set the variable of its DateField instance if it's set in a query parameter, otherwise it just defaults to it's own local (UTC) time.\nCould be done similarly to DateField.ThreadLocalDateFormat, perhaps? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12829077",
            "date": "2010-02-03T13:58:11+0000",
            "content": "Sounds like DateField would the best candidate for holding the ThreadLocal?\n\nIt might be nice to provide a public static method like\npublic static long getNow()\nfor code that needs the value of NOW w/o going through date math (the ms() function for one)\n\nThe other question is how the value is set to a particular value passed in on the request (for distributed search sync say).\nIt seems a bit awkward to have something global like  SolrCore.execute checking and setting \"NOW\"...\nan alternative that could help solve other problems is to have SolrCore.execute set a ThreadLocal<SolrRequest> that things like getNow() could check for a NOW param if it's thread local was not yet set.\n\nAnother thing to think about: unlike the DateFormatter threadLocal, a NOW threadLocal changes behavior - so it needs to be well defined, and not just a local cache no one else knows about.  Example: say that we parallelize some things in the future and spin of multiple threads... if the threadLocal for NOW is not communicated to each thread, they would all come up with their own values again.\n "
        },
        {
            "author": "Thomas Hammerl",
            "id": "comment-12834721",
            "date": "2010-02-17T10:15:56+0000",
            "content": "As in SOLR-1709 I'm not able to apply this patch to solr-1.4.0 without getting a compile error:\n\n\n[javac] /home/systemone/Desktop/solr-1.4.0/src/java/org/apache/solr/request/SimpleFacets.java:257:\ngetCounts(org.apache.solr.search.SolrIndexSearcher,org.apache.solr.search.DocSet,int,int,java.lang.Integer,boolean,java.lang.String,java.lang.String)\nin org.apache.solr.request.UnInvertedField cannot be applied to\n(org.apache.solr.search.SolrIndexSearcher,org.apache.solr.search.DocSet,int,int,java.lang.Integer,boolean,java.lang.String,java.lang.String,java.lang.String)\n[javac]         counts = uif.getCounts(searcher, base, offset, limit, mincount,missing,sort,prefix, facetSortOrder);\n\n\n\nIs it possible that you have forgotten to include your changes to org.apache.solr.request.UnInvertedField? The method getCounts is missing the facetSortOder parameter you are trying to pass in SimpleFacets.java.\n\nI would be happy to attach a working patch-file to this issue. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12834751",
            "date": "2010-02-17T12:28:24+0000",
            "content": "Hi Thomas,\n\nThanks for catching this. I thought I'd attached that one. sigh Honestly, that is really slack of me - many apologies.\nThe attached UnInvertedField.java has the updated getCounts() method. Any troubles, let me know.\n\nThanks!\nPeter "
        },
        {
            "author": "Thomas Hammerl",
            "id": "comment-12834756",
            "date": "2010-02-17T13:08:22+0000",
            "content": "Hi Peter!\n\nNo problem! Thanks for contributing the code! I have attached a patch file containing your changes to this issue. Everything compiles fine for me now.\n\nThank you too! Greetings,\nThomas "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12966181",
            "date": "2010-12-02T17:05:20+0000",
            "content": "Peter Sturge,\n\nin SOLR-1709 you said that you are working with branch3x I checked it out from here:\nhttps://svn.apache.org/repos/asf/lucene/dev/branches/branch_3x\n\nbut this 1729 patch didn't apply cleanly*. \n\nWhen I tried the 1.4.1 release it is ok, but the tests fail due to**\n\nWhat could be wrong?\n\nRegards,\nPeter.\n\n\n\n*\nsolr_branch_3x/solr$ patch -p0 < solr-1.4.0-solr-1729.patch \npatching file src/java/org/apache/solr/request/SimpleFacets.java\nHunk #1 succeeded at 245 (offset 28 lines).\nHunk #2 succeeded at 280 (offset 28 lines).\nHunk #3 FAILED at 582.\nHunk #4 FAILED at 652.\n2 out of 4 hunks FAILED \u2013 saving rejects to file src/java/org/apache/solr/request/SimpleFacets.java.rej\npatching file src/java/org/apache/solr/request/UnInvertedField.java\nHunk #2 succeeded at 40 with fuzz 1 (offset 1 line).\nHunk #3 succeeded at 440 (offset 5 lines).\nHunk #4 succeeded at 557 (offset 5 lines).\npatching file src/common/org/apache/solr/common/params/FacetParams.java\nHunk #1 FAILED at 175.\n1 out of 1 hunk FAILED \u2013 saving rejects to file src/common/org/apache/solr/common/params/FacetParams.java.rej\n\n\n\n\n**\n    [junit] Running org.apache.solr.TestTrie\n    [junit]  xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">157</int></lst><result name=\"response\" numFound=\"15\" start=\"0\"><doc><float name=\"id\">0.0</float><date name=\"tdate\">2010-12-02T00:00:00Z</date><double name=\"tdouble\">0.0</double><float name=\"tfloat\">0.0</float><int name=\"tint\">0</int><long name=\"tlong\">2147483647</long></doc><doc><float name=\"id\">1.0</float><date name=\"tdate\">2010-12-03T00:00:00Z</date><double name=\"tdouble\">2.33</double><float name=\"tfloat\">31.11</float><int name=\"tint\">1</int><long name=\"tlong\">2147483648</long></doc><doc><float name=\"id\">2.0</float><date name=\"tdate\">2010-12-04T00:00:00Z</date><double name=\"tdouble\">4.66</double><float name=\"tfloat\">124.44</float><int name=\"tint\">2</int><long name=\"tlong\">2147483649</long></doc><doc><float name=\"id\">3.0</float><date name=\"tdate\">2010-12-05T00:00:00Z</date><double name=\"tdouble\">6.99</double><float name=\"tfloat\">279.99</float><int name=\"tint\">3</int><long name=\"tlong\">2147483650</long></doc><doc><float name=\"id\">4.0</float><date name=\"tdate\">2010-12-06T00:00:00Z</date><double name=\"tdouble\">9.32</double><float name=\"tfloat\">497.76</float><int name=\"tint\">4</int><long name=\"tlong\">2147483651</long></doc><doc><float name=\"id\">5.0</float><date name=\"tdate\">2010-12-07T00:00:00Z</date><double name=\"tdouble\">11.65</double><float name=\"tfloat\">777.75</float><int name=\"tint\">5</int><long name=\"tlong\">2147483652</long></doc><doc><float name=\"id\">6.0</float><date name=\"tdate\">2010-12-08T00:00:00Z</date><double name=\"tdouble\">13.98</double><float name=\"tfloat\">1119.96</float><int name=\"tint\">6</int><long name=\"tlong\">2147483653</long></doc><doc><float name=\"id\">7.0</float><date name=\"tdate\">2010-12-09T00:00:00Z</date><double name=\"tdouble\">16.310000000000002</double><float name=\"tfloat\">1524.39</float><int name=\"tint\">7</int><long name=\"tlong\">2147483654</long></doc><doc><float name=\"id\">8.0</float><date name=\"tdate\">2010-12-10T00:00:00Z</date><double name=\"tdouble\">18.64</double><float name=\"tfloat\">1991.04</float><int name=\"tint\">8</int><long name=\"tlong\">2147483655</long></doc><doc><float name=\"id\">9.0</float><date name=\"tdate\">2010-12-11T00:00:00Z</date><double name=\"tdouble\">20.97</double><float name=\"tfloat\">2519.9102</float><int name=\"tint\">9</int><long name=\"tlong\">2147483656</long></doc><doc><float name=\"id\">10.0</float><date name=\"tdate\">2010-12-02T00:00:00Z</date><double name=\"tdouble\">0.0</double><float name=\"tfloat\">0.0</float><int name=\"tint\">0</int><long name=\"tlong\">2147483647</long></doc><doc><float name=\"id\">20.0</float><date name=\"tdate\">2010-12-03T00:00:00Z</date><double name=\"tdouble\">2.33</double><float name=\"tfloat\">31.11</float><int name=\"tint\">1</int><long name=\"tlong\">2147483648</long></doc><doc><float name=\"id\">30.0</float><date name=\"tdate\">2010-12-04T00:00:00Z</date><double name=\"tdouble\">4.66</double><float name=\"tfloat\">124.44</float><int name=\"tint\">2</int><long name=\"tlong\">2147483649</long></doc><doc><float name=\"id\">40.0</float><date name=\"tdate\">2010-12-05T00:00:00Z</date><double name=\"tdouble\">6.99</double><float name=\"tfloat\">279.99</float><int name=\"tint\">3</int><long name=\"tlong\">2147483650</long></doc><doc><float name=\"id\">50.0</float><date name=\"tdate\">2010-12-06T00:00:00Z</date><double name=\"tdouble\">9.32</double><float name=\"tfloat\">497.76</float><int name=\"tint\">4</int><long name=\"tlong\">2147483651</long></doc></result><lst name=\"facet_counts\"><lst name=\"facet_queries\"/><lst name=\"facet_fields\"><lst name=\"tint\"><int name=\"0\">2</int><int name=\"1\">2</int><int name=\"2\">2</int><int name=\"3\">2</int><int name=\"4\">2</int><int name=\"5\">1</int><int name=\"6\">1</int><int name=\"7\">1</int><int name=\"8\">1</int><int name=\"9\">1</int></lst><lst name=\"tlong\"><int name=\"2147483647\">2</int><int name=\"2147483648\">2</int><int name=\"2147483649\">2</int><int name=\"2147483650\">2</int><int name=\"2147483651\">2</int><int name=\"2147483652\">1</int><int name=\"2147483653\">1</int><int name=\"2147483654\">1</int><int name=\"2147483655\">1</int><int name=\"2147483656\">1</int></lst><lst name=\"tfloat\"><int name=\"0.0\">2</int><int name=\"31.11\">2</int><int name=\"124.44\">2</int><int name=\"279.99\">2</int><int name=\"497.76\">2</int><int name=\"777.75\">1</int><int name=\"1119.96\">1</int><int name=\"1524.39\">1</int><int name=\"1991.04\">1</int><int name=\"2519.9102\">1</int></lst><lst name=\"tdouble\"><int name=\"0.0\">2</int><int name=\"2.33\">2</int><int name=\"4.66\">2</int><int name=\"6.99\">2</int><int name=\"9.32\">2</int><int name=\"11.65\">1</int><int name=\"13.98\">1</int><int name=\"16.310000000000002\">1</int><int name=\"18.64\">1</int><int name=\"20.97\">1</int></lst></lst><lst name=\"facet_dates\"><lst name=\"tdate\"><int name=\"2010-12-02T00:00:00Z\">2</int><int name=\"2010-12-03T00:00:00Z\">2</int><int name=\"2010-12-04T00:00:00Z\">2</int><int name=\"2010-12-05T00:00:00Z\">2</int><int name=\"2010-12-06T00:00:00Z\">1</int><int name=\"2010-12-07T00:00:00Z\">1</int><str name=\"gap\">+1DAY</str><date name=\"end\">2010-12-08T00:00:00Z</date></lst></lst></lst>\n    [junit] </response>\n    [junit] \n    [junit]  request was: facet.date.start=NOW/DAY&facet=true&q=:&facet.date=tdate&facet.date.gap=%2B1DAY&facet.field=tint&facet.field=tlong&facet.field=tfloat&facet.field=tdouble&facet.date.end=NOW/DAY%2B6DAYS&rows=15)\n    [junit] Tests run: 8, Failures: 1, Errors: 0, Time elapsed: 4,948 sec\n    [junit] Test org.apache.solr.TestTrie FAILED\n\n\n\n\n    [junit] Running org.apache.solr.request.SimpleFacetsTest\n    [junit]  xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">11</int></lst><result name=\"response\" numFound=\"14\" start=\"0\"/><lst name=\"facet_counts\"><lst name=\"facet_queries\"/><lst name=\"facet_fields\"/><lst name=\"facet_dates\"><lst name=\"bday\"><int name=\"1976-07-01T00:00:00Z\">0</int><int name=\"1976-07-02T00:00:00Z\">0</int><int name=\"1976-07-03T00:00:00Z\">2</int><int name=\"1976-07-04T00:00:00Z\">2</int><int name=\"1976-07-05T00:00:00Z\">1</int><int name=\"1976-07-06T00:00:00Z\">0</int><int name=\"1976-07-07T00:00:00Z\">0</int><int name=\"1976-07-08T00:00:00Z\">0</int><int name=\"1976-07-09T00:00:00Z\">0</int><int name=\"1976-07-10T00:00:00Z\">0</int><int name=\"1976-07-11T00:00:00Z\">0</int><int name=\"1976-07-12T00:00:00Z\">1</int><int name=\"1976-07-13T00:00:00Z\">1</int><int name=\"1976-07-14T00:00:00Z\">0</int><int name=\"1976-07-15T00:00:00Z\">2</int><int name=\"1976-07-16T00:00:00Z\">0</int><int name=\"1976-07-17T00:00:00Z\">0</int><int name=\"1976-07-18T00:00:00Z\">0</int><int name=\"1976-07-19T00:00:00Z\">0</int><int name=\"1976-07-20T00:00:00Z\">0</int><int name=\"1976-07-21T00:00:00Z\">1</int><int name=\"1976-07-22T00:00:00Z\">0</int><int name=\"1976-07-23T00:00:00Z\">0</int><int name=\"1976-07-24T00:00:00Z\">0</int><int name=\"1976-07-25T00:00:00Z\">0</int><int name=\"1976-07-26T00:00:00Z\">0</int><int name=\"1976-07-27T00:00:00Z\">0</int><int name=\"1976-07-28T00:00:00Z\">0</int><int name=\"1976-07-29T00:00:00Z\">0</int><int name=\"1976-07-30T00:00:00Z\">1</int><int name=\"1976-07-31T00:00:00Z\">0</int><str name=\"gap\">+1DAY</str><date name=\"end\">1976-08-01T00:00:00Z</date><int name=\"before\">2</int><int name=\"after\">1</int><int name=\"between\">11</int></lst></lst></lst>\n    [junit] </response>\n    [junit] \n    [junit]  request was: facet.date.start=1976-07-01T00:00:00.000Z&facet=true&q=:&facet.date=bday&facet.date.other=all&facet.date.gap=%2B1DAY&facet.date.end=1976-07-01T00:00:00.000Z%2B1MONTH&rows=0)\n    [junit] Tests run: 6, Failures: 1, Errors: 0, Time elapsed: 6,996 sec\n    [junit] Test org.apache.solr.request.SimpleFacetsTest FAILED "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12966238",
            "date": "2010-12-02T19:16:11+0000",
            "content": "So is 1709 ok, but 1729 isn't?\n\n\n\n "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12966488",
            "date": "2010-12-03T11:14:42+0000",
            "content": "regarding: 1.4.1\nHmmh, today download.carrot2.org is down and I had to delete contrib/clustering to do the build after the patch. which does not apply cleanly (strange that it appled yesterday):\n\nsolr1.4.1$ patch -p0 < solr-1.4.0-solr-1729.patch \npatching file src/java/org/apache/solr/handler/component/FacetComponent.java\npatching file src/java/org/apache/solr/handler/component/ResponseBuilder.java\n\nsolr1.4.1$ patch -p0 < solr-1.4.0-solr-1709.patch \npatching file src/java/org/apache/solr/handler/component/FacetComponent.java\nReversed (or previously applied) patch detected!  Assume -R? [n] y\npatching file src/java/org/apache/solr/handler/component/ResponseBuilder.java\nReversed (or previously applied) patch detected!  Assume -R? [n] y\nHunk #3 succeeded at 251 (offset -1 lines).\n\nOr is this ok?? Because then, all tests would pass ...\n\n\n\nregarding branch3x\nboth patches do not apply cleanly. SOLR-1709 fails also without SOLR-1729\n\nsolr_branch_3x/solr$ patch -p0 < solr-1.4.0-solr-1709.patch \npatching file src/java/org/apache/solr/handler/component/FacetComponent.java\nHunk #1 succeeded at 240 (offset 2 lines).\nHunk #2 succeeded at 267 with fuzz 2 (offset 7 lines).\nHunk #3 FAILED at 436.\n1 out of 3 hunks FAILED \u2013 saving rejects to file src/java/org/apache/solr/handler/component/FacetComponent.java.rej\npatching file src/java/org/apache/solr/handler/component/ResponseBuilder.java\nReversed (or previously applied) patch detected!  Assume -R? [n] y\nHunk #2 FAILED at 61.\nHunk #3 FAILED at 252.\n2 out of 3 hunks FAILED \u2013 saving rejects to file src/java/org/apache/solr/handler/component/ResponseBuilder.java.rej\n "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12966494",
            "date": "2010-12-03T11:35:13+0000",
            "content": "Hi Peter,\n\nNot sure why it would work, then not...\n\nBoth these patches were submitted just before all the version name\nchanges (which I'm still getting to grips with).\n\nAt the time, I think 1.4.1 was the latest release train. For 3.x\nrecently we've done some manual merging due to some other changes\n(forwarding http credentials to remote shards).\n\nI'll have a look at building a separate 'branch3x' patch version, as\nthere may have been some separate back porting changes in the affected\nfiles that's breaking the current patch.\nAre you using the latest release, or the latest trunk version?\n\nThanks,\nPeter\n\n\n\n "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12966520",
            "date": "2010-12-03T13:03:21+0000",
            "content": "Hi Peter,\n\n1.4.1 would be fine (I asked Jake from solandra, before I thought he uses the trunk)\n\nNow in my last comment I made a stupid mistake: the patches didn't cleanly apply for 1.4.1 because I accidentially overwrote solr-1729.patch with solr-1709 when copying from branch3x and got two identical 1709 patches :-/\n\nSo: for 1.4.1 the patches apply cleanly. But the question remains why the following tests are failing:\n\nTest org.apache.solr.TestTrie FAILED\n\nTest org.apache.solr.request.SimpleFacetsTest FAILED "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12966533",
            "date": "2010-12-03T13:55:13+0000",
            "content": "Hi Peter,\n\n\nSo, the patches are clean (for 1.4.1), but the tests are failing for\n1.4.1? Or is the failure in 3.x? Sorry, but I'm a bit confused which\nbit isn't working now.\n\nThanks,\nPeter\n\n\n\nOn Fri, Dec 3, 2010 at 1:05 PM, Peter Karich (JIRA) <jira@apache.org> wrote:\n "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12966562",
            "date": "2010-12-03T15:56:44+0000",
            "content": "Hi Peter,\n\nsorry for the confusion :-/\n\nI was speaking of 1.4.1: the two patches apply. 2 tests fail.\n\nRegards,\nPeter. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12970483",
            "date": "2010-12-11T17:40:33+0000",
            "content": "Here's a patch for trunk that uses a thread local to make \"NOW\" the same across all uses,\nand is overridable by passing NOW=<ms> in the request params.\n\nYou can see it working with a request like:\nhttp://localhost:8983/solr/select?q=\n{!func}\nms%28NOW%29&fl=id,score&NOW=1000\n\nThis does not yet handle propagating NOW to shards in a distributed search. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12970497",
            "date": "2010-12-11T18:35:01+0000",
            "content": "OK, here's an updated patch that propagates NOW for all shard requests.  It seemed too risky to try and detect when NOW would be needed. "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12970544",
            "date": "2010-12-12T00:30:22+0000",
            "content": "Yonik,\n\nthanks for the update. I refreshed my sources (now trunk) to rev 1044745. But the patch does not cleanly apply* for SearchHandler.\nAm I doing something stupid here?\n\nRegards,\nPeter.\n\n*\npathxy/solr_branch_3x$ patch -p0 < SOLR-1729.patch \npatching file solr/src/test/test-files/solr/conf/schema12.xml\npatching file solr/src/test/org/apache/solr/search/function/TestFunctionQuery.java\nHunk #1 succeeded at 301 (offset -17 lines).\npatching file solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest.java\npatching file solr/src/test/org/apache/solr/handler/component/TermVectorComponentTest.java\npatching file solr/src/java/org/apache/solr/core/QuerySenderListener.java\npatching file solr/src/java/org/apache/solr/request/SimpleFacets.java\nHunk #1 succeeded at 64 (offset -9 lines).\nHunk #2 succeeded at 620 (offset -200 lines).\nHunk #3 succeeded at 630 (offset -200 lines).\nHunk #4 succeeded at 645 (offset -200 lines).\nHunk #5 succeeded at 803 (offset -200 lines).\npatching file solr/src/java/org/apache/solr/handler/component/SearchHandler.java\nHunk #1 FAILED at 192.\nHunk #2 succeeded at 255 (offset -36 lines).\n1 out of 2 hunks FAILED \u2013 saving rejects to file solr/src/java/org/apache/solr/handler/component/SearchHandler.java.rej\npatching file solr/src/java/org/apache/solr/handler/component/ResponseBuilder.java\nHunk #2 succeeded at 67 (offset -1 lines).\npatching file solr/src/java/org/apache/solr/spelling/SpellCheckCollator.java\npatching file solr/src/java/org/apache/solr/util/TestHarness.java\nHunk #2 succeeded at 320 (offset -9 lines).\nHunk #3 succeeded at 335 (offset -9 lines).\npatching file solr/src/java/org/apache/solr/util/DateMathParser.java\npatching file solr/src/webapp/src/org/apache/solr/servlet/SolrServlet.java\npatching file solr/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java\nHunk #1 succeeded at 241 (offset 4 lines).\nHunk #2 succeeded at 255 (offset 4 lines).\nHunk #3 succeeded at 283 (offset 4 lines).\npatching file solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection.java\nHunk #2 succeeded at 170 (offset -16 lines).\nHunk #3 succeeded at 185 with fuzz 1 (offset -16 lines).\npatching file solr/src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer.java\nHunk #1 succeeded at 32 with fuzz 1 (offset -9 lines).\nHunk #2 succeeded at 138 (offset -11 lines).\nHunk #3 succeeded at 156 (offset -77 lines). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12970547",
            "date": "2010-12-12T01:15:28+0000",
            "content": "pathxy/solr_branch_3x$ patch -p0 < SOLR-1729.patch \n\nThe patch was for trunk, not 3x? "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12970612",
            "date": "2010-12-12T16:20:30+0000",
            "content": "Hi Yonik,\n\nso, sorry for another misposting: yes, you were right. it was the wrong solr version. it was too late yesterday :-/\n\nAll is fine now with this patch. But the org.apache.solr.request.SolrRequestInfo class is missing or am I completely crazy now? (I checked out solr twice and applied the patch again but it didn't compile)\n\nRegards,\nPeter. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12970616",
            "date": "2010-12-12T16:44:03+0000",
            "content": "Yep, I forgot to \"svn add\" the new file.\nHere's a hopefully working patch. "
        },
        {
            "author": "Peter Karich",
            "id": "comment-12970671",
            "date": "2010-12-12T23:04:15+0000",
            "content": "Nice, now this patch 1729 applies + compiles + run tests successfully (I'm using rev 1044942 of trunk)\n\nOne further question: Would facet queries (with dates) work in the distributed setup without the date-patches? To get a quick(er) workaround. because I would need the patch for 1.4.1 (->solandra) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12970691",
            "date": "2010-12-13T03:15:04+0000",
            "content": "Would facet queries (with dates) work in the distributed setup without the date-patches?\n\nI'm not sure which date-patches you refer to, but this should fix all issues related to NOW being different in different places (both distributed and non distributed).\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12970703",
            "date": "2010-12-13T04:28:02+0000",
            "content": "I added a test for distributed search and committed. "
        },
        {
            "author": "Peter Sturge",
            "id": "comment-12970785",
            "date": "2010-12-13T11:55:22+0000",
            "content": "Many thanks for finishing off this patch. Sorry I didn't get time to fix this, been swamped with so many projects at the moment.\nThat's great you got the thread local NOW included as well. Thanks! "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13186914",
            "date": "2012-01-16T13:33:26+0000",
            "content": "I am planning to backport SOLR-1709 to 3.x and apparently its a good idea to do the same for this issue. Any objections & issues what I should be aware of with this issue? "
        },
        {
            "author": "David Smiley",
            "id": "comment-13186984",
            "date": "2012-01-16T15:55:24+0000",
            "content": "Fantastic Simon!  I'm glad someone with clout (i.e. a committer) is willing to make this happen.  Users need SOLR-1709. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13186990",
            "date": "2012-01-16T16:02:31+0000",
            "content": "reopen for backport to 3x "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13186991",
            "date": "2012-01-16T16:03:51+0000",
            "content": "here is a patch created from my svn merge. I also added SorlRequestInfo to places where it was added outside of this issue in 4.x. I'd appreciate a review but it seems all tests pass. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13186994",
            "date": "2012-01-16T16:11:23+0000",
            "content": "updated patch, I accidentally remove some lines from a test. they are back now and the patch includes the updated CHANGES.TXT "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13187533",
            "date": "2012-01-17T08:39:29+0000",
            "content": "I am going to commit this soon if nobody objects. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13187536",
            "date": "2012-01-17T08:54:53+0000",
            "content": "backported to 3x in rev 1232343 "
        }
    ]
}