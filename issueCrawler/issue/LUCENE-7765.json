{
    "id": "LUCENE-7765",
    "title": "Remove Scorer.iterator",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Wish",
        "components": [],
        "fix_versions": []
    },
    "description": "There are two ways that you can consume the documents that a Scorer matches: Scorer.iterator() and Scorer.twoPhaseIterator(), which is optional (it returns null if two-phase iteration is not supported). I think it made sense to make two-phase iteration optional in the beginning but it also has the drawback that it is too easy to forget to delegate two-phase iteration in compound queries (see eg. LUCENE-7654) so I am considering removing Scorer.iterator so that all scorers would be consumed using two-phase iteration.\n\nIt would probably be undesirable to use two-phase iteration on simple (combinations of) term queries, but I guess that could be easily addressed by using a special implementation of TwoPhaseIterator for the case that the approximation is accurate and eliminating it eg. in ConjunctionDISI.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15954501",
            "date": "2017-04-04T03:00:18+0000",
            "content": "This could really simplify and clarify the API.  Sounds good to me! ",
            "author": "David Smiley"
        }
    ]
}