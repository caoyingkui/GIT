{
    "id": "SOLR-1252",
    "title": "A lighter version of Solr for distribution",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "see the thread\n\nhttp://markmail.org/thread/z3ukgcowzdsdp3i3\n\nLet us decide on what all could be included in the lite version. \nI guess it should containe\n\n\tsolr.war\n\ta single core example\n\ta multicore example",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12725848",
            "date": "2009-06-30T23:32:58+0000",
            "content": "FYI: the markmail.org link seems to be missing some replies to that thread...\n\nhttp://www.nabble.com/solr-1.4-lite---to23971769.html\n\nmy vote would be \"-0\" for reasons mentioned in that thread. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12734447",
            "date": "2009-07-23T03:40:09+0000",
            "content": "As Solr matures, the contrib/ directory will fill up with more & more optional tools and plugins. This is what we want. There should be some way to pick&choose what I want to use in my Solr setup.\n\n+1 on making a separate dist/ and example/ for each contrib folder. A design idea: their directory structures would match the main dist/ and example/ directories. The user would copy contrib directories over into dist/ and follow a Readme.txt file to add solrconfig.xml entries etc. This would encourage contrib/ developers to make their code a little more separated from the main body of data structures and semantics - this would result in, for example, less use of deprecated methods.\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13606787",
            "date": "2013-03-19T20:54:11+0000",
            "content": "So, any new thoughts on this? The original idea of /contrib was a place to put non-core things. But there's only 9 contrib modules out there which tells me we may have been putting too much stuff into core. I don't know why, perhaps it's just extra hassle creating a new contrib module? Should we consider a better, more streamlined plugin mechanism?\n\nSPRING_CLEANING_2013 "
        }
    ]
}