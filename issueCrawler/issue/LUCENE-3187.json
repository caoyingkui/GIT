{
    "id": "LUCENE-3187",
    "title": "Store NumericField precisionStep in fnx file",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "2.9,                                            3.0,                                            3.1,                                            3.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "This is a similar problem like LUCENE-3186:\n\nThe following question was sent to user list: http://mail-archives.apache.org/mod_mbox/lucene-java-user/201106.mbox/%3C614C529D389A5944B351F7DFB7594F24012AA214@uksrpblkexb01.detica.com%3E\n\nThe main problem is that you have to pass the precision step and must knwo the field type of numeric fields before doing a query, else you get wrong results. We can maybe store the type and precision step in fnx file (like we do for stored numeric fields in FieldsWriter).\n\nI am not sure whats the best way to do it (without too much code specialization), but it seems a good idea. On the other hand, we don't store references to the Analyzer in the fnx file, so why for numeric field (it's just like an analyzer - if you change it, results are wrong)?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-09T11:40:45+0000",
            "content": "Robert commented on LUCENE-3186:\n\n\ndo we really need to do this? I guess also looking at LUCENE-3187, I think I'm against this trend.\n\nShall we put analyzer classnames in there too? If we are going to put docvalues type and precision step, well then i want the stopwords file in the fnx file too!\n\nAt some point, if a user is going to shoot themselves in the foot, we simply cannot stop them, and I don't think its our job to.\n\nI am also not really happy with this trend. I just opened LUCENE-3187 to start a discussion. In my opinion we should improve documentation instead. ",
            "author": "Uwe Schindler",
            "id": "comment-13046480"
        }
    ]
}