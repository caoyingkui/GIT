{
    "id": "LUCENE-1103",
    "title": "WikipediaTokenizer",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Improvement",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I have extended StandardTokenizer to recognize Wikipedia syntax and mark tokens with certain attributes.  It isn't necessarily complete, but it does a good enough job for it to be consumed and improved by others.\n\nIt sets the Token.type() value depending on the Wikipedia syntax (links, internal links, bold, italics, etc.) based on my pass at http://en.wikipedia.org/wiki/Wikipedia:Tutorial\n\nI have only tested it with the benchmarking EnwikiDocMaker wikipedia stuff and it seems to do a decent job.\n\nCaveats:  I am not sure how to best handle testing, since the content is licensed under GNU Free Doc License, I believe I can't copy and paste a whole document into the unit test.  I have hand coded one doc and have another one that just generally runs over the benchmark Wikipedia download.\n\nOne more question is where to put it.  It could go in analysis, but the tests at least will have a dependency on Benchmark.  I am thinking of adding a new contrib/wikipedia where this could grow to have other wikipedia things (perhaps we would move EnwikiDocMaker there????) and reverse the dependency on Benchmark.\n\nI will post a patch over the next few days.",
    "attachments": {
        "LUCENE-1103.patch": "https://issues.apache.org/jira/secure/attachment/12372406/LUCENE-1103.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-01-02T16:12:08+0000",
            "content": "Patch shortly.  This will be all new code, other than minor changes to include javadocs.  I am going to create contrib/wikipedia, as there are probably other things that can go in here once the seed is started. ",
            "author": "Grant Ingersoll",
            "id": "comment-12555333"
        },
        {
            "date": "2008-01-02T16:44:17+0000",
            "content": "Adds contrib/wikipedia.  Updates the javadocs build and the site docs.\n\nWill commit Friday, pending feedback.\n\nCurrent issues:\nDoesn't assign multiple types to tokens that have more than one possible type, i.e. something like '''[[link]]''' (a bold link).  In this case, I assign the more important type: the link. ",
            "author": "Grant Ingersoll",
            "id": "comment-12555339"
        },
        {
            "date": "2008-01-02T19:32:11+0000",
            "content": "Should now handle external links with non link text, i.e. http://foo.com/junk Foo Junk and spit out 3 tokens: http://foo.com/junk, Foo, Junk ",
            "author": "Grant Ingersoll",
            "id": "comment-12555373"
        },
        {
            "date": "2008-01-02T19:46:47+0000",
            "content": "More URL testing and fixes. ",
            "author": "Grant Ingersoll",
            "id": "comment-12555378"
        },
        {
            "date": "2008-01-02T22:45:21+0000",
            "content": "More legible unit test.  Also now skips HTML tags from within the text.  Fixed issue with heading.  Added support for <ref> tag in addition to the brace-based citation {{ ",
            "author": "Grant Ingersoll",
            "id": "comment-12555433"
        },
        {
            "date": "2008-01-03T19:22:23+0000",
            "content": "Should the position increment be zero for link urls, so that phrase searches work correctly with anchors?  One might even index URLs in a separate field... ",
            "author": "Doug Cutting",
            "id": "comment-12555642"
        },
        {
            "date": "2008-01-03T20:41:28+0000",
            "content": "\nShould the position increment be zero for link urls, so that phrase searches work correctly with anchors? \n\nGood point.  I will look into it.\n\n\nOne might even index URLs in a separate field...\n\nYep, there are all kinds of fun things you can do with the various pieces, and the TeeTokenFilter/SinkTokenizer is really handy for this stuff.  ",
            "author": "Grant Ingersoll",
            "id": "comment-12555674"
        },
        {
            "date": "2008-01-03T22:09:40+0000",
            "content": "The first alphanum in internal and external link gets a positionIncrement of 0, so phrases can still work. ",
            "author": "Grant Ingersoll",
            "id": "comment-12555693"
        },
        {
            "date": "2008-01-04T02:36:26+0000",
            "content": "Handle anchors in links and check for various link conditions ",
            "author": "Grant Ingersoll",
            "id": "comment-12555771"
        },
        {
            "date": "2008-01-04T03:10:05+0000",
            "content": "Adds in EXTERNAL_LINK_URL type to distinguish the first token of an external link from the other tokens.\n\nAlso adds in a POM template, so this project can be mavenized.\n\nAre we there yet? ",
            "author": "Grant Ingersoll",
            "id": "comment-12555774"
        },
        {
            "date": "2008-01-04T14:29:52+0000",
            "content": "Committed. ",
            "author": "Grant Ingersoll",
            "id": "comment-12555936"
        },
        {
            "date": "2008-01-04T20:17:10+0000",
            "content": "I updated the link slightly to increment the first token of a link (i.e. the URL or the Wiki link) and then not increment the next token in the link, such that the link and the first display token will be at the same position instead of the first way I had it which put the link token at the same position as the previous token.\n\nI also modified the EXTERNAL link state to recognize https ",
            "author": "Grant Ingersoll",
            "id": "comment-12556057"
        }
    ]
}