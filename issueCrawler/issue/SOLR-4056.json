{
    "id": "SOLR-4056",
    "title": "Contribution of component to gather the most frequent user search request in real-time",
    "details": {
        "affect_versions": "3.6.1",
        "status": "Open",
        "fix_versions": [
            "3.6.3"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I'm now finishing a SOLR project for one of my customers (replacing Microsoft FAST server with SOLR) and got the permission to contribute our improvements.\n\nThe most interesting thing is a \"FrequentSearchTerm\" component which allows to analyze the user-supplied search queries in real-time\n\n\n\tit keeps track of the last queries per core using a LIFO buffer (so we have an upper limit of memory consumption)\n\tper query entry we keep track of the number of invocations, the average number of result document and the average execution time\n\twe allow for custom searches across the frequent search terms using the MVEL expression language (see http://mvel.codehaus.org)\n\t\n\t\tfind all queries which did not yield any results - 'meanHits==0'\n\t\tfind all \"iPhone\" queries - \"searchTerm.contains(\"iphone) || searchTerm.contains(\"i-phone)''\n\t\tfind all long-running \"iPhone\" queries - '(searchTerm.contains(\"iphone) || searchTerm.contains(\"i-phone)) && meanTime>50'\n\t\n\t\n\tGUI : we have a JSP page which allows to access the frequent search terms\n\tthere is also an XML/CSV export we use to display the 50 most frequently used search queries in real-time\n\n\n\nWe use this component\n\n\n\tto get input for QA regarding frequently used search terms\n\tto find strange queries, e.g. queries returning no or too many result, e.g. caused by WordDelimeterFilter\n\tto keep our management happy ... \n\n\n\n\n Not sure if the name \"Frequent Search Term Component\" is perfectly suitable as it was taken from FAST - suggestions welcome. Maybe \"FrequentSearchQueryComponent\" would be more suitable?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13558407",
            "date": "2013-01-20T22:26:40+0000",
            "content": "Hi, thanks for your willingness to contribute. I did not see any attachments?\n\nThe preferred way would be a patch file against TRUNK (or alternatively 4.x). Also, you may be aware that we spent some effort getting rid of JSPs in 4.x, so if at all possible, the data should be made available in a RESTful way and then let the new Ajax GUI take care of presentation. "
        }
    ]
}