{
    "id": "SOLR-8876",
    "title": "Morphlines fails with \"No command builder registered for ...\" when using Java 9 due to morphline \"importCommands\" config option attempting to resolve classname globs",
    "details": {
        "components": [
            "contrib - MapReduce",
            "contrib - morphlines-cell",
            "(1)",
            "contrib - morphlines-core"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Workaround",
        "priority": "Major"
    },
    "description": "When running Solr in java9, and using the morphlines contrib(s) users may encounter vague errors such as...\n\n\nNo command builder registered for COMMAND_NAME\n\n\n\nThis error comes directly from the morphlines code, and relates to the use of wildcards in the importCommands declaration of of morphlines *.conf files used \u2013 for example...\n\n\nimportCommands : [\"org.kitesdk.**\", \"org.apache.solr.**\"]\n\n\n\nUsing wildcards like * and ** in morphline's importCommands config options do not work in java9 due to changes in the underlying JVM classloader.\n\nThis issue is tracked up stream in: https://github.com/kite-sdk/kite/issues/469\n\n\n\nWORK AROUND\n\nThe workaround is to only use fully qualified command class names in importCommands declaration, one for each distinct command used in that conf file.\n\nExample:\n\n\n# Old config, does not work in java9\n# importCommands : [\"org.kitesdk.**\", \"org.apache.solr.**\"]\n\n# replaced with...\n\n# using globs (foo.bar.* or foo.bar.**) will not work in Java9 due to classpath scanning limitations\n# so we enumarate every command (builder) we know this config uses below. (see SOLR-8876)\nimportCommands : [\"org.kitesdk.morphline.stdlib.LogDebugBuilder\",\n                  \"org.apache.solr.morphlines.solr.SanitizeUnknownSolrFieldsBuilder\",\n                  \"org.apache.solr.morphlines.solr.LoadSolrBuilder\"]",
    "attachments": {
        "SOLR-8876.patch": "https://issues.apache.org/jira/secure/attachment/12855023/SOLR-8876.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-20T09:41:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 91424ae9633b2f382799691693dd4ce8ed216cb8 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=91424ae ]\n\nSOLR-8874, SOLR-8876: Disable more Hadoop tests with Java 9 ",
            "id": "comment-15203189"
        },
        {
            "date": "2016-03-20T09:41:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 19b4168b3f6ef7c6614ece040948cab9a05be32b in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=19b4168 ]\n\nSOLR-8874, SOLR-8876: Disable more Hadoop tests with Java 9 ",
            "id": "comment-15203191"
        },
        {
            "date": "2016-03-20T09:42:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2e06790bdcf0b26fcc8ecf518284432153dd6a7c in lucene-solr's branch refs/heads/branch_6_0 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2e06790 ]\n\nSOLR-8874, SOLR-8876: Disable more Hadoop tests with Java 9 ",
            "id": "comment-15203193"
        },
        {
            "date": "2017-02-28T00:18:20+0000",
            "author": "Hoss Man",
            "content": "\nRoot issue appears to be a (non-test) bug in how morphlines parses it's config file.\n\nSyntax like this...\n\n\n    importCommands : [\"org.kitesdk.**\", \"org.apache.solr.**\"]\n\n\n\n...is intended to trigger classpath scanning of those package (prefixes) looking for classes that implement morphline's  CommandBuilder interface, which can then be refered to by name later in the config.\n\nThis classpath scanning doesn't work in java9 (likely due to the way the ClassLoader specifics have changed)\n\nIt appears that this limitation can be worked arround by having a config which explicitly identifies all of the *Builder classes needed for the config, e.g. ...\n\n\n    # using globs (foo.bar.* or foo.bar.**) will not work in Java9 due to classpath scanning limitations\n    # so we enumarate every command (builder) we know this config uses below. (see SOLR-8876)\n    importCommands : [\"org.kitesdk.morphline.stdlib.LogDebugBuilder\",\n                      \"org.apache.solr.morphlines.solr.SanitizeUnknownSolrFieldsBuilder\",\n\t\t      \"org.apache.solr.morphlines.solr.LoadSolrBuilder\"]\n\n\n\nI opened an upstream issue: https://github.com/kite-sdk/kite/issues/469\n\n\n\nThe attached patch removes these problematic globs from all the test configs in solr, and removes all \"SOLR-8876\" + Constants.JRE_IS_MINIMUM_JAVA9 related \"assumes\".  With this patch, running morphline-core, morphline-cell, & map-reduce tests under java9 seem to pass/skip reliably (and failures found when using -Dtests.awaitsfix=true seem to match the existing test failures using  -Dtests.awaitsfix=true with java8)\n\nI suggest we commit & backport this patch, but leave this jira open with a modified summary/description drawing attention to the morphlines config limitation in java9 and the workaround.\n\n ",
            "id": "comment-15886835"
        },
        {
            "date": "2017-02-28T00:25:45+0000",
            "author": "Hoss Man",
            "content": "tweaked summary/description to reflect current state of situation.\n\n(should be updated/refined more \u2013 if/when we commit patch \u2013 to be more user centric) ",
            "id": "comment-15886892"
        },
        {
            "date": "2017-03-08T17:13:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4bc0636c1d188def7b221ed5c1235e9b6688471b in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4bc0636 ]\n\nSOLR-8876: change morphline test config files to work around 'importCommands' bug when using java9\n\n(cherry picked from commit 8756be05404758155b850748f807245fdaab6a8b) ",
            "id": "comment-15901583"
        },
        {
            "date": "2017-03-08T17:13:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8756be05404758155b850748f807245fdaab6a8b in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8756be0 ]\n\nSOLR-8876: change morphline test config files to work around 'importCommands' bug when using java9 ",
            "id": "comment-15901584"
        },
        {
            "date": "2017-03-08T17:23:03+0000",
            "author": "Hoss Man",
            "content": "i've committed the work around to our test configs.\n\ni'm updating the summary & description to target users who may face this problem.\n\nwe should leave this issue open until the upstream bug is \"fixed\" in a future version and we've upgraded morphlines to use that version. ",
            "id": "comment-15901602"
        },
        {
            "date": "2017-03-08T19:16:00+0000",
            "author": "Hoss Man",
            "content": "Actually, the \"Workaround\" resolution seems fitting for this. ",
            "id": "comment-15901811"
        },
        {
            "date": "2017-03-08T19:22:49+0000",
            "author": "Mark Miller",
            "content": "I'm actually going to withdraw my veto from Steve's removal of the map-reduce contribs, so that would handle this case. Another option is to remove the cell contrib and add a more generic interface that morphlines can be plugged into external (or whatever logic). I've given it some time and it doesn't seem we are going to address the current issues in the near term though. ",
            "id": "comment-15901824"
        },
        {
            "date": "2017-03-10T17:49:45+0000",
            "author": "Steve Rowe",
            "content": "I'm actually going to withdraw my veto from Steve's removal of the map-reduce contribs\n\nMark Miller, could you make a comment to this effect over on SOLR-9221 ? ",
            "id": "comment-15905473"
        },
        {
            "date": "2017-03-10T19:02:08+0000",
            "author": "Uwe Schindler",
            "content": "Another option is to remove the cell contrib and add a more generic interface that morphlines can be plugged into external (or whatever logic)\n\nThis is also something I would propose in general. This would allow to make some \"cell\" functionality that would use the TIKA server functionality. This would make the Solr distrib smaller and its no longer risky to crush the Solr server when the M$ Office parser runs out of memory! Instead you can simply restart the TIKA server in a separate JVM or instead use Morphlines, maybe also in separate JVM. ",
            "id": "comment-15905554"
        }
    ]
}