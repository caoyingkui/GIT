{
    "id": "LUCENE-2606",
    "title": "optimize contrib/regex for flex",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/other"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "changes RegexCapabilities match(String) to match(BytesRef)\n\tthe jakarta and jdk impls uses CharacterIterator/CharSequence matching against the utf16result instead.\n\ti also reuse the matcher for jdk, i don't see why we didnt do this before but it makes sense esp since we reuse the CSQ",
    "attachments": {
        "LUCENE-2606.patch": "https://issues.apache.org/jira/secure/attachment/12452324/LUCENE-2606.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-08-17T21:07:57+0000",
            "content": "simple patch, we will have to list the break (matches(String) -> matches(BytesRef) in \ncontrib/changes because RegexCapabilities is an interface, no way to do any back compat. ",
            "author": "Robert Muir",
            "id": "comment-12899586"
        },
        {
            "date": "2010-08-18T12:17:08+0000",
            "content": "attached is another iteration:\n\n\tbecause the Query stores RegexCapabilities, i pulled the 'matcher' stuff out so the enum just calls matcher = capability.compile(pattern);\nThis way the capabilities stores no real state, only the matcher which is created in the TermsEnum.\n\tthe RegexCapabilities is also marked serializable (LUCENE-961)\n\n ",
            "author": "Robert Muir",
            "id": "comment-12899819"
        },
        {
            "date": "2010-08-18T12:27:43+0000",
            "content": "Looks good! The thing was broken in 3.x and 3.0, too as it was not threadsafe, if the same capabilities object was used in multiple threads. ",
            "author": "Uwe Schindler",
            "id": "comment-12899822"
        },
        {
            "date": "2010-08-18T20:54:34+0000",
            "content": "Looks good! The thing was broken in 3.x and 3.0, too as it was not threadsafe, if the same capabilities object was used in multiple threads.\n\nTrue, I think we have the opportunity to fix it in 4.x since we have to break the interface anyway.\n\nShould we do anything about 3.x? It seems good to fix bugs, but it would be frustrating (if someone has a custom RegexCapabilities) to break the API in 3.x, then in 4.x again! ",
            "author": "Robert Muir",
            "id": "comment-12900028"
        },
        {
            "date": "2010-08-19T11:22:02+0000",
            "content": "Committed revision 987129. ",
            "author": "Robert Muir",
            "id": "comment-12900253"
        }
    ]
}