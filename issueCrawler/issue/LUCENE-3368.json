{
    "id": "LUCENE-3368",
    "title": "IndexWriter commits update documents without corresponding delete",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.4"
        ],
        "affect_versions": "3.0,                                            3.0.1,                                            3.0.2,                                            3.0.3,                                            3.1,                                            3.2,                                            3.3",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "while backporting the testcase from LUCENE-3348 I ran into this thread hazard in the 3.x branch. We actually fixed this issue in LUCENE-3348 for Lucene 4.0 but since DWPT has a slightly different behavior when committing segments I create a new issue to track this down in 3.x. when we prepare a commit we sync on IW flush the DW and apply all deletes then release the lock, maybeMerge and start the commit (IW#startCommit(userdata)). Yet, a new segment could be flushed via getReader and sneak into the SegementInfos which are cloned in IW#startCommit instead of in prepareCommit right after the flush.",
    "attachments": {
        "LUCENE-3368.patch": "https://issues.apache.org/jira/secure/attachment/12489838/LUCENE-3368.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-08-09T12:46:32+0000",
            "content": "here is a patch that clones && commits the SIS while syncing on IW. All test pass including the TestStressNRT running2400 iterations ",
            "author": "Simon Willnauer",
            "id": "comment-13081598"
        },
        {
            "date": "2011-08-10T07:36:54+0000",
            "content": "fixed in 3.x  ",
            "author": "Simon Willnauer",
            "id": "comment-13082211"
        },
        {
            "date": "2011-08-10T11:09:26+0000",
            "content": "Nice catch Simon! ",
            "author": "Michael McCandless",
            "id": "comment-13082283"
        }
    ]
}