{
    "id": "SOLR-6075",
    "title": "CoreAdminHandler should synchronize while adding a task to the tracking map",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "CoreAdminHandler should synchronize on the tracker maps when adding a task. It's a rather nasty bug and we should get this in asap.",
    "attachments": {
        "SOLR-6075.patch": "https://issues.apache.org/jira/secure/attachment/12644888/SOLR-6075.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Anshum Gupta",
            "id": "comment-13998016",
            "date": "2014-05-14T20:58:10+0000",
            "content": "Here's a fix. "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-13998158",
            "date": "2014-05-14T22:34:30+0000",
            "content": "It'd be great if someone could commit this into trunk. I can't seem to login right now (trying to reset my password but I guess the mail might take a while to be delivered). "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13998819",
            "date": "2014-05-15T14:57:05+0000",
            "content": "Looks like you have accidentally synchronized on the string and not the map. We should synchronize on getMap(map). \n\nBut on looking more closely at this, the maps are actually all created with Collections.synchronizedMap() so there really is no need for this synchronization in any of the addTask/removeTask/getTask methods.\n\nAlso, I don't see why the requestStatusMap should be static. There is only one CoreAdminHandler so requestStatusMap should just be a final instance variable, perhaps initialised with an unmodifiable map. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13998834",
            "date": "2014-05-15T15:21:31+0000",
            "content": "This patch removes the extra synchronization and makes the requestStatusMap non-static.\n\nSince the map was already synchronized, there is no thread safety issue because the map is never cleared and addTask(String map, TaskObject o, boolean limit) is the only method which removes stuff from the map. Therefore this isn't a bug and there is no urgent need to fix it in 4.8.1 "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13998838",
            "date": "2014-05-15T15:23:07+0000",
            "content": "Marking as an improvement for 4.9 "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-13999464",
            "date": "2014-05-16T00:38:15+0000",
            "content": "The addTask(String map, TaskObject o, boolean limit) method reads in one statement and removes in the next. That was the reason I thought we should synchronize it. \nCollections.synchronizedMap ensures that statements like put(), remove() are thread-safe. There's no guarantee on a bunch of statements comprising of read/update operations together being thread-safe.\n\nAlso, you're correct, I accidentally synchronized it on the string. Thanks for noticing that! "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14001467",
            "date": "2014-05-19T07:43:26+0000",
            "content": "The addTask(String map, TaskObject o, boolean limit) method reads in one statement and removes in the next. That was the reason I thought we should synchronize it. \n\nI added a comment in the code to this effect. This lack of synchronization is not a problem in this particular case because no one else removes from that map. You're right in the general sense but why synchronize on Collections.synchronizedMap(...) instances? Remove one of those synchronizations if you really want to go that way. "
        }
    ]
}