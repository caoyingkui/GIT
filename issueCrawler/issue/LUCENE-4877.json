{
    "id": "LUCENE-4877",
    "title": "Fix analyzer factories to throw exception when arguments are invalid",
    "details": {
        "components": [
            "modules/analysis"
        ],
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Currently if someone typos an argument \"someParamater=xyz\" instead of someParameter=xyz, they get no exception and sometimes incorrect behavior.\n\nIt would be way better if these factories threw exception on unknown params, e.g. they removed the args they used and checked they were empty at the end.",
    "attachments": {
        "LUCENE-4877-steve-more-param-parsing-verbs.patch": "https://issues.apache.org/jira/secure/attachment/12576462/LUCENE-4877-steve-more-param-parsing-verbs.patch",
        "LUCENE-4877.patch": "https://issues.apache.org/jira/secure/attachment/12576255/LUCENE-4877.patch",
        "LUCENE-4877_one_solution_prototype.patch": "https://issues.apache.org/jira/secure/attachment/12575267/LUCENE-4877_one_solution_prototype.patch",
        "LUCENE-4877-steve-minor-fixes.patch": "https://issues.apache.org/jira/secure/attachment/12576409/LUCENE-4877-steve-minor-fixes.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-03-25T01:09:01+0000",
            "content": "here's one way we could improve it. There are probably other alternatives that might be better, too.\n\nI only fixed one factory as its better to decide this before going thru all of them. ",
            "author": "Robert Muir",
            "id": "comment-13612344"
        },
        {
            "date": "2013-03-25T06:02:12+0000",
            "content": "+1, patch looks good. ",
            "author": "Steve Rowe",
            "id": "comment-13612412"
        },
        {
            "date": "2013-03-29T16:14:39+0000",
            "content": "+1 ",
            "author": "Adrien Grand",
            "id": "comment-13617472"
        },
        {
            "date": "2013-03-30T02:38:40+0000",
            "content": "Thanks guys. I've begun the \"horrible slave work\" part \n\nHope to have a patch soon. ",
            "author": "Robert Muir",
            "id": "comment-13617961"
        },
        {
            "date": "2013-03-30T22:49:03+0000",
            "content": "I have fixed all the factories, but currently I just started fixing tests and adding tests for bogus parameters to all factories.\n\nI added some helpers to BaseTokenStreamTestCase and fixed TestArabicFilters.java as a prototype...\n\nslow moving ",
            "author": "Robert Muir",
            "id": "comment-13618178"
        },
        {
            "date": "2013-03-31T05:17:26+0000",
            "content": "updated patch: tests in analysis/common are done. I'll look at the other analysis modules and solr tomorrow. ",
            "author": "Robert Muir",
            "id": "comment-13618246"
        },
        {
            "date": "2013-03-31T21:39:22+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13618477"
        },
        {
            "date": "2013-04-01T06:59:30+0000",
            "content": "whew, made it thru the rest. all tests pass. ",
            "author": "Robert Muir",
            "id": "comment-13618662"
        },
        {
            "date": "2013-04-01T10:09:25+0000",
            "content": "Really nice de-cluttering in the tests.\n\nI don't like the 4-arg required param getXXX() methods in AbstractAnalysisFactory - 4th param as false means required??? - maybe these could be converted to getRequiredXXX() ?\n\nI think AbstractAnalysisFactory could use additional param parsing methods:\n\n\n\tget(args, param [, default]) would be a nice addition for strings, instead of args.remove(), which looks different from all the other getXXX() methods.  Maybe also a version that takes a set of acceptable values, as well as a boolean for case insensitivity?\n\tgetEnum(args, param, Enum class [, default] ) - probably case insensitivity could be assumed?\n\tgetChar() should be pulled out of PathHierarchyTokenizerFactory, so that DelimitedPayloadTokenFilterFactory can use it.\n\tgetFloat() - well, only one factory (NumericPayloadTokenFilterFactory) could use it now, but maybe add it for completeness?\n\n\n\nA few nits:\n\n\n\tTestMappingCharFilterFactory's factory could switch to being instantiated using the charFilterFactory() method\n\tEdgeNgramTokenizerFactory's gram size constants are pulled from EdgeNgramTokenFilter instead of EdgeNgramTokenizer\n\tLimitTokenCountFilterFactory's maxTokenCount param should be required; this is a pre-existing problem though\n\tPatternTokenizerFactory's group param should use the getInt() method with a default of -1.\n\n\n\nI can do the work if you agree with these. ",
            "author": "Steve Rowe",
            "id": "comment-13618720"
        },
        {
            "date": "2013-04-01T10:15:53+0000",
            "content": "Should we create a branch. I also have some ideas to fix... ",
            "author": "Uwe Schindler",
            "id": "comment-13618722"
        },
        {
            "date": "2013-04-01T10:36:17+0000",
            "content": "\nI don't like the 4-arg required param getXXX() methods in AbstractAnalysisFactory - 4th param as false means required??? - maybe these could be converted to getRequiredXXX() ?\n\nI think AbstractAnalysisFactory could use additional param parsing methods:\n\n    get(args, param [, default]) would be a nice addition for strings, instead of args.remove(), which looks different from all the other getXXX() methods. Maybe also a version that takes a set of acceptable values, as well as a boolean for case insensitivity?\n    getEnum(args, param, Enum class [, default] ) - probably case insensitivity could be assumed?\n    getChar() should be pulled out of PathHierarchyTokenizerFactory, so that DelimitedPayloadTokenFilterFactory can use it.\n    getFloat() - well, only one factory (NumericPayloadTokenFilterFactory) could use it now, but maybe add it for completeness?\n\nA few nits:\n\n    TestMappingCharFilterFactory's factory could switch to being instantiated using the charFilterFactory() method\n    EdgeNgramTokenizerFactory's gram size constants are pulled from EdgeNgramTokenFilter instead of EdgeNgramTokenizer\n    LimitTokenCountFilterFactory's maxTokenCount param should be required; this is a pre-existing problem though\n    PatternTokenizerFactory's group param should use the getInt() method with a default of -1.\n\n\n+1 to all of this! ",
            "author": "Robert Muir",
            "id": "comment-13618731"
        },
        {
            "date": "2013-04-01T10:38:32+0000",
            "content": "\nShould we create a branch. I also have some ideas to fix...\n\nWe can, or maybe just use trunk? I don't think the patch makes these factories any worse. ",
            "author": "Robert Muir",
            "id": "comment-13618734"
        },
        {
            "date": "2013-04-01T10:41:12+0000",
            "content": "\nShould we create a branch. I also have some ideas to fix...\n\nWe can, or maybe just use trunk? I don't think the patch makes these factories any worse.\n\n+1 to commit Robert's patch to trunk and iterate there. ",
            "author": "Steve Rowe",
            "id": "comment-13618736"
        },
        {
            "date": "2013-04-01T10:48:16+0000",
            "content": "Or you can assign the issue. I just have family coming into town today and won't have any time to do any of the work to help out with this one. \n\nI thought i knew what was involved with this stuff pretty well but I grossly underestimated the amount of work to even throw the exception  ",
            "author": "Robert Muir",
            "id": "comment-13618738"
        },
        {
            "date": "2013-04-01T15:43:39+0000",
            "content": "I have no preference on how to proceed. I just dont want to download such a large patch, modify the sources and upload it again. especially as TortoiseSVN and other clients depend on order of files in filesystem, the order of created patches is different, too. So its impossible to see any change in comparison to earlier patches.\n\nAs we don't intend to release trunk soon: If all tests pass, can you simply commit as a first step, Robert? +1 on the current patch. We can open further issues to unfuck ResourceLoaderAware (it should be removed, too and the ResourceLoader should be passed to the ctor, too). ",
            "author": "Uwe Schindler",
            "id": "comment-13618842"
        },
        {
            "date": "2013-04-01T15:52:31+0000",
            "content": "\nI have no preference on how to proceed. I just dont want to download such a large patch, modify the sources and upload it again. especially as TortoiseSVN and other clients depend on order of files in filesystem, the order of created patches is different, too. So its impossible to see any change in comparison to earlier patches.\n\nAs we don't intend to release trunk soon: If all tests pass, can you simply commit as a first step, Robert? +1 on the current patch.\n\nOk. I'll commit this one to trunk. We can merge back to stable when we are happy.\n\n\nWe can open further issues to unfuck ResourceLoaderAware (it should be removed, too and the ResourceLoader should be passed to the ctor, too).\n\nI don't like this either: but it would require more heavy duty stuff in solr to fix that. I also think it would be good to separate that from the goal of throwing exceptions for bogus arguments (as i fixed that for all analysis factories in this patch despite the ResourceLoader issue: all arguments are parsed in ctor and the inform() only does actual loading).\n\nThe challenge in fixing the ResourceLoader stuff is in SolrResourceLoader. when it loads these \"aware\" classes it only adds them to a list (it defers this), and then at the end calls inform() on everything in the list. I haven't looked into why this is, but yeah i would definitely prefer if this was a followup issue actually.\n\nI would like this change (throw exception on invalid arguments) to make it back to the stable branch, so I'll keep this issue open until everyone is happy with it. But in general we should try to split up issues for these factories into steps: its not easy to make these sweeping changes unless you either have lots of time or are ok with introducing bugs. ",
            "author": "Robert Muir",
            "id": "comment-13618854"
        },
        {
            "date": "2013-04-01T16:30:13+0000",
            "content": "I committed this to trunk. Can we be extra careful to use LUCENE-4877: in all commit messages so when its time to backport its easy to find the revisions?\n\nThanks in advance for any improvements! ",
            "author": "Robert Muir",
            "id": "comment-13618881"
        },
        {
            "date": "2013-04-01T16:32:38+0000",
            "content": "\ngetFloat() - well, only one factory (NumericPayloadTokenFilterFactory) could use it now, but maybe add it for completeness?\n\nI just remembered. I think the reversewildcardfactory in solr has one of these too.  ",
            "author": "Robert Muir",
            "id": "comment-13618885"
        },
        {
            "date": "2013-04-01T18:12:19+0000",
            "content": "Patch fixing these minor nits:\n\n\nTestMappingCharFilterFactory's factory could switch to being instantiated using the charFilterFactory() method\nEdgeNgramTokenizerFactory's gram size constants are pulled from EdgeNgramTokenFilter instead of EdgeNgramTokenizer\nLimitTokenCountFilterFactory's maxTokenCount param should be required; this is a pre-existing problem though\nPatternTokenizerFactory's group param should use the getInt() method with a default of -1.\n\nActually, I was wrong about LimitTokenCountFilterFactory - it already has a test in place to insure reporting of missing required maxTokenCount param.\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-13618993"
        },
        {
            "date": "2013-04-01T18:14:35+0000",
            "content": "Thanks Steve! ",
            "author": "Robert Muir",
            "id": "comment-13618996"
        },
        {
            "date": "2013-04-01T23:44:50+0000",
            "content": "This patch adds more param parsing methods to AbstractAnalysisFactory, including get(), require(), getFloat(), getChar(), and getSet(), and changed all analysis factories to use them where appropriate.\n\nI don't like the 4-arg required param getXXX() methods in AbstractAnalysisFactory - 4th param as false means required??? - maybe these could be converted to getRequiredXXX() ?\n\nI implemented these as require(), requireXXX(), etc.\n\nTests all pass, and precommit's happy.\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-13619336"
        },
        {
            "date": "2013-04-04T13:44:56+0000",
            "content": "Thanks for cleaning this up Steve, much nicer.\n\nI'd like to merge these commits back to 4.x if there are no objections. ",
            "author": "Robert Muir",
            "id": "comment-13622206"
        },
        {
            "date": "2013-05-10T10:32:48+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653730"
        }
    ]
}