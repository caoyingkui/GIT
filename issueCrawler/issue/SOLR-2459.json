{
    "id": "SOLR-2459",
    "title": "Implement LogLevelSelection as a RequestHandler",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "Wish",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The current available Output of the LogLevelSelection Servlet is plain HTML, which made it unpossible, to integrate the Logging-Information in the new Admin-UI. Format-Agnostic Output (like every [?] other Servlet offers) would be really nice!\n\nJust as an Idea for a future structure, the new admin-ui is actually based on that json-structure",
    "attachments": {
        "LogLevelHandler.patch": "https://issues.apache.org/jira/secure/attachment/12481133/LogLevelHandler.patch",
        "sample-output.json": "https://issues.apache.org/jira/secure/attachment/12481135/sample-output.json",
        "SOLR-2459-LogLevel.patch": "https://issues.apache.org/jira/secure/attachment/12515520/SOLR-2459-LogLevel.patch",
        "sample-output.xml": "https://issues.apache.org/jira/secure/attachment/12481134/sample-output.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Upayavira",
            "id": "comment-13042046",
            "date": "2011-06-01T08:45:19+0000",
            "content": "So, slf4j is a facade, and it looks like Solr uses JDK logging behind that. I'm assuming this is correct.\n\nIt seems that the best way to do this is to replace the LogLevelSelection servlet with a Handler.\n\nCoding a handler to display current settings is easy, and I've already done it. However, to code the update side, requires a decision on suitable request parameters.\n\nThe biggest question is whether to allow multiple settings to be changed in one request. The current LogLevelSelection servlet allows you to change them all in one single hit. However, allowing this in a new Handler would, in my opinion, give rise to an ugly API. Therefore, I suggest that:\n\nhttp://localhost:8983/solr/admin/logging   <- would display current settings\nhttp://localhost:8983/solr/admin/logging?category=core&level=FINE   <- would change a single value\n\nThis latter would probably output the same as the previous, but perhaps with an 'updated' attribute set to true on that category.\n\nGiven the ajax nature of the new UI, I suspect this would be enough for it to work with.\n\nThoughts? "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13042056",
            "date": "2011-06-01T09:09:19+0000",
            "content": "Upayavira,\n\nthanks for having a look into this!\n\nThoughts?\nYes, just a simple one \u2013 GET for requesting Data and POST for changing them, please  \n\nThe biggest question is whether to allow multiple settings to be changed in one request. The current LogLevelSelection servlet allows you to change them all in one single hit. However, allowing this in a new Handler would, in my opinion, give rise to an ugly API.\nDon't know much about the handling of arrays in java .. in php it's pretty easy? For the Interface it would be okay to generate such an structure for an HTTP-Request: \n\nlogging[org.apache.solr.core.JmxMonitoredMap]=INFO&logging[org.apache.solr.update.UpdateHandler]=FINEST\n\nGiven that Information you could loop over it, and set every Logger at the specified Level. Of course we need to define how we could reset/delete a Loggers-Setting ..\n\nStefan "
        },
        {
            "author": "Upayavira",
            "id": "comment-13042078",
            "date": "2011-06-01T10:05:36+0000",
            "content": "Well, Solr doesn't distinguish between GET and POST in its handlers as far as I can see, so either would work.\n\nIf by POST you mean that you would post some XML or JSON to it, and it would use that, that could be done (don't know how hard it is to accept JSON, but could look into it).\n\nUpayavira "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13042124",
            "date": "2011-06-01T12:07:50+0000",
            "content": "Well, Solr doesn't distinguish between GET and POST in its handlers as far as I can see, so either would work.\nAh okay .. good to know!\n\nIf by POST you mean that you would post some XML or JSON to it, and it would use that, that could be done (don't know how hard it is to accept JSON, but could look into it).\nNo, not really - just POSTing the Params and don't append them to the url; because some older browser has low restrictions to the length of an url \u2013 and while using POST the size/amount of data does not matter. i think there is no need to support xml/json here, the data is plain key/value .. it's enough :> "
        },
        {
            "author": "Upayavira",
            "id": "comment-13042129",
            "date": "2011-06-01T12:17:59+0000",
            "content": "As far as a Handler is concerned, it is just a list of key/value pairs, regardless of whether POSTed or in the URL of a GET. (at least, that is my current understanding).\n\nPerhaps it could be:\n\nlogging.category=org.apache.org.solr.core.JmxMonitoredMap\nlogging.level=INFO\n\nOr, as an alternative:\n\nlogging.category.org.apache.solr.core.JmxMonitoredMap=INFO\nlogging.category.org.apache.solr.update.UpdateHandler=FINEST\n\nEither would be acceptable. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13042135",
            "date": "2011-06-01T12:38:14+0000",
            "content": "I like:\nlogging.category=org.apache.org.solr.core.JmxMonitoredMap\nlogging.level=INFO\n\nAs for actually updating the logging value....  what is the plan for supporting various logging providers like Log4j?  The handler gets initialized with the logging framework and it takes care of translating the levels (FINEST == TRACE etc)? "
        },
        {
            "author": "Upayavira",
            "id": "comment-13042160",
            "date": "2011-06-01T13:22:52+0000",
            "content": "Ryan,\n\nI'd implement both approaches - the latter might allow Stefan more flexibility in building a UI on top of it. (in fact, I have both coded, now looking at test cases).\n\nAt present, this is intentionally a rewrite of the LogLevelSelection servlet, which only works with JDK logging. I'm just plagiarising the logging code from there.\n\nIf we want to be more clever, and work with other frameworks, I'm up for it, but it is extending the scope somewhat! "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13042172",
            "date": "2011-06-01T13:50:23+0000",
            "content": "great \u2013 my comment about supporting log4j is just to keep it in mind.  Sometimes its easier to think about the abstraction earlier, but we can obviously tackle that in a follow on issue. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13042177",
            "date": "2011-06-01T13:57:48+0000",
            "content": "Perhaps it could be:\nlogging.category=org.apache.org.solr.core.JmxMonitoredMap\nlogging.level=INFO\nWhat would really mean, that we can just update one Logger (per Step) \u2013 changing five of them will result in: click, change; save, click, change, save; click, change, save .. and so on? We could \"autosave\" every change instantly, but that's something we don't have anywhere else yet - so i guess users were wondering about that behaviour?\n\nOr, as an alternative:\nlogging.category.org.apache.solr.core.JmxMonitoredMap=INFO\nlogging.category.org.apache.solr.update.UpdateHandler=FINEST\nI'd implement both approaches - the latter might allow Stefan more flexibility in building a UI on top of it. \nIt's of course possible, but it would be easier to have something like that:\n\nlogging[category.org.apache.solr.core.JmxMonitoredMap]=INFO\nlogging[category.org.apache.solr.update.UpdateHandler]=FINEST\n\nThere it's possible to setup an initial Hashmap and just put all the Loggers into it. Or is that really difficult to handle on the Server-Side?  "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13042185",
            "date": "2011-06-01T14:12:06+0000",
            "content": "what about somethign like:\n\n/admin/logging?set=category.org.apache.solr.core.JmxMonitoredMap:INFO\n\n\nand setting multiple items with:\n\n/admin/logging?set=category.org.apache.solr.core.JmxMonitoredMap:INFO&set=category.org.apache.solr.update.UpdateHandler:FINEST\n\n\n\nThis could work better on the server side then having to iterate though all the parameters and checking if they are relevant.\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-13042189",
            "date": "2011-06-01T14:15:53+0000",
            "content": "Ryan - that could work, and it makes it clear that it is an 'action'.\n\nStefan - I'm trying to make a decent public API that is consistent with the rest of Solr. Sorry if that makes it harder for you!! "
        },
        {
            "author": "Upayavira",
            "id": "comment-13042372",
            "date": "2011-06-01T19:17:04+0000",
            "content": "Here's a first pass at the handler. I'm sure the output format is wrong, but the (limited) tests pass (it changes a value, then puts it back).\n\nI've included an XML and a JSON sample output.\n\nIs this more or less what we're after?  "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13042692",
            "date": "2011-06-02T10:37:04+0000",
            "content": "Stefan - I'm trying to make a decent public API that is consistent with the rest of Solr. Sorry if that makes it harder for you!!\nThat's okay .. instead of using one command, i have to combine a few .. but everything is better then now ;>\n\nI've included an XML and a JSON sample output.\nNice! Just thought about the following things:\n\n\tIs unset really a valid Level? It's more a command to remove a active Logger, no?\n\tunset=true (inside the <loggers>-tag) shows that this logger has no specific setting, right? if so, perhaps just drop this out and only have the effective.level info?\n\n\n "
        },
        {
            "author": "Upayavira",
            "id": "comment-13043061",
            "date": "2011-06-02T21:31:23+0000",
            "content": "Stefan - with set=, you can do multiples, so set=foo:INFO&set=bar:FINEST&set=baz:FINE The patch as it stands supports that.\n\nunset=true comes about when the logging system reports a category, but no value ( or null). So the logging system knows about it, but doesn't have a setting. My understanding is that this is where 'effective level' kicks in, that's the one that'll be used.\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13213184",
            "date": "2012-02-22T01:46:46+0000",
            "content": "updating patch to trunk.\n\nI will now try to generalize it so that it could have a Log4J (or whatever) backend "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13214172",
            "date": "2012-02-23T01:30:56+0000",
            "content": "An updated/simplified generic version that uses the SolrTestCaseJ4\n\nThe format is different, but seems to match the JS needs better.\n\nI will commit this soon so the UI stuff can continue in a different issue "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13214193",
            "date": "2012-02-23T01:54:30+0000",
            "content": "Added in revision: 1292617\n\nLets keep the existing servlet in place until the admin UI works "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13224234",
            "date": "2012-03-07T12:34:33+0000",
            "content": "Ryan:\n\nCan we close this JIRA? Or are there additional issues pending? "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13252333",
            "date": "2012-04-12T10:37:33+0000",
            "content": "Ryan, i guess we can close this, do we? "
        }
    ]
}