{
    "id": "SOLR-3197",
    "title": "Allow firstSearcher and newSearcher listeners to run in multiple threads",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "SolrCore submits all listeners (firstSearcher and newSearcher) to a java ExecutorService, but uses a single-threaded one. \n\nline 965 in the trunk: \n\nSolrCore.java around line 965: final ExecutorService searcherExecutor = Executors.newSingleThreadExecutor(); \n\nline 1280 in the trunk: \nSolrCore.java around line 1280 runs first the, and then the first and new searchers, all with the searcherExecutor object created at line 965. \n\nWould it work if we changed this ExecutorService to a thread pool version? This seems like it should work:\n\n\njava.util.concurrent.Executors.newFixedThreadPool(int nThreads, ThreadFactory threadFactory);",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13221519",
            "date": "2012-03-03T05:10:03+0000",
            "content": "Yeah, perhaps we can make it configurable, default to 1. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13221539",
            "date": "2012-03-03T07:47:39+0000",
            "content": "An alternative would be to use the CachedThreadPool as default as it makes it possible to reuse cached threads (see http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool() )\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13221715",
            "date": "2012-03-03T22:14:07+0000",
            "content": "The original rational was \"do we really want to peg more than one CPU with warmup while we are still serving live traffic?\"\nBut some people are using pretty big boxes these days.\n\nBeware some startup code that expects a single threaded executor though - we can't just switch that w/o other code changes!\nSee the SolrCore constructor for more details. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-13221813",
            "date": "2012-03-04T07:07:15+0000",
            "content": "The original rational was \"do we really want to peg more than one CPU with warmup while we are still serving live traffic?\" But some people are using pretty big boxes these days.\nIn this case 24 cores, tens of facet fields, hundreds of thousands of facets in some fields.\n\nThose few lines of code are the only multi-threaded code in SolrCore that I am smart enough to understand. \nAn alternative would be to use the CachedThreadPool as default as it makes it possible to reuse cached threads \n\nThis task starts N long-lived threads and waits until they all finish. I think the thread cache is useful when you have lots of short-lived threads. "
        },
        {
            "author": "Neil Hooey",
            "id": "comment-13222790",
            "date": "2012-03-05T23:44:04+0000",
            "content": "\nThe original rational was \"do we really want to peg more than one CPU with warmup while we are still serving live traffic?\"\nBut some people are using pretty big boxes these days.\n\nWhen Solr is configured not to serve queries while warming, would it make sense to use as many CPUs as possible, since it's probably not doing anything else? "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13281866",
            "date": "2012-05-23T20:17:52+0000",
            "content": "I think, as Marks was saying, we could expose an option to define if warmups run on one or more threads, default to 1.\nThis would just not change things as they are now and people could just explicitly set the no. of threads for warmup. "
        },
        {
            "author": "Kranti Parisa",
            "id": "comment-13859720",
            "date": "2013-12-31T21:40:52+0000",
            "content": "I like the idea of having a configurable option, say \n\n<warmupThreads>1</warmupThreads>\n\nso that user can change the number based on their needs.\n\nNeil, to your point \"When Solr is configured not to serve queries while warming\" how can we do this when the instance is in a cluster under load balancer? "
        }
    ]
}