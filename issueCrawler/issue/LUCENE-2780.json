{
    "id": "LUCENE-2780",
    "title": "optimize spantermquery",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Looking at http://www.lucidimagination.com/search/document/c2c6f660ddde4f7f/dismaxqparserplugin_and_tokenization ,\nI saw a user building DisjunctionMaxQuery / BooleanQuery with SpanTermQuerys.\n\nI wonder if users know that doing this is much slower than just using TermQuery?\nI agree it makes little sense to use SpanTermQuery if you arent going to use it inside a SpanNear etc,\nbut on the other hand, I think its a little non-intuitive that it wouldnt be just as fast in a case like this.\n\nI could see this complicating queryparsing etc for users that want to sometimes use positions etc.\n\nSpanTermQuery is the same as TermQuery, except tf is computed as (#of spans * sloppyFreq(spanLength)\nFor this case, #ofspans = tf and spanLength for a single term is always 1.\n\nMaybe we should optimize SpanTermQuery to return TermScorer, with just this special tf computation.\nThis would avoid reading positions for anyone that does this.",
    "attachments": {
        "LUCENE-2780.patch": "https://issues.apache.org/jira/secure/attachment/12460474/LUCENE-2780.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-11-25T20:29:30+0000",
            "content": "patch ",
            "author": "Robert Muir",
            "id": "comment-12935866"
        },
        {
            "date": "2010-11-26T10:56:07+0000",
            "content": "Looks good Robert!  It's a sneaky trap.  Maybe add a comment to createWeight explaining that this is only used when a \"normal\" (non-span) Query embeds a SpanTermQuery?\n\nSomeday we need to merge Span* back into the \"normal\" queries. ",
            "author": "Michael McCandless",
            "id": "comment-12935972"
        },
        {
            "date": "2013-07-23T18:44:46+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717054"
        },
        {
            "date": "2014-04-16T12:54:36+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970813"
        }
    ]
}