{
    "id": "LUCENE-5558",
    "title": "Add TruncateTokenFilter",
    "details": {
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "modules/analysis"
        ],
        "affect_versions": "4.7",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ]
    },
    "description": "I am using this filter as a stemmer for Turkish language. In many academic research (classification, retrieval) it is used and called as Fixed Prefix Stemmer or Simple Truncation Method or F5 in short.\n\nAmong F3 TO F7, F5 stemmer (length=5) is found to work well for Turkish language in Information Retrieval on Turkish Texts. It is the same work where most of stopwords_tr.txt are acquired. \n\nElasticSearch has truncate filter but it does not respect keyword attribute. And it has a use case similar to TruncateFieldUpdateProcessorFactory\n\nMain advantage of F5 stemming is : it does not effected by the meaning loss caused by ascii folding. It is a diacritics-insensitive stemmer and works well with ascii folding. Effects of diacritics on Turkish information retrieval\n\nHere is the full field type I use for \"diacritics-insensitive search\" for Turkish\n\n <fieldType name=\"text_tr_ascii_f5\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n   <analyzer>\n     <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n     <filter class=\"solr.ApostropheFilterFactory\"/>\n     <filter class=\"solr.TurkishLowerCaseFilterFactory\"/>\n     <filter class=\"solr.ASCIIFoldingFilterFactory\"/>\n     <filter class=\"solr.KeywordRepeatFilterFactory\"/>\n     <filter class=\"solr.TruncateTokenFilterFactory\" prefixLength=\"5\"/>\n     <filter class=\"solr.RemoveDuplicatesTokenFilterFactory\"/>\n   </analyzer>\n\n\n\nI  would like to get community opinions :\n\n1) Any interest in this? \n2) keyword attribute should be respected? \n3) package name analysis.misc versus analyis.tr \n4) name of the class TruncateTokenFilter versus FixedPrefixStemFilter",
    "attachments": {
        "LUCENE-5558.patch": "https://issues.apache.org/jira/secure/attachment/12637304/LUCENE-5558.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13950234",
            "author": "Ahmet Arslan",
            "content": "initial patch ",
            "date": "2014-03-28T01:06:18+0000"
        },
        {
            "id": "comment-13950971",
            "author": "Ahmet Arslan",
            "content": "org.apache.lucene.analysis.core.TestRandomChains.testRandomChainsWithLargeStrings instantiates a  TruncateTokenFilter with a prefixLenght of -48. This throws \n\n java.lang.StringIndexOutOfBoundsException: String index out of range: -48 \n\nit can be reproducible with :\n\nant test -Dtestcase=TestRandomChains -Dtests.method=testRandomChainsWithLargeStrings -Dtests.seed=B9259B3A46E7F1D6 -Dtests.slow=true -Dtests.locale=da -Dtests.timezone=Asia/Jayapura -Dtests.file.encoding=US-ASCII \n ",
            "date": "2014-03-28T16:25:15+0000"
        },
        {
            "id": "comment-13950992",
            "author": "Robert Muir",
            "content": "In the constructor of truncatetokenfilter, can you throw an illegalargumentexception if someone passes a negative value?\n\nTestRandomChains is basically enforcing that you get an exception in this case when you construct the analysis chain versus when you actually index documents. ",
            "date": "2014-03-28T16:35:05+0000"
        },
        {
            "id": "comment-13950994",
            "author": "Robert Muir",
            "content": "Also this technique is very general for many languages. I think it should be in .misc package instead. ",
            "date": "2014-03-28T16:36:30+0000"
        },
        {
            "id": "comment-13951041",
            "author": "Ahmet Arslan",
            "content": "truncate throws exception for negative numbers now. I wonder how other filters (like length filter)does not effected by negative numbers in their constructors. ",
            "date": "2014-03-28T16:58:11+0000"
        },
        {
            "id": "comment-13951049",
            "author": "Robert Muir",
            "content": "Providing negative numbers to LengthFilter wont cause any exception at all. So TestRandomChains cannot detect that it is missing some checks... ",
            "date": "2014-03-28T17:03:25+0000"
        },
        {
            "id": "comment-13951056",
            "author": "Ahmet Arslan",
            "content": "aha even if filters are instantiated with negative numbers, they are not detected by TestRandomChains unless they an exception occurs. Thanks for the explanation. By the way TestRandomChains is cool  ",
            "date": "2014-03-28T17:08:18+0000"
        },
        {
            "id": "comment-13951064",
            "author": "Ahmet Arslan",
            "content": "move to miscellaneous package. Same as elastic search's truncate  ",
            "date": "2014-03-28T17:17:12+0000"
        },
        {
            "id": "comment-13951148",
            "author": "Ahmet Arslan",
            "content": "Following declarations  does not throw an Exception but no token survives from them. It is unusual ( and weird) that there is no surviving tokens. What do you think about TestRandomChains detects empty token stream at the end?\n\nShould these filters validate their integer arguments?\n\n\n <filter class=\"solr.LimitTokenCountFilterFactory\" maxTokenCount=\"-10\" consumeAllTokens=\"false\" />\n\n\n\n\n <filter class=\"solr.LengthFilterFactory\" min=\"-5\" max=\"-1\" />\n\n\n\n\n <filter class=\"solr.LimitTokenPositionFilterFactory\" maxTokenPosition=\"-3\" />\n\n ",
            "date": "2014-03-28T18:02:52+0000"
        },
        {
            "id": "comment-13951154",
            "author": "Robert Muir",
            "content": "I think we should add validation for these filters! \n\nAs far as TestRandomChains detecting an empty token stream, this is ok. it generates random data and the chain may correctly remove all the tokens.\n ",
            "date": "2014-03-28T18:07:51+0000"
        },
        {
            "id": "comment-13951163",
            "author": "Ahmet Arslan",
            "content": "I think we should add validation for these filters!\nDo you want me to open a ticket titled : Validation for TokenFilters having numeric constructor parameter(s) ",
            "date": "2014-03-28T18:13:54+0000"
        },
        {
            "id": "comment-13951170",
            "author": "Robert Muir",
            "content": "+1 ",
            "date": "2014-03-28T18:16:02+0000"
        },
        {
            "id": "comment-13954889",
            "author": "Ahmet Arslan",
            "content": "define constant key string static final ",
            "date": "2014-03-31T00:52:41+0000"
        },
        {
            "id": "comment-13956078",
            "author": "ASF subversion and git services",
            "content": "Commit 1583525 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1583525 ]\n\nLUCENE-5558: Add TruncateTokenFilter ",
            "date": "2014-04-01T04:05:16+0000"
        },
        {
            "id": "comment-13956095",
            "author": "ASF subversion and git services",
            "content": "Commit 1583527 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1583527 ]\n\nLUCENE-5558: Add TruncateTokenFilter ",
            "date": "2014-04-01T04:30:38+0000"
        },
        {
            "id": "comment-13956096",
            "author": "Robert Muir",
            "content": "Thanks Ahmet, very nice! ",
            "date": "2014-04-01T04:31:34+0000"
        },
        {
            "id": "comment-13982554",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:25:43+0000"
        }
    ]
}