{
    "id": "LUCENE-2706",
    "title": "ByteBlockPool should allow different block sizes",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Currently ByteBlockPool has a fixed byteblock size of 1 << 15 bytes. This limit also makes BytesRefHash bound to 32kb buffers which is not ideal in many cases. For instance in MTQ (LUCENE-2960) we might want to have a smaller block size of 1024 or 2048 for more efficiency. While this example  suffers from another limitation since the blockSize used in TermsHashPerField is 32kb which in turn defines the size limit for a single term in the index. To make effective use of different byte block sizes we need to find a solution for this problem too but I think index statistics are on the way and max term length for a field could also make merges more efficient if we can alter the byte block size especially for fields with very short terms.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}