{
    "id": "LUCENE-8458",
    "title": "Carry-over hard-deletes after merge may not adjust soft-delete count",
    "details": {
        "components": [
            "core/index"
        ],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "7.5,                                            master (8.0)",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "Attached is a test that\u00a0can trip\u00a0PendingDeletetes assertion around 5%.\n\nThe assertion\u00a0is violated\u00a0because we do not reduce soft-deletes count accordingly when carrying over hard-deletes after a merge in IndexWriter#carryOverHardDeletes. If the newly merged segment has soft-deleted documents, its PendingDeletes requires a segment reader to \"transfer\" soft-deletes count to hard-deletes accordingly.\n\ntestSoftDeleteWhileMergeSurvives (introduced in LUCENE-8293) always passes as a segment warmer used in that test forces ReadersAndUpdates to open a new segment reader.\n\nNOTE: reproduce with: ant test  -Dtestcase=TestSoftDeletesRetentionMergePolicy -Dtests.method=testMixedSoftDeletesAndHardDeletes -Dtests.seed=FFED48B49B9F6AA5 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=zh-Hans -Dtests.timezone=Atlantic/South_Georgia -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n8\u6708 19, 2018 12:11:10 \u4e0a\u5348 com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException\n\u8b66\u544a: Uncaught exception in thread: Thread[Lucene Merge Thread #0,5,TGRP-TestSoftDeletesRetentionMergePolicy]\norg.apache.lucene.index.MergePolicy$MergeException: java.lang.AssertionError: softDeleteCount doesn't match 21 != 19\n\tat __randomizedtesting.SeedInfo.seed([FFED48B49B9F6AA5]:0)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:704)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:684)\nCaused by: java.lang.AssertionError: softDeleteCount doesn't match 21 != 19\n\tat org.apache.lucene.index.PendingSoftDeletes.onNewReader(PendingSoftDeletes.java:87)\n\tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:173)\n\tat org.apache.lucene.index.ReadersAndUpdates.getLatestReader(ReadersAndUpdates.java:237)\n\tat org.apache.lucene.index.PendingSoftDeletes.ensureInitialized(PendingSoftDeletes.java:189)\n\tat org.apache.lucene.index.PendingSoftDeletes.isFullyDeleted(PendingSoftDeletes.java:200)\n\tat org.apache.lucene.index.ReadersAndUpdates.isFullyDeleted(ReadersAndUpdates.java:744)\n\tat org.apache.lucene.index.IndexWriter.isFullyDeleted(IndexWriter.java:5161)\n\tat org.apache.lucene.index.IndexWriter.commitMerge(IndexWriter.java:3926)\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4592)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:4058)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:625)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:662)\n\nNOTE: reproduce with: ant test  -Dtestcase=TestSoftDeletesRetentionMergePolicy -Dtests.method=testMixedSoftDeletesAndHardDeletes -Dtests.seed=FFED48B49B9F6AA5 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=zh-Hans -Dtests.timezone=Atlantic/South_Georgia -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\ncom.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=16, name=Lucene Merge Thread #0, state=RUNNABLE, group=TGRP-TestSoftDeletesRetentionMergePolicy]\n\n\tat __randomizedtesting.SeedInfo.seed([FFED48B49B9F6AA5:B2667DCCD81812E2]:0)\nCaused by: org.apache.lucene.index.MergePolicy$MergeException: java.lang.AssertionError: softDeleteCount doesn't match 21 != 19\n\tat __randomizedtesting.SeedInfo.seed([FFED48B49B9F6AA5]:0)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:704)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:684)\nCaused by: java.lang.AssertionError: softDeleteCount doesn't match 21 != 19\n\tat org.apache.lucene.index.PendingSoftDeletes.onNewReader(PendingSoftDeletes.java:87)\n\tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:173)\n\tat org.apache.lucene.index.ReadersAndUpdates.getLatestReader(ReadersAndUpdates.java:237)\n\tat org.apache.lucene.index.PendingSoftDeletes.ensureInitialized(PendingSoftDeletes.java:189)\n\tat org.apache.lucene.index.PendingSoftDeletes.isFullyDeleted(PendingSoftDeletes.java:200)\n\tat org.apache.lucene.index.ReadersAndUpdates.isFullyDeleted(ReadersAndUpdates.java:744)\n\tat org.apache.lucene.index.IndexWriter.isFullyDeleted(IndexWriter.java:5161)\n\tat org.apache.lucene.index.IndexWriter.commitMerge(IndexWriter.java:3926)\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4592)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:4058)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:625)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:662)",
    "attachments": {
        "test.patch": "https://issues.apache.org/jira/secure/attachment/12936173/test.patch",
        "LUCENE-8144.patch": "https://issues.apache.org/jira/secure/attachment/12936450/LUCENE-8144.patch",
        "LUCENE-8458.patch": "https://issues.apache.org/jira/secure/attachment/12936175/LUCENE-8458.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16584982",
            "author": "Nhat Nguyen",
            "content": "/cc Simon Willnauer ",
            "date": "2018-08-19T02:35:50+0000"
        },
        {
            "id": "comment-16585079",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 23s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 18s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 18s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 18s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 18s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 18s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  10m 53s \n  core in the patch passed.  \n\n\n  \n   \n  13m 37s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8458 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12936175/LUCENE-8458.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / d6e1d4a \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/75/testReport/ \n\n\n modules \n C: lucene/core U: lucene/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/75/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-08-19T09:01:25+0000"
        },
        {
            "id": "comment-16585550",
            "author": "Simon Willnauer",
            "content": "Good catch! I do like the change to use SegmentReader instead of CodecReader in PendingDeletes, this makes it more protected from passing in a wrapped reader. I wonder if we should expose\u00a0isLiveDocsInitialized or instead just check if the reader is null on ReadersAndUpdates this should be enough since we only need to make sure we are initialized. The other thing is that we don't need to do this in the hard-delete only case. ie. we can skip this if we only have hard deletes (soft deletes disabeled). Yet, it might not make a difference since we are allocating the bitset anyway.  ",
            "date": "2018-08-20T07:42:03+0000"
        },
        {
            "id": "comment-16586007",
            "author": "Nhat Nguyen",
            "content": "Simon Willnauer I've updated the patch. Can you please have another look? ",
            "date": "2018-08-20T14:29:22+0000"
        },
        {
            "id": "comment-16586093",
            "author": "Simon Willnauer",
            "content": "here are some comments:\n\n\n\tInstead of `getLatestReader();` can we call `getReader().decRef();`\n\tInstead of passing down the softDeletesField can we add a gettter to PendingDeletes if it needs to be initialized?\n\tI also reconsidering going back to CodecReader to be honest. What is the added value here? We don't need to access the hardDeletes per-se it should always be the correct deletes no?\n\n ",
            "date": "2018-08-20T15:33:11+0000"
        },
        {
            "id": "comment-16586131",
            "author": "Nhat Nguyen",
            "content": "\n\tInstead of `getLatestReader();` can we call `getReader().decRef();`\n\tInstead of passing down the softDeletesField can we add a gettter to PendingDeletes if it needs to be initialized?\n\n\nWill do\nI also reconsidering going back to CodecReader to be honest. What is the added value here? We don't need to access the hardDeletes per-se it should always be the correct deletes no?\nI switched to SegmentReader because:\n\n1. I did not know how to make all tests in TestPendingSoftDeletes passed after changing the liveDocsInitialized condition in PendingSoftDeletes without using hardLiveDocs.\n\n2. If you pass a reader containing hard-deletes and soft-deletes to a PendingSoftDeletes, then the returning hardLiveDocs will be a combined liveDocs instead of an actual hard liveDocs. See TestPendingSoftDeletes#testHardSoftLiveDocs. ",
            "date": "2018-08-20T15:56:01+0000"
        },
        {
            "id": "comment-16586313",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 27s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 19s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 19s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 19s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 19s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 19s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  11m 50s \n  core in the patch passed.  \n\n\n  \n   \n  14m 20s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8458 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12936281/LUCENE-8458.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 66d500b \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/76/testReport/ \n\n\n modules \n C: lucene/core U: lucene/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/76/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-08-20T17:55:31+0000"
        },
        {
            "id": "comment-16586470",
            "author": "Simon Willnauer",
            "content": " 2. If you pass a reader containing hard-deletes and soft-deletes to a PendingSoftDeletes, then the returning hardLiveDocs will be a combined liveDocs instead of an actual hard liveDocs. See TestPendingSoftDeletes#testHardSoftLiveDocs.\n\nHow can you have a reader that has both soft and hard deletes live docs and it's Pending*Deletes has not been initialized? I think this should not be possible or what do I miss? ",
            "date": "2018-08-20T20:27:18+0000"
        },
        {
            "id": "comment-16586488",
            "author": "Nhat Nguyen",
            "content": "Simon Willnauer ok, I will\u00a0go back\u00a0to CodecReader. ",
            "date": "2018-08-20T20:43:19+0000"
        },
        {
            "id": "comment-16587471",
            "author": "Nhat Nguyen",
            "content": "Simon Willnauer I updated the patch to use CodecReader. Can you have a look? Thank you! ",
            "date": "2018-08-21T14:07:31+0000"
        },
        {
            "id": "comment-16587511",
            "author": "Simon Willnauer",
            "content": "LGTM ",
            "date": "2018-08-21T14:34:02+0000"
        },
        {
            "id": "comment-16587559",
            "author": "Simon Willnauer",
            "content": "Nhat Nguyen sorry for coming back to this again. I though about this line again:\n\n\n\n \n   public synchronized boolean delete(int docID) throws IOException {\n+    if (reader == null && pendingDeletes.isInitialized() == false) {\n+      getReader(IOContext.READ).decRef(); // pass a reader to initialize the pending deletes\n+    }\n     return pendingDeletes.delete(docID);\n   }\n\n\n\nand I thinks we only need to do this if we have soft-deletes. So instead of calling this method isInitialized can we call it mustInitOnDelete() or something like this and only return true in the PendingSoftDeletes version of it? Because now we suddenly pull a reader if there is a delete happening for instance via IW#tryDelete(...) this is a runtime behavior change I am concerned about.\n\nsorry for the late reply. ",
            "date": "2018-08-21T15:04:50+0000"
        },
        {
            "id": "comment-16587682",
            "author": "Nhat Nguyen",
            "content": "Simon Willnauer\u00a0I think the previous patch does not change `IW#tryDelete`. Both PendingDeletes and PendingSoftDeletes require `liveDocsInitialized=true` on deletes. The previous patch only pulls a reader only if the liveDocs of a PendingDeletes is not initialized.\n\nAnyway, I am happy to\u00a0update the\u00a0patch to\u00a0minimize the effect as you recommended. Can you give it another try? ",
            "date": "2018-08-21T16:24:12+0000"
        },
        {
            "id": "comment-16587989",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 22s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 24s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 24s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 24s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 24s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 24s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  11m 11s \n  core in the patch passed.  \n\n\n  \n   \n  13m 44s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8458 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12936478/LUCENE-8144.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 5eab1c3 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/78/testReport/ \n\n\n modules \n C: lucene/core U: lucene/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/78/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-08-21T20:51:23+0000"
        },
        {
            "id": "comment-16588453",
            "author": "Simon Willnauer",
            "content": "LGTM thanks for the extra iteration! ",
            "date": "2018-08-22T06:53:25+0000"
        },
        {
            "id": "comment-16591589",
            "author": "ASF subversion and git services",
            "content": "Commit f26dd13b34e3d3a6921230cfe44ff34b2c319e7b in lucene-solr's branch refs/heads/master from Nhat Nguyen\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f26dd13 ]\n\nLUCENE-8458: Ensure init PendingSoftDeletes when carry-over deletes\n\nToday when carrying over hard-deletes after merging segments, we might\nnot adjust soft-deletes count accordingly because we do not always\nensure that the PendingSoftDeletes of the new segment is initialized.\n\nThis change fixes the initialization condition in PendingSoftDeletes and\nmakes sure it is initialized before accepting deletes.\n\nCo-authored-by: Simon Willnauer <simonw@apache.org> ",
            "date": "2018-08-24T12:46:48+0000"
        },
        {
            "id": "comment-16591602",
            "author": "ASF subversion and git services",
            "content": "Commit da37ffb510540af930a79eb1535258b5047a4eba in lucene-solr's branch refs/heads/branch_7x from Nhat Nguyen\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=da37ffb ]\n\nLUCENE-8458: Ensure init PendingSoftDeletes when carry-over deletes\n\nToday when carrying over hard-deletes after merging segments, we might\nnot adjust soft-deletes count accordingly because we do not always\nensure that the PendingSoftDeletes of the new segment is initialized.\n\nThis change fixes the initialization condition in PendingSoftDeletes and\nmakes sure it is initialized before accepting deletes.\n\nCo-authored-by: Simon Willnauer <simonw@apache.org> ",
            "date": "2018-08-24T13:04:26+0000"
        },
        {
            "id": "comment-16591605",
            "author": "Nhat Nguyen",
            "content": "I pushed this to the master and backported to 7.5.\n\nSimon Willnauer\u00a0Thank you for reviewing! ",
            "date": "2018-08-24T13:07:28+0000"
        },
        {
            "id": "comment-16592418",
            "author": "ASF subversion and git services",
            "content": "Commit f26dd13b34e3d3a6921230cfe44ff34b2c319e7b in lucene-solr's branch refs/heads/jira/http2 from Nhat Nguyen\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f26dd13 ]\n\nLUCENE-8458: Ensure init PendingSoftDeletes when carry-over deletes\n\nToday when carrying over hard-deletes after merging segments, we might\nnot adjust soft-deletes count accordingly because we do not always\nensure that the PendingSoftDeletes of the new segment is initialized.\n\nThis change fixes the initialization condition in PendingSoftDeletes and\nmakes sure it is initialized before accepting deletes.\n\nCo-authored-by: Simon Willnauer <simonw@apache.org> ",
            "date": "2018-08-25T03:09:52+0000"
        }
    ]
}