{
    "id": "SOLR-3330",
    "title": "Show changes in plugin statistics across multiple requests",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When debugging configuration and performance, I often:\n 1. Look at stats values\n 2. run some queries\n 3. See how the stats values changed\n\nThis is fine, but is often a bit clunky and you have to really know what you are looking for to see any changes.\n\nIt would be great if the 'plugins' page had a button that would make this easier",
    "attachments": {
        "SOLR-3330-plugins.png": "https://issues.apache.org/jira/secure/attachment/12522273/SOLR-3330-plugins.png",
        "SOLR-3330-ui-update.patch": "https://issues.apache.org/jira/secure/attachment/12522703/SOLR-3330-ui-update.patch",
        "SOLR-3330.patch": "https://issues.apache.org/jira/secure/attachment/12523085/SOLR-3330.patch",
        "SOLR-3330-record-changes-ui.patch": "https://issues.apache.org/jira/secure/attachment/12521728/SOLR-3330-record-changes-ui.patch",
        "SOLR-3330-pluggins-diff.patch": "https://issues.apache.org/jira/secure/attachment/12521656/SOLR-3330-pluggins-diff.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-13248146",
            "date": "2012-04-06T07:09:49+0000",
            "content": "This is a quick sketch showing how we can use the SolrInfoMBeanHandler to output a speciall 'diff' format that will load (without changes!) in the current UI.\n\nEssentially the workflow is:\n1. The UI takes a snapshot of a plugins response (needs to be XML string)\n2. At some point in the future, you send a post to /admin/plugins?diff=true&stream.body=XML\n3. The handler returns a modified response that only includes changed MBeans and makes the differences clear.\n\nFor example, the stats response after one request will look like this:\n\n<lst name=\"stats\">\n<long name=\"handlerStart\">1333695069323</long>\n<str name=\"requests\">Was: 2, Now: 3, Delta: 1</str>\n<long name=\"errors\">0</long>\n<long name=\"timeouts\">0</long>\n<str name=\"totalTime\">Was: 3, Now: 4, Delta: 1</str>\n<str name=\"avgTimePerRequest\">Was: 1.5, Now: 1.3333334, Delta: -0.167</str>\n</lst>\n\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13248532",
            "date": "2012-04-06T17:44:17+0000",
            "content": "Added a test to show the statistics change across multiple requests.\n\nI will commit this soon, and we can continue work on the UI side of things "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13248684",
            "date": "2012-04-06T20:12:25+0000",
            "content": "Here is a first crack at calling this through the UI.  It uses blockUI to pause while you run other queris, then will update the UI when you click OK.\n\nI have it making all the right calls, but can not figure out how to reload the page with the new response.\n\nStefan, can you take a look?\n\nthanks! "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13249801",
            "date": "2012-04-09T12:29:36+0000",
            "content": "Ryan, the Handler normally returns data structured like this:\n\nsolr-mbeans: [\n\t\"QUERYHANDLER\"\n\t{\n\t\t\"/admin/mbeans\":\n\t\t{\n\t\t\tclass: \"org.apache.solr.handler.admin.SolrInfoMBeanHandler\",\n\t\t\tversion: \"4.0.0.2012.04.07.21.36.12\"\n\t\t}\n\t}\n]\n\n\nbut the diff-response looks like this:\n\nsolr-mbeans: [\n\t\"QUERYHANDLER\"\n\t[\n\t\t\"/admin/mbeans\",\n\t\t[\n\t\t\t\"class\"\n\t\t\t\"org.apache.solr.handler.admin.SolrInfoMBeanHandler\"\n\t\t\t\"version\"\n\t\t\t\"4.0.0.2012.04.07.21.36.12\"\n\t\t]\n\t]\n]\n\n\nif we could change this latter one and use the same format that we have on the first request, would be easy to merge and show the differences on the page? In the meantime i'll cleanup the js-code a little bit and integrate highlights of changed informations "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13249897",
            "date": "2012-04-09T15:59:03+0000",
            "content": "Changed NamedList to SimpleOrderedMap in revision 1311292\n\nIt should now look the same in JSON "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13251383",
            "date": "2012-04-11T07:17:36+0000",
            "content": "Ryan, have a look .. what about this one? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13251698",
            "date": "2012-04-11T16:16:48+0000",
            "content": "sweet!  Thanks Stefan.  I commited this in r1324839\n\nI think it makes sense to only show the changed elements.  The values in the non-changed elements reflect the values when you first visited the page, not when you click \"Watch Changes\"\n\nI see two ways to resolve this:\na. remove them from the UI\nb. change the diff handler so it returns all the values, not just the changed ones.  It would add a marker for things that have changed\n\nI think it makes sense to add in a 'reload' button that will refresh all the stats\n\n\n "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13251725",
            "date": "2012-04-11T16:48:46+0000",
            "content": "I added the Images in r1324857.\n\nI see two ways to resolve this:\na. remove them from the UI\nb. change the diff handler so it returns all the values, not just the changed ones. It would add a marker for things that have changed\n\nPerhaps i don't get it .. but (b) is what we already have? The diff-handler returns only the changed items, but i'm merging them into the Data we already have from the first request. The Navigation on the left gets an (1)ish-Counter for changed Items, and the List on the right gets an \"new\" icon for changed Items.\n\nOne Thing regarding (a), i'm not sure if that would be a good one. Image you've selected \"CORE\" and you're watching changes .. and the only change happens in \"QUERYHANDLER\" (because at least, the mbean-handler will change) then you're current view will change automatically ;/ if possible i'd like to avoid this\n\nThe \"Reload\" Link which is already in there has no functionally right know, but i guess it's the easiest way to initiate an typical browser-reload to get the typical view back. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13251728",
            "date": "2012-04-11T16:49:48+0000",
            "content": "That is what it should look like after getting changes on the mbean-handler "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13251738",
            "date": "2012-04-11T17:03:51+0000",
            "content": "but (b) is what we already have?\n\nNo, right now it only returns the changed items.  There are three points in time:\n1. When the page first loads\n2. When you click 'Watch Changes'\n3. When you click 'Show Changes'\n\nRight now the UI shows the values from 1, then updates the changes between 2&3 \u2013 the problem is that the values that may have changed between 1&2 are not reflected in the UI.  (Not a huge deal, but not accurate)\n\nI think the highlight you already added looks good \u2013 the \"New\" icon is a bit misleading because it implies that it is a new value (not just a changed one)\n\n\n "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13252255",
            "date": "2012-04-12T07:16:38+0000",
            "content": "Right now the UI shows the values from 1, then updates the changes between 2&3 \u2013 the problem is that the values that may have changed between 1&2 are not reflected in the UI. (Not a huge deal, but not accurate)\n\nAh yes, you're right. Hm, will think about that. perhaps there is a quick solution for that. Also for the 'new' icon .. yes, the icon set does not have an 'update' icon ;o "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13253703",
            "date": "2012-04-13T20:14:31+0000",
            "content": "can we change this to use an HTTP POST body instead of stream.body request param? ... it's sending some really long ass request URLs that might not work if a servlet container is configured to limit the URL length. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13253724",
            "date": "2012-04-13T20:41:55+0000",
            "content": "It is already using POST with stream.body as a application/x-www-form-urlencoded param\n\nAre you seeing the long URL in the logs, or in your browser? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13253754",
            "date": "2012-04-13T21:14:14+0000",
            "content": "Sorry .. i was looking at the solr logging (SolrCore.execute) ... because it's using \"Content-Type: application/x-www-form-urlencoded\" and the stream.body param, it's all being included in the list of SolrParams that get logged.\n\nSo my concern about extra long URLs breaking is a non-issue, but it's still kind of noisy as far as solr logging goes.\n\nIf it was changed to use \"Content-Type: application/xml\" and send the xml directly then it wouldn't be counted as a solr param, but the handler would still get it as a ContentStream.\n\n\u2014\n\nas for how it looks: in my initial impression i didn't realize that it was recording values core all the categories of plugins (ie: i was looking at \"Query Handlers\" and didn't notice the little grey numbers indicating that \"Caches\" also had some changes) ... the #BBA500 color used to make the plugin names with changes standout is great (even if you remove the \"new\" icon completely) so maybe just using that same color on the category names (or at least the little numbers indicating that items in that category have changed) would be helpful to draw attention to them?\n "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13254346",
            "date": "2012-04-15T15:23:47+0000",
            "content": "Hoss, like this? Visible enough? "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13256264",
            "date": "2012-04-18T07:26:26+0000",
            "content": "Right now the UI shows the values from 1, then updates the changes between 2&3 \u2013 the problem is that the values that may have changed between 1&2 are not reflected in the UI. (Not a huge deal, but not accurate)\n\nAttached Patch would fix this, i changed the workflow a bit - fetching the 'reference xml' is now done right after loading the initial page.\n\nAfter a bit playing around with it, i'm not sure, if this is what the user would expect? image the following: Users loads the page, requests /admin/ping or something like this, afterwards hit's the \"watching changes\" button and stop's this action. he'll see at least two changes .. one on the ping-handler, and one on the mbeans-handler. i would expect, that recording changes just begin's when i hit the button?\n\nPerhaps it's just a UI-Thing .. maybe we show use some 'loading'-Icon for \"Watch Changes\" instead of the Eye-Icon, to illustrate that we already watch for changes? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13256269",
            "date": "2012-04-18T07:33:55+0000",
            "content": "fetching the 'reference xml' is now done right after loading the initial page.\n\neeep.  I would expect the changes to be based on when I click the button.\n\nI think the way to solve our issue is for the diff request to return the things that did not change as well.  I'll make a patch for that and see if we can make that work "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13257155",
            "date": "2012-04-19T01:49:41+0000",
            "content": "In r1327775 I added an option to get back all the ref elements as well.  Add \"all=true\" as a param, and you will get everything back.  It now appends a field to the changed items: \"changed\": true\n\nThe thought is you can update everything, but only highlight the elements that have changed\n\nstefan, go ahead and commit the style changes to make the highlight more prominent\n\n "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13257348",
            "date": "2012-04-19T07:53:58+0000",
            "content": "Style-Changes committed in r1327854 - will check your updates and see how we could integrate them "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13259173",
            "date": "2012-04-22T16:39:46+0000",
            "content": "Updated Patch, using the all=true Param for MBeans-Handler\n\neeep. I would expect the changes to be based on when I click the button.\nyepp, right. changed this back to what we had before. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13259320",
            "date": "2012-04-23T00:27:14+0000",
            "content": "added in #1329005\n\nThanks Stefan! "
        }
    ]
}