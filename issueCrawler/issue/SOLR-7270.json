{
    "id": "SOLR-7270",
    "title": "Add URL of remote host in distrib update thread names to improve debuggability via stack traces.",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Implemented",
        "priority": "Major"
    },
    "description": "",
    "attachments": {
        "SOLR-7270.patch": "https://issues.apache.org/jira/secure/attachment/12705459/SOLR-7270.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-19T15:14:26+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Can't our exceptions include this information? Just that modifying thread names seems unintuitive to someone new looking at the code. The name kinda identifies the thread to the developer. Agreed this should be a lesser when its an executor and its just an implementation detail that threads are reused.. But if there's no better way, let's go for this (In such a case, I am more inclined to have the name be just set instead of us parsing using | etc., that logic can be done by the DynamicRunnable, so it sets updateProcessor-host1 or something like that) ",
            "id": "comment-14369499"
        },
        {
            "date": "2015-03-19T15:24:14+0000",
            "author": "Yonik Seeley",
            "content": "Would be nice if there was a way to customize stack traces or somehow inject more info... then we could use MDC logging info, or other thread local info for maximum debugability.  A quick google didn't turn up anything though.\n\nI guess we could always add an API that could give these augmented thread dumps. ",
            "id": "comment-14369536"
        },
        {
            "date": "2015-03-19T15:26:26+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Yeah, I started looking at something like that as well and didn't find anything.. ",
            "id": "comment-14369539"
        },
        {
            "date": "2015-03-19T20:36:18+0000",
            "author": "Mark Miller",
            "content": "It's commong for SolrCmdDistributor threads to be involved in deadlocks - adding the URL of that last host they talked to stack traces is very helpful for debugging and has very little downside. ",
            "id": "comment-14370063"
        },
        {
            "date": "2015-03-19T20:39:08+0000",
            "author": "Mark Miller",
            "content": "Can't our exceptions include this information? \n\nThey sure can (I think someone has a JIRA open for that), but I don't think they will help me that much in these situations, so seems unrelated. ",
            "id": "comment-14370072"
        },
        {
            "date": "2015-03-19T20:46:59+0000",
            "author": "Mark Miller",
            "content": "A quick google didn't turn up anything though.\n\nI can't find anything else - best I've seen is set the thread name based on the last task it executed and pick a special char. It's not that satisfying, and it really only makes much sense for these isolated executor threads that only really making http calls to other nodes.\n\nIt would be nice if there was more built in support for this. Seems there is not though, and I don't think we should do this in most cases, but in this case, since I deal with getting a lot of stack trace dumps while supporting usrs, I know it helps and the downside (as long as it doesn't spread to further areas that don't make as much sense) is very limited IMO. ",
            "id": "comment-14370082"
        },
        {
            "date": "2015-03-19T20:51:35+0000",
            "author": "Mark Miller",
            "content": "I am more inclined to have the name be just set instead of us parsing using | etc., that logic can be done by the DynamicRunnable, so it sets updateProcessor-host1 or something like that\n\nThat seems reasonable to look into. I didn't want to duplicate any of that naming logic, but we can pull it out. ",
            "id": "comment-14370089"
        },
        {
            "date": "2015-03-19T20:52:07+0000",
            "author": "Ramkumar Aiyengar",
            "content": "They sure can (I think someone has a JIRA open for that), but I don't think they will help me that much in these situations, so seems unrelated.\n\nMay be I am misunderstanding this then, wouldn't the stack trace then have the URL because the exception message has it?\n\nIn any case, if there's no better way, +1 from me, with the comment from me above..\n\nIn such a case, I am more inclined to have the name be just set instead of us parsing using | etc., that logic can be done by the DynamicRunnable, so it sets updateProcessor-host1 or something like that ",
            "id": "comment-14370091"
        },
        {
            "date": "2015-03-19T20:58:19+0000",
            "author": "Mark Miller",
            "content": "May be I am misunderstanding this then, wouldn't the stack trace then have the URL because the exception message has it?\n\nI'm talking about when you dump jstacks or something and just see the current stack trace for every thread. Or when you use a tool like YourKit. In many cases, users find a client application or Solr or an integration point stuck and so we start looking at stack traces to see what is happening. I would love to be able to following one of these update threads right to the node its waiting on and look at those stack traces. Sometimes I have logs from around that point as well and sometimes I don't. But even then, logs take a lot of time to work through.\n\nThat seems reasonable to look into.\n\nI guess part of what also kept me from that is that I didn't really want the base name to fluctuate before and after hitting the executor - so I tried to keep the name the same and just have this extra data. Given what we are doing, I guess that is not the biggest concern if the full name fluctuates though. ",
            "id": "comment-14370096"
        },
        {
            "date": "2015-03-19T23:24:28+0000",
            "author": "Ramkumar Aiyengar",
            "content": "I'm talking about when you dump jstacks or something and just see the current stack trace for every thread. Or when you use a tool like YourKit.\n\nAh, okay, now makes sense..\n\nI guess part of what also kept me from that is that I didn't really want the base name to fluctuate before and after hitting the executor - so I tried to keep the name the same and just have this extra data.\n\nI guess that's still useful, but better decided by the caller so that it can choose to format the name as is appropriate for the use case.. ",
            "id": "comment-14370329"
        },
        {
            "date": "2015-03-19T23:34:18+0000",
            "author": "Mark Miller",
            "content": "Just a lot harder to have consistent base thread naming like you did before from the caller. The update executor is shared around various places in the code and passed to things like ConcurrentSolrClient. ",
            "id": "comment-14370348"
        },
        {
            "date": "2015-03-20T00:02:21+0000",
            "author": "Ramkumar Aiyengar",
            "content": "I understand. What about..\n\n\npublic class DynamicNamedThreadPoolExecutor extends ThreadPoolExecutor {\n  String namePrefix;\n  public DynamicNamedThreadPoolExecutor(int corePoolSize, int maximumPoolSize,\n      long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, String namePrefix) {\n    this.namePrefix = namePrefix;\n    super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,\n        new DefaultSolrThreadFactory(namePrefix));\n  }\n  protected void beforeExecute(Thread t, Runnable r) {\n    ..\n    t.setName(namePrefix + \"|\" + runnableName);\n  }\n\n\n\n(btw, tried to apply and modify your patch but couldn't, is that against an older 4x? i see refs to *Server which Alan modified to *Client a while back) ",
            "id": "comment-14370412"
        },
        {
            "date": "2015-04-13T13:12:39+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Wow, I missed this thread. I have been working towards some of the same goals. See SOLR-7381 where each and every thread pool creates threads which inherit the submitter's context. I think what we want to achieve here can be done by my patch in that issue. In fact it is more powerful because we can expose the entire MDC context in the thread names. ",
            "id": "comment-14492385"
        },
        {
            "date": "2015-04-19T03:50:24+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Fixed by SOLR-7381 ",
            "id": "comment-14501679"
        },
        {
            "date": "2015-06-15T21:42:45+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close for 5.2.0. ",
            "id": "comment-14586802"
        }
    ]
}