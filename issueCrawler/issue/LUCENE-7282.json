{
    "id": "LUCENE-7282",
    "title": "search APIs should take advantage of index sort by default",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "Spinoff from LUCENE-6766, where we made it very easy to have Lucene sort documents in the index (at merge time).\n\nAn index-time sort is powerful because if you then search that index by the same sort (or by a \"prefix\" of it), you can early-terminate per segment once you've collected enough hits.  But doing this by default would mean accepting an approximate hit count, and could not be used in cases that need to see every hit, e.g. if you are also faceting.\n\nSeparately, `TermQuery` on the leading sort field can be very fast since we can advance to the first docID, and only match to the last docID for the requested value.  This would not be approximate, and should be lower risk / easier.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}