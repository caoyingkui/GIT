{
    "id": "SOLR-3066",
    "title": "SolrIndexSearcher open/close imbalance in some of the new SolrCloud tests.",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Test",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I have not been able to duplicate this test issue on my systems yet, but on jenkins, some tests that start and stop jetty instances during the test are having trouble cleaning up and can bleed into other tests. I'm working on isolating the reason for this - I seem to have been ip banned from jenkins at the moment, but when I can ssh in there, I will be able to speed up the try/feedback loop some. I've spent a lot of time trying to duplicate across 3 other systems, but I don't see the same issue anywhere but our jenkins server thus far.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13195592",
            "date": "2012-01-28T18:27:09+0000",
            "content": "*edited - changed an 'of' to 'on'\n\nThis looks similar to an issue I have occasionally but rarely seen with the replication handler test - a running snap pull keeps the core open just a little while even after core container shutdown. We have a similar situation in some of these tests because recoveries that will be attempted as nodes go down uses replication. What I'm still not sure about is why even though we wait quite a while for any index searchers to be closed after core container shutdown, we still don't see a searcher get closed.\n\nI've seen that symtom in tests before - it ended up being because an executor was rejecting a task during shutdown and a searcher was not cleaned up - that doesn't look like it's a problem anymore though.\n\nI've tried to replicate a slow env by running tons of tests at the same time on my windows vm - I have only seen a similar result once out of over 100 runs though.\n\nPerhaps we just need to wait even longer - which seems strange that it could be that slow - but it does almost look like the searcher is returned at some point during later tests based on how it can throw off open/close numbers for a later test (more closes than opens).\n\nTaking a break, but I'll be back on this later today. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13195603",
            "date": "2012-01-28T19:05:54+0000",
            "content": "I've made this a non-critical error for now... to see if a test trips this, we'll need to check the console output for the run and search for \"SolrIndexSearcher\". "
        },
        {
            "author": "Sami Siren",
            "id": "comment-13195607",
            "date": "2012-01-28T19:27:36+0000",
            "content": "I can see TestReplicationHandler fail open/close mismatch quite often, this is after running the tests for 24 hrs:\n\n\n    35 TEST-org.apache.solr.handler.TestReplicationHandler.xml\n      1 TEST-org.apache.solr.update.SoftAutoCommitTest.xml\n      1 TEST-org.apache.solr.core.TestArbitraryIndexDir.xml\n      1 TEST-org.apache.solr.cloud.LeaderElectionIntegrationTest.xml\n      1 TEST-org.apache.solr.cloud.FullSolrCloudDistribCmdsTest.xml\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13203190",
            "date": "2012-02-08T02:42:33+0000",
            "content": "So a lot of this seemed to be fixed by adding a higher timeout when we wait for the searcher open/close counts to balance out. I think this is partially because jenkins will run with test multipliers and so some tests start and stop quite a few number of jetties, so it on a slow system, it can take a little while for all cores to be released some times.\n\nA couple of the tests that are currently ignored failed with bigger count mismatches though. I didn't want to turn those back on without more assurance they might pass.\n\nSo I installed freebsd in virtualbox and started playing there within the confines of the black hole behavior. I tried to run those two tests and indeed they failed - a couple stack trace dumps and I realized that some recovery attempt calls where hanging - I had set timeouts for the calls to recover/replicate, but not for the calls to sync. I added the timeouts and those tests started passing.\n\nSo things are looking okay, except that i just saw that very rarely on jenkins, the zkrecovery test is failing with an imbalance off by one. I'll probably make a different issue for that less frequent case. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13203193",
            "date": "2012-02-08T02:44:32+0000",
            "content": "Also, I already re-enabled the searcher open/close imbalance check that yonik had taken out temporarily - that has been working well for a few days at least now. "
        }
    ]
}