{
    "id": "SOLR-3843",
    "title": "Add lucene-codecs to Solr libs?",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [],
        "type": "Wish",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Solr gives the ability to its users to select the postings format to use on a per-field basis but only Lucene40PostingsFormat is available by default (unless users add lucene-codecs to the Solr lib directory). Maybe we should add lucene-codecs to Solr libs (I mean in the WAR file) so that people can try our non-default postings formats with minimum effort?",
    "attachments": {
        "SOLR-3843.patch": "https://issues.apache.org/jira/secure/attachment/12570850/SOLR-3843.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13456403",
            "date": "2012-09-15T13:05:53+0000",
            "content": "-1, they should simply put them into $solr_home/lib where all other plugins are. We don\u00c4t want to bloat the WAR file. Solr has support for Lucene's SPI loaded from SolrResourceLoader. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13456404",
            "date": "2012-09-15T13:07:46+0000",
            "content": "Just to add: If somebody wants to try out codecs, he will be for sure able to add the JAR file to his solr_home. We should maybe only add this to a wiki page. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13456406",
            "date": "2012-09-15T13:21:37+0000",
            "content": "Also I had to turn off per-field codec support by default anyway because Solr keeps the IndexWriter open across core reloads (SOLR-3610). \n\nSomeone must turn it on explicitly by setting their codec factory to SchemaCodecFactory in solrconfig.xml (realizing there are tradeoffs).\nSame thing goes with Similarity.\n\nAnalyzer was fixed by changing solr to always pass the newest Analyzer as a param add/updateDocument (so its not really set in the IWConfig),\nbut the general problem still exists. "
        },
        {
            "author": "Adrien Grand",
            "id": "comment-13457839",
            "date": "2012-09-18T14:09:40+0000",
            "content": "Thanks Uwe and Robert for these precisions. I added some documentation on Solr wiki:\n\n\thttp://wiki.apache.org/solr/SchemaXml#Data_Types\n\thttp://wiki.apache.org/solr/SolrConfigXml#codecFactory\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13476345",
            "date": "2012-10-15T18:53:34+0000",
            "content": "Also I had to turn off per-field codec support by default anyway because Solr keeps the IndexWriter open across core reloads (SOLR-3610).\n\nWe should probably consider that again. Some of my initial work around this area when this first came up was not really up to dealing with it well. Opening a new IndexWriter was kind of a hackey operation for replication. Things have changed though, and open a new IndexWriter should be first class now. I think it's probably fine to reopen it on core reloads. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13476748",
            "date": "2012-10-16T05:07:32+0000",
            "content": "+1. My approach so far was to disable this (currently expert) stuff because of the problems you get if you add new fields to the schema and reload. But it seems bad to not allow anything passed to IndexWriter to interact with IndexSchema: if we can do a better job we can make things easier. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13477185",
            "date": "2012-10-16T17:27:11+0000",
            "content": "Reopening.\n\nCore codecs and Solr should just work w/o requiring users to copy any jar files around. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13540527",
            "date": "2012-12-28T17:35:47+0000",
            "content": "Core codecs and Solr should just work w/o requiring users to copy any jar files around.\n\nBut if we can just put a <lib> in solrconfig that points to it in the example configuration moving forward, does that address this? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13540534",
            "date": "2012-12-28T17:41:13+0000",
            "content": "I had forgotten about this issue - I think we can fix the problem with iw and core reload easily now - I think we should start including these codes and add that fix. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13540548",
            "date": "2012-12-28T18:23:25+0000",
            "content": "As far as size, the lucene codecs jar is only 278K.  It seems pretty \"core\" really, and should be included by default. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13574207",
            "date": "2013-02-08T03:40:09+0000",
            "content": "\nI had forgotten about this issue - I think we can fix the problem with iw and core reload easily now - I think we should start including these codes and add that fix.\n\nMaybe we can open a separate issue for this? Ideally it would also fix the same trap for similarity too: a really good thing if we can solve it.\n\nAs far as codecs.jar, I want to point out additionally that its very strange the solr-test-framework.jar is shipped in binary releases (and it depends on this codecs jar), but the codecs jar isnt anywhere in the binary package. So that means the solr-test-framework.jar is really unusable in the current packaging. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13574212",
            "date": "2013-02-08T03:47:00+0000",
            "content": "Maybe we can open a separate issue for this?\n\nYeah, I'll open one.\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13574533",
            "date": "2013-02-08T15:12:12+0000",
            "content": "SOLR-4417 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13580300",
            "date": "2013-02-17T22:05:56+0000",
            "content": "I've committed an initial attempt at SOLR-4417 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13586247",
            "date": "2013-02-25T20:14:20+0000",
            "content": "Here's the start to a patch (I havent tested the build with it or looked at maven and so on).\n\nThis adds the codecs jar and enables SchemaCodecFactory by default: so the format for postings lists and docvalues can be customized easily in the fieldtype.\n\nI didnt want to turn this factory on by default because of SOLR-4417, but Mark fixed that. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13586265",
            "date": "2013-02-25T20:47:25+0000",
            "content": "Smoketesting passes with this patch. But i am not sure if anything should/needs to be changed in maven.\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13586377",
            "date": "2013-02-25T22:29:10+0000",
            "content": "Smoketesting passes with this patch. But i am not sure if anything should/needs to be changed in maven.\n\nThe attached patch is Robert's with the addition of a dependency from the Solr webapp module on the lucene-codecs jar.  With this change, when the war is built by Maven, the lucene-codecs jar is put in the same place as when the war is built by the Ant build: under WEB-INF/lib/. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13586388",
            "date": "2013-02-25T22:36:45+0000",
            "content": "Thanks Steve: I was actually (and still am i think) uncertain who should have the dependency.\n\nIf you think about it, its no different than the analysis module cases: but i don't see the webapp depending on them here.\n\nAt the moment, i understand the reasoning behind the hard dependency to analysis-common.jar (because bogusly the factory stuff is there, imo it should not be).\n\nBut somewhere in maven, something in solr depends on the other analysis modules it bundles (e.g. analyzers-phonetic), yet you could remove this jar and solr would work fine (as long as you didnt use these particular phonetic analyzers).\n\nSo I feel like these analysis components (except common, see above), along with codecs.jar, should be depended on in the same place. I guess theoretically they are optional dependencies but I don't think we should do that (unless we test every possibility with/without optional X,Y,Z, so I think its a bad idea). But they are the same in this sense. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13586412",
            "date": "2013-02-25T22:54:03+0000",
            "content": "In the Maven build, it's the solr core module that depends on these analysis modules.  Here's the output from mvn dependency:tree in maven-build/solr/webapp/:\n\n\n[INFO] --- maven-dependency-plugin:2.4:tree (default-cli) @ solr ---\n[INFO] org.apache.solr:solr:war:5.0-SNAPSHOT\n[INFO] +- org.apache.solr:solr-core:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-core:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-analyzers-common:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-analyzers-kuromoji:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-analyzers-morfologik:jar:5.0-SNAPSHOT:compile\n[INFO] |  |  \\- org.carrot2:morfologik-polish:jar:1.5.5:compile\n[INFO] |  |     \\- org.carrot2:morfologik-stemming:jar:1.5.5:compile\n[INFO] |  |        \\- org.carrot2:morfologik-fsa:jar:1.5.5:compile\n[INFO] |  +- org.apache.lucene:lucene-analyzers-phonetic:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-highlighter:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-memory:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-misc:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-queryparser:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-spatial:jar:5.0-SNAPSHOT:compile\n[INFO] |  |  \\- com.spatial4j:spatial4j:jar:0.3:compile\n[INFO] |  +- org.apache.lucene:lucene-suggest:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-grouping:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- org.apache.lucene:lucene-queries:jar:5.0-SNAPSHOT:compile\n[INFO] |  +- commons-codec:commons-codec:jar:1.7:compile\n[INFO] |  +- commons-cli:commons-cli:jar:1.2:compile\n[INFO] |  +- commons-fileupload:commons-fileupload:jar:1.2.1:compile\n[INFO] |  +- commons-io:commons-io:jar:2.1:compile\n[INFO] |  +- commons-lang:commons-lang:jar:2.6:compile\n[INFO] |  +- com.google.guava:guava:jar:13.0.1:compile\n[INFO] |  +- org.codehaus.woodstox:wstx-asl:jar:3.2.7:runtime\n[INFO] |  +- org.apache.httpcomponents:httpclient:jar:4.2.3:compile\n[INFO] |  |  \\- org.apache.httpcomponents:httpcore:jar:4.2.2:compile\n[INFO] |  \\- org.apache.httpcomponents:httpmime:jar:4.2.3:compile\n[INFO] +- org.apache.solr:solr-solrj:jar:5.0-SNAPSHOT:compile\n[INFO] |  \\- org.apache.zookeeper:zookeeper:jar:3.4.5:compile\n[INFO] +- org.apache.lucene:lucene-codecs:jar:5.0-SNAPSHOT:compile\n[INFO] +- org.eclipse.jetty.orbit:javax.servlet:jar:3.0.0.v201112011016:provided\n[INFO] +- org.slf4j:slf4j-jdk14:jar:1.6.4:runtime (scope not updated to compile)\n[INFO] +- org.slf4j:jcl-over-slf4j:jar:1.6.4:compile\n[INFO] +- org.slf4j:slf4j-api:jar:1.6.4:compile\n[INFO] \\- junit:junit:jar:4.10:test\n\n\n\nThis parallels the Ant build: these analyzer jars are included in the \"solr.lucene.libs\" path, which is included in \"solr.base.classpath\".\n\nI put the lucene-codecs dependency on the solr webapp module rather than the solr core module because all non-test compilation succeeds without lucene-codecs.  (The lucene-test-framework pulls lucene-codecs into all Solr test classpaths.)  And this issue is about packaging of the war: adding the dependency to the webapp module fixes exactly the problem. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13586415",
            "date": "2013-02-25T22:56:53+0000",
            "content": "\nI put the lucene-codecs dependency on the solr webapp module rather than the solr core module because all non-test compilation succeeds without lucene-codecs. (The lucene-test-framework pulls lucene-codecs into all Solr test classpaths.) And this issue is about packaging of the war: adding the dependency to the webapp module fixes exactly the problem.\n\nBut it would also succeed without analyzers-phonetic. How are they any different? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13586424",
            "date": "2013-02-25T23:03:57+0000",
            "content": "But it would also succeed without analyzers-phonetic. How are they any different?\n\nThey're not. \n\nI think the Ant build should change here: the solr compilation classpath shouldn't have things on it that aren't required for compilation.  (This goes for the analysis module dependencies in the Maven build too, of course.)\n\nIs there a place where (optional) runtime dependencies are added to the stuff that goes into the war?  I haven't looked at this in a while. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13586439",
            "date": "2013-02-25T23:13:29+0000",
            "content": "I dont think the ant build makes any distinction here. \n\nBut yeah there is probably bigger issue / better way to go about it, someting like:\n\n\tsolr core etc should only have the minimal dependencies\n\ttests using the solr example should somehow be in webapp/test or something.\n\twebapp depends on these modules like phonetic and codecs.\n\tthe fact that lucene-test-framework brings in codecs anyway is an impl detail\n\n\n\nI guess for now I was just looking at us doing things consistently. Even if we are consistently wrong  "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13586458",
            "date": "2013-02-25T23:24:51+0000",
            "content": "I guess for now I was just looking at us doing things consistently. Even if we are consistently wrong \n\nRight, makes sense - in this case the consistent thing to do is to make the solr-core module, rather than the webapp module, depend on the lucene-codecs jar in the Maven build.  The attached patch does this. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13586607",
            "date": "2013-02-26T01:45:37+0000",
            "content": "+1\n\nI do think we should make a separate issue/discussion to refactor the tests/dependencies (in both ant and maven), but I think we should move forward with this for 4.2 "
        },
        {
            "author": "Michael McCandless",
            "id": "comment-13587262",
            "date": "2013-02-26T17:00:55+0000",
            "content": "+1 to add lucene-codecs to Solr: Lucene has a number of useful codec components, growing over time ... I think we should make it as easy as possible for users to access these from Solr. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13587276",
            "date": "2013-02-26T17:14:27+0000",
            "content": "-1 To add it to the war. Its so easy to add analyzer JAR files to the solr/lib folder, same applies to codecs.\n\nIf this DV codec is so important for facetting and sorting and nuking FieldCache, move it to lucene-core.jar. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13587281",
            "date": "2013-02-26T17:25:10+0000",
            "content": "So Solr shouldnt bundle any analyzers either?\n\nI'm not trying to say that codecs need to be in core, man this is experimental stuff and I definitely dont want to increase our backwards compatibility requirements.\n\nI just want to make it easier for users to experiment. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13587289",
            "date": "2013-02-26T17:33:37+0000",
            "content": "If users want to experiment they just need to copypaste a file, where is the problem?\n\nIn addition: The analysis-extras module is also not needed (except the special ICUField, which may more into a solr-icu module), as all analysis factories are already inside the analyzers jar. In my opinion, the Solr WAR file should only bundle analyzers-common.jar and nothing more. The analysis-extras build.xml file is the worst I have seen: It just copies some JAR files from Lucene to Solr.\n\nTo make it easier for people, we can add a command that uses get/ivy to download the JAR file from Maven and install it in solr's lib folder. Optional stuff should not be in the WAR file. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13587302",
            "date": "2013-02-26T17:46:03+0000",
            "content": "I could agree to add this for now, but once you committed this: Open a new issue to cleanup solr.war and remove all optional stuff (like analyzers-phonetic.jar). Instead add a internet downloader using ivy/maven for setup of solr/lib folder. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13587309",
            "date": "2013-02-26T17:48:19+0000",
            "content": "If users want to experiment they just need to copypaste a file, where is the problem?\n\nThat it's much easier to not have to copy past a file?\n\nAt the sizes of the files involved, your just being a masochist  "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13587421",
            "date": "2013-02-26T19:21:49+0000",
            "content": "OK, then we can also remove the modules in Lucene completely! Let's just create a 8 MB lucene.jar file.\n\nWe have modules to make this possible and let users start with a small installation without useless stuff they will never need... This is just my opinion, but to me it looks we can get rid of all modules, have one big build.xml, one big classpath and finally have only one big JAR file for Lucene and Solr - but that's real masochism, especially for projects like ES! "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13587432",
            "date": "2013-02-26T19:28:35+0000",
            "content": "\nOK, then we can also remove the modules in Lucene completely! Let's just create a 8 MB lucene.jar file.\n\nThis would be a 20MB jar. If you included their dependencies so it actually functioned correctly, 43MB. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13587460",
            "date": "2013-02-26T19:54:34+0000",
            "content": "Modules in Lucene have little to do with Solr. We shouldn't make users work to save 300k in the webapp. This is super silly stuff... "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13587477",
            "date": "2013-02-26T20:06:21+0000",
            "content": "Have you looked at ElasticSearch? Its very tiny (20 MB alltogether), no useless analyzers for every language on earth. If you need kumoroji, enter:\n\n\nbin/plugin -install elasticsearch/elasticsearch-analysis-kuromoji\n\n\n\nThis downloads the plugin and installs it into the ES lib folder. This is how it should work, instead of one horrible huge war file.\n\nBut it bundles lucene-codecs.jar, but that has another reason (I think it uses bloom, as far as I remember). "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13587494",
            "date": "2013-02-26T20:21:26+0000",
            "content": "Your talking about something completely different - I'm talking about adding 300k to a webapp - sounds like you want to file a different JIRA issue that has little to do with that.\n\nIn the modern day, I have no problem with the Solr dist - I'd much rather get everything simply as we do than have to stitch crap together. I have disk space and bandwidth as does the majority of the modern world now. If you are offering to write a package manager for solr for unix/windows/mac, please go ahead  But until then, it makes no sense to not include the codecs the same way we do with analyzers and spellchecker and highlighter, and whatever else we need.\n\nIf I had to run 10 commands to get solr, get spellchecking, get analyzers, get highlighing, get QueryParsers, get MoreLikeThis, etc, I would shoot myself. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13587629",
            "date": "2013-02-26T22:05:23+0000",
            "content": "Hi Mark,\nI cannot do anything against this, but I can still say, that I don't agree with you. That's all. Please respect my opinion.\nUwe "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13587641",
            "date": "2013-02-26T22:10:58+0000",
            "content": "As user we already repack the war with the jars we need, including the codecs jar. But because the codecs jar can provide better performance on SolrCloud (bloom filter) i think 300k justifies adding it to a vanilla build. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13587708",
            "date": "2013-02-26T23:01:47+0000",
            "content": "Uwe,\nI do respect your opinion in the large sense of the phrase, but I don't agree with you about not adding the 300k jar. That is all  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13588507",
            "date": "2013-02-27T16:50:35+0000",
            "content": "\nHave you looked at ElasticSearch? Its very tiny (20 MB alltogether), no useless analyzers for every language on earth. If you need kumoroji, enter:\n\nbin/plugin -install elasticsearch/elasticsearch-analysis-kuromoji\n\nThis downloads the plugin and installs it into the ES lib folder. This is how it should work, instead of one horrible huge war file.\n\nBut I'm not sure this is a good thing. I did some quick google searches and found:\n\n\thttp://www.sentric.ch/blog/why-we-chose-solr-4-0-instead-of-elasticsearch\n  \"Better language support out of the box\"\n\thttp://blog.sematext.com/2012/09/04/solr-vs-elasticsearch-part-2-data-handling/\n  \"Apache Solr 4.0 beta has the advantage over ElasticSearch because it can handle more languages out of the box\"\n\n\n\nI think both search servers are good for the lucene ecosystem and its not my intent to stir up some battle about which is better.\nI'm guessing that you can access all of the lucene analyzers from either one, but the impression from packaging is that Solr\nis better.\n\nLets not make this same mistake with codecs! \n\nMost users probably could care less about SPI etc (this is all implementation details). They do care about being able to\nsearch different languages and index their content with the appropriate data structures.\n\nI'm happy to open an issue to refactor our build and tests to internally reflect the fact that, using solr-core as a library for example, you dont technically need certain jars.\n\nBut can we separate this from packaging, at least for now? It would be depressing to me to see articles like this that say solr has bad support for flexible indexing. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13590377",
            "date": "2013-03-01T09:42:31+0000",
            "content": "I opened SOLR-4520 to clean up the dependencies. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13590379",
            "date": "2013-03-01T09:44:25+0000",
            "content": "[trunk commit] Robert Muir\nhttp://svn.apache.org/viewvc?view=revision&revision=1451542\n\nSOLR-3843: add lucene-codecs.jar "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13590400",
            "date": "2013-03-01T10:22:14+0000",
            "content": "[branch_4x commit] Robert Muir\nhttp://svn.apache.org/viewvc?view=revision&revision=1451543\n\nSOLR-3843: add lucene-codecs.jar "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654181",
            "date": "2013-05-10T10:34:18+0000",
            "content": "Closed after release. "
        }
    ]
}