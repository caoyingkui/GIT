{
    "id": "SOLR-12398",
    "title": "Make JSON Facet API support Heatmap Facet",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Facet Module",
            "faceting",
            "JSON Request API",
            "spatial"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.5"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The JSON query Facet API does not support Heatmap facets.\u00a0For companies that\u00a0have standardized around generating queries for the JSON query API, it is a major wart to need to also support falling back to the param encoding API in order to make use of them.\n\nMore importantly however, given it's more natural support for nested subfacets, the JSON Query facet API\u00a0is\u00a0be able to compute more interesting Heatmap layers\u00a0for each facet bucket. Without resorting to the older (and much more awkward) facet pivot syntax.",
    "attachments": {
        "repro-facet-heatmaps-response-format-change.patch": "https://issues.apache.org/jira/secure/attachment/12937039/repro-facet-heatmaps-response-format-change.patch",
        "SOLR-12398.patch": "https://issues.apache.org/jira/secure/attachment/12928481/SOLR-12398.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-20T14:21:17+0000",
            "content": "Patch notes:\n\n\tCreated new FacetHeatmap subclass of FacetRequest\n\t\n\t\tUnlike the other FacetRequest subclasses, I chose for this class to have all the functionality needed internally as sub-classes as I think it's better organized this way than having separate top-level Parser, Processor, and Merger. \u00a0Thus we have just one more top level class and one new source file.\n\t\n\t\n\tMoved most logic in SpatialHeatmapFacets into FacetHeatmap\n\tSpatialHeatmapFacets still exists (identical API) but is integration glue to work with FacetHeatmap. \u00a0It used FacetHeatmap to compute facets and also uses it's distributed/sharded merge logic. \u00a0I think we lost the debug timing diagnostic for PNG in particular for classic facet heatmaps, and I think that's fine.\n\tMoved SpatialHeatmapFacetsTest to same package as FacetHeatmap, both because this is where the code being tested primarily lives now and because of package accessibility stuff for testing.\n\tSpatialHeatmapFacetsTest.test is now duplicated to testClassicFacets\u00a0testJsonFacets and with mostly the same code but tweaks to request differently. \u00a0I hate duplicating code but it would be pretty awkward to have one method, I think. \u00a0At least it's in the same class.\n\t\n\t\tAdded test for hanging sub-heatmaps off of different query facets. \u00a0Not a particularly good assertion constraint but at least in my debugger I see it's working.\n\t\n\t\n\tImproved BaseDistributedSearchTestCase to treat Longs & Integers of the same value as equivalent. \u00a0It appears that non-distributed vs distributed of json facets has different types on the \"count\".\n\tRefactored/improved some aspects of the JSON Facet module code: Mikhail Khludnev can you please review this part (includes SimpleFacets)\n\t\n\t\tFacetRequest now has a static parse() method (two actually) and is used by FacetModule and SimpleFacets (for UIF method) and SpatialHeatmapFacets. \u00a0The intent is to simplify the interaction by avoiding the need for these classes to even be aware of the notion of a FacetParser. \u00a0The second one is intended for external users (SimpleFacets) and avoids\u00a0one needless outer layer of req/res.\n\t\tFacetRequest now has a static process() method (two actually) and is used by FacetModule, SimpleFacets (for UIF method), and SpatialHeatmapFacets, and FacetProcessor.processSubs. \u00a0This reduces duplication around debug tracking I saw, and it also reduces the need of the callers to even be aware of the notion\u00a0of a FacetProcessor.\n\t\tNote that SimpleFacets method=uif integration glue is much simpler.\n\t\n\t\n\n\n\nI ran tests & precommit.\n\nWhat's needed is some documentation\u00a0in the ref guide. \u00a0I'll add this soon. ",
            "author": "David Smiley",
            "id": "comment-16518191"
        },
        {
            "date": "2018-06-22T13:04:02+0000",
            "content": "Updated patch with Solr Ref Guide stuff.\n\n\tNew section on the JSON Facet API page. \u00a0It has an example request & response, though I didn't document the parameters here \u2013 instead I pointed to the existing docs on the Spatial Search\u00a0page.\n\tUpdated the Spatial Search page's heatmap section to note the existence of the JSON Facet API as an option.\n\n\n\nPrecommit is happy and tests pass so I think it's all committable. ",
            "author": "David Smiley",
            "id": "comment-16520321"
        },
        {
            "date": "2018-06-26T02:37:36+0000",
            "content": "Commit 095f9eb90db92649a0805e83ff5a0ec93763a31f in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=095f9eb ]\n\nSOLR-12398: Add Heatmap facet option to JSON Facet API.\n\n\tmoved the preponderance of the implementation from SpatialHeatmapFacets (used by SimpleFacets) into the new API.\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16523094"
        },
        {
            "date": "2018-06-26T02:39:31+0000",
            "content": "Commit d59c90e5135dc48d1e5bb58ab1a643f34739a70c in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d59c90e ]\n\nSOLR-12398: Add Heatmap facet option to JSON Facet API.\n\n\tmoved the preponderance of the implementation from SpatialHeatmapFacets (used by SimpleFacets) into the new API.\n\n\n\n(cherry picked from commit 095f9eb) ",
            "author": "ASF subversion and git services",
            "id": "comment-16523096"
        },
        {
            "date": "2018-08-24T17:28:14+0000",
            "content": "Randomly stumbled across this ... it seems that with these changes the facet_heatmaps response format (for &facet=true&facet.heatmap=store requests) changed from\n\n...\"facet_heatmaps\":{\"store\":[\"gridLevel\",2,\"columns\",32,\"rows\",32,...\n\n\nto\n\n...\"facet_heatmaps\":{\"store\":{\"gridLevel\":2,\"columns\":32,\"rows\":32,...\n\n\nand (to me at least) the new format seems 'correct' but perhaps the format change should be mentioned somehow in the upgrade notes \u2013 what do you think?\n\n(I'll attach a patch that if applied 'before' and 'after' can be used to see the response format change.) ",
            "author": "Christine Poerschke",
            "id": "comment-16591952"
        },
        {
            "date": "2018-08-24T17:36:07+0000",
            "content": "woah; I didn't think this sort of thing would have changed. \u00a0Your example seams to suggest the issue is related to the json.nl param which is user-configurable:\n\nhttps://lucene.apache.org/solr/guide/6_6/response-writers.html#ResponseWriters-JSON-SpecificParameters ",
            "author": "David Smiley",
            "id": "comment-16591965"
        },
        {
            "date": "2018-11-20T16:39:57+0000",
            "content": "Someone else just told me about this.  Here is my write-up:\n\nSolr 7.5 added heatmap support to JSON Facets.  This involved a large refactor of code moving around.  One change was using SimpleOrderedMap instead of NamedList directly.  I don't recall why I made this change (perhaps consistency with observing some JSON Facet module code?) but my present enlightenment of the consequence is that it effectively changed the response structure to the existing classic/simple facet.heatmap when the response is JSON.  SimpleOrderedMap is what it ought to have been all along since there are no repeating keys and it's a small map.  \nChoices:\n\n\t(A) bring back the old format for back-compat for facet.heatmap only for 7.6 and the remainder of the 7x.  Do not bring back in 8.0; this is an improvement.\n\t(B) Add an upgrade note retroactively to CHANGES.txt for 7.5 and do no other change.  Get this into our 7.6 release so it's published.  The rationale here is that it's basically too late, relatively minor, and 8.0 users will have to change any way.\n\n\n\nAny opinion?\n\nCC 7.6 RM Nicholas Knize as it'll affect CHANGES.txt at a minimum either way ",
            "author": "David Smiley",
            "id": "comment-16693462"
        },
        {
            "date": "2018-11-28T15:21:42+0000",
            "content": "Commit 2611c22b6b00d73f6ae1fc6996e029f73ee7458d in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2611c22 ]\n\nSOLR-12398: retroactively add CHANGES.txt back-compat break for 7.5 ",
            "author": "ASF subversion and git services",
            "id": "comment-16702006"
        },
        {
            "date": "2018-11-28T15:22:48+0000",
            "content": "Commit e466b007619b9f1235ab87a6c029e6da3a5fb9e8 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e466b00 ]\n\nSOLR-12398: retroactively add CHANGES.txt back-compat break for 7.5\n\n(cherry picked from commit 2611c22b6b00d73f6ae1fc6996e029f73ee7458d) ",
            "author": "ASF subversion and git services",
            "id": "comment-16702007"
        },
        {
            "date": "2018-11-28T15:23:38+0000",
            "content": "Commit aef5a75e1377af41da26dd314b1c0496672d268c in lucene-solr's branch refs/heads/branch_7_6 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=aef5a75 ]\n\nSOLR-12398: retroactively add CHANGES.txt back-compat break for 7.5\n\n(cherry picked from commit 2611c22b6b00d73f6ae1fc6996e029f73ee7458d) ",
            "author": "ASF subversion and git services",
            "id": "comment-16702009"
        },
        {
            "date": "2018-11-28T18:48:47+0000",
            "content": "Commit 2611c22b6b00d73f6ae1fc6996e029f73ee7458d in lucene-solr's branch refs/heads/jira/http2 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2611c22 ]\n\nSOLR-12398: retroactively add CHANGES.txt back-compat break for 7.5 ",
            "author": "ASF subversion and git services",
            "id": "comment-16702269"
        }
    ]
}