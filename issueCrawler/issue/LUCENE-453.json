{
    "id": "LUCENE-453",
    "title": "Using MultiSearcher and ParallelMultiSearcher can change the sort order.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "1.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When using multiple sort criteria the first criterium that indicates a difference should be used.\nWhen a field does not exist for a given document, special rules apply.\nFrom what I see in the code, it is sorted as 0 for integer and float fields, and null Strings are sorted before others.\n\nThis works correctly in both Lucene 1.4.3 and in trunk as long as you use a single IndexSearcher (except perhaps in special cases, see other bug reports like LUCENE-374).\n\nHowever, in MultiSearcher and ParallelMultiSearcher, the results of the separate IndexSearchers are merged and there an error occurs.\nThe bug is located in FieldDocSortedHitQueue.\n\nIt can even be demonstrated by passing a single indexSearcher to a MultiSearcher.\n\nTestCase and patch follow.",
    "attachments": {
        "TestSort.diff": "https://issues.apache.org/jira/secure/attachment/12314845/TestSort.diff",
        "FieldDocSortedHitQueue.diff": "https://issues.apache.org/jira/secure/attachment/12314846/FieldDocSortedHitQueue.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2005-10-13T02:13:08+0000",
            "content": "The two assertMatches using the full index will pass.\nThe same assertMatches using a MultiSearcher or a ParallelMultiSearcher will fail. ",
            "author": "Luc Vanlerberghe",
            "id": "comment-12331910"
        },
        {
            "date": "2005-10-13T02:14:58+0000",
            "content": "This fixes the case where both Strings are null. ",
            "author": "Luc Vanlerberghe",
            "id": "comment-12331911"
        },
        {
            "date": "2005-10-19T04:34:49+0000",
            "content": "What about the other \"case\" statements in FieldDocSortedHitQueue that return 1 or -1 but never 0. Should these be patched the same way? ",
            "author": "Daniel Naber",
            "id": "comment-12332392"
        },
        {
            "date": "2005-10-19T05:17:24+0000",
            "content": "most of the other cases are guaranteed to never have null values (except for perhaps CUSTOM)? ",
            "author": "Yonik Seeley",
            "id": "comment-12332408"
        },
        {
            "date": "2005-11-10T14:58:21+0000",
            "content": "Thanks for the patch Luc!\nI've applied it to the current dev version (1.9). ",
            "author": "Yonik Seeley",
            "id": "comment-12357195"
        }
    ]
}