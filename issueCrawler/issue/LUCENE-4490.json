{
    "id": "LUCENE-4490",
    "title": "TermPositions misses some terms in some cases",
    "details": {
        "components": [
            "core/search"
        ],
        "fix_versions": [],
        "affect_versions": "3.4,                                            3.6.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Invalid",
        "status": "Closed"
    },
    "description": "I have the following code:\n\npublic static void main(String[] args) throws Exception {\n        RAMDirectory dir = new RAMDirectory();\n        IndexWriterConfig iwc = new IndexWriterConfig(Version.LUCENE_34, new StandardAnalyzer(Version.LUCENE_34));\n        org.apache.lucene.index.IndexWriter iw = new org.apache.lucene.index.IndexWriter(dir, iwc);\n        Document doc = new Document();\n        doc.add(new Field(\"name\", \"a\", Field.Store.YES, Field.Index.ANALYZED_NO_NORMS));\n        iw.addDocument(doc);\n\n\tiw.close();\n\n        IndexReader ir = IndexReader.open(dir);\n        Term t = new Term(\"name\", \"a\");\n        TermPositions tp = ir.termPositions();\n        tp.seek(t);\n        boolean flag = false;\n        while (tp.next()) \n{\n            System.out.println(tp.doc());\n            flag = true;\n        }\n        if (!flag) \n{ System.out.println(\"Missing term\"); }\n\n\tSystem.out.println(ir.document(0));\n\n        tp.close();\n        ir.close();\n}\n\nThe output is:\nMissing term\nDocument<stored,indexed,tokenized,omitNorms<name:a>>\n\nSo the document contains term <name:a> but the TermPositions can not find it.\n\nWhen replacing the line:\ndoc.add(new Field(\"name\", \"a\", Field.Store.YES, Field.Index.ANALYZED_NO_NORMS));\n\nwith the line:\ndoc.add(new Field(\"name\", \"b\", Field.Store.YES, Field.Index.ANALYZED_NO_NORMS));\n\nand line:\nTerm t = new Term(\"name\", \"a\");\n\nwith the line:\nTerm t = new Term(\"name\", \"b\");\n\nEverything is OK. The output is:\n0\nDocument<stored,indexed,tokenized,omitNorms<name:b>>.\n\nI did some debugging on it and found that when executing tp.seek(t); when I reached the line 68 of constructor of SegmentTermEnum:\n\nsize = input.readLong();                    // read the size\n\nIn the case of term <name:b> - the size was assigned 1, while in the case term <name:a> it was assigned 0.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-10-18T15:46:52+0000",
            "content": "I think the problem is 'a' is a stopword and StandardAnalyzer strips stopwords?  Try using WhitespaceAnalyzer instead? ",
            "author": "Michael McCandless",
            "id": "comment-13479088"
        },
        {
            "date": "2012-10-18T16:13:19+0000",
            "content": "Yes the reason is the Analyzer. With WhitespaceAnalyzer there is no such problem. ",
            "author": "Ivan Dimitrov Vasilev",
            "id": "comment-13479104"
        }
    ]
}