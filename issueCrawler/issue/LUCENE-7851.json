{
    "id": "LUCENE-7851",
    "title": "Lucene54DocValuesProducer#getSortedSetTable lookupTerm does not honor setDocument",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Not A Problem",
        "affect_versions": "6.0.1",
        "status": "Resolved",
        "type": "Bug",
        "components": [],
        "fix_versions": []
    },
    "description": "I'm having a problem with the lookupTerm method of the anonymous RandomAccessOrds class returned by Lucene54DocValuesProducer#getSortedSetTable(). It does not seem to honor setDocument. It returns the same ord every time regardless of my calling setDocument with different arguments.\n\nTo reproduce:\nI have two documents with a multi-valued string field \"strfield\". Both have a single value \"a\". I have a custom class that extends FieldCacheSource. This is obviously just a dummy, but it's the simplest way I know to reproduce the problem.\n\n\npublic class MyValueSource extends FieldCacheSource {\n  public MyValueSource(String field) {\n    super(field);\n  }\n\n  @Override\n  public FunctionValues getValues(Map map, LeafReaderContext readerContext) throws IOException {\n    SortedSetDocValues dvs = DocValues.getSortedSet(readerContext.reader(), FieldNames.PARENTS_DATES);\n    dvs.setDocument(0);\n    long zeroOrd = dvs.lookupTerm(new BytesRef(\"a\"));\n    dvs.setDocument(1);\n    long oneOrd = dvs.lookupTerm(new BytesRef(\"a\"));\n    assert(zeroOrd != oneOrd); // FAILS. The same ord is always returned.\n\n    return new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return 0;\n      }\n    };\n  }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16023796",
            "date": "2017-05-24T22:19:34+0000",
            "content": "lookupTerm has nothing to do with setDocument, because it looks for a term in the \"term dictionary\" and returns the ordinal for that term. That term dictionary is shared across the whole segment.\n\nexample docs and values:\n\n\n\n\ndoc\nvalue(s)\n\n\n0\ndog\n\n\n1\ncat\n\n\n2\ndog,cat,cat\n\n\n\n\n\nthis is what the docvalues looks like\n\n\n\ndoc\nords\ncomment\n\n\n0\n1\n\n\n1\n0\n\n\n2\n0,1*\n\n\n\n\n\n\n\tas you see, this fieldtype loses both the original order (it was dog, cat) and frequency (cat was there twice) because its a SortedSet.\n\n\n\nthis is what the \"term dictionary\" looks like:\n\n\n\nord\nterm\n\n\n0\ncat\n\n\n1\ndog\n\n\n\n\n\nlookupTerm(dog) is always 1, regardless of which document in the segment its in. its 1 because it sorts after \"cat\". The values are deduplicated across all documents in the segment in this way. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16023855",
            "date": "2017-05-24T23:00:49+0000",
            "content": "Thank you for your clarification Robert Muir.\n\nMy original issue is actually that I'm trying to work around the lack of maps in Solr and have \"serialized\" one key-value pair into each string value in the multi-valued field. I would like to find the correct key-value pair using an O(log) or even an O(1) search rather than iterating over all the document's values for that field, and return the found value. What would be the best forum to seek advice for this kind of a requirement? Stack Overflow? ",
            "author": "Vesa Pirila"
        },
        {
            "id": "comment-16023867",
            "date": "2017-05-24T23:19:45+0000",
            "content": "If you are searching all documents for a string value (does not matter if it contains a key=value thingy that you put in it), then the best way does not involve docvalues at all, it is to index those key-value pairs as terms in the inverted index and search on them with TermQuery.\n\nBut maybe you have different requirements or something I am missing.\n\nThe best forum for these kinds of questions is the java-user@lucene.apache.org mailing list. You can find instructions here: http://lucene.apache.org/core/discussion.html#java-user-list-java-userluceneapacheorg ",
            "author": "Robert Muir"
        }
    ]
}