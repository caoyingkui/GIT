{
    "id": "SOLR-11240",
    "title": "Raise UnInvertedField internal limit",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "faceting"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.1",
            "master (8.0)"
        ],
        "affect_versions": "5.5.4,                                            6.6",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "UnInvertedField has via DocTermOrds an internal limitation of 2^24 bytes for byte-arrays holding term ordinals. For String faceting on high-cardinality Text fields, this can trigger the exception with \"Too many values for UnInvertedField\". A search for that phrase shows that the exception is encountered in the wild.\n\nThe limitation is due to the packing being a combination of values and pointers: If the values (term ordinals) for a given document-ID can fit in an integer, they are stored directly. If the value of the first 8 bits in the integer is 1, it signals that the following 3 bytes (24 bits) is a pointer into a byte-array, limiting the array-size to 16M (2^24).\n\nSolution: Due to the values being packed at vInts, bit 31 (the last bit) of the integer will never be 1 if the integer contains values. This means that this bit it can be used for signalling whether or not the preceding bits should be parsed as values or a pointer. The effective pointer size is thus 2^31, which matches the array-length limit in Java. Changing the signalling mechanism does not affect space requirements and should not affect performance.\n\nNote that this is only a 100-fold increase ever the 2^24 limit, not an elimination: Performing uninverted Text field faceting on 100M documents with 5K terms each will still raise an exception.",
    "attachments": {
        "SOLR-11240.patch": "https://issues.apache.org/jira/secure/attachment/12882129/SOLR-11240.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-08-16T12:57:02+0000",
            "content": "Patch for master. Running ant test reported failing unit-tests for Cdcr & Cloud, but those areas are pretty far from the patch and the tests also fails when running without the patch.\n\nNote the addition of the slow testTriggerUnInvertLimit in TestDocTermOrds. It takes about 10-15 seconds to run on a modern machine with SSD. I find that to be problematic, but I don't know any way to very quickly build an index with high enough term-cardinality to reach the old limit.\n\nBarring errors, the fix should be complete and potential back-porting to 7x (or 6) seems trivial. I invite anyone to review the patch. ",
            "author": "Toke Eskildsen",
            "id": "comment-16128756"
        },
        {
            "date": "2017-08-16T18:43:09+0000",
            "content": "Just looking around casually, not verifying in-depth.\n\n\n+ *   A single entry is thus either 0b0xxxxxxxx_xxxxxxxx_xxxxxxxx_xxxxxxxx holding 0-4 vInts or\n+ *   0b0xxxxxxxx_xxxxxxxx_xxxxxxxx_xxxxxxxx holding a 31-bit pointer.\n\n\nSomewhere in the above bitmasks the highest bit should be set \n\n\n+  // TODO: Why is indexedTermsArray not part of this?\n   /** Returns total bytes used. */\n   public long ramBytesUsed() {\n\n\n\nI'd piggyback that in and correct it in this issue.\n\n\n+  @Slow\n+  public void testTriggerUnInvertLimit() throws IOException {\n\n\n\nMake it Nightly instead of Slow if it's such a resource-hog? ",
            "author": "Dawid Weiss",
            "id": "comment-16129240"
        },
        {
            "date": "2017-08-16T20:09:19+0000",
            "content": "Solution: Due to the values being packed at vInts, bit 31 (the last bit) of the integer will never be 1\n\nAh, clever, an extra bit!\n\nSomewhere in the above bitmasks the highest bit should be set \n\nRight, looks like it should be:\n\n+ *   A single entry is thus either 0b0xxxxxxxx_xxxxxxxx_xxxxxxxx_xxxxxxxx holding 0-4 vInts (low byte first) or\n+ *   0b1xxxxxxxx_xxxxxxxx_xxxxxxxx_xxxxxxxx holding a 31-bit pointer.\n\n ",
            "author": "Yonik Seeley",
            "id": "comment-16129336"
        },
        {
            "date": "2017-08-17T09:47:09+0000",
            "content": "Thank you Dawid & Yonik, I have incorporated your changes. @Nightly is obviously the right choice in hindsight. ",
            "author": "Toke Eskildsen",
            "id": "comment-16130156"
        },
        {
            "date": "2017-08-21T08:58:10+0000",
            "content": "This is a small patch and I feel confident about the technical implications. Unless anyone objects, I'll commit it to master and back-port to 7x in a few days. ",
            "author": "Toke Eskildsen",
            "id": "comment-16134906"
        },
        {
            "date": "2017-08-21T12:48:00+0000",
            "content": "+1 to commit (i.e. no need to wait more if you don't want) ",
            "author": "Yonik Seeley",
            "id": "comment-16135118"
        },
        {
            "date": "2017-08-21T12:51:11+0000",
            "content": "Agreed. If you ran precommit and tests and the change is unlikely to raise voices of criticism, go ahead and commit early. If non-trivial test failures occur so be it. It's exactly the reason we have those (randomized) tests for - to catch things early. ",
            "author": "Dawid Weiss",
            "id": "comment-16135125"
        },
        {
            "date": "2017-08-22T12:30:43+0000",
            "content": "Newest patch with the only change being an entry in CHANGES.txt under version 7.1. I will try and commit this as well as back-porting to branch_7x. ",
            "author": "Toke Eskildsen",
            "id": "comment-16136705"
        },
        {
            "date": "2017-08-22T13:17:34+0000",
            "content": "Commit 85b89d15a89802d3bf6fbeac6bd55286028dc8e0 in lucene-solr's branch refs/heads/master from Toke Eskildsen\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=85b89d1 ]\n\nSOLR-11240: Raise UnInvertedField internal limit ",
            "author": "ASF subversion and git services",
            "id": "comment-16136777"
        },
        {
            "date": "2017-08-22T13:30:42+0000",
            "content": "Commit c4acb339846cc7740966097f249df083b2131e0f in lucene-solr's branch refs/heads/branch_7x from Toke Eskildsen\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c4acb33 ]\n\nSOLR-11240: Raise UnInvertedField internal limit ",
            "author": "ASF subversion and git services",
            "id": "comment-16136795"
        },
        {
            "date": "2017-08-22T13:33:27+0000",
            "content": "Patch has been applied to master and the commit cherry-picked from there to branch_7x. Thank you for the help here & on the mailing list. ",
            "author": "Toke Eskildsen",
            "id": "comment-16136803"
        },
        {
            "date": "2017-10-17T11:03:28+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16207321"
        }
    ]
}