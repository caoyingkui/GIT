{
    "id": "SOLR-7180",
    "title": "MiniSolrCloudCluster should startup and shutdown its jetties in parallel",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Followup to SOLR-7179.  Now JettySolrRunner doesn't use sysprops to pass configuration, we can start up multiple runners in parallel.",
    "attachments": {
        "SOLR-7180.patch": "https://issues.apache.org/jira/secure/attachment/12701740/SOLR-7180.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-01T21:25:37+0000",
            "author": "Alan Woodward",
            "content": "Patch.  With this change, MiniSolrCloudClusterTest went from taking 26s to taking 14s on my laptop. ",
            "id": "comment-14342468"
        },
        {
            "date": "2015-03-03T03:37:33+0000",
            "author": "Vamsee Yarlagadda",
            "content": "LGTM. One small concern.\n\nexecutor.invokeAll(startups);\nexecutor.invokeAll(shutdowns);\nHow do we know whether all the jetty runners came up/shutdown properly? invokeAll will return once the Future.isDone() on every task right. But it doesn't guarantee that there are no exceptions in the process. ",
            "id": "comment-14344457"
        },
        {
            "date": "2015-03-03T18:12:03+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Should we awaitTermination in shutdown too? Also, is there a reason why you don't call \"stopJettySolrRunner\"? ",
            "id": "comment-14345426"
        },
        {
            "date": "2015-03-05T09:48:49+0000",
            "author": "Alan Woodward",
            "content": "Calling awaitTermination shouldn't be necessary, because invokeAll() won't return until everything has finished, but it won't hurt anything and is a good check to have.  I'll add it in.\n\nI didn't use stopJettySolrRunner() because it relies on the position of a Jetty in the jettys list, which will not be constant if we're calling it in parallel.  It's probably worth clearing the list after everything's done though.\n\nError handling is a slightly tricky one.  Should we fail startup if one of the jetties doesn't start?  The behaviour at the moment isn't great - you'll get an exception if one of the starting jetties dies, but the already-started-up ones will keep running.  At close, I guess the nicest behaviour would be to collect all exceptions from the futures, and throw an IOException with any collected exceptions added as suppressed. ",
            "id": "comment-14348498"
        },
        {
            "date": "2015-03-05T14:58:43+0000",
            "author": "Alan Woodward",
            "content": "Patch with some error handling. ",
            "id": "comment-14348832"
        },
        {
            "date": "2015-03-09T20:52:33+0000",
            "author": "Alan Woodward",
            "content": "Thanks all! ",
            "id": "comment-14353580"
        },
        {
            "date": "2015-03-09T20:54:00+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1665353 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1665353 ]\n\nSOLR-7180: MiniSolrCloudCluster starts up and shuts down its jetties in parallel ",
            "id": "comment-14353582"
        },
        {
            "date": "2015-03-09T20:56:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1665355 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1665355 ]\n\nSOLR-7180: MiniSolrCloudCluster starts up and shuts down its jetties in parallel ",
            "id": "comment-14353587"
        }
    ]
}