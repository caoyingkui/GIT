{
    "id": "SOLR-2657",
    "title": "All fields returned if only psuedo fields are requested",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Koji mentioned this in a comment in SOLR-1298...\n\n\n\tfl= .. returns all stored fields (expected, backcompat)\n\tfl=* .. returns all stored fields (expected, backcompat)\n\tfl=score,* .. returns the score psuedo field and all stored fields (expected, backcompat)\n\tfl=score .. returns the score psuedo field and all stored fields (expected, backcompat)\n\tfl=score,price .. returns the score psuedo field and the stored price field (expected, backcompat)\n\tfl=log(price) .. returns the log(price) psuedo field (expected)\n\tfl=score,log(price) .. returns the score and log(price) psuedo fields as well as all of the stored fields (NOT EXPECTED)\n\n\n\nThe problem seems to be that when the entire fl is made up of psuedo fields, and one of them is score, the legacy behavior for an fl of only score is used (instead of recognizing that other \"fields\" were requested, so we should not output all stored fields",
    "attachments": {
        "SOLR-2657-test.patch": "https://issues.apache.org/jira/secure/attachment/12489909/SOLR-2657-test.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13081987",
            "date": "2011-08-09T23:01:03+0000",
            "content": "Patch with test demonstrating the problem "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13082018",
            "date": "2011-08-10T00:20:51+0000",
            "content": "Updated tests showing that the problem affects both functions and globs when used with \"score\" w/o real fields \u2013 but not transformers.\n\nI think the crux of the problem is this logic in ReturnFields...\n\n\n// Legacy behavior? \"score\" == \"*,score\"  Distributed tests for this\nif( fields.size() == 1 && _wantsScore ) {\n  _wantsAllFields = true;\n}\n\n\n\n...that situation isn't the only one where that if will evaluated to \"true\", because the code paths for globs and functions don't modify the \"fields\" list at all.\n\nI'm not really sure if this is a symptom of a larger problem or not \u2013 the class maintains both a \"Set<String> fields\" and a \"Set<String> okFieldNames\" \nI haven't yet fully grasped why we have both, and what they are used for but I do know that some code paths add to both, and other code paths only add to one or the other \u2013 \"addField\" adds to both, so code paths that use it (like in the transfomer case) work fine.\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13084918",
            "date": "2011-08-15T00:17:36+0000",
            "content": "Thanks for looking into this hoss.  Yes, i the crux of this is the support for: score==*,score\n\nI can get your tests to pass with:\n\n    if( fields.size() == 1 && _wantsScore && augmenters.size() == 1 && globs.isEmpty() ) {\n      _wantsAllFields = true;\n    }\n\n\n\nbut i think the better solution is to not deprecate score==*,score\n\n\n\t- - - -\n\n\n\nre okFieldNames vs fields.  The differece is that fields are the lucene field names that get returned from the SolrIndexSearcher \u2013 okFieldNames is the set of things that the ResponseWriters check before returning a field.\n\nI'll go ahead and commit this, and we can discuss deprecating the score syntax in a new issue.\n\nI'll also take a quick pass at adding comments and cleaning things up a bit in ReturnFields.\n\n\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13084926",
            "date": "2011-08-15T00:52:07+0000",
            "content": "Added in rev 1157687\nhttp://svn.apache.org/viewvc?view=revision&revision=1157687\n\nSee SOLR-2712 about removing this behavior "
        }
    ]
}