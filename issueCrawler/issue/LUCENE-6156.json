{
    "id": "LUCENE-6156",
    "title": "StackOverFlow error during parsing of a request",
    "details": {
        "resolution": "Not A Problem",
        "affect_versions": "4.10.2",
        "components": [
            "core/queryparser"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Critical",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "during parsing of a query send to lucene via elasticSearch 1.4.2, i encounter that stackOverFlow exception on RegExp.\nhere the stack trace\nCaused by: java.lang.StackOverflowError\nat java.util.BitSet.(BitSet.java:154)\nat org.apache.lucene.util.automaton.Automaton.(Automaton.java:75)\nat org.apache.lucene.util.automaton.Automata.makeString(Automata.java:273)\nat org.apache.lucene.util.automaton.RegExp.toAutomaton(RegExp.java:518)\nat org.apache.lucene.util.automaton.RegExp.findLeaves(RegExp.java:553)\nat org.apache.lucene.util.automaton.RegExp.findLeaves(RegExp.java:550)\nat org.apache.lucene.util.automaton.RegExp.findLeaves(RegExp.java:551)\nat org.apache.lucene.util.automaton.RegExp.findLeaves(RegExp.java:551)\n\nNote : the regular expression is quite large and contains only ascii character and '|' character. let me know,  If you need the value of the regular expression. This issue was firstly raise to elastic search component on github that use the 4.10.2 version of lucene and identify as a lucene issue.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14262959",
            "author": "Robert Muir",
            "date": "2015-01-02T15:46:27+0000",
            "content": "Can you supply the regular expression? "
        },
        {
            "id": "comment-14262966",
            "author": "Aurelien PISU",
            "date": "2015-01-02T15:53:41+0000",
            "content": "here the value of  regular expression sent to lucene. Note it was working with the version 10.6 of lucene \n\naaaaaaa|accpp2|adx|apn|auto|autres|bbbbbbbb|bch|bobsleigh|bopp|bretagne|ccko|ch|change|cme|cmx|cns|cp|cpt|credit|creditchec|csb|csb1|cxx|del|dom|eeeeeee|eric|etat|exe|exenot|fg|filtre|fourn|gb|gb2|gdd|gdd1|gdd2|gdd3|gh|giet|hub|ing|jha|jml|jpj|kiwi|lesautres|liasse|llc|lock|luge|lv01|mae|manhld|marge|mbt|mfg|mgtest|mkg|mkt|mls|mm|mm2|msl|myowncode|nature|niveau1|niveau2|niveau3|nivoj|nivok|nl|noacces|nochange|noexe|okmodif|par1|par2|parb|paris|pasokmodif|peseur1|peseur2|pp|pp2|proace|qualite|rep|salaires|sdr|ski|sophia|sordiv|sta|stats|sup|tbd|tbord|tdbcons|tdbexec|tdbmodif|test|testcce|testpp|topsecret|toto|trado|tttt|usua2|util|velo|vlt|xextmnt|xtest|xxx|yyy|za1|za2|za3|zcb|zeb|zhb|zinc|zqua|zz|zzcp|zzeb|zzjfl|zzlse|zzmb|zzmb1|zzmb2|zzmb3|zzmb4|zzzx|zzzz|zzzzz|_all "
        },
        {
            "id": "comment-14263465",
            "author": "Michael McCandless",
            "date": "2015-01-03T08:16:06+0000",
            "content": "Hmm, that stack trace is from Lucene 4.9.x not 4.10.x.  Maybe you saw this with Elasticsearch 1.3.x?\n\nLucene's regexp parsing/building is recursive, meaning it consumes one java stack frame per regexp operation (|, &, etc.).  This hasn't changed recently, e.g. it was the same way before LUCENE-5752, so I'm not sure why you saw it working with previous Lucene version (btw, 10.6 is not a valid Lucene version... can you re-check which Elasticsearch/Lucene version you saw this working on?).\n\nMaking this code non-recursive is likely not a great option ... it makes the code more complex.  For example, isFinite can also hit StackOverflowError, but we abandoned making it non-recursive in LUCENE-5659 because it increased code complexity.\n\nMaybe we should add a \"max regexp parts\" limit so you get a more sane exception for too-large regexps?  Similar to what we did for determinize in LUCENE-6046 ... "
        },
        {
            "id": "comment-14263536",
            "author": "Robert Muir",
            "date": "2015-01-03T13:49:14+0000",
            "content": "I don't think we should do that. In this case I think its elasticsearch's fault since it shrinks the jvm default stack size. I have zero sympathy here. "
        },
        {
            "id": "comment-14263541",
            "author": "Robert Muir",
            "date": "2015-01-03T14:03:03+0000",
            "content": "problem here is elasticsearch. "
        }
    ]
}