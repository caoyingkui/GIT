{
    "id": "SOLR-4580",
    "title": "Support for protecting content in ZK",
    "details": {
        "affect_versions": "4.2",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We want to protect content in zookeeper. \n\nIn order to run a CloudSolrServer in \"client-space\" you will have to open for access to zookeeper from client-space. \nIf you do not trust persons or systems in client-space you want to protect zookeeper against evilness from client-space - e.g.\n\n\tChanging configuration\n\tTrying to mess up system by manipulating clusterstate\n\tAdd a delete-collection job to be carried out by the Overseer\n\tetc\n\n\n\nEven if you do not open for zookeeper access to someone outside your \"secure zone\" you might want to protect zookeeper content from being manipulated by e.g.\n\n\tMalware that found its way into secure zone\n\tOther systems also using zookeeper\n\tetc.",
    "attachments": {
        "SOLR-4580.patch": "https://issues.apache.org/jira/secure/attachment/12589524/SOLR-4580.patch",
        "SOLR-4580_branch_4x_r1482255.patch": "https://issues.apache.org/jira/secure/attachment/12583133/SOLR-4580_branch_4x_r1482255.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Per Steffensen",
            "id": "comment-13602146",
            "date": "2013-03-14T08:57:55+0000",
            "content": "Early implemention thoughts\n\n\tYou have to actively do something to use protective ACLs - default will still be ZooDefs.Ids.OPEN_ACL_UNSAFE allover\n\tSeparate ACL-provider/factory component (for nice \"separation of concern\") with a default implementation (in time, if someone needs it, we can expose the ACL-provider/factory-implementation to be replaceable/pluggable from \"the outside\" - e.g. though solrconfig.xml). Default implementation could be something like this:\n\t\n\t\tOperate with two sets of \"digest\"-credentials (username/password-based) to be used for ZK access - internal-user and client-user\n\t\t\n\t\t\tinternal-user: Will be allowed to do anything in the solr-space in ZK\n\t\t\tclient-user: Read-only. Either allowed it to read-only anything in the solr-space in ZK, or tighten it a little and only allow it to read-only \"whatever is necessary for a CloudSolrServer to operate\" (e.g. not access to read Overseer stuff and configuration stuff)\n\t\t\n\t\t\n\t\n\t\n\tSolr-nodes will need to know about both internal-user and client-user credentials\n\t\n\t\tinternal-user to be used for its own connetions to ZK, and to create \"everything\"-ACLs for this internal-user on every znodes it creates\n\t\tclient-user to create \"read-only\"-ACLs for this client-user on every (or selected) znodes it creates\n\t\n\t\n\tCloudSolrServers used outside Solr-nodes will need client-user only, to be used on its ZK-connections, to be able to read necessary stuff\n\tZkCLI needs to know about internal-user credentials to be used for its own connections to ZK, and to create \"everything\"-ACLs for this internal-user on every znodes it creates\n\n "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13602149",
            "date": "2013-03-14T08:59:54+0000",
            "content": "Make a short description on Solr Security Wiki page about how to use "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13657109",
            "date": "2013-05-14T15:00:16+0000",
            "content": "Patch fitting branch_4x revision 1482255. A little bit of documentation on why the solution ended up as it did, how it works and how to use it will follow shortly - as a comment here or on Wiki. "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13670184",
            "date": "2013-05-30T09:44:17+0000",
            "content": "Documentation: https://wiki.apache.org/solr/Per%20Steffensen/ZooKeeper%20protecting%20content "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13691301",
            "date": "2013-06-23T00:48:33+0000",
            "content": "I'll review this issue. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13691338",
            "date": "2013-06-23T04:02:01+0000",
            "content": "Looks good, patch still applies and applies to trunk.\n\nI'll commit this soon unless someone has further comments. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13692624",
            "date": "2013-06-25T00:30:18+0000",
            "content": "Patch attached:\nI've made some very small tweaks/fixes and added a new dev start scripts that runs a cloud cluster against a secured zk. \n\nI tried to access the zk info without credentials from another zk tool with this setup - I could only see the root nodes, none of their children. I could not read the contents of the nodes. I could not delete nodes that had children (I could not see the children but got a relevant error when trying to delete nodes with children). \n\nOddly, it seems I could delete nodes with no children - for example cluster.json and alias.json. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13692634",
            "date": "2013-06-25T00:46:26+0000",
            "content": "Oddly, it seems I could delete nodes with no children - for example cluster.json and alias.json.\n\nI'm guessing this is perhaps because the root node has no permissions - and that's what lets me see the shallow listing to begin with - and what let's me do the delete - though that's still mildly surprising. In which case you want to protect the root node somehow or use a chroot. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14087877",
            "date": "2014-08-06T16:36:03+0000",
            "content": "I've updated this to trunk. Patch coming after I do some testing again. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14088512",
            "date": "2014-08-07T00:19:24+0000",
            "content": "Here is a patch updated to trunk.\n\nIf you try and use zk security without a chroot, it fails to start.\n\nI still have to test using custom zk security impls and review the way custom impls classloading is done. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14088515",
            "date": "2014-08-07T00:21:53+0000",
            "content": "Oh yeah, I also worked the cloud-dev script to test this manually into the exisiting standard scripts by using the new JAVA_OPTS support instead of a new one off script. This is also how you can make cloud-dev scripts work with HDFS and makes things much easier to test and maintain. "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-14088929",
            "date": "2014-08-07T07:12:05+0000",
            "content": "Happy to see some activity on this one. It might not be a feature that many will use - it is for the extra paranoid, but it would be nice to support it in Solr. We have been using it for a long time and it works like a charm. We use it with a chroot (/solr) so there might be a few things that need a twist if you want your solr stuff directly in the root of ZK. We dont want that because we have numerous other non-Solr stuff in ZK for which we use separate sets of username/password, so that the different applications do not accidently mess up or see each others ZK content. I would recommend in general that Solr users do not keep the Solr content directly in ZK root.\n\nThe support for custom impl is important for us. We are very paranoid and have an implementation where admins punch in password when they start Solr. The passwords are streamed into Solr and split secs after Solr has been started the passwords exist nowhere but in JVM memory. Not on command-line, not in config-files or any other places.\n\nIn lack of better ZK clients (let me know if you know any good ZK clients) I use http://www.massedynamic.org/mediawiki/index.php?title=Eclipse_Plug-in_for_ZooKeeper (update site: http://www.massedynamic.org/eclipse/updates/) Eclipse plugin for messing around in ZK. It is not perfect (can be a little slow at times), but it works ok. It might be of value for you to use that as well.\n\nLet me know if you need any help. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14088934",
            "date": "2014-08-07T07:18:48+0000",
            "content": "I would recommend in general that Solr users do not keep the Solr content directly in ZK root.\n\nStrong +1 from me on this.  I think a chroot should be in all the documentation and every SolrCloud example maintained by the project.  I can understand if that's not the way we go, but I really think we should. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14089275",
            "date": "2014-08-07T14:39:23+0000",
            "content": "If you try and use zk security without a chroot, it fails to start.\n\nI realize I may have been unclear here. It fails to start because I added code to make it so - if you attempt to configure zk/solr security and are not using a chroot, Solr throws an exception starting up telling you to use a chroot if you want to use zk/solr security. I did this simply because I'm worried about how easy it is to not actually have security working correctly at the root level.\n\nEverything is working as expected AFAIK though.\n\nMy only concern is reviewing any issues around loading custom imlpls - as we don't use the SolrResourceLoader, I just need to try it out manually and fully understand any implications of that. I understand SolrResourceLoader cannot easily be used because these custom impls are necessary for solrj clients and such, I just want to test and review for my own peace of mind. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14114255",
            "date": "2014-08-28T20:06:47+0000",
            "content": "It fails to start because I added code to make it so\n\nI pulled that out. The complication is not worth it. We should just doc the issue.\n\nI've changed it so that Solr itself uses the CoreContainer resource loader to load the impls using standard CoreContainer config. You can still use the sys props for things like CloudSolrServer and ZkCLI. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14115200",
            "date": "2014-08-29T12:30:55+0000",
            "content": "Commit 1621294 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1621294 ]\n\nSOLR-4580: Support for protecting content in ZooKeeper. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14115205",
            "date": "2014-08-29T12:39:55+0000",
            "content": "Commit 1621295 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1621295 ]\n\nSOLR-4580: Support for protecting content in ZooKeeper. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14115206",
            "date": "2014-08-29T12:40:32+0000",
            "content": "Thanks Per! "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14118751",
            "date": "2014-09-02T21:08:40+0000",
            "content": "This has broken the start scripts as well as the cloud-dev scripts. On starting solr using ./bin/solr -c, I see the following in the logs:\n\n\n2204 [main] ERROR org.apache.solr.servlet.SolrDispatchFilter  \u2013 Could not start Solr. Check solr/home property and the logs\n2224 [main] ERROR org.apache.solr.core.SolrCore  \u2013 null:java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n        at java.lang.String.substring(String.java:1954)\n        at org.apache.solr.core.ZkContainer.stripChroot(ZkContainer.java:199)\n        at org.apache.solr.core.ZkContainer.initZooKeeper(ZkContainer.java:104)\n        at org.apache.solr.core.ZkContainer.initZooKeeper(ZkContainer.java:64)\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:222)\n        at org.apache.solr.servlet.SolrDispatchFilter.createCoreContainer(SolrDispatchFilter.java:190)\n        at org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:137)\n        at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:119) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14120287",
            "date": "2014-09-03T19:15:42+0000",
            "content": "Commit 1622319 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1622319 ]\n\nSOLR-4580: fix strip chroot call. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14120297",
            "date": "2014-09-03T19:27:01+0000",
            "content": "Commit 1622325 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622325 ]\n\nSOLR-4580: fix strip chroot call. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14120309",
            "date": "2014-09-03T19:40:28+0000",
            "content": "Erick just mentioned he noticed we still have to deal with the case there is no trailing slash. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14120317",
            "date": "2014-09-03T19:46:01+0000",
            "content": "There's another problem here with the strip chroot call, I'm testing a fix now, will commit shortly if it works. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14120326",
            "date": "2014-09-03T19:51:50+0000",
            "content": "Commit 1622339 from Erick Erickson in branch 'dev/trunk'\n[ https://svn.apache.org/r1622339 ]\n\nSOLR-4580: fix a second problem with stripChroot call "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14120327",
            "date": "2014-09-03T19:52:47+0000",
            "content": "Commit 1622340 from Erick Erickson in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622340 ]\n\nSOLR-4580: fix a second problem with stripChroot call "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14120514",
            "date": "2014-09-03T21:40:57+0000",
            "content": "Is this right yet? If we have a root like a/b/c/ we'd get a return of a/b/c. OK, that's good\nbut \na/b/c would return a/b\n\nOr is multi-level root not possible in this case? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14272927",
            "date": "2015-01-11T15:21:11+0000",
            "content": "Whoops, firefox playing tricks on me. "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332872",
            "date": "2015-02-23T05:02:21+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}