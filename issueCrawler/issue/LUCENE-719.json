{
    "id": "LUCENE-719",
    "title": "IndexModifier does not support all APIs from IndexWriter/IndexReader",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "1.9,                                            2.0.0,                                            2.1",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "IndexModifer should probably provide all of the methods defined in both IndexReader and IndexWriter. Currently it does not (e.g., IndexReader.maxDoc() is not available).\n\nOne way to do this might be to have IndexReader and IndexWriter interfaces. For example:\n\npackage org.apache.lucene.index.interface;\n\npublic interface IndexReader {\n    ...\n    int maxDoc();\n    ...\n}\n\nThen the IndexReader and IndexWriter classes could implement those interfaces:\n\npackage org.apache.lucene.index;\n\npublic abstract class IndexReader implements org.apache.lucene.index.interface IndexReader {\n    ...\n    public int maxDoc() \n{\n        ...\n    }\n    ...\n}\n\nThe IndexModifier could then implement both:\n\npublic class IndexModifier implements org.apache.lucene.index.interface IndexReader,\n        org.apache.lucene.index.interface IndexWriter {\n    ...\n}\n\nAnywhere an IndexWriter or IndexReader was needed, one would require an object which implemented the appropriate interface:\n\npackage org.apache.lucene.index;\n\npublic class MultiReader extends IndexReader {\n    ...\n    MultiReader(org.apache.lucene.index.interface.IndexReader[] subReaders) {        ...    }\n    ...\n}\n\nJust a thought....",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2006-11-20T19:45:02+0000",
            "content": "The merrits of IndexWriter and IndexReader being interfaces not withstanding, the purpose of IndexModifier is to provide a simpler API for people then they would have if they dealt with both an IndexWriter and IndexReader ...  including all of the methods from both classes doesnt' really seem like it would achieve that goal.\n\nfrom the IndexModifier javadocs...\n\n      Not all methods of IndexReader and IndexWriter are offered by this class. If you need access to \n      additional methods, either use those classes directly or implement your own class that extends \n      IndexModifier.\n\n...there may be some methods recently added to IndexReader or IndexWriter which warrant addition to IndexModifier, but they should be considered individually.\n\nRegarding the specific example of maxDoc ... that seems like a method most \"high level\" clients that would use IndexModifier wouldn't need ... is there a particular case where a client is doing something low level evnough to need that method where they wouldn't already need to deal with an IndexReader directly anyway? ",
            "author": "Hoss Man",
            "id": "comment-12451395"
        },
        {
            "date": "2006-11-20T21:03:52+0000",
            "content": "Fair enough. Sorry, I missed that middle paragraph. I can't think of a reason to include maxDoc() off the top of my head. I just noticed it wasn't a part of the class. Thanks though for the consideration, and I apologize for not reading more carefully!  ",
            "author": "Matthew Bogosian",
            "id": "comment-12451418"
        },
        {
            "date": "2006-11-20T23:22:09+0000",
            "content": "\"won't fix\" forthe specific goal of supporting all methods ... any motivations for individual methods should be filed as seperate bugs. ",
            "author": "Hoss Man",
            "id": "comment-12451477"
        }
    ]
}