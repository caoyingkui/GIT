{
    "id": "LUCENE-3271",
    "title": "Move 'good' contrib/queries classes to Queries module",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "With the Queries module now filled with the FunctionQuery stuff, we should look at closing down contrib/queries.  While not a huge contrib, it contains a number of pretty useful classes and some that should go elsewhere.\n\nHeres my proposed plan:\n\n\n\tsimilar.* -> suggest module\n\tregex.* -> queries module\n\tBooleanFilter -> queries module under .filters package\n\tBoostingQuery -> queries module\n\tChainedFilter -> queries module under .filters package\n\tDuplicateFilter -> queries module under .filters package\n\tFieldCacheRewriteMethod -> This doesn't belong in this contrib or the queries module.  I think we should push it to contrib/misc for the time being.  It seems to have quite a few constraints on when its useful.  If indeed CONSTANT_SCORE_AUTO rewrite is better, then I dont see a purpose for it.\n\tFilterClause -> class inside BooleanFilter\n\tFuzzyLikeThisQuery -> suggest module. This class seems a mess with its Similarity hardcoded.  With all that said, it does seem to do what it claims and with some cleanup, it could be good.\n\tTermsFilter -> queries module under .filters package\n\tSlowCollated* -> They can stay in the module till we have a better place to nuke them.\n\n\n\nOne of the implications of the above moves, is that the xml-query-parser, which supports many of the queries, will need to have a dependency on the queries module.  But that seems unavoidable at this stage.",
    "attachments": {
        "LUCENE-3271-regex.patch": "https://issues.apache.org/jira/secure/attachment/12490382/LUCENE-3271-regex.patch",
        "LUCENE-3271-good-queries.patch": "https://issues.apache.org/jira/secure/attachment/12490400/LUCENE-3271-good-queries.patch",
        "LUCENE-3271-MLT.patch": "https://issues.apache.org/jira/secure/attachment/12486296/LUCENE-3271-MLT.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-07-01T01:21:47+0000",
            "content": "Thanks for working to clean this up! a few of my comments:\n\nsimilar.* -> suggest module\n\nSeems a little funky? I guess if we had a query-expansion module, I would think it belonged there.\n\n\nFieldCacheRewriteMethod -> This doesn't belong in this contrib or the queries module. I think we should push it to contrib/misc for the time being. It seems to have quite a few constraints on when its useful. If indeed CONSTANT_SCORE_AUTO rewrite is better, then I dont see a purpose for it.\n\nMy vote would actually be to move this to src/test!  Yeah there are some scenarios where this thing could be faster, but really I thought it was just a good way to add seek to the doctermsindex termsenum. I do think it and its test would be a nice addition to src/test, if someone wants to use it the can always snag it from there... its that expert.\n\n\nFuzzyLikeThisQuery -> suggest module. This class seems a mess with its Similarity hardcoded. With all that said, it does seem to do what it claims and with some cleanup, it could be good.\n\nI actually made some comments about this query in the flexscoring branch: http://svn.apache.org/repos/asf/lucene/dev/branches/flexscoring/lucene/contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.java\n\nIn my opinion, as a rewrite method (i think it would require 2, one for the variant that ignores TF), we could get better performance out of this with cleaner code... in other words you would just use ordinary FuzzyQuery and set this rewrite method for its scoring heuristic, or a BQ of FuzzyQueries if you are doing the expansion thing\n\n\nSlowCollated* -> They can stay in the module till we have a better place to nuke them.\n\nThis is all totally deprecated code that seems nice in contrib to reflect the fact that its not scalable...  I don't think its a huge issue where it goes due to the fact its deprecate and the name \n\nFinally, I wanted to say that its my opinion that we shouldn't put garbage in modules. Modules should be treated like core I think.... yet at the same time I totally support efforts to cleanup contrib, either removing sandy stuff or refactoring it where it belongs in a module.\n\nOne option could to create a sandbox directory either under lucene (it contains src/java and src/test but is totally an unorganized sandbox), or itself as a contrib temporarily (contrib/sandbox) and take a look at contrib and move stuff thats good into modules, but toss all the 'odd things' into this sandbox.  ",
            "author": "Robert Muir",
            "id": "comment-13058170"
        },
        {
            "date": "2011-07-01T02:39:14+0000",
            "content": "\nsimilar.* -> suggest module\n\nSeems a little funky? I guess if we had a query-expansion module, I would think it belonged there.\n\nMoreLikeThis makes suggestions  But okay.  Do you have other thoughts for what could go into a query-expansion module?  If so, then I'll go with it.  I just know that MLT doesn't belong with the queries anymore.\n\n\nFieldCacheRewriteMethod -> This doesn't belong in this contrib or the queries module. I think we should push it to contrib/misc for the time being. It seems to have quite a few constraints on when its useful. If indeed CONSTANT_SCORE_AUTO rewrite is better, then I dont see a purpose for it.\n\nMy vote would actually be to move this to src/test!  Yeah there are some scenarios where this thing could be faster, but really I thought it was just a good way to add seek to the doctermsindex termsenum. I do think it and its test would be a nice addition to src/test, if someone wants to use it the can always snag it from there... its that expert.\n\nsrc/test it is.\n\n\nIn my opinion, as a rewrite method (i think it would require 2, one for the variant that ignores TF), we could get better performance out of this with cleaner code... in other words you would just use ordinary FuzzyQuery and set this rewrite method for its scoring heuristic, or a BQ of FuzzyQueries if you are doing the expansion thing\n\nSo what are you suggesting? We could sandbox it for the time being (see my comments about sandbox below).\n\n\nFinally, I wanted to say that its my opinion that we shouldn't put garbage in modules. Modules should be treated like core I think.... yet at the same time I totally support efforts to cleanup contrib, either removing sandy stuff or refactoring it where it belongs in a module.\n\n+1 to all this.  I'm going to do a code cleanup on each of the classes to goes into the module. Test coverage will be looked into as well. At this stage I don't think any of the classes I've suggested moving to would be deemed garbage.\n\n\nOne option could to create a sandbox directory either under lucene (it contains src/java and src/test but is totally an unorganized sandbox), or itself as a contrib temporarily (contrib/sandbox) and take a look at contrib and move stuff thats good into modules, but toss all the 'odd things' into this sandbox.\n\nI actually really like the idea of a sandbox.  I think for simplicity, its best to make it a contrib.  That way we can easily get it up and running.  It also won't 'stain' anything that isn't already stained.\n\nAs part of this work, I'll push the SlowCollated* stuff to the sandbox, along with FuzzyLikeThis. ",
            "author": "Chris Male",
            "id": "comment-13058187"
        },
        {
            "date": "2011-07-13T11:20:33+0000",
            "content": "Patch that moves the contents of similar.* (MoreLikeThis) to .mlt in the queries module.\n\nUpdates dependencies, everything passes. ",
            "author": "Chris Male",
            "id": "comment-13064492"
        },
        {
            "date": "2011-07-13T11:20:52+0000",
            "content": "Command for MLT patch:\n\n\nsvn --parents move lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis*.java modules/queries/src/java/org/apache/lucene/queries/mlt/\nsvn --parents move lucene/contrib/queries/src/java/org/apache/lucene/search/similar/package.html modules/queries/src/java/org/apache/lucene/queries/mlt/\nsvn --parents move lucene/contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis.java modules/queries/src/test/org/apache/lucene/queries/mlt/TestMoreLikeThis.java\nsvn delete lucene/contrib/queries/src/java/org/apache/lucene/search/similar/\n\n ",
            "author": "Chris Male",
            "id": "comment-13064493"
        },
        {
            "date": "2011-07-14T02:05:46+0000",
            "content": "Better patch which fixes frustrating xml-query-parser javadoc issue.\n\nCommitting now. ",
            "author": "Chris Male",
            "id": "comment-13065005"
        },
        {
            "date": "2011-07-14T02:07:29+0000",
            "content": "MLT moved Committed revision 1146542. ",
            "author": "Chris Male",
            "id": "comment-13065007"
        },
        {
            "date": "2011-08-14T13:46:03+0000",
            "content": "Back on the wagon again.\n\nPatch moves the regex.* to the queries module.\n\nCommand coming up.\n\nEverything compiles, passes. ",
            "author": "Chris Male",
            "id": "comment-13084835"
        },
        {
            "date": "2011-08-14T13:46:45+0000",
            "content": "Command for regex patch:\n\n\nsvn move --parents lucene/contrib/queries/src/java/org/apache/lucene/search/regex/* modules/queries/src/java/org/apache/lucene/queries/regex/\nsvn move --parents lucene/contrib/queries/src/test/org/apache/lucene/search/regex/* modules/queries/src/test/org/apache/lucene/queries/regex/\nsvn move --parents lucene/contrib/queries/lib/* modules/queries/lib/\nsvn delete lucene/contrib/queries/src/test/org/apache/lucene/search/regex\nsvn delete lucene/contrib/queries/src/java/org/apache/lucene/search/regex\n\n ",
            "author": "Chris Male",
            "id": "comment-13084836"
        },
        {
            "date": "2011-08-14T16:17:35+0000",
            "content": "is regex a 'good' query? maybe we should put Slow in front of its name? ",
            "author": "Robert Muir",
            "id": "comment-13084858"
        },
        {
            "date": "2011-08-15T01:38:14+0000",
            "content": "Funny you say that, I was just thinking the same thing over night.  I might actually change my direction and sandbox it as it really is incredibly inefficient. ",
            "author": "Chris Male",
            "id": "comment-13084938"
        },
        {
            "date": "2011-08-15T03:07:22+0000",
            "content": "I'll leave the regex stuff aside for a bit.\n\nNew patch which moves remainder of good queries to their new homes.  Most are moved to the queries module.\n\nThis just leaves the bad eggs in the queries contrib.  I'll move them out next. ",
            "author": "Chris Male",
            "id": "comment-13084947"
        },
        {
            "date": "2011-08-15T03:08:11+0000",
            "content": "Command for patch:\n\n\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/FieldCacheRewriteMethod.java lucene/src/test/org/apache/lucene/search/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/TestFieldCacheRewriteMethod.java lucene/src/test/org/apache/lucene/search/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/BooleanFilter.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest.java modules/queries/src/test/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/FilterClause.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/TermsFilter.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/TermsFilterTest.java modules/queries/src/test/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/BoostingQuery.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/BoostingQueryTest.java modules/queries/src/test/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/ChainedFilterTest.java modules/queries/src/test/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/DuplicateFilterTest.java modules/queries/src/test/org/apache/lucene/queries/\n\n ",
            "author": "Chris Male",
            "id": "comment-13084948"
        },
        {
            "date": "2011-08-17T13:22:07+0000",
            "content": "In order to fix LUCENE-3378, I need to do part of this patch (move the FieldCacheRewriteMethod tests).\n\nI'll apply this locally to a separate checkout and then update the patch and instructions (as I figure you are close to committing) ",
            "author": "Robert Muir",
            "id": "comment-13086296"
        },
        {
            "date": "2011-08-17T13:26:35+0000",
            "content": "Okay! I'll be committing this in about 12hrs or so. ",
            "author": "Chris Male",
            "id": "comment-13086300"
        },
        {
            "date": "2011-08-17T13:46:14+0000",
            "content": "updated patch... i think it might be identical to the old one actually! \n\nbut here are the revised instructions:\n\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/BooleanFilter.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest.java modules/queries/src/test/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/FilterClause.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/TermsFilter.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/TermsFilterTest.java modules/queries/src/test/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/BoostingQuery.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter.java modules/queries/src/java/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/BoostingQueryTest.java modules/queries/src/test/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/ChainedFilterTest.java modules/queries/src/test/org/apache/lucene/queries/\nsvn move lucene/contrib/queries/src/test/org/apache/lucene/search/DuplicateFilterTest.java modules/queries/src/test/org/apache/lucene/queries/\n\n ",
            "author": "Robert Muir",
            "id": "comment-13086312"
        },
        {
            "date": "2011-08-18T02:37:09+0000",
            "content": "Committed revision 1158997.\n\nMoving on to deal with the remaining contents. ",
            "author": "Chris Male",
            "id": "comment-13086753"
        },
        {
            "date": "2011-08-18T08:15:21+0000",
            "content": "We've move the good queries, I'll deal with the remainder in a separate issue. ",
            "author": "Chris Male",
            "id": "comment-13086871"
        },
        {
            "date": "2011-08-18T09:29:58+0000",
            "content": "I think the DuplicateFilter should go back to sandbox for now, this one does not work correctly for a multi-segment index? ",
            "author": "Robert Muir",
            "id": "comment-13086910"
        },
        {
            "date": "2011-08-18T09:33:24+0000",
            "content": "Okay, will make a patch. ",
            "author": "Chris Male",
            "id": "comment-13086912"
        },
        {
            "date": "2011-08-18T12:31:53+0000",
            "content": "I've added moving DuplicateFilter to LUCENE-3381. ",
            "author": "Chris Male",
            "id": "comment-13086989"
        }
    ]
}