{
    "id": "SOLR-4503",
    "title": "Add REST API methods to get schema information: fields, dynamicFields, fieldTypes, and copyFields",
    "details": {
        "affect_versions": "4.1",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Sub-task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Add REST methods that provide properties for fields, dynamicFields, fieldTypes, and copyFields, using paths:\n\n/solr/(corename)/schema/fields\n/solr/(corename)/schema/fields/fieldname\n\n/solr/(corename)/schema/dynamicfields\n/solr/(corename)/schema/dynamicfields/pattern\n\n/solr/(corename)/schema/fieldtypes\n/solr/(corename)/schema/fieldtypes/typename \n\n/solr/(corename)/schema/copyfields",
    "attachments": {
        "copyfields.json": "https://issues.apache.org/jira/secure/attachment/12571899/copyfields.json",
        "SOLR-4503.patch": "https://issues.apache.org/jira/secure/attachment/12570811/SOLR-4503.patch",
        "all.dynamic.fields.json": "https://issues.apache.org/jira/secure/attachment/12571220/all.dynamic.fields.json",
        "coordinate.dynamic.field.json": "https://issues.apache.org/jira/secure/attachment/12571225/coordinate.dynamic.field.json",
        "date.field.type.json": "https://issues.apache.org/jira/secure/attachment/12571223/date.field.type.json",
        "all.field.types.json": "https://issues.apache.org/jira/secure/attachment/12571221/all.field.types.json",
        "all.fields.json": "https://issues.apache.org/jira/secure/attachment/12571222/all.fields.json",
        "price.field.json": "https://issues.apache.org/jira/secure/attachment/12571224/price.field.json"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Steve Rowe",
            "id": "comment-13586005",
            "date": "2013-02-25T17:14:29+0000",
            "content": "Patch implementing the idea.\n\nNo (functioning) tests yet.\n\nI've started the example server using the default solr home and the multicore solr home, and requests to all methods are functional from curl. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13586112",
            "date": "2013-02-25T18:41:28+0000",
            "content": "The patch adds two dependencies: Restlet and the Restlet servlet extension.  All REST methods are implemented as Restlet ServerResource subclasses, which delegate to new self-reporting methods on IndexField and FieldType, the implementation of which was inspired by/stolen from LukeRequestHandler.\n\nSolrDispatchFilter figures out the core, creates a SolrRequest and a SolrResponse, sets them on SolrRequestInfo's thread local, then passes the request (via filter chaining or request forwarding) to the Restlet servlet defined to handle schema requests.  Based on the URL path, the Restlet servlet's router then sends the request to the appropriate ServerResource subclass, where the response is filled in.\n\nThere is no RequestHandler involved in servicing these requests.\n\nI've turned off Restlet's content negotiation facilities in favor of using Solr's wt parameter to specify the ResponseWriter.\n\nAt present, both GET and HEAD requests work for all six requests.  (Restlet uses GET methods to service HEAD requests, so there was very little coding required to do this.) "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13586264",
            "date": "2013-02-25T20:47:14+0000",
            "content": "I'm interested in what other people think of using Restlet in Solr - this issue, in part, is about exploring how to do that.\n\nRestlet brings some baggage:\n\n\n\tNon-RequestHandler-based Restlet actions aren't available (as currently written anyway) via EmbeddedSolrServer, which only knows how to deal with requests that have RequestHandlers.\n\tRestlet's artifacts aren't deployed to Maven Central - instead, they host their own Maven repository.  I was worried that having dependencies drawn from 3rd party Maven repositories would cause trouble, so I deployed to the ASF staging repository a fake Solr release including the two Restlet dependencies in the Solr core POM, and the quality checks performed as part of \"closing\"  didn't flag this as a problem, so I think using Restlet will not block Lucene or Solr from deploying to Maven Central.\n\n\n\nRestlet should make some things easier, though, e.g. the PUT and DELETE methods are usable. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13587182",
            "date": "2013-02-26T15:00:08+0000",
            "content": "I have not looked at the patch yet, but in general, I like restlet. It's dual licensed right? One of the licenses compat with Apache? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13587209",
            "date": "2013-02-26T15:51:22+0000",
            "content": "I have not looked at the patch yet, but in general, I like restlet. It's dual licensed right? One of the licenses compat with Apache?\n\nIt's quintuply licensed: Apache 2.0 / LGPL 3.0 / LGPL 2.1 / CDDL 1.0 / EPL 1.0 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13587213",
            "date": "2013-02-26T15:56:34+0000",
            "content": "Oh nice, Apache 2 - pretty sure they did not offer that back when I was using it. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13587779",
            "date": "2013-02-27T00:20:47+0000",
            "content": "No, in depth review, but just took a few minutes to skim over the patch - from a high level, looking good! \n\nI think the restlet integration is fine.\n\nI'd love to redo the coreadmin/collections apis to be a bit more restful with restlet - not sure I want to deal with the back compat ramifications though. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13587790",
            "date": "2013-02-27T00:35:52+0000",
            "content": "No, in depth review, but just took a few minutes to skim over the patch - from a high level, looking good!\n\nThanks for taking a look.\n\nI think the restlet integration is fine.\n\nCool!  Since I want to use Restlet for other aspects of SOLR-3251, I thought it would be good to get it in sooner rather than later. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13588477",
            "date": "2013-02-27T16:30:45+0000",
            "content": "Darn... patch is already out of date.\nDo you have some examples of what responses look like? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13588537",
            "date": "2013-02-27T17:28:19+0000",
            "content": "Darn... patch is already out of date.\n\nI'll put up a more modern version, with most tests in place, in a little bit.\n\nDo you have some examples of what responses look like?\n\nYes, I do, attaching JSON responses for all six requests here.  I haven't investigated yet, but I believe there is an issue with copy fields in both the /schema/fields/ and /schema/dynamicfields/ responses, probably related to SOLR-3798, since I copied the functionality from LukeRequestHandler.  But otherwise, I think the response formats are stable now. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13588606",
            "date": "2013-02-27T18:38:26+0000",
            "content": "Here's my current state.  \n\nI refactored REST-friendly stuff out of TestHarness into BaseHarness, which is now extended by TestHarness and a new RestTestHarness. RestTestBase extends SolrJettyTestBase to provide HTTP-based (no SolrServer) test sugar: assertU, assertQ, assertJQ, etc.  \n\nI've also added the ability to JettySolrRunner to add extra passed-in servlets, and I use this functionality to add the Restlet servlet that services the six schema resource requests. \n\nThere is a test suite for each of the six resources, configured over schema15.xml and solrconfig.xml from solr/src/test-files/. \n\n'ant test' and 'ant precommit' pass for me.\n\nLeft to do:\n\n\n\tAdd checks for copy fields\n\tAdd checks for the includeDynamic=true functionality for the /schema/fields/ resources - this triggers a search for fields in the index that match dynamic field patterns and are not explicitly defined in the schema.  If \"fl\" fields are specified in the request, only those fields are sought in the index.\n\tAdd Maven dependencies for Restlet and the Restlet servlet extension\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13588610",
            "date": "2013-02-27T18:41:22+0000",
            "content": "One question: both /schema/fields and /schema/dynamicfields accept a \"fl\" query parameter to restrict the response to the given field(s)/pattern(s), but I didn't do the same for /schema/fieldtypes/, since that didn't seem to fit quite right.  Should I add this capability there, maybe with some other query parameter? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13591784",
            "date": "2013-03-03T16:51:52+0000",
            "content": "Looking good Steve!\n\nIt seems like there are multiple use-cases for the fields API...\n\n\tOne just wants to get all the info/properties for a field, and they don't care how that field is defined.\n   For example, they may want to look up field X to see if it's indexed, w/o having to worry about if it's a \"dynamic\" field or not.\n\tOne wants to get the actual definition definition in the schema (or as close to that as possible), and they would expect to see something very close to what they defined (or sent in using the fields API to create a new field). Showing all possible field properties like \"storeOffsetsWithPositions\" are going to be potentially confusing since people won't know what they mean and when/why they have to specify them when creating new fields.\n\n\n\nIt may be possible to satisfy everything with the same API by:\n\n\tonly returning non-default properties... so if you create an integer field with \"indexed=true\", that's pretty much all you get back.\n\thaving a parameter to allow requesting all \"look through\" properties.\n\tallowing the fields API to be used for dynamic fields also, but provide an indicator about what pattern matched\n\n\n\nAlso related: SOLR-4210\nWe should aim for being able to hit any node in the cluster w/o worrying about which nodes are hosting which collections.\n\nWe should probably also default to indented JSON output. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13592122",
            "date": "2013-03-04T11:01:47+0000",
            "content": "Thanks for the review, Yonik.\n\nIt seems like there are multiple use-cases for the fields API...\n\n\nOne just wants to get all the info/properties for a field, and they don't care how that field is defined.\nFor example, they may want to look up field X to see if it's indexed, w/o having to worry about if it's a \"dynamic\" field or not.\n\nI originally had code to do index lookup, but this API is about the schema, so I took it out, thinking that index queries didn't belong.\n\nallowing the fields API to be used for dynamic fields also, but provide an indicator about what pattern matched\n\nIn my current state I do have an \"includeDynamic\" query param for the /schema/fields/fieldname request, to report the matching dynamic field properties if fieldname isn't an explicitly declared field.\n\n\nOne wants to get the actual definition definition in the schema (or as close to that as possible), and they would expect to see something very close to what they defined (or sent in using the fields API to create a new field). Showing all possible field properties like \"storeOffsetsWithPositions\" are going to be potentially confusing since people won't know what they mean and when/why they have to specify them when creating new fields.\n\nonly returning non-default properties... so if you create an integer field with \"indexed=true\", that's pretty much all you get back.\nhaving a parameter to allow requesting all \"look through\" properties.\n\nGood idea, I'll do this.\n\n\nAlso related: SOLR-4210\nWe should aim for being able to hit any node in the cluster w/o worrying about which nodes are hosting which collections.\n\nSkimming Mark's patch modifying SolrDispatchFilter, I think the schema REST requests will already be proxied, but I'll test to be sure.\n\nWe should probably also default to indented JSON output.\n\nOK, I'll switch to that. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13592397",
            "date": "2013-03-04T17:41:53+0000",
            "content": "Patch, I think it's ready to go.  I've also attached updated example outputs.\n\nI've split off a new /schema/copyfields/ request, because it wasn't possible to attach copyFields with subset pattern dynamic field references off of anything in the /schema/fields/ structure.  /schema/copyfields/ also now contains maxChars, sourceDynamicBase and destDynamicBase, if applicable.  I had to refactor dynamic field handling in IndexSchema.java in order to fix a bug identified in SOLR-3798 - this refactoring+fix is included in this patch.\n\nBy default, all requests now exclude default properties.  A \"showDefaults\" query parameter causes them to be included in the response.\n\nBy default, all requests are indented JSON.\n\nThere are tests for everything, 'ant test' passes under Solr, 'ant precommit' passes, and I've added CHANGES.txt entries. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13593005",
            "date": "2013-03-05T03:24:01+0000",
            "content": "\nAlso related: SOLR-4210\nWe should aim for being able to hit any node in the cluster w/o worrying about which nodes are hosting which collections.\n\nI set up a cluster with two collections with different configurations so I could easily verify I was getting responses from the right collection.  Turns out that the schema info GET requests were being converted into POST requests as a side-effect of calling con.getOutputStream() in SolrDispatchFilter.remoteQuery(), and failing as a result.  In the patch snippet below, which is included in the attached patch, I skip forwarding the request body unless the original request's method is POST: \n\n\n@@ -353,13 +365,17 @@\n       try {\n         con.connect();\n \n-        InputStream is = req.getInputStream();\n-        OutputStream os = con.getOutputStream();\n-        try {\n-          IOUtils.copyLarge(is, os);\n-        } finally {\n-          IOUtils.closeQuietly(os);\n-          IOUtils.closeQuietly(is);  // TODO: I thought we weren't supposed to explicitly close servlet streams\n+        InputStream is;\n+        OutputStream os;\n+        if (\"POST\".equals(req.getMethod())) {\n+          is = req.getInputStream();\n+          os = con.getOutputStream(); // side effect: method is switched to POST\n+          try {\n+            IOUtils.copyLarge(is, os);\n+          } finally {\n+            IOUtils.closeQuietly(os);\n+            IOUtils.closeQuietly(is);  // TODO: I thought we weren't supposed to explicitly close servlet streams\n+          }\n         }\n         \n         resp.setStatus(con.getResponseCode());\n\n\n\nThe patch also contains some fixed tests for the schema REST API (I didn't update the tests after I removed printing of copyField maxChars when it's zero).\n\n'ant test' under Solr passes, as does 'ant precommit'.\n\nIf there are no objections, I'll commit this form of the patch in a day or so. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13593564",
            "date": "2013-03-05T16:46:06+0000",
            "content": "Steven, that may be a dumb question, but all your sample files have Content-Type: text/plain; charset=UTF-8, is that only for demonstration? because if we follow the RFC4627 it'd be: application/json  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13593610",
            "date": "2013-03-05T17:20:42+0000",
            "content": "Regarding JSON content type, this may be related to SOLR-1123 which makes the content-type configurable, but defaults to something that will display in a browser by default. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13593628",
            "date": "2013-03-05T17:29:46+0000",
            "content": "Awesome stuff Steve! "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13593638",
            "date": "2013-03-05T17:35:17+0000",
            "content": "(edit fixed location of {{ solrconfig.xml}})\n\n\nSteven, that may be a dumb question, but all your sample files have Content-Type: text/plain; charset=UTF-8, is that only for demonstration? because if we follow the RFC4627 it'd be: application/json\n\nRegarding JSON content type, this may be related to SOLR-1123 which makes the content-type configurable, but defaults to something that will display in a browser by default.\nYes, by default, the JSON response writer is used, and its configuration in solr/example/solr/collection1/conf/solrconfig.xml (which I used to generate all the example responses attached to this issue) is:\n\n\n<queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\">\n   <!-- For the purposes of the tutorial, JSON responses are written as\n    plain text so that they are easy to read in *any* browser.\n    If you expect a MIME type of \"application/json\" just remove this override.\n   -->\n  <str name=\"content-type\">text/plain; charset=UTF-8</str>\n</queryResponseWriter>\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13593706",
            "date": "2013-03-05T18:20:32+0000",
            "content": "Hmm, I just noticed that reported dynamic field properties include \"dynamicBase\", which is stupid:\n\n\ncurl 'http://localhost:8983/solr/schema/dynamicfields/*_i'\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":1},\n  \"dynamicfield\":{\n    \"name\":\"*_i\",\n    \"type\":\"int\",\n    \"indexed\":true,\n    \"stored\":true,\n    \"dynamicBase\":\"*_i\"}}\n\n\n\nThis patch fixes the problem by excluding \"dynamicBase\" when it's the same as the field \"name\". "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13593741",
            "date": "2013-03-05T18:43:36+0000",
            "content": "After the latest patch fixing removing inappropriate \"dynamicBase\" properties, attaching fixed example dynamic field responses. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13594365",
            "date": "2013-03-06T04:54:29+0000",
            "content": "[trunk commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1453161\n\nSOLR-4503: Add REST API methods to get schema information: fields, dynamicFields, fieldTypes, and copyFields.  Restlet 2.1.1 is integrated and is used to service these requests.\nAlso fixes bugs in dynamic copyField logic described in SOLR-3798.\nAlso fixes a bug with proxied SolrCloud requests (SOLR-4210) when using the GET method. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13594378",
            "date": "2013-03-06T05:14:32+0000",
            "content": "Committed:\n\n\ttrunk r1453161\n\tbranch_4x r1453162\n\n "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13594382",
            "date": "2013-03-06T05:24:28+0000",
            "content": "[branch_4x commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1453162\n\nSOLR-4503: Add REST API methods to get schema information: fields, dynamicFields, fieldTypes, and copyFields.  Restlet 2.1.1 is integrated and is used to service these requests.\nAlso fixes bugs in dynamic copyField logic described in SOLR-3798.\nAlso fixes a bug with proxied SolrCloud requests (SOLR-4210) when using the GET method.\n(merged trunk r1453161) "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653833",
            "date": "2013-05-10T10:33:07+0000",
            "content": "Closed after release. "
        }
    ]
}