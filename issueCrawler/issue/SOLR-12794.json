{
    "id": "SOLR-12794",
    "title": "FacetStream Improvements",
    "details": {
        "type": "Improvement",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [
            "streaming expressions"
        ],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None"
    },
    "description": "Parent Jira to track improvements intended for FacetStream expression\na) SOLR-12795: Introduce 'limit', and have 'bucketSizeLimit' separate applied at each level.\nb) SOLR-12910: Support JSON facet input string entirely as a parameter value.\nc) SOLR-11836: Use -1 in bucketSizeLimit to get all facets.\nd) SOLR-12911: Include \"refine\" param, default being \"false\".\ne) SOLR-12943: FacetStream should not always calculate branch level aggregations.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16624343",
            "content": "Maybe one for refine?\u00a0 ",
            "author": "Varun Thacker",
            "date": "2018-09-21T23:57:13+0000"
        },
        {
            "id": "comment-16624351",
            "content": "Also we should create a Jira to optimize the -1 case . We don't need to build the aggregations at every level\u00a0 ",
            "author": "Varun Thacker",
            "date": "2018-09-22T00:04:19+0000"
        },
        {
            "id": "comment-16624428",
            "content": "b, is quite interesting. Possible syntax:\n\nexpr=facet(collection, zkHost=\"\", q=\"*:*\", json=json.facet1)&json.facet1=...\n\nWe would still support the same facet parameters that are currently supported, which will work for many use cases. If someone needs the full power of the json facet API they can specify it in json. ",
            "author": "Joel Bernstein",
            "date": "2018-09-22T02:08:52+0000"
        }
    ]
}