{
    "id": "SOLR-5696",
    "title": "ConcurrentUpdateSolrServer.shutdown() should flush queue first",
    "details": {
        "affect_versions": "4.6.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The unstated semantics of SolrServer, an important SolrJ abstraction, is that you can call add(doc) some number of times and when all finished call shutdown().  Perhaps  commitWithinMs is specified or auto-commit is used on the server instead of explicit commits.\n\nBut this fails for ConcurrentUpdateSolrServer and perhaps others.  It fails because ConcurrentUpdateSolrServer.shutdown() shuts down the http connection as first order of business before shutting down the queue.  I think it should first call blockUntilFinished(), then shutdown the scheduler, and finally shutdown the http connection.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}