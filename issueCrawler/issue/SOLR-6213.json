{
    "id": "SOLR-6213",
    "title": "StackOverflowException in Solr cloud's leader election",
    "details": {
        "affect_versions": "4.10,                                            6.0",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "This is what's causing test hangs (at least on FreeBSD, LUCENE-5786), possibly on other machines too. The problem is stack overflow from looped calls in:\n\n\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:212)\n  > org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:163)\n  > org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:125)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:313)\n  > org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:221)\n  > org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:448)\n\n\n\nThese routines attempt to log information to loggers, which in turn attempts to serialize messages back to the master (test process). When the stack is exhausted the serialization process fails and breaks the communication with the master test node.",
    "attachments": {
        "stackoverflow.txt": "https://issues.apache.org/jira/secure/attachment/12732483/stackoverflow.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Dawid Weiss",
            "id": "comment-14047435",
            "date": "2014-06-30T06:54:16+0000",
            "content": "Note that stack overflows, much like running next to an OOM, is pretty much unfixable in Java since there's no control over the stack size and object allocation. Writing fully preallocated code is I think impossible (any call outside of the code requires a stack frame, so there'd be no way to communicate with the outside world). "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14047523",
            "date": "2014-06-30T10:26:28+0000",
            "content": "Commit 1606671 from Dawid Weiss in branch 'dev/trunk'\n[ https://svn.apache.org/r1606671 ]\n\nTemporarily disabling SSLMigrationTest; SOLR-6213 it's hanging the build server. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14047526",
            "date": "2014-06-30T10:28:53+0000",
            "content": "Commit 1606673 from Dawid Weiss in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1606673 ]\n\nTemporarily disabling SSLMigrationTest; SOLR-6213 it's hanging the build server. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14088850",
            "date": "2014-08-07T05:26:28+0000",
            "content": "More recent failures: \n\n\thttps://builds.apache.org/job/Lucene-Solr-Tests-4.x-Java7/2039/ (from SOLR-6285)\n\thttp://jenkins.thetaphi.de/job/Lucene-Solr-4.x-Linux/10846/\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14089202",
            "date": "2014-08-07T13:21:32+0000",
            "content": "This is pretty much a currently expected result / limitation of the system if no replica can become leader. They will keep retrying until stack overflow. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14118728",
            "date": "2014-09-02T20:55:39+0000",
            "content": "At least on a quick look the stack traces seem remarkably similar, accounting for the line number differences given 5692 is from 4.6.1. "
        },
        {
            "author": "Forest Soup",
            "id": "comment-14541349",
            "date": "2015-05-13T05:19:06+0000",
            "content": "Can we set a max re-try number instead of keep always trying until stack over flow? "
        },
        {
            "author": "Forest Soup",
            "id": "comment-14541350",
            "date": "2015-05-13T05:19:28+0000",
            "content": "I met the same issue within Solr 4.7.0.\nToo many recursive calls with below lines:\nat org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:399)\nat org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:259)\nat org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:164)\nat org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:108)\nat org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:289)\nat org.apache.solr.cloud.ShardLeaderElectionContext.rejoinLeaderElection(ElectionContext.java:399)\nat org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:259)\nat org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:164)\nat org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:108)\nat org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:289) "
        },
        {
            "author": "Forest Soup",
            "id": "comment-14541359",
            "date": "2015-05-13T05:26:28+0000",
            "content": "The stackoverflow exception is in the attachment. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14541958",
            "date": "2015-05-13T14:06:57+0000",
            "content": " Of course it should be improved. "
        }
    ]
}