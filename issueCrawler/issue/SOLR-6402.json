{
    "id": "SOLR-6402",
    "title": "OverseerCollectionProcessor should not exit for ZK ConnectionLoss",
    "details": {
        "affect_versions": "4.8,                                            6.0",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We saw an occurrence where we had some ZK connection blip and the OverseerCollectionProcessor thread stopped but the ClusterStateUpdater output some error but kept running, and the node didn't lose its leadership. this caused our collection work queue to back up.\n\nRight now OverseerCollectionProcessor's run method has on trunk:\n\n\n344           if (e.code() == KeeperException.Code.SESSIONEXPIRED\n345\t              || e.code() == KeeperException.Code.CONNECTIONLOSS) {\n346\t            log.warn(\"Overseer cannot talk to ZK\");\n347\t            return;\n348\t          }\nI think this if statement should only be for SESSIONEXPIRED. If it just experiences a connection loss but then reconnect before the session expired, it'll keep being the leader.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-14106275",
            "date": "2014-08-22T01:04:34+0000",
            "content": "Indeed! "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14106280",
            "date": "2014-08-22T01:09:34+0000",
            "content": "Any chance you have a stack trace or something?\n\nWhat surprises me is that commands should be retried passed expiration - that takes a bit of guesswork and padding, but I'm surprised a connectionloss leaked out that didn't lead to an expiration. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14106290",
            "date": "2014-08-22T01:20:19+0000",
            "content": "Commit 1619641 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1619641 ]\n\nSOLR-6402: OverseerCollectionProcessor should not exit for ZooKeeper ConnectionLoss. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14106293",
            "date": "2014-08-22T01:22:22+0000",
            "content": "Commit 1619643 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1619643 ]\n\nSOLR-6402: OverseerCollectionProcessor should not exit for ZooKeeper ConnectionLoss. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14106303",
            "date": "2014-08-22T01:28:06+0000",
            "content": "Commit 1619645 from Mark Miller in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1619645 ]\n\nSOLR-6402: OverseerCollectionProcessor should not exit for ZooKeeper ConnectionLoss. "
        },
        {
            "author": "Jessica Cheng Mallet",
            "id": "comment-14106324",
            "date": "2014-08-22T01:43:40+0000",
            "content": "Unfortunately since it just logs and return, I just have the log line\n\n\n2014-08-21 10:51:39,060 WARN [Overseer-164353762238923913-<scrubbed IP>:8983_solr-n_0000000757] OverseerCollectionProcessor.java (line 350) Overseer cannot talk to ZK\n\nUnfortunately, even though amILeader() tries to handle connection loss, there are lots of other operations past the if check that don't. E.g. all those workqueue manipulations. "
        },
        {
            "author": "Jessica Cheng Mallet",
            "id": "comment-14106325",
            "date": "2014-08-22T01:43:50+0000",
            "content": "And thanks for fixing!  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14106365",
            "date": "2014-08-22T02:17:43+0000",
            "content": "there are lots of other operations past the if check that don't. E.g. all those workqueue manipulations.\n\nThat should not be the case. All ZK manipulation should be through SolrZkClient, which should use ZkCmdExecutor to retry on connection loss passed expiration unless explicitly asked not to. "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14106378",
            "date": "2014-08-22T02:41:58+0000",
            "content": "All ZK manipulation should be through SolrZkClient, which should use ZkCmdExecutor\nAFAIR, that's the case. "
        },
        {
            "author": "Jessica Cheng Mallet",
            "id": "comment-14106433",
            "date": "2014-08-22T04:04:00+0000",
            "content": "\nAll ZK manipulation should be through SolrZkClient, which should use ZkCmdExecutor to retry on connection loss passed expiration unless explicitly asked not to.\nAh, I missed that.\n\nSo I took a look at ZkCmdExecutor.retryOperation(), we have this effect (for the default of 15s timeout and therefore retryCount=5):\ni     sleep\n0    0s\n1    1.5s\n2    3s\n3    4.5s\n4    6s\n\nwhich adds up to 15s, the timeout. However, what if on loop i=4, the operation threw connection loss again, but then since the sleep is at the end of the catch block, while it slept the last time for 6s, the client reconnected so the session didn't expire? Maybe the intended thing is to do retryDelay(i+1) so that it would've slept 1.5s when i=0,..., and 6s when i=3, but retry i=4 at the end of 15s?\n\nDisclaimer that I actually don't know that what I think may have happened happened at all, since, like I said, I only have that one log message and the fact that while OverseerCollectionProcessor died, the ClusterStateUpdater didn't die. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14106803",
            "date": "2014-08-22T13:05:27+0000",
            "content": "Commit 1619792 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1619792 ]\n\nSOLR-6402: Only exit the thread loop on a KeeperException if it's expiration. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14106806",
            "date": "2014-08-22T13:07:50+0000",
            "content": "Commit 1619794 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1619794 ]\n\nSOLR-6402: Only exit the thread loop on a KeeperException if it's expiration. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14106808",
            "date": "2014-08-22T13:09:12+0000",
            "content": "Commit 1619795 from Mark Miller in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1619795 ]\n\nSOLR-6402: Only exit the thread loop on a KeeperException if it's expiration. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14106813",
            "date": "2014-08-22T13:17:16+0000",
            "content": "Maybe the intended thing is to do\n\nYes! That sounds off. The intention is to try very hard to retry beyond expiration as we are guestimating time on the zk server. This is fairly important. I'll work on a test. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14106832",
            "date": "2014-08-22T13:47:15+0000",
            "content": "SOLR-6405 ZooKeeper calls can easily not be retried enough on ConnectionLoss. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14108414",
            "date": "2014-08-24T13:46:29+0000",
            "content": "Thanks Jessica! "
        }
    ]
}