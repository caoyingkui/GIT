{
    "id": "SOLR-7038",
    "title": "If no configset exists, CREATE leads to a 500 error with never-ending logging and 100% CPU usage",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "4.10.4",
            "5.0",
            "6.0"
        ],
        "affect_versions": "5.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "Here's what I did:\n\n\n> bin/solr start -e cloud -noprompt\n\n> curl http://localhost:8983/solr/admin/collections?action=CREATE&name=thisshouldfail&numShards=1&configset=thisisaninvalidconfigset&wt=json\n\n\n\nThe above led to a new collection named thisshouldfail, with the config-set as gettingstarted. This call should have failed as there was no configset by that name. Instead, it picked up the only config set it found and used it.\n\nThere's more to this. I'm not sure how related this is but looks like it to me.\n\n\n> bin/solr start -c\n\n> curl http://localhost:8983/solr/admin/collections?action=CREATE&name=thisshouldfail&numShards=1&configset=thisisaninvalidconfigset&wt=json\n\n\n\nThis led to a 900M (and growing) log file in addition to 100% CPU until I killed Solr.",
    "attachments": {
        "SOLR-7038.patch": "https://issues.apache.org/jira/secure/attachment/12694644/SOLR-7038.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-26T21:11:10+0000",
            "author": "Use account \"steve_rowe\" instead",
            "content": "I can repro both conditions on trunk from the source after running ant server.\n ",
            "id": "comment-14292418"
        },
        {
            "date": "2015-01-26T21:48:35+0000",
            "author": "Anshum Gupta",
            "content": "rookie error... while trying to create the collection, for some reason I passed the collection name as 'configset=' instead of 'collection.configName='  \n\nThe first use case is pretty much invalid but anything taking up 100% CPU and logs that grow to a few GBs in no time is bad so I'm looking at that now. ",
            "id": "comment-14292467"
        },
        {
            "date": "2015-01-26T21:58:34+0000",
            "author": "Anshum Gupta",
            "content": "CREATE call without any configset in SolrCloud:\nhttp://localhost:8983/solr/admin/collections?action=CREATE&name=thisshouldfail&numShards=1&collection.configName=thisisaninvalidconfigset\n\nHere's the exception that get's logged over and over again:\n\nINFO  - 2015-01-26 21:54:16.536; org.apache.solr.cloud.overseer.ClusterStateMutator; building a new cName: c1\nINFO  - 2015-01-26 21:54:16.536; org.apache.solr.cloud.overseer.ZkStateWriter; going to create_collection /collections/c1/state.json\nERROR - 2015-01-26 21:54:16.537; org.apache.solr.cloud.Overseer$ClusterStateUpdater; Exception in Overseer main queue loop\norg.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /collections/c1/state.json\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:111)\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n\tat org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)\n\tat org.apache.solr.common.cloud.SolrZkClient$9.execute(SolrZkClient.java:379)\n\tat org.apache.solr.common.cloud.SolrZkClient$9.execute(SolrZkClient.java:376)\n\tat org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:61)\n\tat org.apache.solr.common.cloud.SolrZkClient.create(SolrZkClient.java:376)\n\tat org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates(ZkStateWriter.java:163)\n\tat org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ZkStateWriter.java:91)\n\tat org.apache.solr.cloud.Overseer$ClusterStateUpdater.processQueueItem(Overseer.java:337)\n\tat org.apache.solr.cloud.Overseer$ClusterStateUpdater.run(Overseer.java:247)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\n\nand the trace from the response:\n\ntrace\": \"org.apache.solr.common.SolrException\\n\\tat org.apache.solr.handler.admin.CollectionsHandler.handleResponse(CollectionsHandler.java:737)\\n\\tat org.apache.solr.handler.admin.CollectionsHandler.handleResponse(CollectionsHandler.java:693)\\n\\tat org.apache.solr.handler.admin.CollectionsHandler.handleCreateAction(CollectionsHandler.java:870)\\n\\tat org.apache.solr.handler.admin.CollectionsHandler.handleRequestBody(CollectionsHandler.java:188)\\n\\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:144)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.handleAdminRequest(SolrDispatchFilter.java:736)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:261)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:204)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\\n\\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\\n\\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:497)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:313)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:626)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:546)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\",\n\"code\": 500\n\n ",
            "id": "comment-14292479"
        },
        {
            "date": "2015-01-26T23:07:56+0000",
            "author": "Anshum Gupta",
            "content": "I've manually tested this patch using the scripts. Currently running the tests.\n\nThis validates the config set (presence of one) and returns and exception if there's no config with the specified/derived name. ",
            "id": "comment-14292589"
        },
        {
            "date": "2015-01-26T23:51:50+0000",
            "author": "Anshum Gupta",
            "content": "I have the friendly (thanks to EZMock) OCPTest failing because of this one. Any help on this would be great. Mark Miller ? ",
            "id": "comment-14292661"
        },
        {
            "date": "2015-01-27T00:27:01+0000",
            "author": "Mark Miller",
            "content": "Patch that cleans up some formatting and files the OCP test to pass. ",
            "id": "comment-14292714"
        },
        {
            "date": "2015-01-27T00:39:18+0000",
            "author": "Anshum Gupta",
            "content": "Thanks Mark. ",
            "id": "comment-14292736"
        },
        {
            "date": "2015-01-27T02:10:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654942 from Anshum Gupta in branch 'dev/trunk'\n[ https://svn.apache.org/r1654942 ]\n\nSOLR-7038: Validate config set presence before trying to create a collection ",
            "id": "comment-14292849"
        },
        {
            "date": "2015-01-27T02:11:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654943 from Anshum Gupta in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1654943 ]\n\nSOLR-7038: Validate config set presence before trying to create a collection (merge from trunk) ",
            "id": "comment-14292851"
        },
        {
            "date": "2015-01-27T02:13:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1654946 from Anshum Gupta in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1654946 ]\n\nSOLR-7038: Validate config set presence before trying to create a collection (merge from branch_5x) ",
            "id": "comment-14292852"
        },
        {
            "date": "2015-02-23T05:00:56+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332609"
        },
        {
            "date": "2015-02-26T20:41:36+0000",
            "author": "Anshum Gupta",
            "content": "Reopening for backporting to 4.10.4. ",
            "id": "comment-14339126"
        },
        {
            "date": "2015-02-26T22:21:46+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1662589 from Anshum Gupta in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1662589 ]\n\nSOLR-7038: Validate config set presence before trying to create a collection (merge from branch_5x) ",
            "id": "comment-14339303"
        },
        {
            "date": "2015-03-05T15:36:25+0000",
            "author": "Michael McCandless",
            "content": "Bulk close for 4.10.4 release ",
            "id": "comment-14348900"
        }
    ]
}