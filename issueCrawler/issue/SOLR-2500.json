{
    "id": "SOLR-2500",
    "title": "TestSolrProperties sometimes fails with \"no such core: core0\"",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "3.2",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "[junit] Testsuite: org.apache.solr.client.solrj.embedded.TestSolrProperties\n    [junit] Testcase: testProperties(org.apache.solr.client.solrj.embedded.TestSolrProperties): Caused an ERROR\n    [junit] No such core: core0\n    [junit] org.apache.solr.common.SolrException: No such core: core0\n    [junit]     at org.apache.solr.client.solrj.embedded.EmbeddedSolrServer.request(EmbeddedSolrServer.java:118)\n    [junit]     at org.apache.solr.client.solrj.request.AbstractUpdateRequest.process(AbstractUpdateRequest.java:105)\n    [junit]     at org.apache.solr.client.solrj.embedded.TestSolrProperties.testProperties(TestSolrProperties.java:128)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1260)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1189)",
    "attachments": {
        "SOLR-2500.patch": "https://issues.apache.org/jira/secure/attachment/12479797/SOLR-2500.patch",
        "solr-clean.xml": "https://issues.apache.org/jira/secure/attachment/12479795/solr-clean.xml",
        "solr-after-1st-run.xml": "https://issues.apache.org/jira/secure/attachment/12479796/solr-after-1st-run.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13035070",
            "date": "2011-05-17T21:28:40+0000",
            "content": "I get crazy with that test...\n\nIt passes isolated, but fails on my machine every run together with other tests. "
        },
        {
            "author": "Doron Cohen",
            "id": "comment-13036242",
            "date": "2011-05-19T14:57:26+0000",
            "content": "From Eclipse (XP), passed at 1st attempt, failed at the 2nd!\n\nI am not familiar with this part of the code so it would be too much work to track it all the way myself, but I think I can now provide sufficient information for solving it.\n\nIn Eclipse, after cleaning the project the test passes, and then start failing in all successive runs. \nSo I assume when you run it isolated you also do clean, which covers Eclipse's clean (and more). \n\nI tracked the content of the cleaned relevant dir before and after the test - it is (trunk/)bin/solr - there's only one file that differs between the runs - this is bin/solr/shared/solr.xml.\n\nNot sure if this is a bug in the test not cleaning after itself or a bug in the code that reads the configuration...\n\nI'll attach here the two file so that you can compare them. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13036243",
            "date": "2011-05-19T15:00:46+0000",
            "content": "\nIn Eclipse, after cleaning the project the test passes, and then start failing in all successive runs. \n\nFYI This is the behavior I've noticed when running the test from Ant also... a 'clean' seems to workaround the issue... "
        },
        {
            "author": "Doron Cohen",
            "id": "comment-13036247",
            "date": "2011-05-19T15:06:49+0000",
            "content": "solr.xml files from trunk/bin/solr/shared:\n\n\tclean - with which the test passes.\n\tafter-1st-run - with which it fails.\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13036255",
            "date": "2011-05-19T15:33:42+0000",
            "content": "I guess the real question is: why doesn't the test work if rewritten like this?\n\nBug in TestHarness?\nBug in CoreContainer/properties loading functionality itself? "
        },
        {
            "author": "Doron Cohen",
            "id": "comment-13036288",
            "date": "2011-05-19T16:46:31+0000",
            "content": "FWIW, also the first clean run would fail if test's tearDown() is modified like this:\n\n\n-    persistedFile.delete();\n+    assertTrue(\"could not delete \"+persistedFile, persistedFile.delete());\n\n\n\nFor some reason it fails to remove that file - in both Linux and Windows. "
        },
        {
            "author": "Doron Cohen",
            "id": "comment-13036300",
            "date": "2011-05-19T17:00:26+0000",
            "content": "Oops just noticed I was testing all this time TestSolrProperties and not TestSolrCoreProperties, and, because the error message was the same as in the issue description \"No such core: core0\" I was sure that this is the same test... Now this is confusing...\n\nHmmm.. the original exception reported above is \n[junit] at org.apache.solr.client.solrj.embedded.TestSolrProperties.testProperties(TestSolrProperties.java:128)\n\nSo perhaps I was working on the correct bug after all and just the JIRA issue title is inaccurate?\nOr I need to call it a day... \n\nAnyhow, TestSolrProperties consistently behaves as I described here, while TestSolrCoreProperties consistently passes (when ran in standalone mode). "
        },
        {
            "author": "Michael McCandless",
            "id": "comment-13036318",
            "date": "2011-05-19T17:40:25+0000",
            "content": "For me, it's TestSolrProperties that reliably fails it's it's been run before.  Ie, it passes on first run after \"ant clean\" but then fails thereafter.\n\nTestSolrCoreProperties seems to run fine.\n\n(Fedora 13). "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13036319",
            "date": "2011-05-19T17:44:18+0000",
            "content": "OK, i think you might be right... TestSolrProperties is the one that just failed for me.\n\nI'll look into this test now (though I'm still confused about TestSolrCoreProperties but i'll let that be) "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13036328",
            "date": "2011-05-19T18:00:59+0000",
            "content": "The attached patch is a workaround for the issue for now, but we should fix the test to be \"cleaner\" as I don't like whats going on here.\n\nWhats happening is the test changes its solr.xml configuration file, which is in build/tests/solr/shared/solr.xml. The next time you run the tests, it wont copy over this file because it has a newer time.\n\nIn my opinion the test should really make its own private home so it won't meddle with other tests or have problems like this (we can fix the test to do this), but this is a simple intermediate fix if you guys don't mind testing it. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13036332",
            "date": "2011-05-19T18:03:33+0000",
            "content": "Its also worth mentioning this patch won't help eclipse at all, its only a workaround for ant at the moment. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13036333",
            "date": "2011-05-19T18:03:56+0000",
            "content": "I don't have much time to look at this right now (and I don't really know the test), but I just tried running it directly from intellij and that failed also.\n\nFirst, note that it tries to use something off the CWD... but then the core container is created under build/tests:\n\nINFO: pwd: /opt/code/lusolr/.\n2011-05-19 20.52.58 org.apache.solr.core.CoreContainer <init>\nINFO: New CoreContainer 746169063\n2011-05-19 20.52.58 org.apache.solr.core.SolrResourceLoader <init>\nINFO: Solr home set to '/opt/code/lusolr/solr/build/tests/solr/shared/'\n2011-05-19 20.52.58 org.apache.solr.core.SolrResourceLoader <init>\n\n\n\nThis causes a problem when it comes time to delete later:\n\nWARNING: !!!! WARNING: best effort to remove /opt/code/lusolr/solr/shared/data FAILED !!!!!\n\n\n\nOf course the weird thing is that tearDown() only tries to delete the data directory and not the whole solr home... this seems incorrect?\nThat would lead to leaving around an old solr.xml file (since it's outside the data directory) and could cause issues the next time the test is run.\n\nedit: crossed messages w/ robert above - looks like the issue has already been found+fixed. "
        },
        {
            "author": "Michael McCandless",
            "id": "comment-13036334",
            "date": "2011-05-19T18:03:57+0000",
            "content": "Fix works for me!! "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13036338",
            "date": "2011-05-19T18:09:14+0000",
            "content": "ok, so really the right way to fix this I think, is to ensure the test is only working from its private dir and copies stuff it needs in there.\n\nThen this will work fine from the IDE too (the patch only causes ant to recopy a clean version the next time you run 'test') "
        },
        {
            "author": "Doron Cohen",
            "id": "comment-13036426",
            "date": "2011-05-19T20:19:53+0000",
            "content": "Attached patch, test passes now in both IDE and cmd line:\n\n\n\tat setup() copies solr.xml to a private file.\n\n\n\n\n\tuse that private file as its solr.solr.home.\n\n\n\n\n\terase that file at tearDown(), though not erasing it\n  should not affect on further/re/tests.\n\n\n\n\n\tfixes the deletion at tearDown() to look at\n  solr.solr.home rather than solr.home.\n  (I think this was a bug on a bug in this test - it used the\n  original file at s.s.h but for cleanup \n  attempted to remove files from just s.h.\n\n\n\nThis debugging took place in pure darkness, better review... "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13036454",
            "date": "2011-05-19T21:00:30+0000",
            "content": "I ran the TestSolrProperties test case alone, without the patch, from both Maven and IntelliJ, and I get the same behavior: it passes once, then fails on every successive attempt, unless \"clean\" is performed first.\n\nWith the patch applied, the test passes under both IntelliJ and Maven, regardless of whether \"clean\" is performed first. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13036462",
            "date": "2011-05-19T21:06:15+0000",
            "content": "+1 to commit! Thanks Doron! "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13036473",
            "date": "2011-05-19T21:16:28+0000",
            "content": "fixed title "
        },
        {
            "author": "Doron Cohen",
            "id": "comment-13037589",
            "date": "2011-05-22T12:31:22+0000",
            "content": "fixed in trunk: r1125932.\nmerged to 3x: r1125942. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043602",
            "date": "2011-06-03T16:44:57+0000",
            "content": "Bulk close for 3.2 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061540",
            "date": "2011-07-07T19:51:57+0000",
            "content": "On Windows 7 using Oracle JDK 1.6.0_21, TestSolrProperties#testProperties() is consistently failing for me, both individually and with all Solr tests, and Ant and in IntelliJ:\n\n\njava.lang.AssertionError: Failed to delete C:\\svn\\lucene\\dev\\trunk\\solr\\build\\tests\\solr\\shared\\solr-persist.xml\n\tat org.junit.Assert.fail(Assert.java:91)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.apache.solr.client.solrj.embedded.TestSolrProperties.tearDown(TestSolrProperties.java:107)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n\tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1430)\n\tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1348)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\nThe failure is in TestSolrProperties.tearDown():\n\n\n107: assertTrue(\"Failed to delete \"+persistedFile, persistedFile.delete());\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061549",
            "date": "2011-07-07T20:05:13+0000",
            "content": "I can get this failure to consistently succeed by calling System.gc() prior to the attempt to delete the file.\n\nAny objections to adding this? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061553",
            "date": "2011-07-07T20:06:57+0000",
            "content": "Reopening to address Windows test failure. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13061557",
            "date": "2011-07-07T20:10:33+0000",
            "content": "seems like calling gc() is just masking the problem? we should hunt down which finalizer is closing the file and explicitly close instead / fix the leak? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061580",
            "date": "2011-07-07T20:50:39+0000",
            "content": "seems like calling gc() is just masking the problem? we should hunt down which finalizer is closing the file and explicitly close instead / fix the leak?\n\nI agree.\n\nI tracked down the actual file activity to SolrXMLSerializer.persistFile() - this class was created as part of SOLR-2331, which Mark M. committed 2 days ago; the timing makes it the likely culprit. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061633",
            "date": "2011-07-07T22:34:27+0000",
            "content": "I attached a patch with a fix to SOLR-2331, which introduced the problem. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13157878",
            "date": "2011-11-27T12:38:10+0000",
            "content": "Bulk cose after release of 3.2 "
        }
    ]
}