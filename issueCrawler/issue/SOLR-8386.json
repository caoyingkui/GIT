{
    "id": "SOLR-8386",
    "title": "The new admin UI doesn't understand that managed schemas are the default in 6.0",
    "details": {
        "components": [
            "Admin UI"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "affect_versions": "6.0",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "SOLR-8131 makes managed schema the default in Solr 6.0. So the \"add field\" & etc buttons aren't being shown in the schema link as they are in 5.x (5.4+).\n\nNote, all the configsets in 5.5+ are managed, as they are in 6.x The difference is that you do not need to specify anything special in 6x. \n\nSo whatever the key that determines whether the admin UI knows the schema is managed or not probably needs to be updated.\n\nUpayavira any hints here?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-08T08:56:21+0000",
            "author": "Varun Thacker",
            "content": "The difference is that you do not need to specify anything special in 6x.\n\nThe difference is that when no schemaFactory is specified in the solrconfig.xml file then ManagedSchemaFactory will be used as opposed to ClassicSchemaFactory starting 6.0 ",
            "id": "comment-15046597"
        },
        {
            "date": "2015-12-08T09:27:26+0000",
            "author": "Upayavira",
            "content": "This is what does it:\n\n            Config.get({core: $routeParams.core}, function(data) {\n                $scope.isSchemaUpdatable = data.config.schemaFactory.class == \"ManagedIndexSchemaFactory\";\n            });\n\n\n\ni.e. it calls the config API, and looks to see what schema factory is configured. If it is the Managed one, then it switches on those buttons.\n\nConfig.get() calls /solr/<collection>/config - what do you get from calling that URL, especially inside config.schemaFactory? ",
            "id": "comment-15046634"
        },
        {
            "date": "2015-12-09T12:16:36+0000",
            "author": "Varun Thacker",
            "content": "Hi Upayavira ,\n\nIn trunk , if no schema factory is specified then ManagedIndexSchemaFactory is used by default. \n\nWith some googling , I modified the check to be this $scope.isSchemaUpdatable = (data.config.hasOwnProperty('schemaFactory') == false || data.config.schemaFactory.class == \"ManagedIndexSchemaFactory\"); and the add field option appears with the change. ",
            "id": "comment-15048595"
        },
        {
            "date": "2015-12-09T12:55:48+0000",
            "author": "Upayavira",
            "content": "Fantastic - commit it!! ",
            "id": "comment-15048629"
        },
        {
            "date": "2015-12-09T13:13:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1718849 from Varun Thacker in branch 'dev/trunk'\n[ https://svn.apache.org/r1718849 ]\n\nSOLR-8386: Add field option in the admin ui loads up even when no schemaFactory has been specified since the default is ManagedIndexSchemaFactory ",
            "id": "comment-15048649"
        },
        {
            "date": "2015-12-09T13:14:28+0000",
            "author": "Varun Thacker",
            "content": "Thanks Upayavira  for pointing out where to fix and Erick for reporting the issue! ",
            "id": "comment-15048650"
        }
    ]
}