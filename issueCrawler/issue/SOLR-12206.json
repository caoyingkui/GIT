{
    "id": "SOLR-12206",
    "title": "SolrCLI can swallow all information about an exception from a request to Solr",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "scripts and tools"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "7.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "User got an NPE when trying to create a core, no useful information:\n\n\n$ /usr/local/solr/bin/solr create -V -c new_core\n\nWARNING: Using _default configset with data driven schema functionality.\nNOT RECOMMENDED for production use.\n         To turn off: bin/solr config -c new_core -p 8983 -property\nupdate.autoCreateFields -value false\nException in thread \"main\" java.lang.NullPointerException\n\tat org.apache.solr.util.SolrCLI.getJson(SolrCLI.java:731)\n\tat org.apache.solr.util.SolrCLI.getJson(SolrCLI.java:642)\n\tat org.apache.solr.util.SolrCLI$CreateTool.runImpl(SolrCLI.java:1773)\n\tat org.apache.solr.util.SolrCLI$ToolBase.runTool(SolrCLI.java:176)\n\tat org.apache.solr.util.SolrCLI.main(SolrCLI.java:282)\n\n\n\nLooking at the code, this happened because SolrCLI got a ClientProtocolException in its call to HttpClient, but that exception did NOT have a message string attached, so when the code in the catch block tried to look at the message, it threw NPE.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-09T23:57:15+0000",
            "content": "We should not assume that the exception will have a message.  Patch that might fix it:\n\n\ndiff --git a/solr/core/src/java/org/apache/solr/util/SolrCLI.java b/solr/core/src/java/org/apache/solr/util/SolrCLI.java\nindex a768a32157..f6c9df664f 100644\n--- a/solr/core/src/java/org/apache/solr/util/SolrCLI.java\n+++ b/solr/core/src/java/org/apache/solr/util/SolrCLI.java\n@@ -728,9 +728,14 @@ public class SolrCLI {\n     } catch (ClientProtocolException cpe) {\n       // Currently detecting authentication by string-matching the HTTP response\n       // Perhaps SolrClient should have thrown an exception itself??\n-      if (cpe.getMessage().contains(\"HTTP ERROR 401\") || cpe.getMessage().contentEquals(\"HTTP ERROR 403\")) {\n-        int code = cpe.getMessage().contains(\"HTTP ERROR 401\") ? 401 : 403; \n-        throw new SolrException(SolrException.ErrorCode.getErrorCode(code), \n+      String msg = null;\n+      if (cpe != null)\n+      {\n+        msg = cpe.getMessage();\n+      }\n+      if (msg != null && (msg.contains(\"HTTP ERROR 401\") || msg.contentEquals(\"HTTP ERROR 403\"))) {\n+        int code = msg.contains(\"HTTP ERROR 401\") ? 401 : 403;\n+        throw new SolrException(SolrException.ErrorCode.getErrorCode(code),\n             \"Solr requires authentication for \" + getUrl + \". Please supply valid credentials. HTTP code=\" + code);\n       } else {\n         throw cpe;\n\n ",
            "author": "Shawn Heisey",
            "id": "comment-16431520"
        },
        {
            "date": "2018-04-10T00:00:08+0000",
            "content": "The user in this situation had enabled SSL on their Solr instance.\u00a0 My best guess about what happened is that HttpClient was unable to validate the certificate sent by the server.\n\n\u00a0 ",
            "author": "Shawn Heisey",
            "id": "comment-16431521"
        },
        {
            "date": "2018-04-10T00:07:54+0000",
            "content": "The patch above is against the 7.3 branch.\u00a0 I have not yet checked whether it will apply cleanly to master. ",
            "author": "Shawn Heisey",
            "id": "comment-16431530"
        }
    ]
}