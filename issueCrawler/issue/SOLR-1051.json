{
    "id": "SOLR-1051",
    "title": "Support the merge of multiple indexes",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This is to support the merge of multiple indexes.",
    "attachments": {
        "SOLR-1051.patch": "https://issues.apache.org/jira/secure/attachment/12402006/SOLR-1051.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ning Li",
            "id": "comment-12681144",
            "date": "2009-03-12T02:17:20+0000",
            "content": "\"AddIndexes\" is exposed as a CoreAdmin command, as Shalin suggested.\n\n\tAs a CoreAdmin command, should \"addIndexes\" go through the update processor chain? If so, should it be exposed as an update command?\n\tShould \"commit\" be called at the end of \"addIndexes? Note that \"commit\" is not a CoreAdmin command.\n\n "
        },
        {
            "author": "Ning Li",
            "id": "comment-12681727",
            "date": "2009-03-13T14:20:25+0000",
            "content": "Any comments? In the current patch, addIndexes goes to the update handler directly so not through the update processor chain, and commit is not called at the end. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12681807",
            "date": "2009-03-13T15:17:25+0000",
            "content": "The update processor has primarily been for documents not whole indexes.... still, if an update processor were keeping track of changes to the index, or what documents were in the index, then a merge event like this could be important.\n\nI think perhaps \"merge\" might be a better name than \"add\" though, since we may want to allow a core to have multiple lucene indexes in the future? "
        },
        {
            "author": "Ning Li",
            "id": "comment-12681816",
            "date": "2009-03-13T16:07:02+0000",
            "content": "Having \"add/mergeIndexes\" go through the update processor chain makes sense. But I'll keep it a CoreAdmin command since non-admin users probably shouldn't issue the command.\n\nI thought the difference between \"merge\" and \"add\" is that, e.g. given indexA and indexB, merge(indexA, indexB) vs. indexA.add(indexB). A new searcher on indexA will see indexB in case of \"add\", and won't in case of \"merge\". But if you think indexA.merge(indexB) is fine, I can rename it. "
        },
        {
            "author": "Ning Li",
            "id": "comment-12694669",
            "date": "2009-04-01T18:25:49+0000",
            "content": "Finally get back to this. Here is the new patch.\n\n\tRename \"addIndexes\" to \"mergeIndexes\".\n\t\"MergeIndexes\" now goes through the update process chain.\nComments are welcome.\n\n "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12699885",
            "date": "2009-04-16T21:37:52+0000",
            "content": "Shouldn't we have:\nindexC = merge(A, B), leaving A and B unmodifie\n\nIsn't that the most flexible approach? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12699923",
            "date": "2009-04-16T23:25:38+0000",
            "content": "indexC = merge(A, B), leaving A and B unmodified\n\nIf you just want to add one index to another though, this would be more expensive as both indexes would need to be copied. "
        },
        {
            "author": "Ning Li",
            "id": "comment-12699955",
            "date": "2009-04-17T01:25:14+0000",
            "content": "indexC = merge(A, B), leaving A and B unmodified\n\nThanks for the comments! With the current approach, you can achieve this by creating an empty index C then merging A and B into C, no? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12713045",
            "date": "2009-05-26T15:05:52+0000",
            "content": "Patch updated to trunk. The CoreAdminHandler refactoring in SOLR-1106 had broken this.\n\nThe javadocs of IW.addIndexesNoOptimize say that an IW should not be opened on the source indexes. I guess the use-case behind this feature takes care of this? If opening an IW on the source indexes can lead to corruption of the target index, is there any way to avoid it?\n\nI think this patch is ready for commit.  We'd need to record the above warning on the wiki when we add details about this command. If there are no objections, I'll commit in a day or two. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12713860",
            "date": "2009-05-28T04:16:58+0000",
            "content": "Committed revision 779423.\n\nThanks Ning! "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12714942",
            "date": "2009-06-01T00:08:50+0000",
            "content": "I got NPE when trying to MERGEINDEXES:\n\nhttp://localhost:8983/solr/admin/cores?action=MERGEINDEXES&core=core0&indexDirs=indexname\n\njava.lang.NullPointerException\n\tat org.apache.solr.update.processor.RunUpdateProcessor.<init>(RunUpdateProcessorFactory.java:55)\n\tat org.apache.solr.update.processor.RunUpdateProcessorFactory.getInstance(RunUpdateProcessorFactory.java:43)\n\tat org.apache.solr.update.processor.UpdateRequestProcessorChain.createProcessor(UpdateRequestProcessorChain.java:55)\n\tat org.apache.solr.handler.admin.CoreAdminHandler.handleMergeAction(CoreAdminHandler.java:191)\n\tat org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(CoreAdminHandler.java:151)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:131)\n\tat org.apache.solr.servlet.SolrDispatchFilter.handleAdminRequest(SolrDispatchFilter.java:301)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:174)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)\n\tat org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)\n\tat org.mortbay.jetty.Server.handle(Server.java:285)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:821)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:513)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)\n\tat org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:226)\n\tat org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)\n\nSolr was started by:\n\n$ cd example\n$ java -Dsolr.solr.home=./multicore -jar start.jar\n\nThe cause of NPE is RunUpdateProcessor trys to get UpdateHandler via SolrCore, but core is null in req:\n\n\n  public RunUpdateProcessor(SolrQueryRequest req, UpdateRequestProcessor next) {\n    super( next );\n    this.req = req;\n    this.updateHandler = req.getCore().getUpdateHandler();\n  }\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12715030",
            "date": "2009-06-01T08:51:57+0000",
            "content": "Since SOLR-1121, core admin commands do not get a core. So calling an UpdateProcessor through a core admin command cannot work. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12715031",
            "date": "2009-06-01T09:18:41+0000",
            "content": "The test case passed because it was using an EmbeddedSolrServer which creates SolrQueryRequest objects with the current core. The logic in SolrDispatchFilter has been changed to not create a special AdminCore.\n\nI'm wondering if it makes sense to have the UpdateProcessor hooks at all. Even in the previous scheme, the first core was designated as the admin core. Therefore, keeping track of merges through an update processor would require one to setup his update processor on the first core defined in solr.xml.\n\nHow about we remove the UpdateProcessor hooks for merge command? Thoughts? "
        },
        {
            "author": "Ning Li",
            "id": "comment-12715600",
            "date": "2009-06-02T17:37:05+0000",
            "content": "In the current approach, mergeIndexes is an admin command and the target core should be online. I haven't looked into the SolrDispatchFilter logic change, but it seems with this change, the following are the two valid options:\n\n\tmergeIndexes is an update command and the target core should be online\n\tmergeIndexes is an admin command and the target core should be offline\n\n\n\nThe first option is close to what we have now. I like it a bit more because you keep track of the merge by going through UpdateProcessor. But you seem to prefer the second option? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12716167",
            "date": "2009-06-04T06:07:51+0000",
            "content": "A few suggestions:\n\n\n\tThere should be a provision to merge one core w/ another. According to me  the most common usecase would be to create a core , add docs to that , and then just merge it into the main core which is serving requests. This way, the user will not need to touch the filesystem of directly.\n\tThe indexDirs parameter should not be comma separated values. http request can accept multiple values for same parameter\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12716173",
            "date": "2009-06-04T06:30:26+0000",
            "content": "I like it a bit more because you keep track of the merge by going through UpdateProcessor.\n\nI see your point. I'll give a patch which passes the target core into the request.\n\n\n\n\tThere should be a provision to merge one core w/ another. According to me the most common usecase would be to create a core , add docs to that , and then just merge it into the main core which is serving requests. This way, the user will not need to touch the filesystem of directly.\n\tThe indexDirs parameter should not be comma separated values. http request can accept multiple values for same parameter\n\n\n\nAgree on both. I'll commit the fix and #2 first since the feature in trunk is broken. Then we can work on adding #1 which requires more changes. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12716185",
            "date": "2009-06-04T07:29:24+0000",
            "content": "\n\tFix for NPE: Wrap the SolrQueryRequest proving the target core\n\tChange comma separated params to multiple params\n\n\n\nI'll commit this shortly. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12716205",
            "date": "2009-06-04T09:08:15+0000",
            "content": "Committed revision 781688. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12738663",
            "date": "2009-08-03T23:03:46+0000",
            "content": "Can this be closed? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12738948",
            "date": "2009-08-04T12:33:27+0000",
            "content": "Merging cores is the part which is left. I think it needs more thought/discussion before it can be implemented. I'll close this one and open another issue for 1.5 about merging cores. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12738963",
            "date": "2009-08-04T13:11:23+0000",
            "content": "I've opened SOLR-1331 for the missing piece. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775680",
            "date": "2009-11-10T15:51:58+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}