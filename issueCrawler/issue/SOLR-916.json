{
    "id": "SOLR-916",
    "title": "CoreContainer :: register(String, SolrCore, boolean)  documentation clarification about returnPrev argument",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In CoreContainer.java :: register(name, core, returnPrev) - the documentation says \n  it would return a previous core having the same name if it existed and returnPrev = true.\n\n\n\t@return a previous core having the same name if it existed and returnPrev==true\n  */\n public SolrCore register(String name, SolrCore core, boolean returnPrev) ..\n\n\n\n\nBut as per the code towards the end - the previous core is returned anyway, irrespective of the value of returnPrev. The difference, though, seems to be that when returnPrev is false, the previous core (of the same name, if exists) is closed.\n\nWhich one of them is correct . If the code were correct , would the variable be better renamed as closePrevious , as opposed to returnPrevious.",
    "attachments": {
        "SOLR-916.patch": "https://issues.apache.org/jira/secure/attachment/12396609/SOLR-916.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Karthik K",
            "id": "comment-12656721",
            "date": "2008-12-15T19:43:23+0000",
            "content": "Patch attached . More documentation added for the arguments.  Instead of RuntimeException - IllegalArgumentException is thrown to be more specific about the error. (backward compatible since IRE inherits from RTE too).  "
        },
        {
            "author": "Karthik K",
            "id": "comment-12657425",
            "date": "2008-12-17T15:30:28+0000",
            "content": "Can somebody familiar with this part - confirm / add more light on what the third argument supposedly  is intended to do (as compared to what it is doing today ). "
        },
        {
            "author": "Karthik K",
            "id": "comment-12658585",
            "date": "2008-12-22T16:54:57+0000",
            "content": "Renaming the 3rd field to be closeprevious and fixing documentation to reflect the code appropriately.  "
        },
        {
            "author": "Karthik K",
            "id": "comment-12658586",
            "date": "2008-12-22T16:56:26+0000",
            "content": "returnPrevious boolean renamed to closePrevious. \n\nJavadoc modified to reflect exactly what is happening in the code.  "
        },
        {
            "author": "Karthik K",
            "id": "comment-12658587",
            "date": "2008-12-22T17:08:42+0000",
            "content": "appropriate rename of closePrevious to donotClosePrevious .  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12703631",
            "date": "2009-04-28T13:03:06+0000",
            "content": "I could go either way. The name change certainly makes some sense, but even as is, a core that is returned closed is not very useful. Null could just as well be returned. But when you ask to returnPrev, a working open core is guaranteed to be returned if a previous one existed. I wouldnt feel so bad leaving it as it is - your change almost seems to strengthen the contract - you have to return the closed core as well. Neither side is a very strong argument to me and I could go either way. "
        },
        {
            "author": "Karthik K",
            "id": "comment-12703669",
            "date": "2009-04-28T15:08:54+0000",
            "content": "\n\n\n I could go either way. The name change certainly makes some sense, but even as is, a core that is returned closed is not very useful. Null could just as well be returned. But when you ask to returnPrev, a working open core is guaranteed to be returned if a previous one existed. I wouldnt feel so bad leaving it as it is - your change almost seems to strengthen the contract - you have to return the closed core as well. Neither side is a very strong argument to me and I could go either way.\n\n\n\n\n\nI do not have an issue with the logic ( closing an existing core if returnPrev is false ) as it is currently but am more concerned with the name of the variable and the documentation about the same - just to make sure that it is in sync with the actual logic as of today.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12711599",
            "date": "2009-05-21T12:39:35+0000",
            "content": "I would say that if returnPrev is false, what is returned is undefined. The closed core is returned, but it just as well could be null. If the user expects to get and be able to use the prevCore, he must pass returnPrev = true.\n\nIt still makes sense to me, but I wouldn't object to the change if someone wants to put it in. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12725533",
            "date": "2009-06-30T08:59:17+0000",
            "content": "I guess we can just document the behavior and keep the variable name as is. If it is ok I shall just make the changes and close this issue "
        },
        {
            "author": "Karthik K",
            "id": "comment-12725660",
            "date": "2009-06-30T15:03:44+0000",
            "content": "\n\n\n I guess we can just document the behavior and keep the variable name as is. If it is ok I shall just make the changes and close this issue\n\n\n\n\n\nI disagree. The name of the variable does not reflect the actual underlying behavior .  We need the documentation change as well as an appropriate name of the variable fitting the current behavior.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12725927",
            "date": "2009-07-01T05:24:52+0000",
            "content": "the parameter is renamed . I hope it is fine now\ncommitted r790041 "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775608",
            "date": "2009-11-10T15:51:53+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}