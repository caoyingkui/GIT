{
    "id": "LUCENE-8469",
    "title": "Inline calls to the deprecated StringHelper.compare",
    "details": {
        "components": [],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "7.5"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Trivial",
        "type": "Improvement"
    },
    "description": "In an attempt to limit the number of warnings during compilation I though it'd be nice to clean up our own stuff. This is a start: StringHelper.compare is used throughout the code and is delegated to FutureArrays (where it belongs, as the arguments are byte[], not Strings).\n\nThis can cause other patches to not apply anymore... so we could apply this to master only. If anybody has a strong feeling about it, please voice it. The patch is trivial.",
    "attachments": {
        "LUCENE-8469.patch": "https://issues.apache.org/jira/secure/attachment/12937598/LUCENE-8469.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16596332",
            "author": "Adrien Grand",
            "content": "Let's also remove StringHelper#compare on master? The patch looks like it was generated automatically, could you change it so that it doesn't perform sums with zero, eg. FutureArrays.compareUnsigned(packedValue, Integer.BYTES, Integer.BYTES + Integer.BYTES, maxLon, 0, Integer.BYTES) instead of FutureArrays.compareUnsigned(packedValue, Integer.BYTES, Integer.BYTES + Integer.BYTES, maxLon, 0, 0 + Integer.BYTES)? ",
            "date": "2018-08-29T13:37:36+0000"
        },
        {
            "id": "comment-16596682",
            "author": "Dawid Weiss",
            "content": "Of course I inlined it automatically \u2013 come on, I don't trust myself more than I trust software. \n\nI'll correct these and apply removal of the deprecated method in master. Thanks Adrien. ",
            "date": "2018-08-29T18:22:04+0000"
        },
        {
            "id": "comment-16596713",
            "author": "Dawid Weiss",
            "content": "Updated the patch. I don't like the duplication in arguments (same subexpressions), but it'd require an explicit pull of a local variable(s) for each and every occurrence. The compiler should handle these efficiently and I wouldn't want to make a mistake somewhere in there. ",
            "date": "2018-08-29T18:44:32+0000"
        },
        {
            "id": "comment-16596747",
            "author": "Uwe Schindler",
            "content": "I am ok with this change on Master. But this may cause patches to be harder to Backport. ",
            "date": "2018-08-29T19:02:04+0000"
        },
        {
            "id": "comment-16597107",
            "author": "Dawid Weiss",
            "content": "The way I typically work (cherry-picking commits from master to branch_xx) it's actually easier to apply this change to both (all) branches at the same time \u2013 this makes those branches consistent for all future patches. \n\nA conflict may arise only if somebody has been working on something (largeish) and there are regions that overlap. Even in such a case resolving the conflict shouldn't be much of a headache (it's a one-liner).\n\nSo I don't think it's really a huge problem, but if you'd rather keep it on master only let me know, Uwe. ",
            "date": "2018-08-30T06:41:08+0000"
        },
        {
            "id": "comment-16597166",
            "author": "ASF subversion and git services",
            "content": "Commit 54f256503867c4265a994b94af2917e1375c2181 in lucene-solr's branch refs/heads/master from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=54f2565 ]\n\nLUCENE-8469: Inline calls to the deprecated StringHelper.compare, removed StringHelper.compare from master. ",
            "date": "2018-08-30T08:00:05+0000"
        },
        {
            "id": "comment-16598386",
            "author": "Uwe Schindler",
            "content": "Hi,\nI am fine with backporting. I understood Adrien's comment that he only wants to do this in master. But he just meant deprecation vs. removal. So for 7.x we should maybe deprecate, but as StringHelper is a private API (isnt it documented as unstable) I am also fine with completely remove it.\n\nAbout this issue: Nevertheless, while adding the FutureObjects/Arrays stuff with Robert half a year ago, there were more places where we only have delegator methods. In LZ4.java (compressing stored fields), we can also remove one method, as it just calls a FutureArrays method without much parameter mapping (only order of params and the usual length vs. end offset calc). So it would be good to check all calls to FutureObjects/FutureArrays and remove useless methods. Makes also code cleaner to read! And hotspot uses the intrinsic earlier while optimizing. ",
            "date": "2018-08-31T07:53:24+0000"
        },
        {
            "id": "comment-16598409",
            "author": "ASF subversion and git services",
            "content": "Commit 91c9068ba3e379ea47b17917e498fa0d448bbfed in lucene-solr's branch refs/heads/branch_7x from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=91c9068 ]\n\nLUCENE-8469: Inline calls to the deprecated StringHelper.compare (backport). ",
            "date": "2018-08-31T08:18:38+0000"
        },
        {
            "id": "comment-16598413",
            "author": "Dawid Weiss",
            "content": " I backported and committed the change to branch_7x.\n\nThat (private) method in LZ4 should also be cleaned up; I don't even think this requires a separate jira issue as it's inaccessible from anywhere. ",
            "date": "2018-08-31T08:20:44+0000"
        },
        {
            "id": "comment-16598687",
            "author": "Uwe Schindler",
            "content": "+1, Thanks! ",
            "date": "2018-08-31T12:40:02+0000"
        }
    ]
}