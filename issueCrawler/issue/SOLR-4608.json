{
    "id": "SOLR-4608",
    "title": "Update Log replay should use the default processor chain",
    "details": {
        "affect_versions": "4.1,                                            4.2",
        "status": "Closed",
        "fix_versions": [
            "4.2.1",
            "4.3",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "If a processor chain is used with custom processors, \nthey are not used in case of node failure during log replay.\n\nHere is the code:\n\nUpdateLog.java\n    public void doReplay(TransactionLog translog) {\n      try {\n        loglog.warn(\"Starting log replay \" + translog + \" active=\"+activeLog + \" starting pos=\" + recoveryInfo.positionOfStart);\n\n        tlogReader = translog.getReader(recoveryInfo.positionOfStart);\n\n        // NOTE: we don't currently handle a core reload during recovery.  This would cause the core\n        // to change underneath us.\n\n        // TODO: use the standard request factory?  We won't get any custom configuration instantiating this way.\n        RunUpdateProcessorFactory runFac = new RunUpdateProcessorFactory();\n        DistributedUpdateProcessorFactory magicFac = new DistributedUpdateProcessorFactory();\n        runFac.init(new NamedList());\n        magicFac.init(new NamedList());\n\n        UpdateRequestProcessor proc = magicFac.getInstance(req, rsp, runFac.getInstance(req, rsp, null));\n\n \n\nI think this is a big issue, because a lot of people will discover it when a node will crash in the best case... and I think it's too late.\n\nIt means to me that processor chains are not usable with Solr Cloud currently.",
    "attachments": {
        "SOLR-4608.patch": "https://issues.apache.org/jira/secure/attachment/12574351/SOLR-4608.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13605333",
            "date": "2013-03-18T16:36:38+0000",
            "content": "Right, we should use the default chain (although only processors at or after the distrib update processor factory - just like non-leaders do).\nNormally, custom processors should go before the distributed processor, so this shouldn't affect most people. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13605824",
            "date": "2013-03-18T23:58:49+0000",
            "content": "Hmmm, it appears that making this change causes RecoveryZkTest to fail for some reason.  Not sure why yet...\n\nedit: actually, it looks like this test is failing on a clean checkout of trunk too - so probably not related to this. "
        },
        {
            "author": "Ludovic Boutros",
            "id": "comment-13606201",
            "date": "2013-03-19T10:07:50+0000",
            "content": "Thanks Mark and Yonik.\n\nYonik, could you please post the code of this change ? \nI could try to patch the 4.1/4.2 branches and then test it.\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13606393",
            "date": "2013-03-19T15:15:38+0000",
            "content": "Here's a patch that uses the default chain for both log replaying and peer sync replaying. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13606411",
            "date": "2013-03-19T15:35:22+0000",
            "content": "Report back soon and hopefully we can get this in 4.2.1. "
        },
        {
            "author": "Ludovic Boutros",
            "id": "comment-13606510",
            "date": "2013-03-19T17:07:08+0000",
            "content": "Anything after the DistributedUpdateProcessor will not be applied, right ?\n\nDo I need to create one default processor chain with my custom processor before the DistributedUpdateProcessor, and the real one used by the update handler with my custom processor after the DistributedUpdateProcessor ? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13606639",
            "date": "2013-03-19T18:28:47+0000",
            "content": "Anything after the DistributedUpdateProcessor will not be applied, right ?\n\nEverything before the distributed update processor will be applied before buffering, and everything after should be applied while replaying. "
        },
        {
            "author": "Ludovic Boutros",
            "id": "comment-13608060",
            "date": "2013-03-20T19:32:35+0000",
            "content": "You're right Yonik, it works now. Thanks.\nDo you think the patch could be committed in the different branches ?\nIf I can help, just ask. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13608964",
            "date": "2013-03-21T14:19:53+0000",
            "content": "Yonik Seeley, this ready to be committed? I'd like to toss it in 4.2.1. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13609216",
            "date": "2013-03-21T17:59:32+0000",
            "content": "[trunk commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1459424\n\nSOLR-4608: use default update processor chain during log replay and peersync "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13609252",
            "date": "2013-03-21T18:16:54+0000",
            "content": "[branch_4x commit] Yonik Seeley\nhttp://svn.apache.org/viewvc?view=revision&revision=1459427\n\nSOLR-4608: use default update processor chain during log replay and peersync "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653944",
            "date": "2013-05-10T10:33:30+0000",
            "content": "Closed after release. "
        }
    ]
}