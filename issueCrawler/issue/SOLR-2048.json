{
    "id": "SOLR-2048",
    "title": "response testing with JSON",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Use JSON to test for complete matches of complex hierarchies (rather than the element-by-element approach we need to use with xpath).",
    "attachments": {
        "SOLR-2048.patch": "https://issues.apache.org/jira/secure/attachment/12452176/SOLR-2048.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12898951",
            "date": "2010-08-16T14:39:45+0000",
            "content": "Here's a draft patch that I'm starting to use to test field collapsing. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12898955",
            "date": "2010-08-16T14:44:45+0000",
            "content": "The test strings currently consist of path:expected_JSON  (the path is where to start in the input to do comparisons with the expected JSON).\n\nexample:\n\n    assertJQ(req(\"fq\",\"filt\",  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status:0\"                         // exact match\n      ,\"/responseHeader:{'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader:{'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped:{'foo_i':{ 'groups':[{'groupValue':1, 'matches':3,\" + ...\n\n "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013169",
            "date": "2011-03-30T15:45:45+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}