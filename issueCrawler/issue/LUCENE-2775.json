{
    "id": "LUCENE-2775",
    "title": "Sorting of search results can fail",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.0.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "When retrieving long values for sorting via the createValue method of the LongCache class in FieldCacheImpl.java, there are cases where there are terms for a given field that are not longs.  These values have no documents associated with them so they can be safely ignored.  The problem is that if the value could not be parsed into a long, as was my case, then an exception is thrown and the value 0 is returned for all documents.  This causes the sort to fail.\n\nIn my case the offending value was \"0-73080000\".  I do not know how that got into the index and as such, have no way of reproducing this bug.\n\nThe solution was to simply catch the exception and move on to the next term without bailing out of the sort.",
    "attachments": {
        "sort.patch": "https://issues.apache.org/jira/secure/attachment/12460396/sort.patch"
    },
    "issue_links": {},
    "comments": []
}