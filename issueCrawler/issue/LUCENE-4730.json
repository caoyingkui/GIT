{
    "id": "LUCENE-4730",
    "title": "SmartChineseAnalyzer got wrong matched offset",
    "details": {
        "components": [
            "modules/analysis"
        ],
        "fix_versions": [],
        "affect_versions": "4.0,                                            4.1",
        "priority": "Critical",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "We found that SmartChineseAnalyzer got wrong matched offset with the following test code:\n\n    public void testHighlight() throws Exception {\n        String text = \"My China  \";        \n        String queryText = \"China\";\n        StringBuilder builder = new StringBuilder(\"<html>\");\n        Analyzer analyzer = new SmartChineseAnalyzer(Version.LUCENE_40);\n        //Analyzer analyzer = new StandardAnalyzer(Version.LUCENE_40);\n        QueryParser parser = new QueryParser(Version.LUCENE_40, \"text\", analyzer);\n        Query query = parser.parse(queryText);\n        SimpleHTMLFormatter formatter = new SimpleHTMLFormatter(\"<span style=\\\"background: yellow\\\">\", \"</span>\");\n        TokenStream tokens = analyzer.tokenStream(\"text\", new StringReader(text));\n        QueryScorer scorer = new QueryScorer(query, \"text\");\n        Highlighter highlighter = new Highlighter(formatter, scorer);\n        highlighter.setTextFragmenter(new SimpleSpanFragmenter(scorer));\n        String result = highlighter.getBestFragments(tokens, text, 10, \"...\");\n        if (result.length() < text.length()) \n{\n            result = text;\n        }\n        builder.append(\"<body>\");\n        builder.append(result);\n        builder.append(\"</body>\");\n        builder.append(\"</html>\");\n        System.out.println(builder.toString());\n    }\n\nThis method will generate a hilighted text, however, the highlight position is obviously wrong, and if we remove one space from the text, that is, change text from \"My China  \" (ends with two spaces) to \"My China \" (ends with one space), it will generate a text with correct highlight. If we change the analyzer from SmartChineseAnalyzer to StandardAnalyzer, the highlight issue will disappear.",
    "attachments": {
        "LUCENE-4730.patch": "https://issues.apache.org/jira/secure/attachment/12653040/LUCENE-4730.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-06-29T03:47:09+0000",
            "content": "This appears to be a symptom of LUCENE-4984 (fixed in 4.8).\n\nThe following test fails:\n\n\n// note Version.LUCENE_4_7\nassertAnalyzesTo(new SmartChineseAnalyzer(Version.LUCENE_4_7, true),  \"My China  \",\n        new String[] { \"my\", \"china\"}, new int[] {0,3}, new int[] {2, 8});\n\n\n\nwhereas this passes:\n\n\n// note Version.LUCENE_4_8\nassertAnalyzesTo(new SmartChineseAnalyzer(Version.LUCENE_4_8, true),  \"My China  \",\n        new String[] { \"my\", \"china\"}, new int[] {0,3}, new int[] {2, 8});\n\n\n\nI'll add a test to verify this double-whitespace case but otherwise, this can be closed out. ",
            "author": "Michael Dodsworth",
            "id": "comment-14047046"
        },
        {
            "date": "2016-06-09T14:21:09+0000",
            "content": "Thanks Michael for digging it. ",
            "author": "Adrien Grand",
            "id": "comment-15322594"
        }
    ]
}