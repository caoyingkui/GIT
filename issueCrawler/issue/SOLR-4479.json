{
    "id": "SOLR-4479",
    "title": "TermVectorComponent NPE when running Solr Cloud",
    "details": {
        "affect_versions": "4.1",
        "status": "Closed",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When running Solr Cloud (just simply 2 shards - as described in wiki), got NPE\njava.lang.NullPointerException\n\tat org.apache.solr.handler.component.TermVectorComponent.finishStage(TermVectorComponent.java:437)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:317)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:242)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1816)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:448)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:269)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n..... Skipped\n\nTo reproduce, follow the guide in wiki (http://wiki.apache.org/solr/SolrCloud), add some documents and then request http://localhost:8983/solr/collection1/tvrh?q=*%3A*\n\nIf I include term search vector component in search handler, I get (on second shard):\nSEVERE: null:java.lang.NullPointerException\n        at org.apache.solr.handler.component.TermVectorComponent.process(TermVectorComponent.java:321)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:206)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1699)",
    "attachments": {
        "SOLR-4479.patch": "https://issues.apache.org/jira/secure/attachment/12697588/SOLR-4479.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Dimitris Karas",
            "id": "comment-13615441",
            "date": "2013-03-27T16:18:56+0000",
            "content": "I got the same exactly error by doing a search on multiple shards and the term vector com. on.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13615460",
            "date": "2013-03-27T16:30:10+0000",
            "content": "Not sure this component is distrib aware. Anyone? "
        },
        {
            "author": "Dimitris Karas",
            "id": "comment-13615483",
            "date": "2013-03-27T16:53:53+0000",
            "content": "In Wiki: http://wiki.apache.org/solr/DistributedSearch#Distributed_Searching  says that this component support distributed search "
        },
        {
            "author": "Dimitris Karas",
            "id": "comment-13632880",
            "date": "2013-04-16T14:37:09+0000",
            "content": "Seems the problem in my case was that i was using 4.2 but with an index created by solr 4.1. By indexing again with Solr 4.2 i got term vectors in my responses. cheers "
        },
        {
            "author": "Yakov",
            "id": "comment-13746552",
            "date": "2013-08-21T16:48:44+0000",
            "content": "Hi,\n\nproblem is still exists on 4.4. Reindexing, as Dimitris suggested is not fixing the problem in my case. On fresh index it produces:\n\n\n\"trace\":\"java.lang.NullPointerException\\n\\tat \norg.apache.solr.handler.component.TermVectorComponent.finishStage(TermVectorComponent.java:437)\\n\\tat \norg.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:317)\\n\\tat \norg.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\\n\\tat \norg.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:241)\\n\\tat\n org.apache.solr.core.SolrCore.execute(SolrCore.java:1904)\\n\\tat \norg.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:659)\\n\\tat \norg.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:362)\\n\\tat \norg.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:158)\\n\\tat \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\\n\\tat \norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\\n\\tat \norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\\n\\tat \norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\\n\\tat \norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\\n\\tat \norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\\n\\tat \norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)\\n\\tat \norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\\n\\tat \norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\\n\\tat \norg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)\\n\\tat \norg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)\\n\\tat \norg.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)\\n\\tat \njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\\n\\tat \njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\\n\\tat \njava.lang.Thread.run(Thread.java:722)\\n\",\n\n    \"code\":500\n\n\n\nActually, this problem is really important for me, how could I help to fix it faster? "
        },
        {
            "author": "Ra\u00fal Grande",
            "id": "comment-13904036",
            "date": "2014-02-18T13:34:19+0000",
            "content": "Hi,\n\nWe have the same problem using SolrCloud v. 4.6.1\n\nAny solution to this so far? "
        },
        {
            "author": "Stanislav Sandalnikov",
            "id": "comment-13904053",
            "date": "2014-02-18T13:55:45+0000",
            "content": "Hi Raul,\n\nIn our case this was solved by adding shards.qt=/tvrh to the query.  "
        },
        {
            "author": "Ra\u00fal Grande",
            "id": "comment-13904079",
            "date": "2014-02-18T14:16:53+0000",
            "content": "Thanks a lot! \n\nIt worked fine with that param! "
        },
        {
            "author": "Pierre Goss\u00e9",
            "id": "comment-14133719",
            "date": "2014-09-15T08:58:59+0000",
            "content": "Hi,\n\nI'm having the same issue on 4.8.1,\n\nI have only one field with termvectors, and around half of documents have that field.\nQueries with tv=false display the error, queries with tv=true doesn't\n\nshards.qt=/tvrh doesn't solve the issue "
        },
        {
            "author": "Yakov",
            "id": "comment-14135641",
            "date": "2014-09-16T16:02:59+0000",
            "content": "Try to remove / from parameter like shards.qt=tvrh "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14307460",
            "date": "2015-02-05T16:02:43+0000",
            "content": "I'm bumping into this with some of the Spark integration work I'm doing and know that Shalin is super busy with other stuff, so I'll take it up. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14307558",
            "date": "2015-02-05T17:07:43+0000",
            "content": "Thanks Tim! "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14309522",
            "date": "2015-02-06T17:57:56+0000",
            "content": "Adding the shards.qt to the query params avoids this NPE, i.e. the following query works for me on 4.10 branch:\n\n\nbin/solr -e cloud -noprompt\njava -Durl=http://localhost:8983/solr/gettingstarted/update -jar example/exampledocs/post.jar example/exampledocs/*.xml\ncurl \"http://localhost:8983/solr/gettingstarted_shard1_replica1/tvrh?q=*%3A*&wt=json&indent=true&tv.fl=name&rows=50&shards.qt=/tvrh&shards.info=true\"\n\n\n\nSo the easiest solution here would be to update the /tvrh requestHandler definition in solrconfig.xml to be:\n\n\n  <requestHandler name=\"/tvrh\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <bool name=\"tv\">true</bool>\n      <str name=\"shards.qt\">/tvrh</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>tvComponent</str>\n    </arr>\n  </requestHandler>\n\n\n\nBut this has me thinking about whether there's a bigger bug at play here? Specifically, if Solr is in distributed mode, then the shards.qt parameter should default to the same path as the top-level request handler (/tvrh in this example). I tried the same with the /spell request handler and same result, the underlying distributed shard requests all went to /select and since the SpellChecking component is not wired into /select by default, there's really no spell checking happening on each shard.\n\nIn other words, if you send a distributed query to /tvrh without the shards.qt parameter, then the underlying shard requests are sent to /select and not /tvrh on each replica. The work-around is simple but seems like the default behavior should be to work without shards.qt??? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14312336",
            "date": "2015-02-09T15:10:52+0000",
            "content": "\nBut this has me thinking about whether there's a bigger bug at play here? Specifically, if Solr is in distributed mode, then the shards.qt parameter should default to the same path as the top-level request handler (/tvrh in this example). I tried the same with the /spell request handler and same result, the underlying distributed shard requests all went to /select and since the SpellChecking component is not wired into /select by default, there's really no spell checking happening on each shard.\nIn other words, if you send a distributed query to /tvrh without the shards.qt parameter, then the underlying shard requests are sent to /select and not /tvrh on each replica. The work-around is simple but seems like the default behavior should be to work without shards.qt???\n\nI think that makes sense.\n\nThe reason behind having shards.qt is that in old-style distributed search, people would put shards=abc,xyz,pqr in the defaults section of the request handler and therefore they need shards.qt to send the non-distrib query to a different handler which does not hard code the shards parameter. So anyone who has this situation currently should already specify a shards.qt parameter different than qt. So defaulting shards.qt the same as qt makes sense. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14312362",
            "date": "2015-02-09T15:39:21+0000",
            "content": "If RequestHandler instanceof SearchHandler we can make shards.qt=qt by default. For others, let the requesthandler set the value or let the user configure it explicitly   "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14313054",
            "date": "2015-02-09T22:41:40+0000",
            "content": "Patch the sets the qt param on the shard request to the path pulled from the request context if shards.qt is not set and the path for the top-level request is not /select. This address the general issue described in the comments of this ticket and all tests pass on trunk with this applied. Definitely need a review of this approach though as it's changing default behavior of query requests. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14313922",
            "date": "2015-02-10T09:51:41+0000",
            "content": "Hi Tim,\n\nNot entirely sure, but this comment applies here as well ? https://issues.apache.org/jira/browse/SOLR-6311?focusedCommentId=14085258&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14085258 "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14314420",
            "date": "2015-02-10T16:23:50+0000",
            "content": "Yes, it applies. I think we have to do something here, so am thinking the SearchHandler can keep track of whether it has any custom search components and if so, it can apply the path as the default if shards.qt is not supplied. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14314487",
            "date": "2015-02-10T17:24:18+0000",
            "content": "Good to fix this stuff. Getting this to work right used to be kind of like a special secret  "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14320893",
            "date": "2015-02-13T22:37:03+0000",
            "content": "Fixed with SOLR-6311 "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14495415",
            "date": "2015-04-15T00:31:02+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}