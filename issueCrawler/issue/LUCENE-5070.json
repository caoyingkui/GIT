{
    "id": "LUCENE-5070",
    "title": "NumericTermAttributeImpl should implement equals",
    "details": {
        "components": [],
        "fix_versions": [],
        "affect_versions": "None",
        "priority": "Minor",
        "labels": "",
        "type": "Bug",
        "resolution": "Not A Problem",
        "status": "Resolved"
    },
    "description": "NumericTermAttributeImpl doesn't implements equals, making two AttributeSources unequal as soon as one of them contains a NumericTermAttributeImpl. I think we should review all our AttributeImpls to make sure they correctly implement equals.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-06-21T14:55:10+0000",
            "content": "In LUCENE-2374 it was descided to remove the requirement of equals/hashcode by removing the abstarct equals/hashcode. This is somehow the opposite.\n\nWhy do you need equals/hashcode. There is no reason to have it. We did not remove equals/hashcode from the \"well-known\" attributes for backwards compatibility, but the idea was to not make AttributeSource use equals/hashcode at all (so AttributeSource's equals/hashcode impl is a relict from earlier days of Lucene 2.9 to Lucene 3.0). 3.1 already relaxed that requirement. ",
            "author": "Uwe Schindler",
            "id": "comment-13690345"
        },
        {
            "date": "2013-06-21T15:01:19+0000",
            "content": "OK, the fact that the major attribute impls and that AttributeSource implemented it made me think it was the way it should be. In that case, can we remove all these equals and hashCode methods in 5.0 so that we can find broken code which relies on the fact that equals and hashCode are correctly implemented? ",
            "author": "Adrien Grand",
            "id": "comment-13690353"
        },
        {
            "date": "2013-06-21T15:14:30+0000",
            "content": "I have no preference, but I agree that the current impl of AttributeSource#equals makes the user think it could compare attribute sources.\n\nWe can discuss again, it was just removed for 3.1 because of complexity for attribute implementors (its often not easy to compare attributes if the underlying impl implements more than one attribute). The second thing is: The interface itsself does not have equals/hashcode so there is nothing that enforces the impl. If a *Impl class implement equals/hashcode it is an implementation detail. ",
            "author": "Uwe Schindler",
            "id": "comment-13690370"
        },
        {
            "date": "2013-06-21T15:25:22+0000",
            "content": "complexity for attribute implementors\n\nI agree, hashCode and equals are quite complex (and painful) to implement. I guess the only attribute that must implement equals is CharTermAttribute since it extends CharSequence.\n\nWe can discuss again\n\nIf people want to discuss it, I'm open although I'm perfectly fine with the current state (not forcing attributes to implement equals). ",
            "author": "Adrien Grand",
            "id": "comment-13690382"
        }
    ]
}