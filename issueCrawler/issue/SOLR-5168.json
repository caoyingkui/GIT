{
    "id": "SOLR-5168",
    "title": "BJQParserTest reproducible failures",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "two recent Jenkins builds have uncovered some test seeds that cause failures in multiple test methods in BJQParserTest.  These seeds reproduce reliably (as of trunk r1514815) ...\n\n\nant test  -Dtestcase=BJQParserTest -Dtests.seed=7A613F321CE87F5B -Dtests.multiplier=3 -Dtests.slow=true\n\nant test  -Dtestcase=BJQParserTest -Dtests.seed=1DC8055F837E437E -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true",
    "attachments": {
        "BJQTest.patch": "https://issues.apache.org/jira/secure/attachment/12598540/BJQTest.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13742467",
            "date": "2013-08-16T18:02:58+0000",
            "content": "One of those seeds (1DC8055F837E437E) causes MockRandomMergePolicy \u2013 but a cursory review of hte test (and my cursory udnderstanding of the block join queries) doesn't suggest any reason why that should cause a problem for this test \u2013 the only ever time a commit might happen in the test is at the end of an entire block.\n\nThe other seed (7A613F321CE87F5B) just uses LogDocMergePolicy, so even if my cusory understandings above are incorrect, there really seems to be a bug when this seed is used. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13742569",
            "date": "2013-08-16T20:28:12+0000",
            "content": "I wonder, how it could work (it seems I wrote it myself - my fault).\n\nhttps://github.com/apache/lucene-solr/blob/trunk/solr/core/src/test/org/apache/solr/search/join/BJQParserTest.java#L56\n\ntest doesn't use block add, but adds docs one by one, hence a block can be broken by commit\n\n public static void createIndex()\n...\n   assertU(add(doc(idDoc)));\n\n  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13742607",
            "date": "2013-08-16T21:14:22+0000",
            "content": "test doesn't use block add\n\nYeah, I thought that was on purpose to test the query separately from any block indexing.\nSimplest fix would be to disable the random IW stuff for this test (it would always work if the buffering in IW is enough such that the docs are flushed to a single segment).  Optimizing after that fact in conjunction with the log merge policy would also work. "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13742645",
            "date": "2013-08-16T22:06:20+0000",
            "content": "first patch. it solves most of tests but testGrandChildren() still fails on broken block.  "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13742907",
            "date": "2013-08-17T11:53:17+0000",
            "content": "ok. checked it again. I propose either apply that one-liner patch or trigger forceMerge() in test. After that testGrandChildren() still fails and it's fairly reasonable, though gives a subject for considerations:\n\nright now BJQParserTest.addGrandChildren() places grand children before their parents (i.e children). It sounds like user is aware of physical layout which is necessary for bjq and enforces it. Unfortunately, AddUpdateCommand.flatten(SolrInputDocument) reverses docs in a block quite unreasonably. \nSo, there might be two vision on it:\n\n\twe can allow users to be aware about physical layout of docs, and need to remove useless reverse in AddUpdateCommand.flatten() - not a big deal;\n\twe don't want users to rely, and oblige them to nest grand children into children as well as children are nested into parents. (in this case, how to prevent them from relying on reversing?)\nPlease raise a separate issue for testGrandChildren(). it can be temporarily ignored for a while. \n\n\n\nThanks.  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13744016",
            "date": "2013-08-19T17:24:42+0000",
            "content": "Mikhail: I don't fully understand what's going on here yet, but i know Yonik is on vaca for a week or so \u2013 so i'll go ahead and commit your patch along with an @Ignore on testGrandChildren\n\nwe can allow users to be aware about physical layout of docs\n\nI don't think we should expect users to be aware of the layout. if we wnat to have low level \"grey box\" tests that know about those details then so be it \u2013 but the non-test code shouldn't assume end users know anything about the implementation details unless we have no other choice.\n\nwe don't want users to rely, and oblige them to nest grand children into children as well as children are nested into parents.\n\nThis sounds like the right course of action: if you have child docs, use addChildDocument on your parent doc; if you have grandchildren, use addChildDocument on the appropriate existing child that is the parent of the grand-child you want to add.  \n\nBased on the current API of SolrInputDocument, I can't imagine it working any other way.\n\nPlease raise a separate issue for testGrandChildren(). it can be temporarily ignored for a while. \n\nI'd prefer to leave this issue (SOLR-5168) open for now to track the test failures until they are resolved (that's the point of it's existence).  \n\nIt's not clear to me if you are saying that fixing the \"grandchildren\" issue requires fixing AddUpdateCommand.flatten() \u2013 in which case please open a new issue to specifically address that.  (if the fix for the new issue automatically fixes this issue then great).  If however the remaining problem is simply bad assumptions in this test, then we can continue to use this issue to track it. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13744017",
            "date": "2013-08-19T17:25:19+0000",
            "content": "Commit 1515521 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1515521 ]\n\nSOLR-5168: test improvements and @Ignore still broken test "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13744036",
            "date": "2013-08-19T17:35:29+0000",
            "content": "Commit 1515526 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1515526 ]\n\nSOLR-5168: test improvements and @Ignore still broken test (merge r1515521) "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13744193",
            "date": "2013-08-19T20:45:51+0000",
            "content": "fixing the \"grandchildren\" issue requires fixing AddUpdateCommand.flatten() \u2013 in which case please open a new issue to specifically address that. (if the fix for the new issue automatically fixes this issue then great).\n\nwelcome SOLR-5175! "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13745812",
            "date": "2013-08-21T06:10:26+0000",
            "content": "pls also consider SOLR-5177 "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13757884",
            "date": "2013-09-04T15:43:00+0000",
            "content": "Ignore is removed at SOLR-5175. \nsee https://svn.apache.org/viewvc/lucene/dev/trunk/solr/core/src/test/org/apache/solr/search/join/BJQParserTest.java?r1=1520042&r2=1520041&pathrev=1520042\n\nfeel free to close this one.  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13757888",
            "date": "2013-09-04T15:45:47+0000",
            "content": "Right - I was just running the test in a loop locally first to ensure everything was actually fixed. "
        },
        {
            "author": "Adrien Grand",
            "id": "comment-13787107",
            "date": "2013-10-05T10:19:15+0000",
            "content": "4.5 release -> bulk close "
        }
    ]
}