{
    "id": "LUCENE-4838",
    "title": "Add BytesRefHash.find()",
    "details": {
        "components": [
            "core/other"
        ],
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Minor",
        "labels": "",
        "type": "New Feature",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "There is no API today to query BytesRefHash for the existence of a certain BytesRef. Rather, you should use .add(), which looks up the given bytes, and hashes them if they are not found, or returns their ord if they are found.\n\nI would like to add a simple getOrd API which will return the ord of a given BytesRef, or -1 if not found. I would like to use that API in the facet module, and I need to be able to query the hash without necessarily adding elements to it.\n\nI have a simple patch, will post shortly.",
    "attachments": {
        "LUCENE-4838.patch": "https://issues.apache.org/jira/secure/attachment/12574001/LUCENE-4838.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-03-16T08:23:58+0000",
            "content": "Patch adds getOrd(BytesRef) with and without pre-computed hash code + matching test in TestBytesRefHash. If there are no objections, I will commit it later. ",
            "author": "Shai Erera",
            "id": "comment-13604162"
        },
        {
            "date": "2013-03-16T11:37:16+0000",
            "content": "I dont like the method name getOrd. these arent ordinals... ",
            "author": "Robert Muir",
            "id": "comment-13604213"
        },
        {
            "date": "2013-03-16T13:24:12+0000",
            "content": "I chose this name because ordinal appears everywhere on the API:\n\n\n\tClass javadoc: \"BytesRefHash maintains mappings of byte arrays to ordinal...\"\n\tClass member: private int[] ords\n\tMethod add() javadocs: \"return the ord the given bytes are hashed...\"\n\tMethod get(int ord): in the signature and javadocs: \"Populates and returns ... for the given ord\"\n\n\n\nSo it seems that getOrd fits with the rest of the API. Nevertheless, do you have a suggestion for another name? ",
            "author": "Shai Erera",
            "id": "comment-13604248"
        },
        {
            "date": "2013-03-16T19:55:58+0000",
            "content": "Maybe change to termID across the board? ",
            "author": "Michael McCandless",
            "id": "comment-13604406"
        },
        {
            "date": "2013-03-16T20:14:28+0000",
            "content": "can we use this method also in BytesRefHash#add(BytesRef bytes, int code) it's basically a duplicate. I don't think we should duplicate such a complex code part and the method call should not make any difference here. ",
            "author": "Simon Willnauer",
            "id": "comment-13604409"
        },
        {
            "date": "2013-03-16T21:22:09+0000",
            "content": "Maybe change to termID across the board?\n\nI think bytesID would be better since it's a BytesRefHash. Nothing says it needs to denote a term?\n\ncan we use this method also in BytesRefHash#add(BytesRef bytes, int code)\n\nSure, I will. Maybe instead of getOrd/BytesID I should call it find(BytesRef bytes)? ",
            "author": "Shai Erera",
            "id": "comment-13604422"
        },
        {
            "date": "2013-03-17T07:41:27+0000",
            "content": "Renamed to find and replaced all mentions of 'ord' and 'ordinal' by 'id' and 'bytesID' (depending on context).\n\nSimon, I couldn't use find() in add() because the lookup code modifies the hashcode given to the method, which is later used to add the new entry. So find() needs to return two values (the id and modified hashcode), which unfortunately we can't do. Anyway, this is not such a long code.\n\nI think it's ready. ",
            "author": "Shai Erera",
            "id": "comment-13604532"
        },
        {
            "date": "2013-03-17T08:27:37+0000",
            "content": "what about this? I added a findHash method ",
            "author": "Simon Willnauer",
            "id": "comment-13604543"
        },
        {
            "date": "2013-03-17T08:35:40+0000",
            "content": "That looks good! thanks for looking into this. I'll run some tests and then commit. ",
            "author": "Shai Erera",
            "id": "comment-13604547"
        },
        {
            "date": "2013-03-17T09:02:18+0000",
            "content": "[trunk commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1457400\n\nLUCENE-4838: Add BytesRefHash.find() ",
            "author": "Commit Tag Bot",
            "id": "comment-13604549"
        },
        {
            "date": "2013-03-17T09:07:54+0000",
            "content": "Committed to trunk and 4x. Thanks Simon! ",
            "author": "Shai Erera",
            "id": "comment-13604550"
        },
        {
            "date": "2013-03-17T09:21:02+0000",
            "content": "[branch_4x commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1457401\n\nLUCENE-4838: Add BytesRefHash.find() ",
            "author": "Commit Tag Bot",
            "id": "comment-13604554"
        },
        {
            "date": "2013-05-10T10:33:35+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653967"
        }
    ]
}