{
    "id": "LUCENE-5216",
    "title": "Fix SegmentInfo.attributes when updates are involved",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Today, SegmentInfo.attributes are write-once. However, in the presence of field updates (see LUCENE-5189 and LUCENE-5215) this creates an issue, in which if a Codec decides to alter the attributes when updates are applied, they are silently discarded. This is rather a corner case, though one that should be addressed.\n\nThere were two solutions to address this:\n\n\n\tRecord SI.attributes in SegmentInfos, so they are written per-commit, instead of the .si file.\n\tRemove them altogether, as they don't seem to be used anywhere in Lucene code today.\n\n\n\nIf we remove them, we basically don't take away special capability from Codecs, because they can still write the attributes to a separate file, or even the file they record the other data in. This will work even with updates, as long as Codecs respect the given segmentSuffix.\n\nIf we keep them, I think the simplest solution is to read/write them by SegmentInfos. But if we don't see a good use case, I suggest we remove them, as it's just extra code to maintain. I think we can even risk a backwards break and remove them completely from 4x, though if that's a problem, we can deprecate too.\n\nIf anyone sees a good usage for them, or better - already uses them, please speak up, so we can make the proper decision.",
    "attachments": {
        "LUCENE-5216.patch": "https://issues.apache.org/jira/secure/attachment/12605652/LUCENE-5216.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-09-15T17:40:52+0000",
            "content": "+1 to remove them. ",
            "author": "Michael McCandless",
            "id": "comment-13767864"
        },
        {
            "date": "2013-09-15T18:05:32+0000",
            "content": "I searched for SI.attributes(), they aren't used anywhere. Can we just remove them from the API? If so, it's easy \u2013 only need to create a new format version. What do you think? ",
            "author": "Shai Erera",
            "id": "comment-13767867"
        },
        {
            "date": "2013-09-15T18:22:49+0000",
            "content": "AFAIK They are being used in branch_4x for 3.x back compat. So there i think we should simply deprecate, just so we dont have to reimplement hairy back compat  ",
            "author": "Robert Muir",
            "id": "comment-13767874"
        },
        {
            "date": "2013-09-28T12:45:24+0000",
            "content": "Patch for trunk:\n\n\n\tRemove SegmentInfo.attributes() and related methods\n\tNew Lucene46SegmentInfoFormat with reader/writer\n\tModify Lucene40SegmentInfoFormat to write an empty map (for tests) and read+ignore existing map\n\tMade relevant changes to Lucene4XRWCodecs\n\n\n\nThis cannot be merged as-is to 4x though as we only deprecate SI.attributes() there, but the majority of the changes can be backported (i.e. the changes to the RW codecs and the new format). I'll take care of it when we get there.\n\nAll core tests pass. ",
            "author": "Shai Erera",
            "id": "comment-13780807"
        },
        {
            "date": "2013-09-28T15:42:43+0000",
            "content": "+1, patch looks good ",
            "author": "Robert Muir",
            "id": "comment-13780881"
        },
        {
            "date": "2013-09-29T19:51:23+0000",
            "content": "Commit 1527391 from Shai Erera in branch 'dev/trunk'\n[ https://svn.apache.org/r1527391 ]\n\nLUCENE-5216: Fix SegmentInfo.attributes when updates are involved ",
            "author": "ASF subversion and git services",
            "id": "comment-13781485"
        },
        {
            "date": "2013-09-29T19:53:04+0000",
            "content": "Committed to trunk. Will backport to 4x after I backport the main DV updates changes first. ",
            "author": "Shai Erera",
            "id": "comment-13781486"
        },
        {
            "date": "2013-11-14T15:45:35+0000",
            "content": "Committed to trunk. Will backport to 4x after I backport the main DV updates changes first.\n\nShai Erera, looks like you included these changes in your branch_4x commit under LUCENE-5189, so this issue can be resolved?  FYI, when you merge multiple issues' commits, it's useful to include all issue numbers in the commit log message, so that they get auto-posted to the relevant JIRA issues.  That didn't happen here. ",
            "author": "Steve Rowe",
            "id": "comment-13822528"
        },
        {
            "date": "2013-11-14T15:57:58+0000",
            "content": "FYI, when you merge multiple issues' commits, it's useful to include all issue numbers in the commit log message, so that they get auto-posted to the relevant JIRA issues\n\nOh, I didn't know we can do that! So I'd do \"svn ci -m \"LUCENE-123 LUCENE-234: message\"? Do they need to be separated by comma or something? ",
            "author": "Shai Erera",
            "id": "comment-13822539"
        },
        {
            "date": "2013-11-14T15:58:24+0000",
            "content": "Committed to 4x under LUCENE-5189. ",
            "author": "Shai Erera",
            "id": "comment-13822540"
        },
        {
            "date": "2013-11-14T16:10:30+0000",
            "content": "Oh, I didn't know we can do that! So I'd do \"svn ci -m \"LUCENE-123 LUCENE-234: message\"? Do they need to be separated by comma or something?\n\nI'm pretty sure there is no required punctuation - AFAIK any svn commit log message matching regex /PROJECT-\\d+/ anywhere in the log message gets added as a comment to the corresponding JIRA issue, and multiple issue mentions result in comment addition to all of them. ",
            "author": "Steve Rowe",
            "id": "comment-13822558"
        },
        {
            "date": "2013-11-14T16:15:42+0000",
            "content": "Thanks Steve, will try to keep that in mind. I always thought we must format the messages like Lucene-1234: message, i.e. PROJECT-number even followed by colon. ",
            "author": "Shai Erera",
            "id": "comment-13822561"
        },
        {
            "date": "2013-11-14T16:22:32+0000",
            "content": "I think that may once have been true, maybe for early versions of Mark Miller's service?, but is no longer.\n\nHere's a recent example showing no punctuation required, and multiple issues: https://issues.apache.org/jira/browse/LUCENE-5217?focusedCommentId=13820840&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13820840 ",
            "author": "Steve Rowe",
            "id": "comment-13822564"
        },
        {
            "date": "2013-11-14T16:24:20+0000",
            "content": "Cool! ",
            "author": "Shai Erera",
            "id": "comment-13822567"
        }
    ]
}