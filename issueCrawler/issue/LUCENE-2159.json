{
    "id": "LUCENE-2159",
    "title": "Tool to expand the index for perf/stress testing.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/other"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "3.0",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Sometimes it is useful to take a small-ish index and expand it into a large index with K segments for perf/stress testing. \n\nThis tool does that. See attached class.",
    "attachments": {
        "ExpandIndex.java": "https://issues.apache.org/jira/secure/attachment/12428021/ExpandIndex.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-12-15T09:59:25+0000",
            "content": "I have put it under contrib/misc, in package org.apache.lucene.index ",
            "author": "John Wang",
            "id": "comment-12790637"
        },
        {
            "date": "2010-04-14T11:28:43+0000",
            "content": "This looks like a nice tool. But all it does is create multiple copies of the same segment(s) right? So what exactly do you want to test with it? What worries me is that we'll be multiplying the lexicon, posting lists, statistics etc., therefore I'm not sure how reliable the tests will be (whatever they are), except for measuring things related to large number of segments (like merge performance). Am I right?\n\nI also think this class better fits in benchmark rather than misc, as it's really for perf. testing/measurements and not as a generic utility ... You can create a Task out if it, like ExpandIndexTask which one can include in his algorithm. ",
            "author": "Shai Erera",
            "id": "comment-12856845"
        },
        {
            "date": "2010-04-14T12:47:27+0000",
            "content": "Shai:\n\n      You are right, we found this tool useful with testing performance implications under index segmentation. I understand having a general performance suite to test regression is a good thing. But we found having a more focused test for segmentation and merge is important.\n\n-John ",
            "author": "John Wang",
            "id": "comment-12856869"
        },
        {
            "date": "2010-04-14T13:08:32+0000",
            "content": "I understand having a general performance suite to test regression is a good thing. But we found having a more focused test for segmentation and merge is important.\n\nAre you saying that because of the benchmark proposal? I still think that an ExpandIndexTask will be useful for benchmark and fits better there, than in contrib/misc. We can have that task together w/ a predefined .alg for using it ... ",
            "author": "Shai Erera",
            "id": "comment-12856877"
        },
        {
            "date": "2010-04-14T14:15:37+0000",
            "content": "Shai:\n\nI am just stating our experiences. I am not commenting on how it should affect the benchmark proposal at all.\n\nWhether it should be in bench or contrib/misc, this would be a call for the committers.\n\nThanks\n\n-John ",
            "author": "John Wang",
            "id": "comment-12856908"
        },
        {
            "date": "2010-04-14T14:29:44+0000",
            "content": "Which is fine - I think this would be a neat task to add to benchmark, w/ specific documentation on how to use it and for what purposes. If you can also write a sample .alg file which e.g. creates a small index and then Expand it, that'd be great.\n\nI've looked at the different PerfTask implementations in benchmark, and I'm thinking if we perhaps should do the following:\n\n\tCreate an AddIndexesTask which receives one or more Directories as input and calls writer.addIndexesNoOptimize\n\tIf one wants, he can add an OptimizeTask call afterwards.\n\tWrite an expandIndex.alg which initially creates an index of size N from one content source and then calls the AddIndexesTask several times. The .alg file is meant to be an example as well as people can change it to create bigger or smaller indexes, use other content sources and switch between RAM/FS directories.\n\n\n\nHow's that sound? ",
            "author": "Shai Erera",
            "id": "comment-12856911"
        },
        {
            "date": "2010-04-14T14:35:20+0000",
            "content": "Yeah, that sounds great!\nI will need to learn how to write .alg files  ",
            "author": "John Wang",
            "id": "comment-12856913"
        },
        {
            "date": "2010-04-14T14:40:03+0000",
            "content": "There is an excellent section on it in LIA2  ",
            "author": "Mark Miller",
            "id": "comment-12856916"
        },
        {
            "date": "2010-04-14T14:46:03+0000",
            "content": "There is an excellent section on it in LIA2\n\nIndeed !\n\nOk so to create a task, you just extend PerfTask. You can look under contrib/benchmark/src/java/o.a.l/benchmark/byTask/tasks for many examples. OptimizeTask seems relevant here (i.e. it calls an IW API and receives a parameter).\n\nFor writing .alg files, that's SUPER simple, just look under contrib/benchmark/conf for many existing examples. You can post a patch once you feel comfortable enough with it and I can help you with the struggles (if you'll run into any). Another great source (besides LIA2) on writing .alg files is the package.html under contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask. ",
            "author": "Shai Erera",
            "id": "comment-12856917"
        }
    ]
}