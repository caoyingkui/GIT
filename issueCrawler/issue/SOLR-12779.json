{
    "id": "SOLR-12779",
    "title": "Force field/term centric matching mode for multi-term synonyms with splitOnWhitespace=false",
    "details": {
        "type": "Improvement",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "master (8.0)"
    },
    "description": "As Doug Turnbull pointed out on the solr-user mailing list: _http://mail-archives.apache.org/mod_mbox/lucene-solr-user/201703.mbox/%3cCALG6HL8W_cPeXCYnVKs2eSpDsTtcZ8_RbcYqWr+ZPoXwU5APPQ@mail.gmail.com%3e_, (recommended reading, especially for his discussion of the limitations of the new sow=false request parameter), sow=false changes the queries edismax produces over multiple fields when any of the fields\u2019 query-time analysis differs from the other fields\u2019, e.g. if one field\u2019s analyzer removes stopwords when another field\u2019s doesn\u2019t. In this case, rather than a dismax-query-per-whitespace-separated-term (edismax\u2019s behavior when sow=true), a dismax query per field is produced. This can change results in general, but quite significantly when combined with the mm (min-should-match) request parameter: since min-should-match applies per field instead of per term, missing terms in one field\u2019s analysis won\u2019t disqualify docs from matching. E.g. query \u201cTerminator 100\u201d with request param \u201cmm=100%\u201d against both a title (text) field and a run_length (integer) field will result in the following queries:\nWhen sow=true:\n\n+(DisjunctionMaxQuery((title:terminator)) DisjunctionMaxQuery((run_length:[100 TO 100] | title:100)))~2\n\nWhen sow=false:\n\n+DisjunctionMaxQuery((run_length:[100 TO 100] | ((title:terminator title:100)~2)))\n\nIn the above scenario, when sow=true (and in versions of Solr before 6.5), \u201cterminator\u201d must appear in documents in order to produce a match. But when sow=false, a document can match if its run_length field is 100, even when the title does not contain \u201cterminator\u201d.\n\nIt is good to have an option to force term centric or query-centric\u00a0matching at query parsing; so that expected behavior can be achieved; discussed under\u00a0http://lucene.472066.n3.nabble.com/Split-on-whitespace-parameter-doubt-td4404185.html.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}