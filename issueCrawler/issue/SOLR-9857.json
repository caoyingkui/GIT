{
    "id": "SOLR-9857",
    "title": "Collect aggregated metrics from replicas in shard leader",
    "details": {
        "components": [
            "metrics"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "7.0",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Shard leaders can collect metrics from replicas in order to learn about their load and the progress of replication. These per-replica metrics need to be aggregated (if possible) in order to report cluster-wide per-shard metrics.",
    "attachments": {
        "SOLR-9857.patch": "https://issues.apache.org/jira/secure/attachment/12848049/SOLR-9857.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-18T11:45:58+0000",
            "author": "Andrzej Bialecki",
            "content": "Initial version of the reporting and aggregation of replica metrics.\n\nThe design reuses SolrMetricReporter API - it implements a SolrReplicaReporter which is scheduled to report a relevant subset of metrics every N seconds to the shard leader. It uses javabin format for sending serialized metrics data.\n\nThere is also a new handler at the CoreContainer level under /admin/metricsCollector, which aggregates reports sent from SolrReplicaReporter-s. This runs at a CoreContainer level instead of the core level because I hope to reuse it for aggregating also node statistics in SOLR-9858. Partial metrics from replicas are then added to a registry that has the name of the shard with a \".leader\" suffix.\n\nI spent some time thinking about how to best aggregate partial metrics. In general case it's not possible to do this in a meaningful way, and the Metrics API doesn't offer any help here. In the end I implemented AggregateMetric, which maintains all partial numbers for a selected metric and provides only basic statistics (average, min/max, stddev) - and I left it to the user to decide which statistic is most meaningful, if at all.\n\nThese aggregated metrics are kept in a regular MetricRegistry on the shard leader, so they are also reported by /admin/metrics.\n\nComments and suggestions are welcome  ",
            "id": "comment-15827922"
        },
        {
            "date": "2017-01-18T11:48:11+0000",
            "author": "Andrzej Bialecki",
            "content": "TODO: tests and more configuration knobs. However, I'd like to get a review of the design first. ",
            "id": "comment-15827924"
        },
        {
            "date": "2017-01-23T14:52:09+0000",
            "author": "Andrzej Bialecki",
            "content": "Updated patch. In this version I use a regular UpdateRequest for reporting metrics, so that SolrReporter component can be reused in other contexts (eg. when reporting aggregate metrics from nodes to overseer).\n\nThere's one specific nocommit in this patch and I'd welcome any suggestions how to address it. There are two \"plugin-like\" components that can be configured via initArgs - the MetricsCollectorHandler and SolrReplicaReporter. The first I think should be configured in solr.xml if at all. SolrReplicaReporter is initialized as a part of CoreContainer.load() ... but I wasn't sure where the initArgs should be specified for this \"plugin\". Should they go eg. to a /solr/metrics/replica section of solr.xml ? But then they would be applied globally to every core managed by the container. Or should they go to solrconfig.xml ? or should this be a part of the collection config? ",
            "id": "comment-15834693"
        },
        {
            "date": "2017-03-07T21:03:26+0000",
            "author": "Andrzej Bialecki",
            "content": "This functionality was implemented as a part of SOLR-9858. ",
            "id": "comment-15900154"
        }
    ]
}