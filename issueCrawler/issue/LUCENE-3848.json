{
    "id": "LUCENE-3848",
    "title": "basetokenstreamtestcase should fail if tokenstream starts with posinc=0",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is meaningless for a tokenstream to start with posinc=0,\n\nIts also caused problems and hairiness in the indexer (LUCENE-1255, LUCENE-1542),\nand it makes senseless tokenstreams. We should add a check and fix any that do this.\n\nFurthermore the same bug can exist in removing-filters if they have enablePositionIncrements=false.\nI think this option is useful: but it shouldnt mean 'allow broken tokenstream', it just means we\ndon't add gaps. \n\nIf you remove tokens with enablePositionIncrements=false it should not cause the TS to start with\npositionincrement=0, and it shouldnt 'restructure' the tokenstream (e.g. moving synonyms on top of a different word).\nIt should just not add any 'holes'.",
    "attachments": {
        "LUCENE-3848.patch": "https://issues.apache.org/jira/secure/attachment/12517016/LUCENE-3848.patch",
        "LUCENE-3848-MockGraphTokenFilter.patch": "https://issues.apache.org/jira/secure/attachment/12517022/LUCENE-3848-MockGraphTokenFilter.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-04T19:41:06+0000",
            "content": "patch fixing the bug in WikipediaTokenizer.\n\nBut i think we just dont have good tests for the removers.\n\nIdeally for tests i think we should have a simple 'MockSynonymsFilter' that is juts stupid and slow and makes certain synonyms (maybe some multi-word) to use in testing.\n\nThen we can write tests to find and fix the bugs in the removingfilter. ",
            "author": "Robert Muir",
            "id": "comment-13221982"
        },
        {
            "date": "2012-03-04T21:28:22+0000",
            "content": "Patch, adding a MockGraphTokenFilter we can use to randomly insert fake graph arcs... ",
            "author": "Michael McCandless",
            "id": "comment-13222017"
        },
        {
            "date": "2012-03-15T17:12:21+0000",
            "content": "updated patch: I think its ready to commit.\n\nI didn't integrate Mike's nice MockGraphTokenFilter yet but will do this under a separate issue: its likely to expose a few bugs  ",
            "author": "Robert Muir",
            "id": "comment-13230328"
        },
        {
            "date": "2012-03-15T17:29:32+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13230341"
        },
        {
            "date": "2012-03-15T20:21:34+0000",
            "content": "I think this is ready to go in, ill wait a bit.\n\nI didn't make any changes re: \"graph-restructuring\", though I still feel we should fix this, but it means\ndealing with backwards compatibility, etc.\n\nThe changes in this patch are backwards compatible, in the sense that consumers are already correcting \n'initial posInc=0' to posinc=1 anyway. ",
            "author": "Robert Muir",
            "id": "comment-13230510"
        },
        {
            "date": "2012-03-16T14:29:07+0000",
            "content": "I opened LUCENE-3873 to integrate MockGraphTokenFilter into tests. ",
            "author": "Robert Muir",
            "id": "comment-13231233"
        }
    ]
}