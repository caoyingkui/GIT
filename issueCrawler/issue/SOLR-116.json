{
    "id": "SOLR-116",
    "title": "StructureRequestHandler - allowing client to discover all fields in the index",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This request handler returns all fields and their type.  In Ruby format (&wt=ruby) the results, for the example index, look like this currently:\n\n{'responseHeader'=>\n{'status'=>0,'QTime'=>1}\n,'fields'=>{'cat'=>'text_ws','includes'=>'text','id'=>'string','text'=>'text','price'=>'sfloat','features'=>'text','manu_exact'=>'string','manu'=>'text','name'=>'text','sku'=>'textTight','inStock'=>'boolean','popularity'=>'sint','weight'=>'sfloat'}}\n\nA client wanting to introspect Solr could combine the actual fields and their types with parsing of schema.xml to glean a lot and dynamically configure based on what is inside an index.  Should more information per field be returned, or is simply the type name sufficient?   What else is desirable for this request handler?",
    "attachments": {
        "structure_handler.patch": "https://issues.apache.org/jira/secure/attachment/12349311/structure_handler.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erik Hatcher",
            "id": "comment-12466226",
            "date": "2007-01-20T11:08:15+0000",
            "content": "The initial example was from an older example index.  From trunk, the response is this:\n\n{'responseHeader'=>\n{'status'=>0,'QTime'=>2}\n,'fields'=>{'includes'=>'text','cat'=>'text_ws','alphaNameSort'=>'alphaOnlySort','id'=>'string','text'=>'text','manu_exact'=>'string','features'=>'text','price'=>'sfloat','incubationdate_dt'=>'date','timestamp'=>'date','sku'=>'textTight','name'=>'text','nameSort'=>'string','manu'=>'text','weight'=>'sfloat','inStock'=>'boolean','popularity'=>'sint'}}\n\nincubationdate_dt is a dynamic field, and thus could not be gleaned from simply reading schema.xml. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12466247",
            "date": "2007-01-20T15:46:38+0000",
            "content": "Looks good, I like the fieldnames as the keys.  The only change I might make is to make it extensible by returning a map as the value.\n\nInstead of:\n  'id'=>'string'\nIt could be\n  'id'=>\n{type=>'string'}\n\nAnd then other info could optionally go in there:\n  'id'=>\n{type=>'string', multiValued=>'false', 'indexed'=>'true', 'stored'=>'true', 'defaultValue'=>'...'}\n\nHmmm, and what are the aesthetics of the XML?\n\n<lst name=\"fields\">\n  <lst name=\"id>  <str name=\"type\">string</str>  </lst>\n  <lst name=\"text\">...\n\nNot bad...\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12466248",
            "date": "2007-01-20T15:55:29+0000",
            "content": "If you want to commit early and still mess around with the parameters and response formats,\none could add a 'NOTICE'=>'This interface is experimental and will be changing'\nto the response.\n\nAs this handler returns info about the index, is this where listing of terms and docfreqs should also go? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12466292",
            "date": "2007-01-21T04:05:45+0000",
            "content": "I had thought of the Map for the field name keyed value as well.  \n\nTerms and document frequencies make more sense from a facet handler, it seems, which you can already do with &qt=standard&facet=true&facet.field=fieldname&q=[* TO *] I believe.\n\nI'll add the Map level in there, and the notice, and commit soon so we can tinker with it in Flare as a way to provide a dynamic UI based on the fields in the index. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12466293",
            "date": "2007-01-21T04:32:19+0000",
            "content": "Facets are slightly different than docfreq's... one is expensive, and one is very cheap since it's pre-calculated by lucene.\nThe disad to the lucene version is that the docfreq doesn't take deleted docs into account.\n\nIf you want to page through or download all terms of a full-text field, the faceting code would take forever in comparison.\n\nother ideas for info:\n\n\"index\" : {\n  \"numDocs\" : 10123,\n  \"maxDoc\" : 12345,\n  \"age\" : 2000,  #number of milliseconds the index has been open... sort of equivalent to index freshness, but not really.\n  \"version\":123425235,  #index version.  Actually, I think this should be in responseHeader to aid in client-side caching\n}\n\nI think this stuff is useful, it's just a matter  of preference if it goes in the same handler or not.\nIf this does go in this handler, then perhaps it should be named \"indexinfo\" or something.  I'd be fine with this hander being only about schema too though. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12466327",
            "date": "2007-01-21T15:08:07+0000",
            "content": "I've committed IndexInfoRequestHandler based on the feedback here.  The field information is now returned as a map, with type being the only value currently.  I also added in an \"index\" keyed map which contains numDocs, maxDoc, and Lucene index version.  I wasn't sure how the \"age\" value should be computed, so I commented that out for now.  \n\nI'm closing this issue, and tweaks to this handler can be discussed in solr-dev now.\n\nThanks for the feedback. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589298",
            "date": "2008-04-15T23:44:42+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.2\n\n\n\nThe Fix Version for all 39 issues found was set to 1.2, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman2 "
        }
    ]
}