{
    "id": "LUCENE-5892",
    "title": "Make CharsRefBuilder implement Appendable",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ]
    },
    "description": "",
    "attachments": {
        "LUCENE-5892.patch": "https://issues.apache.org/jira/secure/attachment/12662499/LUCENE-5892.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14100690",
            "author": "Adrien Grand",
            "content": "Here is a simple patch. ",
            "date": "2014-08-18T14:38:39+0000"
        },
        {
            "id": "comment-14100692",
            "author": "Robert Muir",
            "content": "Looks good. FWIW CharTermAttribute.java has some optimizations for this method. Maybe if they are really useful we should see if we can pull them out into static methods. ",
            "date": "2014-08-18T14:41:42+0000"
        },
        {
            "id": "comment-14100706",
            "author": "Uwe Schindler",
            "content": "Maybe CharTermAttributeImpl should extend this class or wrap it somehow - and we move all stuff out of CharTermAttributeImpl (and just add Attribute-specific stuff)?\n\nThere are also other things: remove IOException (you did that already, it is there for stuff like BufferedWriter that implement Appendable). Important is the following: Let the append methods use covariant return:\n\n\n@Override\npublic Appendable append(char c) {\n\n\n\nshould be:\n\n\n@Override\npublic CharsRefBuilder append(char c) {\n\n\n\nWithout the covariant return, the typical \"chaining\" is hard, because suddenly the builder changes its type (which will cause IOException appearing again on the next chaining): http://en.wikipedia.org/wiki/Covariant_return_type ",
            "date": "2014-08-18T14:55:35+0000"
        },
        {
            "id": "comment-14100709",
            "author": "Uwe Schindler",
            "content": "Also the current patch misses to append the String \"null\", if the CSQ is null. ",
            "date": "2014-08-18T14:58:23+0000"
        },
        {
            "id": "comment-14100712",
            "author": "Adrien Grand",
            "content": "Thanks Uwe, I'll fix before committing, what a crazy requirement!\n\nThere are potential things to share with CharTermAttributeImpl but I'd rather leave it to another issue as it has some pitfalls as noted. ",
            "date": "2014-08-18T15:00:50+0000"
        },
        {
            "id": "comment-14100714",
            "author": "ASF subversion and git services",
            "content": "Commit 1618625 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1618625 ]\n\nLUCENE-5892: CharsRefBuilder implements Accountable. ",
            "date": "2014-08-18T15:01:55+0000"
        },
        {
            "id": "comment-14100717",
            "author": "ASF subversion and git services",
            "content": "Commit 1618627 from Adrien Grand in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1618627 ]\n\nLUCENE-5892: CharsRefBuilder implements Accountable. ",
            "date": "2014-08-18T15:02:58+0000"
        },
        {
            "id": "comment-14100719",
            "author": "ASF subversion and git services",
            "content": "Commit 1618628 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1618628 ]\n\nLUCENE-5892: Missed the covariant return type. ",
            "date": "2014-08-18T15:04:12+0000"
        },
        {
            "id": "comment-14100722",
            "author": "ASF subversion and git services",
            "content": "Commit 1618629 from Adrien Grand in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1618629 ]\n\nLUCENE-5892: Missed the covariant return type. ",
            "date": "2014-08-18T15:05:02+0000"
        },
        {
            "id": "comment-14100725",
            "author": "Uwe Schindler",
            "content": "Thanks!\n\nBTW: Typical example is StringBuilder itsself: It implements Appendable, but also uses covariant return type: http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html#append(java.lang.CharSequence) ",
            "date": "2014-08-18T15:06:25+0000"
        }
    ]
}