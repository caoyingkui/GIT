{
    "id": "LUCENE-602",
    "title": "[PATCH] Filtering tokens for position and term vector storage",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "2.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "This patch provides a new TokenSelector mechanism to select tokens of interest and creates two new IndexWriter configuration parameters:  termVectorTokenSelector and positionsTokenSelector.\n\ntermVectorTokenSelector, if non-null, selects which index tokens will be stored in term vectors.  If positionsTokenSelector is non-null, then any tokens it rejects will have only their first position stored in each document (it is necessary to store one position to keep the doc freq properly to avoid the token being garbage collected in merges).\n\nThis mechanism provides a simple solution to the problem of minimzing index size overhead cause by storing extra tokens that facilitate queries, in those cases where the mere existence of the extra tokens is sufficient.  For example, in my test data using reverse tokens to speed prefix wildcard matching, I obtained the following index overheads:\n\n  1.  With no TokenSelectors:  60% larger with reverse tokens than without\n  2.  With termVectorTokenSelector rejecting reverse tokens:  36% larger\n  3.  With both positionsTokenSelector and termVectorTokenSelector rejecting reverse tokens:  25% larger\n\nIt is possible to obtain the same effect by using a separate field that has one occurrence of each reverse token and no term vectors, but this can be hard or impossible to do and a performance problem as it requires either rereading the content or storing all the tokens for subsequent processing.\n\nThe solution with TokenSelectors is very easy to use and fast.\n\nOtis, thanks for leaving a comment in QueryParser.jj with the correct production to enable prefix wildcards!  With this, it is a straightforward matter to override the wildcard query factory method and use reverse tokens effectively.",
    "attachments": {
        "TokenSelectorSoloAll.patch": "https://issues.apache.org/jira/secure/attachment/12335532/TokenSelectorSoloAll.patch",
        "TokenSelectorAllWithParallelWriter.patch": "https://issues.apache.org/jira/secure/attachment/12335533/TokenSelectorAllWithParallelWriter.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2006-06-16T11:49:51+0000",
            "content": "TokenSelectorSoloAll.patch applies against today's svn head.  It only requires Java 1.4.\n ",
            "author": "Chuck Williams",
            "id": "comment-12416446"
        },
        {
            "date": "2006-06-16T11:58:07+0000",
            "content": "TokenSelectorAllWithParallelWriter.patch contains ParallelWriter as well (LUCENE-600) as it is also affected. ",
            "author": "Chuck Williams",
            "id": "comment-12416448"
        },
        {
            "date": "2008-01-13T15:19:08+0000",
            "content": "I think, if I understand the problem correctly, that the new TeeTokenFilter and SinkTokenizer could also solve this problem, right Chuck? ",
            "author": "Grant Ingersoll",
            "id": "comment-12558409"
        },
        {
            "date": "2013-02-28T13:03:55+0000",
            "content": "This issue has been inactive for more than 4 years. Please close if it's no longer relevant/needed, or bring it up to date if you intend to work on it. SPRING_CLEANING_2013 ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13589511"
        }
    ]
}