{
    "id": "SOLR-11005",
    "title": "inconsistency when maxShardsPerNode used along with policies",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling",
            "SolrCloud"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "The attribute maxShardsPerNode conflicts with the conditions in the new Policy framework\n\nfor example , I can say maxShardsPerNode=5 and I can have a policy \n\n\n{ replica:\"<3\" , shard: \"#ANY\", node:\"#ANY\"}\n\n\n\nSo, it makes no sense to persist this attribute in collection state.json . Ideally, we would like to keep this as a part of the policy and policy only.\n\nproposed new behavior\nif the new policy framework is being used \n{maxShardsPerNode}\n should result in creating a new collection specific policy with the correct condition. for example, if a collection \"x\" is created with the parameter maxShardsPerNode=2 we will  create a new policy in autoscaling.json\n\n{\n\"policies\":{\n\"x_COLL_POLICY\" : [{replica:\"<3\", shard:\"#ANY\" , node:\"ANY\"}]\n}\n}\n\n\nthis policy will be referred to in the state.json. There will be no attribute called maxShardsPerNode persisted to the state.json.\n\nif there is already a policy being specified for the collection, solr should throw an error asking the user to edit the policy directly\n\nthe name is bad\n\nWe must rename the attribute maxShardsPerNode to maxReplicasPerNode. This should be a backward compatible change. The old name will continue to work and the API would give a friendly warning if the old name is used",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-04T14:13:40+0000",
            "content": "Thanks Noble. The problem isn't about persisting this value. It is actually about how to use it such that we avoid confusion.\n\nWe support replica in the cluster and collection policy using which a user can limit the number of replicas on each node. The same thing is also supported today with maxShardsPerNode parameter. However the two can easily conflict and when they do, the current implementation tries to satisfy both (and the minimum of them wins). This is very confusing. For example, if the cluster policy has:\n\n{'replica':'<2', 'shard': '#EACH', 'node': '#ANY'}\n\n\nand a user invokes the following on a cluster of 2 nodes:\n\n/admin/collections?action=create&numShards=1&replicationFactor=6&maxShardsPerNode=10\n\n\nThen the command fails saying that the cluster policy rule could not be satisfied. This is in spite of the fact that the user had explicitly provided maxShardsPerNode parameter.\n\nI like this proposal. It removes confusion and preserves compatibility. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16073698"
        },
        {
            "date": "2017-07-04T14:14:43+0000",
            "content": "I also think that we should do this in 7.0 because the policy framework is already being released as part of it. Therefore I propose that this be made a blocker for 7.0 release.\n\nActually on further thought, although this behavior is not desirable, there is no technical reason why this should block 7.0. Lets defer this for 7.1 ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16073700"
        },
        {
            "date": "2017-07-04T14:31:34+0000",
            "content": "The renaming of maxShardsPerNode deserves its own issue I think. We shouldn't club the two together. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16073742"
        },
        {
            "date": "2017-08-16T12:19:56+0000",
            "content": "This is not required anymore because of SOLR-11239 ",
            "author": "Noble Paul",
            "id": "comment-16128701"
        },
        {
            "date": "2017-12-12T05:09:20+0000",
            "content": "If this is not required, can we close it? ",
            "author": "Erick Erickson",
            "id": "comment-16287117"
        }
    ]
}