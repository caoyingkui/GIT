{
    "id": "SOLR-4743",
    "title": "Empty queries crashing SOLR 3.6.2 server",
    "details": {
        "affect_versions": "3.6.2",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Not A Bug"
    },
    "description": "If you specify group=true but don't specify group.query or group.field SOLR throws a SEVERE exception following which we see the empty queries and finally no responses via solrj and admin console gives numFound always equal to total number of docs in index (it's 21692 as shown below). Looks like the searcher goes for a spin once it encounters the exception. Such situation should have been gracefully handled\n\nEXCEPTION and QUERY\n--------------------\n[#|2013-04-19T23:47:53.363-0400|SEVERE|sun-appserver2.1.1|org.apache.solr.core.SolrCore|_ThreadID=26;_ThreadName=httpSSLWorkerThread-9001-17;_RequestID=2f\n933642-cad0-40e5-86c6-65b00be9bb97;|org.apache.solr.common.SolrException: Specify at least one field, function or query to group by.\nat org.apache.solr.search.Grouping.execute(Grouping.java:228)\nat org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:372)\nat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:186)\nat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\nat org.apache.solr.core.SolrCore.execute(SolrCore.java:1376)\nat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:365)\nat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:260)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:246)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\nat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:313)\nat org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:287)\nat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:218)\nat org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:648)\nat org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:593)\nat com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:94)\nat com.sun.enterprise.web.PESessionLockingStandardPipeline.invoke(PESessionLockingStandardPipeline.java:98)\nat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:222)\nat org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:648)\nat org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:593)\nat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:587)\nat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:1093)\nat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:166)\nat org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:648)\nat org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:593)\nat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:587)\nat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:1093)\nat org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:291)\nat com.sun.enterprise.web.connector.grizzly.DefaultProcessorTask.invokeAdapter(DefaultProcessorTask.java:670)\nat com.sun.enterprise.web.connector.grizzly.DefaultProcessorTask.doProcess(DefaultProcessorTask.java:601)\nat com.sun.enterprise.web.connector.grizzly.DefaultProcessorTask.process(DefaultProcessorTask.java:875)\nat com.sun.enterprise.web.connector.grizzly.DefaultReadTask.executeProcessorTask(DefaultReadTask.java:365)\nat com.sun.enterprise.web.connector.grizzly.DefaultReadTask.doTask(DefaultReadTask.java:285)\nat com.sun.enterprise.web.connector.grizzly.DefaultReadTask.doTask(DefaultReadTask.java:221)\nat com.sun.enterprise.web.connector.grizzly.TaskBase.run(TaskBase.java:269)\nat com.sun.enterprise.web.connector.grizzly.ssl.SSLWorkerThread.run(SSLWorkerThread.java:111)\n\n\n\n#]\n\n\n\n\n\n[#|2013-04-19T23:47:53.365-0400|INFO|sun-appserver2.1.1|org.apache.solr.core.SolrCore|_ThreadID=26;_ThreadName=httpSSLWorkerThread-9001-17;|[core1] webapp=/solr path=/select params=\n{q=astronomy\\+&rows=10&start=0&facet=true&fq=source:\"xxx.com\"&fq=locations:(\"Maryland\")&sort=score+desc&group=true}\n status=400 QTime=9 |#]\n\nEMPTY QUERY\n------------\n[#|2013-04-20T17:35:50.933-0400|INFO|sun-appserver2.1.1|org.apache.solr.core.SolrCore|_ThreadID=26;_ThreadName=httpSSLWorkerThread-9001-6;|[core1] webapp=/solr path=/select params={} hits=21692 status=0 QTime=16 |#]",
    "attachments": {
        "server.log_2013-04-20T09-53-28": "https://issues.apache.org/jira/secure/attachment/12579885/server.log_2013-04-20T09-53-28",
        "solrconf.xml": "https://issues.apache.org/jira/secure/attachment/12579886/solrconf.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13638158",
            "date": "2013-04-22T16:47:29+0000",
            "content": "Ravi: i can not reproduce the problem you are describing using Solr 3.6.2 with the example configuration.  Can you please provide more details about exactly what your configuration looks like, and the full details of your logs for several minutes during the time you see solr being unresponsive?  ideally provide some thread dumps (youcan use jstack) showing what solr is doing during that time?\n\nthe steps i attempted to follow to reproduce...\n\n1) start up the 3.6.2 solr example (cd example && java -jar start)\n2) in another window, index all the example docs (cd example/exampledocs && java -jar post.jar *.xml)\n3) curl 'http://localhost:8983/solr/select?q=:&group=true'\n\nstep #3 did infact produce a 400 error \"Specify at least one field, function or query to group by.\" with a logged stack trace matching the one you mentioned, but nothing else appeared in the log after that \u2013 no empty queries.  and the CPU did not spike or indicate any sort of infinite loop in solr.  subsequent attempts to use solr for other queries functioned normally  "
        },
        {
            "author": "Ravi Kiran Bhaskar",
            "id": "comment-13638319",
            "date": "2013-04-22T18:58:03+0000",
            "content": "Solr log showing issue "
        },
        {
            "author": "Ravi Kiran Bhaskar",
            "id": "comment-13638352",
            "date": "2013-04-22T19:20:57+0000",
            "content": "Hoss: Thank you very much for promptly following up. You are correct that you can still query even after the exception happens, however, its a slowly degrades to being a vegetable. You will see in the logs that as time progresses the empty queries keep growing and finally we restart the glassfish, I must admit that I may be a bit more paranoid/zealous than usual about relating the exception with the empty queries, so take it with a grain of salt. \n\n\nUnfortunately since this is happening on production servers we had to restart immediately and hence we couldn't get the thread dumps. However I have attached the log file that show logs from sane to bust to restart of glassfish server. Look for the word 'JBI' to mark start or stop of glassfish. I have also attached the solrconfig.xml. Obviously I had to modify some paths and names in solrconfig and log to obfuscate important details as per my company's security policy.\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13638544",
            "date": "2013-04-22T22:57:48+0000",
            "content": "You are correct that you can still query even after the exception happens, however, its a slowly degrades to being a vegetable. \n\nNo matter how much i hammer on solr 2 3.6.with \"group=true\" queries that throw 400 errors because they don't specify a group field or query, i have never been able to reproduce the \"empty\" queries that show up in your log that you say are slowing things down\n\nare you absolutely certain these aren't being generated by an external client?  perhaps whatever client is generating these \"group=true\" requests is behaving badly when it gets the 400 error and subsequently sending the empty queries?\n\nI'm afraid w/o detailed steps that someone (like me) can follow to be able to reproduce the symptoms you are seeing, there isn't much we can do to help here. "
        },
        {
            "author": "Ravi Kiran Bhaskar",
            "id": "comment-13638625",
            "date": "2013-04-23T00:47:16+0000",
            "content": "I apologize for pushing you into this wild goose chase, We blocked all group queries that don't have group.field or group.query but still our issue persisted. After some sleuthing I traced the issue back to the empty queries. I was able to reproduce the empty queries by just hitting the url \"http://server:port/solr/select\" (yes, without any params). However I was not able to simulate the same empty query with solrj.\n\nWe use a single static HttpSolrServer instance in our code, so, assuming that if it's possible to generate empty query via solrj, since wt and version are not available in the solr params, HttpSolrSever will respond with and XML instead of javabin format which will cause the SolrJ's JavaBinCodec's method to throw an \"expected 2 but got 60\" exception. So the question is, if there are lot of errors like that will the HttpSolrServer or underlying HttpClient go into inconsistent state ? If yes, that would explain why only a restart seems to make it work normally again. Is there a way we can configure HttpSolrServer or its underlying HttpClient to recover itself from such errors ? "
        },
        {
            "author": "Ravi Kiran Bhaskar",
            "id": "comment-13643419",
            "date": "2013-04-27T00:28:07+0000",
            "content": "After a bit more debugging figured out that the issue is not related to group query at all but is closely linked to the empty queries that I mentioned. I am unable to figure out how and why SOLR is swallowing the query params, is it related to SOLR-4266 in any way ? I have checked the solr logs I dont see any exceptions. The machine's CPU and memory are quite normal. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15600706",
            "date": "2016-10-24T02:13:07+0000",
            "content": "An ancient bug report that was not reproducible fully. "
        }
    ]
}