{
    "id": "SOLR-9546",
    "title": "There is a lot of unnecessary boxing/unboxing going on in {{SolrParams}} class",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Here is an excerpt \n\n\n  public Long getLong(String param, Long def) {\n    String val = get(param);\n    try {\n      return val== null ? def : Long.parseLong(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n\n\nLong.parseLong() returns a primitive type but since method expect to return a Long, it needs to be wrapped. There are many more method like that. We might be creating a lot of unnecessary objects here.\n\nI am not sure if JVM catches upto it and somehow optimizes it if these methods are called enough times (or may be compiler does some modifications at compile time)\n\n\nLet me know if I am thinking of some premature optimization",
    "attachments": {
        "SOLR-9546.patch": "https://issues.apache.org/jira/secure/attachment/12831843/SOLR-9546.patch",
        "SOLR-9546_CloudMLTQParser.patch": "https://issues.apache.org/jira/secure/attachment/12840706/SOLR-9546_CloudMLTQParser.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-21T20:37:41+0000",
            "author": "Yonik Seeley",
            "content": "Hmmm, that's weird... the original methods did use primitives.\nLooking at the current class, there is still the original version:\n\n\n  /** Returns the long value of the param, or def if not set */\n  public long getLong(String param, long def) {\n    String val = get(param);\n    try {\n      return val == null ? def : Long.parseLong(val);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex);\n    }\n  }\n\n\n\nBut it looks like the version you reference was added more recently as part of SOLR-6485\nAnyway, I searched for usages, and that version is only used once (as part of the issue above it looks like) ",
            "id": "comment-15511103"
        },
        {
            "date": "2016-09-21T21:02:23+0000",
            "author": "Yonik Seeley",
            "content": "That was just one example. Check getBool()\n\nI was responding to \"unnecessary boxing\".  For getBool for example, has both a boxed and primitive version:\nThe boxed version is so you can tell if a value was actually present, and the primitive version can be used if you provide the primitive default.\n\n  /** Returns the Boolean value of the param, or null if not set */\n  public Boolean getBool(String param) {\n    String val = get(param);\n    return val==null ? null : StrUtils.parseBool(val);\n  }\n\n  /** Returns the boolean value of the param, or def if not set */\n  public boolean getBool(String param, boolean def) {\n    String val = get(param);\n    return val==null ? def : StrUtils.parseBool(val);\n  }\n\n ",
            "id": "comment-15511162"
        },
        {
            "date": "2016-09-21T21:14:05+0000",
            "author": "Pushkar Raste",
            "content": "Got you.\nI will fix the  Long getLong(String param, Long def) method only. It is not as bad as I initially thought.\n\nI don't even think that method is needed. Calling Long getLong(String param) would do the same thing, won't it? ",
            "id": "comment-15511196"
        },
        {
            "date": "2016-09-23T16:07:10+0000",
            "author": "Pushkar Raste",
            "content": "I went through usage of most of the methods that return Wrapper types. I think `SolrParams` class is encouraging usage of wrapper types (or people might are just missing the fact that they might end up creating lot of wrapper objects). Here are few are some places which can use primitive types by passing a default value \n\nSolrParams.getInt()\n\n\tHashQParser.parse()\n\tTextLogisticRegressionQParser.parse()\n\tCloudMLTQParser.parse()\n\tSimpleMLTQParser.parse()\n\n\n\ngetBool()\n\n\tZkController.rejoinShardElection()\n\tDumpRequestHandler.handleRequestBody()\n\tPingRequestHandler.handleRequestBody()\n\tMoreLikeThisComponent.process()\n\tBinaryResponseWriter.write()\n\tJSONResponseWriter.write()\n\tPHPResponseWriter.write()\n\tXMLResponseWriter.write()\nJVM might do something smart for `Boolean` type, since there are only two possible values.\n\n\n\n\nThere are some test classes as well.\n\nThere are some other classes that do depend upon values being `null`. \n\n\n\tI can modify all the places mentioned above to call get<Type>(param, df) version,  or\n\tWe can simply add `getPrimitive<Type>()` methods that return default value  in absence of a param, to make it clear that these methods would return a primitive\n\n\n\n\nAnother possibility, I am overthinking here , and this ticket can be closed. ",
            "id": "comment-15516844"
        },
        {
            "date": "2016-10-03T18:05:17+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user praste opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/88\n\n    SOLR-9546 Refactored to use primitives instead of wrappers\n\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/praste/lucene-solr SOLR-9546\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/88.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #88\n\n\ncommit f77b31bd038abe8cb974240424fd072a35adae4f\nAuthor: Pushkar Raste <praste@bloomberg.net>\nDate:   2016-10-03T18:04:24Z\n\n    SOLR-9546 Refactored to use primitives instead of wrappers\n\n ",
            "id": "comment-15543012"
        },
        {
            "date": "2016-10-03T18:06:33+0000",
            "author": "Pushkar Raste",
            "content": "This is not a critical issue, and I might be doing premature optimization. ",
            "id": "comment-15543017"
        },
        {
            "date": "2016-10-03T18:06:34+0000",
            "author": "Pushkar Raste",
            "content": "This is not a critical issue, and I might be doing premature optimization. ",
            "id": "comment-15543018"
        },
        {
            "date": "2016-10-21T13:28:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ccbafdc403fb66e4becfe1b934957f6247b07a7a in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ccbafdc ]\n\nSOLR-9546: Eliminate unnecessary boxing/unboxing going on in SolrParams ",
            "id": "comment-15595075"
        },
        {
            "date": "2016-10-21T13:46:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 49ca9cea7283ab54086fdedd09889d171c777052 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=49ca9ce ]\n\nSOLR-9546: reverted some changes ",
            "id": "comment-15595127"
        },
        {
            "date": "2016-10-21T13:55:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f51340993aea7cca3053844284c115bddaa90215 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f513409 ]\n\nSOLR-9546: Eliminate unnecessary boxing/unboxing going on in SolrParams ",
            "id": "comment-15595162"
        },
        {
            "date": "2016-10-21T13:55:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7131849892f07ae9ad5cb945a138078e94fcb919 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7131849 ]\n\nSOLR-9546: reverted some changes ",
            "id": "comment-15595163"
        },
        {
            "date": "2016-10-21T17:27:25+0000",
            "author": "Pushkar Raste",
            "content": "Patch for CloudMLTQParser ",
            "id": "comment-15595764"
        },
        {
            "date": "2016-11-25T04:05:33+0000",
            "author": "Noble Paul",
            "content": "All these changes are there already in trunk? ",
            "id": "comment-15694768"
        },
        {
            "date": "2016-11-25T20:53:25+0000",
            "author": "Pushkar Raste",
            "content": "I think you reverted changes in the CloudMLTQParser class as some tests were failing. I added a patch SOLR-9546_CloudMLTQParser.patch only for  CloudMLTQParser class ",
            "id": "comment-15696663"
        },
        {
            "date": "2016-11-26T15:41:56+0000",
            "author": "Noble Paul",
            "content": "Try applying the patch, it's already there ",
            "id": "comment-15698105"
        },
        {
            "date": "2016-11-27T17:04:25+0000",
            "author": "Pushkar Raste",
            "content": "Are you still talking about the CloundMLTQParser patch? If it was applied how come I still see code that uses objects ?\n\nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/search/mlt/CloudMLTQParser.java#L72-L91 ",
            "id": "comment-15699996"
        },
        {
            "date": "2016-11-28T06:03:26+0000",
            "author": "Noble Paul",
            "content": "Please try to apply your patch and let me know ",
            "id": "comment-15701031"
        },
        {
            "date": "2016-11-28T19:52:01+0000",
            "author": "Pushkar Raste",
            "content": "Looks like we stepped on each other foot when I was fixing the CloudMLTQParser class. Please check updated patch. ",
            "id": "comment-15702936"
        },
        {
            "date": "2016-11-29T12:33:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 70b358960dfe8a6da35991b2a84c93cc9370c3d8 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=70b3589 ]\n\nSOLR-9546: remove unnecessary boxing ",
            "id": "comment-15705188"
        },
        {
            "date": "2016-11-29T12:34:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 25a439c51c67ab46286d6a490bd166aea793c951 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=25a439c ]\n\nSOLR-9546: remove unnecessary boxing ",
            "id": "comment-15705193"
        },
        {
            "date": "2016-11-29T14:31:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 70b358960dfe8a6da35991b2a84c93cc9370c3d8 in lucene-solr's branch refs/heads/feature/metrics from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=70b3589 ]\n\nSOLR-9546: remove unnecessary boxing ",
            "id": "comment-15705436"
        },
        {
            "date": "2017-05-15T12:15:21+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "This jira appears in CHANGES.txt for 6.3.0, please tag appropriately and close. ",
            "id": "comment-16010401"
        },
        {
            "date": "2017-05-25T21:32:41+0000",
            "author": "Varun Thacker",
            "content": "Marking this issue as resolved. ",
            "id": "comment-16025426"
        }
    ]
}