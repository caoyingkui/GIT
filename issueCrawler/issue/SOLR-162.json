{
    "id": "SOLR-162",
    "title": "lucene index browser / admin helpers (Luke)",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Luke (http://www.getopt.org/luke/) is a great tool to help learn / understand / debug lucene indexes.\n\nSolr already does a lot of what luke does... but it could do a bit more.  Specifically:\n\n\n\tbrowse top terms across all fields (similar to faceting)\n\tbrowse lucene documents / properties directly",
    "attachments": {
        "SOLR-162-Admin-XML-luke.patch": "https://issues.apache.org/jira/secure/attachment/12351406/SOLR-162-Admin-XML-luke.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12473843",
            "date": "2007-02-16T22:37:46+0000",
            "content": "\nThis patch moves a lot of the /admin jsp pages to SolrRequestHandlers and adds a LukeRequestHandler to let you browse a lucene index (even if it does not match the solr schema).  I don't know XSLT well enough to make anything look good yet, but with an ok XSLT file, we could replace many of the .jsp files.\n\npages of interest:\n\nhttp://localhost:8983/solr/admin/\n\nhttp://localhost:8983/solr/admin/file\nhttp://localhost:8983/solr/admin/file?file=solrconfig.xml\nhttp://localhost:8983/solr/admin/threads\nhttp://localhost:8983/solr/admin/registry\nhttp://localhost:8983/solr/admin/registry?wt=json&indent=true\nhttp://localhost:8983/solr/admin/stats\nhttp://localhost:8983/solr/admin/ping\nhttp://localhost:8983/solr/admin/properties\nhttp://localhost:8983/solr/admin/properties?name=java.home\nhttp://localhost:8983/solr/admin/logging\nhttp://localhost:8983/solr/admin/logging?set=FINE \n\nhttp://localhost:8983/solr/admin/luke (field info + top fields)\nhttp://localhost:8983/solr/admin/luke?field=cat (like faceting)\nhttp://localhost:8983/solr/admin/luke?docID=10 (lucene doc + solr doc)\nhttp://localhost:8983/solr/admin/luke?id=10 (lucene doc + solr doc)\nhttp://localhost:8983/solr/admin/luke?id=MA147LL/A "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12473849",
            "date": "2007-02-16T23:06:14+0000",
            "content": "Wow, what can I say... you continue to out pace us committers, Ryan.\nI'll try and look at at least one of the open issues this weekend.  "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12473865",
            "date": "2007-02-17T02:04:10+0000",
            "content": "This is truly great stuff, Ryan!  whew I can't keep up.\n\nI did however become really intrigued by this particular patch and tried it out.  I like all these details and Flare will certainly leverage this stuff deeply.  \n\nOne comment.  for this request http://localhost:8888/solr/admin/ping?wt=ruby&indent=on all that was logged was this:\n\nFeb 16, 2007 8:59:22 PM org.apache.solr.core.SolrCore execute\nINFO: wt=ruby&indent=on 0 8\n\nI realize this is tangentially related to this issue, and nothing introduced with this patch, but I'd like to see the path (admin/ping, in this case) in the log as well so that requests could be recreated easily.  I'm used to the solr/select? stuff and tacking on what I get in the log file, but with the newly revamped mega flexible paths, it'd be handy to see the path here.  "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12473874",
            "date": "2007-02-17T03:39:26+0000",
            "content": "check SOLR-149.  it adds the path to a request and prints it out with the log.   "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12473920",
            "date": "2007-02-17T11:20:17+0000",
            "content": "Ryan - I would like to see the Maps used instead of NamedLists for things that truly don't need to be lists.  For example, /admin/file?wt=ruby returns this:\n\n'files'=>[\n  'admin-extra.html',[\n\t'size',1094,\n\t'modified','2006-12-05T02:30:56Z'],...\n\n'size' and 'modified' should be keys in a hash instead of in a list.  Should be no big deal to switch over things where order doesn't matter to maps though.  Likewise for /admin/threads and /admin/registry, and maybe others. "
        },
        {
            "author": "Bertrand Delacretaz",
            "id": "comment-12473932",
            "date": "2007-02-17T14:06:45+0000",
            "content": "I briefly tested this, it looks very useful, and the different RequestHandlers make the code very modular, way to go!\n\nOne nitpick: I'd use \"system.properties\" instead of \"properties\", it's more precise.\n\nAnd two suggestions related to XSLT transformations for presentation:\n\n1) It'd be good to systematically include in the output XML the class name of the SolrRequestHandler used. XSLT transforms can then use this info to adapt themselves to the information being output.\n\n2) It'd be good to name <lst> elements, as much as possible, also to allow XSLT transforms to adapt themselves to the content.\n\nFor example, using a NamedList instead of an ArralyList in the \"Now show all the threads\" loop in ThreadDumpRequestHandler:\n\n    NamedList<NamedList<Object>> lst = new NamedList<NamedList<Object>>();\n    for (ThreadInfo ti : tinfos) \n{\n      lst.add( \"thread\", getThreadInfo( ti ) );\n    }\n\nOutputs this:\n\n<lst name=\"thread\">\n  <long name=\"id\">35</long>\n  <str name=\"name\">P1-19</str>\n  <str name=\"state\">RUNNABLE</str>...\n\nwhere the name=\"thread\" attribute can be used to decide how to present the contents of the <lst> element.\n\nThinking about it, we might want to add a \"datatype\" attribute to these lists, to use when presenting them?\n\n<lst datatype=\"java.lang.Thread\">\n\nwould help present all Thread info in a consistent way, no matter where it comes from.\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12473949",
            "date": "2007-02-17T18:18:14+0000",
            "content": "Thanks for your feedback, here is an updated version that:\n\n1. replaces NamedList<> with Map<String,> wherever possible.  This makes the direct XML output look funny (the stack trace is displayed before the thread name), but it is probably a good idea so clients can easily access stuff by name.\n\n2. I added a parameter \"echoHandler\" that behaves just like \"echoParams\" - it writes the handler name to the responseHeader.  \n\n3. I added the default params echoHandler=true and echoParams=explicit to all the /admin/* handlers.  This gets a bit verbose and will be helped by \n\n4. I moved the responseHeader writing from SolrCore to RequestBaseHandler.  This is good because RequestHandler authors control the header more explicitly if necessary.\n\n5. added a name to each thread in the thread list.  I don't see any other lists without names, but i could be missing something.\n\n6. changed the output in PropertiesRequestHandler from \"properties\" to \"system.properties\"\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12473950",
            "date": "2007-02-17T18:23:09+0000",
            "content": "3. ... will be helped by SOLR-112 "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12473975",
            "date": "2007-02-18T02:53:23+0000",
            "content": "> 1. replaces NamedList<> with Map<String,> wherever possible. This makes the direct XML output look funny (the stack > trace is displayed before the thread name), but it is probably a good idea so clients can easily access stuff by name.\n\nIf you want map output semantics (important distinction for other formats like JSON), but the ability to control order w/o the overhead of LinkedHashMap, see SimpleOrderedMap.\nIt subclasses NamedList, so it's easy to convert code that previously used NamedList. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12473982",
            "date": "2007-02-18T06:57:52+0000",
            "content": "using SimpleOrderedMap - this keeps nice ordering for XML and uses map syntax for JSON/ruby.\n\nthanks Yonik! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12474333",
            "date": "2007-02-20T01:54:29+0000",
            "content": "i barely started to scratch the surface looking at this patch while checking something for SOLR-142, but before i forget i wanted to raise one red flag...\n\nthis patch removes the call to setResponseHeaderValues from SolrCore and moves it to RequestHandlerBase with the assumption that RequestHandlers can take care of it ... this is a bad idea since there is no requirement that RequestHandler extend that class \u2013 any solr1.1 users who have written their own request handlers will be screwed. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12474335",
            "date": "2007-02-20T02:05:25+0000",
            "content": "yes, that is a problem! \n\nI'll wait till SOLR-142 gets checked in, then post an update that puts the header stuff back in SolrCore "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12474393",
            "date": "2007-02-20T10:07:37+0000",
            "content": "I put setResponseHeaderValues from SolrCore.\n\nUses the automatic configuration and utility classes from SOLR-85\n\n<admin>\n  <registerStandardHandlers>/admin</registerStandardHandlers>\n  ...\n</admin>\n\n(perhaps this and SOLR-85 should be combined?) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12478259",
            "date": "2007-03-06T04:43:11+0000",
            "content": "oops, had the link the wrong way "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12482632",
            "date": "2007-03-21T01:56:45+0000",
            "content": "Updated to:\n\n\tuse SOLR-182 rather then implement its own dynamic loading at startup\n\tapply without conflicts\n\tuse Luke 0.7 style to represent more field properties:\n\n\n\n\"key\":\n{\n  \"I\":\"Indexed\",\n  \"T\":\"Tokenized\",\n  \"S\":\"Stored\",\n  \"M\":\"Multivalued\",\n  \"V\":\"TermVector Stored\",\n  \"o\":\"Store Offset With TermVector\",\n  \"p\":\"Store Position With TermVector\",\n  \"O\":\"Omit Norms\",\n  \"L\":\"Lazy\",\n  \"B\":\"Binary\",\n  \"C\":\"Compressed\",\n  \"f\":\"Sort Missing First\",\n  \"l\":\"Sort Missing Last\"}\n,\n\"fields\":{\n \"id\":{\n\t\"type\":\"string\",\n\t\"schema\":\"I-S---O---l\",\n\t\"flags\":\"I-S---O----\",\n\t...\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12486876",
            "date": "2007-04-05T07:57:32+0000",
            "content": "Major updates to the 'luke' part.  It is getting really good!\n\nI removed everything that complicated integration - rather then try to replace exiting /admin/xxx.jsp, this will sit next to it until someone wants to make a nice XSLT thing so we can remove the jsp/jdk requirement.\n\nThis includes request handlers for:\n\n  <requestHandler name=\"/admin/luke\"       class=\"org.apache.solr.handler.admin.LukeRequestHandler\" />\n  <requestHandler name=\"/admin/system\"     class=\"org.apache.solr.handler.admin.SystemInfoHandler\" />\n  <requestHandler name=\"/admin/plugins\"    class=\"org.apache.solr.handler.admin.PluginInfoHandler\" />\n  <requestHandler name=\"/admin/threads\"    class=\"org.apache.solr.handler.admin.ThreadDumpHandler\" />\n  <requestHandler name=\"/admin/properties\" class=\"org.apache.solr.handler.admin.PropertiesRequestHandler\" />\n\nThe only two i really care about are:\n LukeRequestHandler and SystemInfoHandler\nIf removing the others makes anyone happier, its fine with me.\n\nI also started a wiki page for documentation:\nhttp://wiki.apache.org/solr/LukeRequestHandler\n\nI think this is almost ready to commit.\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492617",
            "date": "2007-04-30T00:43:56+0000",
            "content": "commited "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589304",
            "date": "2008-04-15T23:44:43+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.2\n\n\n\nThe Fix Version for all 39 issues found was set to 1.2, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman2 "
        }
    ]
}