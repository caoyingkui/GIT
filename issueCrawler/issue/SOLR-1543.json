{
    "id": "SOLR-1543",
    "title": "StreamingUpdateSolrServer threading bug",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "StreamingUpdateSolrServer - indexing process stops in a couple of hours\nhttp://search.lucidimagination.com/search/document/352d3c8cd3bbc8cb",
    "attachments": {
        "SOLR-1543.patch": "https://issues.apache.org/jira/secure/attachment/12424174/SOLR-1543.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12774141",
            "date": "2009-11-06T00:14:34+0000",
            "content": "I don't totally understand this code (and it doesn't have enough comments as to how some of the threading/locking works), but I do notice that blockUntilFinished doesn't unlock the lock in a finally block. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12774164",
            "date": "2009-11-06T00:57:27+0000",
            "content": "This patch most likely does not fix the problem (I don't even know how to reproduce the problem at this point).  But it does:\n\n\tunlock the lock in a finally block\n\tfix thread visibility of the lock by making it volatile\n\tchange the lock in each runner to be a countdown latch since the only purpose appears to be to wait for the runner to stop.  This fixes a race condition where previously the lock/unlock pair in blockUntilFinished() could possibly execute before the runner itself locks the lock.\n\n\n\nThere are other race conditions and thread safety problems I see, but I'm not sure if any are serious or not. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12774172",
            "date": "2009-11-06T01:23:49+0000",
            "content": "OK, I'm able to reproduce the problem with the test code in the referenced thread... looking into why. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12774179",
            "date": "2009-11-06T01:46:31+0000",
            "content": "Found it.\n\nAll of the threads check \"lock\" and block on it.\nWhen the lock unlocks, one thread locks it again, gets through, but never unlocks it because the lock instance var as been nulled.  The solution is to copy the lock var into a local variable and use that for all lock operations. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12774180",
            "date": "2009-11-06T01:49:02+0000",
            "content": "OK, here's the patch, with the lock converted to a latch so all blocked threads can be released at once. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12774182",
            "date": "2009-11-06T02:01:15+0000",
            "content": "committed on trunk and 1.4 branch. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775918",
            "date": "2009-11-10T15:52:18+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}