{
    "id": "SOLR-9496",
    "title": "SolrJ + Kerberos Requires commons-codec",
    "details": {
        "components": [
            "SolrJ"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.2",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "When using SolrJ 6.2 with Kerberos enabled on the server (also 6.2), the following exception was encountered:\n\n\njava.lang.NoClassDefFoundError: org/apache/commons/codec/binary/Base64\n\tat org.apache.http.impl.auth.GGSSchemeBase.<init>(GGSSchemeBase.java:85) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.auth.SPNegoScheme.<init>(SPNegoScheme.java:54) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.auth.SPNegoSchemeFactory.newInstance(SPNegoSchemeFactory.java:78) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.auth.AuthSchemeRegistry.getAuthScheme(AuthSchemeRegistry.java:113) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.auth.AuthSchemeRegistry$1.create(AuthSchemeRegistry.java:151) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.AuthenticationStrategyImpl.select(AuthenticationStrategyImpl.java:188) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.TargetAuthenticationStrategy.select(TargetAuthenticationStrategy.java:43) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.auth.HttpAuthenticator.handleAuthChallenge(HttpAuthenticator.java:154) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.HttpAuthenticator.authenticate(HttpAuthenticator.java:58) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.DefaultRequestDirector.handleResponse(DefaultRequestDirector.java:1057) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:515) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:882) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:107) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55) ~[httpclient-4.4.1.jar:4.4.1]\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:497) ~[na:na]\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:261) ~[na:na]\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:250) ~[na:na]\n\tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.doRequest(LBHttpSolrClient.java:403) ~[na:na]\n\tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(LBHttpSolrClient.java:355) ~[na:na]\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.sendRequest(CloudSolrClient.java:1291) ~[na:na]\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:1061) ~[na:na]\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:997) ~[na:na]\n\tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:149) ~[na:na]\n\tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:166) ~[na:na]\n\n\n\nAdding a dependency to my project on commons-codec resolved the issue:\n\n        <dependency>\n            <groupId>commons-codec</groupId>\n            <artifactId>commons-codec</artifactId>\n            <version>1.10</version>\n        </dependency>\n\n\n\nSolrJ should include this dependency if it is required for Kerberos authentication. \n\nIf not we should consider updating the SolrJ section on the Wiki page here to mention that client application needs to add it:\nhttps://cwiki.apache.org/confluence/display/solr/Kerberos+Authentication+Plugin",
    "attachments": {
        "SOLR-9496.patch": "https://issues.apache.org/jira/secure/attachment/12830413/SOLR-9496.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-26T22:21:17+0000",
            "author": "Kevin Risden",
            "content": "Ishan Chattopadhyaya / Noble Paul - Saw you added a dependency in SOLR-9542. I noticed this issue with missing base64. Any issues with adding commons-codec as a dependency to solrj? Is there a better way? ",
            "id": "comment-15524356"
        },
        {
            "date": "2016-09-26T22:25:37+0000",
            "author": "Kevin Risden",
            "content": "Adding a quick patch if adding the dependency is the right direction. ",
            "id": "comment-15524365"
        },
        {
            "date": "2016-10-07T13:28:50+0000",
            "author": "Kevin Risden",
            "content": "David Smiley - I know you had some concerns about adding new dependencies to SolrJ. Any thoughts here? ",
            "id": "comment-15555075"
        },
        {
            "date": "2016-10-07T15:10:55+0000",
            "author": "David Smiley",
            "content": "Java 8 finally added a Base64 encoder: https://docs.oracle.com/javase/8/docs/api/java/util/Base64.html\n\nMight it be possible to get HttpClient to use that?  Maybe it's within our control to extend/plug-in to HttpClient to do so? ",
            "id": "comment-15555341"
        },
        {
            "date": "2016-10-07T15:51:52+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Sorry, it escaped my attention. I had a quick look at the httpclient source (GSSSchemeBase), and it appeared to be difficult to extend this without needing to wait for the next httpclient release. \n\nIn that light, I think we should add a documentation note to the Kerberos page (SolrJ section) that user needs this dependency along with solrj in order to make kerberos work. I think such a step shouldn't be too bad, and would avoid having us to add this dependency to SolrJ. What do you think, Kevin, David?\n\nNoble Paul, Gregory Chanan any thoughts? ",
            "id": "comment-15555445"
        },
        {
            "date": "2016-10-07T16:07:22+0000",
            "author": "Kevin Risden",
            "content": "Adding documentation to the Kerberos SolrJ page makes sense to me. ",
            "id": "comment-15555486"
        },
        {
            "date": "2016-10-07T17:50:33+0000",
            "author": "Hrishikesh Gadre",
            "content": "Kevin Risden Ishan Chattopadhyaya\n\nIn that light, I think we should add a documentation note to the Kerberos page (SolrJ section) that user needs this dependency along with solrj in order to make kerberos work.\n\nI don't think adding this in the documentation is a good idea since dependency management tools should take care of this kind of stuff. If we are concerned with the adding extra dependencies for kerberos integration, we should think about cleanly separating out the security related stuff into a different (add-on) module so that can we can list all the kerberos dependencies there. This will ensure that users not using kerberos are not affected with these extra dependencies, at the same time users using kerberos don't run into type of issues mentioned in this jira. ",
            "id": "comment-15555754"
        },
        {
            "date": "2016-10-07T18:10:39+0000",
            "author": "Yonik Seeley",
            "content": "For the documentation route, we could also just document what may be removed when one doesn't use Kerberos. ",
            "id": "comment-15555813"
        },
        {
            "date": "2016-10-07T20:49:08+0000",
            "author": "David Smiley",
            "content": "Bummer we can't simply remove the dependency.\n\n\tI think the pom.xml can be modified to include this with <optional>true</optional>  (and thus it won't be transitively included.  I'm not sure how amenable our auto-pom.xml generation is to this; maybe there is precedent?\n\tadd a README.txt to the dist/solrj-lib/ dir that lists our dependencies with notes on them... and we can separate out this dependency to indicate when it's needed.\n\n\n\nInstead of the optional dependency, as Hrishikesh said, we could add some new solrj-kerberos plugin... I dunno; seems a bit heavy-handed solution.  But I'm good with it. ",
            "id": "comment-15556207"
        },
        {
            "date": "2016-10-07T23:40:11+0000",
            "author": "Hrishikesh Gadre",
            "content": "The problem with documentation route is that it will become out-of-date over the period of time. Since build file (ivy config) is the authentic source of dependency information, I would be more confident of the approach which is solely based on it.\n\nAnother point - even though we are currently discussing the solrj impact, there is also a desire to avoid dependencies on the server side (i.e. solr-core). e.g. Ishan Chattopadhyaya has been working on refactoring the dependency on old version of jackson library in solr-core (Ref: SOLR-9542 and HADOOP-13672). Now that we have first class support for Security, I would expect more authentication/authorization mechanisms integrated with Solr. It is quite possible that those integrations will bring in more dependencies that are not useful for all consumers of Solr. Hence instead of taking the documentation route, we should seriously consider refactoring the security integrations out of solr-core and solrj. This way folks can \"install\" only those plugins which they intend to use. ",
            "id": "comment-15556622"
        }
    ]
}