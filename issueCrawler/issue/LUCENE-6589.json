{
    "id": "LUCENE-6589",
    "title": "Less leniency in lucene/join",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "The lucene/join module expects a certain index structure but nothing validates it. Then at search time it either needs to validate the index structure in a slow way or be lenient and cope with what it is given.",
    "attachments": {
        "LUCENE-6589.patch": "https://issues.apache.org/jira/secure/attachment/12740665/LUCENE-6589.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14593520",
            "author": "Adrien Grand",
            "date": "2015-06-19T15:30:55+0000",
            "content": "Here is a patch which adds a CheckJoinIndex utility class and runs it in the join tests.\n\nI fixed some tests to not index garbage documents, and had to remove a test that assumed it was ok to have a non-deleted parent document with deleted children. "
        },
        {
            "id": "comment-14605288",
            "author": "Martijn van Groningen",
            "date": "2015-06-29T08:40:01+0000",
            "content": "+1! Maybe also add a test were this validation fails?\n\nWould be great if this validation could optionally run too in block join queries? Before a the Scorer goes do its job, if a validate option is enabled we would check the segment is sane. But this can be done in a followup issue (if it makes sense). "
        },
        {
            "id": "comment-14605590",
            "author": "Adrien Grand",
            "date": "2015-06-29T13:13:11+0000",
            "content": "Good point about testing the tester, I added a new test to make sure that we throw an exception when the index has an illegal structure.\n\nHowever I disagree about running this check while running block join queries. I think it should considered a heavy operation given that it needs to read the whole index and should only be run to ensure that the index has a good structure, pretty much like CheckIndex? "
        },
        {
            "id": "comment-14605695",
            "author": "Martijn van Groningen",
            "date": "2015-06-29T14:32:39+0000",
            "content": "Good point about testing the tester, I added a new test to make sure that we throw an exception when the index has an illegal structure.\n\nThanks! \n\nHowever I disagree about running this check while running block join queries. I think it should considered a heavy operation given that it needs to read the whole index and should only be run to ensure that the index has a good structure, pretty much like CheckIndex?\n\ntrue, good point. I was looking for a way to have the ability to run this validation easily elsewhere too (via a low level debug option). But having the utility available when the join jar is on the class path is good too, systems relying on block join can just add this to their testing infrastructure.\n\n+1 to commit!  "
        },
        {
            "id": "comment-14605701",
            "author": "Uwe Schindler",
            "date": "2015-06-29T14:36:31+0000",
            "content": "Can we also add this to Solr indexing checks? Because the search problems come merely from broken Solr indexes. I already wrote aout that on another issue, so I would really like to ad this testing to Solr! "
        },
        {
            "id": "comment-14605720",
            "author": "Adrien Grand",
            "date": "2015-06-29T14:52:49+0000",
            "content": "I agree it would be nice to have it integrated into Solr but I'm not sure where it should be: this is too expensive to run on every query and should be treated like CheckIndex. Should I open an issue to integrate CheckIndex and this new CheckJoinIndex into Solr? "
        },
        {
            "id": "comment-14609918",
            "author": "Adrien Grand",
            "date": "2015-07-01T10:53:06+0000",
            "content": "I opened SOLR-7744. "
        },
        {
            "id": "comment-14616591",
            "author": "ASF subversion and git services",
            "date": "2015-07-07T12:18:45+0000",
            "content": "Commit 1689637 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1689637 ]\n\nLUCENE-6589: Add CheckJoinIndex to validate index structure for joins. "
        },
        {
            "id": "comment-14616594",
            "author": "ASF subversion and git services",
            "date": "2015-07-07T12:19:56+0000",
            "content": "Commit 1689638 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1689638 ]\n\nLUCENE-6589: Add CheckJoinIndex to validate index structure for joins. "
        },
        {
            "id": "comment-14616618",
            "author": "ASF subversion and git services",
            "date": "2015-07-07T12:48:26+0000",
            "content": "Commit 1689648 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1689648 ]\n\nLUCENE-6589: Fix test bug. "
        },
        {
            "id": "comment-14616620",
            "author": "ASF subversion and git services",
            "date": "2015-07-07T12:49:33+0000",
            "content": "Commit 1689649 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1689649 ]\n\nLUCENE-6589: Fix test bug. "
        },
        {
            "id": "comment-14713167",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:05:58+0000",
            "content": "Bulk close for 5.3.0 release "
        },
        {
            "id": "comment-15008044",
            "author": "Mikhail Khludnev",
            "date": "2015-11-17T04:54:05+0000",
            "content": "Adrien Grand why don't allow to children to be deleted? "
        },
        {
            "id": "comment-15008306",
            "author": "Adrien Grand",
            "date": "2015-11-17T08:57:02+0000",
            "content": "Mikhail Khludnev We already require a block of documents to be entirely reindexed when adding or modifying a child document, so I think it's consistent to also have this requirement when deleting a child?\n\nIn addition, this is required after the simplifications from LUCENE-6553: now that live docs are applied on top of the query, we would only check if the parent doc IDs are live if you run a ToParentBlockJoinQuery, never the children. "
        },
        {
            "id": "comment-15008436",
            "author": "Mikhail Khludnev",
            "date": "2015-11-17T10:15:32+0000",
            "content": "thus, we presumably could support deleting a child doc in block, but I agree - it's unnecessarily complicate the code. Let's keep it as-is until we've got a considerable justification from users. \nThanks for the confirmation.        "
        }
    ]
}