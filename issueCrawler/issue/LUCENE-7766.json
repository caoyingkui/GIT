{
    "id": "LUCENE-7766",
    "title": "WordDelimiter(Graph)Filter does not handle split offsets after HTMLStripCharFilter correctly",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "6.2.1,                                            6.5",
        "status": "Open",
        "type": "Bug",
        "components": [],
        "fix_versions": []
    },
    "description": "When using the HTMLStripCharFilter before the WordDelimiterGraphFilter (or WordDelimiterFilter - I tested with both), the stripping of html from the text results in the inability to produce correct offsets for split tokens. \n\nConfigured with generate word parts, split on case change, and preserve original:\n\nExample string: \"MayBe\" produces these offsets (Word - start,end)\n\nMayBe - 0,5\nMay - 0,3\nBe - 3,5\n\n\nExample string \"May<b>Be</b>\" produces these offsets (Word- start,end)\n\nMayBe - 0,12\nMay - 0,12\nBe - 0,12\n\n\n\nNotice that 'may' and 'be' are created but the offsets are the same as the original 'MayBe'.\n\nI traced this down to logic within the WordDelimiterGraphFilter (and the WordDelimiterFilter before that)  to how 'hasIllegalOffsets' is calculated, as is in the source code:\n\n\n    // if length by start + end offsets doesn't match the term's text then set offsets for all our word parts/concats to the incoming\n    // offsets.  this can happen if WDGF is applied to an injected synonym, or to a stem'd form, etc:\n    hasIllegalOffsets = (savedEndOffset - savedStartOffset != savedTermLength);\n\n\n\n\nHere is sample code that can show the issue:\n\n\npublic class TestTokenizationIssue {\n    public static void main(String... args) throws IOException {\n        HTMLStripCharFilter charFilter = new HTMLStripCharFilter(getText());\n        WhitespaceTokenizer whitespaceTokenizer = new WhitespaceTokenizer();\n        whitespaceTokenizer.setReader(charFilter);\n        WordDelimiterGraphFilter wdgf = new WordDelimiterGraphFilter(whitespaceTokenizer,\n                WordDelimiterGraphFilter.GENERATE_WORD_PARTS | WordDelimiterGraphFilter.SPLIT_ON_CASE_CHANGE |\n                        WordDelimiterGraphFilter.PRESERVE_ORIGINAL, CharArraySet.EMPTY_SET);\n        wdgf.reset();\n\n        while (wdgf.incrementToken()) {\n            CharTermAttribute charTermAttribute = wdgf.getAttribute(CharTermAttribute.class);\n            OffsetAttribute offsetAttribute = wdgf.getAttribute(OffsetAttribute.class);\n\n            System.out.println(charTermAttribute.toString() + \" - \" + offsetAttribute.startOffset() + ',' + offsetAttribute.endOffset());\n        }\n    }\n\n    private static Reader getText() {\n        //return new StringReader(\"MayBe\");\n        return new StringReader(\"May<b>Be</b>\");\n    }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": []
}