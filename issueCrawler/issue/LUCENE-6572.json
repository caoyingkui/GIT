{
    "id": "LUCENE-6572",
    "title": "Highlighter depends on analyzers-common",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "modules/highlighter"
        ],
        "labels": "",
        "fix_versions": [
            "master (8.0)"
        ],
        "priority": "Blocker",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "This is a huge WTF, just for \"LimitTokenOffsetFilter\" which is only useful for highlighting.\n\nAdding all these intermodule dependencies makes things too hard to use.\n\nThis is a 5.3 release blocker.",
    "attachments": {
        "LUCENE-6572.patch": "https://issues.apache.org/jira/secure/attachment/12809237/LUCENE-6572.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14587892",
            "author": "Robert Muir",
            "date": "2015-06-16T11:26:42+0000",
            "content": "I also don't understand why it depends on join. So messy "
        },
        {
            "id": "comment-14591180",
            "author": "David Smiley",
            "date": "2015-06-18T03:34:46+0000",
            "content": "Rob,\nI put LimitTokenOffsetFilter into analysis/common from the Highlighter because it didn't seem to fundamentally be about highlighting, and because there are other TokenFilters of the pattern LimitToken*Filter TokenFilters there.\n\nThe highlighter module depends on some other modules, like \"Join\", because in short we don't yet have a Query visitor API. "
        },
        {
            "id": "comment-15322224",
            "author": "Adrien Grand",
            "date": "2016-06-09T09:25:01+0000",
            "content": "Given how simple this token filter is, what about having a copy it in the highlighter module? I tend to agree that keeping dependencies between modules at a minimum is important to keep things manageable. "
        },
        {
            "id": "comment-15322491",
            "author": "David Smiley",
            "date": "2016-06-09T13:27:27+0000",
            "content": "+0 sure. "
        },
        {
            "id": "comment-15322697",
            "author": "Michael McCandless",
            "date": "2016-06-09T15:26:26+0000",
            "content": "Given how simple this token filter is, what about having a copy it in the highlighter module?\n\n+1 "
        },
        {
            "id": "comment-15322913",
            "author": "Adrien Grand",
            "date": "2016-06-09T17:27:28+0000",
            "content": "Here is a patch. In the mean time, the ngram analyzer has been used in tests, so I adder a simplified (works on chars rather than code points, minLen==maxLen, does not refill) version to the test case. "
        },
        {
            "id": "comment-16653176",
            "author": "Simon Willnauer",
            "date": "2018-10-17T08:21:01+0000",
            "content": "I attached an updated patch for this to remove the dependency on the analyzer-common module. Can somebody take a quick look? "
        },
        {
            "id": "comment-16653179",
            "author": "Jim Ferenczi",
            "date": "2018-10-17T08:26:01+0000",
            "content": "+1 "
        },
        {
            "id": "comment-16653188",
            "author": "Simon Willnauer",
            "date": "2018-10-17T08:32:53+0000",
            "content": "> I also don't understand why it depends on join. So messy\n\nthat's a mess too and a general problem with highligiting. It's because we don't have a good way to extract the parent/child query to do the highlighting. One way of doing this would be to have a simple interface or query subclass that we can also extend ConstantScoreQuery from that has a `getQuery()` method. I am not sure we want this to be in core? "
        },
        {
            "id": "comment-16653212",
            "author": "Jim Ferenczi",
            "date": "2018-10-17T09:02:29+0000",
            "content": "Another solution would be to remove the support for the parent/child query in highlighting. I don't see how this can be useful since the inner query explicitly targets a different set of documents (not the one returned in the top hits). If users really wants this feature the unified highlighter has a simple mechanism to rewrite custom queries that are not handled by the default implementation. "
        },
        {
            "id": "comment-16653277",
            "author": "ASF subversion and git services",
            "date": "2018-10-17T09:47:28+0000",
            "content": "Commit 11a1b8c1a8fdca9f6314bd61695345737309b630 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=11a1b8c ]\n\nLUCENE-6572: Remove dependency on analyzer-common from highlighing\n\nThis makes a simplifed copy of LimitTokenOffsetFilter to the highlighting\nmodule to detach the dependency on analyzer-common. "
        },
        {
            "id": "comment-16653281",
            "author": "Simon Willnauer",
            "date": "2018-10-17T09:48:45+0000",
            "content": "> Another solution would be to remove the support for the parent/child query in highlighting. I don't see how this can be useful since the inner query explicitly targets a different set of documents (not the one returned in the top hits). If users really wants this feature the unified highlighter has a simple mechanism to rewrite custom queries that are not handled by the default implementation.\n\nI am ok with this. this is a breaking change FWIW. Martijn van Groningen do you have background on why we have support for these queries in highlighting? "
        },
        {
            "id": "comment-16653283",
            "author": "Simon Willnauer",
            "date": "2018-10-17T09:51:00+0000",
            "content": "seems like related to https://issues.apache.org/jira/browse/LUCENE-5929 "
        },
        {
            "id": "comment-16653407",
            "author": "Martijn van Groningen",
            "date": "2018-10-17T11:46:55+0000",
            "content": ">\u00a0do you have background on why we have support for these queries in highlighting?\n\nI don't recall why, but like the in comment you mention, it is weird to support this. A different highlight query should used for when child or parent documents need to be highlighed. Elasticsearch ignores parent/child queries when highlighting and expects that when users want highlighting for child docs that a highlight query should be specified. "
        },
        {
            "id": "comment-16653864",
            "author": "Simon Willnauer",
            "date": "2018-10-17T17:04:42+0000",
            "content": "ok folks, think this particular issue is fixed. I will go and open a new one for the block-join discussion. "
        },
        {
            "id": "comment-16656105",
            "author": "ASF subversion and git services",
            "date": "2018-10-19T00:49:57+0000",
            "content": "Commit 11a1b8c1a8fdca9f6314bd61695345737309b630 in lucene-solr's branch refs/heads/jira/http2 from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=11a1b8c ]\n\nLUCENE-6572: Remove dependency on analyzer-common from highlighing\n\nThis makes a simplifed copy of LimitTokenOffsetFilter to the highlighting\nmodule to detach the dependency on analyzer-common. "
        }
    ]
}