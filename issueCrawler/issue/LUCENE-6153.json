{
    "id": "LUCENE-6153",
    "title": "randomize stored fields/vectors index blocksize",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Test"
    },
    "description": "the Compressing impls compress documents into chunks. We then record index data for every N chunks, which is binary searched to find the start of the chunk. today this is always 1024.\n\nThis means to test the stored fields index well, we need to index thousands and thousands of documents. But if we randomize the parameter, we can test it more effectively by setting it to very low values (e.g. 5) in tests.",
    "attachments": {
        "LUCENE-6153.patch": "https://issues.apache.org/jira/secure/attachment/12689701/LUCENE-6153.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14262297",
            "author": "Mike Drob",
            "date": "2014-12-31T16:51:43+0000",
            "content": "CompressingStoredFieldsFormat.java\n+    if (blockSize < 1) {\n\n\nCompressingStoredFieldsIndexWriter.java\n+    if (blockSize <= 0) {\n\n\nCompressingTermVectorsFormat.java\n+    if (blockSize < 1) {\n\n\n\nIt would be nice for these to be consistent.\n\nLucene50StoredFieldsFormat.java\n-        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\", CompressionMode.FAST, 1 << 14, 128);\n+        return new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\", CompressionMode.FAST, 1 << 14, 128, 1024);\n\n\nCan we have a constant for default block size = 1024. Also might as well have constants for whatever 1 << 14 and 128 are, but that can be a follow on issue. "
        },
        {
            "id": "comment-14262300",
            "author": "Robert Muir",
            "date": "2014-12-31T16:57:57+0000",
            "content": "\nIt would be nice for these to be consistent.\n\n+1\n\n\nCan we have a constant for default block size = 1024. Also might as well have constants for whatever 1 << 14 and 128 are, but that can be a follow on issue.\n\nHere i'm not sure I agree: a named constant will tell us what the parameter is (since you cannot do this in java, which is annoying), but causes unnecessary indirection, you lose locality of reference when reading the code. I would rather do it like this:\n\n\nreturn new CompressingStoredFieldsFormat(\"Lucene50StoredFieldsFast\",  // codec name\n                                         CompressionMode.FAST,        // lz4\n                                         1 << 14,                     // block size\n                                         128,                         // maximum number of docs per block (to avoid worst cases)\n                                         1024                         // chunk size (index interval as number of blocks)\n                                         );\n\n "
        },
        {
            "id": "comment-14262306",
            "author": "Mike Drob",
            "date": "2014-12-31T17:09:24+0000",
            "content": "A named constant would also mean that we don't have to find everywhere else that the value is used if we decide we want to change it. In this case, we use it again two lines later.\n\nI'm not worried about the extra indirection, since (nearly?) every editor will have a \"show declaration\" feature. (Eclipse - F3, NetBeans - Ctrl+Alt+Shift+O, Vim - gd, etc...). That said, most of those will also show me the JavaDoc on the call, so I can see what the parameters are anyway, and it's all a wash. "
        },
        {
            "id": "comment-14262307",
            "author": "Robert Muir",
            "date": "2014-12-31T17:12:14+0000",
            "content": "I am worried about it. because we have two configurations here: BEST_SPEED and BEST_COMPRESSION. \n\nWe do not need to have 6 constants that are only used a single time. We should not \"share\" these constants between the two modes of operation because they are independent. "
        },
        {
            "id": "comment-14262567",
            "author": "ASF subversion and git services",
            "date": "2015-01-01T14:57:07+0000",
            "content": "Commit 1648849 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1648849 ]\n\nLUCENE-6153: randomize stored fields/vectors index blocksize "
        },
        {
            "id": "comment-14262570",
            "author": "ASF subversion and git services",
            "date": "2015-01-01T15:01:24+0000",
            "content": "Commit 1648850 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1648850 ]\n\nLUCENE-6153: randomize stored fields/vectors index blocksize "
        },
        {
            "id": "comment-14332866",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:02:19+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}