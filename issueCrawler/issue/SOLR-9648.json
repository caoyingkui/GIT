{
    "id": "SOLR-9648",
    "title": "Wrap all solr merge policies with SolrMergePolicy",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Wrap the entry point for all merge policies with a single entry point merge policy for more fine grained control over merging with minimal configuration. \n\nThe main benefit will be to allow upgrading of segments on startup when lucene version changes. Ideally we can use the same approach for adding and removing of doc values when the schema changes and hopefully other index type changes such as Trie -> Point types, or even analyzer changes.",
    "attachments": {
        "SOLR-9648-WIP.patch": "https://issues.apache.org/jira/secure/attachment/12833627/SOLR-9648-WIP.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-16T01:36:52+0000",
            "author": "Keith Laban",
            "content": "Adding a naive implementation that will do the upgrade of segments on startup (no tests). As of now this doesn't allow any configuration options to be passed, but can be easily added. Initial patch is intended as a POC to start the dialogue . ",
            "id": "comment-15579083"
        },
        {
            "date": "2016-10-22T20:50:54+0000",
            "author": "Christine Poerschke",
            "content": "I like the idea of using segment merging and a merge policy to upgrade segments.\n\nWrapping the solrconfig.xml configured merge policy in a SolrMergePolicy and thus changing the 'what you configure is what you get' approach, hmm, not so sure about that though because\n\n\tcurrently force-merge happens only when externally triggered\n\tthe force-merge behaviour added by the wrap is (proposed to be) executed only on startup\n\tthe configured merge policy could (at least theoretically) disallow force merges\n\n\n\nPOC WIP patch notes:\n\n\tThe MAX_UPGRADES_AT_A_TIME = 5; sounds similar to what the MergeScheduler does (unless merge-on-startup bypasses the merge scheduler somehow?)\n\tIndexWriter has a UNBOUNDED_MAX_MERGE_SEGMENTS==-1 which if made non-private could perhaps be used in the cmd.maxOptimizeSegments = Integer.MAX_VALUE;\n\tThe SolrMergePolicy has no solr dependencies, might it be renamed to something else and be part of the lucene code base? UpgradeIndexMergePolicy also sounds very similar actually.\n\n ",
            "id": "comment-15598472"
        },
        {
            "date": "2016-10-24T15:07:54+0000",
            "author": "Keith Laban",
            "content": "Hi christine  let me try to address each of these\n\ncurrently force-merge happens only when externally triggered\ntrue\n\nthe force-merge behaviour added by the wrap is (proposed to be) executed only on startup\nthis is just where force merge is explicitly called in an effort to upgrade segments\n\nthe configured merge policy could (at least theoretically) disallow force merges\nnot true, this implementation will fall through to the delegate if there are no segments to upgrade\n\n\nThe MAX_UPGRADES_AT_A_TIME = 5; sounds similar to what the MergeScheduler does (unless merge-on-startup bypasses the merge scheduler somehow?)\nnot sure if force merge abides by the MergeScheduler\n\nIndexWriter has a UNBOUNDED_MAX_MERGE_SEGMENTS==-1 which if made non-private could perhaps be used in the cmd.maxOptimizeSegments = Integer.MAX_VALUE;\ncould be an interesting approach\n\nUpgradeIndexMergePolicy also sounds very similar actually.\nI saw this but chose not to use it because the implementation doesn't fallback to the delegating merge policy.\n\nThe SolrMergePolicy has no solr dependencies, might it be renamed to something else and be part of the lucene code base?\nThat is true right now, but I hope we can use the same approach to add in hooks for other solr specifc things if we need later. And hopefully also use this for things like adding/removing docvalues when the schema changes\n\n ",
            "id": "comment-15602256"
        },
        {
            "date": "2016-10-26T12:27:14+0000",
            "author": "Christine Poerschke",
            "content": "... the implementation doesn't fallback to the delegating merge policy.\n\nInteresting, that is surprising. Created LUCENE-7523 to explore perhaps changing UpgradeIndexMergePolicy. ",
            "id": "comment-15608304"
        }
    ]
}