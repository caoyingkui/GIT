{
    "id": "LUCENE-2184",
    "title": "CartesianPolyFilterBuilder doesn't properly account for which tiers actually exist in the index",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/spatial"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "2.9,                                            2.9.1,                                            3.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In the CartesianShapeFilterBuilder, there is logic that determines the \"best fit\" tier to create the Filter against.  However, it does not account for which fields actually exist in the index when doing so.  For instance, if you index tiers 1 through 10, but then choose a very small radius to restrict the space to, it will likely choose a tier like 15 or 16, which of course does not exist.",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--LUCENE-2184.2.patch": "https://issues.apache.org/jira/secure/attachment/12441701/ASF.LICENSE.NOT.GRANTED--LUCENE-2184.2.patch",
        "LUCENE-2184.patch": "https://issues.apache.org/jira/secure/attachment/12440083/LUCENE-2184.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-12-29T16:50:00+0000",
            "content": "I have also seen this bug come up.  It seems that there are only 15 possible tiers, as if the best fit tier is greater than 15, then it is scaled back to 15.  So one plausible solution that doesn't require any changes to the API, is to simply require all documents have all 15 levels indexed.  The other solution is to take into account the range of indexed levels when calculating the the best fit tier, but this would require an API change, although it could be made backwards compatible quite easily.\n\nAny thoughts on the preferred approach? ",
            "author": "Chris Male",
            "id": "comment-12795080"
        },
        {
            "date": "2010-01-02T12:38:55+0000",
            "content": "I think the API should pass in the max range it supports and then bestFit could just do a min on the two as the last step. ",
            "author": "Grant Ingersoll",
            "id": "comment-12795857"
        },
        {
            "date": "2010-01-02T13:00:59+0000",
            "content": "I agree.  I will build a patch to that effect unless there are any other alternatives. ",
            "author": "Chris Male",
            "id": "comment-12795859"
        },
        {
            "date": "2010-03-29T17:29:21+0000",
            "content": "Note, this bug exists for the \"min\" case too, that is when a distance is too large ",
            "author": "Grant Ingersoll",
            "id": "comment-12851013"
        },
        {
            "date": "2010-03-29T17:52:18+0000",
            "content": "Here's a patch.  All tests still pass. ",
            "author": "Grant Ingersoll",
            "id": "comment-12851023"
        },
        {
            "date": "2010-03-29T18:41:13+0000",
            "content": "Committed revision 928860 w/ the patch above plus some more javadocs.  I'll leave open for a day or so in case anyone has quibbles about the names of things. ",
            "author": "Grant Ingersoll",
            "id": "comment-12851043"
        },
        {
            "date": "2010-04-14T08:23:18+0000",
            "content": "My work @ LUCENE-2359 did break Grant work here :s\n\nHere is a patch to correct this.\n\nI put the logic into the CartesianTierPlotter instead of the CartesianPolyFilterBuilder as there was allready code to handle Tier level borders there. ",
            "author": "Nicolas Helleringer",
            "id": "comment-12856795"
        },
        {
            "date": "2010-04-14T12:22:29+0000",
            "content": "Thanks, Nicolas.  Applied. ",
            "author": "Grant Ingersoll",
            "id": "comment-12856857"
        },
        {
            "date": "2010-10-29T13:14:54+0000",
            "content": "reopening for possible 2.9.4/3.0.3 backport.\n\nI noticed it has a warning that it changes the APIs... someone who knows spatial please help decide if its a good or bad idea! ",
            "author": "Robert Muir",
            "id": "comment-12926275"
        },
        {
            "date": "2010-11-16T14:21:38+0000",
            "content": "The comment is here since the early version of local lucene by Patrick O'Leary\n\nIt is still meaningfull as the spatial contrib is still under work and could break current indexes (if we change at last the Sinusoidal Projector implemtation) ",
            "author": "Nicolas Helleringer",
            "id": "comment-12932474"
        },
        {
            "date": "2010-11-27T23:25:34+0000",
            "content": "Resolving again as this issue will not be backported to 2.9/3.0 branches. ",
            "author": "Uwe Schindler",
            "id": "comment-12964469"
        },
        {
            "date": "2011-03-30T15:50:04+0000",
            "content": "Bulk close for 3.1 ",
            "author": "Grant Ingersoll",
            "id": "comment-13013360"
        }
    ]
}