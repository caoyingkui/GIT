{
    "id": "SOLR-7273",
    "title": "Add \"tolerant\" switches to configure behaviour when a component throws an exception",
    "details": {
        "components": [
            "SearchComponents - other"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "Was: \"An Exception in a non-query component should not cause a global HTTP 500 Server Error response\" on the dev list.\n\nThe current behavior of Solr on any component throwing an error is to send a response containing the results of the components that did succeed with a HTTP status code of 500 Server Error.\n\nI propose to implement switches similar to the \"shards.tolerant\" ones that would allow Solr to return the response without the 500 HTTP status.\n\nA global switch might be useful to ask Solr to return only the 500 HTTP status and the exception details without the rest of the response, but otherwise I believe the switches should be per component since only at that level can be decided what the impact might be.\n\nE.g. for the highlight component, the switch could be \n\"component.highlight.tolerant=true\" to cause it to ignore (but still log!) InvalidTokenOffsetsExceptions and either return the rest of the results or return no results at all.\n\nThe response format could be extended too to allow more than one exception to be included (per component or simply a list?) without necessarily changing the HTTP status to 500.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-19T09:02:37+0000",
            "author": "Luc Vanlerberghe",
            "content": "I forgot to mention that I would only include this for the search handlers to allow applications to continue in a reduced functionality state instead of not replying or being forced to show an error box.\nIn the case I encountered, the hightlight component threw an exception in very specific cases (certain documents being present in the result page for certain queries).  99% of the time it worked just fine.  I have determined the cause, but have no quick solution yet so swtiches like these would at least keep the application running (without highlights for those documents)\n\nIt's no use (and probably dangerous) for update handlers to try to work around exceptions... ",
            "id": "comment-14368718"
        }
    ]
}