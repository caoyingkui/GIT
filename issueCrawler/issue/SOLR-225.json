{
    "id": "SOLR-225",
    "title": "Allow pluggable Highlighting classes -- Formatters and Fragmenters",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Highlighting should support a pluggable architecture similar to what is seen with RequestHandlers, Fields, FieldTypes, etc\n'\nFor more background:\nhttp://www.nabble.com/Custom-fragmenter-tf3681588.html#a10289335",
    "attachments": {
        "SOLR-225-HighlightingConfig.patch": "https://issues.apache.org/jira/secure/attachment/12356818/SOLR-225-HighlightingConfig.patch",
        "SOLR-225+260-HighlightPlugins.patch": "https://issues.apache.org/jira/secure/attachment/12359892/SOLR-225%2B260-HighlightPlugins.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12493864",
            "date": "2007-05-05T07:07:40+0000",
            "content": "This is a major rework of the highlighting architecture.  It is now configured similar to other classes.\n\nSolrconfig.xml can define:\n\n  <highlighting>\n   <!-- Configure the standard fragmenter -->\n   <fragmenter name=\"gap\" class=\"org.apache.solr.highlight.GapFragmenter\" default=\"true\">\n    <lst name=\"defaults\">\n     <int name=\"hl.fragsize\">100</int>\n    </lst>\n   </fragmenter>\n\n   <fragmenter name=\"regex\" class=\"org.apache.solr.highlight.RegexFragmenter\">\n    <lst name=\"defaults\">\n     <int name=\"hl.fragsize\">70</int>\n    </lst>\n   </fragmenter>\n\n   <!-- Configure the standard formatter -->\n   <formatter name=\"html\" class=\"org.apache.solr.highlight.HtmlFormatter\" default=\"true\">\n    <lst name=\"defaults\">\n     <str name=\"hl.simple.pre\"><![CDATA[<em>]]></str>\n     <str name=\"hl.simple.post\"><![CDATA[</em>]]></str>\n    </lst>\n   </formatter>\n  </highlighting>\n\n\nThis incorporates SOLR-102 as an optional fragmenter.\n\nThis is still quite rough...\n\nthoughts?\n "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12494113",
            "date": "2007-05-07T19:34:24+0000",
            "content": "Wow, that is some honking configurability!  I've looked at the patch, but haven't tested it.\n\nThe plugin architecture seems like something tha could be made more general than just plugins.  I imagine that with very little effort, this could be used to entirely replace the *Factory.java classes that are used for Analyzer/TokenStream configuration (of course, that would relegate our nice configuration parameter names to a<lst name=\"defaults\"> approach... perhaps the plugin archtecture could convert all unknown xml node parameters to SolrParams too?).  This is a weighty-enough topic that it should perhaps  be broken out into a separate issue.\n\nThe highlighting configurability itself is fine with me.  I think that we'll be using the lucene highlighter (or reasonable facsimile) for long enough to make it worth additional configurability.\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12494896",
            "date": "2007-05-10T23:07:36+0000",
            "content": "no real changes... it applies cleanly with trunk.\n\n> The plugin architecture seems like something tha could be made more general than just plugins. \n\nIt is a 95% duplicate of the RequestHandler plugin architecture.  The only reason it could not be identical was the lazy loading request handlers...\n\nCurrently solr has two plugin initialization types: \n1. init( NamedList args )\n2. init( Map<String,String> args)\n\nIf we added an interface for each initalization type, we could probably do all plugin initalization with something like the PluginLoader class in this patch\n\nclass PluginLoader<T>\n{\n public Map<String,T> load( NodeList nodes ) \n{\n   ...\n }\n}\n\n "
        },
        {
            "author": "Oz Solomon",
            "id": "comment-12497935",
            "date": "2007-05-22T17:21:28+0000",
            "content": "Ryan - this is a great feature.  Any chance to see it applied to the nightly builds? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12497955",
            "date": "2007-05-22T18:50:54+0000",
            "content": "After solr 1.2 is out, I hope this will get in.\n\nThis patch still needs a serious code review before considering committing it.\n "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12497959",
            "date": "2007-05-22T19:02:54+0000",
            "content": "Yeah.  I'm happy to review the highlighting stuff (there are some parameter changes and such that would be worthwhile), but it woudl be nice to hear from yonik or hoss on the classloading/configuration stuff, and any overlap with similar-but-different existing systems in Solr.  I'm afraid I haven't had time to follow all the developments on that front.\n\nI agree that this is a major change and there is no need to rush it for 1.2 "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12501119",
            "date": "2007-06-04T07:22:18+0000",
            "content": "applies with trunk "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12503657",
            "date": "2007-06-11T22:21:00+0000",
            "content": "implemented with the (soon to upload) SOLR-260 PluginLoader<T>.  I'll wait till SOLR-260 is solid before updating again... "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12505294",
            "date": "2007-06-15T16:26:25+0000",
            "content": "This uses SOLR-260 general plugin loader to load highlighting plugins.\n\nSince these patches touch a few of the same files, I will maintain them together. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12509466",
            "date": "2007-07-01T21:44:44+0000",
            "content": "no real changes.  added some more javadocs.  \n\nI think this should be added to trunk soon...   "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12509709",
            "date": "2007-07-02T23:10:51+0000",
            "content": "Looking great Ryan (again, only commenting on the Highlighting configurability parts)\n\nshould:\n\n  protected boolean emptyArray(String[] arr) \n{\n    return (arr == null || arr.length == 0 || arr[0] == null || arr[0].trim().length() == 0);\n  }\n\nperhaps be defined as\n\nprotected boolean emptyArray(String[] arr) {\n    return (arr == null || arr.length == 0 || \n                 (arr.length == 1 && (arr[0] == null || arr[0].trim().length() == 0)));\n}\n\nParams:\n\n+  public static final String HIGHLIGHT   = \"hl\";\n+  public static final String PREFIX      = \"hl.\";\n+  public static final String FIELDS      = PREFIX+\"fl\";\n+  public static final String SNIPPETS    = PREFIX+\"snippets\";\n+  public static final String FRAGSIZE    = PREFIX+\"fragsize\";\n+  public static final String INCREMENT   = PREFIX+\"increment\";\n+  public static final String SLOP        = PREFIX+\"slop\";\n\nperhaps this should be PREFIX + 'regex.slop'?\n\n+  public static final String MAX_CHARS   = PREFIX+\"maxAnalyzedChars\";\n\nsimilarly.  Seems somewhat inelegant to define/hardcode the plugin-specific parameters here, though it is nice ot have them all in one place...\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12509721",
            "date": "2007-07-03T00:40:12+0000",
            "content": "\n> perhaps be defined as\n> \n> protected boolean emptyArray(String[] arr) \n{\n>     return (arr == null || arr.length == 0 || \n>                  (arr.length == 1 && (arr[0] == null || arr[0].trim().length() == 0)));\n> }\n\nseems good.  This patch tried not to change any highlighting logic, it is just moved it from the existing HighlightingUtils.java\n\nI will add this change.\n\n\n> \n> +  public static final String MAX_CHARS   = PREFIX+\"maxAnalyzedChars\";\n> \n> similarly.  Seems somewhat inelegant to define/hardcode the plugin-specific parameters here, though it is nice ot have them all in one place...\n> \n\nI'm torn on what is more/less elegant.  \n\nShould we have a new class in o.a.s.common.params for each plugin?  \n\nSince the number of 'core' plugins will be relatively small, having a single HighlightParams class with sections for the core plugin options seems ok.  But I can easily be talked out of this... "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12509728",
            "date": "2007-07-03T01:38:06+0000",
            "content": "> I'm torn on what is more/less elegant. \n\n> Should we have a new class in o.a.s.common.params for each plugin? \n\n> Since the number of 'core' plugins will be relatively small, having a single HighlightParams class with sections > for the core plugin options seems ok. But I can easily be talked out of this... \n\nSeems ok to me too.  Spreading everything into a jumble of classes won't exactly help coherence.\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12517590",
            "date": "2007-08-03T17:25:40+0000",
            "content": "added a while ago "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12579142",
            "date": "2008-03-16T03:23:52+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked \"Resolved\" and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.3 as of today 2008-03-15\n\n\n\nThe Fix Version for all 29 issues found was set to 1.3, email notification was suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this (hopefully) unique string: batch20070315hossman1\n "
        }
    ]
}