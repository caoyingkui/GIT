{
    "id": "LUCENE-4145",
    "title": "\"Unhandled exception\" from test framework (in json parsing of test output files?)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Working on SOLR-3267 i got a weird exception printed to the junit output...\n\n\n   [junit4] Unhandled exception in thread: Thread[pumper-events,5,main]\n   [junit4] com.carrotsearch.ant.tasks.junit4.dependencies.com.google.gson.JsonParseException: No such reference: id#org.apache.solr.search.TestSort[3]\n...",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-06-15T00:28:22+0000",
            "content": "Execution was...\n\n\nhossman@bester:~/lucene/dev/solr/core$ ant test -Dtests.iters=100000 -Dtestcase=TestSort -Dtestmethod=testRandomFieldNameSorts \n...\nvalidate:\n\ncommon.test:\n   [junit4] <JUnit4> says aloha! Master seed: D6A9197BD551566E\n   [junit4] Executing 1 suite with 1 JVM.\n   [junit4] Unhandled exception in thread: Thread[pumper-events,5,main]\n   [junit4] com.carrotsearch.ant.tasks.junit4.dependencies.com.google.gson.JsonParseException: No such reference: id#org.apache.solr.search.TestSort[3]\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.events.json.JsonDescriptionAdapter.deserialize(JsonDescriptionAdapter.java:90)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.events.json.JsonDescriptionAdapter.deserialize(JsonDescriptionAdapter.java:15)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.dependencies.com.google.gson.JsonDeserializerExceptionWrapper.deserialize(JsonDeserializerExceptionWrapper.java:51)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.dependencies.com.google.gson.GsonToMiniGsonTypeAdapterFactory$3.read(GsonToMiniGsonTypeAdapterFactory.java:85)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.dependencies.com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:86)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.dependencies.com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:170)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.dependencies.com.google.gson.Gson.fromJson(Gson.java:720)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.events.Deserializer.deserialize(Deserializer.java:31)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.LocalSlaveStreamHandler.pumpEvents(LocalSlaveStreamHandler.java:100)\n   [junit4] \tat com.carrotsearch.ant.tasks.junit4.LocalSlaveStreamHandler$1.run(LocalSlaveStreamHandler.java:73)\n   [junit4] \tat java.lang.Thread.run(Thread.java:662)\n...\n\n\n\n...and the (ant) process is still running, but no files in solr/build/solr-core/test have been modified in over 20 minutes. ",
            "author": "Hoss Man",
            "id": "comment-13295404"
        },
        {
            "date": "2012-06-15T00:35:31+0000",
            "content": "FWIW: i can reproduce this fairly trivially ... let me now if you want me to capture anything in particular. ",
            "author": "Hoss Man",
            "id": "comment-13295407"
        },
        {
            "date": "2012-06-15T06:51:55+0000",
            "content": "This is weird, I'll look into it. ",
            "author": "Dawid Weiss",
            "id": "comment-13295490"
        },
        {
            "date": "2012-06-15T07:36:22+0000",
            "content": "This is an OOM on the client VM related to buffering output events. I thought gson would propagate these immediately to the master \u2013 have to see what's going on.\n\nhttps://github.com/carrotsearch/randomizedtesting/issues/110\n\nWorkaround: -Dtests.iters=[1,smaller number] ",
            "author": "Dawid Weiss",
            "id": "comment-13295505"
        },
        {
            "date": "2012-06-15T07:40:41+0000",
            "content": "This will also affect reports \u2013 tests.iters=100000 means there will be 100k tests under that suite... If this test has no special setup/ teardown you may be better off just looping it internally (add a test method that invokes the other one in a loop). \n\nI'll fix that problem but 100k repetitions is kind of extreme. Don't try to run it in Eclipse or IntelliJ, I'm sure their GUI system will not like it  ",
            "author": "Dawid Weiss",
            "id": "comment-13295509"
        },
        {
            "date": "2012-06-19T01:03:24+0000",
            "content": "Thanks Dawid ... i would totally expect/respect -Dtests.iters=$HUGE to be limited by the amount of Ram in use, it was the odd except on console followed by the aparent infinite hang that concerend me the most (would hate to see that happen in a jenkins build) ",
            "author": "Hoss Man",
            "id": "comment-13396432"
        },
        {
            "date": "2012-06-19T07:55:11+0000",
            "content": "It shouldn't hang \u2013 you're right. I'll try to fix this for the next release (I know where the problem is).  ",
            "author": "Dawid Weiss",
            "id": "comment-13396588"
        },
        {
            "date": "2012-07-05T11:27:35+0000",
            "content": "Should be better now as events are not buffered on the client. I still wouldn't give my head for the -Dtests.iters=gazillion scenario because they're still buffered on the master (for reports, etc.)\n\nAs always, it's a tradeoff \u2013 spilling those events to disk is possible but would increase the complexity a lot. Maybe an embedded simple db like hsqldb or something would help here, I don't know. Anyway, it doesn't make sense in 99% of situations (so large iteration count/ tests number).\n ",
            "author": "Dawid Weiss",
            "id": "comment-13406998"
        }
    ]
}