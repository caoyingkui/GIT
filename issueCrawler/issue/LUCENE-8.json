{
    "id": "LUCENE-8",
    "title": "reference to ParseException is ambiguous",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/queryparser"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "Is it good that two exceptions in different packages has equal names ???\n\n\"SearchRAM.java\": Error #: 304 : reference to ParseException is ambiguous; both \nclass org.apache.lucene.queryParser.ParseException in package \norg.apache.lucene.queryParser and class \norg.apache.lucene.analysis.standard.ParseException in package \norg.apache.lucene.analysis.standard match at line 186, column 13\n\nI don't want to write long name like here:\n}catch( org.apache.lucene.queryParser.ParseException e ){\n\n\n\tit's not a good style.\n\n\n\nThank you !",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2001-12-07T17:16:30+0000",
            "content": "These ParseException classes are generated by JavaCC and cannot be renamed.  If \nwe put all JavaCC-generated grammars in a single package then they would share \na single implementation of ParseException, but that does not seem worthwhile.  \nSo long as we use JavaCC in both the lucene.queryParser and \nlucene.analysis.standard packages there will be two exceptions named \nParseException.  Sorry. ",
            "author": "cutting@apache.org",
            "id": "comment-12320981"
        }
    ]
}