{
    "id": "LUCENE-2160",
    "title": "Tool to rename a field",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/other"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "3.0",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "We found it useful to be able to rename a field.\nIt can save a lot of reindexing time/cost when being used in conjunction with ParallelReader to update partially a field.",
    "attachments": {
        "RenameField.java": "https://issues.apache.org/jira/secure/attachment/12428025/RenameField.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-12-15T10:12:08+0000",
            "content": "part of the code was originally posted on nabble, but is not removed:\nwww.nabble.com/file/p15221929/fieldrename\n ",
            "author": "John Wang",
            "id": "comment-12790643"
        },
        {
            "date": "2009-12-15T11:02:21+0000",
            "content": "Hmm... isn't there a danger here that a field rename would change the term sort order?\n\nIe, terms in the terms dict are sorted first by field and then by term text.  Seems like this tool could break that, in the index? ",
            "author": "Michael McCandless",
            "id": "comment-12790660"
        },
        {
            "date": "2009-12-15T16:21:20+0000",
            "content": "Good point. But do you ever sort across fields? ",
            "author": "John Wang",
            "id": "comment-12790797"
        },
        {
            "date": "2009-12-15T16:39:20+0000",
            "content": "Just did a test: \n\nYou are right, IndexReader.terms(Term) would no longer find the rename field name if the field name is out of order. If the order is preserved, it is ok, e.g. list of fields \"a\",\"c\",\"f\", if renaming \"c\" -> \"d\", it would be ok.\n\nOur use case is however this:\n\nWe messed up our data in say, field \"c\", we rename it to \"c_bak\", and create a parallel index with one field and name if \"c\". merge the indexes. c_bak is then never accessed.\n\nWould this work? ",
            "author": "John Wang",
            "id": "comment-12790809"
        },
        {
            "date": "2009-12-15T16:40:14+0000",
            "content": "Fixed a problem with cfs files. ",
            "author": "John Wang",
            "id": "comment-12790810"
        },
        {
            "date": "2009-12-15T23:49:36+0000",
            "content": "Did some more digging around the issue on field ordering. Is it possible to change FieldInfo file store to change the number in byNumber ArrayList along with the byName HashMap, and update the file? Or is the number already assumed to be in sort order from the tii file? ",
            "author": "John Wang",
            "id": "comment-12791046"
        },
        {
            "date": "2009-12-15T23:53:41+0000",
            "content": "Looked at the file format wiki more closely, I see front-coding applies to all the terms in all fields. So my above comment would not work.\nDo you think it makes sense to have a tii,tis file for each indexed field? Would the new codec allow for it?\n\n-John ",
            "author": "John Wang",
            "id": "comment-12791051"
        },
        {
            "date": "2009-12-15T23:59:14+0000",
            "content": "Looked at the file format wiki more closely, I see front-coding applies to all the terms in all fields. So my above comment would not work.\n\nYeah I think you'll be in trouble in general if your new name doesn't \"fit\" in the same sort; you could check and allow a rename as long as it doesn't change the sort order?\n\nDo you think it makes sense to have a tii,tis file for each indexed field? Would the new codec allow for it?\n\nA new codec would definitely be free to store however it wanted...\n\nBut even the standard codec (default codec for flex, most similar to the current index format) actually shouldn't mind if the fields are not in sorted order (though I haven't tested this!).  It separately stores the seek position of each field... though we may need to fix the FieldsEnum to do the sorting if the index is no longer sorted. ",
            "author": "Michael McCandless",
            "id": "comment-12791056"
        }
    ]
}