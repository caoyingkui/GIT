{
    "id": "SOLR-12336",
    "title": "Remove or refactor Filter",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "search"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Over a series of Lucene releases, the old Filter was made to extend Query (LUCENE-1518) and then was removed from Lucene (moved to Solr in LUCENE-6583); BooleanClause.Occur.FILTER (LUCENE-6227) with some other API enhancements including TwoPhaseIterator replaced the need for the old Filter.  Filter is now a Solr thing, and there are various related classes like QueryWrapperFilter and SolrConstantScoreQuery that depend on it.  We should remove some of this technical-debt / bit-rot, making refactorings as needed to retain functionality.  Leaving things as-is is needless complexity and can impede performance when there is needless wrapping/layers.\nCC @yonik",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-09T21:08:28+0000",
            "content": "Some possible sub-tasks:\n\n\tRemove\u00a0SolrConstantScoreQuery.  It's a constant scoring Query that wraps around a Filter.  A sad irony is that Filter is a Query, and is constant scoring.  It seems to exist to support a quirky special-case \"SolrFilter\" (dubious name). It also implements ExtendedQuery but we have others like WrappedQuery for that.  (ExtendedQueryWrapper would have been a better name)\n\tRemove SolrFilter.  It's an abstract subclass of Filter that ensures createWeight is called.  The only subclass is ValueSourceRangeFilter.  It seems VSRF could extend Filter directly and intercept createWeight to do this?  TestFunctionQuery has applicable tests.\n\n\n\nThen figure out what we do with Filter.  Perhaps it ought not to extend Query as it's a bit confusing. ",
            "author": "David Smiley",
            "id": "comment-16469502"
        }
    ]
}