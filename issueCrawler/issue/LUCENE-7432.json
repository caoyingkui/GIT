{
    "id": "LUCENE-7432",
    "title": "TestIndexWriterOnError.testCheckpoint fails on IBM J9",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "Not sure if this is a J9 issue or a Lucene issue, but using this version of J9:\n\n\n09:26 $ java -version\njava version \"1.8.0\"\nJava(TM) SE Runtime Environment (build pxa6480sr3fp10-20160720_02(SR3fp10))\nIBM J9 VM (build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20160719_312156 (JIT enabled, AOT enabled)\nJ9VM - R28_Java8_SR3_20160719_1144_B312156\nJIT  - tr.r14.java_20160629_120284.01\nGC   - R28_Java8_SR3_20160719_1144_B312156_CMPRSS\nJ9CL - 20160719_312156)\nJCL - 20160719_01 based on Oracle jdk8u101-b13\n\n\n\nThis test failure seems to reproduce:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestIndexWriterOnVMError -Dtests.method=testCheckpoint -Dtests.seed=FAB0DC147AFDBF4E -Dtests.nightly=true -Dtests.slow=true -Dtests.locale=kn -Dtests.timezone=Australia/South -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR    196s | TestIndexWriterOnVMError.testCheckpoint <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: MockDirectoryWrapper: cannot close: there are still 9 open files: {_2_Asserting_0.pos=1, _2_Asserting_0.dvd=1, _2.fdt=1, _2_Asserting_0.doc=1, _2_Asserting_0.tim=1, _2.nvd=1, _2.tvd=1, _3.cfs=1, _2.dim=1}\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([FAB0DC147AFDBF4E:FBA18A7C5B16548D]:0)\n   [junit4]    > \tat org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:841)\n   [junit4]    > \tat org.apache.lucene.index.TestIndexWriterOnVMError.doTest(TestIndexWriterOnVMError.java:89)\n   [junit4]    > \tat org.apache.lucene.index.TestIndexWriterOnVMError.testCheckpoint(TestIndexWriterOnVMError.java:280)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:785)\n   [junit4]    > Caused by: java.lang.RuntimeException: unclosed IndexInput: _2.dim\n   [junit4]    > \tat org.apache.lucene.store.MockDirectoryWrapper.addFileHandle(MockDirectoryWrapper.java:732)\n   [junit4]    > \tat org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:776)\n   [junit4]    > \tat org.apache.lucene.codecs.lucene60.Lucene60PointsReader.<init>(Lucene60PointsReader.java:85)\n   [junit4]    > \tat org.apache.lucene.codecs.lucene60.Lucene60PointsFormat.fieldsReader(Lucene60PointsFormat.java:104)\n   [junit4]    > \tat org.apache.lucene.codecs.asserting.AssertingPointsFormat.fieldsReader(AssertingPointsFormat.java:66)\n   [junit4]    > \tat org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:128)\n   [junit4]    > \tat org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:74)\n   [junit4]    > \tat org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:145)\n   [junit4]    > \tat org.apache.lucene.index.ReadersAndUpdates.getReadOnlyClone(ReadersAndUpdates.java:197)\n   [junit4]    > \tat org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:103)\n   [junit4]    > \tat org.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:460)\n   [junit4]    > \tat org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:103)\n   [junit4]    > \tat org.apache.lucene.index.TestIndexWriterOnVMError.doTest(TestIndexWriterOnVMError.java:175)\n   [junit4]    > \t... 37 more\n   [junit4]   2> NOTE: leaving temporary files on disk at: /l/trunk/lucene/build/core/test/J0/temp/lucene.index.TestIndexWriterOnVMError_FAB0DC147AFDBF4E-001\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene62), sim=ClassicSimilarity, locale=kn, timezone=Australia/South\n   [junit4]   2> NOTE: Linux 4.4.0-34-generic amd64/IBM Corporation 1.8.0 (64-bit)/cpus=8,threads=1,free=55483576,total=76742656\n   [junit4]   2> NOTE: All tests run in this JVM: [TestIndexWriterOnVMError]\n\n\n\nThe test is quite stressful, provoking \"unexpected\" exceptions at tricky times for IndexWriter.\n\nWhen I run with Oracle's 1.8.0_101 with that same \"reproduce with\", the test passes.\n\nI see a similar failure for testUnknownError.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15455246",
            "author": "Kevin Langman",
            "date": "2016-09-01T12:35:07+0000",
            "content": "Can you tell me how to recreate the issue, or if that is to complex would it be possible to have you recreate it using a JVM option that will generate a system dump when then exception is thrown? "
        },
        {
            "id": "comment-15455419",
            "author": "Michael McCandless",
            "date": "2016-09-01T13:40:43+0000",
            "content": "Thanks Kevin Langman.  The issue is quite simple to reproduce.  This should do it:\n\n\ngit clone https://git-wip-us.apache.org/repos/asf/lucene-solr\ncd lucene-solr/lucene/core\nant test  -Dtestcase=TestIndexWriterOnVMError -Dtests.method=testCheckpoint -Dtests.seed=FAB0DC147AFDBF4E -Dtests.nightly=true -Dtests.slow=true -Dtests.locale=kn -Dtests.timezone=Australia/South -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n\n\n\nI will stress test this with Oracle's JVM to see if it's a problem with this test case or with Lucene.\n\nIf it is a J9 issue, it seems like maybe some finally code is failing to run in some cases since IndexWriter does important things in these finally clauses (closing open file handles). "
        },
        {
            "id": "comment-15455488",
            "author": "Kevin Langman",
            "date": "2016-09-01T14:02:04+0000",
            "content": "I did just fix a JIT problem that was preventing finally blocks from executing when using the Java7 Multi-type catch block syntax.\n\ni.e. \ncatch (BindException | NoRouteToHostException  | PortUnreachableException e)\n\nThe issue will occur when the following conditions are met:\n\n1. A multi-type catch block is used to catch more than one type of exceptions.\n2. An exception is thrown from the try block that matches anything but the first type in the multi-type catch.\n3. An exception is thrown from the catch block. It can be a new exception, or the caught exception (re-thrown).\n4. Some sort of control flow (i.e. if/else blocks) exist in the catcher.\n\nThis fix will not be available until December in an official service pack or fix pack.\n\nWe have an IBM APAR for this (IV88620) but it is not yet published as far as I can tell. A goggle search should find this APAR as some point soon I suspect. "
        },
        {
            "id": "comment-15455492",
            "author": "Kevin Langman",
            "date": "2016-09-01T14:04:05+0000",
            "content": "I will try to recreate the problem and see if this JIT fix applies. "
        },
        {
            "id": "comment-15455495",
            "author": "Michael McCandless",
            "date": "2016-09-01T14:05:22+0000",
            "content": "Thanks Kevin Langman, that sounds compelling.  Maybe you can test internally if this APAR did in fact fix it.\n\nI also tested with -Xint and the test passes. "
        },
        {
            "id": "comment-15455532",
            "author": "Shawn Heisey",
            "date": "2016-09-01T14:18:21+0000",
            "content": "Kevin Langman is the person at IBM that I just mentioned on the dev list.  Kevin, glad to see that you're getting involved. "
        },
        {
            "id": "comment-15456211",
            "author": "Kevin Langman",
            "date": "2016-09-01T18:15:21+0000",
            "content": "I have confirmed that this exception is an example of the problem described by APAR IV88620. "
        },
        {
            "id": "comment-15459372",
            "author": "Michael McCandless",
            "date": "2016-09-02T19:22:19+0000",
            "content": "Kevin Langman that's great news, thank you!\n\nCan you try running ant test -Dtests.nightly=true from the lucene subdirectory with the fixed J9 version and see if all Lucene tests pass? "
        },
        {
            "id": "comment-15459543",
            "author": "Kevin Langman",
            "date": "2016-09-02T20:42:28+0000",
            "content": "I get this exception, does this represent a real issue? ...\n\n\n   [junit4] Suite: org.apache.lucene.search.TestSimpleExplanationsOfNonMatches\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene62): {field=BlockTreeOrds(blocksize=128), alt=PostingsFormat(name=LuceneFixedGap), KEY=PostingsFormat(name=LuceneVarGapDocFreqInterval)}, docValues:{KEY=DocValuesFormat(name=Lucene54)}, maxPointsInLeafNode=1420, maxMBSortInHeap=5.367074989548874, sim=RandomSimilarity(queryNorm=false): {field=LM Jelinek-Mercer(0.700000), alt=DFR G2}, locale=de-LU-PREEURO, timezone=Africa/Asmera\n   [junit4]   2> NOTE: Linux 4.1.2-040102-generic amd64/IBM Corporation 1.8.0 (64-bit)/cpus=4,threads=1,free=39007152,total=126615552\n   [junit4]   2> NOTE: All tests run in this JVM: [TestIndexWriterMergePolicy, TestCharArraySet, TestSnapshotDeletionPolicy, TestIndexWriterOnDiskFull, TestTermScorer, TestExternalCodecs, TestStressNRT, TestSpanSearchEquivalence, TestSegmentInfos, TestEarlyTermination, TestOmitNorms, TestRegexpRandom2, TestSpansEnum, TestSentinelIntSet, TestManyFields, TestSpanNearQuery, TestCloseableThreadLocal, TestSimpleExplanationsOfNonMatches]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSimpleExplanationsOfNonMatches -Dtests.seed=3702EAAF36B94A76 -Dtests.nightly=true -Dtests.slow=true -Dtests.locale=de-LU-PREEURO -Dtests.timezone=Africa/Asmera -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.00s J2 | TestSimpleExplanationsOfNonMatches (suite) <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Could not access field 'searcher'.\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:785)\n   [junit4]    > Caused by: java.security.AccessControlException: Access denied (\"java.lang.reflect.ReflectPermission\" \"suppressAccessChecks\")\n   [junit4]    > \tat java.security.AccessController.throwACE(AccessController.java:157)\n   [junit4]    > \tat java.security.AccessController.checkPermissionHelper(AccessController.java:217)\n   [junit4]    > \tat java.security.AccessController.checkPermission(AccessController.java:349)\n\n "
        },
        {
            "id": "comment-15459678",
            "author": "Uwe Schindler",
            "date": "2016-09-02T21:47:25+0000",
            "content": "Could you paste full stack trace? It's clipped just before the interesting stuff comes. "
        },
        {
            "id": "comment-15474212",
            "author": "Kevin Langman",
            "date": "2016-09-08T15:46:15+0000",
            "content": "   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestThreadedForceMerge -Dtests.seed=F594DD5B58B22D4D -Dtests.nightly=true -Dtests.slow=true -Dtests.locale=nl-BE -Dtests.timezone=Africa/Malabo -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   0.00s J0 | TestThreadedForceMerge (suite) <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Could not access field 'ANALYZER'.\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([F594DD5B58B22D4D]:0)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:785)\n   [junit4]    > Caused by: java.security.AccessControlException: Access denied (\"java.lang.reflect.ReflectPermission\" \"suppressAccessChecks\")\n   [junit4]    > \tat java.security.AccessController.throwACE(AccessController.java:157)\n   [junit4]    > \tat java.security.AccessController.checkPermissionHelper(AccessController.java:217)\n   [junit4]    > \tat java.security.AccessController.checkPermission(AccessController.java:349)\n   [junit4]    > \tat java.lang.SecurityManager.checkPermission(SecurityManager.java:562)\n   [junit4]    > \tat java.lang.reflect.AccessibleObject.setAccessible(AccessibleObject.java:143)\n   [junit4]    > \tat java.security.AccessController.doPrivileged(AccessController.java:594)\n   [junit4]    > \t... 10 more\n   [junit4] Completed [44/432 (6!)] on J0 in 1.18s, 1 test, 1 error <<< FAILURES! "
        },
        {
            "id": "comment-15478307",
            "author": "Kevin Langman",
            "date": "2016-09-09T21:29:17+0000",
            "content": "APAR IV88620 will be included in the upcoming IBM Java 8.0.3.12 release. "
        },
        {
            "id": "comment-15485403",
            "author": "Kevin Langman",
            "date": "2016-09-12T21:51:30+0000",
            "content": "Ah... I tried using IBM Java 8.0.3.10 and the RuntimeException goes away.. Not sure what fixed this. "
        },
        {
            "id": "comment-15486842",
            "author": "Michael McCandless",
            "date": "2016-09-13T10:07:19+0000",
            "content": "That sounds like good news Kevin Langman.\n\nDo all tests pass now (ant test -Dtests.nightly=true -Dtests.slow=true from the lucene subdirectory) with IBM Java 8.0.3.10? "
        },
        {
            "id": "comment-15491035",
            "author": "Kevin Langman",
            "date": "2016-09-14T17:46:16+0000",
            "content": "I am just waiting for a 8.0.3.12 candidate build before I run the final tests, but I don't expect I will hit any issues when running the tests with that build. "
        },
        {
            "id": "comment-15491191",
            "author": "Michael McCandless",
            "date": "2016-09-14T18:53:52+0000",
            "content": "Oh that's great news; maybe we can finally fold J9 back into our random JDK selection in our continuous builds. "
        },
        {
            "id": "comment-15504726",
            "author": "Kevin Langman",
            "date": "2016-09-19T21:20:12+0000",
            "content": "I just completed a test using \"ant test -Dtests.nightly=true -Dtests.slow=true\" and the IBM Java 8.0.3.12 release candidate. It seems to have passed all tests with the exception of two tests where I ran out of disk space. I tried those two tests with a different JVM and got the same failure.\n\nMy test ended with this message: \"There were test failures: 433 suites (1 ignored), 3563 tests, 2 errors, 44 ignored (38 assumptions) [seed: 61D5ABA9404A037E]\"\n\nAt this point I believe that IBM Java 8.0.3.12 shows no issues running Lucene/Solr.\n\nThe IBM Java 8.0.3.12 is scheduled to be released at the end of this month or early October. Once it's released I would welcome any feedback you might have on using IBM's Java with Lucene/Solr. Thanks! "
        }
    ]
}