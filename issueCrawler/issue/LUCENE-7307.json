{
    "id": "LUCENE-7307",
    "title": "Add getters to PointInSetQuery and PointRangeQuery classes",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Trivial",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "",
    "attachments": {
        "LUCENE-7307": "https://issues.apache.org/jira/secure/attachment/12807645/LUCENE-7307",
        "LUCENE_7307.patch": "https://issues.apache.org/jira/secure/attachment/12807197/LUCENE_7307.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15308721",
            "author": "Michael McCandless",
            "date": "2016-05-31T21:54:13+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15309881",
            "author": "Adrien Grand",
            "date": "2016-06-01T07:52:34+0000",
            "content": "Should we be defensive and copy the low/high points before returning them? Also I don't think sortedPackedPointsHashCode should have a getter, and maybe sortedPackedPoints should be returned as a Collection<byte[]> rather exposing PrefixCodedTerms (which should remain internal to Lucene). "
        },
        {
            "id": "comment-15309934",
            "author": "Martijn van Groningen",
            "date": "2016-06-01T08:34:11+0000",
            "content": "Also I don't think sortedPackedPointsHashCode should have a getter,\n\nOops, totally agree.\n\nI updated the patch. The low/high points are cloned the sortedPackedPoints are exposed as Collection<byte[]>. "
        },
        {
            "id": "comment-15309960",
            "author": "Adrien Grand",
            "date": "2016-06-01T08:49:34+0000",
            "content": "Maybe the collection should be a view rather than a copy? For instance this would allow knowing how many points there are in canstant time (by calling size()) and without duplicating all points in memory? "
        },
        {
            "id": "comment-15310003",
            "author": "Martijn van Groningen",
            "date": "2016-06-01T09:29:16+0000",
            "content": "I've updated the patch and the returned collection is now a view.\nAlso I changed the return type from Collection<byte[]> to Collection<BytesRef> because the sortedPackedPoints iterator already makes a copy and returns that as BytesRef. "
        },
        {
            "id": "comment-15310017",
            "author": "Martijn van Groningen",
            "date": "2016-06-01T09:32:47+0000",
            "content": "Forgot to add an assertion in the test. "
        },
        {
            "id": "comment-15311847",
            "author": "Adrien Grand",
            "date": "2016-06-02T07:05:32+0000",
            "content": "Also I changed the return type from Collection<byte[]> to Collection<BytesRef> because the sortedPackedPoints iterator already makes a copy and returns that as BytesRef.\n\nI think the byte[] version was better since it is consitent with PointPangeQuery which exposes the low/high bounds as a byte[]? Also I don't think it is true that the sortedPackedPoints iterator makes a copy: looking at PrefixCodedTerms, it seems to be reusing the same BytesRef object?\n\nSomething else we should do is throwing a NoSuchElementException in the Iterator whin upTo==size to comply with the Iterator API. "
        },
        {
            "id": "comment-15311882",
            "author": "Martijn van Groningen",
            "date": "2016-06-02T07:33:20+0000",
            "content": "I think the byte[] version was better since it is consitent with PointPangeQuery which exposes the low/high bounds as a byte[]?\n\nGood point. I'll change that.\n\nAlso I don't think it is true that the sortedPackedPoints iterator makes a copy: looking at PrefixCodedTerms, it seems to be reusing the same BytesRef object?\n\nTrue... we need to make a copy. I guess what I was confused with is the copy that PrefixCodedTerms makes from the input, but if it is reusing the BytesRef it copies into then a copy is required if we return the points in a collection.\n\nSomething else we should do is throwing a NoSuchElementException in the Iterator whin upTo==size to comply with the Iterator API.\n\n+1! "
        },
        {
            "id": "comment-15311896",
            "author": "Martijn van Groningen",
            "date": "2016-06-02T07:46:36+0000",
            "content": "I've updated the patch. "
        },
        {
            "id": "comment-15311914",
            "author": "Adrien Grand",
            "date": "2016-06-02T08:06:50+0000",
            "content": "Thanks Martijn, +1 "
        },
        {
            "id": "comment-15312275",
            "author": "ASF subversion and git services",
            "date": "2016-06-02T13:07:56+0000",
            "content": "Commit 50feae82af5d297b720a98db07ab43e093e788b8 in lucene-solr's branch refs/heads/branch_6x from Martijn van Groningen\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=50feae8 ]\n\nLUCENE-7307: Add getters to the PointInSetQuery and PointRangeQuery queries. "
        },
        {
            "id": "comment-15312276",
            "author": "ASF subversion and git services",
            "date": "2016-06-02T13:07:57+0000",
            "content": "Commit b977275185a111fad55da2bd993c1afb73a00b51 in lucene-solr's branch refs/heads/master from Martijn van Groningen\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b977275 ]\n\nLUCENE-7307: Add getters to the PointInSetQuery and PointRangeQuery queries. "
        },
        {
            "id": "comment-15314132",
            "author": "Michael McCandless",
            "date": "2016-06-03T13:52:37+0000",
            "content": "Martijn van Groningen can this be closed now? "
        },
        {
            "id": "comment-15314182",
            "author": "Martijn van Groningen",
            "date": "2016-06-03T14:25:02+0000",
            "content": "Michael McCandless yes! Thanks for reminding me. "
        }
    ]
}