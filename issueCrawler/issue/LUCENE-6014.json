{
    "id": "LUCENE-6014",
    "title": "Lucene41PostingsReader.advance() doc scanning is buggy",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "The \"code duplication\" here to optimize scanning to target after \"possible skipping\" looks really buggy.\n\nFor example, it never checks to refill buffer in the loop if it gets exhausted. But the code gives no indication about why its safe for it to make this assumption.\n\nIf nobody understands why this optimization is allowed to make such a shortcut, then please add a comment indicating why, with asserts tied to exact specific constants in skipwriter (if applicable), otherwise i will remove the optimization completely in 72 hours.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14176853",
            "author": "Robert Muir",
            "content": "As far as i can see, the assumption seems to be skipped || docFreq < blocksize. But if someone ever changes logic for advance, this can easily break (and its not clear to me yet, that it works for the \"skipping from fresh docsenum\", but maybe its ok).\n\nIn any case, needs docs to stay  ",
            "date": "2014-10-20T12:09:41+0000"
        },
        {
            "id": "comment-14177264",
            "author": "Michael McCandless",
            "content": "+1 to just nuke this scary optimization.\n\nIt's really important our core code is easy to understand, to reduce chance of bugs, and so other \"non experts\" can look, find bugs, make improvements.\n\nAnd so if this crazy opto is hard for you (who I would say has a strong grasp of postings formats in general) to figure out w/o comments, I don't think even with comments it ought to stay. ",
            "date": "2014-10-20T18:33:00+0000"
        },
        {
            "id": "comment-14177279",
            "author": "Robert Muir",
            "content": "Well again my concern is, the optimization is based on a non-obvious dependency there between two classes (skipper and postingsreader) and afaik, omitting skip point for first doc and so on was done after the fact, so i have concerns about cases like advance() on \"newborn\" docsenum here... is the optimization safe? or not? \n\nBasically in such cases, a comment and ideally an assert are really needed. Sometimes things are complicated, but if the code had these comments:\n\n// NOTE: we don't have to check for buffer exhaustion because its guaranteed either target is in this buffer, or we hit NO_MORE_DOCS\n// this is because we have a skip per-block, and we always skip. \n// See tests in XXX (some file that tests corner cases like df=128 and df=256 directly)\nassert actuallySkipped || docFreq < blockSize;\n\n\n\nThen I would not have complained. but as-is, who is to say this code is safe? ",
            "date": "2014-10-20T18:44:05+0000"
        }
    ]
}