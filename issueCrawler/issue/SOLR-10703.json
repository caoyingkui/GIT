{
    "id": "SOLR-10703",
    "title": "DocTransformer implements Closeable",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "This patch adds a prepare and a finish method to the interface of DocTransformer allowing a developer to perform actions before/after a doc transformer is applied to a result set. My use case was to benchmark the performance of a transformer, since transformer time is not part of QTime.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-18T09:04:07+0000",
            "content": "GitHub user diegoceccarelli opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/202\n\n    SOLR-10703 Add prepare and finish in DocTrasformer\n\n    This patch adds a prepare and a finish method to the interface of DocTransformer allowing a developer to perform actions before/after a doc transformer is applied to a result set. My use case was to benchmark the performance of a transformer, since transformer time is not part of QTime.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/diegoceccarelli/lucene-solr SOLR-10703\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/202.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #202\n\n\ncommit 48859507d8c0df5507e66ab84bbe721cedc7c49f\nAuthor: diego <diego.ceccarelli@gmail.com>\nDate:   2017-05-03T15:33:29Z\n\n    Add prepare and finish in DocTrasformer\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-16015460"
        },
        {
            "date": "2017-06-03T19:31:49+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r119993106\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/DocsStreamer.java \u2014\n    @@ -142,6 +142,11 @@ public boolean hasNext() \n{\n         return docIterator.hasNext();\n       }\n\n    +  // called at the end of the stream\n    \u2014 End diff \u2013\n\n    can't we leverage Closeable here and get some sugar&warns? \n    Also, line 89 still calls setContext() .. is it right? or I'm missing something?  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16036059"
        },
        {
            "date": "2017-06-03T19:31:49+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r119992991\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java \u2014\n    @@ -296,13 +297,13 @@ public void process(ResponseBuilder rb) throws IOException\n              if (null == resultContext) \n{\n                // either first pass, or we've re-opened searcher - either way now we setContext\n                resultContext = new RTGResultContext(rsp.getReturnFields(), searcherInfo.getSearcher(), req);\n    -           transformer.setContext(resultContext);\n    +           transformer.prepare(resultContext);\n              }\n              transformer.transform(doc, docid, 0);\n            }\n            docList.add(doc);\n          }\n    -\n    +     if ( null != transformer) transformer.finish();\n    \u2014 End diff \u2013\n\n    if it impacts RTG it also should be tested, otherwise, it can lead to leak from some heavy transformer  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16036060"
        },
        {
            "date": "2017-06-03T19:31:49+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r119993013\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/BinaryResponseWriter.java \u2014\n    @@ -119,11 +120,15 @@ public boolean wantsAllFields() {\n\n         protected void writeResultsBody( ResultContext res, JavaBinCodec codec ) throws IOException {\n           codec.writeTag(JavaBinCodec.ARR, res.getDocList().size());\n\n\tIterator<SolrDocument> docStreamer = res.getProcessedDocuments();\n\t\n\t\t\n\t\t\n\t\t\tEnd diff \u2013\n\t\t\n\t\t\n\t\n\t\n\n\n\n    I can't spot the difference between these lines, are there?  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16036061"
        },
        {
            "date": "2017-06-03T19:31:49+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r119992903\n\n    \u2014 Diff: solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.java \u2014\n    @@ -187,8 +187,8 @@ public String getName() {\n         }\n\n         @Override\n\n\tpublic void setContext(ResultContext context) {\n\t\n\t\t\n\t\t\n\t\t\tEnd diff \u2013\n\t\t\n\t\t\n\t\n\t\n\n\n\n    here is the problem: we have a plenty of transformers they are not changed?  (assuming they shouldn't be. see below) ",
            "author": "ASF GitHub Bot",
            "id": "comment-16036062"
        },
        {
            "date": "2017-06-03T19:31:49+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r119993260\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java \u2014\n    @@ -41,12 +41,26 @@\n        */\n       public abstract String getName();\n\n    +\n    +  /**\n    +   * This is called before \n{@link #transform}\n to provide context for any subsequent transformations.\n    +   *\n    +   * @param context The \n{@link ResultContext}\n stores information about how the documents were produced.\n    +   * @see #needsSolrIndexSearcher\n    +   */\n    +  public void prepare( ResultContext context ) {\n    \u2014 End diff \u2013\n\n    why the existing setContext() is not enough?  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16036063"
        },
        {
            "date": "2017-06-03T19:31:49+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r119992969\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java \u2014\n    @@ -1210,7 +1211,7 @@ public SolrQueryRequest getRequest() {\n         }\n\n         /** @returns null */\n\n\tpublic Iterator<SolrDocument> getProcessedDocuments() {\n\t\n\t\t\n\t\t\n\t\t\tEnd diff \u2013\n\t\t\n\t\t\n\t\n\t\n\n\n\n    not clear why  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16036064"
        },
        {
            "date": "2017-06-03T19:31:49+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r119993322\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java \u2014\n    @@ -93,6 +107,12 @@ public void setContext( ResultContext context ) {\n       public String[] getExtraRequestFields() \n{\n         return null;\n       }\n    +\n    +  /**\n    +   * This is called after a transformer has been applied to all the documents in the results set\n    +   */\n    +  public void finish(){\n    \u2014 End diff \u2013\n\n    is it possible to assert that finish is called always during the tests on the base class?  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16036065"
        },
        {
            "date": "2017-06-03T19:31:49+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r119993303\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/transform/DocTransformers.java \u2014\n    @@ -88,4 +89,11 @@ public boolean needsSolrIndexSearcher() \n{\n         return false;\n       }\n\n    +  @Override\n    +  public void finish() {\n    +    for( DocTransformer a : children ) {\n    +      a.finish();\n    \u2014 End diff \u2013\n\n    what is one of them throws the exception shouldn't it continue to finish others?  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16036066"
        },
        {
            "date": "2017-06-07T17:49:38+0000",
            "content": "Github user diegoceccarelli commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r120697530\n\n    \u2014 Diff: solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.java \u2014\n    @@ -187,8 +187,8 @@ public String getName() {\n         }\n\n         @Override\n\n\tpublic void setContext(ResultContext context) {\n\t\n\t\t\n\t\t\n\t\t\tEnd diff \u2013\n\t\t\n\t\t\n\t\n\t\n\n\n\n    Hey @m-khl  thanks for reviewing my code! \n\n    > here is the problem: we have a plenty of transformers they are not changed? (assuming they shouldn't be. see below)\n\n    In the main abstract class I only deprecated `DocTransformer::setContext`, so they will still compile. I see your point, and I could change so that `prepare` calls also `setContext`, in this way the behaviour of existing transformers will be preserved  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041298"
        },
        {
            "date": "2017-06-07T17:51:33+0000",
            "content": "Github user diegoceccarelli commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r120698022\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java \u2014\n    @@ -296,13 +297,13 @@ public void process(ResponseBuilder rb) throws IOException\n              if (null == resultContext) \n{\n                // either first pass, or we've re-opened searcher - either way now we setContext\n                resultContext = new RTGResultContext(rsp.getReturnFields(), searcherInfo.getSearcher(), req);\n    -           transformer.setContext(resultContext);\n    +           transformer.prepare(resultContext);\n              }\n              transformer.transform(doc, docid, 0);\n            }\n            docList.add(doc);\n          }\n    -\n    +     if ( null != transformer) transformer.finish();\n    \u2014 End diff \u2013\n\n    I'll take a look, thank you ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041301"
        },
        {
            "date": "2017-06-07T17:54:08+0000",
            "content": "Github user diegoceccarelli commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r120698740\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/DocsStreamer.java \u2014\n    @@ -142,6 +142,11 @@ public boolean hasNext() \n{\n         return docIterator.hasNext();\n       }\n\n    +  // called at the end of the stream\n    \u2014 End diff \u2013\n\n    the reason for `prepare` and `finish` was to have the same naming of components, imo it makes easier to understand what's going on, I do like the Closeable idea, do you think it would be better?\n\n    > Also, line 89 still calls setContext() .. is it right? or I'm missing something?\n\n    No, I missed line 89, thank you ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041304"
        },
        {
            "date": "2017-06-07T17:56:24+0000",
            "content": "Github user diegoceccarelli commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r120699342\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java \u2014\n    @@ -41,12 +41,26 @@\n        */\n       public abstract String getName();\n\n    +\n    +  /**\n    +   * This is called before \n{@link #transform}\n to provide context for any subsequent transformations.\n    +   *\n    +   * @param context The \n{@link ResultContext}\n stores information about how the documents were produced.\n    +   * @see #needsSolrIndexSearcher\n    +   */\n    +  public void prepare( ResultContext context ) {\n    \u2014 End diff \u2013\n\n    if you want to do something different than setting the context (see LTRFeatureLoggerTransformerFactory for example), the name is misleading. we could keep the setContext and just add the `prepare` method.  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041311"
        },
        {
            "date": "2017-06-07T17:56:46+0000",
            "content": "Github user diegoceccarelli commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r120699437\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java \u2014\n    @@ -93,6 +107,12 @@ public void setContext( ResultContext context ) {\n       public String[] getExtraRequestFields() \n{\n         return null;\n       }\n    +\n    +  /**\n    +   * This is called after a transformer has been applied to all the documents in the results set\n    +   */\n    +  public void finish(){\n    \u2014 End diff \u2013\n\n    good idea, I'll take a look  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041313"
        },
        {
            "date": "2017-06-07T17:59:11+0000",
            "content": "Github user diegoceccarelli commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r120700095\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/transform/DocTransformers.java \u2014\n    @@ -88,4 +89,11 @@ public boolean needsSolrIndexSearcher() \n{\n         return false;\n       }\n\n    +  @Override\n    +  public void finish() {\n    +    for( DocTransformer a : children ) {\n    +      a.finish();\n    \u2014 End diff \u2013\n\n    yes? I think that if a transformer throws an exception solr request should fail (you can still try and catch the exception inside the transformer if you want to obtain 'silent' behaviour) what do you think?  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041318"
        },
        {
            "date": "2017-06-07T20:33:08+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r120736862\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/transform/DocTransformers.java \u2014\n    @@ -88,4 +89,11 @@ public boolean needsSolrIndexSearcher() \n{\n         return false;\n       }\n\n    +  @Override\n    +  public void finish() {\n    +    for( DocTransformer a : children ) {\n    +      a.finish();\n    \u2014 End diff \u2013\n\n    I don't think it a way to design SPI (not A). Such silence should be either enforced with final/abstract constraints; or enforced in runtime. Imagine if some good transformer needs finish() to release a resource, but there is some badass sibling one. and it's enbaled from time-to-time at prod. requests. The instance will steadily leak, and it would be hard to find out why.     ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041564"
        },
        {
            "date": "2017-06-07T20:36:47+0000",
            "content": "Github user m-khl commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r120737742\n\n    \u2014 Diff: solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java \u2014\n    @@ -41,12 +41,26 @@\n        */\n       public abstract String getName();\n\n    +\n    +  /**\n    +   * This is called before \n{@link #transform}\n to provide context for any subsequent transformations.\n    +   *\n    +   * @param context The \n{@link ResultContext}\n stores information about how the documents were produced.\n    +   * @see #needsSolrIndexSearcher\n    +   */\n    +  public void prepare( ResultContext context ) {\n    \u2014 End diff \u2013\n\n    I suppose if anything can be done with existing facilities, they should be utilised. I don't take it much if some name is misleading. We have a lot of much more severe issues and live with them.  -1 for \"just add\" ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041570"
        },
        {
            "date": "2017-06-07T20:40:55+0000",
            "content": "Github user m-khl commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/202\n\n    Here is the overall note: Transformers has already setContext, thus they can already initialize. Finish logic can be implemented with SolrRequestInfo.addCloseHook(Closeable)    ",
            "author": "ASF GitHub Bot",
            "id": "comment-16041574"
        },
        {
            "date": "2017-06-30T22:58:10+0000",
            "content": "Github user diegoceccarelli commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/202\n\n    @m-khl  I updated the patch, highlights: \n       1. I removed `prepare` and relied on the old `setContext()`;\n       2. now a DocTransformer implements Closeable and provides the method `close()`\n       3. If a transformer fails it doesn't affect the other trasformers (+ Test)\n\n    TODO:\n    I didn't find a way to check that DocTrasformer::close is always called in the tests, any idea? \n\n    The `close()` is called from `DocsStreamer` so RealTimeGetRequest component should not be affected by this change, do you think it should? \n\n\n\n\n\n\n    minor: I think we should rename the Jira item in something like `Make DocTransformer Closeable` or something like that ",
            "author": "ASF GitHub Bot",
            "id": "comment-16070828"
        },
        {
            "date": "2017-07-14T20:49:42+0000",
            "content": "+1 ",
            "author": "Mikhail Khludnev",
            "id": "comment-16088038"
        },
        {
            "date": "2017-08-31T10:32:27+0000",
            "content": "I suppose I can commit this. I'm kindly asking someone else to review the patch.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16148806"
        },
        {
            "date": "2017-08-31T19:42:06+0000",
            "content": "Github user dsmiley commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/202\n\n    Maybe this should use Solr's `IOUtils.closeQuietly`?  It's tempting to use Lucene's `IOUtils.closeWhileHandlingException` since it'll save us from even looping here, although that one doesn't log the exception; it's swallowed completely :-/ ",
            "author": "ASF GitHub Bot",
            "id": "comment-16149485"
        },
        {
            "date": "2017-08-31T22:52:54+0000",
            "content": "Github user michaelbraun commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/202\n\n     DocTransformer post-implementing Closeable has a close() method but it is not annotated @Override - it should probably have ",
            "author": "ASF GitHub Bot",
            "id": "comment-16149733"
        },
        {
            "date": "2017-09-01T09:57:17+0000",
            "content": "Github user diegoceccarelli commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/202\n\n    Thanks @dsmiley  and @michaelbraun, I updated the code  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16150310"
        },
        {
            "date": "2017-09-06T17:30:43+0000",
            "content": "Github user tflobbe commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r137335651\n\n    \u2014 Diff: solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.java \u2014\n    @@ -68,6 +69,51 @@ public void testCustomTransformer() throws Exception \n{\n             \"//str[.='xx#title_2#']\",\n             \"//str[.='xx#title_3#']\");\n       }\n    +\n    +  @Test\n    +  public void testFinishCallInCustomFinishTransformer() throws Exception {\n    +    // Build a simple index\n    +    int max = 10;\n    +    for(int i=0; i<max; i++) \n{\n    +      SolrInputDocument sdoc = new SolrInputDocument();\n    +      sdoc.addField(\"id\", i);\n    +      sdoc.addField(\"subject\", \"xx\");\n    +      sdoc.addField(\"title\", \"title_\"+i);\n    +      updateJ(jsonAdd(sdoc), null);\n    +    }\n    +    assertU(commit());\n    +    assertQ(req(\"q\", \":\"), \"//*[@numFound='\" + max + \"']\");\n    +\n    +    assertQ( req(\n    +        \"q\", \":\",\n    +        \"fl\", \"id,[customFinish]\",\n    +        \"rows\", String.valueOf(max)\n    +        ),\n    +        // Check that the concatenated fields make it in the results\n    +        \"//*[@numFound='\" + max + \"']\");\n    +\n    +    // finish() will double the number of documents\n    +    assertEquals(max*2, CustomFinishTransformerFactory.finishTrasformer.counter);\n    +    CustomFinishTransformerFactory.finishTrasformer.counter = 0;\n    +\n    +    // test binary writer\n    +    h.query(req(\n    +        \"q\", \":\",\n    +        \"fl\", \"id,[customFinish]\",\n    +        \"rows\", String.valueOf(max),\n    +        \"wt\", \"javabin\"\n    +    ));\n    +    assertEquals(max*2, CustomFinishTransformerFactory.finishTrasformer.counter);\n    +\n    +    // test that a transformer that throws an exception doesn't affect the other transformers\n    +    h.query(req(\n    +        \"q\", \":\",\n    +        \"fl\", \"id,[exceptionFinish],[customFinish]\",\n    +        \"rows\", String.valueOf(max),\n    +        \"wt\", \"javabin\"\n    +    ));\n    +    assertEquals(max*2, CustomFinishTransformerFactory.finishTrasformer.counter);\n    \u2014 End diff \u2013\n\n    Suggestion: Assert that the exception was actually thrown, and add a \"ignoreException\" to not pollute the logs ",
            "author": "ASF GitHub Bot",
            "id": "comment-16155750"
        },
        {
            "date": "2017-09-06T17:30:43+0000",
            "content": "Github user tflobbe commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r137335160\n\n    \u2014 Diff: solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.java \u2014\n    @@ -68,6 +69,51 @@ public void testCustomTransformer() throws Exception \n{\n             \"//str[.='xx#title_2#']\",\n             \"//str[.='xx#title_3#']\");\n       }\n    +\n    +  @Test\n    +  public void testFinishCallInCustomFinishTransformer() throws Exception {\n    +    // Build a simple index\n    +    int max = 10;\n    +    for(int i=0; i<max; i++) \n{\n    +      SolrInputDocument sdoc = new SolrInputDocument();\n    +      sdoc.addField(\"id\", i);\n    +      sdoc.addField(\"subject\", \"xx\");\n    +      sdoc.addField(\"title\", \"title_\"+i);\n    +      updateJ(jsonAdd(sdoc), null);\n    +    }\n    +    assertU(commit());\n    +    assertQ(req(\"q\", \":\"), \"//*[@numFound='\" + max + \"']\");\n    +\n    +    assertQ( req(\n    +        \"q\", \":\",\n    +        \"fl\", \"id,[customFinish]\",\n    +        \"rows\", String.valueOf(max)\n    +        ),\n    +        // Check that the concatenated fields make it in the results\n    +        \"//*[@numFound='\" + max + \"']\");\n    +\n    +    // finish() will double the number of documents\n    +    assertEquals(max*2, CustomFinishTransformerFactory.finishTrasformer.counter);\n    +    CustomFinishTransformerFactory.finishTrasformer.counter = 0;\n    \u2014 End diff \u2013\n\n    Is this needed? Shouldn't setContext() set this value? ",
            "author": "ASF GitHub Bot",
            "id": "comment-16155751"
        },
        {
            "date": "2017-09-06T17:30:43+0000",
            "content": "Github user tflobbe commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r137335378\n\n    \u2014 Diff: solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.java \u2014\n    @@ -125,4 +171,86 @@ public static String getAsString(String field, SolrDocument doc) {\n         }\n         return null;\n       }\n    +\n    +\n    +  public static class CustomFinishTransformerFactory extends TransformerFactory {\n    +\n    +    static CustomFinishTransformer finishTrasformer = new CustomFinishTransformer();\n    +\n    +    @Override\n    +    public DocTransformer create(String field, SolrParams params, SolrQueryRequest req) \n{\n    +      return finishTrasformer;\n    +    }\n    +  }\n    +\n    +\n    +  public static class CustomFinishTransformer extends DocTransformer {\n    +    int counter;\n    +\n    +    public CustomFinishTransformer() \n{\n    +    }\n    +\n    +    @Override\n    +    public void setContext(ResultContext context)\n{\n    +      super.setContext(context);\n    +      counter = 0;\n    +    }\n    +\n    +    @Override\n    +    public String getName() \n{\n    +      return \"customFinish\";\n    +    }\n    +\n    +    @Override\n    +    public void transform(SolrDocument doc, int docid) throws IOException {\n    +      counter++;\n    \u2014 End diff \u2013\n\n    Suggestion. Throw exception if close() was already called in this request ",
            "author": "ASF GitHub Bot",
            "id": "comment-16155752"
        },
        {
            "date": "2017-09-17T12:57:56+0000",
            "content": "Github user diegoceccarelli commented on a diff in the pull request:\n\n    https://github.com/apache/lucene-solr/pull/202#discussion_r139309859\n\n    \u2014 Diff: solr/solrj/src/java/org/apache/solr/common/util/IOUtils.java \u2014\n    @@ -31,7 +32,7 @@ public static void closeQuietly(Closeable closeable) \n{\n             closeable.close();\n           }\n         } catch (Exception e) {\n\n\tLOG.error(\"Error while closing\", e);\n    +      SolrException.log(LOG, \"Error while closing \"+closeable.getClass());\n\t\n\t\t\n\t\t\n\t\t\tEnd diff \u2013\n\t\t\n\t\t\n\t\n\t\n\n\n\n    I had to modify the logging here in order to have `ignoreException` working in the tests.  ",
            "author": "ASF GitHub Bot",
            "id": "comment-16169287"
        },
        {
            "date": "2017-12-05T15:13:03+0000",
            "content": "Github user diegoceccarelli commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/202\n\n    @tflobbe @m-khl ping   ",
            "author": "ASF GitHub Bot",
            "id": "comment-16278705"
        }
    ]
}