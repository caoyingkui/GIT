{
    "id": "SOLR-2164",
    "title": "Add option to build suggester dictionary on init",
    "details": {
        "affect_versions": "3.1,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "spellchecker"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "Currently available Lookup implementations don't persist their data, which means that on every core reload this data is lost and needs to be rebuilt by invoking spellcheck.build=true . This issue adds a boolean option buildOnInit to have this happen automatically on core reload.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-12985754",
            "date": "2011-01-24T15:57:39+0000",
            "content": "Coming for 3.1 still Andrzej? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12994059",
            "date": "2011-02-13T10:21:23+0000",
            "content": "Moving out non-bug, non-test, unassigned issues from 3.1\n\nsee http://www.lucidimagination.com/search/document/e5618bfdbfa8dcf6 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412189",
            "date": "2012-07-11T22:26:17+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429900",
            "date": "2012-08-07T03:44:09+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13445547",
            "date": "2012-08-31T01:17:53+0000",
            "content": "There is no indication that anyone is actively working on this issue, so removing 4.0 from the fixVersion. "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-15981903",
            "date": "2017-04-24T20:54:13+0000",
            "content": "This is not a problem with recent versions of Lucene - all subclasses that we ship provide store/load implementations. "
        }
    ]
}