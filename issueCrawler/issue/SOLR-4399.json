{
    "id": "SOLR-4399",
    "title": "NPE in Lucene if Solr spellcheck sourceLocation parameter is missing for FileBasedSpellChecker or IndexBasedSpellChecker",
    "details": {
        "affect_versions": "4.0",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "An NPE will occur down in Lucene SpellChecker if the sourceLocation parameter is missing for the FileBasedSpellChecker and the spellcheck.build parameter is specified on a query request. Solr should check if the sourceLocation parameter is missing and either give a readable exception explaining the problem, or use a reasonable default such as \"spelling.txt\".\n\nTo repro, add this to the Solr 4.0 example solrconfig.xml:\n\n\n  <requestHandler name=\"/spellBug4\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">name</str>\n      <str name=\"q.op\">AND</str>\n      <str name=\"spellcheck\">on</str>\n      <str name=\"spellcheck.build\">on</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>spellcheckBug4</str>\n    </arr>\n  </requestHandler>\n\n  <searchComponent name=\"spellcheckBug4\" class=\"solr.SpellCheckComponent\">\n    <lst name=\"spellchecker\">\n      <str name=\"classname\">solr.FileBasedSpellChecker</str>\n      <!-- MISSING: <str name=\"sourceLocation\">spelling.txt</str>  -->\n    </lst>\n  </searchComponent>\n\n\n\nand issue this query request:\n\n\ncurl \"http://localhost:8983/solr/spellBug4?q=catle&indent=true\"\n\n\n\nWhich results in this NPE stack trace:\n\n\n<lst name=\"error\">\n  <str name=\"trace\">java.lang.NullPointerException\n        at org.apache.lucene.search.spell.SpellChecker.indexDictionary(SpellChecker.java:515)\n        at org.apache.solr.spelling.FileBasedSpellChecker.build(FileBasedSpellChecker.java:68)\n        at org.apache.solr.handler.component.SpellCheckComponent.prepare(SpellCheckComponent.java:108)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:185)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:240)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1699)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:455)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:276)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1337)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:484)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:233)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1065)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:413)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:999)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\n        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)\n        at org.eclipse.jetty.server.Server.handle(Server.java:351)\n        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:454)\n        at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)\n        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:890)\n        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:944)\n        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:634)\n        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)\n        at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)\n        at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)\n        at java.lang.Thread.run(Unknown Source)\n</str> \n  <int name=\"code\">500</int>\n</lst>\n\n\n\nThere is a similar issue for IndexBasedSpellChecker. Change \"FileBasedSpellChecker\" to \"IndexBasedSpellChecker\" in the above solrcomfig.xml snippet and this similar but distinct NPE stack trace is produced:\n\n\n<lst name=\"error\">\n  <str name=\"trace\">java.lang.NullPointerException\n        at java.util.TreeMap.getEntry(Unknown Source)\n        at java.util.TreeMap.get(Unknown Source)\n        at org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader.terms(PerFieldPostingsFormat.java:215)\n        at org.apache.lucene.index.MultiFields.getTerms(MultiFields.java:130)\n        at org.apache.lucene.search.spell.HighFrequencyDictionary$HighFrequencyIterator.&lt;init&gt;(HighFrequencyDictionary.java:69)\n        at org.apache.lucene.search.spell.HighFrequencyDictionary.getWordsIterator(HighFrequencyDictionary.java:59)\n        at org.apache.lucene.search.spell.SpellChecker.indexDictionary(SpellChecker.java:515)\n        at org.apache.solr.spelling.IndexBasedSpellChecker.build(IndexBasedSpellChecker.java:96)\n        at org.apache.solr.handler.component.SpellCheckComponent.prepare(SpellCheckComponent.java:108)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:185)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:240)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1699)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:455)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:276)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1337)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:484)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:233)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1065)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:413)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:999)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\n        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)\n        at org.eclipse.jetty.server.Server.handle(Server.java:351)\n        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:454)\n        at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)\n        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:890)\n        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:944)\n        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:634)\n        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)\n        at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)\n        at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)\n        at java.lang.Thread.run(Unknown Source)\n</str>\n  <int name=\"code\">500</int>\n</lst>\n\n\n\nIn the case of IndexBasedSpellChecker, maybe the default for sourceLocation should be the \"spelling\" directory, since it takes a Lucene index directory rather than a text file like FileBasedSpellChecker. Or, give an error status that clearly states that the sourceLocation \"directory\" is required and missing.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}