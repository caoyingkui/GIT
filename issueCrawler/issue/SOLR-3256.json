{
    "id": "SOLR-3256",
    "title": "Distributed search throws NPE when using fl=score",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Steps to reproduce the problem:\nStart two Solr instances (may use the example configuration)\nadd some documents to both instances\nexecute a query like: http://localhost:8983/solr/select?shards=localhost:8983/solr,localhost:8984/solr&q=(ipod%20OR%20display)&*fl=score*\n\nExpected result:\nList of scores or at least an exception saying that this request is not supported (may not make too much sense to do fl=score, but a descriptive exception can help debug the problem)\n\nGetting:\nSEVERE: null:java.lang.NullPointerException\n\tat org.apache.solr.handler.component.QueryComponent.returnFields(QueryComponent.java:985)\n\tat org.apache.solr.handler.component.QueryComponent.handleRegularResponses(QueryComponent.java:637)\n\tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:612)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:307)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1540)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:435)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:256)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1337)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:484)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:233)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1065)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:413)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:999)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:351)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:454)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:890)\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:944)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:634)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)\n\tat org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)\n\tat java.lang.Thread.run(Thread.java:636)",
    "attachments": {
        "SOLR-3256.patch": "https://issues.apache.org/jira/secure/attachment/12519066/SOLR-3256.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13233089",
            "date": "2012-03-20T01:21:01+0000",
            "content": "Confirmed... and you don't even need two nodes:\nhttp://localhost:8983/solr/select?q=*:*&shards=localhost:8983/solr&fl=score "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13233090",
            "date": "2012-03-20T01:25:42+0000",
            "content": "It looks like the fl is modified for the first phase to \"id,score\" but not on the second phase.\n\n\nINFO: [] webapp=/solr path=/select params={fl=id,score&shard.url=localhost:8983/solr&NOW=1332206350114&start=0&q=*:*&distrib=false&isShard=true&wt=javabin&fsv=true&rows=10&version=2} hits=32 status=0 QTime=1 \nMar 19, 2012 9:19:10 PM org.apache.solr.core.SolrCore execute\nINFO: [] webapp=/solr path=/select params={fl=score&shard.url=localhost:8983/solr&NOW=1332206350114&q=*:*&ids=SP2514N,GB18030TEST,apple,F8V7067-APL-KIT,adata,6H500F0,MA147LL/A,ati,IW-02,asus&distrib=false&isShard=true&wt=javabin&rows=10&version=2} status=0 QTime=1 \n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13233103",
            "date": "2012-03-20T01:36:20+0000",
            "content": "Culprit is line 948 of QueryComponent:\n\n        // currently, \"score\" is synonymous with \"*,score\" so\n        // don't add \"id\" if the fl is empty or \"score\" or it would change the meaning.\n         if (fl.length()!=0 && !\"score\".equals(fl) && !\"*\".equals(fl)) {\n           sreq.params.set(CommonParams.FL, fl+','+uniqueField.getName());\n         }\n\n\n\nI think with the new pseudo-fields / ReturnFields feature, \"score\" no longer means \"*,score\".\n\nFurthermore, it doesn't look like the \"multiple fl param\" feature is working with distributed search:\n\nhttp://localhost:8983/solr/select?q=*:*&shards=localhost:8983/solr&fl=id&fl=price&fl=cat\n(the response only contains \"id\") "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13233370",
            "date": "2012-03-20T12:11:23+0000",
            "content": "It's rare, it seems to depend on the order of the fl parameters.\nhttp://localhost:8983/solr/select?q=*:*&shards=localhost:8983/solr&fl=id&fl=cat&fl=price\n\nshows only the id,\n\nhttp://localhost:8983/solr/select?q=*:*&shards=localhost:8983/solr&fl=cat&fl=id&fl=price\n\nshows id and cat and\nhttp://localhost:8983/solr/select?q=*:*&shards=localhost:8983/solr&fl=price&fl=cat&fl=id\nshows price and id.\n\nI'm attaching a patch that demonstrates the failure with a test case. "
        },
        {
            "author": "Luca Cavanna",
            "id": "comment-13233381",
            "date": "2012-03-20T12:54:41+0000",
            "content": "Regarding the legacy behavior fl=score which was equals to fl=*,score : it has been removed from trunk a few weeks ago (SOLR-2712). "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13233534",
            "date": "2012-03-20T16:30:37+0000",
            "content": "I'm attaching a possible fix. It doesn't assumes that \"score\" means \"*,score\" anymore. It also fixes the problem with the order of the \"fl\" parameters when they are more than one. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13233581",
            "date": "2012-03-20T17:25:07+0000",
            "content": "Hey Tomas - this has an overlap with SOLR-3214 - and it looks like this fix covers the SOLR-3214 fix - can you confirm so we can close them both when this goes in? "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13233644",
            "date": "2012-03-20T18:18:16+0000",
            "content": "You are right Mark, it does overlap with SOLR-3214. This fix seems to fix that too. I added this lines to the TestDistributedSearch:\n\n    query(\"q\",\":\", \"fl\",\"score\",\"sort\",i1 + \" desc\");\n    query(\"q\",\":\", \"fl\",i1 + \",score\",\"sort\",i1 + \" desc\");\n    query(\"q\",\":\", \"fl\", i1, \"fl\",\"score\",\"sort\",i1 + \" desc\");\n    query(\"q\",\":\", \"fl\", \"id,\" + i1,\"sort\",i1 + \" desc\");\n    query(\"q\",\":\", \"fl\", \"id\", \"fl\",i1,\"sort\",i1 + \" desc\");\n    query(\"q\",\":\", \"fl\",i1, \"fl\", \"id\",\"sort\",i1 + \" desc\");\n    query(\"q\",\":\", \"fl\", \"id\", \"fl\",nint, \"fl\",tint,\"sort\",i1 + \" desc\");\n    query(\"q\",\":\", \"fl\",nint, \"fl\", \"id\", \"fl\",tint,\"sort\",i1 + \" desc\");\n\nThose work with my patch. I also manually tested the requests I commented before and those work OK too. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13239709",
            "date": "2012-03-27T17:41:34+0000",
            "content": "Thanks Tomas! "
        }
    ]
}