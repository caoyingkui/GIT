{
    "id": "SOLR-9829",
    "title": "Solr cannot provide index service after a large GC pause but core state in ZK is still active",
    "details": {
        "components": [
            "update"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3.2",
        "status": "Resolved",
        "resolution": "Invalid",
        "priority": "Major"
    },
    "description": "When Solr meets a large GC pause like https://issues.apache.org/jira/browse/SOLR-9828 , the collections on it cannot provide service and never come back until restart. \n\nBut in the ZooKeeper, the cores on that server still shows active and server is also in live_nodes. \n\nSome /update requests got http 500 due to \"IndexWriter is closed\". Some gots http 400 due to \"possible analysis error.\" whose root cause is still \"IndexWriter is closed\", which we think it should return 500 instead(documented in https://issues.apache.org/jira/browse/SOLR-9825).\n\nOur questions in this JIRA are:\n1, should solr mark cores as down in zk when it cannot provide index service?\n2, Is it possible solr re-open the IndexWriter to provide index service again?\n\nsolr log snippets:\n2016-11-22 20:47:37.274 ERROR (qtp2011912080-76) [c:collection12 s:shard1 r:core_node1 x:collection12_shard1_replica1] o.a.s.c.SolrCore org.apache.solr.common.SolrException: Exception writing document id Q049dXMxYjMtbWFpbDg4L089bGxuX3VzMQ==20841350!270CE4F9C032EC26002580730061473C to the index; possible analysis error.\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:167)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:69)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:955)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1110)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:706)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\n\tat org.apache.solr.update.processor.LanguageIdentifierUpdateProcessor.processAdd(LanguageIdentifierUpdateProcessor.java:207)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\n\tat org.apache.solr.update.processor.CloneFieldUpdateProcessorFactory$1.processAdd(CloneFieldUpdateProcessorFactory.java:231)\n\tat org.apache.solr.handler.loader.JsonLoader$SingleThreadedJsonLoader.processUpdate(JsonLoader.java:143)\n\tat org.apache.solr.handler.loader.JsonLoader$SingleThreadedJsonLoader.load(JsonLoader.java:113)\n\tat org.apache.solr.handler.loader.JsonLoader.load(JsonLoader.java:76)\n\tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:98)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2068)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:672)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:463)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:235)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:199)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:499)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\n\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.lucene.store.AlreadyClosedException: this IndexWriter is closed\n\tat org.apache.lucene.index.IndexWriter.ensureOpen(IndexWriter.java:719)\n\tat org.apache.lucene.index.IndexWriter.ensureOpen(IndexWriter.java:733)\n\tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1471)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:239)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:163)\n\t... 40 more\nCaused by: java.nio.channels.ClosedByInterruptException\n\tat java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)\n\tat sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:315)\n\tat org.apache.lucene.store.NativeFSLockFactory$NativeFSLock.ensureValid(NativeFSLockFactory.java:170)\n\tat org.apache.lucene.store.LockValidatingDirectoryWrapper.createOutput(LockValidatingDirectoryWrapper.java:43)\n\tat org.apache.lucene.store.TrackingDirectoryWrapper.createOutput(TrackingDirectoryWrapper.java:43)\n\tat org.apache.lucene.codecs.blocktree.BlockTreeTermsWriter.<init>(BlockTreeTermsWriter.java:328)\n\tat org.apache.lucene.codecs.blocktree.BlockTreeTermsWriter.<init>(BlockTreeTermsWriter.java:280)\n\tat org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.fieldsConsumer(Lucene50PostingsFormat.java:428)\n\tat org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsWriter.write(PerFieldPostingsFormat.java:196)\n\tat org.apache.lucene.index.FreqProxTermsWriter.flush(FreqProxTermsWriter.java:107)\n\tat org.apache.lucene.index.DefaultIndexingChain.flush(DefaultIndexingChain.java:112)\n\tat org.apache.lucene.index.DocumentsWriterPerThread.flush(DocumentsWriterPerThread.java:422)\n\tat org.apache.lucene.index.DocumentsWriter.doFlush(DocumentsWriter.java:503)\n\tat org.apache.lucene.index.DocumentsWriter.flushAllThreads(DocumentsWriter.java:615)\n\tat org.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:423)\n\tat org.apache.lucene.index.StandardDirectoryReader.doOpenIfChanged(StandardDirectoryReader.java:273)\n\tat org.apache.lucene.index.DirectoryReader.openIfChanged(DirectoryReader.java:203)\n\tat org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1581)\n\tat org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1773)\n\tat org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.java:609)\n\tat org.apache.solr.update.CommitTracker.run(CommitTracker.java:216)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\t... 1 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-06T16:16:44+0000",
            "author": "Erick Erickson",
            "content": "Please bring things like this up on the user's list before opening a JIRA.\n\n1> You have to look both at the live_nodes list as well as the state.json to know if a node is really up or not.\n\n2> The error you're asking about has been seen many times as something that gets reported that isn't actually the root cause, you must look in the Solr logs. ",
            "id": "comment-15725937"
        },
        {
            "date": "2016-12-07T03:59:46+0000",
            "author": "Mark Miller",
            "content": "We should be more resilient in the face of some of these types of IO errors, but I'm surprised Caused by: java.nio.channels.ClosedByInterruptException happens in 5.3. We shouldn't be interrupting Lucene index code anymore, but perhaps it crept back in or I'm not remembering well and it was fixed after. ",
            "id": "comment-15727609"
        },
        {
            "date": "2016-12-07T04:12:24+0000",
            "author": "Varun Thacker",
            "content": "Hi Mark,\n\nI think you are referring to SOLR-7956 which was fixed in Solr 5.4 ? This issue is marked as 5.3.2  ",
            "id": "comment-15727630"
        },
        {
            "date": "2016-12-08T06:21:54+0000",
            "author": "Forest Soup",
            "content": "Hi Erick, \n\nI'm sure the solr node is still in the live_nodes list. \nThe logs are from solr log. And the most root cause I can see here is the IndexWriter is closed. ",
            "id": "comment-15731274"
        },
        {
            "date": "2016-12-08T14:13:45+0000",
            "author": "Forest Soup",
            "content": "Thanks All!\n\nI have a mail thread tracking on it. \nhttp://lucene.472066.n3.nabble.com/Solr-cannot-provide-index-service-after-a-large-GC-pause-but-core-state-in-ZK-is-still-active-td4308942.html\n\nCould you please help comments on the questions in it? Thanks!\n\n@Mark and Varun, are you sure this issue is dup of https://issues.apache.org/jira/browse/SOLR-7956 ? \nIf yes, I'll try to backport it to 5.3.2. \nAnd also I see Daisy created a similar JIRA: https://issues.apache.org/jira/browse/SOLR-9830 . Although her root cause is the too many open file, but could you make sure it's also the dup of SOLR-7956?  ",
            "id": "comment-15732316"
        },
        {
            "date": "2016-12-08T15:24:02+0000",
            "author": "Mark Miller",
            "content": "Well, you have a lot going on in this JIRA in terms of what you bring up. SOLR-7956 addresses the issue that causes that stack trace though, which is not related to GC. ",
            "id": "comment-15732476"
        }
    ]
}