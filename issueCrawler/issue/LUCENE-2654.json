{
    "id": "LUCENE-2654",
    "title": "bulk-code each chunk b/w indexed terms in the terms dict",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Duplicate",
        "status": "Resolved"
    },
    "description": "This is an idea for exploration that came up w/ Robert...\n\nIn PrefixCodedTermsDict (used by the default Standard codec), we encode each term entry \"standalone\", using vInts.  We store the changed suffix (start, end, bytes), then metadata for the term like docFreq, frq start, prx start, skip start.  Each of these ints is a vInt, which is relatively costly.\n\nIf instead we store the N terms between indexed terms \"column-stride\", using bulk codec like FOR/PFOR, so that the 32 docFreqs are stored as one block, 32 frq deltas as another, etc., then seek and next should be faster.  Ie, we could make decode of the metadata lazy, so that a seek to a term that does not exist may be able avoid any metadata decode entirely.  Sequential scanning (lots of .next in a row) would also be faster, even if it needs the metadata since bulk-decode should be faster than multiple vInt decodes.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-01-18T00:23:55+0000",
            "content": "duplicate of LUCENE-2872 ",
            "author": "Robert Muir",
            "id": "comment-12982934"
        }
    ]
}