{
    "id": "SOLR-11235",
    "title": "Some SolrCore metrics should check if core is closed before reporting",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "metrics"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.0",
            "7.1",
            "master (8.0)"
        ],
        "affect_versions": "7.0,                                            7.1,                                            master (8.0)",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "A recent jenkins build (Lucene-Solr-7.0-Windows (32bit/jdk-9-ea+181) - Build # 87) produced this error:\n\nFAILED:  org.apache.solr.core.TestJmxIntegration.testJmxRegistration\n\nError Message:\norg.apache.lucene.store.AlreadyClosedException: Already closed\n\nStack Trace:\njavax.management.RuntimeMBeanException: org.apache.lucene.store.AlreadyClosedException: Already closed\n\tat __randomizedtesting.SeedInfo.seed([4970D41C4ABC809B:C7A1B02627FDD8FE]:0)\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.rethrow(DefaultMBeanServerInterceptor.java:829)\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.rethrowMaybeMBeanException(DefaultMBeanServerInterceptor.java:842)\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:645)\n\tat java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:678)\n\tat org.apache.solr.core.TestJmxIntegration.testJmxRegistration(TestJmxIntegration.java:121)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1713)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:907)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:943)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:957)\n\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:57)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:916)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:802)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:852)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:863)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:57)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\nCaused by: org.apache.lucene.store.AlreadyClosedException: Already closed\n\tat org.apache.solr.core.CachingDirectoryFactory.get(CachingDirectoryFactory.java:337)\n\tat org.apache.solr.core.SolrCore.getNewIndexDir(SolrCore.java:349)\n\tat org.apache.solr.core.SolrCore.getIndexDir(SolrCore.java:328)\n\tat org.apache.solr.core.SolrCore.getIndexSize(SolrCore.java:405)\n\tat org.apache.solr.core.SolrCore.lambda$initializeMetrics$7(SolrCore.java:1137)\n\tat com.codahale.metrics.JmxReporter$JmxGauge.getValue(JmxReporter.java:188)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:260)\n\tat java.management/com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:112)\n\tat java.management/com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:46)\n\tat java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)\n\tat java.management/com.sun.jmx.mbeanserver.PerInterface.getAttribute(PerInterface.java:83)\n\tat java.management/com.sun.jmx.mbeanserver.MBeanSupport.getAttribute(MBeanSupport.java:206)\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:641)\n\t... 40 more\n\n\n\nThe reason is that at the moment when these particular metrics were retrieved the core has already been closed. In such situations we should return no value (null or 0).",
    "attachments": {
        "SOLR-11235.diff": "https://issues.apache.org/jira/secure/attachment/12881819/SOLR-11235.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-08-14T21:11:00+0000",
            "content": "This patch prevents AlreadyClosedException when retrieving metrics from an already closed core. It also closes metric reporters earlier during SolrCore.close(). ",
            "author": "Andrzej Bialecki",
            "id": "comment-16126405"
        },
        {
            "date": "2017-08-15T09:33:20+0000",
            "content": "Commit 814d4fb23e4fe9bbf2d3dc49a26c5f7a1cf4bbeb in lucene-solr's branch refs/heads/branch_7x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=814d4fb ]\n\nSOLR-11235: Some SolrCore metrics should check if core is closed before reporting. ",
            "author": "ASF subversion and git services",
            "id": "comment-16126999"
        },
        {
            "date": "2017-08-15T14:33:11+0000",
            "content": "Commit eef95cabb571198bbb53491d717b14a36f87f6dd in lucene-solr's branch refs/heads/branch_7_0 from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eef95ca ]\n\nSOLR-11235: Some SolrCore metrics should check if core is closed before reporting. ",
            "author": "ASF subversion and git services",
            "id": "comment-16127305"
        },
        {
            "date": "2017-08-15T14:33:27+0000",
            "content": "Commit afe7dffa23b1f2067c0b6c8ff3999f47bc655826 in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=afe7dff ]\n\nSOLR-11235: Some SolrCore metrics should check if core is closed before reporting. ",
            "author": "ASF subversion and git services",
            "id": "comment-16127306"
        },
        {
            "date": "2017-10-17T11:03:21+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16207300"
        }
    ]
}