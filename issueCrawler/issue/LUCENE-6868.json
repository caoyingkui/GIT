{
    "id": "LUCENE-6868",
    "title": "ParallelLeafReader.getTermVectors can indirectly load TVs multiple times",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [
            "core/index",
            "core/termvectors"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "ParallelLeafReader has a getTermVectors(docId) implementation that loops over each field it has in a loop and calls getTermVector(docId,fieldName).  But the implementation of that will load all term vectors for all fields in that reader, yet ParallelLeafReader only wants one.  The effect is an O(n^2) where 'n' is the number of fields, when we could get O(n) if we do it right. PLR should call getTermVectors(docId) (not referring to a specific field) for each of it's readers and then aggregate them.\n\nThis wouldn't be such a problem if our term vector API/Codec was improved to not load all term vectors for all fields from disk at once.\n\nFound via randomized-testing of IndexWriter auto-picking ParallelAtomicReader along with a test I have that asserts TVs aren't fetched for a doc more than once.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}