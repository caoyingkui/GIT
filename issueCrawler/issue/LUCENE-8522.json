{
    "id": "LUCENE-8522",
    "title": "Spatial: Polygon touching the negative boundaries of WGS84 fails on Solr",
    "details": {
        "components": [
            "modules/spatial3d"
        ],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "affect_versions": "7.4,                                            7.5,                                            master (8.0)",
        "labels": "",
        "priority": "Critical",
        "type": "Bug"
    },
    "description": "When using the WGS84 coordinates system and querying with a polygon touching one of the \"negative\" borders, Solr throws a \"NullPointerException\" error.\n\nThe query is performed with the \"intersect\" function over a GeoJson polygon specified with the coordinates:\n\n{ \"coordinates\":[[[-180,90],[-180,-90],[180,-90],[180,90],[-180,90]]] }\n\n\u00a0\n\nThe queried field has been defined as:\n\n<fieldType name=\"geom\"\n           class=\"solr.SpatialRecursivePrefixTreeFieldType\"\n           spatialContextFactory=\"Geo3D\"\n           geo=\"true\"\n           planetModel=\"WGS84\"\n           format=\"GeoJSON\"\n/>\n\n\u00a0\n\n    java.lang.NullPointerException\n    at org.apache.lucene.spatial.spatial4j.Geo3dShape.getBoundingBox(Geo3dShape.java:114)\n    at org.apache.lucene.spatial.query.SpatialArgs.calcDistanceFromErrPct(SpatialArgs.java:63)\n    at org.apache.lucene.spatial.query.SpatialArgs.resolveDistErr(SpatialArgs.java:84)\n    at org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy.makeQuery(RecursivePrefixTreeStrategy.java:182)\n    at org.apache.solr.schema.AbstractSpatialFieldType.getQueryFromSpatialArgs(AbstractSpatialFieldType.java:368)\n    at org.apache.solr.schema.AbstractSpatialFieldType.getFieldQuery(AbstractSpatialFieldType.java:340)\n    at org.apache.solr.search.FieldQParserPlugin$1.parse(FieldQParserPlugin.java:45)\n    at org.apache.solr.search.QParser.getQuery(QParser.java:169)\n    at org.apache.solr.handler.component.QueryComponent.prepare(QueryComponent.java:207)\n    at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:272)\n    at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:199)\n    at org.apache.solr.core.SolrCore.execute(SolrCore.java:2539)\n    at org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:709)\n    at org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:515)\n    at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:377)\n    at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:323)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1634)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)\n    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:219)\n    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n    at org.eclipse.jetty.server.Server.handle(Server.java:531)\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:352)\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260)\n    at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:281)\n    at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\n    at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\n    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)\n    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)\n    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)\n    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)\n    at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:760)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:678)\n    at java.lang.Thread.run(Thread.java:748)",
    "attachments": {
        "LUCENE-8522.patch": "https://issues.apache.org/jira/secure/attachment/12942787/LUCENE-8522.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16638458",
            "author": "Karl Wright",
            "content": "Ignacio Vera, I think this is your code? ",
            "date": "2018-10-04T16:18:03+0000"
        },
        {
            "id": "comment-16638472",
            "author": "Ignacio Vera",
            "content": "Thanks Karl Wright, I will dig into this. ",
            "date": "2018-10-04T16:29:08+0000"
        },
        {
            "id": "comment-16639423",
            "author": "Ignacio Vera",
            "content": "Thanks Ema Panz for reporting this issue.\u00a0\n\nSpeaking about borders means to me that you are thinking in planar geometry. I have built the shape using JTS which uses planar geometry and it returns a rectangle.\n\nGeo3D considers the earth as an spheroid (spherical geometry) therefore there are no borders. Any point at one of the\u00a0poles (latitude =90 or latitude=-90) is the same point\u00a0regardless the value of the longitude. In the same way points with the same latitude and longitude=180 or longitude=-180 are in fact the same point.\n\nThe polygon you are trying to build here is a two points polygon ([180,90] and [-180,90]\u00a0are\u00a0one point and\u00a0[180,-90] and [-180,-90] are\u00a0the other point)\u00a0and it\u00a0is not a valid polygon.\u00a0In this case the polygon factory in spatial3d does not throw an error but returns null. The Geo3D wrapper does not check for nullability\u00a0and it builds a wrapped shape with a null value. down the line\u00a0you get the npe.\n\nKarl Wright, this can be fixed at Geo3D wrapper level but maybe it should be the polygon factory that throws an error instead of returning a null shape. \u00a0wdyt?\n\n\u00a0 ",
            "date": "2018-10-05T07:45:02+0000"
        },
        {
            "id": "comment-16639702",
            "author": "Karl Wright",
            "content": "Ignacio Vera I agree that the factory should never return null; it should return IllegalArgumentException instead.  This would have to be a fix in the factory.  But that sounds like a trivial change, no? ",
            "date": "2018-10-05T11:42:38+0000"
        },
        {
            "id": "comment-16639708",
            "author": "Karl Wright",
            "content": "Ignacio Vera It's actually in the GeoPolygonFactory contract that null is returned for polygons that cannot be constructed:\n\n\n  /** Create a GeoPolygon using the specified points and holes, using order to determine\n   * siding of the polygon.  Much like ESRI, this method uses clockwise to indicate the space\n   * on the same side of the shape as being inside, and counter-clockwise to indicate the\n   * space on the opposite side as being inside.\n   * @param description describes the polygon and its associated holes.  If points go\n   *  clockwise from a given pole, then that pole should be within the polygon.  If points go\n   *  counter-clockwise, then that pole should be outside the polygon.\n   * @param leniencyValue is the maximum distance (in units) that a point can be from the plane and still be considered as\n   *  belonging to the plane.  Any value greater than zero may cause some of the provided points that are in fact outside\n   *  the strict definition of co-planarity, but are within this distance, to be discarded for the purposes of creating a\n   *  \"safe\" polygon.\n   * @return a GeoPolygon corresponding to what was specified, or null if a valid polygon cannot be generated\n   *  from this input.\n   */\n\n\n\nSo I think we ought to leave this alone and change the spatial4j wrapper to throw the exception. ",
            "date": "2018-10-05T11:47:50+0000"
        },
        {
            "id": "comment-16639742",
            "author": "Ignacio Vera",
            "content": "That is fair enough.\n\nWhat is a bit strange is that 'null' is only returned if after removing identical point and coplanar points, the resulting number of points < 3. If there is another issue down the line (for example crossing edges) then an IllegalArgumentException is thrown.\n\nIf this is cover by the contract then I can modify the wrapper accordingly. ",
            "date": "2018-10-05T12:13:13+0000"
        },
        {
            "id": "comment-16641400",
            "author": "Ignacio Vera",
            "content": "Attached a patch that throws an InvalidShapeException\u00a0when polygon factory return a null from the points provided. I have reorganised the tests for Geo3d wrapper as well. ",
            "date": "2018-10-08T06:20:47+0000"
        },
        {
            "id": "comment-16641750",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 33s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 27s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 27s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 27s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 27s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 27s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   0m 49s \n  spatial-extras in the patch passed.  \n\n\n  \n   \n   4m 20s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8522 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12942787/LUCENE-8522.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-137-generic #163~14.04.1-Ubuntu SMP Mon Sep 24 17:14:57 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 49285e8 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/104/testReport/ \n\n\n modules \n C: lucene/spatial-extras U: lucene/spatial-extras \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/104/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-10-08T12:24:34+0000"
        },
        {
            "id": "comment-16641762",
            "author": "Karl Wright",
            "content": "Ignacio Vera, looks good to me. ",
            "date": "2018-10-08T12:36:19+0000"
        },
        {
            "id": "comment-16649802",
            "author": "ASF subversion and git services",
            "content": "Commit a5665d8ae7fbc79b47c38c93588a347215c98405 in lucene-solr's branch refs/heads/master from iverase\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a5665d8 ]\n\nLUCENE-8522: throw InvalidShapeException when constructing a polygon\nand all points are coplanar. ",
            "date": "2018-10-15T06:52:19+0000"
        },
        {
            "id": "comment-16649810",
            "author": "ASF subversion and git services",
            "content": "Commit 088f21e6575770902adbabdd4e87da420c8b82f2 in lucene-solr's branch refs/heads/branch_7x from iverase\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=088f21e ]\n\nLUCENE-8522: throw InvalidShapeException when constructing a polygon\nand all points are coplanar. ",
            "date": "2018-10-15T06:56:08+0000"
        }
    ]
}