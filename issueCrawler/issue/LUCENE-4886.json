{
    "id": "LUCENE-4886",
    "title": "\"new DirectoryTaxonomyReader(Directory)\" throws \"IndexNotFoundException: no segments* file found\" on a new taxonomy directory",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [],
        "affect_versions": "4.2",
        "priority": "Critical",
        "labels": "",
        "type": "Bug",
        "resolution": "Not A Problem",
        "status": "Resolved"
    },
    "description": "I made a taxonomy directory with\ncategoryDir=FSDirectory.open(new File(\"category\"));\ntaxoWriter=new DirectoryTaxonomyWriter(categoryDir, OpenMode.CREATE_OR_APPEND);\n\nRight after creating DirectoryTaxonomyWriter, I created a DirectoryTaxonomyReader with\ntaxoReader=new DirectoryTaxonomyReader(categoryDir); which throws IndexNotFoundException. It used to work fine with lucene 4.1.\nIf I invoke new DirectoryTaxonomyReader(DirectoryTaxonomyWriter) on a new taxonomy directory, no exception is thrown.\n\nBelow is the exception stack trace.\n\norg.apache.lucene.index.IndexNotFoundException: no segments* file found in org.apache.lucene.store.MMapDirectory@/home/elisa/repos/mine/ZeroIrcLog/irclog-category lockFactory=org.apache.lucene.store.NativeFSLockFactory@373983f: files: [write.lock, _0.si, _0.fnm, _0.fdt, _0_Lucene41_0.tim, _0_Lucene41_0.pos, _0.fdx, _0_Lucene41_0.doc, _0_Lucene41_0.tip]\n\tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:741) ~[lucene-core-4.2.0.jar:4.2.0 1453694 - rmuir - 2013-03-06 22:25:29]\n\tat org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:52) ~[lucene-core-4.2.0.jar:4.2.0 1453694 - rmuir - 2013-03-06 22:25:29]\n\tat org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:65) ~[lucene-core-4.2.0.jar:4.2.0 1453694 - rmuir - 2013-03-06 22:25:29]\n\tat org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.openIndexReader(DirectoryTaxonomyReader.java:218) ~[lucene-facet-4.2.0.jar:4.2.0 1453694 - rmuir - 2013-03-06 22:26:53]\n\tat org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.<init>(DirectoryTaxonomyReader.java:99) ~[lucene-facet-4.2.0.jar:4.2.0 1453694 - rmuir - 2013-03-06 22:26:53]\n\tat org.zeroirclog.LuceneLoggerWorker.<init>(LuceneLoggerWorker.java:141) ~[na:na]",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-03-26T21:25:18+0000",
            "content": "You need to call commit() before trying to open the DirectoryTaxonomyReader ... (same as with IndexWriter/IndexReader).\n\nOr, alternatively, use near-real-time: open DirectoryTaxonomyReader passing in the DirectoryTaxonomyWriter. ",
            "author": "Michael McCandless",
            "id": "comment-13614559"
        },
        {
            "date": "2013-03-26T21:39:06+0000",
            "content": "SegmentInfos$FindSegmentsFile.run seems almost the same on both 4.1 and 4.2.\n\nWhy did it work fine on lucene 4.1? ",
            "author": "crocket",
            "id": "comment-13614568"
        },
        {
            "date": "2013-03-26T22:00:00+0000",
            "content": "In the past DTW committed its IW in the ctor and it no longer does that (to follow IW transactional logic). I think that it happened even before 4.1, but I don't remember, nor am able to find the issue where I made this change. I found some trace of this change in LUCENE-3441 (look at first 2-3 comments). ",
            "author": "Shai Erera",
            "id": "comment-13614602"
        },
        {
            "date": "2013-03-26T22:12:42+0000",
            "content": "I now use \"new DirectoryTaxnomyReader(DirectoryTaxonomyWriter)\".\nIt is near-real time reader.\n\nIs it ok to use that with StandardFacetsAccumulator.create(fsp, searcher.getIndexReader(), taxoReader); when searcher is acquired by NRTManager.acquire?\nsearcher.getIndexReader() and taxoReader are both near-real time, and there might be collisions between two. ",
            "author": "crocket",
            "id": "comment-13614613"
        },
        {
            "date": "2013-03-26T22:20:32+0000",
            "content": "Basically it should be ok, as long as they are \"reopened\" together. We have LUCENE-3786 open to create a SearcherTaxoManager, so that you don't need to do this stuff yourself (i.e. make sure that the taxonomy index is always as good as the search index). Until then, if you reopen them together, then make sure to reopen the IndexReader first, and then the TaxonomyReader. It's ok if TaxoReader sees more categories than IndexReader, but not ok the other way around. ",
            "author": "Shai Erera",
            "id": "comment-13614619"
        },
        {
            "date": "2013-03-26T23:07:11+0000",
            "content": "I haven't tested the behavior of DirectoryTaxonomyReader on lucene 4.2, but as far as I remember, \"new DirectoryTaxonomyReader(Directory)\" could see changes and new categories without reopening it on lucene 4.1.\n\nBy the way, how do I reopen DirectoryTaxonomyReader(DirectoryTaxonomyWriter)?\nShould I retrieve a new instance with \"new DirectoryTaxonomyReader(DirectoryTaxonomyWriter)\" whenever I want to reopen it? ",
            "author": "crocket",
            "id": "comment-13614662"
        },
        {
            "date": "2013-03-27T04:57:31+0000",
            "content": "In the past, before LUCENE-3441, DirTaxoReader had refresh(), which refreshed its internal IndexReader. That was buggy, and didn't work if you open DirTaxoWriter with OpenMode.CREATE (re-creating a taxonomy). Part of LUCENE-3441 (make it NRT) was to overcome this buggy behavior. So now to reopen, your code looks exactly like IndexReader.reopen:\n\n\nDirTaxoReader existing;\nDirTaxoReader newone = TaxoReader.openIfChanged(existing);\nif (newone != null) { // like IndexReader, denotes that there were changes\n  existing.close();\n  existing = newone;\n}\n\n\n\nThis works whether DTR was opened on Directory or DirTaxoWriter. ",
            "author": "Shai Erera",
            "id": "comment-13614931"
        },
        {
            "date": "2013-03-27T21:45:09+0000",
            "content": "That snippet seems to work.\n\nPlease mark it as resolved. ",
            "author": "crocket",
            "id": "comment-13615789"
        },
        {
            "date": "2013-03-28T04:31:49+0000",
            "content": "Thanks for bringing closure crocket!\n\nResolved as \"Not A Problem\" since it's working as expected. ",
            "author": "Shai Erera",
            "id": "comment-13616041"
        }
    ]
}