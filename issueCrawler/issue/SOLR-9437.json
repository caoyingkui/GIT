{
    "id": "SOLR-9437",
    "title": "Add schema property useDocValues to control use of docValues at query time",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.5.2",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Currently migration to docValues appears to be an all or nothing proposition, requiring a full reindexing when an existing field with indexed records gets docValues set to true. This can be a painful process for users with very large indexes.\n\nIf a new schema property called useDocValues is created (with a default of true), this can be used to allow incremental re-indexing of records.\n\nThe idea is that while docValues=true indexing docValues will happen as before, but as long as useDocValues=false, the partially indexed docValues will not be used so that searches, faceting, etc. will behave as if docValues=false.\n\nOnce the user is satisfied that all records have docValues, they can set useDocValues=true or remove the property altogether.\n\nFrom what I can see in the Solr core code, where field.hasDocValues is now used to determine whether to use docValues at query time, the code can be changed to (field.hasDocValues && field.useDocValues).\n\nI am uncertain whether any changes would be needed at the Lucene level.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-08-25T16:13:39+0000",
            "author": "Ronald S. Wood",
            "content": "I realize this request may be too specialized, and appears out of place compared to other schema field properties. Perhaps there are other, cleaner ways to hint at this.\n\nAlessandro Benedetti argues on solr-user that this opens a can of worms with regard to other kinds of schema migrations. If a method for docValues migration is allowed then maybe a generalized mechanism should be implemented that accounts for similar migrations like turning term vectors, positions, offsets on/off. E.g. hint=\"ignoreDocValues,ignoreTermVectors\", I suppose.\n\nI would just argue that a safe in-place migration path to docValues might be a special, important case given the growing importance of docValues for most new features.\n\nEspecially if it should come to pass one day that docValues becomes mandatory (now that docValues are on by default), it may be desirable to allow users to migrate safely and not be stuck in obsolete versions. ",
            "id": "comment-15437150"
        },
        {
            "date": "2016-08-25T16:32:21+0000",
            "author": "Shawn Heisey",
            "content": "Especially if it should come to pass one day that docValues becomes mandatory (now that docValues are on by default)\n\nI doubt we'll ever lose the ability to turn docValues off.  Being able to reduce the size of the index is critical for many use cases. ",
            "id": "comment-15437178"
        }
    ]
}