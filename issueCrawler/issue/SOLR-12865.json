{
    "id": "SOLR-12865",
    "title": "Custom JSON parser's nested documents example does not work",
    "details": {
        "type": "Bug",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "7.5"
    },
    "description": "The only exam we have for indexing nested JSON using JSON parser does not seem to work: https://lucene.apache.org/solr/guide/7_5/transforming-and-indexing-custom-json.html#indexing-nested-documents\n\nAttempt 1, using default schemaless mode:\n\n\tbin/solr create -c json_basic\n\tExample command in V1 format (with core name switched to above)\n\tIndexing fails with: \"msg\":\"[doc=null] missing required field: id\". My guess it is because the URPs chain do not apply to inner children records\n\n\n\nAttempt 2, using techproducts schema configuration:\n\n\tbin/solr create -c json_tp -d sample_techproducts_configs\n\tSame example command with new core\n\tIndexing fails with: \"msg\":\"Raw data can be stored only if split=/\" (due to presence of srcField in the params.json)\n\n\n\nAttempt 3, continuing the above example, but taking out srcField configuration:\n\n\tUpdate params.json to remove srcField\n\tSame example command\n\tIt indexes (but not commits)\n\tcurl http://localhost:8983/solr/json_tp/update/json -v -d '{commit:{}}\n\tThe core now contains only one document with auto-generated \"id\" and \"version\" field (because we have mapUniqueKeyOnly in params.json)\n\n\n\nAttempt 4, removing more keys\n\n\tUpdate params.json to remove mapUniqueKeyOnly\n\tSame example command\n\tIndexing fails with: \"msg\":\"Document is missing mandatory uniqueKey field: id\"\n\n\n\nThere does not seem to be way to index the nested JSON using the transformer approach.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}