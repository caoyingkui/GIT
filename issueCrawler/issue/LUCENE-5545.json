{
    "id": "LUCENE-5545",
    "title": "Add ExpressionRescorer",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ]
    },
    "description": "In LUCENE-5489 we added QueryRescorer, to rescore first-pass hits using scores from a (usually) more expensive second-pass query.\n\nI think we should also add ExpressionRescorer, to compute the second pass score using an arbitrary JS expression.",
    "attachments": {
        "LUCENE-5545.patch": "https://issues.apache.org/jira/secure/attachment/12635993/LUCENE-5545.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13942969",
            "author": "Michael McCandless",
            "content": "Rough first patch quickly banged out ... it has nocommits, but I think it's a good start.  It has a testBasic! ",
            "date": "2014-03-21T11:14:13+0000"
        },
        {
            "id": "comment-13942989",
            "author": "Michael McCandless",
            "content": "Another iteration, with explain() implemented.\n\nIt's nice because explain() includes the values of each of the bindings ... so you can see the values that led to the overall expression.\n\nStill nocommits for better tests ... ",
            "date": "2014-03-21T11:37:56+0000"
        },
        {
            "id": "comment-13943046",
            "author": "Robert Muir",
            "content": "what does the second ctor do? ",
            "date": "2014-03-21T13:22:13+0000"
        },
        {
            "id": "comment-13943106",
            "author": "Robert Muir",
            "content": "I think i see, i don't actually like the hardcoded javascript+bindings there. \n\nThe way this is currently handled in the package is a little different. Impls like this class are package private and you get a \"factory\" method on Expression.java, which keeps the API surface area very small (http://lucene.apache.org/core/4_7_0/expressions/org/apache/lucene/expressions/package-summary.html), but still allows e.g. specialization in the case of certain implementations (for example, haversin function could override getSortField to do some of those optimizations Ted mentioned on another issue).\n\n\npublic ValueSource getValueSource(Bindings bindings);\npublic SortField getSortField(Bindings bindings, boolean reverse);\n\n\n\nPerhaps we should do the same with this Rescorer?\n\npublic Rescorer getRescorer(Bindings bindings);\n\n\n ",
            "date": "2014-03-21T14:43:04+0000"
        },
        {
            "id": "comment-13943495",
            "author": "Michael McCandless",
            "content": "Another iteration.\n\nI factored out a SortRescorer, which lets you re-rank according to any Sort, and made ExpressionRescorer package private and only accessible via Expression.getRescorer.  It just subclasses SortRescorer and overrides explain to add the variable bindings for that doc ...\n\nStill nocommits / iterations to do. ",
            "date": "2014-03-21T20:21:44+0000"
        },
        {
            "id": "comment-13943520",
            "author": "Robert Muir",
            "content": "This is looking great! ",
            "date": "2014-03-21T20:45:02+0000"
        },
        {
            "id": "comment-13943979",
            "author": "Michael McCandless",
            "content": "New patch, improving the tests, which found a problem (infinite loop!)\nwith QueryRescorer, which I fixed by removing entirely the\nOnlyDocIDsFilter.  Now I just interact directly w/ the Scorer per\nsegment instead, and it also addresses the TODO about not creating\nlots of objects.\n\nI think it's ready. ",
            "date": "2014-03-22T09:15:03+0000"
        },
        {
            "id": "comment-13944049",
            "author": "Robert Muir",
            "content": "+1 ",
            "date": "2014-03-22T13:11:53+0000"
        },
        {
            "id": "comment-13944162",
            "author": "Ryan Ernst",
            "content": "+1\n\nI think you can remove the comment in QueryRescorer to add an ExpressionRescorer? ",
            "date": "2014-03-22T17:47:21+0000"
        },
        {
            "id": "comment-13944169",
            "author": "Uwe Schindler",
            "content": "+1 very nice! ",
            "date": "2014-03-22T18:07:35+0000"
        },
        {
            "id": "comment-13944179",
            "author": "Michael McCandless",
            "content": "I think you can remove the comment in QueryRescorer to add an ExpressionRescorer?\n\nWoops, thanks for catching!  I'll remove it. ",
            "date": "2014-03-22T18:42:02+0000"
        },
        {
            "id": "comment-13944183",
            "author": "Shalin Shekhar Mangar",
            "content": "+1 This is neat! ",
            "date": "2014-03-22T18:59:35+0000"
        },
        {
            "id": "comment-13944409",
            "author": "ASF subversion and git services",
            "content": "Commit 1580490 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1580490 ]\n\nLUCENE-5545: add SortRescorer and Expression.getRescorer ",
            "date": "2014-03-23T11:44:02+0000"
        },
        {
            "id": "comment-13944412",
            "author": "ASF subversion and git services",
            "content": "Commit 1580491 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1580491 ]\n\nLUCENE-5545: add SortRescorer and Expression.getRescorer ",
            "date": "2014-03-23T11:48:58+0000"
        },
        {
            "id": "comment-13982651",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:26:05+0000"
        }
    ]
}