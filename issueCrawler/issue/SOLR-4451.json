{
    "id": "SOLR-4451",
    "title": "Upgrade to httpclient 4.2.x and take advantage of SystemDefaultHttpClient",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "HttpComponent is up to version 4.2, and included in 4.2 is a new subclass of DefaultHttpClient named SystemDefaultHttpClient, which automatically configures itself using the \"standard\" java system properties...\n\nhttp://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/SystemDefaultHttpClient.html\n\n...i think we should upgrade and start using this new class in place of DefaultHttpClient, so that SolrJ clients (and implicitly SolrCloud) can automaticly leverage system properties users may expect to work.",
    "attachments": {
        "SOLR-4451.patch": "https://issues.apache.org/jira/secure/attachment/12569146/SOLR-4451.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13577303",
            "date": "2013-02-13T03:01:04+0000",
            "content": "Patch...\n\n\n\tupgrades httpcomponents in ivy\n\tupgrades httpcomponents in maven pom (i think)\n\tswitches from DefaultHttpClient to SystemDefaultHttpClient in solrj\n\tfixes some existing helper code that treats ThreadSafeClientConnManager as special to also work with PoolingClientConnectionManager (all ClientConnectionManager impls are now thread safe, and ThreadSafeClientConnManager has been deprecated with PoolingClientConnectionManager as the recommended replacement)\n\n\n\n...test and precommit all pass "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13577305",
            "date": "2013-02-13T03:03:34+0000",
            "content": "This should help simplify a lot of things relating to \"customizing\" how solr utilizes httpclient \u2013 in particular dealing with basic auth and SSL (especially testing SSL with non standard key/trust stores) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13577975",
            "date": "2013-02-13T22:11:03+0000",
            "content": "Committed revision 1445945.\nCommitted revision 1445955. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13577982",
            "date": "2013-02-13T22:18:15+0000",
            "content": "[branch_4x commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1445955\n\nSOLR-4451: SolrJ, and SolrCloud internals, now use SystemDefaultHttpClient under the covers \u2013 allowing many HTTP connection related properties to be controlled via 'standard' java system properties. (merge r1445945) "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13577983",
            "date": "2013-02-13T22:18:16+0000",
            "content": "[trunk commit] Chris M. Hostetter\nhttp://svn.apache.org/viewvc?view=revision&revision=1445945\n\nSOLR-4451: SolrJ, and SolrCloud internals, now use SystemDefaultHttpClient under the covers \u2013 allowing many HTTP connection related properties to be controlled via 'standard' java system properties.  (hossman) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13579393",
            "date": "2013-02-15T18:29:27+0000",
            "content": "FYI: my upgrade broke the maven build because i had the transative deps wrong, fixed in SOLR-4462 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13579457",
            "date": "2013-02-15T19:49:24+0000",
            "content": "Some tests run from eclipse now seem to fail after this. Is there a sys prop I need to pass now or something? I seem to get:\n\n\n410 T11 oasc.SolrException.log SEVERE null:java.lang.NoSuchMethodError: org.apache.http.impl.conn.SchemeRegistryFactory.createSystemDefault()Lorg/apache/http/conn/scheme/SchemeRegistry;\n\t\tat org.apache.http.impl.client.SystemDefaultHttpClient.createClientConnectionManager(SystemDefaultHttpClient.java:118)\n\t\tat org.apache.http.impl.client.AbstractHttpClient.getConnectionManager(AbstractHttpClient.java:445)\n\t\tat org.apache.solr.client.solrj.impl.HttpClientUtil.setMaxConnections(HttpClientUtil.java:179)\n\t\tat org.apache.solr.client.solrj.impl.HttpClientConfigurer.configure(HttpClientConfigurer.java:33)\n\t\tat org.apache.solr.client.solrj.impl.HttpClientUtil.configureClient(HttpClientUtil.java:115)\n\t\tat org.apache.solr.client.solrj.impl.HttpClientUtil.createClient(HttpClientUtil.java:105)\n\t\tat org.apache.solr.handler.component.HttpShardHandlerFactory.init(HttpShardHandlerFactory.java:134)\n\t\tat org.apache.solr.core.CoreContainer.initShardHandler(CoreContainer.java:704)\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13579461",
            "date": "2013-02-15T19:54:23+0000",
            "content": "mark: nothing should be intrinsically dependent on a system property, it just uses them if they are set to provide defaults.\n\n410 T11 oasc.SolrException.log SEVERE null:java.lang.NoSuchMethodError: org.apache.http.impl.conn.SchemeRegistryFactory.createSystemDefault()Lorg/apache/http/conn/scheme/SchemeRegistry;\n\nDo you see this before or after sarowe's changes in SOLR-4462 (or both?) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13579468",
            "date": "2013-02-15T20:00:07+0000",
            "content": "mark: Is there a classpath conflict between the httpclient version used by solr and some other httpclient version used in eclipse? because \"\norg.apache.http.impl.conn.SchemeRegistryFactory.createSystemDefault()Lorg/apache/http/conn/scheme/SchemeRegistry\" seems to exist in ./solrj/lib/httpclient-4.2.3.jar (which didn't change as part of SOLR-4462) "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13579480",
            "date": "2013-02-15T20:19:52+0000",
            "content": "i did the following:\n\nsvn up\nant eclipse\nrefresh project\n\nand tests seemed to work fine here "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13579486",
            "date": "2013-02-15T20:34:40+0000",
            "content": "No such luck for me - I'll be trying to figure out why later. "
        },
        {
            "author": "Ursula Kellmann",
            "id": "comment-13617760",
            "date": "2013-03-29T21:52:03+0000",
            "content": "Hello,\n\nAfter upgrading from 4.1 to 4.2 our api to create a HttpSolrServer no longer worked.  Our unit tests using the embedded solr server did not catch this issue.  We did not detect the issue until runtime with deployment to jboss 7.  \nThe errors were \njava.io.FileNotFoundException: \\local\\java\\jre\\lib\\security\\cacerts (The system cannot find the path specified)\nFailure initializing default system SSL context\n\nIn our environment we do not require security to access the solr server.   To get around this error, we created the http client and set the connection manager on it and passing it to the HttpSolrServer constructor.\n i.e.\n\tPoolingClientConnectionManager connManager = new PoolingClientConnectionManager();\n        DefaultHttpClient client = new DefaultHttpClient(connManager);\n\nCan you please advise if this is the best way to get around this?   Also, is there a way  that a unit test could have found this issue? \n\nThank you in advance for for any help you can provide, and we think solr is awesome!\n\nRegards,\nUrsula Kellmann "
        },
        {
            "author": "Ken Krugler",
            "id": "comment-13631321",
            "date": "2013-04-14T14:11:52+0000",
            "content": "One of my developers also ran into what seems like the same issue, when trying to use the embedded Solr server. Worked fine in unit tests, but gets a NoSuchMethodError when running on the Hadoop cluster. Whereas 4.1 works fine. I'm assuming a classpath issue with some Hadoop jars, so more research is needed, but wanted to add to the discussion above. "
        },
        {
            "author": "Ken Krugler",
            "id": "comment-13631326",
            "date": "2013-04-14T15:05:15+0000",
            "content": "One related question - if I'm using embedded Solr, is there some way to load a core without initShardHandler() being called? From looking at the code, that's not possible, but seems like something that should be configurable (similar to how ZooKeeper support is conditional on some system properties).  "
        },
        {
            "author": "Anand",
            "id": "comment-13637796",
            "date": "2013-04-22T06:42:56+0000",
            "content": "Upgraded to Solr 4.2.1 today. Also, updated http components to the ones provided in the package (httpclient-4.2.3 and httpcore-4.2.2) and I was still seeing the error message \"java.lang.NoSuchMethodError: org.apache.http.impl.conn.SchemeRegistryFactory.createSystemDefault()Lorg/apache/http/conn/scheme/SchemeRegistry;\" Turns out the httpclient jar was conflicting with httpclient jar used by selenium tests. Once they were aligned,  things started looking a lot better. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653762",
            "date": "2013-05-10T10:32:54+0000",
            "content": "Closed after release. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13735031",
            "date": "2013-08-09T17:36:24+0000",
            "content": "Ken Krugler did you ever get this straightened out for Hadoop?  I'm hitting it now, w/ the issue being that Hadoop has an older version of HttpClient in it's lib.   "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13735044",
            "date": "2013-08-09T17:42:33+0000",
            "content": "Sure would be nice to do something like: https://maven.apache.org/plugins/maven-shade-plugin/examples/class-relocation.html on this.  If only there were an Ant plugin for it. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13735049",
            "date": "2013-08-09T17:45:59+0000",
            "content": "A little googling leads to http://one-jar.sourceforge.net/index.php?page=introduction&file=intro "
        },
        {
            "author": "Ken Krugler",
            "id": "comment-13739687",
            "date": "2013-08-14T14:03:49+0000",
            "content": "Grant Ingersoll yes we got it to work (this was in EMR) by creating a custom bootstrap action script that \"fixed up\" the set of jars in the Hadoop lib dir to be in sync with what Solr was/is using. "
        }
    ]
}