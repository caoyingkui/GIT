{
    "id": "SOLR-8768",
    "title": "Wrong behaviour in json facets",
    "details": {
        "components": [
            "Facet Module"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "This bug is quite difficult to explain it, so I will first show it with an example and then explain it.\n\nI have a core splitted into three shards, let's call them 'sellers_2014', 'sellers_2015', 'sellers_2016'.\n\nThe schema has the following fields:\nseller_name, string\nseller_measure, double\nseller_date, date\n\nWith the following data.\n'sellers_2014'\nTyrion, 1, 2014-01-01T00:00:00Z\nJon, 50, 2014-01-01T00:00:00Z\nPoorNed, 4, 2014-01-01T00:00:00Z\n\n'sellers_2015'\nTyrion, 100, 2015-01-01T00:00:00Z\nJon, 50, 2015-01-01T00:00:00Z\nPoorNed, 4, 2015-01-01T00:00:00Z\n\n'sellers_2016'\nTyrion, 1, 2015-01-01T00:00:00Z\nJon, 50, 2015-01-01T00:00:00Z\nPoorNed, 4, 2015-01-01T00:00:00Z\n\nRequest:\nhttp://localhost:8983/solr/sellers_2016/select?q=*:*&shards=localhost:8983/solr/sellers_2014,localhost:8983/solr/sellers_2015,localhost:8983/solr/sellers_2016&json.facet=\n\n{\n  top_sellers: {\n    type: terms,\n    field: seller_name,\n    limit: 2,\n    offset: 0,\n    sort: \"seller_measure desc\",\n    facet: {\n      seller_measure: \"sum(seller_measure)\",\n      seller_dates: {\n        type: range,\n        field: seller_date,\n        start: \"2014-01-01T00:00:00Z\",\n        end: \"2016-12-31T00:00:00Z\",\n        gap: \"+1YEARS\",\n        facet: {\n          seller_measure: \"sum(seller_measure)\"\n        }\n      }\n    }\n  }\n}\n\n\n\nSo... With the request I want to know the top 2 sellers across the three shards and for each seller, their seller_measure for each year.\n\nThe response I'm getting is:\n\n\"val\": \"Jon\",\n\"count\": 3,\n\"seller_measure\": 150,\n\"seller_dates\": {\n  \"buckets\": [\n    {\n      \"val\": \"2014-01-01T00:00:00Z\",\n      \"count\": 1,\n      \"seller_measure\": 50\n    },\n    {\n      \"val\": \"2015-01-01T00:00:00Z\",\n      \"count\": 1,\n      \"seller_measure\": 50\n    },\n    {\n      \"val\": \"2016-01-01T00:00:00Z\",\n      \"count\": 1,\n      \"seller_measure\": 50\n    }\n  ]\n},\n\"val\": \"Tyrion\",\n\"count\": 3,\n\"seller_measure\": 102,\n\"seller_dates\": {\n  \"buckets\": [\n    {\n      \"val\": \"2015-01-01T00:00:00Z\",\n      \"count\": 1,\n      \"seller_measure\": 100\n    }\n  ]\n}\n\n\n\nwhich is incorrect, because the two buckets of 2014 and 2016 in Tyrion are missing.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-01T15:20:29+0000",
            "author": "Pablo Anzorena",
            "content": "I might know what is going on. \n\nThe top 2 sellers across the shards are correct (they are Jon and Tyrion). Then when you ask for a range facet, it will return the bucket for 2014 (for example) if and only if, Tyrion is in the top 2 of 2014. Same with 2016 of course.\n\nI know it is confusin, but let me know if you did not understand it. ",
            "id": "comment-15173885"
        },
        {
            "date": "2016-03-01T16:51:04+0000",
            "author": "Pablo Anzorena",
            "content": "UPDATE:\nIt does not depend on the range facets. The problem is on the faceting with stats across multiple shards. Following with the example,\n'sellers_2014'\nTyrion, 1\nJon, 50\nPoorNed, 4\n\n'sellers_2015'\nTyrion, 100\nJon, 50\nPoorNed, 4\n\n'sellers_2016'\nTyrion, 1\nJon, 50\nPoorNed, 4\n\nIf the request is top 2 sellers order by seller_measure desc, the response would be:\n\n1)Jon 150\n2)Tyrion 100\n\n\n\nBut the correct response would be Tyrion with 102, but it is not counting the +2 because Tyrion is not in the top 2 of the other two shards. ",
            "id": "comment-15174008"
        },
        {
            "date": "2016-03-04T14:52:08+0000",
            "author": "Marius Grama",
            "content": "Pablo Anzorena I've tried the sample on master branch that you've provided with the following query : \n\n\ncurl http://localhost:8983/solr/sellers_2016_replica1/select -d 'q=*:*&shards=2014,2015,2016&rows=0&wt=json&\njson.facet={\n  top_sellers: {\n    type: terms,\n    field: seller_name,\n    limit: 2,\n    offset: 0,\n    sort: \"seller_measure desc\",\n    facet: {\n      seller_measure: \"sum(seller_measure)\",\n      seller_dates: {\n        type: range,\n        field: seller_date,\n        start: \"2014-01-01T00:00:00Z\",\n        end: \"2016-12-31T00:00:00Z\",\n        gap: \"%2b1YEAR\",\n        facet: {\n          seller_measure: \"sum(seller_measure)\"\n        }\n      }\n    }\n  }\n}'\n\n\n\nand retrieved an accurate result : \n\n\n{  \n   \"responseHeader\":{  \n      \"zkConnected\":true,\n      \"status\":0,\n      \"QTime\":20,\n      \"params\":{  \n         \"q\":\"*:*\",\n         \"shards\":\"2014,2015,2016\",\n         \"json.facet\":\"{\\n  top_sellers: {\\n    type: terms,\\n    field: seller_name,\\n    limit: 2,\\n    offset: 0,\\n    sort: \\\"seller_measure desc\\\",\\n    facet: {\\n      seller_measure: \\\"sum(seller_measure)\\\",\\n      seller_dates: {\\n        type: range,\\n        field: seller_date,\\n        start: \\\"2014-01-01T00:00:00Z\\\",\\n        end: \\\"2016-12-31T00:00:00Z\\\",\\n        gap: \\\"+1YEAR\\\",\\n        facet: {\\n          seller_measure: \\\"sum(seller_measure)\\\"\\n        }\\n      }\\n    }\\n  }\\n}\",\n         \"rows\":\"0\",\n         \"wt\":\"json\"\n      }\n   },\n   \"response\":{  \n      \"numFound\":9,\n      \"start\":0,\n      \"maxScore\":1.0,\n      \"docs\":[  \n\n      ]\n   },\n   \"facets\":{  \n      \"count\":9,\n      \"top_sellers\":{  \n         \"buckets\":[  \n            {  \n               \"val\":\"Jon\",\n               \"count\":3,\n               \"seller_measure\":150.0,\n               \"seller_dates\":{  \n                  \"buckets\":[  \n                     {  \n                        \"val\":\"2014-01-01T00:00:00Z\",\n                        \"count\":1,\n                        \"seller_measure\":50.0\n                     },\n                     {  \n                        \"val\":\"2015-01-01T00:00:00Z\",\n                        \"count\":1,\n                        \"seller_measure\":50.0\n                     },\n                     {  \n                        \"val\":\"2016-01-01T00:00:00Z\",\n                        \"count\":1,\n                        \"seller_measure\":50.0\n                     }\n                  ]\n               }\n            },\n            {  \n               \"val\":\"Tyrion\",\n               \"count\":3,\n               \"seller_measure\":102.0,\n               \"seller_dates\":{  \n                  \"buckets\":[  \n                     {  \n                        \"val\":\"2014-01-01T00:00:00Z\",\n                        \"count\":1,\n                        \"seller_measure\":1.0\n                     },\n                     {  \n                        \"val\":\"2015-01-01T00:00:00Z\",\n                        \"count\":1,\n                        \"seller_measure\":100.0\n                     },\n                     {  \n                        \"val\":\"2016-01-01T00:00:00Z\",\n                        \"count\":1,\n                        \"seller_measure\":1.0\n                     }\n                  ]\n               }\n            }\n         ]\n      }\n   }\n}\n\n\n\nAlso without the date range facet, I got the expected results of :\n\n\tJon 150\n\tTyrion 102\n\n\n\nCould you give more details on how you've reproduced the issue?\nIt makes sense to check whether the documents that you think that are missing exist in the shards (are you sure that you use only 3 shards in your test?) that you've specified in the facet query :\n\n\nhttp://localhost:8983/solr/sellers_2015_replica1/select?q=*%3A*&wt=json&indent=true&shards=2014\n\n ",
            "id": "comment-15179969"
        },
        {
            "date": "2016-03-04T17:19:04+0000",
            "author": "Pablo Anzorena",
            "content": "Marius GramaYou are right, with the sample I posted the error can't be reproduce. \n\nNow with real  data (the cardinality of seller_name is around 2000) this is the response if I ask for the top 3:\n\n{\n  \"responseHeader\": {\n    \"status\": 0,\n    \"QTime\": 1992,\n    \"params\": {\n      \"q\": \"*:*\",\n      \"shards\": \"localhost:8983/solr/sellers_2005,localhost:8983/solr/sellers_2006,localhost:8983/solr/sellers_2007\",\n      \"json.facet\": \"{\\n  top_sellers: {\\n    type: terms,\\n    field: seller_name,\\n    limit: 3,\\n    offset: 0,\\n    sort: \\\"seller_measure desc\\\",\\n    facet: {\\n      seller_measure: \\\"sum(seller_measure)\\\"\\n    }\\n  }\\n}\",\n      \"rows\": \"0\",\n      \"wt\": \"json\"\n    }\n  },\n  \"response\": {\n    \"numFound\": 94641193,\n    \"start\": 0,\n    \"maxScore\": 1.0,\n    \"docs\": [\n      \n    ]\n  },\n  \"facets\": {\n    \"count\": 94641193,\n    \"top_sellers\": {\n      \"buckets\": [\n        {\n          \"val\": \"Tyrion\",\n          \"count\": 22067,\n          \"seller_measure\": 6.381640740799999E8\n        },\n        {\n          \"val\": \"Jon\",\n          \"count\": 9323,\n          \"seller_measure\": 4.376016594200097E8\n        },\n        {\n          \"val\": \"PoorNed\",\n          \"count\": 3714,\n          \"seller_measure\": 2.1381292140000007E8\n        }\n      ]\n    }\n  }\n}\n\n\n\nNow look when I change the query to filter specifically those three seller_names:\n\n\n{\n  \"responseHeader\": {\n    \"status\": 0,\n    \"QTime\": 26,\n    \"params\": {\n      \"q\": \"seller_name:(Tyrion Jon PoorNed)\",\n      \"shards\": \"localhost:8983/solr/sellers_2005,localhost:8983/solr/sellers_2006,localhost:8983/solr/sellers_2007\",\n      \"json.facet\": \"{\\n  top_sellers: {\\n    type: terms,\\n    field: seller_name,\\n    limit: 3,\\n    offset: 0,\\n    sort: \\\"seller_measure desc\\\",\\n    facet: {\\n      seller_measure: \\\"sum(seller_measure)\\\"\\n    }\\n  }\\n}\",\n      \"rows\": \"0\",\n      \"wt\": \"json\"\n    }\n  },\n  \"response\": {\n    \"numFound\": 37552,\n    \"start\": 0,\n    \"maxScore\": 2.4321828,\n    \"docs\": [\n      \n    ]\n  },\n  \"facets\": {\n    \"count\": 37552,\n    \"top_sellers\": {\n      \"buckets\": [\n        {\n          \"val\": \"Tyrion\",\n          \"count\": 24515,\n          \"seller_measure\": 6.436709089399998E8\n        },\n        {\n          \"val\": \"Jon\",\n          \"count\": 9323,\n          \"seller_measure\": 4.376016594200096E8\n        },\n        {\n          \"val\": \"PoorNed\",\n          \"count\": 3714,\n          \"seller_measure\": 2.1381292140000007E8\n        }\n      ]\n    }\n  }\n}\n\n\n\nSee the difference in the seller_measure of Tyrion? This happens (I think) because making a ranking desc by seller_measure, Tyrion is in the position 1000 for the shards sellers_2005 and sellers_2006.\n\nIf I make the same request with limit 2000, Tyrion appears in the top 3 with the correct measure, that is the sum of the three shards. ",
            "id": "comment-15180181"
        },
        {
            "date": "2016-03-04T22:26:33+0000",
            "author": "Marius Grama",
            "content": "Pablo Anzorena indeed, you are right. I've added Test4, Test5, ..., Test11 items (all of them with a seller_measure of 4) and now I get the following response : \n\n\n{  \n   \"responseHeader\":{  \n      \"status\":0,\n      \"QTime\":51,\n      \"params\":{  \n         \"q\":\"*:*\",\n         \"shards\":\"2014,2015,2016\",\n         \"json.facet\":\"{\\n  top_sellers: {\\n    type: terms,\\n    field: seller_name,\\n    limit: 2,\\n    offset: 0,\\n    sort: \\\"seller_measure desc\\\",\\n    facet: {\\n      seller_measure: \\\"sum(seller_measure)\\\"\\n    }\\n  }\\n}\",\n         \"rows\":\"0\",\n         \"wt\":\"json\"\n      }\n   },\n   \"response\":{  \n      \"numFound\":33,\n      \"start\":0,\n      \"maxScore\":1.0,\n      \"docs\":[  \n\n      ]\n   },\n   \"facets\":{  \n      \"count\":33,\n      \"top_sellers\":{  \n         \"buckets\":[  \n            {  \n               \"val\":\"Jon\",\n               \"count\":3,\n               \"seller_measure\":150.0\n            },\n            {  \n               \"val\":\"Tyrion\",\n               \"count\":1,\n               \"seller_measure\":100.0\n            }\n         ]\n      }\n   }\n}\n\n ",
            "id": "comment-15180656"
        },
        {
            "date": "2016-03-04T23:55:35+0000",
            "author": "Marius Grama",
            "content": "While debugging I've stumbled upon the code of the FacetField class\n\nFacetField.java\n  protected SimpleOrderedMap<Object> findTopSlots() throws IOException {\n    // ....\n    \n    // add a modest amount of over-request if this is a shard request\n    int lim = freq.limit >= 0 ? (fcontext.isShard() ? (int)(freq.limit*1.1+4) : (int)freq.limit) : Integer.MAX_VALUE;\n\n    int maxsize = (int)(freq.limit >= 0 ?  freq.offset + lim : Integer.MAX_VALUE - 1);\n    maxsize = Math.min(maxsize, nTerms);\n    \n    // ....\n\n\n\nAs it can be seen in the sample code above, when working with a limit of 2 within the shard we'll retrieve only the top 6 (~2*1.1 + 4) slots. \n(In the case that the limit is not explicitly specified, the default value for the FacetField.limit field is 10, which corresponds to the top 25 slots.)\nBecause of this reason, the two documents corresponding for Tyrion with the value 1 for the field seller_measure are not going to be taken into account when calculating the top_sellers buckets. This is why the result bucket for Tyrion in the text above is not containing the expected value of 102, but 100 instead.\n\nAlso this is the reason why in the sample provided for this ticket the result was valid (6 - count of  top slots > 3 - count of all the documents stored in the shard).\n\n\nYonik Seeley this functionality exists in the FacetField since it was introduced in SOLR-7214.\nHere http://yonik.com/json-facet-api/ is said \nlimit \u2013 Limits the number of buckets returned. Defaults to 10.\n\n, but there is nothing mentioned about the fact that the values returned for the facet are approximate values and they get influenced by this parameter.\n\nI think this is an important hint for the developers using (json) Facet API.\nIn the light of the things presented above is this still a \"bug\" or it can be considered as a \"feature\" ? ",
            "id": "comment-15181308"
        },
        {
            "date": "2016-03-05T16:40:48+0000",
            "author": "Yonik Seeley",
            "content": "I think what is being seen here is probably due to the lack of facet refinements: SOLR-7452 ",
            "id": "comment-15181770"
        }
    ]
}