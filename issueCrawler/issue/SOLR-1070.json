{
    "id": "SOLR-1070",
    "title": "IndexSearcher not closed after indexing with DataImportHandler",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "What I have noticed is afecting to the nightly build using multicore. I am using tomcat 5.5 server and Debian 2.6.26-1-xen-amd64.\nAfter indexing and optimizing with DataImporthandler the old IndexSearcher is not being proper closed.\nTo reproduce the bug I have done a full-import from a mysql database optimizing at the end. Once done I change the data from the database and index optimizing again.\nWhen now I do a lsof | grep solr I can see that tomcat is holding the deleted files from old index.\nI can see the error in the stats screen aswell... if I do 4 full-imports, stats will show me 3 opened IndexSearchers.\nAs I index on the master and never use it to serve search requests I have sorted it modifying the function getSearcher in SolrCore.java\nThere's a part in the source where is coded:\n\n// we are all done with the old searcher we used\n// for warming...\nif (currSearcherHolderF!=null)\n{currSearcherHolderF.decref();}\n\nI force there to close the indexSearcher and remvoe it from the RefCounted:\n\n// we are all done with the old searcher we used\n// for warming...\n if (currSearcherHolderF!=null){\n      currSearcherHolderF.get().close();\n      currSearcherHolderF.decref();\n       _searchers.remove();\n}\n\nAs Yonik told me:\n>> Forcing it to close at the point you did is unsafe since other threads\n>> may still be using that searcher.\n\nMy solution is definitely not good if search requests must be served on that core of that server...",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12683131",
            "date": "2009-03-18T19:03:36+0000",
            "content": "I don't think this is related to DataImportHandler. DIH calls commit using a CommitUpdateCommand the same way as an xml commit request would. "
        },
        {
            "author": "Marc Sturlese",
            "id": "comment-12683191",
            "date": "2009-03-18T21:51:28+0000",
            "content": "Yes, I saw it uses CommitUpdateCommand, wich executes a commit from DirectUpdateHandler2.java. Haven't tried to index via xml with tomcat.\nSeems that some code is not decrementing the reference decref() from SolrIndexSearcher once it's done "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12683209",
            "date": "2009-03-18T22:26:16+0000",
            "content": "I haven't been able to reproduce any problem with normal XML update commands (with multicore either)... seems likely related to DIH somehow.\n\nMarc, what's the refCount on the core with too many searchers (check the admin stats page)?  It should be \"2\"... one because the core is in service, and one for the request that is generating the stats page. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12683314",
            "date": "2009-03-19T04:34:20+0000",
            "content": "this is the code which does a commit in DIH\n\n\n//SolrWriter#commit()\n CommitUpdateCommand commit = new CommitUpdateCommand(optimize);\n updateProcessor.processCommit(commit);\n\n\n\nis  there anything else we need to do to fix this\n\nDIH never uses an IndexSearcher. Do you have a Transformer or something which does a Context#SolrCore#getSearcher()\n\n "
        },
        {
            "author": "Marc Sturlese",
            "id": "comment-12683383",
            "date": "2009-03-19T09:18:45+0000",
            "content": "Hi Noble, I think you show me the light.\nSorry for the loss of time, I think it was my fault.\nIn the transformer, once the index is done I save the Index Version in a database doing:\n\nContext.getSolrCore().getSearcher().get().getReader().getVersion();\n\nI thought it was just returning me the version and not opening a new searcher. After doing that I wasn't closing or decrementing anything.\nSo, can you give me an advice how to get the current searcher version in a correct way? I am not sure what should I decrement or close to avoid that problem...\n\nThanks and sorry again. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12683390",
            "date": "2009-03-19T09:41:52+0000",
            "content": "Use it like this:\n\n\nRefCounted<SolrIndexSearcher> searchHolder = null;\ntry {\n  searchHolder = Context.getSolrCore().getSearcher();\n  IndexReader reader = searchHolder.get().getReader();\n  // Do whatever you need to            \n} finally {\n  if (searchHolder != null) searchHolder.decref();\n}\n\n "
        }
    ]
}