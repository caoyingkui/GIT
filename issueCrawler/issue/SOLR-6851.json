{
    "id": "SOLR-6851",
    "title": "Scripts to help install and run Solr as a service on Linux",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "noticed 2 problems with the oom_solr.sh script...\n\n1) the script is only being run with the port of hte solr instance to terminate, so the log messages aren't getting writen to the correct directory \u2013 if we change hte script to take a log dir/file as an argument, we can ensure the logs are written to the correct place\n\n2) on my ubuntu linux machine (where /bin/sh is a symlink to \"/bin/dash\"), the console log is recording a script error when java runs oom_solr.sh...\n\n\n#\n# java.lang.OutOfMemoryError: Java heap space\n# -XX:OnOutOfMemoryError=\"/home/hossman/lucene/5x_dev/solr/bin/oom_solr.sh 8983\"\n#   Executing /bin/sh -c \"/home/hossman/lucene/5x_dev/solr/bin/oom_solr.sh 8983\"...\n/home/hossman/lucene/5x_dev/solr/bin/oom_solr.sh: 20: [: 14305: unexpected operator\nRunning OOM killer script for process 14305 for Solr on port 8983\nKilled process 14305\n\n\n\nsteps to reproduce: bin/solr -e techproducts -m 10m",
    "attachments": {
        "SOLR-6851.patch": "https://issues.apache.org/jira/secure/attachment/12688191/SOLR-6851.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-12-15T21:20:43+0000",
            "author": "Hoss Man",
            "content": "the script error seems to be an \"sh\" vs \"bash\" vs \"dash\" portability issue with using \"=\" for string comparisons.\n\nfrom a portibility standpoint, probably safer to just use \"-z\" to check if the string is empty...\n\n\nif [ -z \"$SOLR_PID\" ]; then\n\n ",
            "id": "comment-14247242"
        },
        {
            "date": "2014-12-19T00:15:27+0000",
            "author": "Timothy Potter",
            "content": "I'm hijacking this ticket to do some other enhancements needed to support running Solr as a service on *nix, such as being able to keep static Solr files in /opt/solr and user / live files in /var/solr and being able to control Solr using /etc/init.d/solr ",
            "id": "comment-14252612"
        },
        {
            "date": "2014-12-19T00:19:35+0000",
            "author": "Timothy Potter",
            "content": "When I got into dealing with the oom script issue Hossman found, we realized that the PID handling was sub-optimal and overall needed to vet out issues related to running Solr as a service using an /etc/init.d/solr script. This patch has a very simple solution for that.\n\nI'm working on a Taking Solr to Production page for the ref guide to explain how to structure your environment and how to use the scripts in production. ",
            "id": "comment-14252619"
        },
        {
            "date": "2014-12-19T18:52:32+0000",
            "author": "Timothy Potter",
            "content": "If you're interested in this type of stuff - please give a review of: https://cwiki.apache.org/confluence/display/solr/Taking+Solr+to+Production, which covers features supported by this patch. ",
            "id": "comment-14253784"
        },
        {
            "date": "2014-12-22T15:56:06+0000",
            "author": "Steve Rowe",
            "content": "Timothy Potter, I went through the new ref guide page following the instructions, using the latest branch_5x with the patch on this issue, on a Debian Linux box I've got.\n\n\n\tIs the following section necessary?  The vars are already filled in, including RUNAS=ubuntu:\n\n\nNext, you need to edit the /etc/init.d/solr file to set the following variables:\n\n\nSOLR_INSTALL_DIR=/opt/solr\nRUNAS=???\nSOLR_ENV=/var/solr/solr.in.sh\n\n\n\n\tSolr is still running just before the init.d section - we should tell people to stop Solr before starting that section - here's the part where the user has started solr:\n\n\nAt this point, you can start Solr using the include file to override default settings by doing:\n\n\n$ SOLR_INCLUDE=/var/solr/solr.in.sh /opt/solr/bin/solr start\n\n\n\n\tbin/init.d/solr is not included in the built distribution - I was able to get it included with this patch to solr/build.xml:\n\n\n@@ -485,7 +488,7 @@\n       <tarfileset dir=\".\"\n                   filemode=\"755\"\n                   prefix=\"${fullnamever}\"\n-                  includes=\"bin/* server/**/*.sh example/**/*.sh example/**/bin/\" />\n+                  includes=\"bin/** server/**/*.sh example/**/*.sh example/**/bin/\" />\n       <tarfileset dir=\".\"\n                   prefix=\"${fullnamever}\"\n                   includes=\"dist/*.jar\n\n\n\n\tSometimes commands assume the user is logged in as root, and sometimes they use sudo - seems like for the one-time installation/config stuff, they should stick to one approach? - here's where the first switch happened that I noticed:\n\n\n$ sudo chown -R ubuntu: /var/solr\n\n\n\n\tWhen running update-rc.d solr defaults:\n\n\nupdate-rc.d: warning: default stop runlevel arguments (0 1 6) do not match solr Default-Stop values (none)\n\n\n\nIs there some reason Solr shouldn't be stopped at run levels 0, 1, and 6?\n\n\tWhy is this necessary?: update-rc.d solr enable  (didn't change anything on my box - isn't this only necessary after a update-rc.d XXX disable?)\n\n\tUnder the Progress Check section, when restarting, I get the following:\n\n\nmv: cannot move `/opt/solr/server/logs/solr.log' to `/opt/solr/server/logs/solr_log_20141222_0048': Permission denied\nmv: cannot move `/opt/solr/server/logs/solr_gc.log' to `/opt/solr/server/logs/solr_gc_log_20141222_0048': Permission denied\nWaiting to see Solr listening on port 8983/opt/solr/bin/solr: line 1138: /opt/solr/server/logs/solr-8983-console.log: Permission denied\n [-]  Still not seeing Solr listening on 8983 after 30 seconds!\nINFO  - 2014-12-22 05:25:38.930; org.apache.solr.core.SolrResourceLoader; JNDI not configured for solr (NoInitialContextEx)\nINFO  - 2014-12-22 05:25:38.930; org.apache.solr.core.SolrResourceLoader; using system property solr.solr.home: /var/solr/data\nINFO  - 2014-12-22 05:25:38.930; org.apache.solr.core.SolrResourceLoader; new SolrResourceLoader for directory: '/var/solr/data/'\nINFO  - 2014-12-22 05:25:39.025; org.apache.solr.core.ConfigSolr; Loading container configuration from /var/solr/data/solr.xml\nINFO  - 2014-12-22 05:25:39.085; org.apache.solr.core.CorePropertiesLocator; Config-defined core root directory: /var/solr/data\nINFO  - 2014-12-22 05:25:39.090; org.apache.solr.core.CoreContainer; New CoreContainer 18546089\nINFO  - 2014-12-22 05:25:39.091; org.apache.solr.core.CoreContainer; Loading cores into CoreContainer [instanceDir=/var/solr/data/]\nINFO  - 2014-12-22 05:25:39.100; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting socketTimeout to: 0\nINFO  - 2014-12-22 05:25:39.100; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting urlScheme to: null\nINFO  - 2014-12-22 05:25:39.104; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting connTimeout to: 0\nINFO  - 2014-12-22 05:25:39.104; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting maxConnectionsPerHost to: 20\nINFO  - 2014-12-22 05:25:39.106; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting maxConnections to: 10000\nINFO  - 2014-12-22 05:25:39.106; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting corePoolSize to: 0\nINFO  - 2014-12-22 05:25:39.106; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting maximumPoolSize to: 2147483647\nINFO  - 2014-12-22 05:25:39.106; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting maxThreadIdleTime to: 5\nINFO  - 2014-12-22 05:25:39.106; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting sizeOfQueue to: -1\nINFO  - 2014-12-22 05:25:39.107; org.apache.solr.handler.component.HttpShardHandlerFactory; Setting fairnessPolicy to: false\nINFO  - 2014-12-22 05:25:39.202; org.apache.solr.update.UpdateShardHandler; Creating UpdateShardHandler HTTP client with params: socketTimeout=0&connTimeout=0&retry=false\nINFO  - 2014-12-22 05:25:39.204; org.apache.solr.logging.LogWatcher; SLF4J impl is org.slf4j.impl.Log4jLoggerFactory\nINFO  - 2014-12-22 05:25:39.205; org.apache.solr.logging.LogWatcher; Registering Log Listener [Log4j (org.slf4j.impl.Log4jLoggerFactory)]\nINFO  - 2014-12-22 05:25:39.205; org.apache.solr.core.CoreContainer; Host Name: \nINFO  - 2014-12-22 05:25:39.229; org.apache.solr.core.CorePropertiesLocator; Looking for core definitions underneath /var/solr/data\nINFO  - 2014-12-22 05:25:39.230; org.apache.solr.core.CorePropertiesLocator; Found 0 core definitions\nINFO  - 2014-12-22 05:25:39.231; org.apache.solr.servlet.SolrDispatchFilter; user.dir=/opt/solr-5.0.0/server\nINFO  - 2014-12-22 05:25:39.231; org.apache.solr.servlet.SolrDispatchFilter; SolrDispatchFilter.init() done\nINFO  - 2014-12-22 05:25:39.256; org.eclipse.jetty.server.AbstractConnector; Started SocketConnector@0.0.0.0:8983\nINFO  - 2014-12-22 05:34:33.015; org.eclipse.jetty.server.Server; Graceful shutdown SocketConnector@0.0.0.0:8983\nINFO  - 2014-12-22 05:34:33.016; org.eclipse.jetty.server.Server; Graceful shutdown o.e.j.w.WebAppContext{/solr,file:/opt/solr-5.0.0/server/solr-webapp/webapp/},/opt/solr-5.0.0/server/webapps/solr.war\nINFO  - 2014-12-22 05:34:34.017; org.apache.solr.core.CoreContainer; Shutting down CoreContainer instance=18546089\nINFO  - 2014-12-22 05:34:34.020; org.eclipse.jetty.server.handler.ContextHandler; stopped o.e.j.w.WebAppContext{/solr,file:/opt/solr-5.0.0/server/solr-webapp/webapp/},/opt/solr-5.0.0/server/webapps/solr.war\n\n\n\nAt this point, Solr isn't running and service solr start does not do the trick.\n\n\tservice solr stop at this point doesn't work (neither does adding '-p 8983' or '-all' at the end):\n\n\nMust either specify a port using -p or -all to stop all Solr nodes on this host.\n\n\n\nand service solr status says:\n\n\nFound 1 Solr nodes: \n\nSolr process 13440 from /var/solr/solr-8983.pid not found.\n\n\n\n\tAfter handling the log setup, service solr start results in the following in solr.log:\n\n\nINFO  - 2014-12-22 06:01:32.762; org.eclipse.jetty.server.Server; jetty-8.1.10.v20130312\nINFO  - 2014-12-22 06:01:32.777; org.eclipse.jetty.deploy.providers.ScanningAppProvider; Deployment monitor /opt/solr-5.0.0/server/contexts at interval 0\nINFO  - 2014-12-22 06:01:32.781; org.eclipse.jetty.deploy.DeploymentManager; Deployable added: /opt/solr-5.0.0/server/contexts/solr-jetty-context.xml\nWARN  - 2014-12-22 06:01:32.811; org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration; Config error at <Set name=\"tempDirectory\"><Property name=\"jetty.home\" defau\nlt=\".\"/>/solr-webapp</Set>\nWARN  - 2014-12-22 06:01:32.812; org.eclipse.jetty.deploy.DeploymentManager; Unable to reach node goal: started\njava.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.set(XmlConfiguration.java:561)\n        at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configure(XmlConfiguration.java:384)\n        at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configure(XmlConfiguration.java:343)\n        at org.eclipse.jetty.xml.XmlConfiguration.configure(XmlConfiguration.java:296)\n        at org.eclipse.jetty.deploy.providers.ContextProvider.createContextHandler(ContextProvider.java:87)\n        at org.eclipse.jetty.deploy.App.getContextHandler(App.java:100)\n        at org.eclipse.jetty.deploy.bindings.StandardDeployer.processBinding(StandardDeployer.java:36)\n        at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:186)\n        at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:494)\n        at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:141)\n        at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:145)\n        at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:56)\n        at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:609)\n        at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:540)\n        at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403)\n        at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:337)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\n        at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:121)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\n        at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:555)\n        at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:230)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\n        at org.eclipse.jetty.util.component.AggregateLifeCycle.doStart(AggregateLifeCycle.java:81)\n        at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:96)\n        at org.eclipse.jetty.server.Server.doStart(Server.java:280)\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\n        at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1259)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1182)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at org.eclipse.jetty.start.Main.invokeMain(Main.java:473)\n        at org.eclipse.jetty.start.Main.start(Main.java:615)\n        at org.eclipse.jetty.start.Main.main(Main.java:96)\nCaused by: java.lang.IllegalArgumentException: Bad temp directory: /opt/solr-5.0.0/server/solr-webapp\n        at org.eclipse.jetty.webapp.WebAppContext.setTempDirectory(WebAppContext.java:1129)\n        ... 41 more\nINFO  - 2014-12-22 06:01:32.817; org.eclipse.jetty.server.AbstractConnector; Started SocketConnector@0.0.0.0:8983\n\n\n\n\n\nThat's as far as I got. ",
            "id": "comment-14255863"
        },
        {
            "date": "2014-12-23T18:45:58+0000",
            "author": "Timothy Potter",
            "content": "Updated patch now includes a helper script that performs the service installation tasks described in the ref guide (https://cwiki.apache.org/confluence/display/solr/Taking+Solr+to+Production), see bin/install_solr_service.sh\n\nI've only tested it on Red Hat, Ubuntu, SUSE, and Debian ... we can add support for additional Linux distros in the future. ",
            "id": "comment-14257333"
        },
        {
            "date": "2014-12-23T18:48:17+0000",
            "author": "Timothy Potter",
            "content": "Steve Rowe Thanks for the detailed review. I believe I've addressed all the issues you found with this new patch and edits to the ref guide. Please kick the tires on the bin/install_solr_service.sh script if you have a chance. ",
            "id": "comment-14257337"
        },
        {
            "date": "2014-12-23T20:43:08+0000",
            "author": "Timothy Potter",
            "content": "Ignore the previous patch ... newest one has better error handling and accepts a -p option to override the default port 8983, which is needed for installing multiple nodes on the same host. ",
            "id": "comment-14257496"
        },
        {
            "date": "2014-12-23T23:20:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1647700 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1647700 ]\n\nSOLR-6851: Scripts to help install and run Solr as a service on Linux ",
            "id": "comment-14257679"
        },
        {
            "date": "2014-12-24T15:59:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1647813 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1647813 ]\n\nSOLR-6851: Scripts to help install and run Solr as a service on Linux ",
            "id": "comment-14258349"
        },
        {
            "date": "2015-01-13T18:12:28+0000",
            "author": "Timothy Potter",
            "content": "Re-opening (since this isn't released yet) to add one minor improvement suggested by Hoss Man, namely - the SOLR_VAR_DIR should be determined using the service name so the user can just use -s and skip passing -d, i.e.\n\n\nsudo bash ./install_solr_service.sh solr-5.0.0.tgz -s solr2 -p 8984\n\n\n\nwill setup the \"solr2\" service in /var/solr2 automatically. ",
            "id": "comment-14275632"
        },
        {
            "date": "2015-01-13T18:15:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1651435 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1651435 ]\n\nSOLR-6851: Set the SOLR_VAR_DIR using the SOLR_SERVICE variable, thus alleviating the need to specify the -d option when overrding the service name with -s ",
            "id": "comment-14275640"
        },
        {
            "date": "2015-01-13T18:16:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1651436 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1651436 ]\n\nSOLR-6851: Set the SOLR_VAR_DIR using the SOLR_SERVICE variable, thus alleviating the need to specify the -d option when overrding the service name with -s ",
            "id": "comment-14275643"
        },
        {
            "date": "2015-01-22T20:48:47+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Good stuff! Did some small typo fixes in the refguide chapter.\n\nHave not run the install script yet, but here are some initial thoughts (not criticism, just thoughts) :\n\n\tThe script install_solr_service.sh installs Solr, not only a the service/daemon scipt. Why not simply install_solr? We already have a tradition to skip the .sh suffix on Linux, and shorter is better.\n\tShould the script reside on the top-level in the tarball, so extracting it is simply tar xzf solr-5.0.0.tgz install_solr?\n\tIf no args passed, and there are solr-?-?-?.[tgz|zip] file(s) in CWD, then we could assume the most recent one. Also would be nice that if no args passed, enter interactive mode, unless -q (quiet) given\n\tScript should show help for -h and --help\u00a0as well, I always find it weird with multi-char options after single dash\n\tLooks weird with /var/solr/data/data/... - could we simply choose /var/solr/home for Solr home? Also, after completing SOLR-6671 we could make data dir configurable and let it default to /var/solr/data\n\tIf starting to adopt POSIX style locations, why not go all in and use /etc/solr/ for solr.solr.home, /var/solr/data for solr.data.home, /var/run/solr/ for PIDs and /var/log/solr/ for logs? That's probably where a random Unix sysadmin would look first\n\n ",
            "id": "comment-14288187"
        },
        {
            "date": "2015-02-23T05:02:12+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332841"
        }
    ]
}