{
    "id": "LUCENE-3562",
    "title": "Stop storing TermsEnum in CloseableThreadLocal inside Terms instance",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "We have sugar methods in Terms.java (docFreq, totalTermFreq, docs,\ndocsAndPositions) that use a saved thread-private TermsEnum to do the\nlookups.\n\nBut on apps that send many threads through Lucene, and/or have many\nsegments, this can add up to a lot of RAM, especially if the codecs\nimpl holds onto stuff.\n\nAlso, Terms has a close method (closes the CloseableThreadLocal) which\nmust be called, but we fail to do so in some places.\n\nThese saved enums are the cause of the recent OOME in TestNRTManager\n(TestNRTManager.testNRTManager -seed\n2aa27e1aec20c4a2:-4a5a5ecf46837d0e:-7c4f651f1f0b75d7 -mult 3\n-nightly).\n\nReally sharing these enums is a holdover from before Lucene queries\nwould share state (ie, save the TermState from the first pass, and use\nit later to pull enums, get docFreq, etc.).  It's not helpful anymore,\nand it can use gobbs of RAM, so I'd like to remove it.",
    "attachments": {
        "LUCENE-3562.patch": "https://issues.apache.org/jira/secure/attachment/12502619/LUCENE-3562.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-11-05T20:55:04+0000",
            "content": "Patch. ",
            "author": "Michael McCandless",
            "id": "comment-13144827"
        },
        {
            "date": "2011-11-05T22:17:36+0000",
            "content": "+1 ",
            "author": "Uwe Schindler",
            "id": "comment-13144852"
        },
        {
            "date": "2011-11-14T10:18:41+0000",
            "content": "mike I think you should commit this - patch looks good to me ",
            "author": "Simon Willnauer",
            "id": "comment-13149531"
        },
        {
            "date": "2011-11-17T16:42:41+0000",
            "content": "New patch; also cuts over MultiPhraseQuery to save the TermStates from weight -> scorer, and optimizes BlockTree's TermsEnum to reduce cost of init + seekExact only usages.\n\nI think it's ready! ",
            "author": "Michael McCandless",
            "id": "comment-13152130"
        },
        {
            "date": "2011-11-17T17:32:09+0000",
            "content": "+1 ",
            "author": "Robert Muir",
            "id": "comment-13152151"
        }
    ]
}