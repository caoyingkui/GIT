{
    "id": "SOLR-12075",
    "title": "TestLargeCluster is too flaky",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "This test is failing a lot in jenkins builds, with two types of failures:\n\n\tspecific test method failures - this may be caused by either bugs in the autoscaling code, bugs in the simulator or timing issues. It should be possible to narrow down the cause by using different speeds of simulated time.\n\tsuite-level failures due to leaked threads - most of these failures indicate the ongoing Policy calculations, eg:\n\ncom.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE scope at org.apache.solr.cloud.autoscaling.sim.TestLargeCluster: \n  1) Thread[id=21406, name=AutoscalingActionExecutor-7277-thread-1, state=RUNNABLE, group=TGRP-TestLargeCluster]\n       at java.util.ArrayList.iterator(ArrayList.java:834)\n       at org.apache.solr.common.util.Utils.getDeepCopy(Utils.java:131)\n       at org.apache.solr.common.util.Utils.makeDeepCopy(Utils.java:110)\n       at org.apache.solr.common.util.Utils.getDeepCopy(Utils.java:92)\n       at org.apache.solr.common.util.Utils.makeDeepCopy(Utils.java:108)\n       at org.apache.solr.common.util.Utils.getDeepCopy(Utils.java:92)\n       at org.apache.solr.common.util.Utils.getDeepCopy(Utils.java:74)\n       at org.apache.solr.client.solrj.cloud.autoscaling.Row.copy(Row.java:91)\n       at org.apache.solr.client.solrj.cloud.autoscaling.Policy$Session.lambda$getMatrixCopy$1(Policy.java:297)\n       at org.apache.solr.client.solrj.cloud.autoscaling.Policy$Session$$Lambda$466/1757323495.apply(Unknown Source)\n       at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n       at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)\n       at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n       at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n       at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n       at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n       at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n       at org.apache.solr.client.solrj.cloud.autoscaling.Policy$Session.getMatrixCopy(Policy.java:298)\n       at org.apache.solr.client.solrj.cloud.autoscaling.Policy$Session.copy(Policy.java:287)\n       at org.apache.solr.client.solrj.cloud.autoscaling.Row.removeReplica(Row.java:156)\n       at org.apache.solr.client.solrj.cloud.autoscaling.MoveReplicaSuggester.tryEachNode(MoveReplicaSuggester.java:60)\n       at org.apache.solr.client.solrj.cloud.autoscaling.MoveReplicaSuggester.init(MoveReplicaSuggester.java:34)\n       at org.apache.solr.client.solrj.cloud.autoscaling.Suggester.getSuggestion(Suggester.java:129)\n       at org.apache.solr.cloud.autoscaling.ComputePlanAction.process(ComputePlanAction.java:98)\n       at org.apache.solr.cloud.autoscaling.ScheduledTriggers.lambda$null$3(ScheduledTriggers.java:307)\n       at org.apache.solr.cloud.autoscaling.ScheduledTriggers$$Lambda$439/951218654.run(Unknown Source)\n       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n       at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:188)\n       at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor$$Lambda$9/1677458082.run(Unknown Source)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n       at java.lang.Thread.run(Thread.java:748)\n\tat __randomizedtesting.SeedInfo.seed([C6FA0364D13DAFCC]:0)\n\n\nIt's possible that somewhere an InterruptedException is caught and not propagated so that the Policy calculations don't terminate when the thread is interrupted when closing parent components.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-03-09T20:25:57+0000",
            "content": "Commit 78097d2098ef3a4dc6107feb5cbd66d61920a43d in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=78097d2 ]\n\nSOLR-12075: BadApple TestLargeCluster until the issues can be resolved. ",
            "author": "ASF subversion and git services",
            "id": "comment-16393492"
        },
        {
            "date": "2018-03-09T20:26:36+0000",
            "content": "Commit 4d15ad1cb6274b855504340ad8811bce6688a0df in lucene-solr's branch refs/heads/branch_7x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4d15ad1 ]\n\nSOLR-12075: BadApple TestLargeCluster until the issues can be resolved. ",
            "author": "ASF subversion and git services",
            "id": "comment-16393493"
        },
        {
            "date": "2018-06-08T14:25:34+0000",
            "content": "This test failed 3 of the last 10 smoke-release builds.\n    https://builds.apache.org/view/L/view/Lucene/job/Lucene-Solr-SmokeRelease-7.x/237/consoleFull\n    https://builds.apache.org/view/L/view/Lucene/job/Lucene-Solr-SmokeRelease-7.x/235/consoleFull\n    https://builds.apache.org/job/Lucene-Solr-SmokeRelease-master/1043/consoleFull\n\nI'm going to badapple it again.\n ",
            "author": "Adrien Grand",
            "id": "comment-16506072"
        },
        {
            "date": "2018-06-08T14:36:35+0000",
            "content": "Commit d6d24ecfd2be057a85a7b558a8a0aeb3fc66c32e in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d6d24ec ]\n\nSOLR-12075: Disable TestLargeCluster again. ",
            "author": "ASF subversion and git services",
            "id": "comment-16506084"
        }
    ]
}