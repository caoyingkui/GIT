{
    "id": "SOLR-6976",
    "title": "Remove all methods and classes deprecated in 4.x from trunk and 5.x",
    "details": {
        "components": [],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "We have a bunch of methods, classes, enums, etc which are marked as deprecated in Solr code in the 4.x branch.  Some of them have been marked as such since the 1.4 release.  Before we get 5.0 out, these should all be removed",
    "attachments": {
        "SOLR-6976.patch": "https://issues.apache.org/jira/secure/attachment/12693100/SOLR-6976.patch",
        "SOLR-sharkeys.patch": "https://issues.apache.org/jira/secure/attachment/12693324/SOLR-sharkeys.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-14T14:25:26+0000",
            "author": "Mark Miller",
            "content": "+1.  ",
            "id": "comment-14276942"
        },
        {
            "date": "2015-01-14T15:02:24+0000",
            "author": "Alan Woodward",
            "content": "\nsolr git:(lucene_solr_4_10) $ ack --java '@Deprecated'\ncontrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotParams.java\n53:  @Deprecated\n\ncontrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor.java\n34:@Deprecated\n\ncontrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/ConfigNameConstants.java\n37:  @Deprecated\n\ncontrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/HttpDataSource.java\n36:@Deprecated\n\ncontrib/map-reduce/src/test/org/apache/solr/hadoop/hack/MiniMRCluster.java\n50:@Deprecated\n\ncore/src/java/org/apache/solr/analysis/LegacyHTMLStripCharFilter.java\n49:@Deprecated\n\ncore/src/java/org/apache/solr/analysis/LegacyHTMLStripCharFilterFactory.java\n55:@Deprecated\n\ncore/src/java/org/apache/solr/analysis/SolrAnalyzer.java\n41:  @Deprecated\n\ncore/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer.java\n67:  @Deprecated\n238:  @Deprecated\n\ncore/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java\n108:  // @Deprecated- see on ZkStateReader\n111:  // @Deprecated- see on ZkStateReader\n\ncore/src/java/org/apache/solr/common/ResourceLoader.java\n24:@Deprecated\n\ncore/src/java/org/apache/solr/core/CoreContainer.java\n803:  @Deprecated\n\ncore/src/java/org/apache/solr/core/SolrConfig.java\n384:  @Deprecated\n386:  @Deprecated\n\ncore/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java\n658:  @Deprecated\n\ncore/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler.java\n30:@Deprecated\n\ncore/src/java/org/apache/solr/handler/CSVRequestHandler.java\n25:@Deprecated\n\ncore/src/java/org/apache/solr/handler/JsonUpdateRequestHandler.java\n25:@Deprecated\n\ncore/src/java/org/apache/solr/handler/MoreLikeThisHandler.java\n387:    @Deprecated\n\ncore/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java\n27:@Deprecated\n\ncore/src/java/org/apache/solr/handler/XsltUpdateRequestHandler.java\n27:@Deprecated\n\ncore/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java\n146:  @Deprecated\n\ncore/src/java/org/apache/solr/highlight/SolrHighlighter.java\n41:  @Deprecated\n\ncore/src/java/org/apache/solr/parser/CharStream.java\n30:  @Deprecated\n38:  @Deprecated\n\ncore/src/java/org/apache/solr/request/SimpleFacets.java\n999:  @Deprecated\n1018:  @Deprecated\n1394:  @Deprecated\n\ncore/src/java/org/apache/solr/rest/schema/analysis/FSTSynonymFilterFactory.java\n53:@Deprecated\n\ncore/src/java/org/apache/solr/schema/BCDIntField.java\n31:@Deprecated\n\ncore/src/java/org/apache/solr/schema/BCDLongField.java\n24:@Deprecated\n\ncore/src/java/org/apache/solr/schema/BCDStrField.java\n24:@Deprecated\n\ncore/src/java/org/apache/solr/schema/ByteField.java\n50:@Deprecated\n\ncore/src/java/org/apache/solr/schema/DateField.java\n113:@Deprecated\n272:  @Deprecated\n\ncore/src/java/org/apache/solr/schema/DoubleField.java\n46:@Deprecated\n\ncore/src/java/org/apache/solr/schema/FieldType.java\n496:  @Deprecated\n545:  @Deprecated\n\ncore/src/java/org/apache/solr/schema/FloatField.java\n45:@Deprecated\n\ncore/src/java/org/apache/solr/schema/IndexSchema.java\n278:  @Deprecated\n\ncore/src/java/org/apache/solr/schema/IntField.java\n45:@Deprecated\n\ncore/src/java/org/apache/solr/schema/LongField.java\n45:@Deprecated\n\ncore/src/java/org/apache/solr/schema/SchemaField.java\n100:  @Deprecated\n\ncore/src/java/org/apache/solr/schema/ShortField.java\n51:@Deprecated\n\ncore/src/java/org/apache/solr/schema/SortableDoubleField.java\n55:@Deprecated\n128:@Deprecated\n\ncore/src/java/org/apache/solr/schema/SortableFloatField.java\n56:@Deprecated\n130:@Deprecated\n\ncore/src/java/org/apache/solr/schema/SortableIntField.java\n56:@Deprecated\n133:@Deprecated\n\ncore/src/java/org/apache/solr/schema/SortableLongField.java\n55:@Deprecated\n129:@Deprecated\n\ncore/src/java/org/apache/solr/schema/TrieField.java\n358:  @Deprecated\n363:  @Deprecated\n\ncore/src/java/org/apache/solr/search/QueryParsing.java\n230:  @Deprecated\n\ncore/src/java/org/apache/solr/search/SortSpec.java\n48:  @Deprecated\n54:  @Deprecated\n62:  @Deprecated\n\ncore/src/java/org/apache/solr/update/processor/FieldMutatingUpdateProcessorFactory.java\n254:  @Deprecated\n294:  @Deprecated\n\ncore/src/java/org/apache/solr/update/SolrIndexConfig.java\n55:  @Deprecated\n\ncore/src/java/org/apache/solr/util/BCDUtils.java\n24:@Deprecated\n\ncore/src/java/org/apache/solr/util/plugin/ResourceLoaderAware.java\n24:@Deprecated\n\ncore/src/test/org/apache/solr/core/ResourceLoaderTest.java\n219:  @Deprecated\n\nsolrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.java\n590:  @Deprecated\n\nsolrj/src/java/org/apache/solr/client/solrj/response/RangeFacet.java\n87:    @Deprecated\n100:    @Deprecated\n\nsolrj/src/java/org/apache/solr/client/solrj/response/SpellCheckResponse.java\n208:    @Deprecated\n214:    @Deprecated\n\nsolrj/src/java/org/apache/solr/client/solrj/SolrQuery.java\n449:  @Deprecated\n470:  @Deprecated\n492:  @Deprecated\n579:  @Deprecated\n591:  @Deprecated\n601:  @Deprecated\n618:  @Deprecated\n977:  @Deprecated\n985:  @Deprecated\n\nsolrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java\n192:  @Deprecated\n201:  @Deprecated\n213:  @Deprecated\n222:  @Deprecated\n\nsolrj/src/java/org/apache/solr/common/cloud/ClosableThread.java\n23:@Deprecated\n\nsolrj/src/java/org/apache/solr/common/cloud/ClusterState.java\n56:  @Deprecated\n\nsolrj/src/java/org/apache/solr/common/cloud/ImplicitDocRouter.java\n35://  @Deprecated\n\nsolrj/src/java/org/apache/solr/common/params/AppendedSolrParams.java\n30:  @Deprecated\n\nsolrj/src/java/org/apache/solr/common/params/DefaultSolrParams.java\n34:  @Deprecated\n\nsolrj/src/java/org/apache/solr/common/params/FacetParams.java\n315:  @Deprecated\n\nsolrj/src/java/org/apache/solr/common/params/ShardParams.java\n50:  @Deprecated\n\nsolrj/src/java/org/apache/solr/common/util/NamedList.java\n120:  @Deprecated\n135:  @Deprecated\n\nsolrj/src/java/org/apache/solr/common/util/SimpleOrderedMap.java\n52:  @Deprecated\n\ntest-framework/src/java/org/apache/solr/SolrTestCaseJ4.java\n1030:  @Deprecated()\n\n ",
            "id": "comment-14277013"
        },
        {
            "date": "2015-01-14T15:03:43+0000",
            "author": "Alan Woodward",
            "content": "Each one will need an entry in MIGRATE.txt explaining what to use instead.  I'll get to this later in the week, but if anybody wants to start knocking them off beforehand, feel free.  Meanwhile, I'll get back to shouting in frustration at ShardSplitTest. ",
            "id": "comment-14277016"
        },
        {
            "date": "2015-01-14T18:03:53+0000",
            "author": "Shawn Heisey",
            "content": "I was looking at this recently myself, wondering if we had gotten all the deprecated code removed.  It looked like we hadn't.\n\nIs there a corresponding issue for Lucene too?  I think it may have the same problem. ",
            "id": "comment-14277343"
        },
        {
            "date": "2015-01-19T14:41:28+0000",
            "author": "Alan Woodward",
            "content": "I've removed (or, in some cases, undeprecated) everything I feel comfortable with, but there are a few bits here that I don't know enough about to deal with:\n\n\tSimpleFacets.rangeCount() - this seems to be used elsewhere in places that it doesn't obviously make sense to use the suggested replacement classes.\n\tMiniMRCluster - presumably should be replaced by MiniMrClientCluster from an external lib, but it's not obvious how\n\tImplicitDocRouter and ShardParams.SHARD_KEYS - these have comments about how they should be removed 'later', but it's not clear if these still need to be supported.\n\tNamedList and SimpleOrderedMap constructors - the deprecation comments suggest that there's still more work that needs to be done here before the deprecated constructors can be removed.\n\n ",
            "id": "comment-14282563"
        },
        {
            "date": "2015-01-20T09:41:44+0000",
            "author": "Alan Woodward",
            "content": "Chris Hostetter (Unused) can you give me any suggestions on SimpleFacets.rangeCount()?\nNoble Paul similarly for ImplicitDocRouter and ShardParams.SHARD_KEYS?\n\nThe NamedList and SimpleOrderedMap deprecated constructors have been there so long that git blame doesn't tell me who deprecated them in the first place, so I think we should just undeprecate these.\n\nMiniMRCluster is only in the test framework, so I don't think that matters so much. ",
            "id": "comment-14283638"
        },
        {
            "date": "2015-01-20T10:47:25+0000",
            "author": "Noble Paul",
            "content": "ShardParams.SHARD_KEYS is deprecated in favor of ShardParams._ROUTE_ \n\nWe can remove that ",
            "id": "comment-14283692"
        },
        {
            "date": "2015-01-20T13:13:42+0000",
            "author": "Alan Woodward",
            "content": "I've removed ShardParams.SHARD_KEYS, and replaced it with _ROUTE_ in the appropriate places, but it's causing ShardRoutingTest to fail.  Noble Paul could you have a look? ",
            "id": "comment-14283803"
        },
        {
            "date": "2015-01-20T16:42:53+0000",
            "author": "Noble Paul",
            "content": "please apply this on top of your patch Alan Woodward ",
            "id": "comment-14283991"
        },
        {
            "date": "2015-01-20T17:08:57+0000",
            "author": "Hoss Man",
            "content": "SimpleFacets.rangeCount() - this seems to be used elsewhere in places that it doesn't obviously make sense to use the suggested replacement classes.\n\nThere are 2 rangeCount methods, the one that is deprecated is...\n\n\n  /**\n   * @deprecated Use rangeCount(SchemaField,String,String,boolean,boolean) which is more generalized\n   */\n  @Deprecated\n  protected int rangeCount(SchemaField sf, Date low, Date high,\n                           boolean iLow, boolean iHigh) throws IOException {\n\n\n\n...the only place that version of rangeCount is used is inside of SimpleFacets.getFacetDateCounts \u2013 which is also deprecated.\n\nremoving SimpleFacets.getFacetDateCounts is a bigger undertaking, because it conceptually means removing all of the \"facet.date\" functionality (not just internal APIs)\n\nI'm -0 on making the call to (finally) remove all end user support for facet.date this late in the process for 5.0, but what would probably make sense is to go ahead and rename & make private the deprecated rangeCount method. ",
            "id": "comment-14284029"
        },
        {
            "date": "2015-01-20T18:28:28+0000",
            "author": "Alan Woodward",
            "content": "Thanks Noble, that's fixed it.\n\nHoss, is there a clear replacement for facet.date?  I worry that if we carry it over to 5.0 then we'll just run through the same process at the last minute before a 6.0 release, and it ends up being supported in perpetuity. ",
            "id": "comment-14284169"
        },
        {
            "date": "2015-01-20T23:01:58+0000",
            "author": "Hoss Man",
            "content": "Hoss, is there a clear replacement for facet.date? ...\n\nfacet.date was superceeded by facet.range in SOLR-1240 - the internal methods were deprecated (so new internal code would be discouraged from using it) but we've always continued to support the functionality at the HTTP layer...\n\nAparently the SolrJ \"FacetParams\" associated with date faceting were never actually marked \"deprecated\", so that's another factor to the equation: https://lucene.apache.org/solr/4_10_1/solr-solrj/org/apache/solr/common/params/FacetParams.html#FACET_DATE\n\nNOTE however: the SolrQuery faceting convinience methods \u2013 ie: addDateRangeFacet \u2013 have aparently always used facet.range.  that feature deprecation evidently preceeded the creation of those solrj methods:  https://svn.apache.org/r1150361 ... so the odds of any SolrJ clients actaully using facet.date are pretty low \u2013 but that doesn't say anything about people using solr from other clients or rolling their own requests\n\n\u2014\n\ni have no opinion about removing the facet.date functionality from 5.0 - people shouldn't still be using it, but if we remove it and they are the inconvenience is painful: it will manifest either as client errors or silently returning no facet results (when the client tries to parse response data that isn't there) while the only benefit is less code on our end ... which is always nice, but hard to gauge on the value tradeoff \u2013 i defer judgement.\n\n(unless of course: you want to add some logic to FacetComponent that returns a hard fail if \"facet.date\" is a specified param ... that might be a better error condition for client then just ripping the functionality out) ",
            "id": "comment-14284597"
        },
        {
            "date": "2015-01-21T09:13:38+0000",
            "author": "Alan Woodward",
            "content": "OK, I think the thing to do here is to deprecate FacetParams.FACET_DATE, and add a bit of logic that adds a warning to any request that includes it saying \"this is deprecated, use facet.range instead\".  And then remove it from trunk.\n\nI think this deserves its own separate issue. ",
            "id": "comment-14285388"
        },
        {
            "date": "2015-01-21T09:15:39+0000",
            "author": "Alan Woodward",
            "content": "See SOLR-7010.  No need for this to get into 5.0 though. ",
            "id": "comment-14285392"
        },
        {
            "date": "2015-01-21T13:20:15+0000",
            "author": "Alan Woodward",
            "content": "I'm going to undeprecate the dataimporthandler long form variable-resolver namespace, as I don't think it hurts us to support it, and removing it causes test failures that are completely inexplicable until you realise that resolution silently fails to execute properly.  If this really needs to be deprecated, then variable resolution should be updated to throw an error when it encounters an unrecognised namespace. ",
            "id": "comment-14285618"
        },
        {
            "date": "2015-01-21T14:49:06+0000",
            "author": "Alan Woodward",
            "content": "Final patch, committing shortly. ",
            "id": "comment-14285698"
        },
        {
            "date": "2015-01-21T15:06:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653549 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1653549 ]\n\nSOLR-6976: Remove methods and classes deprecated in 4.x ",
            "id": "comment-14285732"
        },
        {
            "date": "2015-01-21T15:20:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653555 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653555 ]\n\nSOLR-6976: Remove methods and classes deprecated in 4.x ",
            "id": "comment-14285761"
        },
        {
            "date": "2015-01-21T15:47:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653566 from Alan Woodward in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1653566 ]\n\nSOLR-6976: Remove methods and classes deprecated in 4.x ",
            "id": "comment-14285797"
        },
        {
            "date": "2015-02-23T05:00:58+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332614"
        }
    ]
}