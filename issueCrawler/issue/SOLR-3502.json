{
    "id": "SOLR-3502",
    "title": "[Copy Field][Importing] Copy Field duplicate a field and a multivalued field can be created without having field multivalued in schema",
    "details": {
        "affect_versions": "3.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "we have two field on both solr:\n\n\n<field name=\"A\" type=\"text\" indexed=\"true\" stored=\"true\"/>\n<field name=\"B\" type=\"string\" indexed=\"true\" stored=\"true\"/>\n\n<copyField source=\"A\" dest=\"B\"/>\n\nWe have a SolrDocument reader (solrj client without pojo binding) that takes all docs from one solr and SolrInputDocument write them on the other solr.\n\nOn B field in the target solr we ended with an Array containing the duplicate value we have on the first solr. How could solr internally break schema ?",
    "attachments": {
        "SOLR-3502-4x.patch": "https://issues.apache.org/jira/secure/attachment/12530673/SOLR-3502-4x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jack Krupansky",
            "id": "comment-13288060",
            "date": "2012-06-03T01:52:33+0000",
            "content": "I can repro the problem in 3.6.\n\nThe essence is that the copyField code checks to see if the destination field has already been set in the output Lucene document, but this doesn't catch the case where the setting of the destination in the SolrInputDocument occurs after the setting of the source field.\n\nPatch for 4x branch is attached. Similar patch should be applied to trunk and 3.6.1. Tested for 4x. "
        },
        {
            "author": "Jun Ohtani",
            "id": "comment-13419901",
            "date": "2012-07-21T18:26:25+0000",
            "content": "I try \"partial update\" for 4.0-ALPHA using exampledocs/mem.xml.\nI reproduce this issue.\n\nusing follows xml to partial update.\n\n\n<add>\n<doc>\n  <field name=\"id\">VS1GB400C3</field>\n  <field name=\"version\">version number</field>\n  <field name=\"cat\" update=\"add\">add_cats</field>\n</doc>\n</add>\n\n1st partial update return success.\nBut \"price_c\" field (this field is not multivalued) has multi value as following.\n\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":3,\n    \"params\":{\n      \"fl\":\"price_c\",\n      \"indent\":\"true\",\n      \"wt\":\"json\",\n      \"q\":\"id:VS1GB400C3\"}},\n  \"response\":{\"numFound\":1,\"start\":0,\"docs\":[\n      \nUnknown macro: {        \"price_c\"} \n]\n  }}\n\nAnd 2nd partial update return failed (\"Solr returned an error #400 Bad Request\").\nSolr output next error log.\n\nERROR: [doc=VS1GB400C3] multiple values encountered for non multiValued field price_c: [74.99,USD, 74.99,USD]\n\tat org.apache.solr.update.DocumentBuilder.toDocument(DocumentBuilder.java:242)\n\tat org.apache.solr.update.AddUpdateCommand.getLuceneDocument(AddUpdateCommand.java:72)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:175)\n "
        }
    ]
}