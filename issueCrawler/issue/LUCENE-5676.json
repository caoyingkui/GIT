{
    "id": "LUCENE-5676",
    "title": "QueryNodeImpl is too mutable",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "modules/queryparser"
        ],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "We use query nodes both during parsing and as a method of building queries. Somehow a bug has crept into our system where a QueryNode somehow gets mutated to have a parent when the node we created didn't originally have a parent. Some processor in our pipeline treats nodes differently based on the parent, which makes it a very hard to find bug.\n\nIt would be very helpful if there were a method like freeze() which would make the instance immutable from thereon, something like the following:\n\n\nprivate volatile boolean frozen;\n\npublic final boolean isFrozen() {\n    return frozen;\n};\n\nprotected void aboutToMakeChanges() {\n    if (isFrozen()) {\n        throw new IllegalStateException(\"This object is frozen\");\n    }\n}\n\npublic A freeze() {\n    frozen = true;\n    return this;\n}\n\n// ...\n\nprivate void setParent(QueryNode parent) {\n    aboutToMakeChanges();\n    // existing code\n}",
    "attachments": {},
    "issue_links": {},
    "comments": []
}