{
    "id": "LUCENE-8261",
    "title": "InterpolatedProperties.interpolate and recursive property references",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "7.4"
        ]
    },
    "description": "InterpolatedProperties is used in lib check tasks in the build file. I occasionally see this:\n\n/home/jenkins/workspace/Lucene-Solr-master-Linux/lucene/tools/custom-tasks.xml:108: java.lang.IllegalArgumentException: named capturing group is missing trailing '}'\n        at java.base/java.util.regex.Matcher.appendExpandedReplacement(Matcher.java:1052)\n        at java.base/java.util.regex.Matcher.appendReplacement(Matcher.java:908)\n        at org.apache.lucene.dependencies.InterpolatedProperties.interpolate(InterpolatedProperties.java:64)\n\n\n\nI don't think we ever need to use any group references in those replacements; they should be fixed strings (quoted verbatim)? So Pattern.quoteReplacement would be adequate here.",
    "attachments": {
        "LUCENE-8261.patch": "https://issues.apache.org/jira/secure/attachment/12919998/LUCENE-8261.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16445924",
            "date": "2018-04-20T15:50:47+0000",
            "content": "I believe that error happens because InterpolatedProperties's interpolation is not recursive, but people have tried to use multiple indirection, e.g.\n\n\npropA=value\npropB=${propA}\n/org/name=${propB}\n\n\n\nSo suppressing the error (via Pattern.quoteReplacement) would cause a different kind of trouble.\n\nI haven't done anything about this because none of the attempts at multiple indirection has persisted.  Probably ivy-versions.properties validation should look for this and fail? ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-16445928",
            "date": "2018-04-20T15:53:59+0000",
            "content": "Very likely true. But should it be allowed? If we quoted the replacement it would fail with a more reasonable error later on (unresolved property)? Alternatively, we could resolve it recursively too (catching cycles), but it'd be more difficult to implement. ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-16445935",
            "date": "2018-04-20T15:59:18+0000",
            "content": "Very likely true. But should it be allowed? If we quoted the replacement it would fail with a more reasonable error later on (unresolved property)?\n\nI'm not sure if it would be more reasonable; as I said, I think the appropriate place to inform people about this problem is in validation (forms of which already occur with ant precommit) - that would maximize reasonableness.\n\nAlternatively, we could resolve it recursively too (catching cycles), but it'd be more difficult to implement.\n\nYeah, I've considered implementing it, but this is such a niche functionality, and as I said, so rarely even asked for, that I haven't done anything about it. ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-16445944",
            "date": "2018-04-20T16:02:45+0000",
            "content": "I should say that I agree that quoting the replacement is a reasonable step, so +1 to the patch.  I'm just dubious that it will make things appreciably better for users. ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-16445955",
            "date": "2018-04-20T16:08:06+0000",
            "content": "Ok, let me leave it for a bit of spare time and I'll either add validation or recursive property resolution (shouldn't be too hard). ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-16449854",
            "date": "2018-04-24T13:34:11+0000",
            "content": "I've implemented slightly stronger reference resolution, including checks for circular references and some sanity checking. The main method has tests since these are utilities and don't have their associated tests. ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-16465804",
            "date": "2018-05-07T11:23:40+0000",
            "content": "Commit 30175b6410579b6d21a59ccad2a03dd03f89d7c5 in lucene-solr's branch refs/heads/branch_7x from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=30175b6 ]\n\nLUCENE-8261: InterpolatedProperties.interpolate and recursive property references. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16465805",
            "date": "2018-05-07T11:23:42+0000",
            "content": "Commit 445c0aa47e9962754c93bde1e07a24cd271e7d31 in lucene-solr's branch refs/heads/master from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=445c0aa ]\n\nLUCENE-8261: InterpolatedProperties.interpolate and recursive property references. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16466113",
            "date": "2018-05-07T16:36:22+0000",
            "content": "Belated +1, Dawid Weiss, thanks for working on it!\n\nOne tiny nit: the class and load() methods' javadoc still say:\n\n\n/**\n * Parse a properties file, performing non-recursive Ant-like\n * property value interpolation, and return the resulting Properties.\n */\n[...]\n  /**\n   * Loads the properties file via {@link Properties#load(InputStream)},\n   * then performs non-recursive Ant-like property value interpolation.\n   */\n\n\n\ns/non-recursive/recursive/g ? ",
            "author": "Steve Rowe"
        },
        {
            "id": "comment-16466358",
            "date": "2018-05-07T19:32:54+0000",
            "content": "Thanks Steve, I'll correct the Javadoc and commit it in. ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-16466361",
            "date": "2018-05-07T19:35:30+0000",
            "content": "Commit 572490088149e6fc498b1a1ca739f277c7364e00 in lucene-solr's branch refs/heads/branch_7x from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5724900 ]\n\nLUCENE-8261: non-recursive->recursive (javadoc update). ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16466362",
            "date": "2018-05-07T19:35:32+0000",
            "content": "Commit 3e8f31ead006a1ed2ee744bc9b37723851c9dd22 in lucene-solr's branch refs/heads/master from Dawid Weiss\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3e8f31e ]\n\nLUCENE-8261: non-recursive->recursive (javadoc update). ",
            "author": "ASF subversion and git services"
        }
    ]
}