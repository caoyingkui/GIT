{
    "id": "SOLR-10550",
    "title": "Improve FileFloatSource eviction // reduce FileFloatSource memory footprint",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Server"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "6.5",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "As a follow up from SOLR-10506 we found another possible memory leak in Solr. The values generated from an ExternalFileField are cached in a static cache inside the FileFloatSource. That cache caches both a IndexReader and FileFloatSource}}s loaded using that {{IndexReader.\n\nCache eviction is left to the internally used WeakHashMap or a full eviction can be triggered via url. We are dealing with large synonym files and word lists stored in managed resources. Those are tied to the SolrCore as described in SOLR-10506. We're also using ExternalFileField}}s whose {{FileFloatSource are cached in said static cache. The FileFloatSource hold strong (transitive) references to the SolrCore they have been created for. \n\nAfter a couple of collection reloads, the cache eviction mechanism of the WeakHashMap gets activated pretty close to heap exhaustion. The patch attached adds a mechanism to evict cache entries created in the context of a SolrCore upon it's close using a close hook in the ExternalFileFieldReloader. It furthermore adds a static cache reset method for all entries bound to a given IndexReader. I'm not sure, if the added cache resets are too aggressive or executed too often, I'd like to leave that to the experts",
    "attachments": {
        "solr_filefloatsource.patch": "https://issues.apache.org/jira/secure/attachment/12864548/solr_filefloatsource.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-04T11:30:05+0000",
            "content": "GitHub user tboeghk opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/198\n\n    SOLR-10550 Improve FileFloatSource eviction // reduce FileFloatSource memory footprint\n\n    As a follow up from `SOLR-10506` we found another possible memory leak in Solr. The values generated from an `ExternalFileField` are cached in a static cache inside the `FileFloatSource`. That cache caches both a `IndexReader` and `FileFloatSource`s loaded using that `IndexReader`.\n    Cache eviction is left to the internally used WeakHashMap or a full eviction can be triggered via url. We are dealing with large synonym files and word lists stored in managed resources. Those are tied to the SolrCore as described in `SOLR-10506`. We're also using `ExternalFileField`s whose `FileFloatSource` are cached in said static cache. The FileFloatSource hold strong (transitive) references to the SolrCore they have been created for.\n\n    After a couple of collection reloads, the cache eviction mechanism of the `WeakHashMap` gets activated pretty close to heap exhaustion. The patch attached adds a mechanism to evict cache entries created in the context of a `SolrCore` upon it's close using a close hook in the `ExternalFileFieldReloader`. It furthermore adds a static cache reset method for all entries bound to a given IndexReader. I'm not sure, if the added cache resets are too aggressive or executed too often, I'd like to leave that to the experts.\n\n    N.B.: I did this second PR for the same issue to separate code changes for both SOLR-10506 and SOLR-10550 which I maintained on the same fork branch :-/\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/shopping24/lucene-solr branch_6_5__SOLR-10550\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/198.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #198\n\n\ncommit 024e950f840b8466272014e4594e198560760c79\nAuthor: Torsten B\u00f8gh Ko\u0308ster <torsten.koester@s24.com>\nDate:   2017-04-21T12:51:21Z\n\n    clear cached field sources on core close\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-15996583"
        },
        {
            "date": "2017-05-04T12:00:38+0000",
            "content": "Hi all,\n\nI made a PR in Github from the Shopping24 fork. Is there anything I can do to get some attention on this issue? Do you need any more tests or explanation? \n\nThis is indeed a showstopper for us in using managed resources in Solr :-/\n\nbest\ntorsten ",
            "author": "Torsten B\u00f8gh K\u00f6ster",
            "id": "comment-15996613"
        }
    ]
}