{
    "id": "SOLR-3884",
    "title": "smoke tester on cygwin fails when testing example due to tlog recovery",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0",
            "4.1",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "while testing out 4.0-rc0, sarowe noted the he was seeing the smoke tester script fail while sanity checking the solr example.\n\nhttps://mail-archives.apache.org/mod_mbox/lucene-dev/201209.mbox/%3C6C78E97C707B5B4C8CC61D44F87545863ED73E@SUEX10-mbx-03.ad.syr.edu%3E\n\nThe crux of the issue seems to be...\n\n\tthe same directory is reused for testing the example in java6 and then java7\n\tin some versions of cygwin, SIGINT does not do a clean shutdown of jetty+solr (with jvm close hooks that would do a hard commit)\n\twhen solr is shutdown uncleanly (the java6 run), the tlog is used on startup of the next (java7) run.\n\ttlog recovery concurrent with rapid updates on startup can be problematic, commits may be ignored.\n\n\n\nThe underlying questions about dealing with tlog recovery and concurrent updates from external clients have been spun off into SOLR-3888.  this issue is focusing on changes that should be considered for the smoke tester.",
    "attachments": {
        "java6.solr-example.log": "https://issues.apache.org/jira/secure/attachment/12546500/java6.solr-example.log",
        "java7.solr-example.log": "https://issues.apache.org/jira/secure/attachment/12546501/java7.solr-example.log",
        "solr-example.log": "https://issues.apache.org/jira/secure/attachment/12546433/solr-example.log"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13462233",
            "date": "2012-09-24T23:02:54+0000",
            "content": "The crux of hte issue i (think i) see is that the smoke tester tries to sanity check the same example dir twice in succession, once with java6 and once with java7.  in sarowe's case, it's always the java7 version that fails (if it fails) and here are some interesting tidbits from the output/log he posted...\n\n\n    test solr example w/ Java 6...\n      start Solr instance (log=/home/sarowe/temp/tmpDir/unpack/apache-solr-4.0.0/solr-example.log)...\n      startup done\n      test utf8...\n      index example docs...\n      run query...\n      stop server (SIGINT)...\n    test solr example w/ Java 7...\n      start Solr instance (log=/home/sarowe/temp/tmpDir/unpack/apache-solr-4.0.0/solr-example.log)...\n      startup done\n      test utf8...\n      index example docs...\n      run query...\nFAILED: response is:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">0</int><lst name=\"params\"><str\nname=\"q\">video</str></lst></lst><result name=\"response\" numFound=\"0\" start=\"0\"></result>\n</response>\n\n\n\nSo the requests to index & query data all succced, but the results are not what is expected (no docs found for a simple query)\n\nThen we look at the log from that failed second run o the example...\n\n\n...\nINFO: registering core: collection1\nSep 24, 2012 2:08:58 PM org.apache.solr.update.UpdateLog$LogReplayer doReplay\nWARNING: Starting log replay tlog{file=solr\\collection1\\data\\tlog\\tlog.0000000000000000000 refcount=2} active=false\nstarting pos=0\nSep 24, 2012 2:08:58 PM org.apache.solr.servlet.SolrDispatchFilter init\nINFO: user.dir=C:\\cygwin\\home\\sarowe\\temp\\tmpDir\\unpack\\apache-solr-4.0.0\\example\nSep 24, 2012 2:08:58 PM org.apache.solr.servlet.SolrDispatchFilter init\nINFO: SolrDispatchFilter.init() done\n2012-09-24 14:08:58.105:INFO:oejs.AbstractConnector:Started SocketConnector@0.0.0.0:8983\nSep 24, 2012 2:08:58 PM org.apache.solr.core.SolrDeletionPolicy onInit\nINFO: SolrDeletionPolicy.onInit: commits:num=1\n        commit{dir=NRTCachingDirectory(org.apache.lucene.store.MMapDirectory@C:\\cygwin\\home\\sarowe\\temp\\tmpDir\\unpac\nk\\apache-solr-4.0.0\\example\\solr\\collection1\\data\\index\nlockFactory=org.apache.lucene.store.NativeFSLockFactory@7ea69d83; maxCacheMB=48.0\nmaxMergeSizeMB=4.0),segFN=segments_1,generation=1,filenames=[segments_1]\nSep 24, 2012 2:08:58 PM org.apache.solr.core.SolrDeletionPolicy updateCommits\nINFO: newest commit = 1\nSep 24, 2012 2:08:58 PM org.apache.solr.update.DirectUpdateHandler2 commit\nINFO: start\ncommit{flags=2,_version_=0,optimize=false,openSearcher=true,waitSearcher=true,expungeDeletes=false,softCommit=false}\nSep 24, 2012 2:08:58 PM org.apache.solr.core.SolrCore execute\nINFO: [collection1] webapp=/solr path=/select params={wt=python&q=hello&params=explicit} hits=0 status=0 QTime=1 \nSep 24, 2012 2:08:58 PM org.apache.solr.core.SolrCore execute\n...\n\n\n\n...so we have astartup detecting things in the transaction log that need to be replayed, and a commit starts \u2013 meanwhile requests fro mthe smoke script (checking utf8) are comming in.  After that we start getting real example documents...\n\n\n...\nINFO: [collection1] webapp=/solr path=/update params={} {add=[EN7800GTX/2DHTV/256M (1414015368091926528), 100-435805\n(1414015368095072256)]} 0 6\nSep 24, 2012 2:08:59 PM org.apache.solr.update.processor.DistributedUpdateProcessor processCommit\nINFO: Ignoring commit while not ACTIVE - state: REPLAYING replay:0\nSep 24, 2012 2:08:59 PM org.apache.solr.update.processor.LogUpdateProcessor finish\nINFO: [collection1] webapp=/solr path=/update params={softCommit=true} {commit=} 0 1\nSep 24, 2012 2:08:59 PM org.apache.solr.core.SolrCore execute\nINFO: [collection1] webapp=/solr path=/select/ params={q=video} hits=0 status=0 QTime=0\n...\n\n\n\n...and that's where things look wonky to me \u2013 the smoke script explicitly sent in a bunch of documents, and asked for a commit, but aparently even though the client was given a success response, that commit was evidently ignored because solr was in \"REPLAYING\" mode, so then the subsequent query didn't find the docs it was expecting. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13462234",
            "date": "2012-09-24T23:03:37+0000",
            "content": "I guess it looks like its recovering from a replay log? And it skips commits while it does this.\n\nSo the problem may just be that we accept updates before we are ready?\n\nI've got to head out for a while, but can look into it more later if no one else jumps on it. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13462235",
            "date": "2012-09-24T23:04:36+0000",
            "content": "Didn't see your post first Hossman - right, that's about what I see happening. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13462254",
            "date": "2012-09-24T23:26:19+0000",
            "content": "I think this is somewhat related to SOLR-3861 in that the only reason we see these problems during tlog REPLAY is because there was no hard commit on shutdown of the first instance.  (if i'm right: we'll see a RejectedExecutionException in sarowe's first solr-example.log from the autocommit during shutdown) but independent of that we still need to think about how to better deal with documents comming in during RECOVERY\n\nOn IRC miller suggested that perhaps Solr should block and not accept new updates until REPLAY is done (ideally by not listing on the socket i would think) \n\na short term way of addressing this in the smoke tester (if we don't have a better fix for 4.0) would be to have hte smoke tester explicitly request a hard commit before doing a shutdown of the server, or using a new clean directory (w/o any tlog or previous docs) when running the example for the  second time. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13462271",
            "date": "2012-09-24T23:52:36+0000",
            "content": "So the problem may just be that we accept updates before we are ready?\n\nYes, sounds like it from the diagnosis that Hoss gave.\n\nI think this is somewhat related to SOLR-3861 in that the only reason we see these problems during tlog REPLAY is because there was no hard commit on shutdown of the first instance.\n\nI was just going to ask this (why we are seeing a tlog recovery in the first place).  We always used to do a commit on shutdown, and I had to add an explicit test hook to disable this for TestRecovery (DirectUpdateHandler2.commitOnClose = false\n\nbut independent of that we still need to think about how to better deal with documents comming in during RECOVERY\n\nWe buffer them to the tlog.  They will get added eventually.\nWhat we should really think about is documents coming in during recovery that aren't from a leader and we aren't in cloud mode (hence we won't forward to a leader).  Perhaps we should fail the update?\n\nOn IRC miller suggested that perhaps Solr should block and not accept new updates until REPLAY is done (ideally by not listing on the socket i would think)\n\nHmmm, yeah I guess that would work too, only if we don't advertise the core being in recovery mode to the cluster.  We don't want the leader to be forwarding updates if we're going to block. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13462300",
            "date": "2012-09-25T00:38:47+0000",
            "content": "Hmmm, just did as simple manual test, and I see evidence of a final commit.\nI started a clean stock server, executed \"post.sh *xml\" (after commenting out the commit command in the script), then pressed ^C immediately after the docs are added (before any autocommit could kick in.).\n\nLast lines on the console:\n\nINFO: [collection1] webapp=/solr path=/update params={} {add=[EN7800GTX/2DHTV/256M (1414039066694909952), 100-435805 (1414039066700152832)]} 0 10\n^C2012-09-24 20:25:44.817:INFO:oejs.Server:Graceful shutdown SocketConnector@0.0.0.0:8983\n2012-09-24 20:25:44.817:INFO:oejs.Server:Graceful shutdown o.e.j.w.WebAppContext{/solr,file:/opt/code/lusolr/solr/example/solr-webapp/webapp/},/opt/code/lusolr/solr/example/webapps/solr.war\n2012-09-24 20:25:45.887:INFO:oejsh.ContextHandler:stopped o.e.j.w.WebAppContext{/solr,file:/opt/code/lusolr/solr/example/solr-webapp/webapp/},/opt/code/lusolr/solr/example/webapps/solr.war\n\n\n\nThe only tlog was \"capped\" (an indicator that everything in the log was subjected to a hard commit, hence there should be no need to tlog recovery on restart).\n\n/opt/code/lusolr/solr/example/solr/collection1/data/tlog$ tail -n1 tlog.0000000000000000000 \n0??D`-SOLR_TLOG_END/opt/code/lusolr/solr/example/solr/collection1/data/tlog$ \n\n\n\nStarting the server again showed no indication of a tlog replay/recovery.\nSo I guess this is something more esoteric related to SOLR-3861 that I don't understand yet (and doesn't happen all the time).\n\nautocommit during shutdown\n\nFYI, the final commit should be done regardless of any autocommits being enabled, so I assume you're just referring to that commit, and not a real autocommit triggered by time or number of documents that happens to coincide with shutdown. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13462362",
            "date": "2012-09-25T02:16:05+0000",
            "content": "I don't think it does happen every time - others seem to have run the smoke test and not seen it at all, steve saw it some runs, I see it every run on my really fast comp. So I'm guessing there is some timing involved. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13462384",
            "date": "2012-09-25T02:56:35+0000",
            "content": "Hmm...I tried with the SOLR-3861 fix and I still see a fail. The log shows Solr starting and then stopping, but the 'test utf8' fails with ERROR: Solr is not up. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13462688",
            "date": "2012-09-25T12:21:40+0000",
            "content": "\na short term way of addressing this in the smoke tester (if we don't have a better fix for 4.0) would be to have hte smoke tester explicitly request a hard commit before doing a shutdown of the server, or using a new clean directory (w/o any tlog or previous docs) when running the example for the second time.\n\nI tried the clean directory approach - here's the smokeTestRelease.py patch:\n\n\nIndex: dev-tools/scripts/smokeTestRelease.py\n===================================================================\n--- dev-tools/scripts/smokeTestRelease.py       (revision 1389823)\n+++ dev-tools/scripts/smokeTestRelease.py       (working copy)\n@@ -533,11 +533,21 @@\n     if project == 'lucene':\n       testDemo(isSrc, version)\n     else:\n+      print('    copying unpacked distribution...')\n+      java6UnpackPath = '%s-java6' %unpackPath\n+      if os.path.exists(java6UnpackPath):\n+        shutil.rmtree(java6UnpackPath)\n+      shutil.copytree(unpackPath, java6UnpackPath)\n       print('    test solr example w/ Java 6...')\n-      testSolrExample(unpackPath, JAVA6_HOME, False)\n+      testSolrExample(java6UnpackPath, JAVA6_HOME, False)\n \n+      print('    copying unpacked distribution...')\n+      java7UnpackPath = '%s-java7' %unpackPath\n+      if os.path.exists(java7UnpackPath):\n+        shutil.rmtree(java7UnpackPath)\n+      shutil.copytree(unpackPath, java7UnpackPath)\n       print('    test solr example w/ Java 7...')\n-      testSolrExample(unpackPath, JAVA7_HOME, False)\n+      testSolrExample(java7UnpackPath, JAVA7_HOME, False)\n \n   testChangesText('.', version, project)\n\n\n\nBut this seemed to have no effect - the failure still happens:\n\n\nTest Solr...\n  test basics...\n  get KEYS\n    0.1 MB\n  download apache-solr-4.0.0-src.tgz...\n    29.8 MB\n    verify md5/sha1 digests\n    verify sig\n      GPG: gpg: WARNING: using insecure memory!\n    verify trust\n      GPG: gpg: WARNING: using insecure memory!\n      GPG: gpg: WARNING: This key is not certified with a trusted signature!\n  download apache-solr-4.0.0.tgz...\n    102.8 MB\n    verify md5/sha1 digests\n    verify sig\n      GPG: gpg: WARNING: using insecure memory!\n    verify trust\n      GPG: gpg: WARNING: using insecure memory!\n      GPG: gpg: WARNING: This key is not certified with a trusted signature!\n  download apache-solr-4.0.0.zip...\n    107.0 MB\n    verify md5/sha1 digests\n    verify sig\n      GPG: gpg: WARNING: using insecure memory!\n    verify trust\n      GPG: gpg: WARNING: using insecure memory!\n      GPG: gpg: WARNING: This key is not certified with a trusted signature!\n    unpack apache-solr-4.0.0.tgz...\n    copying unpacked distribution...\n    test solr example w/ Java 6...\n      start Solr instance (log=/home/sarowe/temp/tmpDir/unpack/apache-solr-4.0.0-java6/solr-example.log)...\n      startup done\n      test utf8...\n      index example docs...\n      run query...\n      stop server (SIGINT)...\n    copying unpacked distribution...\n    test solr example w/ Java 7...\n      start Solr instance (log=/home/sarowe/temp/tmpDir/unpack/apache-solr-4.0.0-java7/solr-example.log)...\n      startup done\n      test utf8...\n      index example docs...\n      run query...\nFAILED: response is:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">1</int><lst name=\"params\"><str name=\"q\">video</str></lst></lst><result name=\"response\" numFound=\"0\" start=\"0\"></result>\n</response>\n\n      stop server (SIGINT)...\nTraceback (most recent call last):\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 1133, in <module>\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 1081, in main\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 1123, in smokeTest\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 424, in unpack\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 550, in verifyUnpacked\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 622, in testSolrExample\nRuntimeError: query on solr example instance failed\n\n\n\nAttaching the solr-example.log files from each directory. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13462737",
            "date": "2012-09-25T13:46:39+0000",
            "content": "I don't think it does happen every time - others seem to have run the smoke test and not seen it at all, steve saw it some runs, I see it every run on my really fast comp. So I'm guessing there is some timing involved.\n\nMark, what OS are you running the smoke tester on?\n\nOn another Win7+Cygwin box, the smoke tester succeeds for me. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13462739",
            "date": "2012-09-25T13:51:04+0000",
            "content": "Strange too, I've run the smoketester over 100 times and not encountered this. and sometimes my computer is busy doing other things too. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13462803",
            "date": "2012-09-25T14:49:59+0000",
            "content": "I'm running it on Ubuntu 12.04. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13462809",
            "date": "2012-09-25T14:55:55+0000",
            "content": "Me too:\n\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 12.04 LTS\nRelease:\t12.04\nCodename:\tprecise\n\n\nI run 'ant nightly-smoke' like this:\n\nant -DJAVA7_HOME=/usr/local/jdk1.7.0_01 -DJAVA6_HOME=/usr/local/jdk1.6.0_27 nightly-smoke "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13462860",
            "date": "2012-09-25T15:20:56+0000",
            "content": "\nI tried the clean directory approach - here's the smokeTestRelease.py patch:\n...\nBut this seemed to have no effect - the failure still happens:\n...\nAttaching the solr-example.log files from each directory.\n\nIf these logs you attached on 25/Sep/12 are what you got with the patch then something really weird is going on \u2013 because using a clean example dir there's no logical reason why it should have been doing tlog recovery in either run. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13462881",
            "date": "2012-09-25T15:34:38+0000",
            "content": "If these logs you attached on 25/Sep/12 are what you got with the patch then something really weird is going on \u2013 because using a clean example dir there's no logical reason why it should have been doing tlog recovery in either run.\n\nthose two logs are with the patch. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13462996",
            "date": "2012-09-25T17:21:38+0000",
            "content": "Something to watch out for on Windows/cygwin:\nI've noticed that ^C in cygwin no longer works to stop the JVM.\nDoing a \"kill -2\" on the java process from a different window seems to immediately abort the JVM (no graceful shutdown that does a commit).\nThe latter may be happening with the python script too? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13463018",
            "date": "2012-09-25T17:36:42+0000",
            "content": "\nDoing a \"kill -2\" on the java process from a different window seems to immediately abort the JVM (no graceful shutdown that does a commit).\nThe latter may be happening with the python script too?\n\nThat could explain how a tlog would be left in the directory after calling the testSolrExample() method, but it still leaves some open questions...\n\n1) according to sarowe, he's seeing this problem (and his smoke test logs show tlog recovery) even when using a pristine copy of the \"unpack\" dir - so why is there a tlog in that case?\n\n2) how should tlog recovery be \"fixed\" to better handle this situation (ie: docs & commits coming in during recovery) in a real world situation. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13463019",
            "date": "2012-09-25T17:38:18+0000",
            "content": "1) according to sarowe, he's seeing this problem (and his smoke test logs show tlog recovery) even when using a pristine copy of the \"unpack\" dir - so why is there a tlog in that case?\n\nHmm.. talking with sarowe on IRC, i think there may be a bug in his patch ... he cloned the unpackDir he passes to testSolrExample, but i don't think testSolrExample actaully uses that unpack dir for anything, it appears to just run the example relative the CWD.\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13463030",
            "date": "2012-09-25T17:46:47+0000",
            "content": "I've noticed that ^C in cygwin no longer works to stop the JVM.\nI think it might be this: http://cygwin.com/ml/cygwin/2012-07/msg00250.html\nThe author does note that the Java shutdown hook is no longer called though. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13463034",
            "date": "2012-09-25T17:47:46+0000",
            "content": "\nHmm.. talking with sarowe on IRC, i think there may be a bug in his patch ... he cloned the unpackDir he passes to testSolrExample, but i don't think testSolrExample actaully uses that unpack dir for anything, it appears to just run the example relative the CWD.\n\nYup, buggy patch, I didn't chdir to the unpacked copy, so it was still sharing the original dir between the two runs.  Here's the hopefully fixed patch:\n\nedit chdir -> os.chdir\n\n\nIndex: dev-tools/scripts/smokeTestRelease.py\n===================================================================\n--- dev-tools/scripts/smokeTestRelease.py       (revision 1389823)\n+++ dev-tools/scripts/smokeTestRelease.py       (working copy)\n@@ -533,12 +536,26 @@\n     if project == 'lucene':\n       testDemo(isSrc, version)\n     else:\n+      print('    copying unpacked distribution...')\n+      java6UnpackPath = '%s-java6' %unpackPath\n+      if os.path.exists(java6UnpackPath):\n+        shutil.rmtree(java6UnpackPath)\n+      shutil.copytree(unpackPath, java6UnpackPath)\n+      os.chdir(java6UnpackPath)\n       print('    test solr example w/ Java 6...')\n-      testSolrExample(unpackPath, JAVA6_HOME, False)\n+      testSolrExample(java6UnpackPath, JAVA6_HOME, False)\n \n+      print('    copying unpacked distribution...')\n+      java7UnpackPath = '%s-java7' %unpackPath\n+      if os.path.exists(java7UnpackPath):\n+        shutil.rmtree(java7UnpackPath)\n+      shutil.copytree(unpackPath, java7UnpackPath)\n+      os.chdir(java7UnpackPath)\n       print('    test solr example w/ Java 7...')\n-      testSolrExample(unpackPath, JAVA7_HOME, False)\n+      testSolrExample(java7UnpackPath, JAVA7_HOME, False)\n \n+      os.chdir(unpackPath)\n+\n   testChangesText('.', version, project)\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13463066",
            "date": "2012-09-25T18:06:38+0000",
            "content": "updated issue summary now that tlog questions have been spun off into SOLR-3888.  For 4.0 we should focus on addressing the smoke tester to run the example in a more consistent way \u2013 ie: not re-use the directory when running the example with diff jvms.  We can always make the the smoke tester explicitly trigger tlog recoery and smoke test that as a distinct task (done in both jvms) as part of SOLR-3888 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13463068",
            "date": "2012-09-25T18:08:07+0000",
            "content": "Yeah, it turns out my fail in the utf-8 test is a little different i\nnoticed last night. Still don't know the root cause. Fails every time\nthough.\n\n\n\n\n\u2013 \n\n\tMark\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13463069",
            "date": "2012-09-25T18:08:53+0000",
            "content": "The smoke tester with the latest patch succeeds.  I'll run it a couple more times "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13463100",
            "date": "2012-09-25T18:35:35+0000",
            "content": "\nI think it might be this: http://cygwin.com/ml/cygwin/2012-07/msg00250.html\nThe author does note that the Java shutdown hook is no longer called though.\n\nIn an earlier thread a workaround is given - from http://cygwin.com/ml/cygwin/2012-05/msg00482.html:\n\n\nSince apparently nobody wants to take ownership of this regression\nI'll point out the workaround, for the benefit of those googling\nand landing on this thread: start Java with -Xrs and use Ctrl-Break\ninstead of Ctrl-C. This will disable thread dump and break any\napplication that relies on normal signal handling, though.\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13463157",
            "date": "2012-09-25T19:59:46+0000",
            "content": "Committed the smokeTestRelease.py patch that starts each binary Solr distribution example test with a clean copy of the unpacked distribution:\n\n\n\tlucene_solr_4_0: r1390046\n\tbranch_4x: r1390053\n\ttrunk: r1390055\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13463292",
            "date": "2012-09-25T22:32:46+0000",
            "content": "I've noticed that ^C in cygwin no longer works to stop the JVM.\n\nCtrl-C doesn't stop Cygwin Python for me - running smokeTestRelease.py anyway - but from cygwin terminal, xterm, and rxvt, Ctrl-C does halt Solr started via java -jar start.jar from the unpacked binary distribution's example/ directory.\n\nMy cygwin version (from uname -srv):\n\n\nCYGWIN_NT-6.1-WOW64 1.7.16(0.262/5/3) 2012-07-20 22:55\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13463332",
            "date": "2012-09-25T23:11:14+0000",
            "content": "Although under Cygwin Ctrl-C halts java programs for me, the shutdown hook isn't invoked, e.g.:\n\n\npublic class ShutdownHookTest {\n  public static void main(String args[]) {\n    Runtime.getRuntime().addShutdownHook(new Thread() {\n      public void run() {\n        System.err.println(\"Hook invoked.\");\n      }\n    });\n    while (true) {}\n  }\n}\n\n\n\nWhen I run the above and hit Ctrl-C from Cygwin I don't see anything printed to the console.  So this is consistent with the behavior Yonik saw with kill -2 from another window.\n\nBy contrast, from a cmd terminal window, the message does get printed to the console. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13463367",
            "date": "2012-09-25T23:52:55+0000",
            "content": "It failed in the Java 1.6 tests for me:\n\n\n    test solr example w/ Java 6...\n      start Solr instance (log=/home/projects/lucene_solr_4_0/smoke-temp/unpack/apache-solr-4.0.0/solr-example.log)...\n      startup done\n      test utf8...\n      index example docs...\n      run query...\nFAILED: response is:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">0</int><lst name=\"params\"><str name=\"q\">video</str></lst></lst><result name=\"response\" numFound=\"0\" start=\"0\"></result>\n</response>\n\n      stop server (SIGINT)...\nTraceback (most recent call last):\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 1123, in <module>\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 1071, in main\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 1113, in smokeTest\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 424, in unpack\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 537, in verifyUnpacked\n  File \"dev-tools/scripts/smokeTestRelease.py\", line 612, in testSolrExample\nRuntimeError: query on solr example instance failed\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13463371",
            "date": "2012-09-25T23:56:25+0000",
            "content": "Jack, it looks like you haven't updated your working copy since I committed the fix?  For branch_4x you need at least r1390053. "
        }
    ]
}