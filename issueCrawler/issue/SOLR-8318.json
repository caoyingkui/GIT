{
    "id": "SOLR-8318",
    "title": "SimpleQueryParser doesn't use MultiTermAnalysis for Fuzzy Queries",
    "details": {
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "5.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Trivial"
    },
    "description": "Fuzzy queries in SimpleQParserPlugin don't seem to use the multi-term analysis chain. Prefix queries do, and SolrQueryParser does use multi-term analysis for fuzzy queries, so it seems like SimpleQParserPlugin should as well.",
    "attachments": {
        "sqp_fuzzy_multiterm.patch": "https://issues.apache.org/jira/secure/attachment/12773357/sqp_fuzzy_multiterm.patch",
        "SOLR-8318.patch": "https://issues.apache.org/jira/secure/attachment/12776010/SOLR-8318.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-19T22:29:59+0000",
            "author": "Tom Hill",
            "content": "In newPrefixQuery() in SimpleQParserPlugin, new queries are created like this\n\n          prefix = sf.getType().getPrefixQuery(qParser, sf, term);\n\nWhich adds a rewrite method:\n\n    query.setRewriteMethod(sf.getType().getRewriteMethod(parser, sf));\n\nIs that relevant for fuzzy queries? Or can I just do:\n\nfuzzy = new FuzzyQuery(new Term(entry.getKey(), text), fuzziness); ",
            "id": "comment-15014551"
        },
        {
            "date": "2015-11-26T20:17:38+0000",
            "author": "Erick Erickson",
            "content": "Bah! Was on the wrong JIRA. ",
            "id": "comment-15029231"
        },
        {
            "date": "2015-12-01T16:00:15+0000",
            "author": "Erick Erickson",
            "content": "Hmmm, I'm a bit puzzled here. The base class SimpleQueryParser already has a newFuzzyQuery method that this patch overrides. I'm out of my familiarity with the code, so my question is whether we should override this method in the plugin or is the real problem in the base class' implementation of newFuzzyQuery?\n\nThe tests in this patch certainly fail with the new overridden method commented out though.... I put some debugging in and the superclass' method is never called in our regular tests so maybe this is really straight bug with SimpleQueryParser? ",
            "id": "comment-15033939"
        },
        {
            "date": "2015-12-01T17:37:16+0000",
            "author": "Tom Hill",
            "content": "Right. The SimpleQueryParser has implementations of newFuzzyQuery and newPrefixQuery that just loop through the weights, and build a Boolean query.\n\nThe existing implementation for SimpleQParser in SimpleQParserPlugin does override newPrefixQuery to use the multi-term analysis chain. It does not call the base class implementation. (the base class is basically a loop and a new. I looked at using a lambda to share a bit more code, but I found that more confusing).\n\nThe problem I was trying to fix is that the existing implementation does not override newFuzzyQuery to use the muti-term analysis chain for fuzzy queries. So I basically duplicated what had been done for newPrefixQuery in SimpleQParser.\n ",
            "id": "comment-15034150"
        },
        {
            "date": "2015-12-01T17:40:24+0000",
            "author": "Tom Hill",
            "content": "To answer my Nov 19th comment:\n\nI don't think I need to do anything with setRewriteMethod for fuzzy queries. QueryParserBase has a newPrefixQuery() and a newFuzzyQuery(), and it does call setRewriteMethod in newPrefixQuery, but not in newFuzzyQuery.\n ",
            "id": "comment-15034166"
        },
        {
            "date": "2015-12-03T03:35:36+0000",
            "author": "Erick Erickson",
            "content": "OK. LGTM then. I'll check this in in a day or so unless someone objects. ",
            "id": "comment-15037191"
        },
        {
            "date": "2015-12-06T22:41:06+0000",
            "author": "Erick Erickson",
            "content": "Patch with CHANGES.txt entry ",
            "id": "comment-15044182"
        },
        {
            "date": "2015-12-06T22:41:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1718233 from Erick Erickson in branch 'dev/trunk'\n[ https://svn.apache.org/r1718233 ]\n\nSOLR-8318: SimpleQueryParser doesn't use MultiTermAnalysis for Fuzzy Queries. Thanks Tom ",
            "id": "comment-15044184"
        },
        {
            "date": "2015-12-07T01:22:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1718236 from Erick Erickson in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1718236 ]\n\nSOLR-8318: SimpleQueryParser doesn't use MultiTermAnalysis for Fuzzy Queries. Thanks Tom ",
            "id": "comment-15044240"
        },
        {
            "date": "2015-12-07T01:24:40+0000",
            "author": "Erick Erickson",
            "content": "Thanks Mr. Hill! ",
            "id": "comment-15044247"
        },
        {
            "date": "2016-02-15T15:31:22+0000",
            "author": "Cassandra Targett",
            "content": "Just FYI, the CHANGES.txt entry for this patch incorrectly references SOLR-8313 instead of SOLR-8318. The commit had the issue right, but CHANGES.txt does not. ",
            "id": "comment-15147490"
        }
    ]
}