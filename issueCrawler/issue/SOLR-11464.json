{
    "id": "SOLR-11464",
    "title": "Unused code in DistributedUpdateProcessor",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.2"
        ],
        "affect_versions": "master (8.0)",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "While reading code I ran across a couple of suspicious unused values/variables. Thought I would raise this so that folks can consider if something was lost here, or if perhaps we can eliminate an unnecessary call to zookeeper and tidy things up a bit. Screenshot and patch to eliminate shortly...",
    "attachments": {
        "unused.png": "https://issues.apache.org/jira/secure/attachment/12891404/unused.png",
        "SOLR_11464_SOLR_11493_DistributedUrp.patch": "https://issues.apache.org/jira/secure/attachment/12892896/SOLR_11464_SOLR_11493_DistributedUrp.patch",
        "SOLR-11464.patch": "https://issues.apache.org/jira/secure/attachment/12891412/SOLR-11464.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-11T02:02:06+0000",
            "content": "In the attached screen shot intellij is graying out 2 variables, the first is assigned a value that is never used thereafter, and the second is created and never used. ",
            "author": "Gus Heck",
            "id": "comment-16199691"
        },
        {
            "date": "2017-10-11T03:03:58+0000",
            "content": "Patch... I get test failures, but never the same failure twice in 3 runs.... the last 2 runs gave these 2. \n\n   [junit4] Tests with failures [seed: B463494894C3DC36]:\n   [junit4]   - org.apache.solr.cloud.autoscaling.ComputePlanActionTest.testNodeLost\n\nand \n\n   [junit4] Tests with failures [seed: A1D7C7A98F6442C9]:\n   [junit4]   - org.apache.solr.cloud.LeaderElectionContextKeyTest.test\n\nNone look related, but the tests seem generally unstable (this was true before this patch too), but I did get a success earlier today, which was the first time in half a dozen runs of test clean from the top. I do have the number of concurrent threads cranked up to try to take advantage of my new Threadripper processor... I guess I'll have to reduce it and see if that helps with stability ",
            "author": "Gus Heck",
            "id": "comment-16199731"
        },
        {
            "date": "2017-10-14T13:02:30+0000",
            "content": "I have since run the core tests (where all the failures occurred) with the default number of processors (4 instead of 30) and they passed on 7 rounds of beast and fail on the 8th .. I had a similar result without the patch.  ",
            "author": "Gus Heck",
            "id": "comment-16204623"
        },
        {
            "date": "2017-10-15T15:59:48+0000",
            "content": "The code here hasn't been changed substantially from SOLR-4997 (shard split) by Shalin Shekhar Mangar.  Shalin do you think there are side effects from these lines or should we just refactor them as Gus suggests?  If they need to be there, obviously there should be explicit comments to this effect.  Since such comments don't exist, I'm inclined to think Gus's simple refactoring is safe. ",
            "author": "David Smiley",
            "id": "comment-16205169"
        },
        {
            "date": "2017-10-15T16:21:48+0000",
            "content": "I'm inclined to think Gus's simple refactoring is safe.\n\nEven if it's shown there are no side-effects, Gus's other comment is the more important point IMO:\n\"Thought I would raise this so that folks can consider if something was lost here\" ",
            "author": "Yonik Seeley",
            "id": "comment-16205181"
        },
        {
            "date": "2017-10-15T16:49:54+0000",
            "content": "Thought I would raise this so that folks can consider if something was lost here\n\nLooking at git history \u2013 I don't think so; the original SOLR-4997 commit has this.  Only Shalin Shekhar Mangar could say if there was work in progress that explains how this code came to be. ",
            "author": "David Smiley",
            "id": "comment-16205200"
        },
        {
            "date": "2017-10-18T21:23:17+0000",
            "content": "I refactored this method further a little by reducing the indentation scope (return early if zkEnabled), and limit the scope of the local List<Node> nodes variable, and returning null where it would have been empty. In one place used Collections.singletonList (callers never modify the result so we can be immutable).\n\nThe tests passed with Gus's changes, and I'm running tests again now.  If it goes okay I'll commit it later.\n\n(maybe one CHANGES.txt entry for 11464 and 11493 with comment \"Minor refactorings to DistributedUrp\") ",
            "author": "David Smiley",
            "id": "comment-16210073"
        },
        {
            "date": "2017-10-19T00:19:07+0000",
            "content": "Commit 18c8091da5a35d6b0c19253b181b9e2468cd0a37 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=18c8091 ]\n\nSOLR-11464: SOLR-11493: Minor refactorings to DistributedUpdateProcessor ",
            "author": "ASF subversion and git services",
            "id": "comment-16210363"
        },
        {
            "date": "2017-10-19T00:23:57+0000",
            "content": "Commit d71df4c24a208562738d86c533d73ab9a619933a in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d71df4c ]\n\nSOLR-11464: SOLR-11493: Minor refactorings to DistributedUpdateProcessor\n\n(cherry picked from commit 18c8091da5a35d6b0c19253b181b9e2468cd0a37) ",
            "author": "ASF subversion and git services",
            "id": "comment-16210371"
        }
    ]
}