{
    "id": "LUCENE-4281",
    "title": "Delegate to default thread factory in NamedThreadFactory",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "3.6.1,                                            4.0-BETA,                                            6.0",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "currently we state that we yield the same behavior as Executors#defaultThreadFactory() but this behavior could change over time even if it is compatible. We should just delegate to the default thread factory instead of creating the threads ourself.",
    "attachments": {
        "LUCENE-4281.patch": "https://issues.apache.org/jira/secure/attachment/12538879/LUCENE-4281.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-08-02T08:09:26+0000",
            "content": "here is a patch ",
            "author": "Simon Willnauer",
            "id": "comment-13427163"
        },
        {
            "date": "2012-08-02T08:15:38+0000",
            "content": "I actually banned all methods from Executors that take the default thread factory in a patch where thread leaks are detected. It was for a reason \u2013 when trying to debug thread leaks it is virtually impossible to tell where a thread originated from because the default thread factory has a naming pattern that plain sucks. I'd insist that we don't use this:\n\n\n+  private static final ThreadFactory FACTORY = Executors.defaultThreadFactory();\n\n\n\nand rely on Lucene's NamedThreadFactory instead (passing a base name that at least tries to indicate what a given threadpool does). ",
            "author": "Dawid Weiss",
            "id": "comment-13427164"
        },
        {
            "date": "2012-08-02T08:17:33+0000",
            "content": "Uh, sorry \u2013 I see what you did now. Anything on your mind in particular when you talk about behavioral changes? ",
            "author": "Dawid Weiss",
            "id": "comment-13427165"
        },
        {
            "date": "2012-08-02T08:19:06+0000",
            "content": "I see the default one resets inherited priority and daemon status. Security manager I wouldn't worry about...\n\n            if (t.isDaemon())\n                t.setDaemon(false);\n            if (t.getPriority() != Thread.NORM_PRIORITY)\n                t.setPriority(Thread.NORM_PRIORITY);\n\n ",
            "author": "Dawid Weiss",
            "id": "comment-13427167"
        },
        {
            "date": "2012-08-02T10:08:37+0000",
            "content": "Uh, sorry \u2013 I see what you did now. Anything on your mind in particular when you talk about behavioral changes?\n\nI don't have anything in mind I just wanna replace logic with already existing logic that is \"guaranteed\" consistent with the documentation. This won't change anything really.\n ",
            "author": "Simon Willnauer",
            "id": "comment-13427224"
        },
        {
            "date": "2012-08-02T10:13:26+0000",
            "content": "This will require manual exclusion of that source file once the ban on Executors.defaultThreadFactory() is in. An alternate route is to change the documentation and not claim compatibility with defaultThreadFactory, instead just say that we create non-daemon threads with NORM_PRIORITY? ",
            "author": "Dawid Weiss",
            "id": "comment-13427228"
        },
        {
            "date": "2012-08-02T10:15:58+0000",
            "content": "This will require manual exclusion of that source file once the ban on Executors.defaultThreadFactory() is in\n\nThen we need a separate forbiddenApis.txt file...  ",
            "author": "Uwe Schindler",
            "id": "comment-13427230"
        },
        {
            "date": "2012-08-02T14:02:34+0000",
            "content": "+1 to the patch: the forbidden check is a 2nd priority. it can be a separate .txt file with its own ant fileset. ",
            "author": "Robert Muir",
            "id": "comment-13427328"
        },
        {
            "date": "2012-08-07T03:41:19+0000",
            "content": "rmuir20120906-bulk-40-change ",
            "author": "Robert Muir",
            "id": "comment-13429694"
        },
        {
            "date": "2013-07-23T18:44:49+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717068"
        },
        {
            "date": "2014-04-16T12:54:34+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970800"
        }
    ]
}