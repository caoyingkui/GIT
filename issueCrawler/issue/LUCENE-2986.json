{
    "id": "LUCENE-2986",
    "title": "divorce defaultsimilarityprovider from defaultsimilarity",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Task",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In LUCENE-2236 as a start, we made DefaultSimilarity which implements the factory interface (SimilarityProvider), and also extends Similarity.\n\nIts factory interface just returns itself always by default.\n\nDoron mentioned it would be cleaner to split the two, and I thought it would be good to revisit it later.\n\nToday as I was looking at SOLR-2338, it became pretty clear that we should do this, it makes things a lot cleaner. I think currently its confusing to users to see the two apis mixed if they are trying to subclass.",
    "attachments": {
        "LUCENE-2986.patch": "https://issues.apache.org/jira/secure/attachment/12474413/LUCENE-2986.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-03-23T16:50:09+0000",
            "content": "Attached is a patch: adds DefaultSimilarityProvider, which has our default implementations of the non-field-specific methods (coord/queryNorm/etc), and always returns DefaultSimilarity. ",
            "author": "Robert Muir",
            "id": "comment-13010215"
        },
        {
            "date": "2011-03-24T06:08:25+0000",
            "content": "+1 for this change (I did not remember discussing this, but other than remembering I am consistent )\n\nPatch looks very clean.\n\nMinor technical comments - concerning just some tests:\n\n\n\tsome of the DSP implementations are still named xyzSimilarity - I think it would be more clear to name them xyzSimilarityProvider:\n\t\n\t\to.a.l.search.payloads.TestPayloadNearQuery.BoostingSimilarity\n\t\to.a.l.search.payloads.TestPayloadTermQuery.BoostingSimilarity\n\t\to.a.solr.schema.MockConfigurableSimilarity\n\t\to.a.l.index.TestIndexWriterConfig.MySimilarity\n\t\to.a.l.index.TestIndexReaderCloneNorms.SimilarityOne\n\t\to.a.l.index.TestNorms.SimilarityOne\n\t\to.a.l.index.TestOmitTf.SimpleSimilarity\n\t\to.a.l.search.TestSimilarity.SimpleSimilarity\n\t\n\t\n\n\n\n\n\tfor few of the above it is not only the name - they are still doing both roles: \n\nextends DefaultSimilarity implements SimilarityProvider\n\n:\n\t\n\t\to.a.l.search.payloads.TestPayloadNearQuery.BoostingSimilarity\n\t\to.a.l.search.payloads.TestPayloadTermQuery.BoostingSimilarity\n\t\to.a.l.index.TestOmitTf.SimpleSimilarity\n\t\to.a.l.search.TestSimilarity.SimpleSimilarity\n\t\n\t\n\n\n\nOther than that I think it is good to go in.\n\nAlso, tests from trunk/lucene and trunk/solr passed.\n(I am seeing problems in running all trunk tests, at least on Windows, but I'll send a separate mail to the list on that) ",
            "author": "Doron Cohen",
            "id": "comment-13010570"
        },
        {
            "date": "2011-03-24T13:46:30+0000",
            "content": "Thanks, I agree the tests look messy/lazy... I'll fix these (well I think I would like to delay the solr one until SOLR-2338, i fixed the MockConfigurableSimilarity in that patch already) ",
            "author": "Robert Muir",
            "id": "comment-13010672"
        },
        {
            "date": "2011-03-25T14:01:30+0000",
            "content": "Committed revision 1085374.\n\nI cleaned up all the tests as Doron suggested, except for the solr MockConfigurableSimilarity as I discussed (since solr scoring is not yet per-field, but i have a patch for this that fixes the naming issues there too). ",
            "author": "Robert Muir",
            "id": "comment-13011204"
        }
    ]
}