{
    "id": "SOLR-12559",
    "title": "FunctionQParser.FLAG_USE_FIELDNAME_SOURCE doesn't work when subparsers are involved",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Facet Module"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "While working on a patch dealing with json facet syntax parsing, i was trying to write a test verifying the equivalence of 2 json facet requests that should be identical and discovered that when SOLR-10613 was implemented to defer the parsing of field names via FieldNameValueSource the implementation did not account for the invocation of sub parsers via param references.\n\nspecifically \u2013 this json facet request will produce two AggValueSources which are not equals()...\n\n\ncurl http://localhost:8983/solr/query -d 'q=*:*&my_field=foo_i&\njson.facet={\n  x : \"min(foo_i)\",\n  y : \"min($my_field)\"\n}'\n\n\n\n\"x\" uses FieldNameValueSource while \"y\" directly uses an IntValueSource\n\n(It's not immediately obvious to me if this currently causes any user visible bugs or performance hicups, but it will definitely be problematic for users once we add support for min(multivalued_field_i) )",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-17T18:12:57+0000",
            "content": "No trivially fix jumped out at me, because the \"flags\" used by FunctionQParser aren't an object property that can be set on the subprocessor ... they are only passed as a param directly to parseValueSource ",
            "author": "Hoss Man",
            "id": "comment-16546963"
        }
    ]
}