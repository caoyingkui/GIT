{
    "id": "SOLR-12590",
    "title": "Improve Solr resource loader coverage in the ref guide",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "documentation"
        ],
        "type": "Task",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In SolrCloud, storing large resources (e.g. binary machine learned models) on the local filesystem should be a viable alternative to increasing ZooKeeper's max file size limit (1MB), but there are undocumented complications.",
    "attachments": {
        "SOLR-12590.patch": "https://issues.apache.org/jira/secure/attachment/12933037/SOLR-12590.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-25T11:23:15+0000",
            "content": "Patch improving coverage.  Feedback is welcome.\n\nI renamed lib-directives-in-solrconfig.adoc to resource-and-plugin-loading.adoc, modified all of the references to it that I could find, and added info about how the resource loader works.\n\nCassandra Targett: if you have a chance, I'd appreciate a review.  In particular, the renamed file is still a page child of configuring-solrconfig-xml.adoc, but the added information is mostly not about solrconfig.xml.  Doesn't seem to me like the content should be split apart, but maybe the page should be located somewhere else?\n\nChristine Poerschke: I didn't change the learning-to-rank large model discussion to point to local storage as an alternative, but I think it should be applicable; I haven't tried myself.  SOLR-11250 introduced a wrapper model concept, but is it possible that that indirection is not necessary? ",
            "author": "Steve Rowe",
            "id": "comment-16555531"
        },
        {
            "date": "2018-07-25T14:43:05+0000",
            "content": "test ",
            "author": "Steve Rowe",
            "id": "comment-16555776"
        },
        {
            "date": "2018-07-27T18:27:00+0000",
            "content": "... added info about how the resource loader works. ... the learning-to-rank large model discussion to point to local storage as an alternative, but I think it should be applicable; I haven't tried myself. ... is it possible that that indirection is not necessary?\n\nGood question. In your patch the \"Resources in ConfigSets on ZooKeeper\" lead paragraph is:\n\nUnder SolrCloud, resources to be loaded are first looked up in ZooKeeper under the collection's configset znode.  If the resource isn't found there, Solr will fall back to loading resources from the filesystem.\n\nA nicely concise and clear lead paragraph, I like it. Side question: was this fallback logic 'always' there (and I just didn't know about it, oops) or is it something introduced in a recent-ish version?\n\nEither way, if the documentation provides one recommended way of doing things that should be clearest from a user's point of view. So yes, if the wrapper model concept is not or no longer needed then let's not mention it in the documentation. ",
            "author": "Christine Poerschke",
            "id": "comment-16560103"
        },
        {
            "date": "2018-07-27T18:41:09+0000",
            "content": "\nUnder SolrCloud, resources to be loaded are first looked up in ZooKeeper under the collection's configset znode. If the resource isn't found there, Solr will fall back to loading resources from the filesystem.\nA nicely concise and clear lead paragraph, I like it. Side question: was this fallback logic 'always' there (and I just didn't know about it, oops) or is it something introduced in a recent-ish version?\n\nI think it's always been there.  The comment below (positioned after failing to load a resource from ZooKeeper), dates to 2010, when SolrCloud was committed to Subversion trunk (SOLR-1873):\n\nZkZolrResourceLoader.openResource() (branch_7x)\n121:    try {\n122:      // delegate to the class loader (looking into $INSTANCE_DIR/lib jars)\n123:      is = classLoader.getResourceAsStream(resource.replace(File.separatorChar, '/'));\n\n\n\nSo yes, if the wrapper model concept is not or no longer needed then let's not mention it in the documentation.\n\nDo you have the bandwidth to test this assertion?  I'd rather not remove docs unless we can verify the alternative. ",
            "author": "Steve Rowe",
            "id": "comment-16560124"
        },
        {
            "date": "2018-07-30T17:38:46+0000",
            "content": "... I'd rather not remove docs unless we can verify the alternative.\n\n+1 to that. A test case specifically for this would seem the ideal/repeatable way to verify it.\n\n... Do you have the bandwidth to test this assertion? ...\n\nHappy to give it a go. ",
            "author": "Christine Poerschke",
            "id": "comment-16562204"
        },
        {
            "date": "2018-07-31T20:34:43+0000",
            "content": "I finally got a chance (and remembered!) to review this. \n\nMy first reaction when I saw the patch was that I wasn't sure about changing the name of the page...the new name is more descriptive of the topic discussed, but there was a reason why all its sibling pages (those under \"Configuring solrconfig.xml\") include \"SolrConfig\" in their names, which was to make it clear they all referred to settings and parameters in solrconfig.xml (long, long ago everything there was in a single page). I don't know that makes sense any more - frankly, I think I was just holding on to it as a historical artifact that probably means very little to anyone else anymore. So, no problems on the page name change.\n\nA couple other things about the content specifically:\n\n\n\tI think we're missing a bit of intro into what we mean by resources here - custom query parser or other type of component jars? files needed by schema classes? LTR models? - as a paragraph before any of the headings start. Just to set expectations.\n\tThe first section, \"Resources in ConfigSets on ZooKeeper\", feels empty to me. Is it worth mentioning the blob store here (and pointing to it) even though it can only be used for jars, and also mentioning that some resources could be uploaded to ZK (and pointing to that doc in setting-up-an-external-zookeeper-ensemble.adoc)? Upon reading it seems like the first section is supposed to lead into the second, but people sometimes read these things in a more piecemeal way - the first section doesn't answer the question and they're using ZK, so presume there is no answer to the question.\n\tEssentially it feels like we're setting up two ways of dealing with \"large files\" in SolrCloud mode (which was the impetus here): upload them to ZK, or put them on every node. We should state that explicitly, even if one approach is only linked to instead of described on the new page.\n\n\n\nThe page is better, but I think we're missing a couple more ways we can tie all the options together. ",
            "author": "Cassandra Targett",
            "id": "comment-16564343"
        },
        {
            "date": "2018-08-02T17:16:38+0000",
            "content": "Oh, also, FYI, the patch doesn't apply anymore after the changes committed with SOLR-11870. ",
            "author": "Cassandra Targett",
            "id": "comment-16567104"
        },
        {
            "date": "2018-08-10T19:25:27+0000",
            "content": "\n\n... Do you have the bandwidth to test this assertion? ...\n\nHmm, ok, so i've explored reaching the // delegate to the class loader (looking into $INSTANCE_DIR/lib jars) code path in ZkSolrResourceLoader for large learning-to-rank models, and, well, here's just some notes from that really:\n\n\n\tWe have a ManagedModelStore using \"/schema/model-store\" as the REST endpoint. Conceptually, if the model store itself wasn't there (in ZooKeeper) then in principle looking elsewhere locally might be an option; having said that:\n\t\n\t\tif there is a (small) model store then perhaps one would wish to keep that and any alternative additional (large) model store should be separate.\n\t\tSolrResourceLoader has a managedResourceRegistry but it's not immediately obvious from a quick look if ZkSolrResourceLoader (or something else) has an equivalent which would look locally if it's not there in ZooKeeper.\n\t\n\t\n\n\n\n\n\tModels use features and we have a ManagedFeatureStore using \"/schema/feature-store\" as the REST endpoint.\n\t\n\t\tIf there was a concept of a (small/regular) model store in ZooKeeper and an (additional/larger) model store locally, then similarly an additional large feature store locally might be logical.\n\t\tIn such a hypothetical scenario, could models in the large model store use feature from the small feature store, and vice versa? What if both places have models with the same name?\n\t\tCurrent code detail: features are conceptually organised into feature stores akin to namespaces\nbut in terms of implementation they are all persisted in the same place i.e. _schema_feature-store.json matching the \"/schema/feature-store\" upload REST endpoint.\n\t\n\t\n\n\n\nSo from this exploration I think the wrapper model concept introduced in SOLR-11250 is currently the only way to support large models (without changing ZooKeeper's max file size limit). ",
            "author": "Christine Poerschke",
            "id": "comment-16576762"
        },
        {
            "date": "2018-08-10T20:21:45+0000",
            "content": "So from this exploration I think the wrapper model concept introduced in SOLR-11250 is currently the only way to support large models (without changing ZooKeeper's max file size limit).\n\nThanks for the analysis Christine, I'll leave the wrapper model docs intact then. ",
            "author": "Steve Rowe",
            "id": "comment-16576803"
        },
        {
            "date": "2018-08-17T03:24:43+0000",
            "content": "Thanks Cassandra Targett for the review.  The attached patch incorporates your suggestions.  I'd appreciate another look when you have time. ",
            "author": "Steve Rowe",
            "id": "comment-16583308"
        },
        {
            "date": "2018-08-23T13:27:57+0000",
            "content": "I took a look at the new patch - +1 overall. IMO it's ready to commit whenever you're ready. Thanks. ",
            "author": "Cassandra Targett",
            "id": "comment-16590208"
        },
        {
            "date": "2018-08-23T18:36:53+0000",
            "content": "Commit 523295666f4a7360f09a30cb006153f8b9c2f9bf in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5232956 ]\n\nSOLR-12590: Improve Solr resource loader coverage in the ref guide ",
            "author": "ASF subversion and git services",
            "id": "comment-16590667"
        },
        {
            "date": "2018-08-23T18:36:55+0000",
            "content": "Commit 95cb7aa491f5659084852ec29f52cc90cd7ea35c in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=95cb7aa ]\n\nSOLR-12590: Improve Solr resource loader coverage in the ref guide ",
            "author": "ASF subversion and git services",
            "id": "comment-16590668"
        },
        {
            "date": "2018-08-23T18:37:44+0000",
            "content": "Committed.  Thanks Cassandra Targett and Christine Poerschke! ",
            "author": "Steve Rowe",
            "id": "comment-16590669"
        },
        {
            "date": "2018-08-25T03:09:43+0000",
            "content": "Commit 95cb7aa491f5659084852ec29f52cc90cd7ea35c in lucene-solr's branch refs/heads/jira/http2 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=95cb7aa ]\n\nSOLR-12590: Improve Solr resource loader coverage in the ref guide ",
            "author": "ASF subversion and git services",
            "id": "comment-16592412"
        }
    ]
}