{
    "id": "LUCENE-7698",
    "title": "CommonGramsQueryFilter in the query analyzer chain breaks phrase queries",
    "details": {
        "labels": "",
        "priority": "Blocker",
        "resolution": "Fixed",
        "affect_versions": "6.4,                                            6.4.1",
        "status": "Resolved",
        "type": "Bug",
        "components": [
            "core/queryparser"
        ],
        "fix_versions": [
            "6.4.2",
            "7.0"
        ]
    },
    "description": "(Please pardon me if the project or component are wrong!)\n\nCommonGramsQueryFilter breaks phrase queries. The behavior also seems to change with addition or removal of adjacent terms.\n\nSteps to reproduce:\n\n1.) Download and extract Solr (in my test case version 6.4.1) somewhere.\n2.) Modify server/solr/configsets/sample_techproducts_configs/conf/managed-schema and modify text_general fieldType by adding CommonGrams(Query)Filter before stopWordFilter:\n\n    <fieldType name=\"text_general\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n      <analyzer type=\"index\">\n        <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n        <filter class=\"solr.CommonGramsFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />\n        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />\n        <!-- in this example, we will only use synonyms at query time\n        <filter class=\"solr.SynonymFilterFactory\" synonyms=\"index_synonyms.txt\" ignoreCase=\"true\" expand=\"false\"/>\n        -->\n        <filter class=\"solr.LowerCaseFilterFactory\"/>\n      </analyzer>\n      <analyzer type=\"query\">\n        <tokenizer class=\"solr.StandardTokenizerFactory\"/>\n        <filter class=\"solr.CommonGramsQueryFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\"/>\n        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />\n        <filter class=\"solr.SynonymFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>\n        <filter class=\"solr.LowerCaseFilterFactory\"/>\n      </analyzer>\n    </fieldType>\n\n3.) Add \"with\" to server/solr/configsets/sample_techproducts_configs/conf/stopwords.txt and make sure the file has correct line endings (extracted from Solr zip it seems to contain DOS/Windows lien endings which may break things).\n\n4.) Run the techproducts example with \"bin/solr -e techproducts\"\n\n5.) Browse to <http://localhost:8983/solr/techproducts/select?q=%22iPod%20with%20Video%22&debugQuery=true>\n\n6.) Observe that parsedquery in the debug output is empty\n\n7.) Browse to <http://localhost:8983/solr/techproducts/select?q=%22Apple%2060%20GB%20iPod%20with%20Video%20Playback%20Black%22&debugQuery=true>\n\n8.) Observe that parsedquery contains ipod_with as expected but not with_video.",
    "attachments": {
        "LUCENE-7698.patch": "https://issues.apache.org/jira/secure/attachment/12853280/LUCENE-7698.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15871485",
            "date": "2017-02-17T09:07:12+0000",
            "content": "This seems to be a regression in Solr 6.4.0. At least a quick test shows correct results in 6.3.0. ",
            "author": "Ere Maijala"
        },
        {
            "id": "comment-15871575",
            "date": "2017-02-17T09:59:30+0000",
            "content": "Looks to me like LUCENE-7603 broke this. ",
            "author": "Ere Maijala"
        },
        {
            "id": "comment-15871620",
            "date": "2017-02-17T10:34:20+0000",
            "content": "Hmm, no good, sorry about this ... thank you for reporting this Ere Maijala; I'll try to make a Lucene test case showing this. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15871777",
            "date": "2017-02-17T12:30:17+0000",
            "content": "OK I see what's happening: this filter (CommonGramsQueryFilter) deletes the unigram tokens, but keeps posLength=2 on the bigram tokens, which makes a disconnected graph, and then the query parser does the wrong thing.\n\nI think the right fix is for it to set posLength to 1 when it drops unigram tokens .. I'll work on a patch. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15872029",
            "date": "2017-02-17T16:03:59+0000",
            "content": "OK here's a patch fixing CommonGraphsQueryFilter to not create a disconnected graph.  Ere Maijala could you please try this and see if it fixes your use case?  Thanks.\n\nI also added an experimental option to QueryBuilder (base class for query parsers) to disable graph handling, as a safety for other tokenizer components that may create disconnected graphs. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15874209",
            "date": "2017-02-20T08:35:03+0000",
            "content": "Michael McCandless, thanks for the fix. An initial check indicates that the patch fixes my use case. I ran the tests in branch_6x. The patch didn't quite apply cleanly to branch_6_4 and after applying manually a test didn't compile:\n\n\ncommon.compile-test:\n    [mkdir] Created dir: /Users/eremaijala/src/solr/lucene/build/analysis/common/classes/test\n    [javac] Compiling 279 source files to /Users/eremaijala/src/solr/lucene/build/analysis/common/classes/test\n    [javac] /Users/eremaijala/src/solr/lucene/analysis/common/src/test/org/apache/lucene/analysis/commongrams/TestCommonGramsQueryFilterFactory.java:103: error: cannot find symbol\n    [javac]     assertGraphStrings(stream, \"testing_the the_factory factory works\");\n    [javac]     ^\n    [javac]   symbol:   method assertGraphStrings(TokenStream,String)\n    [javac]   location: class TestCommonGramsQueryFilterFactory\n    [javac] Note: Some input files use or override a deprecated API.\n    [javac] Note: Recompile with -Xlint:deprecation for details.\n    [javac] 1 error\n\n ",
            "author": "Ere Maijala"
        },
        {
            "id": "comment-15877886",
            "date": "2017-02-22T09:58:08+0000",
            "content": "OK thanks for confirming Ere Maijala; I'll fix that test on back port. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15877916",
            "date": "2017-02-22T10:17:01+0000",
            "content": "Commit b9c9cddff7cef08e8b0433a203771e48e662e7b1 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b9c9cdd ]\n\nLUCENE-7698: fix CommonGramsQueryFilter to not produce a disconnected token graph ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15877919",
            "date": "2017-02-22T10:18:32+0000",
            "content": "Commit d8e493c502d234099c927339426dfe4a01a94219 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d8e493c ]\n\nLUCENE-7698: fix CommonGramsQueryFilter to not produce a disconnected token graph ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15877989",
            "date": "2017-02-22T10:54:14+0000",
            "content": "Commit 92ff8682b281a28f40826de4b94548671e580bd8 in lucene-solr's branch refs/heads/branch_6_4 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=92ff868 ]\n\nLUCENE-7698: fix CommonGramsQueryFilter to not produce a disconnected token graph ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15877991",
            "date": "2017-02-22T10:55:46+0000",
            "content": "Thank you Ere Maijala! ",
            "author": "Michael McCandless"
        }
    ]
}