{
    "id": "LUCENE-3502",
    "title": "Packed ints: move .getArray into Reader API",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is a simple code cleanup... it's messy that a consumer of\nPackedInts.Reader must check whether the impl is Direct8/16/32/64 in\norder to get an array; it's better to move up the .getArray into the\nReader interface and then make the DirectN impls package private.",
    "attachments": {
        "LUCENE-3502.patch": "https://issues.apache.org/jira/secure/attachment/12498414/LUCENE-3502.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-10-10T12:41:03+0000",
            "content": "mike this looks good. Can we rename getNativeArray to getArray? this seems more consistent to what we have in IDV and what java has in ByteBuffer etc. I also think we should have a boolean hasArray() for consistency, or did I miss it?\n\nsimon ",
            "author": "Simon Willnauer",
            "id": "comment-13124043"
        },
        {
            "date": "2011-10-10T13:07:15+0000",
            "content": "OK I'll rename to getArray.\n\nOn the .hasArray \u2013 why do we need that?  Can't we just have .getArray and it returns null if there is none?  (None of these classes have a \"costly\" .getArray impl).  Likewise for DocValues... ",
            "author": "Michael McCandless",
            "id": "comment-13124064"
        },
        {
            "date": "2011-10-10T13:12:18+0000",
            "content": "I like the hasArray for API consistency with ByteBuffer etc too (same with Docvalues). ",
            "author": "Robert Muir",
            "id": "comment-13124067"
        },
        {
            "date": "2011-10-10T13:14:26+0000",
            "content": "I like the hasArray for API consistency with ByteBuffer etc too (same with Docvalues).\nconsistency is good and you might need a hasArray() for future docvalues impls or subclasses that compute it? ",
            "author": "Simon Willnauer",
            "id": "comment-13124070"
        },
        {
            "date": "2011-10-10T13:15:06+0000",
            "content": "OK I agree, I'll put the .hasArray back. ",
            "author": "Michael McCandless",
            "id": "comment-13124072"
        },
        {
            "date": "2011-10-10T13:52:04+0000",
            "content": "New patch, using .hasArray/getArray. ",
            "author": "Michael McCandless",
            "id": "comment-13124107"
        },
        {
            "date": "2011-10-10T15:25:49+0000",
            "content": "looks good mike! ",
            "author": "Simon Willnauer",
            "id": "comment-13124167"
        },
        {
            "date": "2011-10-10T17:02:20+0000",
            "content": "Removing 3.5 fix version... I keep forgetting packed ints aren't backported yet.\n\nBut for LUCENE-2205 we have to make sure we sync to trunk when we backport it. ",
            "author": "Michael McCandless",
            "id": "comment-13124294"
        },
        {
            "date": "2011-10-10T17:02:34+0000",
            "content": "Thanks Simon and Robert. ",
            "author": "Michael McCandless",
            "id": "comment-13124295"
        }
    ]
}