{
    "id": "LUCENE-5732",
    "title": "Possible order violation in lucene library version 2.4.1",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "core/store"
        ],
        "affect_versions": "2.4.1",
        "status": "Open",
        "fix_versions": []
    },
    "description": "Hi,\n\nI am working on a research project on data race detection, and am using the DaCapo benchmarks for evaluation. I am using the benchmark lusearch from the 2009 suite, which uses lucene library 2.4.1.\n\nFor one test case, I am monitoring a pair of accesses\nsay, Lorg/apache/lucene/store/Directory;.<init> ()V:40(6) and\nLorg/apache/lucene/store/FSDirectory;.close ()V:524(1). The format is <class name>.<method name> <method desc>:line(byte code index).\n\nDuring my work, I am getting AlreadyClosedExceptions on the FSDirectory from the ensureOpen() method for some threads, which I think is probably due to an order violation. I have actually introduced delays\nin my instrumentation which delays threads that execute the code in\nLorg/apache/lucene/store/FSDirectory;.close ()V. This is causing the other query threads to throw an exception.\n\nHere is the exception trace:\n\norg.apache.lucene.store.AlreadyClosedException: this Directory is closed\n   at org.apache.lucene.store.Directory.ensureOpen(Directory.java:220)\n   at org.apache.lucene.store.FSDirectory.list(FSDirectory.java:320)\n   at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:533)\n   at org.apache.lucene.index.DirectoryIndexReader.open(DirectoryIndexReader.java:115)\n   at org.apache.lucene.index.IndexReader.open(IndexReader.java:316)\n   at org.apache.lucene.index.IndexReader.open(IndexReader.java:206)\n   at org.dacapo.lusearch.Search$QueryProcessor.<init>(Search.java:207)\n   at org.dacapo.lusearch.Search$QueryThread.run(Search.java:179)\norg.apache.lucene.store.AlreadyClosedException: this Directory is closed\n   at org.apache.lucene.store.Directory.ensureOpen(Directory.java:220)\n   at org.apache.lucene.store.FSDirectory.list(FSDirectory.java:320)\n   at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:533)\n   at org.apache.lucene.index.DirectoryIndexReader.open(DirectoryIndexReader.java:115)\n   at org.apache.lucene.index.IndexReader.open(IndexReader.java:316)\n   at org.apache.lucene.index.IndexReader.open(IndexReader.java:206)\n   at org.dacapo.lusearch.Search$QueryProcessor.<init>(Search.java:207)\n   at org.dacapo.lusearch.Search$QueryThread.run(Search.java:179)\njava.lang.NullPointerException\n   at org.dacapo.lusearch.Search$QueryProcessor.run(Search.java:226)\n   at org.dacapo.lusearch.Search$QueryThread.run(Search.java:179)\njava.lang.NullPointerException\n   at org.dacapo.lusearch.Search$QueryProcessor.run(Search.java:226)\n   at org.dacapo.lusearch.Search$QueryThread.run(Search.java:179)\norg.apache.lucene.store.AlreadyClosedException: this Directory is closed\n   at org.apache.lucene.store.Directory.ensureOpen(Directory.java:220)\n   at org.apache.lucene.store.FSDirectory.list(FSDirectory.java:320)\n   at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:533)\n   at org.apache.lucene.index.DirectoryIndexReader.open(DirectoryIndexReader.java:115)\n   at org.apache.lucene.index.IndexReader.open(IndexReader.java:316)\n   at org.apache.lucene.index.IndexReader.open(IndexReader.java:206)\n   at org.dacapo.lusearch.Search$QueryProcessor.<init>(Search.java:207)\n   at org.dacapo.lusearch.Search$QueryThread.run(Search.java:179)\njava.lang.NullPointerException\n   at org.dacapo.lusearch.Search$QueryProcessor.run(Search.java:226)\n   at org.dacapo.lusearch.Search$QueryThread.run(Search.java:179)\n\nThis exception does not happen during normal instrumentation, but can easily be reproduced by introducing just delays in the instrumentation.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}