{
    "id": "LUCENE-8432",
    "title": "Stop calling comparator even if early termination is not possible",
    "details": {
        "components": [
            "core/search"
        ],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "7.3",
        "labels": "",
        "priority": "Minor",
        "type": "Improvement"
    },
    "description": "TopFieldCollector continues calling comparator.compareBottom even if result is known in advance due to document order when trackMaxScore or trackTotalHits is set.\n\nComparator call is not very cheap because it can involve DV read from disk and\u00a0all\u00a0calls can be avoided after first non competitive segment document is reached.\n\nThere is a patch and luceneutil report on wikimedium10m sorted by DayOfYear:\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TaskQPS baseline\u00a0 \u00a0 \u00a0 StdDev \u00a0 QPS patch\u00a0 \u00a0 \u00a0 StdDev\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Pct diff\n\u00a0\u00a0 \u00a0 \u00a0 HighTermMonthSort\u00a0 \u00a0 \u00a0 226.04\u00a0 \u00a0 \u00a0 (6.3%)\u00a0 \u00a0 \u00a0 215.33\u00a0 \u00a0 \u00a0 (4.3%) \u00a0 -4.7% ( -14% -\u00a0 \u00a0 6%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LowTerm\u00a0 \u00a0 \u00a0 933.27\u00a0 \u00a0 \u00a0 (5.5%)\u00a0 \u00a0 \u00a0 924.62\u00a0 \u00a0 \u00a0 (4.2%) \u00a0 -0.9% ( -10% -\u00a0 \u00a0 9%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrNotHighLow\u00a0 \u00a0 \u00a0 945.68\u00a0 \u00a0 \u00a0 (5.7%)\u00a0 \u00a0 \u00a0 939.12\u00a0 \u00a0 \u00a0 (4.5%) \u00a0 -0.7% ( -10% - \u00a0 10%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MedSpanNear \u00a0 \u00a0 \u00a0 28.76\u00a0 \u00a0 \u00a0 (1.4%) \u00a0 \u00a0 \u00a0 28.61\u00a0 \u00a0 \u00a0 (1.5%) \u00a0 -0.5% (\u00a0 -3% -\u00a0 \u00a0 2%)\nBrowseDayOfYearSSDVFacets \u00a0 \u00a0 \u00a0 16.36\u00a0 \u00a0 \u00a0 (5.0%) \u00a0 \u00a0 \u00a0 16.29\u00a0 \u00a0 \u00a0 (4.5%) \u00a0 -0.4% (\u00a0 -9% -\u00a0 \u00a0 9%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AndHighMed\u00a0 \u00a0 \u00a0 112.30\u00a0 \u00a0 \u00a0 (2.9%)\u00a0 \u00a0 \u00a0 111.96\u00a0 \u00a0 \u00a0 (1.6%) \u00a0 -0.3% (\u00a0 -4% -\u00a0 \u00a0 4%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LowSpanNear \u00a0 \u00a0 \u00a0 12.42\u00a0 \u00a0 \u00a0 (1.5%) \u00a0 \u00a0 \u00a0 12.38\u00a0 \u00a0 \u00a0 (1.6%) \u00a0 -0.3% (\u00a0 -3% -\u00a0 \u00a0 2%)\n\u00a0 \u00a0 \u00a0 \u00a0 HighSloppyPhrase \u00a0 \u00a0 \u00a0 18.66\u00a0 \u00a0 \u00a0 (3.9%) \u00a0 \u00a0 \u00a0 18.62\u00a0 \u00a0 \u00a0 (4.0%) \u00a0 -0.2% (\u00a0 -7% -\u00a0 \u00a0 7%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MedPhrase\u00a0 \u00a0 \u00a0 219.40\u00a0 \u00a0 \u00a0 (2.7%)\u00a0 \u00a0 \u00a0 219.06\u00a0 \u00a0 \u00a0 (2.7%) \u00a0 -0.2% (\u00a0 -5% -\u00a0 \u00a0 5%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrNotHighMed\u00a0 \u00a0 \u00a0 222.88\u00a0 \u00a0 \u00a0 (3.2%)\u00a0 \u00a0 \u00a0 222.63\u00a0 \u00a0 \u00a0 (3.4%) \u00a0 -0.1% (\u00a0 -6% -\u00a0 \u00a0 6%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AndHighLow\u00a0 \u00a0 \u00a0 521.59\u00a0 \u00a0 \u00a0 (3.5%)\u00a0 \u00a0 \u00a0 521.02\u00a0 \u00a0 \u00a0 (4.5%) \u00a0 -0.1% (\u00a0 -7% -\u00a0 \u00a0 8%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 MedSloppyPhrase \u00a0 \u00a0 \u00a0 16.71\u00a0 \u00a0 \u00a0 (4.7%) \u00a0 \u00a0 \u00a0 16.70\u00a0 \u00a0 \u00a0 (4.7%) \u00a0 -0.0% (\u00a0 -8% -\u00a0 \u00a0 9%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LowPhrase \u00a0 \u00a0 \u00a0 15.58\u00a0 \u00a0 \u00a0 (2.5%) \u00a0 \u00a0 \u00a0 15.59\u00a0 \u00a0 \u00a0 (2.9%)\u00a0 \u00a0 0.0% (\u00a0 -5% -\u00a0 \u00a0 5%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Respell \u00a0 \u00a0 \u00a0 92.05\u00a0 \u00a0 \u00a0 (2.4%) \u00a0 \u00a0 \u00a0 92.19\u00a0 \u00a0 \u00a0 (3.0%)\u00a0 \u00a0 0.2% (\u00a0 -5% -\u00a0 \u00a0 5%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HighSpanNear \u00a0 \u00a0 \u00a0 17.03\u00a0 \u00a0 \u00a0 (2.2%) \u00a0 \u00a0 \u00a0 17.06\u00a0 \u00a0 \u00a0 (2.1%)\u00a0 \u00a0 0.2% (\u00a0 -4% -\u00a0 \u00a0 4%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HighPhrase \u00a0 \u00a0 \u00a0 37.85\u00a0 \u00a0 \u00a0 (5.8%) \u00a0 \u00a0 \u00a0 37.92\u00a0 \u00a0 \u00a0 (5.9%)\u00a0 \u00a0 0.2% ( -10% - \u00a0 12%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrHighNotLow\u00a0 \u00a0 \u00a0 118.25\u00a0 \u00a0 \u00a0 (2.9%)\u00a0 \u00a0 \u00a0 118.47\u00a0 \u00a0 \u00a0 (3.5%)\u00a0 \u00a0 0.2% (\u00a0 -6% -\u00a0 \u00a0 6%)\n\u00a0\u00a0 BrowseMonthTaxoFacets\u00a0 \u00a0 \u00a0 \u00a0 2.94\u00a0 \u00a0 \u00a0 (0.4%)\u00a0 \u00a0 \u00a0 \u00a0 2.94\u00a0 \u00a0 \u00a0 (0.8%)\u00a0 \u00a0 0.2% ( \u00a0 0% -\u00a0 \u00a0 1%)\n\u00a0 \u00a0 BrowseDateTaxoFacets\u00a0 \u00a0 \u00a0 \u00a0 2.75\u00a0 \u00a0 \u00a0 (0.3%)\u00a0 \u00a0 \u00a0 \u00a0 2.75\u00a0 \u00a0 \u00a0 (1.6%)\u00a0 \u00a0 0.3% (\u00a0 -1% -\u00a0 \u00a0 2%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 LowSloppyPhrase\u00a0 \u00a0 \u00a0 105.28\u00a0 \u00a0 \u00a0 (2.3%)\u00a0 \u00a0 \u00a0 105.60\u00a0 \u00a0 \u00a0 (2.5%)\u00a0 \u00a0 0.3% (\u00a0 -4% -\u00a0 \u00a0 5%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Prefix3\u00a0 \u00a0 \u00a0 122.07\u00a0 \u00a0 \u00a0 (6.8%)\u00a0 \u00a0 \u00a0 122.55\u00a0 \u00a0 \u00a0 (6.5%)\u00a0 \u00a0 0.4% ( -12% - \u00a0 14%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrNotHighHigh \u00a0 \u00a0 \u00a0 55.07\u00a0 \u00a0 \u00a0 (3.8%) \u00a0 \u00a0 \u00a0 55.29\u00a0 \u00a0 \u00a0 (4.5%)\u00a0 \u00a0 0.4% (\u00a0 -7% -\u00a0 \u00a0 8%)\n\u00a0\u00a0 BrowseMonthSSDVFacets \u00a0 \u00a0 \u00a0 20.88\u00a0 \u00a0 \u00a0 (7.2%) \u00a0 \u00a0 \u00a0 20.99\u00a0 \u00a0 \u00a0 (7.5%)\u00a0 \u00a0 0.5% ( -13% - \u00a0 16%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrHighNotHigh \u00a0 \u00a0 \u00a0 58.40\u00a0 \u00a0 \u00a0 (4.2%) \u00a0 \u00a0 \u00a0 58.72\u00a0 \u00a0 \u00a0 (4.8%)\u00a0 \u00a0 0.6% (\u00a0 -8% -\u00a0 \u00a0 9%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Wildcard \u00a0 \u00a0 \u00a0 79.87\u00a0 \u00a0 \u00a0 (3.7%) \u00a0 \u00a0 \u00a0 80.31\u00a0 \u00a0 \u00a0 (4.0%)\u00a0 \u00a0 0.6% (\u00a0 -6% -\u00a0 \u00a0 8%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrHighMed \u00a0 \u00a0 \u00a0 13.25\u00a0 \u00a0 \u00a0 (4.3%) \u00a0 \u00a0 \u00a0 13.34\u00a0 \u00a0 \u00a0 (4.9%)\u00a0 \u00a0 0.6% (\u00a0 -8% - \u00a0 10%)\nBrowseDayOfYearTaxoFacets\u00a0 \u00a0 \u00a0 \u00a0 2.73\u00a0 \u00a0 \u00a0 (0.6%)\u00a0 \u00a0 \u00a0 \u00a0 2.75\u00a0 \u00a0 \u00a0 (1.6%)\u00a0 \u00a0 0.7% (\u00a0 -1% -\u00a0 \u00a0 2%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrHighHigh \u00a0 \u00a0 \u00a0 22.03\u00a0 \u00a0 \u00a0 (4.1%) \u00a0 \u00a0 \u00a0 22.19\u00a0 \u00a0 \u00a0 (4.9%)\u00a0 \u00a0 0.7% (\u00a0 -8% - \u00a0 10%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AndHighHigh \u00a0 \u00a0 \u00a0 23.46\u00a0 \u00a0 \u00a0 (2.1%) \u00a0 \u00a0 \u00a0 23.63\u00a0 \u00a0 \u00a0 (1.9%)\u00a0 \u00a0 0.7% (\u00a0 -3% -\u00a0 \u00a0 4%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PKLookup\u00a0 \u00a0 \u00a0 145.59\u00a0 \u00a0 \u00a0 (4.2%)\u00a0 \u00a0 \u00a0 146.66\u00a0 \u00a0 \u00a0 (4.3%)\u00a0 \u00a0 0.7% (\u00a0 -7% -\u00a0 \u00a0 9%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MedTerm\u00a0 \u00a0 \u00a0 171.13\u00a0 \u00a0 \u00a0 (5.0%)\u00a0 \u00a0 \u00a0 172.43\u00a0 \u00a0 \u00a0 (5.1%)\u00a0 \u00a0 0.8% (\u00a0 -8% - \u00a0 11%)\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrHighLow\u00a0 \u00a0 \u00a0 119.22\u00a0 \u00a0 \u00a0 (2.8%)\u00a0 \u00a0 \u00a0 120.23\u00a0 \u00a0 \u00a0 (3.1%)\u00a0 \u00a0 0.8% (\u00a0 -4% -\u00a0 \u00a0 6%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OrHighNotMed \u00a0 \u00a0 \u00a0 87.06\u00a0 \u00a0 \u00a0 (3.7%) \u00a0 \u00a0 \u00a0 87.80\u00a0 \u00a0 \u00a0 (4.1%)\u00a0 \u00a0 0.8% (\u00a0 -6% -\u00a0 \u00a0 8%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 IntNRQ \u00a0 \u00a0 \u00a0 26.44 \u00a0 \u00a0 (12.8%) \u00a0 \u00a0 \u00a0 26.68 \u00a0 \u00a0 (11.5%)\u00a0 \u00a0 0.9% ( -20% - \u00a0 28%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HighTerm\u00a0 \u00a0 \u00a0 107.64\u00a0 \u00a0 \u00a0 (6.1%)\u00a0 \u00a0 \u00a0 108.88\u00a0 \u00a0 \u00a0 (5.6%)\u00a0 \u00a0 1.2% (\u00a0 -9% - \u00a0 13%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Fuzzy2 \u00a0 \u00a0 \u00a0 69.69 \u00a0 \u00a0 (10.7%) \u00a0 \u00a0 \u00a0 71.64\u00a0 \u00a0 \u00a0 (7.4%)\u00a0 \u00a0 2.8% ( -13% - \u00a0 23%)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Fuzzy1 \u00a0 \u00a0 \u00a0 53.95\u00a0 \u00a0 \u00a0 (6.5%) \u00a0 \u00a0 \u00a0 55.79\u00a0 \u00a0 \u00a0 (6.2%)\u00a0 \u00a0 3.4% (\u00a0 -8% - \u00a0 17%)\n\u00a0\u00a0 HighTermDayOfYearSort \u00a0 \u00a0 \u00a0 19.71\u00a0 \u00a0 \u00a0 (4.7%) \u00a0 \u00a0 \u00a0 21.51\u00a0 \u00a0 \u00a0 (7.1%)\u00a0 \u00a0 9.1% (\u00a0 -2% - \u00a0 21%)\n\nUnfortunately, luceneutil shows regression on non index sort match sorting (HighTermMonthSort). I can't reproduce the regression on any real case, but I'm afraid my benchmarks isn't quite accurate.",
    "attachments": {
        "LUCENE-8432.patch": "https://issues.apache.org/jira/secure/attachment/12933347/LUCENE-8432.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16559721",
            "author": "Jim Ferenczi",
            "content": "Thanks Nikolay Khitrin, the change makes sense to me. The other way to achieve this optimization is to use a MultiCollector that wraps a TotalHitCountCollector and a TopFieldCollector but I prefer the solution that you propose. It's much simpler if this can be done automatically by the top field collector. Any objections Adrien Grand ? ",
            "date": "2018-07-27T13:01:29+0000"
        },
        {
            "id": "comment-16559949",
            "author": "Adrien Grand",
            "content": "+1 to do it this way too. I don't have a suggestion at the moment but maybe we can find a more explicit name than docsDone. ",
            "date": "2018-07-27T16:07:45+0000"
        },
        {
            "id": "comment-16559992",
            "author": "Michael Braun",
            "content": "To speed this up even more, is it possible to not generate and throw new CollectionTerminatedExceptions? Filling out the stack is expensive (see SOLR-11242 and SOLR-11314) - if it's just used as a means of signaling without ever inspecting, and it's a normal case that it terminated early, should this be a static final object that gets thrown? This may be out of scope of this jira ticket in which case I can open a new one.  ",
            "date": "2018-07-27T16:51:12+0000"
        },
        {
            "id": "comment-16560333",
            "author": "Robert Muir",
            "content": "i am strongly opposed to this in lucene code. we must be able to debug stuff. wrong tradeoff in all cases! ",
            "date": "2018-07-27T21:12:00+0000"
        },
        {
            "id": "comment-16560371",
            "author": "Uwe Schindler",
            "content": "I agree with Robert. It might be expensive at the beginning, but stack trace creation should be suppressed by the JVM if the trace is not used (at least if all of it happens in one single class and not through several stack frames). The optimization needs some time until it jumps in, so simple tests executed only one or two times don't help for measuring this,. ",
            "date": "2018-07-27T21:45:21+0000"
        },
        {
            "id": "comment-16560372",
            "author": "Michael Braun",
            "content": "Added LUCENE-8434 with this to not pollute the comments here, agree on debugging on Robert Muir but don't believe it applies here, feel free to continue discussion there!  ",
            "date": "2018-07-27T21:45:31+0000"
        },
        {
            "id": "comment-16578682",
            "author": "Adrien Grand",
            "content": "Nikolay Khitrin Could you add a test for these changes? I could be wrong but I think we need to reset docsDone to false when moving to a new segment to be correct? ",
            "date": "2018-08-13T17:41:24+0000"
        },
        {
            "id": "comment-16579942",
            "author": "Nikolay Khitrin",
            "content": "Adrien Grand, yes, docsDone must be reseted for each segment, and it did every time when docBase is changed:\n\n       docBase = context.docBase;\n+      docsDone = false;\n\n\nIt seems to be covered by TestTopFieldCollectorEarlyTermination (compares topDocs with trackTotalHits enabled and disabled) and TestIndexSorting test (compares unsorted and sorted indexes in .testRandom3).\n\nI can add more specific test if you point out where is the lack of\u00a0coverage. ",
            "date": "2018-08-14T15:14:06+0000"
        },
        {
            "id": "comment-16591453",
            "author": "Adrien Grand",
            "content": "Got it, thanks. There have been a couple of changes to TopFieldCollector recently, I'll look into bringing this patch up-to-date. ",
            "date": "2018-08-24T10:33:00+0000"
        },
        {
            "id": "comment-16591556",
            "author": "Adrien Grand",
            "content": "I updated the patch to apply on a recent master and renamed \"docsDone\" to \"collectedAllCompetitiveHits\". luceneutil reports a very minor slowdown with the sorting tasks on wikimedium10m, which is fine in my opinion. I'll wait a couple days to gather feedback if any before merging.\n\n\n                    TaskQPS baseline      StdDev   QPS patch      StdDev                Pct diff\n       HighTermMonthSort      148.65     (15.0%)      146.04     (14.0%)   -1.8% ( -26% -   32%)\n   HighTermDayOfYearSort       73.75      (7.4%)       73.24      (7.7%)   -0.7% ( -14% -   15%)\n\n ",
            "date": "2018-08-24T12:17:13+0000"
        },
        {
            "id": "comment-16597535",
            "author": "ASF subversion and git services",
            "content": "Commit ba83c5a26a9e789617bf8c4a0113fe62f9f56f66 in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ba83c5a ]\n\nLUCENE-8432: TopFieldComparator stops calling the comparator when only counting hits. ",
            "date": "2018-08-30T14:45:32+0000"
        },
        {
            "id": "comment-16597868",
            "author": "ASF subversion and git services",
            "content": "Commit 4997923525270d4bd9b6f909a5b11d387b517822 in lucene-solr's branch refs/heads/branch_7x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4997923 ]\n\nLUCENE-8432: TopFieldComparator stops calling the comparator when only counting hits. ",
            "date": "2018-08-30T20:02:04+0000"
        },
        {
            "id": "comment-16597879",
            "author": "Adrien Grand",
            "content": "Merged. Thanks Nikolay Khitrin! ",
            "date": "2018-08-30T20:07:16+0000"
        }
    ]
}