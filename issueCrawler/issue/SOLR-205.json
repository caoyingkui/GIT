{
    "id": "SOLR-205",
    "title": "SolrSharp - a C# client API for Solr",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "clients - C#"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "SolrSharp is a client API written in C# using the .Net framework to interact with Apache Solr.",
    "attachments": {
        "solrsharp-1.2-08302007.zip": "https://issues.apache.org/jira/secure/attachment/12364841/solrsharp-1.2-08302007.zip",
        "patch": "https://issues.apache.org/jira/secure/attachment/12368594/patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12487254",
            "date": "2007-04-06T15:34:21+0000",
            "content": "This library and project consists of a few different chunks:\n\n/src - the source code for the library.\n/docs/api - MSDN-style documentation for the library (the MS world equivalent of javadoc).\n/example - working examples for the library.\n\nThe namespace for the source code is \"org.apache.solr.SolrSharp\"\n\nAre there any documentation requirements for Apache compliance?\n\nOne administrative note: I have a signed agreement on file with the Apache Foundation for code contributions, indemnification of my employer, etc.  This is the standard doc that's required for all committers (I have committer status on the Lucene.Net project).  I assume this applies for any Apache project. "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12487643",
            "date": "2007-04-09T22:19:55+0000",
            "content": "Full complement of files for distribution.  Here's what's included:\n\n/src\n  Source code for the SolrSharp project\n/docs\n  MSDN-style web documentation of the SolrSharp library\n/example\n  An example application that implements the library.  Uses the sample configuration from Solr.\n\nMore of this is forthcoming, but this is an initial release to get it in the hands of users. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12502354",
            "date": "2007-06-07T14:19:29+0000",
            "content": "Jeff & Co:\nWhat is the status of this as far as getting it into the repository?\nSomething to do right after 1.2 is fully released?\n\nIt's still in sync with 1.2 codebase and works, right Jeff? "
        },
        {
            "author": "ms",
            "id": "comment-12503256",
            "date": "2007-06-11T01:43:11+0000",
            "content": "I am having difficulty using SolrSharp in a VB.NET project. I am using .NET 2.0 uncer Windows Vista (VS 2005). The problem is that the document does not pass \"IsValidUpdateIndexDocument'\n--------------------------------------------------------------\nI create a SolrSharp document thus:\n\nImports System.Xml.Serialization\nImports org.apache.solr.SolrSharp.Indexing\n\n<Serializable(), XmlRoot(\"add\")> _\nPublic Class SolrDocument\n\n    Inherits UpdateIndexDocument\n\n    Public Sub New()\n    End Sub\n\n    Public Sub New(ByVal id As String, ByVal Diagnosis As String)\n        Me.Add(New IndexFieldValue(\"id\", id))\n        Me.Add(New IndexFieldValue(\"Diagnosis\", Diagnosis))\n    End Sub\nEnd Class\n\nThen I try to post it like this:\n\n Dim solrSearcher As SolrSharp.Configuration.SolrSearcher _\n          = SolrSharp.Configuration.SolrSearchers.GetSearcher(SolrSharp.Configuration.Mode.Read)\n\n        Dim SolrU As New org.apache.solr.SolrSharp.Update.SolrUpdater(solrSearcher)\n        Dim doc As New SolrDocument(txtID.Text, txtDiagnosis.Text)\n\n        If Not solrSearcher.SolrSchema.IsValidUpdateIndexDocument(doc) Then MessageBox.Show(\"Cannot validate document: \")\n\n        Try\n\n            SolrU.PostToIndex(doc, True)\n\n        Catch ex As Exception\n            MessageBox.Show(ex.ToString)\n        End Try "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12503259",
            "date": "2007-06-11T02:20:14+0000",
            "content": "I'm not seeing comments that I've added via email response displayed on this issue, so I'll add them manually.\n\nRegarding question from Otis G. about repository access and 1.2 compliance:\n\n\tI can't confirm right now (other project keeping me from this at the present.)  On evaluation it doesn't appear that there are any breaking changes at this point, other than Lucene query syntax requiring a change for field values with semi-colons.  However, there are new features in both this release as well as 1.1 that have not been incorporated into the library (defaults used as opposed to allowing choices where those exist.)  I will update JIRA with a confirmation indicating the library is 1.2 compliant.\n\tRepository access has been requested.\n\n "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12503260",
            "date": "2007-06-11T02:22:34+0000",
            "content": "Regarding ms IsValidUpdateIndexDocument issue:\n\nIsValidUpdateIndexDocument compares the fields of the referenced IndexDocument to the fields as read from the Solr configuration for the Solr instance you're updating.  If the (non-copied) fields that are read from the solrconfig.xml file are not present in the list of fields from the IndexDocument, IsValidUpdateIndexDocument will fail.\n\nIn your example, you should have only two fields defined in solrconfig.xml of the solr instance you're updating. "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12504470",
            "date": "2007-06-13T22:56:45+0000",
            "content": "Solrsharp has been validated against the Solr 1.2 release.  Validation was made using the example application that's available with the Solrsharp code.\n\n\n\tThe code has been moved to a new location and is now accessible via subversion.  Many thanks to Ryan McKinley for hosting the codebase.  You can find it at:\n\n\n\n    http://solrstuff.org/svn/solrsharp\n\n\n\tA new folder has been added: docs/api.  We have MSDN-style documentation to help explain the full library.  When you update from the repository, just point your browser to the local file at /docs/api/index.html.\n\n "
        },
        {
            "author": "ms",
            "id": "comment-12505054",
            "date": "2007-06-15T06:08:35+0000",
            "content": "Jeff,\nThanks. I have it working against Solr 1.2. I am trying to figure out how to delete a document from the index. This is the code I am using and it is not working. TIA\n\n        Dim SolrU As New org.apache.solr.SolrSharp.Update.SolrUpdater(solrSearcher)\n        Dim doc As New org.apache.solr.SolrSharp.Indexing.DeleteIndexDocument\n        doc.Id = \"a\"\n        SolrU.PostToIndex(doc, True)\n        SolrU.Optimize() "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12505340",
            "date": "2007-06-15T18:38:53+0000",
            "content": "There was a bug in DeleteIndexDocument, which has been updated.  Deleting by query vs. unique key was not being handled properly.  The source at http://solrstuff.org/svn/solrsharp has been updated (documentation to updated later.)\n\nms - for your scenario, this issues a delete-by-id request using the xml syntax \"<delete><id>a</id></delete>\".  This is not the same as a delete-by-query, if that's the intention.  Please look at the example for code that shows how to delete by query. "
        },
        {
            "author": "ms",
            "id": "comment-12505361",
            "date": "2007-06-15T20:32:32+0000",
            "content": "Jeff-  I will check the code at the link you provided. However, looking at the Examples, I do not see code sample for delete by query.  My intention is to delte all documents/range of documents prior to (partially) reb-uilding the index. "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12505363",
            "date": "2007-06-15T20:50:28+0000",
            "content": "The Example application includes some code for delete by query, but it is commented out.  The particular code looks like:\n\n            //List<QueryParameter> listQP = new List<QueryParameter>();\n            //listQP.Add(new QueryParameter(\"id\", \"101\"));\n            //QueryParameterCollection queryParameterCollection = new QueryParameterCollection(\"delete\", listQP);\n            //Query query = new Query();\n            //query.AddQueryParameters(queryParameterCollection, ParameterJoin.AND);\n            //DeleteIndexDocument deleteIndexDocument = new DeleteIndexDocument(query);\n\n            DeleteIndexDocument deleteIndexDocument = new DeleteIndexDocument(\"101\");\n            oUpdate.PostToIndex(deleteIndexDocument, true);\n\nUncomment those and comment out the single DeleteIndexDocument(\"101\") line to execute a delete-by-query. "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12510991",
            "date": "2007-07-08T19:12:55+0000",
            "content": "Current Solrsharp library, compliant with Solr version 1.2.  For the latest code, please see the Subversion repository at http://solrstuff.org/svn/solrsharp "
        },
        {
            "author": "ms",
            "id": "comment-12512834",
            "date": "2007-07-15T23:32:32+0000",
            "content": "I am using solrsharp-1.2-07082007 - I have a dynamicField declared in my schema.xml file as \n<dynamicField name=\"*_demo\" type=\"text_ws\" indexed=\"true\"  stored=\"true\"/>\n-but, if I try to add a field using my vb.net application \ndoc.Add(\"id_demo\", s)\nwhere is a string value, the document does fails \nsolrSearcher.SolrSchema.IsValidUpdateIndexDocument(doc)\nMS "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12513649",
            "date": "2007-07-18T17:36:06+0000",
            "content": "Includes updates to SOLR-304.  Replaces solrsharp-1.2-07082007.zip "
        },
        {
            "author": "ms",
            "id": "comment-12514454",
            "date": "2007-07-22T03:41:42+0000",
            "content": "With solrsharp-1.2-07082007 I am able to use dynamicFields. However, I have a problem with copyFiels that reference dynamicFields.\nConsider the above example of \n<dynamicField name=\"*_demo\" type=\"text_ws\" indexed=\"true\" stored=\"true\"/> \nif I now have \n<copyField source=\"id_demo\"  dest=\"demographics\" />\nthen I must also have \n<field name=\"demographics\" type=\"text_ws\" indexed=\"true\" stored=\"false\"/>\nNow, if I use Solr#, I have to have \ndoc.Add(\"demographics\", \"\")  \nor it will fail IsValidUpdateIndexDocument. But this is causing the index to be corrupted. Also, this defeats the purpose of copyFields - which is a server side mechanism to aggregate fields. \nCould we have solr# raise IsValidUpdateIndexDocument = false only if the field has \"Isrequired = true\"? tia "
        },
        {
            "author": "ms",
            "id": "comment-12514460",
            "date": "2007-07-22T05:27:36+0000",
            "content": "Another possible bug - not sure if this is a bug with Solr# or Solr. To reproduce, create a dynamicField and copyField in schema like this\n\n<dynamicField name=\"*_demo\" type=\"string\" indexed=\"true\"  stored=\"true\"/>\n<copyField source=\"*_demo\"  dest=\"demographics_demo\" />\n\nNow, add TWO fields to match your dynamic field using solr# - for example:\n\ndoc.Add(\"id_demo\", \"lorem\")\ndoc.Add(\"sample_demo\", \"ipsum\")\n\nWhen I add this document to a new Index, I get a corrupted index. "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12514672",
            "date": "2007-07-23T16:37:20+0000",
            "content": "> Consider the above example of\n<dynamicField name=\"*_demo\" type=\"text_ws\" indexed=\"true\" stored=\"true\"/>\n> if I now have\n<copyField source=\"id_demo\" dest=\"demographics\" />\n> then I must also have\n<field name=\"demographics\" type=\"text_ws\" indexed=\"true\" stored=\"false\"/>\n\nLet me make sure I understand the scenario here:\n\n\n\tdynamic field = \"*_demo\"\n\tcopy field source = \"id_demo\" (as captured by dynamic field), with dest = \"demographics\"\n\n\n\nI'll test this scenario myself to see what occurs. "
        },
        {
            "author": "ms",
            "id": "comment-12517708",
            "date": "2007-08-04T14:24:48+0000",
            "content": "Jeff\nPlease let me know if you were able to get this to work.\nThe problem I have is that the the client using Solr# needs to supply a value to the declared field \"demographics\" - or ti will fail IsValidUpdateIndexDocument. \nA related problem that I am having is that if you add 2 or more dynamic fields (\"id_demo\" and \"somethingelse_demo\") - there is no error message - but, using Luke I see that the document has not been added to the index. TIA "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12518468",
            "date": "2007-08-08T15:21:36+0000",
            "content": "Apologies for the delay in the response, occupied with starting a new venture.\n\nFirst, IsValidUpdateIndexDocument is not a required call to update a solr index.  It is intended to be a runtime check for a document's structure, possibly more useful when added an nunit test routine than being called in production.  Nonetheless, it should still be applicable in this scenario.\n\nOn testing with the dynamic field scenario, I've not been able to reproduce the issue.  I'm continuing with that to see if I can determine if there's a scenario that solrsharp should be handling vs. an issue with solr. "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12521724",
            "date": "2007-08-22T07:49:33+0000",
            "content": "Added support for highlighting, as outlined in https://issues.apache.org/jira/browse/SOLR-338 "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12523855",
            "date": "2007-08-30T14:15:23+0000",
            "content": "Latest release that includes updates for highlighting and debug parameter options "
        },
        {
            "author": "Tomer Gabel",
            "id": "comment-12538471",
            "date": "2007-10-29T12:27:23+0000",
            "content": "The following small patch (generated with diff, sorry about the format if not appropriate) has the following features:\n\n\tSwitch to a (IMO...) tidier type mapping system with a static dictionary instead of an if statement hierarchy\n\tAdds missing type mappings (long, unsigned types etc.) \u2013 note the warning about small (less than 32 bit) data types!\n\tAdds constructor overloads for abstract QueryBuilder that accept SolrSearcher instead of reading from configuration (we prefer to integrate with our own configuration provider)\n\n\n\n(Edited to include attachment instead of text block) "
        },
        {
            "author": "Tomer Gabel",
            "id": "comment-12538473",
            "date": "2007-10-29T12:29:22+0000",
            "content": "\"diff\" output for the above changes "
        },
        {
            "author": "Jeff Rodenburg",
            "id": "comment-12539966",
            "date": "2007-11-03T19:07:34+0000",
            "content": "Great patch, thanks Tomer.  I just looked through the patch, here are a few comments:\n\n\n\tSolrType.cs/TypeExpression(...): replace the if/else lookup scheme for type mappings with a static type Dictionary for lookups.\nThe typemap lookup is much cleaner than the if/else sequence.  Shorter code, of which I'm a fan.  Nice optimization, thanks.\n\n\n\n\n\tQueryBuilder.cs: add public constructors that take a SolrSearcher instance.  There are 6 or 7 constructors, and they would all be extended with an additional SolrSearcher instance.\n\n\n\nI'm unsure about the best way to go about freely associating SolrSearcher instances with QueryBuilder instances, outside of configuration control.  QueryBuilder implies searchability against a solr server, while the given client configuration may make that server update-only (the SearcherMode property on SolrSearcher.)  The idea behind the configuration settings for servers (Read/Write settings) is to ensure updates and queries occur in the right places.  At a minimum, there should be a check on the SolrSearcher instance passed to a QueryBuilder constructor that ensures the SearcherMode supports Read.\n\nAnother matter is encapsulation around the SolrSearcher instance and its query path.  Referring to http://wiki.apache.org/solr/SolrRequestHandler, the \"select/\" path for queries will technically work but also can short-circuit defined handlers already defined on a solr server.  The SolrSearcher instance should respect the server configuration on the solr instance.  This is not currently in place in the solrsharp code, but is something that we should add.  This involves wiring up Request Handlers, which haven't been done yet.\n\nMy thoughts on this patch:\n1) Apply the change to SolrType.TypeExpression(...)\n2) Apply the constructor changes to QueryBuilder, but modify them to incorporate checking on SearcherMode properties in the constructor.\n3) Begin evaluation of strongly-typed Request Handlers to control the SolrSearcher Url property. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539949",
            "date": "2016-10-02T07:38:26+0000",
            "content": "A very old discussion about C# client. Solr currently only have a SolrJ client. If there will be new clients, it will be a completely new discussion. This one is at a dead-end. "
        }
    ]
}