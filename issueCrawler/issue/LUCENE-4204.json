{
    "id": "LUCENE-4204",
    "title": "Error with Codec on android",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/codecs"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Not A Problem",
        "status": "Resolved"
    },
    "description": "Hello, with the latest version of Lucene 4.0, I have an error :\n\"Codec with name \u2018Lucene40\u2032 does not exist.\nYou need to add the corresponding JAR file supporting this SPI to\nyour classpath. The current classpath supports the following names:\n[]\"\nClasspath is OK, but the method for initialise Codec don't work. \n\n\nThis error does not append with Lucene 3.6.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-07-10T06:32:40+0000",
            "content": "I haven't worked with android for a while but isn't android still on java 1.5? Lucene has 1.6 as min-req. so you must be building your own jar no? if so do you include the new core/src/resrouces/* folders? There are some files in core/src/resources/META-INF/services/ that are required. if you are using eclipse or something like this you need to makes sure you are copying these files to a sep. folder otherwise they are overwritten like:\n\n\n<classpathentry kind=\"src\" path=\"lucene/core/src/java\"/>\n<classpathentry kind=\"src\" output=\"bin.lucene-core\" path=\"lucene/core/src/resources\"/>\n\n ",
            "author": "Simon Willnauer",
            "id": "comment-13410088"
        },
        {
            "date": "2012-07-10T09:15:26+0000",
            "content": "Android is not a supported platform so lowering priority. ",
            "author": "Uwe Schindler",
            "id": "comment-13410154"
        },
        {
            "date": "2012-07-10T09:23:16+0000",
            "content": "Sorry for the wrong priority.\n\nI will try to compile src in  the android project and give the result.\nThanks for the help. \n ",
            "author": "ROULLAND Bruno",
            "id": "comment-13410165"
        },
        {
            "date": "2012-07-10T09:29:24+0000",
            "content": "Did you try to use the official lucene-core.jar? If you build the code from source using Android build tools, you have to make sure that your ANT/Eclipse project correctly adds the resource folders (also used by Analyzers and a lot of other stuff). Lucene heavily depends on resource files placed inside the classpath/JAR files (like stopword files, and SPI META-INF files), so they must also appear in your DEX files somehow. ",
            "author": "Uwe Schindler",
            "id": "comment-13410170"
        },
        {
            "date": "2012-07-10T09:32:04+0000",
            "content": "Maybe thats your problem: http://stackoverflow.com/questions/5760607/using-serviceloader-on-android ",
            "author": "Uwe Schindler",
            "id": "comment-13410172"
        },
        {
            "date": "2012-07-10T09:36:39+0000",
            "content": "I have used official jar but i think android classloader don't expose resource files inside.\n\nEdit: yes, it could be the reason, i will also try with a more recent version of android ",
            "author": "ROULLAND Bruno",
            "id": "comment-13410176"
        },
        {
            "date": "2012-07-10T09:47:39+0000",
            "content": "The above link shows the reason:\n\n\nThe META-INF folder is deliberately excluded from the APK by ApkBuilder; the only comment in ApkBuilder.java is \"we need to exclude some other folder (like /META-INF)\" but there is no other explanation.\n\nSo you have to maybe add the missing resources directly to your APK using the ZIP/JAR ant task after ApkBuilder is finished. ",
            "author": "Uwe Schindler",
            "id": "comment-13410187"
        },
        {
            "date": "2012-07-10T10:00:14+0000",
            "content": "See also: http://code.google.com/p/maven-android-plugin/issues/detail?id=97 ",
            "author": "Uwe Schindler",
            "id": "comment-13410195"
        },
        {
            "date": "2012-07-10T10:10:07+0000",
            "content": "This is not a problem of Lucene itsself, as the Android ApkBuilder component is buggy and excludes META-INF completely from the resulting APK (although Android supports SPI and other parts of Java 6).\n\nThere are several workaround possible, but none of them is fixed in the official Anbdroid SDK, you have to use a customized Maven plugin https://github.com/pa314159/maven-android-plugin or patch ApkBuilder.java to not exclude META-INF http://androidxref.com/source/xref/sdk/sdkmanager/libs/sdklib/src/com/android/sdklib/build/ApkBuilder.java:\n\n\n public static boolean checkFolderForPackaging(String folderName) {\n   return folderName.equalsIgnoreCase(\"CVS\") == false &&\n          folderName.equalsIgnoreCase(\".svn\") == false &&\n          folderName.equalsIgnoreCase(\"SCCS\") == false &&\n-         folderName.equalsIgnoreCase(\"META-INF\") == false &&\n          folderName.startsWith(\"_\") == false;\n }\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13410201"
        }
    ]
}