{
    "id": "SOLR-12353",
    "title": "SolrDispatchFilter expensive non-conditional debug line degrades performance",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Admin UI",
            "Authentication",
            "logging"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.6.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Hello,\n\nWe use Solr 6.6.3. Recently on one network when switching on authentication (security.json) began experiencing significant delays (5-10 seconds) to fulfill each request to /solr index.\n\nI debugged the issue and it was essentially triggered by line 456 of SolrDispatchFilter.java:\n\nlog.debug(\"Request to authenticate: {}, domain: {}, port: {}\", request, request.getLocalName(), request.getLocalPort());\n\n\nThe issue is that on machines and networks with poor configuration or DNS issues in particular, request.getLocalName() can trigger expensive reverse DNS queries for the ethernet interfaces, and will only return within reasonable timeframe if manually written into /etc/hosts.\n\nMore to the point, request.getLocalName() should be considered an expensive operation in general, and in SolrDispatchFilter it runs unconditionally even if debug is disabled.\n\nI would suggest to either replace request.getLocalName/Port here, or at the least, wrap the debug operation so it doesn't affect any production systems:\n\nif (log.isDebugEnabled()) {\n    log.debug(\"Request to authenticate: {}, domain: {}, port: {}\", request, request.getLocalName(), request.getLocalPort());\n}\n\n\nThe authenticateRequest method in question is private so we could not override it and making another HttpServletRequestWrapper to circumvent the servlet API was doubtful.\n\nThank you",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-14T21:27:49+0000",
            "content": "General advice for logger usage is to NOT wrap with the isXxxxEnabled call except in cases where obtaining logging parameters is likely to be slow and the level being tested is not enabled by default.\n\nThe quick solution, which we could do as a stepping stone, is to wrap this logging in isDebugEnabled as you have suggested.\n\nThinking larger ... I don't see any point to having hostname and port information in the debug log at all.  If it is actually useful, then getLocalName could be replaced with getLocalAddr.  Such log entries are unlikely to be viewed by anybody who doesn't know how the system is configured, so having an IP address in the log would not introduce a significant administrative burden.  Possible replacements without isDebugEnabled, my preferred first:\n\n\n        log.debug(\"Request to authenticate: {}\", request);\n\n\n\nor\n\n\n        log.debug(\"Request to authenticate: {}, address: {}, port: {}\", request, request.getLocalAddr(), request.getLocalPort());\n\n\n\nSide note: IMHO the /etc/hosts file should always contain an entry for every network interface on the machine.  But the simple fact is that users have configurations that aren't perfect, and Solr should work well even if the system config is not ideal.  Thanks for bringing the issue to our attention! ",
            "author": "Shawn Heisey",
            "id": "comment-16474821"
        },
        {
            "date": "2018-05-22T19:19:01+0000",
            "content": "Sorry I thought I had replied. I believe any of that would remedy the issue in our case. I suppose I'd agree about hosts file on prod machines. But in our case it affects developer(s) as well, where that's impractical, so it does happen. Thanks ",
            "author": "Pascal Proulx",
            "id": "comment-16484441"
        }
    ]
}