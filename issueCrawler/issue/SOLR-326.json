{
    "id": "SOLR-326",
    "title": "cleanup eclipse warnings",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "On default settings, Eclipse had 628 warnings.  This patch removes 119 of those warnings related to unused imports.  These are the safest warnings to fix and shouldn't require any testing other than confirming building still works.  \n\nThe general idea of removing warnings is both cleaner code, but also making it easier for interesting warnings to get hidden by uninteresting warnings.",
    "attachments": {
        "remove_unused_imports_patch.txt": "https://issues.apache.org/jira/secure/attachment/12363089/remove_unused_imports_patch.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Paul Sundling",
            "id": "comment-12517404",
            "date": "2007-08-02T23:22:03+0000",
            "content": "This should remove unused import eclipse warnings. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12517660",
            "date": "2007-08-03T23:23:46+0000",
            "content": "Does Eclipse take into account class references in javadocs?  I think those are needed as imports in order for javadocs not to issue warnings. "
        },
        {
            "author": "Paul Sundling",
            "id": "comment-12517674",
            "date": "2007-08-04T00:30:55+0000",
            "content": "I just ran ant clean javadoc and it had 14 errors (not bad for a code base of this size!).  Although my patch touches a lot of classes, none of them were classes I touched (judging from the '>' I see in subversive eclipse plugin for files that were modified.\n\nI think Eclipse is smart enough and I've seen it add imports when I add annotations.  I don't use @see in javadocs that often.  Let me know if you see different behavior.  I reverted my changes locally and still had the same 14 javadoc errors.  So I'm pretty confident that I didn't introduce errors in the patch. "
        },
        {
            "author": "Paul Sundling",
            "id": "comment-12518879",
            "date": "2007-08-10T00:05:49+0000",
            "content": "I just wanted to make sure there wasn't anything you needed from me.  \n\nThese sorts of patches don't age well. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12518894",
            "date": "2007-08-10T03:26:26+0000",
            "content": "It is three click process from source > cleanup to remove the unused imports, so keeping this up to date is easy \n\nIn general, I think it is discouraged to change code unless there is something wrong with it....  that said, I would like to see fewer warnings in eclipse.  I would also like to see the @Override annotation on overridden methods.\n\nUnless there are objections, I will commit changes that remove unused imports and add the @Override annotation in the next few days... "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12519146",
            "date": "2007-08-10T22:28:30+0000",
            "content": "> In general, I think it is discouraged to change code unless there is something wrong with it\n\nthe general mantra i like to follow is that commits should either change code, or fix formatting \u2013 not both, because it's too hard to tell which is which.\n\nI personally don't think there is anything wrong with a commit where the sole purpose is to reduce warnings (either from the compiler, or from javadoc, or from bug finding tools) \u2013 the only negative is that it sometimes makes older patches harder to apply, but in the case of unused imports, i don't think that's a big deal.\n\none minor personal peeve i have is editors which sort the imports when removing the unused ones \u2013 it makes the diffs a lot more confusing then ones with simple removals\n\n(also: i personally don't think alphabetized import lists are as useful as import lists where related classes in the same packages (or related packages in the same namespace) are listed next to each other \u2013 but that's my own personal issue, and not an ideologue i would try and force on anyone else.) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12519336",
            "date": "2007-08-12T20:51:32+0000",
            "content": "I considered adding the @Override to most things, but I don't want to make applying SOLR-215 more difficult, so I think we should wait. "
        }
    ]
}