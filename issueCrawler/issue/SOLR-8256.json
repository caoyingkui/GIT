{
    "id": "SOLR-8256",
    "title": "Set legacyCloud=false as default",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "We should set legacyCloud=false as default in 7.0. So we can remove legacyCloud in 8.0",
    "attachments": {
        "SOLR-8256.1.patch": "https://issues.apache.org/jira/secure/attachment/12874355/SOLR-8256.1.patch",
        "SOLR-8256.patch": "https://issues.apache.org/jira/secure/attachment/12771575/SOLR-8256.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-10T16:16:48+0000",
            "author": "Mark Miller",
            "content": "Here is step one.\n\nNext we have to fix the tests. I actually have some of what I need for this in SOLR-6237.\n\nBasically we have to roll things over from predefined cores to the collections API. ",
            "id": "comment-14998836"
        },
        {
            "date": "2017-05-03T22:54:55+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "\"legacyCloud=true\" seems to still be the default. Maybe we can change that first for 7.0? ",
            "id": "comment-15995846"
        },
        {
            "date": "2017-05-04T02:40:40+0000",
            "author": "Erick Erickson",
            "content": "+1 ",
            "id": "comment-15996071"
        },
        {
            "date": "2017-05-16T20:47:37+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "I'm still spending my time with SOLR-10233 so I don't know if I'll have time to work on this in the 7.0 timeframe. I'll set the Fix Version to 7.0 and Priority to Blocker for now for visibility, until someone can work on this or we decide not to include it for 7.0 ",
            "id": "comment-16013083"
        },
        {
            "date": "2017-05-26T08:04:41+0000",
            "author": "Cao Manh Dat",
            "content": "A patch for this ticket, Some tests still failed, but here is the idea how to approach this problem.\n\n\tIf /clusterstate.json is not presented in ZK, then we will create /clusterprops.json with legacyCloud=false\n\n ",
            "id": "comment-16025956"
        },
        {
            "date": "2017-05-26T16:05:07+0000",
            "author": "Varun Thacker",
            "content": "Here are two scenarios i've seen at customers over the last couple of years\n\n1. In a large cluster with lots of shards ( 100k + across all collections ) , someone restarts all the nodes instead of a rolling manner. The overseer queue get's so backed up that \"rmr /overseer/queue\" stops working. We ended up deleting everything from zookeeper , uploading configs and then starting nodes one by one. Today core.properties will go and register itself in state.json ( actually under clusterstate.json ) so we were able to bring back the cluster\n\n2. New users either didn't backup zookeeper data and disk crashed or they deleted them by mistake etc.\n\nI'm not opposed to us moving towards zk as truth . Just want to be careful that if we do so there could be pitfalls ?\n\nFor 1> i don't have any good ideas to prevent this from happening. \nFor 2> our zoo.cfg could have different \"dataDir\" and \"dataLogDir\" and we would document which directory should a user backup on a regular basis ( https://zookeeper.apache.org/doc/r3.3.6/zookeeperAdmin.html ) ",
            "id": "comment-16026449"
        },
        {
            "date": "2017-06-03T13:14:27+0000",
            "author": "Cao Manh Dat",
            "content": "Updated patch for this ticket, only ReplaceNodeTest is still fail. ",
            "id": "comment-16035965"
        },
        {
            "date": "2017-06-03T13:49:39+0000",
            "author": "Cao Manh Dat",
            "content": "I'm wrong, ReplaceNodeTest also failed in master branch\n\njava.lang.AssertionError: Expecting no cores but found some: {replacenodetest_coll_shard2_replica_t3={name=replacenodetest_coll_shard2_replica_t3,instanceDir=/private/var/folders/ww/60dkt_jd41v4_j7w6v5pwxyw0000gn/T/solr.cloud.ReplaceNodeTest_87A350F12A27EBC6-001/tempDir-001/node6/replacenodetest_coll_shard2_replica_t3,dataDir=/private/var/folders/ww/60dkt_jd41v4_j7w6v5pwxyw0000gn/T/solr.cloud.ReplaceNodeTest_87A350F12A27EBC6-001/tempDir-001/node6/./replacenodetest_coll_shard2_replica_t3/data/,config=solrconfig.xml,schema=schema.xml,startTime=Sat Jun 03 07:37:22 CST 2017,uptime=25119,lastPublished=active,configVersion=0,cloud={collection=replacenodetest_coll,shard=shard2,replica=core_node11},index={numDocs=0,maxDoc=0,deletedDocs=0,indexHeapUsageBytes=0,version=2,segmentCount=0,current=true,hasDeletions=false,directory=org.apache.lucene.store.RawDirectoryWrapper:RawDirectoryWrapper(RAMDirectory@426a10b3 lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@d2cada2),segmentsFile=segments_1,segmentsFileSizeInBytes=72,userData={},sizeInBytes=72,size=72 bytes}},replacenodetest_coll_shard5_replica_t3={name=replacenodetest_coll_shard5_replica_t3,instanceDir=/private/var/folders/ww/60dkt_jd41v4_j7w6v5pwxyw0000gn/T/solr.cloud.ReplaceNodeTest_87A350F12A27EBC6-001/tempDir-001/node6/replacenodetest_coll_shard5_replica_t3,dataDir=/private/var/folders/ww/60dkt_jd41v4_j7w6v5pwxyw0000gn/T/solr.cloud.ReplaceNodeTest_87A350F12A27EBC6-001/tempDir-001/node6/./replacenodetest_coll_shard5_replica_t3/data/,config=solrconfig.xml,schema=schema.xml,startTime=Sat Jun 03 07:37:29 CST 2017,uptime=18107,lastPublished=active,configVersion=0,cloud={collection=replacenodetest_coll,shard=shard5,replica=core_node12},index={numDocs=0,maxDoc=0,deletedDocs=0,indexHeapUsageBytes=0,version=5,segmentCount=0,current=true,hasDeletions=false,directory=org.apache.lucene.store.RawDirectoryWrapper:RawDirectoryWrapper(RAMDirectory@15c58317 lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@910d871),segmentsFile=segments_2,segmentsFileSizeInBytes=120,userData={commitCommandVer=0, commitTimeMSec=1496497019198},lastModified=Sat Jun 03 07:36:59 CST 2017,sizeInBytes=120,size=120 bytes}}} \nExpected :0\nActual   :2\n\n ",
            "id": "comment-16035970"
        },
        {
            "date": "2017-06-04T21:35:06+0000",
            "author": "Varun Thacker",
            "content": "This is not a full review as the patch was pretty big and a lot of it was seemed fine \n\nHere are the few things that I noticed :\n\n\n\n\tCreateShardCmd: The code which creates all the replicas for the shards around line 130 : After the patch I don't see we are passing the async param which means the individual add replica calls will be blocking even if a user specified async? If my reading of the code is correct it's also bad that no test failed?\n\n\n\n\n\n\tIn places like AbstractDistribZkTestBase etc where we are using CollectionAdminRequest to create the collection , shards and replicas should we assert the response to make sure that the action completed without any errors?\n\n\n\n\n\tIn ZkController Line 1455 I didn't quite understand why this line was commented out:\n\n\n\n\n//          if (c.getRouter() instanceof ImplicitDocRouter) return true;\n\n\n\n\tCan we reuse some of the publishState code already there in OverseerTest ?\n\n ",
            "id": "comment-16036402"
        },
        {
            "date": "2017-06-05T03:37:53+0000",
            "author": "Cao Manh Dat",
            "content": "Varun Thacker for CreateShardCmd, we will return immediately because Overseer thread is the one actually run the cmd. Do not sure about the state's mechanism of async cmd call other cmds with async param Noble Paul ",
            "id": "comment-16036488"
        },
        {
            "date": "2017-06-05T06:48:31+0000",
            "author": "Varun Thacker",
            "content": "Hi Dat,\n\nThis is how I understand async's mechanism:\n\nIt starts from the CollectionsHandler :\n\nHere in the handleResponse there is two code paths: One for async and without async. \n\nFor async we write a znode and send back the response to the user and ask it to poll.\nFor not async we wait for a znode to be written back to and then send back the response.\n\nWith the patch , since CreateShardCmd is no longer passing the async param to the underlying add-replica call what will happen is that it becomes blocking internally . That means if an add replica call took longer ( create core ) then the request will timeout and you won't get back the response.\n\nWhen you pass the async param to the add replica call which in turn passes it to the CoreAdminHandler then it deals with it in an async manner ( in CoreAdminHandler#handleRequestBody ) . So we should basically make sure that the async param is always sent to OverseerCollectionMessageHandler#sendShardRequest if there is one.\n\ni'm not sure how we test async working correctly today. Someone else could chime in here   ",
            "id": "comment-16036598"
        },
        {
            "date": "2017-06-05T07:57:03+0000",
            "author": "Cao Manh Dat",
            "content": "Varun Thacker I did write a test to check for the async of CreateShardCmd and It returned immediately with a request-id ( I also surprised with this result ) \n\nBTW I did rewrite CreateShardCmd to pass async parameter to addReplicas ( kinda like how ReplaceNode do today ). ",
            "id": "comment-16036651"
        },
        {
            "date": "2017-06-05T09:41:24+0000",
            "author": "Cao Manh Dat",
            "content": "Updated patch based on Varun Thacker's comments. ",
            "id": "comment-16036731"
        },
        {
            "date": "2017-06-05T14:29:20+0000",
            "author": "Erick Erickson",
            "content": "Dat:\n\nbq: and It returned immediately with a request-id\n\nIIRC, that's expected behavior. You then can use the REQUESTSTATUS collections API to check progress.... ",
            "id": "comment-16037036"
        },
        {
            "date": "2017-06-05T17:27:00+0000",
            "author": "Varun Thacker",
            "content": "Varun Thacker I did write a test to check for the async of CreateShardCmd and It returned immediately with a request-id ( I also surprised with this result )\n\nLike I said you will still get back a response immediately since that's the code in the collections handler.\n\nBut if you don't pass on the async param to a core admin called then that internally is blocking.\n\nLooking at your new patch and concentrated only on CreateShardCmd . The async is now being passed however here's the diff of the params that was passed down before and after the patch :\n\n\nModifiableSolrParams params = new ModifiableSolrParams();\n   params.set(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.CREATE.toString());\n   params.set(CoreAdminParams.NAME, coreName);\n   params.set(CoreAdminParams.REPLICA_TYPE, typeToCreate.name());\n   params.set(COLL_CONF, configName);\n   params.set(CoreAdminParams.COLLECTION, collectionName);\n   params.set(CoreAdminParams.SHARD, sliceName);\n   params.set(ZkStateReader.NUM_SHARDS_PROP, numSlices);\n   ocmh.addPropertyParams(message, params);\n\n\nvs\n\nZkNodeProps addReplicasProps = new ZkNodeProps(\n    COLLECTION_PROP, collectionName,\n    SHARD_ID_PROP, sliceName,\n    CoreAdminParams.REPLICA_TYPE, typeToCreate.name(),\n    CoreAdminParams.NODE, nodeName,\n    CoreAdminParams.NAME, coreName);\nif(async!=null) addReplicasProps.getProperties().put(ASYNC, async);\n\n\n\nSo why is this very different? We don't we pass PropertyParams for instance?\n ",
            "id": "comment-16037248"
        },
        {
            "date": "2017-06-06T00:52:40+0000",
            "author": "Cao Manh Dat",
            "content": "Final patch for this ticket, in this patch I changed Overseer.isLegacy() to false as default ( if cluster props not exist ).\nThank Noble Paul for this idea. ",
            "id": "comment-16037917"
        },
        {
            "date": "2017-06-06T08:26:32+0000",
            "author": "Cao Manh Dat",
            "content": "Fix an issue when cluster props already exist when run the test. \nWill commit the patch soon. ",
            "id": "comment-16038363"
        },
        {
            "date": "2017-06-21T15:11:42+0000",
            "author": "Cao Manh Dat",
            "content": "Final patch ( will commit soon ), ant precommit passed. ",
            "id": "comment-16057668"
        },
        {
            "date": "2017-06-21T15:26:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8e9d685a402c03d6bf0691d79ae5030f38f09053 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8e9d685 ]\n\nSOLR-8256: Set legacyCloud=false as default ",
            "id": "comment-16057696"
        },
        {
            "date": "2017-06-21T17:34:05+0000",
            "author": "Hoss Man",
            "content": "I'm seeing a bunch of test failures on master that seem related to commit 8e9d685a402c03d6bf0691d79ae5030f38f09053 ... these don't reproduce if i revert to the previous commit (eff583e) ...\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=LeaderElectionIntegrationTest -Dtests.method=testSimpleSliceLeaderElection -Dtests.seed=26F0B7AA3C40D7A2 -Dtests.slow=true -Dtests.locale=bg -Dtests.timezone=Asia/Kolkata -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=CdcrVersionReplicationTest -Dtests.seed=26F0B7AA3C40D7A2 -Dtests.slow=true -Dtests.locale=ar-OM -Dtests.timezone=Asia/Jakarta -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=ShardSplitTest -Dtests.method=testSplitWithChaosMonkey -Dtests.seed=26F0B7AA3C40D7A2 -Dtests.slow=true -Dtests.locale=fi-FI -Dtests.timezone=SystemV/EST5 -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n\n\n\n ",
            "id": "comment-16057888"
        },
        {
            "date": "2017-06-21T17:53:12+0000",
            "author": "Hoss Man",
            "content": "\nSome more that reproduce with 8e9d685a402 checked out but not eff583ee8 ...\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=CollectionsAPISolrJTest -Dtests.method=testClusterProp -Dtests.seed=768F60D350C74DB5 -Dtests.slow=true -Dtests.locale=ru-RU -Dtests.timezone=Europe/Minsk -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.06s | CollectionsAPISolrJTest.testClusterProp <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: Expecting legacyCloud to false as default expected:<null> but was:<false>\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLTROnSolrCloud -Dtests.method=testSimpleQuery -Dtests.seed=BE3933A5AB868831 -Dtests.slow=true -Dtests.locale=ja-JP -Dtests.timezone=Etc/GMT-9 -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] ERROR   30.1s | TestLTROnSolrCloud.testSimpleQuery <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Path not found: /responseHeader/status\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=UnloadDistributedZkTest -Dtests.method=test -Dtests.seed=768F60D350C74DB5 -Dtests.slow=true -Dtests.locale=es-VE -Dtests.timezone=Atlantic/Reykjavik -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   24.2s | UnloadDistributedZkTest.test <<<\n   [junit4]    > Throwable #1: java.lang.NullPointerException\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([768F60D350C74DB5:FEDB5F09FE3B204D]:0)\n   [junit4]    > \tat org.apache.solr.cloud.UnloadDistributedZkTest.testCoreUnloadAndLeaders(UnloadDistributedZkTest.java:171\n\n\n ",
            "id": "comment-16057922"
        },
        {
            "date": "2017-06-22T02:23:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d0d30464dd7150fa47b38520241a906514fc94c3 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d0d3046 ]\n\nSOLR-8256: Fix CollectionsAPISolrJTest and UnloadDistributedZkTest failures (caused by first commmit) ",
            "id": "comment-16058618"
        },
        {
            "date": "2017-06-22T20:36:44+0000",
            "author": "Steve Rowe",
            "content": "One more that reproduces with 8e9d685a402 checked out but not eff583ee8 :\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=ClusterStateUpdateTest -Dtests.method=testCoreRegistration -Dtests.seed=B2BE41F52973DA2D -Dtests.slow=true -Dtests.locale=ar-OM -Dtests.timezone=America/Argentina/Jujuy -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 3.56s J9  | ClusterStateUpdateTest.testCoreRegistration <<<\n   [junit4]    > Throwable #1: org.junit.ComparisonFailure: expected:<http[]://127.0.0.1:37047/s...> but was:<http[s]://127.0.0.1:37047/s...>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([B2BE41F52973DA2D:C35275A5009D418]:0)\n   [junit4]    > \tat org.apache.solr.cloud.ClusterStateUpdateTest.testCoreRegistration(ClusterStateUpdateTest.java:104)\n\n ",
            "id": "comment-16059972"
        },
        {
            "date": "2017-06-24T05:49:42+0000",
            "author": "Cao Manh Dat",
            "content": "Fix patch, run all tests couple of times. Passed ",
            "id": "comment-16061813"
        },
        {
            "date": "2017-06-24T05:54:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f7b8cc7be0fb1cfbe69cce5695fdad7d4e236154 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f7b8cc7 ]\n\nSOLR-8256: Fixing test failures when enable legacyCloud=false as default ",
            "id": "comment-16061817"
        }
    ]
}