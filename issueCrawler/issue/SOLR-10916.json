{
    "id": "SOLR-10916",
    "title": "Any Solr test using MiniSolrCloud or Solr Core's should extend SolrTestCaseJ4/SolrCloudTestCase",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.1",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "We have a non-trivial number of tests  that extend LuceneTestCase directly.\n\nFor \"utility\" method minded tests, this is fine - but for any test that wants to instantiate re-use shared config files to instantiate SolrCores, or instances of MiniSolrCloudCluster, this makes these tests really cumbersome to maintain and deal with because htye don't leverage the existing randomization setup logic in SolrTestCaseJ4.\n\nwe should fix these tests where applicable",
    "attachments": {
        "SOLR-10916.patch": "https://issues.apache.org/jira/secure/attachment/12878286/SOLR-10916.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-19T18:24:18+0000",
            "content": "As a quick example: here are a few tests that extend LuceneTestCase and use MiniSolrCloudCluster (they seem to have been copied/pasted from the TestMiniSolrCloudCluster which was explicitly written as a demo for external clients that might want ot use MiniSolrCloudCluster even w/o using JUnit.\n\nThese tests should all be changed to subclass SolrCloudTestCase...\n\n\nhossman@tray:~/lucene/dev/solr/core [master] $ find -name \\*.java | xargs grep -l \"extends LuceneTestCase\" | xargs grep -l MiniSolrCloud\n./src/test/org/apache/solr/cloud/TestAuthenticationFramework.java\n./src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt.java\n./src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java\n\n\n\n...that last test, TestMiniSolrCloudCluster, is still left over from SOLR-8961 and should be renamed to represent what it does (TestCollectionsAPIViaSolrCloudCluster or some such) ",
            "author": "Hoss Man",
            "id": "comment-16054522"
        },
        {
            "date": "2017-07-21T01:14:09+0000",
            "content": "WIP patch with just TestSolrCloudWithKerberosAlt converted to extend SolrCloudTestCase so far. ",
            "author": "Steve Rowe",
            "id": "comment-16095630"
        },
        {
            "date": "2017-07-21T21:45:22+0000",
            "content": "In this version of the patch, the three tests Hoss identified are converted to extend SolrCloudTestCase.  Next I'll look for tests that should extend SolrTestCaseJ4. ",
            "author": "Steve Rowe",
            "id": "comment-16096910"
        },
        {
            "date": "2017-07-21T21:50:57+0000",
            "content": "steve: i think those 3 tests are the only problematic ones \u2013 if there were others i would have almost certainly found them when I had to do this (either that or they init a SolrCore with a schema that has no numeric fields)...\n\n\nhossman@tray:~/lucene/dev [master] $ find -name \\*.java | xargs grep SOLR-10916\n./solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java:   * TODO: This method can be private once SOLR-10916 is resolved\n./solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java:   * TODO: This method can be private once SOLR-10916 is resolved\n./solr/core/src/test/org/apache/solr/cloud/TestAuthenticationFramework.java:    SolrTestCaseJ4.randomizeNumericTypesProperties(); // SOLR-10916\n./solr/core/src/test/org/apache/solr/cloud/TestAuthenticationFramework.java:    SolrTestCaseJ4.clearNumericTypesProperties(); // SOLR-10916\n./solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt.java:    SolrTestCaseJ4.randomizeNumericTypesProperties(); // SOLR-10916\n./solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt.java:    SolrTestCaseJ4.clearNumericTypesProperties(); // SOLR-10916\n./solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java:  public static void setupHackNumerics() { // SOLR-10916\n./solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java:  public static void clearHackNumerics() { // SOLR-10916\n\n\n ",
            "author": "Hoss Man",
            "id": "comment-16096916"
        },
        {
            "date": "2017-07-21T22:27:04+0000",
            "content": "steve: i think those 3 tests are the only problematic ones\n\nThanks Hoss.\n\nAttaching the final patch, that fixes up SolrTestCaseJ4 (to make methods there private now that they aren't used externally) and adds a CHANGES entry.\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-16096938"
        },
        {
            "date": "2017-07-21T22:29:39+0000",
            "content": "Commit b49f145d6d28d6b9dfbbc117030448d1a7c4cbc4 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b49f145 ]\n\nSOLR-10916: Convert tests that extend LuceneTestCase and use MiniSolrCloudCluster to instead extend SolrCloudTestCase ",
            "author": "ASF subversion and git services",
            "id": "comment-16096940"
        },
        {
            "date": "2017-07-21T22:29:41+0000",
            "content": "Commit 7328e592511bead7d9a9ffdbb8e004b2ff44a1f1 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7328e59 ]\n\nSOLR-10916: Convert tests that extend LuceneTestCase and use MiniSolrCloudCluster to instead extend SolrCloudTestCase ",
            "author": "ASF subversion and git services",
            "id": "comment-16096941"
        },
        {
            "date": "2017-07-21T22:32:21+0000",
            "content": "I also removed @Ignore'd TestMiniSolrCloudClusterKerberos, since TestSolrCloudWithKerberosAlt tests the same thing. ",
            "author": "Steve Rowe",
            "id": "comment-16096943"
        },
        {
            "date": "2017-07-22T02:50:01+0000",
            "content": "Commit a9480cd906c470648abd12a9d1dc59ee9934a042 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a9480cd ]\n\nSOLR-10916: remove unused imports ",
            "author": "ASF subversion and git services",
            "id": "comment-16097080"
        },
        {
            "date": "2017-07-22T02:51:52+0000",
            "content": "Commit 97ca529e49505cef0c1dd6138ed70be4a7b85610 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=97ca529 ]\n\nSOLR-10916: remove unused imports ",
            "author": "ASF subversion and git services",
            "id": "comment-16097081"
        },
        {
            "date": "2017-08-08T21:51:20+0000",
            "content": "TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete() has been failing pretty regularly (11 out of 100 iterations when I beasted it on master just now).  The problem: a doc addition fails after intentionally killing a couple of solr's jetties, apparently because the client attempts to send an update to a replica that isn't there.  I'm beasting a change that calls client.getZkStateReader().forceUpdateCollection() before adding the doc, but it seems like CloudSolrClient ought to be able to detect this problem and retry after refreshing the cluster state?\n\nFrom https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/223/ this morning:\n\nChecking out Revision 95af49e5882226be52141a26565d8d2f99b76aaf (refs/remotes/origin/branch_7x)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCollectionsAPIViaSolrCloudCluster -Dtests.method=testCollectionCreateSearchDelete -Dtests.seed=2EB43E7310F7BC75 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=fil -Dtests.timezone=Canada/Pacific -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] ERROR   12.8s J2 | TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete <<<\n   [junit4]    > Throwable #1: org.apache.solr.client.solrj.impl.CloudSolrClient$RouteException: Error from server at http://127.0.0.1:37257/solr/testcollection_shard1_replica_n3: Expected mime type application/octet-stream but got text/html. <html>\n   [junit4]    > <head>\n   [junit4]    > <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\n   [junit4]    > <title>Error 404 </title>\n   [junit4]    > </head>\n   [junit4]    > <body>\n   [junit4]    > <h2>HTTP ERROR: 404</h2>\n   [junit4]    > <p>Problem accessing /solr/testcollection_shard1_replica_n3/update. Reason:\n   [junit4]    > <pre>    Can not find: /solr/testcollection_shard1_replica_n3/update</pre></p>\n   [junit4]    > <hr /><a href=\"http://eclipse.org/jetty\">Powered by Jetty:// 9.3.14.v20161028</a><hr/>\n   [junit4]    > </body>\n   [junit4]    > </html>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([2EB43E7310F7BC75:8D4E90D6971F56D0]:0)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.directUpdate(CloudSolrClient.java:539)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.sendRequest(CloudSolrClient.java:993)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:862)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:793)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:178)\n   [junit4]    > \tat org.apache.solr.client.solrj.request.UpdateRequest.commit(UpdateRequest.java:233)\n   [junit4]    > \tat org.apache.solr.cloud.TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete(TestCollectionsAPIViaSolrCloudCluster.java:167)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]    > Caused by: org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://127.0.0.1:37257/solr/testcollection_shard1_replica_n3: Expected mime type application/octet-stream but got text/html. <html>\n   [junit4]    > <head>\n   [junit4]    > <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\n   [junit4]    > <title>Error 404 </title>\n   [junit4]    > </head>\n   [junit4]    > <body>\n   [junit4]    > <h2>HTTP ERROR: 404</h2>\n   [junit4]    > <p>Problem accessing /solr/testcollection_shard1_replica_n3/update. Reason:\n   [junit4]    > <pre>    Can not find: /solr/testcollection_shard1_replica_n3/update</pre></p>\n   [junit4]    > <hr /><a href=\"http://eclipse.org/jetty\">Powered by Jetty:// 9.3.14.v20161028</a><hr/>\n   [junit4]    > </body>\n   [junit4]    > </html>\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:591)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:253)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:242)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.doRequest(LBHttpSolrClient.java:483)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(LBHttpSolrClient.java:413)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.lambda$directUpdate$0(CloudSolrClient.java:516)\n   [junit4]    > \tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n   [junit4]    > \tat org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:188)\n   [junit4]    > \tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1161)\n   [junit4]    > \tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n   [junit4]    > \t... 1 more\n[...]\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {id=Lucene50(blocksize=128)}, docValues:{}, maxPointsInLeafNode=710, maxMBSortInHeap=7.885441283456621, sim=RandomSimilarity(queryNorm=true): {}, locale=fil, timezone=Canada/Pacific\n   [junit4]   2> NOTE: Linux 4.10.0-27-generic i386/Oracle Corporation 9 (32-bit)/cpus=8,threads=1,free=224954368,total=518979584\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16119082"
        },
        {
            "date": "2017-08-08T22:28:27+0000",
            "content": "I'm beasting a change that calls client.getZkStateReader().forceUpdateCollection() before adding the doc\n\nOkay, so that idea didn't work - I got 12 failures out of 100 beasting iterations with this change.  Back to the drawing board... ",
            "author": "Steve Rowe",
            "id": "comment-16119130"
        },
        {
            "date": "2017-10-17T11:04:30+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16207481"
        }
    ]
}