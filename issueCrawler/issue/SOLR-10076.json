{
    "id": "SOLR-10076",
    "title": "Hiding keystore and truststore passwords from /admin/info/* outputs",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Passing keystore and truststore password is done by system properties, via cmd line parameter.\nAs result, /admin/info/properties and /admin/info/system will print out the received password.\n\nProposing solution to automatically redact value of any system property before output, containing the word password, and replacing its value with ******.",
    "attachments": {
        "SOLR-10076.6x.patch": "https://issues.apache.org/jira/secure/attachment/12858661/SOLR-10076.6x.patch",
        "SOLR-10076.patch": "https://issues.apache.org/jira/secure/attachment/12853715/SOLR-10076.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-02-03T14:05:44+0000",
            "content": "Is there any objection about the approach? Does this count as API change (assuming that somebody depends on the exposed passwords)?\n\nIf there is no objection, I will start working on the patch. ",
            "author": "Mano Kovacs",
            "id": "comment-15851518"
        },
        {
            "date": "2017-02-03T21:48:57+0000",
            "content": "Been thinking about the same, but perhaps instead of a generic rule about containing password, we could have a property somewhere for what paths to hide. I would also like to hide the content of some ZK nodes such as security.json, and there may also be other places where passwords are exposed through props or APIs...\n\nIdeal would be if this could be coupled with Authorization, so that certain info could be controlled through group membership in AuthorizationPlugin? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15852175"
        },
        {
            "date": "2017-02-06T11:21:35+0000",
            "content": "Been thinking about the same, but perhaps instead of a generic rule about containing password, we could have a property somewhere for what paths to hide.\n\nThanks Jan H\u00f8ydahl for the feedback! I was also thinking of a pattern-based parameter masking for input password. I prepared a patch with a RedactionUtils that I will extend with external parameters and upload it shortly.\n\nI would also like to hide the content of some ZK nodes such as security.json, and there may also be other places where passwords are exposed through props or APIs...\nI was not aware of the security.json exposing password, I created a separate jira for that as well (SOLR-10100).\n\nIdeal would be if this could be coupled with Authorization, so that certain info could be controlled through group membership in AuthorizationPlugin?\nIn general, I would not add password visibility based on privileges. I think passwords should not be revertible, as that would expose them to the reliability of the authorization plugin and the admin users' cautiousness. For me it would somewhat beat the purpose of this jira: reducing the exposure of the security credentials. Do you see any business-case when you would grant certain roles to view these passwords? ",
            "author": "Mano Kovacs",
            "id": "comment-15853853"
        },
        {
            "date": "2017-02-21T10:31:02+0000",
            "content": "Attaching patch. ",
            "author": "Mano Kovacs",
            "id": "comment-15875754"
        },
        {
            "date": "2017-02-21T10:41:34+0000",
            "content": "I was not aware of the security.json exposing password\nPasswords are not exposed. Salted hashes of the passwords are, though.\n\nIn general, I would not add password visibility based on privileges. I think passwords should not be revertible, as that would expose them to the reliability of the authorization plugin and the admin users' cautiousness.\nIn the case of security.json, we should encourage and try to ensure that proper authorization is in place while starting a Solr cluster.  To an authorized admin user, I don't see why we shouldn't show salted hashes of passwords. Anyway, we can deal with that issue on SOLR-7890/SOLR-10100. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15875762"
        },
        {
            "date": "2017-02-23T14:26:05+0000",
            "content": "Thank you for the feedback, Ishan Chattopadhyaya.\n\nDo you think the redaction of command line password could be handled as the first patch contains? ",
            "author": "Mano Kovacs",
            "id": "comment-15880512"
        },
        {
            "date": "2017-03-08T09:12:46+0000",
            "content": "This looks okay to me. We probably want to push users towards configuring this in a way it's not on the command line though, right? It's nice not to expose it via the web UI when we see it, but you also don't really want it on the command line as that stuff is pretty easy to introspect via people that should not.\n\nOur doc should probably encourage people to use system property on the command line alternatives or we should look at disabling / warning when it's done. I know our start scripts recently still set some of this ssl stuff via the command line, but if that is still the case, we should fix that too. ",
            "author": "Mark Miller",
            "id": "comment-15900946"
        },
        {
            "date": "2017-03-08T10:38:45+0000",
            "content": "Thank you Mark Miller for your comment.\n\nWe probably want to push users towards configuring this in a way it's not on the command line though, right?\nI agree that this is more like a workaround in the current state. It could also work as a second layer of protection if passwords being passed in command line. I would assume that getting the list of running processes on a server would require higher privileges than accessing the admin-ui, which suggests that the passwords should not be exposed there.\nAlso, the /admin/info/properties API would expose password were set differently.\n\nI know our start scripts recently still set some of this ssl stuff via the command line, but if that is still the case, we should fix that too.\nIs there a jira for that? I would be happy looking into it. ",
            "author": "Mano Kovacs",
            "id": "comment-15901050"
        },
        {
            "date": "2017-03-09T07:08:08+0000",
            "content": "So I think we want to make sure the search for 'password' is case insensitive due to things like javax.net.ssl.trustStorePassword. Could use a test for that too.\n\nWe should move RedactionUtils.java to org.apache.solr.util probably.\n\nGreg did something similar in Cloudera Search lucene-solr repo as a temporary hack, but used '-REDACTED-' I think that is more clear than the ****** redaction string. \n\nGiven the affect this could have on tools/scripts that read output, I think it's not a huge deal if we changed it, but I don't see a strong reason to do it and that should usually favour back compat, even if we would guess those affected might be very few. We can do it by default in 7 and anyone looking for this in 6.5 and beyond will know they need it and it didn't exist in 6.4 and < and can turn it on. Seems like the least friction. ",
            "author": "Mark Miller",
            "id": "comment-15902592"
        },
        {
            "date": "2017-03-09T14:58:06+0000",
            "content": "Mark Miller, thank you for the review and comments!\n\n\n\tI added test for case-sensitive property name, it in fact was not properly working.\n\tI changed the redaction text to the one that Greg added. Actually this patch is the generalization of his original intent.\n\tI made the system property redaction configurable with default true. 6.x backport only need to vary by the default value of that configuration to have it turned off.\n\n ",
            "author": "Mano Kovacs",
            "id": "comment-15903161"
        },
        {
            "date": "2017-03-14T10:13:50+0000",
            "content": "Commit 91c3f78f8fafbd95cd375bb114e80831ba50d525 in lucene-solr's branch refs/heads/master from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=91c3f78 ]\n\nSOLR-10076: Hide keystore and truststore passwords from /admin/info/* outputs. ",
            "author": "ASF subversion and git services",
            "id": "comment-15923922"
        },
        {
            "date": "2017-03-14T10:15:16+0000",
            "content": "Thanks Mano Kovacs! I fixed the testDisabledRedaction tests (was still the same as when enabled), everything else looks good. Can you put up a backport with it defaulting to off? ",
            "author": "Mark Miller",
            "id": "comment-15923925"
        },
        {
            "date": "2017-03-14T11:15:52+0000",
            "content": "Commit ddda27e4deab45b9a6bfec8d61319b00f88e27f6 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ddda27e ]\n\nSOLR-10076: 'String.format(Locale.ROOT,...' instead of (forbidden API) 'String.format(...)' ",
            "author": "ASF subversion and git services",
            "id": "comment-15923998"
        },
        {
            "date": "2017-03-14T11:45:43+0000",
            "content": "Thanks Mark Miller! Sorry for the non-finished test, I will be more careful next time.\n\nI attached the 6x backport with default false configuration. It includes Christine Poerschke's patch about forbidden API. (Did not know about that, thank you!) ",
            "author": "Mano Kovacs",
            "id": "comment-15924048"
        },
        {
            "date": "2017-03-24T17:42:43+0000",
            "content": "Commit 81e85993bd32f6475e762086bbd4f32dec76ca53 in lucene-solr's branch refs/heads/branch_6x from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=81e8599 ]\n\nSOLR-10076: Hide keystore and truststore passwords from /admin/info/* outputs. ",
            "author": "ASF subversion and git services",
            "id": "comment-15940801"
        },
        {
            "date": "2017-03-24T19:19:28+0000",
            "content": "Thanks Mano Kovacs! We missed 6.5, so I have to move the changes entry on master and then I'll close. ",
            "author": "Mark Miller",
            "id": "comment-15940979"
        },
        {
            "date": "2017-03-27T14:48:47+0000",
            "content": "Commit e11c86f6e4f85fc4ea561283cf6d2fa8c8df2208 in lucene-solr's branch refs/heads/master from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e11c86f ]\n\nSOLR-10076: Move changes entry to 6.6 release. ",
            "author": "ASF subversion and git services",
            "id": "comment-15943392"
        }
    ]
}