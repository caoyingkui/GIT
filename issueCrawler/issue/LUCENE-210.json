{
    "id": "LUCENE-210",
    "title": "[PATCH] Never write an Analyzer again",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "Hi All,\n\nI got sick of writing Analyzers, so I have re-worked some of the Analyzer and Filter code by making the \nTokenStream an interface (and Tokenizer and TokenFilter).  I then created a BaseAnalyzer class that you \nset a tokenizer on and you set a list of TokenFilters.  The tokenStream() method then applies the \ntokenizer and then loops over the list of TokenFilters, applying each one in order and returning the last \none, just as I am sure you have done many a time before.  One requirement for this to work is that the \nFilters and Tokenizers must allow any state information to be re-initialized through the init() method \non TokenStream.  \n\nAlso created AbstractTokenizer and AbstractTokenFilter which are trivial implementations of Tokenizer \nand TokenFilter respectively.  I have made all existing tokenizers and filters backwards compatible.\n\nLet me know if you like or dislike and what changes you would like me to make.  I ran all regression \ntests and they all worked.  I also wrote a TestBaseAnalyzer to test my new Analyzer.  See the Test for \nusage of the Analyzer.  I haven't done a full scale indexing test on it yet, but will soon.",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--analysis.zip": "https://issues.apache.org/jira/secure/attachment/12312338/ASF.LICENSE.NOT.GRANTED--analysis.zip",
        "ASF.LICENSE.NOT.GRANTED--analyzer.tar.gz": "https://issues.apache.org/jira/secure/attachment/12312337/ASF.LICENSE.NOT.GRANTED--analyzer.tar.gz",
        "ASF.LICENSE.NOT.GRANTED--analyzer.patch": "https://issues.apache.org/jira/secure/attachment/12312336/ASF.LICENSE.NOT.GRANTED--analyzer.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2004-04-04T05:51:16+0000",
            "content": "Created an attachment (id=11118)\nThe patch file, will need 4 new files as well ",
            "author": "Grant Ingersoll",
            "id": "comment-12321673"
        },
        {
            "date": "2004-04-04T05:51:43+0000",
            "content": "Created an attachment (id=11119)\nThe 4 new files needed ",
            "author": "Grant Ingersoll",
            "id": "comment-12321674"
        },
        {
            "date": "2004-04-07T00:00:17+0000",
            "content": "I have not looked at this code yet, but I wonder if it is thread friendly? \nThere are many cases where an Analyzer might be used concurrently by multiple\nthreads, e.g., when constructing snippets, or when indexing.  This is difficult\nto do without constructing new TokenStreams for each call to\nAnalyzer.tokenStream(), which it sounds like your implementation does not do. ",
            "author": "cutting@apache.org",
            "id": "comment-12321675"
        },
        {
            "date": "2004-06-15T04:47:53+0000",
            "content": "The second attachment is in \"tar.gz\" format. ",
            "author": "Rasik Pandey",
            "id": "comment-12321676"
        },
        {
            "date": "2004-08-24T06:26:13+0000",
            "content": "Moving a patch from email to Bugzilla, in order not to lose it and in order to\nbring it to attention of others.\n\n\nFrom:\t\"Rasik Pandey\" <rasik.pandey@ajlsm.com>\nTo:\t\"'Lucene Developers List'\"\nSubject:\tanalyzer refactoring\nDate:\tMon, 21 Jun 2004 19:48:58 +0200\n\nHello,\n\nAs mentioned in previous exchanges, notably with Grant Ingersoll, I \nadded some new classes to the \"analysis\" package to meet the requirements \nof the feature request in Bugzilla \n(http://issues.apache.org/bugzilla/show_bug.cgi?id=28182) and did some \nrefactoring while I was under-the-hood. This is an overview of the \nhierarchies per my changes:\n\n-Analyzer\n--CustomAnalyzer (new abstract class largely based on Grant's \nBaseAnalyzer)\n--AbstractAnalyzer (new abstract class)\n---RussianAnalyzer\n---GermanAnalyzer\n---etc.\n\n-Tokenizer\n--CloneableTokenizer (new abstract class)\n---StandardTokenizer\n---CharTokenizer\n---CJKTokenizer\n---etc.\n\n-TokenFilter\n--CloneableTokenFilter (new abstract class)\n---AbstractStemFilter (new abstract class)\n----RussianStemFilter\n----GermanStemFilter\n----etc.\n\n-Stemmer (very simple new interface used in AbstractStemFilter)\n--PorterStemmer\n--RussianStemmer\n--etc.\n\nIn the attached zip file there are 3 diff files (core.analysis, \nsandbox.analysis, and sandbox.analysis.snowball) and a zip containing the new \nclasses for org.apache.lucene.analysis in the lucene core. I tried to \nminimize the irrelevant code changes (e.g. style, spaces, etc.) in the \ndiffs while conforming to the code formatting guidelines outlined by \nOtis. I think there were a number of classes in the \"analysis\" package \nthat didn't conform so these diffs may have a lot of noise as I \nreformatted those classe with my IDE, sorry  . If the diffs are too painful \nthen let me know and I'll try to prune them. \n\nIf there is a TODO list specific to Analyzers, are the below items on \nthat list?\n\n1) move German and Russian packages to sandbox (I think this is on the \nLucene TODO list)\n2) Analyzer class renaming such that dynamic configuration could return \nclasses like Analyzer_ru, Analyzer_de, Analyzer_fr, etc. based on the \nclass naming scheme \"Analyzer_\n{Locale.toString}\n\"\n3) Documentation\n\nQuestion, comments, feedback, criticisms are all welcome......\n\nRegards,\nRBP\n\nPS - Thanks Grant! ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321677"
        },
        {
            "date": "2004-08-24T06:28:38+0000",
            "content": "Created an attachment (id=12514)\nZIP file with contribution described above ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321678"
        },
        {
            "date": "2004-08-24T14:49:20+0000",
            "content": "Also see #29756  ",
            "author": "Daniel Naber",
            "id": "comment-12321679"
        }
    ]
}