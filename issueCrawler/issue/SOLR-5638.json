{
    "id": "SOLR-5638",
    "title": "Collection creation partially works, but results in unusable configuration due to missing config in ZK",
    "details": {
        "affect_versions": "4.6",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Need help properly recovering from 'collection gets created without config being defined'.\n\nRight now, if you submit a collection create and the config is missing, it will proceed with partially creating cores, but then the cores fail to load. \n\nThis requires manual intervention on the server to fix unless you pick a new colllection name:\n\nWhat's worse - if you retry the create a second time, it will usually try to create the replicas in the opposite order, resulting in TWO broken cores on each box, one for each attempted replica. \n\nbeta1-newarch_hive1_v12_shard1_replica1: org.apache.solr.common.cloud.ZooKeeperException:org.apache.solr.common.cloud.ZooKeeperException: Specified config does not exist in ZooKeeper:hivepoint-unknown\nbeta1-newarch_hive1_v12_shard1_replica2: org.apache.solr.common.cloud.ZooKeeperException:org.apache.solr.common.cloud.ZooKeeperException: Specified config does not exist in ZooKeeper:hivepoint-unknown\n\n\nI already know how to clear this up manually, but this is something where solr is allowing a condition in external service to result in a corrupted/partial configuration. \n\nI can see an easy option for resolving this as a workaround - allow a collection CREATE operation to specify \"reuseCores\"  - i.e. allow it to use an existing core of the proper name if it already exists. \n\nRight now you wind up getting:\n\norg.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException:Error CREATEing SolrCore 'beta1-newarch_hive1_v12_shard1_replica1': Could not create a new core in solr/beta1-newarch_hive1_v12_shard1_replica1/as another core is already defined there\n\norg.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException:Error CREATEing SolrCore 'beta1-newarch_hive1_v12_shard1_replica2': Could not create a new core in solr/beta1-newarch_hive1_v12_shard1_replica2/as another core is already defined there",
    "attachments": {
        "SOLR-5638.patch": "https://issues.apache.org/jira/secure/attachment/12625065/SOLR-5638.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Nathan Neulinger",
            "id": "comment-13874134",
            "date": "2014-01-16T23:20:21+0000",
            "content": "Alternatively/additionally - solr really should be checking for validity of the requested create. If you ask for a configName, and it doesn't exist - error out then instead of proceeding with the create that is guaranteed to fail as a whole.\n\n\nProcedure to reproduce: do a collection create for a config name that doesn't exist in ZK. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13881116",
            "date": "2014-01-24T16:31:10+0000",
            "content": "This patch simply unloads the core after failure so that discovery mechanism doesn't try to reload it. Probably not the best solution but seems to work for scenarios I've faced so far. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13881127",
            "date": "2014-01-24T16:45:38+0000",
            "content": "We should fail fast if the config does not exist - avoid even trying to create those cores.\n\nThis can probably happen in other scenarios as well though, so probably a good idea to consider Steve's approach as well. "
        },
        {
            "author": "Nathan Neulinger",
            "id": "comment-13881131",
            "date": "2014-01-24T16:48:11+0000",
            "content": "Will the unload result the core still being on the disk - just not loaded? In which case, what happens when the create collection is requested again and it decides to lay out the replicas in the other order? "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13881249",
            "date": "2014-01-24T18:23:55+0000",
            "content": "Yes, we should fail fast instead of this, hence the comment about this not being the best solution. But it avoids seeing errors again and again about core not being able to load.\n\nAs for recreating the collection in a different order, I haven't specifically checked, but assume you'd end up with the new cores properly created and the old ones would remain on disk, unloaded.\n\nAgain, this isn't a real solution, just a band-aid to reduce the impact. "
        },
        {
            "author": "David Smiley",
            "id": "comment-15264364",
            "date": "2016-04-29T17:19:03+0000",
            "content": "I'm closing this issue since it has already been fixed in some Solr version or another; not sure which.  I verified for sure in 6.x... and I see the check in 5.4 and it probably got added even prior to that.\n(not sure what JIRA resolution is right for this scenario but I'll just use \"Fixed\") "
        }
    ]
}