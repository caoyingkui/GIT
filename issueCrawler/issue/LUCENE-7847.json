{
    "id": "LUCENE-7847",
    "title": "RangeFieldQuery optimization for \"all docs match\" is broken",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "6.6",
            "7.0"
        ]
    },
    "description": "RangeFieldQuery tries to detect based on the min/max values of the field whether all values match. However this detection is broken and can sometimes consider that all documents match when they actually don't.",
    "attachments": {
        "LUCENE-7847.patch": "https://issues.apache.org/jira/secure/attachment/12869436/LUCENE-7847.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16021008",
            "date": "2017-05-23T10:24:43+0000",
            "content": "I found this while digging LUCENE-7807. Here is a patch but I'm still looking for ways to make tests more likely to expose such issues. Separately I tend to find it hard to reason about all possible range types in the compare logic. I think it'd be easier to read if we had a separate method for each query type? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16021256",
            "date": "2017-05-23T14:29:41+0000",
            "content": "Here is an updated patch. I make the tiny case run multiple times since it is cheap, and changed random value generation so that it is more likely to trigger \"interesting\" cases, such as a query range that is equal to the indexed range. This found a test bug in the ip range test, which used Object.equals instead of Arrays.equals to compate two byte[]. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16021419",
            "date": "2017-05-23T16:29:40+0000",
            "content": "+1 \nLove the simplicity of the scorer and thanks for making the test more evil! ",
            "author": "Nicholas Knize"
        },
        {
            "id": "comment-16021442",
            "date": "2017-05-23T16:46:38+0000",
            "content": "Commit 5de10a64b1e6e584640e6a7fdb1bbd1ba7e766d7 in lucene-solr's branch refs/heads/branch_6_6 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5de10a6 ]\n\nLUCENE-7847: Fix the all-docs-match optimization of range queries on range fields. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16021443",
            "date": "2017-05-23T16:46:42+0000",
            "content": "Commit 8db5e5acfae2335a63c3f845158fbcc6d9471677 in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8db5e5a ]\n\nLUCENE-7847: Fix the all-docs-match optimization of range queries on range fields. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16021445",
            "date": "2017-05-23T16:47:02+0000",
            "content": "Commit 14320a584c7771c63fba4de868c51ee9a5cf06de in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=14320a5 ]\n\nLUCENE-7847: Fix the all-docs-match optimization of range queries on range fields. ",
            "author": "ASF subversion and git services"
        }
    ]
}