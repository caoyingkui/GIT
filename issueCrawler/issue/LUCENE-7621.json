{
    "id": "LUCENE-7621",
    "title": "Per-document minShouldMatch",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "New Feature",
        "components": [],
        "fix_versions": [
            "7.1",
            "master (8.0)"
        ]
    },
    "description": "I have seen similar requirements a couple times but could not find any related issue so I am opening one now. The idea would be to allow passing a LongValuesSource rather than an integer as the minShouldMatch parameter of BooleanQuery so that the number of required clauses can depend on the document that is being matched. In terms of implementation, it looks like it would be straightforward as we would just have to update the value of minShouldMatch in MinShouldMatchSumScorer.setDocAndFreq and things would still be efficient, ie. we would still use advance on the costly clauses.\n\nThis kind of feature would allow to run queries that must match eg. 80% of the terms that a document contains (by indexing the number of terms in a separate field). It would also make it possible for Luwak or ES' percolator to index boolean queries that have a value of minShouldMatch greater than 1 more efficiently.\n\nI do not have any plans to work on it soon but I am curious how much interest this feature would drive.",
    "attachments": {
        "LUCENE-7621.patch": "https://issues.apache.org/jira/secure/attachment/12882603/LUCENE-7621.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15802649",
            "date": "2017-01-05T21:59:37+0000",
            "content": "Could this also work when the clauses are SynonymQueries? ",
            "author": "Paul Elschot"
        },
        {
            "id": "comment-15802664",
            "date": "2017-01-05T22:03:17+0000",
            "content": "I think so, it should work with any query. Is there something that makes you think synonym queries would be more complicated? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15802710",
            "date": "2017-01-05T22:20:29+0000",
            "content": "Starting from the number of indexed terms in a doc, when more than one of any synonym occurs, such extra occurrences would have to be ignored for counting the number of present clauses. ",
            "author": "Paul Elschot"
        },
        {
            "id": "comment-16133162",
            "date": "2017-08-18T15:48:52+0000",
            "content": "Here is a patch that adds such a query in the sandbox. It can't be as smart as MinShouldMatchSumScorer due to the fact that it can't predict values of the number of required clauses, but it is still smarter than a DisjunctionSumScorer whose two-phase iterator would check the freq(). ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16133200",
            "date": "2017-08-18T16:15:14+0000",
            "content": "+1, I've needed this in the past as well. ",
            "author": "Yonik Seeley"
        },
        {
            "id": "comment-16134969",
            "date": "2017-08-21T09:56:21+0000",
            "content": "Commit 8461a240393b140d9264f2a9110e05c584b200e3 in lucene-solr's branch refs/heads/branch_7x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8461a24 ]\n\nLUCENE-7621: Add CoveringQuery, a query whose required number of matching clauses can be defined per document. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16134971",
            "date": "2017-08-21T09:56:25+0000",
            "content": "Commit bb9b82f98b052e8ccdda9cfae8333cc1bd30d4dd in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bb9b82f ]\n\nLUCENE-7621: Add CoveringQuery, a query whose required number of matching clauses can be defined per document. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16207456",
            "date": "2017-10-17T11:04:19+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar"
        }
    ]
}