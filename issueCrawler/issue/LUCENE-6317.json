{
    "id": "LUCENE-6317",
    "title": "Fix readStringStringMap api",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Sub-task"
    },
    "description": "Currently this api is not very efficient, and always returns a mutable map.\n\nCan we change it to allow immutability? its sad we don't return Collections.emptyMap so its the same instance for all empty cases.",
    "attachments": {
        "LUCENE-6317.patch": "https://issues.apache.org/jira/secure/attachment/12701700/LUCENE-6317.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14342231",
            "author": "Robert Muir",
            "date": "2015-03-01T14:06:48+0000",
            "content": "I think we should deprecate the current readStringStringMap/readStringSet and define new ones that:\n\n\twrite the size as vint (int is stupid here)\n\talways return immutable maps/sets. this just matches how lucene works.\n\n "
        },
        {
            "id": "comment-14342236",
            "author": "Robert Muir",
            "date": "2015-03-01T14:10:40+0000",
            "content": "This means bumping formats of .si/.fis/segments_N, but I think its the right thing to do. Once a segment is read, the structures encoded in these maps should not be modified by anyone.\n\nAlternatively, we could keep the format the same, but then we leave the bloated 4 byte size, we change behavior in a scary way of an existing method, etc. To me this is not better, only easier. "
        },
        {
            "id": "comment-14342258",
            "author": "Robert Muir",
            "date": "2015-03-01T14:43:26+0000",
            "content": "Here are my proposed new methods and simple tests. They also remove the leniency of null parameters at write.\n\nIf this is ok, I can work on fixing .si/.fis/.sis to use them. "
        },
        {
            "id": "comment-14342281",
            "author": "Michael McCandless",
            "date": "2015-03-01T15:27:08+0000",
            "content": "+1 for this approach, thanks Rob. "
        },
        {
            "id": "comment-14342289",
            "author": "Robert Muir",
            "date": "2015-03-01T15:35:28+0000",
            "content": "Updated patch. I bumped segments_N, .fis, and .si to use the new methods.\n\nIn general i tried to push immutability / non-nullness into the corresponding apis more too.\n\nI think this is safer and cleaner and helps with the memory issues Mike wants to tackle. "
        },
        {
            "id": "comment-14342291",
            "author": "Robert Muir",
            "date": "2015-03-01T15:42:41+0000",
            "content": "Just includes the fix for memoryindex. It was passing null where it should pass Collections.emptyMap() "
        },
        {
            "id": "comment-14342301",
            "author": "Michael McCandless",
            "date": "2015-03-01T15:54:29+0000",
            "content": "In Lucene50SegmentInfoFormat.java you can move the Collections.unmodifiableMap under the else clause of if (format >= VERSION_SAFE_MAPS) ?  Can those other two maps be immutable?\n\nI see new HashMap<>() sometimes and Collections.emptyMap other times.\n\nIs there any way to assert the incoming maps to SI and FI are in fact immutable, besides trying to add something to them? "
        },
        {
            "id": "comment-14342308",
            "author": "Robert Muir",
            "date": "2015-03-01T16:10:22+0000",
            "content": "\nIn Lucene50SegmentInfoFormat.java you can move the Collections.unmodifiableMap under the else clause of if (format >= VERSION_SAFE_MAPS) ? Can those other two maps be immutable?\n\nYes, thank you!\n\n\nI see new HashMap<>() sometimes and Collections.emptyMap other times.\nIs there any way to assert the incoming maps to SI and FI are in fact immutable, besides trying to add something to them?\n\nThat is because these classes (SI/FI) are mutable sometimes (e.g. when created by indexwriter), and other times immutable (when read by codec).\nThis is not a problem I can solve underneath this issue. "
        },
        {
            "id": "comment-14342310",
            "author": "Robert Muir",
            "date": "2015-03-01T16:16:56+0000",
            "content": "Adds more safety for old .si in Lucene50SegmentInfoFormat. "
        },
        {
            "id": "comment-14342320",
            "author": "Robert Muir",
            "date": "2015-03-01T16:45:03+0000",
            "content": "optimize the memory a bit more since we are immutable. Use treeset/map when the size is small to save ~64 bytes. "
        },
        {
            "id": "comment-14342336",
            "author": "Michael McCandless",
            "date": "2015-03-01T17:11:55+0000",
            "content": "This is not a problem I can solve underneath this issue.\n\nOK good: out of scope!\n\nLast patch looks great: +1\n\nThanks Rob. "
        },
        {
            "id": "comment-14342416",
            "author": "Robert Muir",
            "date": "2015-03-01T19:49:06+0000",
            "content": "added tests to BaseFieldInfoFormatTestCase and BaseSegmentInfoFormatTestCase that these maps are immutable. "
        },
        {
            "id": "comment-14342450",
            "author": "ASF subversion and git services",
            "date": "2015-03-01T20:33:21+0000",
            "content": "Commit 1663157 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1663157 ]\n\nLUCENE-6317: Fix readStringStringMap API, reduce memory usage "
        },
        {
            "id": "comment-14342630",
            "author": "ASF subversion and git services",
            "date": "2015-03-02T02:16:38+0000",
            "content": "Commit 1663194 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1663194 ]\n\nLUCENE-6317: Fix readStringStringMap API, reduce memory usage "
        },
        {
            "id": "comment-14495259",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:18+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}