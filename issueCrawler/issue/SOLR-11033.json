{
    "id": "SOLR-11033",
    "title": "Move out multi language field and fieldType to a separate example",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "examples"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The bulk of the schema file in the default configset has fieldType and dynamic field definition for  different languages.  Based on the discussion on SOLR-10967 if we move it to a separate config set and keep the default configset english only then the size will be dramatically reduced and make the schema file much more readable.",
    "attachments": {
        "add-field.png": "https://issues.apache.org/jira/secure/attachment/12919081/add-field.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-07T19:55:39+0000",
            "content": "Rough outline :\n\nCreate a example/multilanguage/conf folder. This could contain a bigger schema which has preconfigured definitions for all the languages ( including the contrib ones ) and the solrconfig file which has langid guessing. \n\nRemove all of the non english language definitions from the default configset\n\nTaking David Smiley's suggestion on a similar config refacor Jia this could be broken into two commits to make it more readable in the future. ",
            "author": "Varun Thacker",
            "id": "comment-16078598"
        },
        {
            "date": "2017-07-09T21:05:26+0000",
            "content": "Have you considered the possibility for \"implicit\" field types? Just as we have implicit request handlers in solrconfig (e.g. /admin) one could argue that the system could register some field types automatically and perhaps even lazily. Such types could be defined in a separate system_field_types.json file on schema-api format, resolved on class path, and if a user defines same type name in his schema.xml then that could override the system default, which would give perfect backward compat.\n\nSuch a implicit default would need to be handled with care wrt back-compat. We could say that we add system_field_types_7_1.json instead of changing the 7_0 one, and use luceneMatchVersion to choose which one to load, not to break users expectations. Benefit is that we could also factor out all the other fieldTypes and the default schema becomes very slim... ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16079721"
        },
        {
            "date": "2018-04-02T22:47:54+0000",
            "content": "I'm not sure I'm sold on implict field types . How would one configure the synonyms / stopwords files for the implicit field_types ? It just makes things less transparent from what I am thinking right now\u00a0\n\nCould we we remove all the language specific field_types and dynamic fields from the default schema. Then create a page under http://lucene.apache.org/solr/guide/7_2/documents-fields-and-schema-design.html\u00a0called \"Language FieldTypes\" where we add curl commands to each of the current field-types that are out there in the default schema. And in the managed-schema just leave a comment to the ref-guide page\n\n\u00a0\n\n\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16423244"
        },
        {
            "date": "2018-04-02T23:08:51+0000",
            "content": "This feels like a push in the opposite direction what was ultimately done in SOLR-10574: instead of making\u00a0basic_configs more\u00a0basic we\u00a0 just completely unified it with data_driven_schema_configs and got the worst of both worlds.\n\nI'm in favor of _default being as small as possible, as long as there is a kitchen_sink_configs that has every possible feature on the planet.\u00a0 ideally that's what bin/solr -e cloud should use by default. ",
            "author": "Hoss Man",
            "id": "comment-16423269"
        },
        {
            "date": "2018-04-12T23:51:27+0000",
            "content": "How\u00a0about this approach:\n\n\tRemove the different languages them from the default configset\n\tWe don't add a kitchen_sink_configset\u00a0\n\tWhen a user tries to create a collection using \"./bin/solr create -c collection_name\" provide a flag to \"enable language support\".\u00a0\u00a0We'll use the\u00a0SolrJ Schema API and\u00a0add the\u00a0necessary fieldtypes and dynamic fields\u00a0\nIt could even be more granular like \"add all languages\" or \"add Japanese\" if we want it to\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16436498"
        },
        {
            "date": "2018-04-14T15:50:26+0000",
            "content": "My thought was that we could have a kitchen sink schema and some UI to copy a definition from one to another. So, when a user wants to add fields types, they mount/deploy that core and copy definitions over using Admin UI and management API. Though I am not sure how that plays with language stop-words files and the like. ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-16438395"
        },
        {
            "date": "2018-04-14T22:10:54+0000",
            "content": "I'm not sure I'm sold on implict field types\n\u00a0\n I agree that \"implicit\" field types may be a bad idea, if they are just magically part of your schema without you seeing them.\u00a0But a slight variation to this could be to have a \"schema-templates\" folder somewhere in the system, which can contain a number of JSON files with various pre-defined field-types. We'd put our language specific field type templates (cause that's what they are) in there, and when user\u00a0adds a field in the Schema UI, those templates will be available in the\u00a0\"field type\" dropdown, below a -templates- divider:\n\n\n\nSelecting one of the templates would display a notice \"Field type template 'text_ca' will be added to your schema\".\n\nWould be cool if user got a chance to edit the field type template before addition. But we don't have a field type edit UI. Now that we have v2 API introspection it should be a whole lot easier to make\u00a0such a \"Add Field Type\" and \"Edit Field Type\" buttons to the Schema panel in Admin UI, letting the user add/change filters in the UI, choosing among available analysis components through SPI lookup! We would of course also offer the list of templates when clicking\u00a0the \"Add Field Type\" button. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16438524"
        }
    ]
}