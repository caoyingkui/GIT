{
    "id": "SOLR-7915",
    "title": "Provide pluggable Velocity context tool facility",
    "details": {
        "components": [
            "contrib - Velocity"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "5.3",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Currently the \"tools\" placed in the VelocityResponseWriter's context are hard-coded.  It can be very handy to be able to plug in 3rd party or custom tools (just any ol' Java object a \"tool\" can be).\n\nHere's a list of the currently hard-coded tools: https://github.com/apache/lucene-solr/blob/trunk/solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter.java#L189-L199\n\n\n\nThe implementation committed allows custom tools to be registered as part of the VelocityResponseWriter definition in solrconfig.xml like this:\n\n\n        <queryResponseWriter name=\"velocityWithCustomTools\" class=\"solr.VelocityResponseWriter\">\n          <lst name=\"tools\">\n            <str name=\"mytool\">com.example.solr.velocity.MyTool</str>\n            <!-- ... -->\n          </lst>\n        </queryResponseWriter>",
    "attachments": {
        "SOLR-7915.patch": "https://issues.apache.org/jira/secure/attachment/12753415/SOLR-7915.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-31T23:48:50+0000",
            "author": "Erik Hatcher",
            "content": "Here's a patch to implement this feature, including passing tests.\n\nThe one debatable piece in here is the use of SolrCore.createInstance.  Noble Paul - thoughts?  What's the best way moving forward to instantiate classes that are dynamically \"plugged in\" either via <lib>, lib/, or blob store. ",
            "id": "comment-14724410"
        },
        {
            "date": "2015-09-01T11:20:11+0000",
            "author": "Noble Paul",
            "content": "ideally the design could be as follows\n\nVRW can implement ResourceLoaderAware . It should have the appropriate ResourceLoader depending on whether it had runtimeLib=true specified or not it would get the right ResourceLoader\n\nuse the resourceLoader on core.createInstance() to instantiate your tool\n\n ",
            "id": "comment-14725215"
        },
        {
            "date": "2015-09-01T23:52:39+0000",
            "author": "Erik Hatcher",
            "content": "Unfortunately VrW has no `awareCompatibility` entry (see SolrResourceLoader), so that technique doesn't work without other changes, but the SolrCore.createInstance using SolrCore's getResourceLoader works well in the tests (and also in a deployed environment with real custom tools in a separate JAR file referred to in <lib>). ",
            "id": "comment-14726441"
        },
        {
            "date": "2015-09-02T00:12:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700691 from Erik Hatcher in branch 'dev/trunk'\n[ https://svn.apache.org/r1700691 ]\n\nSOLR-7915: Provide pluggable context tool support for VelocityResponseWriter ",
            "id": "comment-14726462"
        },
        {
            "date": "2015-09-02T00:16:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700692 from Erik Hatcher in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700692 ]\n\nSOLR-7915: Provide pluggable context tool support for VelocityResponseWriter (merged from trunk r1700691) ",
            "id": "comment-14726463"
        },
        {
            "date": "2015-09-02T00:17:11+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700693 from Erik Hatcher in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700693 ]\n\nSOLR-7915: Provide pluggable context tool support for VelocityResponseWriter (merged from trunk r1700691) ",
            "id": "comment-14726464"
        },
        {
            "date": "2015-11-09T16:59:27+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Will this also be configurable through the other ways we do it? paramsets, REST, etc? Not sure if  <lst name=\"tools\"> would cause issues. Noble Paul? ",
            "id": "comment-14996895"
        },
        {
            "date": "2015-11-09T17:16:56+0000",
            "author": "Erik Hatcher",
            "content": "paramsets are for search handlers, so doesn't relate to this.  But definitely the REST API should be able to handle this.  I've not tested that, but it is legitimate response writer configuration capabilities being used here.   ",
            "id": "comment-14996926"
        },
        {
            "date": "2015-11-09T21:14:20+0000",
            "author": "Erik Hatcher",
            "content": "I just tested this, thanks for asking Alexandre Rafalovitch (on a clean branch_5x checkout) - \n\n\nbin/solr create -c files -d example/files\nbin/post -c files ~/Documents/TestDocs\ncurl http://localhost:8983/solr/files/config -H 'Content-type:application/json' -d '{\n  \"add-queryresponsewriter\":{\n    \"name\":\"celeritas\",\n    \"class\":\"solr.VelocityResponseWriter\",\n    \"params.resource.loader.enabled\": \"true\",\n    \"tools\":{\n      \"just_a_string\":\"java.lang.String\"\n    }\n  }\n}'\n\n\n\nIt modifies configoverlay.json with:\n\n{\"queryResponseWriter\":{\"celeritas\":{\n      \"name\":\"celeritas\",\n      \"class\":\"solr.VelocityResponseWriter\",\n      \"params.resource.loader.enabled\":\"true\",\n      \"tools\":{\"just_a_string\":\"java.lang.String\"}}}}\n\n\n\nAnd that behaves as expected leveraging the new tool, http://localhost:8983/solr/files/select?q=*:*&wt=celeritas&v.template=foo&v.template.foo=$response.results.numFound:%20(and%20btw:%20just_a_string.class%20=%20$just_a_string.class) responds with:\n\n\n328: (and btw: just_a_string.class = class java.lang.String)\n\n\n\nThe example really is a glorified version of outputting, through a Velocity template (provided in the request, and enabled by params resource loader), $just_a_string.class, showing that the tool $just_a_string was created and methods can be called on it. ",
            "id": "comment-14997371"
        }
    ]
}