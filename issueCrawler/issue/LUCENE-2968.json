{
    "id": "LUCENE-2968",
    "title": "SurroundQuery doesn't support SpanNot",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "It would be nice if we could do span not in the surround query, as they are quite useful for keeping searches within a boundary (say a sentence)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-03-16T08:39:31+0000",
            "content": "SpanNot filters on no(t) overlap. Any idea for an operator name?\nspn nov nto ... ? ",
            "author": "Paul Elschot",
            "id": "comment-13007385"
        },
        {
            "date": "2011-03-16T08:48:18+0000",
            "content": "This could also be an opportunity to port Surround to the new query parser in Lucene. ",
            "author": "Paul Elschot",
            "id": "comment-13007388"
        },
        {
            "date": "2011-03-17T12:40:55+0000",
            "content": "spn works for me, or simply ! maybe.\n\nThis could also be an opportunity to port Surround to the new query parser in Lucene.\n\nThat's up to you. ",
            "author": "Grant Ingersoll",
            "id": "comment-13007901"
        },
        {
            "date": "2011-03-17T21:55:13+0000",
            "content": "I had a look at the precedence parser. It would probably have been worthwhile to use it from the start, but now it would be an almost complete rewrite, which is too much for relatively small changes.\n\nOTOH, after looking at the Surround code into some depth again after a few years, I would do a few things differently when now.\n\nThe ...Query names in the surround.query package would indeed better be ...Node, just as in the precedence parser. Also the check for allowed distance subqueries would be better done in the parser itself by restricting the syntax.\n\nAnother thing that I don't really like now is the lack of weights in span query scoring. It works without weighting now, but there is room for improvement.\n\nWhich brings me to Spans. It is an abstract class nowadays (and no more an interface, so a float score() or float weight() could  at least be added. But there has also been talk about removing Spans entirely, how is the situation there?\n\nAnyway, only adding support for SpanNot in Surround should be straightforward,\nI'll give it a try. ",
            "author": "Paul Elschot",
            "id": "comment-13008175"
        }
    ]
}