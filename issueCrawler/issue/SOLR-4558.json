{
    "id": "SOLR-4558",
    "title": "raw query parser cannot parse value \"{!\"",
    "details": {
        "affect_versions": "4.2",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "In QParser.getParser, local params are handled before passing the query to the parser plugin.  This means a query parser plugin will never see \"{!\" as a value to parse (even if the parsers syntax might allow that).  You could use parameter dereferencing, but that is awkward, and it is useful in general to be able to disable local params syntax.\n\nOne possible solution is to add an \"enableLocalParams\" parameter which, if set to false, will bypass looking for local params and go directly to constructing the parser, passing through the qstr unaltered.",
    "attachments": {
        "SOLR-4558.patch": "https://issues.apache.org/jira/secure/attachment/12574000/SOLR-4558.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan Ernst",
            "id": "comment-13604161",
            "date": "2013-03-16T08:21:45+0000",
            "content": "This patch adds the suggested \"enableLocalParams\" parameter. I'm waiting on https://issues.apache.org/jira/browse/SOLR-4559 (which adds QueryComponentTest) to add a test. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13604259",
            "date": "2013-03-16T14:02:56+0000",
            "content": "I'm not sure that attempting to disable on a query-wide basis is a good idea.\n\nWhen explicitly specified, the raw query parser handles any term value fine:\n\n&fq=\nUnknown macro: {!raw f=myfield} \ntherawvalue\n\n&fq=\nUnknown macro: {!raw f=myfield v=$param} \n&param=myrawvalue\n\nI assume the issue arises in conjunction with your other patch SOLR-4559, which I'm also not sure is a great idea (changing the default query parser type for filters).\n "
        }
    ]
}