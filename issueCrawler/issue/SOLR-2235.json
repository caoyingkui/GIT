{
    "id": "SOLR-2235",
    "title": "java.io.IOException: The specified network name is no longer available",
    "details": {
        "affect_versions": "1.3,                                            1.4,                                            1.4.1",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Using Solr 1.4 hosted with Tomcat 6 on Windows 2003\n\nSearch becomes unavailable at times. At the time of failure, solr admin page will be loading. But when we make search query we are getting the following error\n\n================\n\nHTTP Status 500 - The specified network name is no longer available java.io.IOException: The specified network name is no longer \navailable at java.io.RandomAccessFile.readBytes(Native Method) at java.io.RandomAccessFile.read(Unknown Source) at \norg.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.readInternal(SimpleFSDirectory.java:132) at \norg.apache.lucene.store.BufferedIndexInput.refill(BufferedIndexInput.java:157) at \norg.apache.lucene.store.BufferedIndexInput.readByte(BufferedIndexInput.java:38) at org.apache.lucene.store.IndexInput.readVInt\n(IndexInput.java:80) at org.apache.lucene.index.TermBuffer.read(TermBuffer.java:64) at \norg.apache.lucene.index.SegmentTermEnum.next(SegmentTermEnum.java:129) at org.apache.lucene.index.SegmentTermEnum.scanTo\n(SegmentTermEnum.java:160) at org.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:211) at \norg.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:179) at org.apache.lucene.index.SegmentReader.docFreq\n(SegmentReader.java:975) at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:627) at \norg.apache.solr.search.SolrIndexReader.docFreq(SolrIndexReader.java:308) at org.apache.lucene.search.IndexSearcher.docFreq\n(IndexSearcher.java:147) at org.apache.lucene.search.Similarity.idfExplain(Similarity.java:765) at \norg.apache.lucene.search.TermQuery$TermWeight.<init>(TermQuery.java:46) at org.apache.lucene.search.TermQuery.createWeight\n(TermQuery.java:146) at org.apache.lucene.search.Query.weight(Query.java:99) at org.apache.lucene.search.Searcher.createWeight\n(Searcher.java:230) at org.apache.lucene.search.Searcher.search(Searcher.java:171) at \norg.apache.solr.search.SolrIndexSearcher.getDocListNC(SolrIndexSearcher.java:1044) at \norg.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:940) at \norg.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:344) at \norg.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:178) at \norg.apache.solr.handler.component.CollapseComponent.process(CollapseComponent.java:118) at \norg.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:195) at \norg.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:131) at org.apache.solr.core.SolrCore.execute\n(SolrCore.java:1316) at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:336) at \norg.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:239) at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) at \norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at \norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233) at \norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) at \norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) at \norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) at \norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) at \norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286) at org.apache.coyote.http11.Http11AprProcessor.process\n(Http11AprProcessor.java:857) at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process\n(Http11AprProtocol.java:565) at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1509) at java.lang.Thread.run\n(Unknown Source) \n\n===========================\n\n\nThe error stops when we restart Tomcat.  We are using a file server to store the actual index files, which are not on the same machine as Solr/Tomcat. We have checked and confirmed with the network team that there was no issue. Can some one help us to fix the issue",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Harwood",
            "id": "comment-12931420",
            "date": "2010-11-12T15:22:03+0000",
            "content": "I've seen this on a (non Solr) Lucene deployment just recently.\nIt happens when the networked file system drops out temporarily leaving IndexReaders with invalidated file handles.\n\nThe solution we have implemented is to introduce a wrapper to detect this particular type of IOException and automatically attempt to reload the search services.\nThis is arguably a fault that shouldn't be tolerated (file systems shouldn't just disappear) but there's also the argument that if and when it does happen clients shouldn't be inconvenienced while sysadmins rush to reboot broken servers. "
        },
        {
            "author": "Antony Bowesman",
            "id": "comment-12932740",
            "date": "2010-11-17T00:53:01+0000",
            "content": "I've just been made aware of this issue also (non SOLR), also deployed with Tomcat, but Tomcat is not part of the thread stack where the problem is seen.  It's with Lucene 2.3.2 and Tomcat 6.  It seemed to occur for a week at the end of October, but has not been seen since.\n\njava.io.IOException: The specified network name is no longer available\n        at java.io.RandomAccessFile.readBytes(Native Method)\n        at java.io.RandomAccessFile.read(RandomAccessFile.java:322)\n        at org.apache.lucene.store.FSDirectory$FSIndexInput.readInternal(FSDirectory.java:550)\n        at org.apache.lucene.store.BufferedIndexInput.readBytes(BufferedIndexInput.java:131)\n        at org.apache.lucene.index.CompoundFileReader$CSIndexInput.readInternal(CompoundFileReader.java:240)\n        at org.apache.lucene.store.BufferedIndexInput.refill(BufferedIndexInput.java:152)\n        at org.apache.lucene.store.BufferedIndexInput.readByte(BufferedIndexInput.java:38)\n        at org.apache.lucene.store.IndexInput.readVInt(IndexInput.java:76)\n        at org.apache.lucene.index.TermBuffer.read(TermBuffer.java:63)\n        at org.apache.lucene.index.SegmentTermEnum.next(SegmentTermEnum.java:123)\n        at org.apache.lucene.index.SegmentTermEnum.scanTo(SegmentTermEnum.java:154)\n        at org.apache.lucene.index.TermInfosReader.scanEnum(TermInfosReader.java:223)\n        at org.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:217)\n        at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:678)\n        at org.apache.lucene.index.MultiSegmentReader.docFreq(MultiSegmentReader.java:373)\n        at org.apache.lucene.index.MultiReader.docFreq(MultiReader.java:310)\n        at org.apache.lucene.search.IndexSearcher.docFreq(IndexSearcher.java:87)\n        at org.apache.lucene.search.Similarity.idf(Similarity.java:457)\n        at org.apache.lucene.search.TermQuery$TermWeight.<init>(TermQuery.java:44)\n        at org.apache.lucene.search.TermQuery.createWeight(TermQuery.java:146)\n        at org.apache.lucene.search.Query.weight(Query.java:95)\n        at org.apache.lucene.search.Searcher.createWeight(Searcher.java:171)\n        at org.apache.lucene.search.Searcher.search(Searcher.java:118)\n...\n\nIt doesn't have to be doing a search though as it also seems to happen in the IndexWriter.AddIndexesNoOptimize stack too. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13835710",
            "date": "2013-11-30T13:23:34+0000",
            "content": "2013 Old JIRA cleanup "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15538894",
            "date": "2016-10-01T17:41:49+0000",
            "content": "Ancient Tomcat issue. We no longer support Tomcat on top of all other reasons to close this. "
        }
    ]
}