{
    "id": "LUCENE-6002",
    "title": "Fix monster tests so they pass",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "general/test"
        ],
        "affect_versions": "5.0",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ]
    },
    "description": "The tests labelled @Monster are having a very hard time passing.  Initially, there were some real failures on tests that push the 2 billion envelope, as well as some test bugs regarding suite timeouts and the quantity of date sent to sysout.  Michael McCandless committed a fix for the real failures and the initial sysout problems.\n\nTrying to move @SuppressSysoutChecks to the definition of @Monster didn't work.  I'm also having trouble defining the suite timeouts.  One test that says it takes about 45 minutes hit the six hour timeout that I had configured for the suite, and failed.\n\nWhat sort of machine should we use as a \"normal\" machine for deciding on suite timeouts?  My machine is over four years old, but it's got three 2.5Ghz cores and 12GB of RAM.  That's certainly not a completely modern machine, but it's not exactly slow.",
    "attachments": {
        "LUCENE-6002.patch": "https://issues.apache.org/jira/secure/attachment/12674371/LUCENE-6002.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14165937",
            "author": "Shawn Heisey",
            "content": "I think my first order of business would be to figure out how to successfully add SuppressSysoutChecks and a large suite timeout to Monster itself so that these items do not need to be configured on the individual tests.  I added @SuppressSysoutChecks with a bugurl string immediately before the \"public @interface Monster\" line and had a test tagged @Monster fail, saying that there was too much output on sysout.\n\nDawid Weiss, I think you're our resident expert on the test infrastructure.  Is there something I might have done wrong when adding an annotation to Monster? ",
            "date": "2014-10-09T22:59:37+0000"
        },
        {
            "id": "comment-14166005",
            "author": "Ryan Ernst",
            "content": "If you want to ignore sysout checks for all monster tests, why not add checking for the monster annotation in the same place the SupressSysoutChecks annotation is checked (TestRuleLimitSysouts)? Then you won't need a fake bugurl.  Also, I think the reason it doesn't work is the SupressSysoutChecks annotation you are adding is on the Monstor annotation itself.  So if you wanted to make that work, i think you would have to check all the annotations recursively for supress sysout, but I don't think we want to do that. ",
            "date": "2014-10-09T23:45:47+0000"
        },
        {
            "id": "comment-14166514",
            "author": "Dawid Weiss",
            "content": "SupressSysoutChecks  is an annotation applied to test classes, not annotations. It's not a meta-annotation, in other words (it's an interesting idea to support this scenario, though).\n\nLike Ryan said \u2013 if you want to disable sysout checks on a selected group of tests, include the code to do so in TestRuleLimitSysouts directly. There's really not that much magic going on here. ",
            "date": "2014-10-10T07:25:52+0000"
        },
        {
            "id": "comment-14166815",
            "author": "Shawn Heisey",
            "content": "I think I actually figured out how to modify TestRuleLimitSysouts.  I've got isEnforced returning false if the Monster annotation is present.\n\nIs TimeoutSuite an annotation that I could apply to Monster?  From what I can tell, this check is entirely in carrot2 code. ",
            "date": "2014-10-10T13:11:59+0000"
        },
        {
            "id": "comment-14166917",
            "author": "Dawid Weiss",
            "content": "No. There are no \"meta\" support annotations. You need to apply them separately to each class annotated with Monster. Note that suite timeout applies to entire suites, not individual test cases. The easiest way to accomplish that would be to isolate a superclass MonsterTestCase from which all the monsters would inherit. Call it a mother-monster if you will. Then apply any annotation on that superclass (they are inherited).\n\nAll annotations (and the test runner/ code) are part of the randomizedtesting project and have nothing to do whatsoever with what we do in the open source (Carrot2) or commercially (Carrot Search). Do not spread confusion, it stays on the internet .\n\nhttps://github.com/carrotsearch/randomizedtesting ",
            "date": "2014-10-10T14:38:59+0000"
        },
        {
            "id": "comment-14166918",
            "author": "Dawid Weiss",
            "content": "I though about the meta-annotation concept a bit (so that annotations could be applied to interfaces, then applied). The problem with this is that then you hit multiple-inheritance problems which would have to be dealt with somehow. Now it's relatively easy because it follows Java rules for inheriting annotations from superclasses. I think I'll stick with this model. ",
            "date": "2014-10-10T14:40:31+0000"
        },
        {
            "id": "comment-14166939",
            "author": "Robert Muir",
            "content": "+1 to directly fix the monster tests. Also thanks for looking at them, as unfortunately I think they are very rarely run.\n\nMy thoughts are: try harder to not depend on them completely for coverage of what they test, and avoid creating monster tests whenever possible. They have no continuous integration... I like the idea of monster tests that are doing \"real\" things, but they aren't and will never be unit tests, they are not fun to debug, and if nobody is running them then they are not helping.\n\nWe should look at each monster test and think about alternative ways to test the scary parts, e.g. even if we can directly pass billions of things thru the codec API instead of actually indexing billions of docs, it might be fast enough for nightly... who knows.\n\nA good example is TestIndexWriterMaxDocs: it does in fact have a monster test that writes 2B docs. But this is kept very simple and only a sanity check really, because it has tons of other non-monster actual unit tests that e.g. change IW's limit and other tricks to test the boundary condition. ",
            "date": "2014-10-10T15:00:02+0000"
        },
        {
            "id": "comment-14168287",
            "author": "Shawn Heisey",
            "content": "With this patch applied, the following test commandline passed.  I believe this hits all the @Monster tests:\n\n\nant -Dtests.jvms=2 -Dtests.monster=true -Dtests.heapsize=5g -Dtests.class='*.Test2B*|.*TestIndexWriterMaxDocs' clean test | tee ~/monster-testlog.txt\n\n\n\nI may have gotten too specific in the info included in the test annotations, I'd like to know what others think.\n\nI'm trying the patch out on a larger suite of tests (monster, nightly, and weekly) using this commandline:\n\n\nant -Dtests.jvms=2 -Dtests.heapsize=5g -Dtests.nightly=true -Dtests.weekly=true -Dtests.monster=true clean test | tee ~/b5x-testlog.txt\n\n\n\nIt will be many hours before I know whether this works. ",
            "date": "2014-10-11T18:20:51+0000"
        },
        {
            "id": "comment-14168321",
            "author": "Dawid Weiss",
            "content": "\nMonster(\"takes ~20GB-30GB of space and 10 minutes, and more heap space sometimes\")\n\n\n\nall these estimates are really hardware-dependent and may be off by an order of magnitude I think (just as you can see in the diff). I think SSD vs. regular spindle may be one factor, default JVM heap another one.... you can multiply.\n\nThis data is valuable, it's just without a context it's no reference for anybody \u2013 you should at least include the machine specs from which these were measured.\n ",
            "date": "2014-10-11T20:12:57+0000"
        },
        {
            "id": "comment-14168324",
            "author": "Robert Muir",
            "content": "+1 to commit this. We should look into the huge time discrepancies after that. Maybe some of the tests allow simpletext or some other slow one and should just be wired to the default codec. Maybe some of assertingcodecs checks are too costly. ",
            "date": "2014-10-11T20:22:42+0000"
        },
        {
            "id": "comment-14168332",
            "author": "Shawn Heisey",
            "content": "Updated patch with comments about the specs of my test system.\n\nRobert's speculation about a slow codec being chosen by the randomization makes sense, it would explain why the person who initially added the @Monster notation had such a wildly different runtime than I'm seeing.  I won't discount differences in hardware, though.  This machine was built four years ago, and it wasn't top-shelf hardware even then.  I was trying to hit that sweet spot of performance vs. cost. ",
            "date": "2014-10-11T20:53:31+0000"
        },
        {
            "id": "comment-14168340",
            "author": "Shawn Heisey",
            "content": "If you can tell me how to limit the codecs, which codecs are the most important to test, and which tests should be limited in this way, I'll be happy to add that.  I'm also fine with it being handled in another issue. ",
            "date": "2014-10-11T21:09:40+0000"
        },
        {
            "id": "comment-14168343",
            "author": "Robert Muir",
            "content": "In my opinion these tests should supply the following to IndexWriterConfig:\n\n.setCodec(TestUtil.getDefaultCodec())\n\n ",
            "date": "2014-10-11T21:19:31+0000"
        },
        {
            "id": "comment-14168346",
            "author": "Robert Muir",
            "content": "I would also look for things like use of newField() <-- might introduce things like term vectors or other options that bloat space, newIndexWriterConfig() <-- might pick strangely inefficient IW options, etc. It would be good to see if any are using MockAnalyzer and think about how to disable payloads randomness there and so forth.\n\nIn general, I don't think monster tests should be randomized. These are integration tests at best and should just test our defaults. ",
            "date": "2014-10-11T21:22:04+0000"
        },
        {
            "id": "comment-14168351",
            "author": "Shawn Heisey",
            "content": "In my opinion these tests should supply the following to IndexWriterConfig:\n\nI will look deeper into the tests to see if I can figure out how to apply the knowledge you're imparting here and in your next comment.  I'm not 100% ignorant of how Lucene works internally, but I do find myself drowning easily whenever I start looking at it. ",
            "date": "2014-10-11T21:33:24+0000"
        },
        {
            "id": "comment-14168409",
            "author": "Robert Muir",
            "content": "These are just ideas for cleanup... but the current patch is good! ",
            "date": "2014-10-11T23:46:05+0000"
        },
        {
            "id": "comment-14168490",
            "author": "Shawn Heisey",
            "content": "Another patch update.  In all the places on Monster tests where it was obvious how to do it, the default codec is now selected for IndexWriterConfig. ",
            "date": "2014-10-12T03:08:55+0000"
        },
        {
            "id": "comment-14168562",
            "author": "Dawid Weiss",
            "content": "> I won't discount differences in hardware, though. This machine was built four years ago, and it wasn't top-shelf hardware even then. I was trying to hit that sweet spot of performance vs. cost.\n\nAll I'm saying is there's no mention of what hardware these figures in your comments come from \u2013 without such a point of reference I think they pretty useless (except for comparing relative cost). I'd add the test machine specs on Monster annotation's javadoc, for example. Is this a problem? ",
            "date": "2014-10-12T08:01:07+0000"
        },
        {
            "id": "comment-14168747",
            "author": "Shawn Heisey",
            "content": "Updating the patch.  It does have some comments about the hardware, near the Monster annotation in each place where a specific time is listed.\n\nI'm good with putting the info anywhere that makes sense.  If it should be elsewhere, let me know.\n\nOn my last test run with the changes in this patch, all Lucene tests passed with monster, nightly, and weekly enabled.  I will review the log from that run to see whether the approximate times were changed by choosing the default codec.\n\nIt said that 40 Solr tests failed on that last run. I have not yet compiled a list of reasons for those failures, but there was mention of running out of PermGen space in the stderr info right above the list of the first ten failed tests.  I assume that wouldn't be a problem if I were to use Java 8.\n\nBecause there are no Monster tests in Solr, I have to assume it's nightly or weekly.  I will wait for Dawid's input on where to mention hardware specs, then commit the resulting patch.  I'll open another issue for the Solr test failures.\n\nMichael McCandless contributed via commits r1629362, r1629363, r1629366 and r1629367.  This issue didn't exist at the time. ",
            "date": "2014-10-12T19:03:13+0000"
        },
        {
            "id": "comment-14168752",
            "author": "Shawn Heisey",
            "content": "Minor patch update, adjusting some time estimates. ",
            "date": "2014-10-12T19:15:24+0000"
        },
        {
            "id": "comment-14168755",
            "author": "Shawn Heisey",
            "content": "These are the top five slowest tests from the last run:\n\n\n[junit4:tophints] 23660.51s | org.apache.lucene.index.Test2BSortedDocValues\n[junit4:tophints] 20029.48s | org.apache.lucene.index.Test2BBinaryDocValues\n[junit4:tophints] 11658.54s | org.apache.lucene.index.Test2BTerms\n[junit4:tophints] 8377.50s | org.apache.lucene.index.TestIndexWriterMaxDocs\n[junit4:tophints] 7932.65s | org.apache.lucene.index.Test2BNumericDocValues\n\n ",
            "date": "2014-10-12T19:17:20+0000"
        },
        {
            "id": "comment-14168763",
            "author": "Dawid Weiss",
            "content": "Looks great, Shawn, thanks! ",
            "date": "2014-10-12T19:32:53+0000"
        },
        {
            "id": "comment-14168988",
            "author": "ASF subversion and git services",
            "content": "Commit 1631290 from Shawn Heisey in branch 'dev/trunk'\n[ https://svn.apache.org/r1631290 ]\n\nLUCENE-6002: Fix monster tests so they pass. ",
            "date": "2014-10-13T06:18:18+0000"
        },
        {
            "id": "comment-14168993",
            "author": "ASF subversion and git services",
            "content": "Commit 1631291 from Shawn Heisey in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1631291 ]\n\nLUCENE-6002: Fix monster tests so they pass (backport r1631290 from trunk). ",
            "date": "2014-10-13T06:21:32+0000"
        },
        {
            "id": "comment-14168998",
            "author": "Shawn Heisey",
            "content": "A second test run in lucene/ (weekly, nightly, and monster, two 5gb JVMs) passed.  Took 634 minutes. ",
            "date": "2014-10-13T06:24:50+0000"
        },
        {
            "id": "comment-14332713",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:01:29+0000"
        }
    ]
}