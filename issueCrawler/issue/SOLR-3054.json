{
    "id": "SOLR-3054",
    "title": "Add a TypeTokenFilterFactory",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Create a TypeTokenFilterFactory to make the TypeTokenFilter (filtering tokens depending on token types, see LUCENE-3671) available in Solr too.",
    "attachments": {
        "SOLR-3054_2.patch": "https://issues.apache.org/jira/secure/attachment/12511424/SOLR-3054_2.patch",
        "SOLR-3054_3.patch": "https://issues.apache.org/jira/secure/attachment/12511435/SOLR-3054_3.patch",
        "SOLR-3054.patch": "https://issues.apache.org/jira/secure/attachment/12511423/SOLR-3054.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Tommaso Teofili",
            "id": "comment-13190627",
            "date": "2012-01-22T08:40:25+0000",
            "content": "attached factory with unit test patch "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13190631",
            "date": "2012-01-22T09:13:10+0000",
            "content": "Hi Tommaso,\n\npatch look good, a few things:\n\n\tI think the default should be to enable positionIncrements. I have no idea what the default for the other FilteringTFs is, but Solr has the correct posIncr handling in its default configs enabled.\n\tThe MockResourceLoader is funny, but why do you need it? For the creation test, simply also use the supplied stoptype-files.\n\n "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13190636",
            "date": "2012-01-22T09:49:16+0000",
            "content": "Thanks Uwe, I've fixed the patch as per your comments.\nAlso I've added that TypeTokenFF implements the ResourceLoaderAware interface. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13190641",
            "date": "2012-01-22T10:28:09+0000",
            "content": "I looked up the other TokenFilters that filter tokens, unfortunately all of then default to enablePosIncr=false. I am not sure what the right solution is here? Consistency or correctness? Robert, whats your opinion?\n\nThe rest of the patch looks fine, I would only remove the try-catch blocks in the test methods and let the test method declare the exception. It then gets reported by JUnit with a failure automatically.\n\nThe question is, the wordset is initialized to be empty if missing. Does it make sense? I would maybe make the types file mandatory, as without the filter makes no sense. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13190643",
            "date": "2012-01-22T10:41:20+0000",
            "content": "I looked up the other TokenFilters that filter tokens, unfortunately all of then default to enablePosIncr=false. I am not sure what the right solution is here? Consistency or correctness?\n\nin the first patch I went for consistency but then your comment made me realize the enablePosIncr should be true by default. I mean, as a user I'd expect it to be true by default.\n\nI would only remove the try-catch blocks in the test methods and let the test method declare the exception. It then gets reported by JUnit with a failure automatically.\n\nok\n\nThe question is, the wordset is initialized to be empty if missing. Does it make sense? I would maybe make the types file mandatory, as without the filter makes no sense.\n\nright, need to fix that "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13190691",
            "date": "2012-01-22T15:00:58+0000",
            "content": "\nin the first patch I went for consistency but then your comment made me realize the enablePosIncr should be true by default. I mean, as a user I'd expect it to be true by default.\n\nI think we should open an issue to fix this in 4.0... I don't care if everything \nin the defaults^H^H^H^Hexample has it set to true, the factories should also default to true. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13190694",
            "date": "2012-01-22T15:27:46+0000",
            "content": "OK, I think we should commit them with \"false\" as default for consistency (especially in 3.x), and upgrade 4.0 in a separate issue. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13190708",
            "date": "2012-01-22T16:59:31+0000",
            "content": "updated patch:\n\n\tenablePosIncr set to false\n\tfixed unit tests for throwing Exceptions rather than try/catching\n\t'types' TypeTokenFF parameter is now mandatory (SolrException raised if not supplied)\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13190717",
            "date": "2012-01-22T17:31:13+0000",
            "content": "+1 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13190719",
            "date": "2012-01-22T17:35:52+0000",
            "content": "+1, I will commit this later! "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13190742",
            "date": "2012-01-22T19:00:15+0000",
            "content": "Committed trunk revision: 1234573 (main), 1234579 (removal of unneeded assureMatchVersion check)\nCommitted 3.x revision: 1234580\n\nAs noted, I removed the not-needed assureMatchVersionCheck(), as this filter does not use the matchVersion at all. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13190749",
            "date": "2012-01-22T19:45:06+0000",
            "content": "Thanks Uwe "
        }
    ]
}