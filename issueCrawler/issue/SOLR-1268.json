{
    "id": "SOLR-1268",
    "title": "Incorporate Lucene's FastVectorHighlighter",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [
            "highlighter"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Correcting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E",
    "attachments": {
        "SOLR-1268-0_fragsize.patch": "https://issues.apache.org/jira/secure/attachment/12431857/SOLR-1268-0_fragsize.patch",
        "SOLR-1268.patch": "https://issues.apache.org/jira/secure/attachment/12429289/SOLR-1268.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Gabriel Farrell",
            "id": "comment-12750080",
            "date": "2009-09-01T20:19:27+0000",
            "content": "Voting for this issue because of the following email from Bess Sadler, which sums up the need quite well:\n\n\nOne of the feature requests we get pretty often with Blacklight is\nsearch term highlighting. The main reason we don't have it yet is\nbecause it's a performance drag. We have attempted to add it a couple\nof times, but it kills performance so much for large collections or\nlarge text fields that we had to remove it again.\n\nI just had an interesting chat with Erik Hatcher, and he pointed me at this:\nhttp://www.lucidimagination.com/search/document/a4deefd915f706d4/highlighting_performance\n\nIt seems Lucene 2.9 has a faster highlighting solution available now,\nFastVectorHighlighter. However, it hasn't yet worked its way into\nsolr. If you are one of the people who would like to see search term\nhighlighting (or, maybe just faster search term highlighting) in\nblacklight, vufind, Fac-Back-OPAC, helios, or any of the many other\nlibrary apps that use solr, you might want to go vote for the jira\nissue at:\n\nhttps://issues.apache.org/jira/browse/SOLR-1268 "
        },
        {
            "author": "Nicolas Dessaigne",
            "id": "comment-12750530",
            "date": "2009-09-02T16:47:09+0000",
            "content": "In the meantime, you may be interested in the maxChars attribute of copy fields (https://issues.apache.org/jira/browse/SOLR-538). It permits fast highlighting if only the beginning of documents. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12760509",
            "date": "2009-09-29T06:26:19+0000",
            "content": "Is there a reason why this is not marked for 1.4? "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12764018",
            "date": "2009-10-09T13:28:31+0000",
            "content": "Mark it to 1.5 because there is no patches. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12795945",
            "date": "2010-01-03T03:42:10+0000",
            "content": "First draft, untested patch attached. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12796073",
            "date": "2010-01-04T04:27:34+0000",
            "content": "Added a few SolrFragmentsBuilders and test cases. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12796075",
            "date": "2010-01-04T04:43:47+0000",
            "content": "I'm introducing <fragListBuilder/> and <fragmentsBuilder/> new sub tags of <highlighting/> in solrconfig.xml in this patch, rather than <searchComponent/>. I think we can open a separate ticket for moving <highlighting/> settings to <searchComponent/>, if needed.\n\nFYI:\nhttp://old.nabble.com/highlighting-setting-in-solrconfig.xml-td26984003.html "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12796147",
            "date": "2010-01-04T11:36:30+0000",
            "content": "I'll commit in a few days if nobody objects. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12798304",
            "date": "2010-01-09T05:01:46+0000",
            "content": "Committed revision 897383. "
        },
        {
            "author": "Marc Sturlese",
            "id": "comment-12805841",
            "date": "2010-01-28T09:04:56+0000",
            "content": "I have noticed an exception is thrown when using fragSize = 0 (wich should return the whole field highlighted):\n\"fragCharSize(0) is too small. It must be 18 or higher. java.lang.IllegalArgumentException: fragCharSize(0) is too small. It must be 18 or higher\" "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12806630",
            "date": "2010-01-30T04:51:18+0000",
            "content": "\nI have noticed an exception is thrown when using fragSize = 0 (wich should return the whole field highlighted):\n\"fragCharSize(0) is too small. It must be 18 or higher. java.lang.IllegalArgumentException: fragCharSize(0) is too small. It must be 18 or higher\"\n\nThanks, Marc.\nSolr 1.4 uses NullFragmenter that highlights whole content when you set fragsize to 0. But FVH doesn't have such feature because of using different algorithm.\nIn the attached patch, Solr sets fragsize to Integer.MAX_VALUE if user trys to set 0 when FVH is used. This prevents runtime error.\nI think it is necessary in Solr level because Solr automatically switch to use FVH when the highlighting field is termVectors/termPositions/termOffsets are all true unless hl.useHighlighter set to true. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12829945",
            "date": "2010-02-05T03:43:57+0000",
            "content": "Hmm, FVH doesn't work appropriately when fragsize=Integer.MAX_SIZE (see test0FragSize() in attached patch. It indicates FVH cannot produce whole snippet when fragsize=Integer.MAX_SIZE).\n\nNow I think I should change the (traditional) Highlighter is default even if the highlighting field's termVectors/termPositions/termOffsets are all true, then only when hl.useFastVectorHighlighter is set to true, FVH will be used. hl.useFastVectorHighlighter parameter accepts per-field overrides. Plus FVH doesn't support 0 fragsize. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12830441",
            "date": "2010-02-06T03:32:08+0000",
            "content": "The patch includes:\n\n\n\teliminate hl.useHighlighter parameter\n\tintroduce hl.useFastVectorHighlighter parameter. The default is false\n\n\n\nTherefore, Highlighter will be used unless hl.useFastVectorHighlighter set to true. I'll commit in a few days. "
        },
        {
            "author": "Kent William",
            "id": "comment-12839751",
            "date": "2010-03-01T16:57:07+0000",
            "content": "When using Dismax, the fast vector highlighter fails to return any highlighting when there is more than one column in qf (eg. \"qf=Name Company\")... "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12839879",
            "date": "2010-03-01T21:53:32+0000",
            "content": "When using Dismax, the fast vector highlighter fails to return any highlighting when there is more than one column in qf (eg. \"qf=Name Company\")...\n\nRight. See https://issues.apache.org/jira/browse/LUCENE-2243 . "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013157",
            "date": "2011-03-30T15:45:44+0000",
            "content": "Bulk close for 3.1.0 release "
        },
        {
            "author": "Antony Stubbs",
            "id": "comment-13178463",
            "date": "2012-01-02T17:14:53+0000",
            "content": "Koji, with mutli-term fields, Highlighter would return the single value that matched. FVH however merges values in the fragment returned. Is there a way to get the same behavior as highlighter in this respect (in my use case, i only want the value that matched to be highlighted)? "
        }
    ]
}