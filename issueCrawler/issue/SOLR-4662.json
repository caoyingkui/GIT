{
    "id": "SOLR-4662",
    "title": "Finalize what we're going to do with solr.xml, auto-discovery, config sets.",
    "details": {
        "affect_versions": "4.3,                                            6.0",
        "status": "Closed",
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Spinoff from SOLR-4615, breaking it out here so we can address the changes in pieces.",
    "attachments": {
        "SOLR-4662.patch": "https://issues.apache.org/jira/secure/attachment/12578627/SOLR-4662.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13619728",
            "date": "2013-04-02T11:54:04+0000",
            "content": "I may actually have some time on some long flights to work on this, I'd really like to nail this and get it over. So I'd like to get the design agreed so I don't have to re-do the re-done.\n\nIt seems like the root issue here is that we have this configuration file that is trying to serve too many purposes. It started as a way to get basic configuration information back in the single-core days. Then it morphed into a place to get all the core information. Then it morphed into a place where we could specify a bunch of SolrCloud parameters. Then it morphed into a place to not really get core information but specify that that info get discovered. Now, with SolrCloud one question is whether we should even have it or should all this info be stored in Zookeeper. Having local files around that you have to have on each node before starting solr seems counter to having configurations managed by ZK.\n\nStraw-man proposal:\n\nSo, what if we allow a \"SolrConfigurationProvider\"? Specifying none or the default we'll provide does just what happens now. It seems like the other stock one we could supply is one that reads the info from ZK. Don't know what else is out there, but that's just the point. People could plug in something that read their DB, something that read a properties file <G>. Whatever. There's a start on what the interface would look like here in ConfigSolr, which I pulled out when trying to make a properties file. I doubt it's entirely complete, but should be a pretty good start. Maybe this becomes an option on the command line? e.g. -Dsolr.configProvider=\"org.solr.core.XmlConfigProvider\" as the default? And if -DzkHost=\"url to zk\" is provided, default to -Dsolr.configProvider=\"org.solr.core.ZkConfigProvider\"?\n\nIt seems like default behavior is then mostly a matter of which provider we use if none is specified. It'd be a pretty simple matter to switch between whether we use ZK or a solr.xml file based on whether we had a zkHost specified, and prefer the one that reads solr.xml in 4.x and the one that reads ZK in 5.x or whatever...\n\nLet me be the first to say that I have NOT thought this through very carefully, and note how I'm glossing over getting the appropriate info up into ZK in the first place. My purpose here is to get the discussion going, I don't particularly care if this approach is adopted or not. I do care that whatever we decide on doesn't do another 180 turn...\n\nLet the discussion begin!\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13619784",
            "date": "2013-04-02T13:15:38+0000",
            "content": "Quick notes:\n\nI don't think it has really morphed.\n\nsolr.xml has always been our only config file for the system or corecontainer level. Everything that has joined the corecontainer was added because it's not core level, and that's always been the role of solr.xml - home of the above SolrCore level.\n\nLet's talk about the overall strategy before we nail down the impl.\n\nIMO, solr.xml has a few issues:\n\n1. It should not define cores. Solr should not have to write to this config file, and cores should be define by directory locations. \n2. The SolrCloud params are all cores attributes, but they should be in a better structure, similar to the shard handler definition that can now live in solr.xml, and what we do in solrconfig.xml.\n3. We should consider how most of the solr.xml config can live in ZooKeeper when in SolrCloud mode. Much of this is not something you want to have to tweak on every node - it's going to be the same - you generally want to set a zkClientTimeout for your collection, not for each node. Same for shard handler. I think it's worth forcing some consistency for all nodes, such as the same host context. It will also be possible to override those things per node with sys prop notation. zkHost could no longer be specified in solr.xml.\n\nSo, I think we need to be able to detect and read the old solr.xml format some way (lot's of choices I think), as well as detect and read the new format (which will be very similar to the old). In 5 we stop supporting the old format. Example ships with the new format.\n\nIn terms of impl, I think you are on the right track. I don't think we should expose any user plugins at this point though. That should be internal work. Let's decide if we should support arbitrary impls for users later. It has an ongoing cost, in this area in particular I think. I think we want to reserve all API rights here. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13619866",
            "date": "2013-04-02T14:44:42+0000",
            "content": "So from my point of view:\n\n1. is essentially done\n2. is what we should tie up here, keeping in mind 3\n3. we should make another jira issue and follow on with "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13619867",
            "date": "2013-04-02T14:45:46+0000",
            "content": "I too think that solr.xml should not store cores.  Auto-discovery is a nice thing, but it makes it more difficult to have a nice clean layout where the core configs and data are contained within separate subdirectories.  I suppose that each autodiscovered core properties file could have a relative dataDir that goes up one or two directories, just like my current setup, and that might be good enough.  I would also want to have something like a coreDirectory parameter, which I would set to \"cores\" so that the main solr.solr.home directory would be very clean.\n\nOne option is to have a cores.xml file for more complex layouts where the user wants to specify everything.  At first I thought about a cloud.xml file for SolrCloud properties, but once you start down the path of multiple config files, the explosion might never stop.\n\nHere's what things look like inside solr.xml on my setup that's not well suited for SolrCloud, and a snippet of the full directory structure.  The full picture is more complex than this, with relative symlinks in conf directories and relative xinclude paths in solrconfig.xml, but this gives you the basic idea:\n\n\n    <core loadOnStartup=\"true\" instanceDir=\"cores/inc_0/\" transient=\"false\" name=\"inclive\" dataDir=\"../../data/inc_0\"/>\n    <core loadOnStartup=\"true\" instanceDir=\"cores/inc_1/\" transient=\"false\" name=\"incbuild\" dataDir=\"../../data/inc_1\"/>\n\n\u251c\u2500\u2500 cores\n\u2502   \u251c\u2500\u2500 inc_0\n\u2502   \u2502   \u2514\u2500\u2500 conf\n\u2502   \u251c\u2500\u2500 inc_1\n\u2502   \u2502   \u2514\u2500\u2500 conf\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 inc_0\n\u2502   \u2502   \u251c\u2500\u2500 index\n\u2502   \u2502   \u2514\u2500\u2500 tlog\n\u2502   \u251c\u2500\u2500 inc_1\n\u2502   \u2502   \u251c\u2500\u2500 index\n\u2502   \u2502   \u2514\u2500\u2500 tlog\n\u2514\u2500\u2500 lib\n\n\n\nI'm not sure there is a better location than solr.xml for zkHost, but I definitely think it should be in a config file.  *Requiring* -DzkHost on startup is a bad idea - generic startup scripts become very difficult.  Keeping all of the config after that in zookeeper is an idea that is growing on me, as long as the initial contact to zookeeper won't suffer from a low default client timeout before zkClientTimeout can be read.\n\nIf you give Solr (or CloudSolrServer) only one of the hosts in your zookeeper ensemble (perhaps localhost:port/chroot) will it automatically configure itself with the entire ensemble?  If not, is there a way to build this functionality in?\n\nThe fact that Solr does not come equipped with instructions for a standalone zookeeper process or a functioning standalone zookeeper is problematic in my opinion.  If I find some time, I can whip up a wiki page.  I do wish zkcli.sh was more self-contained.  I can eventually come up with a wiki page for that too. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13619872",
            "date": "2013-04-02T14:47:24+0000",
            "content": "Hmmmm. Point taken about not exposing a pluggable version yet, now that you mention it that seems premature. Hardening all that before exposing something we then have to support makes sense. We can still program to the interface I mentioned as much as possible to make that easier in future but no big deal either way.\n\n<1> is done.\n<2> OK, what does that look like? Is this just a simple transformation like\n<solr>\n  <solrConfigFactory name=\"solrConfigFactory\" clase=\"SolrConfigFactory\">\n    <str name=\"persistent\">${solr.xml.persist:false}</str>\n    <str name=\"adminPath\">/admin/cores</str>\n    <str name=\"defaultCoreName\">collection1</str>\n    <str name=\"host\">127.0.0.1</str>\n    <str name=\"hostPort\">${hostPort:8983}</str>\n    <str name=\"hostContext\">${hostContext:solr}</str>\n    <str name=\"shareSchema\">${shareSchema:false}</str>\n\n    <shardHandlerFactory name=\"shardHandlerFactory\" class=\"HttpShardHandlerFactory\">\n      <int name=\"socketTimeout\">${socketTimeout:120000}</int>\n      <int name=\"connTimeout\">${connTimeout:15000}</int>\n    </shardHandlerFactory>\n\n\n    <str name=\"zkClientTimeout\">${solr.zkclienttimeout:30000}</str>\n    <str name=\"numShards\">${numShards:3}</str>\n    <str name=\"distribUpdateConnTimeout\">${distribUpdateConnTimeout:15000}</str>\n    <str name=\"distribUpdateSoTimeout\">${distribUpdateSoTimeout:120000}</str>\n  </solrConfigFactory>\n\n</solr>\n\nThis form doesn't allow cores to be here at all. Is there any necessity to have a factory here or are you thinking these should just be child nodes of <solr>? Would shardHandlerFactory be inside or outside the new factory? As you can tell, how all this fits together is something of a mystery to me. But having a solrConfigFactory node as the immediate child of <solr> and encompassing all the rest would allow easy detection of old vs new style XML. Adding a version attribute to the <solr> tag seems possible too, but I don't really like that, I think there's less user-level maintenance if we use solrConfigFactory, implementing up different handlers for different versions if/when we change again, which should be very rare.\n\n<3> On that note, it's not clear to me we need solr.xml at all in \"true cloud mode\". In the absence of solr.xml but presence of zkHost, just get everything from ZK. Look, you know how ZK-ignorant I am, be gentle <G>. The rest of the time, anything you could possibly want from solr.xml that wasn't present, ask ZK for it and use defaults if neither source had it. By \"not present\", that means neither in the solr.xml file nor as a sysprop. Along the way removing DEF_SOLR_XML from ConfigSolrXml would be a Good Thing maybe. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13619895",
            "date": "2013-04-02T14:58:26+0000",
            "content": "Shawn:\n\nCouple of things:\n\n1> there's no reason you can't have your individual data dirs specified in core.properties point wherever you want. Not sure that handles your case but thought I'd mention it. I'm not keen on maintaining a separate \"specify everything\" xml file, does the ability to specify your data dir for each core do what you need?\n\n2> SOLR-4478 (another thing I hope to have done Real Soon now) will allow \"configsets\". Basically in <solr_home>/configs (TBD) there will be directories like \"conf1\", \"conf2\" etc, which will be full Solr configuration directories. Then you can specify a \"configSet\" property in your individual core.properties file and that core will make use of the named config set, incidentally sharing all the setup between cores that use the same config set (i.e. won't parse/load the solrconfig.xml and schema.xml separately for each core that names the same config set).\n\nKeep the comments coming! "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13619964",
            "date": "2013-04-02T16:29:54+0000",
            "content": "does the ability to specify your data dir for each core do what you need?\n\nAs long the dataDir specified in a core properties file retains all its current capabilities relative to instanceDir, then yes, that will work nicely.  As I mentioned, I would like to see a config option (probably in solr.xml, name suggestion coreDirectory) to specify a relative or absolute path where it will look for auto-detected instanceDirs.  For the \"thousands of cores\" users, this will be very important, so that solr.solr.home isn't cluttered - it might have solr.xml (or its replacement) and a handful of directories like cores, lib, and maybe data.  I'd like to see that parameter default to \"cores\" but I am not opposed to it being \".\" or having no default value at all.\n\nBasically in <solr_home>/configs (TBD) there will be directories like \"conf1\", \"conf2\" etc.\n\nI like this idea.  I would want to make sure that relative xincludes are possible, just as they currently are with config sets in zookeeper.  If the xml goes away and gets replaced by a properties file, including subconfigs won't be as important, but it would be nice if it were still possible. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13620143",
            "date": "2013-04-02T19:07:17+0000",
            "content": "bq: so that solr.solr.home isn't cluttered\n\nI'm not sure about this either. There's no assumption when walking the tree that any instancedirs appear as immediate children of solr_home, you can have as many levels to the tree as you want. What is enforced is that when a core.properties file is found, Solr doesn't look any deeper. In other words there is no nesting of cores allowed. You can mix-and-match the level down the tree where the core is defined, subject to the above rule.\n\nSo you could have a tree with only one directory in solr_home that was the root of a tree with all your cores like:\n\n<solr_home> cores\n              level1a\n                 level1.1\n                   core1.1.1\n                   core1.1.2\n                   core1.1.3\n                 level1.2\n                   core2.1.1\n                   core2.1.2\n               level2a\n                 core2a.1.1\n\n\nI'm not totally anti the idea, but would rather not start putting a bunch of stuff back into solr.xml if we can help it. Can this be made to work in your use-case or is there another reason besides clutter you'd want to root the cores someplace other than solr_home? Being able to cleanly separate the running solr from the data does come to mind, i.e. I might like to rm -rf <solr_home> and put in a new release without touching my data.....\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13620237",
            "date": "2013-04-02T20:23:17+0000",
            "content": "As far as xml format...I'm thinking along the lines of:\n\nnote: persistent should be removed as an option.\nnote: adminPath should no longer be configurable - solrcloud counts on it being that.\nnote: defaultCoreName should probably also go away if using the new format - it's really a back compat thing that we don't want to support long term.\n\n\n<solr>\n\n\n  <solrcloud>\n    <str name=\"host\">127.0.0.1</str>\n    <str name=\"hostPort\">${hostPort:8983}</str>\n  </solrcloud>\n\n  <shardHandlerFactory>\n  ...\n</solr>\n\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13620241",
            "date": "2013-04-02T20:26:09+0000",
            "content": "There's no assumption when walking the tree that any instancedirs appear as immediate children\n\nThat's good, and is awesome for detection of existing cores on startup, but what about features that automatically create new core directories?  This already happens with the SolrCloud collection API, and if we implement the configs directory for config sets that aren't stored in zookeeper, it is likely to happen for non-Cloud deployments too.\n\nI am aware that my statements may seem somewhat disconnected, because in some ways they are.  I'm dealing with two different Solr deployments that each have their own needs.\n\n1) I have a pretty small SolrCloud deployment with two servers plus a third zk node, numShards=1.  I don't implement separation here, but it's not really needed.  It currently places core directories right into solr.home, but I would like to change that.\n\n2) My main large Solr deployment doesn't use SolrCloud, and is not likely to use SolrCloud in the foreseeable future.  That is where I have things heavily separated into cores, data, and config.\n\nIn a cloud/zk deployment, you get dataDir separation for free, because the core config is elsewhere.  This would also be the case with filesystem-based config sets.  We therefore might not need to worry too much about the separation idea that I initially had, but I do think that it's important to have the cores go into a subdirectory by default.\n\nwould rather not start putting a bunch of stuff back into solr.xml if we can help it\n\n+1 from me on that.  Anything that we can move out of that file we should - basically make it so that only what's required at a global level to locate the rest of the resources Solr needs, plus any server-level config options that don't have an excellent all-purpose default.  I think a 'coreDirectory' option falls into both of those categories.  In a ZK-controlled world, a lot of global config options can be stored in ZK, but there are very good reasons to have a different coreDirectory option on each server.\n\nI might like to rm -rf <solr_home> and put in a new release without touching my data\n\nWhat I do for this is completely separate solr.home and CWD (jetty.home).  CWD is /opt/solr4, solr.home is /index/solr4, and /index is a different filesystem.  There are jars for jetty and log4j in /opt/solr4/lib, and extra jars for solr, lucene, and mysql in /index/solr4/lib. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13620263",
            "date": "2013-04-02T20:55:40+0000",
            "content": "the solrcloud host is trouble spot - it will generally be different for each node - if this goes in zk, that type of config is still a problem - you have to use sys prop substitution and require system properties for setting these particular settings. I'm fine with that - I think you can still easily setup a prop file that gets auto sucked in for sys prop substitution as well. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13624900",
            "date": "2013-04-07T13:03:51+0000",
            "content": "Does this structure work? I'll be working on this off and on this week, I've just about got a bunch of other stuff ready to check in and this is next up. Once this is done, I think we'll be in reasonably good shape, at least the major parts will be in place. Should we mark it \"experimental\" for 4.3?\n\nI figure to just look at the structure of the file to determine whether it's new or old style. It seems like the absence of a <cores> tag is enough to distinguish the two.\n\nAnd it would be really helpful if anyone spoke up right now about things I've forgotten, I culled things sitting in an airport with really poor internet connectivity.\n\nOf course any of the values can have system properties, I just didn't specify them here, and I've added coreRootDirectory as per Shawn's suggestion since the more I think about it the more it seems like a good thing to arbitrarily specify the root of where the directories live...\n\n<solr>\n  <str name=\"hostContext\">blah</str>\n  <str name=\"sharedLib\">lib</str>\n  <int name=\"transientCacheSize\">210</int>\n  <str name=\"coreRootDirectory\">absoluteoOrrelativePath</str>\n\n  <solrcloud>\n    <str name=\"host\">127.0.0.1</str>\n    <int name=\"hostPort\">${hostPort:8983}</int>\n    <int name=\"zkClientTimeout\">1500</int>\n    <str name=\"hostContext\">whatever</str>\n    <str name=\"\"></str>\n    <str name=\"\"></str>\n  </solrcloud>\n\n  <shardHandlerFactory name=\"shardHandlerFactory\" class=\"HttpShardHandlerFactory\">\n    <int name=\"socketTimeout\">${socketTimeout:120000}</int>\n    <int name=\"connTimeout\">${connTimeout:15000}</int>\n  </shardHandlerFactory>\n </solr> "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13627963",
            "date": "2013-04-10T16:37:59+0000",
            "content": "I'm about to start working on this on the flight home, I hope to have this ready for review at least by the end of the weekend. I'll use the structure above unless there are howls of protest.\nMark Miller and Shawn Heisey speak up! "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13627984",
            "date": "2013-04-10T16:57:28+0000",
            "content": "Overall, +1, that seems good to me.\n\ncoreRootDirectory\n\nWith the idea of moving solr.xml to zk, coreRootDirectory seems like the prop we are talking about in SOLR-4697 - something similar to solr.home. I don't think it should block your work here, but I'd really hate to see that introduced in solr.xml. I think we need another mechanism for that level of prop - either the same one as solr.home, or one that takes advantage of solr.home (I gave one such example in my comment in SOLR-4697) "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13628170",
            "date": "2013-04-10T19:46:48+0000",
            "content": "I take that back on coreRootDirectory. It does seem like it belongs in solr.xml after some thought. Generally, you will use the same one on all of your nodes, and you can use system prop notation to override it per node if necessary. Sorry for the misdirection. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13628473",
            "date": "2013-04-11T00:06:52+0000",
            "content": "NP, I had a boring plane ride home and got most of the structure in place. I have another plane ride tomorrow and bak on Friday, looks like I might have something ready to at least look at by Monday. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13631245",
            "date": "2013-04-14T01:54:09+0000",
            "content": "Preliminary patch with tests. I haven't looked it over thoroughly yet, and there's one failing test ZkCliTest.  If Mark Miller has any clues what I managed to change here let me know, but I'm ready to stop for the night. I'll look at it tomorrow when it'll probably be obvious.\n\nIt looks like I managed to have the default collection1 NOT be present or something, which leads to the discussion whether this should be assumed any more. Especially if we're deprecating defaultCoreName "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13631323",
            "date": "2013-04-14T14:24:24+0000",
            "content": "Mark Miller Never mind. I'm not quite sure why I'm seeing what I'm seeing, but it's pretty clear that I screwed up the code. Told you it would be clear after sleeping.... Looking.... "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13631389",
            "date": "2013-04-14T21:00:40+0000",
            "content": "This may be ready. I'll let it sit for a day or two, go over it again, and commit it unless there are objections..\n\nAll tests pass, I'll run nightly tests on it tonight.\n\nThis patch and JIRA will NOT implement config sets, see SOLR-4478 for that. While I'd like to get 4478 into 4.3, it can wait until 4.4 if I don't have the time. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13631457",
            "date": "2013-04-15T01:56:51+0000",
            "content": "Put <solrcloud> section in solr.xml "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13632448",
            "date": "2013-04-16T00:47:46+0000",
            "content": "NOTE: This final version of the patch is against 4x. I made a couple of trivial changes that didn't affect the code execution (he says), tested, and committed to trunk without making a final patch. Just so we have a record. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13632480",
            "date": "2013-04-16T01:48:45+0000",
            "content": "Trunk r: 1468284\n4x    r: 1468289\n\nLet's open up new JIRAs for anything that needs to change. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634113",
            "date": "2013-04-17T15:16:52+0000",
            "content": "Finally getting to doing some review here.\n\nI'm -1 on the prevention of different cores having the same data directory. The lock factory is there to help there, and if you want to configure many cores to do read only against a datadir, you should be able to. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634130",
            "date": "2013-04-17T15:26:42+0000",
            "content": "Reopening - I'm going to take a close pass over this. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13634134",
            "date": "2013-04-17T15:30:08+0000",
            "content": "Hmmm, OK, I can pull that out ASAP. How about a warning in the log file though? I think it's important to provide some way to debug this when it happens by accident rather than manual inspection of potentially a bazillion files.\n\nI take it there's no similar argument for core names? Having two cores with the same name seems...fraught. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634138",
            "date": "2013-04-17T15:38:34+0000",
            "content": "I've got it, I'm working on a pass that has a few updates and fixes.\n\nHow about a warning in the log file though? \n\nThat seems fine to me.\n\nI take it there's no similar argument for core names? Having two cores with the same name seems...fraught.\n\nRight, that should fail. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13634219",
            "date": "2013-04-17T17:23:40+0000",
            "content": "Hmmm, I just pulled it out, thinking of putting this in 4725. On reflection, I also think it's a good idea to pull out the checking of same that I put in for old-style solr.xml, just log both conditions rather than change existing behavior.\n\nI'm about to put a patch up for SOLR-4725 (trunk), Do you want to just incorporate that or should I just drop it and let you handle it?\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634233",
            "date": "2013-04-17T17:38:02+0000",
            "content": "I've got some work I'm in the middle of, and perhaps some more to come on further review. Most of it fairly little stuff, but also some critical stuff around using alternate root core dirs - that's what I'm involved with now, almost got it fixed and then I'll continue on and see what I find - I've already tackled a number of things though. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634241",
            "date": "2013-04-17T17:48:05+0000",
            "content": "I'll quickly put up a check point patch and perhaps we can commit that to help keep in sync.\n\nDown the line I think we want to add some more tests for the alternate core root directory option. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13634308",
            "date": "2013-04-17T18:50:21+0000",
            "content": "Well, if you're finding issues with the alternate core stuff, more tests are certainly in order <G>...\n\nI put up a patch on SOLR-4725 that takes out the failure case and logs a warning. For the legacy case it just logs warnings, but otherwise continues to act as before...\n\nThe fiddling work there is just removing tests that should no  longer fail....\n\nlet me know when you're done and what you've incorporated and I'll reconcile, although today I won't be doning anything after 5:00 EST, I have some commitments. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634335",
            "date": "2013-04-17T19:30:51+0000",
            "content": "Here is a patch from my first quick review of this - it fixes a few mostly minor issues. This is great work overall Erick!\n\nThis fixes an issue with the core admin path on 5x, an issue with setting the right instance dir when using alternate core discovery locations, and some other minor nits.\n\nI plan to commit this very shortly so that Erick can merge his work in and then take a deeper dive through the evening. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13634436",
            "date": "2013-04-17T21:02:41+0000",
            "content": "OK, this has both change Mark and I were discussing. Tests pass, but I didn't think to make the change to the default persist before I ran the tests, so that change hasn't made it through all the tests and I have to leave.... "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13635191",
            "date": "2013-04-18T14:15:31+0000",
            "content": "Mark checked the code in last night, merged into 4.x and 4.3. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13635199",
            "date": "2013-04-18T14:24:25+0000",
            "content": "commit tag bot seems to have skipped this...\n\n4.3 : r -  1469148\n4.x : r -  1469112\ntrunk: r - 1469089 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13635223",
            "date": "2013-04-18T14:53:17+0000",
            "content": "commit tag bot seems to have skipped this...\n\nIt's not running - I've meant to move it from its ad hoc running spot (my primary dev machine where i have not been running it lately) to a permanent one, but just have not gotten to it yet. Soon though. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13649750",
            "date": "2013-05-06T13:40:59+0000",
            "content": "Where did the sharedLib stuff go in the new solr.xml? Will it work with <str name=\"sharedLib\">lib</str>? This should be documented in XML comments. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654080",
            "date": "2013-05-10T10:33:57+0000",
            "content": "Closed after release. "
        }
    ]
}