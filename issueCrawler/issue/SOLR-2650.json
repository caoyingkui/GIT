{
    "id": "SOLR-2650",
    "title": "Empty docs array on response with grouping and result pagination",
    "details": {
        "affect_versions": "3.3",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Cannot Reproduce"
    },
    "description": "Requesting a certain number of rows and setting start parameter to a greater value returns 0 results with grouping enabled.\n\nFor example, requesting:\nhttp://localhost:8080/solr/web/select/?q=*:*&rows=1&start=2\n\n(grouping and highlighting are enabled by default)\n\nI get this response:\n[...]\n      response: \n{\n          numFound: 117852\n          start: 2\n          docs: [ ]\n      }\n      highlighting: {\n            0938630598: \n{\n                  title: [ \"...\" ]\n                  content: [ \"...\" ]\n            }\n      }\n[...]\ndocs array is empty while the highlighted values of the document are present\n\nDebugging the request in\norg.apache.solr.search.Grouping.Command.createSimpleResponse() at row 534\n[...]\n     int len = Math.min(numGroups, docsGathered);\n      if (offset > len) \n{\n        len = 0;\n      }\n[...]\nThe initial vars values are:\nnumGroups = 1\ndocsGathered = 3\noffset = 2\nso after the execution len = 0\n\nI've tried commenting the if statement and this resolves the issue but could introduce some other bugs.",
    "attachments": {
        "grouping_patch.txt": "https://issues.apache.org/jira/secure/attachment/12492523/grouping_patch.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Des Lownds",
            "id": "comment-13094643",
            "date": "2011-08-31T16:08:27+0000",
            "content": "I was able to duplicate this problem, and was also seeing the following stack trace in some circumstances:\n\n\nSEVERE: java.lang.ArrayIndexOutOfBoundsException: 35\n\tat org.apache.solr.search.DocSlice$1.nextDoc(DocSlice.java:117)\n\tat org.apache.solr.response.XMLWriter$3.writeDocs(XMLWriter.java:543)\n\tat org.apache.solr.response.XMLWriter.writeDocuments(XMLWriter.java:482)\n\tat org.apache.solr.response.XMLWriter.writeDocList(XMLWriter.java:519)\n\tat org.apache.solr.response.XMLWriter.writeVal(XMLWriter.java:582)\n\tat org.apache.solr.response.XMLWriter.writeNamedList(XMLWriter.java:620)\n\tat org.apache.solr.response.XMLWriter.writeVal(XMLWriter.java:593)\n\tat org.apache.solr.response.XMLWriter.writeNamedList(XMLWriter.java:620)\n\tat org.apache.solr.response.XMLWriter.writeVal(XMLWriter.java:593)\n\tat org.apache.solr.response.XMLWriter.writeResponse(XMLWriter.java:131)\n\tat org.apache.solr.response.XMLResponseWriter.write(XMLResponseWriter.java:35)\n\tat org.apache.solr.servlet.SolrDispatchFilter.writeResponse(SolrDispatchFilter.java:343)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:265)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:589)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:291)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n\tat java.lang.Thread.run(Thread.java:662)\n\n\n "
        },
        {
            "author": "Des Lownds",
            "id": "comment-13094647",
            "date": "2011-08-31T16:10:20+0000",
            "content": "Seems that using group.format=simple results in the ArrayIndexOutOfBounds exception, while using standard format returns wrong results(no results.)\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13094651",
            "date": "2011-08-31T16:14:49+0000",
            "content": "There are a few grouping+paging bugs fixed in 3x (which will be 3.4 when released).  Can you try a recent 3x nightly build and see if any of the problems remain? "
        },
        {
            "author": "Des Lownds",
            "id": "comment-13094892",
            "date": "2011-08-31T20:55:27+0000",
            "content": "patch file "
        },
        {
            "author": "Des Lownds",
            "id": "comment-13094896",
            "date": "2011-08-31T21:02:59+0000",
            "content": "I'd be happy to test a nightly, where do I download them from? or is it a svn co? "
        },
        {
            "author": "Mike Lerley",
            "id": "comment-13098333",
            "date": "2011-09-06T20:38:09+0000",
            "content": "I seem to be having the same problem.  I've just tried the latest code from branch_3x (r1165749) and it's still a problem.  Note that I'm trying to output JSON, not XML. I get a similar exception:\n\nSep 6, 2011 4:11:31 PM org.apache.solr.common.SolrException log\nSEVERE: java.lang.ArrayIndexOutOfBoundsException: 49\n        at org.apache.solr.search.DocSlice$1.nextDoc(DocSlice.java:117)\n        at org.apache.solr.response.JSONWriter.writeDocList(JSONResponseWriter.java:492)\n        at org.apache.solr.response.TextResponseWriter.writeVal(TextResponseWriter.java:129)\n        at org.apache.solr.response.JSONWriter.writeNamedListAsMapWithDups(JSONResponseWriter.java:180)\n        at org.apache.solr.response.JSONWriter.writeNamedList(JSONResponseWriter.java:296)\n        at org.apache.solr.response.JSONWriter.writeResponse(JSONResponseWriter.java:93)\n        at org.apache.solr.response.JSONResponseWriter.write(JSONResponseWriter.java:52)\n        at org.apache.solr.servlet.SolrDispatchFilter.writeResponse(SolrDispatchFilter.java:343)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:265)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\n        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n        at java.lang.Thread.run(Thread.java:679)\n\n\n\nI seem to be able to trigger it using quoted strings, among other random things.  I hope this can get fixed soon. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539571",
            "date": "2016-10-02T02:33:30+0000",
            "content": "Can this be reproduced against latest Solr? The code path and libraries involved changed many times over. "
        }
    ]
}