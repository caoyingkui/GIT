{
    "id": "SOLR-1408",
    "title": "Classes in ${solr.home}/lib are not able to extend classes loaded by solr war - ClassCastException",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "When extending org.apache.solr.handler.dataimport.DataSource, I would like to package my extended class in ${solr.home}/lib to that I can keep the vanilla copy of my solr.war intact.  The problem is I encounter a ClassCastException when Solr tries to create a newInstance of my extended class.\n\nAlthough the parent classloader of ${solr.home}/lib classloader loads DataSource, I am still getting a ClassCastException when a class in ${solr.home}/lib extends DataSource.\n\nThe solr instance is being deployed to a jetty plus server that is running inside a unit test.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12751293",
            "date": "2009-09-04T04:16:14+0000",
            "content": "I suspect that this should not be the problem . DataSource.class is loaded by the parent classloader of ${solr.home}/lib classloader. So by design it is not supposed to throw a ClassCastException "
        },
        {
            "author": "Luke Forehand",
            "id": "comment-12751487",
            "date": "2009-09-04T15:08:40+0000",
            "content": "This is also happening when I try to extend EventListener, I get the mysterious ClassCastException from within Solr.  I am running solr from a jetty server, specifying solr.home using JNDI, and I am starting the jetty server from within a unit test for integration testing purposes. "
        },
        {
            "author": "Avlesh Singh",
            "id": "comment-12751684",
            "date": "2009-09-05T01:14:31+0000",
            "content": "I am starting the jetty server from within a unit test for integration testing purposes. \nDoes it fail in unit testing?\n\nI too suspect that there is a problem. I too have similar extensions of DIH and UpdateProcessors, which lie in the \"lib\". I have never faced any such issue on any of the platforms. "
        },
        {
            "author": "Luke Forehand",
            "id": "comment-12751701",
            "date": "2009-09-05T04:06:02+0000",
            "content": "This is not a bug.  The problem was that my extending classes were being compiled onto the testing classpath and they were also packaged into the jar within ${solr.home}/lib.  They were being loaded by junit before being loaded by solr and that was causing the ClassCastException.  When I removed the extending classes from the test classpath, everything worked. "
        }
    ]
}