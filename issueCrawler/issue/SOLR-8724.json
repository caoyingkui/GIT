{
    "id": "SOLR-8724",
    "title": "Upgrade Zookeeper to 3.4.8",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Won't Fix",
        "priority": "Major"
    },
    "description": "Zookeeper 3.4.8 was released a few days ago - we should upgrade.",
    "attachments": {
        "SOLR-8724.patch": "https://issues.apache.org/jira/secure/attachment/12789644/SOLR-8724.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-24T20:53:53+0000",
            "author": "Steve Rowe",
            "content": "Patch, all Solr tests pass for me.\n\nThere is only one non-drop-in aspect: ZOOKEEPER-1506 makes private the previously public QuorumPeer.QuorumServer constructors used in SolrZkServerProps.parseProperties(), which was copied from ZK v3.2's QuorumPeerConfig (which SolrZkServerProps extends) and modified to \"[allow] us to set a default for the data dir before parsing zoo.cfg (which validates that there is a dataDir)\" (<- comment above SolrZkServerProps).\n\nRather than try to make more local modifications to this copy to allow it to compile, I've taken the tack of lifting the 3.4.8 version of QuorumPeerConfig.parseProperties() (which has quite a few config changes we should likely be supporting anyway), and then applying the same mods that had been made to Solr's version:\n\n\n\tAdd @Override annotation\n\tAdd above-described fallback for when the \"myid\" file can't be found\n\tSpecify the encoding when opening the \"myid\" file (LUCENE-5560)\n\n\n\nI made two additional changes:\n\n\n\tAdded a differently-named copy in SolrZkServerProps of a private access data member referred to from the new parseProperties(): QuorumPeerConfig.MIN_SNAP_RETAIN_COUNT\n\tCommented out a call to set \"myid\" in MDC\n\n\n\nIf it weren't for that last item, I'd advocate for getting rid of this patched parseProperties() and directly calling the superclass version, catching the \".../myid file is missing\" IllegalArgumentException, and handling setting the server id in the catch block.\n\nMark Miller, I'd appreciate your review. ",
            "id": "comment-15163779"
        },
        {
            "date": "2016-02-24T21:00:57+0000",
            "author": "Steve Rowe",
            "content": "Forgot to mention: I checked for changed ZK dependencies between 3.4.6 and 3.4.8, and only the commons-collections dep changed, from v3.1 to v3.2.2.  Solr already depends on v3.2.2. ",
            "id": "comment-15163792"
        },
        {
            "date": "2016-02-24T21:46:48+0000",
            "author": "Steve Rowe",
            "content": "Updated patch:\n\n\n\tAdded commented out config options to zoo.cfg, pulled from ZK 3.4.8's zoo_sample.cfg\n\tFixed a couple comment alignment issues in the copied method (4 space per indent level in ZK source vs 2 in Solr)\n\n ",
            "id": "comment-15163857"
        },
        {
            "date": "2016-02-26T14:55:12+0000",
            "author": "Steve Rowe",
            "content": "If there are no objections I'll commit later today. ",
            "id": "comment-15169145"
        },
        {
            "date": "2016-02-26T20:14:33+0000",
            "author": "Mark Miller",
            "content": "+1, LGTM.\n\nIf it weren't for that last item, I'd advocate for getting rid of this patched parseProperties() and directly calling the superclass version, catching the \".../myid file is missing\" IllegalArgumentException, and handling setting the server id in the catch block.\n\nMight not be a bad improvement - not ideal to have the MDC call, but also probably not very problematic. ",
            "id": "comment-15169717"
        },
        {
            "date": "2016-02-26T23:38:56+0000",
            "author": "Steve Rowe",
            "content": "\nIf it weren't for that last item, I'd advocate for getting rid of this patched parseProperties() and directly calling the superclass version, catching the \".../myid file is missing\" IllegalArgumentException, and handling setting the server id in the catch block.\n\nMight not be a bad improvement - not ideal to have the MDC call, but also probably not very problematic.\n\nYeah, the MDC call only happens when there's a myid file present, certainly not the case for OOTB embedded Solr ZK.\n\nThis version of the patch makes the above-described change.  Running tests now. ",
            "id": "comment-15170114"
        },
        {
            "date": "2016-02-27T00:11:20+0000",
            "author": "Steve Rowe",
            "content": "Hmm, must've done something wrong in the latest patch, tests are failing with \"TimeoutException: Could not connect to ZooKeeper 127.0.0.1:<port> within 45000 ms\". ",
            "id": "comment-15170177"
        },
        {
            "date": "2016-02-27T01:32:26+0000",
            "author": "Steve Rowe",
            "content": "I'm getting the same errors when running the older patch too; previous success with the older patch was on my laptop, but seeing consistent failures on my server with more test concurrency.  So the errors are unrelated to the parseProperties() implementation.\n\nHere's one (all 5 suites that fail have this pattern: in the process of a ZkTestServer starting up, it fails to register the connection in the platform MBean server):\n\n\n   [junit4] Suite: org.apache.solr.handler.TestSolrConfigHandlerConcurrent\n   [junit4]   2> Creating dataDir: /home/sarowe/git/lucene-solr/solr/build/solr-core/test/J12/temp/solr.handler.TestSolrConfigHandlerConcurrent_ACC627484AE10FE0-001/init-core-data-001\n   [junit4]   2> 0    INFO  (SUITE-TestSolrConfigHandlerConcurrent-seed#[ACC627484AE10FE0]-worker) [    ] o.a.s.SolrTestCaseJ4 Randomized ssl (false) and clientAuth (false)\n   [junit4]   2> 37   INFO  (SUITE-TestSolrConfigHandlerConcurrent-seed#[ACC627484AE10FE0]-worker) [    ] o.a.s.BaseDistributedSearchTestCase Setting hostContext system property: /\n   [junit4]   2> 107  INFO  (TEST-TestSolrConfigHandlerConcurrent.test-seed#[ACC627484AE10FE0]) [    ] o.a.s.c.ZkTestServer STARTING ZK TEST SERVER\n   [junit4]   2> 117  INFO  (Thread-1) [    ] o.a.s.c.ZkTestServer client port:0.0.0.0/0.0.0.0:0\n   [junit4]   2> 117  INFO  (Thread-1) [    ] o.a.s.c.ZkTestServer Starting server\n   [junit4]   2> 215  INFO  (TEST-TestSolrConfigHandlerConcurrent.test-seed#[ACC627484AE10FE0]) [    ] o.a.s.c.ZkTestServer start zk server on port:34020\n   [junit4]   2> 243  INFO  (TEST-TestSolrConfigHandlerConcurrent.test-seed#[ACC627484AE10FE0]) [    ] o.a.s.c.c.SolrZkClient Using default ZkCredentialsProvider\n   [junit4]   2> 298  INFO  (TEST-TestSolrConfigHandlerConcurrent.test-seed#[ACC627484AE10FE0]) [    ] o.a.s.c.c.ConnectionManager Waiting for client to connect to ZooKeeper\n   [junit4]   2> 334  ERROR (SyncThread:0) [    ] o.a.z.s.ZooKeeperCriticalThread Severe unrecoverable error, from thread : SyncThread:0\n   [junit4]   2> java.lang.AssertionError\n   [junit4]   2>        at org.apache.zookeeper.jmx.MBeanRegistry.register(MBeanRegistry.java:93)\n   [junit4]   2>        at org.apache.zookeeper.server.ServerCnxnFactory.registerConnection(ServerCnxnFactory.java:147)\n   [junit4]   2>        at org.apache.zookeeper.server.ZooKeeperServer.finishSessionInit(ZooKeeperServer.java:613)\n   [junit4]   2>        at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:181)\n   [junit4]   2>        at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:200)\n   [junit4]   2>        at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:131)\n   [junit4]   2> 45314 WARN  (TEST-TestSolrConfigHandlerConcurrent.test-seed#[ACC627484AE10FE0]-SendThread(127.0.0.1:34020)) [    ] o.a.z.ClientCnxn Client session timed out, have not heard from server in 45007ms for sessionid 0x0\n   [junit4]   2> NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSolrConfigHandlerConcurrent -Dtests.method=test -Dtests.seed=ACC627484AE10FE0 -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=de-LU -Dtests.timezone=Cuba -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   45.4s J12 | TestSolrConfigHandlerConcurrent.test <<<\n   [junit4]    > Throwable #1: org.apache.solr.common.SolrException: java.util.concurrent.TimeoutException: Could not connect to ZooKeeper 127.0.0.1:34020 within 45000 ms\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([ACC627484AE10FE0:24921892E41D6218]:0)\n   [junit4]    >        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:181)\n   [junit4]    >        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:115)\n   [junit4]    >        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:105)\n   [junit4]    >        at org.apache.solr.cloud.AbstractZkTestCase.buildZooKeeper(AbstractZkTestCase.java:88)\n   [junit4]    >        at org.apache.solr.cloud.AbstractZkTestCase.buildZooKeeper(AbstractZkTestCase.java:82)\n   [junit4]    >        at org.apache.solr.cloud.AbstractDistribZkTestBase.distribSetUp(AbstractDistribZkTestBase.java:75)\n   [junit4]    >        at org.apache.solr.cloud.AbstractFullDistribZkTestBase.distribSetUp(AbstractFullDistribZkTestBase.java:217)\n   [junit4]    >        at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:966)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n   [junit4]    > Caused by: java.util.concurrent.TimeoutException: Could not connect to ZooKeeper 127.0.0.1:34020 within 45000 ms\n   [junit4]    >        at org.apache.solr.common.cloud.ConnectionManager.waitForConnected(ConnectionManager.java:229)\n   [junit4]    >        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:173)\n   [junit4]    >        ... 38 more\n   [junit4]   2> 45430 INFO  (SUITE-TestSolrConfigHandlerConcurrent-seed#[ACC627484AE10FE0]-worker) [    ] o.a.s.SolrTestCaseJ4 ###deleteCore\n   [junit4]   2> NOTE: leaving temporary files on disk at: /home/sarowe/git/lucene-solr/solr/build/solr-core/test/J12/temp/solr.handler.TestSolrConfigHandlerConcurrent_ACC627484AE10FE0-001\n   [junit4]   2> Feb 26, 2016 8:03:44 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\n   [junit4]   2> WARNING: Will linger awaiting termination of 3 leaked thread(s).\n   [junit4]   2> Feb 26, 2016 8:04:04 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\n   [junit4]   2> SEVERE: 2 threads leaked from SUITE scope at org.apache.solr.handler.TestSolrConfigHandlerConcurrent: \n   [junit4]   2>    1) Thread[id=22, name=Thread-1, state=WAITING, group=TGRP-TestSolrConfigHandlerConcurrent]\n   [junit4]   2>         at java.lang.Object.wait(Native Method)\n   [junit4]   2>         at java.lang.Thread.join(Thread.java:1245)\n   [junit4]   2>         at java.lang.Thread.join(Thread.java:1319)\n   [junit4]   2>         at org.apache.zookeeper.server.NIOServerCnxnFactory.join(NIOServerCnxnFactory.java:297)\n   [junit4]   2>         at org.apache.solr.cloud.ZkTestServer$ZKServerMain.runFromConfig(ZkTestServer.java:310)\n   [junit4]   2>         at org.apache.solr.cloud.ZkTestServer$2.run(ZkTestServer.java:491)\n   [junit4]   2>    2) Thread[id=23, name=NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0, state=RUNNABLE, group=TGRP-TestSolrConfigHandlerConcurrent]\n   [junit4]   2>         at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\n   [junit4]   2>         at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:269)\n   [junit4]   2>         at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:79)\n   [junit4]   2>         at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)\n   [junit4]   2>         at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)\n   [junit4]   2>         at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:173)\n   [junit4]   2>         at java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> Feb 26, 2016 8:04:04 PM com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\n   [junit4]   2> INFO: Starting to interrupt leaked threads:\n   [junit4]   2>    1) Thread[id=22, name=Thread-1, state=WAITING, group=TGRP-TestSolrConfigHandlerConcurrent]\n   [junit4]   2>    2) Thread[id=23, name=NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0, state=RUNNABLE, group=TGRP-TestSolrConfigHandlerConcurrent]\n   [junit4]   2> 65522 WARN  (Thread-1) [    ] o.a.s.c.ZkTestServer Server interrupted\n   [junit4]   2> java.lang.InterruptedException\n   [junit4]   2>        at java.lang.Object.wait(Native Method)\n   [junit4]   2>        at java.lang.Thread.join(Thread.java:1245)\n   [junit4]   2>        at java.lang.Thread.join(Thread.java:1319)\n   [junit4]   2>        at org.apache.zookeeper.server.NIOServerCnxnFactory.join(NIOServerCnxnFactory.java:297)\n   [junit4]   2>        at org.apache.solr.cloud.ZkTestServer$ZKServerMain.runFromConfig(ZkTestServer.java:310)\n   [junit4]   2>        at org.apache.solr.cloud.ZkTestServer$2.run(ZkTestServer.java:491)\n  [junit4]   2> Feb 26, 2016 8:04:07 PM com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\n   [junit4]   2> SEVERE: There are still zombie threads that couldn't be terminated:\n   [junit4]   2>    1) Thread[id=23, name=NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0, state=RUNNABLE, group=TGRP-TestSolrConfigHandlerConcurrent]\n   [junit4]   2>         at sun.nio.ch.EPollArrayWrapper.interrupt(Native Method)\n   [junit4]   2>         at sun.nio.ch.EPollArrayWrapper.interrupt(EPollArrayWrapper.java:317)\n   [junit4]   2>         at sun.nio.ch.EPollSelectorImpl.wakeup(EPollSelectorImpl.java:193)\n   [junit4]   2>         at java.nio.channels.spi.AbstractSelector$1.interrupt(AbstractSelector.java:213)\n   [junit4]   2>         at java.nio.channels.spi.AbstractSelector.begin(AbstractSelector.java:219)\n   [junit4]   2>         at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:78)\n   [junit4]   2>         at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)\n   [junit4]   2>         at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)\n   [junit4]   2>         at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:173)\n   [junit4]   2>         at java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: test params are: codec=FastCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=FAST, chunkSize=14609, maxDocsPerChunk=491, blockSize=3), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=FAST, chunkSize=14609, blockSize=3)), sim=ClassicSimilarity, locale=de-LU, timezone=Cuba\n   [junit4]   2> NOTE: Linux 4.1.0-custom2-amd64 amd64/Oracle Corporation 1.8.0_45 (64-bit)/cpus=16,threads=3,free=400229776,total=514850816\n   [junit4]   2> NOTE: All tests run in this JVM: [TestSolrConfigHandlerConcurrent]\n   [junit4]   2> NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSolrConfigHandlerConcurrent -Dtests.seed=ACC627484AE10FE0 -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=de-LU -Dtests.timezone=Cuba -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.00s J12 | TestSolrConfigHandlerConcurrent (suite) <<<\n   [junit4]    > Throwable #1: com.carrotsearch.randomizedtesting.ThreadLeakError: 2 threads leaked from SUITE scope at org.apache.solr.handler.TestSolrConfigHandlerConcurrent: \n   [junit4]    >    1) Thread[id=22, name=Thread-1, state=WAITING, group=TGRP-TestSolrConfigHandlerConcurrent]\n   [junit4]    >         at java.lang.Object.wait(Native Method)\n   [junit4]    >         at java.lang.Thread.join(Thread.java:1245)\n   [junit4]    >         at java.lang.Thread.join(Thread.java:1319)\n   [junit4]    >         at org.apache.zookeeper.server.NIOServerCnxnFactory.join(NIOServerCnxnFactory.java:297)\n   [junit4]    >         at org.apache.solr.cloud.ZkTestServer$ZKServerMain.runFromConfig(ZkTestServer.java:310)\n   [junit4]    >         at org.apache.solr.cloud.ZkTestServer$2.run(ZkTestServer.java:491)\n   [junit4]    >    2) Thread[id=23, name=NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0, state=RUNNABLE, group=TGRP-TestSolrConfigHandlerConcurrent]\n   [junit4]    >         at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\n   [junit4]    >         at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:269)\n   [junit4]    >         at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:79)\n   [junit4]    >         at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)\n   [junit4]    >         at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)\n   [junit4]    >         at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:173)\n   [junit4]    >         at java.lang.Thread.run(Thread.java:745)\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([ACC627484AE10FE0]:0)Throwable #2: com.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:\n   [junit4]    >    1) Thread[id=23, name=NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0, state=RUNNABLE, group=TGRP-TestSolrConfigHandlerConcurrent]\n   [junit4]    >         at sun.nio.ch.EPollArrayWrapper.interrupt(Native Method)\n   [junit4]    >         at sun.nio.ch.EPollArrayWrapper.interrupt(EPollArrayWrapper.java:317)\n   [junit4]    >         at sun.nio.ch.EPollSelectorImpl.wakeup(EPollSelectorImpl.java:193)\n   [junit4]    >         at java.nio.channels.spi.AbstractSelector$1.interrupt(AbstractSelector.java:213)\n   [junit4]    >         at java.nio.channels.spi.AbstractSelector.begin(AbstractSelector.java:219)\n   [junit4]    >         at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:78)\n   [junit4]    >         at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)\n   [junit4]    >         at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)\n   [junit4]    >         at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:173)\n   [junit4]    >         at java.lang.Thread.run(Thread.java:745)\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([ACC627484AE10FE0]:0)\n   [junit4] Completed [100/580 (1!)] on J12 in 70.76s, 1 test, 3 errors <<< FAILURES!\n\n ",
            "id": "comment-15170245"
        },
        {
            "date": "2016-03-08T17:01:50+0000",
            "author": "Steve Rowe",
            "content": "I opened a ZooKeeper issue to report the race to them: ZOOKEEPER-2383. ",
            "id": "comment-15185241"
        },
        {
            "date": "2016-03-08T18:59:11+0000",
            "author": "Steve Rowe",
            "content": "Patch adding a workaround to the Solr's test ZK server that subclasses ZooKeeperServer to order server JMX registration before setting up its request processing pipeline.\n\nWith this patch I no longer see Solr test failures.\n\nHowever, I think we should wait for the ZooKeeper 3.4.9 release (Flavio Junqueira has made ZOOKEEPER-2383 a 3.4.9 Blocker).\n\nSo I've removed the CHANGES.txt changes from the attached patch.  It should be usable as the basis for upgrading to 3.4.9 when that gets released, though at that point I assume we'll no longer need to subclass ZooKeeperServer to change JMX registration, so the ZkTestServer.java changes in this patch will need to be left out. ",
            "id": "comment-15185509"
        },
        {
            "date": "2016-03-21T16:47:54+0000",
            "author": "Steve Rowe",
            "content": "Resolving as won't fix for now, pending the ZK 3.4.9 release. ",
            "id": "comment-15204583"
        }
    ]
}