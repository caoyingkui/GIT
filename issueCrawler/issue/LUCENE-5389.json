{
    "id": "LUCENE-5389",
    "title": "Even more doc for construction of TokenStream components",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "There are more useful things to tell would-be authors of tokenizers. Let's tell them.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13864825",
            "author": "Benson Margulies",
            "content": "https://github.com/apache/lucene-solr/pull/14\n ",
            "date": "2014-01-07T22:54:47+0000"
        },
        {
            "id": "comment-13866765",
            "author": "Benson Margulies",
            "content": "Robert MuirI think that this is ready to go . If you commit this and merge down to 4.x, I can then tackle work on this file for the new stuff. ",
            "date": "2014-01-09T16:34:59+0000"
        },
        {
            "id": "comment-13866766",
            "author": "Robert Muir",
            "content": "Thanks Benson! I'll take a look at this in a bit. ",
            "date": "2014-01-09T16:37:21+0000"
        },
        {
            "id": "comment-13867429",
            "author": "Robert Muir",
            "content": "OK, i took a look. I had to make a fix for documentation-lint to pass, basically it didnt like the multiline {@code} element you had for the code sample, because 'javadoc' would give an error that it couldnt find the closing brace. Maybe the {@override} was messing it up. In general i've never used multiline {@code} before...  Anyway i just made it consistent with other code samples by doing this:\n\n\n<pre class=\"prettyprint\">\n    public class ForwardingTokenizer extends Tokenizer {\n       private Tokenizer delegate;\n       ...\n       {@literal @Override}\n       public void reset() {\n          super.reset();\n          delegate.setReader(this.input);\n          delegate.reset();\n       }\n    }\n  </pre>\n\n\n\nThe class=\"prettyprint\" gives colored syntax highlighting in the javadocs, and the override is escaped with literal. At least these are the way the others are done.\n\nI'm committing this. Do you want to make a patch to trunk-only to update the 5.x docs with respect to LUCENE-5388? Stuff like \"(A future release of Apache Lucene may remove the reader parameters from the Tokenizer constructors.)\"\n\nThanks! ",
            "date": "2014-01-10T02:06:58+0000"
        },
        {
            "id": "comment-13867430",
            "author": "ASF subversion and git services",
            "content": "Commit 1557010 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1557010 ]\n\nLUCENE-5389: Add more guidance in the analyis documentation package overview (closes #14) ",
            "date": "2014-01-10T02:11:01+0000"
        },
        {
            "id": "comment-13867431",
            "author": "ASF subversion and git services",
            "content": "Commit 1557011 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1557011 ]\n\nLUCENE-5389: Add more guidance in the analyis documentation package overview (closes #14) ",
            "date": "2014-01-10T02:15:19+0000"
        },
        {
            "id": "comment-13867441",
            "author": "Benson Margulies",
            "content": "Sorry, I forgot to lint after accepting the suggestion about delegation.\n\nYes, I'll start making various next-step patches. ",
            "date": "2014-01-10T02:40:12+0000"
        },
        {
            "id": "comment-13867453",
            "author": "Robert Muir",
            "content": "No problem, thank you! ",
            "date": "2014-01-10T03:01:10+0000"
        }
    ]
}