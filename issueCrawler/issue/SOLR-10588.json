{
    "id": "SOLR-10588",
    "title": "SolrCloudExampleTest.testLoadDocsIntoGettingStartedCollection failure caused by concurrent core reload.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "https://builds.apache.org/job/Lucene-Solr-Tests-master/1788/testReport/junit/junit.framework/TestSuite/org_apache_solr_cloud_SolrCloudExampleTest/\n\nthis NPE, even it might be quite reasonable itself, breaks core reload, and applying config param. I'm not sure, how it 's related causes to these constant failures.",
    "attachments": {
        "consoleFull.html.zip": "https://issues.apache.org/jira/secure/attachment/12865698/consoleFull.html.zip",
        "SOLR-10588.patch": "https://issues.apache.org/jira/secure/attachment/12865720/SOLR-10588.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-30T10:30:56+0000",
            "content": "\n   [junit4]   2> org.apache.solr.common.SolrException: Unable to reload core [gettingstarted_shard1_replica2]\n   [junit4]   2> \tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:1197)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.lambda$getConfListener$18(SolrCore.java:2949)\n   [junit4]   2> \tat org.apache.solr.handler.SolrConfigHandler$Command.lambda$handleGET$0(SolrConfigHandler.java:225)\n   [junit4]   2> \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> Caused by: java.lang.NullPointerException\n   [junit4]   2> \tat org.apache.solr.metrics.SolrMetricManager.loadShardReporters(SolrMetricManager.java:1032)\n   [junit4]   2> \tat org.apache.solr.metrics.SolrCoreMetricManager.loadReporters(SolrCoreMetricManager.java:89)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:896)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.reload(SolrCore.java:647)\n   [junit4]   2> \tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:1184)\n   [junit4]   2> \t... 3 more\n   [junit4]   2> 1614982 INFO  (Solr\n\n\n\nand this is another one \n\n   [junit4]   2> 1614982 ERROR (SolrConfigHandler-refreshconf) [n:127.0.0.1:49705_ c:gettingstarted s:shard1 r:core_node4 x:gettingstarted_shard1_replica2] o.a.s.h.SolrConfigHandler Unable to refresh conf \n   [junit4]   2> org.apache.solr.common.SolrException: Unable to reload core [gettingstarted_shard1_replica2]\n   [junit4]   2> \tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:1197)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.lambda$getConfListener$18(SolrCore.java:2949)\n   [junit4]   2> \tat org.apache.solr.handler.SolrConfigHandler$Command.lambda$handleGET$0(SolrConfigHandler.java:225)\n   [junit4]   2> \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> Caused by: java.lang.NullPointerException\n   [junit4]   2> \tat org.apache.solr.metrics.SolrMetricManager.loadShardReporters(SolrMetricManager.java:1032)\n   [junit4]   2> \tat org.apache.solr.metrics.SolrCoreMetricManager.loadReporters(SolrCoreMetricManager.java:89)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:896)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.reload(SolrCore.java:647)\n   [junit4]   2> \tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:1184)\n   [junit4]   2> \t... 3 more\n   [junit4]   2> 1614982 INFO  (SolrConfigHandler-refreshconf) [n:127.0.0.1:57043_ c:gettingstarted s:shard1 r:core_node3 x:gettingstarted_shard1_replica1] o.a.s.m.SolrMetricManager Closing metric reporters for registry=solr.core.gettingstarted.shard1.replica1, tag=1820687374\n   [junit4]   2> 1614982 INFO  (SolrConfigHandler-refreshconf) [n:127.0.0.1:57043_ c:gettingstarted s:shard1 r:core_node3 x:gettingstarted_shard1_replica1] o.a.s.m.SolrMetricManager Closing metric reporters for registry=solr.collection.gettingstarted.shard1.leader, tag=1820687374\n   [junit4]   2> 1614983 ERROR (SolrConfigHandler-refreshconf) [n:127.0.0.1:57043_ c:gettingstarted s:shard1 r:core_node3 x:gettingstarted_shard1_replica1] o.a.s.h.SolrConfigHandler Unable to refresh conf \n   [junit4]   2> org.apache.solr.common.SolrException: Unable to reload core [gettingstarted_shard1_replica1]\n   [junit4]   2> \tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:1197)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.lambda$getConfListener$18(SolrCore.java:2949)\n   [junit4]   2> \tat org.apache.solr.handler.SolrConfigHandler$Command.lambda$handleGET$0(SolrConfigHandler.java:225)\n   [junit4]   2> \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> Caused by: org.apache.solr.common.SolrException\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:1001)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.reload(SolrCore.java:647)\n   [junit4]   2> \tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:1184)\n   [junit4]   2> \t... 3 more\n   [junit4]   2> Caused by: java.lang.NullPointerException\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.initRestManager(SolrCore.java:2779)\n   [junit4]   2> \tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:976)\n   [junit4]   2> \t... 5 more\n   [junit4]   2> 1615009 INFO  (SolrConfigHandler-refreshconf) [n:127.0.0.1:56894_ c:gettingstarted s:shard2 r:core_node1 x:gettingstarted_shard2_replica2] o.a.s.c.CoreContainer Reloading SolrCore 'gettingstarted_shard2_replica2' using configuration from collection gettingstarted\n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-15990190"
        },
        {
            "date": "2017-04-30T13:55:24+0000",
            "content": "what's really questionable is double core reload.\n\n\n   [junit4]   2> 1613694 INFO  (TEST-SolrCloudExampleTest.testLoadDocsIntoGettingStartedCollection-seed#[D64D4AF1644074DE]) [    ] o.a.s.c.SolrCloudExampleTest Sending set-property 'updateHandler.autoSoftCommit.maxTime'=3000 to SolrCLI.ConfigTool.\n   [junit4]   1> \n   [junit4]   1> POSTing request to Config API: http://127.0.0.1:50975//gettingstarted/config\n   [junit4]   1> {\"set-property\":{\"updateHandler.autoSoftCommit.maxTime\":\"3000\"}}\n   [junit4]   2> 1613699 INFO  (qtp1233100485-18318) [n:127.0.0.1:57043_ c:gettingstarted s:shard1 r:core_node3 x:gettingstarted_shard1_replica1] o.a.s.h.SolrConfigHandler Executed config commands successfully and persisted to ZK [{\"set-property\":{\"updateHandler.autoSoftCommit.maxTime\":\"3000\"}}]\n   [junit4]   2> 1613699 INFO  (qtp1233100485-18318) [n:127.0.0.1:57043_ c:gettingstarted s:shard1 r:core_node3 x:gettingstarted_shard1_replica1] o.a.s.h.SolrConfigHandler Waiting up to 30 secs for 4 replicas to set the property overlay to be of version 0 for collection gettingstarted\n   [junit4]   2> 1613700 INFO  (Thread-5447) [n:127.0.0.1:56894_    ] o.a.s.c.SolrCore config update listener called for core gettingstarted_shard2_replica2\n   [junit4]   2> 1613701 INFO  (Thread-5447) [n:127.0.0.1:56894_    ] o.a.s.c.SolrCore core reload gettingstarted_shard2_replica2\n   [junit4]   2> 1613702 INFO  (Thread-5449) [n:127.0.0.1:57043_    ] o.a.s.c.SolrCore config update listener called for core gettingstarted_shard1_replica1\n   [junit4]   2> 1613702 INFO  (Thread-5450) [n:127.0.0.1:49705_    ] o.a.s.c.SolrCore config update listener called for core gettingstarted_shard1_replica2\n   [junit4]   2> 1613703 INFO  (Thread-5449) [n:127.0.0.1:57043_    ] o.a.s.c.SolrCore core reload gettingstarted_shard1_replica1\n   [junit4]   2> 1613704 INFO  (Thread-5450) [n:127.0.0.1:49705_    ] o.a.s.c.SolrCore core reload gettingstarted_shard1_replica2\n   [junit4]   2> 1613706 INFO  (Thread-5448) [n:127.0.0.1:32921_    ] o.a.s.c.SolrCore config update listener called for core gettingstarted_shard2_replica1\n   [junit4]   2> 1613711 INFO  (Thread-5448) [n:127.0.0.1:32921_    ] o.a.s.c.SolrCore core reload gettingstarted_shard2_replica1\n\n\nConfig change is posted to Zk and it seems it triggers core reload by zk listener registered at SolrCore.registerConfListener(). I guess this because of Thread-54* names.\nbut then it happens again by SolrConfigHandler.Command.handleGET()\n\n   [junit4]   2> 1613952 INFO  (SolrConfigHandler-refreshconf) [n:127.0.0.1:49705_ c:gettingstarted s:shard1 r:core_node4 x:gettingstarted_shard1_replica2] o.a.s.c.SolrCore core reload gettingstarted_shard1_replica2\n   [junit4]   2> 1613937 INFO  (SolrConfigHandler-refreshconf) [n:127.0.0.1:57043_ c:gettingstarted s:shard1 r:core_node3 x:gettingstarted_shard1_replica1] o.a.s.c.SolrCore config update listener called for core gettingstarted_shard1_replica1\n   [junit4]   2> 1613955 INFO  (SolrConfigHandler-refreshconf) [n:127.0.0.1:57043_ c:gettingstarted s:shard1 r:core_node3 x:gettingstarted_shard1_replica1] o.a.s.c.SolrCore core reload gettingstarted_shard1_replica1\n   [junit4]   2> 1613956 INFO  (SolrConfigHandler-refreshconf) [n:127.0.0.1:32921_ c:gettingstarted s:shard2 r:core_node2 x:gettingstarted_shard2_replica1] o.a.s.c.SolrCore core reload gettingstarted_shard2_replica1\n\n\nthen script triggers deletes\n\n   [junit4]   1> Deleting collection 'gettingstarted' using command:\n   [junit4]   1> http://127.0.0.1:50975/admin/collections?action=DELETE&name=gettingstarted\n\n\nand deleting is actually on going while SolrConfigHandler-refreshconf reloads config, and breaks with NPE and this might cause a leak. \nWhat we also can see from leakage dump, that leaked objects are created with core create command, but not made during reload. \nUPD, there is one leak from reloading threads: \n\norg.apache.solr.common.util.ObjectReleaseTracker$ObjectTrackerException: org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor\n\tat org.apache.solr.common.util.ObjectReleaseTracker.track(ObjectReleaseTracker.java:42)\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:883)\n\tat org.apache.solr.core.SolrCore.reload(SolrCore.java:647)\n\tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:1184)\n\tat org.apache.solr.core.SolrCore.lambda$getConfListener$18(SolrCore.java:2949)\n\tat org.apache.solr.handler.SolrConfigHandler$Command.lambda$handleGET$0(SolrConfigHandler.java:225)\n\tat java.lang.Thread.run(Thread.java:745)\n\n \n\nThe question is: should it really reload core twice?  Can't SolrConfigHandler.Command.handleGET be synchronous? or pollable with async? cc Noble Paul ",
            "author": "Mikhail Khludnev",
            "id": "comment-15990248"
        },
        {
            "date": "2017-04-30T16:37:25+0000",
            "content": "The worst thing is that I can't reproduce it locally with \ud83d\udc1c beast.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15990285"
        },
        {
            "date": "2017-04-30T20:32:10+0000",
            "content": "SOLR-10588.patch excludes concurrent core reload at SolrCore.getConfListener()'s \u019b by the way they are already excluded at SolrConfigHandler.Command.handleGET()'s \u019b.. but wait..the later already calls the former. Well.. now it works only because of holy reentrancy. \n\nThis might probably miss some overlapping config updates. And (if it works at all), SolrConfigHandler.reloadLock should probably be elevated to somewhere in SolrCore, or even to CoreContainer. \n\n$1bn question \nWho can confirm that this fix is effective?       ",
            "author": "Mikhail Khludnev",
            "id": "comment-15990375"
        },
        {
            "date": "2017-05-01T15:47:41+0000",
            "content": "At least it's in the same ballpark. Shalin Shekhar Mangar's comments may shed some light on this.\n\nMikhail: I can get SolrCloudExapmleTest to fail on my system, I'll give this a spin momentarily.\n\nErick ",
            "author": "Erick Erickson",
            "id": "comment-15990987"
        },
        {
            "date": "2017-05-02T02:58:05+0000",
            "content": "OK, 2,000 runs and \n> no NPEs\n> no test failures\n\nI was usually able to get 1-2% failure rate before this patch, so LGTM.\n\nAnd note that I did not run any tests except SolrCloudExampleTest. ",
            "author": "Erick Erickson",
            "id": "comment-15992117"
        },
        {
            "date": "2017-05-02T10:21:45+0000",
            "content": "Erick Erickson, thank you very much! \nSince it makes noise in CI, I can commit this today or tomorrow after it passes whole suite, and then come back to better design in SOLR-10594. \nHow does it sound?    ",
            "author": "Mikhail Khludnev",
            "id": "comment-15992679"
        },
        {
            "date": "2017-05-02T11:22:32+0000",
            "content": "I run solr/core tests. Got 36 failures from Payload/Similarity. I suppose it's going to be fixed soon.  So, I'm ready to commit. Are there any concerns?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15992729"
        },
        {
            "date": "2017-05-02T13:21:41+0000",
            "content": "Tests passed. I'm ready to commit the fix.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15992873"
        },
        {
            "date": "2017-05-02T13:40:58+0000",
            "content": "Got 36 failures from Payload/Similarity\nSorry Mikhail!   My bad, sorry for the hassle that delayed you here. ",
            "author": "Erik Hatcher",
            "id": "comment-15992912"
        },
        {
            "date": "2017-05-02T14:07:47+0000",
            "content": "No problem, Erik Hatcher. Any concerns about committing this fix?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15992963"
        },
        {
            "date": "2017-05-02T14:23:20+0000",
            "content": "Looks good, Mikhail Khludnev.   Cosmetic, but since you asked and I looked at the patch here, I'd remove the space \"progress\" and the period in the info log.   ",
            "author": "Erik Hatcher",
            "id": "comment-15992987"
        },
        {
            "date": "2017-05-02T15:16:59+0000",
            "content": "bq: Since it makes noise in CI, I can commit this today or tomorrow after it passes whole suite,\n\nSuits me perfectly... ",
            "author": "Erick Erickson",
            "id": "comment-15993067"
        },
        {
            "date": "2017-05-03T04:55:30+0000",
            "content": "Commit cbd3b02cda1ce9d42cf78f7571bc96a8af4fe219 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cbd3b02 ]\n\nSOLR-10588: Prevent redundant double core reload on config update. ",
            "author": "ASF subversion and git services",
            "id": "comment-15994276"
        },
        {
            "date": "2017-05-03T05:33:24+0000",
            "content": "Commit 4901daee85acd867bd120f3f77c41821ab2aa7fb in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4901dae ]\n\nSOLR-10588: Prevent redundant double core reload on config update. ",
            "author": "ASF subversion and git services",
            "id": "comment-15994300"
        }
    ]
}