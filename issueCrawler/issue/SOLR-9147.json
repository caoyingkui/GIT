{
    "id": "SOLR-9147",
    "title": "avoid expensive byte[] resize in EmbeddedSolrServer",
    "details": {
        "components": [
            "Server"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "This issue makes modest step toward EmbeddedSolrServer efficiency.\nIt replaces java.io.ByteArrayOutputStream which has quite expensive resizes with incrementally growing BAOS from commons-io 2.5.  \n\nNote\nThere is no expectation for performance gain in case of StreamingResponseCallback.",
    "attachments": {
        "SOLR-9147.patch": "https://issues.apache.org/jira/secure/attachment/12805546/SOLR-9147.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-22T20:28:24+0000",
            "author": "Mikhail Khludnev",
            "content": "I'm going to commit it soon.\nDiscussion had place at SOLR-797, SOLR-6578.  ",
            "id": "comment-15295716"
        },
        {
            "date": "2016-05-22T20:41:05+0000",
            "author": "Mikhail Khludnev",
            "content": "also need to remove commons-io-unsafe-2.4.jar from solr/common-build.xml it seems lucene's twin goes fine without it.  ",
            "id": "comment-15295721"
        },
        {
            "date": "2016-05-22T21:14:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3ea12f2be4f39a5bafdd8c48b113d9753ae637ad in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3ea12f2 ]\n\nSOLR-9147: using BAOS from commons io 2.5 in EmbeddedSolrServer to avoid array resize. ",
            "id": "comment-15295728"
        },
        {
            "date": "2016-05-22T21:32:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bbac85c35aba3155add140ffbcb607f9780d722b in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bbac85c ]\n\nSOLR-9147: using BAOS from commons io 2.5 in EmbeddedSolrServer to avoid array resize. ",
            "id": "comment-15295729"
        },
        {
            "date": "2016-05-22T21:48:58+0000",
            "author": "Mikhail Khludnev",
            "content": "oops.. will move it to Optimizations section in CHANGES.txt shortly  ",
            "id": "comment-15295732"
        },
        {
            "date": "2016-05-22T22:08:37+0000",
            "author": "Uwe Schindler",
            "content": "Why did you remove commons-io from forbiddenapis? I will readd them.\n\nUnfortunately the new version was released half an hour ago, unfortunately not yet with commons-io-2.5 support. So I'd go with commons-io-2.4 signatures for now. ",
            "id": "comment-15295742"
        },
        {
            "date": "2016-05-22T22:21:35+0000",
            "author": "Uwe Schindler",
            "content": "I restored forbidden-apis. Next time please ask before removing important stuff without a workaround! ",
            "id": "comment-15295749"
        },
        {
            "date": "2016-05-22T22:47:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3fb69edead6721146997a13a3e0b2c8ca918abef in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3fb69ed ]\n\nLUCENE-7296, SOLR-9147: Fix Maven build ",
            "id": "comment-15295756"
        },
        {
            "date": "2016-05-22T22:48:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b385a536f3a94e7a95418bc5ecf847fc1a63fd18 in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b385a53 ]\n\nLUCENE-7296, SOLR-9147: Fix Maven build ",
            "id": "comment-15295758"
        },
        {
            "date": "2016-05-22T23:21:07+0000",
            "author": "Uwe Schindler",
            "content": "I opened issue at forbiddenapis: https://github.com/policeman-tools/forbidden-apis/issues/102\n\nUnfortunatley this issue was a bit too late for the release!  You should have pinged me directly, now we must live with a hack in both the Ant and Maven builds. ",
            "id": "comment-15295769"
        },
        {
            "date": "2016-05-23T04:59:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d8a6bf8a052f3d7cd3ee8d254fa501b09b8719be in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d8a6bf8 ]\n\nSOLR-9147: trying to fix the build ",
            "id": "comment-15295914"
        },
        {
            "date": "2016-05-23T05:02:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 02a31ebc8461a2e829b126715297e8fa51bb83da in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=02a31eb ]\n\nSOLR-9147: trying to fix the build ",
            "id": "comment-15295917"
        },
        {
            "date": "2016-05-23T06:10:31+0000",
            "author": "Mikhail Khludnev",
            "content": "it causes the failure\nhttps://builds.apache.org/job/Lucene-Solr-Tests-master/1162/console\n\ncheck-working-copy:\n...\n/x1/jenkins/jenkins-slave/workspace/Lucene-Solr-Tests-master/build.xml:608: Source checkout is modified!!! Offending files:\n* solr/licenses/commons-io-2.5.jar.sha1\n\n \nI'm trying to fix it quite unconsciously by commits below.   ",
            "id": "comment-15295958"
        },
        {
            "date": "2016-05-23T06:19:11+0000",
            "author": "Mikhail Khludnev",
            "content": "Uwe Schindler I decided to remove it because build didn't fail locally, and I see that it's not used in Lucene. Anyway, I apology for breaking things, which I don't understand (but it's what I'm doing all of my life).\n\nAlso, how to fix:\n\n \nbuild.xml:608: Source checkout is modified!!! Offending files:\n* solr/licenses/commons-io-2.5.jar.sha1\n\n   ",
            "id": "comment-15295965"
        },
        {
            "date": "2016-05-23T14:55:20+0000",
            "author": "Mikhail Khludnev",
            "content": "for the reference, by Uwe Schindler:\nSince we changed to Git, you may better use Linux to generate the checksums. Currently there seems to be a problem with line endings! I wanted to open an issue about that already, but changes to the sha1 are seldom\u2026 So be sure to check that you only see a difference in this one file after \u201cant jar-checksums\u201d. ",
            "id": "comment-15296468"
        },
        {
            "date": "2016-05-23T14:56:56+0000",
            "author": "Mikhail Khludnev",
            "content": "Uwe Schindler, can you point me on exact failure, I want understand what I broke and to be able to check it locally next time.   ",
            "id": "comment-15296472"
        },
        {
            "date": "2016-05-23T15:18:16+0000",
            "author": "Uwe Schindler",
            "content": "What failure do you mean? There are 2 probs here:\n\n\tfobiddenapis is used to find calls to \"broken functions\" in the JDK and also commons-io (like Readers without Charset,...). Lucene and Solr also have a list of other signatures that are disallowed (like creating Threads without a name, using log4j instead of slf4j,...). The problem with the update of commons-io was, that there is currently no signature list for the 2.5 version of commons-io bundled with the checking tool. So instead of disabling, I re-added the signatures of the 2.4 version, which should be fine for now. I opened an issue to add support for commons-io-2.5: https://github.com/policeman-tools/forbidden-apis/issues/102\n\tThe Jar Checksum failure on Jenkins is comming from the following: Jenkins uses the \"jar-checksums\" task and recalculates all checksums and this task also writes them to disk. In the final check of Jenkins (after running all tests, recalculating checksums,...) the Git checkout is checked for modifications. If the checksums aren't correct, this fails. This is what happened. The problem was that you created the checksum files by hand, not with the ant task, so there was just the newline difference.\n\n ",
            "id": "comment-15296504"
        },
        {
            "date": "2016-05-23T15:21:56+0000",
            "author": "Uwe Schindler",
            "content": "ant precommit does the same like jenkins. So you should call that before committing, especially if you change dependencies in the build or shuffle modules around.\n\nThis task does a lot of checks, including that all licenses are there, the source code contains no tabs instead of spaces, the above forbidden-apis checks, it also builds javadocs and checks the Javadocs for completeness and broken links. This may take a while, but you can go and fetch a beer in the meantime  ",
            "id": "comment-15296508"
        },
        {
            "date": "2016-05-23T15:24:02+0000",
            "author": "Uwe Schindler",
            "content": "MacOSX is also fine. This note was about Windows, where ant jar-checksums produces differences. The reason is that the default Git configuration has no NL policy for files with \"sha1\" as extension. Maybe we should add some git config properties to the checkout. Does anybody know how to do this? like \".gitignore\"? ",
            "id": "comment-15296510"
        },
        {
            "date": "2016-07-27T13:20:07+0000",
            "author": "Chris F",
            "content": "I think you can use a .gitattributes file to specify the desired line endings per file extension. See https://help.github.com/articles/dealing-with-line-endings/#per-repository-settings ",
            "id": "comment-15395658"
        }
    ]
}