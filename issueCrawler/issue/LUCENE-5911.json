{
    "id": "LUCENE-5911",
    "title": "Make MemoryIndex thread-safe for queries",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ]
    },
    "description": "We want to be able to run multiple queries at once over a MemoryIndex in luwak (see https://github.com/flaxsearch/luwak/commit/49a8fba5764020c2f0e4dc29d80d93abb0231191), but this isn't possible with the current implementation.  However, looking at the code, it seems that it would be relatively simple to make MemoryIndex thread-safe for reads/queries.",
    "attachments": {
        "LUCENE-5911-2.patch": "https://issues.apache.org/jira/secure/attachment/12675692/LUCENE-5911-2.patch",
        "LUCENE-5911.patch": "https://issues.apache.org/jira/secure/attachment/12664608/LUCENE-5911.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14112095",
            "author": "Alan Woodward",
            "content": "Patch, no tests yet (MemoryIndex seems a bit under-tested at the moment!), just changing a couple of fields in Info to final and making Info.sortTerms() synchronized. ",
            "date": "2014-08-27T09:49:31+0000"
        },
        {
            "id": "comment-14137159",
            "author": "Alan Woodward",
            "content": "We're running some tests on this at the moment to see if adding in the synchronization slows things down noticeably.  Anybody have any comments? Simon Willnauer or Martijn van Groningen? ",
            "date": "2014-09-17T12:43:15+0000"
        },
        {
            "id": "comment-14138002",
            "author": "Simon Willnauer",
            "content": "I don't understand why you not just simply calling sortTerms before you publish the MemoryIndex for querying? no need to sync this here at all no? ",
            "date": "2014-09-17T21:18:14+0000"
        },
        {
            "id": "comment-14138708",
            "author": "Alan Woodward",
            "content": "Do you mean add a publish() method to MemoryIndex?  There's no easy way of getting sortTerms() to run on all the fields outside of calling toString() at the moment, unless I'm missing something. ",
            "date": "2014-09-18T08:57:47+0000"
        },
        {
            "id": "comment-14139015",
            "author": "Simon Willnauer",
            "content": "I don't see how you can make this actually faster though... I don't think you can gain anything here really. I'd maybe add a method that allows you to sort all of them and use that before you pass the MemoryIndex to the search threads? ",
            "date": "2014-09-18T14:47:39+0000"
        },
        {
            "id": "comment-14139026",
            "author": "Yonik Seeley",
            "content": "It feels like sortTerms is an implementation detail that should not be exposed to the user.\n+1 to this patch to make things thread-safe. ",
            "date": "2014-09-18T14:59:17+0000"
        },
        {
            "id": "comment-14139134",
            "author": "Alan Woodward",
            "content": "Adding synchronized is a bit brute-force though.\n\nThe lazy-sorting bit is presumably for situations like highlighting where you want to index a single document and run only a couple of queries over it as quickly as possible.  So maybe the answer is to have a derived class, ThreadSafeMemoryIndex, which sorts the terms in the Info constructor.  That way if you want to use this in a lazily-instantiated way you continue to use MemoryIndex, but luwak (and the percolator) would use TSMI instead.\n\nI'll work on a patch. ",
            "date": "2014-09-18T16:25:34+0000"
        },
        {
            "id": "comment-14143244",
            "author": "Alan Woodward",
            "content": "In the end I decided that the nicest API change was to add a freeze() method which prepares the internal data structures for querying, and prevents users adding new fields.  You can continue to use MemoryIndex as in the past, but if you want to search in multiple threads, call freeze() first.\n\nAlso adds a new test, and renames the existing test to be a bit more descriptive of what it's actually doing. ",
            "date": "2014-09-22T14:26:03+0000"
        },
        {
            "id": "comment-14143856",
            "author": "Simon Willnauer",
            "content": "+1 to freeze ",
            "date": "2014-09-22T21:28:25+0000"
        },
        {
            "id": "comment-14151568",
            "author": "ASF subversion and git services",
            "content": "Commit 1628154 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1628154 ]\n\nLUCENE-5911: Add MemoryIndex.freeze() to allow for thread-safe searching ",
            "date": "2014-09-29T10:21:13+0000"
        },
        {
            "id": "comment-14151569",
            "author": "ASF subversion and git services",
            "content": "Commit 1628155 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1628155 ]\n\nLUCENE-5911: Add MemoryIndex.freeze() to allow for thread-safe searching ",
            "date": "2014-09-29T10:25:49+0000"
        },
        {
            "id": "comment-14151738",
            "author": "ASF subversion and git services",
            "content": "Commit 1628194 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1628194 ]\n\nLUCENE-5911: fix compile ",
            "date": "2014-09-29T14:37:56+0000"
        },
        {
            "id": "comment-14171941",
            "author": "David Smiley",
            "content": "I see that getNormValues() caches the norms and doesn't use synchronization, so it's not thread-safe yet. ",
            "date": "2014-10-15T03:39:08+0000"
        },
        {
            "id": "comment-14172338",
            "author": "Robert Muir",
            "content": "David: you are right.\n\nThis caching is unnecessary in my opinion.\n\nInstead if the optional freeze() method is supposed to prepare internal structures for querying, I would have freeze() just prebuild, populate an ArrayList<NumericDocValues> (indexed by field number), by calling getNormValues() for each one. If you don't call freeze, this list is null, and it just returns a new one each time: not worth caching or anything for that case. ",
            "date": "2014-10-15T13:06:05+0000"
        },
        {
            "id": "comment-14176098",
            "author": "Alan Woodward",
            "content": "Good catch, David.\n\nHere's a patch implementing Rob's idea (although I've used a map of String->NumericDocValues rather than an Array).  It also changes how Similarities are set, because you now need the Similarity to be known before freeze() is called.  This is a bit nicer than the current API, I think, whereby if you want to change the Similarity you have to get an IndexSearcher and then call setSimilarity on it. ",
            "date": "2014-10-18T20:03:57+0000"
        },
        {
            "id": "comment-14176208",
            "author": "David Smiley",
            "content": "+1 looks good. ",
            "date": "2014-10-19T04:15:20+0000"
        },
        {
            "id": "comment-14178167",
            "author": "ASF subversion and git services",
            "content": "Commit 1633321 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1633321 ]\n\nLUCENE-5911: Remove cacheing of norms, calculate up front in freeze() ",
            "date": "2014-10-21T09:11:53+0000"
        },
        {
            "id": "comment-14178170",
            "author": "ASF subversion and git services",
            "content": "Commit 1633322 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1633322 ]\n\nLUCENE-5911: Remove cacheing of norms, calculate up front in freeze() ",
            "date": "2014-10-21T09:16:57+0000"
        },
        {
            "id": "comment-14182605",
            "author": "ASF subversion and git services",
            "content": "Commit 1634034 from Alan Woodward in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1634034 ]\n\nLUCENE-5911: Add freeze() method to MemoryIndex to allow thread-safe searching ",
            "date": "2014-10-24T08:54:43+0000"
        },
        {
            "id": "comment-14182608",
            "author": "ASF subversion and git services",
            "content": "Commit 1634035 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1634035 ]\n\nLUCENE-5911: Update 5x CHANGES.txt ",
            "date": "2014-10-24T08:58:20+0000"
        },
        {
            "id": "comment-14182609",
            "author": "ASF subversion and git services",
            "content": "Commit 1634036 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1634036 ]\n\nLUCENE-5911: Update trunk CHANGES.txt ",
            "date": "2014-10-24T08:59:36+0000"
        },
        {
            "id": "comment-14182611",
            "author": "Alan Woodward",
            "content": "Reopening for backport to 4.10.2 ",
            "date": "2014-10-24T09:00:54+0000"
        },
        {
            "id": "comment-14182735",
            "author": "Michael McCandless",
            "content": "I think this is too big a change to push into 4.10.x branch?  That branch is for bug fixes only? ",
            "date": "2014-10-24T12:33:16+0000"
        },
        {
            "id": "comment-14182737",
            "author": "Alan Woodward",
            "content": "Is it?  I thought we weren't doing a 4.11? ",
            "date": "2014-10-24T12:36:14+0000"
        },
        {
            "id": "comment-14182738",
            "author": "Michael McCandless",
            "content": "I thought we weren't doing a 4.11?\n\nI don't think we are.  The next feature release is going to be 5.0, hopefully soon... ",
            "date": "2014-10-24T12:37:47+0000"
        },
        {
            "id": "comment-14182771",
            "author": "Alan Woodward",
            "content": "OK, will revert. ",
            "date": "2014-10-24T13:41:06+0000"
        },
        {
            "id": "comment-14182775",
            "author": "ASF subversion and git services",
            "content": "Commit 1634054 from Alan Woodward in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1634054 ]\n\nLUCENE-5911: Revert backport ",
            "date": "2014-10-24T13:45:23+0000"
        },
        {
            "id": "comment-14182779",
            "author": "Michael McCandless",
            "content": "Thanks Alan, I'll spin an RC now... ",
            "date": "2014-10-24T13:47:58+0000"
        },
        {
            "id": "comment-14332557",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:00:39+0000"
        }
    ]
}