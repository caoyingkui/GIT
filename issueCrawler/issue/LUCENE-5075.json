{
    "id": "LUCENE-5075",
    "title": "Wasted work in FailTwiceDuringMerge.eval()",
    "details": {
        "components": [],
        "fix_versions": [],
        "affect_versions": "4.3.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "The problem appears in version 4.3.1 and in revision 1495833.  I\nattached a one-line patch (patch.diff) that fixes it.  This problem\nand the attached patch are similar to some of the problems reported in\nLUCENE-5044 and their patch (patchAll.diff in LUCENE-5044).\n\nIn method \"FailTwiceDuringMerge.eval\", the loop over \"trace\" should\nonly be executed when at least one of \"!didFail1\" or \"!didFail2\" are\n\"true\".  The loop has no side effects when both \"!didFail1\" and\n\"!didFail2\" are \"false\" due to these two \"if\" statements:\n\n\nif (SegmentMerger.class.getName().equals(trace[i].getClassName()) && \"mergeTerms\".equals(trace[i].getMethodName()) && !didFail1) {\n\n\n\nand\n\n\nif (LiveDocsFormat.class.getName().equals(trace[i].getClassName()) && \"writeLiveDocs\".equals(trace[i].getMethodName()) && !didFail2) {\n\n\n\nA similar problem exists in \"FailOnlyInSync.eval\", where the loop over\n\"trace\" should only be executed when \"doFail\" is \"true\", because the\nloop has no side effect when \"doFail\" is \"false\" due to this \"if\"\nstatement:\n\n\nif (doFail && MockDirectoryWrapper.class.getName().equals(trace[i].getClassName()) && \"sync\".equals(trace[i].getMethodName())) {\n\n\n\nI attached a second patch (patch2.diff) for this second problem.  Note\nthat the code already checks outside the loop if \"doFail\" is \"true\":\n\n\nif (doFail) {\n\n\n\nand thus the patch does not need to check again (the patch only needs\nto delete the check inside the loop).",
    "attachments": {
        "patch.diff": "https://issues.apache.org/jira/secure/attachment/12589337/patch.diff",
        "patch2.diff": "https://issues.apache.org/jira/secure/attachment/12589338/patch2.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-06-24T14:50:16+0000",
            "content": "Hi Adrian. Although your patches actually prevent wasted work from being performed, I'm not going to merge them:\n\n\tthe first one makes the code harder to read although performance doesn't matter much (this is testing code),\n\tthe 2nd patch changes the behavior of the eval method given that doFail can be modified by concurrent threads.\n\n ",
            "author": "Adrien Grand",
            "id": "comment-13692051"
        }
    ]
}