{
    "id": "SOLR-11476",
    "title": "Solr seems to ignore replica placement rules",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "v2 API"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.6.1,                                            7.0,                                            7.0.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I'm running Solr Cloud in OpenShift. I have set up 5 pods across the cluster, each running one solr node. The instances are managed by a ZooKeeper ensemble.\n\nIn Solr 6.1, when I created a collection with 5 shards and a replicationFactor of 2, it would distribute all 10 replicas evenly on the nodes. With Solr 6.6 and 7.0, the distribution is random (why would I even want to gather many shards on one node and leave another node empty?).\n\nI tried using \"Rule-based Replica Placement\", but my rules seem to be ignored. I tried:\n\n\n\n<solr-url>/solr/admin/collections?action=CREATE&name=wikipedia&numShards=5&maxShardsPerNode=2&replicationFactor=2&replica:<3,node:*&collection.configName=wikipedia\n<solr-url>/solr/admin/collections?action=CREATE&name=wikipedia&numShards=5&maxShardsPerNode=2&replicationFactor=2&shard:*,replica:1,node:*&collection.configName=wikipedia\n<solr-url>/solr/admin/collections?action=CREATE&name=wikipedia4&numShards=5&maxShardsPerNode=2&replicationFactor=2&replica:2,node:*&collection.configName=wikipedia\n\n\n\nIn all three cases, shards are distributed unevenly, often leaving one node completely empty.\n\nWhat seems odd is, when i try a replicationFactor of 1, it still doesn't work, but the API response is suggesting otherwise:\n\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":3368},\n  \"success\":{\n    \"solr-3.solr:8983_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":1836},\n      \"core\":\"wikipedia5_shard5_replica_n1\"},\n    \"solr-2.solr:8983_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":1852},\n      \"core\":\"wikipedia5_shard4_replica_n1\"},\n    \"solr-4.solr:8983_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":1859},\n      \"core\":\"wikipedia5_shard3_replica_n1\"},\n    \"solr-0.solr:8983_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":1867},\n      \"core\":\"wikipedia5_shard2_replica_n1\"},\n    \"solr-1.solr:8983_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":1872},\n      \"core\":\"wikipedia5_shard1_replica_n1\"}}}\n\n\n\nOther than the returned JSON, the collection looks like this:",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-17T08:25:28+0000",
            "content": "I was able to narrow down the problem to wether Solr is started with a -h argument (hostname). If I supply a hostname at startup (and I have to, because IP addresses change quite frequently), shard distribution produces this weird results.\n\n(See also here). ",
            "author": "Franz Wimmer",
            "id": "comment-16207163"
        }
    ]
}