{
    "id": "SOLR-5263",
    "title": "CloudSolrServer URL cache update race",
    "details": {
        "affect_versions": "4.4,                                            4.5,                                            6.0",
        "status": "Resolved",
        "fix_versions": [
            "4.5.1",
            "4.6",
            "6.0"
        ],
        "components": [
            "clients - java",
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In CloudSolrServer.request, urlLists (and the like) is updated if lastClusterStateHashCode is different from the current hash code of clusterState. However, each time this happen, only the cache entry for the current collection being requested is updated. In the following condition this causes a race:\n\nquery collection A so a cache entry exists\nupdate collection A\nquery collection B, request method notices the hash code changed and update cache for collection B, updates lastClusterStateHashCode\nquery collection A, since lastClusterStateHashCode has been updated, no update for cache for collection A even though it's stale\n\nCan fix one of two ways:\n1. Track lastClusterStateHashCode per collection and lazily update each entry\n2. Every time we notice lastClusterStateHashCode != clusterState.hashCode(),\n   2a. rebuild the entire cache for all collections\n   2b. clear all current cache for collections",
    "attachments": {
        "SOLR-5263.patch": "https://issues.apache.org/jira/secure/attachment/12605811/SOLR-5263.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13776964",
            "date": "2013-09-25T00:04:52+0000",
            "content": "It's probably time to drop that more complicated cache code - especially now that CloudSolrServer will usually not even take that path and route on it's own. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13781434",
            "date": "2013-09-29T16:48:26+0000",
            "content": "Here is a simple patch that removes the caching. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13782033",
            "date": "2013-09-30T17:34:03+0000",
            "content": "If there are no objections, I'll commit this shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13783899",
            "date": "2013-10-02T13:15:03+0000",
            "content": "Commit 1528457 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1528457 ]\n\nSOLR-5263: Fix CloudSolrServer URL cache update race. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13783902",
            "date": "2013-10-02T13:16:24+0000",
            "content": "Commit 1528461 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1528461 ]\n\nSOLR-5263: Fix CloudSolrServer URL cache update race. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13783903",
            "date": "2013-10-02T13:17:01+0000",
            "content": "Thanks Jessica! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13791249",
            "date": "2013-10-10T06:54:41+0000",
            "content": "Commit 1530861 from shalin@apache.org in branch 'dev/branches/lucene_solr_4_5'\n[ https://svn.apache.org/r1530861 ]\n\nSOLR-4590, SOLR-5295, SOLR-5296, SOLR-5263, SOLR-5297, SOLR-5301, SOLR-5255, SOLR-5305, SOLR-5314: Merging r1526616, r1528433, r1528441, r1528461, r1528488, r1529341, r1529434, r1529503, r1530268 from branch_4x "
        }
    ]
}