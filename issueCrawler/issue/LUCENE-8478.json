{
    "id": "LUCENE-8478",
    "title": "combine TermScorer constructors' implementation",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Won't Do",
        "fix_versions": [],
        "affect_versions": "master (8.0)",
        "labels": "",
        "priority": "Minor",
        "type": "Bug"
    },
    "description": "We currently have two TermScorer constructor variants and it's not immediately obvious how and why their implementations are the way they are as far as initialisations and initialisation order is concerned. Combination of the logic could make the commonalities and differences clearer.",
    "attachments": {
        "LUCENE-8478.patch": "https://issues.apache.org/jira/secure/attachment/12938147/LUCENE-8478.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16602446",
            "author": "Adrien Grand",
            "content": "I'm not sure this is a net win since it requires the addition of a 3rd constructor, which has a bizarre API since you need to pass null as the iterator to use the ImpactsDisi while it would be more natural to expect callers to pass the ImpactsDisi instead, even though I understand why it is not possible here. Maybe we could clarify with comments instead? ",
            "date": "2018-09-03T21:07:51+0000"
        },
        {
            "id": "comment-16604648",
            "author": "Christine Poerschke",
            "content": "... it would be more natural to expect callers to pass the ImpactsDisi instead ...\n\nThe latest patch attempts that. Analytically it seems that the changes should work including but not limited to the\n\n  @Override\n   public DocIdSetIterator iterator() {\n-    return iterator;\n+    return impactsDisi;\n   }\n\n\nchange but upon running the unit tests there are some unexpected failures e.g.\n\n[junit4]    > Throwable #1: java.lang.ClassCastException: org.apache.lucene.search.ImpactsDISI cannot be cast to org.apache.lucene.index.PostingsEnum\n[junit4]    > \tat __randomizedtesting.SeedInfo.seed([208EFB26D8786:AF4778792DAB1D1B]:0)\n[junit4]    > \tat org.apache.lucene.search.SynonymQuery$SynonymScorer.freq(SynonymQuery.java:448)\n[junit4]    > \tat org.apache.lucene.search.SynonymQuery$SynonymScorer.score(SynonymQuery.java:460)\n\n\nso not sure if this is worth pursuing further or not. ",
            "date": "2018-09-05T16:39:09+0000"
        },
        {
            "id": "comment-16605745",
            "author": "Adrien Grand",
            "content": "so not sure if this is worth pursuing further or not.\n\nAnother problem is that one reason why things are the way they are today is to avoid wrapping the postings iterator whenever possible for performance reasons. The latest patch always wraps it with a SlowImpactsEnum + ImpactsDISI. I'm leaning towards keeping things the way they are today. ",
            "date": "2018-09-06T13:08:00+0000"
        },
        {
            "id": "comment-16646787",
            "author": "Christine Poerschke",
            "content": "Thanks Adrien Grand for your input! ",
            "date": "2018-10-11T17:18:05+0000"
        }
    ]
}