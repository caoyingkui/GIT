{
    "id": "SOLR-3439",
    "title": "Make SolrCell easier to use out of the box",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "components": [
            "contrib - Solr Cell (Tika extraction)",
            "(1)",
            "Schema and Analysis"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Currently, SolrCell is configured to map Tika \"content\" (the main body of a document) to the \"text\" field which is the indexed-only (not stored) catch-all for default queries. That searches fine, but doesn't show the document content in the results, sometimes leading users to think that something is wrong. Sure, the user can easily add the field (and this is documented), but it would be a better user experience to have such a basic feature work right out of the box without any config editing and without the need for the user to read the fine print in the documentation.\n\nI propose that we add the \"content\" field to the example schema in the section of fields already defined to support SolrCell metadata.",
    "attachments": {
        "Lincoln-Gettysburg-Address.docx": "https://issues.apache.org/jira/secure/attachment/12525776/Lincoln-Gettysburg-Address.docx",
        "SOLR-3439.patch": "https://issues.apache.org/jira/secure/attachment/12525780/SOLR-3439.patch",
        "filetypes.zip": "https://issues.apache.org/jira/secure/attachment/12537926/filetypes.zip",
        "Lincoln-Gettysburg-Address.pdf": "https://issues.apache.org/jira/secure/attachment/12525777/Lincoln-Gettysburg-Address.pdf"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13269080",
            "date": "2012-05-05T23:02:23+0000",
            "content": "I agree that this makes sense, and will not have any cost.\n\nWe could also make the Velocity GUI smart enough to detect whether the document is a \"product\" document, and output name, manufacturer, price, inStock etc.. OR whether it is a Tika doc or HTML in which case it prints the title, dynamic teaser, document size, document type/MIME etc.\n\nFinally we could add some PDFs to the exampledocs folder!\n\nDo you want to attempt a first patch? "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13269103",
            "date": "2012-05-06T01:59:50+0000",
            "content": "I'll post a preliminary patch tomorrow. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13269235",
            "date": "2012-05-06T15:31:06+0000",
            "content": "Test documents for SolrCell. Both have a bunch of metadata fields defined. The PDF was generated from the Word doc.\n\nWe can consider them for inclusion in exampledocs, but for now they are posted here for reference and anybody wanting to test this issue. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13269238",
            "date": "2012-05-06T15:35:53+0000",
            "content": "I agree with adding a stored content field, but I don't think we should add any more copyFields.\nOne of the biggest \"out of the box\" experience items that people make their decision based on is performance - so we shouldn't make the example schema/config slower. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13269244",
            "date": "2012-05-06T15:54:59+0000",
            "content": "We could have the copyFields default to being commented out, but then the \"content\" would not be searched by default. Or we could not index the \"content\" field, but then it can't be searched by itself.\n\nFor non-SolrCell applications, will copyField of the empty \"content\" field be a significant performance drag?\n\nOr is it only the apps that use SolrCell where there are concerns about the copyField impact?\n\nI agree that performance should be a consideration, but I suspect that these couple of copyFields(I'll post the preliminary patch as soon as the tests finish running) are small potatoes in the overall performance picture. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13269245",
            "date": "2012-05-06T16:00:47+0000",
            "content": "For non-SolrCell applications, will copyField of the empty \"content\" field be a significant performance drag?\n\nNo, but if it's used, it can be a big performance drag (indexing content twice).  I'm not sure how important it is to be searched by \"default\"... i.e. with edismax, someone would just need to add \"content\" to the qf parameter. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13269247",
            "date": "2012-05-06T16:10:23+0000",
            "content": "Right, so if it is the double indexing that is a serious concern, maybe having \"content\" stored but not indexed is a reasonable compromise. It would be searchable due to the CopyField but not double-indexed. This would still give a reasonablly friendly out of the box experience (default search works and content is returned), and obviously they can hand-tune for more specific control.\n\nBut if \"content\" is stored but not indexed, the user can't simply add \"content\" to \"qf\" - they need to make it indexed, which is what my preliminary patch does. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13269248",
            "date": "2012-05-06T16:12:41+0000",
            "content": "Preliminary patch. \"content\" is both stored and indexed, with multiple copy fields. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13269305",
            "date": "2012-05-06T23:06:44+0000",
            "content": "Really, the copyField thing in todays example schema is an anti pattern since we teach people to duplicate all their content while most people would be better off using DisMax. I have had several customers who build their whole search on the model from example schema and then get into performance problems due to the 2x index increase.\n\nHow would you feel if we instead get rid of all the copyFields and configure the default handler with &defType=edismax&qf=name,features,manu,content.... Then we can leave a copyField section commented out in the schema with an explanation of what use cases it is good for. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13269326",
            "date": "2012-05-07T02:20:03+0000",
            "content": "The concept of copyField is implicitly a judgment that a query of the merged fields is significantly better than the dismax query of the separate fields. But, is that really the case?\n\nAnd it is common to boost various document components differently, such as the title.\n\nThat said, I am a little reluctant to change the overall pattern/approach simply to add one field. Maybe the pattern change should be a separate issue. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13269485",
            "date": "2012-05-07T10:03:45+0000",
            "content": "That said, I am a little reluctant to change the overall pattern/approach simply to add one field. Maybe the pattern change should be a separate issue.\nSOLR-3442 "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13269803",
            "date": "2012-05-07T17:38:16+0000",
            "content": "Based on the discussion here and on SOLR-3442, I would offer two alternative proposals:\n\n1. If SOLR-3442 is implemented (default user query parser in example becomes edismax), add the \"content\" field as stored and indexed, add \"content\" to the edismax \"qf\", but don't add the copyField(s).\n\n2. If SOLR-3442 is NOT implemented, add the \"content\" field as stored but NOT indexed, and add the copyField (\"content\" to \"text\"). Regardless of query parser, this will assure that \"content\" is both searchable and returnable, but without \"double indexing\".\n\nI'll wait a bit to see how SOLR-3442 evolves. But if it doesn't look likely in a reasonable timeframe, I'll revise my patch for alternative #2 which provides the desired functionality with minimal impact.\n\nBut for now, I'll assume that SOLR-3442 is the more likely and preferable approach.\n\n "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13285112",
            "date": "2012-05-29T20:52:39+0000",
            "content": "Thinking about the overall intent of example, including raw performance, and the issues of trying to make it one-size-fits-all, I've semi-convinced convinced myself to semi-withdraw this proposal. I still think it's a good idea, but it does have drawbacks that make it less appealing than I first thought. So, unless more voices cry out for it, I'll abandon it.\n\nI might offer up a revised proposal to add a commented out field definition in example to indicate what is needed to make example fully functional for SolrCell. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412199",
            "date": "2012-07-11T22:26:18+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13414816",
            "date": "2012-07-16T00:39:29+0000",
            "content": "I propose we do not wait for SOLR-3442 but use the solution from the proposed patch. It hugely improves the ootb experience for indexing ordinary full-text documents, and it is non-disruptive to the \"products\" example. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13420375",
            "date": "2012-07-23T00:26:05+0000",
            "content": "New patch with these improvements:\n\n\n\tThe new \"content\" field is now indexed=\"false\", for performance reasons - you can always search using \"text\"\n\tIncluded changes to /browse RH:\n\t\n\t\tAdded the SolrCell fields to qf\n\t\tAdded facets for author and content_type\n\t\tTurned on highlighting for \"content\"\n\t\n\t\n\tChanges to Velocity templates\n\t\n\t\tDetects whether result doc is product, product-join doc or rich-text doc\n\t\tThe richtext display shows the \"title\" instead of \"name\", with fallback to ID if title is missing\n\t\tWe display a nice little icon for PDF, DOC, PPT, XLS\n\t\tFor rich-text, we display highlighted content field, with HTML-encoded fallback if not hits\n\t\tFixed #field() macro to display all snippets of highlighting and to HTML-encode fallback result\n\t\tHide facets for which there are no results\n\t\n\t\n\n\n\nI have tested with a mix of office docs and the other example docs and it looks nice here. Please test it.\n\nTodo:\n\n\tIt would be natural to display file name for SolrCell docs - where should we pick it from?\n\tShould fix SOLR-2730 to avoid HTMLencoding hack in template\n\tShould download the filetype graphics locally instead of linking to github..\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13420381",
            "date": "2012-07-23T01:17:09+0000",
            "content": "New patch with hl.encoder=html which fixes the html encoding of fallback field "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13420384",
            "date": "2012-07-23T01:29:03+0000",
            "content": "I haven't actually tried the new patch (and may not be able to until next weekend), but looking at the patch itself, overall it looks like it is headed in the right direction. A couple of quick comments:\n\n1. Any reason to limit it to 5.0 and not backport to 4.0?\n2. I beat my head against the wall hoping to get the file name automatically, but if you stream a file via curl or something similar that info is not passed along. The one hope I hold out is that maybe we should modify the post tool to recognize that the file type is not \".xml\" and then send rich documents to SolrCell with an explicit literal to initialize the \"filename\" field - which itself needs to be added.\n3. Feel free to give yourself equal attribution since you have done so much additional work.\n4. It would be nice to include my sample Word and PDF documents, or other equivalent sample rich documents to include in the exampledocs directory since we don't have any readily accessible rich documents (a couple may be \"hidden\" elsewhere.)\n5. I'll volunteer to do at least some of the wiki update once the patch is committed (or there is at least agreement to commit it.) "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13420692",
            "date": "2012-07-23T14:56:49+0000",
            "content": "1. Any reason to limit it to 5.0 and not backport to 4.0?\n\nIt is already marked with 4.0 and 5.0\n\nThe one hope I hold out is that maybe we should modify the post tool to recognize that the file type is not \".xml\" and then send rich documents to SolrCell with an explicit literal to initialize the \"filename\" field - which itself needs to be added.\n\nI have a new patch using the result from resource.name which is the official way to send file name to ERH. It propagates out as Tika metadata resourceName, which is then lowercased to field resourcename.\n\nIt would be nice to include my sample Word and PDF documents, or other equivalent sample rich documents\n\nAgree. There should be an exampledocs folder with rich docs. Or that we simply describe in the tutorial how to index Solr's documentation as PDFs and JavaDocs from HTML. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13420698",
            "date": "2012-07-23T15:04:26+0000",
            "content": "New patch:\n\n\n\tUses filename from resource.name -> new field \"resourcename\", with copyField to \"text\" and included in qf\n\tHandles HTML escaping of toggle all fields\n\tShow file type icon before title, first detected from filename, then from contenttype\n\tDo not show author, content_type, resourcename if empty\n\tRefactored the \"toggle explain/allFields\" section into own file\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13421901",
            "date": "2012-07-25T00:41:39+0000",
            "content": "Cosmetic fixes to icons for docx and pptx, as well as file:/// prefix for solrcell files\n\nThink this is getting ready for committing? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13421905",
            "date": "2012-07-25T00:51:41+0000",
            "content": "Anyone have a problem with sourcing the file-type icons over the internet via http?\n\nBest would be to include in \"webapp/img/fileicons\", but I'm not sure we're allowed to distribute them since they are under the AGPL: https://github.com/teambox/Free-file-icons "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13422189",
            "date": "2012-07-25T12:20:31+0000",
            "content": "Anyone have a problem with sourcing the file-type icons over the internet via http?\n\nYes.  We shouldn't be pulling in things remotely for the UI.  Very often this stuff is used behind firewalls or offline.\n\nI haven't applied this patch to see what these icons are exactly, but surely there are freely available ones we can use. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13422731",
            "date": "2012-07-25T23:42:24+0000",
            "content": "Found another file icon set in the public domain which I've included in /solr/img/filetypes. They are smaller and nicer (only 721 kb alltogether), see http://www.splitbrain.org/projects/file_icons\n\nAny other comments before commit? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13422736",
            "date": "2012-07-25T23:48:07+0000",
            "content": "If you want to apply the patch with the beautiful icons  then unzip filetypes.zip in your root and it will place the imgs in ./solr/webapp/web/img/filetypes/ "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13428512",
            "date": "2012-08-04T00:59:07+0000",
            "content": "Updated patch\n\n\tAdds a \"url\" field to schema intended for HTML/web docs. Displayed in result if found\n\tIf \"url\" field is filled, it is used as href on the title link, else fallback to file:///resourcename or to plain \"id\"\n\tDetects file type from content_type field with fallback to filename suffix\n\n\n\nWill commit shortly "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13428683",
            "date": "2012-08-04T21:46:05+0000",
            "content": "Committed r1369433 to trunk and r1369478 to branch_4x "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13428685",
            "date": "2012-08-04T21:56:35+0000",
            "content": "Any suggestions for what we should tell people to index to test SolrCell? I think the most fun is indexing my own docs folders  I was thinking instead of bundling some synthetic docs in exampledocs, we could use a dump of the web site/wiki, javadocs or some other real docs? "
        }
    ]
}