{
    "id": "SOLR-8807",
    "title": "NPE during spell checking when result collapsing is activated and index got more than one segment.",
    "details": {
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "5.4",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Critical"
    },
    "description": "When using spellchecker with collapse/expand results, I got an NPE. Only happend when the index consists of more than one segment. \n\n11:30:33,505 WARN  [org.apache.solr.spelling.SpellCheckCollator] (http-/0.0.0.0:8080-2) Exception trying to re-query to check if a spell check possibility would return any hits.: java.lang.NullPointerException\n        at org.apache.solr.search.CollapsingQParserPlugin$OrdScoreCollector.finish(CollapsingQParserPlugin.java:631) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.search.CollapsingQParserPlugin$OrdScoreCollector.finish(CollapsingQParserPlugin.java:681) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.search.SolrIndexSearcher.buildAndRunCollectorChain(SolrIndexSearcher.java:213) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.search.SolrIndexSearcher.getDocListNC(SolrIndexSearcher.java:1672) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1491) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:557) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:525) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.spelling.SpellCheckCollator.collate(SpellCheckCollator.java:147) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.handler.component.SpellCheckComponent.addCollationsToResponse(SpellCheckComponent.java:238) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.handler.component.SpellCheckComponent.process(SpellCheckComponent.java:203) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:281) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:156) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:2073) [solr-core-5.4.0.jar:5.4.0 1718046 - upayavira - 2015-12-04 23:16:46]\n\n\n\n\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n\t<arr name=\"last-components\">\n\t  <str>spellchecker</str>\n\t</arr>    \n    </requestHandler>\n\n\n\nThe query parameters are:\n\n      \"spellcheck.maxCollations\": \"5\",\n      \"q.op\": \"AND\",\n      \"fq\": \"{!collapse field=type}\",\n      \"spellcheck.maxCollationTries\": \"10\",\n      \"spellcheck.collateMaxCollectDocs\": \"100000\",\n      \"spellcheck.alternativeTermCount\": \"10\",\n      \"spellcheck.extendedResults\": \"true\",\n      \"spellcheck.dictionary\": [\n        \"dest_wordbreak\",\n        \"dest_fuzzy\"\n      ],\n      \"q\": \"kosamui thailand\",\n      \"defType\": \"edismax\",\n      \"expand\": \"true\",\n      \"spellcheck.maxResultsForSuggest\": \"3\",\n      \"qf\": \"country_name region_name\",\n      \"spellcheck\": \"true\",\n      \"spellcheck.accuracy\": \"0.5\",\n      \"spellcheck.count\": \"20\",\n      \"spellcheck.collate\": \"true\",",
    "attachments": {
        "SOLR-8807.patch": "https://issues.apache.org/jira/secure/attachment/12859812/SOLR-8807.patch",
        "SOLR-8806-failing-unit-test.patch": "https://issues.apache.org/jira/secure/attachment/12862488/SOLR-8806-failing-unit-test.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-09T22:04:17+0000",
            "author": "Joel Bernstein",
            "content": "Are you sure this is related to the spellchecker? Does the collapse query work if the spellchecker is turned off? ",
            "id": "comment-15188139"
        },
        {
            "date": "2016-03-09T22:22:45+0000",
            "author": "Joel Bernstein",
            "content": "Wondering if the spellchecker is enabling the early termination collector. It appears that not all the segments are being visited in the search that is being executed. I'll dig into the spellchecker and see what I can find. ",
            "id": "comment-15188192"
        },
        {
            "date": "2016-03-09T22:29:10+0000",
            "author": "Joel Bernstein",
            "content": "Just found this line in the SpellcheckCollator:\n\n\n checkResponse.setFieldFlags(f |= SolrIndexSearcher.TERMINATE_EARLY);            \n\n\n\nThis is problematic for the CollapsingQParserPlugin because not all segments will get visited during the search. Right now the CollapsingQParserPlugin relies on all segments getting visited or you get the NPE that is happening in this ticket. There probably is a way to deal with this but it's going to take some looking into. ",
            "id": "comment-15188212"
        },
        {
            "date": "2016-03-09T22:36:26+0000",
            "author": "Joel Bernstein",
            "content": "If you stop setting spellcheck.collateMaxCollectDocs it should turn off the early termination. Not sure if this will kill your performance, but it should make the NPE go away. ",
            "id": "comment-15188230"
        },
        {
            "date": "2016-06-03T14:23:46+0000",
            "author": "Markus Jelsma",
            "content": "FYI, for some reason the NPE disappeared after a collection optimize. I cannot reproduce it like i did a few minutes ago just before the optimize. ",
            "id": "comment-15314180"
        },
        {
            "date": "2016-06-03T14:39:10+0000",
            "author": "Markus Jelsma",
            "content": "Ah, to verify, i reindexed documents over the existing collection to force maxDoc > numDoc and the NPE appeared again. After an optimize, the NPE disappeared again. ",
            "id": "comment-15314202"
        },
        {
            "date": "2017-03-21T23:10:41+0000",
            "author": "Matthias Krueger",
            "content": "My client is affected by this NPE, too. Some oddities of the SpellCheckCollator seem to misalign with behaviour of the CollapsingQParserPlugin's collectors.\n\n\tThe checkResponse ResponseBuilder in SpellCheckCollator#collate is being built using the original params (including the fq={!collapse\u2026} param) and the original filters.\n\tThe checkResponse ends up having the CollapsingQParserPlugin$CollapsingPostFilter twice in the filters list.\n\tThey will end up in a DelegatingCollector chain CollapsingQParserPlugin$OrdScoreCollector -> CollapsingQParserPlugin$OrdScoreCollector.\n\tUnfortunately, this does not work well when there are documents returned from less than all segments. The two OrdScoreCollectors are instantiated with the number of segments and open an empty array of LeafReaderContexts but their values are only populated for the first OrdScoreCollector in IndexSearcher#search (via Collector#getLeafCollector -> OrdScoreCollector#doSetNextReader) calls.\n\tOrdScoreCollector (and the other collectors in CollapsingQParserPlugin) only passes the LeafReaderContexts to the delegate within finish() (not within #doSetNextReader) but stops when it deems all necessary segments consumed. When the delegate itself then performs the iteration it will NPE in\n\nnextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n\n\n\n ",
            "id": "comment-15935514"
        },
        {
            "date": "2017-03-21T23:13:22+0000",
            "author": "Matthias Krueger",
            "content": "This seems to be very much related to SOLR-9104, SOLR-10336, and SOLR-7435 or even the same cause. ",
            "id": "comment-15935520"
        },
        {
            "date": "2017-03-21T23:20:14+0000",
            "author": "Matthias Krueger",
            "content": "A simple solution would be to have CollapsingQParserPlugin behave like other DelegatingCollectors and call\n\nsuper.doSetNextReader(context); \n\n\nin doSetNextReader. Not sure if omission was intentional though. This at least avoids the NPE we're seeing. ",
            "id": "comment-15935530"
        },
        {
            "date": "2017-04-06T16:37:25+0000",
            "author": "James Dyer",
            "content": "While this won't address the other cases where the Collapsing Post-Filter can throw an NPE, we should probably just omit the post-filter when testing collation candidates.  As with Result Grouping, SpellCheckCollator can execute the query without the post-filter and then report the # of un-grouped results the collation returns.  (or, in this specific case, an estimated un-grouped hit-count) We also don't want to be doing anything unnecessary as we want to test the collations for hits in a way that does as little work as possible, so omitting the post-filter seems to be the best approach all around. ",
            "id": "comment-15959244"
        },
        {
            "date": "2017-04-07T14:36:19+0000",
            "author": "James Dyer",
            "content": "This patch SOLR-8806-failing-unit-test.patch contains a unit test that fails with most seeds.  It fails with...\n\n\njava.lang.NullPointerException\n\tat org.apache.solr.search.CollapsingQParserPlugin$IntScoreCollector.finish(CollapsingQParserPlugin.java:870)\n\n\n\n...reproducing this issue's problem. ",
            "id": "comment-15960886"
        },
        {
            "date": "2017-04-07T14:50:19+0000",
            "author": "James Dyer",
            "content": "With this patch, SOLR-8807.patch , the new test passes.  When checking candidate queries for hit-counts, SpellCheckCollator removes the collapse post-filter and the \"expand\" parameter from the query.\n\nIf there are no objections to this approach, I will commit this in a few days. ",
            "id": "comment-15960910"
        },
        {
            "date": "2017-04-07T15:16:49+0000",
            "author": "Matthias Krueger",
            "content": "Thanks, James Dyer, looks good to me. This won't help the linked CollapsingQParser issues (which all seem to have the same root cause) but will solve the SpellCheckCollator's problem. ",
            "id": "comment-15960948"
        },
        {
            "date": "2017-04-10T13:40:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 55e36615eb4e84abbb674e52eaae0954b47e5b11 in lucene-solr's branch refs/heads/master from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=55e3661 ]\n\nSOLR-8807: disable the CollapseQParser Plugin when testing spellcheck collations for hit-counts ",
            "id": "comment-15962871"
        },
        {
            "date": "2017-04-10T14:25:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d2092f7c55014c5366c3c5a021550c1f91c7e80b in lucene-solr's branch refs/heads/branch_6x from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d2092f7 ]\n\nSOLR-8807: disable the CollapseQParser Plugin when testing spellcheck collations for hit-counts ",
            "id": "comment-15962944"
        },
        {
            "date": "2017-04-10T14:27:08+0000",
            "author": "James Dyer",
            "content": "Thank you Christian for reporting this bug. ",
            "id": "comment-15962949"
        }
    ]
}