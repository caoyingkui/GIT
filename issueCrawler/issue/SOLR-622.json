{
    "id": "SOLR-622",
    "title": "SpellCheckComponent should build or load indices on startup and commits",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "spellchecker"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "SpellCheckComponent must be able to build/load spell check index on startup and commits. With SOLR-605, SpellCheckComponent can register an event listener for firstSearcher and newSearcher events and rebuild/reload indices as appropriate.\n\n\n\tIf index uses a FSDirectory and exists on disk then just reload it or else build it on firstSearcher event.\n\tIf index is built from a Solr field then re-build it on newSearcher event.\n\n\n\nThis will help avoid having to add QuerySenderListener in configuration and will not force people to issue build on first query.\n\nAll this should be configurable so that people who don't want to rebuild on commits should be able to turn this feature off per configured spell checker.",
    "attachments": {
        "SOLR-622.patch": "https://issues.apache.org/jira/secure/attachment/12386958/SOLR-622.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12616237",
            "date": "2008-07-23T19:45:40+0000",
            "content": "Reloading existing index on firstSearcher cannot work without SOLR-648 "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12616239",
            "date": "2008-07-23T19:49:59+0000",
            "content": "I suppose if a reload on firstSearcher fails due to some reason (missing/corrupted index), we should try to build it, right? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12616250",
            "date": "2008-07-23T20:32:05+0000",
            "content": "Hmm. The reload OR build logic cannot work correctly with firstSearcher. We cannot rely on the spellCheckIndexDir existing on disk to be a sure sign that only a reload is necessary. It may just be an empty directory/index. In fact the AbstractLuceneSpellChecker creates a FSDirectory on init which means that doing a simple reload may not be enough on startup.\n\nI think we should always call reload on firstSearcher for all spell checkers and (only for Solr based spell checkers) call build on newSearcher event. The only case where this will be a problem is where an index exists, Solr is stopped, spell checker config is added/enabled and Solr is restarted. Now a reload is done but we do not have any data in the spell check index. If a commit is done or build is called manually, things will take care of themselves. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12616251",
            "date": "2008-07-23T20:34:28+0000",
            "content": "Issue description edited to add note on enabling/disabling this feature per spell checker through configuration. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12617190",
            "date": "2008-07-26T15:22:00+0000",
            "content": "Adds a firstSearcher and postCommit event listener using API calls. The firstSearcher listener is added for all spell checkers so that reload is called on startup but the postCommit call back is only added if the spellchecker specifies the following in it's configuration:\n\n<str name=\"buildOnCommit\">true</str>\n\n\n\nAdds tests for the same. However, they fail currently. See http://www.nabble.com/Question-on-newSearcher-and-commit-callbacks-tp18667573p18667573.html for details. If the second commit call in the tests is uncommented then the tests pass. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12618642",
            "date": "2008-07-31T10:55:59+0000",
            "content": "This patch uses separate firstSearcher and newSearcher event listeners for each spell checker. All tests pass. I'll commit this shortly.\n\nWe should still try to figure out why the searcher obtained in a postCommit listener does not get access to the latest searcher. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12618787",
            "date": "2008-07-31T18:16:00+0000",
            "content": "We should still try to figure out why the searcher obtained in a postCommit listener does not get access to the latest searcher.\n\nI think the callback happens before the new searcher is opened.\nI think postCommit is also synchronous with the commit process - you don't want to rebuild your spell checking index here because it would freeze out any updates until it's done.\n\nWe have warming mechanism that works for stuff like this... perhaps that is what should be used rather than postCommit callbacks? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12618811",
            "date": "2008-07-31T19:02:33+0000",
            "content": "I think the callback happens before the new searcher is opened.\nYes, the searcher is being created after informing the listeners. IMO, that seems a bit counter-intuitive. The commit has happened so I would expect to see the new data.\n\nWe have warming mechanism that works for stuff like this... perhaps that is what should be used rather than postCommit callbacks?\nSo the way used in the latest patch using a newSearcher event should be fine, right? It is done in a separate thread through ExecutorService in SolrCore.\n\nNot relevant to this issue but the newSearcher method is always called with a null currentSearcher, why is that? I mentioned it at http://www.nabble.com/Question-on-newSearcher-and-commit-callbacks-tp18667573p18667573.html\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12618822",
            "date": "2008-07-31T19:25:29+0000",
            "content": "Yes, the searcher is being created after informing the listeners. IMO, that seems a bit counter-intuitive. The commit has happened so I would expect to see the new data.\n\nThat particular callback was made for index distribution.  It needed to be synchronous with the commit process, not allowing anything else to proceed until finished to ensure a clean snapshot.  The trigger is closing of the IndexWriter, not opening of a new IndexSearcher.\n\nWe could create new callbacks, but I'm not sure I would want to do that for 1.3\n\nSo the way used in the latest patch using a newSearcher event should be fine, right? It is done in a separate thread through ExecutorService in SolrCore.\n\nI haven't looked at the patch, but this sounds potentially dangerous if you are using the searcher passed to you (async closes, etc).  I've added a comment to the code about this. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12618828",
            "date": "2008-07-31T19:39:11+0000",
            "content": "I haven't looked at the patch, but this sounds potentially dangerous if you are using the searcher passed to you (async closes, etc). I've added a comment to the code about this.\n\nThe spell checker build is synchronous and completed inside the newSearcher call and the reference to searcher is not kept anywhere, we should be fine. In addition, I'll a note to the SolrSpellChecker#build method javadocs that no references to the searcher should be kept by implementations.\n\nActually a reference to searcher is kept in the dictionary but the dictionary is used immediately and created everytime in the build method. We can get rid of it easily. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12618829",
            "date": "2008-07-31T19:40:49+0000",
            "content": "It is done in a separate thread through ExecutorService in SolrCore.\n\nI may have mis-understood this part... I though you were using your own ExecutorService.\nSo yes, using newSearcher and firstSearcher events should be fine.  They will be synchronous though (block all other progress on warming and registering the new server).  That may or may not be what you want. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12618834",
            "date": "2008-07-31T19:54:31+0000",
            "content": "Functionally, this patch aspires to eliminate the need to modify solrconfig.xml to add a reload call to firstSearcher and build call to newSearcher using the QuerySenderListener.\n\nThey will be synchronous though (block all other progress on warming and registering the new server). That may or may not be what you want.\nUntil we can add a scheduler into Solr in the future (which is something a lot of components like replication and DataImportHandler may need), I really don't see any other way for now.  "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12618936",
            "date": "2008-08-01T05:39:41+0000",
            "content": "The last patch had some extra code which I was using for testing. This one removes all of those.\n\nI'll commit this shortly. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12618937",
            "date": "2008-08-01T05:50:32+0000",
            "content": "The last patch was generated incorrectly. Uploading new one.\n\nWe are introducing a configuration parameter for spell checker with this issue\n\n<str name=\"buildOnCommit\">true</str>\n\n\nNow there is no need to check if a spell checker is built from Solr field or not. If the configuration param is present, we can blindly build it on newSearcher event. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12618939",
            "date": "2008-08-01T06:12:13+0000",
            "content": "Committed revision 681604. "
        }
    ]
}