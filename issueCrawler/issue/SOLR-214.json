{
    "id": "SOLR-214",
    "title": "deficit of InputStreamReader support in anonymous class of ContentStream",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "After SOLR-197 is applied, POSTed Japanese XML contents turn into garbled characters in the index.\nI can see the garbled characters through Luke. The issue was never seen before SOLR-197.\nThe cause of this problem is that the deficit of InputStreamReader support in the anonymous class of ContentStream in SolrRequestParsers.parseParamsAndFillStreams() method.\n\nBefore SOLR-197, InputStreamReader was used in XmlUpdateRequestHandler.handleRequestBody() method:\n\n    // Cycle through each stream\n    for( ContentStream stream : req.getContentStreams() ) {\n      String charset = getCharsetFromContentType( stream.getContentType() );\n      Reader reader = null;\n      if( charset == null ) \n{\n        reader = new InputStreamReader( stream.getStream() );\n      }\n      else \n{\n        reader = new InputStreamReader( stream.getStream(), charset );\n      }\n      rsp.add( \"update\", this.update( reader ) );\n\n      // Make sure its closed\n      try \n{ reader.close(); }\n catch( Exception ex ){}\n    }\n\nThe patch will apply this effect to SolrRequestParsers.\n\nregards,",
    "attachments": {
        "UseInputStreamReader.patch": "https://issues.apache.org/jira/secure/attachment/12356231/UseInputStreamReader.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12491620",
            "date": "2007-04-25T12:15:49+0000",
            "content": "The patch attached. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12491711",
            "date": "2007-04-25T17:32:42+0000",
            "content": "Weird - the javadocs a pretty explicit that request.getReader() should  take care of the character encoding:\nhttp://java.sun.com/javaee/5/docs/api/javax/servlet/ServletRequest.html#getReader()\n\nWhat app server are you running?\n\nDoes this happen when you are using the /update from servlet?  (when /update is not mapped in solrconfig.xml)\n\nSolrUpdateServlet.java has always  used getReader() . "
        },
        {
            "author": "Ken Krugler",
            "id": "comment-12491746",
            "date": "2007-04-25T19:55:29+0000",
            "content": "There's some complex interplay of the content-type in the request, the charset (if any) in the request, and the container being used. So some interesting questions are:\n\n\n\texactly how the content is being posted (e.g. via the example script?)\n\twhat request header values are being sent along with the post.\n\twhat servlet container (and version) is being used.\n\n "
        },
        {
            "author": "Toru Matsuzawa",
            "id": "comment-12491926",
            "date": "2007-04-26T09:16:08+0000",
            "content": "This problem can be confirmed with tomcat 5.5.23.\n\nThis problem had occurred by \"/update\" before the correction of SOLR-197.\nstream.getReader() is acquired by org.apache.catalina.connector.CoyoteReader. \n\nCoyoteReader use org.apache.catalina.connector.InputBuffer#realReadBytes().\nrealReadBytes() is read with byte order.\nTherefore, garbled characters in the index. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12491938",
            "date": "2007-04-26T09:49:02+0000",
            "content": "> Weird - the javadocs a pretty explicit that request.getReader() should take care of the character encoding:\n> http://java.sun.com/javaee/5/docs/api/javax/servlet/ServletRequest.html#getReader()\n\nGood point. I simply thought the cause of this problem was the deficit of InputStreamReader support at SOLR-197.\nBut according to the javadoc, the servlet container should take care of encoding. We are using Tomcat 5.5.23. We should check out the servlet container. Thanks. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12491941",
            "date": "2007-04-26T09:53:00+0000",
            "content": "Close as invalid. The servlet container should take care of character encoding. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12494088",
            "date": "2007-05-07T17:28:11+0000",
            "content": "Without this patch, resin balks at utf-8 input\n\nhttp://www.nabble.com/UTF-8-problem-with-Resin-tf3704271.html\n\nIf resin and tomcat don't handle \"getReader()\" correctly, maybe we should handle it explicitly\n\n "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12494151",
            "date": "2007-05-07T22:54:36+0000",
            "content": "At this moment, to avoid this problem, we are examining to put a servlet filter to work.\nBut if Solr handles character encoding explicitly, we will be happy with it. We are using Tomcat 5.5.23. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12494158",
            "date": "2007-05-07T23:36:36+0000",
            "content": "added in rev 536019 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589315",
            "date": "2008-04-15T23:44:45+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.2\n\n\n\nThe Fix Version for all 39 issues found was set to 1.2, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman2 "
        }
    ]
}