{
    "id": "SOLR-12127",
    "title": "Using atomic updates to remove docValues type dynamic field does not work",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "update"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.6.2,                                            7.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I have\u00a0defined a dynamic field which is stored=false, indexed=false and docValues=true. Attempting to set this field's value to null via atomic update does not remove the field from the document. However, the document's version is updated.\u00a0Using atomic updates to set a value for the field does work. Tested on 6.6.2 and 7.2.1.\u00a0\n\nAn\u00a0example of a non-working update query:\n\n<update>\n    <add>\n        <doc>\n            <field name=\"id\">372335</field>\n            <field name=\"removed_field_262884_i_dv\" update=\"set\" null=\"true\"/>\n        </doc>\n    </add>\n</update>\n\n\n\u00a0\n\nAn example of a working update query:\n\n<update>\n    <add>\n        <doc>\n            <field name=\"id\">372335</field>\n            <field name=\"removed_field_262884_i_dv\" update=\"set\">1521472499</field>\n        </doc>\n    </add>\n</update>",
    "attachments": {
        "SOLR-12127.patch": "https://issues.apache.org/jira/secure/attachment/12938659/SOLR-12127.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-09-05T09:33:35+0000",
            "content": "Oliver Kuldm\u00e4e\nI think, this the expected behavior. \nAs per the description, the field which needs to be updated is indexed=false, stored=false and docvalues=true. \nAlso, Looking at the field name and value, this field is a numeric field. (Also, assuming it is single-valued)\n\nOn every atomic update request, Solr tries to intelligently decide if the update in in-place update or not.\nThe update you have shared qualifies for in-place update. As per Solr's documentation, in-place update supports set operation, Where you can set or replace value.\nsetting value to null is essentially is removing the field which is not allowed in in-place updates.\n\nTo treat this as atomic update replace set null with remove operation\nAlso, this behavior is same for normal fields ",
            "author": "Munendra S N",
            "id": "comment-16604185"
        },
        {
            "date": "2018-09-06T15:16:03+0000",
            "content": "Oliver Kuldm\u00e4e\nI did little debugging to check how Solr decides if it is atomic or inplace update. In inplace updates, only set and inc operations are allowed. A check can be added here,  if the operation is set and value is null or empty list, treat the update as atomic update, which would solve the issue SOLR-12127.patch \nI have attached the first draft (it doesn't include tests) ",
            "author": "Munendra S N",
            "id": "comment-16605908"
        },
        {
            "date": "2018-09-08T10:32:29+0000",
            "content": " SOLR-12127.patch \nAttached patch has tests included for both standalone and distributed.  Tests have been added in InPlaceUpdate test class even though with this change, set null would always be considered as atomic update (Didn't find better place  to add this)\nThis would also fix SOLR-12128 ",
            "author": "Munendra S N",
            "id": "comment-16608007"
        }
    ]
}