{
    "id": "SOLR-12953",
    "title": "Support for TLS/SSL key alias configuration",
    "details": {
        "type": "Improvement",
        "status": "Patch Available",
        "labels": "",
        "fix_versions": [
            "7.5.1",
            "7.6"
        ],
        "components": [],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "7.5"
    },
    "description": "As discussed on the mailing list:\n\nContext:\nThere's a jetty-ssl.xml config file which configures Jetty's SslContextFactory using properties set in solr.in.sh, but it's incomplete for some purposes.\n\nProblem:\nI've noticed that no \"certAlias\" property is present. This means that when Jetty starts, it will pick an arbitrary (based on some internal order, apparently the newest?) key from the keystore to use. This is fine when you're only using your keystore for Solr and it only contains one key, but it makes life a lot more complicated in environments where keystores are managed and distributed to servers automagically.\n\nWhen you add a key to the keystore, you can assign an alias. Jetty can then use the key with that alias by means of its certAlias config property.\n\nThe Solr documentation [1] confusingly assigns the alias \"solr-ssl\" to the key, but as far as I can tell this alias isn't actually used or referenced anywhere else. \n\nSolution:\nI'm currently dealing with a slightly more complicated TLS setup, so I'm attaching a patch which adds an extra config property in order to (optionally) specify the key alias. When the option is omitted, the old behaviour remains unchanged. Patch modifies the configuration and includes updates to the enabling-ssl documentation.",
    "attachments": {
        "SOLR-12953.patch": "https://issues.apache.org/jira/secure/attachment/12946550/SOLR-12953.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16671672",
            "content": "Attaching a patch for branch_7_5 (as this is the version I'm using and testing), but I see no reason why this wouldn't work just as well on newer branches. ",
            "author": "Bram Van Dam",
            "date": "2018-11-01T14:23:14+0000"
        },
        {
            "id": "comment-16673529",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  Release audit (RAT)  \n   0m  6s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m  6s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   0m  6s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n  \n   \n   1m 58s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12953 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12946651/SOLR-12953.patch \n\n\n Optional Tests \n  validatesourcepatterns  ratsources  validaterefguide  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 31d7dfe \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n modules \n C: solr solr/server solr/solr-ref-guide U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/216/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "date": "2018-11-02T18:40:47+0000"
        }
    ]
}