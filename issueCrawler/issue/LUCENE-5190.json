{
    "id": "LUCENE-5190",
    "title": "Consistent failure of TestCheckIndex.testLuceneConstantVersion in jenkins trunk clover build",
    "details": {
        "components": [],
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I'm out of the loop on how clover is run, and how the build system sets up th version params, but looking at the coverage reports i noticed that the trunk clover build seems to have been failing consistently for a while \u2013 some sporadic test failures, but one consistent failure smells like it has to do with a build configuration problem...\n\n\njava.lang.AssertionError: Invalid version: 5.0-2013-08-11_15-22-48\n\tat __randomizedtesting.SeedInfo.seed([648EC34D8642C547:A7103483A05D2588]:0)\n\tat org.junit.Assert.fail(Assert.java:93)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.apache.lucene.index.TestCheckIndex.__CLR3_1_10l79zdz2ior(TestCheckIndex.java:132)\n\tat org.apache.lucene.index.TestCheckIndex.testLuceneConstantVersion(TestCheckIndex.java:118)",
    "attachments": {
        "LUCENE-5190.patch": "https://issues.apache.org/jira/secure/attachment/12600440/LUCENE-5190.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-08-28T18:58:40+0000",
            "content": "This should fix the bug. This only affects clover builds because the following:\n\n\tThe hourly Jenkins builds don't change the version string, because artifacts are not archived, Javadocs are also not archived (its just heavy testing)\n\tThe nightly Artifact builds change the version to contain the Jenkins Build Timestamp/Build Number. But when building nightly artifacts we don't run tests, so this is not triggered\n\tThe Clover builds run tests, but they have to change the build number like the nightly artifact builds, because the version number is part of the archived artifacts (in that case the Clover HTML pages). So those should contain (like Javadocs) a build number.\n\n\n\nWe should change this to not only allow \"-SNAPSHOT\", but instead allow any version that is equal to expected build version or has anything starting with \"-\" appended.\n\nThis would allow others also to build and run artifacts with customized versions, like \"Lucene 4.5.0-dfsg-ubuntu1\" (for the Debian guys among us).\n\nThe patch changes the assert to allow this. ",
            "author": "Uwe Schindler",
            "id": "comment-13752733"
        },
        {
            "date": "2013-08-28T19:08:58+0000",
            "content": "Uwe Schindler, the assert following the one you changed in that test will also fail, won't it?\n\n\nassertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n\n\n\nConstants.LUCENE_VERSION in trunk will be \"5.0-SNAPSHOT\", and under clover version will be like \"5.0-2013-08-11_15-22-48\".  Maybe strip trailing stuff after \"-\" from version before making this comparison? ",
            "author": "Steve Rowe",
            "id": "comment-13752741"
        },
        {
            "date": "2013-08-28T19:21:17+0000",
            "content": "the assert following the one you changed in that test will also fail, won't it?\n\nI'm wrong: local variable version is set to the value of the lucene.version sysprop set in the common-build.xml macro test-macro, and lucene.version is defined as dev.version, which is never overridden by the -Dversion=... sysprop cmdline override.  \n\nSo this assert will compare Constants.LUCENE_VERSION \"5.0-SNAPSHOT\" to version/lucene.version/dev.version \"5.0-SNAPSHOT\" and succeed. ",
            "author": "Steve Rowe",
            "id": "comment-13752753"
        },
        {
            "date": "2013-08-28T19:51:40+0000",
            "content": "Sorry previous patch does not solve this issue.\n\nThe reason for this failing is, because Jenkins only sets version prefix and the original version is preserved (and $dev.version changed). The patch fixes the first assert, but not the last one.\n\nI think the best fix is to not parse anything after the \"-\" in the version. So all special cases like \"-SNAPSHOT\" can be ignored. ",
            "author": "Uwe Schindler",
            "id": "comment-13752784"
        },
        {
            "date": "2013-08-28T19:58:54+0000",
            "content": "This patch fixes the issue now for all cases.\n\nThis just removes anything after \"-\" from the version string before it compares. This makes some \"appendixes\" added by package maintainer or jenkins disappear before checking. Everything in a version string after the dash is just appendix. ",
            "author": "Uwe Schindler",
            "id": "comment-13752788"
        },
        {
            "date": "2013-08-28T20:15:23+0000",
            "content": "+1 to commit ",
            "author": "Steve Rowe",
            "id": "comment-13752797"
        },
        {
            "date": "2013-08-28T20:20:19+0000",
            "content": "Commit 1518354 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1518354 ]\n\nLUCENE-5190: Fix failure of TestCheckIndex.testLuceneConstantVersion in Jenkins trunk clover build and other builds using -Ddev.version.suffix ",
            "author": "ASF subversion and git services",
            "id": "comment-13752804"
        },
        {
            "date": "2013-08-28T20:22:14+0000",
            "content": "Commit 1518361 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1518361 ]\n\nMerged revision(s) 1518354 from lucene/dev/trunk:\nLUCENE-5190: Fix failure of TestCheckIndex.testLuceneConstantVersion in Jenkins trunk clover build and other builds using -Ddev.version.suffix ",
            "author": "ASF subversion and git services",
            "id": "comment-13752806"
        },
        {
            "date": "2013-08-28T20:24:05+0000",
            "content": "I committed this with just a minor mod: I removed the escaping of \"-\" in the regex.\n\nThanks Hoss & Steve ",
            "author": "Uwe Schindler",
            "id": "comment-13752808"
        },
        {
            "date": "2013-10-05T10:18:45+0000",
            "content": "4.5 release -> bulk close ",
            "author": "Adrien Grand",
            "id": "comment-13787015"
        }
    ]
}