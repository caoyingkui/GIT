{
    "id": "LUCENE-4765",
    "title": "Multi-valued docvalues field",
    "details": {
        "components": [],
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "New Feature",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The general idea is basically the docvalues parallel to FieldCache.getDocTermOrds/UninvertedField\n\nCurrently this stuff is used in e.g. grouping and join for multivalued fields, and in solr for faceting.",
    "attachments": {
        "LUCENE-4765.patch": "https://issues.apache.org/jira/secure/attachment/12568736/LUCENE-4765.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-02-10T07:25:42+0000",
            "content": "Here's a prototype patch just to explore the idea.\n\nI only implemented this for Lucene42Codec (just uses FST + vint-encoded byte[] as a quick hack).\n\nWe should try to think about what would be the best API and so on if we want to add this. ",
            "author": "Robert Muir",
            "id": "comment-13575370"
        },
        {
            "date": "2013-02-10T07:57:26+0000",
            "content": "I briefly looked at the patch, looks good. Perhaps instead of returning an iterator, we should return an IntsRef? While optimizing facets code, Mike and I observed the \"iterator-based API\" is not so good for \"hot code\", and e.g. if we'll want to use this for faceting, a bulk-API would be better I think.\n\nSame question for indexing \u2013 in facets, we get all the ordinals at once, so is it possible to have a field which takes a list of ordinals instead of adding many instances of SortedSetDVField? ",
            "author": "Shai Erera",
            "id": "comment-13575379"
        },
        {
            "date": "2013-02-10T08:02:48+0000",
            "content": "We can consider the IntsRef (i generally try to avoid these *Ref APIs) \n\nAs far as this field for lucene/facets: I don't think it should be used by lucene/facets. That one should continue to use a single-valued byte[] because it separately tracks ordinals in a different structure. ",
            "author": "Robert Muir",
            "id": "comment-13575381"
        },
        {
            "date": "2013-02-10T08:06:05+0000",
            "content": "Oh, you're right, I notice now that it adds strings. Will I be able to use this format by adding a different Field which has all the ordinals as-is? Or is that not the intention of this issue at all? ",
            "author": "Shai Erera",
            "id": "comment-13575386"
        },
        {
            "date": "2013-02-10T08:08:50+0000",
            "content": "Thats not the intention of this issue at all. ",
            "author": "Robert Muir",
            "id": "comment-13575388"
        },
        {
            "date": "2013-02-12T11:27:31+0000",
            "content": "some progress:\n\n\t4.2, assertingcodec, checkindex, etc are working\n\tfieldcache.getDocTermOrds returns SortedSetDocValues (and from IR if you indexed them)\n\tjoin/ and grouping/ are ported over to the new API\n\n\n\nnext step:\n\n\tsimpletext and disk codecs.\n\n ",
            "author": "Robert Muir",
            "id": "comment-13576553"
        },
        {
            "date": "2013-02-16T15:40:55+0000",
            "content": "For the disk codec I did a simple solution of writing the entire ordinal stream as block-packed on disk.\nThe indexes to this stream are loaded into memory (MonotonicBlockPacked). I think this is a pretty good tradeoff\nthat might work reasonably well for this codec: we can always think of alternative encodings. ",
            "author": "Robert Muir",
            "id": "comment-13579804"
        },
        {
            "date": "2013-02-17T01:00:25+0000",
            "content": "Updated patch showing differences between trunk and branch.\n\nI actually think this is ready:\n\n\tits a docvalues field where you can add multiple instances to a document.\n\tthese are dereferenced (like SORTED), except for each document you get a ordered list of ordinals instead of a single one.\n\ttransparent pass-thru to FieldCache.getDocTermOrds: so this \"completes\" dv in that we have index-time equivalent to what FieldCache provides.\n\tif you ask for FieldCache.getDocTermOrds, instead of insanity for a single-valued field indexed by SORTED, you get a bridge API: so e.g. if we wanted we could start with a per-segment facet API for solr that handles both single/multi-valued and specialize only if it increases perf.\n\tall apis cutover, including join/ and grouping/, though while doing this I noticed an opportunity to separately make join/ more efficient (LUCENE-4771)\n\trefactored DocValues default merge to be simpler (also the existing SORTED case), additionally this benefits from the RAM improvements Adrien committed in LUCENE-4780.\n\tLucene42 implementation uses an FST for the ord/term \"dictionary\", and the ordinal list per-doc is essential a BINARY entry (vint+dgap encoded, as this seems to be the most efficient from the tests Shai et al have been doing with lucene/facets).\n\tSimpleText, Disk, Asserting, and CheapBastard codecs.\n\tI added random tests that basically index and delete lots of things and verify the contents against stored fields, and DocTermOrds built in RAM from the indexed contents.\n\n\n\nJust wanted to get the patch up for review for a while. In the meantime I'll continue to make some commits: for example I want to add this type to IndexWriter's diskfull/exception/thread interrupt/etc tests and the usual rounding out of things. ",
            "author": "Robert Muir",
            "id": "comment-13580081"
        },
        {
            "date": "2013-02-18T09:13:03+0000",
            "content": "+1 ",
            "author": "Adrien Grand",
            "id": "comment-13580504"
        },
        {
            "date": "2013-02-21T02:42:34+0000",
            "content": "[branch_4x commit] Robert Muir\nhttp://svn.apache.org/viewvc?view=revision&revision=1448085\n\nLUCENE-4765: Multi-valued docvalues field ",
            "author": "Commit Tag Bot",
            "id": "comment-13582827"
        },
        {
            "date": "2013-02-21T02:42:47+0000",
            "content": "[trunk commit] Robert Muir\nhttp://svn.apache.org/viewvc?view=revision&revision=1447999\n\nLUCENE-4765: Multi-valued docvalues field ",
            "author": "Commit Tag Bot",
            "id": "comment-13582842"
        },
        {
            "date": "2013-05-10T10:33:54+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13654063"
        }
    ]
}