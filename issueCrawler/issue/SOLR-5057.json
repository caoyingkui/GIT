{
    "id": "SOLR-5057",
    "title": "queryResultCache should not related with the order of fq's list",
    "details": {
        "affect_versions": "4.0,                                            4.1,                                            4.2,                                            4.3",
        "status": "Closed",
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There are two case query with the same meaning below. But the case2 can't use the queryResultCache when case1 is executed.\n\ncase1: q=:&fq=field1:value1&fq=field2:value2\ncase2: q=:&fq=field2:value2&fq=field1:value1\n\nI think queryResultCache should not be related with the order of fq's list.",
    "attachments": {
        "SOLR-5057.patch": "https://issues.apache.org/jira/secure/attachment/12593700/SOLR-5057.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13715267",
            "date": "2013-07-22T15:01:56+0000",
            "content": "Hmmm, my initial reaction was that it'd be hard to figure out what clauses were \"equivalent\". But I suppose a simple lexical ordering of all the \"relevant\" clauses would work for this. Of course the work-around is to generate your fq clauses in the same order every time..... "
        },
        {
            "author": "Feihong Huang",
            "id": "comment-13716404",
            "date": "2013-07-23T14:03:50+0000",
            "content": "hi, erickson. Thank you for your comments. Patch attached, with new test. If it is ok, I'll commit shortly. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13716411",
            "date": "2013-07-23T14:15:45+0000",
            "content": "I don't think you have commit rights <G>..... one of the committers will have to pick it up. And everyone is swamped so it may take some gentle nudging.... "
        },
        {
            "author": "Feihong Huang",
            "id": "comment-13716433",
            "date": "2013-07-23T14:41:56+0000",
            "content": "Well, Thank you for your reply. I am interested in contributing my work to solr. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13716459",
            "date": "2013-07-23T15:05:52+0000",
            "content": "Didn't mean to sound like it wouldn't be done, just making you aware that you only have read-only access to the repository and one of the committers has to pick it up and commit it.\n\nThat said, I took a quick look at it and it looks reasonable, I've assigned it to myself. I rearranged things a bit (I think the test you wrote fits better in a pre-existing file), I'll attach the change momentarily.\n\nDo you think you could extend this for the filterCache to? That way we'd be able to re-use the filterCache when the fq clauses were ordered differently.\n\nYonik Seeley Chris Hostetter (Unused) I've gotten myself in trouble by not understanding the nuances of query semantics, do you see a problem with this approach? Seems like an easy win, which makes me nervous that it hasn't been done before <G>...\n\nErick "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13716460",
            "date": "2013-07-23T15:06:46+0000",
            "content": "Moved test to pre-existing file. "
        },
        {
            "author": "Feihong Huang",
            "id": "comment-13717827",
            "date": "2013-07-24T00:35:04+0000",
            "content": "hi, erickson. I think that way can re-use the filterCache when the fq clauses were ordered differently. I am a new comer in learning solr. If there is some points that i am not considering sufficiently, i apologize for this. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13718233",
            "date": "2013-07-24T11:12:52+0000",
            "content": "Feihong:\n\nNever mind, I somehow got off on a tangent. I was thinking about fq clauses and somehow got it in my mind (even though I know better) that the filter cache re-use was sensitive to the order of fq clauses when it isn't, they are all individually cached. \n\nSorry for the confusion!\n\nSo I'll give people a chance to make comments and probably commit if not this weekend. All tests pass. \n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13718377",
            "date": "2013-07-24T13:54:28+0000",
            "content": "I think the common case will be fqs being ordered (most fqs will be generated from a system and hence normally appear in the same order.)\nA few issues with this patch:\n\n\tthe sort is expensive - it generates hashcodes for elements on every single compare.\n\tit's still not 100% - hashcodes for two different queries could match so sorting doesn't guarantee to get in the right order\n\tit slows down the common case of ordered filters (the sort needs to be done even when just checking the cache too)\n\n\n\nHow about this (untested) code instead:\n\n  // Do fast version, expecting that filters are ordered and only\n  // fall back to unordered compare on the first non-equal elements.\n  // This will only be called if the hash code of the entire key already\n  // matched, so the slower unorderedCompare should pretty much never\n  // be called if filter lists are generally ordered.\n  private static boolean isEqual(List<Query> a, List<Query> b) {\n    if (a==b) return true;  // takes care of identity and null cases\n    if (a==null || b==null) return false;\n    int sz = a.size();\n    if (sz != b.size()) return false;\n    for (int i=0; i<sz; i++) {\n      if (!a.get(i).equals(b.get(i))) {\n        return unorderedCompare(a, b, i);\n      }\n    }\n    return true;\n  }\n\n  private static boolean unorderedCompare(List<Query> a, List<Query> b, int start) {\n    int sz = a.size();\n    outer: for (int aIdx = start; aIdx<sz; aIdx++) {\n      Query aQ = a.get(aIdx);\n      for (int bIdx = start; bIdx<sz; bIdx++) {\n        Query bQ =b.get(bIdx);\n        if (aQ.equals(bQ)) continue outer;\n      }\n      return false;\n    }\n    return true;\n  }\n\n   "
        },
        {
            "author": "Feihong Huang",
            "id": "comment-13719112",
            "date": "2013-07-25T00:46:48+0000",
            "content": "Wonderful! The code above is much more better. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13720397",
            "date": "2013-07-26T04:42:08+0000",
            "content": "Similar to yoniks point initial point: In my experience, the situations where folks are going to be most concerned about having good cache usage are the situations where queries are generated programatically and the order of the filter queries is already deterministic (or can be made deterministic easy enough by the client)\n\nMy straw man suggestion would be to not modify QueryResultKey at all, and instead write a new (optional) SearchComponent that did nothing by sort the getFilters() array in it's prepare() method.  Users who can't ensure that requests with equivalent \"fq\" params queries come in the same order can register it to run just after the \"query\" component and get good cache hit ratios, but it wouldn't affect the performance in any way for users who send queries with fqs i na determinstic manner "
        },
        {
            "author": "Feihong Huang",
            "id": "comment-13723268",
            "date": "2013-07-30T02:01:00+0000",
            "content": "So, Can anyone make a final decision for this featrue ? \n\nhi, Erickson, if we decide to fix the feature,  who is responsible for submit the patch? \nCan i do it?  "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13723769",
            "date": "2013-07-30T11:59:12+0000",
            "content": "You can certainly submit the patch. So take Yonik's version,\nput it in your code and try your test.\n\nThen, please run the entire test suite (i.e. execute\n'ant clean test' from the root).\n\nBut sure, then you can submit the patch. I think Yonik's\nversion address Hoss's comments, it seems to me that this\npatch preserves efficiency without having to make it\na several step operation to handle this case. "
        },
        {
            "author": "Feihong Huang",
            "id": "comment-13726425",
            "date": "2013-08-01T13:37:05+0000",
            "content": "Patch attached. Just rename several variable'name using Yonik's code. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13738081",
            "date": "2013-08-13T10:53:20+0000",
            "content": "I'll give this another go-over in the next day or two. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13744917",
            "date": "2013-08-20T12:21:48+0000",
            "content": "Hmmm, sorry it took so long. But it appears that your latest patch doesn't have any of Yonik's suggestions in it and still has the test in a completely new file rather than just another test case in QueryResultKeyTest.java as my patch had. Did you upload your first patch again by mistake? \n\nPlease upload a new version and I promise I'll get it committed soon. "
        },
        {
            "author": "Feihong Huang",
            "id": "comment-13744994",
            "date": "2013-08-20T14:16:33+0000",
            "content": "hi, erick, patch attached again. I upload by mistake previous time. \nI'm so sorry. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13746805",
            "date": "2013-08-21T20:31:40+0000",
            "content": "Commit 1516299 from Erick Erickson in branch 'dev/trunk'\n[ https://svn.apache.org/r1516299 ]\n\nSOLR-5057 - queryResultCache should match out-of-order fq clauses "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13746806",
            "date": "2013-08-21T20:32:10+0000",
            "content": "Applies cleanly, I suspect there is a charset problem. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13746858",
            "date": "2013-08-21T21:23:32+0000",
            "content": "Commit 1516307 from Erick Erickson in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1516307 ]\n\nSOLR-5057 - queryResultCache should match out-of-order fq clauses "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13746861",
            "date": "2013-08-21T21:24:20+0000",
            "content": "Thanks to Feihong Huang! "
        },
        {
            "author": "Adrien Grand",
            "id": "comment-13787047",
            "date": "2013-10-05T10:18:55+0000",
            "content": "4.5 release -> bulk close "
        }
    ]
}