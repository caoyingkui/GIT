{
    "id": "SOLR-2451",
    "title": "Enhance SolrTestCaseJ4 to allow tests to account for small deltas when comparing floats/doubles",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.2",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Attached is a patch that adds the following method to SolrTestCaseJ4:  (just javadoc & signature shown)\n\n  /**\n   * Validates that the document at the specified index in the results has the specified score, within 0.0001.\n   */\n  public static void assertQScore(SolrQueryRequest req, int docIdx, float targetScore) {\n\n\n\nThis is especially useful for geospatial in which slightly different precision deltas might occur when trying different geospatial indexing strategies are used, assuming the score is some geospatial distance.  This patch makes a simple modification to DistanceFunctionTest to use it.",
    "attachments": {
        "SOLR-2451.patch": "https://issues.apache.org/jira/secure/attachment/12478744/SOLR-2451.patch",
        "Fix_SOLR-2451_for_a_custom_delta.patch": "https://issues.apache.org/jira/secure/attachment/12508448/Fix_SOLR-2451_for_a_custom_delta.patch",
        "SOLR-2451_assertQScore.patch": "https://issues.apache.org/jira/secure/attachment/12475149/SOLR-2451_assertQScore.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13031457",
            "date": "2011-05-10T23:09:16+0000",
            "content": "David,\n\nOne concern i have with your impl is that really only works with simple score comparisons from the main result set \u2013 for a public api we should probably try to be more general (as is this wouldn't work if people wanted flexible score comparisons using group by for instance \u2013 let alone any custom plugins users might want to write tests for)\n\nThe underlying code that processes assertJQ already applies a tolerance level when doing equality tests between the JSON structure and the expected value, but that is currently hardcoded.\n\nHere's a patch bubbles that tollerance up that up so that it can be specified in the individual assertJQ calls.  What do you think of this approach? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13031459",
            "date": "2011-05-10T23:13:01+0000",
            "content": "sorry, last patch was stale "
        },
        {
            "author": "David Smiley",
            "id": "comment-13031983",
            "date": "2011-05-11T19:29:31+0000",
            "content": "Ok, I like it. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13033335",
            "date": "2011-05-13T22:04:11+0000",
            "content": "Committed revision 1102907. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13033336",
            "date": "2011-05-13T22:04:24+0000",
            "content": "thanks for bringing this up david "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13033348",
            "date": "2011-05-13T22:21:39+0000",
            "content": "forgot i was in the middle of backporting "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13033353",
            "date": "2011-05-13T22:23:27+0000",
            "content": "Committed revision 1102910. - 3x "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043598",
            "date": "2011-06-03T16:44:56+0000",
            "content": "Bulk close for 3.2 "
        },
        {
            "author": "David Smiley",
            "id": "comment-13175076",
            "date": "2011-12-22T21:33:17+0000",
            "content": "Delta support was added bit it wasn't completed.  In particular, a custom delta provided is ignored, and instead you get the one provided as the default.  Furthermore, the condition in which delta is actually looked at wasn't quite right with respect to the Number subclass of \"val\" and \"expected\" subclasses.  In a minute I will attach a patch fixing it. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13183525",
            "date": "2012-01-10T20:06:24+0000",
            "content": "David: sorry, can't beleive we missed this before.\n\nSince this issue is already recorded in the changes of a released version, I opened a new issue (SOLR-3024) to track fixing it. "
        }
    ]
}