{
    "id": "LUCENE-7871",
    "title": "false positive match BlockJoinSelector[SortedDV] when child value is absent",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "7.0",
            "master (8.0)"
        ]
    },
    "description": "fix false positive match for SortedSetDV\n\tmake children an iterator instead of bitset.\nsee the comment",
    "attachments": {
        "LUCENE-7871.patch": "https://issues.apache.org/jira/secure/attachment/12872062/LUCENE-7871.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16042673",
            "date": "2017-06-08T13:12:42+0000",
            "content": "I started LUCENE-7835 from extracting common logic between numDV and sortedDV  LUCENE-7871.patch (it's a little bit harish), and faced false positive for sortedDV. I'll try incorporate Adrien Grand clue regarding ConjunctionDISI    ",
            "author": "Mikhail Khludnev"
        },
        {
            "id": "comment-16044024",
            "date": "2017-06-09T06:35:42+0000",
            "content": "I don't think extracting common logic helps in that case since it needs to introduce a new abstraction. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16044053",
            "date": "2017-06-09T07:02:17+0000",
            "content": "Adrien Grand, here is LUCENE-7871.patch what I have so far. ToParentIterator is the new abstraction based on ConjunctionDISI. btw, is ConjunctionDISI steady? Can we assert that ConjunctionDISI.docID is always the same as docVals subiterator docID? I just worry that's not true for Disjunction's one (obviously).  ",
            "author": "Mikhail Khludnev"
        },
        {
            "id": "comment-16044078",
            "date": "2017-06-09T07:17:15+0000",
            "content": "Correct, ConjunctionDISI is always on the same doc ID as its subs. Can you move ToParentIterator to the join package and make it pkg-private? I think you did things this way in order to be able to extend DocValuesIterator but actually you can just extend DocIdSetIterator and define an additional advanceExact method? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16044156",
            "date": "2017-06-09T08:42:49+0000",
            "content": "Can you move ToParentIterator to the join package and make it pkg-private? \n\nThanks it went really well. LUCENE-7871.patch I also moved some its' guts inside. \nNow BlockJoinSelector's methods accept DocIdSetIterator children, keeping all BitSet children-accepting methods deprecated.\n\nThe question is, what we allow ToParentBlockJoinSortField to accept as children? Is it Query?  or we have some other abstract per-segment DISI <<factory>>?  ",
            "author": "Mikhail Khludnev"
        },
        {
            "id": "comment-16044193",
            "date": "2017-06-09T09:18:47+0000",
            "content": "Since the patch is for 7.0 only, it is fine to break backward compatibility, so let's just remove the methods that take a bitset instead of deprecating them? hasValue and seen seem to store the same information, don't they? Finally I'm still not a fan of the ToParentIterator and Accumulator abstractions. I liked it better before, even if that meant a bit of duplication. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16044351",
            "date": "2017-06-09T12:03:30+0000",
            "content": "hasValue and seen seem t..\nOk. Thanks. I've collapsed them.\n\nI did is non backward compatible due to child Query. But turning child Query to DISI turned out soo hard. I had to reproduce ValueSource.ValueSourceSortField trick with weight and context map. But now ToParentBlockJoinSortField should be rewriten before searching. I find it not really convenient, but looks like it's what ValueSourceSortField users live with, see SolrIndexSearcher.weightSort(Sort) (I know),  and TestFunctionQuerySort as well. I wonder if we can do this simpler? \n\nFinally I'm still not a fan of the \nThankfully it doesn't sound like veto. Does it? I renamed it to the package level ToParentDocValues and pack both twins (sorted and numerics) into it. So, we can think that internally this code is duplicated. \nI propose this OO-hairish stuff because the current duplicated code introduced the bug, and I'm afraid it's caused exactly by this duplication.          ",
            "author": "Mikhail Khludnev"
        },
        {
            "id": "comment-16047544",
            "date": "2017-06-13T07:56:27+0000",
            "content": "Adrien Grand, can you give a feedback for API ie for supplying children as a Query?  ",
            "author": "Mikhail Khludnev"
        },
        {
            "id": "comment-16064353",
            "date": "2017-06-27T06:35:55+0000",
            "content": "LUCENE-7871.patch \n\n\tfixes TestBlockJoinSelector.java for case when SortedDV has no vals for kids.\n\textracts ToParentDocValues into hairish OO piece\n\tintroduces BlockJoinSelector.wrap() acepting childred as DISI, no usage yet, existing are deprecated.\nIs there any veto, request to hold on? or it's fine to push it forward?\n\n ",
            "author": "Mikhail Khludnev"
        },
        {
            "id": "comment-16070127",
            "date": "2017-06-30T13:53:46+0000",
            "content": "..going, going ",
            "author": "Mikhail Khludnev"
        },
        {
            "id": "comment-16072290",
            "date": "2017-07-03T11:35:07+0000",
            "content": "Commit 706d2018153d907642c77ae3673b99142b0d1734 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=706d201 ]\n\nLUCENE-7871: fix false positive match in BlockJoinSelector when children have no value.\n\n\n\tintroducing  BlockJoinSelector.wrap methods accepting children as DISI.\n\textracting ToParentDocValues\n\n ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16072390",
            "date": "2017-07-03T12:54:43+0000",
            "content": "Commit bb2d6c128ff74d6164c5c60ac952074c1b5a5b94 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bb2d6c1 ]\n\nLUCENE-7871: fixing CHANGES.txt, mark it as Lucene 7.0 bug fix. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16073747",
            "date": "2017-07-04T14:36:44+0000",
            "content": "Thanks Mikhail Khludnev! ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16073797",
            "date": "2017-07-04T15:06:58+0000",
            "content": "follow up SOLR-11006 for refactoring children to DISI. ",
            "author": "Mikhail Khludnev"
        }
    ]
}