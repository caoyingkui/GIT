{
    "id": "SOLR-1877",
    "title": "Investigate unclosed Reader in IndexBasedSpellCheck",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Looks like IndexBasedSpellcheck creates a Reader that it passes to HighFrequencyDictionary that never gets closed.",
    "attachments": {
        "SOLR-1877.patch": "https://issues.apache.org/jira/secure/attachment/12444213/SOLR-1877.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12866203",
            "date": "2010-05-11T16:47:14+0000",
            "content": "Patch to fix the issue, relative to the current trunk. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12867874",
            "date": "2010-05-15T13:53:14+0000",
            "content": "It will be great to get this fixed - spell checker has always been responsible for a lot of left-over test directories that the test framework can't remove on windows. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12867875",
            "date": "2010-05-15T14:19:52+0000",
            "content": "I really don't know the spellcheck framework, but I did just take a quick look...\n\nIt seems like we have multiple readers to worry about:\n1)  the reader possibly obtained from solr\n2) any reader opened explicitly by IndexBasedSpellChecker\n3) the reader the lucene spellchecker has\n\nThis patch looks like it would try to close a solr-obtained reader too.  It would also be nice to close all of the readers when the core is closed, and not just on a reload too.\n\nThe whole spellchecker  thing looks a bit fragile actually... what's stopping the obtained reader from being closed by solr?\nWe may need to expand the review to the whole solr spellchecker to figure out how to address these problems correctly.\n\nedit: after a quick peek at the lucene SpellChecker, it wasn't really architected for being able to switch indexes while serving requests 100% reliably either.  So if one reloads a spellcheck index, it seems that there's always a chance of messing up a previous solr request that's still in flight. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12867943",
            "date": "2010-05-16T03:11:39+0000",
            "content": "Should IndexReader implement the finalize()  \"complain and close\" pattern?\n\nvoid finalize() {\n    if (! already Closed) {\n        log.error(\"Possible resource leak: this.class.getName() not closed\");\n        try \n{\n            close();\n        }\n (Throwable t) \n{\n            // finalize can throw exceptions which causes weirdness\n        }\n    }\n}\n\nNothing in Lucene does this. It is a classic defensive coding trick. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12867992",
            "date": "2010-05-16T14:23:18+0000",
            "content": "Lucene is focused on throwing more segments around faster in the future (NRT and all that), so I'm not sure if adding finalizers is right.  It might be a good idea to locally add this to SegmentReader to try and see if there is a leak though. "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12871628",
            "date": "2010-05-26T11:23:50+0000",
            "content": "Another approach - use incRef/decRef for readers created in IndexBasedSpellChecker. This way we can at least prevent this component from closing readers while there are in-flight requests. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872596",
            "date": "2010-05-27T22:08:30+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043753",
            "date": "2011-06-03T16:46:53+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106263",
            "date": "2011-09-16T14:50:18+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13237075",
            "date": "2012-03-23T20:31:41+0000",
            "content": "Bulk changing fixVersion 3.6 to 4.0 for any open issues that are unassigned and have not been updated since March 19.\n\nEmail spam suppressed for this bulk edit; search for hoss20120323nofix36 to identify all issues edited "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412140",
            "date": "2012-07-11T22:26:08+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429860",
            "date": "2012-08-07T03:43:40+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13451033",
            "date": "2012-09-07T21:55:01+0000",
            "content": "removing fixVersion=4.0 since there is no evidence that anyone is currently working on this issue.  (this can certainly be revisited if volunteers step forward) "
        }
    ]
}