{
    "id": "SOLR-11714",
    "title": "AddReplicaSuggester endless loop",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "7.2,                                            master (8.0)",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "SearchRateTrigger events are processed by ComputePlanAction and depending on the condition either a MoveReplicaSuggester or AddReplicaSuggester is selected.\n\nWhen AddReplicaSuggester is selected there's currently a bug in master, due to an API change (Hint.COLL_SHARD should be used instead of Hint.COLL). However, after fixing that bug ComputePlanAction goes into an endless loop because the suggester endlessly keeps creating new operations.\n\nPlease see the patch that fixes the Hint.COLL_SHARD issue and modifies the unit test to illustrate this failure.",
    "attachments": {
        "7.2-disable-search-rate-trigger.diff": "https://issues.apache.org/jira/secure/attachment/12900905/7.2-disable-search-rate-trigger.diff",
        "SOLR-11714.patch": "https://issues.apache.org/jira/secure/attachment/12905437/SOLR-11714.patch",
        "SOLR-11714.diff": "https://issues.apache.org/jira/secure/attachment/12900242/SOLR-11714.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-06T17:44:21+0000",
            "content": "This patch disables the searchRate trigger in branch 7.2. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16280569"
        },
        {
            "date": "2017-12-06T20:12:28+0000",
            "content": "Commit 034daf424c13b467c16629823bc3b94395c738f3 in lucene-solr's branch refs/heads/branch_7_2 from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=034daf4 ]\n\nSOLR-11714: Disable searchRate trigger due to a suggester bug. ",
            "author": "ASF subversion and git services",
            "id": "comment-16280831"
        },
        {
            "date": "2017-12-07T18:37:07+0000",
            "content": "Andrzej Bialecki Can this issue be resolved or is there work left to do? ",
            "author": "Adrien Grand",
            "id": "comment-16282295"
        },
        {
            "date": "2017-12-07T18:40:10+0000",
            "content": "This still needs to be properly fixed for all other affected branches (7x and master), the commit above is just a quick fix that disables this functionality in 7.2. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16282301"
        },
        {
            "date": "2017-12-07T19:11:51+0000",
            "content": "OK, thanks for the explanation. ",
            "author": "Adrien Grand",
            "id": "comment-16282352"
        },
        {
            "date": "2018-01-04T14:32:58+0000",
            "content": "The infinite loop is because of wrong usage. AddReplica always return non null operation as long as there are no policy constraints ",
            "author": "Noble Paul",
            "id": "comment-16311401"
        },
        {
            "date": "2018-01-04T22:25:30+0000",
            "content": " \n{\"cluster-preferences\":[{\n        \"minimize\":\"cores\",\n        \"precision\":1}]}\n\n\nthis is the preferences and there is no policy specified. This means an infinite no:of replicas can be added without breaking any rules. \n\nthe test must add an explicit policy limiting the no:of replicas per node AND the ComputeAction must check for something more than just relying on the policy framework to return a null suggestion ",
            "author": "Noble Paul",
            "id": "comment-16312123"
        },
        {
            "date": "2018-01-08T14:23:30+0000",
            "content": "The current behavior of the framework is trappy because user has to modify the preferences when he adds a searchRate trigger in order to avoid the loop - if he forgets to do that he can bring the autoscaling down.\n\nThere are two things that we can do here: ComputePlanAction should be able to detect infinite (or very long) loops based roughly on the cluster size and the total number of replicas across the cluster, eg. if we have a cluster of 10 nodes and 20 replicas but the loop generated 1000 operations then something is definitely wrong.\n\nAlso, can we use some default limit, eg. 2 * replication factor, or something similar, for ADDREPLICA suggester, at least for events produced by searchRate trigger? Where do you think this default should be initialized? ",
            "author": "Andrzej Bialecki",
            "id": "comment-16316393"
        },
        {
            "date": "2018-01-08T14:27:24+0000",
            "content": "There is no means for the Policy framework to decide the no:of replicas that required to be added to achieve the given throughput. Instead ComputeActionPlan must only request it to add a certain no:of replicas (worst case, one at a time) and observe the result and add another  ",
            "author": "Noble Paul",
            "id": "comment-16316399"
        },
        {
            "date": "2018-01-09T12:38:07+0000",
            "content": "Ok, I see that now.\n\nThe logic in ComputePlanAction for handling searchRate events will end up quite complex, due to the limitations of Suggester API (returning just one op at a time) - eg. AddReplicaSuggester will need to be initialized differently in each loop, otherwise it would keep adding replicas to the first hot shard and ignore the others\u2026 For now this logic need to be put in ComputePlanAction - but if we changed the Suggester.getSuggestion to be able to return multiple suggestions, and changed AddReplicaSuggester.getSuggestions() to return suggestions for all hints, then we could move this complicated logic to SearchRateTrigger. WDYT? ",
            "author": "Andrzej Bialecki",
            "id": "comment-16318349"
        },
        {
            "date": "2018-01-09T12:57:15+0000",
            "content": "How does the suggester know what is the impact of the last operation on the search rate on a given node? It's not predictable. Getting multiple suggestions is not any more useful than the current approach.  ",
            "author": "Noble Paul",
            "id": "comment-16318375"
        },
        {
            "date": "2018-01-09T15:31:43+0000",
            "content": "After discussing this with Noble it seems that the best way to solve this is to allow some triggers to calculate the list of expected changes (eg. a list of COLL_SHARD replicas to add), and then explicitly iterate in ComputePlanAction as many times as needed to consume the list of these changes, and initializing suggesters with one change at a time (which would eventually result in calculating up to the same number of ops, though some of them may be null). ",
            "author": "Andrzej Bialecki",
            "id": "comment-16318606"
        },
        {
            "date": "2018-01-10T11:28:17+0000",
            "content": "The root issue for the loop was that the Policy framework can properly account for effect of its planned changes only for a few predefined parameters (cores, diskfree, cpu, etc). However, both SearchRateTrigger and MetricTrigger generate events that correspond to more complex cluster state.\n\nThis patch modifies the way these triggers work, and also significantly simplifies ComputePlanAction. Instead of relying on the Policy framework to figure out what and how many operations are needed these triggers specify requested operations explicitly in the form of action+hints, leaving only the target replica placement aspect to the Policy framework. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16320105"
        },
        {
            "date": "2018-01-16T15:50:47+0000",
            "content": "+1 LGTM. I reviewed the diff directly because I couldn't apply the patch cleanly on latest master. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16327270"
        },
        {
            "date": "2018-01-24T13:03:03+0000",
            "content": "Commit fa511a0a6f7e9f395aef853b1da7908d88be9f9a in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fa511a0 ]\n\nSOLR-11714: AddReplicaSuggester  / ComputePlanAction infinite loop. ",
            "author": "ASF subversion and git services",
            "id": "comment-16337558"
        },
        {
            "date": "2018-01-24T15:29:06+0000",
            "content": "Commit fba5114b78de2eb84b5ae71745a6eb670ca4ad33 in lucene-solr's branch refs/heads/branch_7x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fba5114 ]\n\nSOLR-11714: AddReplicaSuggester  / ComputePlanAction infinite loop. ",
            "author": "ASF subversion and git services",
            "id": "comment-16337767"
        },
        {
            "date": "2018-01-25T16:42:25+0000",
            "content": "Commit 09f903ef8dd7d294b1f5b1cf7023b28a58277d25 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=09f903e ]\n\nSOLR-11714: Remove todo now that this issue has been fixed ",
            "author": "ASF subversion and git services",
            "id": "comment-16339474"
        },
        {
            "date": "2018-01-25T16:43:32+0000",
            "content": "Commit af9706cb89335a5aa04f9bcae0c2558a61803b50 in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=af9706c ]\n\nSOLR-11714: Remove todo now that this issue has been fixed\n\n(cherry picked from commit 09f903e) ",
            "author": "ASF subversion and git services",
            "id": "comment-16339480"
        }
    ]
}