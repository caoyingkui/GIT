{
    "id": "SOLR-5757",
    "title": "Need ref-guide coverage of using Solr(Cloud) with SSL",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "documentation"
        ],
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "need doc updates explaining:\n\n\tbasics of running SolrCloud with SSL\n\thow to setup/config client auth certs for bi-directional auth",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13971080",
            "date": "2014-04-16T12:57:06+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13973678",
            "date": "2014-04-18T01:28:50+0000",
            "content": "Just to get some initial notes on the record:\n\n\n\tSee the example jetty.xml file to see how to configure Jetty w/ SSL in the SslSelectChannelConnector\n\t\n\t\tSet needClientAuth to true to enable two-way SSL, can be configured in the example via -Djetty.ssl.clientAuth=true\n\t\n\t\n\tSet the URL Scheme in ZooKeeper to let the cluster know that it needs to use https when building the various replica URLs\n\t\n\t\tZK Command: \n\n./zkcli.sh -zkhost localhost:9983 -cmd put /clusterprops.json\n{\\\"urlScheme\\\":\\\"https\\\"}\n\n\t\tNote: possible improvement is to provide some bootstrapping mechanism?\n\t\n\t\n\tSet the javax.net.ssl.* system properties to configure SSL for HttpClient, this will also allow two-way SSL to work...\n\t\n\t\tjavax.net.ssl.keyStore, javax.net.ssl.keyStorePassword, javax.net.ssl.trustStore, javax.net.ssl.trustStorePassword\n\t\n\t\n\tClients can use a generic certificate and use the ALLOW_ALL_HOSTNAME_VERIFIER (SOLR-5868) by setting the solr.ssl.checkPeerName system property (-Dsolr.ssl.checkPeerName=true). This makes it so clients don't need to specify every machine in the cluster in the alt subject names within the certificate (as it may change and be a pain to manage).\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14044052",
            "date": "2014-06-25T21:16:25+0000",
            "content": "sarowe said he's actaully looking into this now "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14045394",
            "date": "2014-06-27T00:47:06+0000",
            "content": "Added new \"Enabling SSL\" page to the Solr Reference Guide: https://cwiki.apache.org/confluence/display/solr/Enabling+SSL\n\nThanks Steve Davids for the seed docs, and Chris Hostetter (Unused) and Cassandra Targett for organization and editing help. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14045475",
            "date": "2014-06-27T03:15:31+0000",
            "content": "Alternatively, to require clients to authenticate, you can set the jetty.ssl.clientAuth system property to true (default is false):\n\nPerhaps we should mention that this is the two-way SSL mechanism. Also, it may be worth pointing out that this won't work with self-signed certs as HttpClient needs to be configured to use the \"TrustSelfSignedStrategy\" at which point a Solr property does not currently exist to perform this configuration. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14045487",
            "date": "2014-06-27T03:47:47+0000",
            "content": "Perhaps we should mention that this is the two-way SSL mechanism. \n\n+1\n\nAlso, it may be worth pointing out that this won't work with self-signed certs as HttpClient needs to be configured to use the \"TrustSelfSignedStrategy\" at which point a Solr property does not currently exist to perform this configuration.\n\nWhat would the symptoms of not working with self-signed certs?  It appeared to work for me when I tried it earlier today (as described in the Enabling SSL page), without any extra HttpClient configuration. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14045507",
            "date": "2014-06-27T04:28:19+0000",
            "content": "Interesting, when writing unit tests in order to get the two-way SSL to work I needed to configure the HttpClient to use the TrustSelfSignedStrategy as seen in \n\nSSLTestConfig.buildSSLContext()\n\n The only noticeable difference is that you are generating a new key vice using the key distributed located at solr/example/etc/solrtest.keystore generated via the create-solrtest.keystore.sh script (though it looks the same). I will need to take a closer and will follow the steps you have specified to see if I have an issue with the hand shake failing for internal Solr Cloud HTTPS requests. "
        }
    ]
}