{
    "id": "SOLR-6317",
    "title": "MoreLikeThis should allow more flexible query building",
    "details": {
        "affect_versions": "4.8.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "MoreLikeThis"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "It would be better if MoreLikeThis had more flexible query-building options.  There are two main abilities that would be helpful:\n\n1. Allowing a DisjunctionMax query to be built instead of the plain BooleanQuery.  \n\n2. Applying the interesting terms to all specified query fields, instead of just the field it happened to be found in.\n\n#1 is important because we generally find disjunction max to work better than plain boolean queries (adding the field scores together).\n\nAt the very least, the MoreLikeThis class should be made extendable, so that we can easily add this capability with a custom plugin, without having to rewrite all of the class.\n\nI.e., at its most basic, this could be resolved by making both \"createQuery\" methods \"protected\" instead of \"private\" so that we could then just override this method if we wanted to implement different ways of building the query, without changing anything else.\n\nAt the other extreme, potentially the more complex resolution, it might be nice to be able to specify a search handler to use and then MoreLikeThis would create the query from that search handler.  For example, fi the search handler used the eDisMax parser and specified a number of \"qf\", \"pf\", and boosts, then all those would be used to construct the mlt query, using the interesting terms generated.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}