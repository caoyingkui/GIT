{
    "id": "SOLR-8331",
    "title": "CorruptIndexException after auto commit",
    "details": {
        "components": [
            "update"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10.4",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Critical"
    },
    "description": "While adding many new documents to Solr (via solrJ) it happens that the index files get corrupted.\nThis problem is occurring on different virtual servers (all same OS and configuration). Especially when adding many new (or updated) documents to Solr in a short time.\n\nHere's the exception from solr.log:\n\norg.apache.solr.common.SolrException; auto commit error...:org.apache.lucene.index.CorruptIndexException: codec header mismatch: actual header=1970145651 vs expected header=1071082519 (resource: BufferedChecksumIndexInput(MMapIndexInput(path=\"/data/solr/data1/index/_gru.fnm\")))\n        at org.apache.lucene.codecs.CodecUtil.checkHeader(CodecUtil.java:136)\n        at org.apache.lucene.codecs.lucene46.Lucene46FieldInfosReader.read(Lucene46FieldInfosReader.java:57)\n        at org.apache.lucene.index.SegmentReader.readFieldInfos(SegmentReader.java:289)\n        at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:107)\n        at org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:145)\n        at org.apache.lucene.index.BufferedUpdatesStream.applyDeletesAndUpdates(BufferedUpdatesStream.java:282)\n        at org.apache.lucene.index.IndexWriter.applyAllDeletesAndUpdates(IndexWriter.java:3312)\n        at org.apache.lucene.index.IndexWriter.maybeApplyDeletes(IndexWriter.java:3303)\n        at org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.java:2989)\n        at org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:3134)\n        at org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:3101)\n        at org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.java:582)\n        at org.apache.solr.update.CommitTracker.run(CommitTracker.java:216)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:745)\n\n\nAdditionally I found in Tomcat's catalina.out logfile :\n\nException in thread \"Lucene Merge Thread #21\" org.apache.lucene.index.MergePolicy$MergeException: org.apache.lucene.index.CorruptIndexException: codec header mismatch: actual header=33882629 vs expected header=1071082519 (resource: BufferedChecksumIndexInput(MMapIndexInput(path=\"/data/solr/data1/index/_62.fnm\")))\n        at org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:549)\n        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:522)\nCaused by: org.apache.lucene.index.CorruptIndexException: codec header mismatch: actual header=33882629 vs expected header=1071082519 (resource: BufferedChecksumIndexInput(MMapIndexInput(path=\"/data/solr/data1/index/_62.fnm\")))\n        at org.apache.lucene.codecs.CodecUtil.checkHeader(CodecUtil.java:136)\n        at org.apache.lucene.codecs.lucene46.Lucene46FieldInfosReader.read(Lucene46FieldInfosReader.java:57)\n        at org.apache.lucene.index.SegmentReader.readFieldInfos(SegmentReader.java:289)\n        at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:107)\n        at org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:145)\n        at org.apache.lucene.index.BufferedUpdatesStream.applyDeletesAndUpdates(BufferedUpdatesStream.java:282)\n        at org.apache.lucene.index.IndexWriter._mergeInit(IndexWriter.java:3987)\n        at org.apache.lucene.index.IndexWriter.mergeInit(IndexWriter.java:3949)\n        at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3802)\n        at org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:409)\n        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:486)\n\n\n(The file path is different as the second stack trace comes from another test)\n\nI noticed that Solr runs stable much longer when I modify merge settings:\nReducing\n <maxMergeDocs>100000</maxMergeDocs>\nto\n <maxMergeDocs>10000</maxMergeDocs>\nhas a positive effect but at some point the index still gets corrupted.\nSame when setting a higher mergeFactor. So it seems I can delay the issue for a while but certainly it will reach a critical point after a few days or weeks it can't handle anymore. Maybe it is related to a certain file size or something?\n\nThe index's total size (data directory) is about 23 GB with 3,200,000 documents.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-26T10:22:31+0000",
            "author": "Uwe Schindler",
            "content": "Can you please give detailed information about the used Java virtual machine and its configuration / startup command line options? This looks like an issue with a buggy JVM. This is Solr 4.10.4? ",
            "id": "comment-15028485"
        },
        {
            "date": "2015-11-26T11:18:59+0000",
            "author": "Ansgar Kapels",
            "content": "Yes it is Solr 4.10.4 running in a Tomcat 7.0.55\njava -version output\n\njava version \"1.7.0_67\"\nJava(TM) SE Runtime Environment (build 1.7.0_67-b01)\nJava HotSpot(TM) 64-Bit Server VM (build 24.65-b04, mixed mode)\n\n\n\nJVM arguments:\n\n    -Djava.io.tmpdir=/opt/apache-tomcat-7.0.55/temp\n    -Dcatalina.home=/opt/apache-tomcat-7.0.55\n    -Dcatalina.base=/opt/apache-tomcat-7.0.55\n    -Djava.endorsed.dirs=/opt/apache-tomcat-7.0.55/endorsed\n    -Xmx5120m\n    -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager\n    -Djava.util.logging.config.file=/opt/apache-tomcat-7.0.55/conf/logging.properties\n\n ",
            "id": "comment-15028573"
        }
    ]
}