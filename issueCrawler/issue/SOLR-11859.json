{
    "id": "SOLR-11859",
    "title": "CloneFieldUpdateProcessorFactory should not add {set=} to content when cloned to multivalued field",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "UpdateRequestProcessors"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "7.2",
        "resolution": "Works for Me",
        "status": "Resolved"
    },
    "description": "I'm using the\u00a0CloneFieldUpdateProcessorFactory to copy\u00a0content from all string fields\u00a0except some predefined fields\u00a0to a multivalued \"text_final\" field. This seems to work, however each value value is prepended with \"{set=\" and appended with \"}\".\n\nExpected result\n Just clone all the original values into the multivalued field without \"{set=}\".\u00a0\u00a0\n\nIn my schema this field is defined as:\n\n<field name=\"text_final\" type=\"text_nl\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>\n\nThe fieldType is defined as:\n\n<fieldType name=\"text_nl\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n <analyzer>\n <charFilter class=\"solr.PatternReplaceCharFilterFactory\" pattern='>' replacement=' ' />\n<tokenizer class=\"solr.StandardTokenizerFactory\"/>\n <filter class=\"solr.LowerCaseFilterFactory\"/>\n <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"lang/stopwords_nl.txt\"\n format=\"snowball\"/>\n <filter class=\"solr.HunspellStemFilterFactory\"\n dictionary=\"lang/nederlands/nl_NL.dic\"\n affix=\"lang/nederlands/nl_NL.aff\"\n ignoreCase=\"true\"/>\n </analyzer>\n </fieldType>\n\nIn my updateRequestProcessorChain the processor is defined as:\n\n<processor class=\"solr.CloneFieldUpdateProcessorFactory\">\n <lst name=\"source\">\n <str name=\"fieldRegex\">s_.*</str>\n <lst name=\"exclude\">\n <str name=\"fieldName\">s_description</str>\n <str name=\"fieldName\">s_image_link</str>\n <str name=\"fieldName\">s_link</str>\n </lst>\n </lst>\n <str name=\"dest\">text_final</str>\n </processor>",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-16T15:55:25+0000",
            "content": "In the meantime, would copyField directive(s) in the schema be easier? ",
            "author": "Erick Erickson",
            "id": "comment-16327287"
        },
        {
            "date": "2018-01-16T18:03:02+0000",
            "content": "hi Erick, Unfortunately this doesn't work for me as I cannot exclude specific fields when using copyField;\u00a0\n\n<copyField source=\"s_*\" dest=\"text_final\" />\n\nwould also copy s_description, s_image_link and s_link which I don't want to show up in \"text_final\". ",
            "author": "Jaap de Jong",
            "id": "comment-16327486"
        },
        {
            "date": "2018-01-16T18:13:03+0000",
            "content": "I don't understand this Jira \u2013AFAIK there is nothing in CloneFieldUpdateProcessor that will automatically prepend \"{set=\" to any field values \u2013 nor is there anything that will try to convert the field values into atomic updates (which might be missread as prepended \"set\" strings?)\n\n\u00a0\n\nThe Jira description includes an example field/fieldType and processor declaration \u2013 but no full details on exactly what the requests look, with full input/output and details on the entire update chain.\u00a0 (ie: full solrconfig.xml + full schema showing both the sources nad dest fields + sample curl command to index + sample curl command to /get or /query the added documents)\n\nI'm 99% certian something else is going on here unrelated to CloneFieldUpdateProcessorFactory\n\n\u00a0 ",
            "author": "Hoss Man",
            "id": "comment-16327502"
        },
        {
            "date": "2018-01-16T19:48:54+0000",
            "content": "Hi Hoss, thank you for your comment. I actually didn't think about it this way, but I am indeed using PHP Solarium to push the data to SOLR. I'm using a \"set\" modifier there, like this:\u00a0\u00a0\n\n$update = $solrClient->createUpdate();\n\n$document = $update->createDocument();\n\n$document->setField('s_description', $source->description, null, 'set');\n\n//etc.\n\n$update->addDocument($document);\n\n$solrClient->update($update);\n\n\u00a0\n\nI'm using the same code when doing partial atomic updates, so\u00a0my initial insert might actually be pushed to solr in \"atomic update style\" meaning that it would need different code on my side. I'll test further with this a.s.a.p. Thank you! ",
            "author": "Jaap de Jong",
            "id": "comment-16327676"
        },
        {
            "date": "2018-01-17T13:33:04+0000",
            "content": "Removing the \"set\" modifier in $document->setField() actually helped.\u00a0 ",
            "author": "Jaap de Jong",
            "id": "comment-16328769"
        }
    ]
}