{
    "id": "SOLR-6392",
    "title": "If run Solr having two collections configured but only one config delivered to Zookeeper causes that config is applied for all collections",
    "details": {
        "affect_versions": "4.4",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "I have simplest Solr cloud configured locally. Thus I have single Solr and Zookeeper nodes. \nSteps to reproduce an error:\n\n\thave stopped Solr+ZK with two collections\n\trun ZK\n\tdeliver config to one collection only\n\trun Solr - Solr running without any complains or errors\n\tdeliver config to second collection - doesn't have an effect\n\n\n\nBut if I deliver configs for both collections before start Solr - it work perfectly.\n\nSo I would say that Solr should fail with meaningful error if there is no config for some collection.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-14102933",
            "date": "2014-08-19T22:05:47+0000",
            "content": "First, please raise these kinds of issues on the user's list before raising a JIRA to insure that it's actually a bug.\n\nConfigs aren't read to local nodes until the collection is reloaded. This happens when the Solr instance starts or when the collection is reloaded. So what you're seeing is what I would expect (or I'm not getting it). I don't quite remember if 4.4 has the ReloadCollection Collections API call, see: https://cwiki.apache.org/confluence/display/solr/Collections+API. If it does, then issuing it after you've uploaded the second set of configs should do the trick.\n\nIf that turns out to be the problem, please close this JIRA as \"invalid\".\n\nBest,\nErick "
        },
        {
            "author": "Ilya Meleshkov",
            "id": "comment-14103516",
            "date": "2014-08-20T06:53:11+0000",
            "content": "Hello, sorry for missing user list step - its my fail. Regarding the issue - I forget to mention that I reloaded both collections without errors after deliver config for second collection. It doesn't seem to have an effect. Please let me know if I could provide some details that could help you to investigate the issue.\nSunny regards,\nIlya "
        },
        {
            "author": "Daniel Collins",
            "id": "comment-14103598",
            "date": "2014-08-20T08:18:51+0000",
            "content": "By \"deliver config\", I am assuming you mean upload that config to zk? Do you use the zkcli.sh script for that or do you do it via some other means?\n\nWhat I think you are saying is:\n\n\n\tYou have 2 collections which should be using independent configurations (both stored in ZK).\n\tIf you change config1 (and restart Solr), that takes effect (in collection1 or both?)\n\tIf you change config2 (and restart Solr), there is no apparent effect?\n\n\n\nFirst question is then, are you sure both collections are using different configs, or have they somehow both picked up the same config?  How did you set them up, and how did you define which config each collection uses?\nThere used to be a \"fall-back\" approach in Solr, if you started a core but didn't tell it to use any config from ZK AND there was only 1 possible config in ZK, the Solr \"guessed\" that was what you meant and set up the links.\n\nI would guess that might what's happened here, so both your collections are actually using config1.\n\nCheck in ZK, under the /collections/<collectionName> node there should be an element called configName which maps to the configuration in ZK.\nIf that is wrong, you need to correct that, which is the \"-linkconfig\" option in zkcli.sh\n\nBut as Erick says, this would be better discussed on the list. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-14108092",
            "date": "2014-08-23T18:53:42+0000",
            "content": "I don't quite remember if 4.4 has the ReloadCollection Collections API call\n\nIt does \u2013 in fact, some of the earlier releases had a problem with reloads on cores or collections in cloud mode.  See SOLR-4805. "
        },
        {
            "author": "Ilya Meleshkov",
            "id": "comment-14108994",
            "date": "2014-08-25T10:27:45+0000",
            "content": "Daniel Collins you wrote:\n\nYou have 2 collections which should be using independent configurations (both stored in ZK).\ncorrect\n\n\nIf you change config1 (and restart Solr), that takes effect (in collection1 or both?)\nThat takes an effect for both collections. I'm checking using http://solrhost/solr/#/collectionName/schema\n\n\nIf you change config2 (and restart Solr), there is no apparent effect?\nNeither restart of Solr or reloading cores makes a difference. Second config is not applied.\n\n\nFirst question is then, are you sure both collections are using different configs, or have they somehow both picked up the same config?\nSince if I deliver configs for both collections and then start Solr it works fine, I make an assumptions that configurations are correct and collections use specific configs\n\nHow did you set them up, and how did you define which config each collection uses?\nConfigs delivered to ZK using following command\n\njava -cp org.apache.solr.cloud.ZkCLI -cmd upconfig -zkhost ${zk.urls} -confdir %CONFIG_PATH% -confname ${solr.collection.name}\n\n\nThe solr.solr.home is configured manually and contains cores folder with subfolder for each collection. Subfolder names match collections names. Each collection subfolder has core.properties with following text:\n\nname=collectionName\n\n\n\n\nThere used to be a \"fall-back\" approach in Solr, if you started a core but didn't tell it to use any config from ZK AND there was only 1 possible config in ZK, the Solr \"guessed\" that was what you meant and set up the links.\n\nOk, it looks to be very close to problem I have, but I explicitly specify collection names for both collections. And if I later deliver configs for second collection and restart Solr/reload cores changes is not applied, that is unexpected behavior\n\nThe code you're referencing to most likely is \norg.apache.solr.cloud.ZkController.java\nif (configNames != null && configNames.size() == 1) {\n        // no config set named, but there is only 1 - use it\n        log.info(\"Only one config set found in zk - using it:\" + configNames.get(0));\n        collectionProps.put(CONFIGNAME_PROP,  configNames.get(0));\n        break;\n      }\n\n  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14109057",
            "date": "2014-08-25T12:23:28+0000",
            "content": "And if I later deliver configs for second collection and restart Solr/reload cores changes is not applied, that is unexpected behavior\n\nUse the zkcli link command after 'delivering' the second set of configs to link them to the collection. "
        },
        {
            "author": "Frank Kelly",
            "id": "comment-15035192",
            "date": "2015-12-02T03:15:13+0000",
            "content": "Was there ever a resolution to this - either a code issue or a user error. I think I am seeing this also (working through the user list right now) "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-15035222",
            "date": "2015-12-02T03:53:34+0000",
            "content": "Frank:\n\nHere's the rules if you don't specify a configName when issuing the Collections API CREATE command (at least as I understand them)\n\n0> if there are no config sets in ZK, fail\n1> if there's a configset with the same name as the collection use it. \n2> else if there's only a single configset, use that regardless of whether name matches or not.\n3> else if there's more than one configset, fail.\n\nThe above if (and only if) there is no config specified when creating the collection. If you do specify a configset name, then of course it has to be there or collection creation fails.\n\nSo here's one possible sequence leading to what's described here:\n1> upload a config set with a name of \"bonkers\".\n2> create collection1 with or without specifying the configset name\n3> create collection2 with or without specifying the configset name\n\nNow, both are registered with ZK as using configset \"bonkers\" and will stay that way unless and until that association is explicitly changed via linkconfig as Mark recommended.\n\nIt would be dangerous IMO to change the config set associated with collection2 just because someone uploaded a new configset with the name collection2.\n\nSo I believe this is working as designed, I'm going to close it. We can reopen or create a new JIRA if necessary. "
        }
    ]
}