{
    "id": "SOLR-3147",
    "title": "FileDataSource throws a FileNotFoundException when reading from named pipes",
    "details": {
        "affect_versions": "3.5",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "DataImportHandler fails on a FileNotFoundException when FileDataSource tries to read from a named pipe.  This is because FileDataSource:105 in getFile calls isFile().  Since named pipes aren't true files this fails.  When this check is removed, the import is able to proceed normally.  \n\nI want to use a named pipe so I can keep the file compressed on disk and use gunzip -c to uncompress the file to the named pipe.  Another way of fixing this would be to natively decompress inside of FileDataSource, it's not clear if this bug https://issues.apache.org/jira/browse/SOLR-1406 fixes the issue.  \n\nWhat would the preferred patch do?  Should it read a forceFile attribute from initProps?",
    "attachments": {
        "SOLR-3147.patch": "https://issues.apache.org/jira/secure/attachment/12515377/SOLR-3147.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Paddy Mullen",
            "id": "comment-13212721",
            "date": "2012-02-21T16:43:36+0000",
            "content": "This patch adds a new implementation of getFile that accepts an allowNonFile flag,  it keeps the old version of getFile for api compatability (there are existing callers of the old prototype) "
        }
    ]
}