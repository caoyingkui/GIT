{
    "id": "SOLR-8793",
    "title": "Fix stale commit files' size computation in LukeRequestHandler",
    "details": {
        "components": [
            "Server"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5.1",
            "6.0"
        ],
        "affect_versions": "5.5",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "SOLR-8587 added segments file information and its size to core admin status API. However in case of stale commits, calling that API may result on FileNotFoundException or NoSuchFileException, if the segments file no longer exists due to a new commit. We should fix that by returning a proper value for the file's length in this case, maybe -1.",
    "attachments": {
        "SOLR-8793.patch": "https://issues.apache.org/jira/secure/attachment/12792031/SOLR-8793.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-08T16:53:24+0000",
            "author": "Shai Erera",
            "content": "Patch fixes the bug by catching the IOException and returning -1. In that case, the index info will should a file size of -1, until the reader is refreshed.\n\nI chose to return a -1 over setting an empty string, or not returning the value at all since I feel it's better, but if others think otherwise, please comment. ",
            "id": "comment-15185218"
        },
        {
            "date": "2016-03-08T20:13:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4384627f0891e4dc3232d3c7f20a54bc9224365c in lucene-solr's branch refs/heads/master from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4384627 ]\n\nSOLR-8793: Fix stale commit files' size computation in LukeRequestHandler ",
            "id": "comment-15185690"
        },
        {
            "date": "2016-03-08T20:15:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 122c24807196205f2bf65d37e6565caa7c6be987 in lucene-solr's branch refs/heads/branch_6x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=122c248 ]\n\nSOLR-8793: Fix stale commit files' size computation in LukeRequestHandler ",
            "id": "comment-15185696"
        },
        {
            "date": "2016-03-08T20:16:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ee98a22d54cf1f419ae3c959ad09763cb7171140 in lucene-solr's branch refs/heads/branch_6_0 from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ee98a22 ]\n\nSOLR-8793: Fix stale commit files' size computation in LukeRequestHandler ",
            "id": "comment-15185699"
        },
        {
            "date": "2016-03-08T20:19:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8edf1d96990b7327de57aa3d611dbf70b290dccb in lucene-solr's branch refs/heads/branch_5x from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8edf1d9 ]\n\nSOLR-8793: Fix stale commit files' size computation in LukeRequestHandler ",
            "id": "comment-15185706"
        },
        {
            "date": "2016-03-08T20:21:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a1562c52671336f11f434bfb536260e260d01500 in lucene-solr's branch refs/heads/branch_5_5 from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a1562c5 ]\n\nSOLR-8793: Fix stale commit files' size computation in LukeRequestHandler ",
            "id": "comment-15185714"
        },
        {
            "date": "2016-03-08T20:22:33+0000",
            "author": "Shai Erera",
            "content": "Pushed the fix to master, branch_6x, branch_6_0, branch_5x and branch_5_5. I think it would be good if it's released in a 5.5.1. ",
            "id": "comment-15185717"
        },
        {
            "date": "2016-03-09T16:00:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4384627f0891e4dc3232d3c7f20a54bc9224365c in lucene-solr's branch refs/heads/apiv2 from Shai Erera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4384627 ]\n\nSOLR-8793: Fix stale commit files' size computation in LukeRequestHandler ",
            "id": "comment-15187297"
        },
        {
            "date": "2016-03-28T15:37:04+0000",
            "author": "Shawn Heisey",
            "content": "Even with this fix, running 5.5.1-SNAPSHOT, I am still getting similar errors.  Everything seems to work fine, just as it did before this fix was applied, but the error is happening a lot.  Here's the stacktrace:\n\n\n2016-03-28 09:33:00.775 WARN  (qtp1012570586-316040) [   x:sparkinclive] org.apache.solr.handler.admin.LukeRequestHandler Error getting file length for [segments_ovq]\njava.nio.file.NoSuchFileException: /index/solr5/data/data/sparkinc_1/index/segments_ovq\n        at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)\n        at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\n        at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)\n        at sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)\n        at sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:144)\n        at sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)\n        at java.nio.file.Files.readAttributes(Files.java:1737)\n        at java.nio.file.Files.size(Files.java:2332)\n        at org.apache.lucene.store.FSDirectory.fileLength(FSDirectory.java:210)\n        at org.apache.lucene.store.NRTCachingDirectory.fileLength(NRTCachingDirectory.java:127)\n        at org.apache.solr.handler.admin.LukeRequestHandler.getFileLength(LukeRequestHandler.java:604)\n        at org.apache.solr.handler.admin.LukeRequestHandler.getIndexInfo(LukeRequestHandler.java:592)\n        at org.apache.solr.handler.admin.LukeRequestHandler.handleRequestBody(LukeRequestHandler.java:137)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:155)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:2082)\n        at org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:670)\n        at org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:458)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:225)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:183)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.Server.handle(Server.java:499)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\n        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n        at java.lang.Thread.run(Thread.java:745)\n\n ",
            "id": "comment-15214336"
        },
        {
            "date": "2016-04-21T15:37:23+0000",
            "author": "Tomasz Oliwa",
            "content": "I am on Solr 6.0.0 and am seeing exactly the same WARN org.apache.solr.handler.admin.LukeRequestHandler Error getting file length for [segments_...] in the Solr logging.  ",
            "id": "comment-15252071"
        },
        {
            "date": "2016-11-25T13:50:19+0000",
            "author": "Furkan KAMACI",
            "content": "I get that warning:\n\n\nWARN  - 2016-11-25 14:45:53.587; [   x:gettingstarted] org.apache.solr.handler.admin.LukeRequestHandler; Error getting file length for [segments_5]\njava.nio.file.NoSuchFileException: /solr-5.5.2/example/schemaless/solr/gettingstarted/data/index/segments_5\n\tat sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)\n\tat sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)\n\tat sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:144)\n\tat java.nio.file.Files.readAttributes(Files.java:1737)\n\tat java.nio.file.Files.size(Files.java:2332)\n\tat org.apache.lucene.store.FSDirectory.fileLength(FSDirectory.java:210)\n\tat org.apache.lucene.store.NRTCachingDirectory.fileLength(NRTCachingDirectory.java:124)\n\tat org.apache.solr.handler.admin.LukeRequestHandler.getFileLength(LukeRequestHandler.java:604)\n\tat org.apache.solr.handler.admin.LukeRequestHandler.getIndexInfo(LukeRequestHandler.java:592)\n\tat org.apache.solr.handler.admin.LukeRequestHandler.handleRequestBody(LukeRequestHandler.java:137)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:155)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2102)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:654)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:460)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:257)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:208)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:499)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\n\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\n\nwith Solr 5.5.2 with default schemaless example. ",
            "id": "comment-15695911"
        },
        {
            "date": "2016-11-28T10:18:24+0000",
            "author": "Tim Owen",
            "content": "We get this using Solr 6.3.0 because it's still logged at WARN level, which seems a bit alarmist to me. For indexes that are changing rapidly, it happens a lot. We're going to increase our logging threshold for that class to ERROR, because these messages are just filling up the logs and there's no action we can actually take to prevent it, because they're expected to happen sometimes. Personally I would make this message INFO level. ",
            "id": "comment-15701538"
        }
    ]
}