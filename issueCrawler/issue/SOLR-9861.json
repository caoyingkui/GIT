{
    "id": "SOLR-9861",
    "title": "Support Cross Data Center Replication under HDFS",
    "details": {
        "components": [
            "CDCR"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Currently Solr Cloud does not support CDCR under HDFS (according to http://search-lucene.com/m/Solr/eHNlLSriaVCpuU1?subj=Re+Using+Solr+CDCR+with+HdfsDirectoryFactory). \nIf the CDCR configuration is performed according to\n\nhttps://cwiki.apache.org/confluence/pages/viewpage.action?pageId=62687462\n\nand at the same time the HdfsDirectoryFactory is configured on both Source cluster and Target cluster according to\n\nhttps://cwiki.apache.org/confluence/display/solr/Running+Solr+on+HDFS\n\nit leads to the following error message during reload of the collection \u201ccollection_source\u201d of the source cluster:\n\n2016-11-23 12:05:35.604 ERROR (qtp1134712904-8045) [c:collection_source s:shard1 r:core_node1 x:collection_source_shard1_replica1] o.a.s.s.HttpSolrCall null:org.apache.solr.common.SolrException: Error handling 'reload' action\n        at org.apache.solr.handler.admin.CoreAdminOperation$3.call(CoreAdminOperation.java:150)\n        at org.apache.solr.handler.admin.CoreAdminHandler$CallInfo.call(CoreAdminHandler.java:367)\n        at org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(CoreAdminHandler.java:158)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:156)\n        at org.apache.solr.servlet.HttpSolrCall.handleAdminRequest(HttpSolrCall.java:663)\n        at org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:445)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:257)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:208)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1160)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1092)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n        at org.eclipse.jetty.server.Server.handle(Server.java:518)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:308)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\n        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\n        at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n        at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:246)\n        at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:156)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.solr.common.SolrException: Unable to reload core [collection_source_shard1_replica1]\n        at org.apache.solr.core.CoreContainer.reload(CoreContainer.java:920)\n        at org.apache.solr.handler.admin.CoreAdminOperation$3.call(CoreAdminOperation.java:148)\n        ... 31 more\nCaused by: org.apache.solr.common.SolrException: Solr instance is not configured with the cdcr update log.\n\n\nHowever, the solr instance was configured correctly. CDCR should work in the same way with HdfsDirectoryFactory as it works with StandardDirectoryFactory or NRTCachingDirectoryFactory.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-31T21:40:28+0000",
            "author": "Kevin Risden",
            "content": "I looked into this some and just sharing what I found in case it helps:\n\n\tCDCR has CdcrUpdateLog and CdcrTransactionLog which do a bulk of the CDCR work\n\tHDFS has HdfsUpdateLog and HdfsTransactionLog which do a bulk of the HDFS work\n\tCdcrUpdateLog and HdfsUpdateLog both extend the UpdateLog class\n\tCdcrTransactionLog and CdcrUpdateLog both extend the TransactionLog class\n\tCdcrUpdateLog and CdcrTransactionLog both deal with Linux files\n\n\n\nThe items above make it hard for the existing CDCR implementation classes to reuse the HDFS implementation classes. It would probably be useful to refactor some first to allow for more reuse between classes. The UpdateLog class is pretty big and its not clear what all the pieces are for. There are inner classes and enums within the UpdateLog class used elsewhere. ",
            "id": "comment-15847554"
        }
    ]
}