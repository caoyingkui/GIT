{
    "id": "SOLR-9010",
    "title": "Query tab - allow using browser \"previous\", \"next\" buttons to load previous/next queries in the form",
    "details": {
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.5",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Hi guys,\n\nI'm new here, however I have been using solr web admin interface for some weeks now. \n\nMy problem is that I often would like to access my previous queries loaded in the form. However it is not possible now.\n\nI'd like to have an url that opened will load the values to the form fields.\nNow the web gui displays an url which is a solr request url and not web admin query url.\n\nI could implement this feature or create a web page that will use this feature. Are you interested?",
    "attachments": {
        "SOLR-9010.patch": "https://issues.apache.org/jira/secure/attachment/12801957/SOLR-9010.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-04-19T12:34:27+0000",
            "author": "Stefan Matheis (steffkes)",
            "content": "Hey Jakub Zakrzewski, short note aside: normally we try to bring up such questions / feature-ideas on the mailing list to discuss the details before we open up JIRA-Tickets. if you'd remember that for the next time, that'd be perfect.\n\nrelated to your suggestion: i think it's a nice addition. i don't have an idea, how i'd build something like that - especially in terms of the user interface (how to navigate back and forth ..) - but if it would be possible that you bring up a patch, a screenshot/-mock or at least a description of how you think it might work, we could discuss that.\n\n-Stefan ",
            "id": "comment-15247663"
        },
        {
            "date": "2016-04-19T12:35:54+0000",
            "author": "Stefan Matheis (steffkes)",
            "content": "Right after i've wrote that comment, i did realize how many questions i've included in it already - Jakub would you mind taking this idea to the mailing-list, so we could discuss it with others and then return to this ticket? enhance the description with proper details and things like that ",
            "id": "comment-15247664"
        },
        {
            "date": "2016-04-19T12:47:32+0000",
            "author": "Jakub Zakrzewski",
            "content": "Hi Stefan,\n\nYes, it's OK to post it to the mailing list. Should I do it? ",
            "id": "comment-15247681"
        },
        {
            "date": "2016-04-19T12:52:20+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "+1\nAccording to SOLR-8989 it already works for the q parameter using syntax http://localhost:8983/solr/index.html#/foo/query?q=myquery, but i tested and it does not work for e.g. fq or sort. So I guess there are two parts to this. The first being the JS looking for query params to fill in the boxes, the other is making the SPA modify the URL when search button is hit. I think it is possible without page reload since the change is after the #? ",
            "id": "comment-15247686"
        },
        {
            "date": "2016-04-19T13:05:20+0000",
            "author": "Upayavira",
            "content": "I'm gonna assume for now that we're talking about the new UI (from Jan's index.html reference, he is too).\n\nThe issue if I recall it is that, in Angular, changing the URL triggers a reload of the controller. This changes the workflow of the page substantially - when executing a query, rather than building a Solr URL to pass to a service, you need to build an Angular URL, then, when the controller starts up again, parse that angular URL into the $scope, then build a Solr URL and execute it. Certainly not impossible, just a rather different way of doing it from how it was initially coded.\n\nI'm certainly game for reviewing Jakub Zakrzewski's work if he wants to give it a go. I'd say, pretty much the entire work will be in js/angular/controllers/query.js. ",
            "id": "comment-15247709"
        },
        {
            "date": "2016-04-19T13:11:34+0000",
            "author": "Jakub Zakrzewski",
            "content": "Jan,\n\nI'm new to angularjs, but I have found already a place where the filling in the boxes happens and it does happen in the file\njs/angular/controllers/query.js\nthe part responsible for loading the q parameter from the url is on line 89:\n    if ($location.search().q) \n{\n      $scope.query.q = $location.search()[\"q\"];\n      $scope.doQuery();\n    }\n\nWhat is SPA? ",
            "id": "comment-15247719"
        },
        {
            "date": "2016-04-19T13:14:37+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "SPA=Single Page Application https://en.wikipedia.org/wiki/Single-page_application ",
            "id": "comment-15247730"
        },
        {
            "date": "2016-04-19T14:21:06+0000",
            "author": "Jakub Zakrzewski",
            "content": "Yes, it will look like this (or similar to this).\nAs I checked the code one of my ideas would be that\nthe 'Execute Query' button will call the function that changes the URL,\ne.g. in the way: original URL\nhttp://localhost:8983/solr/index.html#/core/query\nchanged URL\nhttp://localhost:8983/solr/index.html#/core/query?query=(encoded_query).\n\nThis pulls the controller, the controller parses the URL and checks if the URL\ncontains the 'query' parameter\nif yes, build a Solr URL and pass it to a service\nif not (default state after clicking the Query menu option) - just display the form, do nothing additional\n\nIt is a question in what form an encoded query will be send, it could be e.g. a Solr URL, that then would be parsed to fill each used field.\n\nedit:\nI have a working solution. How to proceed next?  ",
            "id": "comment-15247823"
        },
        {
            "date": "2016-04-19T16:42:56+0000",
            "author": "Upayavira",
            "content": "Jakub Zakrzewski yes, that's the idea ",
            "id": "comment-15248138"
        },
        {
            "date": "2016-04-23T13:01:06+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Create a patch and upload it to this JIRA.\nAlternatively open a GitHub pull request, mentioning SOLR-9010 in the PR, it will be linked to this one.\n\nOnce the patch/PR is up, you will get feedback from other developers, perhaps a few iterations until it is ready for inclusion. ",
            "id": "comment-15255252"
        },
        {
            "date": "2016-05-03T13:55:53+0000",
            "author": "Jakub Zakrzewski",
            "content": "I don't know how to create a patch.\nI didn't clone the git repository, I just edited the file I have in the solr I use on the local computer.\n\nI have a feeling that for a patch or a pull request the git commands will be needed. And since I didn't get the file through git it might be more time consuming than otherwise.\n\nIs it OK to upload the file to my github profile and link it somewhere (here or on the dev mailing list?). ",
            "id": "comment-15268750"
        },
        {
            "date": "2016-05-03T14:14:24+0000",
            "author": "Jakub Zakrzewski",
            "content": "\nI created a new git repository and uploaded the modified file there. The repository is available under\nhttps://github.com/kbntk/solr-webapp-angular-query-controller ",
            "id": "comment-15268771"
        },
        {
            "date": "2016-05-03T14:23:28+0000",
            "author": "Erick Erickson",
            "content": "Patched from Jakub's repo against trunk.\n\nWARNING: I mechanically replaced the query.js file and generated this patch, I have not checked it and wouldn't know how anyway. ",
            "id": "comment-15268786"
        },
        {
            "date": "2016-05-03T14:37:05+0000",
            "author": "Jakub Zakrzewski",
            "content": "Thank you Erick for creating a patch,\n\nI'm sorry for inconvenience, this path will not work without changing the partials/query.html file by modifying the name of the function being executed after clicking on the \"Execute query\" button.\n\nThe edited partials/query.html file contains:\n<!--\n      <button type=\"submit\" ng-click=\"doQuery()\">Execute Query whoaa</button>\n-->\n      <button type=\"submit\" ng-click=\"submitQuery()\">Submit Query</button>\n\nedit: I uploaded the modified file query.html  to the same repository as the query.js file.\nquery.html is available under\nhttps://github.com/kbntk/solr-webapp-angular-query-controller/tree/master/webapp/web/partials ",
            "id": "comment-15268803"
        },
        {
            "date": "2016-05-03T15:32:40+0000",
            "author": "Erick Erickson",
            "content": "Added the change to query.html. ",
            "id": "comment-15268896"
        }
    ]
}