{
    "id": "SOLR-4725",
    "title": "Should we stop supporting \"name\" and \"dataDir\" in the autodiscover mode?",
    "details": {
        "affect_versions": "4.3,                                            6.0",
        "status": "Closed",
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Implemented"
    },
    "description": "Making this a blocker so we resolve it. Should be quick to code if we have consensus, maybe nothing at all to do here.\n\nI'm not too happy with the fact that the new core discovery process has two real gotcha's. The individual core.properties file can define 'name' and 'dataDir'. It seems too easy to either use the same name for two different cores or use the same dataDir, just copy the core.properties file around and fail to edit one them. In large installations this could be a bear to track down.\n\nStraw-man proposal is the we remove support for them both in discovery mode. The name defaults to the directory in which core.properties is found and the data dir is immediately below there.\n\nCurrently, there are checks to fail to load either core if either 'name' or 'dataDir' is defined in more than one core. I think the error reporting is weak, you probably have to look in the log file and there should be a way to get this in the admin UI at least.\n\nMaybe the right thing to do is just leave it as-is and emphasize that specifying the dataDir and name is expert level and you have to get it right, but I wanted to get wider exposure to the problem before we push 4.3 out.",
    "attachments": {
        "SOLR-4725.patch": "https://issues.apache.org/jira/secure/attachment/12579172/SOLR-4725.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13633703",
            "date": "2013-04-17T03:05:56+0000",
            "content": "I think dataDir should continue to be supported. There is not much reason to rip it.\n\nname should be removed. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13633705",
            "date": "2013-04-17T03:06:16+0000",
            "content": "Currently, there are checks to fail to load either core if either 'name' or 'dataDir' is defined in more than one core. \n\nWhy? You should be able to specify dataDir in more than one core. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13633709",
            "date": "2013-04-17T03:11:54+0000",
            "content": "Okay, wait - you don't mean dataDir in solrconfig.xml.\n\nIn that case, I'm confused...was their explicit support for dataDir in solr.xml before? I thought it was just basic property support so that if you setup solrconfig.xml to take a prop substitution, you could then set those properties in solr.xml with the generic <property setting. We don't need those anymore I think.\n\nAnyway, there doesn't need to be anything specific to the dataDir at the solr.xml level - that should be handled in solrconfig.xml. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13633950",
            "date": "2013-04-17T10:56:38+0000",
            "content": "Neither solr.xml nor solrconfig.xml, I'm talking about an individual <core> attribute. In the old-style solr.xml, you could define these per core.\n\n<core name=\"myname\" dataDir=\"absolute or relative path here\" instanceDir=\"another path\" blah blah />\n\nSo in new-style core.properties file used for discovery it is pretty easy to have more than one core point to the same dataDir or more than one core have the same name just by copy/paste/edit failures. And since they're scattered in a number of different directories rather than concentrated in a single file, harder to find. And we didn't help them find the problem either, this condition was never checked for.\n\nNote that we've always allowed someone to shoot themselves in the foot this way, now I just think it's easier to do and harder to find in discovery mode. Actually SOLR-4662 refuses to load cores that violate either of these constraints. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634034",
            "date": "2013-04-17T13:52:30+0000",
            "content": "Neither solr.xml nor solrconfig.xml,\n\nThat was solr.xml - got you - didn't realize that dataDir was an explicit option on top of the ability to do <property>  - we don't want that. DataDir should only be specified in solrconfig.xml and overridable with sys prop substitution.\n\nOtherwise, we should let multiple cores point to the same data dir - perhaps someone is doing something all read only and only wants one. That's fine. The lock factory is there for to protect you from shooting yourself in the foot by accident.  "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13634306",
            "date": "2013-04-17T18:47:53+0000",
            "content": "Preliminary patch to coordinate with SOLR-4662 changes Mark is doing "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13634381",
            "date": "2013-04-17T20:28:13+0000",
            "content": "Well, I'll just close 4725 after this gets checked in, I duplicated what you did. You chose much better names for some of the methods, insureFail was a really stupid name...\n\nI do have two questions though:\n1> in coreContainer, do we really want to default persistence to true if it's not present? (about line 460)?\n2> ConfigSolr.addCore[475 or so], I was thinking of removing the failure case and just logging a warning for two cores having the same name on the theory that changing this behavior in old-style solr.xml (which this case is) might be too risky at this point. We can just let it die a natural death when we stop supporting the old-style solr.xml. I don't have strong feelings one way or the other though.\n\nOK, I have to leave in 1/2 hour. I'll check in first thing in the morning, let me know if there's anything I should be doing here or if you've checked it all in. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634401",
            "date": "2013-04-17T20:38:19+0000",
            "content": "1> in coreContainer, do we really want to default persistence to true if it's not present? (about line 460)?\n\nNo, I was more curious than anything and missed dropping the change - I think we do would want to do that, but we don't want to change that behavior for hte old style now. I'll remove that change.\n\nbq 2\n\nIt's up to you - your argument makes sense to me.\n\nI'll remove 1 and commit and lets push on from there. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13634429",
            "date": "2013-04-17T20:54:02+0000",
            "content": "If you get rid of the name attribute, how do you decide what the name of the core is?  Is it the name of the directory that contains core.properties?\n\nWhat happens if you issue a SWAP or RENAME action and don't have a name attribute?  The logical thing would be to rename the directory, but if you're on Windows, you can't do that as long as any process (not just Solr) has anything open anywhere in the entire directory tree. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634432",
            "date": "2013-04-17T21:00:02+0000",
            "content": "I focused so much on dataDir, I didn't even really consider name (also hadn't just been in the code as I have been now).\n\nI agree that support for name should remain in the properties - and that as it does at the moment, if it's absent, we just default it to the dir name. Perhaps we should populate the properties file with it as well, and not count on the dir name over time. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13634500",
            "date": "2013-04-17T22:02:31+0000",
            "content": "If you have cores that don't have explicit name attributes, I think that a message should be logged saying that certain API actions like SWAP and RENAME will not be available.  I don't know if it should be WARN or INFO.  It would be OK if the message is only logged when the core is first loaded, not on RELOAD.  Similarly, those actions should not be allowed when the name attribute is missing from cores named on the API call in the 'core' and 'other' parameters.  If they are attempted an ERROR should be logged and returned in the http response.\n\nOr we could avoid that whole can of worms by making the name attribute mandatory, pretty much the exact opposite of this issue. \n\nThe dataDir parameter is currently optional.  There was a problem with RENAME on the mailing list today where a user had all their cores sharing the same instanceDir, but dataDir was missing on all of them.  I will go ahead and file an issue for that.  Is sharing an instanceDir possible with automatic core discovery? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13634505",
            "date": "2013-04-17T22:08:48+0000",
            "content": "I think that a message should be logged saying that certain API actions like SWAP and RENAME will not be available\n\n-1, these should not become unavailable because of something like that.\n\ncores named on the API call in the 'core' and 'other' parameters. \n\nThat is irrespective of this issue - the name is a required param for core admin calls. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13634740",
            "date": "2013-04-18T01:27:52+0000",
            "content": "Currently, the logic (discovery mode) is that if the name property is NOT present, the name defaults to the directory that contains core.properties. If name is present, then it's used.\n\nNone of this JIRA is about whether or not to have a name attribute, it's all about if the name parameter is specified in two different properties files and is the same in both. E.g. your setup is\nsolrhome/core1/core.properties contains the attribute name=foo\nand\nsolrhome/core2/core.properties contains the attribute name=foo\n\nWhat's the correct thing to do?\n\nI claim that this probably wasn't intended; there's no good way to dis-entangle this knot so we should fail to open either core, forcing the user to straighten this out b/c it certainly (IMO) is an error.\n\nI think the current behavior with the <core> tags in solr.xml is that last one wins, but which one is last depends on the vagaries of the XML parser, deterministic, but not necessarily easy to figure out.\n\nNot quite sure what the right thing to do in terms of persisting the name if it's not present originally, I can see the advantage of doing that though. Might even happen automagically, I'd have to look back at the persist code again. \n\nNor would I be averse to making the name attribute mandatory, although I haven't thought it through thoroughly. JIRA's welcome. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13635188",
            "date": "2013-04-18T14:11:06+0000",
            "content": "Resolved by changes to SOLR-4662 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653928",
            "date": "2013-05-10T10:33:26+0000",
            "content": "Closed after release. "
        }
    ]
}