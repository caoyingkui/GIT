{
    "id": "SOLR-10628",
    "title": "Less verbose output from bin/solr commands",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "scripts and tools"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.1",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Creating a collection with bin/solr create today is too verbose:\n\n$ bin/solr create -c foo\n\nConnecting to ZooKeeper at localhost:9983 ...\nINFO  - 2017-05-08 09:06:54.409; org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider; Cluster at localhost:9983 ready\nUploading /Users/janhoy/git/lucene-solr/solr/server/solr/configsets/data_driven_schema_configs/conf for config foo to ZooKeeper at localhost:9983\n\nCreating new collection 'foo' using command:\nhttp://localhost:8983/solr/admin/collections?action=CREATE&name=foo&numShards=1&replicationFactor=1&maxShardsPerNode=1&collection.configName=foo\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":4178},\n  \"success\":{\"192.168.127.248:8983_solr\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":2959},\n      \"core\":\"foo_shard1_replica1\"}}}\n\n\n\nA normal user don't need all this info. Propose to move all the details to verbose mode (-V) and let the default be the following instead:\n\n\n$ bin/solr create -c foo\nConnecting to ZooKeeper at localhost:9983 ...\nCreated collection 'foo' with 1 shard(s), 1 replica(s) using config-set 'data_driven_schema_configs'\n\n\n\nError messages must of course still be verbose.",
    "attachments": {
        "SOLR-10628.patch": "https://issues.apache.org/jira/secure/attachment/12877449/SOLR-10628.patch",
        "SOLR-10628-loglevel-fix.patch": "https://issues.apache.org/jira/secure/attachment/12883855/SOLR-10628-loglevel-fix.patch",
        "SOLR-10628-loglevel-fix_jan.patch": "https://issues.apache.org/jira/secure/attachment/12884131/SOLR-10628-loglevel-fix_jan.patch",
        "solr_script_outputs.txt": "https://issues.apache.org/jira/secure/attachment/12878090/solr_script_outputs.txt",
        "updated_command_output.txt": "https://issues.apache.org/jira/secure/attachment/12878374/updated_command_output.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-10T22:12:00+0000",
            "content": "+1 to a verbose (-V) option as long as the \"short\" form provides success/failure feedback as you've indicated it will. ",
            "author": "Cassandra Targett",
            "id": "comment-16005540"
        },
        {
            "date": "2017-07-15T14:22:22+0000",
            "content": "Patch demonstrating how this could be done.  Tests/precommit pass.\n\nNotes\n\n\tWhen Solr starts up, it looks at the solr.log.level system property, and overrides the configured log-level based on that.  This patch adds similar logic to SolrCLI (but based on a \"verbose\" flag instead of solr.log.level).  I did the log-level overriding in this patch the same way Solr does it on startup: via a direct call to the \"forbidden\" LogManager log4j class (which then requires a SuppressForbidden annotation).  This might be OK, since it lines up with precedent elsewhere.  But it might be nice to find a better way to override the log level.  Happy to receive some direction on that.  See StartupLoggingUtils for more context\n\n ",
            "author": "Jason Gerlowski",
            "id": "comment-16088617"
        },
        {
            "date": "2017-07-18T08:43:25+0000",
            "content": "I tested it and it looks nice. I started on a patch myself and it looks very similar \n\nOutput with your patch is:\n\n$ bin/solr create -c foo\nWARNING: Using _default configset. Data driven schema functionality is enabled by default, which is\n         NOT RECOMMENDED for production use.\n\n         To turn it off:\n            curl http://localhost:8983/solr/foo/config -d '{\"set-user-property\": {\"update.autoCreateFields\":\"false\"}}'\n\nConnecting to ZooKeeper at localhost:9983 ...\nCreated collection 'foo' with 1 shard(s), 1 replica(s) with config-set 'foo'\n\n\n\nI'd like to shorten it further\n\n\tDon't need ZK connection msg in non-verbose\n\tThe WARNING for _default config set could be shorter and avoid curl, but we could create another JIRA for that.\n\n ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16091296"
        },
        {
            "date": "2017-07-18T18:18:25+0000",
            "content": "Oh, sorry to overlap your effort.  I'm never sure whether to interpret the \"Assigned\" field as meaning: \"I'm actively working on this\", or \"I'm interested enough in this to start it eventually, or will review whatever someone else comes up with\".  Different people seem to mean different things.\n\nAnyways, I've made the change you suggested regarding the \"Connecting to ZooKeeper\" output.  Feel free to use your own version if you prefer it.\n\nTests and precommit still pass. ",
            "author": "Jason Gerlowski",
            "id": "comment-16091936"
        },
        {
            "date": "2017-07-18T19:23:25+0000",
            "content": "No problem. I normally assign it when I plan to drive it forward, and sometimes I do \"Start progress\" for issues I'm actively working on. But different devs do it differently.\n\nWill probably build off of your patch. In the meantime, if you like you could inspect the other commands and see if you could extend the patch to also make those outputs nicer.\n\nPS: I created SOLR-11108 for shortening the WARNING message. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16092040"
        },
        {
            "date": "2017-07-20T04:39:08+0000",
            "content": "I've attached a text file with the \"normal\" output for each of the bin/solr commands.  Figured it'd be a useful reference as we're tweaking the normal and \"verbose\" outputs.\n\nSome notes on the attached outputs:\n\n\n\tmany commands have identical \"Connecting to ZooKeeper at\" lines that probably best belong in verbose mode.  We should probably change each of these to verbose-mode-only\n\tstart/stop/restart have a \"... waiting up to 180 seconds\" message.  We could move this to verbose mode, though my personal opinion is that it's helpful enough to leave as-is for those commands.  I'll defer to your preference though if you'd like to see that changed to display only in \"verbose\" mode.\n\tdelete has output very similar to create (without our patch).  I'd propose we should make the same changes to delete as we did to create\n\tauth is pretty chatty.  I'd propose we move the printing of security.json to only occur in verbose mode.\n\n\n\nI'll plan on uploading a patch tomorrow with the tentative changes mentioned above, pending feedback from anyone here.\n ",
            "author": "Jason Gerlowski",
            "id": "comment-16094161"
        },
        {
            "date": "2017-07-20T11:12:11+0000",
            "content": "Thanks for a constructive approach. I agree with all your notes above. In addition, the zk-ls non-verbose output could probably be:\n\n  [~/c/l/solr] $ bin/solr zk ls -z localhost:9983 /configs\n  _default\n  first_loaded_config\n\n\nThat way it could also be used in scripts more easily, as for collection in $(bin/solr zk ls -z localhost:9983 /collections); do bin/solr delete -c $collection; done  ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16094537"
        },
        {
            "date": "2017-07-21T17:06:14+0000",
            "content": "Attached a patch with the changes discussed above.\n\nAlso attached a text file with examples of the new outputs, just in case there was any miscommunication. ",
            "author": "Jason Gerlowski",
            "id": "comment-16096533"
        },
        {
            "date": "2017-08-09T03:29:14+0000",
            "content": "Latest patch makes similar changes to solr.cmd, the Windows version of the script.\n\nI did test out each command on a borrowed Windows box to verify that the output looked appropriate.  That said, I'd appreciate it if anyone could give me a double check on the Windows side of things, as I'm not nearly as familiar with the subtleties of the Windows batch scripting language as I am with bash.\n\nTests and precommit pass. ",
            "author": "Jason Gerlowski",
            "id": "comment-16119364"
        },
        {
            "date": "2017-08-17T02:52:32+0000",
            "content": "Hey Jan H\u00f8ydahl, you have a chance to take a look at this anytime coming up?  (I'm fine with letting this sit; I just wanted to make sure it didn't get lost by accident in the bustle) ",
            "author": "Jason Gerlowski",
            "id": "comment-16129800"
        },
        {
            "date": "2017-08-22T09:24:29+0000",
            "content": "Attaching updated patch\n\n\tCall StartupLogginUtils.changeLogLevel to keep log modification in one place. Also moved that class to o.a.s.util and made it public\n\tTested on my Mac, works like a charm\n\n\n\nThanks Jason, I'll commit this now for 7.1 ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16136561"
        },
        {
            "date": "2017-08-22T10:51:09+0000",
            "content": "Commit b67424ee5875f4b2028763a17fc0f446e460a9f9 in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b67424e ]\n\nSOLR-10628: Less verbose output from bin/solr commands ",
            "author": "ASF subversion and git services",
            "id": "comment-16136629"
        },
        {
            "date": "2017-08-22T10:53:05+0000",
            "content": "Commit 3280c2deeb8d058326c6f177203d478b9390cbbf in lucene-solr's branch refs/heads/branch_7x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3280c2d ]\n\nSOLR-10628: Less verbose output from bin/solr commands\n\n(cherry picked from commit b67424e) ",
            "author": "ASF subversion and git services",
            "id": "comment-16136631"
        },
        {
            "date": "2017-08-24T17:05:50+0000",
            "content": "This hcange seems to have broken at least one (probably) 2 unrelated Solr tests because of how the SolrCLI class now assumes it should change the default log level to WARN \u2013 and when CLI related tests run SolrCLI, nothing resets the log level.\n\nTests such as UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping require INFO level logging in order to test that the logging related update processors work.\n\nThe following tests all execute an instance of SolrCLI, which means they all (now, with SOLR-10628 in place) muck with the stats of the (global) slf4j Logger in the JVM that runs these tests...\n\n\nhossman@tray:~/lucene/dev/solr [master] $ find core/src/test -name \\*.java | xargs grep -l SolrCLI \ncore/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java\ncore/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest.java\ncore/src/test/org/apache/solr/cloud/SolrCloudExampleTest.java\ncore/src/test/org/apache/solr/util/TestSolrCLIRunExample.java\ncore/src/test/org/apache/solr/util/UtilsToolTest.java\n\n\n\n...so if UpdateRequestProcessorFactoryTest runs in the same JVM after one of those tests, it will fail.\n\njust like changing system properties, or any other \"static\" variable in the JVM, tests that are going to explicitly (or implicitly) modify \"static global\" state of the JVM (in this case: the slf4j logging level) need to ensure that gets reset at the end of the test.\n\nExample of current failure(s)...\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=UpdateRequestProcessorFactoryTest\n-Dtests.method=testUpdateDistribChainSkipping -Dtests.seed=CC8B32DFC6FE1FB8 -Dtests.slow=true -Dtests.locale=tr\n-Dtests.timezone=America/Winnipeg -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.01s J1 | UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: Tests must be run with INFO level logging otherwise\nLogUpdateProcessor isn't used and can't be tested.\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([CC8B32DFC6FE1FB8:BD6FCC09B0153874]:0)\n   [junit4]    >        at\norg.apache.solr.update.processor.UpdateRequestProcessorFactoryTest.testUpdateDistribChainSkipping(UpdateRequestProce\nssorFactoryTest.java:101)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:748)\n   [junit4]   2> NOTE: leaving temporary files on disk at:\n/Users/jenkins/workspace/Lucene-Solr-7.x-MacOSX/solr/build/solr-core/test/J1/temp/solr.update.processor.UpdateReques\ntProcessorFactoryTest_CC8B32DFC6FE1FB8-001\n   [junit4]   2> NOTE: test params are: codec=CheapBastard, sim=RandomSimilarity(queryNorm=false): {}, locale=tr,\ntimezone=America/Winnipeg\n   [junit4]   2> NOTE: Mac OS X 10.11.6 x86_64/Oracle Corporation 1.8.0_144\n(64-bit)/cpus=3,threads=1,free=73087784,total=255750144\n   [junit4]   2> NOTE: All tests run in this JVM: [TestCloudManagedSchema, TestRawTransformer,\nOpenCloseCoreStressTest, SchemaVersionSpecificBehaviorTest, DistributedSuggestComponentTest, ZkStateWriterTest,\nSegmentsInfoRequestHandlerTest, SolrCloudExampleTest, TestUninvertingReader, TestFastWriter, UpdateLogTest,\nTestDynamicFieldResource, CoreSorterTest, TestStressUserVersions, DistributedQueueTest,\nChaosMonkeyNothingIsSafeWithPullReplicasTest, TestIndexSearcher, TestLMJelinekMercerSimilarityFactory,\nTestNumericRangeQuery64, BlockJoinFacetDistribTest, TestDistributedMissingSort, TestChildDocTransformer,\nTestDefaultStatsCache, TestLegacyNumericUtils, TestReloadDeadlock, HttpSolrCallGetCoreTest, TestMaxScoreQueryParser,\nTestFiltering, TestConfigSetProperties, ConnectionReuseTest, TestClusterStateMutator, DistanceUnitsTest,\nFieldMutatingUpdateProcessorTest, JsonLoaderTest, CloneFieldUpdateProcessorFactoryTest, AssignTest,\nTestReRankQParserPlugin, BasicFunctionalityTest, HdfsBasicDistributedZkTest, OpenExchangeRatesOrgProviderTest,\nInfixSuggestersTest, TestPullReplica, PropertiesRequestHandlerTest, SolrCloudReportersTest,\nDistributedTermsComponentTest, CoreAdminRequestStatusTest, HttpPartitionTest, TestGraphMLResponseWriter,\nTestManagedSchema, SystemInfoHandlerTest, TestInitQParser, TestSSLRandomization, TestPushWriter,\nHdfsChaosMonkeySafeLeaderTest, TermVectorComponentTest, DistributedFacetExistsSmallTest, SolrGraphiteReporterTest,\nTestRealTimeGet, UpdateRequestProcessorFactoryTest]\n   [junit4] Completed [127/731 (1!)] on J1 in 0.55s, 3 tests, 1 failure <<< FAILURES!\n\n\n\nI suspect this is also related based on the timing of when the failures started and the test name, but i'm not as familiar with this code so i'm not 100% certain...\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=SolrSlf4jReporterTest -Dtests.method=testReporter\n-Dtests.seed=63159D0C0E6136F5 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=de-GR\n-Dtests.timezone=America/Swift_Current -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] FAILURE 6.44s J1 | SolrSlf4jReporterTest.testReporter <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: No 'solr.node' logs in: {numFound=0,start=0,docs=[]}\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([63159D0C0E6136F5:3CF1B03B656DA5B0]:0)\n   [junit4]    >        at\norg.apache.solr.metrics.reporters.SolrSlf4jReporterTest.testReporter(SolrSlf4jReporterTest.java:85)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:748)\n   [junit4]   2> 1294557 INFO  (SUITE-SolrSlf4jReporterTest-seed#[63159D0C0E6136F5]-worker) [    ]\no.a.s.SolrTestCaseJ4 ###deleteCore\n   [junit4]   2> NOTE: leaving temporary files on disk at:\n/home/jenkins/workspace/Lucene-Solr-master-Linux/solr/build/solr-core/test/J1/temp/solr.metrics.reporters.SolrSlf4jR\neporterTest_63159D0C0E6136F5-001\n   [junit4]   2> NOTE: test params are: codec=SimpleText, sim=RandomSimilarity(queryNorm=false): {}, locale=de-GR,\ntimezone=America/Swift_Current\n   [junit4]   2> NOTE: Linux 4.10.0-27-generic i386/Oracle Corporation 1.8.0_144\n(32-bit)/cpus=8,threads=1,free=235294520,total=358612992\n   [junit4]   2> NOTE: All tests run in this JVM: [StatelessScriptUpdateProcessorFactoryTest, TestQueryTypes,\nDeleteInactiveReplicaTest, DataDrivenBlockJoinTest, OverseerTaskQueueTest, AlternateDirectoryTest, TestRestManager,\nCollectionsAPISolrJTest, HighlighterTest, TestSchemaNameResource, StatsReloadRaceTest, TestLegacyFieldReuse,\nOverseerModifyCollectionTest, SubstringBytesRefFilterTest, EnumFieldTest, TestSchemaVersionResource,\nMoveReplicaTest, CollectionsAPIDistributedZkTest, TestCoreContainer, ScriptEngineTest, TestMiniSolrCloudClusterSSL,\nSolrMetricReporterTest, TestTrackingShardHandlerFactory, TestCloudDeleteByQuery, TestGraphMLResponseWriter,\nTestPostingsSolrHighlighter, MetricUtilsTest, TestXIncludeConfig, SpatialFilterTest, TestTlogReplica,\nHdfsChaosMonkeySafeLeaderTest, TestSolrCLIRunExample, TestPayloadScoreQParserPlugin, TestCloudManagedSchema,\nClusterStateUpdateTest, TestReloadDeadlock, ShardRoutingCustomTest, RemoteQueryErrorTest,\nDistributedIntervalFacetingTest, ClassificationUpdateProcessorTest, LoggingHandlerTest, TestFieldResource,\nLargeFieldTest, TestReplicationHandlerBackup, AnalysisAfterCoreReloadTest, TestDocBasedVersionConstraints,\nAssignBackwardCompatibilityTest, BlobRepositoryCloudTest, TestSolrFieldCacheBean, WrapperMergePolicyFactoryTest,\nTestSweetSpotSimilarityFactory, TestRTGBase, TestChildDocTransformer, SoftAutoCommitTest, CoreAdminHandlerTest,\nCollectionStateFormat2Test, TestLeaderInitiatedRecoveryThread, TestDFISimilarityFactory, TestBM25SimilarityFactory,\nDistribCursorPagingTest, TestSystemIdResolver, TestAtomicUpdateErrorCases, SharedFSAutoReplicaFailoverUtilsTest,\nBasicFunctionalityTest, TestSolrConfigHandler, TestMaxTokenLenTokenizer, JSONWriterTest,\nTestSolrCloudWithHadoopAuthPlugin, TestClusterStateMutator, DistributedSuggestComponentTest,\nTermVectorComponentTest, TestSearchPerf, TestSolrCloudWithDelegationTokens, TestSha256AuthenticationProvider,\nTestRandomRequestDistribution, ResponseHeaderTest, TestCoreDiscovery, TestSolrConfigHandlerConcurrent,\nTestMaxScoreQueryParser, ForceLeaderTest, MoreLikeThisHandlerTest, CdcrReplicationHandlerTest,\nTestReloadAndDeleteDocs, TestAuthorizationFramework, TestInfoStreamLogging, CleanupOldIndexTest,\nDistanceFunctionTest, TestExactSharedStatsCache, TestNumericTokenStream, TestSolrJ, BitVectorTest,\nTestCloudSearcherWarming, ConvertedLegacyTest, SchemaVersionSpecificBehaviorTest, ZkCLITest, BadCopyFieldTest,\nHLLSerializationTest, TestSolrCoreSnapshots, TestSolrIndexConfig, ZkFailoverTest, ConnectionReuseTest,\nTestRawResponseWriter, SolrCloudExampleTest, HdfsSyncSliceTest, TestTrieFacet, BlockJoinFacetDistribTest,\nAtomicUpdatesTest, TestFuzzyAnalyzedSuggestions, TestSmileRequest, SliceStateTest, OpenCloseCoreStressTest,\nTestCollectionsAPIViaSolrCloudCluster, TestFieldCacheReopen, SolrSlf4jReporterTest]\n   [junit4] Completed [353/732 (1!)] on J1 in 6.48s, 1 test, 1 failure <<< FAILURES!\n\n\n ",
            "author": "Hoss Man",
            "id": "comment-16140322"
        },
        {
            "date": "2017-08-24T17:39:20+0000",
            "content": "Ah, yikes.  My apologies.  I'll push up a patch this evening that resets the logging level in the tests you mentioned above.\n\nI'm not sure what the issues is with SolrSlf4jReporterTest, but I'll investigate how that could be related too. ",
            "author": "Jason Gerlowski",
            "id": "comment-16140370"
        },
        {
            "date": "2017-08-26T03:55:53+0000",
            "content": "The following patch ensures that SolrCLI restores the previous log-level when it finishes execution of any of the tools that attempt to change the log-level.  (This seemed like a better fix than just patching the tests to force-set the correct log-level in each one).\n\nFor reviewers: the patch looks larger than the actual change, which just wraps many ToolBase.runImpl() implementations in a try-finally, to ensure the log-level is reset properly.  The indentation changes account for most of the diff.\n\nPrecommit and tests pass.\n\nStill looking into the other maybe/probably-related test failure.  Don't have many theories on that one yet.  Hope to have more time to examine it now that the weekend is here. ",
            "author": "Jason Gerlowski",
            "id": "comment-16142598"
        },
        {
            "date": "2017-08-26T12:18:34+0000",
            "content": "Digging into the SolrSlf4jReporterTest failures, I'm pretty certain it is also related to SolrCLI changing the log-level global state for all subsequent tests.  Note that the failed test output in your comment above confirms that a SolrCLI-using test was run in the same JVM earlier on (SolrCloudExampleTest).  Additionally, when you put in a BeforeClass in that test which changes the log-level, the test fails reproducibly with the same error reported above.\n\nSo the patch attached last night( SOLR-10628-loglevel-fix.patch) should resolve both of these issues. ",
            "author": "Jason Gerlowski",
            "id": "comment-16142785"
        },
        {
            "date": "2017-08-28T06:39:34+0000",
            "content": "I'm looking into a solution in SolrTestCaseJ4 as an alternative. There is already a savedClassLogLevels in place to restore log levels when overridden via annotations. We could inject the same kind of check for root log level in setupTestCases and teardownTestCases which should generically safeguard against any code modifying global log levels. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16143429"
        },
        {
            "date": "2017-08-28T21:22:51+0000",
            "content": "Have a look at SOLR-10628-loglevel-fix_jan.patch. Minimal solution that takes Jason's remeber/restore logic and puts it into two lines in SolrTestCaseJ4.\n\nAs I read the comments here this should solve the test failures, but I have not done any beasting to validate. Hoss, what do you think? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16144372"
        },
        {
            "date": "2017-08-29T02:51:50+0000",
            "content": "I like the approach in the new patch (it's embarassingly simpler than my approach), but when I apply it on top of master it doesn't seem to be resetting the log-level as expected.  Putting a print-statement at the very end of the SolrTestCaseJ4 AfterClass shows that the log-level is still WARN after BasicAuthIntegrationTest, or any of the others run.\n\nHaven't wrapped my head around \"why\" yet... ",
            "author": "Jason Gerlowski",
            "id": "comment-16144675"
        },
        {
            "date": "2017-08-29T03:04:20+0000",
            "content": "Ah, figured it out, the \"getLogLevel\" method in the patch had a bug in it:\n\n\n+  /**\n+   * Return a string representing the current static ROOT logging level\n+   * @return a string TRACE, DEBUG, WARN, ERROR or INFO representing current log level. Default is INFO\n+   */\n+  public static String getLogLevelString() {\n+    final Logger rootLogger = LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);\n+    if (rootLogger.isTraceEnabled()) return \"TRACE\";\n+    else if (rootLogger.isDebugEnabled()) return \"DEBUG\";\n+    else if (rootLogger.isWarnEnabled()) return \"WARN\";\n+    else if (rootLogger.isErrorEnabled()) return \"ERROR\";\n+    else if (rootLogger.isInfoEnabled()) return \"INFO\";\n+    else return \"INFO\";\n+  }\n\n\n\nThe above logic will return \"WARN\" when the log level is set to INFO.  (This is because isXEnabled returns true if the log-level is <= X ).  To correct this logic, the severity level clauses need to be ordered in increasing order (the isInfoEnabled line needs to come above the isWarnEnabled line).\n\nI've tested this on single test runs and verified that the correct log-level is getting cached/reset.  Running longer test runs now before uploading a modified patch. ",
            "author": "Jason Gerlowski",
            "id": "comment-16144680"
        },
        {
            "date": "2017-08-29T07:53:22+0000",
            "content": "Ah, I messed around with the order when adding the default=INFO logic, sorry. \n\nOn a side note I'm not sure if the fallback of returning INFO will ever be reached, unless someone configures a log4j level \"OFF\", in which case it would be wrong to restore to \"INFO\". But I don't think this is an issue for tests anyway. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16144887"
        },
        {
            "date": "2017-08-29T11:35:42+0000",
            "content": "Made the small tweak I described last night to Jan's base.  Ran 5 test runs and all came up green for this issue.  So looking good. ",
            "author": "Jason Gerlowski",
            "id": "comment-16145145"
        },
        {
            "date": "2017-08-29T11:41:03+0000",
            "content": "Thanks. Will commit last patch tomorrow if no objections. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16145156"
        },
        {
            "date": "2017-08-30T19:00:50+0000",
            "content": "Commit c4a1bd52e9b9bf47da1b621023590e0d012f43b7 in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c4a1bd5 ]\n\nSOLR-10628: Fix test failures due to global log level change ",
            "author": "ASF subversion and git services",
            "id": "comment-16147846"
        },
        {
            "date": "2017-08-30T19:20:00+0000",
            "content": "Commit 4e4b12ec34c91349b8293b2c33f375161e7e73c1 in lucene-solr's branch refs/heads/branch_7x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4e4b12e ]\n\nSOLR-10628: Fix test failures due to global log level change\n\n(cherry picked from commit c4a1bd5) ",
            "author": "ASF subversion and git services",
            "id": "comment-16147870"
        },
        {
            "date": "2017-10-17T11:04:19+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16207455"
        }
    ]
}