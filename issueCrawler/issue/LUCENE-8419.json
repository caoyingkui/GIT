{
    "id": "LUCENE-8419",
    "title": "Return token unchanged for pathological Stempel tokens",
    "details": {
        "components": [
            "modules/analysis"
        ],
        "status": "Open",
        "resolution": "Unresolved",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "New Feature"
    },
    "description": "In the aggregate, Stempel does a good job, but certain tokens get stemmed pathologically, conflating completely unrelated words in the search index. Depending on the scoring function, documents returned may have no form of the word that was in the query, only unrelated forms (see \u0107 examples below).\n\nIt's probably not possible to fix the stemmer, and it's probably not possible to catch every error, but catching and ignoring certain large classes of errors would greatly improve precision, and doing it in the stemmer would prevent losses to recall that happen from cleaning up these errors outside the stemmer.\n\nAn obvious example is that numbers ending in 1 have the last two digits replaced with \u0107. So 12341 is stemmed as 123\u0107. Numbers ending in 31 have the last 4 numbers removed and replaced with \u0107, so 12331 is stemmed as 1\u0107. Mixed letters and numbers are treated the same: abc123451 is stemmed as abc1234\u0107, abc1231 is stemmed as abc\u0107.\n\nProposed solution: any token that ends in a number should not be stemmed, it should just be returned unchanged.\n\nOne letter stems from the set [a-z\u0144\u0107] are generally useless and often absurd.\n\n\u0107 is the worst offender by far (it's the ending of the infinitive form of verbs). All of these tokens (found on Polish Wikipedia/Wiktionary) get stemmed to \u0107:\n\n\tacque Adrien aguas \u00c1guas Alainem Alandh Amores Ansoe Arau asinaio a\u016ddas audyt Awiwie Ayres Baby bad\u017c Baina Bains Balue Baon baque Barbola Bazy Beau beim Beroe Betz Blaue blenda bleue Blizzard boor Boruca Boym Brod\u0142a Brogi Bronksie Bryd\u017c Budgie Budiafa bujny Buon Buot Button Caan Cains Canoe Canona caon Celu Charl Chloe ciag Cioma Cmdr Conseil Conso Cotton Cramp Creel Cuyk cyan czci\u0105 Czermny czto D.III Daws Daxue dazzle decy Defoe Dere\u0144 Detroit digue Dior Ditton Dojlido dosei douk DRaaS drag drau Dudacy dudas Dutton Duty Dzi\u00f3b eayd Edwy Edyp eiro Eltz Emain erar ESaaS faan Fetz figurar Fitz foam Frau Fugue GAAB gaan Gabirol Gaon gasue Gaup Geol GeoMIP Getz gigue Ginny Gioi\u0105 Girl Goam Go\u0142ymin Gosei G\u00f6tz grasso Grodnie Gula Guroo gyan HAAB Haan Heim H\u00e9roe Hitz Hoam Hohenho Hosei Huon Hutton Huub hyaina Iberii inkuby Inoue Issue ITaaS Iudas Izmaile Jaan Jaws jedyn Jews jira Josepho Jost Josue Judas Kaan Kaleido Karoo Katz Kazue Kehoe khayag kiwa Kiwu Klaas kmdr Kokei Konoe kozer kpi\u0105 Kringle ksiezyce Kt\u00f3\u017c Kutz L231 L331 Laan Lalli Laon Laws \u0142ebka Leroo Liban Ligue Liro Lisoli Logue Loja Londyn Lubomyr Luque Lutz Lytton \u0142zawy Maan mains Mainy malpaco Mammal mandag MBaaS meeki Merl Metz MIDAS middag Miras mmol mod\u0105 moins Monty Mory\u0144 motz mr\u00f3\u017c Mutz M\u00fczesi MVaaS Naam nabrze\u017ca Nadab Nadala Nalewki Nd:YAG neol News Nieszawa Nimue Nyam \u00d6AAB obla\u0142 oddala okala Olie\u0144 opar oppi Orio\u0142 Osio\u0142 osoagi Osyki Ot\u00f3\u017c Output Oxalido pasmow\u0105 Patton Pearl Peau peoplk Petz poar Pobrze\u017ca poecie Pogue Pono posagi pos\u0142 Praha Pringle probie progi Pro\u0144ko Prosper prwd\u0119 Psio\u0142 Pu\u0142ka Putz QDTOE Quien Qwest rad\u017ca raga Rains reht Reich Retz Revue Right RITZ Roam Rogue Roque rosii RU31 Rutki Ryan SAAB saasso salue Sampaio Satz Sears Sekisho semo Setton Sgan Siloe Sitz Skopje Slot \u0160marje Smrkci Soar sopo sozinho springa Steel Stip Straz Strip Suez sukuby Sumach Surgucie Sutton svasso Szos\u0105 szto Tadas Taira t\u0119czy Teodor\u0105 teol Tisii Tisza Toluca Tomoe Toque TPM\u017b Traiana Trask Traue Tulyag Tuque Turinga Undas Uniw usque Vague Value Venue Vidas Vogue Voor W331 Waringa weht Weich Weija Wheel widmem WKAG worku Wotton Wryk Wschowie wsiach wsiami Wybrze\u017ca wydala Wyraz XLIII XVIII XXIII Yaski yeol YONO Yorki zakr\u0119cie Zijab zipo.\n\n\n\nFour-character tokens ending in 31 (like 2,31 9,31 1031 1131 7431 8331 a331) also all get stemmed to \u0107.\n\nBelow are examples of other tokens (from Polish Wikipedia/Wiktionary) that get stemmed to one-letter tokens in [a-z\u0144\u0107]. Note that i, o, u, w, and z are stop words, and so don't show up in the list.\n\n\ta: a, addo, adygea, jhwh, also\n\tb: b, bdrm, barr, bebek, berr, bounty, bures, burr, berm, birm\n\tc: alzira, c, carr, county, haight, hermas, kido\u0144, paich, pieter, po\u0142\u00f3\u017c, rado\u0144, soest, tatort, voight, zaba, biegn\u0105, poka\u017c, wska\u017c, zoisyt\n\td: award, d, dlek, deeb\n\te: e, eddy, eloi\n\tf: f, farr, firm\n\tg: g, geagea, grunty, gwdy, gyro, g\u00f3r\u0105\n\th: h\n\ti: inre, isro\n\tj: j, judo\n\tk: k, kgtj, kpzr, karr, kerr, ksok\n\tl: l, leeb, loeb\n\tm: m, magazyn, marr, mayor, merr, mnsi, murr, mg\u0142y, najmu\n\tn: johnowi, n\n\to: obzr, offy\n\tp: p, pace, paoli, parr, pasji, pawe\u0142ek, pyro, pirsy, plmb\n\tq: q\n\tr: r, rite, rrek\n\ts: s, sarr, site, sowie, szok\n\tt: le\u017anie, t, tnsw, tooi\n\tu: noite\n\tw: wmro, warr, wifi, wyspom, w\u0105tki\n\tx: x\n\ty: jeste\u015b, lafleur, nate, nowsze, violeur, y, yach, douleur\n\tz: czok, skrawek\n\t\u0144: cisew, esso\n\n\n\nAll other one-character stems I have encountered have been for one-character input tokens (especially those in other writing systems).\n\nProposed solution: if a token gets stemmed to a one-letter stem (either in general, or specifically if the letter is one of [a-z\u0144\u0107]), the input token should be returned unchanged.\n\nThere are other patterns of unreliable stems, though the ones above are the worst.\n\nTwo-letter stems are generally unreliable (see attachement twoletter.txt). The specific stems my, um, \u0105c, and \u0142y are particularly random.\n\nTwo- and three-letter stems fitting the patterns .\u0107 and ..\u0107 are generally not useful (see attachments dotc.txt and dotdotc.txt for full lists of examples). The specific stems a\u0107, e\u0107, y\u0107, \u0105\u0107, \u015b\u0107, and \u017a\u0107 are particularly random.\n\nThe specific stems owa\u0107, iwa\u0107, obi\u0107, sn\u0105\u0107, ywa\u0107, ium also stand out as egregious:\n\n\tium: IIIC, Treze\n\tiwa\u0107: Blefa, Crew, Iwano, Krall, Leseur, Maksiu, Stefa, Wrycz, cygar, horou\n\tobi\u0107: Dawka, Obi\u0142o, dawka, obicia, obito\n\towa\u0107: Abdou, Bangu, Beess, Biblie, Birmie, Bohle, Bredy, Budd\u0119, Czub\u0105, Darj\u0105, Fatou, Firmie, F\u00fcssli, Ghany, Haeng, Katj\u0105, Koszyc, Lig\u0119, Limie, Madou, Ozmy, Pitou, Riess, Sloane, Sm\u00f3\u0142ka, Soeng, TheFa, UWSS, firmie, lig\u0119, szury, \u00fazkost\n\tsn\u0105\u0107: Koziej, Schwab, Serial, Spain, serial\n\tywa\u0107: Ariza, odku\u0142, sorgo\n\n\n\n\nProposed solution: Return the input token if the stem meets one or more of the following criteria:\n\n\tstem matches /^[a-z\u0105\u0142][a-z\u0107\u0144]$/\n\tstem matches /^.\u0107/\n\tstem is one of my, um, \u0105c, \u0142y, a\u0107, e\u0107, y\u0107, \u0105\u0107, \u015b\u0107, or \u017a\u0107\n\tstem matches /^..\u0107/\n\tstem is one of owa\u0107, iwa\u0107, obi\u0107, sn\u0105\u0107, ywa\u0107, ium\n\n\n\nNote: (1) is a superset of (2) and (3). (2) does not cover my, um, \u0105c, or \u0142y in (3), so (2) and part of (3) could be combined.\n\nGeneral workaround: Unpack Stempel into constituent parts, recreate Stempel's stopword list as a stop filter (see LUCENE-8417), use polish_stem as a stemmer, use a pattern_replace filter to replace /^([a-z\u0105\u0142]?[a-z\u0107\u0144]|..\u0107|\\d.*\u0107)$/ with '', and then a length filter to remove zero-length tokens, and add a stop filter with owa\u0107, iwa\u0107, obi\u0107, sn\u0105\u0107, ywa\u0107, ium. Since many tokens are lost by this process, you need to also have an unstemmed index of the same text so you don't lose recall. (That's not exactly \"easy\", but it's what I've had to do.)",
    "attachments": {
        "dotc.txt": "https://issues.apache.org/jira/secure/attachment/12932434/dotc.txt",
        "twoletter.txt": "https://issues.apache.org/jira/secure/attachment/12932433/twoletter.txt",
        "dotdotc.txt": "https://issues.apache.org/jira/secure/attachment/12932432/dotdotc.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16559683",
            "author": "Adrien Grand",
            "content": "Andrzej Bialecki  Do you have any ideas how to improve this? ",
            "date": "2018-07-27T12:34:41+0000"
        }
    ]
}