{
    "id": "SOLR-11631",
    "title": "Schema API always has status 0",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Schema API failures always return status=0.\n\nConsumers should be able to detect failure using normal mechanisms (i.e. status != 0) rather than having to parse the response for \"errors\".  Right now if I attempt to add-field an already existing field, I get:\n\n\n{responseHeader={status=0,QTime=XXX},errors=[{add-field={name=YYY, ...}, errorMessages=[Field 'YYY' already exists.]}]}",
    "attachments": {
        "SOLR-11631.patch": "https://issues.apache.org/jira/secure/attachment/12896991/SOLR-11631.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-10T01:39:14+0000",
            "content": "Patch that throws SolrException rather than adding an \"errors\" section to the response; also adds a test.\n\nCC Noble Paul. ",
            "author": "Steve Rowe",
            "id": "comment-16246878"
        },
        {
            "date": "2017-11-10T12:40:59+0000",
            "content": "I don't think we should throw SolrException . We should set appropriate status in the responseHeader if an errors key is present  ",
            "author": "Noble Paul",
            "id": "comment-16247425"
        },
        {
            "date": "2017-11-10T15:31:53+0000",
            "content": "I don't think we should throw SolrException . We should set appropriate status in the responseHeader if an errors key is present\n\nWhy is the errors key in the response body instead of the responseHeader?  Seems sketchy to me to set status based on a body key that might be used for things not related to status.\n\nBTW at present the only way to set the status is via the response exception - see SolrCore.postDecorateResponse(). ",
            "author": "Steve Rowe",
            "id": "comment-16247644"
        },
        {
            "date": "2017-11-10T15:50:31+0000",
            "content": "FYI TolerantUpdateProcessor puts the \"errors\" key in the responseHeader, and throws an exception if maxErrors is exceeded. ",
            "author": "Steve Rowe",
            "id": "comment-16247683"
        },
        {
            "date": "2017-11-10T15:51:43+0000",
            "content": "Similar issue... I'm creating a test in SOLR-11542 which calls this:\n\nsolrClient.request(new V2Request.Builder(\"/collections/\" + configName + \"/config/params\")\n        .withMethod(SolrRequest.METHOD.POST)\n        .withPayload(\"{\" +\n            \"  'set' : {\" +\n            \"    '_UPDATE' : {'processor':'inc,tolerant'}\" +\n            \"  }\" +\n            \"}\").build());\n\n\nI originally messed up and used 'update' instead of 'set' in the JSON, and this request completed without throwing an exception. So now I wrap this with:\n\n  private void checkNoError(NamedList<Object> response) {\n    Object errors = response.get(\"errorMessages\");\n    assertNull(\"\" + errors, errors);\n  }\n\n\nWhich I think kinda sucks.  Also notice the inconsistency in names... \"errorMessages\" here whereas \"errors\" for schema API. ",
            "author": "David Smiley",
            "id": "comment-16247686"
        },
        {
            "date": "2017-11-10T17:03:03+0000",
            "content": "Varun recently noticed this was an issue for a lot of errors-cases in the Core-Admin APIs too (SOLR-11551).  I wonder if there are any other APIs that don't set the \"status\" field appropriately. ",
            "author": "Jason Gerlowski",
            "id": "comment-16247778"
        },
        {
            "date": "2017-11-12T03:03:11+0000",
            "content": "Similar issue... I'm creating a test in SOLR-11542 ... this request completed without throwing an exception. So now I wrap this with ... response.get(\"errorMessages\"); ... Which I think kinda sucks. Also notice the inconsistency in names... \"errorMessages\" here whereas \"errors\" for schema API.\n\n+1 to fix the similar v2 api problem, should go on a different issue though I think. ",
            "author": "Steve Rowe",
            "id": "comment-16248771"
        },
        {
            "date": "2017-11-13T01:28:44+0000",
            "content": "Steve Rowe\n\nLet's see what we want to achieve.\n\n\tErrors should not return status=0 in response headers\n\tThe error details key need to be standardized. We have errorMessages and errors in different places\n\tWhere to put the error key? as a separate kley or, within the responseHeader object\n\n\n\nThe problem with all out v1 APIs was that we never returned a proper payload. We threw exceptions and jetty returned some html errors which dod not have any response header or anything. While designing V2 API we had to make the choice of return proper payload for v2 apis but , v1 apis had to be back compatible. So, we chose to keep V1 APIs to return in the old format. \n\nWe can make a wholesale change for the whole error handling thing. But let's first decide on what is the appropriate format ",
            "author": "Noble Paul",
            "id": "comment-16249030"
        },
        {
            "date": "2017-11-13T03:42:41+0000",
            "content": "The V2 API way of handling errors ",
            "author": "Noble Paul",
            "id": "comment-16249078"
        },
        {
            "date": "2017-11-13T19:52:11+0000",
            "content": "Your patch is definitely an improvement Noble Paul.\n\nWith your patch, when I create a schemaless collection with bin/solr and attempt to define the same field twice via curl -H 'application/json' http://localhost:8983/solr/mycoll/schema -d '{ add-field: { name: mynewfield, type: string }}', I get the following the second time:\n\n\n{\n  \"responseHeader\":{\n    \"status\":400,\n    \"QTime\":2},\n  \"error\":{\n    \"metadata\":[\n      \"error-class\",\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n      \"root-error-class\",\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\"],\n    \"details\":[{\n        \"add-field\":{\n          \"name\":\"mynewfield\",\n          \"type\":\"string\"},\n        \"errorMessages\":[\"Field 'mynewfield' already exists.\\n\"]}],\n    \"msg\":\"error processing commands\",\n    \"code\":400}}\n\n\n\nWhich seems reasonable to me, with the exception that the error key is not inside the responseHeader section, which seems like the right place to me, since the error info is metadata, not data. ",
            "author": "Steve Rowe",
            "id": "comment-16250130"
        },
        {
            "date": "2017-11-13T20:34:45+0000",
            "content": "\n    \"metadata\":[\n      \"error-class\",\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n      \"root-error-class\",\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\"],\n\n\n\nIn what cases will this part of the response be useful to users? ",
            "author": "Varun Thacker",
            "id": "comment-16250194"
        },
        {
            "date": "2018-01-09T02:17:25+0000",
            "content": "Noble's patch, fixing up test failures due to differently formatted error messages.\n\nPrecommit and all Solr tests succeed.\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-16317554"
        },
        {
            "date": "2018-01-09T02:25:55+0000",
            "content": "Commit 34b30da60cc4b6f9ed0a528d470eb075871db6f7 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=34b30da ]\n\nSOLR-11631: The Schema API should return non-zero status when there are failures ",
            "author": "ASF subversion and git services",
            "id": "comment-16317558"
        },
        {
            "date": "2018-01-09T02:25:58+0000",
            "content": "Commit 9f221796fe1b79ead6509efdcaa0a17c5a382c65 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9f22179 ]\n\nSOLR-11631: The Schema API should return non-zero status when there are failures ",
            "author": "ASF subversion and git services",
            "id": "comment-16317559"
        },
        {
            "date": "2018-01-09T02:26:55+0000",
            "content": "\n\n    \"metadata\":[\n      \"error-class\",\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n      \"root-error-class\",\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\"],\n\n\nIn what cases will this part of the response be useful to users?\n\nVarun Thacker, I think this should go on another issue. ",
            "author": "Steve Rowe",
            "id": "comment-16317561"
        },
        {
            "date": "2018-01-09T02:29:20+0000",
            "content": "[...] the error key is not inside the responseHeader section, which seems like the right place to me, since the error info is metadata, not data.\n\nI'll make a different issue to consistently place this info across all Solr APIs. ",
            "author": "Steve Rowe",
            "id": "comment-16317563"
        },
        {
            "date": "2018-01-09T07:54:56+0000",
            "content": "Varun Thackerit is not necessarily useful to a human user. However, it's useful for a program to know what exception was thrown ",
            "author": "Noble Paul",
            "id": "comment-16317947"
        },
        {
            "date": "2018-01-09T16:34:47+0000",
            "content": "I missed the Solrj test SchemaTest, which is failing in Jenkins now.  Working on fixes. ",
            "author": "Steve Rowe",
            "id": "comment-16318704"
        },
        {
            "date": "2018-01-09T16:56:07+0000",
            "content": "Commit 5aa60485e654509418c99db09522a364dad2fed9 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5aa6048 ]\n\nSOLR-11631: fix Solrj tests ",
            "author": "ASF subversion and git services",
            "id": "comment-16318735"
        },
        {
            "date": "2018-01-09T16:56:09+0000",
            "content": "Commit e3f3cdd0851b7b8d681eb1aa47141a4278e2289c in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e3f3cdd ]\n\nSOLR-11631: fix Solrj tests ",
            "author": "ASF subversion and git services",
            "id": "comment-16318737"
        },
        {
            "date": "2018-01-09T18:00:08+0000",
            "content": "> Varun Thackerit is not necessarily useful to a human user. However, it's useful for a program to know what exception was thrown\n\nNoble are you saying that knowing root-error-class and error-class is useful for the machine? Can you give an example for what actions could one take?\n ",
            "author": "Varun Thacker",
            "id": "comment-16318825"
        },
        {
            "date": "2018-01-09T22:52:19+0000",
            "content": "Commit 4f81bb3cfc9f6bcc1f4dedea90064ba66999e3aa in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4f81bb3 ]\n\nSOLR-11631: fix another test ",
            "author": "ASF subversion and git services",
            "id": "comment-16319347"
        },
        {
            "date": "2018-01-09T22:52:21+0000",
            "content": "Commit f6eae40a1b2304dd61e348b2d4af110f6e2a1a66 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f6eae40 ]\n\nSOLR-11631: fix another test ",
            "author": "ASF subversion and git services",
            "id": "comment-16319348"
        },
        {
            "date": "2018-01-09T23:01:01+0000",
            "content": "Commit c66d1d1ffaa8e1f4204bbf83db5e3527573330ed in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c66d1d1 ]\n\nSOLR-11631: fix precommit ",
            "author": "ASF subversion and git services",
            "id": "comment-16319355"
        },
        {
            "date": "2018-01-09T23:01:04+0000",
            "content": "Commit e538792d298d85637ebaa88b5e0ac090eeb1bb20 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e538792 ]\n\nSOLR-11631: fix precommit ",
            "author": "ASF subversion and git services",
            "id": "comment-16319356"
        }
    ]
}