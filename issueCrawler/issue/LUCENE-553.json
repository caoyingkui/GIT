{
    "id": "LUCENE-553",
    "title": "MultiFieldDisjunctionMaxQueryParser",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/queryparser"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "1.9,                                            2.0.0",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Following on from Lucene-323, here is a replacement for the old DistributingMultiFieldQueryParser that works with the new QueryParser.  This is essentially a cut-and-paste of MultiFieldQueryParser, using DisjunctionMaxQuery instead of BooleanQuery as the combing operator for the expansion of query terms across the multiple fields being searched.  This is an important adjunct to DisjunctionMaxQuery as it provides a way to generate this query from input query strings.\n\nIt would be possible to generalize MultiFieldQueryParser to parameterize the combining operator, but this would require modifying it rather than simply adding a new class.",
    "attachments": {
        "MultiFieldDisjunctionMaxQueryParser.java": "https://issues.apache.org/jira/secure/attachment/12325710/MultiFieldDisjunctionMaxQueryParser.java",
        "MultiFieldDisjunctionMaxQueryParserTest.java": "https://issues.apache.org/jira/secure/attachment/12325711/MultiFieldDisjunctionMaxQueryParserTest.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-02-28T13:03:56+0000",
            "content": "This issue has been inactive for more than 4 years. Please close if it's no longer relevant/needed, or bring it up to date if you intend to work on it. SPRING_CLEANING_2013 ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13589512"
        }
    ]
}