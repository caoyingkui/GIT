{
    "id": "SOLR-7240",
    "title": "redirect / to /solr",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.1"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "Prior to Solr 5, we avoided doing anything fancy with our jetty configs because we didn't want to overly customize \"the example\" beyond things that involved loading the solr.war.\n\nThat's not longer an issue, so we might as well plop in some jetty config features to redirect / to /solr.",
    "attachments": {
        "SOLR-7240_trunk.patch": "https://issues.apache.org/jira/secure/attachment/12707548/SOLR-7240_trunk.patch",
        "SOLR-7240_start_jar_branch5x.patch": "https://issues.apache.org/jira/secure/attachment/12708736/SOLR-7240_start_jar_branch5x.patch",
        "SOLR-7240.patch": "https://issues.apache.org/jira/secure/attachment/12704292/SOLR-7240.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-12T23:48:44+0000",
            "author": "Hoss Man",
            "content": "In response to the inevitable question \"why not just move all /solr/* URLs to /, i re-iterate my comment to this topic on the mailing list last month...\n\n\nPS: Same goes for the default URL. We could move to toplevel now http://localhost:8983/\n\n-0 ... i don't see any downside to leaving \"/solr/\" in the URL, and if/when we rip out the jetty stack completley and stop beholding to the servlet APIs internally it gives us flexibility if we want to start deprecating/retring things to be able to say \"All of the legacy, pre-Solr X.0, APIs use a base path of '/solr/' and all the new hotness APIs use a base path of '/v2/'\" ... or something like that.\n ",
            "id": "comment-14359635"
        },
        {
            "date": "2015-03-12T23:49:45+0000",
            "author": "Hoss Man",
            "content": "patch leveraging a bit of jetty magic to do this. ",
            "id": "comment-14359636"
        },
        {
            "date": "2015-03-12T23:59:26+0000",
            "author": "Hoss Man",
            "content": "Hmm, not sure i'm a fan of this solution actually...\n\nit only only redirects \"/\" it also redirects \"/anything_other_then_solr\"...\n\nhttp://localhost:8983/garbage -> http://localhost:8983/solr/\n\n...this seems like a bad idea.  My goal was simply to make \"http://localhost:8983/\" send you someplace useful, but if people are making up giberish URLs \u2013 or have typos in client connection urls (eg: \"http://localhost:8983/Solr/MyCollection/select\") those should really just return 404 rather then silently rewriting to \".../solr/\" ",
            "id": "comment-14359648"
        },
        {
            "date": "2015-03-13T00:30:19+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Re: your comment on having /solr so that we could have an incompatible /v2 in the future: wouldn't the same concern apply to the redirect as well? I.e. what API is the root url going to service during such an API shift? It leads to the root URL being on the oldest version if it stays on v1, but if always redirect it to v2, we are waiving off all backward compatibility requirements for the root url alone \u2013 how do we communicate this discrepancy in compatibility guarantees between the two URLs? And how useful is it going to be if we say that the meaning of the redirect is going to change under your feet without notice? ",
            "id": "comment-14359691"
        },
        {
            "date": "2015-03-13T06:17:07+0000",
            "author": "Hoss Man",
            "content": "... what API is the root url going to service during such an API shift?\n\nYour concern is precisely the reason i said i do not like the patch i put up. When i threw it together, i did not intend/expect that it would cause /foo to redict to /solr ... i missunderstood what Jetty's MovedContextHandlerthe does.\n\nI do not want people to mistakenly rely on any sort of redirecting to server the \"current\" API ... i was solely trying to put in place a redirect for the singular url of \"/\" so that the user experience on loading \"/\" in a browser would be slightly less ugly. ",
            "id": "comment-14360001"
        },
        {
            "date": "2015-03-13T20:55:43+0000",
            "author": "Shawn Heisey",
            "content": "I agree that redirecting /whatever would be a bad idea.  +1 to redirecting ONLY the specific \"/\" url to the admin UI on /solr, or whatever it might be in the future. ",
            "id": "comment-14361077"
        },
        {
            "date": "2015-03-25T08:34:12+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user makuk66 opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/136\n\n    SOLR-7240 add redirect of / to /solr/\n\n    SOLR-7240 add redirect of / to /solr/, using the jetty rewrite module with a regex pattern\n\n    With this patch, / (and only /) redirects to /solr/.\n\n    Tested with `bin/solr -f` on OSX:\n\n    ```\n    $ printf \"GET / HTTP/1.0\\r\\n\\r\\n\" | nc localhost 8983\n    HTTP/1.1 302 Found\n    Location: http://127.0.0.1:8983/solr/\n    Content-Length: 0\n\n    $ printf \"GET /solr/ HTTP/1.0\\r\\n\\r\\n\" | nc localhost 8983 | grep '<title>'\n      <title>Solr Admin</title>\n    $ printf \"GET /foo HTTP/1.0\\r\\n\\r\\n\" | nc localhost 8983 | grep '<title>'\n    <title>Error 404 Not Found</title>\n    ```\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/makuk66/lucene-solr SOLR-7240-redirect-slash-to-solr-squashed\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/136.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #136\n\n\ncommit 7bab2d8ab38a8e27fe606e63eb7ae6f48181a492\nAuthor: Martijn Koster <mak-github@greenhills.co.uk>\nDate:   2015-03-25T08:18:28Z\n\n    SOLR-7240 add redirect of / to /solr/, using the jetty rewrite module with a regex pattern\n\n ",
            "id": "comment-14379496"
        },
        {
            "date": "2015-03-26T18:10:30+0000",
            "author": "Hoss Man",
            "content": "Mak's patch is against 5x and looks appropriate for jetty8 \u2013 but on trunk, with jetty9, i know that \"OPTIONS=...\" syntax is no longer supported.\n\ninspired by mak's patch, i created this one for trunk.  I thought we'd need to modifiy solr/server/start.ini, to include \"rewrite\" in the --module list, but when i tried that out i got an error in the logs that \"rewrite\" wasn't a valid module name, and regardless of that change hte rewrite worked \u2013 so i guess this handler is part of the core in jetty9?  not sure.\n\nI'm running precommit now, i'll get this into trunk later today and then test mak's patch more thoroughly on the 5x branch. ",
            "id": "comment-14382363"
        },
        {
            "date": "2015-03-26T20:51:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669431 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1669431 ]\n\nSOLR-7240: '/' redirects to '/solr/' for convinience ",
            "id": "comment-14382641"
        },
        {
            "date": "2015-03-26T20:55:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669433 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1669433 ]\n\nSOLR-7240 CHANGES typo ",
            "id": "comment-14382652"
        },
        {
            "date": "2015-03-26T21:34:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669448 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1669448 ]\n\nSOLR-7240 Another CHANGES typo .. sure ... why not. ",
            "id": "comment-14382720"
        },
        {
            "date": "2015-03-26T21:49:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1669452 from hossman@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1669452 ]\n\nSOLR-7240: '/' redirects to '/solr/' for convenience (merge 1669431, 1669433, 1669448, This closes #136) ",
            "id": "comment-14382753"
        },
        {
            "date": "2015-03-31T19:54:22+0000",
            "author": "Timothy Potter",
            "content": "Solr won't start if using: java -jar start.jar\n\n\n[~/dev/lw/projects/br5x/solr/server]$ java -jar start.jar\n0    [main] WARN  org.eclipse.jetty.xml.XmlConfiguration  [] [] [] [] \u2013 Config error at <New id=\"RewriteHandler\" class=\"org.eclipse.jetty.rewrite.handler.RewriteHandler\"><Set name=\"rewriteRequestURI\">true</Set><Set name=\"rewritePathInfo\">false</Set><Set name=\"originalPathAttribute\">requestedPath</Set><Call name=\"addRule\"><Arg>\n         <New class=\"org.eclipse.jetty.rewrite.handler.RedirectRegexRule\"><Set name=\"regex\">^/$</Set><Set name=\"replacement\">/solr/</Set></New>\n       </Arg></Call></New>\njava.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.eclipse.jetty.start.Main.invokeMain(Main.java:473)\n    at org.eclipse.jetty.start.Main.start(Main.java:615)\n    at org.eclipse.jetty.start.Main.main(Main.java:96)\nCaused by: java.lang.ClassNotFoundException: org.eclipse.jetty.rewrite.handler.RewriteHandler\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:372)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:361)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:360)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at org.eclipse.jetty.util.Loader.loadClass(Loader.java:100)\n    at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.nodeClass(XmlConfiguration.java:354)\n    at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.newObj(XmlConfiguration.java:754)\n    at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configure(XmlConfiguration.java:392)\n    at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configure(XmlConfiguration.java:343)\n    at org.eclipse.jetty.xml.XmlConfiguration.configure(XmlConfiguration.java:296)\n    at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1247)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1182)\n    ... 7 more\n\nUsage: java -jar start.jar [options] [properties] [configs]\n      java -jar start.jar --help  # for more information\n\n\n\nOf course, you should use bin/solr to start Solr, but I don't think we ever declared using java -jar start.jar is no longer supported? ",
            "id": "comment-14389272"
        },
        {
            "date": "2015-03-31T22:20:21+0000",
            "author": "Timothy Potter",
            "content": "Marking this as a blocker for 5.1. Although bin/solr is the preferred method of starting Solr, using java -jar start.jar should still work. ",
            "id": "comment-14389521"
        },
        {
            "date": "2015-04-01T16:05:06+0000",
            "author": "Timothy Potter",
            "content": "Mak has proposed a solution for this: https://gist.github.com/makuk66/20c736ae47fc4993c461\n\nHowever, here's Chris Hostetter (Unused) take on this:\n\"As of solr5 we very clearly document that the only supported way to run solr is bin/solr - we may not have ever explicitly said start.jar was no longer supported, but we shouldn't have ever needed to because it was never officially supported either - it was just an example of how to run solr in jetty.\n\nIf we're going to hold back on stuff like this now, I don't see how were ever going to leave ourselves enough room to gradually replace the internals like we've talked about for a while, unless we commit to rolling our own start.jar\n\nI won't stand in the way if people think this is important, but I give up on trying to move past \"solr is just a web app\" if we worry about stuff like this.\"\n ",
            "id": "comment-14390891"
        },
        {
            "date": "2015-04-01T16:18:43+0000",
            "author": "Gus Heck",
            "content": "Scripts in solr/cloud-dev/ rely on start.jar... (and are broken right now) ",
            "id": "comment-14390914"
        },
        {
            "date": "2015-04-01T16:28:34+0000",
            "author": "Timothy Potter",
            "content": "Ok, thanks Gus Heck ... problem is bigger than I realized ",
            "id": "comment-14390933"
        },
        {
            "date": "2015-04-01T16:57:41+0000",
            "author": "Timothy Potter",
            "content": "Here's a patch that fixes this issue for branch5x.\n\nStill looking into how to fix for trunk b/c it runs on Jetty 9 ",
            "id": "comment-14390978"
        },
        {
            "date": "2015-04-01T18:35:54+0000",
            "author": "Gus Heck",
            "content": "hmm, you seem to have managed to link my old account (from when I worked at Olin College)... wonder how I can keep people from doing that, I have no access to it anymore. ",
            "id": "comment-14391170"
        },
        {
            "date": "2015-04-01T20:46:37+0000",
            "author": "Ramkumar Aiyengar",
            "content": "I am with Hoss on this one. But given that we have a patch for branch_5x, could we leave trunk broken and remove support for 5.2? ",
            "id": "comment-14391418"
        },
        {
            "date": "2015-04-01T22:17:25+0000",
            "author": "Timothy Potter",
            "content": "Thanks for chiming in Ramkumar Aiyengar ... I think trunk has been broken for a while because java -jar start.jar starts up Jetty 9, but doesn't deploy the WAR. I'm going to commit my fix for 5.1 to unblock that release and open a new JIRA to remove support for it in a later release. ",
            "id": "comment-14391597"
        },
        {
            "date": "2015-04-01T22:43:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1670788 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1670788 ]\n\nSOLR-7240: add start.ini in the server directory so java -jar start.jar continues to work on Jetty 8 ",
            "id": "comment-14391654"
        },
        {
            "date": "2015-04-01T22:55:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1670793 from Timothy Potter in branch 'dev/branches/lucene_solr_5_1'\n[ https://svn.apache.org/r1670793 ]\n\nSOLR-7240: add start.ini in the server directory so java -jar start.jar continues to work on Jetty 8 ",
            "id": "comment-14391671"
        },
        {
            "date": "2015-04-01T23:04:57+0000",
            "author": "Timothy Potter",
            "content": "java -jar start.jar works on 5.1 branch now ... but it will soon be an unsupported way to start solr after 5.1 ",
            "id": "comment-14391694"
        },
        {
            "date": "2015-04-15T00:30:30+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495303"
        },
        {
            "date": "2016-02-02T18:02:46+0000",
            "author": "Gus Heck",
            "content": "hmm, I'm noticing that the \"trunk\" patch for this (and 5.3.1 release files) contains these lines:\n\n\n            <Item>\n+             <Ref id=\"RewriteHandler\"/>\n+           </Item>\n\n\n\nIs this part of the config working as expected? The documentation for Jetty seems to say that this shoud be \n\n\n            <Item>\n+             <Ref refid=\"RewriteHandler\"/>\n+           </Item>\n\n\n\nIf it's all working as expected then I guess the fact that Intellij flags an error here (duplicate id attributes) is not a big deal. However, if something is awry here maybe we need to open a new ticket to deal with it (since this one is already closed). I haven't (yet) run into a symptom, but this looks funny... ",
            "id": "comment-15128680"
        },
        {
            "date": "2016-02-02T18:13:58+0000",
            "author": "Uwe Schindler",
            "content": "I assume both will work for compatibility reasons. But IntelliJ is right, you cannot have duplicate id values. Same we know from ant: <javac classpathref=\"...\"/> pointing to <classpath id=\"...\"/>. ",
            "id": "comment-15128703"
        }
    ]
}