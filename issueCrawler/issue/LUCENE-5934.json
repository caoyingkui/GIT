{
    "id": "LUCENE-5934",
    "title": "4.10 broke backwards compatibility for 4.0 beta & 4.0-release indexes",
    "details": {
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/codecs",
            "core/index"
        ],
        "affect_versions": "4.10",
        "status": "Closed",
        "fix_versions": [
            "4.10.1",
            "5.0",
            "6.0"
        ]
    },
    "description": "As reported by Ian on the user list:\n\nIts trying to treat them as 3.x",
    "attachments": {
        "LUCENE-5934.patch": "https://issues.apache.org/jira/secure/attachment/12667657/LUCENE-5934.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14128412",
            "author": "Uwe Schindler",
            "content": "From user list, my final analysis:\n\n\n\nHi,\n\nwe looked into earlier releases:\n\nThe index version number of 4.0-ALPHA was \"4.0\"\nThe index version number of 4.0-BETA was \"4.0.0.1\"\nThe index version number of 4.0 final was \"4.0.0.2\"\n\nIan's index is there fore a real official 4.0 index.\n\nUnfortunately the version comparison logic in Lucene 4.10 is wrong, as it has a special case for ALPHA and BETA indexes, which does not fit reality. Also, the constants are wrong:\n\n  /**\n   * Match settings and bugs in Lucene's 4.0.0-ALPHA release.\n   * @deprecated (4.1) Use latest\n   */\n  @Deprecated\n  public static final Version LUCENE_4_0_0_ALPHA = new Version(4, 0, 0, 1);\n\n  /**\n   * Match settings and bugs in Lucene's 4.0.0-BETA release.\n   * @deprecated (4.1) Use latest\n   */\n  @Deprecated\n  public static final Version LUCENE_4_0_0_BETA = new Version(4, 0, 0, 2);\n\n  /**\n   * Match settings and bugs in Lucene's 4.0.0 release.\n   * @deprecated (4.1) Use latest\n   */\n  @Deprecated\n  public static final Version LUCENE_4_0_0 = new Version(4, 0, 0);\n\nBecause of this and the special case, 4.0.0.2 orders before \"4.0.0\" (see encodedVersionNumber). This causes IndexReader/IndexWriter to think it was created in 3.x.\n\nTestBackwards compatibility did not find that bug, because the backwards index in the tests directory was created with the Alpha version :(\n\nUwe\n\n-----\nUwe Schindler\nH.-H.-Meier-Allee 63, D-28213 Bremen\nhttp://www.thetaphi.de\neMail: uwe@thetaphi.de\n\n\n> -----Original Message-----\n> From: Uwe Schindler [mailto:uwe@thetaphi.de]\n> Sent: Wednesday, September 10, 2014 1:42 PM\n> To: java-user@lucene.apache.org\n> Subject: RE: 4.10.0: java.lang.IllegalStateException: cannot write 3x \n> SegmentInfo unless codec is Lucene3x (got: Lucene40)\n> \n> Hi Ian,\n> \n> this index was created with the BETA version of Lucene 4.0:\n> \n> Segments file=segments_2 numSegments=1 version=4.0.0.2 format=\n>   1 of 1: name=_0 docCount=15730\n> \n> \"4.0.0.2\" was the index version number of Lucene 4.0-BETA. This is not \n> a supported version and may not open correctly. In Lucene 4.10 we \n> changed version handling and parsing version numbers a bit, so this \n> may be the cause for the error.\n> \n> Uwe\n> \n> -----\n> Uwe Schindler\n> H.-H.-Meier-Allee 63, D-28213 Bremen\n> http://www.thetaphi.de\n> eMail: uwe@thetaphi.de\n> \n> \n> > -----Original Message-----\n> > From: Ian Lea [mailto:ian.lea@gmail.com]\n> > Sent: Wednesday, September 10, 2014 1:01 PM\n> > To: java-user@lucene.apache.org\n> > Subject: 4.10.0: java.lang.IllegalStateException: cannot write 3x \n> > SegmentInfo unless codec is Lucene3x (got: Lucene40)\n> >\n> > Hi\n> >\n> >\n> > On running a quick test after a handful of minor code changes to \n> > deal with\n> > 4.10 deprecations, a program that updates an existing index failed \n> > with\n> >\n> > Exception in thread \"main\" java.lang.IllegalStateException: cannot \n> > write 3x SegmentInfo unless codec is Lucene3x (got: Lucene40) at\n> >\n> org.apache.lucene.index.SegmentInfos.write3xInfo(SegmentInfos.java:607\n> > )\n> >\n> > and along the way did something to the index to make it unusable.\n> >\n> > Digging a bit deeper and working on a different old test index that \n> > was lying around, and taking a backup first this time, this is reproducible.\n> >\n> > The working index:\n> >\n> > total 1036\n> > -rw-r--r-- 1 tril users 165291 Jan 18  2013 _0.fdt\n> > -rw-r--r-- 1 tril users 125874 Jan 18  2013 _0.fdx\n> > -rw-r--r-- 1 tril users   1119 Jan 18  2013 _0.fnm\n> > -rw-r--r-- 1 tril users 378015 Jan 18  2013 _0_Lucene40_0.frq\n> > -rw-r--r-- 1 tril users 350628 Jan 18  2013 _0_Lucene40_0.tim\n> > -rw-r--r-- 1 tril users  13988 Jan 18  2013 _0_Lucene40_0.tip\n> > -rw-r--r-- 1 tril users    311 Jan 18  2013 _0.si\n> > -rw-r--r-- 1 tril users     69 Jan 18  2013 segments_2\n> > -rw-r--r-- 1 tril users     20 Jan 18  2013 segments.gen\n> >\n> > and output from 4.10 CheckIndex\n> >\n> > Opening index @ index/\n> >\n> > Segments file=segments_2 numSegments=1 version=4.0.0.2 format=\n> >   1 of 1: name=_0 docCount=15730\n> >     version=4.0.0.2\n> >     codec=Lucene40\n> >     compound=false\n> >     numFiles=7\n> >     size (MB)=0.987\n> >     diagnostics = {os=Linux, os.version=3.1.0-1.2-desktop, \n> > source=flush,\n> > lucene.version=4.0.0 1394950 - rmuir - 2012-10-06 02:58:12, \n> > os.arch=amd64, java.version=1.7.0_10, java.vendor=Oracle Corporation}\n> >     no deletions\n> >     test: open reader.........OK\n> >     test: check integrity.....OK\n> >     test: check live docs.....OK\n> >     test: fields..............OK [13 fields]\n> >     test: field norms.........OK [0 fields]\n> >     test: terms, freq, prox...OK [53466 terms; 217447 terms/docs \n> > pairs; 139382 tokens]\n> >     test: stored fields.......OK [15730 total field count; avg 1 fields per doc]\n> >     test: term vectors........OK [0 total vector count; avg 0 \n> > term/freq vector fields per doc]\n> >     test: docvalues...........OK [0 docvalues fields; 0 BINARY; 0 \n> > NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET]\n> >\n> > No problems were detected with this index.\n> >\n> >\n> > Now run this little program\n> >\n> >     public static void main(final String[] _args) throws Exception { \n> > File index = new File(_args[0]); IndexWriterConfig iwcfg = new \n> > IndexWriterConfig(Version.LUCENE_4_10_0,\n> > new StandardAnalyzer());\n> >\n> iwcfg.setOpenMode(IndexWriterConfig.OpenMode.CREATE_OR_APPEND);\n> > Directory d = FSDirectory.open(index, new \n> > SimpleFSLockFactory(index)); IndexWriter iw = new IndexWriter(d, \n> > iwcfg); Document doc1 = new Document(); doc1.add(new \n> > StringField(\"type\", \"test\", Field.Store.NO)); iw.addDocument(doc1); iw.close();\n> >     }\n> >\n> > and it fails with\n> >\n> > Exception in thread \"main\" java.lang.IllegalStateException: cannot \n> > write 3x SegmentInfo unless codec is Lucene3x (got: Lucene40) at\n> >\n> org.apache.lucene.index.SegmentInfos.write3xInfo(SegmentInfos.java:607\n> > ) at \n> > org.apache.lucene.index.SegmentInfos.write(SegmentInfos.java:524)\n> > at\n> >\n> org.apache.lucene.index.SegmentInfos.prepareCommit(SegmentInfos.java:\n> > 1017)\n> > at\n> > org.apache.lucene.index.IndexWriter.startCommit(IndexWriter.java:454\n> > 9)\n> > at\n> >\n> org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.\n> > j\n> > ava:3062)\n> > at\n> > org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:\n> > 31\n> > 69\n> > )\n> > at \n> > org.apache.lucene.index.IndexWriter.shutdown(IndexWriter.java:915)\n> > at org.apache.lucene.index.IndexWriter.close(IndexWriter.java:986)\n> > at org.apache.lucene.index.IndexWriter.close(IndexWriter.java:956)\n> > at t.main(t.java:25)\n> >\n> > and when run CheckIndex again get\n> >\n> >\n> > Opening index @ index/\n> >\n> > ERROR: could not read any segments file in directory\n> > java.nio.file.NoSuchFileException: /tmp/lucene/index/_0.si at\n> > sun.nio.fs.UnixException.translateToIOException(UnixException.java:8\n> > 6)\n> > at\n> > sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102\n> > )\n> > at\n> > sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107\n> > )\n> > at\n> >\n> sun.nio.fs.UnixFileSystemProvider.newFileChannel(UnixFileSystemProvider.\n> > java:176)\n> > at java.nio.channels.FileChannel.open(FileChannel.java:287)\n> > at java.nio.channels.FileChannel.open(FileChannel.java:334)\n> > at\n> >\n> org.apache.lucene.store.MMapDirectory.openInput(MMapDirectory.java:19\n> > 6)\n> > at\n> >\n> org.apache.lucene.codecs.lucene40.Lucene40SegmentInfoReader.read(Luce\n> > ne40SegmentInfoReader.java:52)\n> > at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:362)\n> > at\n> > org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:458)\n> > at\n> >\n> org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfo\n> > s.java:913)\n> > at\n> >\n> org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfo\n> > s.java:759)\n> > at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:454)\n> > at \n> > org.apache.lucene.index.CheckIndex.checkIndex(CheckIndex.java:414)\n> > at org.apache.lucene.index.CheckIndex.main(CheckIndex.java:2096)\n> >\n> > which is true\n> >\n> > total 1032\n> > -rw-r--r-- 1 tril users 165291 Jan 18  2013 _0.fdt\n> > -rw-r--r-- 1 tril users 125874 Jan 18  2013 _0.fdx\n> > -rw-r--r-- 1 tril users   1119 Jan 18  2013 _0.fnm\n> > -rw-r--r-- 1 tril users 378015 Jan 18  2013 _0_Lucene40_0.frq\n> > -rw-r--r-- 1 tril users 350628 Jan 18  2013 _0_Lucene40_0.tim\n> > -rw-r--r-- 1 tril users  13988 Jan 18  2013 _0_Lucene40_0.tip\n> > -rw-r--r-- 1 tril users     69 Jan 18  2013 segments_2\n> > -rw-r--r-- 1 tril users     20 Jan 18  2013 segments.gen\n> >\n> >\n> > I don't recall the origins of this index but it may well have been \n> > created in the distant past and been upgraded, explicitly or \n> > automatically,\n> along the way.\n> > Although evidently not for a while.\n> >\n> >\n> > Running the same test with lucene 4.9.0 and minimal mods to the \n> > program runs to successful completion.  Here's the CheckIndex output:\n> >\n> >\n> > Opening index @ index-4.9.updated/\n> >\n> > Segments file=segments_3 numSegments=2 versions=[4.0.0.2 .. 4.9]\n> format=\n> >   1 of 2: name=_0 docCount=15730\n> >     codec=Lucene40\n> >     compound=false\n> >     numFiles=7\n> >     size (MB)=0.987\n> >     diagnostics = {os=Linux, os.version=3.1.0-1.2-desktop, \n> > source=flush,\n> > lucene.version=4.0.0 1394950 - rmuir - 2012-10-06 02:58:12, \n> > os.arch=amd64, java.version=1.7.0_10, java.vendor=Oracle Corporation}\n> >     no deletions\n> >     test: open reader.........OK\n> >     test: check integrity.....OK\n> >     test: check live docs.....OK\n> >     test: fields..............OK [13 fields]\n> >     test: field norms.........OK [0 fields]\n> >     test: terms, freq, prox...OK [53466 terms; 217447 terms/docs \n> > pairs; 139382 tokens]\n> >     test: stored fields.......OK [15730 total field count; avg 1 fields per doc]\n> >     test: term vectors........OK [0 total vector count; avg 0 \n> > term/freq vector fields per doc]\n> >     test: docvalues...........OK [0 docvalues fields; 0 BINARY; 0 \n> > NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET]\n> >\n> >   2 of 2: name=_1 docCount=1\n> >     codec=Lucene49\n> >     compound=true\n> >     numFiles=3\n> >     size (MB)=0.001\n> >     diagnostics = {timestamp=1410281698360, os=Linux,\n> > os.version=3.1.0-1.2- desktop, source=flush, lucene.version=4.9.0\n> > 1604085 - rmuir - 2014-06-20 06:22:23, os.arch=amd64, \n> > java.version=1.7.0_10, java.vendor=Oracle Corporation}\n> >     no deletions\n> >     test: open reader.........OK\n> >     test: check integrity.....OK\n> >     test: check live docs.....OK\n> >     test: fields..............OK [1 fields]\n> >     test: field norms.........OK [0 fields]\n> >     test: terms, freq, prox...OK [1 terms; 1 terms/docs pairs; 0 tokens]\n> >     test: stored fields.......OK [0 total field count; avg 0 fields per doc]\n> >     test: term vectors........OK [0 total vector count; avg 0 \n> > term/freq vector fields per doc]\n> >     test: docvalues...........OK [0 docvalues fields; 0 BINARY; 0 \n> > NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET]\n> >\n> > No problems were detected with this index.\n> >\n> >\n> >\n> >\n> > --\n> > Ian.\n\n ",
            "date": "2014-09-10T12:38:20+0000"
        },
        {
            "id": "comment-14128450",
            "author": "Uwe Schindler",
            "content": "Patch for 4.x that fixes the version handling.\n\nI am not really happy, because Version.parse(\"4.0.0\") now parses to 4.0.0-ALPHA, but this is how it was defined and written to index.\n\nI have to check the codecs now, that they correctly detect 4.0 ALPHA/BETA indexes (e.g., use the right version constant on comparing).\n\nAnother thing, theoretically, analyzers must use LUCENE_4_0_0_ALPHA to compare.\n\nAnother idea I had would be to add a method Version.isMinimumLucene4(). ",
            "date": "2014-09-10T13:13:07+0000"
        },
        {
            "id": "comment-14128463",
            "author": "Robert Muir",
            "content": "What happened with the safety check?\n\nThe user hit it, which is nice:\n\njava.lang.IllegalStateException: cannot\nwrite 3x SegmentInfo unless codec is Lucene3x (got: Lucene40)\nat org.apache.lucene.index.SegmentInfos.write3xInfo(SegmentInfos.java:607)\n\n\n\nCan we move it before we do anything destructive for additional safety? or does it not matter and due to fallback logic in commit... ",
            "date": "2014-09-10T13:28:17+0000"
        },
        {
            "id": "comment-14128469",
            "author": "Michael McCandless",
            "content": "I built a 4.0.0 index and copied forward to 4.x's TestBackwardsCompatibility, and the test fails with this:\n\njava.io.IOException: file _0.si already exists\n\tat __randomizedtesting.SeedInfo.seed([DC4E59ED2DE3E60F:6D2FC24DAADD029A]:0)\n\tat org.apache.lucene.store.MockDirectoryWrapper.createOutput(MockDirectoryWrapper.java:552)\n\tat org.apache.lucene.index.SegmentInfos.write3xInfo(SegmentInfos.java:610)\n\tat org.apache.lucene.index.SegmentInfos.write(SegmentInfos.java:535)\n\tat org.apache.lucene.index.SegmentInfos.prepareCommit(SegmentInfos.java:1033)\n\tat org.apache.lucene.index.IndexWriter.startCommit(IndexWriter.java:4560)\n\tat org.apache.lucene.index.IndexWriter.prepareCommitInternal(IndexWriter.java:3067)\n\tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:3174)\n\tat org.apache.lucene.index.IndexWriter.shutdown(IndexWriter.java:916)\n\tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:987)\n\tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:957)\n\n\n\nIt's slightly different than what Ian saw because MDW catches earlier that something is wrong since we are supposed to be write-once.\n\nBut without MDW, we would create the output (overwriting the correct one from the index), then inside a try/finally we throw that IllegalStateExc, then in the finally clause we close that .si file and delete it.  So I suspect exactly one .si file is deleted from Ian's index, causing the corruption.\n\nCan we move it before we do anything destructive for additional safety?\n\nWe should definitely move up this check, after adding the missing indices to TestBackCompat. ",
            "date": "2014-09-10T13:39:09+0000"
        },
        {
            "id": "comment-14128471",
            "author": "Uwe Schindler",
            "content": "Hi,\nwith my patch now the 4.0-ALPHA index (that declares as 4.0) is in fact failing with the above error message. The reason is that the default codec checks for Version.onOrAfter(LUCENE_4_0_0), which does not include 4.0-ALPHA and 4.0-BETA indexes.\n\nTo make this check correct, we have 2 possibilities: Version.onOrAfter(LUCENE_4_0_0_ALPHA) or - as suggested before - add Version.isMinimumLucene4() (the same applies to analyzers, but its not important here) - or hardcode 4.0 as string into the codec, so it hits everything. ",
            "date": "2014-09-10T13:39:30+0000"
        },
        {
            "id": "comment-14128489",
            "author": "Ryan Ernst",
            "content": "Checking on or after 4.0 alpha seems like the correct solution? Technically it did come before beta and final. So the 40 codec should be minimum of alpha.  ",
            "date": "2014-09-10T14:03:40+0000"
        },
        {
            "id": "comment-14128512",
            "author": "Uwe Schindler",
            "content": "Ryan: How about analyzers then? In my opinion the checks there should also use 4_0_0_ALPHA?\n\nOnce my eclipse works again (ant resolve hangs for long time here and then fails to download wstx parser), I will check for usage of the constant LUCENE_4_0_0 ",
            "date": "2014-09-10T14:14:59+0000"
        },
        {
            "id": "comment-14128536",
            "author": "Uwe Schindler",
            "content": "New patch, fixing the version comparisons for Version >= 4.x ",
            "date": "2014-09-10T14:37:20+0000"
        },
        {
            "id": "comment-14128542",
            "author": "Ryan Ernst",
            "content": "Shouldn't the Version.java changed be dropped then? ",
            "date": "2014-09-10T14:41:16+0000"
        },
        {
            "id": "comment-14128546",
            "author": "Uwe Schindler",
            "content": "Here new patch: For now I fixed the \"deprecated\" old constants LUCENE_40 and LUCEN_4_0 to refer to LUCENE_4_0_0_ALPHA.\n\nOpinions? ",
            "date": "2014-09-10T14:42:25+0000"
        },
        {
            "id": "comment-14128562",
            "author": "Ryan Ernst",
            "content": "Ok, patch looks good.  I now understand that the previous comment with LUCENE_MAIN_VERSION, which described the layout of 4.0.0.1 < 4.0.0.2 < 4.0.0 was incorrect.  The indexes were actually written with 4.0.0 (alpha), 4.0.0.1 (beta) and 4.0.0.2 (final)? ",
            "date": "2014-09-10T14:54:38+0000"
        },
        {
            "id": "comment-14128592",
            "author": "Uwe Schindler",
            "content": "I beefed up the tests.\n\nNow the parseLeniently is consistent to the constants (bidirectional). Also I fixed the parsing to be really case-insensitive.\n\nTests pass, including Solr. ",
            "date": "2014-09-10T15:22:47+0000"
        },
        {
            "id": "comment-14128598",
            "author": "Uwe Schindler",
            "content": "The indexes were actually written with 4.0.0 (alpha), 4.0.0.1 (beta) and 4.0.0.2 (final)?\n\nExactly! ",
            "date": "2014-09-10T15:29:42+0000"
        },
        {
            "id": "comment-14128611",
            "author": "Ryan Ernst",
            "content": "+1 to the current patch. ",
            "date": "2014-09-10T15:38:15+0000"
        },
        {
            "id": "comment-14128618",
            "author": "Uwe Schindler",
            "content": "Added a new test that checks for real bidirectionally between parseLeniently and the parse results. All field names as string should parse to itsself.\n\nThis made me add all special cases to parseLeniently as String-based switch statement. ",
            "date": "2014-09-10T15:43:56+0000"
        },
        {
            "id": "comment-14128766",
            "author": "Michael McCandless",
            "content": "Can we move the codec check:\n\n\n      if ((si.getCodec() instanceof Lucene3xCodec) == false) {\n\n\n\nup into SIS.write, just before:\n\n\n          if (!segmentWasUpgraded(directory, si)) {\n\n\n\n?\n\nThis way if something like this tries to happen again in 4.x, at least we don't corrupt-on-kiss and instead just throw the exception and rollback the commit. ",
            "date": "2014-09-10T17:26:18+0000"
        },
        {
            "id": "comment-14128801",
            "author": "ASF subversion and git services",
            "content": "Commit 1624073 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1624073 ]\n\nLUCENE-5934: Fix backwards compatibility for 4.0 indexes. ",
            "date": "2014-09-10T17:51:00+0000"
        },
        {
            "id": "comment-14128838",
            "author": "Uwe Schindler",
            "content": "Can we move the codec check:\n\nMike, can you do this? I already committed to 4.x and I am now backporting/forward-porting.\n\nIn fact I would leave the test where it is and instead add a second test at the !segmentWasUpgraded() place? This feels better to me, although it might be a duplicate test. Better test more thorough than corrumption. ",
            "date": "2014-09-10T18:11:21+0000"
        },
        {
            "id": "comment-14128864",
            "author": "ASF subversion and git services",
            "content": "Commit 1624089 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1624089 ]\n\nMerged revision(s) 1624073 from lucene/dev/branches/branch_4x:\nLUCENE-5934: Fix backwards compatibility for 4.0 indexes. ",
            "date": "2014-09-10T18:21:17+0000"
        },
        {
            "id": "comment-14128949",
            "author": "ASF subversion and git services",
            "content": "Commit 1624100 from Uwe Schindler in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1624100 ]\n\nMerged revision(s) 1624073 from lucene/dev/branches/branch_4x:\nLUCENE-5934: Fix backwards compatibility for 4.0 indexes. ",
            "date": "2014-09-10T19:15:42+0000"
        },
        {
            "id": "comment-14129167",
            "author": "ASF subversion and git services",
            "content": "Commit 1624141 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1624141 ]\n\nLUCENE-5934: also check this IllegalStateException up higher so it will not cause corruption when IW kisses an index if it ever kicks in again (hopefully not!) ",
            "date": "2014-09-10T21:42:31+0000"
        },
        {
            "id": "comment-14129168",
            "author": "Michael McCandless",
            "content": "In fact I would leave the test where it is and instead add a second test at the !segmentWasUpgraded() place? \n\nOK I did that, except I moved the inner check up higher to before we make any destructive changes to the index.\n\nAlso, I reverted the commit here, but kept Robert's commit, confirmed TestBackCompat fails with the IlegalStateExc and that the index is NOT corrupt. ",
            "date": "2014-09-10T21:43:33+0000"
        },
        {
            "id": "comment-14129176",
            "author": "Robert Muir",
            "content": "thank you Mike ",
            "date": "2014-09-10T21:45:32+0000"
        },
        {
            "id": "comment-14129213",
            "author": "ASF subversion and git services",
            "content": "Commit 1624144 from Uwe Schindler in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1624144 ]\n\nMerged revision(s) 1624141 from lucene/dev/branches/branch_4x:\nLUCENE-5934: also check this IllegalStateException up higher so it will not cause corruption when IW kisses an index if it ever kicks in again (hopefully not!) ",
            "date": "2014-09-10T22:05:14+0000"
        },
        {
            "id": "comment-14129221",
            "author": "Uwe Schindler",
            "content": "Thanks Mike. I backported it. Issue finally resolved  ",
            "date": "2014-09-10T22:06:03+0000"
        },
        {
            "id": "comment-14129232",
            "author": "ASF subversion and git services",
            "content": "Commit 1624146 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1624146 ]\n\nLUCENE-5934: Add Ian Lea to CHANGES.txt ",
            "date": "2014-09-10T22:14:04+0000"
        },
        {
            "id": "comment-14129235",
            "author": "ASF subversion and git services",
            "content": "Commit 1624148 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1624148 ]\n\nMerged revision(s) 1624146 from lucene/dev/trunk:\nLUCENE-5934: Add Ian Lea to CHANGES.txt ",
            "date": "2014-09-10T22:14:57+0000"
        },
        {
            "id": "comment-14129236",
            "author": "ASF subversion and git services",
            "content": "Commit 1624149 from Uwe Schindler in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1624149 ]\n\nMerged revision(s) 1624148 from lucene/dev/branches/branch_4x:\nMerged revision(s) 1624146 from lucene/dev/trunk:\nLUCENE-5934: Add Ian Lea to CHANGES.txt ",
            "date": "2014-09-10T22:16:00+0000"
        },
        {
            "id": "comment-14130504",
            "author": "Ryan Ernst",
            "content": "I just updated the description to make it clear this issue was only with upgrading 4.0.0-ALPHA or 4.0.0-BETA indexes. ",
            "date": "2014-09-11T18:58:54+0000"
        },
        {
            "id": "comment-14130513",
            "author": "Robert Muir",
            "content": "Sorry, Ryan thats incorrect.\n\nThe backwards compat here is too complicated! ",
            "date": "2014-09-11T19:02:13+0000"
        },
        {
            "id": "comment-14130535",
            "author": "Ryan Ernst",
            "content": "Doh, sorry about that.  I was confused, and I want to clarify now what I understand.\n\nThe bug would cause:\n4.0.0-ALPHA to be read as LUCENE_4_0_0\n4.0.0-BETA to be read as LUCENE_4_0_0_ALPHA\n4.0.0-FINAL to be read as LUCENE_4_0_0_BETA\n\nThen, because the check was looking for onOrAfter(LUCENE_4_0_0), beta and final indexes would incorrectly fall through to the 3x handling code. ",
            "date": "2014-09-11T19:10:29+0000"
        },
        {
            "id": "comment-14151028",
            "author": "Michael McCandless",
            "content": "Bulk close for Lucene/Solr 4.10.1 release ",
            "date": "2014-09-28T09:03:51+0000"
        }
    ]
}