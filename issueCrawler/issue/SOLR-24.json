{
    "id": "SOLR-24",
    "title": "Add Highlighting to standard request handler",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.1.0"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This patch adds highlighting functionality to solr request handlers it also refactors StandardRequestHandler to use the common functionality provided in SolrPluginUtils.  I'd have preferred to do two separate patches, but creating two mutually-dependent patches on a repo without being able to commit a revision was daunting.\n\n-----------------------------------\nRefactoring StandardRequestHandler:\n\n1. Moved solr.util.CommonParams to its own class.  Removed DisMax-specific parameters, and placed in a subclass.\n2. StandardRequestHandler uses CommonParams to store config-time parameter values (new feature)\n3. StandardRequestHandler uses SolrPluginUtils methods for duplicate functionality\n4. Some of said SPU methods have grown a \"params\" parameter to enable them to use default values.  (Note: instead of passing this around, something like a RequestHelper class which carries the SolrRequest and Param values would be useful.  This class could house the utility methods that require Request parameters).\n5. SolrPluginUtils.getParam() only uses the default parameter if it is null, not blank.\n\n--------------------------------------\nHighlighting:\n\n1. Highlighting is controlled by three request parameters:\n   highlight: list of fields to highlight, or highlight the default field if at all present\n  maxSnippets: maximum number of snippets to return for each field\n   highlightFormatterClass: 'solr.<classname>' or full package path of highlight.Formatter subclass to use in highlighting.\n2. Default formatter is to use <em> tags.  There are issues with this approach, but are mitigated with the ability to specify a custom Formatter.  Definately should consider alternatives (a custom xml approach to denote highlit regions will require some Highlighter package hackery).\n3. Document summaries are returned as a separate element under <response> format is still up for discussion.",
    "attachments": {
        "highlight_patch_v4.diff": "https://issues.apache.org/jira/secure/attachment/12336523/highlight_patch_v4.diff",
        "highlight_v5.patch": "https://issues.apache.org/jira/secure/attachment/12336680/highlight_v5.patch",
        "highlight_patch_v3.diff": "https://issues.apache.org/jira/secure/attachment/12336466/highlight_patch_v3.diff",
        "highlight_patch_v1.diff": "https://issues.apache.org/jira/secure/attachment/12335810/highlight_patch_v1.diff",
        "highlight_patch_v2.diff": "https://issues.apache.org/jira/secure/attachment/12336463/highlight_patch_v2.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Bill Au",
            "id": "comment-12419345",
            "date": "2006-07-06T05:03:52+0000",
            "content": "I have come across a test case there the patch doesn't work.  I am using the data in example/exampledocs/ipod_other.xml.\nAfter adding the two docs I queried solr using curl:\n\ncurl -i \"http://localhost:8983/solr/select/?q=ipod&highlight=name&indent=true\"\n\nI got the following highlighting data in the response:\n\n<lst name=\"highlighting\">\n <lst name=\"id=IW-02\">\n  <arr name=\"name\">\n        <str>i<em>iPod</em> & i<em>iPod</em> Mini USB 22.0 Cable</str>\n  </arr>\n </lst>\n <lst name=\"id=F8V7067-APL-KIT\">\n  <arr name=\"name\">\n        <str>Belkin Mobile Power Cord for i<em>iPod</em> w/ Dock</str>\n  </arr>\n </lst>\n</lst>\n\nIn both cases, there is an extra i in front of <em>iPod</em>.\nMy guess is there is something wrong with the TokenStream passed to the Highligher.  I am taking a closing look at that now. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12419367",
            "date": "2006-07-06T06:46:55+0000",
            "content": "Bill: I beleive what you are seeing is an issue with the Highlighter not playing nice with Analyzers that produce multiple tokens in the same position \u2013 Mike mentioend this in the email discussion, but i assumed it was reagarding using TermPosition information ... in the example app \"name\" is a stored field, so i'm not sure why the indexing Analyzer would affect highlighting (perhaps it's yet anohter aspect of the highlighter package i don't understand)\n\nIncidently, We might as well capture here a summary of the dicussion from last week...\nhttp://www.nabble.com/-jira--Created%3A-%28SOLR-24%29-Add-Highlighting-to-standard-request-handler-tf1834206.html\n\n  1) patch generally look good\n  2) I'm hesitent to change SolrPluginUtils.getParam()\n\nIn this particular case (using the \"highlight\" param to indicate both that highlighting should be turned on, and to override the default highlighting fields) I think a better API would be two seperate params, and the more i think about it the more i like that solution in general \u2013 much as Mike pointed out that \"Significant whitespace scares me\" in response to truely ridiculous suggestion i made, significant empty space scares me ... so i would vote for changing that and then commiting.\n\n\nIncidently, i got a response from Erik H giving this patch his thumbs up a few days ago, but looking at the thread now i realize it came staight to me and not the list.\n "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12419398",
            "date": "2006-07-06T10:58:09+0000",
            "content": "Just to follow up, I'll be creating an new patch which implements the changes in highlighting parameters (this should be ready in a few days).\n\nThe issue with the doubled tokens only occurs when analyzing a stored field for highlighting (it does not occur when using Term Position vectors).  Stored fields need to be analyzed on the fly to do highlighting matching to the query term. "
        },
        {
            "author": "Bill Au",
            "id": "comment-12419559",
            "date": "2006-07-06T23:00:30+0000",
            "content": "The TokenStream looks OK.  It contains \"i\", \"pod\", and \"ipod\".\n\nI also tried using different query terms.\nq=pod produces the same output as q=ipod.\n\nq=iPod produces output with the extra \"i\" highlighted as well, ie\n\n<lst name=\"highlighting\">\n <lst name=\"id=IW-02\">\n  <arr name=\"name\">\n        <str><em>i</em><em>iPod</em> & <em>i</em><em>iPod</em> Mini USB 22.0 Cable</str>\n  </arr>\n </lst>\n <lst name=\"id=F8V7067-APL-KIT\">\n  <arr name=\"name\">\n        <str>Belkin Mobile Power Cord for <em>i</em><em>iPod</em> w/ Dock</str>\n  </arr>\n </lst>\n</lst> "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12419626",
            "date": "2006-07-07T07:10:17+0000",
            "content": "Updated highlighting patch.\n\nNumerous improvements:\n\n\tuses three parameters: highlight (true/false) highlightFields maxSnippets\n\tvastly improved defaultField handling (old version ignored some cases of specified default fields, and did the wrong thing entirely for DisMax)\n\tvastly improved DisMax query handling\n\n\n\nOpen issues: \n\n\tI needed to subclass a final class in the highlighter contrib package in lucene, which required C&P.  This is a stop-gap measure until the issue is fixed in lucene.\n\tThe interaction between WordDelimiterFilter and Highlighter is not fixed.  This will require further investigation.\n\n\n\nI believe the patch is in a commitable state.  If it is committed, I'll open JIRA issues for the open problems above.  "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12419632",
            "date": "2006-07-07T07:57:58+0000",
            "content": "The previous patch didn't apply cleanly to trunk due to svn keyword.  This version omits a docstring change. "
        },
        {
            "author": "Bill Au",
            "id": "comment-12419736",
            "date": "2006-07-07T23:03:27+0000",
            "content": "My guess is that the Highlighter doesn't like the fact that the\nTokenStream produced by the WordDelimiterFilter contains\nmultiple Tokens with the same starting offset. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12419826",
            "date": "2006-07-08T11:03:17+0000",
            "content": "Updated patch reflecting comments:\n\n\n\tsplitList typo fixed\n\tfields producing no highlight snippets are not included in result tag\n\tfull support for multi-valued fields, this includes a mutl-value token stream and TextFragmenter which starts fragments on value boundaries\n\tuse of SolrQueryTermExtractor removed (not needed with current version of lucene)\n\t\"id=key\" attributes are stripped if the schema contains no uniqueKey\n\tFactored out response field setting from StandardRequestHandler (note, this is a slight semantic change, as previously the score was only included if \"score\" was sent in the field list.  The current behavious matched DisMaxRequestHandler, but not the documentation.  If this behaviour is desirable, both handlers should be modified to comply).\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12419878",
            "date": "2006-07-09T03:02:51+0000",
            "content": "I just got a chance to check this out... it's looking good Mike!  I think this is something that will be useful to a lot of people.\n\nPerhaps highlight=true could be overloaded later to provide alternate ways of highlighting (giving positions rather than inserting <em> in the values).  While <em> is a little flawed since it's problematic in field values that may already contain markup, I think it's probably the best/simplest default that people can use easily.\n\nRegarding the <lst name=\"id=theuniqueid\">... should this be <lst name=\"theuinqueid\"> without including the field name?\nIncluding the unique key field name (which I assume id is), does add a little more info, at the cost of making it harder for clients to use the value.\n\nI like that you leave in empty entries like <lst name=\"id=VS1GB400C3\"/> for documents that there are no highlighter fragments for.  This makes it possible to access the highlight info by position rather than relying on id correlation.\n\nI wasn't able to get multi-valued fields working though.  Even if multiple values matched, I would only get a single <str> back in the highlight section.\nExample with the demo document set:\nhttp://localhost:8983/solr/select?q=features:(USB+video+color+includes+MB+memory+display+photo)&indent=on&highlight=true&highlightFields=features\n\n<lst name=\"highlighting\">\n\t<lst name=\"id=MA147LL/A\">\n\t  <arr name=\"features\">\n           <str>Stores up to 1515,000 songs, 2525,000 <em>photos</em>, or 150 hours of <em>video</em></str>\n         </arr>\n       </lst> "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12419879",
            "date": "2006-07-09T03:15:26+0000",
            "content": "> I wasn't able to get multi-valued fields working though.\n\nAs I started browsing the code I ran across the maxSnippets param and cranked it up... now all the snippets appear as a single string rather than multiple strings in the array.  Am I doing something wrong?\n\nExample:\n<lst name=\"id=MA147LL/A\">\n\t<arr name=\"features\">\n\t  <str>\niiTunes, Podcasts, AudiobooksStores up to 1515,000 songs, 2525,000 <em>photos</em>, or 150 hours of <em>video</em>22.5-inch, 320x240 <em>color</em> TFT LCD <em>display</em> with LED backlightUp to 20 hours of battery lifePlays AAC, MP3, WAV, AIFF, Audible, Apple Lossless, H.264 <em>video</em>Notes, Calendar, Phone book, Hold button, Date <em>display</em>, <em>Photo</em> wallet, BuiltBuilt-in games, JPEG <em>photo</em> playback, Upgradeable firmware, <em>USB</em> 22.0 compatibility, Playback speed control, Rechargeable capability, Battery level indication\n      </str>\n  </arr>\n</lst> "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12419883",
            "date": "2006-07-09T03:51:41+0000",
            "content": "Interesting... Highlighter by default merges contiguous fragments (and fragments can be contiguous regardless of the gap between them).  \n\nI made a change to disable fragment merging and the bahaviour is more natural.  I'll post a modified patch once we determine what othe rmodifications are necessary. "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12419885",
            "date": "2006-07-09T04:43:52+0000",
            "content": "I also agree about removing the \"id=\" (I was just blithly following the example of the debug data here).\n\nAnother note to reviewers: in the process of Gap-enabled the text fragmenter, I introduced a bug that caused over-long fragments in regular fields.  This has been fix on my local copy. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12419886",
            "date": "2006-07-09T05:13:43+0000",
            "content": "> - Factored out response field setting from StandardRequestHandler (note, this is a slight semantic change, as previously\n> the score was only included if \"score\" was sent in the field list.\n\nThis was done because there is an optimization that can use a filter (the set of all documents matching a query) to satisfy a sorted query if scores aren't needed.  This bypasses re-executing the query.\n\n> I also agree about removing the \"id=\" (I was just blithly following the example of the debug data here). \n\nYeah, I really only meant for the debug stuff to be human-readable (and more likely to change in the future).\n\nRegarding gaps... I can see how one would need to rely on a position gap when using term-vectors... but when re-analyzing stored fields, they are already discrete.  Is the problem caused by the hilighter architecture (I haven't used it before)? "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12419995",
            "date": "2006-07-10T14:49:14+0000",
            "content": "> This was done because there is an optimization that can use a filter (the set of all documents matching a query) to satisfy > a sorted query if scores aren't needed. This bypasses re-executing the query.\n\nI'll ensure this skippage is possible with StandardrequestHandler.  It should probably be added to DisMax too, in that case.\n\n> Regarding gaps... I can see how one would need to rely on a position gap when using term-vectors... but when > > re-analyzing stored fields, they are already discrete. Is the problem caused by the hilighter architecture (I haven't used it >before)?\n\nHighlighter takes a tokenstream and a piece of text and fragments it.  The fragments are scored to determined which top set of them to return.  The only way for it to work on multiple token streams is to invoke it multiple times (in which case we have to find a way of merging the highlighting output from each in a nice way), or fooling highlighter into thinking it is a signle stream (ensuring separation among the various parts), which is attractive since Highlighter compares the fragments from all the parts and picks the globally highest scoring fragments.\n "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12420417",
            "date": "2006-07-12T02:48:28+0000",
            "content": "(hopefully) complete patch.\n\n\n\tremoved \"id=\" from document highlighting entries\n\tensured the multi-value snippets do not get concatenated\n\tin StandardRequestHandler and DisMaxHandler, the score flag is set iff it is in the responsefields parameter\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12420892",
            "date": "2006-07-13T23:28:48+0000",
            "content": "+1 for committing this.\nExcellent job Mike! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12420908",
            "date": "2006-07-14T01:25:37+0000",
            "content": "I just committed this, and opened a lucene bug\nhttp://issues.apache.org/jira/browse/LUCENE-627\n\nNow we just need to update the wiki! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589338",
            "date": "2008-04-15T23:56:43+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.1\n\n\n\nThe Fix Version for all 38 issues found was set to 1.1, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman3 "
        }
    ]
}