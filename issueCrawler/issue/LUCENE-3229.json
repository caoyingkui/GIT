{
    "id": "LUCENE-3229",
    "title": "SpanNearQuery: ordered spans should not overlap",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.10.3",
            "5.0",
            "6.0"
        ],
        "affect_versions": "3.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "While using Span queries I think I've found a little bug.\n\nWith a document like this (from the TestNearSpansOrdered unit test) :\n\n\"w1 w2 w3 w4 w5\"\n\nIf I try to search for this span query :\n\nspanNear([spanNear([field:w3, field:w5], 1, true), field:w4], 0, true)\n\nthe above document is returned and I think it should not because 'w4' is not after 'w5'.\nThe 2 spans are not ordered, because there is an overlap.\n\nI will add a test patch in the TestNearSpansOrdered unit test.\nI will add a patch to solve this issue too.\nBasicaly it modifies the two docSpansOrdered functions to make sure that the spans does not overlap.",
    "attachments": {
        "SpanOverlapTestUnit.diff": "https://issues.apache.org/jira/secure/attachment/12483432/SpanOverlapTestUnit.diff",
        "SpanOverlap2.diff": "https://issues.apache.org/jira/secure/attachment/12483453/SpanOverlap2.diff",
        "LUCENE-3229.patch": "https://issues.apache.org/jira/secure/attachment/12483588/LUCENE-3229.patch",
        "SpanOverlap.diff": "https://issues.apache.org/jira/secure/attachment/12483433/SpanOverlap.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-22T12:14:27+0000",
            "content": "Add the Test unit. ",
            "author": "Ludovic Boutros",
            "id": "comment-13053206"
        },
        {
            "date": "2011-06-22T12:15:07+0000",
            "content": "add a Patch. ",
            "author": "Ludovic Boutros",
            "id": "comment-13053207"
        },
        {
            "date": "2011-06-22T14:35:37+0000",
            "content": "testSpanNearUnOrdered unit test does not work anymore.\n\nThe unordered SpanNear class uses the ordering function of the ordered SpanNear class. Perhaps, it should use its own ordering function which allows the span overlaps.\nI will check. ",
            "author": "Ludovic Boutros",
            "id": "comment-13053286"
        },
        {
            "date": "2011-06-22T15:30:26+0000",
            "content": "add a patch for the \"SpanNearUnOrdered\" class. Everything should be ok now. ",
            "author": "Ludovic Boutros",
            "id": "comment-13053309"
        },
        {
            "date": "2011-06-23T10:24:25+0000",
            "content": "To reduce surprises like this one when nested spans are used, the ordered case might be changed to require no overlap at all.\nTo do that one could compare the end of one spans with the beginning of the next one.\n\nAFAIK none of the existing test cases uses a nested span query, so more some test cases for that would be good to have.\n\nThe docSpansOrdered method in NearSpansUnordered from the SpanOverLap2.diff patch\nis the same as the existing docSpansOrdered method in NearSpansOrdered. \nThat is probably not intended.\n\nCould you provide patches as decribed here: http://wiki.apache.org/lucene-java/HowToContribute ? ",
            "author": "Paul Elschot",
            "id": "comment-13053780"
        },
        {
            "date": "2011-06-23T12:29:25+0000",
            "content": ":To reduce surprises like this one when nested spans are used, the ordered case might be changed to require no overlap at all.\n:To do that one could compare the end of one spans with the beginning of the next one.\n:AFAIK none of the existing test cases uses a nested span query, so more some test cases for that would be good to have.\n\nThe patch does exactly that.\n\n:The docSpansOrdered method in NearSpansUnordered from the SpanOverLap2.diff patch\n:is the same as the existing docSpansOrdered method in NearSpansOrdered.\n:That is probably not intended.\n\nIt is the same as the actual method because I don't want to modify the current behavior of the NearSpansUnordered class.\nOverlap should be allowed for unordered near span queries. And if I do not do that, unit test is KO for unordered near span queries.\n\n:Could you provide patches as decribed here: http://wiki.apache.org/lucene-java/HowToContribute ?\n\nSorry for that, sure, I will provide the patch shortly.\n\n ",
            "author": "Ludovic Boutros",
            "id": "comment-13053817"
        },
        {
            "date": "2011-06-23T12:45:24+0000",
            "content": "Here is the patch as described in the wiki.\nIs it ok ? ",
            "author": "Ludovic Boutros",
            "id": "comment-13053823"
        },
        {
            "date": "2011-06-23T18:46:14+0000",
            "content": "Basically the same functionality as previous patch by Ludovic Boutros.\nSimplified the check for non overlapping spans, this might speed it up somewhat.\nAdded javadoc explanations on ordered without overlap and unordered with overlap. \nMinor spelling and indentation changes.\n\nNearSpansOrdered might be further simplified as not all locals are actually used now because of the simplified check, but for now I prefer to leave that to the JIT to optimize away. ",
            "author": "Paul Elschot",
            "id": "comment-13054023"
        },
        {
            "date": "2011-06-23T18:48:53+0000",
            "content": "Thanks for bringing this up, this has confused more people in the past, and that could well be over now. ",
            "author": "Paul Elschot",
            "id": "comment-13054026"
        },
        {
            "date": "2011-06-23T19:17:49+0000",
            "content": "Thanks Paul,\n\ndo you have any idea when this patch will be applied to the branch 3x ? ",
            "author": "Ludovic Boutros",
            "id": "comment-13054045"
        },
        {
            "date": "2011-06-24T07:01:17+0000",
            "content": "Try and set 3.4 as fix version for this, 3.3 is already on the way out.\nIt might also help to add some text for a changes.txt entry. ",
            "author": "Paul Elschot",
            "id": "comment-13054270"
        },
        {
            "date": "2012-03-23T20:28:19+0000",
            "content": "Bulk changing fixVersion 3.6 to 4.0 for any open issues that are unassigned and have not been updated since March 19.\n\nEmail spam suppressed for this bulk edit; search for hoss20120323nofix36 to identify all issues edited ",
            "author": "Hoss Man",
            "id": "comment-13237027"
        },
        {
            "date": "2013-07-23T18:44:48+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717063"
        },
        {
            "date": "2013-10-16T21:47:07+0000",
            "content": "Have been successfully using the provided fix since 3.6.  (Thanks ludovic and Paul).\n\nSince the original patches haven't applied cleanly for a while, I thought I'd upload the version we've been using.  It preserves the logic from Paul Elschot's version, except re-based against version 4.5 and with some minor javadoc fixes.\n\nIf there's anything else that would be helpful, please comment and I'll see what I can do. ",
            "author": "Greg Dearing",
            "id": "comment-13797307"
        },
        {
            "date": "2013-10-17T17:21:52+0000",
            "content": "The patch of 16 Oct 2013 works for me.\n\nIs there any reason for some of methods in TestNearSpansOrdered to be protected?\n\nI made the following change to try and make it a bit more involved.\nThe subquery is now not ordered, and its arguments have been reversed:\n\n\n  protected SpanNearQuery makeOverlappedQuery() {\n    return new SpanNearQuery(\n      new SpanQuery[] {\n        new SpanNearQuery(new SpanQuery[] {\n          new SpanTermQuery(new Term(FIELD, \"w5\")),\n            new SpanTermQuery(new Term(FIELD, \"w3\")) },\n            1,\n            false\n          ),\n          new SpanTermQuery(new Term(FIELD, \"w4\")) },\n          0,\n          true);\n  }\n\n\n\nThe only thing I can think of that might be in the way is that this changes existing behaviour, and it does not provide any way to have the previous behaviour.\nUsing unordered spans does allow overlaps, so that does not have to be real problem, and it isn't for me.\n\nAny objections because of the lack of backward compatibility?\n ",
            "author": "Paul Elschot",
            "id": "comment-13798121"
        },
        {
            "date": "2013-10-18T19:45:10+0000",
            "content": "I don't think Paul's questions weren't directed at me, but to add my thoughts:\n\nI also don't see a need for backward compatibility.  This feels like a bug fix, though I suppose that could be argued.  If there ends up being a strong desire for compatibility, maybe I could add a new constructor:\n\npublic SpanNearQuery(SpanQuery[] clauses, int slop, boolean inOrder, boolean collectPayloads, boolean allowOverlap)\n\n\n\nThis would enable the original behavior and also add the unordered/not-overlapping case.  Neither feels especially useful.\n\nAlso, I'm a little uncertain about the workflow.  Your test change seems reasonable to me; would you like me to generate a new patch incorporating it? ",
            "author": "Greg Dearing",
            "id": "comment-13799443"
        },
        {
            "date": "2013-10-19T10:26:12+0000",
            "content": "I'm a little uncertain about the workflow.\n\nThat's not a bug, that's a feature  ",
            "author": "Paul Elschot",
            "id": "comment-13799853"
        },
        {
            "date": "2013-10-19T10:30:40+0000",
            "content": "The patch of 19 Oct 2013 adds a few more test cases to verify that there is a match in the overlapped non ordered case. ",
            "author": "Paul Elschot",
            "id": "comment-13799854"
        },
        {
            "date": "2014-04-16T12:54:33+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970794"
        },
        {
            "date": "2014-11-14T11:20:10+0000",
            "content": "Added CHANGES entry and re-rooted patch from root of svn checkout.\n\nLast call on this one: any reasons not to commit?   I'll do so today.  Apologies for this one lingering for so long, our bad. ",
            "author": "Erik Hatcher",
            "id": "comment-14212140"
        },
        {
            "date": "2014-11-14T17:16:17+0000",
            "content": "Thank you Erik. ",
            "author": "Ludovic Boutros",
            "id": "comment-14212492"
        },
        {
            "date": "2014-11-14T18:07:57+0000",
            "content": "Commit 1639714 from Erik Hatcher in branch 'dev/trunk'\n[ https://svn.apache.org/r1639714 ]\n\nLUCENE-3229: Overlapping ordered SpanNearQuery spans should not match. ",
            "author": "ASF subversion and git services",
            "id": "comment-14212561"
        },
        {
            "date": "2014-11-14T18:16:15+0000",
            "content": "Commit 1639715 from Erik Hatcher in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1639715 ]\n\nLUCENE-3229: Overlapping ordered SpanNearQuery spans should not match. ",
            "author": "ASF subversion and git services",
            "id": "comment-14212572"
        },
        {
            "date": "2014-11-14T18:17:09+0000",
            "content": "Commit 1639716 from Erik Hatcher in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1639716 ]\n\nLUCENE-3229: Overlapping ordered SpanNearQuery spans should not match. (merged from trunk r1639714) ",
            "author": "ASF subversion and git services",
            "id": "comment-14212574"
        },
        {
            "date": "2014-11-14T18:19:04+0000",
            "content": "Commit 1639718 from Erik Hatcher in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1639718 ]\n\nLUCENE-3229: Overlapping ordered SpanNearQuery spans should not match. (merged from trunk r1639714) ",
            "author": "ASF subversion and git services",
            "id": "comment-14212576"
        },
        {
            "date": "2014-11-14T18:27:43+0000",
            "content": "Commit 1639720 from Erik Hatcher in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1639720 ]\n\nLUCENE-3229: fix CHANGES.txt entry ",
            "author": "ASF subversion and git services",
            "id": "comment-14212581"
        },
        {
            "date": "2014-11-14T18:36:30+0000",
            "content": "Committed to branches 4_10, 5x, and trunk.\n\nI worry that lucene/CHANGES.txt is a bit off on some of those, so might need to fix those up after the fact. ",
            "author": "Erik Hatcher",
            "id": "comment-14212599"
        },
        {
            "date": "2014-11-16T19:56:57+0000",
            "content": "Thanks Erik.  It was great meeting you and your team at revolution. ",
            "author": "Greg Dearing",
            "id": "comment-14214039"
        },
        {
            "date": "2014-11-17T21:55:39+0000",
            "content": "Thank you all. ",
            "author": "Paul Elschot",
            "id": "comment-14215259"
        },
        {
            "date": "2015-02-23T05:01:46+0000",
            "content": "Bulk close after 5.0 release. ",
            "author": "Anshum Gupta",
            "id": "comment-14332759"
        }
    ]
}