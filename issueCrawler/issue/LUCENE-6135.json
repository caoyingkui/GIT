{
    "id": "LUCENE-6135",
    "title": "re-number fields randomly in tests",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Test"
    },
    "description": "Currently some code (such as stored fields bulk merge) depends upon consistent field number ordering. \n\nIn the case field numbers do not align, then optimizations are disabled, because the would cause crazy corruption where values are mixed up across different fields. \n\nBut this is hardly tested today. If i introduce an intentional bug into this logic, then only one lone test fails: TestAddIndexes.testFieldNamesChanged, and only about 10% of the time at best. In general tests pass.\n\n\n--- lucene/core/src/java/org/apache/lucene/codecs/compressing/MatchingReaders.java\t(revision 1647793)\n+++ lucene/core/src/java/org/apache/lucene/codecs/compressing/MatchingReaders.java\t(working copy)\n@@ -52,6 +52,10 @@\n     for (int i = 0; i < numReaders; i++) {\n       for (FieldInfo fi : mergeState.fieldInfos[i]) {\n         FieldInfo other = mergeState.mergeFieldInfos.fieldInfo(fi.number);\n+        // nocommit:\n+        if (true) {\n+          break;\n+        }\n         if (other == null || !other.name.equals(fi.name)) {\n           continue nextReader;\n         }\n\n\n\nDon't get me wrong, its a great simple test, but it should not be the only one doing this. And it would be great if it failed more often, i havent looked as to why it only fails rarely if there is a bug in this stuff.\n\nBut in general, we should simulate this more. My current idea is to shuffle up field numbers in MockRandomMergePolicy.",
    "attachments": {
        "LUCENE-6135.patch": "https://issues.apache.org/jira/secure/attachment/12689055/LUCENE-6135.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14258340",
            "author": "Adrien Grand",
            "date": "2014-12-24T15:45:15+0000",
            "content": "Maybe we should have a test decicated to this in the BaseStoredFieldsFormatTestCase too (since this issue most likely hits stored fields)? "
        },
        {
            "id": "comment-14258342",
            "author": "Robert Muir",
            "date": "2014-12-24T15:48:26+0000",
            "content": "+1 to dedicated tests in the stored fields format too!\n\nThe mockrandom MP idea is just a \"shotgun\" approach. It may help detect bugs anywhere, not just stored fields.\n\nBut this should be a last resort, we should test these corner cases in the stored fields base test heavily. "
        },
        {
            "id": "comment-14258410",
            "author": "Robert Muir",
            "date": "2014-12-24T17:57:58+0000",
            "content": "Here's a patch. I inserted bugs into stored fields merging and the new test in BaseStoredFieldsTestCase fails instantly.\n\nWe also randomly wrap readers in merge and in newSearcher for checks all around. This itself won't find bugs in bulk merge because it uses FilterReader, but its good safety. "
        },
        {
            "id": "comment-14259611",
            "author": "ASF subversion and git services",
            "date": "2014-12-28T11:09:09+0000",
            "content": "Commit 1648188 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1648188 ]\n\nLUCENE-6135: renumber fields randomly in tests "
        },
        {
            "id": "comment-14259621",
            "author": "ASF subversion and git services",
            "date": "2014-12-28T11:21:06+0000",
            "content": "Commit 1648189 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1648189 ]\n\nLUCENE-6135: renumber fields randomly in tests "
        },
        {
            "id": "comment-14332845",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:02:13+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}