{
    "id": "LUCENE-4315",
    "title": "Minor fixes for Fields abstract class, TermVectorsWriter",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "affect_versions": "4.0-BETA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The Fields abstract class is a little bit inconsistent. It does not allow iterator() to throw IOException, but size() is allowed to do this. This is inconsistent, as looping through iterator always returns size without IOException.\n\nAlso Fields.size() allows -1 as return value, but almost all implementation (only MultiFields and FieldFilteredAtomicReader actually return -1) implement it in a very cheap way. This is simple statistics, we should rethink this:\n\n\tTermVectorsWriter's basic merging (without optimization requires this information, also requires Terms.size())\n\tWe can default Fields.size() to count iterator (instead of abstract), if not explicitely implemented. This method is called only by tools like Luke (introspection) and TermVectors merging.\n\n\n\nWe should maybe enforce size() for Fields to return a value >=0 (Preflex also knows its size!), and if the impl class does not have it (MultiFields, FieldFilteredAtomicReader), loop by supplying default impl.\n\nThe current patch still allows -1 as return value and removes IOException from the signature.",
    "attachments": {
        "LUCENE-4315.patch": "https://issues.apache.org/jira/secure/attachment/12541599/LUCENE-4315.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-08-20T14:49:47+0000",
            "content": "Patch.\n\nThis patch also removes oal.util.UnmodifiableIterator. The same can be done with java.util.Collections easily without any neglectible overhead. No need for this class. ",
            "author": "Uwe Schindler",
            "id": "comment-13437913"
        },
        {
            "date": "2012-08-20T14:54:39+0000",
            "content": "I agree with the patch. \n\nOn a related note, we should consider Fields.getUniqueTermCount,\nwhich has a default implementation that sums across fields (preflex overrides). \n\nThis was necessary to have some way to access the segment-level unique term count for 3.x indexes,\nwhich do not actually know this information per-field and override this method to provide it.\n\nBut there is no need to have this on AtomicReader (I think its way too expert, just get the Fields\nand get it from there), and we can consider deprecating this in 4.x and removing it in trunk \nalltogether as then someone can just use the field-level statistics. ",
            "author": "Robert Muir",
            "id": "comment-13437916"
        },
        {
            "date": "2012-08-20T18:03:59+0000",
            "content": "But there is no need to have this on AtomicReader (I think its way too expert, just get the Fields and get it from there), and we can consider deprecating this in 4.x and removing it in trunk alltogether as then someone can just use the field-level statistics.\n\nCan you open issue? I also agree that this method is way to often visble and for real 4.0 indexes this is completely useless on AtomicReader, because reader.fields() can return the same. ",
            "author": "Uwe Schindler",
            "id": "comment-13438041"
        },
        {
            "date": "2012-08-20T18:14:10+0000",
            "content": "Updated patch:\n\n\tsize() is defined to return -1 if stat not available. FieldCacheImpl checked for UOE, too - removed this.\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13438048"
        },
        {
            "date": "2012-08-20T18:42:18+0000",
            "content": "\nCan you open issue? I also agree that this method is way to often visble and for real 4.0 indexes this is completely useless on AtomicReader, because reader.fields() can return the same.\n\nYes, lets open a separate one from this. I just noticed it when looking at your patch. ",
            "author": "Robert Muir",
            "id": "comment-13438077"
        },
        {
            "date": "2012-08-20T18:43:12+0000",
            "content": "\nsize() is defined to return -1 if stat not available. FieldCacheImpl checked for UOE, too - removed this.\n\nGood catch, thats a relic because I think it threw UOE in 3.x indexes: we changed it to -1 to be consistent\nwith other stats. ",
            "author": "Robert Muir",
            "id": "comment-13438078"
        },
        {
            "date": "2012-08-20T21:11:42+0000",
            "content": "+1\n\nThough ... I wonder if we should disallow Fields.size() to return -1?  Ie, require it to return the number of unique fields, always. ",
            "author": "Michael McCandless",
            "id": "comment-13438213"
        },
        {
            "date": "2012-08-21T06:24:04+0000",
            "content": "Hi Mike, I already proposed that and opened this issue to discuss this. As a first step to \"correct\" the current status is the attached patch. But I also agree to make it mandatory.\n\nThe following Fields implementation would then need to manually iterate and (maybe) store the value in a volatile as cache:\n\n\tMultiFields (returns -1)\n\tFieldFilterAtomicReader (returns -1 now, but previously also iterated - removed that code because it was broken)\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-13438479"
        },
        {
            "date": "2012-08-21T12:54:39+0000",
            "content": "I will commit this soon. I think the discussion if Fields.size() may return -1 or not should be done in a new issue. The current patch solves the problems in TermVectorsWriter and improves the API to be more consistent. It also removes the UnmodifiableIterator, which is not needed when Collections.unmodifiableXxx() is used on the underlying collection. ",
            "author": "Uwe Schindler",
            "id": "comment-13438680"
        },
        {
            "date": "2012-08-21T13:21:27+0000",
            "content": "Committed trunk revision: 1375522\nCommitted 4.x revision: 1375530\n\nI'll open a new issue to rethink Fields.size() returning -1 ",
            "author": "Uwe Schindler",
            "id": "comment-13438712"
        },
        {
            "date": "2013-05-10T10:32:40+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653690"
        }
    ]
}