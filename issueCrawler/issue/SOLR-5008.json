{
    "id": "SOLR-5008",
    "title": "Add Support for composite CSV fields",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Information Provided"
    },
    "description": "It is often useful to be able to create a single field from more than one CSV column.  For instance, I may want to take a latitude and longitude column in my CSV and map that to a single field name",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Robert Muir",
            "id": "comment-13701098",
            "date": "2013-07-05T19:55:57+0000",
            "content": "What does this have to do with CSV? combining two fields together seems unrelated and better handled at e.g. updateprocessor or something? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13701099",
            "date": "2013-07-05T20:01:22+0000",
            "content": "Robert Muir Yeah, kind of, except we allow splits at the CSV level and various other transformations that could just as well be handled at the updateprocessor level too, except they are already baked in. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13701100",
            "date": "2013-07-05T20:04:48+0000",
            "content": "I dont see that as a good reason to add more stuff to the wrong place. Anything that currently doesnt belong there should be fixed instead.\n\nI'd rather see it easier to stuff like combine two fields in a way thats not specific to the format, because its totally unrelated to csv. and useful for other formats, too. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13701112",
            "date": "2013-07-05T20:49:07+0000",
            "content": "I guess I don't see it as wrong, but simply a choice that someone made.  In this particular case, I do think, for the most part, it is relatively specific to CSV since CSV's often come in a format that one doesn't control (which is the case I have now and why I am even considering this) and some simple operations on them to make it easier to consume in Solr w/o having to install update processors, etc. are a good thing, which is why the map, split and other stuff were added in the first place. "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13701117",
            "date": "2013-07-05T20:59:33+0000",
            "content": "w/o having to install update processors, etc.\n\nThe new StatelessScriptUpdateProcessor makes it super easy to do a lot of this basic field-level processing (see examples in my book!).\n\nIn fact, you might consider implementing the totality of this Jira as one such script with parameters - or at least as a prototype for easy experimentation. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13706247",
            "date": "2013-07-11T21:19:43+0000",
            "content": "FWIW, this approach doesn't actually work w/o creating dummy fields, under the current code.\n\nFor instance, I have a CSV w/ raw data of Lat/Long.  I want to map that to a single field called Location (which is a Point type).  Problem is in order for it to get past the CSV loader to get to the update processor, the CSV loader has to validate the fields exist.\n\nSo, I can either create dummy field definitions that are never going to be used (which I find ugly) or we could have basic support for this in CSV loader or we could turn off the validation (which probably should happen anyways due to the field guessing stuff) "
        },
        {
            "author": "Jack Krupansky",
            "id": "comment-13706270",
            "date": "2013-07-11T21:34:47+0000",
            "content": "the CSV loader has to validate the fields exist\n\nJust use dynamic field names in the csv for the \"fake\" fields, such as my_lat_d and my_lon_d. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13706523",
            "date": "2013-07-12T00:43:41+0000",
            "content": "Jack,\n\nYes, I know how to work around it.  It's less than satisfying given what I am trying to do at the moment, as it isn't clean.  I'll fix the validation instead. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13713239",
            "date": "2013-07-19T01:36:33+0000",
            "content": "With SOLR-5037 about to be committed, there won't be a need to have fields defined for columns in a CSV.  \n\nI can understand the desire to be able to configure \"composite\" fields all from request parameters in order to not have to configure an update processor to ingest arbitrary CSV in this \"lat\" and \"lon\" => \"lat,lon\" kind of scenario.  I can see this being an optional bell/whistle for the CSV loader only.  If you're ingesting SolrXML or SolrJSON you're obviously generating that from somewhere else so you could do the combining in that generation process, but that's not always the case with the ideal CSV ingestion pipeline.   I also understand (and tend to agree with it being a nice other option to have) the update processor idea here, but that can be a separate ticket and shouldn't block a useful and optional feature from making it to the CSV loader only.  "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13713255",
            "date": "2013-07-19T01:57:11+0000",
            "content": "Doesn't seem like this one should be targeted for 4.4 since there aren't any patches here yet even and that it's still being discussed.  I'm targeting it for 4.5. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971066",
            "date": "2014-04-16T12:57:03+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-16018230",
            "date": "2017-05-20T01:19:18+0000",
            "content": "Grant Ingersoll does `TemplateUpdateProcessor` solve this one? "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-16491468",
            "date": "2018-05-26T02:25:06+0000",
            "content": "TemplateUpdateProcessor does solve this use case and\u00a0 in Solr 7.x has a shortcut name, that does not require configuring it in solrconfig.xml.\n\n// bin/post -c corename -params \"processor=template&template.field=location:{Latitude},{Longitude}\" dataset.csv\n\n "
        }
    ]
}