{
    "id": "SOLR-11687",
    "title": "SolrCore.getNewIndexDir falsely returns {dataDir}/index on any IOException reading index.properties",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I'll link the originating Solr JIRA in a minute (many thanks Nikolay). \n\nright at the top of this method we have this:\n\n\nString result = dataDir + \"index/\";\n\n\n\nIf, for any reason, the method doesn't complete properly, the \"result\" is still returned. Now for instance, down in SolrCore.cleanupOldIndexDirectories the \"old\" directory is dataDir/index which may point to the current index.\n\nThis seems particularly dangerous:\n\n       try {\n          p.load(new InputStreamReader(is, StandardCharsets.UTF_8));\n\n          String s = p.getProperty(\"index\");\n          if (s != null && s.trim().length() > 0) {\n              result = dataDir + s;\n          }\n\n        } catch (Exception e) {\n          log.error(\"Unable to load \" + IndexFetcher.INDEX_PROPERTIES, e);\n        } finally {\n          IOUtils.closeQuietly(is);\n        }\n\n\n\n\nShould \"p.load\" fail for any reason whatsoever, we'll still return dataDir/index.\n\nAnyone want to chime on on what the expectations are here before I dive in?",
    "attachments": {
        "SOLR-11687.patch": "https://issues.apache.org/jira/secure/attachment/12899734/SOLR-11687.patch",
        "SOLR-11687_alt.patch": "https://issues.apache.org/jira/secure/attachment/12900520/SOLR-11687_alt.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-27T22:23:12+0000",
            "content": "Fixing 11687 may handle 11625, listing them separately though. ",
            "author": "Erick Erickson",
            "id": "comment-16267697"
        },
        {
            "date": "2017-11-27T22:52:07+0000",
            "content": "(issue edited to reformat the description and clarify the summary) ",
            "author": "Hoss Man",
            "id": "comment-16267736"
        },
        {
            "date": "2017-11-27T22:59:07+0000",
            "content": "AFAICT, this method is just blatently broken in the situation where index.properties exists but any sort of Exception occurs while attempting to read it, or any sort of IOException occurs when even trying to determine if it exists (other then the FNFE and NSFE used to indicate that it does not)\n\nA decision needs to be made as to what the semantics of this method should be in the event of an underlying Exception reading this file (ie: return null, throw IOException, throw SolrException, something else, etc...) and all callers need to be updated to ensure they account for that possibility.\n\nUntil then, this method will happily lie and say \"the new index dir is dataDir + \"index/\"\" even if there is a much more current one listed in index.properties.\n ",
            "author": "Hoss Man",
            "id": "comment-16267747"
        },
        {
            "date": "2017-11-28T04:22:53+0000",
            "content": "I've worked up the skeleton of a patch I'll look over and attach tomorrow after running tests. I have a couple of nocommits I'd like to draw attention to, in particular what do we do if, say, the index.properties file has \nindex=\n\nor, more generically if Properties.getProperty(\"index\") returns null or an empty string? It seems like returning the default dataDir/index/ is correct.\n\nThe simple notion of returning null looks ugly, there are numerous places that pretty much assume the response is not null and some of them are convoluted. Catching them all would be a pain and I'm not sure would add any value. Failing to catch them would result in NPEs, just kicking the can down the road.\n\nThrowing a RuntimeException fits the bill of \"something a programmer can't reasonably be expected to handle\". If we throw a checked exception it looks at first glance like there are a lot of places the code needs to be touched. Ditto I'm not sure any value would be added by using a checked exception\n\nAnyway, I'll see if tests run tonight and attach the file if it looks OK in the morning. ",
            "author": "Erick Erickson",
            "id": "comment-16268093"
        },
        {
            "date": "2017-11-29T02:19:28+0000",
            "content": "Here's a patch for comment. All tests pass. \n\nMostly it reorganizes the decision whether to return a string that's the indexDir or throw an exception.\n\nThere are  a couple of nocommits in here, mostly to draw people's attention to some assumptions if they have any opinion.\n\nComments welcome. If there aren't any objections I'll commit this in a few days after doing some additional testing. ",
            "author": "Erick Erickson",
            "id": "comment-16269946"
        },
        {
            "date": "2017-11-29T02:23:03+0000",
            "content": "If this approach is OK, it fixes SOLR-11625 as well I think. ",
            "author": "Erick Erickson",
            "id": "comment-16269955"
        },
        {
            "date": "2017-11-29T22:42:52+0000",
            "content": "erick: i haven't audited all of the code paths that call this method (did you?) but the one thing that jumps out at me in your patch is your choice to throw an explicit new RuntimeException(e) ... why not new SolrException(SERVER_ERROR, \"Some message about index.properties\", e) (since SolrException is also a RuntimeException) \n\n?\n ",
            "author": "Hoss Man",
            "id": "comment-16271690"
        },
        {
            "date": "2017-11-30T00:00:53+0000",
            "content": "Good catch Hoss, I'll change it for the next version of the patch. ",
            "author": "Erick Erickson",
            "id": "comment-16271839"
        },
        {
            "date": "2017-12-04T01:42:26+0000",
            "content": "Final patch (except for CHANGES.txt). I'll commit tomorrow (Monday) unless there are objections after running another round of precommit/tests.\n\nThere's a bit of extra noise. When I adopted Hoss' suggestion to use SolrException rather than RuntimeException, IntelliJ added an import and changed all the \nSolrException.ErrorCode.SERVER_ERROR\nto\nErrorCode.SERVER_ERROR\n\nbut I'm going to leave that part in and easily ignorable. ",
            "author": "Erick Erickson",
            "id": "comment-16276199"
        },
        {
            "date": "2017-12-04T03:27:13+0000",
            "content": "Hi Erick,\n\nThis is my current reading of the getNewIndexDir() method ( without the patch )\n1. If index.properties is not present return dataDir + \"index/\" \n2. If index.properties is present AND \"index\" key is not null/empty then return that value\n3. If while reading index.properties there is an exception we return dataDir + \"index/\" \n\nFrom what I understood of the patch the semantics of handling point 3 have changed i.e we throw an exception instead of returning dataDir + \"index/\"  . Am I understanding it correctly ? ",
            "author": "Varun Thacker",
            "id": "comment-16276248"
        },
        {
            "date": "2017-12-04T12:26:50+0000",
            "content": "+1 LGTM. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16276699"
        },
        {
            "date": "2017-12-04T15:30:48+0000",
            "content": "Varun ThackerRight. And the last point is the kicker because some interrupts would cause exceptions and would return dataDir+\"index/\". And in the case in point, the code was trying to delete old indexes. So what would get deleted instead was the current index. ",
            "author": "Erick Erickson",
            "id": "comment-16276943"
        },
        {
            "date": "2017-12-04T15:30:58+0000",
            "content": "Thanks Shalin.... ",
            "author": "Erick Erickson",
            "id": "comment-16276944"
        },
        {
            "date": "2017-12-04T17:54:29+0000",
            "content": "Final patch with CHANGES.txt ",
            "author": "Erick Erickson",
            "id": "comment-16277155"
        },
        {
            "date": "2017-12-04T17:57:33+0000",
            "content": "Commit 929ce7ca30d5b4f9d08aee604ba5184f0d94d505 in lucene-solr's branch refs/heads/master from Erick\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=929ce7c ]\n\nSOLR-11687: SolrCore.getNewIndexDir falsely returns \n{dataDir}\n/index on any IOException reading index.properties ",
            "author": "ASF subversion and git services",
            "id": "comment-16277158"
        },
        {
            "date": "2017-12-04T18:05:48+0000",
            "content": "Hi Erick\n\nIs this change enough then?  ",
            "author": "Varun Thacker",
            "id": "comment-16277165"
        },
        {
            "date": "2017-12-04T18:21:48+0000",
            "content": "Commit 04cb83cbc33b78b23cf978f242e44c79f427abfe in lucene-solr's branch refs/heads/branch_7x from Erick\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=04cb83c ]\n\nSOLR-11687: SolrCore.getNewIndexDir falsely returns \n{dataDir}\n/index on any IOException reading index.properties\n\n(cherry picked from commit 929ce7c) ",
            "author": "ASF subversion and git services",
            "id": "comment-16277191"
        }
    ]
}