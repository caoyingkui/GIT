{
    "id": "LUCENE-2217",
    "title": "Remaining reallocation should use ArrayUtil.getNextSize()",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "core/other"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "See recent discussion on ArrayUtils.getNextSize().",
    "attachments": {
        "LUCENE-2217.patch": "https://issues.apache.org/jira/secure/attachment/12430507/LUCENE-2217.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-01-16T18:38:56+0000",
            "content": "Makes sense! ",
            "author": "Michael McCandless",
            "id": "comment-12801253"
        },
        {
            "date": "2010-01-16T18:47:59+0000",
            "content": "Actually the patch isn't quite right, I think?  First, it just calls ArrayUtil.getNextSize w/o passing that to resizeBytes?\n\nSecond, it needs to pass lastBytePos + MAX_BYTES_PER_INT as the arg to ArrayUtil.getNextSize (ie, that's the \"min target size\")? ",
            "author": "Michael McCandless",
            "id": "comment-12801254"
        },
        {
            "date": "2010-01-16T23:17:53+0000",
            "content": "Indeed, the patch isn't quite right. I'll fix that and provide another patch. All test cases pass though, so I'll also try and\nadd a test case that fails when an allocation larger than the current initial size is needed.\n\nThe MAX_BYTE_PER_INT has disappeared into an added comment that states a minimum initial size.\nThe underlying problem is that ArrayUtils.getNextSize() does not have an argument for a minimum increase.\nWould it make sense to add that, too? The code there has some strange constants  (3, 6 and 9) that could\nperhaps be dropped when an extra argument for a minimum increase is added.\nLooking at the comment there for the growth pattern, shouldn't the second number (after 0) be 3 instead of 4? ",
            "author": "Paul Elschot",
            "id": "comment-12801295"
        },
        {
            "date": "2010-01-17T09:57:45+0000",
            "content": "I'll also try and add a test case that fails when an allocation larger than the current initial size is needed\n\nThat would be much appreciated   (I hit that too!).\n\nThe underlying problem is that ArrayUtils.getNextSize() does not have an argument for a minimum increase.  Would it make sense to add that, too?\n\nWell... the arg to getNextSize is already the minimum size that must be returned, so, can't you just pass in lastBytePos + MAX_BYTES_PER_INT?\n\n\nThe code there has some strange constants (3, 6 and 9) that could\nperhaps be dropped when an extra argument for a minimum increase is added.\nLooking at the comment there for the growth pattern, shouldn't the second number (after 0) be 3 instead of 4?\nWe're working on cleaning up this method, under LUCENE-2213.  The growth pattern in the comment is in fact correct, if you were to call getNextSize on 1+ the current size, ie this progression:\n\n\ngetNextSize(1+getNextSize(1+getNextSize(1+....getNextSize(1+0)))))\n\n ",
            "author": "Michael McCandless",
            "id": "comment-12801356"
        },
        {
            "date": "2010-01-17T20:48:53+0000",
            "content": "Fixed the reallocation to be actually done and added a test case that fails the previous patch because of the missing reallocation. ",
            "author": "Paul Elschot",
            "id": "comment-12801500"
        },
        {
            "date": "2010-01-19T20:12:58+0000",
            "content": "Btw. shouldn't IndexInput.bytes also be reallocated using ArrayUtils.getNextSize() ?\nThe growth factor there is a hardcoded 1.25 . ",
            "author": "Paul Elschot",
            "id": "comment-12802449"
        },
        {
            "date": "2010-01-19T20:26:54+0000",
            "content": "Btw. shouldn't IndexInput.bytes also be reallocated using ArrayUtils.getNextSize()\n\n+1  Wanna fold it into this patch?  (And any others you find..?). ",
            "author": "Michael McCandless",
            "id": "comment-12802456"
        },
        {
            "date": "2010-01-19T22:32:25+0000",
            "content": "Well, it's not that I'm searching, but I'll provide another patch that includes IndexInput for this.\n\nWould you have any idea about testcases for that?\n\n ",
            "author": "Paul Elschot",
            "id": "comment-12802510"
        },
        {
            "date": "2010-01-20T11:45:33+0000",
            "content": "Patch of 20 Jan also includes use of ArrayUtil.getNextSize() for allocation in IndexInput. ",
            "author": "Paul Elschot",
            "id": "comment-12802798"
        },
        {
            "date": "2010-01-20T13:33:54+0000",
            "content": "Small tweaks on the last patch, also adding ArrayUtil.getNextSize when allocating the char[] in IndexInput. ",
            "author": "Michael McCandless",
            "id": "comment-12802830"
        },
        {
            "date": "2010-01-20T14:38:21+0000",
            "content": "Since I missed the second one in IndexInput I used this regex to search the java files in trunk/src/java: \n\n new .*\\[.*\\] \n\nand found that these are still suspicious:\n\nPorterStemmer 85, 485\nStandardTokenizerImpl  447\nByteBlockPool 86\nCharBlockPool 45\nMultipleTermPositions 86\nTermInfosWriter 210\nTermsHashPerField 527 (maybe)\nTermVectorsReader 463, 472\nFastCharStream 58\nBufferedIndexInput 61, 157\nUnicodeUtil, 7 times or more.\n\n ",
            "author": "Paul Elschot",
            "id": "comment-12802850"
        },
        {
            "date": "2010-01-21T11:35:08+0000",
            "content": "I agree we should cutover these additional places \u2013 wanna work into the patch? ",
            "author": "Michael McCandless",
            "id": "comment-12803263"
        },
        {
            "date": "2010-01-21T11:58:06+0000",
            "content": "Paul, I just committed LUCENE-2213, which changes name & signature of ArrayUtil.getNextSize.... so be sure to update & merge before taking the patch further! ",
            "author": "Michael McCandless",
            "id": "comment-12803266"
        },
        {
            "date": "2010-01-21T17:31:08+0000",
            "content": "That was expected.\n\nThe next patch will be about 5 times bigger, so I'll need some more time. ",
            "author": "Paul Elschot",
            "id": "comment-12803380"
        },
        {
            "date": "2010-01-21T22:54:48+0000",
            "content": "Patch of 21 Jan is as anticipated, except for the following:\n\nUnicodeUtil.java last reallocation at line 332 unchanged.\n\nFastCharStream.java change might affect speed, not included in patch.\n\nTermsHashPerField unchanged.\n\nBufferedIndexInput unchanged, only used by clone() in MultiLevelSkipListReader. ",
            "author": "Paul Elschot",
            "id": "comment-12803523"
        },
        {
            "date": "2010-01-25T15:57:05+0000",
            "content": "New iteration of patch attached:\n\n\n\tRecovered the fixes in my first patch\n\n\n\n\n\tCutover some ArrayUtil.oversize -> ArrayUtil.grow\n\n\n\n\n\tWe can't change StandardTokenizerImpl.java \u2013 it's autogen'd from\n    JFlex\n\n ",
            "author": "Michael McCandless",
            "id": "comment-12804573"
        },
        {
            "date": "2010-01-25T20:27:02+0000",
            "content": "Patch looks good, all tests pass. Thanks for simplifying the added testcase.\nAfter this I'll post a clean patch at LUCENE-2232 . ",
            "author": "Paul Elschot",
            "id": "comment-12804691"
        },
        {
            "date": "2010-01-28T11:40:31+0000",
            "content": "Thanks Paul! ",
            "author": "Michael McCandless",
            "id": "comment-12805877"
        }
    ]
}