{
    "id": "SOLR-3382",
    "title": "Finegrained error propagation (focus on multi-document updates)",
    "details": {
        "affect_versions": "3.5",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "clients - java",
            "Response Writers",
            "update"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Today when an error occurs on server side during the handling of a request, the handling of the request will stop at the point when the error occured, and only a error-message (reason part of HTTP status line) and error-code (HTTP response code) is pushed back to the sender of the request.\n\nThis can be improved in several ways\n\n\tReacting as a client on errors, solely based on a textual message and a HTTP response code is hard. The error ought have some kind of type telling the client which kind of error happened.\n\tWhen handling multi-document updates the error might happen during the handling of one of the documents - potentially not the first document and potentially not the last document.\n\t\n\t\tThe client ought to get information about which documents where successfully updated (the ones comming before the document creating the error).\n\t\tIf the error updating a document is not due to a general problem, it could very well be that some of the documents not yet handled at the time of the error (the documents comming after the document creating the error), could be successfully updated - so why not try that.\n\t\tIf continuing the updating of documents, even after one document-update resulted in an error (as suggested above), the updating of some of those documents might also result in an error. This leads to another improvement, namely being able to send information about more than one error back to the client.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Per Steffensen",
            "id": "comment-13258080",
            "date": "2012-04-20T08:24:17+0000",
            "content": "We have created a solution to this while adding the update-features of \"fail if intent is to insert new document and document already exists\", \"fail if intent is to update existing document and document does not exist or has been changed since loaded\" etc. as described in SOLR-3173, SOLR-3178 and on http://wiki.apache.org/solr/Per%20Steffensen/Update%20semantics. Details about the solution to this SOLR-3382 is also to be found on http://wiki.apache.org/solr/Per%20Steffensen/Update%20semantics. Reason for solving this SOLR-3382 at the same time as SOLR-3173 and SOLR-3178 is that \"unique key constraint\"- and \"versioning\"-errors are not worth much if they cannot get properly propagated to the client.\n\nWe hope to contribe this solutions within a few weeks, but please feel free to comment, help shape etc., and we will make changes according to the wishes of the community.  "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13258086",
            "date": "2012-04-20T08:40:35+0000",
            "content": "In our contribution the \"finegrained error propagation\" is solely used for reporting \"unique key constraint\"- and \"versioning\"-errors, but the design is very generic, so in the future it can also be used for other situations where you want to report \"partial errors\" back to the client - e.g. in a replication setup, information about a update succeeding on leader but not on one or more of the replica. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13258092",
            "date": "2012-04-20T08:52:11+0000",
            "content": "Per, just one quick thought, regarding http://wiki.apache.org/solr/Per%20Steffensen/Update%20semantics#Status_line :\nCan we stick with default reason-phrases and put ours in X-Error-* -Headers? Otherwise we have to put String-Operations in Place, if we want to output these informations in some type of frontend "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13258134",
            "date": "2012-04-20T10:24:45+0000",
            "content": "Stefan Metheis, the string-operations are already there for you if you are using SolrJ, but I guess you are not, since you (as I understand it) are dealing with Solr admin console (probably calling services like update/query directly from the browser using some kind of Ajax, instead of doing that on server, which would be natural if the admin console where e.g. JSP-based). But never mind, your idea about encoding error-type (namespace and name) in response headers instead of in the reason-phrase is better. I will make the necessary changes in our code, so that it will be part of the contribution, and change the Wiki page. Thanks a lot! "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13258174",
            "date": "2012-04-20T12:08:47+0000",
            "content": "Stefan: Done! Changed my code and Wiki page. Please review and comment if you are not satisfied. "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13260742",
            "date": "2012-04-24T17:43:11+0000",
            "content": "See patch attached to SOLR-3178 "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13267475",
            "date": "2012-05-03T14:37:08+0000",
            "content": "New patch available as part of SOLR-3173_3178_3382_3428_plus.patch on SOLR-3178 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412137",
            "date": "2012-07-11T22:26:07+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429759",
            "date": "2012-08-07T03:42:45+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13452175",
            "date": "2012-09-10T17:41:57+0000",
            "content": "moving all 4.0 issues not touched in a month to 4.1 "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13627601",
            "date": "2013-04-10T08:27:53+0000",
            "content": "We use this Apache issue/ticket to keep track of what we did on our own internal version of Solr, and what would be provided in a patch for this issue if the Apache community was interested. Therefore this additional comment, for now just a \"note to self\":\n\nThe solution for \"error propagation\" now not only supports sending error-code, error-msg and error-type (corresponding to package+classname in java) so that exceptions can be reconstructed and thrown on client-side (automatic in SolrJ). Now it also supports additional properties (name/value pairs) on an exception and have those propagated over the line to the client where it can be (will be in SolrJ) attached as properties on the reconstructed exception. Explicit properties on exception are nice, because only alternative is to \"encode\" it in the error-msg, and then you have to parse the error-msg on the receiving side and that is part of what we want to avoid (it is too hacky and error prone).\nProperties also supported on \"nested\" exceptions about parts of the request-handling that failed - e.g. in a 5-doc update-request, where 3 updates succeed and 2 fail, 2 \"nested/part\"-exceptions will be returned to the client. Both of those \"nested/part\"-exceptions can independently contain their own set of properties.\n\nAs a proof-of-concept and to show that the implementation works and to have the feature \"protected\" by tests, the VersionConflict exception introduced in the solution for SOLR-3178 has been enhanced to carry a property \"currentVersion\" containing the current version of the document on server-side. So now, if the client want to know about the actual current version on server-side, it does not have to parse the error-msg to get hold of it - just read the provided property. All existing tests using VersionConflict has been updated to test that the returned currentVersion is correct. There are test that have VersionConflict as the top-level exception (version-conflict in a single-doc update-request) and other tests that have several VersionConflicts as \"nested/part\"-exceptions so both aspects are tested. \n\nThe ability of VersionConflict to carry current-version might not be very usefull. But it shows that the feature implementation works and it makes it easy to protect the feature by tests. Internally we will be using the feature for somthing far more usefull. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13669215",
            "date": "2013-05-29T13:11:12+0000",
            "content": "I'd still like to get this piece in somehow - I'm not sure how back compat handled (or much of anything - I have not looked closely yet), but even if it just goes into 5.0 instead, I think this is really important to get done. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717443",
            "date": "2013-07-23T18:48:15+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971284",
            "date": "2014-04-16T12:57:39+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}