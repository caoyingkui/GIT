{
    "id": "LUCENE-7008",
    "title": "TestSortingMergePolicy.testForceMergeNotNeeded fails",
    "details": {
        "resolution": "Resolved",
        "affect_versions": "5.5,                                            6.0",
        "components": [],
        "labels": "",
        "fix_versions": [
            "trunk",
            "5.5"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Test"
    },
    "description": "TestSortingMergePolicy.testForceMergeNotNeeded (recently added by LUCENE-7006) regularly and reproducibly fails e.g.\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSortingMergePolicy -Dtests.method=testForceMergeNotNeeded -Dtests.seed=BAF97ED1D97DDEEE -Dtests.slow=true -Dtests.locale=nl-NL -Dtests.timezone=CST6CDT -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n\n\n\nStack Trace:\n\njava.lang.AssertionError\n    at __randomizedtesting.SeedInfo.seed([BAF97ED1D97DDEEE:A6DA06CB422235FB]:0)\n    at org.apache.lucene.index.BaseMergePolicyTestCase$1.merge(BaseMergePolicyTestCase.java:44)\n    at org.apache.lucene.index.IndexWriter.maybeMerge(IndexWriter.java:1931)\n    at org.apache.lucene.index.IndexWriter.forceMerge(IndexWriter.java:1764)\n    at org.apache.lucene.index.IndexWriter.forceMerge(IndexWriter.java:1721)\n    at org.apache.lucene.index.BaseMergePolicyTestCase.testForceMergeNotNeeded(BaseMergePolicyTestCase.java:63)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\n    at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\n    at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\n    at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\n    at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n    at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n    at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n    at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n    at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n    at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n    at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\n    at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\n    at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\n    at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\n    at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\n    at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\n    at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n    at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n    at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n    at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n    at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n    at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n    at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n    at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n    at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n    at java.lang.Thread.run(Thread.java:745)",
    "attachments": {
        "LUCENE-7008.patch": "https://issues.apache.org/jira/secure/attachment/12785859/LUCENE-7008.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15128431",
            "author": "ASF subversion and git services",
            "date": "2016-02-02T15:53:15+0000",
            "content": "Commit 274febf021d8df8a5f411425b53a0662d04c1b75 in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=274febf ]\n\nLUCENE-7008: make TestSortingMergePolicy.testForceMergeNotNeeded a no-op until we figure out why the (super class) test fails. "
        },
        {
            "id": "comment-15128433",
            "author": "ASF subversion and git services",
            "date": "2016-02-02T15:55:02+0000",
            "content": "Commit 5dbe7d9a73bc4fd890a927b738c692314177ab17 in lucene-solr's branch refs/heads/branch_5x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5dbe7d9 ]\n\nLUCENE-7008: make TestSortingMergePolicy.testForceMergeNotNeeded a no-op until we figure out why the (super class) test fails. "
        },
        {
            "id": "comment-15129009",
            "author": "Shai Erera",
            "date": "2016-02-02T20:52:16+0000",
            "content": "I believe I found the cause. The test sets noCFSRatio randomly (and with that seed to 0.0), however since MergePolicy#setNoCFSRatio() is final, the call doesn't get through to the wrapped TieredMergePolicy. Because of that, it leads to finding the last segment to not be compound, and therefore it triggers a merge of the last segment to make it compound.\n\nAs a workaround, I've slightly changed the test to call setNoCFSRatio in a protected method, and overrode in TestSortingMergePolicy. Now the test passes with that seed.\n\nHowever, I wonder if we don't need a better solution, i.e. removing 'final' from methods on MergePolicy, so that delegating MPs can override them properly. This also affects UpgradeIndexMergePolicy. We can do that in a separate issue though. "
        },
        {
            "id": "comment-15129018",
            "author": "Shai Erera",
            "date": "2016-02-02T20:59:05+0000",
            "content": "Patch fixes the test. "
        },
        {
            "id": "comment-15131869",
            "author": "Shai Erera",
            "date": "2016-02-04T07:29:22+0000",
            "content": "Fixed in LUCENE-7010 "
        }
    ]
}