{
    "id": "SOLR-7560",
    "title": "Parallel SQL Support",
    "details": {
        "components": [
            "clients - java",
            "search"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "This ticket provides support for executing Parallel SQL queries across SolrCloud collections. The SQL engine will be built on top of the Streaming API (SOLR-7082), which provides support for parallel relational algebra and real-time map-reduce.\n\nBasic design:\n\n1) A new SQLHandler will be added to process SQL requests. The SQL statements will be compiled to live Streaming API objects for parallel execution across SolrCloud worker nodes.\n\n2) SolrCloud collections will be abstracted as Relational Tables. \n\n3) The Presto SQL parser will be used to parse the SQL statements.\n\n4) A JDBC thin client will be added as a Solrj client.\n\nThis ticket will focus on putting the framework in place and providing basic SELECT support and GROUP BY aggregate support.\n\nFuture releases will build on this framework to provide additional SQL features.",
    "attachments": {
        "SOLR-7560.calcite.patch": "https://issues.apache.org/jira/secure/attachment/12748991/SOLR-7560.calcite.patch",
        "SOLR-7560.patch": "https://issues.apache.org/jira/secure/attachment/12738289/SOLR-7560.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-05-20T18:33:14+0000",
            "author": "Noble Paul",
            "content": "Looking forward to this\n\nCan you post some example queries  ",
            "id": "comment-14552839"
        },
        {
            "date": "2015-05-22T10:50:40+0000",
            "author": "Joel Bernstein",
            "content": "Still working on the details of the queries. I will post more information with the patch. ",
            "id": "comment-14555966"
        },
        {
            "date": "2015-06-08T02:53:03+0000",
            "author": "Joel Bernstein",
            "content": "Initial patch implements parallel Group By with aggregates. Very basic tests included. It shows the strategy of compiling SQL statements to Streaming API objects. \n\nSQL Tables are mapped to SolrCloud collections using a simple table mapping configured in the SolrConfig.\n\nSample Group By:\n\nselect str_s, count(*), sum(field_i), min(field_i), max(field_i), avg(field_i) from mytable where text='XXXX' group by str_s order by sum(field_i) asc limit 2\n\n\n\nThe RollupStream and metric package have been added to the Streaming API to perform the Map/Reduce aggregations. ",
            "id": "comment-14576552"
        },
        {
            "date": "2015-06-09T11:30:00+0000",
            "author": "Dennis Gove",
            "content": "Possible expression syntax for the RollupStream\n\n\nrollup(\n  someStream(....),\n  over=\"fieldA, fieldB, fieldC\",\n  min(fieldA),\n  max(fieldA),\n  min(fieldB),\n  mean(fieldD),\n  sum(fieldC)\n)\n\n\n\nThis would require making the *Metric types Expressible but I think that ends up as a good thing. Would make it real easy to support other options on metrics like excluding outliers, for example find the sum of values within 3 standard deviations from the mean could be \n\nsum(fieldC, limit=standardDev(3))\n\n\n (note, how that particular calculation could be implemented is left as an exercise for the reader, I'm just using it as an example of adding additional options on a relatively simple metric).\nAnother option example is what to do with null values. For example, in some cases a null should not impact a mean but in others it should. You could express those as\n\nmean(fieldA, replace(null, 0))  // replace null values with 0 thus leading to an impact on the mean\nmean(fieldA, includeNull=\"true\") // nulls are counted in the denominator but nothing added to numerator\nmean(fieldA, includeNull=\"false\") // nulls neither counted in denominator nor added to numerator\nmean(fieldA, replace(null, fieldB), includeNull=\"true\") // if fieldA is null replace it with fieldB, include null fieldB in mean\n\n\nso on and so forth. ",
            "id": "comment-14578750"
        },
        {
            "date": "2015-06-09T12:38:41+0000",
            "author": "Joel Bernstein",
            "content": "Looks great!\n\nA little background on this discussion. Dennis Gove is describing the Streaming Expression (SOLR-7377) syntax for the RollupStream which is being added in this ticket to support the SQL aggregate functions. The RollupStream does Map/Reduce style aggregations where group by fields are sorted first and the aggregates are rolled up one group at a time. This technique will be very strong for time series rollups and aggregating high cardinality fields.\n\nThere will be other aggregation streams added in the future that tap into Solr faceting directly.  ",
            "id": "comment-14578827"
        },
        {
            "date": "2015-06-11T18:39:07+0000",
            "author": "Joel Bernstein",
            "content": "New patch with support for complex boolean WHERE clauses and accompanying tests. \n\nSimple SELECT statements (without aggregates functions) are also now supported.\n\nMore tests added for the GROUP BY (with aggregate functions) queries that demonstrate parallel time series aggregation.\n\nI believe this patch is now functionally complete.\n\nThought about adding the HAVING clause and ALIASES but I think this is functional enough to be useful for an initial release.\n\nSome more cleanup work to follow. ",
            "id": "comment-14582354"
        },
        {
            "date": "2015-06-12T05:00:32+0000",
            "author": "Joel Bernstein",
            "content": "New Patch adding support for the HAVING clause of GROUP BY statements. \n\nSample syntax:\n\n\nselect str_s, count(*), sum(field_i), min(field_i), max(field_i), avg(field_i) from mytable where text='XXXX' group by str_s having ((sum(field_i) = 19) AND (min(field_i) = 8))\n\n\n ",
            "id": "comment-14582936"
        },
        {
            "date": "2015-06-13T22:31:13+0000",
            "author": "Joel Bernstein",
            "content": "New patch with all tests and precommit passing. ",
            "id": "comment-14584846"
        },
        {
            "date": "2015-06-14T21:00:11+0000",
            "author": "Joel Bernstein",
            "content": "There is still some more work to do before it's ready for a release but I believe this ticket is far enough along to commit to trunk.\n\nThe main goals have been accomplished:\n\nTwo SQL constructs are supported:\n\n1) SELECT statements with complex nested WHERE clauses, ORDER BY and LIMIT.\n2) GROUP BY statements with aggregate functions, complex nested WHERE and HAVING clauses, ORDER BY and LIMIT. The functions supported are SUM, COUNT, AVG, MIN, MAX.\n\nThe GROUP BY aggregations can be run in parallel across a SolrCloud worker collection, providing a true Parallel SQL framework for SolrCloud.\n\nA new /sql request (SQLHandler.java) has been created to handle SQL requests and stream back the results. \n\nInitial test cases demonstrate the functionality described above.\n\nThe excellent Presto SQL parser has been integrated into the SQLHandler and all the licenses for new dependencies have been added to the project.\n\nThe JDBC driver has not been built as part of this ticket so the SQLHandler's HTTP interface will need to be accessed directly.\n\n\n\n\n\n\n ",
            "id": "comment-14585271"
        },
        {
            "date": "2015-06-15T02:51:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1685497 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1685497 ]\n\nSOLR-7560: Parallel SQL Support ",
            "id": "comment-14585386"
        },
        {
            "date": "2015-06-16T15:15:40+0000",
            "author": "Christine Poerschke",
            "content": "Hello, was experiencing 'ant resolve' difficulties related to the com.facebook.presto dependency that was added above.\n\nWe have tried a few things and just adding conf=\"compile->*\" attributes for the new dependencies in solr/core/ivy.xml makes it work (this is in combination with customised lucene/ivy-settings.xml though).\n\n\n-    <dependency org=\"com.facebook.presto\" name=\"presto-parser\" rev=\"${/com.facebook.presto/presto-parser}\"/>\n-    <dependency org=\"org.antlr\" name=\"antlr4-runtime\" rev=\"${/org.antlr/antlr4-runtime}\"/>\n-    <dependency org=\"io.airlift\" name=\"slice\" rev=\"${/io.airlift/slice}\"/>\n+    <dependency org=\"com.facebook.presto\" name=\"presto-parser\" rev=\"${/com.facebook.presto/presto-parser}\" conf=\"compile->*\"/>\n+    <dependency org=\"org.antlr\" name=\"antlr4-runtime\" rev=\"${/org.antlr/antlr4-runtime}\" conf=\"compile->*\"/>\n+    <dependency org=\"io.airlift\" name=\"slice\" rev=\"${/io.airlift/slice}\" conf=\"compile->*\"/>\n\n ",
            "id": "comment-14588177"
        },
        {
            "date": "2015-06-16T16:05:17+0000",
            "author": "Joel Bernstein",
            "content": "It doesn't seem to be breaking jenkins. I'll clear my ivy cache and see if I can reproduce the errors. ",
            "id": "comment-14588279"
        },
        {
            "date": "2015-06-16T16:12:14+0000",
            "author": "Joel Bernstein",
            "content": "Wasn't able to reproduce. I blew away the ivy caches, did a fresh trunk pull, and the presto dependancies were pulled right down during an \"ant compile\".\n\nI'll do a little more research ... ",
            "id": "comment-14588294"
        },
        {
            "date": "2015-06-17T20:28:59+0000",
            "author": "Christine Poerschke",
            "content": "Looked into and learnt some more on this. The original 'ant resolve' error was\n\n[ivy:retrieve]          ::::::::::::::::::::::::::::::::::::::::::::::\n[ivy:retrieve]          ::          UNRESOLVED DEPENDENCIES         ::\n[ivy:retrieve]          ::::::::::::::::::::::::::::::::::::::::::::::\n[ivy:retrieve]          :: com.facebook.presto#presto-parser;0.107: configuration not found in com.facebook.presto#presto-parser;0.107: 'master'. It was required from org.apache.solr#core;working@hostname compile.hadoop\n[ivy:retrieve]          ::::::::::::::::::::::::::::::::::::::::::::::\n\n\nand i found http://wrongnotes.blogspot.co.uk/2014/02/simplest-explanation-of-ivy.html useful to understand the meaning of the error and what the conf=\"compile->*\" attribute addition means (still in combination with customised lucene/ivy-settings.xml though).\n\n\nFollowing on from that, i cleared my ivy cache and tried this alternative, shorter dependency declaration\n\n-    <dependency org=\"com.facebook.presto\" name=\"presto-parser\" rev=\"${/com.facebook.presto/presto-parser}\"/>\n-    <dependency org=\"org.antlr\" name=\"antlr4-runtime\" rev=\"${/org.antlr/antlr4-runtime}\"/>\n-    <dependency org=\"io.airlift\" name=\"slice\" rev=\"${/io.airlift/slice}\"/>\n+    <dependency org=\"com.facebook.presto\" name=\"presto-parser\" rev=\"${/com.facebook.presto/presto-parser}\" conf=\"compile.hadoop->*\"/>\n\n\nand that also worked but since the https://repo1.maven.org/maven2/com/facebook/presto/presto-parser/0.107/presto-parser-0.107.pom file has additional dependencies apart from org.antlr antlr4-runtime and io.airlift slice the shorter alternative is perhaps/probably not equivalent to the original dependency trio. ",
            "id": "comment-14590518"
        },
        {
            "date": "2015-06-17T21:16:26+0000",
            "author": "Joel Bernstein",
            "content": "Can you paste the steps you're using to reproduce the error into the ticket?  ",
            "id": "comment-14590619"
        },
        {
            "date": "2015-06-17T21:34:15+0000",
            "author": "Joel Bernstein",
            "content": "Just blew away the ivy cache, did a fresh trunk checkout and 'ant compile'. The compile was successful but I did get these warnings:\n\nivy:retrieve] :::: WARNINGS\n[ivy:retrieve] \tproblem while downloading module descriptor: http://repo1.maven.org/maven2/com/facebook/presto/presto-parser/0.107/presto-parser-0.107.pom: invalid sha1: expected=7f2f854a24db4cc9b5c26c3e9c6e46da37abbed1 computed=661fee4927f5b356f91880c308e5bf586568ff3c (180ms)\n[ivy:retrieve] \tproblem while downloading module descriptor: http://repo1.maven.org/maven2/com/facebook/presto/presto-root/0.107/presto-root-0.107.pom: invalid sha1: expected=3e2a2729fd8b728fdc29c4062f5dc9a138c433cd computed=2cdf6c93caab02a26e6280862ed25452b862e5bf (218ms)\n[ivy:retrie\n\nI'll take a look and see what the issue is. ",
            "id": "comment-14590651"
        },
        {
            "date": "2015-06-17T21:46:24+0000",
            "author": "Joel Bernstein",
            "content": "It appears that sha1 files are incorrect for:\n\nhttp://repo1.maven.org/maven2/com/facebook/presto/presto-parser/0.107/presto-parser-0.107.pom\nhttp://repo1.maven.org/maven2/com/facebook/presto/presto-root/0.107/presto-root-0.107.pom\n\nWondering if this is causing your errors? I'm just seeing warnings. ",
            "id": "comment-14590673"
        },
        {
            "date": "2015-06-17T21:52:19+0000",
            "author": "Joel Bernstein",
            "content": "It looks like the issue needs to be fixed on the Presto project. I will notify the project. ",
            "id": "comment-14590683"
        },
        {
            "date": "2015-06-18T01:37:49+0000",
            "author": "Joel Bernstein",
            "content": "Here is the ticket on the presto-parser project:\nhttps://github.com/facebook/presto/issues/3126 ",
            "id": "comment-14591095"
        },
        {
            "date": "2015-06-18T10:17:06+0000",
            "author": "Christine Poerschke",
            "content": "Thanks Joel Bernstein, i will follow the presto-parser project ticket then from here on.\n\n(Hadn't mentioned before but changing lucene/ivy-versions.properties's /com.facebook.presto/presto-parser from 0.107 to 0.105 worked i.e. only 0.107 and 0.106 caused the error and 0.105 worked without 'conf' attribute addition i.e. retrospectively that would then also point towards a difference/issue w.r.t. presto-parser project.) ",
            "id": "comment-14591603"
        },
        {
            "date": "2015-06-18T15:14:55+0000",
            "author": "Joel Bernstein",
            "content": "Christine Poerschke, thanks for the comments and the link was very informative. Just tried another fresh pull and the warnings are still there so the SHA1 files haven't been updated yet.\n\nA couple things I'd like to understand better based on your comments:\n\n1) How come your builds were failing, while mine were successful with warnings? Are you building with Maven? \n\n2) Before a release it will be important to nail down the correct ivy conf. What should the scope be and whether to include all the Presto Parser decencies or just the ones being used in this ticket. This ticket uses about 10% of the full capabilities of the Presto Parser so I didn't want to have un-needed jars in the release, but possibly that was not the right decision. ",
            "id": "comment-14591948"
        },
        {
            "date": "2015-06-18T16:21:53+0000",
            "author": "Christine Poerschke",
            "content": "It was the 'ant resolve' (or 'ant compile' or 'ant dist') that was failing. ant -verbose resolve gave this output (for presto-parser 0.107)\n\n[ivy:retrieve] == resolving dependencies org.apache.solr#core;working@hostname->com.facebook.presto#presto-parser;0.107 [compile->master]\n[ivy:retrieve] bb-default: Checking cache for: dependency: com.facebook.presto#presto-parser;0.107 {compile=[master], compile.hadoop=[master], test=[master], test.DfsMiniCluster=[master], test.MiniKdc=[master]}\n[ivy:retrieve] don't use cache for com.facebook.presto#presto-parser;0.107: checkModified=true\n[ivy:retrieve]          tried /mydirectory/.ivy2/local/com.facebook.presto/presto-parser/0.107/ivys/ivy.xml\n[ivy:retrieve]          tried /mydirectory/.ivy2/local/com.facebook.presto/presto-parser/0.107/jars/presto-parser.jar\n[ivy:retrieve]  local: no ivy file nor artifact found for com.facebook.presto#presto-parser;0.107\n[ivy:retrieve]          tried http://.../artifactory/repo1/com/facebook/presto/presto-parser/0.107/presto-parser-0.107.pom\n[ivy:retrieve] CLIENT ERROR: Conflict url=http://.../artifactory/repo1/com/facebook/presto/presto-parser/0.107/presto-parser-0.107.pom\n[ivy:retrieve]          tried http://.../artifactory/repo1/com/facebook/presto/presto-parser/0.107/presto-parser-0.107.jar\n[ivy:retrieve]  bb-art-main: no ivy file found for com.facebook.presto#presto-parser;0.107: using default data\n[ivy:retrieve]  found com.facebook.presto#presto-parser;0.107 in bb-art-main\n\n\nusing customised lucene/ivy-settings.xml so that the machine running the build need not directly access external repositories. This is what the customisation patch looks like:\n\n-  <settings defaultResolver=\"default\"/>\n+  <settings defaultResolver=\"bb-default\"/>\n...\n   <resolvers>\n-    <ibiblio name=\"sonatype-releases\" root=\"https://oss.sonatype.org/content/repositories/releases\" m2compatible=\"true\" />\n+\n+    <ibiblio name=\"bb-art-main\" root=\"http://.../artifactory/repo1\" m2compatible=\"true\" />\n+    <ibiblio name=\"bb-art-jcenter\" root=\"http://.../artifactory/jcenter\" m2compatible=\"true\" />\n+    <ibiblio name=\"bb-art-cloudera\" root=\"http://.../artifactory/cloudera.repo\" m2compatible=\"true\" />\n+\n+    <ibiblio name=\"bb-art-sonatype-releases\" root=\"http://.../artifactory/sonatype-public\" m2compatible=\"true\" />\n+    <ibiblio name=\"bb-art-maven-restlet\" root=\"http://.../artifactory/maven-restlet\" m2compatible=\"true\" />\n+\n+    <ibiblio name=\"bb-nexus-main\" root=\"http://.../content/repositories/repo1\" m2compatible=\"true\" />\n+    <ibiblio name=\"bb-nexus-central\" root=\"http://.../content/repositories/central\" m2compatible=\"true\" />\n+    <ibiblio name=\"bb-nexus-cloudera\" root=\"http://.../content/repositories/cloudera-public\" m2compatible=\"true\" />\n+    <ibiblio name=\"bb-nexus-sonatype-releases\" root=\"http://.../content/repositories/sonatype-public\" m2compatible=\"true\" />\n+\n+    <chain name=\"bb-default\" returnFirst=\"true\" checkmodified=\"true\" changingPattern=\".*SNAPSHOT\">\n+      <resolver ref=\"local\"/>\n+      <resolver ref=\"bb-art-main\"/>\n+      <resolver ref=\"bb-art-jcenter\"/>\n+      <resolver ref=\"bb-art-cloudera\"/>\n+    </chain>\n+\n+    <ibiblio name=\"sonatype-releases\" root=\"http://oss.sonatype.org/content/repositories/releases\" m2compatible=\"true\" />\n...\n\n ",
            "id": "comment-14592049"
        },
        {
            "date": "2015-06-25T15:59:13+0000",
            "author": "Christine Poerschke",
            "content": "Hi Joel Bernstein - just wanted to mention that the 0.108 presto-parser release that came out late yesterday didn't have the difficulties that 0.107 (and 0.106) had. I haven't yet looked what the changes between 0.107 and 0.108 are, but 'ant resolve' and 'ant dist' certainly work again now (still with the above customised lucene/ivy-settings.xml). ",
            "id": "comment-14601430"
        },
        {
            "date": "2015-06-25T16:03:39+0000",
            "author": "Joel Bernstein",
            "content": "ok, great. I'll switch over to the 0.108 parser.\n\nthanks! ",
            "id": "comment-14601435"
        },
        {
            "date": "2015-06-25T18:38:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1687603 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1687603 ]\n\nSOLR-7560: Bump Presto Parser version to 0.108 ",
            "id": "comment-14601696"
        },
        {
            "date": "2015-06-25T19:17:34+0000",
            "author": "Christine Poerschke",
            "content": "great, thanks for bumping the version up to 0.108 - when refreshing my local branch of trunk i noticed that it acquired a solr/licenses/presto-parser-0.108.jar.sha1 file as part of the version increase, hadn't noticed that file before - question (please excuse my lack of knowledge on this): can the solr/licenses/presto-parser-0.107.jar.sha1 be removed because the 0.108 equivalent replaces it or is there a need or obligation to keep it around with perhaps only solr releases containing the latest version's .sha1 files? ",
            "id": "comment-14601776"
        },
        {
            "date": "2015-06-25T19:38:07+0000",
            "author": "Joel Bernstein",
            "content": "I think we only need the latest version. I'll remove presto-parser-0.107.jar.sha1 shortly. ",
            "id": "comment-14601798"
        },
        {
            "date": "2015-06-25T19:58:08+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1687623 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1687623 ]\n\nSOLR-7560: Removing Presto 0.107 SHA1 ",
            "id": "comment-14601826"
        },
        {
            "date": "2015-07-21T20:34:02+0000",
            "author": "Joel Bernstein",
            "content": "Just wrapped up the work on SOLR-7441 which really makes the SQL interface much more robust and user friendly when errors occur.\n\nI think the SQL work is ready to backport to the 5x branch. ",
            "id": "comment-14635770"
        },
        {
            "date": "2015-07-22T18:55:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1692319 from Joel Bernstein in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1692319 ]\n\nSOLR-7560: Parallel SQL Support ",
            "id": "comment-14637434"
        },
        {
            "date": "2015-07-22T21:00:51+0000",
            "author": "Steve Rowe",
            "content": "Joel, your branch_5x commit won't compile under java7 for me:\n\n\ncommon.compile-core:\n    [mkdir] Created dir: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/build/solr-core/classes/java\n    [javac] Compiling 835 source files to /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/build/solr-core/classes/java\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/ExpressionFormatter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/java/org/apache/solr/handler/SQLHandler.java:54: error: cannot find symbol\n    [javac] import java.util.Optional;\n    [javac]                 ^\n    [javac]   symbol:   class Optional\n    [javac]   location: package java.util\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/parser/SqlParser.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/AstVisitor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/SortItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Expression.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Node.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Unnest.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Query.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/QuerySpecification.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/ComparisonExpression.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Select.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/SingleColumn.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/AllColumns.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Table.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/AliasedRelation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Values.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Relation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/LogicalBinaryExpression.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/NotExpression.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/Statement.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/SortItem$Ordering.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/LogicalBinaryExpression$Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/src/java/org/apache/solr/handler/SQLHandler.java:501: error: cannot access Optional\n    [javac]       if(node.getWith().isPresent()) {\n    [javac]                      ^\n    [javac]   class file for java.util.Optional not found\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/With.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/WithQuery.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/TableSubquery.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/QueryBody.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/SelectItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/QualifiedName.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /Users/sarowe/svn/lucene/dev/branches/branch_5x/solr/core/lib/presto-parser-0.108.jar(com/facebook/presto/sql/tree/ComparisonExpression$Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] Note: Some input files use or override a deprecated API.\n    [javac] Note: Recompile with -Xlint:deprecation for details.\n    [javac] Note: Some input files use unchecked or unsafe operations.\n    [javac] Note: Recompile with -Xlint:unchecked for details.\n    [javac] 2 errors\n    [javac] 29 warnings\n\n ",
            "id": "comment-14637607"
        },
        {
            "date": "2015-07-22T21:03:15+0000",
            "author": "Steve Rowe",
            "content": "Same error here: http://jenkins.sarowe.net/job/Lucene-Solr-tests-5.x-Java7/903/ ",
            "id": "comment-14637613"
        },
        {
            "date": "2015-07-22T21:34:51+0000",
            "author": "Shawn Heisey",
            "content": "The requirements on the page for facebook/presto (which is the parent for presto-parser) show Java 8 as a requirement:\n\nhttps://github.com/facebook/presto ",
            "id": "comment-14637675"
        },
        {
            "date": "2015-07-22T21:37:32+0000",
            "author": "Joel Bernstein",
            "content": "Ok, looks like I'll need to revert. I'll start the process. ",
            "id": "comment-14637682"
        },
        {
            "date": "2015-07-22T22:11:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1692331 from Joel Bernstein in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1692331 ]\n\nSOLR-7560: Reverting 5x commit ",
            "id": "comment-14637741"
        },
        {
            "date": "2015-07-22T22:13:27+0000",
            "author": "Joel Bernstein",
            "content": "Ok, I've reverted everything I believe. Bummer. I need to think about how to get this released now. ",
            "id": "comment-14637743"
        },
        {
            "date": "2015-07-23T00:41:50+0000",
            "author": "Joel Bernstein",
            "content": "Investigating using the Apache Calcite SQL parser rather the Presto SQL parser. Calcite is Java 7 compatible and used by Hive and Drill, so we'll be in good company.  ",
            "id": "comment-14637989"
        },
        {
            "date": "2015-08-06T03:19:45+0000",
            "author": "Joel Bernstein",
            "content": "Trunk patch that works with Apache Calcite's SQL parser instead of Presto.\n\nThe existing SQL tests pass with this patch. More work to be done as far as removing Presto and properly adding Calcite to the build. ",
            "id": "comment-14659408"
        },
        {
            "date": "2015-08-09T20:33:28+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1694905 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1694905 ]\n\nSOLR-7560: Updated CHANGES.txt ",
            "id": "comment-14679322"
        },
        {
            "date": "2015-08-09T20:35:39+0000",
            "author": "Joel Bernstein",
            "content": "Slated for Solr 6. ",
            "id": "comment-14679323"
        },
        {
            "date": "2015-08-09T20:39:08+0000",
            "author": "Joel Bernstein",
            "content": "Going to stick with the Presto Parser and release this ticket with Solr 6. There is a patch on this ticket that uses the Calcite SQL parser. In the future we can refer to that patch if we decide to switch to Calcite. ",
            "id": "comment-14679326"
        },
        {
            "date": "2015-08-19T20:10:19+0000",
            "author": "Susheel Kumar",
            "content": "Hi,\n\nI can help to test the Parallel SQL Support feature which is very useful for analytical purpose.  Can I get some info on setting up SQLHandler / some instructions to get started.\n\nThanks,\nSusheel ",
            "id": "comment-14703667"
        },
        {
            "date": "2015-08-19T21:35:49+0000",
            "author": "Joel Bernstein",
            "content": "I will spend some time working on the documentation. So far the docs mostly covers how to form queries.\n\nThe link to docs is here: https://cwiki.apache.org/confluence/display/solr/Parallel+SQL+Interface\n\nI'll post back to this ticket when I've added the sections on sending the query, configuration and the architecture.\n\nIf you want to get a jump on things the sample configs in trunk have the request handlers already setup. You can take a look at the test cases to see how to send a SQL query:\n\nhttps://svn.apache.org/repos/asf/lucene/dev/trunk/solr/core/src/test/org/apache/solr/handler/TestSQLHandler.java\n\n\n\n ",
            "id": "comment-14703784"
        },
        {
            "date": "2015-08-20T02:58:53+0000",
            "author": "Susheel Kumar",
            "content": "Thanks, Joel. Found the SQLHandler config and I did checkout the trunk and compiled using 'ant compile' but getting error when starting solr. Will look into classpath which may be causing the issue.  \n\n./bin/solr status\n\nFound 1 Solr nodes: \n\nSolr process 11789 running on port 8983\nError: Could not find or load main class org.apache.solr.util.SolrCLI.\n ",
            "id": "comment-14704223"
        },
        {
            "date": "2015-08-20T18:56:42+0000",
            "author": "Susheel Kumar",
            "content": "Thanks, Eric for pointing server dist target. Now I am able to run basic SQL.  Will start looking into deeper. ",
            "id": "comment-14705552"
        },
        {
            "date": "2015-08-24T02:20:27+0000",
            "author": "Susheel Kumar",
            "content": "Hi Joel,\n\nI started with two basic tests on my local box\na) add field alias e.g. \nselect id,name as product_name from techproducts limit 20\n\n which currently fails as data returned contains still \"name\" as the field/column key than product_name \n\nb) I wanted to get additional field returned from SQL e.g \nselect id,name,manu,mul(price,weight) from techproducts limit 20\nwhich currently fails with error \"Aggregate functions only supported with group by queries.\"  while actually I just want to have additional calculated field based on some function/formula for every document.  I checked SQLHandler.java which currently throws this out due to presence of parenthesis without any group by/aggregate function.\n\nPlease let me know your suggestion on this. \n\nThanks,\nSusheel \n ",
            "id": "comment-14708682"
        },
        {
            "date": "2015-08-24T18:57:21+0000",
            "author": "Joel Bernstein",
            "content": "Hi Susheel,\n\nThe two queries you tried are not yet supported. They are both high priorities but might not be in the initial release. The documentation link (https://cwiki.apache.org/confluence/display/solr/Parallel+SQL+Interface) describes the types of queries currently supported in trunk.\n\nJoel ",
            "id": "comment-14709862"
        },
        {
            "date": "2015-08-26T02:31:25+0000",
            "author": "Susheel Kumar",
            "content": "Thanks, Joel. I'll try to write tests around the supported features. Do you have any list of items/tickets for future releases or If I can help to maintain.  Also i will try to understand how presto is being plugged with Solr but if you have any pointers please let me know. ",
            "id": "comment-14712381"
        },
        {
            "date": "2015-08-26T03:42:36+0000",
            "author": "Joel Bernstein",
            "content": "SOLR-7903 and SOLR-7905 are currently being worked on. Field aliases are the next thing I'd like to tackle,  but there isn't a ticket for it yet.\n\nPresto is currently only used to parse the SQL queries. The code for this is in the SQLHandler.\n\nOne area that might be interesting for you to think about is the JDBC driver. If you wanted to create a ticket for that I'd be happy to help with the design. ",
            "id": "comment-14712441"
        },
        {
            "date": "2015-09-02T03:03:51+0000",
            "author": "Susheel Kumar",
            "content": "Hi Joel,\n\nI have created a JIRA SOLR-8002 for field aliases.  Also noticed the JIRA SOLR-7986 you have created and design thoughts on creating Connection, Statement & ResultSet classes.  \n\nThanks,\nSusheel ",
            "id": "comment-14726659"
        }
    ]
}