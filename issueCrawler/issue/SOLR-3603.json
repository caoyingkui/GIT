{
    "id": "SOLR-3603",
    "title": "StreamingResponseCallback could use streamEnd() callback",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The StreamingResponseCallback API is pretty useful.  There is a callback at the beginning, and once for each document.  However there isn't one for the end, which I find annoying.  I started to create a bunch of instance variables in my anonymous inner class, initialized in streamDocListInfo(), accessed in streamSolrDocument().  I needed to close some output streams I am writing to but I don't have access to them when it's done.  If there was a callback at the end like streamEnd() (with a no-op impl in the abstract class) then I could extend it to close the tream I was writing to.  Instead, I have to re-think how I've structured this callback.  Do-able of course but annoying.\n\nSound good?  I'll post a patch if I get an approval to the idea.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13408426",
            "date": "2012-07-06T23:03:56+0000",
            "content": "a callback at the end like streamEnd() \n\n+1 "
        }
    ]
}