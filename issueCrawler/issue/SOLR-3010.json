{
    "id": "SOLR-3010",
    "title": "solrj: submitting more than one stream via CommonsHttpSolrServer fails",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "Possible regression of SOLR-2230 on trunk?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Rob Tulloh",
            "id": "comment-13181519",
            "date": "2012-01-06T18:59:39+0000",
            "content": "working on trunk. Tried using addContentStream(). This works fine for 1 document, fails with exception if 2 or more are added to the request:\n\n\nSEVERE: org.apache.solr.common.SolrException: missing content stream\n        at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:53)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n        at org.apache.solr.core.RequestHandlers$LazyRequestHandlerWrapper.handleRequest(RequestHandlers.java:244)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1478)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:353)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:248)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n        at org.mortbay.jetty.Server.handle(Server.java:326)\n        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:945)\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n        at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)\n        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n\n\n\nMy protype script is written in jython and looks like this:\n\n\n    svr = CommonsHttpSolrServer('http://hostname:8983/solr', None)\n    svr.setAllowCompression(True)\n    svr.setMaxRetries(3)\n\n    up = ContentStreamUpdateRequest(\"/update/extract\")\n    for doc in docs:\n        body = doc.getElement(\"body\")\n        bodyValue = body.getValue()\n\n        contentType = doc.getElement(\"mime-type\")\n        filename = doc.getElement(\"filename\")\n        fn = \"n/a\"\n        ct = None;\n        if filename is not None:\n            fn = str(filename.getValue())\n        if contentType is not None:\n            ct = str(contentType.getValue())\n\n        ins = SolrByteArrayContentStream(bodyValue, ct, fn)\n        up.addContentStream(ins)\n\n    log(time.asctime(),'streams',up.getContentStreams().size())\n    params = ModifiableSolrParams()\n    params.add(\"uprefix\", [\"ignored_\"])\n\n    params.add(\"fmap.content\", \"body\")\n\n    params.add(\"extractOnly\",[\"true\"])\n    params.add(\"extractFormat\",[\"text\"])\n\n    up.setParams(params)\n   try:\n        start = System.currentTimeMillis()\n        response = svr.request(up)\n        millis = System.currentTimeMillis() - start\n        if millis > 30000:\n            log(time.asctime(),'Long running attachment (t=',millis,' fn=',fn,'type=',ct)\n    except:\n        log(time.asctime(),'Caught exception handling documents',docs,str(sys.exc_info()))\n\n\n\n\nWe are using a build from: apache-solr-4.0-2011-11-04_09-29-42.tgz "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13181547",
            "date": "2012-01-06T19:30:14+0000",
            "content": "Rob: SOLR-2230 added a SolrExampleTests.testMultiContentStreamRequest which verifies that multiple \"addFile\" calls on ContentStreamUpdateRequest work properly.  it's possible that there is still a bug when using addContentStream, but since addFile is a just a thin wrapper arround addContentStream that seems unlikely \u2013 so i don't actually think this is a regression of SOLR-2230.\n\nare you only seeing this problem with the extraction request handler, or with all handlers?\n\nare you only seeing this problem with your SolrByteArrayContentStream? (that's not a solr class, so we really need to see that code to verify that it's working properly)\n\nI suspect the issue here is that some other error is happening (possibly because SolrByteArrayContentStream isn't working properly?) and the real error is getting swallowed up and lost in place of a more vague \"missing stream\" error.\n "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13181557",
            "date": "2012-01-06T19:45:56+0000",
            "content": "Sorry, meant to include the SolByteArrayContentStream class too. We are trying to prototype bulk extraction with tika.\n\nHere is the other code, it is trivial sub-class of ContentStreamBase that implements a stream via a byte array:\n\n\nclass SolrByteArrayContentStream(ContentStreamBase):\n    def __init__(self, content, mimeType, attachmentFileName):\n        ContentStreamBase.__init__(self)\n        self.m_content = content\n        self.setContentType(mimeType)\n        self.setName(attachmentFileName)\n        self.setSize(long(len(content)))\n        self.setSourceInfo(\"mimeAttachment\")\n\n    def getStream(self):\n        return ByteArrayInputStream(self.m_content)\n\n "
        },
        {
            "author": "Rob Tulloh",
            "id": "comment-13182819",
            "date": "2012-01-09T21:38:55+0000",
            "content": "I found the problem. We had to use solrj v3 jar prior to upgrading to java v6. Now we have v6, we can use solrj v4. When I did this, the error did not reproduce and we got the expected behavior from the API. "
        }
    ]
}