{
    "id": "SOLR-10912",
    "title": "Adding automatic patch validation",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Build"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Proposing introduction of automated patch validation, similar what Hadoop or other Apache projects are using (see link). This would ensure that every patch passes a certain set of criterions before getting approved. It would save time for developer (faster feedback loop), save time for committers (less step to do manually), and would increase quality.\n\nHadoop is currently using Apache Yetus to run validations, which seems to be a good direction to start. This jira could be the board of discussing the preferred solution.",
    "attachments": {
        "SOLR-10912.sample-patch.patch": "https://issues.apache.org/jira/secure/attachment/12885918/SOLR-10912.sample-patch.patch",
        "SOLR-10912.solj-contrib-facet-error.patch": "https://issues.apache.org/jira/secure/attachment/12886505/SOLR-10912.solj-contrib-facet-error.patch",
        "SOLR-10912.ok-patch-in-core.patch": "https://issues.apache.org/jira/secure/attachment/12889953/SOLR-10912.ok-patch-in-core.patch",
        "SOLR-10912.patch": "https://issues.apache.org/jira/secure/attachment/12914628/SOLR-10912.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-19T14:58:52+0000",
            "content": "Mano Kovacs - I'm on board with this. There was some discussion already at https://lists.apache.org/thread.html/21ad23ec5449171739d87681cf2d011f20d39c39420c1e610a3b1751@%3Cdev.lucene.apache.org%3E but I didn't have time to drive it further. ",
            "author": "Mike Drob",
            "id": "comment-16054147"
        },
        {
            "date": "2017-06-19T22:32:47+0000",
            "content": "This would be awesome ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16054869"
        },
        {
            "date": "2017-09-11T18:15:37+0000",
            "content": "Mano Kovacs - was there supposed to be a QA run for the patch you attached? Looks like some integration is still missing. ",
            "author": "Mike Drob",
            "id": "comment-16161707"
        },
        {
            "date": "2017-09-11T18:39:06+0000",
            "content": "Mike Drob, thanks for the followup \n\nWell, there is no automated integration yet. I just wanted to have a test-run, but eventually I used SOLR-10783 for that. When I am finished, I upload and run a test-patch for each scenario to demonstrate. ",
            "author": "Mano Kovacs",
            "id": "comment-16161753"
        },
        {
            "date": "2017-09-11T18:56:26+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  @author  \n   0m 00s \n  The patch does not contain any @author tags.  \n\n\n -1 \n  test4tests  \n   0m 00s \n  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  Check examples refer correct lucene version  \n   0m 04s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 04s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 04s \n  the patch passed  \n\n\n +1 \n  Check licenses  \n   0m 04s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n   3m 47s \n  solr in the patch failed.  \n\n\n  \n   \n   7m 01s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-10912 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12885918/SOLR-10912.sample-patch.patch \n\n\n Optional Tests \n  javac  unit  \n\n\n uname \n Darwin MunawAir.local 15.6.0 Darwin Kernel Version 15.6.0: Fri Feb 17 10:21:18 PST 2017; root:xnu-3248.60.11.4.1~1/RELEASE_X86_64 x86_64 \n\n\n Build tool \n ant \n\n\n Personality \n /Users/munaw/repos/lucene-solr/dev-tools/test-patch/solr-yetus-personality.sh \n\n\n git revision \n master / 31eab31 \n\n\n Default Java \n 1.8.0_45 \n\n\n unit \n artifact/patchprocess/patch-unit-._solr.txt \n\n\n modules \n C: solr/solrj U: solr/solrj \n\n\n Powered by \n Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Mano Kovacs",
            "id": "comment-16161786"
        },
        {
            "date": "2017-09-11T20:40:27+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  @author  \n   0m 00s \n  The patch does not contain any @author tags.  \n\n\n -1 \n  test4tests  \n   0m 00s \n  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  Check examples refer correct lucene version  \n   0m 06s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 06s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 06s \n  the patch passed  \n\n\n +1 \n  Check licenses  \n   0m 06s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n   9m 08s \n  solr in the patch failed.  \n\n\n  \n   \n  12m 55s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.AliasIntegrationTest \n\n\n\u00a0\n solr.cloud.ChaosMonkeyNothingIsSafeWithPullReplicasTest \n\n\n\u00a0\n solr.cloud.FullSolrCloudDistribCmdsTest \n\n\n\u00a0\n solr.cloud.MoveReplicaTest \n\n\n\u00a0\n solr.cloud.MultiThreadedOCPTest \n\n\n\u00a0\n solr.cloud.OverseerRolesTest \n\n\n\u00a0\n solr.cloud.RemoteQueryErrorTest \n\n\n\u00a0\n solr.cloud.ShardRoutingTest \n\n\n\u00a0\n solr.cloud.ShardSplitTest \n\n\n\u00a0\n solr.cloud.TestDeleteCollectionOnDownNodes \n\n\n\u00a0\n solr.cloud.TestLeaderElectionWithEmptyReplica \n\n\n\u00a0\n solr.cloud.TestMiniSolrCloudClusterSSL \n\n\n\u00a0\n solr.cloud.TestSolrCloudWithDelegationTokens \n\n\n\u00a0\n solr.cloud.TestStressCloudBlindAtomicUpdates \n\n\n\u00a0\n solr.cloud.TestTolerantUpdateProcessorRandomCloud \n\n\n\u00a0\n solr.cloud.UnloadDistributedZkTest \n\n\n\u00a0\n solr.core.snapshots.TestSolrCoreSnapshots \n\n\n\u00a0\n solr.DistributedIntervalFacetingTest \n\n\n\u00a0\n solr.handler.PingRequestHandlerTest \n\n\n\u00a0\n solr.metrics.reporters.solr.SolrShardReporterTest \n\n\n\u00a0\n solr.search.facet.TestJsonFacetRefinement \n\n\n\u00a0\n solr.search.join.BlockJoinFacetDistribTest \n\n\n\u00a0\n solr.search.join.TestCloudNestedDocsSort \n\n\n\u00a0\n solr.search.mlt.CloudMLTQParserTest \n\n\n\u00a0\n solr.TestDistributedGrouping \n\n\n\u00a0\n solr.TestDistributedMissingSort \n\n\n\u00a0\n solr.TestDistributedSearch \n\n\n\u00a0\n solr.TestTolerantSearch \n\n\n\u00a0\n solr.update.processor.TemplateUpdateProcessorTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-10912 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12885918/SOLR-10912.sample-patch.patch \n\n\n Optional Tests \n  javac  unit  \n\n\n uname \n Darwin MunawAir.local 15.6.0 Darwin Kernel Version 15.6.0: Fri Feb 17 10:21:18 PST 2017; root:xnu-3248.60.11.4.1~1/RELEASE_X86_64 x86_64 \n\n\n Build tool \n ant \n\n\n Personality \n /Users/munaw/repos/lucene-solr/dev-tools/test-patch/solr-yetus-personality.sh \n\n\n git revision \n master / 708ed8f \n\n\n Default Java \n 1.8.0_45 \n\n\n unit \n artifact/patchprocess/patch-unit-._solr.txt \n\n\n modules \n C: solr/solrj U: solr/solrj \n\n\n Powered by \n Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Mano Kovacs",
            "id": "comment-16161950"
        },
        {
            "date": "2017-09-11T20:53:55+0000",
            "content": "solr in the patch failed\nwould be good to see if we can say solr-core or solr-solrj or solr-contrib failed (and similar for lucene) ",
            "author": "Mike Drob",
            "id": "comment-16161973"
        },
        {
            "date": "2017-09-11T21:31:57+0000",
            "content": "Yeah, that would make sense. Do you think it would be enough just to test the module changed? ",
            "author": "Mano Kovacs",
            "id": "comment-16162042"
        },
        {
            "date": "2017-09-11T21:56:10+0000",
            "content": "Uploading a new patch with solj, contrib module, and lucene module changes to verify unittests in changed modules only. ",
            "author": "Mano Kovacs",
            "id": "comment-16162094"
        },
        {
            "date": "2017-09-11T22:25:00+0000",
            "content": "There's some dependency work here. A change in solr-core shouldn't need to re-run the solrj unit tests, but a solrj change would benefit from running the solr unit tests. Or do I have that backwards? ",
            "author": "Mike Drob",
            "id": "comment-16162140"
        },
        {
            "date": "2017-09-11T22:32:43+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  @author  \n   0m 00s \n  The patch does not contain any @author tags.  \n\n\n -1 \n  test4tests  \n   0m 00s \n  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  Check examples refer correct lucene version  \n   0m 05s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 05s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 05s \n  the patch passed  \n\n\n +1 \n  Check licenses  \n   0m 05s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   1m 24s \n  facet in the patch passed.  \n\n\n -1 \n  unit  \n   2m 46s \n  analytics in the patch failed.  \n\n\n -1 \n  unit  \n   4m 25s \n  solrj in the patch failed.  \n\n\n  \n   \n  12m 14s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-10912 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12886505/SOLR-10912.solj-contrib-facet-error.patch \n\n\n Optional Tests \n  javac  unit  \n\n\n uname \n Darwin MunawAir.local 15.6.0 Darwin Kernel Version 15.6.0: Fri Feb 17 10:21:18 PST 2017; root:xnu-3248.60.11.4.1~1/RELEASE_X86_64 x86_64 \n\n\n Build tool \n ant \n\n\n Personality \n /Users/munaw/repos/lucene-solr/dev-tools/test-patch/solr-yetus-personality.sh \n\n\n git revision \n master / 708ed8f \n\n\n Default Java \n 1.8.0_45 \n\n\n unit \n artifact/patchprocess/patch-unit-solr_contrib_analytics.txt \n\n\n unit \n artifact/patchprocess/patch-unit-solr_solrj.txt \n\n\n modules \n C: lucene/facet solr/contrib/analytics solr/solrj U: . \n\n\n Powered by \n Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Mano Kovacs",
            "id": "comment-16162155"
        },
        {
            "date": "2017-09-11T22:40:30+0000",
            "content": "The latest test-patch only tested the three module was changed (either my intentional error was not placed correctly, or we need more tests there).\n\nA change in solr-core shouldn't need to re-run the solrj unit tests, but a solrj change would benefit from running the solr unit tests.\n\nYeah, solr depends on solrj, so the direction is correct. It is matter of view to say that a module's API should be validated through it's unittests or the tests of other modules depending on it (in this case solr->solrj).\nBut for start, if that won't cause too much load on the jenkins, we can tests rather more than less.\n\nCould we define all the transitive triggers for unittest between modules?\n\n\tsolrj->solr-core\n\tlucene->solr?\n\n\n\nAny other? ",
            "author": "Mano Kovacs",
            "id": "comment-16162164"
        },
        {
            "date": "2017-09-22T14:39:30+0000",
            "content": "One thing I'd like to see added to validation is an indication when patches are missing doc updates (i.e., the patch contains no edits to any .adoc file), assuming that's possible. \n\nI don't think the validation should fail if they are missing (so could be a \"-0\", not impacting the final score), and some patches will not require doc updates which would be hard to for such a tool to be able to determine. But, it would help to ensure possible doc changes are considered at early stages of patch review, and when changes are warranted they'd have a better chance of being included before the final commit of the patch is done. ",
            "author": "Cassandra Targett",
            "id": "comment-16176500"
        },
        {
            "date": "2017-09-22T14:47:37+0000",
            "content": "I agree with Cassandra, and would go even further in saying that maybe a -1 is appropriate. We already have test4tests, why not test4docs?\n\nAlso, need to make sure that test4tests doesn't complain about doc-only patches. ",
            "author": "Mike Drob",
            "id": "comment-16176520"
        },
        {
            "date": "2017-09-22T14:52:21+0000",
            "content": "One thing I'd like to see added to validation is an indication when patches are missing doc updates (i.e., the patch contains no edits to any .adoc file), ...\n\n+1\n\nI don't think the validation should fail if they are missing ... some patches will not require doc updates which would be hard to for such a tool to be able to determine. ...\n\nI agree, validation should not fail if doc updates are not (yet) present.\n\nIf doc updates are not (yet) present then it might also be nice for the tool to try and point towards which parts of the documentation might need changing. E.g. if the patch changes the ReplicationHandler.java class, the word ReplicationHandler appears currently in three *.adoc files and the tool could just mention them: implicit-requesthandlers.adoc index-replication.adoc making-and-restoring-backups.adoc ",
            "author": "Christine Poerschke",
            "id": "comment-16176532"
        },
        {
            "date": "2017-09-22T15:23:11+0000",
            "content": "If doc updates are not (yet) present then it might also be nice for the tool to try and point towards which parts of the documentation might need changing. E.g. if the patch changes the ReplicationHandler.java class, the word ReplicationHandler appears currently in three *.adoc files and the tool could just mention them: implicit-requesthandlers.adoc index-replication.adoc making-and-restoring-backups.adoc\n\n+1, I like that idea. ",
            "author": "Cassandra Targett",
            "id": "comment-16176578"
        },
        {
            "date": "2017-09-29T09:28:38+0000",
            "content": "Cassandra Targett, Christine Poerschke, Mike Drob, thank you for the inputs. It clearly shows how much potential there is in this tool/method.\n\nI am trying to find the MVP for this to start, so with your permission, I would like to move the topic about documentation validation to SOLR-11419. Could you help me specify the details of the validation there? \n\nMeanwhile, I am trying to get this into a usable state so we can start some test-run with it. ",
            "author": "Mano Kovacs",
            "id": "comment-16185565"
        },
        {
            "date": "2017-09-29T12:52:36+0000",
            "content": "I would like to move the topic about documentation validation to SOLR-11419. Could you help me specify the details of the validation there?\n\n+1, sure, we'll tackle it as an add-on once we work out the details so you can still move forward Mano Kovacs. ",
            "author": "Cassandra Targett",
            "id": "comment-16185770"
        },
        {
            "date": "2017-10-02T23:19:23+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  @author  \n   0m 00s \n  The patch does not contain any @author tags.  \n\n\n +1 \n  test4tests  \n   0m 00s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  Check examples refer correct lucene version  \n   0m 06s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 06s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 06s \n  the patch passed  \n\n\n +1 \n  Check licenses  \n   0m 06s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 255m 09s \n  core in the patch failed.  \n\n\n -1 \n  unit  \n  13m 11s \n  solrj in the patch failed.  \n\n\n  \n   \n 272m 02s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.analysis.TestWordDelimiterFilterFactory \n\n\n\u00a0\n solr.cloud.CdcrBootstrapTest \n\n\n\u00a0\n solr.cloud.DeleteStatusTest \n\n\n\u00a0\n solr.cloud.FullSolrCloudDistribCmdsTest \n\n\n\u00a0\n solr.cloud.hdfs.HdfsCollectionsAPIDistributedZkTest \n\n\n\u00a0\n solr.cloud.LeaderElectionIntegrationTest \n\n\n\u00a0\n solr.cloud.ShardRoutingTest \n\n\n\u00a0\n solr.cloud.ShardSplitTest \n\n\n\u00a0\n solr.cloud.SharedFSAutoReplicaFailoverUtilsTest \n\n\n\u00a0\n solr.cloud.SyncSliceTest \n\n\n\u00a0\n solr.cloud.TestHdfsCloudBackupRestore \n\n\n\u00a0\n solr.cloud.TestLeaderElectionWithEmptyReplica \n\n\n\u00a0\n solr.cloud.TestLocalFSCloudBackupRestore \n\n\n\u00a0\n solr.cloud.TestTolerantUpdateProcessorCloud \n\n\n\u00a0\n solr.cloud.UnloadDistributedZkTest \n\n\n\u00a0\n solr.core.TestCorePropertiesReload \n\n\n\u00a0\n solr.core.TestCustomStream \n\n\n\u00a0\n solr.core.TestInfoStreamLogging \n\n\n\u00a0\n solr.core.TestSimpleTextCodec \n\n\n\u00a0\n solr.core.TestSolrDeletionPolicy1 \n\n\n\u00a0\n solr.handler.loader.JavabinLoaderTest \n\n\n\u00a0\n solr.handler.TestSolrConfigHandlerCloud \n\n\n\u00a0\n solr.handler.V2StandaloneTest \n\n\n\u00a0\n solr.handler.XsltUpdateRequestHandlerTest \n\n\n\u00a0\n solr.highlight.TestPostingsSolrHighlighter \n\n\n\u00a0\n solr.internal.csv.CharBufferTest \n\n\n\u00a0\n solr.internal.csv.CSVUtilsTest \n\n\n\u00a0\n solr.metrics.JvmMetricsTest \n\n\n\u00a0\n solr.MinimalSchemaTest \n\n\n\u00a0\n solr.schema.DateFieldTest \n\n\n\u00a0\n solr.schema.MultiTermTest \n\n\n\u00a0\n solr.schema.PolyFieldTest \n\n\n\u00a0\n solr.schema.TestBinaryField \n\n\n\u00a0\n solr.schema.TestBulkSchemaConcurrent \n\n\n\u00a0\n solr.schema.TestManagedSchema \n\n\n\u00a0\n solr.schema.UUIDFieldTest \n\n\n\u00a0\n solr.search.AnalyticsMergeStrategyTest \n\n\n\u00a0\n solr.search.function.distance.DistanceFunctionTest \n\n\n\u00a0\n solr.search.similarities.TestPerFieldSimilarity \n\n\n\u00a0\n solr.search.TestPayloadScoreQParserPlugin \n\n\n\u00a0\n solr.search.TestSolrJ \n\n\n\u00a0\n solr.servlet.DirectSolrConnectionTest \n\n\n\u00a0\n solr.servlet.HttpSolrCallGetCoreTest \n\n\n\u00a0\n solr.spelling.SpellingQueryConverterTest \n\n\n\u00a0\n solr.spelling.suggest.SuggesterTest \n\n\n\u00a0\n solr.spelling.suggest.TestHighFrequencyDictionaryFactory \n\n\n\u00a0\n solr.spelling.suggest.TestPhraseSuggestions \n\n\n\u00a0\n solr.TestHighlightDedupGrouping \n\n\n\u00a0\n solr.util.CircularListTest \n\n\n\u00a0\n solr.util.FileUtilsTest \n\n\n\u00a0\n solr.util.PrimUtilsTest \n\n\n\u00a0\n solr.util.TestUtils \n\n\n\u00a0\n solr.client.solrj.io.stream.StreamExpressionTest \n\n\n\u00a0\n solr.common.cloud.TestCollectionStateWatchers \n\n\n\u00a0\n solr.analysis.TestWordDelimiterFilterFactory \n\n\n\u00a0\n solr.cloud.CdcrBootstrapTest \n\n\n\u00a0\n solr.cloud.DeleteStatusTest \n\n\n\u00a0\n solr.cloud.FullSolrCloudDistribCmdsTest \n\n\n\u00a0\n solr.cloud.hdfs.HdfsCollectionsAPIDistributedZkTest \n\n\n\u00a0\n solr.cloud.LeaderElectionIntegrationTest \n\n\n\u00a0\n solr.cloud.ShardRoutingTest \n\n\n\u00a0\n solr.cloud.ShardSplitTest \n\n\n\u00a0\n solr.cloud.SharedFSAutoReplicaFailoverUtilsTest \n\n\n\u00a0\n solr.cloud.SyncSliceTest \n\n\n\u00a0\n solr.cloud.TestHdfsCloudBackupRestore \n\n\n\u00a0\n solr.cloud.TestLeaderElectionWithEmptyReplica \n\n\n\u00a0\n solr.cloud.TestLocalFSCloudBackupRestore \n\n\n\u00a0\n solr.cloud.TestTolerantUpdateProcessorCloud \n\n\n\u00a0\n solr.cloud.UnloadDistributedZkTest \n\n\n\u00a0\n solr.core.TestCorePropertiesReload \n\n\n\u00a0\n solr.core.TestCustomStream \n\n\n\u00a0\n solr.core.TestInfoStreamLogging \n\n\n\u00a0\n solr.core.TestSimpleTextCodec \n\n\n\u00a0\n solr.core.TestSolrDeletionPolicy1 \n\n\n\u00a0\n solr.handler.loader.JavabinLoaderTest \n\n\n\u00a0\n solr.handler.TestSolrConfigHandlerCloud \n\n\n\u00a0\n solr.handler.V2StandaloneTest \n\n\n\u00a0\n solr.handler.XsltUpdateRequestHandlerTest \n\n\n\u00a0\n solr.highlight.TestPostingsSolrHighlighter \n\n\n\u00a0\n solr.internal.csv.CharBufferTest \n\n\n\u00a0\n solr.internal.csv.CSVUtilsTest \n\n\n\u00a0\n solr.metrics.JvmMetricsTest \n\n\n\u00a0\n solr.MinimalSchemaTest \n\n\n\u00a0\n solr.schema.DateFieldTest \n\n\n\u00a0\n solr.schema.MultiTermTest \n\n\n\u00a0\n solr.schema.PolyFieldTest \n\n\n\u00a0\n solr.schema.TestBinaryField \n\n\n\u00a0\n solr.schema.TestBulkSchemaConcurrent \n\n\n\u00a0\n solr.schema.TestManagedSchema \n\n\n\u00a0\n solr.schema.UUIDFieldTest \n\n\n\u00a0\n solr.search.AnalyticsMergeStrategyTest \n\n\n\u00a0\n solr.search.function.distance.DistanceFunctionTest \n\n\n\u00a0\n solr.search.similarities.TestPerFieldSimilarity \n\n\n\u00a0\n solr.search.TestPayloadScoreQParserPlugin \n\n\n\u00a0\n solr.search.TestSolrJ \n\n\n\u00a0\n solr.servlet.DirectSolrConnectionTest \n\n\n\u00a0\n solr.servlet.HttpSolrCallGetCoreTest \n\n\n\u00a0\n solr.spelling.SpellingQueryConverterTest \n\n\n\u00a0\n solr.spelling.suggest.SuggesterTest \n\n\n\u00a0\n solr.spelling.suggest.TestHighFrequencyDictionaryFactory \n\n\n\u00a0\n solr.spelling.suggest.TestPhraseSuggestions \n\n\n\u00a0\n solr.TestHighlightDedupGrouping \n\n\n\u00a0\n solr.util.CircularListTest \n\n\n\u00a0\n solr.util.FileUtilsTest \n\n\n\u00a0\n solr.util.PrimUtilsTest \n\n\n\u00a0\n solr.util.TestUtils \n\n\n\u00a0\n solr.client.solrj.io.stream.StreamExpressionTest \n\n\n\u00a0\n solr.common.cloud.TestCollectionStateWatchers \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-10912 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12889953/SOLR-10912.ok-patch-in-core.patch \n\n\n Optional Tests \n  javac  unit  \n\n\n uname \n Darwin manomac.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64 \n\n\n Build tool \n ant \n\n\n Personality \n /Users/manokovacs/repos/solr-yetus/dev-tools/test-patch/solr-yetus-personality.sh \n\n\n git revision \n master / 266cc82df0 \n\n\n Default Java \n 1.8.0_101 \n\n\n unit \n artifact/patchprocess/patch-unit-solr_core.txt \n\n\n unit \n artifact/patchprocess/patch-unit-solr_solrj.txt \n\n\n modules \n C: solr/core solr/solrj U: solr \n\n\n Powered by \n Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Mano Kovacs",
            "id": "comment-16189033"
        },
        {
            "date": "2017-10-03T10:50:40+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  @author  \n   0m 00s \n  The patch does not contain any @author tags.  \n\n\n +1 \n  test4tests  \n   0m 00s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  Check examples refer correct lucene version  \n   0m 07s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 07s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 07s \n  the patch passed  \n\n\n +1 \n  Check licenses  \n   0m 07s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  62m 41s \n  core in the patch failed.  \n\n\n -1 \n  unit  \n  11m 07s \n  solrj in the patch passed.  \n\n\n  \n   \n  77m 37s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.CdcrBootstrapTest \n\n\n\u00a0\n solr.cloud.FullSolrCloudDistribCmdsTest \n\n\n\u00a0\n solr.cloud.ReplaceNodeTest \n\n\n\u00a0\n solr.cloud.TestCloudRecovery \n\n\n\u00a0\n solr.cloud.TestLeaderElectionWithEmptyReplica \n\n\n\u00a0\n solr.cloud.TestRebalanceLeaders \n\n\n\u00a0\n solr.cloud.CdcrBootstrapTest \n\n\n\u00a0\n solr.cloud.FullSolrCloudDistribCmdsTest \n\n\n\u00a0\n solr.cloud.ReplaceNodeTest \n\n\n\u00a0\n solr.cloud.TestCloudRecovery \n\n\n\u00a0\n solr.cloud.TestLeaderElectionWithEmptyReplica \n\n\n\u00a0\n solr.cloud.TestRebalanceLeaders \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-10912 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12889953/SOLR-10912.ok-patch-in-core.patch \n\n\n Optional Tests \n  javac  unit  \n\n\n uname \n Darwin manomac.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64 \n\n\n Build tool \n ant \n\n\n Personality \n /Users/manokovacs/repos/solr-yetus/dev-tools/test-patch/solr-yetus-personality.sh \n\n\n git revision \n master / fd2b4f3f86 \n\n\n Default Java \n 1.8.0_101 \n\n\n unit \n artifact/patchprocess/patch-unit-solr_core.txt \n\n\n unit \n artifact/patchprocess/patch-unit-solr_solrj.txt \n\n\n modules \n C: solr/core solr/solrj U: solr \n\n\n Powered by \n Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Mano Kovacs",
            "id": "comment-16189539"
        },
        {
            "date": "2017-10-03T14:00:27+0000",
            "content": "As you can see from the last comment above, the minimal setup is getting ready.\nSteps remaining:\n\n\tMultiple module test currently duplicates the failed test result, fixing shortly.\n\tAdd test to call -validate-source-patterns\n\tFinalize the runner script to setup Yetus, similarly to Hadoop.\n\tVerify the test-patch with Github PR\n\tAdd Patch Available status for SOLR project (and update the script to look for that). Steve Rowe, regarding to our IRL conversation, could you help me with adding that status in JIRA?\n\tAdd Precommit-SOLR and Precommit-LUCENE jenkins jobs\n\n\n\nOpen questions:\n\n\tAs you can see, a patch with two log entries had 6 (flaky) test failures. Assuming flaky tests will not go away very soon, would it still be useful to have this test-patch?\n\tI propose starting with the smallest set of tests (ie. affected modules) and extend them later to dependent modules.\n\n ",
            "author": "Mano Kovacs",
            "id": "comment-16189738"
        },
        {
            "date": "2017-10-03T16:26:46+0000",
            "content": "<delurks>\n\n\n\tIf the plan is to use https://builds.apache.org/job/PreCommit-admin/ to trigger patches, the jenkins jobs have to be called \"PreCommit-<PROJECT NAME>-Build\".\n\n\n\n\n\tBe aware that hadoop's precommit uses a flat directory structure in its workspace.  History has shown that this is less than ideal.  At some point I'll likely rework it so that's more structured like hadoop's qbt jobs.\n\n\n\n<relurks> ",
            "author": "Allen Wittenauer",
            "id": "comment-16189931"
        },
        {
            "date": "2017-10-03T20:01:57+0000",
            "content": "Add Patch Available status for SOLR project [....] Steve Rowe, regarding to our IRL conversation, could you help me with adding that status in JIRA?\n\nI don't have karma to make this change myself, so I asked on Infrastructure's hipchat channel, and Daniel Takamori said I should create a JIRA to ask for this: INFRA-15213. ",
            "author": "Steve Rowe",
            "id": "comment-16190247"
        },
        {
            "date": "2017-10-04T09:29:19+0000",
            "content": "Thank you Allen Wittenauer, Steve Rowe! ",
            "author": "Mano Kovacs",
            "id": "comment-16191046"
        },
        {
            "date": "2018-01-15T19:47:04+0000",
            "content": "Mano Kovacs: I'd like to push this forward. \u00a0What are the next steps here?\n\nWhere can I find your code that produced the reports in comments here? ",
            "author": "Steve Rowe",
            "id": "comment-16326538"
        },
        {
            "date": "2018-01-16T11:45:35+0000",
            "content": "Hey Steve, that would be great as I\u00a0couldn't work on this lately and probably will be busy in the next weeks.\n\nThe current change is here: https://github.com/apache/lucene-solr/compare/master...manokovacs:feature/SOLR-10912\n\nAlso, I\u00a0have the list\u00a0with the remaining work I was planning to do and the open questions.\nSteps remaining:\n\n\tMultiple module test currently duplicates the failed test result, fixing shortly.\n\tAdd test to call\u00a0-validate-source-patterns\n\tFinalize the runner script to setup Yetus, similarly to Hadoop.\n\tVerify the test-patch with Github PR\n\tAdd Patch Available status for SOLR project (and update the script to look for that).\u00a0Steve Rowe, regarding to our IRL conversation, could you help me with adding that status in JIRA?\n\tAdd\u00a0Precommit-SOLR\u00a0and\u00a0Precommit-LUCENE\u00a0jenkins jobs\n\n\n\nOpen questions:\n\n1. As you can see, a patch with two log entries had 6 (flaky) test failures. Assuming flaky tests will not go away very soon, would it still be useful to have this test-patch?\n\n2. I propose starting with the smallest set of tests (ie. affected modules) and extend them later to dependent modules.\n\u00a0\n\nLet me know if I can be of any help.\n\n\u00a0 ",
            "author": "Mano Kovacs",
            "id": "comment-16327038"
        },
        {
            "date": "2018-02-23T18:06:12+0000",
            "content": "comment/request from someone who hasn't really followed the progress here much but does use jira every day...\n\ncan we PLEASE rename the \"Submit Patch\" button to something else since it does not actually give you the power to \"submit a patch\" \u2013 ie: clicking that button does nothing to enable me to upload a patch file from my computer.  that functionality is burried in the \"More\" menu as \"Attach Files\"\n\nAFAICT the true functionality of the current button is \"Submit issue for automated Patch Review\" \u2013 so can we please change the button text to say that?  Likewise i would suggest changing the \"Cancel Patch\" button to something like \"Cancel Automated Patch Review\"\n\n(If it's also possible to add a top level button that actually triggers the \"Attach Files\" file selector, then by all means let's do that and give it text like \"Submit Patch\" or \"Attach New Path\") ",
            "author": "Hoss Man",
            "id": "comment-16374760"
        },
        {
            "date": "2018-02-23T18:20:04+0000",
            "content": "can we PLEASE rename the \"Submit Patch\" button\n\n+1, I've also found myself confused by that option, though I didn't realize it was tied to this JIRA until now. ",
            "author": "Jason Gerlowski",
            "id": "comment-16374787"
        },
        {
            "date": "2018-02-23T18:35:54+0000",
            "content": "can we PLEASE rename the \"Submit Patch\" button to something else since it does not actually give you the power to \"submit a patch\"\n\nSee INFRA-16094 ",
            "author": "Steve Rowe",
            "id": "comment-16374812"
        },
        {
            "date": "2018-02-28T15:19:05+0000",
            "content": "I'm confused what the state is right now.  In JIRA I see these new workflow states.  Do they do anything right now, or not yet pending further TODOs above?  Will this feature support both JIRA attached patch files as well as linked GitHub PRs (e.g. as seen here: SOLR-11976) ? ",
            "author": "David Smiley",
            "id": "comment-16380458"
        },
        {
            "date": "2018-02-28T15:23:52+0000",
            "content": "I'm confused what the state is right now. In JIRA I see these new workflow states. Do they do anything right now, or not yet pending further TODOs above? \n\nNot yet.  I'm working on it.\n\nWill this feature support both JIRA attached patch files as well as linked GitHub PRs (e.g. as seen here: SOLR-11976) ?\n\nAttached JIRA patch files, yes.  I don't know about GitHub PRs... Mano Kovacs ?  (Note his todo item, which sounds like the answer is yes for PRs: \"Verify the test-patch with Github PR\") ",
            "author": "Steve Rowe",
            "id": "comment-16380464"
        },
        {
            "date": "2018-02-28T18:09:38+0000",
            "content": "Github PR support is sort of there.  \n\ntest-patch does. It can take either a github PR directly on the command line or passed via a JIRA.  If it gets told to test a JIRA that references a github PR, it will defer to the PR as the source of the patch.  In other words, if a JIRA issue references a github PR and has a patch attached, it will use the github PR and ignore the attachments.\n\nHowever!\n\nThe job on Jenkins that feeds test-patch is NOT github aware.  The original version was built before github integration existed.  To make matters worse, that code was locked away in a repository no one really had access to modify.  As of a month or so ago, that code is now part of Apache Yetus ( https://github.com/apache/yetus/blob/master/precommit/jenkins/jenkins-admin.py ), so there is an opportunity for us to fix this problem and add better asf<->github integration. ",
            "author": "Allen Wittenauer",
            "id": "comment-16380775"
        },
        {
            "date": "2018-02-28T21:29:44+0000",
            "content": "Some thoughts:\n\nIf there's not an entry in CHANGES.txt that mentions the issue number (either the lucene or solr file as appropriate), that should be a -1.\n\nHow about a -1 if a SOLR patch makes changes to lucene, or vice versa?  If there is an entry in the appropriate CHANGES.txt file for the issue, turn that into a -0.  That way, we have better assurance that if a commit for one part of the project requires changes to the other part, there will be a release note.\n\nI'm pretty sure that votes made by this QA mechanism wouldn't be binding, but it would be a good idea to achieve a +1 from it if possible, and when it's not, there should be a very good and well-documented reason. ",
            "author": "Shawn Heisey",
            "id": "comment-16381062"
        },
        {
            "date": "2018-03-01T00:46:13+0000",
            "content": "If there's not an entry in CHANGES.txt that mentions the issue number (either the lucene or solr file as appropriate), that should be a -1.\n\nI think -0 is warranted, but not -1; some committers' workflows order CHANGES additions after the initial commits, and non-committers rarely include CHANGES entries (maybe partly because committers have to change it, minimally to include their name).\n\nHow about a -1 if a SOLR patch makes changes to lucene, or vice versa? If there is an entry in the appropriate CHANGES.txt file for the issue, turn that into a -0. That way, we have better assurance that if a commit for one part of the project requires changes to the other part, there will be a release note.\n\nSome issues require changes in both places.  Is there some issue you're trying to address besides release noting both projects?  I ask because Solr users really need to pay attention to Lucene CHANGES regardless. ",
            "author": "Steve Rowe",
            "id": "comment-16381324"
        },
        {
            "date": "2018-03-01T14:53:09+0000",
            "content": "On what to do if there's no CHANGES.txt entry: The goal is to make sure the changelog update doesn't fall through the cracks and get forgotten.  If the -0 accomplishes that, then that's great.\n\nSome issues require changes in both places.  Is there some issue you're trying to address besides release noting both projects?  I ask because Solr users really need to pay attention to Lucene CHANGES regardless.\n\nI'm not trying to prevent one issue changing both sections of the codebase, just trying to make sure that if it happens, there's an explicit note in both changelogs.  Obviously a lot of LUCENE changes directly affect Solr even if they don't change Solr code, and for those, only updating the Lucene changelog is the right thing to do, and it's up to Solr users to read Lucene's changelog.  But if an issue on one part of the project actually makes changes to the code in the other, I think the documentation bar should be a little bit higher.\n\nAdditional idea:  Record a -1 if a SOLR issue only makes changes to Lucene code, or vice versa.  But when this happens, a changelog entry won't be enough to adjust to -0. ",
            "author": "Shawn Heisey",
            "id": "comment-16382093"
        },
        {
            "date": "2018-03-15T03:58:13+0000",
            "content": "The current change is here: https://github.com/apache/lucene-solr/compare/master...manokovacs:feature/SOLR-10912\nI've attached a patch with a modified version of Mano's branch, and I plan on committing it shortly in order to start testing the Jenkins job I've set up at https://builds.apache.org/view/PreCommit+Builds/job/PreCommit-LUCENE-Build/ (the script in this job's config, a copy of which is in the patch, expects the Yetus personality to be committed to the Git repo).\nFrom Mano's \"Steps remaining\":\nMultiple module test currently duplicates the failed test result, fixing shortly.\nFixed.\nAdd test to call -validate-source-patterns\nAdded. FYI, I had to rename the Ant task to remove the leading dash so that it can be invoked from the cmdline.\nFinalize the runner script to setup Yetus, similarly to Hadoop.\nDone.\nVerify the test-patch with Github PR\nSince Allen Wittenauer\u00a0wrote above that \"The job on Jenkins that feeds test-patch is NOT github aware\", I don't plan on doing this verification. I'll include this on a TODO list below.\nAdd Patch Available status for SOLR project (and update the script to look for that).\nDone.\nAdd Precommit-SOLR and Precommit-LUCENE jenkins jobs\nI've added a PreCommit-LUCENE-Build job (linked above), and once I've committed the patch I've attached here (on master only initially), I'll manually invoke it for testing (via \"Build with Parameters\").\nFrom Mano's \"Open questions\":\n1. As you can see, a patch with two log entries had 6 (flaky) test failures. Assuming flaky tests will not go away very soon, would it still be useful to have this test-patch?\nI think now is a perfect time to do this, given the current efforts focused on reducing test flakiness.\n2. I propose starting with the smallest set of tests (ie. affected modules) and extend them later to dependent modules.\n+1.\nStuff I changed from Mano's branch that is not already mentioned above:\n\n\tRenamed the personality file (was solr-yetus-personality.sh, now lucene-solr-yetus-personality.sh).\n\tImproved handling of Lucene modules.\n\tAdded basic ref guide validation, via ant bare-bones-html-validation; note that this is not the kind of missing-doc validation discussed above in this issue; that idea was spun off as SOLR-11419\n\tStandardized Lucene/Solr-specific plugins to make them run only if they need to.\n\tAdded some user- and dev-level documentation to the local runner script and personality files.\n\n\n\nShort-term TODO:\n\n\tCommit current patch to master\n\tManually test the Jenkins precommit job\n\tIterate above two steps until testing is successful\n\tBackport the patch to branch_7x\n\tCopy the Precommit-LUCENE-Build job to a new PreCommit-SOLR-Build job.\n\tRequest ASF Infrastructure to add LUCENE and SOLR to the list of projects that use the PreCommit-Admin Jenkins job to enqueue precommit runs for new patches on LUCENE/SOLR JIRAs with the \"Patch Available\" state. (I'll make a JIRA for this\u00a0and link it to this issue.)\n\tAttach a patch with the finalized Lucene/Solr personality on YETUS-537, for inclusion in future Yetus releases\n\n\n\nedit: Added Shawn's improvement ideas to the TODO list below:\n\nLonger-term TODO (to be dealt with on further issues):\n\n\tSolr missing-doc validation: SOLR-11419.\n\tAdd handling of module dependencies and build ordering.\n\tCurrently when any test or non-test file is changed in a module, all unit tests are run in that module. I think a faster version of this is possible when there are test-only changes: just the changed test suites could be run, rather than all of the module's tests.\n\tIf there's not an entry in CHANGES.txt that mentions the issue number (either the lucene or solr file as appropriate), that should be a -1 (or maybe -0?)\n\tHow about a -1 if a SOLR patch makes changes to lucene, or vice versa? If there is an entry in the appropriate CHANGES.txt file for the issue, turn that into a -0. That way, we have better assurance that if a commit for one part of the project requires changes to the other part, there will be a release note.\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16399885"
        },
        {
            "date": "2018-03-15T16:32:10+0000",
            "content": "Commit 12372530a8366ab35834b8a93c39775ab87564ed in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1237253 ]\n\nSOLR-10912: Add scripts for automatic patch validation ",
            "author": "ASF subversion and git services",
            "id": "comment-16400674"
        },
        {
            "date": "2018-03-15T19:26:25+0000",
            "content": "Commit cc1ad49e72bb6753997711e3cd7fb05d3c319598 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cc1ad49 ]\n\nSOLR-10912: excluding apparently unnecessary plugins: 'junit' and 'javac' (the 'unit' and 'compile' plugins are producing output but the 'j' ones aren't) ",
            "author": "ASF subversion and git services",
            "id": "comment-16400995"
        },
        {
            "date": "2018-03-15T19:26:27+0000",
            "content": "Commit 63fde153d3ca195f07a7fc2cc5999327411f3cc5 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=63fde15 ]\n\nSOLR-10912: updating copy of Jenkins precommit job script: proc max limit code seems not to work on jenkins slaves, so put it at a fixed 10k; added customization of artifact url so console output links in the JIRA comment report work properly; no longer attempting to cache the yetus download, since it always downloads every time anyway. ",
            "author": "ASF subversion and git services",
            "id": "comment-16400996"
        },
        {
            "date": "2018-03-15T19:38:14+0000",
            "content": "Commit bd20e36d2dd58cb291b0cb3b59bd9e240136a5d2 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bd20e36 ]\n\nSOLR-10912: attempted personality plugins fix: trying just junit/javac instead of unit/compile (which didn't actually do anything at all) ",
            "author": "ASF subversion and git services",
            "id": "comment-16401010"
        },
        {
            "date": "2018-03-15T19:42:05+0000",
            "content": "compile does a basic compile test.  javac looks in the output log for specific java warnings/errors generated from the compile phase when java's lint mode is activated. ",
            "author": "Allen Wittenauer",
            "id": "comment-16401014"
        },
        {
            "date": "2018-03-15T19:42:06+0000",
            "content": "Commit ac9559d70de5e2454e0515a08774890ad4012eef in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ac9559d ]\n\nSOLR-10912: reverting personality plugins changes to include junit+unit and javac+compile, since this combo works, and neither one individually does. ",
            "author": "ASF subversion and git services",
            "id": "comment-16401015"
        },
        {
            "date": "2018-03-16T00:18:43+0000",
            "content": "Commit 298063eee7d9f43cea1321b4f26ad58846ba28a2 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=298063e ]\n\nSOLR-10912: personality fix: in solr-ref-guide, don't run compile and unit plugins. Also, consistently use curly brackets when interpolating variables ",
            "author": "ASF subversion and git services",
            "id": "comment-16401308"
        },
        {
            "date": "2018-03-16T00:31:40+0000",
            "content": "compile does a basic compile test. javac looks in the output log for specific java warnings/errors generated from the compile phase when java's lint mode is activated.\n\nThanks Allen Wittenauer, good to know.  Unfortunately the plugins are pretty lightly documented: AFAICT only a subset of the built-in plugins' individual methods are documented in the api ref, with no whole-builtin-plugin docs I could find; I haven't dug into the source much yet, other than test-patch.sh itself and some of the bundled example personalities. ",
            "author": "Steve Rowe",
            "id": "comment-16401319"
        },
        {
            "date": "2018-03-16T00:58:09+0000",
            "content": "Commit 3e0d245cf1152fa12ebb52a846bb3deff2d6ea7f in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3e0d245 ]\n\nSOLR-10912: Add scripts for automatic patch validation ",
            "author": "ASF subversion and git services",
            "id": "comment-16401333"
        },
        {
            "date": "2018-03-16T00:58:11+0000",
            "content": "Commit dd3ace8ed68987bfc5562474bac455b923e2e14f in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dd3ace8 ]\n\nSOLR-10912: excluding apparently unnecessary plugins: 'junit' and 'javac' (the 'unit' and 'compile' plugins are producing output but the 'j' ones aren't) ",
            "author": "ASF subversion and git services",
            "id": "comment-16401334"
        },
        {
            "date": "2018-03-16T00:58:12+0000",
            "content": "Commit 285bc554a6bdd0dec686ad4e5b02256836ce61e6 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=285bc55 ]\n\nSOLR-10912: updating copy of Jenkins precommit job script: proc max limit code seems not to work on jenkins slaves, so put it at a fixed 10k; added customization of artifact url so console output links in the JIRA comment report work properly; no longer attempting to cache the yetus download, since it always downloads every time anyway. ",
            "author": "ASF subversion and git services",
            "id": "comment-16401335"
        },
        {
            "date": "2018-03-16T00:58:14+0000",
            "content": "Commit 077f19bdc5bc6b4a27d5604f6e83f166457374a7 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=077f19b ]\n\nSOLR-10912: attempted personality plugins fix: trying just junit/javac instead of unit/compile (which didn't actually do anything at all) ",
            "author": "ASF subversion and git services",
            "id": "comment-16401336"
        },
        {
            "date": "2018-03-16T00:58:15+0000",
            "content": "Commit a3980add396e878b8b5693c8f8b6e0b89a0ebda0 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a3980ad ]\n\nSOLR-10912: reverting personality plugins changes to include junit+unit and javac+compile, since this combo works, and neither one individually does. ",
            "author": "ASF subversion and git services",
            "id": "comment-16401337"
        },
        {
            "date": "2018-03-16T00:58:17+0000",
            "content": "Commit 1c31773fa303e5a48efb1e8af3efae8cd844d760 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1c31773 ]\n\nSOLR-10912: personality fix: in solr-ref-guide, don't run compile and unit plugins. Also, consistently use curly brackets when interpolating variables ",
            "author": "ASF subversion and git services",
            "id": "comment-16401338"
        },
        {
            "date": "2018-03-16T01:10:23+0000",
            "content": "6. Request ASF Infrastructure to add LUCENE and SOLR to the list of projects that use the PreCommit-Admin Jenkins job to enqueue precommit runs for new patches on LUCENE/SOLR JIRAs with the \"Patch Available\" state. (I'll make a JIRA for this and link it to this issue.)\n\nDone: INFRA-16194 ",
            "author": "Steve Rowe",
            "id": "comment-16401347"
        },
        {
            "date": "2018-03-16T01:20:53+0000",
            "content": "The short-term TODO is all taken care of:\n\n\n\tCommit current patch to master\n\tManually test the Jenkins precommit job\n\tIterate above two steps until testing is successful\n\tBackport the patch to branch_7x\n\tCopy the Precommit-LUCENE-Build job to a new PreCommit-SOLR-Build job.\n\tRequest ASF Infrastructure to add LUCENE and SOLR to the list of projects that use the PreCommit-Admin Jenkins job to enqueue precommit runs for new patches on LUCENE/SOLR JIRAs with the \"Patch Available\" state. (I'll make a JIRA for this and link it to this issue.)\n\tAttach a patch with the finalized Lucene/Solr personality on YETUS-537, for inclusion in future Yetus releases\n\n\n\nI'll leave this issue open until after automatic validation has started. ",
            "author": "Steve Rowe",
            "id": "comment-16401355"
        },
        {
            "date": "2018-03-17T00:53:02+0000",
            "content": "\n6. Request ASF Infrastructure to add LUCENE and SOLR to the list of projects that use the PreCommit-Admin Jenkins job to enqueue precommit runs for new patches on LUCENE/SOLR JIRAs with the \"Patch Available\" state. (I'll make a JIRA for this and link it to this issue.)\nDone: INFRA-16194\n\nThis is now completed.\n\nThe PreCommit-Admin job is scheduled to run every 10 minutes (can stretch to 40 minutes or longer though, depending on executor availability), and in the first runs after INFRA-16194 was done, two Lucene/Solr qualifying issues (i.e. with \"Patch Available\" status and updated some time in the last 2 weeks) were submitted: LUCENE-8197 and SOLR-11331.  Unfortunately, I had not properly configured the auth token on the PreCommit-{LUCENE,SOLR}Build jobs \u2013 PreCommit-Admin always supplies token 'hadoopqa' when it triggers all PreCommit* jobs, and I had configured the jobs to expect 'lucenesolrqa'; I've since fixed this \u2013 and as a result the builds didn't kick off, but PreCommit-Admin's database of submitted patches now includes the attachments that were submitted as already dealt with, so those patches won't be validated until somebody uploads new patches there.\n\nI re-opened and switched status to \"Patch Available\" on the two test issues I created to manually test the new PreCommit jobs (LUCENE-8210 and SOLR-12106). PreCommit-Admin has now run again and has queued the corresponding PreCommit jobs to validate the patches on those two issues (once they run the results will be available at https://builds.apache.org/view/PreCommit%20Builds/job/PreCommit-LUCENE-Build/10/ and https://builds.apache.org/view/PreCommit%20Builds/job/PreCommit-SOLR-Build/6/). ",
            "author": "Steve Rowe",
            "id": "comment-16403172"
        },
        {
            "date": "2018-03-17T15:03:25+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n -1 \n  patch  \n   0m  6s \n  SOLR-10912 does not apply to master. Rebase required? Wrong Branch? See https://wiki.apache.org/solr/HowToContribute#Creating_the_patch_file for help.  \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-10912 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12914632/SOLR-10912.patch \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/7/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16403472"
        },
        {
            "date": "2018-03-19T21:12:45+0000",
            "content": "I re-opened and switched status to \"Patch Available\" on the two test issues I created to manually test the new PreCommit jobs (LUCENE-8210 and SOLR-12106). PreCommit-Admin has now run again and has queued the corresponding PreCommit jobs to validate the patches on those two issues (once they run the results will be available at https://builds.apache.org/view/PreCommit%20Builds/job/PreCommit-LUCENE-Build/10/ and https://builds.apache.org/view/PreCommit%20Builds/job/PreCommit-SOLR-Build/6/).\n\nThose runs finished as expected, after waiting about 14 hours in the queue.  I think it would be good for this kind of job to be executed ASAP rather than waiting their turn, but I don't know how to set that up.\n\nThe patch on this issue was also run under PreCommit-SOLR-Build, as the auto comment above shows.  (I assume the patch didn't apply because it was already committed/pushed.)\n\nI'll resolve this issue for now.  We can reopen (or create a new issue) if problems surface later. ",
            "author": "Steve Rowe",
            "id": "comment-16405463"
        },
        {
            "date": "2018-03-21T15:32:16+0000",
            "content": "Commit c6ef6b67b10c74e9e427860873320f0d77b3fb3b in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c6ef6b6 ]\n\nSOLR-10912: fix routing of Solr non-contrib build output dirs (e.g. solr/core -> ../build/solr-core; previously -> ../build/core) ",
            "author": "ASF subversion and git services",
            "id": "comment-16408092"
        },
        {
            "date": "2018-03-21T15:32:18+0000",
            "content": "Commit 51a6bec48d0bf6d9b972c69ba87a12ac44f485e4 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=51a6bec ]\n\nSOLR-10912: fix routing of Solr non-contrib build output dirs (e.g. solr/core -> ../build/solr-core; previously -> ../build/core) ",
            "author": "ASF subversion and git services",
            "id": "comment-16408093"
        }
    ]
}