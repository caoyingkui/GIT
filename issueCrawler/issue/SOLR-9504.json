{
    "id": "SOLR-9504",
    "title": "A replica with an empty index becomes the leader even when other more qualified replicas are in line",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "7.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Critical"
    },
    "description": "I haven't tried branch_6x or any release yet. But this is trivially reproducible on master with the following steps:\n\n\tStart two solr nodes\n\tCreate a collection with 1 shard, 1 replica so that one node is empty.\n\tIndex some documents\n\tShutdown the leader node\n\tUse addreplica API to create a replica of the collection on the still-running node. For some reason this API hangs until you restart the other node (possibly a bug itself) but do not wait for the API to complete.\n\tRestart the former leader node\n\n\n\nYou'll find that the replica with 0 docs has become the leader. The former leader recovers from the leader without replicating any index files. It still has the old index which has some docs.\n\nThis is from the logs of the 0 doc replica:\n\n713102 INFO  (zkCallback-4-thread-5-processing-n:127.0.1.1:7574_solr) [   ] o.a.s.c.c.ZkStateReader Updating data for [gettingstarted] from [9] to [10]\n714377 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.c.ShardLeaderElectionContext Enough replicas found to continue.\n714377 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.c.ShardLeaderElectionContext I may be the new leader - try and sync\n714377 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.c.SyncStrategy Sync replicas to http://127.0.1.1:7574/solr/gettingstarted_shard1_replica2/\n714380 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.u.PeerSync PeerSync: core=gettingstarted_shard1_replica2 url=http://127.0.1.1:7574/solr START replicas=[http://127.0.1.1:8983/solr/gettingstarted_shard1_replica1/] nUpdates=100\n714381 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.u.PeerSync PeerSync: core=gettingstarted_shard1_replica2 url=http://127.0.1.1:7574/solr DONE.  We have no versions.  sync failed.\n714382 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.c.SyncStrategy Leader's attempt to sync with shard failed, moving to the next candidate\n714382 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.c.ShardLeaderElectionContext We failed sync, but we have no versions - we can't sync in that case - we were active before, so become leader anyway\n714387 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.c.ShardLeaderElectionContextBase Creating leader registration node /collections/gettingstarted/leaders/shard1/leader after winning as /collections/gettingstarted/leader_elect/shard1/election/96579592334475268-core_node2-n_0000000001\n714398 INFO  (qtp110456297-15) [c:gettingstarted s:shard1 r:core_node2 x:gettingstarted_shard1_replica2] o.a.s.c.ShardLeaderElectionContext I am the new leader: http://127.0.1.1:7574/solr/gettingstarted_shard1_replica2/ shard1\n\n\n\nIt basically tries to sync but has no versions and because it was active before (it is a new core starting up for the first time), it becomes the leader and publishes itself as active.",
    "attachments": {
        "SOLR-9504.patch": "https://issues.apache.org/jira/secure/attachment/12830401/SOLR-9504.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-12T19:51:38+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "FYI Mark Miller, Yonik Seeley ",
            "id": "comment-15485100"
        },
        {
            "date": "2016-09-14T21:36:05+0000",
            "author": "Mark Miller",
            "content": "I think this one is known. There is another jira issue around this as well somewhere and it was understood as an ugly limitation when another bug around this was fixed. I had meant to add something to peer sync or something that let you check if another replica looked better because it wasn't empty or something, but never got to it.  ",
            "id": "comment-15491513"
        },
        {
            "date": "2016-09-14T22:53:15+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Mark Miller - The behavior when leader vote wait expires is well known but for it to happen before expiry of that period is a surprise (at least to me). Perhaps instead of just giving up if the leader candidate have no version, it can request versions anyway from peers and rejoin if others have some versions? ",
            "id": "comment-15491668"
        },
        {
            "date": "2016-09-14T22:54:27+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Whoops! You wrote the same thing that I did. I'll work on adding such a check to peer sync. ",
            "id": "comment-15491672"
        },
        {
            "date": "2016-09-14T22:55:37+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Longer term, we need to work on a bi-directional sync during recovery to really solve these kind of issues. ",
            "id": "comment-15491676"
        },
        {
            "date": "2016-09-26T21:07:51+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Patch with a test that fails without the fix.\n\nBasically, when we need to bail out because we have no versions, we peek at the other replicas. If even one has versions, then we return this bit of information to the ShardLeaderElectionContext.runLeaderProcess and rejoin the election, else we proceed as before. The hacky bit is that there is now a PeerSyncResult class which has a success flag as well as an optional otherHasVersions flag.\n\nI'm going to run some tests in a loop to ensure I haven't broken anything. ",
            "id": "comment-15524172"
        },
        {
            "date": "2016-09-29T11:41:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ce24de5cd65726dd9593512ec4082ba81b9d7801 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ce24de5 ]\n\nSOLR-9504: A replica with an empty index becomes the leader even when other more qualified replicas are in line ",
            "id": "comment-15532552"
        },
        {
            "date": "2016-09-29T11:53:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit effd22457691420982534f47ee71cd52ef64b8b9 in lucene-solr's branch refs/heads/branch_6x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=effd224 ]\n\nSOLR-9504: A replica with an empty index becomes the leader even when other more qualified replicas are in line\n\n(cherry picked from commit ce24de5) ",
            "id": "comment-15532574"
        },
        {
            "date": "2016-11-09T08:37:31+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650237"
        }
    ]
}